{
    "title": "Secret Treasure",
    "pages": [
        "It was that time of year again when I made my yearly visit to my Gynecologist and had my pussy checked over. I didn't mind him really, he was gentle and had a great bedside manner, fatherly I would call him. He would sit and tell me stories of his kids and the stuff they did, as he picked and poked about inside me. I was sitting in the waiting room after checking in and picked up a Cosmopolitan and began leafing through it. \n\nOver the top of the magazine, I kept catching glimpses of the young woman sitting across from me and she couldn't seem to sit still. I imagined it was her first visit, or her first visit to see my doctor, since I'd never seen her in the office before. I tried to be nonchalant in looking at her, feeling she was driving herself into a frenzy over nothing. I remembered my first time and how embarrassed and nervous I was pulling down my panties for the first time and having someone strange, even the doctor, touch me down there.\n\nI remembered future visits that made me very nervous, the ones where I'd been masturbating or had sex with a boyfriend the night before and wondered if the doctor would know. That embarrassed me more than anything to have discovered by him. My mom saw the same doctor, so I was scared to death he would tell her about me. I didn't know at the time that he couldn't because of his oath, but back then, I nearly pissed my panties I was so nervous.\n\nI looked back at the young woman, barely into her twenties from the looks of her and studied her a little closer. She looked as nervous as I was then and wondered if she had some kind of sex last night. A woman came out from the back and the nurse called out for Ciera Moore to come in now. The young woman heard the name and froze. I knew it must have been her, but she didn't go. She sat for a minute, looking like she was thinking very hard on something, then abruptly got up and left.\n\nThe nurse called again and I said the woman that just left must have been her. The nurse shrugged like it was nothing and called me in. I stripped from the waist down and laid on the table, putting my feet dutifully in the stirrups. They were so cold and hated the feel of them. Thank goodness Dr. Klienman made sure the speculum was warm, before he slid it in and spread me wide. It felt routine and normal and he said as much. He did give me a bit of advice on my piercings and asked that I keep them clean at all times. He also made mention that I was still in great shape sexually and had years left to enjoy before anything interrupted it. \n\nI thanked him and pulled my panties and pants on again and made my appointment for next year. I walked out of the building to my car and stopped, noticing the young woman sitting on the hood of my car. I walked right to her and stopped.\n\n\"Are you okay, Ciera?\"\n\nShe looked straight at me blanked face, no idea how I knew her. I could see the remnants of tears on her cheeks and her eyes were red.\n\n\"I'm fine. I'll be okay. Just leave me alone, alright?\"\n\nThere was a soulful pleading in her voice that I couldn't ignore. She was hurting bad and I couldn't just leave her sitting there like that and do nothing. The mother in me took over and I had to soothe her. She was so vulnerable in her femininity, holding herself to hide and comfort her own pain. \n\n\"Sweetie, I'll leave you alone, but only after you do one thing.\"\n\n\"What's that?\"\n\n\"You have to get off my car, so I can drive away.\"\n\nShe looked at me and the car she was sitting on, realizing she hadn't known where she was sitting. I pressed the remote and the little beeps told her it was my car. She jumped off quickly and looked at me with a startled expression. She was going to apologize and started speaking and then got lost in all the words and seemed to lose it. She started crying and becoming frustrated at herself and that was all I needed to see. I just took her in my arms and held her close and comforted her.\n\n\"There there, it can't be all that bad now. Forget sitting on my car, that's nothing, don't worry about it. It's why you left when you were called that has me worried about you though.\"\n\nShe was sniffling and wiping her nose with her finger, her hands clasped together close to her. Her sobs eased and she finally took a deep breath. I reached in my bag and got some tissues and told her to give her nose a good blow. She looked embarrassed at the thought and turned as she did it. She looked about to get rid of the used tissues and I didn't want her getting flustered over that and took it from her, putting it in my jeans pocket.\n\n\"Come on, let's go get a coffee or something and talk to me and we'll see if we can get this all straightened out for you, Ciera. My name is ShaeLee. It's going to be okay, sweetie, don't worry.\"\n\nI led her to the passenger door and let her in and closed the door for her. I got in and started up and we headed to a nice cafe I liked going to. I bought us a couple of decadent latte's and sat far away from the other people, so we had some privacy to talk.\n\n\"Okay, you don't have to say anything right now, but I can guess why you bolted from the office. I hated going and having my check ups done too. Dr. Klienman has been looking inside me since I was in my teens. I'd hate to see him retire, but I know he will one day. You have nothing to worry about seeing him.\"\n\n\"It's not him I was worried about, it was me.\"\n\n\"You? Why would you be worried about yourself?\"\n\nCiera became very agitated suddenly, finding herself on a spot to say something.\n\n\"I'm, I'm...different down there.\"\n\nI tried to imagine what different down there meant. How different could she be? She looked every bit as normal everywhere else. She was as feminine as feminine could be to me. I'd seen a few pussies now and knew there was a difference in every one. We were all like snowflakes in a way. Each one different, but beautiful. \n\n\"Baby, we're all different down there, trust me. No two women are the same. None. So you're no different than I am and those women over there. We all have pussies, but every one is different. Maybe you're going through what I went the first time I had to go see him after doing things.\"\n\n\"What things were they?\"\n\nI leaned a bit closer to whisper and she did the same.\n\n\"I had to see him after I had played with myself the night before and wondered if he would know if I did. I was so scared that he'd know and even worse, tell my mom, because she saw him too.\"\n\n\"That would be so scary to think that. Did he know?\"\n\n\"You know, I don't know. He never said anything or did anything differently. My mom never said anything to me, so I was feeling pretty good about playing with myself after that.\"\n\n\"That must have been a relief to know that. It's nice to do, but the thought of getting caught scares the shit out of me.\"\n\n\"No kidding, me too.\"\n\n\"So what other things made you worry?\"\n\n\"Oh, the first time I went to see him after I had sex. I was with my boyfriend the night before and we must have fucked five times and came so much. I washed and did everything I could to look normal, but I kept thinking, he's going to know, I just know it. Playing with myself was one thing, but I knew my pussy was still looking like it had been well fucked, you know what I mean?\"\n\nCiera finally smiled at that and she looked so pretty at that moment. \n\n\"Yeah, I checked myself out one time with a mirror and I think I know what you're talking about.\"\n\n\"Yeah, my normal look was totally gone and it looked like I dropped a meat sandwich on the floor. My lips were all swollen still and hanging out. God, what a mess it looked, but what a great night of sex, let me tell you. I'll always remember that.\"\n\nCiera started laughing, her cute breasts jiggling under her top. I thought how adorable she was. She was so pretty and probably had a zillion guys lined up to be with her. I wondered if that was what it had been with her too then. Being so good looking, she would most likely have a guy at her beck and call to service her. I know if I had her looks, I would be choosy that way. If I had my pick, why settle for anything less than what I'm looking for.\n\n\"So, Ciera, is that what happened to you? Have a little fun last night and embarrassed about it?\"\n\nI was hoping I had hit the mark and cleared the air for her. She smiled and put her hand over mine as she looked at me.\n\n\"I wish. No, no fun for me. Like I said, ShaeLee, I'm different and it's really hard to explain.\"\n\n\"I'm very open minded, Ciera. Like I said, I know different and you're a woman, so you can't be any different than the rest of us.\"\n\n\"ShaeLee, I'm really starting to like you, you're really nice and sweet to me. I don't know how to even say it, okay, I'm just different, trust me on that.\"\n\nI was curious to no end now. Just how different could she be? I mean pussy is pussy and comes in all flavors, so how different does she think she is from everyone else? I was intrigued, I had to know.\n\n\"I going to sound like I'm prying and I don't want it to sound like that, but just how different do you think you are from other women? Me for example.\"\n\nCiera was still trying to hold on to her privacy, but there was something in her eyes said she really wanted to tell me. I thought of what it meant for me to help say something, so I took her hand in mine and held it, as I waited for her to say it.\n\n\"ShaeLee, you're asking me to share a very big secret about myself. I don't know if I can do that.\"\n\n\"Baby, I'm not going to judge you in any way. All I want is to help you get over what it is that makes you scared and help you deal with it. Nothing is ever going to change sweetie, until you do. I'm just here to help get you through the first part of it and that's acknowledging it. Whatever it is, tell me and I'll do what I can to help you deal with what ever differences you have.\"\n\n\"Do you really mean that? You really want to help me? I mean, you don't even know me, ShaeLee.\"\n\n\"I know you're a woman in distress and need another woman to help you out. It doesn't matter how well I know you, Ciera, the fact is, we met, we're talking, we're sharing and you have someone who'll listen to you. That, more than anything, is what you really need right now, isn't it?\"\n\nShe softened instantly at that. I had hit home with that understanding and she nodded.\n\n\"Okay, I'll tell you, but not here okay, I can't do it here, even if they can't hear, it's just them being around us. God, you must think I'm so weird.\"\n\n\"Ciera, no sweetie. I'd want to share something secret in private too. Just to make sure no one knew.\"\n\n\"Exactly, where should we go?\"\n\n\"I'm a couple of blocks from here, we can go to my place and have a much less expensive cup of coffee, what do you say?\"\n\n\"Perfect, let's go.\"\n\nWe left the cafe and drove to my place and there was a settled ease in Ciera now. The distraught feelings from a little while ago were gone and I smiled at her. I took her hand and held it as we drove along, feeling her little squeeze of acceptance. We pulled in and went inside, heading to the kitchen. I put the coffeemaker on and got a couple of cups ready. I'd made some shortbread cookies and put some on a plate and sat them on the table. We each took one and nibbled on it, letting her get comfortable in her surroundings. \n\n\"You have a nice place, ShaeLee. I like how you did everything.\"\n\n\"Oh thank you, Ciera. Yeah, just bits and pieces I've saved over the years. Got rid of so much junk finally and kept what I really wanted.\"\n\n\"I'd love to see the rest of it too.\"\n\n\"Sure, let's wait for a bit until the coffee is ready and then we'll get this secret out of the way and I'll show you around.\"\n\nI saw her fluster at the thought of saying it and knew it was a hard step for her to take. I went around the table to her and gave her a hug and comforted her, letting her know it would be alright. The coffeemaker beeped and I gave her quick kiss on the cheek and went to pour the cups. I asked about cream and sugar and got a no, the dreaded waistline battle being waged. I looked at the buttery rich cookies and saw how she ate her way through two already and was on her third.\n\nI sipped my coffee and looked at her and saw her take the big, deep breath and get ready. Her eyes were on mine and full of nervousness and I could see the green changing shade in them, as her emotional level rose. The contrast to her strawberry blonde hair was stunning and I was enthralled by her beauty. Her skin was ivory white like a doll's, except her face, which was blushing faster and harder as the seconds ticked by.\n\n\"Okay, different, here goes. I was born different than other women, ShaeLee. I mean, I have all the same body parts as you, just got a little different addition.\"\n\n\"Okay, so you have girlie parts and one or two parts are different, so no big deal.\"\n\n\"It's not like that, ShaeLee. God, this is so hard to explain. I have a normal looking pussy okay. There's nothing different to it that way, it's something else.\"\n\n\"I haven't got a clue what you mean, Sweetheart. You'll have to explain it better than that to me.\"\n\nCiera was getting flustered by the second, trying to skirt the issue and have me guess. I was lost as to where she was going with this and she knew it.\n\n\"ShaeLee, promise me, please, right now, that if I tell you what it is, you won't think of me as weird.\"\n\n\"Of course I promise, Ciera. I told you I'm open minded about things, so whatever it is, it must be something I don't know about and if so, I'd really like to know.\"\n\n\"Okay, you promised, so here goes.\"\n\nCiera took my hands in hers and I could feel her wanting me to bond with her on this. She was going to divulge something of herself and she needed to know she was safe from persecution. I held hers tightly, letting her know I would keep the bond and she sighed heavily again as she looked in my eyes.\n\n\"I was born a girl, like you were. I have everything you have. I have tits and pussy and a woman's body. I was born with something else too.\"\n\n\"What is it, Baby? It's okay, you can tell me.\"\n\nShe was biting her lip so hard, I thought she'd cut it open. Her eyes looked at our hands and she took another breath.\n\n\"I also have a cock.\"\n\nShe was waiting for me to let go of her hands in shock and disgust, where instead, she felt me hold her tighter. She could feel I wasn't freaked by the news and waited for her to continue. She finally looked up again and stared into my eyes for a few seconds. I'm sure she could see the compassion I had for her in them.\n\n\"It wasn't so bad when I was a little girl, it was small and not all that noticeable, even in a bathing suit. It wasn't until I hit puberty that it started to grow and become what it is now. I was so freaked out by it, I stayed home from school and got tutored. I finally went back to high school the last couple of years, but I never went to gym class or anything where I might be seen.\"\n\n\"Oh sweetie, that must have been so hard for you. I feel so sad that you went through all that.\"\n\n\"You're so nice ShaeLee, thank you. This is so great of you to do this for me. Just getting it out is making me feel better already. You were right, how can I ever thank you?\"\n\n\"You don't have to thank me at all. I'm happy I can be the one to help you with this. I want you to know, Ciera, this doesn't change how I feel about you in the least. I still think you are an adorable young woman. I just want you to know that.\"\n\n\"You're like a gift from heaven to me. I have friends that don't have a clue and I could never share this with them. It would change what we have and I know it. I needed a friend that understood and now I have one. Well, I guess you could say a friend in a way.\"\n\n\"Of course you can call me a friend. Baby, we're okay, you don't have to worry about me thinking you're anything less than what I already said you are, a lovely, young woman.\"\n\n\"I'm really glad I sat on your car. How weird is that, that out of all the cars I decided to stop and sit, it was yours.\"\n\n\"That is funny, isn't it? Guess it was meant to be, or something. People just come into our lives at any time and it's how we deal with them that they become friends, or stay strangers.\"\n\n\"Well, I'm glad we didn't end up strangers.\"\n\n\"Me too. I have to ask Ciera. What was dating like? Or did you?\"\n\n\"Went on a few dates in my late teens and let guys feel my tits and stuff, but I never let any of them go below my waist. I started getting called a cock teaser and all sorts of names by guys, just because they couldn't get in my pants. How the hell could I let them do that? So, I stopped dating and haven't gone out with anyone since.\"\n\n\"How long ago was that?\"\n\n\"When I was just turning nineteen.\"\n\n\"How old are you now?\"\n\n\"Twenty four. Twenty five in July.\"\n\n\"Great, my birthday is in July too. What day?\"\n\n\"Twenty fifth.\"\n\n\"Mine's the twenty fourth, that's so cool. We'll have to do a birthday thing together. Do you and your friends have anything planned?\"\n\n\"Not really. When I said friends, it's more like the people I work with. I don't have any friends out side of work. I mostly just keep to myself and stay to people I see often.\"\n\n\"That's so not right, Baby, it's not. No, we're going to have some fun on our birthdays, I insist. I'd feel terrible having fun on mine, knowing you were alone or worse, feeling miserable. No, you and I are going to have some fun, girl.\"\n\n\"What kind of fun?\"\n\n\"I don't know? It's our birthdays, we'll make our fun whatever way we feel like, right?\"\n\n\"Yeah, yeah, we'll have fun our way, I like that.\"\n\n\"That's the spirit. Definitely we have to be greedy, fat bitches and have a killer cake. We have to dress up. I want to look fabulous on my birthday. At least one day out of the year, you have to dress to the nines and go all out.\"\n\n\"I like that idea ShaeLee. I haven't gotten dressed up since my parent's twentieth anniversary party. So yeah, let's dress to impress, I'm in.\"\n\n\"It would be great to have dates for the night, but that's understandable. In fact, fuck it, I'll be your date for the night.\"\n\n\"Really? No way, that would be a hoot. Get to dress up and go on a date all in one night.\"\n\n\"See? I knew you'd like the idea.\"\n\n\"I do, ShaeLee. I really do. I don't care if you're a woman or not. I like the idea of someone taking me out and showing me a good time. I want to show you a good time too.\"\n\n\"Then a good time is what we'll have and nothing will stop us from having it.\"\n\n\"Well, one thing might.\"\n\n\"What's that, Ciera?\"\n\n\"I don't have anything to wear that's really sexy, you know?\"\n\n\"I got lots to choose from. I have stuff that will fit you. We're not that far off in size we can't get something to stun with on you.\"\n\n\"Okay, let's go see.\"\n\nI took her up to my room and she sat on the bed as I went into my closet. I started looking through things and realized I didn't know her sizes.\n\n\"You're a what, thirty two, thirty three chest, B cup right?\"\n\n\"Wow, you're good. Thirty four B, actually.\"\n\n\"Okay, got lots that will fit as far as tops. What size are your hips and waist?\"\n\n\"Thirty five and twenty six.\"\n\n\"Bit bigger in the hips than me by a couple inches and smaller in the waist by the same. We'll see what fits and what doesn't. Want to try on a few tops and see?\"\n\n\"Sure.\"\n\nCiera stood and waited for the tops I was picking out and turned to leave the room. I called her name to stop.\n\n\"Sweetie, it's okay to change in front of me. You don't have to hide from me, okay.\"\n\nCiera nodded and knew things were different now than they had been. Where before she had to hide and stay secretive, I was allowing the freedom of being normal and showing herself. She took off her top and tried on the first one and looked in the mirror. She turned about and nothing gave her away in her mannerisms, she was anything but a woman. I saw her smooth the top to her body and her breasts might have been the same size, but hers didn't flatten like mine and pushed back against the fabric.",
        "\"It's pretty, I like it. I'll put this to the pick pile, what's next? This is fun, way better than trying stuff on in a store.\"\n\n\"Yeah, like being in one of those high class places and having an assistant serve you personally.\"\n\n\"Oh yes, that would be so much fun to do, wouldn't it?\"\n\n\"It would and guess what? That's now on the list of things to do on our day. I'll buy you something and you can buy me something and we'll wear them that night.\"\n\n\"Oh, I like it. I have lots of money. God knows I have no one to spend it on but me. I'll buy you something really pretty.\"\n\n\"Okay, let's see, where should we go? I know, that place in Lincoln, on Broadview, Chez Femme Nouveau. I've always wanted to go in there and buy something. I just never knew where to wear it after I bought it.\"\n\n\"I know. I love nice clothes too, but I need to go somewhere to warrant buying them.\"\n\n\"Exactly. Look at all the shit I have in my closet now and I hardly wear most of it. I don't go out that much myself and I want to. I love going out and dressing up, dancing and having a few drinks and getting silly.\"\n\n\"Oh, I'd love that. I haven't danced in ages. I just dance around the apartment to songs I like, but it's been ages since I danced with someone.\"\n\n\"Then we'll find a place to have a few drinks and dance. Maybe some cute guys will ask us to dance and maybe buy a few drinks for us. I know we can't let things get out of hand for you, but you have to at least have some fun and dance if a guy asks.\"\n\n\"Okay. As long as it's not a slow song. I couldn't take that chance of him rubbing against me and feeling me.\"\n\n\"I hope you don't think I'm out of line by asking, but, exactly how big is your cock?\"\n\n\"It's not that big when it's limp, but I get a pretty big erection when it's hard.\"\n\n\"Really? Like how big? Normal size, you know, five, six inches?\"\n\n\"A bit bigger, I think. Maybe more like seven or so.\"\n\n\"Wow. That sounds like a nice sized cock you have. I'm actually curious about seeing it. I'll be honest, Ciera, I love cock, I really do. Is that really bad of me to ask that? I shouldn't be so forward like that, I'm sorry. That was so wrong of me. I can be such an idiot at times.\"\n\nCiera could see I was really mad at myself for feeling I'd crossed the line and held my hands in hers.\n\n\"ShaeLee, no, it's okay. You're not an idiot, never. I understand why, I do. I don't feel bad at all that you want to see it. I kind of want to show you. If anyone deserves to know about me, you do.\"\n\nShe made me feel so much better about that and I was happy she actually wanted to show me. She leaned in and gave me a big hug and a kiss on the cheek. She stood up and looked at me, looking into my eyes and seeing the growing bond of our friendship. She undid her skirt at the back and undid the small zipper. She shimmied it over her hips and let it fall to the floor. My eyes left hers and slowly traveled down her body. She was so feminine and in a way, delicate looking. \n\nMy eyes found her boy shorts and I looked at them. The bulge of a cock was unmistakeable in them, I'd seen it so many times before. This time it was in a pair of pretty panties wrapped around a sweet ass and hips. I looked up at Ciera as she took a breath in and tucked her fingers under the waistband and began lowering them. My eyes lowered down again, as her fingers lowered the panties. Not a hair was seen as she brought the panties down to the point of the shaft showing.\n\nI watched the shaft of the cock come into view and loved the thickness of it already. On and on she lowered them and I was becoming amazed the head hadn't showed up yet. Woman or not, I was liking the sight of that cock. When she had them down her thighs, she took her hands away and gave me a full view of her. I looked at the smooth-skinned cock, uncircumcised and natural. It moved subtly with each beat of her heart and I wanted to hold it, to feel what that skin was like.\n\nIt looked just like a guy's cock in every way but one. The skin was so soft looking, as though a feminine version of a man's cock. She held it and showed me it, then pulled back the foreskin to a pink head. It was the most beautiful looking cock I'd seen and it was on a woman. I was so tempted to ask to touch it, but I dared not. This was such a big step for her to take and I didn't want to blow it for her. I let her show me it in every way she offered and then let it go. I could see that she had grew in size just from that touching and saw the possibilities of it being a seven inch or more shaft.\n\n\"Beautiful, Ciera. It really is. I've seen lots of cocks and yours is just so beautiful. I was thinking it's like the female version of it. It's softer looking than a guy's is.\"\n\n\"ShaeLee, that's so wonderful of you to say that. I always think of it as some ugly thing on me. You really think it's pretty?\"\n\n\"I do, Ciera. Under different circumstances, I'd be taking a hold of it and sucking on it and enjoying the hell out of it.\"\n\n\"Oh ShaeLee, oh my God.\"\n\nI looked at her, thinking I had said something to offend her, then saw the look on her face. I had hit a soft spot in her.\n\n\"Like having your cock sucked, do you?\"\n\n\"I've never had my cock sucked. I've never been touched below that waist, but I imagine what that's like. I've watched so many videos of what that would be like and I so want to know what it feels like.\"\n\n\"That's right, you've never had sex before, have you?\"\n\n\"Not with anyone. I... you know...just by myself sort of thing.\"\n\n\"I know what you mean.\"\n\nI looked at her looking at me, then I looked at her cock again. The more I looked at it, the more I really wanted to just take it and suck on it for all I was worth. I wondered to myself if maybe she was interested in the idea.\n\n\"Baby, when you watch those videos, is it a guy sucking the cock, or a woman?\"\n\n\"Oh, always a woman.\"\n\n\"So you like the way a woman sucks cock, I take it?\"\n\n\"Oh yes. I love how they do it. It looks so sexy and I can only imagine how great it feels.\"\n\n\"Have you wanted a woman to suck your cock after watching videos?\"\n\n\"Yes, I just never thought of it as something real, so I just fantasize about it.\"\n\n\"I see. Yeah, I fantasize a lot about things myself. I'm fantasizing right now actually.\"\n\nCiera looked at me and wondered what I was fantasizing about. I could see she was curious to know.\n\n\"What are you fantasizing about?\"\n\n\"I'm actually fantasizing about sucking your cock.\"\n\n\"No way!! You aren't, are you?\"\n\nI saw the shock of my words hit her, but her voice was still saying curious in its tone.\n\n\"Yes, I am. Baby, that's a gorgeous cock you have, I told you that. One thing I really love is cock, so I have a good idea of what kind of cock I like to suck. I keep looking at yours and it's just a beauty.\"\n\n\"You really think my cock is beautiful? You're not just saying that?'\n\n\"Oh Baby, I would never do that. If I tell you it is, you can trust me I believe it is.\"\n\n\"I always look at it as this ugly thing, but even though it's ugly to me, I love how it feels and love playing with it.\"\n\n\"I bet. If I had a cock like that, I'd be stroking and playing with it all day long.\"\n\nCiera giggled at that, knowing I would do what she did.\n\n\"I'm so happy you don't find it ugly and think it's beautiful instead.\"\n\n\"I do and I'm really curious about it actually.\"\n\n\"What are you curious about?\"\n\n\"Like how big you get when you're hard. If you cum like a guy. If you feel what a guy feels getting head.\"\n\n\"Well, I'm not sure how big it gets when I'm hard. I know it sticks out about this far when I am hard.\"\n\nCiera held her hand at least seven inches from her body and my eyes opened wider in interest.\n\n\"I can cum out of it, but I'm not sure if it's like a guy. The ones I've seen in videos don't cum like me.\"\n\n\"You cum differently than a guy?\"\n\n\"Not really differently, just more.\"\n\n\"You cum more than guy's do?\"\n\n\"Oh yeah, at least from what I've seen and what I do myself.\"\n\n\"Like, lots more?\"\n\n\"Oh yeah, tons.\"\n\n\"You're kidding?\"\n\n\"No, really The last time I was playing, I came so much, my cock was coated in it, as well as my pussy.\"\n\n\"Damn, that just sounds hot. I love cum, as much as I love cock.\"\n\nCiera giggled again, holding her flaccid member in her hand as we spoke. I couldn't keep my eyes off it and my hands wanted to be where my eyes were.\n\n\"I think you'd choke on it, before you could take it all in.\"\n\n\"Baby, I'd give it my best shot, that's for sure. I've had guys that could shoot a good load of cum and I stayed with them and never spit out once.\"\n\n\"You make it sound like so much fun.\"\n\n\"Ciera, my sweet thing, if you let me, I'd suck your cock right now and show you.\"\n\n\"You'd suck my cock? Really? You're not joking?\"\n\n\"Yes, really. I'm really curious to know what it's like. I'm not asking to make out with you, just suck your cock, nothing else. Call it a birthday blow job present.\"\n\n\"ShaeLee, that's so incredible a thing you're asking. It's my fantasy and you want to make it come true. I'm so scared, I don't know if I could do it?\"\n\n\"Only one way to know then, isn't there?\"\n\n\"What?\"\n\n\"Lie back and let me suck your cock. It would be such an honor for me to be your first and I promise you, I'll make it feel just like the women in the videos would make it feel.\"\n\nCiera was as nervous and tense as the proverbial long tailed cat in a room of rocking chairs. She looked at me with the greatest of hopes and the greatest of fears and the conflict was clashing before my eyes. I put my hands on her shoulders and looked in her eyes, as I gently pushed her back. She hesitated at first, then relented and allowed her desires to outweigh her fears and laid down. I knelt on the floor between her legs and parted them wide. I saw her legs shimmy with nervousness, her heightened state of arousal and nervousness playing off one another.\n\nI took a moment to look at everything that made her up. If I took away the cock, she was just a stunning beauty of a woman, one I would make out with in a heartbeat. Her pussy was fine and delicate as the rest of her features. She had a little patch of light hair surrounding the shaft that matched her hair color, making her a natural blonde. \n\nI looked at her lying there, her face staring at the ceiling, hands balled into fists, her breaths deeper and faster. I was taking my first virginity. The thought hit me as I moved forward and took her cock in my fingers delicately and held it finally. It was silken to the touch as I thought. She took better care of it than guy's normally do and I knew her body lotion was always applied liberally to it to feel that soft. Ciera 's gasps at that instant of another's hand, let me know she was aware and living the moment, no longer living a dream of what if.\n\nI started stroking and kissing her shaft, licking the head around and around, watching the head darken and swell. I felt her shaft expand in girth, growing in length and stiffening and loved that she was enjoying it.\n\n\"Yes, oh God yes, ShaeLee. It's better than I ever imagined. I love what you're doing to me.\"\n\nThat was all I needed to hear. I knew cock and it didn't matter if it was on her or not, it was time for some serious cock sucking. I laid my elbows on her thighs to keep them spread apart and wrapped my fingers around the base, as I slowly sucked her deep in my mouth and engulfed her. I squeezed my lips around the shaft and slowly pulled on her to the head. I went back down to the base and pulled her skin tight, making the head swell. I held it with my fingers and kept the shaft tight, as I began slowly deep throating her stroke after stroke. \n\n\"Shae...Shae...ooooooh God, yesss. Oh yes, oh yes, that's it, I, I...oooooooh God yesss, suck my cock.\"\n\nI almost choked from chuckling. I was loving what I was doing and I was loving it even more, that this precious thing I was sucking on was enjoying her first sexual experience to the max. I licked the head and sucked on it hard, I used every technique I knew and worked little Ciera into such a state. In my mind, it was all about her first time and how great it should be. I wanted it to be an impression she could set her standards by and accept nothing less. \n\nI realized my thumb was resting on her lips and I started rubbing them slowly as well. I felt her hips start writhing under me and knew the pressure was building in her. I wanted her to cum and cum hard for me. I was stroking and sucking in unison, going for the final push, knowing it wouldn't take much more and she would ejaculate. I thought of what she said about cumming and looked forward to tasting her cream.\n\n\"I'm going to cum, I'm going to cum. I'm going to cum.\"\n\nHer words came out so fast and I felt her body start tensing. So far everything had been like sucking a guy's cock, except the pussy play, which I found very stimulating to do at the same time and the softness of her body. I knew it was about to erupt and felt the surge in growth in my fingers. I became excited, knowing I was going to taste cum from a woman's cock. I sank lower down her shaft and stroked her quickly with my fingers at the base, feeling the first pulsing throbs from within,\n\nThe first jet hit me so hard with the amount, I couldn't contain it and it shot straight out my nose. I pulled back a bit and swallowed it, wiping my nose clean and feeling the cum on my fingers. I sucked at her head and waited for the next wad to come and I was ready for it this time. It filled my mouth enough it leaked out the sides and onto my fingers. \n\nI swallowed it in a couple of gulps and felt the remains on my fingers. I used it to coat her cock and make it slipperier, as I sucked and felt wad after wad shoot out and coat my mouth and throat. I stroked her from head to base and kept draining her, wanting to know just how much cum she could produce. I was in my glory and I didn't care what anyone would think of what I was doing at that moment. I loved cock and I loved cum and I had the best of both right then. \n\nI felt the twitching spasms ease and the flow turn to a dribble, as she groaned in in ecstasy. I stroked the cum-slathered shaft with the greatest of lusts. I let the cum flow over it and smeared it over her shaft, stroking it and feeling it get softer. I took it in my mouth again and cleaned her of her cum and sucked her dry.\n\n\"Oh, yes, I love it, I love it, I love you, oh God I love you.\" \n\nI let her go and sat back looking at her, panting hard, her thighs spattered with cum, her cock now limp again, but still thick and desirable. I looked at her pussy and saw the trail of cum and then realized she was cumming from there as well. She sat up, ending any more thoughts about tasting it from another source and looked at me with the biggest smile. I had to smile back just as big.\n\n\"Happy Birthday, Baby. I hope I made your fantasy come true.\"\n\nThat was all it took for the dam to burst and every pent up emotion in her gushed forth. She slid off the bed into my arms and held me so tightly. Her tears were ones of the greatest joy in release and I let her get them all out, as I stroked her gorgeous hair and held her. She finally moved back enough to look at me, her tears staining streaks down her face.\n\n\"I don't know what to say, ShaeLee, but thank you. Thank you, thank you, thank you so much.\"\n\n\"Oh my sweet angel. It was just as much my pleasure too, so thank you.\"\n\n\"Did you really like it? Sucking on me, instead of a real guy?\"\n\n\"You know what? I think I liked it more in a way. I'll be honest, Baby. I'm not totally straight. I found I have a bit of a Bi-sexual side to me, so I like both men and women. I really liked the way your cock felt. You take nice care of it, don't you? Uhm, I couldn't help but notice you cumming from your pussy as well. Does that always happen?\"\n\n\"Oh my God. Oh ShaeLee, I'm making a mess of your nice duvet.\"\n\n\"Oh, sweetie, no. It's only cum, it comes out in the wash. That's nothing to worry about. Here, slide towards me, let me take care of that.\"\n\n\"What are you going to do?\"\n\n\"Well, lick your pussy clean of cum, if you'll let me?\"\n\nCiera was back to smiling happily again in an instant. She slid her ass to the edge and spread her legs wide for me. I picked up her cock and started licking her from her ass to her cock, delving between her folds and lapping what I could from her. She had such a delicate tasting cum, it was truly nectar of the sex gods. \n\n\"Oh, oh, oh my God, that's so nice, yes, oh please.\"\n\nHer pleas were inciting my arousal to get me going more and I sucked her lips out and tortured them with my tongue. I figured if it felt good to me, it probably felt good to her. I parted her lips and dug my tongue into her pink flesh. I could taste the dregs of cum and wanted a new source to enjoy. I went back to sucking her lips and slid two fingers into her tightness. It was just like I was as a teen and knew she was a virgin there as well. I was feeling mighty proud of myself at that point. This adorable hermaphrodite was giving herself to me for the first time and I took both her cock and pussy cherries. I was going to make sure I paid her the honor she deserved for giving me that.\n\nI felt the slickness build around my fingers and her cock swell again, as she approached her first vaginal orgasm brought on by another person. I stroked the soft, pulpy flesh and licked her cock base fast and hard, taking her past the point of no return and felt her stiffen.\n\n\"Oh, God, this is too much, I can't take it. Oh my God, ShaeLee, what are you doing to me?\"\n\nI knew she was feeling the unknowns of pleasure like never before and wanted her to see what she had been missing. If only once in her life she had this opportunity, I was going to let her have a memory that would last her lifetime. I took my mouth away long enough to say one thing to her.\n\n\"Cum for me Baby. Cum hard and give me your cream to taste.\"\n\nI think Ciera enjoyed me telling her to cum, because moments after I put my mouth over her pussy again, a torrent of creamy cum blurted into my mouth. I sucked it in my mouth and tasted her, loving what I got, but another blurt came and then another. I felt my mouth filling with her cum and tried my best to keep up with it. I lapped and sucked feverishly at her, then felt cum running down the side of my face. I glanced up in that direction and started cumming the moment I saw it.\n\nAs much as she was cumming from her pussy, a steady flow was oozing from her cock as well and made it's way to my face. I felt my thighs getting wetter, as more cum gathered on my face. I loved cum and this little darling was a never-ending well of it. I took my free hand and held her cock, running the spurting head over my face as I licked her. \n\nCiera bucked and heaved at me, then strained in an arch, her body in full blissful orgasm. I sucked the last from her and squeezed her cock of any cum in it, then sucked her clean. I let her go and she collapsed hard back to the bed, panting and gasping. Her breaths were so ragged, her nerves at such a high state of arousal still. She was almost crying from the intensity and I remembered that feeling after my first incredible orgasm. \n\nI stood up and looked at her lying there. Such a beautiful woman to behold in her own right, but the sheer magnitude of her sexuality was incredible to see. For all her delicate features, the sight of a large cock resting between her thighs made me gush a little more and I felt a trail of my own slick wetness trail down my thigh. Two tiny trails of cum remained coming from her and I was in absolute heaven, knowing I had created all of that from her. In the oddest of ways, I found myself thinking she could be perfect in many ways. If I was as Bi-sexual as I thought I might be and I was certainly feeling that way, I could have it all in her. I had cock and pussy in one package and it was a gorgeous package to boot.",
        "Ciera opened her eyes and got up on her elbows to look at me. She stared for a moment and then started giggling. I wondered why and then remembered I must look a state myself.\n\n\"Oh my, ShaeLee. Did I really cum that much?\"\n\n\"Got a little on me, I know.\"\n\n\"A little? It's all over your face and boobs and hands. It's everywhere.\"\n\nShe kept laughing and I joined her, knowing she was in her glory at that moment and felt the most comfort in being who she was.\n\n\"And I love it. God you can cum, girl. I was licking you and trying to catch it all and then I felt all this cum dribbling on my face and looked up and saw your cock was just oozing away on me. I loved that. I came you know? It turned me on so much, I started cumming myself.\"\n\n\"No way? Really? You actually came because of doing that to me?\"\n\n\"Not so much the doing it to you part, more the what you did because of it part. I loved knowing I got you off so good. I knew this was your first time and I really wanted it to be the best.\"\n\n\"Anything would have been the best, seeing as no one has done anything, or likely to in the near future. Now, I really don't care if someone could be better or not. Right now I feel the best I have ever felt in my life. Oh my God, ShaeLee, I actually made out with someone. I never thought that would ever happen. And I made out with another woman too on my first time. You know, I'm really glad we did do it together and not a guy.\"\n\n\"Why's that, Baby?\"\n\n\"Because a guy would never have sucked my cock like you did.\"\n\n\"That's true, not unless he was gay, or bi at least.\"\n\n\"Well, he'd have to bi, because being gay, he wouldn't lick my pussy.\"\n\n\"Good point. I can see how hard this must be for you to be with one or the other sex. I could never imagine in a million years what you must go through, sweetie. I really can't, but I know it must be so hard on you at times.\"\n\n\"It is. I get guys coming on to me all the time, but I turn them down knowing I'm only sparing myself a whole lot of grief and misery if they knew what else was down there. I never even imagined being with another woman. I mean, I like how they sucked cock, but never thought about all the rest being done. You're really good, you know that?\"\n\n\"What? Licking pussy?\"\n\n\"Yes! I loved what you did with your tongue and lips to me. I like that as much as how you sucked my cock, maybe even more.\"\n\n\"Sweet. I love cock, but I'm finding I enjoy the taste and feel of a woman's pussy too. There's so much to enjoy in both.\"\n\n\"You only need one thing to make my dream come true.\"\n\n\"What's that, Ciera?\"\n\n\"A cock. I'd love it you had one and fucked me. That would make me feel so much like a woman.\"\n\n\"I bet. I know that feeling. I agree, it does make you feel like a woman that way. Well, nature said no cock for me, but I may have something that might work?\"\n\n\"What's that?\"\n\n\"Uhm. I have a strap on dildo. I bought it a while back, then I met my friend Kelly and we played with it. Feels pretty good actually. Hard, but not too hard, you know what I mean? Like your cock gets really hard, but it's still pliable.\"\n\n\"Show me. I want to see what it looks like.\"\n\n\"Okay, hang on, let me just go in and clean up myself a bit.\"\n\n\"I'll come with you, I need to do that too. I left enough cum on your duvet already, that I feel bad for.\"\n\n\"Hey, I told you, don't feel bad about that. Cum doesn't stain. Hell, I'd love to see you soak the sheets with cum, maybe put a towel down, but that would be awesome to see.\"\n\n\"You like cum, don't you?\"\n\n\"Fuck, I love it. I love having it fill me and smeared on my pussy and tits. I love tasting it and feeling it on me. Oh yeah, I love cum, the more, the merrier. Come on, let's get this off us and I'll show you some fun toys.\"\n\n\"Alright! I like that.\"\n\nWe went in to my en suite and washed up and dried, bringing towels back with us, then she sat on the bed again and I went to my drawer and took out my toy box. Ciera was eager to see what I had, as I opened the lid to the shoebox. I took out my toys and laid them on the bed for her to look at, then went back to my drawer and took the strap on out. I kept my back turned to her as I put it on, then snugged it tight to my body. I turned around, holding it in my hand and Ciera gasped. It was a thick, eight inches of realistic cock that looked ready to fuck.\n\n\"Let me see it, come here ShaeLee.\"\n\nI walked over and her eyes never left it. She took it in her hand and felt it, squeezing and stroking it, getting a feel compared to her own.\n\n\"Pretty close, isn't it? Almost like a real one, to me anyway. All I know is, the fucking thing feels great when it's inside me, getting pounded away by my lover.\"\n\n\"I love it. It does look real and almost does feel like mine. It's big though. I don't know if I could handle anything that size inside me.\"\n\n\"It's really not that big. It looks like it I guess, but it isn't really. I imagine you haven't used many things inside you, have you?'\n\n\"What? Like toys and stuff?\"\n\n\"Yeah, do you have any?\"\n\n\"No, no toys, but I have a brush handle that I like to use.\"\n\n\"Oh Baby, that's nothing. I stopped using those and found vegetables by fifteen. I was horny as a teen, I know. Shit, I'm still horny now, for that matter. No, you'll be surprised at how much your pussy can take inside and not hurt. Shit, a woman I love, Kelly, she fisted me once.\"\n\n\"Fisted you?\"\n\n\"Yeah, where she puts her whole hand in me and fucks me with it. God, did I cum that time. My pussy felt loose after that, let me tell you, but what an amazing feeling having it done. It was a little sore getting in at first, but once I was loosened up enough, damn, she was just pumping her hand in and out of me like nothing.\"\n\n\"Oh my God, that sounds scary.\"\n\n\"Yeah, I guess to someone who's never had it done, it might, but those who have had it done, they know how great it is.\"\n\n\"Yeah, maybe you're right. I haven't really explored myself that much, so I don't know what I can and can't do really. I guess if your pussy and your friend...?\"\n\n\"Kelly, lovely woman.\"\n\n\"I bet, so Kelly and you have had a chance to explore that with yourselves and see what you can do.\"\n\n\"We have. We learned so much about ourselves and each other. You know, I made her have her first real cum and orgasm too. She was married forever and her husband never took the time to know what a treasure she really was in bed. We fooled around for months together and found lots of things about ourselves we didn't know we could do. She finally met this great guy and they've been dating for almost a year now. Last time I spoke to her, she said they were talking about marriage.\"\n\n\"That's so wonderful. I'm happy for your friend. She sounds like such a nice person.\"\n\n\"She is, hang on I have a picture of her over on my dresser.\"\n\nI went and got the picture of Kelly in a lovely lingerie outfit I bought for her birthday and showed it to Ciera. \n\n\"Oh ShaeLee, she's beautiful.\"\n\n\"She is. I bought her that set for her birthday and she posed in it for me.\"\n\n\"She's got such a great body too. I love her tits. I wish mine were like that. I'd love bigger boobs than what I have now.\"\n\n\"No you don't, trust me. You have a gorgeous pair of tits, Honey.\"\n\n\"You think they're nice like this? I thought bigger ones would be sexier or something.\"\n\n\"You see me with bigger boobs? No. I like my little girls. It's all about the nipples anyway. Bigger tits don't do anything to make you sexier. Guys will look and want to grab them, but overall, your tits are just adorable as they are. They feel those and they'll be very happy.\"\n\n\"You like my body, don't you?\"\n\n\"I do. Ciera, baby, you're fucking gorgeous. I love everything about you. You have beautiful hair, a pretty face and eyes. You have a lovely body and really, I mean it, adorable tits. I love your cock and pussy, you have to know that by now.\"\n\n\"That, I do know. You really do like the way I look?\"\n\n\"Come on, you have to know that other than a cock, you're a gorgeous woman and guys just want you all the time.\"\n\n\"Well, they have been pretty consistent in asking me out.\"\n\n\"Damn right they would. You just have to find the right guy.\"\n\n\"Maybe you're right, I don't know.\"\n\nI was sitting beside her, my arm around her, her head resting against me. I had this lovely dildo sticking out of my crotch and she was going to have another cherry I took. It stood to reason she had no idea if she liked cock or not in her. She had told me the most she used was a brush handle. If she was ever going to know about herself, I had the opportunity to let her know what her choices were. In my mind, I owed it to her to fuck the shit out of her sweet little pussy and make her cum even harder than she had already. If she knew how good it felt getting fucked, as well as fingered and licked, maybe she would enjoy a man willing to accept her cock. Right now, it was my cock and I had her at my will to learn what there was to know.\n\n\"You know what, Ciera? If we've gone this far with each other and you've let me please you orally, let me use this on you and let you know what fucking feels like.\"\n\n\"Oh God, ShaeLee, it looks so big. Honestly, I don't think I could take it inside me.\"\n\n\"I know it looks big, but I agree, it would be hard to take without having some fun and getting loosened up a bit first. Can I try it at least? Let me loosen you up and see how wide you can go. I have some great lube, so it'll make it really easy, but you get so wet already, it should go in really easy. Just relax and you'll find it's not as bad as you think it is.\"\n\nCiera looked at me with apprehension and looked down at the dildo. She put her hand around it and I felt my pussy surge. It was as though I could feel it like it was my own cock. I knew she was sizing it up against her own and let her get a feel for it. Her hand ran up and down, feeling it and sensing it's size in her mind. She looked at me with her green eyes full of trust, washing away all the fear and doubt in her mind. I knew she was putting all her faith in me at that moment to help her believe her trust would be respected. I held her cheeks in my palms and gently pulled her face to mine. I heard the little flutter in her breath as her eyes closed and her lips parted to kiss mine.\n\nI placed my lips on hers and held them there motionless, letting her feel mine against hers. When I felt hers responding and wanting me to kiss her, I began mouthing her lips and devouring the tender flesh in my mouth. Slowly I put my arms around her and held her closer, feeling her body press against mine. I felt her arms going around me and holding me, enjoying the feel of me in her hands. I let the tip of my tongue run along her lips and they parted for me. I tongued her deeply and heard the moan from deep within her.\n\nI laid her back on the bed, holding her and kissing, feeling her become more enthralled in making love. I was understanding the position a guy had at such a young age to introduce a girl to sex. So unknowing, yet so willing to want to learn. This was her big first time doing anything and I was the lucky one to introduce her to what I knew about everything. If Ciera was going to know about sex, she was going to know it from a slut's viewpoint. \n\nI had us move up so our heads were on the pillows and took the lead and began touching her body. I stopped kissing her and had her lie back flat on the bed. I used my foot and pushed her legs apart, as I leaned on my elbow and looked at her.\n\n\"Baby, it's time you found out about making out. I want you to enjoy everything I do and I know lots will be new to you, but I promise, anything I do won't hurt.\"\n\n\"I know, I trust you, ShaeLee.\"\n\nI let my hand roam her body casually, no intent on what I was doing, other than letting her get used to the feel of my touch on her body. \n\n\"I know you do, Baby, I just want you to know it's going to be a whole new experience for you and it'll feel wicked and wild at times. You and I have no idea what you're capable of, so be prepared to feel all sorts of new things inside yourself, okay. I know you haven't played with toys before, so this is going to be lots of fun for you to experience. I don't know a woman alive who hasn't fallen in love with the sound of a good vibrator turning on. That's almost like foreplay to me.\"\n\n\"What do you mean?\"\n\n\"Oh Baby. I am so going to use my power massager on you, so you'll know. That sound you'll hear will be magic to your ears while you're cumming, trust me. It's just you, the sound, the vibration and the intense orgasm every time. Five minutes with that and I'm golden. I can have the shittiest of days and come home, strip my pants off and hold that bad boy to me and like I said, in five minutes, I cum the shit day right out of me and I'm good for the night and smile happy like a princess should.\"\n\n\"That's so funny, I love it. I know I've had some shitty days I'd like to be able to forget that easy.\"\n\n\"Trust me, after I use mine on you, it'll be the first thing on your shopping list to buy. I think you'll buy a few things I have.\"\n\n\"I'm so nervous right now. I have no idea what these things are going to feel like on me.\"\n\n\"Baby, it's pure heaven. I do believe vibration and pussy are like a fish to water. They go together that well.\"\n\nMy hand was hovering just above her cock and caressing the soft, smooth skin. I loved the faint smattering of freckles just above her breasts and making a vee between them. I could tell her body had seen very little sunlight and remained mostly freckle-free. The ones she did have accented her beauty even more. I watched her nipples stiffen and arouse, her breathing a little deeper and I knew she was ready for some serious play time.\n\n\"Okay, I want to try it with you. What do you want to use on me?\"\n\n\"Nothing drastic like the power massager. I was thinking my bullet would be nice to introduce you to it.\"\n\n\"Your bullet?\"\n\n\"Let me get it and some lube and let's have some fun, shall we?\"\n\n\"Okay.\"\n\nI went and got the bullet vibe and let her play with it, turning it on and letting her feel the vibrations. She enjoyed what she felt the small capsule-shaped felt like and I shut it off again. I took the vibe away and laid her back again, this time with me hovering over her. I took a moment to look in her eyes one more time. I memorized what I saw in them and how she was looking at me. I knew the next time I looked in them, they would never look that way again. She was going to become a complete woman in every way. \n\nI lowered my face and began kissing her softly, easing the arousal in her to rise slowly. I wanted it to be an experience of a good love making session between lovers. I could fuck her sure, but she wouldn't gain what the whole experience would be like, the way it should be. I felt her arms embrace me, as my hand cupped her breast, her nipple turgid and erect. I massaged and caressed her, working her every where but her nipple. I wanted to build up to it, make it something more than just a touch.\n\nLittle moans escaped her mouth into mine, as she began slowly writhing. I knew what she was feeling and it's just what I wanted her feeling. I slid my leg over hers and let my knee rest against her mound. I could feel her cock thickening against me, as I began gently nudging my knee against her. Little moans came to show her agreement to what I was doing and worked her nipple harder. She breathed in hard and sighed into me, as she arched her back in response. I loved that they were that sensitive and brought a great sensation from touching them. \n\nI kissed down her neck to her chest and blazed a hot trail of kisses to her swollen nub in my fingers. I only stopped the attention on it long enough to switch to my lips and the reaction was intensely greater than using my fingers. Her back strained harder as her hands came to my head and held me to her. I suckled and rolled her nipple with my tongue, the spongy tissue wobbling with it. I switched over to the other one and lavished the same attention to it and her moans were coming with every breath.\n\nI took her nipples in my fingers again and rolled them, as my lips went between her breasts and down over her stomach. The little shivers of excitement raced through her, the level of arousal building with each touch of my lips, as I traveled further down her body. I glanced at her cock coming into view and a tiny drop of pre-cum pooled at the tip. The lust for it was excruciating agony, not wanting to go cock hungry again on her and pleasure her as a whole. I knew what getting my pussy played with was like and I had a very good idea of what it felt like getting head from me. \n\nI kissed down to her cock and ran my tongue over the head, picking up my precious droplet and continuing down the shaft. I felt it grow stiff instantly at the feel of me, as I left her cock and hit her lips right after. Her legs parted widely in response, giving me herself to enjoy and explore. I used my fingers to part her pink petal lips and slid my tongue through them, finding more savory treats to enjoy.\n\nI shifted and moved down between her legs and laid them on my shoulders, as I kissed her thighs on each side, making my kisses come a fraction closer to her sexual cores each time. Faint whines began accompanying her moans and it sounded like a song of her sex she was singing. I looked at cock and pussy waiting for me, both in a state of desirability to me. I neared both and took her cock in my hand and licked her from her ass to the head of her cock over and over.\n\nI swallowed her cock in one gulp and sucked her into an erect state and stroked her, as I went back to enjoying the juicy pussy dilating before me. As I stroked her cock, I parted her lips and lapped at her hungrily. She was already wet enough to start dripping her nectar from within and I was greedily tasting her. I slid a finger inside deeply and felt her wet warmth. I stroked her and the wetness became greater in seconds. I slid a second in and slowly pushed in deeply. Her walls gave up easily and parted for me to work her in. I ran my tongue from her lips to her head, loving the combination of both, as I felt her seeping past my fingers. \n\nI took a peek and saw the clear, viscous trail running over her ass and between her sweet cheeks. I felt my wetness grow and loved the whole experience of her. Her lips were bright red along the edges, making them appear to have lipstick on them. I placed my mouth over them and kissed her deeply, just as I did to her mouth earlier. Ciera was close to a state of blissful crying, the sensations coursing through her body must have been doubly intense with what I was doing. I could only imagine having both parts stimulated at the same time and what that must feel like for her. In my mind, it could only be the best for her and the best was what I wanted her to have.\n\nI reached over and blindly felt for my bullet and lube and brought them to me. I sucked on her cock, while I opened the lube and put a bit on my fingers. I ran it over her faintly colored pucker and the rest over the business end of the bullet. As I continued sucking, I slid three fingers inside gently, taking my time to let her adjust. I felt her muscles contracting and dilating in pulses, accepting and rejecting the intrusion. I ran the bullet over her ass after setting the vibe to low. I circled the entrance and only pushed gently at it. I didn't want to go inside, not yet. I wanted her to get used to the feel of anal stimulation and see if she was into it or not.\n\nI could feel the muscles through her pussy, as she felt the vibe's influence on her. Her tight walls eased their grip on me slowly, as I stroked my three fingers in deeper and deeper. I just made it to the point where all of my fingers were inside her, when her muscles clamped tight on me and her hands held my hand to her tightly. Her first orgasm made her shake through it, her cum oozing from her pussy and I looked to see if the other part was responding the same way.",
        "Sure enough, her semi-erect cock was erupting with it's own release. I hated seeing cum go to waste and sucked her cock into my mouth, as my hands worked at her ass and pussy. I was cumming and I could feel it. It was collecting and making it past the straps and sliding along my thigh again. I shivered myself at the feel of it and went back to sucking and fingering my pretty, little angel with relish. \n\nShe came hard and long, as I evoked all I could from her. I took my mouth from her cock and slowly slid my fingers from her pussy and splayed her open to see how dilated she was. She was ready to be fucked and I wanted something else to really bring it all home to her in a big way. I wanted to pull all the stops and give as much to think about as possible, when it came time to make a decision about herself and what she wanted to do and who to be with. \n\nI slowly pushed the bullet against her opening and watched it give up the resistance and slide inside, then disappear. Her gasps at it being there were taken in stride, as a blurt of cum oozed out, running over the wire and ran along it. I licked the wire clean and continued to the source and licked her deeply, dredging her for any more treats to enjoy. I swallowed what I got and held the controller in my hand, as I kissed my way back up her body to her face. I lightly lay over top of her, letting my nipples graze over hers and the sparks jumped between us.\n\nI saw the look in her eyes as I did it and she was looking at mine and seeing the same thing, lust. I lowered down and began kissing her and felt her embrace me lovingly and hold me to her. I took her in my arms and we kissed with the greatest of passions, enjoying the moment of our lips together. I lay all my weight on her and reached down and took her behind the knees and pulled her legs up so they were spread widely. I could feel her cock pulsing against my belly, as I raised up on my hands and looked down at her. She opened her eyes and looked at me, the emotional connection we had was so strong in them, telling me how much she wanted me and wanted all I could do for her to find pleasure.\n\n\"It's time, Baby. I'm going to slide my cock inside you and fuck you, so let me know if you feel any pain, okay?\"\n\n\"Okay.\"\n\nHer one word reply was soft, but trusting, accepting the unknown from me and wanting to know what awaited her. I reached down between us and held my dildo in my hand, as I knelt back and applied lube over it liberally and then to the outer edges of Ciera's lips. I didn't want anything to ruin this in any way and took every precaution I could think of. I wiped my fingers on the towel beneath her ass and laid back over her, so I was close to her face. She looked at me so innocently, the unknown ahead and her love and trust in me was expressed clearly.\n\nI looked in her eyes and saw that trust and knew this was her initiation to the final act of sex, coupling as a woman. I reached down and held the head to her lips, then looked at her.\n\n\"Spread your lips for me Sweetheart, spread them wide, okay.?\"\n\nShe kept her eyes focused on mine intensely, looking for every subtle nuance they gave about me. I showed her that I was going to love her more than she had ever been loved before and I hoped she could see that in them. I held the head against her opening and just pressed it hard enough into her to take the head. The surprise was in her eyes, the expression on her face a confusion of decision. I turned the bullet up in strength and her eyes rolled back in her head, her mouth gaping open. I pushed in a little deeper and worked the head in and out a little bit, letting it work itself in.\n\nHer hands held onto me tightly, her nails threatening the flesh on my arms, but it only served to heighten my arousal for her. She looked back at me, a primal lust now in her eyes. There was less worry and more need to feel more now. She held me tightly and looked at me with her strength of\n\ndesire.\n\n\"Fuck me, ShaeLee. I want you inside me. All of you, I want it all. Fuck me, please.\"\n\nI almost had to bite my lips from smiling like a total slut and remembered what I was doing. Slowly I pushed in, letting her tight walls expand from the girth. I stared into her eyes, as she stared into mine and we shared the bliss together of what she was feeling. I eventually felt my abs touch her cock and knew I was all the way in. I held it there and rotated my hips a bit to work it looser inside. Ciera writhed under me, feeling her pussy stirred into arousal.\n\nI pulled back to the edge of the head and slowly worked down again. I gave her the full length of the dildo a dozen times or so and felt how loose she had become. I held the back of her knees with my arms, keeping her as open as I could and started thrusting faster. Her eyes shot a look at me, so intense and raw. I was hitting something inside her never touched before and she was on to it and riding hard for it. I felt her legs pushing at my arms to close, but I kept her there that way and began pounding in and out the full length and the cum began flowing hard from her.\n\nI let her legs go and they wrapped around my waist and held me to her, just as her arms did. The embrace was as sensuous to me as it could get. I could feel her cum soaking me on my belly from her cock and her pussy pouring it onto my dildo and making its way to my pussy. I felt the stickiness of it against my skin and it was my trigger to cum myself. I kissed her hard and passionately, as I pushed the length in her slowly and quivered in my own orgasm. \n\nWe stayed like that and kissed until we needed breath and held each other. Slowly I rose up and knelt before her, my dildo planted deeply inside her, the cum soaking both of us. I watched the dildo coming out, drawing her reddened lips with it, wiping some of the cum off the surface. I watched all eight inches finally come out and a flow of cum followed. I just watched it. I didn't want to disturb the natural flow and watched where it went. In a quick contraction of her sphincter, the cum dropped inside, joining the bullet still buzzing away. \n\nI looked at her ass and slowly pulled the bullet out, watching it open her hole to me. I let it sit right at the entrance, holding that final moment and gave it a tug, making it pop out. I heard her release of the last of her emotions, knowing her experience was through. I looked at her anew, taking in the newness of who she was now. She had been changed, transformed from one person to another and I had affected the changes in her. I had taken her and brought her into a new life to live. I had given her peace, love, joy, freedom, knowledge and above all, choice to enjoy. \n\nI felt myself between my legs and the wetness I had. I was impressed with what had happened to me, just from what I had done to Ciera. I unhooked the harness and slid it down my legs and tossed it on the floor. I worked back up the bed and lay beside and stroked her hair from her face. She kept her eyes closed and smiled at my touch. I kissed her softly on that smile and felt her pucker instantly and her hands hold me to her. I kissed her back with the same feeling, the moment of us still fresh in the room.\n\nWe lay face to face and looked at each other, soft touches just to stay in contact with each other that way. I saw the intense sparkle in her eyes and knew it was the one I saw in my eyes after I'd had the fuck of a lifetime. \n\n\"How do you like sex now, Baby? I don't need to ask if you liked it, I know that, but was there anything we didn't do, that you wanted to?\"\n\n\"Oh God, there's more?\"\n\n\"Oh Sweetheart, we just scratched the surface with everything. I only used a bullet vibe on your ass, there's a whole bunch more fun in there. I know how you liked that.\"\n\n\"Oh yes. That was incredible in there. I could feel it when you were fucking me and the vibrations were running through me everywhere from there.\"\n\n\"See. So there's all kinds of vibes and toys to try in there and see what you like. I was so tempted to stick my cock in your ass and take the last cherry, but I thought I'd let someone else enjoy that with you and offer it to them as that special part no one else has been but them.\"\n\n\"You make it sound so wonderful. So what are my cherries that you took?\"\n\n\"I was the first one to suck your cock, the first to lick your pussy and finger it and I was the first to fuck you. I took three of your precious gifts that you had to offer. I couldn't be a total slut and take all of them and leave nothing for the person who makes love to you next. It could be that special someone and you'll have something that no one else has touched and give it to them. I do love that I was your first though. I so wanted it to be the best it could be for you.\"\n\nShe was smiling happily at me as I babbled away rapidly, showing my care and concern for her happiness. She kissed me several times repeatedly, more to shut me up than anything else.\n\n\"Shae, I loved what you did to me. It was way more than I ever imagined it would be. I've never felt such amazing things in myself before. I thought I knew what my cock and pussy could do, but you just showed me there's so much more I've been missing out on. I'm so happy I met you, I really am. This is the best day of my life and it isn't even my birthday yet.\"\n\n\"I know, mine too. I couldn't ask for a better thing to happen than meeting you today. You've just opened my eyes up to something I knew nothing about really and you know. I really liked it. I barely understood anything about hermaphrodites before meeting you, but I just got the best crash course anyone could have in knowing what they're really like. You are such a sweet woman, you really are. Someone is going to be so happy when they get to know just how wonderful you really are.\"\n\nI looked at her glowing from within. The happiest she probably has ever been in her life and I hoped this was the way the rest of her life would be spent.\n\n\"Oh Shae, you are just the most incredible, nicest, sweetest, kindest person I've ever met. I wish I could make you as happy as you've made me.\"\n\n\"Oh, you have made me happy, Baby, you have. Although. I don't know how you'll feel about it, when I ask you.\"\n\n\"Ask me what?\"\n\n\"Baby, I'm so horny right now, I could really use some good loving myself.\"\n\n\"Oh Shae, you want me to lick you and everything, like you did to me?\"\n\n\"Please, and Baby, if you can do it, I'd really love to feel your cock fucking the shit out of me, I really would.\"\n\n\"Yes, oh yes, I'll do all of that to you.\"\n\nI was as happy as her at that moment. I really was beside myself with how horny I was with her. My pussy had been oozing the whole time we were together and nothing had even been done to me, other than the harness pressing against me. I lay back at the push of her hand, as she lay over me and began kissing me. I held her to me, embracing her as she gave me her love. I was enjoying her and what she wanted to give me and it was like my first time again in a way. I certainly felt just as excited as I did back then.\n\nShe cupped my small breast and gently squeezed it, sliding her fingers to my nipple and the second they touched it, I was releasing more of my juices. I knew I was in for some wonderful orgasms, the state I was in at that moment with her. Her lips left mine and traveled along my neck, trailing to the one untouched. She kissed around my engorged nipple and then kissed it tenderly. I came again. I was flowing myself, like I'd seen her do and loved that feeling.\n\nShe sucked on it like she enjoyed having it done and the only word that I know that fits the feeling, is swoon. I sighed loudly and held her head to me, as she loved on my breast. She started moving down and I became more excited. Her lips foretold of sweet kisses and touches and only another woman knew how to do that. She moved my legs wider and I gave her all the access to me she wanted. She shifted herself to get into a better position to see me and touch me.\n\nI looked down at her looking at me, seeing her enjoyment at looking at a woman's pussy. I watched her move forward, taking that first step to exploring another person. I waited for that moment, watching to see when she touched me. I felt her warm breath caress my lips and I took a breath and held it. I felt her lips touch me and I shook, as I exhaled in a long groan. I could feel my wetness smearing on her lips as she pressed into me, then her tongue poked out and touched me tentatively. I was shaking nervously, the little vibrations running from head to toe in me. \n\nHer fingers came and parted my lips, then her tongue went in deeper. She curled it up and pulled it out and I knew she was tasting me. I felt her tongue go back in again and again and knew she enjoyed the taste of feminine essence. Her lips pressed into me and her tongue began lavishing broad strokes that brought me racing into a quick orgasm. She sucked on me, drawing me out and into her mouth. She feasted on my cream and then her fingers began touching the tender flesh inside and I waited with baited breath for her to finger me. I needed stimulation inside me and cock was my main focus, but Ciera was exciting me with her fingers and within ten easy strokes, had slid three fingers in me and was stroking me slowly. Her tongue danced with my clit and pirouetted on the tip and that was all I needed for my second orgasm to come. \n\nI felt her continue to finger me, but I needed cock and I wanted her cock in me right then. I held on to her hand and stopped it, making her look at me.\n\n\"Baby, that feels wonderful, but right now, I need cock and lots of it. I need you inside me, now Baby.\"\n\nCiera saw my desperation to feel her inside me and smiled at me. I thought she looked so precious with my pussy juices smeared all over her mouth and face. She moved up to my face and I kissed her mouth clean of my juices. I felt her moving around, then my lips parted and I felt the bulbous head of her cock being run between them. She was stroking herself to get hard and using me as a way to stimulate herself. I was close to cumming just watching her cock running over my lips and clit. \n\nI saw her eyes look into mine, a look of foretelling in them. She was ready to attempt something for the first time on someone and it was with me. I looked in her eyes, letting her know I was ready for her. I gave her a tiny smile to offset the anxious look on my face and she smiled a bit wider.\n\n\"Fuck me, Baby. I want to feel your cock inside my pussy.\"\n\nThe permission to do it was her cue and I watched her look down at her cock, as she began pushing it into me. I felt the thick head part my lips and pop inside, then it spread my walls wider until she was all inside. Her cock was no where near the biggest cock I've had in me, real or otherwise, but hers certainly felt the best. I don't know why it did, but it was bliss with each inch she put in me. I looked in her eyes, as she hit bottom and stayed there, unsure of how to fuck me. I knew what I wanted more than anything and that was to have her grind into my clit.\n\nI held her hips and pulled her tight to me, working my pussy against her so my clit was mashed against her smooth skin. I started rotating my hips, feeling those jolts of sexual electricity scream out of my clit and hit the pleasure center in my brain instantly. The head of her cock was stirring me into a sexual cocktail, as I felt and heard my juices collecting and pooling inside. I took control of her hips and I showed her how I wanted to be fucked.\n\nShe laid her hands on my thighs and watched me fuck myself with her body and cock. When she felt she understood the pelvic thrust and tilt of how it was done, I felt her taking command again and she was fucking me like a champ. She knew what my dildo had felt like in her and how I had used it on her and she was now enjoying that same enjoyment of taking a woman's pussy and filling her with pleasure. She had no problem getting all of herself in me and I watched her watching herself fuck me and how rapt she was with the sight.\n\nI could only imagine what that must look like to her. Looking at your cock sliding in and out of a wet pussy and the feel of it wrapping around you. I was starting to understand what might have been going through her mind as she looked. She had just felt eight, thick inches fill her inside and the feelings of what that was like and now she was filling me and understanding it from the other perspective. I sort of felt jealous that she knew what it was like. I might have fucked her like she was doing to me, but I had no idea what it felt like.\n\nCiera was feeling it and she was enjoying the feel of fucking me, like I was. I wrapped my legs around her waist and reached out to her to come lie on me. She stopped thrusting and slowly laid down on me, looking at me, showing me how happy she was and the hopes I was enjoying it as much as her. I pulled her into an embrace and slid my hands down to her ass. I cupped it and began motioning her to continue filling me with cock. I felt her hips begin moving and that delicious cock began filling me again. \n\nI put my arms around her and held her to me and kissed her with such abandon, loving her presence and her feelings she had for me. I kept cumming over and over, the feeling of her fucking me so intense and wonderful. Her strokes were full and hard, giving it to me the way I had done to her. She knew I was reaching that point and she was determined to make me orgasm. I knew I wouldn't disappoint her, as I felt a beautiful orgasm building inside me.\n\n\"Fuck me Ciera. Oh Baby, yes. Pound that gorgeous cock in my pussy. I'm going to cum for you Baby. Fuck me.\"\n\nMy words in her ear were the magic it took for her to know she was a success at being the male part of herself. Her belly was slapping against mine and my clit was assaulted with all it needed to make it happen. She had to know my orgasm started, as my walls clamped down on her, making it harder to push her cock in me. I felt my release of fluids go and knew it was washing over her cock. The sound of it came to my ears and added to it all. \n\n\"Oh yes, Baby, that's it. I'm cumming for you. Fuck me, fuck me, fuck me.\"\n\nI heard a little giggle from Ciera and I knew she was beside herself with happiness, knowing she had made me cum and proved she was capable of being both sides of herself. Her own moans began shortly after and I knew from the change in stroke, she was getting ready to cum. \n\n\"That's it, Baby. I know you're ready. Cum in me, Sweetheart. Fill me with your cum, I want to feel it in me.\"\n\nCiera's moans were more pronounced, her cock getting stiffer and thicker inside me. Her eyes were locked in the most serious of expressions, feeling her cock erupt. She lost her stroke and stuttered in and out, then she sank as deep as she could and I felt the first blast of cum hit me. The warmth coated me, then another came and the coating spread quickly and I knew she was cumming hard. She thrust in me, the feeling of my walls around her cock compelling her to enjoy the sensation of my caress, as her cum poured from the end of her cock and filled me beyond capacity.\n\nThe hot, thick cum ran out and over my ass and pooled on the towel beneath me, as Ciera finally twitched and spasmed through the last of her orgasm. Her eyes were shut tight, the blissful agony of her first real orgasm sweeping her into euphoria. She finally collapsed on me and lay panting hard in my arms. I held her lovingly, stroking and caressing her shaking body, as I felt her cock begin to dwindle in me and then begin to fall out. I gave a little pelvic push and know a large dollop of cum went out with it. The flow felt incredible coming from me, draining from my pussy and dribbling down over my asshole in an endless stream. \n\nShe regained herself and raised up to look at me and she was gorgeous to behold. In my opinion, nothing was more beautiful to see, even more than a smile, was the look of pure sexual satisfaction. Ciera was as satisfied as she could be and I smiled. She smiled back at me and kissed me with all the love in her heart. We rolled to our sides and spent untold minutes kissing and enjoying the feel of each other's body against one another. ",
        "\"Ciera, Baby, you are a fabulous lover. Oh my God. Honestly Sweetie, as a woman, you're delicious. As a man, you're fantastic. I love your cock, I really do. It's the perfect size, at least to me it is.\"\n\n\"Oh Shae, thank you. That seems so lame to say after what you've done for me. How do you show enough thanks for that? Whatever it is, that's what I want to give to you. I feel so, so, oh shit I just feel so incredible inside right now. I love fucking, oh God did I love fucking you. I loved being inside your pussy, that was such an awesome feeling. You felt so warm and, I don't know, rich is what I was thinking.\"\n\n\"I like the sounds of that. I'm almost afraid to look at how much cum is on the towel between my legs. I think I still feel cum coming out.\"\n\n\"Really? Let me see.\"\n\nShe gave me a quick kiss and shifted her way down so she was between my legs. Her eyes went wide and giggled.\n\n\"Oh my God, ShaeLee, you are still dripping cum out. Is that all of me coming out?\"\n\n\"You and me actually.\"\n\n\"Ooooh, nice.\"\n\nHer face went right to me, then her tongue lapped and drained me of anything that was left. My moans let her know I enjoyed it, if not, my hands clenching the sheets should have. She sat up licking her lips and wiping her mouth dry.\n\n\"I love fucking and I love licking pussy. That, I do know for sure now. I really loved getting fucked by you and I'd like to know what a real cock feels like and what it's like to feel cum.\"\n\n\"Baby, when you came, I came. Every time I felt your cock shoot out into me, I felt my cum. I know I was soaking with cum.\"\n\n\"The towel is soaking with it. Listen.\"\n\nShe patted the towel where the cum was and I could hear the amount that had to be there to make that much noise. I sat up and moved so I could see and felt the spot. It was saturated and thick with us. I carefully wiped my pussy and ass with a dry patch and picked it off the bed. The duvet was wet, but not that bad. I didn't care that there was a bit of cum on it. I remembered many nights sleeping in a wet spot and this was no where near me.\n\nI went and got a wet face cloth and gave the stained areas a quick wipe and then threw it into the shower stall from where I stood. I looked at the little angel sitting on the edge of the bed, looking up at me. She had her legs together, her cock out of view, her back straight and hands in her lap. She was as girlie as they came and I adored her.\n\n\"Okay, Little Miss Sexy Thing, come here, let's go get something to drink and then have a talk about what we found out about you.\"\n\nShe got off the bed and took my hand, following me to the kitchen. We got a cold drink and sat in the living room on the couch together. It was so easy to be with her, even naked. She was relaxed and at ease with herself and me. I could assume it was probably the first time she had done this with anyone too. It was like teaching her about life, the real one and not the one she believed it to be. She opened her heart to me and shared so many pent up feelings she had about everything.\n\nWe sat for over two hours, naked and comfortable, sharing our life stories and came to the conclusion about Ciera and her life. I brought my laptop out and as we cuddled with a blanket and another drink, we began looking at ads for Bi-sexual men and women. She wanted to try both and see for herself which side felt better to her. I kind of envied her again, having such a wonderful choice to make about herself. \n\nShe wrote down a few choices and we made plans to get together and see how her dates went. I drove her to her place and sat holding hands as we said goodbye. It was hard to let her go, but after a beautiful kiss and her promise to call me soon, I let her go and watched her walk inside. I drove away feeling I had been given a chance to behold and enjoy one of nature's unique and truly precious of gifts."
    ],
    "authorname": "ShaeLeeTanner",
    "tags": [
        "erotic",
        "erotica",
        "lesbian",
        "lesbian sex",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/secret-treasure"
}