{
    "title": "The Howling Valley",
    "pages": [
        "Here\u2019s my entry for the . Hope it makes sleep just a little more difficult for you. \n\n*****\n\nI\u2019ve been fascinated by the legacy of the Vietnam War for a long time, and while you\u2019d think that the documented horrors of that particular conflict would be more than enough for a story like this, I wanted to throw something even more malevolent than napalm, booby traps, or Richard Nixon into that mix (if that\u2019s even possible), so here we are.\n\nA quick note: this story will feature many references to locations, people, events, and equipment/weapons that were prevalent during the Vietnam War, some of which may be more obscure than others. To avoid any confusion, I\u2019d suggest keeping Google open and ready in another tab, seeing as I can\u2019t exactly add footnotes. \n\nNow it\u2019s time to plunge into the deep, dark jungles of Vietnam, where Charlie and his AK aren\u2019t even close to being the most dangerous threat lurking in the treeline...\n\n************\n\n\u201cIt was written I should be loyal to the nightmare of my choice.\u201d - Joseph Conrad, Heart of Darkness (1899)\n\n*****\n\nOctober, 1968 - Quang Duc Province, South Vietnam\n\nShould\u2019ve made for fucking Nova Scotia, that\u2019s what I should have done. Soon as I\u2019d gotten my draft notice, I should have booked it for the border and never looked back. Fucking Dad and his shit-talking; all his blustering about \u2018being a man\u2019 and how \u2018he served, and so should I\u2019, when that motherfucker hadn\u2019t gone anywhere near the fucking Krauts or the Japs. Can\u2019t believe I let him bully me into going to fucking boot camp, can\u2019t believe I\u2019m hucking through this fucking shitty jungle, can\u2019t believe I\u2019m risking my fucking life in this backwater hellhole for nothing...\n\nThese were only a smattering of the thoughts that swirled through Scott \u2018Scotty\u2019 McKinley\u2019s head like a cyclone as he trudged along some unnamed trail that snaked through the western limits of Quang Duc, trying to keep his footing on the uneven and muddy terrain. \n\nThe conditions were miserable enough on their own, but to pile disillusionment on top of heat, humidity, dangerous wildlife and hostile locals? Misery, that was what it all equated to. Nothing less than abject motherfucking misery in the midst of a green inferno, wherein almost every living thing wanted his blood. But he was here now, and going AWOL wouldn\u2019t solve anything (he couldn\u2019t exactly catch a cab home), and hell, he wasn\u2019t bad with a weapon. He figured that if he had been able to survive the Tet Offensive, he\u2019d make it through the rest of his tour (mostly) intact.\n\nBut then again, this was probably wishful thinking, and on some level he knew that he was just as likely to take a round to the neck now as he had been for the duration of Tet. And, as he and his platoon pushed further into the depths of the jungle, he felt as he always did during patrols: exposed. They may have been armed to the teeth, but Charlie always knew the lay of the land by heart; an ambush was never, ever out of the question unless the area had just been bombed, burned or poisoned-and this area hadn\u2019t seen any of that in recent memory. As a result, Scotty was on edge; he constantly felt as if he were being watched, and he was certain that the rest of the guys shared that sentiment. In fact, he had discovered that one was far less likely to survive without that constant underlying paranoia. He trusted that feeling as much as he trusted his buddies.\n\nHis platoon, comprised of twenty men in total, had been part of a company that had been pulled from its\u2019 normal pacification duties in the Mekong Delta in order to reinforce the Marines already present in the region. Intel gleaned over the past few weeks suggested that the Viet Cong were moving-or about to move-some heavy firepower across the Cambodian border into this region, and the brass wanted some more boys in the area in order to keep an eye out for anything suspicious. They\u2019d arrived in Quang Duc four days earlier, and so far nothing out of the ordinary had surfaced. For the time being, it was just schlepping up and down the trails for Scotty and the rest of them until Charlie poked his head out.\n\n\u201cWhat you think about this bush, Scotty? Man we definitely ain\u2019t in the villages no more,\u201d O\u2019Hara quipped, handing Scotty his canteen as they stopped for a break, \u201cyou  from Florida, right? This shit badder than the Everglades?\u201d He chuckled as Scotty took a draw from the container.\n\n\u201cThis is some shit, no joke,\u201d Scotty replied, totally deadpan, \u201cbut there ain\u2019t nothin\u2019 badder than Mama O\u2019Hara\u2019s big ol\u2019 bush, no sir.\u201d \n\nThis drew a cackle out of O\u2019Hara, as well as solid laughs from Walters, Okumura and Kanafka, all of whom were sitting on the roots of the same large tree that Scotty and O\u2019Hara had settled onto. The five men had developed a particularly close bond during their tenure in Vietnam; eight months straight of having to fend off Charlie, civilians with grenades, wild animals, insects, malaria, and trench foot had brought them together and cemented their resolve to gut, shoot, or detonate anything that wasn\u2019t wearing U.S. or ARVN colors. Folks back home didn\u2019t really understand, after all, that it wasn\u2019t just Charlie that they were fighting: it was the whole damned place, right down to the land itself. O\u2019Hara\u2019s remark had been more firmly rooted in truth than an outsider might have expected: the jungle, the mud, and even the moisture hindered them at every turn. These lesser-known enemies dulled their machetes, rusted their weapons, and rotted their boots. Nothing was sacred, nothing and no one was spared from their uncaring, indiscriminate wrath.\n\nDuane O\u2019Hara himself was a strong, stocky man of twenty-three who\u2019d been born to an Irish father and a black mother; he\u2019d spent much of his youth wandering his home turf of Queens, New York, working odd jobs to help support his family and getting high or  liquored up when he hadn\u2019t been busting his ass-that was, up until he had been drafted. He\u2019d even admitted once that the promised insurance payout his family would receive, should he be killed in action, was a primary factor in why he hadn\u2019t bolted to Canada after getting his notice. He claimed to have inherited his father\u2019s coarse sense of humor and love of bourbon, while taking nothing but his looks from his mother.\n\n\u201cMan, you talkin\u2019 all that shit,\u201d O\u2019Hara said, still smiling as he lit a Marlboro Red, \u201cbut you be glad my mama ain\u2019t here, she\u2019d beat your white boy head right in.\u201d\n\n\u201cI\u2019d pay to see that,\u201d Okumura chimed in, accepting a Red of his own as O\u2019Hara handed him the pack, \u201cshit, O\u2019Hara, way you always talk about your mom? Sounds like she ought to be handlin\u2019 shit down in Saigon, instead of fuckin\u2019 Thieu. Bet she\u2019d have those commie motherfuckers up in Hanoi whipped into shape in no time.\u201d Still grinning, he pulled out his own lighter, opening it with a metallic \u2018clink\u2019 and igniting it. He lit the smoke, took a drag, then held it away from his mouth between his thumb and forefinger while saying, \u201cAnd ain\u2019t you half a white boy anyway, O\u2019Hara?\u201d\n\n\u201cStill a brotha, Okie, don\u2019t you get me started on this shit!\u201d\n\nGene \u2018Okie\u2019 Okumura loosed a deep, gravelly chuckle as he took another drag on his Marlboro. A short, wiry Japanese-American who hailed from Oahu, he was a man of generally few words who nonetheless possessed two spectacular talents: warfare and shit-talking. His razor-sharp tongue, combined with his penchant for machine gun work, made him an invaluable combat asset; he may have looked bizarre carrying an M-60 that was almost two-thirds his size, but his performance with the weapon would quickly allay any fears or doubts as to his abilities. \n\nAs he smoked his cigarette, he put his other hand back onto the handguard of his light machine gun, never wanting to be unable to deploy it at a moment\u2019s notice. \u201cYeah, and I\u2019m actually a fuckin\u2019 Okie, O\u2019Hara,\u201d he sneered, taking another long drag.\n\nO\u2019Hara flipped Okie the bird and a fist simultaneously, getting chuckles out of the rest of them. Walters, smiling, pulled a smoke from his own pack and lit up. \u201cDon\u2019t you pay Okie no mind, brother. He just got a short man complex, that\u2019s all.\u201d\n\n\u201cAround you, everyone fuckin\u2019 does, Walters. You\u2019re bigger than God Himself, ya big ol\u2019 fuck.\u201d Okie shot back.\n\nOkie had a point. Tyrone Walters, a soft-spoken and kind-hearted Milwaukee native, was six-foot-eight and built from what looked like solid muscle. Being a black man in a predominately white military didn\u2019t seem to bother Walters much (in part because his sheer size and muscle mass made many of his more narrow-minded colleagues think twice about harassing him), but Scotty knew better. He\u2019d once heard a drunken GI throw some choice racial epithets Walters\u2019 way in a Saigon dive bar-to which Walters had, without speaking a word, stood from his stool, walked over to the GI, and slammed his head into the bar, holding it there firmly. \u201cThat was uncalled for, my man,\u201d Walters had said calmly as the rest of the patrons looked on in awe, \u201cyour mama never taught you manners, seems to me.\u201d As the GI blubbered and thrashed, Walters had refused to let go until the man whimpered out an apology, after which Walters had pitched him off his stool to the bar\u2019s dingy, filthy floor. He\u2019d scrambled to the door and left, whereupon Walters had calmly returned to his seat and ordered a whiskey double. \n\nWhile Walters may have been known as a great listener who would always be willing to offer sound advice and much-needed criticism, but he was also a vicious fighter and a model soldier. Scotty knew that anyone who ended up on the wrong end of his M79 (upon the barrel of which he\u2019d carefully marked the phrase \u2018FRONT TOWARD ENEMY\u2019) wouldn\u2019t be around to stare in awe at his massive form for very long. \u201cGive no insult, but take no shit,\u201d as he\u2019d been known to say from time to time.\n\n\u201cHey Kanafka, how you holdin\u2019 up over there, man?\u201d Walters asked in his deep, resonant baritone. \u201cYou ain\u2019t said much today, talk to me.\u201d\n\nTroy Kanafka looked Walters in the eye. \u201cSorry, brother,\u201d he said, \u201cdidn\u2019t mean to make you worry. Just that we\u2019re in new jungle and I\u2019m waitin\u2019 for Charlie to pop out, y\u2019know?\u201d \n\n\u201cJumpy ain\u2019t all bad,\u201d Scotty said, taking another swig from O\u2019Hara\u2019s canteen, \u201cjust don\u2019t take it too far, I don\u2019t want you to shoot me when I pipe up to tell you your shoe\u2019s untied, you know?\u201d\n\nKanafka smiled. \u201cYeah. Sorry man.\u201d\n\n\u201cNo need to say sorry,\u201d O\u2019Hara cut in, \u201cwe just checkin\u2019 on you.\u201d \n\nKanafka smiled again, but his eyes betrayed his true feelings. He\u2019d been quieter than usual since their redeployment to Quang Duc; he didn\u2019t take to change, it seemed, and Scotty couldn\u2019t blame him. They were hunting the enemy now, deliberately seeking engagement with him, and that was a dangerous proposition indeed. Some believed that change was inherently good-those fuckers had never been on patrol in the shit, Scotty thought.\n\nKanafka was the guy who played things close to the vest in their group. He\u2019d talk and bullshit all day long, but had been reticent when it came to discussing his past. Scotty knew that he was from Eugene, Oregon, and that his father had died when Kanafka had been only three. Of his mother, Kanafka had only ever said \u201cshe\u2019s a mean old bitch and I\u2019m glad to be rid of her.\u201d When asked if anyone was waiting for him, he\u2019d simply say \u201cnope.\u201d When asked about his career, he\u2019d said \u201cmechanic. Good money in it.\u201d Even Walters had had trouble cracking the shell that Kanafka had encased himself within, and the man didn\u2019t seem too keen on coming out of it.\n\nAs the five Marines laughed and joked for a time, surrounded by the almost suffocating branches and tendrils of the Southeast Asian jungle, things almost seemed normal. They all felt like they were back home in a bar, sitting in a cushioned booth after a long day\u2019s work, blowing off steam and talking shit like regular men do. It was one of those rare moment of respite that they had all grown to cherish, which made the jolt back to reality all the more unpleasant and jarring when Sergeant Ambrose walked up to their group and ordered them to gather their gear.\n\n\u201cUp and at \u2018em, we got miles to cover. Come on, boys.\u201d \n\nThere was a chorus of \u201cyes, sir\u2019s\u201d as the five men stood and gathered their smokes, lighters, canteens, and weapons. Scotty picked up his rifle, an M-16A1 with several strips of dark green grip tape wrapped around the handguards and pistol grip, and clutched it tightly in his hands as he trudged back onto the small trail just behind Walters. As they cut the chatter, Scotty leaned forward so that he could see the right side of his rifle and opened the bolt just a little, whereupon he was reassured by the glint of brass. He was ready to rock Charlie\u2019s fuckin\u2019 world. Adjusting his helmet just a little, he marched onwards into the seemingly endless green oblivion that was the Vietnamese jungle. \n\n*****\n\nThe only sounds now were those of the insects and the various birds hiding among the treetops. Even the footsteps and movements of the platoon were quieter than any onlooker might have expected; they were clearly trained to move as one unit, each of them following in the footsteps of the other, eyes veering in all directions, scanning for anything that didn\u2019t belong. Behind Scotty, Okie and another Marine named Trager, who carried the extra ammo for the M-60, stuck particularly close to one another. Scotty was silently grateful that he was so close to them-if they were attacked, he wanted to be as close to the support as possible. \n\nThe trail was more solid now than it had been, the mud seemingly behind them for the time being. It now began to veer westward, taking them closer to the mountain range that had been off to their left throughout the duration of the patrol. As far as Scotty knew, this was the range that Charlie would have to move their supposed heavy materiel through...but where? How? He figured that there had to be some sort of pass thay they would use, but where it was was anybody\u2019s guess. He hoped that the other squads were having more luck than they were, because-\n\nThe line stopped as Morgan, the point man, halted and raised a fist. The rest of the platoon immediately stopped behind him, weapons at the ready, not making a sound. Morgan motioned to Ambrose, who quietly approached. Scotty could just barely hear them as they spoke.\n\n\u201cTracks, maybe a day old, headed west into the jungle, Sarge. They\u2019re not U.S. or ARVN issue boots; probably VC.\u201d \n\nAmbrose nodded and shouldered his carbine, approaching the spot where the faint tracks, which had come from the opposite direction, went off-road. He took a few tentative steps into the plants and looked closer for a moment, observing the ground and vegetation before he whispered back to the men. \n\n\u201cWe got a trail-it\u2019s faint, but it\u2019s there. I\u2019ll take five men with me and check it out.\u201d\n\nHe turned back to the platoon. \u201cMorgan, O\u2019Hara, Tomberlin, McKinley, De Lena, you\u2019re on me. The rest of you, stay put and watch the road; be ready to call it in and come in guns blazing,\u201d he whispered hoarsely.\n\nScotty and O\u2019Hara broke from the formation and joined the other four on the side of the trail. They formed a single-file line behind Ambrose, who, with his carbine shouldered, led them into the brush. It was slow going, and Scotty thought that every single twig snapping was as loud as a gunshot. Fuck, he thought, this is it, isn\u2019t it? I lived through fucking Tet just to get jumped and bayoneted by some crazed Charlie motherfucker in the middle of nowhere, I know it, that\u2019s what\u2019s about to happen-\n\nAmbrose halted and motioned to get down. The five men behind him immediately ducked, weapons at the ready. Scotty ran his thumb over the safety on his M-16, ensuring that it was set to maximum rock-and-roll. Ambrose nodded to the area directly in front of him, which was when Scotty saw it: partially hiddenin the plants was a slit in an earthen wall that had been shored up with bamboo rods and dark brown sandbags. It was a gunner\u2019s nest. \n\nScotty\u2019s blood ran cold, and he now had a death grip on his rifle. He took deep, quiet breaths as Ambrose motioned for the men to stay where they were, the fear and adrenaline coursing through him in concurrence with one another. His sweat trickled down his brow and into his eyes as Ambrose crept up to the gap, weapon pointed directly at it. It felt like hours before he made it to the wall next to the opening. He leaned down and peered inside...\n\nNothing happened. Ambrose turned and motioned at Tomberlin, who crept up to Sergeant. \u201cT, go back and tell Watterson to call this in. We\u2019re clearing this place out.\u201d\n\n\u201cYessir, right away.\u201d\n\n\u201cMake it fast, T.\u201d\n\nTomberlin vanished back down the crude path toward the main trail. Ambrose motioned for Scotty and the others to follow him as he moved in front of the opening to the nest. \n\n\u201cWe don\u2019t know what the motherfuckers might\u2019ve left behind; keep your shit wired tight and watch for traps,\u201d he whispered. With that, the Sergeant slipped into the opening feet-first, and landed upright. He peered around in the gloom, making sure nothing was amiss, and then poked his head back out through the opening. \n\n\u201cCome on, stay sharp.\u201d\n\nThe men slipped through the opening one at a time behind the Sergeant, Scotty second among them. He came down on his feet and went over to Ambrose, who nodded at him. \u201cYou good, McKinley?\u201d He whispered. Scotty nodded quickly, helmet bobbing lightly. Ambrose gave him a quick grin, and checked to make sure that everyone was present. De Lena was landing on his feet as he did, bringing up the rear, and as he stood upright and readied his M-16, Ambrose faced the left wall of the small room. There was a crude door carved into the wall, which lead into a dark hallway of uncertain length. Tightly gripping his own rifle, he watched as Ambrose slipped into the dark slot, Scotty almost certain that this was when Charlie would strike. But there were no yells, no gunshots...again, nothing happened as Scotty\u2019s squadmates filed through behind Ambrose. De Lena again brought up the rear, Scotty just ahead of him, as they began their search of the crude, makeshift bunker.\n\nIt turned out to be a small job, only four rooms in total: the gunner\u2019s post, a storage room with a few cans of ammo, some bags of rice and basic medical supplies, and two small living spaces. The place had been in use recently, at least within the last day or so, as it showed signs of having been occupied recently. A few pieces of clothing, some simple cookware, and even a faded photograph of a young woman alongside a pair of small children-likely the young family of a homesick soldier from some obscure village in the North-were among the objects left behind by the occupants.\n\nScotty himself had been the one to find the photograph, kneeling down to discover it half-concealed underneath a worn and dirty short-sleeved black shirt. As he\u2019d taken a brief moment to soak in what he was seeing, he found himself thinking about the people in the image: were they alive? Was the owner of the picture, likely the husband and father of the occupants, still upright? Had he-or the trio-been struck down by a bombing raid or a napalm strike, or even poisoned through Agent Orange exposure? Who knew anymore? There were so many civvies getting caught in the hellfire of all the various strikes that he\u2019d certainly never find out. \n\nBut, as he was staring at the black and white image, getting strangely lost in every detail contained within it, a hand rested on his right shoulder. Scotty whipped around, nearly hitting its\u2019 owner in the face with the muzzle of his weapon. The culprit jumped back in surprise, hands out in front of her.\n\n\u201cI\u2019m sorry, I\u2019m sorry! I-I didn\u2019t mean-\u201c\n\n\u201cYeah. Yeah, I know.\u201d Scotty said, his heart rate slowing and the small adrenaline surge abating. \u201cYou should know that doin\u2019 shit like that\u2019s a good way to end up gettin\u2019 shot, though. Didn\u2019t Ambrose tell you that?\u201d",
        "\u201cWe never discussed it specifically, though I feel now that we should have. What have you got there?\u201d \n\nHe\u2019d managed to hold on to the photograph, though in his surprise he\u2019d accidentally crushed it a little. He handed it to the woman, who took it from his large, rough hand and held it in her small, pale one. Her eyes widened a little when she realized what it was.\n\n\u201cOh...\u201d She whispered, staring at the image. She did not say anything else.\n\n\u201cYeah. \u2018Oh\u2019.\u201d Scotty said quietly, as he gently took it out back from her. \n\n\u201cI didn\u2019t mean to startle you before,\u201d she said, her dark brown eyes looking up and meeting his own, \u201cbut...Sergeant Ambrose told me it was safe to enter the bunker, and I wanted to take some pictures of it. I saw you and wanted to make sure that you were all right.\u201d\n\n\u201cYeah, I\u2019m fine. Just sort of...spaced out, I guess. You get any good shots, Miss Nguyen?\u201d\n\nShe smiled nervously, clutching the camera that hung around her neck. \u201cWould you like to be in the next one?\u201d\n\n\u201cYes ma\u2019am, I would be glad to.\u201d \n\n\u201cExcellent, if you would stand against the wall...?\u201d\n\nHe did as he was told, leaning against the packed earthen wall of the bunker amidst the small pile of personal effects. She brought up the camera, there was a click and a flash, and she lowered the camera with a smile on her face. \u201cThank you very much, Mr. McKinley!\u201d\n\nNguyen Thanh was a bizarre sight indeed, at least in the context of her current company. Surrounded by over thirty gruff, tough and heavily-armed Americans-many of whom dwarfed her in size-her appearance was made all the more silly by the almost comically oversized US military-issue helmet and flak jacket she had been given before departing alongside the platoon when they\u2019d arrived in Quang Duc. As she had trudged alongside the men, helmet bobbing and camera bouncing, everyone in the platoon couldn\u2019t help but chuckle at the mere sight of her. Over the past few days, she\u2019d managed to endear herself to everyone through a combination of a friendly demeanor, not taking shit, and the willingness to listen to the men without condescending them or making them feel like monsters just for being in country. She understood that most of them were just average Joes who hadn\u2019t been given a choice, and every one of them appreciated her for it.\n\nMiss Nguyen was, in spite of her friendly nature, an ambitious, inquisitive and highly intelligent young woman who worked as a photojournalist for a magazine in Saigon, the name of which Scotty could not begin to pronounce. She\u2019d approached the brass before he and his company had been reassigned from working the Southern hamlets with the stated mission of following an American platoon, in order to assemble a visual display of what life in the field was really like for them. It was a dangerous proposition, and they\u2019d flat-out refused her request when she had initially approached them, but she\u2019d been relentless enough in pestering the higher-ups that they eventually pointed her to Ambrose. \n\nHe\u2019d been reluctant at first, but she\u2019d managed to convince him-eventually-that she was not looking to publicly disparage him or his men, but that she merely wanted to observe and document their day-to-day duties, and then present them to the people of South Vietnam in a purely objective context. While tensions had been at an all-time high since the slaughter at My Lai and the long-running nightmare of Tet, he\u2019d relented and allowed Miss Nguyen to accompany the platoon on the conditions that she not interfere with operations, that she obey Ambrose\u2019s orders to the letter, and that she show respect to the men themselves. She\u2019d agreed to all three stipulations, and was given the greenlight to follow the men on patrol, where she\u2019d become an honorary team member of sorts-even if she didn\u2019t carry a weapon. \n\nOkie and another Marine named Ortega poked their heads through the entrance to the living area just after Miss Nguyen had taken Scotty\u2019s picture. A shit-eating grin spread over Okie\u2019s mug as he soaked in the sight.\n\n\u201cYou catch Scotty with his pants down, Miss Nguyen?\u201d\n\n\u201cI doubt that anyone would be willing to pay me for those pictures, Mister Okumura,\u201d she said, returning his grin.\n\n\u201cAw, come on,\u201d said Ortega, chuckling, \u201cScotty\u2019s almost as fine a specimen as I am, don\u2019t bring him down, Miss N!\u201d\n\nOkie laughed and walked off. Ortega looked between them and said, \u201cHey McKinley, Ambrose wants everyone out. They\u2019re gonna come through and demolish this place soon.\u201d \n\n\u201cGot it. Let\u2019s head out, Miss Nguyen.\u201d\n\n\u201cYes, sir.\u201d She gave him a small, knowing smile. Even with the ridiculous helmet and flak jacket getup, she was honestly really pretty-which may have been part of why the guys liked having her around. And man, she was even nicer-looking when she smiled! Even Scotty, towering a foot over her diminutive, slender five-foot-two frame, sometimes found himself disarmed by her friendly nature and surprising ability to put others at ease. \n\nAs they made to leave the room, Scotty realized that he still had the photograph of the woman and the two children in his hand. Bizarrely, he almost slipped it into his pocket, but stopped himself at the last second, instead leaning down and setting the photograph on the ground next to the tattered garment it had been hiding underneath. Along with Miss Nguyen, they and several other Marines made for the gunners\u2019 nest, where they crawled out of the bunker one at a time. \n\nThey made their way back to the trail, Miss Nguyen alongside them, and readied themselves to continue their patrol. After all, Charlie wasn\u2019t going to stop himself; and the bunker, while certainly someone\u2019s problem, wasn\u2019t going to be theirs anymore. They were getting closer to action, Scotty could feel it-the time for Charlie to tighten the noose was getting close. He may have wanted to be back home more than anything else in the world, but he was here now and he wasn\u2019t about to let anyone-not even all the VC forces in Vietnam-fuck up his chances of making it back there later on down the line. \n\nIt was time to rock Charlie\u2019s fuckin\u2019 world. Safeties off, locked and loaded. Come on out, you fucks, because the Corps was giving out free tickets to Hell, and Scotty had plenty to spare. It\u2019s them or me, he thought grimly, and it\u2019s sure as shit not going to be me.\n\n*****\n\nThe scorching heat and almost palpable humidity that permeated the green hell may have made Scotty sweat like a pig, but he managed to push his discomfort aside, concentrating on the task at hand. This is what he was trained for, and an AK round to the gut would equate to a far greater level of discomfort than a torrent of sweat, after all. Rifle held in the low ready position, he thumbed over the safety again, just as a precautionary measure. Full auto, that was good; no fuckaround shit to be found on his end. He fought the urge to check the chamber again, as he knew that being distracted even for a second if Charlie were to pop up would be tantamount to a death sentence.\n\nThey\u2019d left the VC bunker an hour before, and were continuing their northward march on the same trail they\u2019d been trekking along since they\u2019d been choppered into the region at dawn. Still no sign of the enemy, though, other than occasional tracks in the dirt that all went back the way they had come. But none of the men were remotely at ease, as an ambush could be only a few feet away at any time. In the shadow of the mountains to the west and under the dark umbrella of the jungle canopy, though, Scotty could never be entirely sure which shadows and forms were those of plant life, rocks, or North Vietnamese troops with weapons ready to fire.\n\nThe trail continued to meander further west, until they were near the foot of the mountains themselves. Large stone faces peeked out from between creeper vines, moss and bushes, their flat and gray-black facades contrasting starkly against the vibrant greens and yellows. Scotty supposed that Cambodia wouldn\u2019t be far beyond this range, and he wondered if-\n\nAt that moment, a great many things began to happen in extremely quick succession, and while Scotty could not be entirely sure as to exactly what order they occurred in, this is how he believed it went:\n\n-Morgan, still on point, suddenly popped his M-16 into the fire ready position and loosed a burst of fire into a spot of jungle on the right side of the trail, thirty feet ahead. \n\n-Everyone immediately readied their weapons. Two men ahead of him, Scotty saw Walters slip his grenade launcher sling around his bicep and shoulder the weapon.\n\n-\u201cVC ON THE TRAIL! VC ON-\u201c were the only words out of Morgan\u2019s mouth before Scotty saw his head snap to the side, and the man fell to the ground. He\u2019d been hit-but almost immediately, he somehow got to his knees and dove for cover in the bushes on the left side of the trail. Scotty later assumed that whoever had fired the shot had had good aim, but not quite good enough-the round had likely glanced off of Morgan\u2019s helmet and simply rung his head like a bell, rather than ventilating it. \n\n-\u201cAMBUSH! TAKE COVER!\u201d Ambrose\u2019s words were barely audible as gunfire, both theirs and the enemy\u2019s, erupted from all around the Marines\u2019 position. In the ensuing chaos, Scotty dove behind a large tree on his right, where Walters, Okie and Trager were also tucked away. \n\n-\u201cI can\u2019t fucking see any of them!\u201d This shout came from Okie, who was yanking open the bipod on the M-60 while also peering around the right side of the tree and into the growth around them.\n\n-Walters, peering around the left side of the tree and scanning the trail, suddenly whipped up his M-79, sighted a target that Scotty couldn\u2019t see, and squeezed the trigger.\n\n-There was a very loud *THUMP*, followed by an explosion, probably around forty feet away. There was a brief lull in fire, as Scotty assumed that Walters\u2019 shot had likely incapacitated or killed several of the enemy, while probably disorienting several others. \n\n-With a roar of fury, Okie whipped around the tree, went prone on the ground and slammed the M-60\u2019s bipod firmly into the moist dirt. Still bellowing, he began to loose five to ten-round bursts of fire into the trees forward and across the trail, tearing into the bush and sending mulched plant matter everywhere.\n\n-With Okie, Trager and Walters\u2019 suppressing fire underway, the other men seemed to be able to return fire. It felt chaotic, the Marines firing into random spots twenty to fifty feet ahead; an act of violent probing that was meant to keep the enemy\u2019s heads down until they could be flushed out. \n\n-Scotty, seeing an opening, ducked around the right side of the tree and into the brush. Walters, having shouldered his grenade launcher, pulled the 1911 pistol on his hip out of its\u2019 holster and disengaged the safety, while silently following behind Scotty. \n\n-The fire had fully resumed, the shock from Walters\u2019 40mm greeting having worn off. Scotty and Walters stayed as low as they could, bullets tearing up the vegetation above and around them. \n\n-Suddenly, not ten feet ahead, Scotty saw movement behind a large plant. Instinctively, he brought up his weapon and fired three rounds.\n\n-A Viet Cong soldier tumbled out of the bush, his still-twitching hand loosely clutching an old French submachine gun; Scotty had seen one before, but couldn\u2019t remember what it was called.\n\n-Someone lobbed a grenade up the trail, where it landed in the bushes on the left side. There was another explosion, another lull in fire. Scotty and Walters hadn\u2019t been hit by any shrapnel, but the detonation had sent them reeling, Scotty\u2019s ears ringing.\n\n-\u201cMOVE UP! DON\u2019T LET \u2018EM PIN US!\u201d Scotty barely heard Ambrose\u2019s shouted direction between both the sporadic enemy fire and the staccato thundering of Okie\u2019s M-60. \n\n-Walters hooked a hand under Scotty\u2019s upper arm and pulled him forward. \u201cCome on man, we gotta move!\u201d He bellowed, as he popped off three shots with his pistol at a VC trooper who\u2019d moved into sight on the trail. Despite Walters having fired it one handed, a round found its\u2019 mark in the VC\u2019s shoulder, and the man stumbled back into the bushes, clutching his injured and bleeding limb.\n\n-Pulling free from Walters\u2019 grasp, Scotty stumbled through the foliage, his rifle ready as he moved to try and flank the enemy, wherever they were. They had to flush these assholes out or they\u2019d be sitting ducks. \n\n-\u201cSOMEONE TELL WATTERSON TO CALL IN MORTARS, WE\u2019RE GETTING-\u201c Another Marine, it sounded like...maybe Ortega? He\u2019d been further back, behind Walters, but had strayed too close to the trail-an enemy rifle round had struck him somewhere critical, killing him instantly, and he\u2019d fallen face-first into the wet earth. Scotty, only able to spare a brief look back, couldn\u2019t tell exactly who it had been.\n\n-Scotty and Walters both saw the tree ahead at the same time, and ducked behind it simultaneously. The others were still behind them, a few probably seeing to their fallen comrade.\n\n-Several rounds suddenly tore into the trunk of the tree and through the air to the left side. Scotty whipped around the right to return the favor-only to realize that the culprit was dug into a rocky outcropping fifty feet up the side of the mountain-he\u2019d seen Scotty and Walters take cover. Scotty ducked back behind the tree.\n\n-\u201cWalters, he\u2019s on the cliff, man! Sniper on the cliff!\u201d He had shouted. \n\n-Walters did not waste time. He peeked out from behind the right side of the tree for just a moment, then back in. Bullets still sporadically punching into the heavy trunk, the massive man broke open his grenade launcher and pulled out an empty casing. He then fished a fresh round out of his kit, slipping it into the breech and closing it up. \n\n-Then, a figure rushed through the foliage to the right a few feet from Scotty. It was a young woman in ragged black clothing, an old bolt-action rifle clutched in her hands. They saw each other at the same time, her eyes widening as they met his.\n\n-Unfortunately for the mystery woman, Scotty was quicker on the draw. Four rounds erupted from the muzzle of his M-16 in the blink of an eye. \n\n-Her left eye and part of her face imploded as she fell backwards, never having said a word. Her rifle fell into the dirt beside her, and she was still. \n\n-Before he could even begin to process what had just happened, a massive *THUMP* rang out beside him. Walters had found their mountainside antagonist and lobbed a 40mm rebuttal his way, obliterating the improvised perch and taking the shooter with it in a haze of rock, shrapnel and dust. \n\n-A rash of gunfire began to tear into their vicinity. Shit, Scotty thought, the rest of them know where we are, and they\u2019re pissed!\n\n-As Scotty and Walters huddled behind the tree, it began to rain hard. Pulling his helmet down to keep the water from getting into his eyes, he couldn\u2019t help but think of that old saying: \u2018it could be worse-it could be raining\u2019. Scotty wish he knew who\u2019d said that, because he\u2019d make \u2018em eat his fucking boot.\n\n-A pair of explosions nearby startled the two men; someone had lobbed more grenades. Scotty then heard Kanafka yelling \u201cGET SOME, YOU MOTHERFUCKERS!\u201d \n\n-Almost immediately after the shout, Kanafka, O\u2019Hara and three other Marines-including De Lena-charged by them. O\u2019Hara yelled back at Scotty, \u201cCome on, baby, we got work to do!\u201d\n\n-That did it. The shock from the twin grenades would wear off soon, so Scotty and Walters decided that the time for a counterattack was indeed very fucking nigh.\n\n\u201cOKIE, SUPPRESSING FIRE!\u201d Yelled Kanafka, down the trail. This was met with a barrage of copper-coated ordinance peppering the opposite side of the trail, courtesy of Okie\u2019s trusty M-60. Scotty saw a bloodied body tumble out of a bush and into the dirt, a quarter of its\u2019 head blown away.\n\n-\u201cGO, GO, GO!\u201d There was Ambrose again. It was on!\n\n-Now accompanied by the rest of the platoon, Scotty and Walters charged across the small path and into the vegetation-where Charlie was there to greet them.\n\n-Scotty nearly ran into two men, one holding a battered AK and the other a pistol of some kind. Scotty swung his rifle upwards and clipped the rifleman on the jaw with the stock, sending him sprawling.\n\n-The man with the pistol squeezed off a single round-which missed Scotty by several inches-before Kanafka bum rushed the unfortunate pistolero from the side and knocked him over, putting two rounds into the man\u2019s chest after the fact.\n\n-Scotty whipped around and shot the stunned rifleman, killing him.\n\n-Nearby, above the rain and gunfire, there came a loud *POP*, followed by a blinding flash of light. It quickly moved up and away from the fight, and Scotty looked up through the canopy to see it flying high into the sky. The fuckers had sent up a flare! They were calling for reinforcements!\n\n-As he fell prey to the fresh wave of terror surging through his body, he couldn\u2019t have possibly heard the soft \u2018thud\u2019 of a grenade landing about fifteen feet away. The shrapnel was mostly absorbed by the dense vegetation, but the blast staggered him. \n\n-Immediately following the detonation, something hit Scotty on the side of his head-and it hit him hard.\n\n-His entire world went black so quickly that he didn\u2019t even feel himself hit the ground.\n\n*****\n\nScraping and brief bouts of movement. \n\nThese were the first things that Scott McKinley sensed as he began to come around. Then came shouting and sporadic gunfire. A few screams of agony. Then came the droning static of the pounding rain.\n\nThen, he sensed the pair of hands under his arms and the quick, strained breathing of whoever was dragging him backwards. He immediately began to struggle; no one would render him a POW if he could help it.\n\n\u201cStop, stop, it\u2019s me!\u201d A female voice, one he immediately recognized as that of Nguyen Thanh. She pushed him into a seated position, and he then stumbled to his feet, still disoriented and in pain from the blow to his head. \n\n\u201cWhat-\u201c\n\n\u201cThere\u2019s no time!\u201d She hissed, grabbing him by the arms. \u201cMore of them have come, and we must hide!\u201d\n\n\u201cWe gotta-\u201c\n\n\u201cNo!\u201d She pointed to the mountainside. \u201cThere\u2019s a cave over there, we must hide or they\u2019ll find us! The others are gone, they fell back! I was hiding and saw you, I couldn\u2019t leave you to die! I won\u2019t!\u201d\n\nNot wanting to argue, he asked, \u201cwait, where\u2019s my-\u201c\n\n\u201cI have it! Now, let\u2019s go!\u201d He then saw that she did, in fact, have his M-16 slung across her shoulders. She grabbed his hand and pulled him forcefully toward the rocks. As they rushed toward the foot of the mountain, he saw what she had been referring to: an opening in the stone face, about seven or eight feet wide, that had been partially obscured by creeper vines. \n\n\u201cHere, here! Get inside, quickly!\u201d She whispered to him as the shouts in Vietnamese behind them seemed to grow louder and more numerous. It sounded as if she had been correct: reinforcements had arrived. It was now or never.\n\nThey plunged through the vines and into the cave mouth itself, delving about ten feet in before stopping. Scotty, having spared a glance further into its\u2019 depths, could tell that it continued on-and if the VC came calling, he just hoped that it was deep enough to hide them. Thanh pulled Scotty\u2019s M-16 over her head and handed it to him. He took it, slung it over his shoulder, and then rested his hands on her shoulders.\n\n\u201cThank you for saving me,\u201d he whispered.\n\n\u201cYou are welcome, Mr. McKinley, but we\u2019re not out of trouble yet. We can\u2019t stay here forever, what do we do?\u201d\n\n\u201cI think...well, uh...our only real option is to mount a last stand if they find this place. I\u2019ve got a couple grenades and four mags for my rifle.\u201d He secretly thought that this idea was ludicrous, but she nodded anyhow.\n\n\u201cThat makes sense,\u201d she whispered, \u201clet\u2019s-\u201c\n\nA sound from the cave entrance alerted them both. They turned to see a short, stocky Viet Cong trooper pointing an SKS at them. Scotty\u2019s blood ran cold, and he found that he suddenly couldn\u2019t move. The man said something to them in Vietnamese that Scotty couldn\u2019t understand, and he moved closer to them, now only four or five feet away. When neither of them responded to his inquiry, the man sneered, sighted Scotty with his rifle, and pulled the trigger.",
        "But instead of a roar, there echoed in the cave nothing more than a sharp, metallic \u2018click\u2019. His rifle had malfunctioned, and this brought Scotty\u2019s reflexes back into service.\n\nInstinctively, he shoved Thanh behind him and tried to raise his M-16. Charlie was quicker than Scotty, though: rather than cycle the action of his jammed rifle, he loosed a deafening cry, ducked down and launched himself forward. While he was easily six inches shorter than Scotty, the man was surprisingly strong, and he had leverage on his side. He struck Scotty square in the gut, knocking the wind out of him before Scotty could get a shot off. \n\nCharlie took down Scotty, Scotty (inadvertently) took down Thanh, and they all tumbled back several feet onto the stone floor of the cave. But, instead of landing on level ground, it sloped sharply downwards, and none of them could resist the inertia as they tumbled together. In the ensuing darkness and chaos, none of them saw the sudden drop-off coming, but they surely knew of it after the cave floor disappeared from beneath them, and they were falling, all three of them yelling and gasping for a solid three seconds until they were suddenly engulfed in warm, rushing water.\n\nScotty managed to make his way to the surface, where he began to try to fight the current, the force frequently throwing him against unseen rocks as he was carried toward an unknown destination. He frantically felt around for something to grab onto, something to slow his progress, but it was to no avail: the underground river was too swift and too powerful for him to get a solid grip on anything that he managed to touch.\n\nHe didn\u2019t know how long he\u2019d been traveling, but he knew that he was tiring-and that was dangerous. He couldn\u2019t afford to slip under; he\u2019d be a dead man if he did. Instead, he relaxed and let the water carry him where it would, taking him further down into the guts of the mountain. He had no idea where Thanh or the Viet Cong soldier were at this point; they could have both drowned, for all he knew. \n\nThen, there was light. It was ahead of him, a small spot that was growing larger by the second. As he approached it, the water slapping and tossing him around like a rag doll, he realized that he was heading toward a fucking waterfall. \n\nOh, you motherfucking, cock-knocking son of a bi-\n\nHe didn\u2019t even have time to finish the thought. He was thrown over the precipice, and found himself staring down a twenty-foot drop into a green body of water. He did manage to land feet-first, though, slicing into the jade-colored pool below like a scalpel into flesh. As he plunged into its\u2019 depths, his clothes, his equipment, and his rifle began to weigh him down, but he managed to force himself to the surface, where he noticed that he was only around thirty feet from the shore. He began to kick and paddle toward land, his limbs burning in protest. Just keep swimming, Scotty, you can do it, man, the Corps trained you to survive, you\u2019ve made it through tougher shit than this...\n\nHe\u2019d made it! He welcomed the cool, gritty texture of dirt and rock against his hands and body as he pulled himself ashore, gasping and soaked to the bone. Free of the pool\u2019s clutches, he rolled over onto his back and stared into the deep grey clouds, the rain spattering against every inch of his body. Exhaustion overtook him then, and he gave himself to it willingly, his last sight consisting solely of the angry grey sky that so often dominated this cruel and accursed land.\n\n*****\n\n\u201cMister McKinley, wa-\u201c\n\nThe voice faded back into obscurity. What? What now? Fuck, could no one just leave him-\n\n\u201cSCOTT!\u201d \n\nA sharp pain in his face brought him around, the darkness of slumber dissipating. Someone had not only woken him, but had fucking slapped him to boot! Someone was gonna pay for that shit, fuck this-\n\n\u201cPlease wake up! Don\u2019t be dead!\u201d\n\n\u201cI-fuckin\u2019 goddamn it, STOP!\u201d He barked the last word in his statement as he lashed out, causing Nguyen Thanh to fall back in surprise. Her eyes were wide, her face pallid. \n\n\u201cIt\u2019s me, I\u2019m sorry, I-I didn\u2019t know what else to do!\u201d\n\n\u201cS\u2019okay,\u201d he grumbled, sitting up and running his hands over his face, \u201cYou all right, Miss N? How long was I out?\u201d\n\n\u201cJust Thanh, please,\u201d she said, \u201cand I\u2019m all right, yes. I don\u2019t know exactly how long you were unconscious...maybe five minutes? I came over the fall and swam ashore on the opposite side. I was considering diving in to look for you when I saw you laying here.\u201d\n\n\u201cOkay,\u201d he said, rising unsteadily to his feet, \u201cWell, thanks for checking on me, I\u2019m glad you\u2019re all right. My head hurts like hell; might be a mild concussion, but hopefully not. So where the fuck are we?\u201d\n\nThanh stood to face him, the water making  the white tank top she wore underneath her flak jacket cling to her body like a second skin. Even with the jacket obscuring a goodly portion of her torso, he could still get a sense of the sensuous curves beneath it, and man, were they something to behold...\n\nHe shook his head, trying to snap himself out of it. The motion rattled his helmet, whereupon he reached up and undid the clasp that had (somehow) managed to keep the steel hull attached to his head throughout his wild ride. He removed it entirely and dropped to the ground, taking took his first real look around the area since he\u2019d arrived. \n\nEven with the rain coming down, the place was striking. The waterfall that had deposited them into the pool poured from a sheer cliff face that stretched over a hundred feet above their heads, where it melded into the side of the mountain that they\u2019d been on the other side of just a while ago. The pool itself had to be over sixty feet wide and was emerald green in hue, bordered by shores of deep grey stone and black sediment. It branched off into a few separate rivers: one that flowed west, and one that flowed south, each gurgling and rolling into the jungle to parts unknown, uncaring and unconcerned about the plight of the newcomers.  \n\nThe pool was bordered on the south side, where they were standing, by a vast bamboo patch. Large, thick stalks sprang from the soil, rising to form a dense canopy that peaked over twenty feet above them. Outside of this large thicket was a similar botanical pattern they\u2019d come to expect form this part of the world: colossal trees, broad-leafed plants, thick grasses and beautiful flowering plants that seemed to glow like Christmas lights against the backdrop of green. It seemed untouched, pristine, and completely serene; totally detached from the hellish reality of the world they\u2019d just left.\n\n\u201cMr. McKinley.\u201d A hand pulled lightly at his uniform sleeve.\n\n\u201cHuh?\u201d\n\n\u201cLook!\u201d A harder tug followed this exclamation, and he broke from soaking in this new frontier in order to follow her pointing hand. That hand directed him to a span of shoreline to their left, and he immediately spotted what had her so concerned. \n\n\u201cOh, fuck,\u201d he whispered, inaudible over the sound of the rain.\n\nThe figure clad in black Viet Cong dress floated in the shallow water, face up and unmoving. Whether he was unconscious or dead, Scotty could not say. \n\n\u201cDo you think he\u2019s alive?\u201d As if she\u2019d been reading his mind.\n\n\u201cI don\u2019t know,\u201d he said, \u201cand I don\u2019t particularly care. He tried to kill me, after all, and he would have either done the same to you, or taken you prisoner.\u201d \n\n\u201cWe should make sure either way,\u201d she said earnestly, \u201cbecause, if he is alive and he comes around, he may try to track us and make good on that threat.\u201d\n\nScotty couldn\u2019t argue with her logic. Thanh may have been merely a journalist with no soldiering experience, but that wasn\u2019t to say that she was dim-witted or that she didn\u2019t catch on quickly when it came to how shit worked out here. If she could stay hidden and alive during a VC ambush, she might be sharp enough to help get him back to his unit in one piece.\n\n\u201cStay behind me,\u201d he said, \u201cI\u2019ll check him over. If anything happens, run.\u201d\n\nShe looked at him nervously and nodded. Scotty looked around and found his M-16 where he\u2019d been pulled ashore, and picked it up. Brushing the dirt off of the pistol grip and receiver, he checked the chamber-still loaded. Shouldering the weapon, he moved quickly and quietly around the pool\u2019s edge, never taking his sights off of the man\u2019s form. He was now scraping lightly against the dirt of the shore, but he still hadn\u2019t moved. Nevertheless, Scotty played it safe, his finger resting on the trigger. \n\nThey were now only a few feet from Charlie, his eyes closed and his mouth hanging open just slightly. Scotty stopped, as did Thanh, his rifle's muzzle still pointed squarely at the torso of his unconscious target. He looked the man over, taking in his meager outfit: black short-sleeved shirt and matching pants, a worn shoulder sling with pouches that likely held spare ammunition, a battered steel canteen, and a pair of ratty old boots that could certainly use re-soling. His rifle was nowhere to be seen.\n\n\u201cThanh,\u201d he whispered, \u201ctake this and keep me covered. He wakes up and tries anything, shoot him.\u201d\n\n\u201cI-but, I\u2019m not-all right,\u201d she whispered back. He handed her his rifle, briefly took a moment to position it properly against her shoulder, and turned back to the unwanted third member of their party. He quietly unclasped his pistol holster, drew his 1911 and disengaged the safety. Holding it ready in his right hand, he ducked down by the man\u2019s side and gently placed a finger on his neck. There was a pulse, but it was faint. So he\u2019d survived after all...that\u2019s just great, he thought, now what? \n\nHe stood and took a step back, sidearm still trained on the unconscious enemy soldier. He looked around, and his eyes settled on the bamboo grove they\u2019d just come from. He glanced back at Thanh and whispered, \u201cKeep him covered. He moves, shoot him; I\u2019ll be back.\u201d She nodded and mouthed \u201churry!\u201d\n\nThe rain spattering against his helmet, he jogged back to the bamboo thicket and looked for the thinnest piece he could find. He quickly spotted a young stalk only an inch in diameter, unsheathed his combat knife, and after some considerable effort, hacked it off around three inches from the ground. He hurried back to the duo, a six-foot length of fairly soft bamboo in hand. \n\n\u201cWhat will you do with that?\u201d \n\n\u201cYou\u2019ll see,\u201d he muttered.\n\nStarting at the cut end of the stalk, he began to shave away a strip of the bamboo shaft\u2019s exterior. Once he\u2019d cut off approximately four feet worth of material, he pulled the blade out and then severed the piece. He stowed his knife and began to bend and tug on the strip of bamboo. It was flexible enough, and it did not snap; it was certainly as tough as it needed to be, and it would do the job sufficiently.\n\nHolding the strip in his mouth, Thanh still keeping the M-16 trained on the VC soldier, Scotty gently slipped his hands under the unconscious man\u2019s shoulders and slowly began to pull him out of the water. His heartbeat went wild, expecting the man to whip around in his arms, for the fight to begin all over again. But he remained limp and still as Scotty gently lay him onto the soil of the shore. Carefully, he turned the man over onto his stomach. \n\nThanh began to whisper, \u201cMr. McKinley, what-\u201c\n\nHe hissed at her. \u201cShh!\u201d He pulled the man\u2019s hands behind his back. Holding them together with one of his own, he took the bamboo strip in the other and slipped it under the prisoner\u2019s wrists. He looped it around them three times and then tied a crude but solid knot; one that would not be easily escaped. The only ways he\u2019d get out of it were if it were either undone or severed entirely. The guy wasn\u2019t going anywhere, at least for the time being.\n\nScotty quickly stood and took his rifle back from Thanh. He nodded at her and said, \u201cThanks, Thanh.\u201d\n\n\u201cYou are welcome, Mr. McKinley.\u201d\n\n\u201cJust Scotty, thanks. Mr. McKinley is my father.\u201d\n\nShe stared at him, bemused, before breaking out into soft laughter. It was a sweet, almost musical sound that calmed him just slightly. He smiled and laughed a little himself, the stress of their current predicament lessening ever so slightly. \n\n\u201cScotty!\u201d Thanh gasped, looking back at their prone captive. He turned to look at the man immediately, who was beginning to stir, his legs and torso shifting. When he tried to move his arms and found that he couldn\u2019t, he began to thrash and fight against his bonds. He turned his head and saw his two captors, then ceased struggling entirely.\n\nHis eyes, wide as saucers, then narrowed to slits as he opened his mouth and began to holler and shout, resuming his struggle. Scotty thought fast, looking around and seeing a small tree to his left. He looked back at Charlie-who was still shouting what were certain to be highly colorful insults against him, Thanh and everyone that they both held dear-and stalked over to him. Charlie\u2019s shouting reached a fever pitch as Scotty reached down and pulled him up by the scruff of his worn shirt. He dragged his captive over to the tree with seemingly little effort and threw him against its' trunk. \n\nThe man cried out in pain and surprise, and followed up with a yelp as Scotty grabbed him by the shirt and twisted the unfortunate soul around to face him. There was a dull metallic ringing as Scotty drew his combat knife from its' sheath again; he clutched the front of Charlie's shirt in his left fist and rested the tip of the considerable large and extremely sharp length of steel against the man's cheek. The struggling and yelling died out, the knife's cold presence against Charlie\u2019s skin informing him as to exactly what was at stake. His eyes were wide and brimming with terror, his breathing quick and ragged as his glance alternated between Scotty's face and his pig-sticker.\n\nScotty, for his part, had had enough. He needed to put the fear of God into this son of a bitch here and now. No games, no bullshit; Charlie needed to know who was boss. And if he refused to learn, well...\n\n\"Thanh,\" he said quietly, only just audible over the sound of the rain, \"you ever do any translating?\"\n\n\"Formally? No, but I can manage.\" She said from behind. Without glancing back, his gaze never leaving Charlie's, he spoke again.\n\n\"Ask him what his name is.\"\n\nShe spoke in Vietnamese to the man sitting against the tree. He looked between her and Scotty, his mind likely racing. His chest rising and falling rapidly, he swallowed and looked at Scotty's knife again, still resting menacingly on his face.\n\n\"You heard me, Charlie. Name!\" \n\nHe looked back at Scotty for a moment and stammered out a brief sentence.\n\n\"He claims that his name is Vinh,\" Thanh said, \"and he begs you not to kill him.\"\n\n\"Tell him that I'll consider it if he behaves himself.\" She translated; Vinh glanced at the knife, then back into his captor's eyes, and finally nodded in agreement.\n\n\"Ask him if he's familiar with this area, if he recognizes any of this.\" She spoke to Vinh again, and after she finished he spoke hurriedly back to her. \n\n\"He claims that he has never been here, and that no one he knows has either. He assumes that we are somewhere close to the Cambodian border, if not past it already.\"\n\n\"Shit. Well, ask him-\" He stopped, his eyes having traveled to Vinh's waist, where he noticed a worn black holster he hadn't seen beforehand. His hand flashed out and grabbed it as Vinh gasped in surprise. Scotty moved the knife to Vinh's neck as he lifted the holster's flap and pulled out a pistol. He realized immediately, however, that it was not just a pistol-it was an American-made, American military-issue 1911, the very same make and model that Scotty carried on his own hip in his own holster. He stood up, sheathing his knife as he looked over the weapon, pulling back the slide just slightly to find a round in the chamber. It was far dirtier than his own 1911 (he\u2019d obviously not been familiar with its\u2019 maintenance routine), but it was still unmistakably a U.S. soldier\u2019s piece. And this fucker had been carrying it, probably using it against Scotty's own countrymen. \n\nHis lips pursed, a storm even deadlier than the one passing overhead brewing in his eyes as he looked back at Vinh. Scotty growled, \"ask him where he got this.\"\n\nA nervous tremor now detectable in her voice, Thanh repeated the question in Vietnamese. Vinh looked confused and terrified, but did not answer. Scotty, unsatisfied with this response (or the lack thereof), suddenly raised the 1911, cocked the hammer, and pointed it at the prisoner's head. \n\n\"Tell him that if he doesn't answer my question, he's a dead man. I am not fuckin' around; I will end him here and now if he refuses.\"\n\nShe spoke rapidly to the bound man. Vinh recoiled against the tree and began to talk quickly, his voice shaking audibly as he did so.\n\n\"He...he claims that he took it off of a dead GI months ago,\" Thanh said, \"and that he has not fired it at anyone since acquiring it...or so he says. He does not understand why you are so angry, that it is merely a weapon.\"\n\nScotty leaned down and wrapped his left hand around Vinh's throat, slamming his head into the tree trunk, while the other jammed the barrel of the gun into his temple.\n\n\"Listen, you motherfucker,\" he said, his voice saturated with rage and his expression a rictus of fury, \"I'm gonna pull the mag out of this thing. If I find a single round's been fired, the next one goes between your fuckin' eyes. Got that?\"\n\nThanh translated, and Vinh immediately began to babble at Scotty, who released the terrified insurgent and stood up again. He pressed the release button on the pistol, whereupon the magazine dropped out of the grip and into Scotty's empty left hand. He held it up and looked at the witness holes on its\u2019 side. Brass shone dully through each of them-it was full. He glanced down at Vinh, still feeling as hateful and unsympathetic as ever, but also ever so slightly placated. This man was his enemy; nothing had fundamentally changed in that regard. But, from the look of things, he was telling the truth. Unless...\n\nScotty swooped down again and started to search Vinh\u2019s pockets and ammo pouches. The man started babbling and shouting again, Scotty ignoring him every step of the way. Eventually, he found what he was looking for: a pair of spare 1911 magazines-both full to capacity. He stood up again, stared at the magazines, as if pondering something important. Vinh had gone silent again, his eyes never leaving the gun in Scotty\u2019s hand. Scotty glanced down at his captive and spoke again.\n\n\u201cThanh, we need to get our bearings. I\u2019m going to find a tree tall enough so that I can climb up and get a look at the surrounding area. I need you to keep an eye on our guest here while I do that.\u201d\n\nHe glanced back at the photojournalist, who nodded. \u201cI would ask that you leave the rifle with me,\u201d she said. \n\n\u201cI have a better idea.\u201d\n\nHe walked over to her and placed Vinh\u2019s 1911 into her right hand, then slipped the extra magazines into the left pocket of her soaked flak jacket.\n\n\u201cSafety is off, and you\u2019ve got a round in the chamber. Seven rounds per mag, don\u2019t waste \u2018em. Aim for the center of mass if you have to use it.\u201d\n\n\u201cI...thank you.\u201d She said quietly.\n\n\u201cDon\u2019t thank me,\u201d he said, \u201cpotentially having to shoot someone isn\u2019t an opportunity you should be grateful for.\u201d She stared after him as he walked away to search for a vantage point, his words echoing through her mind.\n\nThe rain continued to pour with no end in sight.\n\n*****\n\n\u201cA valley?\u201d\n\n\u201cYeah. The other side is probably a few miles away. The mountains are impassable in both directions from what I can tell, at least without a ton of mountaineering equipment. I saw the north end in the distance as well; doesn\u2019t appear to be a pass there either. I\u2019m not sure what\u2019s to the south, my binoculars either aren\u2019t powerful enough or it\u2019s just too far away.\u201d\n\n\u201cSo we make our way south?\u201d\n\n\u201cThat appears to be our only real option.\u201d",
        "\u201cI may be trapped in an unknown valley between my country and Cambodia, but at least my companion and I are armed,\u201d Nguyen Thanh smirked, holding up her captured handgun, \u201cI am not looking forward to the possibility of meeting a tiger or a bear, however; I wonder if I would even be able to stop it with something like this.\u201d\n\nScotty leaned his head back against the rock wall of the rocky alcove, his helmet making a \u2018thunk\u2019 sound, and chuckled heartily.  \n\nHe\u2019d found a tall enough tree with low branches after leaving Thanh and Vinh by the pool, and had managed to shimmy his way up to the top. He hadn\u2019t been lying: they were indeed in a valley with sheer cliffsides that stretched over a hundred feet up on both sides-an insurmountable obstacle to him and his newfound party. The south had been too obscured by haze and rain, but he hoped that there would be some way-any way-to make their way out of the area in that direction. Otherwise...well, they\u2019d cross that bridge when they came to it.\n\nHe\u2019d told Thanh all of this only after returning and insisting that they find shelter before making any major decisions on what to do next. The rain was still pouring, and they\u2019d be facing trench foot or crotch rot if they didn\u2019t get somewhere drier. In the cliff between the bamboo grove and the pool they\u2019d discovered a small alcove, just large enough to fit Scotty, Thanh and their unwelcome guest. After pulling Vinh to his feet, Scotty had made him walk in front of him while they trudged toward their newfound shelter.\n\n\u201cWe need to build a fire, our clothes must be dried out,\u201d Thanh said, \u201cbut is there anything we can burn? With all the rain...\u201d \n\n\u201cNope. Everything\u2019ll be too wet.\u201d \n\n\u201cWonderful.\u201d\n\nIt was dark now, but the rain was at least slackening off. Scotty looked at his watch: half past eight. \n\n\u201cWe\u2019ll stay here tonight and head south in the morning,\u201d he said, \u201cit\u2019s too dark to make any real progress. I\u2019ll stay on watch for a few hours, you mind taking it after that?\u201d \n\n\u201cYes. Try not to stay awake too long, Scotty. You need rest.\u201d\n\n\u201cFine, tell, what\u2019s his name, Vinh? Yeah, tell him to rest up.\u201d\n\nShe did, and the man glared at Scotty before clumsily rolling over onto his side, facing away from them. Fucking asshole, Scotty thought bitterly, it\u2019s his fault we\u2019re here to begin with, what fucking right does he have to be pissed off? \n\n\u201cI am glad that you are here with me, Scotty. You seem like a good and dependable man. And thank you for protecting me back in the cave.\u201d Thanh\u2019s quiet voice floated over from the rear of the alcove.\n\n\u201cWell, you saved my life back at the ambush. Now we just need to stick together, and we may get out of this place.\u201d\n\n\u201cI believe that we will do just that. Also, I must ask...what will we do with him?\u201d\n\nScotty glanced over at the huddled form of the Viet Cong soldier known as Vinh. He did not move, did not give any indication that he cared about what they were saying.\n\n\u201cI guess we\u2019ll take him with us. It\u2019s too dangerous to let him go here, and now that I think about it, I don\u2019t really feel...comfortable, I guess is the word, with the idea of just killing and dumping him. Sure, he\u2019s part of the reason we\u2019re here, but it\u2019s not his fault; he\u2019s a soldier and he was doing his duty, as bizarre as it may sound coming from me. I suppose we\u2019ll hand him over to the brass, if we make it back in one piece.\u201d\n\n\u201c\u2018When\u2019,\u201d she corrected him sharply, \u201c\u2018when\u2019 we make it back.\u201d\n\n\u201cYeah, sorry. Get some sleep, Thanh.\u201d\n\nShe smiled at him, her dark brown eyes twinkling at him in the moonlight that poured through the dissipating clouds. Using her damp flak jacket as a makeshift pillow, she curled up and lay still. Scotty, clutching his M-16 in his lap, turned his attention to the darkened jungle, the sound of the nearby waterfall unfortunately hampering his ability to hear anything else that might be skulking around. Just stay sharp and don\u2019t slack off, Scotty, he told himself. That\u2019s when people die, remember? And if they die, they\u2019ll die because of you. \n\nHis silent vigil commenced, and he waited.\n\n*****\n\nIt was almost midnight when the first scream shattered the relative quiet like a brick through a glass coffee table.\n\nScotty, whose eyes had been growing steadily heavier in spite of his best efforts to keep them open, suddenly found himself wide awake. He stood and held his rifle at the ready, pointing it into the darkness just beyond the border of their shelter. Had he just imagined that? What the fuck? \n\nThen it came again, clear as day this time. It rang across the valley, seeming to fill the very air itself. \n\n\u201cWhat was that?!\u201d Thanh\u2019s whisper startled him. He turned to answer, but the hellish scream came again, cutting him off. He couldn\u2019t tell where it was coming from, but he was certain that it was fairly close; probably within a quarter of a mile. It came again, holy shit it was loud! He ducked back into the little alcove and huddled next to Thanh, who was against the wall, silent and unmoving. Vinh had awoken as well and was whispering rapidly to himself, his voice dripping with terror. Scotty didn\u2019t need a translator to know that he was probably praying.\n\nThe sound came again, an unholy call from another world that started as a high-pitched scream, but deepened into a drawn-out howl that sent chills down the spines of the trio. After this, they heard in the distance the distinct sound of cracking, splintering wood, followed by a colossal crash. Another howl, then a deep, throaty roar that echoed throughout the valley. Whatever was out there sounded like it was knocking over entire trees now.\n\nUtter horror coursed through Scotty\u2019s veins, poisoning him from within. Thanh reached out and clung to him, the cool touch of her pistol resting against his shoulder. Her breathing was quick, and her free hand clenching his flak jacket tightly. He pulled her into him, and she did not resist. As the screaming, howling and roaring continued, they held one another, both unashamed in their fear of whatever stalked the land beyond their meager shelter. \n\nAnother bout of cracking and splintering, followed by another loud crash, but this time it sounded as if it were coming from further away. The howling scream came again, and yes, it did seem to be moving away from them. There was a brief moment of silence, followed by a brief, barking roar. This repeated thrice more and was concluded with a low, almost mournful howl that was almost certainly coming from somewhere much further away than it had been. \n\nThere was no sound other than that of the nearby waterfall now. Scotty was still afraid to move, as was Thanh. Vinh was also completely still, curled into a ball on the stone floor of the alcove. Scotty could not see his face, but he was positive that it was screwed up into an expression of pure terror.\n\n\u201cScotty, please get some sleep. I will take the next watch.\u201d Thanh\u2019s whisper was barely audible over the waterfall. \n\n\u201cWon\u2019t be able to.\u201d\n\n\u201cYou need to try, for both our sakes...please? I understand that you\u2019re afraid, I am as well, but you won\u2019t be able to function without rest.\u201d\n\nHe looked over at the small woman next to him. Her light brown skin, her button nose, her dark hair, which was normally in a stylish bob, was now disheveled and sweaty. All of it drew him to her eyes, which were as wide as dinner plates. He hoped she wouldn\u2019t see the terror in his own; he was a Marine, after all, and he was supposed to be a fearless fighting machine. But basic biological response to overwhelming stimuli tended to override even the most thorough training, and as Scotty lay down on the cool stone, he accepted the fact that he was very, very afraid. He would not let it control him and dictate his actions, however-he was still a soldier; he had a duty to get back to his platoon and to protect Miss Nguyen every step of the way. He tried to remind himself that he was not weak or helpless, but as he lay down, jacket under his head, he found himself wondering just how true that would turn out to be. \n\n*****\n\nThe crunch of river rocks, sediment and sand under their boots sounded nearly as loud as machine gun fire as the trio of Scotty, Thanh and Vinh made its\u2019 way down the southbound river\u2019s shoreline. The sun was out in full force again, without a cloud in the sky to impede it. Its\u2019 aggressive heat rapidly drying their soaked clothing, a small comfort for which they were all silently glad to have been granted. They could see clearly, they were somewhat rested, and they\u2019d munched on some of Scotty\u2019s rations (even Vinh, who Scotty had included begrudgingly in their meager feast).\n\nVinh, hands still bound behind his back, was in the lead. He never spoke and only occasionally looked back at his captors, but he almost constantly kept his attention focused on the tree lines that flanked both sides of the river. His eyes were always wide and nearly unblinking, and he often had to shake his head in order to move his dark hair out of his eyes. \n\nThanh and Scotty brought up the rear, only a few feet behind the Viet Cong trooper. Scotty had resolved to always keep his rifle in hand with the safety off, not wanting to have to waste a second in order to bring it into action, while Thanh\u2019s newly-acquired pistol and magazines were tucked firmly into her belt. He\u2019d gone over the basics of its\u2019 use before they\u2019d left the alcove by the pool that morning, but had refused any target practice, reminding her that \u201cif we run into whatever we heard last night out in the jungle, we may need every round we have\u201d. \n\nThe jungle itself was merciless not just because of its\u2019 inhospitable nature, but due to its\u2019 propensity for illusion and trickery. Every leaf, frond, branch and trunk could form the face of some twisted, grinning psychopath or terrible beast at the right angle and in the proper lighting. Every breeze that caused even the slightest movement of the flora seemed to resemble the stalking movements of some unknown lunatic. Scotty felt that he should have been used to this feeling by now; he\u2019d spent months wandering through near-impenetrable forest, any stretch of which could be hidden a gang of militant, bloodthirsty enemies. So why was he so terrified now, and why did he feel as if he were desperately out of his element?\n\n\u201cWhat do you think it was? An animal of some kind, I\u2019m sure, but I have never heard an animal call like that before.\u201d\n\n\u201cI have no idea,\u201d Scotty replied, \u201cand I\u2019m not so sure that I want to find out. It sounded big enough to knock over trees, and that\u2019s more than enough to keep me from wanting to get a look at it.\u201d\n\n\u201cI agree. I am no zoologist, and I have no desire to study-\u201c\n\nVinh stopped suddenly, and Scotty nearly plowed into him. Before he could chastise the man, however, he looked ahead and saw what he was sure was the reason for Vinh\u2019s action. All three fell silent at the sight before them.\n\nStretching across the shallow, gurgling river was a felled tree, approximately forty feet in length. It had broken off near the base, the bright yellow wood within contrasting sharply against the deep brown bark. The break was crude and mangled, indicating that a truly violent and powerful force had caused it; globs of sap were hardening throughout the sharp and mangled spires. Around twenty feet along the trunk was a series of deep, parallel gashes that had to five to eight inches deep apiece. They stood out like flesh wounds on a human torso.\n\nNo, Scotty thought, his blood chilling even in the immense heat, those can\u2019t be what I think they are. There is no fucking way that those could be claw marks. I refuse to believe that, he thought crazily, nothing alive is big and powerful enough to snap a tree that size off at the fucking base. \n\nVinh turned his head to look at Thanh, and he spoke briefly in a hushed, terrified voice.\n\n\u201cHe says we must go, and go quickly. He says that there is something terrible here and that we cannot linger,\u201d Thanh whispered. \n\n\u201cNo fuckin\u2019 shit, come on,\u201d he hissed back, \u201cand let\u2019s pick up the pace. We don\u2019t know how long this valley is, and we need to leave before the locals know we\u2019re here.\u201d\n\nThanh did not reply. Vinh was silent. Scotty put on a brave face in order to hide his sheer terror, which was not helped by the sight of odd indentations in the shore: extremely large prints that appeared vaguely lizard-like, each digit ending in a round, deep puncture that signified a set of extremely large nails-ones that made his Ka-Bar look like a pocket knife. As they went around the broken stump of the felled tree, he saw that they were pressed deeply into the sand and sediment all over the immediate area, where they seemed to  turn back into the water, and he assumed that their owner had stormed back into the jungle after mangling the tree. \n\nHe didn\u2019t know whether or not Thanh or Vinh had noticed the tracks, but he decided against saying anything about it anyway. Everyone was terrified enough already, and there was no reason to pile onto that. Instead, they pushed forward, trudging their way down along the river, its\u2019 current and the calls of a few birds the only sounds to hear.\n\nTen minutes later, Thanh stopped and grabbed Scotty\u2019s jacket sleeve. He stumbled a little, then stopped. \n\n\u201cThanh, what-\u201c\n\n\u201cLook,\u201d she whispered, pointing to the opposite bank. \n\nHe peered across the twenty-foot span of water to where her finger directed him, and he saw the new omen that the valley had seen fit to present them with, splayed out in a vile, grotesque display of unhinged lunacy upon the dull brown sand.\n\nIt appeared to be a deer carcass-or, rather, half of one. Only the front half of the animal was present, while the back was missing entirely. The offal spilled sloppily from the ripped abdomen, one forelimb twisted so far off its\u2019 axis that it stuck almost straight up in the air. Blood saturated the ground around the primary wound, and even from a distance Scotty could see the cloud of flies that had gathered around it to feast. Where the hind section of the animal was now, they had no idea.\n\nVinh spoke quietly to his captors. Thanh\u2019s head snapped over to look at him, and she listened.\n\n\u201cHe says we must leave now, that it is unwise to linger around a recent kill. He says that whatever did this will likely be back for the rest of the animal.\u201d\n\n\u201cI know,\u201d Scotty replied quietly, \u201cI used to hunt as a kid. Let\u2019s move.\u201d\n\nIn silence, they moved further south. The dead deer faded into the distance behind them, the flies that swarmed around it far too concerned with their meal to notice the departure.\n\n*****\n\n\u201cWhy did you join the Marines, Scotty?\u201d \n\nScotty snapped out of his paranoid near-fugue state and looked down at the earnest, curious, and very pretty face of the photojournalist walking next to him. He apparently hadn\u2019t answered quickly enough, and she continued her line of questioning.\n\n\u201cI\u2019m sure it is a common question, one you receive often, but my curiosity is overwhelming.\u201d\n\n\u201cI was drafted,\u201d he said simply, \u201cI come from a...not very wealthy family, I guess you could say. Not like they could have paid off the recruiters or politicians in order to get me out of it, you know? Also my dad served in the Second World War; he was in the Navy. He essentially bullied me into going to boot camp, into not dodging.\u201d\n\n\u201cHe sounds as if he cares more about upholding a legacy than whether or not you live or die,\u201d she said incredulously. \n\n\u201cYou\u2019re right, I think,\u201d he said quietly, \u201cbut I was the one who folded. I could have run to Canada, but...I didn\u2019t. I gave in, now I\u2019m here risking my ass for nothing. It\u2019s my fault, really.\u201d\n\nShe was quiet for a moment before Scotty chuckled. She looked at him quizzically, and, noticing her confused expression, said \u201cyou know what\u2019s funny?\u201d\n\n\u201cWhat?\u201d She asked.\n\n\u201cHe wasn\u2019t even a soldier; not really, anyway.\u201d\n\n\u201cWho wasn\u2019t a soldier?\u201d\n\n\u201cMy dad. He was a cook; he worked in a battleship mess hall during the war. The only time he fired a rifle was in basic training. But he wouldn\u2019t hear any talk of not doing my duty; I would either be a man and fight Charlie or he\u2019d disown me. All so he could live vicariously through his son and pretend to be part of the lineage of American heroes, a group of regular G.I. Joes.\u201d\n\n\u201cAnd so you ended up here,\u201d she mused.\n\n\u201cI did. Now I\u2019m stomping through some hidden valley of death in the middle of nowhere with a photojournalist and an enemy soldier trying to avoid something that\u2019s ripping up trees and cutting the fucking wildlife to pieces.\u201d\n\n\u201cThat is somewhat hurtful, Scotty. I haven\u2019t held you back or caused any problems for us, I don\u2019t think.\u201d\n\n\u201cYou haven\u2019t,\u201d he sighed, \u201cI should clarify that I don\u2019t regret being here with you personally. You might not be a soldier, but you listen, you\u2019re sharp, and you\u2019ve already saved my life. If I were going to be trapped out here with a civvie, you\u2019d be at the top of the list.\u201d\n\nShe smiled and looked out at the river. \u201cThen I suppose it\u2019s fortunate that you already have me.\u201d Scotty could have sworn that he saw a hint of a blush on her cheeks.\n\n\u201cWhat about you? When did you learn English, and why did you choose this career path?\u201d\n\n\u201cThe short answer is that I learned as a child,\u201d she said, \u201cmy father was a diplomat and performed extensive work in the United States embassy, both in Saigon and in the U.S. itself, and he felt it would be a useful skill for me to possess. I have also been to the States several times, and I greatly enjoyed it; in fact, I hope to relocate there someday. As for my career? It was after my father was assassinated in his office by a Northern spy several years ago. I was told that they considered him a traitor to the Vietnamese people, and that he was aiding the enemy.\u201d\n\n\u201cJesus,\u201d Scotty said quietly.\n\n\u201cYes. I chose this path because that was when the conflict became...I suppose you could say, real...? For me? The war took my father away from me, even though he was not a soldier. The infiltrator shot him dead with a pistol merely because of his work. That was when I knew that I needed to show the world the reality of the war, and what it takes away from us all. I wanted to show them the truth of it, not just propaganda like Thieu, Giap and your President. That it\u2019s cruel, devastating and complicated, not glorious.\u201d\n\n\u201cSounds noble,\u201d Scotty said, thoroughly impressed by this explanation.\n\n\u201cI did not do it to be noble, but I appreciate the sentiment,\u201d she said, looking out at the river, \u201cI did it because I felt that I needed to\u201d\n\n\u201cMakes you nobler-and smarter-than me, at any rate,\u201d he said, \u201cI\u2019m only here because it was either this or risk imprisonment and disownment.\u201d\n\n\u201cMm. I disagree, seeing as I\u2019m standing right here beside you in this so-called valley of death,\u201d she said, \u201chow smart does that make me?\u201d\n\nScotty began to laugh softy. Even though she was still looking at the river, he could sense the sly smile on her face.\n\n*****\n\n\u201cIt\u2019s human, isn\u2019t it?\u201d\n\n\u201cYeah, it\u2019s human. You see what\u2019s left of the uniform, right?\u201d\n\n\u201cI do. I simply do not want to believe it, Scotty.\u201d\n\nFrom beside them, Vinh muttered in Vietnamese, then suddenly spat on the pile of bones and decayed cloth on the cave floor.\n\n\u201cHe says it is one of the French dogs from before your time. One of the occupational troops from the colonial days, when it was still called French Indochina in the West.\u201d\n\n\u201cGuess we aren\u2019t the first ones to find this place,\u201d Scotty mumbled, \u201cdoesn\u2019t bode too well for us, does it?\u201d\n\n\u201cI will not be like him, and none of us will if we keep our heads,\u201d Thanh said seriously, \u201cno more talk like that, Scotty.\u201d \n\n\u201cYes ma\u2019am,\u201d he said, smiling and giving her a mock salute. She rolled her eyes.\n\n\u201cI suppose we\u2019ll stay here tonight, then? I am not terribly comfortable sleeping next to a corpse, but better that than exposed to both the elements and...whatever is stalking around this place.\u201d",
        "\u201cYep.\u201d\n\nThree hours earlier, the vegetation around the river had become so dense as to be impassable, and they\u2019d been forced to cut inland. The brush had stabbed and groped at them, trying to trip them up like an organic obstacle course, until it eventually gave way to another bamboo forest like that which they\u2019d seen at the waterfall, though this one seemed much larger. Stalks that easily topped thirty feet rose above their heads, lording over their peasant forms like silent green kings of this lush domain.\n\nThe silence had been oppressive in that forest, Scotty looking in every direction for signs of movement. The bamboo somehow felt more sinister than the jungle; he swore he saw something duck behind a thicket more than once, but he had had no desire to investigate further. He had been sure that it was just his mind playing tricks on him...or so he\u2019d hoped. \n\nAfter a time, he\u2019d seen the tall, dark shape of a rocky outcropping just ahead of them, a stone island in a sea of bamboo. As they approached it and began to make to make their way around it, Scotty saw the opening in the rock first. He made a hissing sound, and both Thanh and Vinh halted. They both stared at him as he prodded his M-16 toward the gap. He looked at Thanh, and nodded to her hip, where her pistol was nestled in under her belt. With some slight slight difficulty, she had removed it and held it in the ready position he\u2019d taught her when they\u2019d woken up that morning. \n\nScotty had ducked in first, but had been greeted only by a dark, empty span approximately six feet across. Upon looking to the floor, however, the grim reminder of its\u2019 former inhabitant had made itself known.\n\n\u201cWhat the hell was he doing here? Alone, no less?\u201d \n\n\u201cI assume that he found his way here accidentally, like we did,\u201d Thanh said, \u201cIt seems that he was not so fortunate in his escape attempt.\u201d\n\n\u201cClearly.\u201d Scotty nudged the torso with his rifle muzzle, observing the tattered remains of the uniform, the bones creaking and clattering as he shifted them. He noticed that, on the ground behind the remains, lay the badly corroded remains of a very old bolt-action rifle, and what looked like a pack. \n\n\u201cLet\u2019s take a break,\u201d Scotty said, looking at his watch, \u201cit\u2019s almost four, and we\u2019ve been at it since eight.\u201d\n\nThanh translated for Vinh, who merely shrugged and, with some difficulty, sat down, shifting his bound arms behind him. He and Scotty exchanged glances, Vinh\u2019s eyes radiating fear and intense hatred. Scotty only stared, until Vinh scowled and looked over at the entrance. Scotty and Thanh sat next to one another across from their hapless captive, Scotty next to the remains of their unnamed former Frenchman. \n\nAfter passing Thanh his canteen (which he\u2019d diligently kept filled at the river), he reached over the remains and carefully grasped the half-rotted pack. Even so, it partially fell apart as he lifted it, spilling its\u2019 contents into the dirt. Among them, Scotty spotted a small, bound notebook with a pencil bound to its\u2019 spine with a length of string. He leaned over the body and grabbed it, but it seemed to be made of sturdier stuff and did not fall apart. He carefully pulled off the string that held it closed and the pencil attached (which did snap), and opened it up. He began to thumb through its\u2019 pages.\n\n\u201cWhat is it?\u201d Thanh asked him.\n\n\u201cI think it\u2019s a journal,\u201d he replied, \u201cbut it\u2019s all in French. I can\u2019t read any of it.\u201d \n\nShe held out a hand. \u201cMay I? I\u2019m fairly fluent; not an expert by any means, but I took quite a few French classes in school and earned very high marks. I could try.\u201d\n\nHe shrugged and handed her the small leather-bound volume. She skipped to the last few pages that had been written in, and began to peruse them. \n\n\u201cYou were correct, it is indeed a journal,\u201d she said, \u201cbut his writing is not exactly neat, much less entirely legible. You\u2019ll have to forgive me if I can\u2019t understand everything.\u201d \n\n\u201cWell, shit.\u201d\n\n\u201cNo, it\u2019s fine, here\u2019s his last entry. I wish he\u2019d put down the dates when he wrote them, I would be fascinated to know when he had lived...all right, here: \u2018Mama, I have been trapped in this place for a week, I long to be in Nice again with you and Genevieve, but now I am afraid that I will never see you again\u2019...this is mostly lamenting and waxing poetic, it seems as if we had an aspiring writer on our hands...oh, here we are!\u201d\n\n\u201cWhat is it?\u201d \n\n\u201cNothing good.\u201d\n\n\u201cWell, let\u2019s hear it anyway.\u201d Scotty muttered.\n\n\u201cAll right then. \u2018I cannot tell where it lurks, it sounds as if it is all around me...I have been trapped in this accursed cave within this damned valley for over a day and yet it...persists...?\u2019\u201d Thanh screwed up her face in frustration, \u201clike I said, his penmanship is less than stellar...ah! \u2018This creature is monolithic; as tall as the bamboo that surrounds me, its\u2019 arms long, powerful and bearing claws that could gut a whale\u2019...I cannot read half of this shit, I swear...\u2019\u201d\n\nShe paused, then continued, \u201c\u2018I hear it outside, moving through the bamboo, as it waits for me to step outside, but I will not let it...\u2019 hmm, I can\u2019t read this part, maybe that...all right, \u2018I am certain to die here, Mama, and if I am ever found, my superiors must know about the terrible, terrible threat that lurks here. They must know to never go near it...who is to say what it is; possibly a demon, some lost creature of the pre...prehistoric era...?\u2019\u201d she stammered, \u201c\u2018but it does not matter now...I will die soon...I have no water or rations left...please inform my superiors that I did not desert, that I am no coward...I want to see the Viet Minh crushed as they do\u2019...more chicken scratch, hmm...all right, here\u2019s the last of it: \u2018please, Mama, know that I love you and Genevieve with all my heart, and that you both mean the world to me. Goodbye, and may you live long, full lives without me.\u2019\u201d\n\nThanh stared for a moment at this page, then slowly closed the volume, setting it on the ground in front of her. Scotty looked at her face, which had gone pale.\n\n\u201cScotty...we need to get out of this valley as soon as possible.\u201d\n\n\u201cI know,\u201d he said quietly, \u201cI have no idea-\u201c\n\n*SNAP*\n\nAll three of them jolted up as the sound reverberated throughout the cave. It had come from outside, but how close or far away the source was, Scotty could not say.\n\n\u201cWhat was that?\u201d \n\nAs if to answer Thanh\u2019s question, a loud, brief roar-only half a second in duration-split the air like an ax into timber. More snapping and popping, then the unmistakable sound of something absolutely massive twisting its\u2019 way through the bamboo forest. There were the scraping sounds of a huge form pushing aside the heavy stalks like mere blades of grass, along with the low, soft thudding of colossal digits impacting the ground, slowly but very surely. Whatever was stalking through the bamboo was obviously unafraid of being heard; Scotty wondered briefly if it knew of their presence and was trying to intimidate them, if it wanted them to know that it could snatch them up at any time.\n\nWell, he thought, if that had been this thing\u2019s goal...mission accomplished. He was thoroughly intimidated, even more so than he had been at the sight of the deer or the tree that afternoon.\n\nThen, the same scream-into-howl from the night before filled his ears, causing him to flinch and back up against the cave wall, trying to melt into it so that he might not be seen, should some huge, terrible eye peer into the opening. Thanh burrowed into his side, her breathing quick and harsh. Vinh, who had been sitting near the entrance of the small cave, had scuttled backwards on his legs and rear end, pushing himself as far back as he could from the sound and whatever was making it. \n\nThe cacophony continued unabated: the roars, the screaming, the snapping of bamboo shafts, the thunderous impacts of a monstrous set of limbs upon the forest floor...and the howling. The terrible, terrible howling that put even the biggest and toughest wolves alive to shame, that howling snaked its' way into the mind and planted that primordial fear of the unknown deep in the core of one\u2019s being. \n\nThe trio in the small cave did not move a muscle or speak a word as their unseen antagonist tore its\u2019 way through the growth outside. In truth, a fear of Scotty\u2019s had been confirmed: it was not an exclusively nocturnal creature. He\u2019d been hoping that it would be so that they could travel by day, when they could move more quickly-and, hopefully, stay ahead of it altogether. That hope had been dashed like a glass bottle against concrete. The danger had now doubled, and their chances of escaping unseen and unharmed had likely diminished significantly. \n\nThirty minutes later, much like the night before, the sounds of the unseen creature\u2019s activity began to fade. It had decided to move on again, leaving them in a limbo comprised of terror and uncertainty. As the sounds of its\u2019 departure faded away into the distance, Scotty sat up, Thanh shifting away from him. He then stood, and crept to the mouth of the cave, peering outside into the late afternoon light that poured through the bamboo. After a moment, he turned, and walked back to Vinh, whom he crouched down in front of, looking him directly in the eye.\n\n\u201cThanh, I need you to do some more translating for me.\u201d\n\n\u201cAll right.\u201d\n\n\u201cAsk him if he heard what just happened, and if he understands the danger that we are in.\u201d\n\nShe spoke in Vietnamese to the soldier on the ground, who, after she was done speaking, looked back at Scotty with confusion and terror in his eyes. He gulped, and, without speaking, nodded slowly.\n\n\u201cAsk him if he understands that, if he were on his own, he would not stand a chance of getting out of this place alive, much like our French pal here.\u201d\n\nShe repeated this in his native language, and again, he only looked back at Scotty and nodded slowly. Scotty, in reply, pulled his Ka-Bar from its\u2019 sheathe and held it in front of Vinh\u2019s face, the man\u2019s eyes widening as he tried to wriggle away from its\u2019 edge. \n\n\u201cAsk him if he understands that he needs us, that there\u2019s strength in numbers.\u201d\n\nAfter Vinh confirmed that he did indeed understand this concept, Scotty followed it with, \u201cand ask him if he realizes that either of us could kill him at any time if he tries anything.\u201d\n\nThis he understood as well. Scotty placed one hand onto Vinh\u2019s shoulder and pushed him to the ground, onto his stomach. Vinh began to protest, and Thanh looked like she was about to do the same, but both went silent as Scotty brought the knife down and cut the bonds on Vinh\u2019s wrists. Scotty stood and stepped back, knife still in hand, as Vinh sat up and began to rub his reddened wrists. He looked up in disbelief at Scotty, who spoke again.\n\n\u201cTell him to behave, or I will kill him without a second thought.\u201d\n\nThanh repeated this to Vinh, and he looked back into Scotty\u2019s eyes, nodding twice. Still watching him like a hawk, Scotty sheathed the knife and sat back down next to Thanh. \n\n\"We'll stay here 'til morning. It's not safe out there right now, who knows if it's still skulking around the area? We don't know what it's doing, whether or not it actually knows we're here-but I'm not willing to take that chance right now. I get the feeling that it's tracking us; to what end I don't know. Maybe it's still hungry after the deer, maybe it's trying to drive us out of its' territory, or maybe it wants a fucking autograph, I have no fucking clue. All I know is that it sounds really big, very mean and angrier than a caged tiger.\" He grabbed his rifle, which he'd leaned against the rock wall of the cave, and laid it across his lap. \"I'm not willing to take the chance. We'll leave at first light and head south, the plan hasn't changed. Thanh, tell our friend Vinh here if he cooperates we'll let him go if we get out of here.\"\n\n\"Didn't you say that you would-\"\n\n\"Yeah, I know what I said, and I've changed my mind. Look, if he's tied up the whole time it'll slow him-and us-down. He also might get an infection in one of his wrists, and that'll make things go even slower. If we have to run he won't be able to move as quickly, either.\"\n\n\"What if he betrays us?\" She hissed, his eyes still on them, uncomprehending.\n\n\"We'll have to make sure that that doesn't happen. He stays in front the entire time, he never leaves your sight or mine, period. He runs or attacks, shoot him. No warning, no second chances. You remember the stuff I showed you this morning, how to grip and aim that gun?\"\n\n\"I do.\"\n\n\"Good, very good. Now, fill him in, please. I'll split up some of my rations; we don't have much, so we might need to try hunting soon...if that thing's left us with any game animals, that is.\"\n\n\"Thank you, Scotty. I will.\"\n\n*****\nIt was dark now. The rations had been split up, allowing a meager portion for each of the three travelers, and they had all eaten their fill, such as it was. A mild breeze had picked up outside, and it whispered through the peaks of the bamboo, providing a gentle and relaxing ambience that melded with the occasional calls of birds and other small mammals. Shit, Scotty thought to himself, it almost makes you forget that we're trapped and probably in mortal danger out here. \n\n\"Hey Thanh,\" Scotty said quietly.\n\n\"Yes?\" \n\n\"Could you ask Vinh how he came to join the VC? I want to know what his deal is.\"\n\n\"Really? Why?\"\n\n\"Maybe I caught some of your journalistic curiosity, I don't know.\"\n\nShe chuckled and looked across the dimly-lit cave at their companion, and spoke to him in soft Vietnamese. Scotty couldn't read the intricacies of his expression in this environment, but he assumed that it held a mixture of surprise, suspicion and curiosity. He replied to Thanh, who listened intently. When he was finished speaking, she turned to Scotty and relayed the newly-acquired information to him.\n\n\"He claims that he joined two years ago, in order to fight off the foreign invaders of his country much like his father had done while fighting the French with the Viet Minh. He even said that his father was present at Dien Bien Phu.\"\n\n\"That big fight back against the French back in '52?\"\n\n\"1954, to be precise. He says that he desires only to see his country reunited and for his people to no longer be under the thumb of foreign oppressors.\" \n\nScotty pondered this for a moment. Before he could respond, Vinh spoke up without being directly addressed; one of the few times he'd done so since they'd tied him up. He seemed to be inquiring about something. \n\n\"He...he wants me to ask you several questions. He hopes that you might be able to provide him with answers.\" \n\n\"I...all right, I suppose so.\" \n\n\"His sister was in the same unit as he was, and he is worried because he did not see her after your platoon fell back during the ambush. He wants to know whether or not you saw a young woman with dark hair while you were fighting his comrades.\"\n\nA vision of a surprised, wide-eyed young woman stumbling out of the bushes with a beat-up Russian bolt-action in her dirty hands seemed to swim before his eyes. Then the roar of his M-16 echoing in his ears, the woman's face caving in before she collapsed to the black, damp earth...\n\nHe couldn't not tell the man. He'd taken too long to answer; he had to tell Vinh the truth-or, most of it, anyway.\n\n\"I may have seen her,\" he said, \"unless there was another woman fighting there alongside him.\"\n\nShe asked him in Vietnamese. He confirmed in kind that there had not been. Shit.\n\n\"She...she was dead,\" Scotty said slowly, \"I saw her body while we were trying to get across the trail.\"\n\nThanh hesitated before giving Vinh the answer that he most certainly dreaded receiving. Upon hearing it, Scotty could almost feel the man's face fall. Vinh took a deep breath, paused, and began to weep quietly. It was the kind of weeping that came from the very bottom of the heart, the kind that only the recently bereaved could possibly understand. It proved to be a deeply humanizing moment: Scotty had only ever seen these people as savage, remorseless killers who wanted to destroy the South, and kill Americans with impunity while they were at it. To witness his enemy mourn the loss of a loved one so openly, though, to see one of these crazy fuckers showing such genuine emotion...it was new, and in a way also deeply uncomfortable for him as a United States serviceman, to say the least. He'd always lived in the moment, just trying to keep himself and his squad mates alive, that he'd never really had the time-or the need-to sit back and look at the matter from a more human perspective, as opposed to that of a soldier's and a survivor's.\n\nAs Vinh wept so bitterly, Scotty considered that while he'd certainly felt disillusioned and lied to since he'd been in country, he'd never felt truly guilty for his actions or the actions of his country before-not really, anyway. Now, however, the feeling had dropped onto his shoulders like a one-ton sack of concrete. He'd taken this man's loved one from him-and worse, he'd omitted the fact that he had been directly responsible for her death. It was a necessary obfuscation, to be sure-Vinh would almost certainly try to kill him if he knew-but that didn't make him feel any better.\n\nThanh had been right: this war only served to take away the loved ones of all involved, whether they be locals or not. How many friends-people he cared about-would he end up having to weep for, like Vinh was at that very moment? How much loss would he be forced to endure before he took his walking papers, got shipped home and was dumped off like last week's trash? Would he even make it back alive to begin with? Nothing was certain, and this uncertainty troubled him very deeply. \n\nThe indifference of it all was enough to drive a man to madness. As Thanh took first watch and he laid down to rest a while, Scotty's mind simmered with rage and frustration, emotionally self-flagellating over his perceived lack of effort in changing how any of it had played out. He was no protector, he thought, only a killing tool no different than any rifle, bomb or blade. And he hated himself more than he\u2019d ever hated Charlie in that moment.\n\n*****\n\nThe morning light seeped into the cave the way blood seeps from a wound. As it began to leak through the holes in the canopy of the bamboo forest, the three figures that had slipped out of the cave in the outcropping moved quickly and quietly through the large green stalks, bearing south towards what would hopefully be a way out.\n\nVinh took point (or, rather, had been \u2018encouraged\u2019 to do so via the business end of the M-16), Thanh took the middle, and Scotty brought up the rear. As they moved, Scotty\u2019s paranoia began to get the better of him, as the bamboo forest seemed particularly conducive to seeing things that weren\u2019t there. The low light didn\u2019t help either: every shadow danced and jumped in such a way that they all looked like enemies. \n\nThe silence, though, was still what he hated the most. Every footstep sounded as if were as loud as a tree being split in half, every breath seemed as if it could be heard fifty feet away. They had no idea if their unseen antagonist was lying in wat somewhere, hidden in some cluster or behind some rock. Was it purely an ambush predator? Did it prefer to stalk its\u2019 prey, to observe it before striking from out of nowhere? Could it camouflage? What were its\u2019 tactics? Did it hunt purely for food, or did it kill for sport? They knew almost nothing about this thing, and that worried all three of them. They didn\u2019t even know if it had actually tracked them the night before, or if it had merely been close by when they\u2019d heard it stalking around-it could have been a fluke, for all they knew. \n\nThe bamboo forest finally petered out after almost an hour of trekking, and they were back in the familiar embrace of the jungle. The massive trees and thick undergrowth impeded their every move as fronds, branches and leaves poking and prodding them at every step. The visibility was even poorer than it had been in the bamboo, the thick canopy occasionally rendering the jungle floor almost as dark as night. The danger that this condition posed culminated in Vinh nearly being attacked by an extremely large king cobra that had been curled up on the root of a large tree that they\u2019d been about to jump over. He\u2019d been spared only through Thanh\u2019s quick wits-she\u2019d seen it rear up and flare its\u2019 hood, while Vinh had been checking his footing and hadn\u2019t noticed it yet. She\u2019d reached out and roughly pulled him back, causing him to fall on his ass. She\u2019d spoken quickly in Vietnamese, pointing out the reptilian predator. He had scrambled away quickly, the cobra still making its\u2019 threatening display. It had leered at them the whole time they had cut around it.",
        "They stopped to rest not long after, Scotty checking his small compass. They were still headed more or less south, that was good. \n\n\u201cI\u2019ll need to find another tree to climb soon,\u201d Scotty said quietly, sitting down on a root next to Thanh, Vinh leaning against an opposing tree in an attempt to catch his breath. \"If there's a chance we're coming to the end of this place, we need to know.\"\n\n\"I agree,\" Thanh said, shedding her flak jacket in order to cool down, \"if you'll leave me your rifle when you do, I would appreciate it.\"\n\n\"Sure. Are you okay?\"\n\n\"Am I okay?\" She asked, looking at him quizzically. \n\n\"Yeah. I'm trying to check on you, you know?\"\n\n\"I could be better,\" she said, \"though that is putting it mildly.\"\n\nHe unclasped his canteen, still around half full, and took a swig, handing it to her afterwards. \"That makes two of us. I feel like I should be used to being hunted by now, but...\"\n\n\"It makes sense. We have no idea what is out here, where it is, or what it wants,\" she said, throwing the canteen to Vinh after taking a drink herself. He looked mildly surprised at the offer, and warily took a sip, as if he'd expected it to be poisoned. He finished, and took a few steps toward Scotty. Scotty tensed up, and perhaps Vinh saw this, because he stopped dead and leaned forward, offering the canteen gingerly to the Marine. Scotty hesitated for half a beat, then took it back. Vinh stepped back, the shadow of both fear and relief upon his face.\n\n\"Let's get moving again,\" Scotty said, standing up again, \"I want to get somewhere with better lighting.\"\n\nThey trudged further south, heading further into the unknown than any of them were comfortable with being.\n\n*****\n\n\"Are you all right, Scotty? I saw you nearly fall up there; I would have asked then, but I didn't want to distract you, and-\"\n\n\"I'm okay,\" he said breathlessly as he bounded over to Thanh, \"you know, I'm starting to get the feeling that you're worried about me!\"\n\nThanh glared at Scotty as they started walking again. \"Of course I am. I need your shooting expertise!\"\n\n\"Yeah, sure, that's all,\" Scotty said, grinning as he took his rifle back from her, \"you sure you don't want to take me out for a nice candlelit dinner when we\u2019re back in Saigon?\" He laughed as Thanh punched him on the shoulder.\n\n\"I'd heard that American men are all lecherous pigs,\" she said coolly, \"and I hope that you are not about to prove it to me.\"\n\n\"It was just a joke,\" he said in a mock sheepish tone. She rolled her eyes, which only encouraged him further.\n\n\"Hey now, you never said 'no'...\" He laughed again as she rained punches on his shoulder and upper arm as Vinh looked back at them in confusion, then shook his head as his gaze returned forward. \n\n\"Okay, okay, stop! Stop!\" She relented, still glaring. \n\n\"Look, I didn't see the end of the valley when I was up in the tree, but it does look like it's canting to the west. The river is about half a mile in the same direction; we should head there and stock up on water.\"\n\n\"How much food do we have?\"\n\n\"Not much. We'll have to try hunting soon, which I'm concerned about because I only have so much ammo.\"\n\n\"Well, I suppose we'll have to try anyway,\" she said, looking up through the canopy at the slivers of sky that peeked through its' dense cover. Then, Vinh stopped ahead of them. Seeing this, his companions did the same. Scotty could see that he was looking at something to his right down on the ground. He walked over, reached down and came up with something in his hands, turning it over to rub the dirt off of its' face. Scotty thought it looked like a piece of metal.\n\n\"Hey, what is-\"\n\nThanh was way ahead of him. She questioned him, and he turned toward them, showing his find. It was, indeed, a piece of dark, corroded metal. He handed it to Thanh, who turned it over in her hands. Scotty could see that it was warped and had jagged edges. \n\n\"Huh.\" \n\n\"What do you suppose it came from?\" She asked. \n\n\"No idea, but we better keep moving. We're burnin\u2019 daylight.\"\n\nShe set the piece of metal on the ground, and they continued west towards the river. The jungle began to thin out a little as they walked, the lighting becoming brighter as they did so. This greater level of illumination would prove fortuitous, as Scotty would not have seen the surprise to his left without it.\n\n\u201cHoly fuckin\u2019 shit!\u201d\n\n\u201cWhat?!\u201d\n\nThe dark hunk of twisted, mangled and burnt-out metal contrasted sharply with the bright greens and yellows of the jungle around it, and it only took one glance in the general direction that Scotty was looking in for both Thanh and Vinh to see what he was seeing. \n\nIt was a downed chopper, and upon closer inspection it was clear to Scotty that it was an American Huey, as he recognized the overall outline and what remained of the rocket pods mounted on the sides. It lay on its\u2019 right side, the front of the vehicle completely mangled and blown out; it had obviously been hit by some form of anti-aircraft fire before coming down. \n\n\u201cIs that...is that an American chopper?\u201d Thanh asked quietly.\n\n\u201cIt is. I\u2019m gonna check it out, there might be something useful.\u201d\n\nHe approached the wreck, working his way toward the cockpit. He reached it, and peered inside. As expected, it was blackened and overgrown with creeper vines. Upon closer inspection, however, he saw that the skeletal remains of what had likely been a co-pilot were still strapped into the second seat, though the skull had detached from the spinal column and lay elsewhere. There was no sign of any other crew; perhaps they\u2019d gotten out. Scotty briefly wondered how far they\u2019d gotten if so.\n\nA quick search of the cabin revealed nothing at first. There were the rusted, locked-up remains of an M-60 still clinging to its\u2019 door mount, but it was clearly beyond useless to them. He didn\u2019t see any weapons or ammunition, and was about to give up until, on a lark, he decided to peek behind the seats in the back. Something had been tucked away there, something made of cloth. Gingerly, he reached in and grasped the foreign object, pulling it out slowly. \n\nVinh and Thanh approached him as he looked it over: it was a GI\u2019s rucksack. The two looked on as he opened the rotting canvas bag (tearing it badly in the process), and looking inside. \n\n\u201cHoly shit,\u201d he whispered.\n\n\u201cWhat? What is it?!\u201d\n\n\u201cJackpot.\u201d \n\nHe pulled out a flat, green object made out of metal. It was broad with a slight outward-facing curvature to its\u2019 face, with the phrase \u2018FRONT TOWARD ENEMY\u2019 emblazoned in bold lettering upon the wide metal panel. Vinh\u2019s eyes widened at the sight of it-he and his comrades had clearly encountered them before, Scotty thought.\n\n\u201cClaymores,\u201d Scotty said, looking back into the bag, \u201ctwo of \u2018em. Got a detonator and plenty of wire here, too. Good, that\u2019s real, real good. Good shit, yeah,\u201d he trailed off, muttering as he continued to dig through its' contents. \n\n\u201cAnything else of use?\u201d\n\nNo. Some old clothes and other junk. I don\u2019t think we\u2019ll find anything else here, though. My guess is that at least one other person got out of here alive and took any weapons other than the mounted machine gun; probably either couldn\u2019t carry it or didn\u2019t know how to detach the thing. Guess they forgot about this, though.\u201d \n\n\u201cWill they work?\u201d\n\n\u201cShould. Don\u2019t look corroded, and the contact points on the detonator look okay.\u201d \n\n\u201dExcellent. We should head to the river then, I\u2019m thirsty.\u201d  \n\n*****\n\nThe soft gurgle of the river was a welcome change of pace from the oppressive silence and occasional screeching of birds in the jungle. The brush proved not to be too dense on this stretch, so they were able to walk alongside the water.\n\n\u201cI\u2019m not sure we should be here,\u201d Scotty said, eyes darting around the treeline on the opposite shore. \n\n\"Why not?\"\n\n\"Because I remembered a hunting lesson about how prey animals are most often killed while drinking from bodies of water. That's when they're most vulnerable.\"\n\n\"Well, we're paying attention, so I think that we'll be fine.\"\n\n\"We're exposed, Thanh,\" Scotty shot back, \"and we ought to cut back into the jungle soon. It might be hiding anywhere, and we wouldn't know until it snagged one of us.\"\n\nThanh considered this, then spoke Vinh's name. He turned to look at her while they walked, and she questioned him for a moment. A dark look came over his face, and he clearly went into deep thought. After a brief time, he spoke again. \n\n\"He says that you are correct, and that we should not assume that the creature would not ambush us while we walk the shores. He suggests that we cross the river as well, in an attempt to disguise our scent.\"\n\n\"That doesn't actually work, I know that for a fact.\"\n\n\"Well then let's keep going until we can't walk along the river any further.\"\n\n\"Fine with me,\" Scotty said.\n\nAs exposed as he felt, Scotty could not help but find the river beautiful. Flanked by mighty trees that had likely been untouched for centuries, lush plants with all manner of leaves and fronds that glistened with moisture and life, and the soft, rumbling voice of the river combined with the calls of insistent wildlife providing background ambience to it all, he couldn't help but feel that he had stepped into the pages of some tropical edition of National Geographic.\n\n\"It is beautiful, I have to admit,\" he said quietly.\n\n\"Yes,\" Thanh replied, looking up to the blue sky and the blazing sun above, \"it makes me wish I had not lost my camera at the waterfall.\"\n\n\"You did? Oh. I'm...I'm sorry.\"\n\nShe smiled. \"Don't be. Right now I'm more concerned with survival than taking proper photographs. My job is not my current priority...though my editor will likely be furious at me for losing it; that camera belonged to the company. They'll likely make me replace it.\"\n\n\"Fuck 'em. They give you any grief, and they can deal with me.\"\n\nShe laughed, placed her hands over her heart and fluttered her eyelashes exaggeratedly. \"My hero!\"\n\nHe smiled and rolled his eyes. Was it just him, or was there some tension building between them? He'd never been great with women (he was normally too awkward and shy), but something about Thanh made her easy to talk to and even flirt with. He once again found himself stealing quick glances at her body as they walked-she'd been carrying her flak jacket over her shoulder for about a day now, clad in only the white tank top she'd kept underneath. The moisture in the air combined with her sweat caused the thin fabric cling to her torso, accentuating the gentle curvature beneath. Her flat tummy, likely maintained by years of walking and hiking around to get the perfect shot that formed up into the curvature of her breasts, the slightest sign of her nipples poking through the white fabric of her shirt, her hips that just would not quit...it caused a stirring within him, one that he hadn't felt for a while since he'd been in country-at least, before she'd showed up after his unit's redeployment. \n\nPush it down, Scotty, you gotta focus, man, he thought, you can't think about the beauty next to you...I mean holy shit, she really was a beauty, just look at those beautiful brown eyes, and that skin looks so soft and supple...\n\nHe shook his head rapidly, his helmet clunking around on his head as he did so. Thanh looked at him in confusion. \"Are you all right?\"\n\n\"Uh...yeah. Yeah, I'm okay.\"\n\n\"No, you aren't.\"\n\nShe was a whip-smart and perceptive little lady, that was for sure. He was positive she'd seen him look at her; she wasn't fucking blind, and he didn't think he was that clever. Hopefully it didn't cause any problems, because that was the last thing that he-or, more accurately, they-needed right now. \n\n\"Have I upset you, Scotty?\"\n\nHe snapped back to reality. \"Huh?\"\n\n\"Did I make you uncomfortable earlier? I was only teasing you.\"\n\n\"No, Thanh, you've never made me angry or uncomfortable. You're too likable.\"\n\nShe smiled, looking up at the trees on the opposite bank, then spoke again. \"Do you think that I'm attractive, Scotty? Be honest; I'll know if you're lying. Women always do.\"\n\nOh, fuck. It was as if she'd read his mind.\n\n\"Well? I'm waiting.\" She wasn't smiling anymore. Her expression was neutral, there was no hint of what she was thinking. He'd been cornered.\n\n\"You got me.\"\n\n\"I'll take that as a 'yes', then.\"\n\n\"Okay, fine, yes.\"\n\nShe nodded, her expression still neutral. \"I appreciate you being honest with me.\"\n\n\"Uh...all right?\"\n\nShe did not respond. Scotty, his heart going wild, continued walking along the shore of the river, in a state of uncertainty and total confusion. What had just happened? Had he been tricked, was she fucking with him? He almost said something about it, but ultimately decided against it; he was embarrassed enough as is. Best not push her, he thought to himself.\n\nThe morning gave way to early afternoon, and they continued to traverse the shore of the unnamed river. While Scotty still didn't like the exposure, he had to admit that it was faster than trudging through the jungle. On the other hand, it did leave them directly exposed to the brutally hot sun, and soon enough Scotty found himself stripping off his own flak jacket to avoid its' punishing glare. He found himself oddly self-conscious at that moment: while he wasn\u2019t anywhere near a tub of lard, he wasn\u2019t exactly on the level of someone like Walters, either. Scotty had always been on the lean side, and he found himself wishing that he were more of a physical specimen. But did Thanh even find that attractive? What DID she find attractive, anyway? He had no idea; her frank and impassive acknowledgment of how he saw her was driving him crazy now, and he-\n\nVinh, in the lead as always, stumbled back as soon as he saw the leopard off to his left. It was the first sign that something was wrong, even before Scotty and Thanh saw the animal for themselves. Vinh stumbled back as it loped out into the open, eyes wide and teeth flashing. It had been lounging in the shade until the three interlopers had come along, but now it looked ready to fight for its\u2019 meager slice of territory.\n\nScotty swung up and shouldered his M-16, and he heard Thanh disengage the safety on the pistol she\u2019d carried for the past two days. Vinh could only take shelter behind his captors. The carnivore edged forward, a deep, rumbling growl emanating from its\u2019 throat, clearly issuing a challenge to the intruders before it. \n\n\u201cBack up. Thanh, tell him!\u201d\n\nA hurried, whispered sentence in Vietnamese from Thanh, and no response from Vinh. \n\n\u201cKeep backing up. I don\u2019t wanna tangle with him,\u201d Scotty hissed. \n\nToo late. The leopard yowled, and then it charged. Scotty managed to squeeze off two rounds, both hitting its\u2019 left flank. It tumbled head over heels, spitting and howling in pain, Scotty managing to duck out of its\u2019 path as he did so. Vinh dove to the side and out of its\u2019 way, and it came up in time to lock onto Thanh. Scotty saw her eyes widen in terror as it snarled at her, teeth flashing like daggers, and there were two more earsplitting \u2018boom\u2019s as she fired on the animal. The first round went wide, and the other clipped off most of its\u2019 left ear. The leopard screamed in rage and charged.\n\nScotty felt as if he\u2019d unleashed Hell\u2019s fire itself as his M-16 roared, empty brass flying in a high arc. The copper-jacketed ordinance ripped into the beast\u2019s torso, legs and neck, puffs of bloody mist immediately marking their entrance. The inertia of the predator\u2019s pounce carried it into Thanh\u2019s torso, knocking her to the ground and pinning her underneath it. Immediately, she jammed the barrel of the 1911 into its\u2019 chest and emptied the magazine-five rounds of .45 caliber ball roared from its\u2019 muzzle and found their new home in the body of the leopard. Scotty had been correct: she caught on quick. She may survive yet, he thought to himself.\n\nScotty charged forward, the bolt of his rifle having racked back empty. As the yowling animal entered its\u2019 death throes, thrashing and raging on top of Thanh, he planted his Marine-issue size 13 into its\u2019 shoulder with every ounce of strength he could muster. It slumped off off of her, and she scrambled away from it as quickly as she could. \n\nLater, Scotty would freely admit that his rage and adrenaline had overriden his common sense as his rifle dropped from his hands and he pulled his knife with one fluid motion of his right arm. With a roar, he came down and drove the blade into the thing\u2019s neck. Its\u2019 eyes bulged almost comically, and it let out a gurgling scream as its\u2019 legs and tail thrashed. Scotty growled as he twisted the Ka-Bar like a corkscrew, until the animal finally went still. He pulled the weapon from the out and fell back, covered in blood, gasping and panting as he stared at the gruesome scene he\u2019d helped to create. \n\nThen, the crashing and bellowing came from the west. It sounded as if it was less than half a mile from the river.\n\n\u201cFuck, GO!\u201d Scotty grabbed his rifle from the riverbank and stuffed his bloodsoaked knife back into its\u2019 sheathe. Thanh and Vinh had been glancing around in terror, and it took Scotty grabbing each of them by the upper arm in turn to get them moving. \n\n\u201cInto the jungle, go, go! Don\u2019t stop!\u201d\n\nAnd so they charged together back into the deep, dark heart of the forest, its\u2019 green arms enveloping them as old friends as they ran blindly away from the scene of their fight with the leopard. They could hear the creature in the near distance, howling and screaming as it cut its\u2019 way through the trees toward where they had been; it would only be a matter of time before it tracked them from there, Scotty thought. They had a head start, sure, but this thing sounded fast-far faster than they were, and they needed to get somewhere where they could lay low for a while-and pray that it did not find them.\n\nIn the meantime, they ran. It seemed like a suitable alternative to standing up against whatever was lumbering through the jungle towards where they had come from.\n\n*****\n\n\"We had no choice, Scotty. That leopard would have killed any one of us if we hadn't fired on it.\"\n\n\"Still doesn't make me feel any better. We let it know right where we were; I wanted to make it out of here quickly and quietly, but it looks like that might not be possible if we run into any more predators...or if we have to hunt.\"\n\nA quick, muttered sentence in Vietnamese from a few feet away. \"He says we must move now, that it may find us if we stay.\"\n\n\"Jesus, we just ran nearly a mile and I'm still trying to bandage these cuts. I don't want fucking gangrene here.\"\n\nScotty and Thanh were trying not to burn through all of the disinfectant and bandages in the Marine's first-aid kit. They both bore numerous cuts and slashes from their encounter with the big cat, and they were trying to patch them as quickly as they could in order to avoid infection. Out here, in this environment, even a small slice could be a death sentence without immediate attention. \n\n\"I agree with him.\"\n\n\"What?!\"\n\n\"Scotty, please!\" She took his large hand in her smaller ones, \"We should leave now, who knows how far off-course we are and how much time we will lose because of this?\"\n\nAgain, her logic was unassailable. He relented, and after some quick patching that was cruder than he'd have liked, they checked Scotty's compass and headed due south. As they traveled, the howling rose above all other sounds, raising the hairs on their necks and chilling their very bones. If it had somehow not known that they were here before, then it most certainly did now. The clock was officially ticking.\n\n\u201cAll right, fine. Let me tie this off and we\u2019ll be outta here. Again, I don\u2019t need an infection, not now.\u201d\n\nIt went without saying, but the river was likely not going to be an option anymore. If this thing was smart, it would know to keep an eye on any water source in the area; they needed to make what they had last and get out of that valley before they ran out...if that were even possible, which, in Scotty\u2019s mind, he doubted.",
        "Evening came, and with it, silence. The fear crept as a horde of ants into a cadaver: they had not found a suitable place to take shelter, and were now forced to travel under the sinister and oppressive thumb of the darkness. As night itself fell, the moonlight served only to light what was a few feet in front of them, and nothing more. Scotty and Thanh, even after having reloaded their weapons, were not remotely reassured.\n\nAs they clumsily traversed the region, moving slowly but surely, they remained unaware of the presence that slunk through the trees nearby, a pair of large, gleaming black eyes peering intently through the growth at the three visitors. The eyes themselves stood over thirty feet above the ground, supported by a colossal frame that moved almost silently over the forest floor, in sharp contrast to the impression it had made over the last few days. In truth, it knew these lands, as well as how to avoid being detected within them when the situation called for it.\n\nAs it slipped between the trees, treading softly as it could, it did nothing but observe. Closely monitoring the progress of its\u2019 unwelcome guests, learning how they moved and operated, it waited. Waited to see what they would do, waited for the perfect opportunity to...intervene. It had suspected that something new had entered its\u2019 territory the day before when it had discovered their tracks near its\u2019 kill at the river, and from there had managed to pick up a faint scent. It had searched the bamboo forest, where the trail had lead it, and had made a show in hopes that the intruders would be scared off entirely. But it was not to be, and now-after the loud noises and ultimately seeing them for itself-it was ready for a whole new hunt.\n\n*****\n\nThe clearing was dimly lit by nothing more than the moonlight as the group stopped to catch its' breath. Hours after running away from the river and they still had not found a suitable shelter in which to rest for the night. Their legs and lungs burned from exertion, their breaths were labored, and their bodies generally run ragged. Scotty leaned against a large tree, his rifle clutched limply at his side as Thanh took a swig from his canteen before swatting at an insect that flew into her face. Vinh stood several feet away, doubled over, trying to catch his breath. Sweat poured from their brows, as well as every other part of their bodies, as Vinh spoke to Thanh.\n\n\"He says we will have to stop soon, even without cover. We can't continue at this pace, Scotty, even you look half-dead.\"\n\n\"Gee, thanks,\" he gasped.\n\n\"It was not an insult, and you know it,\" she said, a touch of irritation creeping into her voice, \"we are all on the verge of collapse.\"\n\n\"I've hucked as far as you have, you think I'm not aware?\"\n\n\"Of course not. I'm just concerned for the well-being of the group.\" The irritation seemed to have increased a little.\n\nScotty took one more deep breath and leaned his head back against the tree, his helmet making a dull 'thunk' sound against its' bark. \"I'm sorry, Thanh,\" he said quietly, \"I know. I know you're just trying to talk sense to me. I'm really sorry, I'm just...tired and really scared. Please forgive me.\"\n\nShe put a hand on his shoulder. \"There's nothing to forgive. I worry about you-about all of us-that's all. You need us, we need you, and right now we all need to rest. You are strong and capable, but you're not immortal; we can settle here and take shifts on watch like before.\"\n\n\"Too exposed,\" he whispered, \"we need cover.\"\n\n\"Then let's start looking around,\" she said, before looking over at Vinh and whispering to him in Vietnamese. He responded in kind. \n\n\"He agrees, let's start searching.\"\n\n\"All right. We stay together, though. No splitting up; I don't want anyone getting lost.\"\n\nTogether, they ducked behind the tree, squinting in the dark for somewhere they could hunker down for the night. As they did so, a loud snap sounded from somewhere deeper in the woods. They all started, Scotty raising his rifle and pointing it into the gloom; Christ, what he wouldn't give for a fucking flashlight. He heard Thanh fumble to pull her pistol out of her belt, followed by the metallic 'click' of the safety. Another crack, coming from behind them. Scotty whipped around, sensing his companions do the same. \n\n\"Back to the clearing. Now.\" \n\nThey moved as one, slithering back out into the moonlit space, where they had some chance of seeing what might come at them. \n\n\"Into the middle. Back-to-back, cover the whole area. Thanh,\" Scotty whispered, \"give him this.\" He reached down and pulled his personal 1911 out of his' holster, whereupon he handed it to the very frightened photojournalist. She complied, and whispered to him in Vietnamese-whereupon he looked at Scotty, gun in hand, and bit his lip, eyes wide. He nodded, and turned away from his Marine counterpart, raising the weapon and training it on the trees in front of him. Thanh did the same, with considerably less confidence and more than a slight tremor in her grip.\n\nSnap! Another one, though where it came from was anyone's guess. The dense jungle disoriented them, threw off their directional hearing. Everything seemed to come from everywhere now, and that put them at a disadvantage. Then, a short, barking roar rang out, making them all jump. That was strange, Scotty thought, very strange indeed. A predator doesn't make itself known to its' quarry, he thought; not a good one, at any rate. Another loud crack and a brief crash as it knocked over something sizeable. \n\n\"It's toying with us,\" he whispered.\n\n\"You think that it's intelligent enough for that?!\" Thanh whispered back. Before he could answer, Vinh interjected angrily. Thanh went quiet again, and Scotty could only assume that he'd told them both to shut the fuck up and pay attention. \n\nHe was convinced, as periodic cracks, snaps and guttural barking occasionally broke the silence of the Vietnamese night. that they were not only being hunted, but deliberately fucked with. It's trying to shake us, he thought crazily, it tracked us here and now it wants to soften us up before it moves in. A child playing with his food before he eats, Scotty thought grimly as he scanned the spaces between the tall trees with his rifle. \n\nThen, there was a much softer 'crack' from behind Scotty, one that very clearly came from the edge of the clearing. Before Scotty could react, Vinh shouted something and there was a single deafening  gunshot as he fired Scotty's .45 into the darkness. A deafening scream as something absolutely colossal swept into the clearing, bellowing and snarling as it went. Scotty was struck violently and thrown back at least five feet, landing hard in a heap of terror and confusion. His ears ringing from the gunshot and his body pained from the impact, he rolled onto his back and looked up to see an absolutely fucking massive form that he couldn't entirely make out towering above him-fucking hell, it had to be thirty feet tall!-with a pair of inhumanly long arms that connected to a lean, but powerful torso. The head was large and roughly humanoid-shaped, but it sported a pair of long horns that swooped back in vague s-shapes, ending in wicked points that could have gored a water buffalo. And beneath those were a pair of large, black (or was that just because of the dark?) eyes that glittered like pieces of obsidian-and they were looking directly at him. \n\nThe head ducked low, and it began to stalk toward him. He began to fumble around, and realized that his rifle was pinned underneath him. He rushed to move enough to where he could pull it out, but just then there came a shout to his left, followed by three gunshots. The monster whipped its' head around and roared, which was met by the barking of fire from Scotty's M-16. He'd managed to free it from under him, brace it between his knees and roughly sight the thing in. Multiple rounds found their mark; the thing screamed and reared up, Scotty getting a glimpse in the low moonlight of the thing's hands. They were huge, almost lizard-like in appearance, with opposable thumbs, and each tipped with a wicked, curved claw that reminded him of the scythe blades he'd seen used to cut grass.\n\nThe screams and howls of the beast had been frightening enough from a distance, but to hear them up close was something else entirely. They were utterly alien and terrible, roars of primal rage that dripped with malice and predatory dominance. This thing was the master of its' domain and they were mere upstarts; even against the gunfire it did not cower or submit. Instead it screamed in pain, surprise and anger as it brought its' forearms down to the ground with a dull 'boom', its' barely-lit visage barreling toward Scotty. He instinctively half-jumped, half-rolled to the left as it flew past him, Scotty sensing a gaping maw packed with huge, pointed canines and a very long, almost prehensile tongue. It rammed into a tree, barely fazed as it turned and reared up again, roaring.\n\nHis rifle had locked back empty. Vinh was firing at the thing, shouting and spitting at it, as Scotty scrambled to pull another magazine out of his kit. As he extracted one, dropping the empty one from the rifle and fumbling to load in the new one, a few errant gunshots rang out as someone was trying to do damage. It screamed and whipped its' colossal arm (Jesus, that thing alone has to be almost three times longer than I am tall, Scotty thought) around toward an unseen assailant. There was no scream, but that didn't mean that someone wasn't going to wind up with a broken back or a split gut if it kept swiping, so Scotty decided to make a drastic decision: he opened a pouch on his kit and felt the smooth, ovular metal surface he was looking for...\n\n\"EVERYBODY GET DOWN!\" He hoped that they were both alive to hear him.\n\nThe metallic clinging sound of the grenade's safety lever springing away from the rest of the explosive seemed to ring as loudly as the monster's cries in his ears. The pin dangling from his left index finger, he reared back with the steel device clutched in his right hand, and arced it high into the air. He turned and jumped into the trees, landing on his stomach. He shot his hands up, covering his head.\n\nThe explosion was even louder than the monster it had meant to silence. The sounds of the entire world had been replaced by the ear-shattering detonation, and Scotty looked back to see the beast low to the ground, roaring and howling in what sounded like pain and unbridled fury. He saw it turn back towards him jerkily, before he heard a \u2018pop\u2019 over the ringing in his ears. A gunshot! So at least one of them had survived! \n\nIt recoiled slightly, and bellowed before apparently changning its\u2019 mind and turning around to dart-surprisingly fast for something its\u2019 size-back into the jungle from whence it came, like some great and terrible wraith. Scotty struggled to his feet, dragging his rifle with him and he stumbled into the center of the clearing, his eyes wide as dinner plates and his breathing labored and harsh, listening as its\u2019 horrifying vocalizations faded into the distance.\n\nA presence to his left caught his attention. He turned to see the stumbling form of Nguyen Thanh, 1911 held limply in her right hand, her form illuminated softly in the moonlight. Her expression was one of abject terror and exhaustion, a trickle of blood running down her temple and left cheek. She finally choked out one solitary sentence after they stared at one another for several seconds.\n\n\u201cI...I ran out of ammo and I couldn\u2019t manage to reload. I\u2019m sorry.\u201d \n\nHe took a step toward her, and she half-walked, half-fell the rest of her way to him. They embraced, her falling into his arms, him supporting her small, light body as she began to sob into his chest. He said nothing, just held her tightly against him, one hand caressing her head as she vented her fears, frustrations and uncertainties through tears, and tears alone.\n\n*****\n\nDawn came, and with it the discovery of their Viet Cong companion. \n\nVinh had been knocked clear off his feet by the monster during the fight, and had collided hard with a tree at the south edge of the clearing. His torso was covered in deep purple and yellow bruises; the impact had likely ruptured several of his vital organs and broken countless bones. Scotty didn\u2019t know if the man had died instantly, but he sure hoped that that had been the case. \n\nThe two survivors had elected to stay by the clearing and try to rest after the brutal confrontation. They had simply gone behind a large tree, fallen down next to it and passed out (luckily no inquisitive centipedes had crawled up either of their pant legs). They had gone to look for their missing comrade once it was light, both genuinely concerned about what had become of him.\n\nIn a heap on the ground, there he had been. Eyes closed, the pistol Scotty had given him twenty feet away, with its\u2019 mag empty and the slide locked back. He\u2019d fought til he couldn\u2019t, and hadn\u2019t lied down. He went out like a true soldier, like a real man, Scotty thought. Fuckin\u2019 A, Vinh, you earned a ticket to Heaven if anyone ever did, you tough son of a bitch, you. Enemy or not, Scotty had to respect that kind of courage.\n\nHe refused to leave the fallen VC crumpled up in the clearing. He carried the man\u2019s body behind the tree they\u2019d slept behind, and proceeded to lay it down, crossing the arms and straightening the posture. Scotty wished he could have buried him; the guy didn\u2019t deserve being left out to rot like this. \n\n\u201cThe motherfucker,\u201d Scotty snarled, Thanh looking up at him as they stood over Vinh\u2019s lifeless body, \u201cI don\u2019t care how big it is, I will pay that thing back for this. Even if I don\u2019t kill it, I will give it something to remember us by until the day it keels the fuck over.\u201d\n\n\u201cWe need to escape, Scotty. That is the priority.\u201d\n\n\u201cI know,\u201d he said, \u201cbut if I get the opportunity, I will rip that thing a new asshole, mark my fuckin\u2019 words, Miss Nguyen.\u201d\n\n\u201cHow much ammunition do you have left?\u201d\n\n\u201cTwo rifle mags. Couple for my .45, plus the claymores. Those might come in handy. Oh yeah, and one more grenade.\u201d\n\n\u201cWe\u2019re lucky it took the brunt of the first one.\u201d\n\n\u201cNo shit. Now let\u2019s get on the road here, that thing might show up again; it\u2019s tough as nails, and I don\u2019t want to be here if it decides to come back and tango.\u201d\n\nLeaving the body of their fallen companion behind, they checked Scotty\u2019s compass and struck out southwest. It was around this time that they discovered a temporary solution to their food shortage issue: a cluster of durian trees that were situated a quarter of a mile from the clearing. Thanh pointed them out, claiming that they were, in fact, a very popular fruit in her country. Scotty thought that they looked like pinecones, and that they smelled like a mixture of rotting flesh and onions (he didn\u2019t admit the last part, out of fear that he might offend her).\n\nThey proved tastier than he\u2019d expected; sort of a mild and sweet flavor that he found himself appreciating more and more as he sat with Thanh at the base of the tree, scooping the flesh from its\u2019 husk with his knife after slicing the thing open. Each of them sat in silence, slurping them down, simply grateful to have found sustenance of some kind-even if Scotty thought that they smelled foul.\n\nAfter loading as many of the durians as they could fit into Scotty\u2019s bag, they continued on their way, avoiding the river and moving as quickly as they could in spite of their sore limbs and minor injuries. It was still slow going, what with having to climb steep inclines, traverse uneven slopes and push through dense foliage, all while swatting at insects and looking out for the bestial creature that had attacked them the night before.\n\n\u201cDo you think we scared it?\u201d Thanh asked while they were hiking through a clearer section of jungle. \u201cI hope that we did, and that it never comes around again.\u201d\n\n\u201cI hope so too, but I don\u2019t know. Like I said this morning, it\u2019s clearly tough as nails; it survived a direct impact from a frag, for Christ\u2019s sake.\u201d\n\n\u201cIt may have died later...\u201d\n\n\u201cMaybe. I don\u2019t want to hang around long enough to find out. It\u2019s already killed one of us, and...\u201d He sighed and trailed off, leaving the sentence dangling like a worm on a hook.\n\n\u201cAre you upset about Vinh, Scotty?\u201d\n\n\u201cChrist, woman, how are you this good at reading people?\u201d\n\n\u201cI\u2019m a journalist, remember? Even though I mostly take pictures, I have to be good at reading others.\u201d\n\n\u201cFair enough. And yeah, I...I am. Upset, I mean. The guy was my enemy, and he tried to kill me. To kill us, even, but...when he saw the danger we were in, he stood by us and did the right thing. I half expected him to shoot me when I gave him my gun last night, or to try and run off. I thought he'd attack me after I cut his bonds back in the bamboo forest, but...he didn\u2019t. Maybe he would have eventually, I have no idea, but...look, I just feel...conflicted, is the word, I suppose. I\u2019ve felt that way about the war for a long time; nothing about it is simple or straightforward. Vinh made it even more complicated for me, and...fuck, I\u2019m just angry and confused.\u201d\n\n\u201cIt sounds to me as if you\u2019re going through an existential crisis of sorts. I would say only this, Scotty: he may have been your enemy, but Vinh and his comrades are people like you, who want to protect the families and the land that they love-much like you do, Scotty. To suddenly see a person as human when you\u2019ve been trained to see them as a monster will certainly shake your belief system to its\u2019 core; that is neither unusual, nor is it a sign of weakness on your part.\u201d\n\n\"I think you're right,\" Scotty said quietly.\n\n\"I know I am,\" she continued, \"I've been documenting this war and the effect it has on many of those involved in it for several years. I have seen some of its' horrors up close-close enough to reach out and touch. The disillusionment you feel? I feel it too. I personally discovered that once you look past the propaganda and see it for yourself, the truth is apparent, whether others accept it or not: war is a cruel bitch, and nothing about it is easy.\"\n\n\"Hearing you swear is so bizarre to me, Thanh.\"\n\n\"Fuck you, I don't have to be professional out here,\" she said, before laughing softly. Scotty joined her, chuckling along as they made their way toward the foot of the eastern mountain range. They'd discussed their plan earlier, and he decided to follow the mountains the whole way down-which, in hindsight, Scotty, thought, should have been their plan all along. It would allow them to look for caves, or maybe even a pass, the entire time that they traveled.\n\nThe first half of that particular wish was granted at around three o'clock that day. They'd reached the cliffs several hours before, and had walked alongside them ever since until Thanh, looking closely at the rock face, spied a crevice that was about three feet wide and three times as high leading into the mountain. They stood ten feet from the entrance, partially obscured by the wide fronds of a large plant, staring at it apprehensively.\n\n\"You think another leopard's in there? Maybe a tiger?\"\n\n\"Shut up, Scotty.\"\n\n\"Don't act like I'm being unreasonable.\"\n\n\"It probably would have let us know by now, Scotty, if it were here.\"\n\n\"I could toss my other grenade in there.\" That earned him a punch on the arm.\n\n\"Let's just look,\" she whispered, \"we need somewhere to stay and this could be it.\"\n\nScotty readied his rifle, and the photojournalist pulled her .45. He lead the way, and squeezed through the crack and into the stone passageway. It narrowed almost to the point of discomfort while canting to the right. Then, it opened up into a far, far wider space, and they stood side by side after exiting the entrance, peering into the near-pitch blackness. \n\nFrom what Scotty could make out, the space was at least thirty feet wide and half that in height. They couldn't be sure exactly how far back it went, however, not without a light source. ",
        "\"Thanh, we need to make a torch of some kind,\" he said, \"I have my lighter, but that won't be enough, so we gotta go look outside for something to light.\"\n\nThey got lucky-a fallen tree nearby was just rotten enough to where Scotty could wrench off a sizable enough branch. He sacrificed one of his two shirts, wrapping it around one end and pouring a small amount of lighter fluid from his kit onto the fabric. They returned to the cave, and Scotty used his Zippo to ignite the fabric. It wasn't much, but it was enough. They moved forward, and discovered that, near the center of the cave was an eight foot wide natural pillar that stretched from the cave floor to the ceiling. Other than that, it looked like a normal cave: it was solid rock, and went back around twenty-five feet. What was truly interesting, however, was the discovery of what was on-and leaning against-the right wall of the space, just across from the pillar. \n\n\"So that's where he went,\" Scotty whispered, his meager torch barely illuminating the scene before him.\n\nIt was-almost certainly, anyway-the remains of the U.S. serviceman who had fled the crashed Huey they had found several days earlier. There was little left of the man himself other than a skeleton and some worn, heavily tattered bits of a uniform. Next to him were the equally decayed remains of an M-14, whose wood furniture had mostly entirely rotted away, and whose action was almost entirely locked up with corrosion and rust. The weapon lay at a skewed angle next to the pile of bones, and upon closer inspection, Scotty could see that a sizable portion of the top of its' skull had been blown away. It didn't shock Scotty as much as it seemed to shock Thanh; suicide was something that he'd had some experience with-a man on base or somewhere else in country would occasionally just snap and ventilate himself every once in a while, and while the brass would always call it a tragedy, Scotty knew that it could happen to anyone. You never knew who was on the edge of calling it quits, and it seemed that their mystery man here had reached the end of his rope. But in this place...? Scotty couldn't entirely blame him, really.\n\nThe walls told an equally bleak story. On the floor were the remains of a combat knife similar to Scotty's, but the blade had been worn and chipped to hell in service of a series of shallow etchings that stretched over ten feet across the cave wall. Hacked crudely into its' rough, uneven surface was a faded caricature of a large, semi-humanoid form with long arms that reached above its' head, ending in a pair of hands tipped with wicked, scythe-like claws.\n\n\"This looks familiar,\" Scotty muttered. \n\n\"Yes. Yes, it does.\"\n\nNext to the caricature of the valley's overlord was a large, bold etching of several words that screamed in all capital letters: 'I AM MARTY COHLE, PVT 1ST CLASS, U.S. ARMY, 1962, BILOXI TN. I LOVE N MISS YOU MOM N DAD'. Next to this phrase, in smaller (but still entirely capitalized) letters was the phrase, 'R.I.P. THEODORE 'TEDDY' BEAUGARDNER, PILOT, STAFF SGT U.S. ARMY, YOU R NEVER FORGOTTEN BRO'. So the skeleton back in the chopper had a name. \n\nAnd lastly, past these crude memorial carvings was a series of vertical dashes, seperated into groups of four apiece, with a horizontal slash cutting through each grouping. He\u2019d been counting the days he\u2019d been trapped-and, after a quick count, Scotty had a number.\n\n\u201cSixty-four days.\u201d\n\n\u201cWhat?\u201d\n\n\u201cHe was here for sixty-four days before he gave up.\u201d Thanh did not reply, she only stared at the etchings in silent contemplation.\n\nThey did find the former cave occupant's rucksack, but it contained nothing of any real value other than a preserved bottle of lighter fluid that Scotty pocketed for use later. No notes or journal either, just some half-rotted clothing and other basic supplies that weren't fit to use, as well as ammo that, even if it had been the right caliber for Scotty's weapon, was useless as it had been eaten through with rust. \n\n\"We can use the scraps of cloth for torches,\" Thanh said, \"or to make a fire.\" \n\n\"Good thinking. Want to stay here tonight?\"\n\n\"I've already slept next to one skeleton, I can sleep next to another,\" she said grimly.\n\nAnd so, they settled into their sinister, yet functional shelter for the evening. Scotty managed to build a crude firepit out of stray rocks on the cave floor, and, after using fuel found in a nearby bamboo thicket that had yielded broken stalks which were dry enough to hack apart and burn, built a respectable fire using Private First Class Cohle's ruined pack and clothes as kindling. Scotty lay some of his clothes down as makeshift bedding, and they sat next to one another, staring into the flames. Thanh, after a few minutes, was the first to speak. \n\n\"I find you extremely attractive, Scotty.\"\n\nScotty skipped a beat. \"...What?\"\n\n\"You heard me. I didn't respond in kind back at the river that day because I wanted to tease you a little. Now, I feel like being blunt.\"\n\n\"Oh. Wow.\" \n\n\"That's all?\" She glanced over at him, the fire illuminating her expression, which was one of sarcasm and playful irritation. \"I expected more than 'wow', to say the least.\"\n\n\"I'm sorry, I just...you caught me off guard, that's all.\"\n\n\"I really don't mean to be insulting when I ask, I really mean that...but I'm guessing you're not much of a ladies' man.\"\n\n\"You're right, it is kind of insulting. It's also true.\"\n\n\"Oh. Well then, that makes everything simpler.\"\n\nHer hands found his cheeks, and she pulled his face to hers. The kiss was long, loving and deep, Thanh leaning into the act and slipping her tongue into his mouth, flicking and caressing his own. One of her hands slipped to the back of his head, her fingers exploring his hair. Scotty, for his part, had been shocked at first, eyes widening and almost pulling away before he ultimately accepted it and returned the favor. Her lips were sweet, soft and almost savory; her kiss passionate and earnest. He may not have been a maverick with the ladies, by his own admission, but it didn\u2019t take a detective\u2019s deductive reasoning to figure out that she was genuinely into him. \n\nBefore he knew what was happening, she\u2019d pushed him down onto the makeshift bed made up of Scotty\u2019s clothing and mounted him. Leaning down, her hands still on his face, she slipped her tongue back into his mouth. She began to grind and twist against his crotch, and in no time he was hard enough to cut diamond. Feeling the change in his pants she moaned softly and ground harder. Scotty slowly pulled his face away from hers.\n\n\u201cThanh-\u201c\n\n\u201cWe might die tomorrow, Scotty,\u201d she whispered, \u201ceverything that has happened leads me to believe that we may not escape this place. If that is the case, I\u2019d like for something pleasant to happen beforehand. I can\u2019t think of anything more suitable than having sex with you.\u201d \n\n\u201cI...why me?\u201d \n\nShe chuckled. \u201cBecause I think that you are handsome, kind, and a wonderful protector? Because you\u2019re here? I could go on, but I would rather take off my clothes and make love to you right here by the fire.\u201d \n\n\u201cI don\u2019t know, you seem okay at taking care of yourself.\u201d\n\nAnother chuckle, before she leaned back and swiftly removed her tank top and let her breasts fall free. What size they were, Scotty wasn\u2019t sure (not small, not huge...? Who fucking knew?), but he didn\u2019t give a fuck. They were soft, supple and capped with a pair of small, dark nipples that he immediately began to massage with his thumbs. She gasped and began to moan softly, her eyes closed and her mouth agape. He applied more pressure and rubbed faster, her back arching forward and her hair falling in front of her face, partially obscuring her features. Her moans became louder and more insistent, her own hands tightly clasping his wrists as he continued his ministrations. \n\n\u201cScotty...please, I...let me give you...\u201d\n\nHe stopped, she slid down to his legs, and began to undo his pants. His erection sprang free; by now it was almost painful. She smiled, her expression illuminated by the firelight, and leaned down to slip her mouth around his engorged head. She began to make long, slow, almost tortuous strokes up and down his length, her tongue twisting around him with loving and caring precision. \n\nShe worked him for nearly fifteen minutes, stopping to occasionally kiss his head or lightly nibble the skin on his shaft, making him gasp in surprise and pleasure. Before long, he could feel that old, familiar sensation of an orgasm beginning to build up-his balls felt as if they were beginning to boil, ready to desposit his seed into her warm, waiting mouth.\n\n\u201cThanh, I\u2019m gonna-\u201c\n\nThe response was immediate. With a light \u2018pop!\u2019, her mouth left his cock and his ejaculate receded. She sat up, smiling as she did so.\n\n\u201cGood?\u201d\n\n\u201cYeah,\u201d he breathed, \u201cgood.\u201d\n\n\u201cWe aren\u2019t done, you and I,\u201d she whispered, \u201cI hope that you\u2019re up to the task.\u201d\n\nShe rose to her knees and undid her pants, slipping them off one leg at a time. Now she was fully nude, and with one fluid motion she grabbed his own and yanked them off of his legs. A hunger filled her eyes as she settled onto his lap again, rubbing her bare slit on his shaft. Scotty moaned as she leaned down again, silencing him by slipping her tongue back into his mouth. After a moment, she pulled away, gave him a sly smile, and then reached down to grab him-whereupon she slid him inside of her. \n\nShe sank all the way down onto him, his full length disappearing into her body. She gasped and emitted a brief \u2018huh!\u2019, as her head reared back, eyes closed and biting her lower lip. She let out a long, drawn-out moan, cupping her own breasts as she began to slowly twist her hips in a clockwork motion, grinding him deeper into her passage. \n\nScotty was overwhelmed, almost to the point of sensory overload. He\u2019d had a few girlfriends before, as well a handful of one-night stands, but none of them compared to Thanh. She was tight, incredibly so, and she clamped down on him like a vise. She was soaking wet; he could feel her fluids leaking slowly from her opening and down onto his crotch as she twisted around on top of him. She leaned forward and began kissing him again as she began to slowly work his length in and out of her body, moaning as she did so.\n\nScotty felt as if he was being wrung out like a wet towel. This woman wanted what he had, and she was making that fact clearer by the second. Her gaze never left his own;  that near-predatory hunger burning as bright and as hot as the fire in the deep, brown depths of her eyes. That look seemed to impart one thing, and one thing only: I am going to make you mine; from now on you will belong to me alone. \n\n\u201cYou are incredible,\u201d she whispered hoarsely as she gazed into his eyes, \u201cyou\u2019re all I had hoped for and more.\u201d\n\n\u201cFuck, Thanh...\u201d\n\n\u201cAre you close? Hmm?\u201d\n\n\u201cGetting...there...\u201d\n\n\u201cGood, I need it, I want it so badly...\u201d \n\nHe decided to up the ante. He reached down and grabbed her hips before beginning to slowly but steadily ram himself up into her, sliding his hips up and sending his head into her cervix. She arched her back and cried out, her hands on his chest. These high-pitched cries and mewlings only drove him crazier with lust as he sped up his thrusts, her vagina now drooling more fluid than ever before. \n\nThat feeling was back: that swelling, tingling feeling that had crept from his balls to his shaft: he was about to blow, and it was going to be one for the ages. \n\n\u201cThanh, I\u2019m gonna-\u201c\n\nHer tongue was back in his mouth, and then it was out again as she hissed \u201cDon\u2019t you fucking dare take it out!\u201d\n\nHe did not care to protest. He let out a cry as he thrust upwards one final time, sending what felt like a torrent of his seed into her loving, waiting womb. She drowned his cry out with an even louder one of her own as she felt Scotty\u2019s warmth spread throughout her most intimate reaches. Her body suddenly spasmed, her hips bucking as her body was sent into a racking orgasm. After it subsided, she collapsed onto him, kissing him slowly and softly. \n\nIt was several minutes before Scotty spoke.\n\n\u201cThanh, that was...you were...\u201d\n\n\u201cAmazing? Thank you, so were you. You are a fantastic lover, Mister McKinley.\u201d \n\n\u201cAgain, that\u2019s my father.\u201d\n\nShe lightly punched him on the shoulder, then nuzzled his neck with her nose.\n\n\u201cWhat if you get pregnant, Thanh?\u201d\n\nShe looked at him, and shrugged. \u201cWe may not live long enough for it to matter. But if we get out of here alive...well, I can think of worse things than being the mother of your child, Scotty.\u201d \n\n\u201cWhat? Really?\u201d\n\n\u201cReally.\u201d\n\n\u201cJust...jeez. Well, shit...of anyone I\u2019ve ever been...well, romantically involved with, you\u2019re one of the few I wouldn\u2019t mind having my kids.\u201d\n\n\u201cThat\u2019s what I wanted to hear,\u201d she purred, \u201cbe careful, I\u2019m already dangerously close to falling in love with you, and if that happens...know that I\u2019m not going to let you get away.\u201d\n\n\u201cI can think of worse things than settling down with you, Thanh.\u201d\n\n\u201cMmm.\u201d\n\n*****\n\n\u201cIt\u2019s light out now.\u201d \n\n\u201cMhm.\u201d\n\n\u201cSo shouldn\u2019t we get moving?\u201d\n\n\u201cI\u2019d rather have you inside me one more time, and then maybe eat another durian.\u201d\n\n\u201cJesus, you like fucking me that much?\u201d\n\n\u201cThe threat of violent death at the hands of some bizarre monstrosity brings it out of me, I suppose. Take me again, Scotty, but on top this time.\u201d\n\nAnd so he did, slipping back into her warm, welcoming passage for the second time in twelve hours. She gasped and moaned as he began to slowly stroke in and out of her. Her hands found his back, and she dug her nails into his skin, dragging them slowly across. They did not break the skin, but he could feel the red marks that they were leaving behind as they traveled across him.\n\nThey moaned together as they made love again, Thanh moaning his name as he plowed her. Maybe it was his imagination, but he almost felt as if she was clenching him even tighter than she had the night before. It only intensified as they continued, their bodies melting together in the throes of shared passion and desire for one another. Their kisses grew more desperate, their embrace tighter. As Scotty felt that tightness again, he knew that this would be one to rival the night before; he did not slow down or relent in any way. He thrust faster and harder, Thanh nearly shouting in pleasure. He whispered in her ear that he was about to finish, and she moaned \u201cdo it, give it to me!\u201d\n\nAnd give it to her he did. He almost saw stars in that moment.\n\nThanh, upon feeling Scotty\u2019s seed spill inside of her, immediately orgasmed herself. Her hips bucked upward onto his shaft, her tunnel squeezing it greedily so as to milk out every last drop he had in him. They collapsed into a panting, sweaty pile, reeking of exertion and sexual fluids.\n\nLater, as they ate, Scotty found himself thinking that durian had never tasted so good. \n\n*****\n\n\u201cHoly fucking shit,\u201d he muttered to himself, \u201cthat\u2019s fucking it!\u201d\n\nHe scrambled down the branch of the tree and began to work his way down, using each limb as a rung. Finally, after he landed feet-first on the ground, a smile lighting up his face, Thanh asked \u201cwait, did you see something?\u201d\n\n\u201cA pass,\u201d he said, \u201cit looks a little steep and it\u2019ll be rough traveling, but it\u2019s there. Probably a few miles southwest, we gotta move! We might actually get out of here!\u201d\n\n\u201cThe final stretch is usually the most difficult,\u201d she warned, \u201clet\u2019s not get ahead of ourselves, Scotty.\u201d \n\n\u201cRight, of course.\u201d She was probably right, obviously. They still had plenty of ground to cover, and who knew if round two with that freakish beast was still to come? Might it have licked its\u2019 wounds already; was it stalking them as they spoke? Maybe it was outside the cave right now, just lying in wait...\n\nBut it was not. The sky was grey, thunder was rumbling in the distance. He could smell the rain in the air, the moisture was almost palpable...but the beast was elsewhere. Hopefully, Scotty thought, lying dead in a ditch somewhere. \n\nAs Scotty and Thanh followed the mountain range, however, they were again tailed by a presence that stuck to dark cover of the jungle, slinking through the shadows, observing their every move. It watched them more cautiously than it had before; these intruders were aggressive, unpredictable. They had harmed it, to a degree that it had not experienced in an extremely long time. Its\u2019 wounds had begun to scab over, and no doubt several would scar in time, but it did not care in the slightest. It would drag them both away soon enough, and...finish things, for lack of a better word. It was still lord of this realm, and its\u2019 dominance would be reasserted soon enough.\n\nThe rain began to fall sometime after the intruders had left the cave, and the cool moisture was a welcome change. It helped to soothe the aching, shooting pains that coursed through its\u2019 many injuries. This helped it to concentrate on moving even more quietly than usual, slinking among the trees like a snake as it watched...and waited.\n\n*****\n\n\u201cCan we even climb that?\u201d \n\n\u201cWe have to try, Thanh.\u201d\n\n\u201cObviously, but I\u2019m just afraid of breaking my neck in the process. You cannot tell me that I\u2019m being unreasonable.\u201d\n\nThe pass, stretching out above them, was far more intimidating up close than it had been in Scotty\u2019s binoculars. Rock formations jutted out every which way like stone daggers, plants and vines growing from many of them. It looked to be a tough climb-but it wouldn\u2019t be impossible. That was the important part.\n\n\u201cGo, go. Let\u2019s start climbing,\u201d Scotty whispered. They both charged toward the foot of the mountain, and began to make their way up into the jagged canyon. It was only around ten feet wide, the rock walls on either side of them jutting out like inquisitive fingers. The ground was rugged and uneven, the rain making the effort an even more arduous one. More than once, both of them either almost slipped or lost their grip on a piece of rock, nearly sending them tumbling back to the valley floor below. \n\nScotty heard the loud snapping sound come from below after they had made it approximately thirty feet up. He stopped to look back, Thanh doing the same. He could have sworn that his heart actually skipped a beat when he saw what was standing at the edge of the jungle.\n\n\u201cOh no,\u201d he heard Thanh whisper. \n\nIt stood totally unmoving, thirty feet tall, the hands on the end of its\u2019 impossibly long arms flat on the ground, claws digging into the rocky soil. Scotty noticed, unlike the night before, that its\u2019 skin was a sickly, corpse-like white in hue and leathery in a similar fashion as an elephant\u2019s, its\u2019 fresh injuries and scars standing out grimly against this pallid background. At the bottom of its\u2019 torso were two short (in comparison to its\u2019 arms) and stocky digitigrade legs, which ended in four-toed, birdlike feet capped with claws that rivaled those on its\u2019 hands. A series of short, sharp spines ran down its\u2019 back, accentuating the massive horns on its\u2019 head. And Scotty had been correct in his assumption the night before: its\u2019 eyes were pitch black. And, while he could never be entirely sure as to where it was looking, he was sure that, at the moment, it was looking directly at him. \n\nIt stared at them, they stared at it. Scotty felt like Clint Eastwood squaring off against Lee Van Cleef, as they waited to see who would make the first move. He knew immediately what he had to do, however, and the first thing was to get his second grenade out and primed...\n\nIt was now or never.\n\nHis hand shot to his belt, and he reached for the explosive. The monster saw this and howled, the sound seeming to envelop the entire world, as it darted, almost ape-like, to the cliff, where it began to tear up the passage and toward them, screaming and roaring as it came. Scotty\u2019s hand found the grenade and he yanked it up and out, his left index finger finding the pin and yanking it out of the assembly with a metallic \u2018clink\u2019. Another loud \u2018clink\u2019 as the safety lever was dispatched-it was going to blow. ",
        "As the monster barreled up the pass toward them, its\u2019 predatory gaze locked onto his, reflecting a heartfelt desire to rip him apart limb from limb. Fuck you, Scotty thought, find another morsel, you big ugly fuck. With an underhanded toss, he pitched the grenade toward the approaching terror and pulled Thanh behind a large, plant-covered rock next to him.\n\nThey only caught the tail end of the thing\u2019s scream as it detonated, the sound discernible even over the ringing in their ears. Scotty peeked around the rock to see the thing tumbling end over end back toward the valley floor. \n\n\u201cGo, go, it\u2019s gonna come back! I have a plan, though!\u201d\n\n\u201cWhat-?\u201d\n\n\u201cJust GO!\u201d\n\nThey turned and ran further into the pass, slipping and sliding on the thick plant life and dirt that covered the stone beneath. After about thirty seconds, they came to a more leveled-out spot that was considerably narrower than before-there was only about eight feet of clearance total; this was perfect. Scotty set down his pack down and reached into it, removing the two claymores he'd pulled from the chopper. Looking around frantically, he separated them and planted each on opposite sides of the narrow canyon, ensuring that they faced upwards at a forty-five degree angle. After some frenetic adjustments, he heard the thing roar from down below; it was not, as part of him had hoped it would be, down for the count just yet.\n\n\"How is it still alive?!\" Thanh cried out in frustration and terror as he concentrated on the task at hand. He'd wired the claymores up the previous night in case something like this happened, whether in the pass or the jungle; these mines would do the trick. Had to, he corrected himself, they HAD to do the trick, because if not...well, they wouldn't have much choice about crossing that bridge when they came to it. \n\nAll he had to do now was attach the denotator. He inserted the blasting caps into the detonator wells of each mine, and checked to make sure that the safety on the detonator itself was engaged. He'd been smart in giving himself plenty of wire between the mines themselves; if he hadn't, he thought, this might have been more difficult. He hastily began unspooling the wire as he heard the telltale sounds of a massive form staggering up the pass below. God, the thing just did not ever quit! Well that's okay, Scotty thought, we've got somethin' for you, you gangly son of a bitch. You're hungry, so come eat fourteen hundred steel balls, you cunt, because the two of us won't be enough for you.\n\n\"Back up, back up!\" He shouted as he came back toward Thanh, her face a mask of fear and apprehension.\n\n\"Oh my God, Scotty-\"\n\n\"Thanh, move! Back, back!\"\n\nShe screamed, and he turned to see the bloodied, battered and extremely angry form of the valley's resident asshole coming over the threshold, its' long vicious teeth bared. Its' tongue flicked out, nearly two feet long and almost reptilian in appearance. It howled and began to stumble forward, its' claws scoring and splintering the walls as it came. As the passage narrowed, it had to lean and adjust itself, snarling and gibbering the whole time. Its' massive, clawed hands lashed out, swiping and grabbing at them, making the duo jump back. It was so close now, so close, just a few more feet, Scotty thought...\n\n\"COVER YOUR EARS!\"\n\nHe disengaged the safety on the detonator. Time to see if these things still worked...fuck, I hope they still work, he thought, as the thing passed directly above and over the claymores. Scotty could not hear the click of the button as he pushed it, as the creature's vocalizations were almost deafening.\n\nWhat was truly deafening, at least for Scotty, was the sound of two claymores packed with hundreds of steel balls and several pounds of plastic explosive detonating simultaneously. He couldn't even hear the thing's screams of sheer agony as blood poured from countless new and older wounds, as some were newly made and some were torn open. It reared back and fell to the ground, screaming and howling in agony, scrambling and scratching at the pass' walls and floor like mad. Scotty shouldered his rifle and trained it on the beast, waiting to see if it would still attack, but there was no need. It crawled to the threshold and slipped over, tumbling back down into the valley from whence it came for the second time in mere minutes. Its' cries and lamentations echoed throughout the region: it had been soundly and definitively beaten.\n\nScotty and Thanh looked at each other, each panting and terrified. Scotty nodded, his helmet bobbing slightly. She returned the nod, her own helmet doing the same. He took her hand and turned away from the valley and back toward the remainder of the pass, and floundered their way toward freedom.\n\n*****\n\nScott McKinley did not receive any commendations for his actions during the ambush or the events that he and Nguyen Thanh experienced afterwards, but after they managed to make it through the mountains and flag down another patrol that happened to be passing by, he was given an honorable mention in the magazine that Thanh had been working for, praising his bravery and willingness to save the live of one of their own. Scotty was fine with that. And, after finding out that her subjects had been victims of a Viet Cong ambush, her editor hadn't even made her pay to replace the camera she'd lost. And, frankly, Thanh herself was fine with that.\n\nScotty survived Vietnam, despite many close calls and tense, violent moments. After his conscription was up, he took his papers and walked; he'd had enough of war and bloodshed to last multiple lifetimes. Thanh remained in Saigon, remaining in regular mail contact with Scotty and relishing the moments she could spend with him when he was on R&R. Their love blossomed and grew stronger all the time, and when he asked her to move to the States with him and consider being his wife, she tearfully accepted and they made passionate love for the rest of that night. \n\nScotty reconnected with his platoon, and all of them even made it home too (though Kanafka nearly died after losing his lower right leg to a grenade, and O'Hara took a Tokarev round to the shoulder), and none of them could believe their eyes when they saw their friend again. That didn't mean that they weren't overjoyed to know that he was still alive, however-they threw him a party on base to celebrate his \"rise from the dead\" as they called it.\n\nOfficially, the line was that Scotty and Miss Nguyen had hidden out in a cave for several days, trying to avoid the Viet Cong and moving when they could. This was gladly accepted by the brass, and everyone moved on, a fact that Scotty and Thanh were grateful for. Neither of them ever spoke of it to one another, but they both knew that no one would have believed a story about an isolated valley that was stalked by a freakish monstrosity that he could not begin to explain the origin of. He did, though, sometimes find himself wishing that Thanh's camera hadn't been lost and that they could have taken some pictures of it...that would have REALLY been something to talk about, he had mused to himself. National Geographic and Scientific American would have been ramming down his and Thanh's door.\n\nUltimately, Scotty and Thanh married after moving back to the United States. They settled together outside Tampa, Florida, where they would eventually raise two children. They remained together until their respective passings, never wavering in their loyalty and devotion to one another-if you'd asked them how they stayed so strong, both would tell you that quite literally surviving together in enemy territory would do that. Everyone marveled at this explanation, and thought them a worthy example to follow. \n\nBut for the rest of their lives, every so often, one of them would wake from a terrible nightmare that involved being stalked by a huge, lean shadow with claws that could gut a water buffalo, reaching out from the shadows to finish a job that had started in the dark, shadowy clutches of a mysterious land so long ago.\n\n********************\n\nThank you so much for reading, and I hope this gave you a few chills. I had so much fun writing this, and I hope you'll consider voting for me! Happy Halloween!"
    ],
    "authorname": "OccurrenceOnMimas",
    "tags": [
        "cowgirl",
        "creampie",
        "erotic horror",
        "horror",
        "thriller",
        "vietnam war",
        "war",
        "monster"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-howling-valley"
}