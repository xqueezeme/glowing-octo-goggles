{
    "title": "Falling",
    "pages": [
        "'Fuck! It's cold out here!' I thought as I hit the door leading outside. A 4a.m. call to get to my high school and then ride a bus two hours to what was probably going to amount to a very boring wrestling tournament... There was no upside here... well other than the fact that this would be my very last wrestling tournament as a minor! My 18<sup>th</sup> birthday was tomorrow! I stopped and pulled my bag on and wrapped the blanket I always carried with me on a tournament around myself; dashing to the front of the house where Joe, my best friend, was parked. I stripped off my bag and blanket and threw them in the back seat. I jumped in the seat next to Joe and smiled at him.\n\n\"Gabby!\" Okay, so I know it's an embarrassing name, it's really Gabriel, but when you're on a sports team guys tend to come up with nicknames for each other, mine settled on Gabby and that was sort of where it stuck. I minded it for the longest time and then one day it sort of made sense. I know it's a girl's name, but something about it made me unique! \"Didn't think you were coming for a second there...\" He laughed as he pulled away from the curb.\n\n\"Thanks for coming all the way across town at this ungodly hour man...\" I apologized to him. Days like today sucked. I had no car. I had no cell phone. Technically I lived on my own, even at 17. My dad had taken me away from my mom when I was nine and we had a pretty tough relationship as I got older. Finally things came to a head about three months ago and he had decided to toss me a beating. I decided that I had the choice to leave his house or duke it out with him if I didn't want him beating on me anymore. I couldn't bring myself to take a swing at him and I had walked out of his house that night...\n\nMy feet carried me to my mom's house. She was the type of parent that really got into the idea of being a parent, but was not the best when it came to the practice of actually being a parent. I asked her if I could stay with her and she thought it was a great opportunity to put one over on my dad and show him how parenting was done and let me stay. It was a weird arrangement for me. It meant that I had to live all the way across town from my high school, and being a senior I didn't want to change schools during my last year...\n\nThat meant without a car... I rode the bus a whole lot. Early mornings where I got to school super early, and many a winter morning walking to the nearest bus depot to catch the very first bus of the morning and riding it all the way across town.\n\nAbout a month into my stay my mom got tired of being a mom. She moved in with her boyfriend, probably the best man I had ever seen her with... he was older, but seemed to treat her pretty well. He was a hard drinker like her and while I didn't approve of how much time they spent in the bar he seemed to be able to afford to keep my mom in liquor and happy. She seemed happy and that was nice to see for a change. At the time she moved in I thought I was screwed. I really didn't want to live with my mom and the guy she was shacked up with, but her guy, George, suggested that maybe I could just take over my mom's old apartment. She rented it from this old lady who liked her and who only charged her $200 dollars rent. I was surprised when my mom went for it... it must have seemed like a good compromise between getting away from the responsibility of being a parent and continuing to stick it to my dad!\n\nI worked odd jobs for my landlord and she, in return, cut the rent down to $100 dollars per month. It was a great situation for me as the stuff I usually had to do, mow the lawn, shovel snow, housesit her place when she traveled, was all stuff I would have done anyway just to be nice! I drew on savings that I had put aside from working all summer at a rental company to make up the difference. Money was tight for me, but I was able to come and go as I pleased and I had my own place!\n\nI couldn't catch a bus this early, as they didn't run and I knew that I was costing Joe probably close to an hour of sleep so he could come get me. I always felt bad about that kind of stuff. Joe was a good friend to me and I was always having to sponge off of him.\n\n\"Don't sweat it man,\" Joe said with a smile. \"Have fun last night?\" Another knowing grin from him.\n\nI smiled back at him, \"The date with Jacky was a bust...\" Jacky was this girl I had met on the bus and at first we had hit it off. I was attracted to her but she was three years younger than me... I didn't really know if the difference in ages was going to work.\n\nHe hit me in the arm, \"No details? Come on! Was she good? Did you go all the way with her?\"\n\nIt was a tough spot. On one hand I owed Joe a lot. It felt weird to be talking about this with him. But I also felt like I owed him something of a debt. Finally I decided on a course of action, \"You know, my dad is an asshole, but one bit of advice he told me that seemed to make a lot of sense. When and what you do with a lady is between you, and her. Or at least it is if you want her to still be a lady!\"\n\nJoe just laughed again. \"Good point. Fucking cold this morning isn't it!?\"\n\nI was relieved. I hoped he wouldn't be mad at me, and it didn't look like he was.\n\nWe passed the rest of the morning making small talk. When we arrived at the school I saw that there was a full size bus, instead of the short ones that we usually take for Varsity only tourneys like this one.\n\nI asked coach what was up and he told me that the bus company had decided the full size was safer in this weather, especially considering that we were going over a mountain pass. That seemed to make sense to me, and it would also be nice as the bus would be nearly empty, so there would be lots of room to spread out and get some rest both before and after the tourney. It was a two hour trip in good weather, so in this weather it would be closer to three; it would be nice to get some sleep.\n\nI looked over at the Stat Girls as they huddled together by the door to the bus. The Stat Girls were a bunch of girls who helped the team out, they sat by and recorded scores for the wrestlers during matches and provided recaps for the matches.\n\nKarly... wow, Karly was smoking hot. She was a senior, like me. I had had eyes for her since I was a freshman. We both were in all the AP classes so like half my day was spent with her. That meant that I spent a good portion of my day trying hard not to stare at her. She was tall, maybe 5 foot 10. Heavy in an athletic sort of way. Large shoulders, large hips, big tits. She played soccer and was pretty good at it from what I heard. She wasn't the type of girl who showed a lot of skin but once, she had stretched like a she-wolf in class and I saw her shirt come up around her mid-riff and her abs had been toned and firm. She had fluffy brunette hair with lighter, almost blonde tints that she usually let fall down around her face. Green eyes. Wow, I love those green eyes.\n\nShe had an infectious smile too! She flashed one at me as she caught me checking her out. I smiled back at her and felt a little guilty for checking her out. I had some guilty thoughts about Jacky. 'I'm only human' I thought. 'There is no harm in looking, just no touching!' even then the snow covered ground at my feet started to look a lot more interesting.\n\nWe all filed onto the bus and I found a quiet spot to lay down, wrap myself up in my blanket and get to sleep.\n\nChapter 2:\n\nThe tournament went well. The first kid they put me against was a loser. I tore him up in under 30 seconds, recording a pin. The second kid lasted a little longer but again, a pin. The third kid I faced was somehow worse than the first two, and I wondered how had he made it this far into the tournament? I was facing off against him really just screwing around, shooting in and scoring takedowns and then letting him back up when he did something unexpected. He swept in and grabbed me in a single leg takedown.\n\nHe didn't bring me to the ground but managed to get my foot up into the air. I was embarrassed, but I got a weird idea, a move that I had seen in a book. I jumped, putting all of the weight on the foot he held while closing with him. I grabbed the back of his neck with my left hand and twisted my hips. My right foot swept up and knocked his feet out from beneath him and we both sprawled to our asses. I was in a shitty position to attempt to do anything about him being sprawled on the ground, our legs tangled up together, so I decided against it.\n\nI simply rolled back over my head and to my feet. The crowd was going wild. I doubt many had ever seen that move before, and I have to admit, it mostly looked flashy. I was pissed now though. I shot down, making it look like I was going for a takedown. The instant my knee hit the ground I saw him bite. He thought I was going for a double leg and was surprised when I shot back up and grabbed him in a deep bearhug. My head buried deep in his chest as I tightened my grip on him. This was a trick I had picked up from one of the other guys on the team. It was a brutal hold. The air being crushed from your body while the head buried in your chest dug in painfully enough that you could barely move or think.\n\nSuddenly I snapped my hips into his and lifted him bodily off the ground. This precipitated me slamming him back to the ground the instant my knee touched the ground keeping the hold legal but just by the slimmest of margins. My head in his chest knocked the wind out of him. He couldn't move. I moved to my feet with my head still buried in his chest. He was done. I heard the slam of hand on mat that signaled a pin. I twisted my body and rolled away smoothly. We shook hands and I went over to meet my coach. He looked me in the eye and with a wry smile said, \"What was that flashy bullshit?\"\n\n\"Something I saw in a book, figured I'd give it a try.\" I felt cocky as all get out and my blood was still up from the match.\n\n\"You know what the percentage on a move like that is right?\" I could see he was worried about me trying to hotdog against someone that I couldn't afford to.\n\n\"That guy was a loser,\" I replied. \"I wouldn't have tried it against someone that I couldn't get away with it on.\"\n\nCoach looked at me carefully, \"He wasn't such a loser that he didn't get a pretty textbook single leg on you.\" I felt a flush of shame at that. He was right. I let my confidence get the better of me. Stupid mistake.\n\n\"You're right, I should have been more careful.\" I felt a rush of shame. I was too cocky.\n\nI turned away from coach, and there was Karly. Beautiful, smiling Karly. She had all of my clothes in her arms. The thought occurred to me that she seemed to always be the Stat Girl I had when I wrestled... \"That was awesome!\" She gushed at me. I felt a rush of pride and squashed it instantly. That was what had gotten me into this.\n\nI smiled at her, \"It was lucky.\" She pulled up short at my tone. I was too short with her. She had a funny look on her face. \"Sorry, I just got lucky. He was a loser, and I pulled a trick out of my ass. I shouldn't have done that. I should have taken the takedown and worked my way out of it. I took a shortcut and if the guy had any class he would have beat me because of it.\"\n\nShe put her hand against my chest, \"Well,\" her hand traced up, \"still looked pretty impressive\" she looked up and down my body and I realized with a certain amount of shock that I had done the very same thing with girls more than a few times in the past. Her eyes settled for a second on my crotch... the singlet didn't do much to cover or leave much to the imagination, \"that singlet looks pretty impressive too,\" With that she dropped my clothes in my arms and walked away. It seemed like her hips had a little suggestive sway to them as she walked away and I had to take a moment and appreciate her ass. Wow the rush of hormones mixed with adrenaline shot through my body. Fuck, I wanted so badly to tackle her to the floor and just pull her clothes off!\n\nI took a deep breath and started pulling my warm ups back on. Wouldn't do well to have someone see the impact of all that Karly on my body! 'Man, it really seemed like she was seriously checking me out!' I had to be imagining things! There was no way Karly was into me, and what about Jacky?!\n\nI went back to the bleachers and found my stuff. I dug into my bag and found the lunch I had made for myself that morning. Sandwiches, ham and processed cheese with plenty of Miracle Whip, three of them. A half-eaten bag of chips. A couple Pop Tarts. I wolfed it all down with plenty of water, thankful for the fact that even with the busted date with Jacky had had time to run to the store and pick up some basic staples. It was excellent and just what I needed to keep my energy up.\n\nThe last match was the toughest of the day. The guy had at least some talent. He put up a good fight for about three minutes. I was stronger though, and better. I ripped him apart. No showing off, I just broke him piece by piece. I finished him with a hard cross face that was just this side of legal and pinned him before the second round ended.\n\nAt the medal ceremony the Stat Girls from the teams took turns presenting medals to the guys who had won them. I noticed Karly jostling with some of the other girls and trading. Not unusual. Most of the girls liked to present the medals to the guys they liked or thought attractive. I was surprised when Karly was the one to present to me. She wrapped the medal around my neck and smiled at me. I stepped back from her and she put her arms out wide, \"Come on big guy! How about a hug!\"\n\nI really wanted that hug, and besides I didn't want to embarrass her in front of everyone! I pulled her close into me and felt the feminine figure pressed against me. She was taller than Jacky, fuller. Her body felt stronger, her bones thicker and more substantial, Jacky felt slight compared to this lovely creature. With Karly I didn't feel like I was going to break her as I held her in my arms. I won't lie, she felt great. Soft and smooth, yet strong and confident. Her hair was pressed close to me and a scent something like vanilla pressed itself to me. I squeezed her tight to me hard and firm, far harder than I would have dared to press Jacky to me. She just squeezed me tighter too! It was awesome! I lifted her off the ground, laughing and smiling the whole way. Karly stepped back and held her hand to my face. \"Excellent!\" She beamed. The light caught her green eyes and lit them up. I was lost in them. I almost kissed her...\n\n'Danger! Back to front and center!' my brain screamed out to me. I pulled myself back into the moment and turned away from her...\n\nThe rest of the tourney was short and sweet. We packed up and got back on the bus. I was exhausted after the match and went into the very back of the bus and wrapped myself into my blanket. I wedged myself into a seat next to a window and drifted off. I woke briefly when the bus started and got on the road but managed to drift off into darkness once again without too much trouble. On some level I guess I registered that we got out of town and back on the dark highway home.\n\nI snapped awake when someone plopped down in the seat next to me!\n\nSome of the guys like to 'rumble' during the bus rides home, fight and wrestle with each other during the ride. It was a way that they let off steam and a practice I rarely participated in. I usually preferred to read or sleep on the road and I made my displeasure apparent anytime someone took a shot at me. Once I picked a guy up and threw him two seats forward, it bent a seat, and I was lucky he didn't get hurt. I felt bad afterward, he was a nice guy and he was just trying to play...\n\nThis was not one of the guys though. It was Karly. I could smell her vanilla scent, so good... I was still half awake, groggily I thought, 'Coach keeps the Stat Girls up front, where he can keep an eye on them'.\n\n\"Not this time he didn't.\" Karly's voice, a whisper, surprised me. I must have been speaking out loud and not realized it! \"Coach said we could run around the bus if we wanted, hang out with some of the guys! He must be really happy with how you did!\"\n\nI tried to shake the sleep from my mind. 'Why is she here?' I thought. I blinked stupidly, \"What's up?\"\n\nShe looked at me, or at least I thought she did, it was hard to tell in the darkness. \"What? I can't come and hang out with you?\" She sounded a little defensive.\n\nMy brain was still foggy from sleep, I didn't do well with short naps. \"No, of course you can. Sorry. Something specific you want to talk about?\"\n\nShe leaned into me and I felt the warmth of her even through the blanket covering me. I couldn't help but lean back into her. She just felt so right! \"I don't know, maybe you could ask me something... interesting?\" It felt like there was a little coyness in her voice.\n\nI fumbled for something to say. I knew what I wanted to ask her but I couldn't... there was no way that she liked me, no way that a girl this magnificent was interested in me... \"How did you feel about the Calc test yesterday?\" I finally managed to stumble out.\n\nShe snorted out a laugh, \"God! You are so stupid!\"\n\nNow it was my turn to feel defensive. The Calc teacher did this thing where he wrote equations on the board turn by turn and had the students compete against each other to solve it quickest, I beat Karly every time. Hell, I beat everyone but Brian, who was one of the others guys on the team, nearly every time. I went for the throat on that one! \"I beat you each and every time in the equations competitions!\"\n\nShe laughed again and said with a smirk, \"And what grade are you getting in that class again? 'Cause I'm getting an A!\"\n\nI felt terrible but I had started this... \"I'm getting a C.\" I was ashamed of that. I was struggling in almost all of my classes; sports and my hectic life problems weren't helping me but mostly it was the fact that I was having serious troubles keeping organized due to my brain jumping around all of the time. I was having a serious amount of trouble keeping my attention on things and it seemed to be getting worse lately. The stress of my life seemed to be making my attention problems worse. It was like the lack of structure was making it harder for me to focus...\n\nShe pushed her advantage, \"And you would be getting an A, if you bothered to do the homework. Kind of scary to see a person who doesn't do the homework doing as well as you do. The only reason you're getting a C is because you're scary smart and you pick everything up faster than everyone else!\" She bumped into me again.\n\nHer little bump took a little of the sting out of what she said. She was right of course...\n\n\"That's not what I meant when I said you were stupid, anyway.\" She leaned into me again. \"I'm giving you free reign to ask me anything you want... we're alone here... the nearest person is like 6 rows away... hell, I might even say yes...\"\n\n'Wait, is she hitting on me?' I thought to myself. I was confused. Her mind was jumping around too much. Hell, her mind was jumping around like mine did. One second we were talking about math class and the next, 'Wait, are we talking about sex?' I thought. \"Are we talking about what I think we're talking about?\" I asked her carefully.\n\nShe leaned into me again and purred, \"Well I'm talking about sex. You might still be talking about Calculus. I'm beginning to think you don't even think about sex.\"\n\nI was again defensive, \"I think about sex!\" I rushed ahead without thinking. \"I actually think about sex a lot.\" Okay, that made me sound like a pervert. Good plan, make sure you put your foot straight into your mouth!\n\nShe laughed at me. \"So do you think about it with me?\" a note of passion in her voice, or maybe that was playfulness and my mind was simply adding in the things I wanted to hear...\n\nI was shocked! That was not a question that you asked someone! Hell, it was not a question a good girl asked any guy! I had to be reading something wrong, Karly was many things and a good girl was definitely one of them...",
        "I reminded myself that I sucked with reading people, and I was tired. I was reading into this what I wanted to hear... I had to be!\n\nShe purred again, her voice a whisper in the darkness, \"I've thought about it with you.\" She leaned into me, this time it seemed like it was a little more sensual.\n\n\"What?\" My voice was entirely too loud in my surprise. I saw some heads turn ahead of me in the bus.\n\n\"Shhhhh!\" She hissed at me.\n\n\"Sorry\" I replied, properly chagrined. My mind was racing. Why was she doing this? Why now?! What the hell was going on?\n\n\"So, what's the deal with you and that Jacky girl?\"\n\n'Aha!' I thought to myself, the tumblers started to fall into place. This was not a genuine interest in me, this was just the petty, 'I'll have him for myself!' game.\n\n\"Is that your business?\" I asked her curtly.\n\nShe stiffened next to me. \"Not really. It just seems like you and her are a thing. I was curious to see if you were available.\"\n\nSomething didn't add up here. She was acting weird. Karly was so confident, always that type of girl that seemed so sure of herself. There was a lot of that here, but it also seemed like there was a note of lost confidence in her voice. Like she was asking a question that she didn't really want to hear the answer to. She pressed on, \"She just doesn't seem like your type.\"\n\nI tried to look at her and read her expression, but it was too dark. What was her game? \"Again,\" I emphasized each word, \"Is. That. Your. Business?\" She pulled back from me. I missed her comforting presence almost immediately. There was something very comforting about her being there pressed against me. I was shocked at how much that bothered me.\n\nShe spoke hesitantly, \"No, it isn't. I was just curious. I mean,\" she paused hesitantly, \"I always wondered why you never made a pass at me. I didn't think I could have made it more obvious I was interested, and I've seen you staring at me.\" She hesitated again, \"I mean you think you're clever... like you're doing it on the sly, but we have four classes together and have had four classes together for years. Your eyes are crawling over my ass for pretty much the entire day. Even though you're with this chick now I still feel your eyes on me, only now you look guilty.\"\n\nI still couldn't wrap my head around what she was saying. Karly was smoking hot. Every guy in the room had his eyes all over her. How did she know I had my eyes on her, or that I felt guilty for staring at her? 'Because she likes you dolt!' I thought to myself, 'She was looking to see if you were looking!'\n\n\"Look, I wouldn't say you couldn't have been more obvious, I mean now, now you're being pretty obvious, but a few measured glances? Not obvious. Also, aren't you with Mike?\" I asked her carefully. Now a part of me didn't want to hear the answer. Mike was the guy that she had seen for the last couple of years. He was a year older than us. I was on the football team with him. He was one of those big, bullying asshole types and walked around like he owned the place. He and I didn't get along. We almost came to blows a few times, though that had dropped off sharply in the last year with my new body and new attitude; had Mike fucked with me last year I would have done everything in my power to crush his face, and only part of that was my jealously over him being with Karly when I wasn't.\n\nShe leaned back into me, put her knees up on the seat and hugged herself. \"He moved; went off to the University. Found himself some nice college pussy and now he doesn't have time for me anymore.\" I could tell that hurt her a lot to admit and realized that I shouldn't have pressed her on the issue. She was a big girl and she could make her own decisions about who she chose to spend her time with. It was then that I realized I asked to make sure I wasn't a fling and that she was really interested in me...\n\nI understood now. She was alone. Like me. She'd been with someone so long she didn't know how to flirt with a new guy, how to get his attention. My heart broke a little bit for her right then. Her confidence was smashed. She wanted to see herself as strong and independent. Wanted to see herself as someone that came straight to the point and said what was on her mind. This whole conversation was about gaining that power back for herself and going after what she wanted.\n\nThat attitude really pissed me off right now.\n\nWhat offended me most the presumption.\n\n\"What is it with you girls? You see a shiny toy every day and you're not interested. As soon as someone else picks it up though, you have to have it for yourself!\" I was quiet, but intense in how I delivered my little speech. \"We've been in school together, hell, had half a day's worth of classes together for four years, and nothing but a coy smile from you. Now that someone else is in my life, suddenly you want to speak up. You want to know why I'm with Jacky? Because she had time for me! While all the rest of you girls were looking down your nose at me because I wasn't cool enough, or athletic enough, or didn't have nice enough clothes or whatever the hell else people like you care about.\" I was shocked at how angry I had become, how angry I was at her for not noticing me before, for not saying something earlier.\n\nShe didn't pull away from me, which shocked me considering what I'd just said to her. In fact I was already cursing myself for a fool thinking she was going to get up and stomp off.\n\nShe just sat there quietly for a second. \"That's not fair.\" She finally said. \"I'm not that person. I've never been that person. Yes. I've not been the girl that threw herself at you, but I was always nice to you. I always liked you. You were funny, and intense and smart. I never made fun of you. I never put you down. Hell, I defended you to the people that did!\"\n\nGod, she was right! I remembered then one time when I was a sophomore. Mike decided to lay into me and I just took it. It wasn't until the next year when I got tired of the crap and started to fight back. I remember Karly telling him to leave me alone.\n\nI remembered her storming off when he didn't. What I most likely didn't see was the fight that broiled out of it. She continued talking, a note of tease in her voice, \"Besides, you're not that shiny!\"\n\n'Wow! I really like this girl!' I thought to myself.\n\nTime to eat some crow, \"Okay, you're right. I'm sorry. I projected my insecurities onto you, and that wasn't fair.\" I stopped and tried to glance over at her to see if she accepted my apology. I very much wanted her to. I hoped I hadn't ruined my chances with her because of my insecurities and the baggage I carried. I smiled and added, \"And I am very shiny! I saw you checking me out today!\"\n\nShe snuggled closer into me. I wanted very much to put my arm around her right then, but I couldn't. While Jacky and I hadn't been official, we had been dating, and while we hadn't made a commitment to each other it wasn't right to have my hands all over this girl while I was dating another.\n\n'This is who I am now' I thought to myself.\n\nShe whispered to me. \"I just wanted to know. I wanted to know why you chose some bubblehead over me.\"\n\nI was a little offended by her calling Jacky a bubblehead, but I squashed that down. No sense in making her angry again. I wanted her to understand, hell, I wanted to understand, \"I don't know. It just happened. She had time for me. She made it easy. She just let me know she was interested in me, and I just went with the flow, and now, well now, here I am. I've been alone for a very long time. I've always felt like someone standing on the outside looking in.\" I turned my emotions over in my mind and tried to examine them from every angle, \"It used to bother me, and then one day it just stopped. I stopped feeling anything but angry. I didn't want to be angry anymore. I just want someone to care.\" The air just sort of went out of me. Was that all it was? Was that all she was to me? Did I care about her, or did I just want to not be alone anymore?\n\n'Or did you just want to get your dick wet?' the cynical voice inside me asked...\n\nI wanted to rail against that, but I just didn't have the energy anymore.\n\n\"Are you fucking her?\" Karly's voice was odd... cold and near emotionless.\n\nI looked over at her with an 'are you kidding me?' look on my face. \"We're not going to talk about that for certain...\"\n\nKarly looked deep into my eyes and I lost myself in them for a second. I thought she was going to be pissed about me telling her no, but she just seemed to be a little more impressed. \"You're a lot deeper than I thought you were...\" she hit me with her elbow, \"I always was impressed with you, but now you're making a girl crush a bit over here!\"\n\nI wanted to keep talking to her. I wanted to tell her that I was interested in her too... but I was also scared that I was crossing a line... both with Jacky and with Karly. \"I'm tired.\" I told Karly. \"It's been a long day... I'm going back to sleep now.\" I felt her stiffen again, and she started to move away. I felt wrung out. Yes, I was tired, but mostly I just felt alone. \"Wait.\" My voice surprised me... \"Stay. Stay with me? I don't want to be alone right now.\"\n\nShe pushed herself back against me. \"On one condition. Share your blanket with me?\"\n\nI laughed in spite of myself. \"I've got one better for you.\" I held my blanket up for her and she crawled in with me. I put my arm around her and she snuggled in tighter to me. Some voice in the back of my head told me that I shouldn't be holding her... but I just didn't care anymore. She felt good and she chased away the bad thoughts in my mind. I was tired of listening to them...\n\nI woke when the bus finally came to a stop at the school. My face was pressed against the top of Karly's head and the smell of her shampoo seemed like it infused every part of me. 'God she smells so good!' I thought to myself. We were both groggy from just falling asleep and were tangled together from sleeping. I realized then, she had her hand on my crotch, and I was... very... excited about it. Her hand suddenly slid up... I tried very hard to move away from her but I think she noticed all the same.\n\nI just had time for the thought to form and she sat up and stretched. I always thought Jacky stretched like a cat... Karly stretched like a wolf. Powerful and sexy. God I wanted to kiss her...\n\n\"Hey, get up sleepyhead!\" Joe's voice surprised me. Then the lights were on and I couldn't see. And once my eyes finally adjusted to light I could see the surprise on his face. \"Uh, yeah... hey Karly.\"\n\nKarly just stood up and grabbed her stuff. \"Hey Joe! Take good care of him! He was great!\" She had a weird smirk on her face she looked at me and winked. 'Fuck! That was sexy as hell!' I thought to myself.\n\nAnd like that, she was gone. Leaving me with only the fading scent of her shampoo trapped in my nose. Joe leaned in close, \"What are doing man!? What about Jacky? You went out with her last night and then you just fuck Karly in the back of the tourney bus?\"\n\n'Wait... what?' The thought just pushed its way into the forefront of my mind. \"What the hell are you talking about? I didn't 'fuck' Karly! We just talked for a bit and then fell asleep! Sheesh!\" I grabbed my stuff quickly, wrapping everything up in my blanket. I was starting to get angry with him.\n\n\"Dude, seriously?\" He called out to me. \"You want a ride home or not? Cause if you do, you need to stop and talk to me.\"\n\nJust about that point, I got next to Karly as she was grabbing her stuff from her seat. She turned and looked at me, \"No problem, I'll give you a ride!\"\n\nI stopped short, embarrassed. \"Uhhh... I live all the way across town. It's going to take a while to get there.\"\n\nShe smiled, \"No problem, I have a friend that lives over that way and I was going over there anyway!\"\n\nI looked back at Joe who looked very uneasy. Finally he spoke up... \"Uh... I think that's a bad idea.\"\n\nI was getting annoyed with Joe now. This was ridiculous. This really wasn't a big deal. He was worrying way too much about me and Karly and it was really none of his business.\n\nI sighed loudly, \"Joe, it's cool. She's headed that way anyway. It's like 11 at night and everything's covered in snow. You don't need to waste time going all the way across town!\"\n\nCoach spoke up then. \"Look kids, I don't care where you go, but you can't stay here! Everyone off the bus!\" I was shocked to see that we were the last three on the bus.\n\nI looked at Joe, \"It's cool, and I got this, trust me.\"\n\nJust like that I was off the bus and headed to Karly's car.\n\nBefore I got there I looked back and saw Joe standing in front of the bus, silhouetted in the headlights of the bus, just staring at me... like some vision of a prophetic future...\n\nI got in the car and told myself that I was being stupid...\n\nKarly started the car up and pulled out of the spot she was parked in entirely too fast. The rear wheels skidded out, she swung the car around and quickly pulled out of the parking lot. When we finally hit the street out front I was starting to seriously begin to worry that she was trying to kill us both in a murder-suicide designed to look like an accident.\n\nI finally spoke up, \"Uh... I appreciate the ride and everything, but would also like to arrive at my destination alive.\" She looked at me and smiled.\n\nShe reached over and opened the center console, pulling something out.\n\nShe starting fiddling with whatever it was and said, \"Sorry. I've been dying for a smoke for hours now! I just wanted to get on the road so I could have one!\"\n\nIt was then that I realized what she had in her hand, cigarettes! I thought she was one of those good girls! Good girls don't smoke! \"You smoke?\" I managed to stammer out.\n\nShe looked at me funny, \"You knew I smoked, you saw me last year at that party and I was standing outside smoking!\"\n\nI realized then that she was right. I remembered looking at her and watching her. Standing there with a couple of her friends... I thought how sexy she looked standing there. I had always had a thing for girls who smoked. I had wanted so badly to go over to her and tell her she looked great that night.\n\nShe kept looking at me, \"So, do you mind if I have one? I'm dying for one here?\"\n\nI was still shocked, \"Where do you even get cigarettes?\" I asked her.\n\nShe looked at me like I was stupid. \"I buy them. I'm 18. I turned 18 a month ago! In fact...\" she paused, thinking, \"the only reason I'm in your class and not the one ahead of you was that my birthday was two weeks after the cutoff!\"\n\n\"Well excuse me! It wasn't like I was invited to the birthday party or anything!\" Man, I really wished she had invited me to that party!\n\n\"Well, can I have one? Do you mind?\" She asked me shyly.\n\nThat shook me out of my trance. \"Oh, yeah, it's fine. Both of my parents smoke so I'm kind of used to it.\"\n\nShe slowly took one from the pack and lit it, taking a deep puff from that first drag. She rolled her window down a crack and exhaled the smoke out the window. 'Holy shit that's sexy!' I thought as I watched her smoke. She noticed me watching her and started flipping her attention between me, the road and her cigarette. Finally, she broke the silence, \"What? Do you want me to put it out?\"\n\nI was suddenly embarrassed again, \"No, it's just...\" I fumbled to put it in a way that wouldn't make me sound like a weirdo, \"I always thought girls who smoke were sexy. Something about it that just gets me going.\" I must have been more tired than I had figured.\n\nMission failed, I sounded like a weirdo...\n\nShe took another long drag from it and smiled at me. \"Does your Jacky smoke?\" she asked me as she exhaled, pushing the smoke towards the window.\n\nI looked out the window, watching the snow fall, the lights pass. I was quiet for a while. \"No.\" I finally answered her. I was starting to realize how far behind me Jacky was. How far behind everyone I knew she was.\n\n\"Well that's strike three...\" Karly said, her voice like a dusky whisper. I didn't know if she was talking to me or to herself.\n\nI turned back to her. Her face lit by the instrument panel. 'God she's beautiful' I thought to myself. I recoiled a bit at the thought but couldn't help myself. \"Strike three?\"\n\nKarly looked at me and smiled. A pure smile that lit up her pretty face far more than the lights of the instrument panel ever could have. She pushed her cigarette out the window and rolled it up, cutting off the cold air rushing into the car. Her smile faded to just an uptick of her lip on one side of her face. \"Strike one. She's a bubblehead. I've seen her, she's dumb as a post. You're smart as hell. She's sexy, but dumb is going to get old really fast.\" Karly was right. Jacky was not the smartest person in the world. I often found myself having to explain stuff to her that I felt was basic...\n\nKarly continued, \"Strike two, she's immature. You're three years older than her. That may not seem like a lot, but trust me, I've dated an older guy, and even a small difference in ages is going to mean a lot. In a few months you're going to be going to college, she's going to be talking about going to prom, or a high school dance. Again, that's going to get old really fast.\"\n\nAgain, Karly had pinned it down correctly. It wasn't so much that Jacky was stupid, it was that she was both not smart, and uneducated. We didn't see things on the same level and that was getting really old.\n\nKarly pressed her last advantage, \"And strike three, she doesn't smoke, which you find sexy. I like my chances.\"\n\nI shook my head. Maybe I was just too tired to keep pace with what she was talking about. Her mind jumped around like mine did, never staying on the same topic for more than a few seconds. I had never been around someone who thought the way I did. I saw how frustrating it could be... \"What are you talking about?\" I finally asked her when I realized I wasn't going to add everything up.\n\n\"You and me.\" Duh. I knew that. What did Jacky have to do with that? And also, there was no Karly and me... I just didn't have the heart to tell her that.\n\n\"You and me?\" I asked her.\n\n\"I've been thinking about it.\" We were getting close to my house. I wished she would take a wrong turn. I wanted to stay here longer with her... \"I want you. I want you to myself.\" She looked at me and even in the dark I imagined I could see those perfect green eyes. I wanted to brush the hair from her face. To lay kisses down the side of her neck. To feel the warmth of her beneath me as I surged into her...\n\n'Stop it!' my brain called out to me and I forced my mind away from that.\n\n\"I want you and I'm not going to take no for an answer.\" She looked at me with a directness that startled me a bit. 'This is how a deer feels as the wolf drags it to the ground.' I thought in a panic...\n\nI felt the sense of inevitability settle down over me. It seemed certain.\n\nLike I was being drowned, like being pulled into a dark abyss; water filling my lungs; I fight upward but ice has covered the hole and I can't find air...\n\n\"I want you to myself, and I'm not giving up.\" She looked directly into my eyes. A part of me wanted to scream at her to keep her eyes on the icy road but she had me locked into that stare, her soul mixing with mine...\n\nHer gaze finally turned back to the icy road. \"So what do I have to do? What do I have to do to make you mine?\" her voice was suddenly very fragile.\n\nA voice in my head warned me that saying the wrong thing would shatter her right now. She was plunging into the icy depths right next to me, maybe coming after me... this was a moment that would change the person she was forever if I answered wrong.\n\nI thought about it. What did she have to do? 'Not much' I admitted to myself. One day, hell not even one day with her and I was close to forgetting everything I felt about Jacky. Everything that I was so sure of when I got out of bed, blown away like one of those buildings you see in an atom bomb test. Just torn away to the foundations like ashes in the wind.",
        "I clenched my jaw and looked away from her. My eyes settled on the falling snow outside the window. My mind felt like those flakes, drifting in the wind, pushed this way and that. No focus, no thought, just white serenity.\n\nWho was I? Why was it important? Suddenly I knew that this moment was important. This moment would be one that I'd look back on and realize that it made or broke my entire life. It seemed so petty but I sensed it.\n\nIt had always meant so much to me to be the kind of person that was loyal... to never have to worry about my changing mercurial feelings.\n\nI never thought of myself as weak. Karly was making me weak though. I had starting feeling and now those feelings were starting to break through cracks in my armor...\n\nI realized then that I had suppressed a lot of myself in anger. It was a realization that rocked me to my core. The person I was, was shifting very quickly and I was having trouble keeping up with that person.\n\nHer voice cut through my thoughts, \"Do I have to apologize for not noticing you? I do. Do I have to apologize for choosing Mike over you? I do. I wish that I had done what my heart told me the first time I saw you, that I really saw you.\"\n\nShe looked at me again, something between anger and sorrow on her face, \"That first glance at the man you are, the strength and the sadness. I saw how lonely you were, and how strong you were while you stood looking into the darkness. I walked away from you then because I was scared and I'm sorry. I've known that person since I was a freshman and I kept turning away from him. I know I don't deserve you but now I'm scared that I won't ever get to see the rest of you and I feel like I'll die if I don't.\" Tears rolled down her cheeks.\n\nWhat brought this on? Why did she feel so strongly about this?\n\nI mean I had noticed her, but I had never felt strongly about her. Maybe a slight crush emotionally, a larger lust for her beautiful form but not this deep emotional connection. Was I broken? Did I just not feel like everyone else did?\n\nCould I not form an emotional connection to anyone?\n\nWas she was just crazy?\n\nI rolled my feelings around and examined them. This felt very right. So much more than it ever had with Jacky... I felt a connection with Karly that I had never felt with anyone before in my life...\n\n\"So what do I have to do?\" Her voice cut into my thoughts and brought me back to the moment. She looked into my eyes again and I felt our souls lock again. Her jaw set and she seemed to push her will onto me. Her eyes returned to the road, her grip tightened on the wheel. \"Do I have to have sex with you? 'Cause if that is all it is, just say it.\"\n\n'Holy shit!' my brain suddenly threw a breaker. 'Where did that come from?'\n\n\"You want to fuck me?\" Again she pinned me down with that stare, and I felt so helpless. I was the deer again, the wolf tightened its jaws around my throat and I thrashed helplessly. I pressed myself to the ice holding me under the water and felt the cool texture of it against my hands; the small imperfections as I thrashed against it, the last things my fingers would ever feel...\n\n\"You can. Just say the word. My parents are gone until next Tuesday on a ski retreat. Just say it. I'll take you back to my place and I'll fuck your brains out all night long. Hell, I'll fuck your brains out all day tomorrow too. You can have me any way you want. Anything you can think of. Any way you can think of. All I ask in return is that you hold me in between. That you let me believe you care about me the way I care about you. And Monday morning you end it with her. I won't be anyone's side bitch and I won't share you with anyone else. And you try. You try to learn to love me.\"\n\n'We should take that option' my brain, and my cock screamed out to me. I might have said yes right then... but I saw the tear drop down her face. I was breaking her. She wanted so desperately to not be dependent on anyone... to not need anyone. To be beautiful and confident and I was taking that from her just by being quiet. I didn't have a good answer for her. I couldn't think. We started to come up to my house...\n\nI had to buy some time to think. Not speaking right now was tearing her apart at the seams. I reached my hand out to her, held it open and hoped she would take it. She looked at it like a snake that would bite her. \"Drive around the block please,\" I found myself saying to her. Her hand slipped into mine and she nodded her head, the car speeding back up. Her hand was cold in mine. She squeezed it so hard! I returned the pressure hoping it would help ground her.\n\nI looked forward into the snowy night. Watched the rhythmic pulsing of the windshield wipers. The regularity of them seemed like a life preserver in the water for me. Shwish, shwish they went, focusing my thoughts.\n\nWhat did I want? Tear it down to the foundation and really look at it... not what Karly wanted. Not what my friends thought. Not what my dad thought about me. What did I want?\n\nI want to be someone. I want to be someone to someone. Someone that turns the gears of someone else's world. I didn't need much. Not a whole host of friends and family that loved me. Not adoring fans, or a screaming stadium full of people.\n\nJust one person. One person that truly saw me... for me. One person I couldn't hide from no matter how hard I tried. And I wanted to be good... to be the person that person deserved.\n\nMy thoughts drifted to carnal thoughts of Karly...\n\nIn my mind I pictured her naked. My hands tangled in hers as I kissed her deeply. The feeling of sliding deep into her. The feeling of her thighs against my hips as I drove into her. Her lips on mine as I kissed her deeply...\n\nIn my mind there was a little yellow light shining on her face from my left side, bathing that side of her beautiful face as I pulled away from our kiss and stared at her. Her eyes closed in ecstasy as I drove into her again and again...\n\nMy heart swelled as I thought about it and I wondered what that meant. Normally when I thought about this it was all centered on the sensations of the flesh, the feeling of her body on my cock, the tightness there, the sensation of driving in and out of someone, but this was so much different; this was all about my feelings for her, the feelings in my heart and my mind; not the feeling of my body and hers.\n\n'Stop it!' my brain shouted to me!\n\nI couldn't stop thinking about it though...\n\nThis was so much different than any other fantasy I had ever had.\n\nIt felt like I was there... like a dream in real life.\n\nIn my mind, I closed my eyes and felt her all around me. I couldn't see her, but I could hear her moans, feel her hands clenched tight in mine. I could smell her hair as I leaned back into a kiss with her. I could taste her perfect lips and her perfect tongue as it crawled into my mouth.\n\nI could feel her body trembling. I could feel the blankets rub against our legs as I pushed into her over and over. I could feel the urgency of her voice as she whispered for me to go faster and harder. I pushed my face into the hollow of her neck again and tasted her sweat.\n\nI could feel my breath on her face as I whispered into her ear... \"Karly.\"\n\nI could feel her hand untangling from mine. I could feel her nails scratch at my ass and she put her hand there to pull me into her harder. My hand was on her breast then and she moaned in ecstasy through the combination of sensations.\n\nOur eyes met and her hand snapped up to my head and pulled me back into a deep kiss. She threw her head back and screamed as she crested beneath me, a scream of raw sensual bliss and I knew pride in knowing that I had given this to her...\n\nTo be the person they deserved...\n\nThe thought of it crashed into me and pulled me out of the fantasy, or vision, whatever it was. My eyes snapped open and I didn't even realize that I'd closed them. We were closing in on my house for the second time. How was that so short a time? It felt like I'd been inside her for hours...\n\nBe the person someone deserves.\n\nThe thought was like a mantra in my mind.\n\nIt gave me strength I didn't know I had. I looked at her again, 'God she was so beautiful!' I again thought. I could see something like panic in her eyes, no longer was she the wolf, now she was the deer. The car stopped in front of my house.\n\n\"I can't go home with you\" I whispered to her.\n\nThe tears threatening her eyes suddenly spilled over the edges. I brought her hand up to my lips and kissed it. \"It's not about you. It's about me. I can't be the person you are asking me to be.\"\n\nI considered what I was about to say, \"I won't be the person you are asking me to be.\"\n\nI felt steel grow inside myself and I knew in that moment that I was right before when I thought this moment would be one of those that would define the man that I would one day be.\n\n\"No woman that ever loves me will share me with another. I won't do that to you and I won't do that to Jacky. I don't know what I want, but I do know that if I went home with you right now the person that you woke up with tomorrow morning wouldn't be the same person you went to bed with tonight.\"\n\nI raised my hand and brushed the tear away from her face. \"Don't cry about me. I'm not worth it. I'm not the person you think I am. For everything that I am I want to go home with you. I want to feel every inch of you... to know every inch of you. That is selfish of me and you shouldn't cry for that piece of shit. I'll try to be better. I'm sorry.\" I pulled my hand away from hers and started to turn to the door.\n\n\"Kiss me?\" I turned back to her. Her eyes were locked on me again. The hardness in her edges was back and my heart soared to see it. She had been tempered by this moment and had come out somehow stronger... I wanted her even more...\n\nI didn't respond I just leaned in and kissed her with every fiber of my being. Maybe it was the dry winter air, maybe I had just shuffled my feet too much on the carpet while I sat there, but I could feel a small jump of electric current as our lips touched.\n\nThe kiss started off slowly. Small, chaste even, and then built like an avalanche. I found my hands tangled in her hair. My nose filled with that vanilla scent again, tinged with just the slightest hint of the bitter smoke of her cigarette. Her mouth opened beneath mine and I couldn't help but respond in kind. Her tongue probed into my mouth and her tongue tasted just the way that it did in my vision of her.\n\nMy hand found its way around her breast. Fuller than Jacky's. Firmer. She moaned into my mouth. This is so much better than Jacky...\n\nThat thought snapped me back to reality. I pulled away from her. 'God, she almost pulled me in' I thought to myself. 'I was almost helpless.' And I wouldn't have cared either... the thought scared me a little.\n\n\"Please don't...\" I whispered to her. It was a plea from me to her. She had me right there. She had me pinned to the wall and all she had to do was lean in and kiss me one more time and the last vestiges of whatever man I was would be blown away like snow in the wind. I wasn't sure that I would like the man that would be left after that wind...\n\n\"Go if you're going to. I can't control myself much longer.\" she whispered.\n\nI fled her car. Just grabbing my stuff at my feet and diving out into the snow. I fled from her. I didn't look back.\n\nI couldn't... I made it as far as the gate in front of the house. I wanted to go in. I really did. I closed my eyes and tried to focus my thoughts...\n\nThe cold. The snow falling in the night. I felt and saw it all. I knew it then. If I walked away. I would lose her. I couldn't do that. I turned back and looked at the car. Still sitting there idling. She was just a dark form inside. My feet carried me back. I don't remember making the decision. I just remember them carrying me through the snow. I went around the front of the car and pulled the door open.\n\nShe looked up at me in shock. Her face was wet from her tears. I had never seen a woman more beautiful in my life. I reached in and took her hand. It was like she floated out of the car and like that she was in my arms. I kissed her like my life depended on it. She clung to me like a lifeboat in freezing water.\n\n\"Come inside?\" I whispered to her when I finally managed to break away from her lips.\n\nHer head nodded weakly. Her eyes lost all focus and she was breathing fast. \"What about your parents?\" she asked me breathlessly.\n\nI smiled at her and was suddenly very grateful for those lonely nights... \"Not a problem.\"\n\nWe ran in the snow, hand in hand around the back of the house. I opened the door and let her run up the stairs ahead of me.\n\nMy apartment was less an apartment and just a small loft about an old house. It looked like a converted attic that someone had made a studio apartment out of. It was small, but it was mine. She reached the top of the stairs and stopped at the door. I had to press her back and reach past her and put my keys in the lock.\n\nHer lips were like a siren's call to me... I pressed myself up against her and kissed her deeply again. Our tongues mingling. I found her hand and held it tightly. Our kiss broke and I found myself kissing down the side of her neck... her arm was wrapped around me, her breaths came in ragged gasps...\n\nI suddenly wanted her inside. I broke away from kissing her and pushed the door open. It stuck a little, but pushed open without too much trouble. Still holding her hand I pulled her in after me... I barely got the door closed before I was kissing her again. I pressed her back against the door and kissed her with every fiber of my being. My hands tangled in hers as I raised her hands above her head and pressed her flat to the wall.\n\nShe broke our kiss and offered me her neck again. An offer I took her up on all too eagerly. My breath was hot and shallow. That smell of vanilla crashed over me once again... I traced my kisses up the side of her neck, finally settling into the hollow of her jaw and her ear.\n\n\"Stop, stop...\" She whispered breathlessly, \"I don't want your parents to catch us like this...\"\n\nHer comment made me stop and laugh. I pulled back from her and took a step back. I still held her hands in mine as I looked deep into those green eyes and pulled her deeper into my apartment. I flipped the light to the kitchen, which was on my right, on, bathing the room in light. I smiled at her and said, \"It's just you and me here. I live here alone. This is my house.\"\n\nConfusion crossed her face as she tried to wrap her mind around what I had just told her. She looked around dumbly trying to understand.\n\nHer eyes once again locked onto mine and I found myself pulled into their depths once again, 'I could stare into those eyes forever' I thought to myself...\n\n\"How do you live by yourself?\" she finally asked me.\n\nI shrugged at her. \"It's complicated. This used to be my mom's apartment and I took it over when she went to live with her boyfriend.\" I stepped back and gestured for her to look around. She took her coat off and looked around, I finally picked up the queue that she was looking for a place to put it...\n\nEmbarrassed I stepped forward and took it from her. I neatly hung it on a little hook that was next to the front the door. Deciding that the house was too warm I pulled my warmup sweatshirt off and hung it over the top of her coat. 'Need to put up a few more hooks' I thought to myself, 'not really set up for company here...'\n\nI turned back to her and saw her kind of peeking around, curious about my little place but too polite to just make her way around. I waved my hand dumbly, \"Go ahead, look around!\" I told her.\n\nIt hit me then. How shabby this little place was. Three small rooms and a closet for my clothes. I didn't know everything about her, but I figured considering how nice her car was, she came from money. I was proud of my little house, but she was not going to be impressed with my shabby furniture and my bachelor's style.\n\n'At least it's clean for once...' I thought to myself dimly.\n\nShe stepped forward and looked into my kitchen, a small smile of wonder on her face.\n\nShe took in the range, the small counter. The old fridge that still had the old style pull open handle that went the way of the dinosaurs when people starting worrying about stupid kids locking themselves in them. She looked over at the old battered Formica table that did double duty as my desk.\n\nShe turned and went into the room to the right of the front door, my bathroom. Looking intently at the small walk in shower, the toilet and the sink...\n\nShe smiled at me as she went into my front room which doubled as my bedroom. She looked at the twin sized bed I slept in each night. 'Thank god I made the bed this morning.' I thought to myself as she walked into the room. She examined the small television on the stand on the opposite side of the room, so I could watch it from the bed. Looked at my big comfy chair...\n\nAnd then she was down to the details. She took in that I had no pictures on the walls. No family or friends. Not even some little trinket to brighten the room... There was a bookcase made of boards and cinder block bricks but other than that the room was nearly empty. The only other furniture in the room was a little table that I had built out of scrap lumber that held the alarm clock next to my bed.\n\nShe went to the bookcase and looked over my books. Most of them salvaged from a used bookstore or a second hand shop. Her fingers tracing along the books as she read along the titles. Mostly fantasy and sci-fi titles.\n\nI looked around the room and realized how pathetic I must seem to her. I looked at my little twin bed. My pitiful little table with the battered, second hand alarm clock. Handed down sheets and blankets. My one tired looking pillow. Not one ounce of personality to the room... it was like a monk's cell, I finally realized... 'How was I so proud of all this one minute ago?' I asked myself.\n\nI noticed then her fingers tracing over the small leather bound book on top of the book shelf. She picked it up and started to open it. I jumped forward and snatched it from her fingers.\n\nShe looked up at me in shock...\n\nI fumbled to explain, \"My journal... sorry. Private.\" I looked at the floor. Ashamed of my little house now. I threw my journal on the bed and started to walk away. Defeated...\n\nShe caught my hand and pulled me to face her. Her hands set on each side of my face and she smiled at me, that infectious smile that pulled me in each time. She ran her fingers under my eyes, wiping away tears that weren't there. \"I love it.\" She whispered to me. \"It's perfect.\"\n\nAnd with that she kissed my lips so tenderly. I wrapped my arms around her waist and pulled her into me. Our kiss was less passionate this time. Tender and without the animalistic need our previous kisses had shared. Her arms wrapped around my neck and I thought how lovely it would be... to kiss those lips like this every morning before we headed off to work...\n\nI broke it off and looked at her. \"I'm embarrassed.\" I confessed to her. I looked around the room and realized how small I was. How pathetic I looked. This girl was high class. She had dated a guy that obviously had money, who most likely spoiled the shit out of her. I couldn't compete with that. I had no car. I had no beautiful house. I had no family that took care of me and cared about me. Hell, I didn't even have internet here! 'No Netflix and chill for you' I thought sarcastically to myself.\n\nI found myself trying to look at my feet. She stopped my gaze and pulled it back up to meet hers. Her eyes flitted around on my face, as if she was looking for some answer there... \"Why are you embarrassed?\" she asked me.\n\nI couldn't explain it to her. How would I tell her I wasn't good enough for her? How would I tell her that without making her seem like a materialistic bitch? \"Look at this place... I was so proud of it and then I look at it through your eyes and I see how pathetic it is.\"",
        "Her eyes narrowed, 'She's getting angry,' I thought to myself. She grabbed my chin firmly and made me look at her. \"There's nothing pathetic about this place, or about you. When I look at your home I don't see anything to be ashamed of. I see a house that a 17 year old kid built for himself. I see your touch in each and every thing here. I see a place that is filled with your sweat and tears. I don't know of any other kid in our school that could have carved this much of the world out for themselves and manage to keep it.\"\n\nShe attacked me then. Her urgency pushed me back and I tripped over the bed, landing hard with her on top of me. Her mouth was hot on mine. I felt something hard in my back and realized it was my journal. I really wanted to move it, but her lips had me trapped in a spell...\n\nI wrapped my arms around her and rolled her around putting myself on top of her...\n\nI couldn't stop kissing her. She turned her head to the left and I worked my kisses down the side of her face and traced my way down the side of her neck. I felt my body drawn between her legs. She wrapped them around my waist and I felt the hard fabric of the denim press against me... I really wished those pants weren't there.\n\nMy hand found her waist, sliding up the smooth skin there and under her shirt. I traced my hands up her sides feeling the muscle and skin there, everything so smooth and warm... my kisses had traced their way down to the hollow of her neck and shoulder and I stopped there kissing and kissing. I was very excited for her, and I let her know it by grinding myself against her every chance I got.\n\nShe looked at me then and I pressed her face down, smashing my mouth down on hers and kissing her passionately. Her tongue snaked its way into my mouth again and I could once again taste her the unique taste of Karly...\n\nMy kisses again started to work my way down her neck, and I could hear her speaking to me breathlessly, \"Wait... wait... just a second...\" I wanted to... but I couldn't bring myself to stop. Her hands against me felt too good, her skin tasted too good, her smell was too good.\n\nMy hands found their way higher, finally cupping her breasts. She grabbed my hands. \"Whoa there buddy, hold up!\"\n\nI stopped, breathless. I didn't understand. I looked at her in confusion.\n\nShe took a deep breath and I could tell she was trying to clear her urges. She wanted me and it felt delicious! \"I just realized, I'm 18. You're underage... so you're going to have to wait!\"\n\nI turned to my right and looked at the little alarm clock. In bright red numbers it announced.... 12:04.\n\n'Thank you God!' I screamed inwardly as I started laughing.\n\nKarly started smiling at me and I was once again struck at how it lit her whole face up... \"What?\" she finally managed to ask me.\n\n\"I'm not underage anymore. I turned 18 four minutes ago!\" I had never been so happy to see midnight in my life!\n\n\"Seriously?\" she asked me.\n\nI just laughed again and nodded my head, confirming that yes, I was serious. \"Do I need to give you two forms of id? Cause I have my driver's license and social security card in my wallet in my bag!\"\n\nThe hungry look smashed back into her eyes then and she tackled me backwards into her being on top of me. My journal was in my back again but her kiss was so good and so hungry that I didn't care... she finally broke away from our kiss and said coyly, \"Happy Birthday!\"\n\nI laughed at her, matching her smile... it felt like my face was going to crack open I was smiling so hard. \"It's looking pretty happy right now!\" I told her. I put my hand on the side of her head and pulled her back up to kiss me again... 'God her mouth feels so goddamn right!' I screamed to myself, losing myself in her flavor and sensation...\n\nShe broke away from our kiss and nibbled at the side of her lip, pinning me in place again with those beautiful eyes. Her hand rubbed its way across my chest, tracing its way across my muscles in a way that felt so delicious... Her voice was teasing and full of a husky breathiness, \"I didn't get you a present...\" she said coyly.\n\nI put my hand on each side of her face, tangling my hands in her soft locks... I ran my thumbs beneath her eyes the way she had done for me... \"Just you being here right now is the best gift I've ever received...\" I pulled her to me and kissed her again. She melted against me and I savored the firm but soft feel of her body against me.\n\nShe broke out of our breathless kiss and sat up, straddling me, her hips pressed urgently into mine... \"I can do so much better than that!\" she said with a laugh.\n\nShe pulled her shirt off then, stripping it off over her head, revealing a white bra and the best looking breasts I'd ever seen...\n\nI looked up at her in wonder and tried to wrap my head around how I had gotten this goddess here... how had I gotten so lucky? Her tummy was firm and tight, not cut like a fitness model but still firm with strength and grace. I traced my fingers there, feeling the delicious warmth of her skin, the way it slid against my calloused hands, hard from hours spent working with the grip of the bars in the gym...\n\nMy hands settled on her hips and she ground them into me, her eyes closing in ecstasy and she pressed her womanhood against my manhood. I was getting the better part of that deal... I was wearing sweats in comparison to her jeans. I couldn't take that anymore...\n\nI surged up and flipped us around so I was on top of her... my journal thankfully flipped off of the bed and landed on the floor with a thump... 'Shit, I had forgotten about that...' I thought to myself with surprise.\n\nOur mouths tangled again and I, without her shirt had a better opportunity to rub my hands over her delicious muscles. I stayed away from her breasts though... one warning was enough for me!\n\nI positioned myself above her body, forcing myself to move away from her enough that I could reach the button of her jeans. I kept kissing her as I unsnapped it. Her hips lifted and she let me start to slide them down... I had to untangle from our kiss to pull her pants off and with a growl did so... finally settling down between her legs, kneeling on the bed.\n\nI was careful to not pull her panties down as I started to pull her jeans down over her hips...\n\nShe looked at me knowingly and purred... \"You're forgetting something...\"\n\nSuddenly I was forgetting about pulling her pants down and was kissing her... I couldn't stop kissing her. When I finally broke away from the kiss she said breathlessly, \"Not that... my shoes....\"\n\nMy hand tangled in hers and once again started tracing kisses up the side of her neck... \"I know,\" I growled at her, working my way back to her lips once again... \"This just seemed so much more important right now...\"\n\nHer tongue surged into my mouth again and her kiss took on a hunger that matched mine. I felt her wrap her legs around me and dimly, somewhere in the back of my mind, the one little spot that wasn't affected by the passion of our kiss, I felt her working her legs so she could kick her shoes off. I never took my mouth off her... I didn't care anymore. I could kiss her forever...\n\nOur kiss found a new gear and I started to very much care about those pants again. I managed to pull away from her and rip her pants off of her...\n\nI wasn't gentle...\n\nI couldn't control myself any longer... her presence here in my bed was like a drug, the strongest drug I had ever felt.\n\nAs I finished pulling her pants away I tore my shirt away as well, throwing it on the floor next to the bed. Like that, I was back to kissing her, feeling the intoxicating sensation of my tummy rubbing against the bare flesh of her firm stomach.\n\nI was rock hard and for the first time I was able to press it against the hollow of her womanhood without the armor her jeans provided. Our hands tangled together and I pushed against her. Even through my sweats if felt spectacular... for her it was like an electric current passed through her body and she moaned breathlessly, \"Gabby...\"\n\nNever had that name felt so good to my ears...\n\nI was kissing at the hollow of her neck and shoulder again, trying to resist the urge to grind myself against her too hard, or too fast.\n\nMy hips pushed against hers rhythmically, pushing myself against her opening just to the point that I bent and it hurt just a bit and then I would allow myself to slide up the top of her hitting what I knew was her sensitive button...\n\nIt felt so spectacular and from her reaction she was enjoying herself... I couldn't focus on anything but the sensations of my body... everything felt so warm and fuzzy... I felt weak.\n\nSomething snapped, and she moved like a she-wolf again and was on top of me. My cock was pressed against my body and she was grinding her hips rhythmically against me. Her hands fell to my chest and we just lay there, moving in time with one another, both of us lost to the sensations our bodies passed back and forth between each other.\n\nI finally was able to open my eyes and look at my beautiful she-wolf... her eyes were open, watching the pleasure she was giving me... \"I haven't finished unwrapping your present...\" With that, she unhooked her bra, her hips grinding against me the entire time...\n\nThe visual she provided was spectacular... 'God she's perfect!' the thought echoed through my mind. Her breasts were better than I could have ever imagined, more than a large handful, firm and round, her nipples just slightly darker than the rest of her perfect flesh... I looked hungrily wanting so much to kiss them...\n\nHer hands found mine and dragged them up to those perfect breasts... I had made sure not to touch them again since she had told me not to... now was different, now she wanted my hands on her!\n\nI obliged her, taking her breasts, one in each hand and rubbing them, feeling the perfect softness of them rub beneath the callouses of my strong fingers. Her nipples were little rocks and my fingers were drawn there. I rolled her nipples lightly between my thumb and forefingers and she made little sounds of joy and increased the pace her hips set against mine....\n\nAnd then her mouth was hot on mine again. The feel of her breasts pressed against my chest was spectacular and my hands found their way to her naked back, exploring for the first time the taught muscles there. I suddenly very much wanted to feel her pressed fully against me without my sweats getting in the way...\n\nThrough our kisses I kicked off my sneakers and reached down and started to pull my sweats off, careful to leave my underwear in place...\n\nI understood we wouldn't be having sex... this was simply us exploring each other's bodies...\n\nShe was helping me get my sweats down, but was not climbing off of me and not really stopping the gyrations of her hips, her lips on mine, and her tongue was back in my mouth, now with her moans added to the equation... she was driving me wild...\n\nI got my sweats down to about mid-thigh when she stopped and suddenly looked down. I was terrified she was going to stop... had I presumed too much?\n\nShe looked back up to me... \"Are you fucking kidding me?\" With that she moved down my body, grabbing the waist band of my underwear and ripped them off along with what was left of my sweats. She twisted her body and tore her own panties off, and like that she was back on top of me, only now she was grinding her bare pussy onto my cock... I wasn't in her yet... but it was a near thing.\n\nShe looked into my eyes fiercely... \"I've never had a guy tease me that badly... I need you.\" She ground herself against me and I realized that I was standing at the edge of a precipice. One that if I moved one more inch I would fall over and be lost in forever.\n\nI felt myself line up with her... her mouth was hot on mine again... I felt the first beginnings of the entry of her body...\n\n\"Stop, stop...\" I whispered to her urgently.\n\nTo her credit she stopped... god I wish she hadn't... \"What?\" Annoyance tinging her voice as she panted, looking at me like a caged animal.\n\n\"We shouldn't\" I panted back at her.\n\n'What are you doing?! Shut the fuck up stupid!' my brain screamed at me...\n\nI wanted this so badly... but I wanted her more... more than her body.\n\nI wanted her mind and her soul. This was moving too quickly... I flashed to our conversation in the car, her aggressive offer to me...\n\nWas this what she thought she needed to do to be with me? Was I pressuring her into this? Did she want this?\n\nI wanted to scream to her, to tell her it didn't matter... but I was embarrassed. Instead I settled on, \"We have no protection...\"\n\nShe settled down on me a little... I could feel... one more centimeter and I would be in her and that would be the end of my control... protection, no protection, her wanting me, her not wanting me, none of that would matter...\n\nHer breaths were coming in ragged little gasps... Her lips curled into a wicked smile... \"Not a problem...\"\n\nShe started to slide onto me and I felt myself fall off of that edge. I was done. My hips rose to meet hers.\n\nShe let out a moan of satisfaction and I let out a growl of contentment. She was tight, and warm, and very, very wet. This was heaven.\n\nHer mouth tangled with mine again as she pulled me as far into her as I could go. One of my hands went to her ass and gave a little shove just to see if I could get a little more... I couldn't help myself.\n\nHer hands wrapped around my head and she once again offered me her neck. I bit my way down the side of it and pulled her tight to me, just enjoying the feel of our bodies becoming one.\n\nShe broke away from our kiss and our eyes met as she started to slide me in and out of her. Her hips moved in quick, deep thrusts, taking me almost all of the way out of her and then slamming me back in. She smiled in pure, unadulterated joy... \"How do you want me?\" she asked me.\n\nAny final vestiges of doubt or control left me at that moment and with a growl I rolled her over and forced myself atop her. I thrust myself into her as hard and as fast as I could, growling into her ear with each thrust. Her legs wrapped tight around and she held onto me with all of her strength...\n\nMy hands found hers and I forced them down to the bed. Her fingers held mine tight, squeezing harder than they had any right to...\n\nI forced my mouth over hers and growled my pleasure into her. Her tongue forced itself roughly into my mouth and I gladly accepted it.\n\nI was getting close...\n\nThat brought me back to myself a bit. I realized then that I wasn't with her in the moment. I didn't want that. I wanted to experience this yes, but more importantly, I wanted to experience it with her. I forced myself to slow my thrusts into her and looked into her eyes as she had done for me moments ago...\n\nI smiled at her the way she had smiled at me... \"How do you want me?\" I asked her.\n\nHer eyes somehow got even greener and her moans became a smile. Her hand came up and grabbed my head and pulled my face to hers for another deep kiss. We had shared a lot of great kisses so far but this one was by far the best... her need was animalistic in its intensity.\n\nHer hips started to move in time with mine and she started bucking wildly beneath me, matching my pace and speed, forcing my thrusts shallower but driving our pelvises together on each stroke...\n\nIn seconds she was there... she pulled me down flat to herself and I felt her entire body go tense beneath me. She had felt great around me before but in this moment it became a place of pure magic. I could feel the tremors of sensations passing through her body as wave after wave of pleasure slammed through her. My body was rewarded for giving her that pleasure as she suddenly seemed to tighten herself to me as if she was made just for me.\n\nIt was too much for me to hold onto. I was swept over the edge by her orgasm and into one of my own. I felt my body release and each stroke became mind numbingly pleasurable. I thrust into her over and over until I could take no more...\n\nAs I came back to myself I looked for her beautiful eyes... her face was turned away from me showing me only the profile of the left side of her face. My hand moved up and with a light touch on her chin I turned her face back to mine. She was breathless from her pleasure...\n\nI pushed my hips deeper into hers even though I was softening and kissed her again, wrapping her in my arms and squeezing her like I was trying to crush the life from her. She clung to me as tightly as I did to her.\n\nOur kissing lasted some time, long enough for me to realize that I was starting to get excited by her again... I could take no more however...\n\nI was exhausted from the long day. My eyes scratchy and my vision cloudy. My body was completely and totally relaxed and I realized with some hesitation that I was not going to be able to take her up on her offer to fuck her all night long...\n\nI lay down beside her, leaving the only pillow to her. My feet hanging off the bed I simply held her as sleep started to crash down on me.\n\nI felt her stir beneath me and she started to slip away from me.\n\nI stirred enough to look at her sleepily. \"What's up?\" I asked her.\n\nShe looked at me with a sad smile, picking her panties up from the floor where she had thrown them. \"We're done... I should go.\"\n\nI flopped myself onto my side and reached out to her, \"We're not done,\" I said to her.\n\nShe smiled, a true smile full of joy and slapped my arm. \"You think you can go again huh?\"\n\nI smiled back at her and shook my head, \"No way I can go again, but if you think I'm going to miss the opportunity to wake up and feel you beside me all night you're crazy.\"\n\nA puzzled look forced itself onto her face, \"You want me to stay and sleep with you?\"\n\nI lifted myself up onto one arm and looked at her. There was something going on that I didn't understand... some piece of some puzzle that I didn't, or couldn't see. Some Karly shaped piece. Those pieces were suddenly very important to me. \"I want to feel you next to me forever... please stay?\"\n\nShe had told me her parents were out of town and I figured this would be one of the few opportunities I would ever have to feel her beside me all night long. No way was I missing out on that experience.\n\nShe smiled at me and threw her panties back on the floor. Her mouth was suddenly on me again, deep, and passionate. She forced me to my back and kissed me for what seemed like forever. Exhaustion crested over me and I finally, dully, allowed my head to drop down to the bed, smiling a deep and contented smile at her.\n\nShe lay her head on my chest and traced the rough hair there lazily with her finger. I started to drift off slowly, feeling her warmth beside me, smelling the sweet vanilla fragrance of her hair, the scratchy feeling of her pubic hair against my thigh where she had her leg lazily thrown over mine.\n\n\"Gabby?\" she asked me just as I started to drift off.\n\n\"Yeah, beautiful?\" I looked at her blearily.\n\nShe smiled at me, joy lighting her eyes at my pet name for her. \"You mind if I turn off the lights and we get under the covers?\"\n\nMy eyes were barely staying open but I smiled back at her and told her, \"Anything you want, as long as you come right back to me when you're done.\"\n\nHer lips met mine again as she dipped her lips down and stole another quick kiss. \"You get under the covers and I'll be right back.\" And with that she slipped away from me.\n\nI instantly wanted her back, but contented myself with knowing she'd be right back...\n\nI opened up the bed and climbed under the covers. The lights went out and I almost lost myself to sleep. I could hear her traversing my dark house carefully, unfamiliar as she was with the environment.\n\n\"Over here baby girl.\" I called out to her.\n\nI could sense her adjust her path a bit and then she was back to me. She opened the covers and slid in beside me, resting her head on my shoulder. \"Thanks,\" she whispered to me.",
        "\"I'll always be there for you when it's dark, babe.\" The last thought I had before I dropped off the most restful night of sleep I had ever had was, 'Damn that was a smooth line....'\n\nChapter\n\nI woke in the middle of the night feeling Karly's nearly atomic warmth beside me. Normally my house was kept cold at night to save on bills, so my bed was layered in deep quilts and covers, mostly second hand shop items picked for their thickness rather than their look...\n\nWith just me in them, things stayed nice and toasty, but with me and Karly in them it was downright hot, and in more than one way!\n\nWakefulness came to me slowly, sneaking in as all my synapsis moved from sleep to fully awake. Karly was still curled up on me, her head pillowed on my shoulder, her arm across my chest, her legs tangled in mine. She had been so relaxed, but now I sensed a tension in her, like she was clinging to me.\n\nMy brow furrowed as I tried to understand what was happening, was she just uncomfortable from the heat of the covers? Her body made small tremors and jerks, her muscles briefly firing and then then going rigid.\n\n'Bad dream,' I finally realized. I brought my right hand up and covered her arm across my chest, my left arm tightening around her. I hoped that the extra contact would help her sleeping mind feel safer and would help shake her dream into a better place.\n\nShe continued to tremble. I worried. Suddenly she made a noise, low and soft, not a scream but a noise that made me react as if she had...\n\n'Nope! Not gonna happen anymore!' I thought to myself. I had to push down a wave of pure rage, intellectualizing that the threat to her wasn't physical... I was surprised how protective I felt for her and so quickly. There was a beast inside me that screamed at me to tear the threat apart!\n\nI rolled over and wrapped myself around her, pushing my right leg between hers and wrapping her in my arms. Kissing her face I whispered to her, \"Baby girl, it's okay, I'm here...\"\n\nShe woke quickly... not with a start but coming back from the land of dreams and back to my arms. She wrapped herself around me and pressed her face into the hollow of my shoulder and head. I purred at her, trying to soothe her and erase her fear. \"It's okay, baby girl. I'm here.\"\n\nHer grip was tight on me and desperate, it scared me a little. \"Are you really?\" she whispered into my shoulder.\n\nI kissed her neck, and her jawline, not a sexual kiss, but one that let her know that I was here with her and that I lo-... that I cared about her. \"Of course I'm here.\"\n\nHer face stayed buried in my neck. \"I dreamed you left me last night. That you got out of my car and you just walked off into the snow, into the night.\" Her voice was raw, almost as if she was on the edge of tears. \"I just sat there crying and crying, hoping you'd come back for me...\"\n\nI could feel hot tears on my shoulder now. Her head made a little shaking motion against me. \"But you didn't come back.\"\n\nDream me was a real dick. I tightened my arms around her and whispered into her ear, \"But I did come back for you, and I always will baby girl, so long as you'll have me.\"\n\nI could feel the warmth of her against me, so intoxicating. I was excited about her, I could feel myself down there responding to her nakedness pressed against me. So much beautiful and supple Karly. Perfection...\n\nShe whispered into me again, \"Will you make love to me again?\" Her voice felt so fragile, like she seriously thought I would turn her down...\n\nI rolled her over onto her back, never breaking our tight hug, and slid between her legs. I suppressed the urge to kiss her and simply held her tight in arms while she clung to me as if she were trying to make our body's one.\n\nThen I made our body's one.\n\nIt might have been the heat of the covers but the inside of her burned like a furnace. The wetness was more intense than it had during our first session. She made no noise as I entered her, and that worried me... she was extremely vocal during our first time together.\n\nI worried that I might be hurting her, or maybe she didn't really want me in her?\n\n\"Thank you.\" She whispered into my ear, shocking me...\n\n'Thank me?' I'm the one with this beautiful creature wrapped around me! I should be on my fucking knees right now thanking god that she even let me be in the same room as her, much less that she would share her body with me! I nodded against her. \"You never need to thank me. I'll make love to you as long as you'll have me... and wish I was a better man long after you've sent me packing.\"\n\n\"Then you're going to be making love to me for a long time,\" she whispered in my ear.\n\nI could only wish that was the case... I felt undeserving of her...\n\nMy upper body wasn't positioned right, I could sense it. The way I was hugging her was great on our sides but with me on top of her it felt more like I was applying a triangle choke. I didn't like mixing the image of my sweet Karly and anything that would hurt her...\n\nI untangled my left arm and slid it around and under her right one, grabbing my other arm and holding her as tight as I could without hurting her. She repositioned herself so her arms were wrapped exclusively around my head. I gently rocked myself in her, not pulling out and crudely slapping myself in her but instead just pushing myself as deep into her as I could and making her feel me there. Her legs tightened around me and I wondered if she was trying to push me out, or trying to let me know she wanted me there...\n\nI finally decided that if she wanted me out, she could tell me. This was about her, not me, and projecting my insecurities on her wasn't helping her pain.\n\nI flexed my chest muscles against her and tried to will my strength into her fragile mind. My grip on her tightened as did hers on me.\n\nI wanted to badly to kiss her neck. To add so much more movement to our lovemaking but I suppressed that thought and just rocked her slowly. I could feel her breath on my neck, coming hotter and faster. She still clung tightly to me and I increased the pace of our rocking, still not thrusting at her but instead just rocking her, relishing the feel of the length of her on the length of me.\n\n\"Do you want me?\" She asked throatily in my ear.\n\n\"Forever and ever I want you.\" I whispered back to her.\n\nHer grip on my head somehow found another gear and I could feel her legs tighten on mine, as if she were trying to somehow drive me even deeper within her...\n\n\"Do you need me?\" She panted into the side of my neck.\n\nI needed her more than I had ever needed anything in my life. I realized then that this was so much more than sex to me, and I desperately hoped it was for her too...\n\n\"I need you more than the sun on my face, or the breath in my lungs,\" I whispered back to her.\n\nDo I want her? Do I need her? There was a third question there... one I desperately hoped she wouldn't ask me. Do I love her? I would have to lie to her if she did. I would have to say yes. In her fragile state she couldn't stand to hear me say no. I realized then that she was so much softer than her outside edges showed. She projected an air of strength and absolute confidence but inside she still felt the need to be loved and desired...\n\nShe wasn't different from me at all, I realized as we rocked each other in the dark room, joined together in the most intimate way possible. I showed the world my anger, made myself an outsider. Showed how willing and able I was to be pushed to violence. She showed the world a confident, beautiful doll. We were both just shells and masks. Inside, we were both so much less, and so much more. We both wanted to be loved. To feel a deep connection...\n\nI knew then that I loved her. Her beautiful, fractured soul that so mirrored my own. How had I not seen that before? How had she been so much more perceptive than I had?\n\nHer voice broke me from my thoughts... and I screamed at myself to say it before she asked me.\n\nIt was too late though... \"I need you too.\" She whispered to me. The moment passed.\n\nI felt like a coward for not telling her right there. Instead I just rocked myself in her and enjoyed the warm embrace of the woman I loved.\n\n\"Will you kiss me?\" She whispered to me, \"I want to feel you everywhere in me.\"\n\nI desperately wanted that!\n\nI moved from her neck and smashed my mouth down over hers, instantly driving my tongue deep into her mouth. She moaned then, and finally her arms untangled from my head, wrapping around my body and instead moving to my powerful shoulders and neck.\n\nShe broke our kiss. \"Will you go harder? I want to feel you deeper in me.\"\n\n'Try and stop me!' I screamed inwardly as I finally pulled myself from her sheath and drove into her with every ounce of strength in my body.\n\n\"Oh god! Like that!\" She screamed at me. I pounded fiercely at her, pushing myself as deep in to her as I could go on each thrust. Her hands were still rubbing away at my shoulders, moving from my neck to my upper arms and back. I realized she must like the feel of the hard muscle under her fingers and so I forced my shoulder forward a bit, knowing that would cause the muscles she seemed so fascinated with harder.\n\n\"Kiss me,\" She commanded.\n\nI again forced my mouth down over hers, my tongue dancing inside her mouth. Sweat poured off of our bodies as I thrust myself into her over and over again.\n\nHer moans were getting louder and more frantic, and I tried to increase my pace to match her increased desire. She suddenly went tight under me, her mouth breaking away from mine, \"Don't stop! Please don't stop!\"\n\nI knew what that meant... do exactly what you were doing. Not go faster, not suddenly go harder, do exactly that.\n\nI obliged the hell out of her.\n\nI could suddenly feel her nails in my back, digging deep and hard. Her body was completely rigid beneath me and I felt her pleasure slam into her body, communicating to me through how we were connected.\n\nOnce again she made a home just for me. I couldn't hold on anymore! Instead I pulled her tight to me and grabbed a fistful of sheet as I grunted into her neck. The orgasm wouldn't stop! I kept pumping into her and pumping into her, her nails raking down my back and she bucked and screamed beneath me...\n\n\"Please stop...\" She begged me, \"I can't take anymore!\"\n\nThat was enough to break my trance and I slowed myself to a stop, still staying within her and once again laying kisses down the side of her neck. She panted beneath me. Finally she rolled away from me, pulling my sword from her sheath. She lay on her side and snuggled into me. I wrapped myself around her back, sharing the pillow with her and breathing in her perfect scent. 'Great, vanilla is always going to make me horny now...' I thought to myself.\n\nI wasn't sleepy anymore. I just wanted to enjoy feeling her fall asleep in my arms and I decided that was exactly what I was going to do...\n\n\"Thank you,\" She finally said.\n\nI chuckled deep in my chest and kissed her neck, \"I think you have that totally backwards, baby girl. I should be thanking you for even letting me be in the same room as you!\"\n\nShe wrapped her hand in mine as it explored her firm stomach. \"I'm not kidding. Mike never let me stay when we were done.\" I knew instantly to stop laughing. She was sharing something very important here and giving her the impression that I thought it was funny would be a very bad move.\n\n\"I asked him if I could a few times, rare times when we could get away with it.\" She paused. \"He let me, but I could tell that he didn't want me to.\" I felt anger rising in me.\n\n\"He didn't make love to me...\" Again a pause, I didn't like hearing about her being with another man. \"I realize now after just being with you twice that he never made love to me. He fucked me. He used me for what he wanted. I feel you inside me and I feel like you and I are becoming one... I feel like you are giving while you take. I used to think that with Mike too, but I realize now that he was just using me for his own pleasure. You realize I've cum more with you in one night than I did in three years with him?\"\n\nThe animal inside me screamed then, something raw and primal. I could feel it slamming against the bars of its cage and howling into the night. I was going to rearrange that dickhead's face the next time I ran into him, hell, I should have done it years ago!\n\nI had to stop and remind myself that if Mike hadn't have been a total dipshit I would not have this goddess in my arms. I could tell that she would have most likely stayed with him, willing to sacrifice her own happiness just to have someone...\n\n'Say something!' my body warned me as I felt her starting to stiffen beneath me. \"His loss. My gain.\" I growled into her ear. My hand drifted down between her legs, finding her button and rubbing softly. Her hand flew down and covered mine, driving it down harder on her sensitive flesh. I kissed that beautiful neck again, raking my teeth over the sensitive skin beneath her ear.\n\n\"You're mine now!\" I growled at her, \"and I plan on keeping you in this bed as often as I can convince you to climb into it with me!\"\n\nShe turned suddenly and forced me onto my back... straddling me. I felt her wrap around me down there... wet from her own excitement and our previous lovemaking session. My back arched in pleasure as she forced herself back down on me...\n\nThis was going to be the best birthday ever!\n\nChapter\n\nI woke to the sound of noise in the kitchen and a wonderful aroma. The bed was cold beside me, and I already missed her...\n\nI got out of bed and put my underwear on, padding to the kitchen on the way. I turned the corner and leaned against the wall, watching my goddess' back as she stood in front of the stove. She had ear buds in, the wireless kind, and her cellphone was on the counter next to her. 'Funny, I don't remember her bringing those in last night,' I thought to myself as she swayed back and forth to the music, bouncing her ass and gyrating to the music.\n\nShe had put my shirt on, and I assume she was wearing only her panties underneath... 'Please dear god in heaven, tell me she isn't wearing panties underneath...' my brain whispered. 'Nice of her to strip back down once she got back inside,' I thought to myself and I hoped that meant that she had plans to follow through with her offer of attempting to fuck my brains out for the rest of the day!\n\nI shook my head, 'God, why couldn't she have put her shirt back on?\" I thought. I'd have loved to watch her ass bounce and sway in nothing more than a set of panties..\n\nShe must have felt my gaze on her back as she turned back and smiled at me, her green eyes flashing as her face lit up... \"Happy Birthday!\" She crowed!\n\n'God, she is so beautiful,' I thought.\n\nShe pulled her headphones out and threw them on the counter. \"You were supposed to stay asleep, I was going to make you breakfast in bed!\" She said to me playfully, turning back to whatever she was cooking. 'I'd like to do a lot more with you in bed than eat breakfast right now,' I thought to myself as I watched her ass...\n\nI glanced at the clock and saw that it was almost 11 in the morning and was shocked to see that I had slept as long as I had.\n\nMy silence made her turn around and glance back at me again. She raised her eyebrows at me, \"Well, are you gonna come over here and ride a bitch's back while she cooks you breakfast or what?\"\n\nI nearly growled in lust for her right then and there. I knew she wasn't serious about the sex while she cooked thing, she just wanted to feel me pressed up against her.\n\nI wrapped my arms around her from behind and pressed myself to her perfect back. It was like she was built just for me, she fit against me so perfectly...\n\nWith my left hand I pushed her hair away from her neck and started planning kisses there. My hands both dropped to her sides, working their way down and starting to work their way under her shirt. She melted into me and kept stirring at what I could now see were eggs, scrambled eggs.\n\n\"What do you think you're doing mister?\" She asked me playfully.\n\nI continued to kiss her neck and growled into it, \"Riding a bitch's back.\"\n\nShe craned her head back and let me kiss those beautiful lips... 'God, it is so hard to break away from her!' I thought to myself as that electric tingle hit my lips and she broke away to pay attention to her cooking.\n\nMy hands continued to explore, finding their way around and beginning to rub her button through her panties. She melted some more. \"And now what do you think you're doing?\" She whispered. I could tell her desire was starting to get the better of her...\n\n\"Well,\" I whispered playfully in her ear, \"I was thinking of unwrapping my present again...\"\n\nShe slapped my hand playfully with the spatula and I pulled it back in surprise. \"No!\" she said playfully, \"You unwrapped it three times last night! Besides there are eggs in question here!\"\n\nI pulled her closer to me and let my erection slip between her legs, hitting her just right... \"What about my eggs?\" I growled into her ear as her legs nearly melted out from beneath her. She stopped stirring and grabbed the stove for support.\n\nThe eggs were done, and she pushed the pan off the heat of the gas grill...\n\nShe was aggressively rubbing her ass against me now and I was torn between pulling her panties down and turning off the burner on the stove... 'Just a little more of this' I thought as I continued to grind my hips into hers...\n\n\"Are you just gonna bend me over the stove and fuck me now?\" She asked huskily.\n\nSomething snapped in my mind and I suddenly wasn't even close to being in the mood. I turned her around and quickly snapped the burner off. \"Don't do that,\" I said to her a little too sharply, leaning against the counter and looking at her.\n\nShe just smiled at me, ignoring my anger, \"Well obviously, I wasn't going to let you fuck me over a hot stove, I just wanted you to move me over to the counter and fuck me there.\"\n\nI ground my teeth at her, \"You know what I meant...\"\n\nShe moved up and pressed her body against mine and I almost forgot about my anger at her. I didn't like being compared to that asshole Mike, and I felt like that was just what she had done...\n\nShe must have read my mind, because she looked me in the eyes and said, \"I'm not comparing you to Mike. He used me every time he was ever with me. I realize with you we have something more...\" she smiled and my anger was dropped in a cold bath...\n\nShe turned and started rubbing her ass on me again, her hands reaching back and grabbing mine and wrapping them around her. \"That doesn't mean I don't want to still get fucked occasionally!\" She growled at me as she pushed even harder into my stiffening erection.\n\nI was confused... what was she talking about?\n\nShe pressed her back fully against me, making as much contact as possible as she rubbed herself up and down on me. My hand found its way back to her clit and started rubbing in a soft circular pattern around the sensitive flesh there. \"A girl needs to get fucked occasionally. To have her man just take her hard and fast, to satiate himself on her. It lets her know that she's the sexiest thing he's ever seen... most people equate a man fucking a woman with him dominating her, and sometimes that's the case, but sometimes... a woman driving her man so crazy he can't help but fuck her is the best way to show her she's in control!\"\n\nAnd like that she moved away from me. I growled in need as she walked away...\n\nShe continued, \"And sometimes, the best way for a woman to know she's in control is to tell her man, no pussy for you until you finish your breakfast!\"\n\nAnd with that she slid her ass up onto my table and spread her legs. She leaned back against the wall, and started rubbing her clit through her panties...\n\nMy breath was coming gasps as I felt my need for her. I started to move to her and she put her hand over her crotch and pushed her legs together. \"Oops.\" She emphasized each word and I almost went wild, \"I. Said. No. Pussy. For. You. Until. You. Eat. Your. Breakfast.\" Her jaw tilted out and while I could tell she was playing with me I could also tell she was loving every minute of it.",
        "I realized on some level that I shouldn't let her talk about herself like this, but I was too driven by need right now to care... I grabbed one of the plates and a fork she had set out on the counter and threw a spoonful of egg onto it. I looked back at her and she pointed to between her legs. \"Set your plate right here... you can watch me play with my pussy while you eat.\"\n\nGod, that almost pushed me over the edge right there... I was holding on to my control though. I walked over and set my plate down between her legs and pulled the chair over. As I brought the first forkful of egg to my mouth she pulled her panties aside... Her hair down there was shaved in a straight line, leading down to her clit. Everywhere else was smooth and perfect.\n\nThe bite of food was halfway to my mouth and forgotten... \"Eat, I said.\" She growled at me.\n\nI shoved the bite in my mouth and chewed quickly. She had her right hand, pulling her panties aside for me while she rubbed her middle finger up and down her slit...\n\nI managed to get a bit more egg on my fork but was doing it blind as my eyes were glued on her...\n\nSuddenly she slipped her middle finger into herself and gasped.\n\nA circuit threw in my mind. I shoved the plate of eggs into the corner, the plate sliding neatly underneath her leg and landing with a crash. In one smooth motion I stood and grabbed her left wrist, the one not buried in her pussy and pulled her off the table. I couldn't control myself as I spun her and forced her down. My right hand found their way inside one leg and the waistband of her panties and I just pulled...\n\nThe fabric ripped with a loud shrrrip! sound and suddenly I was pulling my underwear down and driving myself into her.\n\n\"Fuck!\" She screamed as she drove herself back into me.\n\nGod damn her pussy felt spectacular on me. I reached under her shirt and grabbed a heavy handful of her tit and squeezed hard, not being gentle but simply taking what I wanted.\n\n\"Fuck me!\" she screamed as I drove myself into her, setting a pile driver's pace.\n\nShe had her arms stretched out over the table and was using pressure against the wall do drive back against me on each thrust. I could barely control myself... 'Fuck! She is fucking hot!' I thought to myself as I drove into her as fast and as hard as I could.\n\n\"I thought you were too good to fuck me?\" She screamed, her hand suddenly snapping down and playing with her clit.\n\n\"Shut the fuck up,\" I growled at her...\n\nI managed maybe five more strokes into her before I came...\n\nWhen I came back to myself she was bent over the table beneath me, most of my weight on her. The gravity of what I had done slammed down on my shoulders and I pulled myself from her.\n\n\"Hey! Warn a bitch before you do that!\" She screamed at me.\n\nMy legs sagged and I fell down into the chair... I felt horrible. How had I done that to her? She turned and smiled at me, a triumphant smile like she had just won a prize! Her look turned to horror as she saw the anguish on my face. Instantly she was on top of me in the chair, her legs spread over mine and my head cradled in her arms. \"It's okay, it's okay, it's okay\" She whispered to me.\n\nI felt so bad! How could I have done that? How could I lose so much control!? I felt her kisses start to land on my face and realized she was kissing all around my face trying to comfort me. Why was she comforting me? I was the one that...\n\n\"Gabby it's okay. I wanted you. I wanted to experience that with you.\" She explained looking into my eyes. Those perfect green eyes grounded me every time. She smiled at me and my heart started to lift. \"I was playing with you! I wanted to push you over the edge!\"\n\nI finally got it. She showed me she was in control by making me lose mine. She pushed me through my hang-up with Mike and her attitude. She showed me that I was human too, and that was okay...\n\nI laughed and took her in my arms, finally appreciating her naked crotch on my lap...\n\n\"Sorry about that,\" I finally mumbled into her breasts.\n\nShe leaned back from me and smiled. \"Sorry? You made it a shitload farther than I thought you would! I almost broke up laughing when you got the plate of eggs! And the look on your face when I pulled my panties aside? Priceless!?\"\n\nShe crowed in her victory and now I could see what she was talking about. She had taken complete control over me, just with her sexiness. I would have done anything to make her happy there, I would have killed for her, I would have died for her...\n\nI just joined in her laugh and pushed my head between her breasts, wishing that the shirt wasn't covering her lovely flesh...\n\n\"I'm gonna get you back for that you know,\" I said to her, completely laughing and losing myself and my worries with her.\n\n\"Never happen. I've got too much control for that!\" She crowed at me one final time. \"Now come on, your breakfast is almost cold and I've got cum on my leg!\"\n\nThat thought finally smashed into me... \"Uh... speaking of cum... I've cum in you four times now. I probably should have asked about this earlier...\"\n\nShe smiled and ran her fingers over my face. \"I'm not stupid Gabby. I've been on birth control since I was 15... we're fine.\"\n\nRelief washed over me. I loved Karly and I loved being with her but I was not ready to be a father...\n\nChapter\n\nBreakfast was delicious. The plate that I splashed against the wall was a complete wash, but fortunately I took a pretty small portion and so there was still plenty left for the two of us. I only had the one chair in the kitchen for my table, 'Really got to do something about this furniture situation, especially if I'm going to be having company regularly!' I thought to myself.\n\nWith no place for both of us to sit we took our food into the living room, she sat in my big comfy chair and I sat cross-legged on my bed.\n\nWe sat, eating and chatting quietly amongst ourselves. She had taken a pair of my comfy workout shorts from me to replace the panties that I had torn up... still kind of felt bad about that, but after the stunt she had pulled I briefly considered making her go without!\n\nShe'd offered to put her pants on sans panties and I decided for the sake of ease of trying to get back in her pants we'd compromise with the shorts.\n\nI scratched at my eyes and she noticed. \"Allergies?\" she asked me.\n\nI looked up from my plate and explained, \"No, with all the excitement last night I forgot to take my contacts out. Not used to sleeping with them in, now they're bugging me.\"\n\nShe smiled at and me, \"I forgot mine in too, though I wasn't really planning on sleeping over anywhere so it wasn't like I could have done anything about it had a remembered!\"\n\nSomething she said to me earlier last night occurred to me suddenly, \"Your friend! They were expecting you!\"\n\nShe gave me a funny look, \"What the hell are you talking about?\"\n\n\"Last night, when Joe was going to give me a ride home you said you'd drop me as it was on your way to your friends' house.\" I explained to her.\n\nShe laughed at me again, I was starting to get the impression that she really loved to do that, \"I was lying. There was no friend. I just wanted to see you for longer and by the time I said it I had my entire speech from last night planned out in my head. I was pretty sure I was going to chicken out though.\"\n\nI laughed and was flattered that she was willing to pull her little stunt just to have the chance to get to be with me for a little longer.\n\nIt felt good to be wanted.\n\n\"So what are your plans for your birthday?\" She finally asked me.\n\nI looked at her and thought, 'I'm planning on calling it all off and rolling around with you in the covers all day...'\n\nI settled for, \"That depends in large part on how many times you're willing to let me unwrap my present...\"\n\nShe smiled at me shyly, it was a beautiful smile. \"I think you're done unwrapping your present for a little while.\"\n\nI had finished with my food and set my plate aside. \"You being an Indian giver now?\"\n\nShe looked at me with sultry eyes, \"No, but I've already missed a bunch of calls from my parents and I'm going to need to go home and wrap up a couple things...\"\n\nI was disappointed. I realized then that I didn't want her to go. I nodded my head, \"I understand.\"\n\nShe looked at me and tucked a strand of hair behind her ear, \"Plus I was thinking I could throw together some stuff in an overnight bag, you know, maybe come back and stay here tonight.\"\n\nMy smile nearly split my face! I realized then that she was asking permission... 'lets get that problem settled right now,' I thought to myself. I got off my bed and went to her, kneeling and taking her plate from her hands. I set it aside on the floor and again thought that I needed to get some more furniture... sheesh.\n\nI put my hands on her knees and leaned into her, kissing her too soft lips and causing a purr of contentment to escape from her. I took her face in my hands and made her look into my eyes.\n\n\"When you go home, I want you to put a bag together, some clothes, a toothbrush,\" 'What the hell else do girls need?' I thought wildly to myself. \"Anything you need to get ready for the day. I want you to bring it back here and leave it here. You're going to be staying over here pretty often and I want you to have stuff ready when you do.\"\n\nNow her smile nearly split her face, \"Really?\" she asked me. She kissed me full on the lips and met my eyes again. \"You don't mind?\" she asked.\n\nI slid my hands under her shirt and across her back, kissing her again. \"Do I mind? Well that depends, how many times a night am I allowed to open my present if I let you stay?\"\n\nShe smiled coyly and breathlessly at me, \"As many times as you'd like,\" she finally answered.\n\nI leaned in and kissed her with everything I had, pushing her back into the chair and taking her breath away in the process, \"Then you can move in today and just stay here forever!\"\n\nWe shared a long and passionate kiss. Finally she pushed me back away from her. I couldn't hide the disappointment from my face...\n\n\"I need a shower,\" she told me, \"You have any desire to open your present again?\" I stood her up and showed her how interested I was in opening my present again...\n\nChapter\n\nI followed Karly into my tiny bathroom, her hand in mine. I watched as she turned the water on and adjusted the temperature... I decided she needed a little help there and came up behind her. I wrapped my arms around her and slid my hands beneath her shirt, running them over her smooth stomach and finally settling on her ample breasts.\n\nShe purred and leaned back into me, reaching back and rubbing her hand along my stiffening manhood. It felt spectacular... \"What do you think you're doing mister?\" she asked me coyly.\n\nI rubbed her breasts harder, listening to the water pour down in the shower. \"Hey, its my present and I'll unwrap it any way I want to!\" I replied to her. My mouth found her ear and I teased the lobe with my lips and tongue, feeling my way along the sharp studs she had there. I stopped and nibbled along her ear...\n\nShe turned and faced me, raising her arms above her head. \"How do you want me?\" she asked me, echoing her comment from the previous night.\n\nI walked up to her and slid my hands beneath her shirt, \"Naked.\" I told her flatly. I pulled her shirt off of her and stood and beheld her amazing rack. I stepped away from her and looked at her with raw desire. \"You do the shorts, I want to watch you do it!\"\n\nI could tell by her expression that a thought suddenly occurred to her and she said, \"Hold that thought!\" and started to push past me.\n\nI was completely surprised as she pushed past me. I wasn't quite standing there holding my dick in my hand, but I was pretty close... I did enjoy watching her breasts bounce as she ran past me though. She came back into the bathroom with her phone. I laughed and told her, \"You think I'm doing nudes or a vid, you need to have your head examined!\"\n\nShe laughed at me, \"No, not that,\" she looked me up and down... \"well, not this time, but we'll circle back around to that!\" She was playing with her phone then, swiping her finger down the face and looking for something on it. \"Got it!\" she exclaimed and moved to me like a she wolf...\n\nShe put the index finger of her left hand on my chest and with just the slightest of hints pushed me back one step, two steps, three and I was at the bathroom door. \"Stay there...\" She purred at me. She stepped back between the sink and the shower, she held her phone up and smiled at me. \"I love this song, and I've always wanted to strip for someone to it... this is Desire, by Meg Myers, and Karly!\"\n\nWith that she hit play. The speaker in the phone sounded a little tinny at first, but the song was cool. Heavy base, a nice beat, the girl singing had a good voice. Karly started to sway and bounce to the music, doing some very interesting things with her body that had my attention pretty quickly... She turned her back to me and looked back over her shoulder just about the point that Meg told me she wanted to fuck me...\n\nI was shocked at the lyric and my attention split for a second between Karly and Karly's phone. That ended quickly as my attention snapped back to her sensual ass moving in time with the music...\n\nShe undid the drawstring on the shorts and slowly slid them down, keeping eye contact with me the entire time she showed me all the interesting parts those shorts were covering... 'fuck me' I thought as the shorts hit the floor.\n\nAbout mid way through the song she raised her index finger and beckoned me forward. I moved like she had strings on me... 'this song is definitely ruined for me from now on...' I thought as I moved towards her... 'no way that I'll ever be able to hear it again without getting a hard on!\n\nShe backed into the shower, the water kicking and spraying as she immersed herself in it. She leaned back sensually and let the shower run over her hair, wetting it completely. Her hand ran down her breast, making trails in the water as it passed... she leaned against the wall of the shower and spread her legs, letting the water run down her front, her right hand pinched her nipple and her left ran down over her mound.\n\nI growled and moved to join her but she once again held a finger up, stopping me. The song was almost over... \"You don't let me in there right now and we're going to have a repeat of this morning!\" I growled at her.\n\nShe raised her eyebrows and smiled a wicked smile at me. \"Oh you can join me, but you're still wearing your underwear...\"\n\nI looked down and realized that she was right!\n\nI pulled my underwear away quickly and stepped into the hot water with her. Her hands wrapped around my face as I pushed her back and put my tongue in her mouth, sweeping her into a kiss to take her breath away. Her naked, wet body pulsed beneath me as I pushed her into the wall.\n\nI'm a practical man... sex in a shower looks good in a movie, but in practice it rarely is that steamy, and I knew it. I figured rather than get frustrated trying to make love to her I'd try something new, and just for her...\n\nI worked my kisses down her body, sparing additional attention on each one of her nipples... my fingers explored the front of her mound, teasing her clit and eliciting a chorus of moans from her. Her eyes were closed and her left hand was grabbing the top of the shower enclosure as she tried to hold herself up...\n\n'Good, she's going to need the extra support here in a second...' I thought to myself as I kneeled in front of her, kissing her stomach. Water pounded me in the face as I felt her hand come to the back of my head, I wear my hair in a buzz cut so there was nothing for her to grab onto there, but she rubbed my head and pulled it into her body as my fingers did their magic.\n\nI twisted my hand and moved my attention from her clit down to her opening... I started by working my long middle finger into and her watching as her head went back and her moans became deeper, more sensual. Soon my ring finger joined it, bringing another level to her pleasure...\n\nHer eyes snapped open when my tongue first lapped against her clit. I worried a little bit about tasting my own semen considering that I'd deposited more than a little of that there in the past few hours but I figured what the hell, if it made her feel good I'd take one for the team!\n\nHer legs spread as she gave me better access to her opening. Her taste was spectacular. Something spicy, and sour crossed my tongue and then it was all sweet...\n\nWater pelted and ran down my face as I licked and fingered her. I'll be honest, it's not easy to go down on a girl in the shower, and I very nearly drowned myself giving her the pleasure I did. I found that no matter how I held my head the water ran straight down her body and into my mouth... breathing was nearly impossible and I simply had to resort to bouncing back and forth between breathing and holding my breath depending how her movements caused the water to bounce down her body.\n\nI'm sad to say that I did not manage to elicit an orgasm out of her... I had hoped that I'd be able to my first time but the water was just too damn awkward...\n\nShe finally pulled me up and stared into my eyes before leaning in to kiss me. I smiled and told her, \"Just a second... I have Karly all over my face! Let me wash up, first!\"\n\nHer finger stopped me, dragging a little furrow in my jaw, \"Nope. If you can go down on me after we've had sex, I can kiss you afterwards... it's a union rule. You can go look it up!\"\n\nI smiled and kissed her hard, pressing her back into the wall. I expected it to be a chaste, close mouthed kiss, but instead it turned into a full on tongue in mouth affair. I wasn't going to complain about that...\n\nShe finally pulled away from me and looked into my eyes... \"Mike never did that for me.\" She said.\n\nMy heart lurched a beat and I had to repress an urge to drop her and push myself away.\n\nI could see the cringe on her face, a look that clearly said, \"OOPS!\". With a grimace she said, \"Sorry.\"\n\nShe was embarrassed now and I felt bad for reacting so strongly to it. She was trying to be complementary to me and it was only natural to compare me to past lovers. Hell, I probably would have done the same... had there been any past lovers.\n\nWith held each other in the water for a minute, a silence that wasn't quite awkward but was definitely in the same zip code. I still wanted her, but I could tell the mood had soured and decided that I'd rather lose a chance at getting laid than make it even more awkward and force a performance out of either of us.\n\nI turned and grabbed a bar of soap and started running it over her body... let me tell you, she had the cleanest set of breasts in the world! She smiled at my ministrations and made her body available for me to scrub. The little walk in shower wasn't the best at being helpful to a decent shower, but what it lacked in room I made up for in personal attention.\n\nI was soaping up her back while she held her hair up when she finally broke the silence. \"I'm sorry I brought Mike up...\" she shook her head at herself... \"it's just that was something I always wanted him to try and he never would for me.\"\n\nI wrapped my arms around her and cupped her breasts again, just to let her know I was okay... \"It's okay baby girl. I get it. You're going to compare me to the people you've been with before.\"\n\n\"Person,\" she corrected. \"Just one.\"\n\nI laughed and started applying soap to her back again, \"Okay, person you've been with before. Nothing for me to be mad about. So far it looks like I'm coming out pretty well in the competition. Don't sweat it, it's only natural for you to talk to me about it, and I want to know what you enjoy and what you don't.\"\n\nShe was pretty stiff beneath me, \"It's not that natural. You seem to be able to avoid doing it. I don't hear you talking about the girls you've been with before me.\""
    ],
    "authorname": "LukasGrey",
    "tags": [
        "18-year-old",
        "love story",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/falling-29"
}