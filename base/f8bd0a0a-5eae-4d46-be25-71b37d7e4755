{
    "title": "Sizzling Embrace Ch. 06",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nTyler Tyron Wesley vs. Tanesha Ashton \n\nDedicated to Comentarista82 (closet redhead huh?)\n\nUncontrollable passion!\n\n***\n\nTanesha sat beside Tristan in his expensive Lamborghini Reventon and stared unseeingly at the quickly passing scenery through the window. Her mind was in turmoil. Had everything that happened between her and Ty on that Island been just a job to him? Losing her virginity to Ty had meant everything to her. They'd connected on an emotional level. At least, she'd thought they had. Apparently she couldn't have been more wrong. She'd never meant anything romantic to Ty. Nothing. It had all been an act...a job. She was such an idiot. Tanesha felt so numb she couldn't even cry. It felt as though her whole life...yes, her whole life... had been one huge joke. Because Ty was her life. \n\nAnd to think he'd made his friends befriend her. What was that about? So they could keep an eye on her, prevent her from taking other men? She clearly remembered their reaction to her suggestion of bringing a date to their night out. So Ty wanted her as his fuck toy huh? Tanesha couldn't believe the impudence of the man. Oh she was pissed. And not just at Ty but also at his friends. Although she was angry at Tristan too...after all he was part of the guys, the anger she felt towards him was nothing compared to what she felt towards the older guys. She'd thought they'd genuinely liked her. \n\n\"Tanesha listen...\" Tristan began but...\n\n\"I still don't want to hear your voice, Tristan.\" Tanesha said quietly, ignoring Tristan's sigh of exasperation.\n\nShe couldn't shake off the guilty looks on the faces of Kyle and Chris when she'd met them on her way back to the Blue room after sharing that hot kiss with Skull...Ty. Urgh... To think she even had to stop calling the guy Skull, Tanesha thought with a shake of her head. When she saw her friends heading towards her, she'd wondered where they were headed.\n\n\"Where's Ty?\" Kyle had asked Tanesha, who had looked at both men as if they'd suddenly grown horns.\n\n\"Ty huh?\" Tanesha had asked quietly with her head tilted to one side. She could clearly see the guilt on their faces. \"So you guys actually do know him. Meaning all this friendship thing was just...pretense.\"\n\n\"Now wait a minute Tanesha,\" Chris had cut in, \"you should know better than anyone how much we care about you. How can you even call our friendship pretense?\"\n\n\"Guys?\" Tanesha heard Ty call from behind her and briskly walked past the two men.\n\nIn the Blue Room, she'd gone to her mother and told her that she had a blinding headache so was hitching a ride with a friend back to the house. She'd lied about a friend giving her a ride but had been dead serious about that headache. Her eyes felt as though they were about to pop out.\n\n\"Oh honey. Why don't I go with you?\" Her mother had asked with eyes full of concern and something else Tanesha couldn't fathom. \"Simon can come back to pick your father and brothers after he drops us home.\"\n\n\"No mum.\" Tanesha had insisted. \"My friend is already going that way so it's no problem at all.\" She'd given her mother a hug and then gone to her seat for her clutch. Then she'd quickly walked out.\n\n\"Tanesha?\" Tristan had called, running after her.\n\n\"I don't want to talk to you, Tristan.\" Tanesha had said loudly to his hearing, not even pausing for a second. She just wanted to get as far away as possible form the White House and the man who had hurt her so much. \"Actually I don't want to see any of you.\" Tristan was by then beside her.\n\n\"Where are you going?\"\n\n\"Home.\" She'd replied simply.\n\n\"How?\"\n\n\"In a cab. How else?\" Tanesha retorted. \n\n\"Let me take you.\"\n\nTanesha stopped walking and turned to face Tristan. \"Did you hear the part about not wanting to see any of you guys?\" Tanesha asked. The fact that she'd been crying was not lost on Tristan.\n\n\"We adore you Tanesha and you know it.\" Tristan said quietly. \"We didn't all have to befriend you. One of us could have kept an eye on you for Ty and it would have been okay. But we all heard what Dean had to say about you the first time he met you and wanted to meet you too. You are a lovely person Tanesha. And at this point, it's not because you're Ty's girl. We all love you as a friend because of you. Do you understand?\" Tristan took Tanesha's trembling hand into his. \"You should know by now that we don't abandon our friends when they need us most. So you're going to get into my car, we're going to drive around for a bit, spoil ourselves with some junk food, and then I'll take you home. How does that sound?\" He asked, reaching up to catch the tear that had escaped Tanesha's eye, with his thumb. \"Come here.\" Tristan pulled a trembling Tanesha into his arms and held her.\n\n\"I still don't want to talk to you.\" She sniffled against Tristan, causing him to laugh softly.\n\n\"Alright, I'll try not to talk.\" Tristan stepped back and took Tanesha's hand. \"Shall we?\"\n\nAnd for the past hour and half, they'd been driving around, listening to soothing classical music. Tanesha felt a bit calmer than before they left the White House. She was grateful to Tristan for understanding her need for peace. \n\n\"I know I promised not to talk but I'm hungry Tanesha. KFC? McDonalds?\"\n\nTanesha started to laugh despite herself. \"KFC.\" She replied. \"God, I'm famished.\" She added, turning to look at Tristan. Both burst into laughter.\n\n\"KFC it is.\" Tristan said, picking up his phone and quickly sending a text.\n\n***\n\n\"What was that all about?\" Ty asked Kyle and Chris as they all watched Tanesha disappear through the door. \n\n\"She's pissed.\" Kyle muttered, staring at the imprint of a hand on Ty's cheeks.\n\n\"Tell me about it.\" Ty rasped. \"Fuck, I should have...\"\n\n\"Hey, none of that.\" Chris said sternly. \"You did the right thing. She'll come around.\"\n\nDamon and Dean joined them with concerned looks on their face...at least till they took in Ty's obviously rattled appearance. \"Well, well, well...looks like someone didn't waste time.\" Dean smirked. \"I hope you didn't cry again.\"\n\n\"Fuck off, Dean.\" Ty growled, making the guys burst into laughter. \"I still can't believe she told you guys I cried.\" He muttered.\n\n\"Well according to her, you crying proved that you're not all bad.\" Damon chuckled. \"Everything okay here?\"\n\n\"Not really.\" Kyle answered. \"Tanesha is pissed.\"\n\n\"She'll be fine. Tristan is taking her home.\" Damon informed them. \"Are you okay?\" He asked Ty who shrugged. \"Give her time to get used to it. At least till tonight. You can try and talk to her this evening at the dinner.\"\n\n\"Oh I intend to.\" Ty growled. \"She's not going to leave till I've told her my piece.\"\n\n\"Yeah. Show her you're the man.\" Chris mimicked Matt's voice, making the five men burst into laughter.\n\n\"Have the others left?\" Ty asked as they headed towards the Blue Room.\n\n\"Yep. They all had to get back to the office.\" Kyle responded as they entered the Blue Room. \"As do I. See you guys this evening. Congrats once again Ty.\" He said, hugging Ty. \"We're all so proud of you.\"\n\n\"Yeah. This mission was obviously your best yet. You got a promotion and a hot chic. Boom!\" Dean flicked his fingers out, depicting an explosion. \"Talk about a rewarding mission.\" The guys laughed.\n\n\"She's hot isn't she?\" Ty grinned. \"Thanks guys. I really appreciate all you've done for us.\"\n\n\"Hey, that's what brothers do.\" Chris said hugging Ty. \"See you tonight.\"\n\nAnd even as Ty watched his friends go, his mind was already zeroing back onto Tanesha. Damn that was some kiss. His lips were still tingling from it. Now that he'd tasted that sexy mouth, he wanted it again...couldn't wait to have it again. It looked like for the first time in his life, he had to grovel. Fuck! But if that was what he had to do to get his woman back, why the fuck not? \n\n***\n\nNo sooner had Tristan and Tanesha taken their seats at KFC than Aaron entered. He'd taken off his jacket just like Tristan but he still had on his tie. Tanesha wondered whether he was coming from the White House or the office. Aaron was a banker in one of Chris' banks.\n\n\"I'm so hungry.\" Aaron said, taking a seat. \"Have you spoken to Winnie already?\" He asked Tristan.\"\n\n\"Yep. She'll bring it soon.\" Tristan answered.\n\n\"Great.\" Aaron turned to look at Tanesha. \"You know you can't be mad at me don't you?\"\n\n\"And why not?\" Tanesha scowled.\n\n\"You pinched me this morning. And I haven't retaliated.\" Aaron shrugged. \"Want me to retaliate now?\" He started swaying closer to Tanesha.\n\nTanesha started to laugh. \"Don't you dare.\" Still laughing, she took her clutch off the table to make room for their order which had arrived.\n\n\"Listen Tanesha.\" Aaron began. \"If he had gotten in touch with you, he would have been booted off the force. It was against the rule...is against the rule.\"\n\n\"But he could have at least told me he was okay. Is that too much to ask?\" She gushed.\n\n\"If I were in your shoes, I'd be very angry too Tanesha. But you have to understand him. Thing is, the guy is not allowed to be with you in that way...ever.\"\n\n\"What?\" Tanesha screeched, attracting the attention of other diners. \"Are you saying we can't be together?\" She whispered harshly suddenly feeling sick.\n\n\"Oooohh...\" Tristan couldn't help teasing. \"Looks like someone can't stand the thought of not being with...\" \n\n\"Zip it Tris. Aaron?\" Tanesha turned confused eyes on Aaron.\n\n\"He had to make a deal.\" Aaron tried very hard not to laugh at how desperate Tanesha suddenly looked. \"He was to wait till after today's ceremony to contact you in anyway.\" He explained. \"This hasn't been easy for him at all.\"\n\n\"He could have at least called me.\" Tanesha whined. \"Just to tell me he was okay. At least he had you to tell him I was okay. I never had that privilege. All the sleepless nights, the tears, the misery...do you have any idea what I've been through? I wouldn't have told anyone if he'd asked me not to. Really, he has no excuse.\" \n\n\"He's a soldier, Tanesha.\" Tristan chipped in. \"They're sticklers for rules and following commands. That's just how they're wired. Please don't punish him for something he had no control over.\"\n\n\"Besides, you can't win if you take on those guys.\" Aaron added, taking a sip of his coke.\n\n\"Which guys? The SEALS?\" Tanesha looked bemused. \"Who said anything about taking...\"\n\n\"Not the SEALS.\" Tristan laughed. \"The squad.\"\n\n\"And who're the squad?\" Tanesha asked with a curious look on her face.\n\n\"Your Ty, Matt, Cole, his Kyle,\" Tristan pointed his thumb at Aaron. \"Michael, my Damon, Chris and Dean.\"\n\n\"Eight.\" Tanesha whispered.\n\n\"What?\" Tristan asked.\n\n\"He told me on the Island that they were a group of eight guys who are very good friends...who would go to great lengths to help each other.\" Tanesha muttered. \"That was the only personal thing he ever told me about himself.\"\n\n\"And he's very right, hon.\" Tristan nodded. \"They are the best group of friends you'll ever meet. And you can't stay angry at them for long. Unless of course you're not in love with them.\"\n\n\"Or in lust with them.\" Aaron added with a lecherous grin.\n\n\"Oh but she so is.\" Tristan drawled. \"You should have seen her face when she came back from wherever she disappeared to with Ty after the ceremony, Aaron. You had already left for the office. Her lips were all swollen and red from kissing and...\"\n\n\"Tris...\" Tanesha groaned and then suddenly gasped. \"Oh God, I think I pissed Chris off.\" She moaned, putting her head on the table. \"I understand what you guys are saying but...\" Tanesha looked up. \"I feel like I've been lied to. It's not a pleasant feeling. And the 'squad'...urgh.\" Tanesha muttered, giving the word quotations with her fingers. \"They...\" She trailed off when her phone started to ring.\n\nIt was her mum, wanting to know where she was. They were home but couldn't see her anywhere in the house. She told her mum where she was and promised to be home soon.\n\nTanesha had a good talk with Tristan and Aaron. They assured her that she wasn't just a job to Ty, and that he was totally into her. By the time they were ready to leave, she felt a whole lot better. She promised Aaron that she wasn't going to miss that evening's dinner in the White House. She also told them that she really wasn't ready to talk to any member of the squad that evening. After both Tristan and Aaron laughingly promised to keep the guys away from her, Tanesha got back into Tristan's car and headed home. Much as a part of her was still angry at Ty, she couldn't wait to see him that evening. A shudder passed through her at the thought of seeing that gorgeous face again.\n\n\"Oh God, I've missed you, Skull.\" She muttered to herself as she watched Tristan's car disappear.\n\n\"Who was that?\" Dora Ashton asked her daughter as she came to the door. \"That looks like a really expensive car.\"\n\nTanesha smiled. \"That's my friend, mum. He's called Tristan. I told you about my new friends.\"\n\n\"You sure did.\" Dora said as she followed her daughter up the stairs. \"But then you tell me everything...or do you?\"\n\nTanesha groaned as she entered her room. She wasn't surprised when her mother followed her in and closed the door behind them. When her mother felt she was on to something, she never let go. Dora Ashton didn't usually care what she had to do to get stories out of her children. Most of the time, she would tease them and make them laugh so hard they'd just spill so they could be left alone. She rarely made them cry. They called her the family tease. \n\n\"Where's dad?\" Tanesha asked as she sat on the couch and took off her shoes. \n\n\"He had to meet Senator Riley. It has to do with our trip tomorrow. He left not too long ago.\" Dora responded as she watched her daughter stand and not too gently, kick her shoes to the side. She raised an eyebrow. Dora knew her daughter. She was obviously upset. \"Turn around.\" Dora instructed and waited till Tanesha did as she'd asked, and then unzipped her dress. \"So... Who's this Lt. Cdr. Wesley, darling daughter?\" Dora asked, taking a seat on the couch and watching as Tanesha took off her jewelry. \n\n\"Mum, it's a long story.\" Tanesha was down to her bra and panties.\n\n\"Hmmm... Does it have anything to do with the way you were looking at him? Like a bitch in heat?\"\n\n\"Mum!\" Tanesha gasped, her eyes widening in shock as she stared at her mother.\n\n\"Ow come on Tanny.\" Dora elegantly crossed her legs at the knee and looked at her daughter from beneath her long eye lashes. \"Apart from the fact that I'm your mother, I'm also a Veterinarian. I know all the signs. You wanted that man so bad today. I'm actually surprised you didn't attack him right there in front of everyone. I wouldn't have blamed you one bit. He's damn sexy.\" Dora Ashton purred. She would have gone on with her teasing but then she realized her daughter was about to cry. \"Oh baby, come here.\" Dora opened her arm to Tanesha, who threw herself into her mother's arms. \n\n\"I'm sorry I didn't tell you, mum.\" Tanesha's head was in her mother's lap. \"I thought he was dead. Before that I thought he was one of my kidnappers. But he...I...he looked out for me. He...\"\n\n\"Oh so that's how you're calling it these days huh?\" Dora drawled. \"Looking out for...\"\n\n\"Mum...\"\n\n\"Sorry, sorry. I guess you totally forgot about Lance huh? Go on. He looked out for you and...\"\n\n\"I just...\" Tanesha trailed off. \"What is wrong with me? Lance is brilliant. He looks like a Disney prince. He's...he's practically the perfect man. Why can't I feel for...\"\n\n\"...him what you feel for Soldier boy? Simple darling. Lance is not Wesley. You're in love with Wesley. And the chemistry between you two...\"\n\n\"You don't even know the man, mum. You saw him across the room for what...thirty minutes? Forty-five...\"\n\n\"I knew it in five seconds.\" Dora chuckled, running her fingers through Tanesha's long tresses. \"Honey, when he got up there to give his speech, and he locked eyes with you, sparks went off.\" \n\n\"Oh crap.\" Tanesha moaned. \"Do you think people noticed?\"\n\n\"Let's just say I was glad your father didn't see you when you came back from 'talking' to Wesley.\" Dora gave quotations with her fingers. \"You looked...ravished.\" Dora laughed when Tanesha groaned. But then her voice went quiet. \"It was also obvious you'd been crying. Your dad would have hit the roof.\"\n\n\"Oh God, mum I love him so much it terrifies me.\" Tanesha moaned. \n\n\"So what made you think he was dead all this while?\" Dora asked. \n\nWith a deep sigh, Tanesha finally told her mother all about Skull, his really cool friends who'd tricked her into befriending them, and what Aaron and Tristan had told her that afternoon. \"I'm just so hurt that he could actually go through with it...not reach out to me as he promised. It's so painful.\" She whispered.\n\n\"Oh dear.\" Dora muttered, feeling her daughter's pain. The former first lady of Jamaica gave a deep sigh. \"He was trying to do the right thing honey. At least even when you thought he was dead, he was still looking out for you. The perks of giving the right man your cherry.\"\n\n\"Mum...\"\n\n\"What? It's the truth. But much as I understand his reason for not coming to see you, I'm a little peeved that he could actually go for three whole months without this.\" Dora drawled humorously, pointed her fingers from Tanesha's head to her feet sweepingly. \"I mean one would think this would drive a man to break any rules, don't you think. In fact I feel insulted. And that's one thing I dislike about these military men. Look at your father...rules, rules, rules.\" It almost seemed as if Dora was talking to herself.\n\n\"Err...mum?\" Tanesha sat up beside her mother. \"Dad virtually does everything you ask.\" And that was the truth. \n\n\"I know. And it wasn't easy getting it that way. Okay this is what we're going to do.\" Dora rubbed her hands together with a mischievous glint in her eyes. \"We're going to make soldier boy squirm. Come on, show me what you're wearing to the dinner.\"\n\n\"You think some dress is going to make him squirm?\"\n\n\"Not just some dress. A killer dress.\" Dora grinned impishly? \n\n\"Hmmm... Maybe I should be going to this dinner with a plus one.\" Tanesha muttered, looking thoughtful. \"Now, that will make him squirm.\" She muttered to herself.\n\n\"What do you mean? Plus one as in a date? You want to go with Lance?\" Dora raised an eyebrow, still not catching on.\n\n\"Mum! I can't do that to Lance.\" Tanesha gushed. \n\n\"Do what?\" Then Dora's eyes widened when the full import of what her daughter was saying hit her. \"Oh you little sly minx. Want to make soldier boy jealous huh?\" Dora chuckled. \"Do you think that's a good idea?\"\n\n\"At this juncture, I really don't care.\" Tanesha said vehemently. \"Everyone keeps telling me how he didn't have any choice...he had to do the right thing, blah, blah, blah. Well, I'm still hurt. And I want to hurt him too, mum. Seeing him hurting just a little bit should make me feel better don't you think? Besides, in a way it will show me that at least he feels something too. That all this is not some act.\"\n\nDora Ashton stared at her daughter. She didn't think Tanesha making her man jealous was a good thing but if it was going to make her feel better, why not. Tanesha was the sort of person who found it very difficult to forgive when she thought she'd been hurt deliberately. And Dora instinctively knew that doing something which she felt would ease her pain, would help her daughter get over her feeling of betrayal much quicker. \n\n\"Alright let's do this.\" Dora got to her feet. \"You, my darling daughter, are going to that dinner with a plus one.\"\n\n\"I don't want to hurt Lance by...\"\n\n\"Who said anything about Lance?\" Dora asked, punching a number on her cell phone. \"Ajay?\" Tanesha couldn't help the grin that brightened her face when she heard the name of her crazy, hunky, sexy cousin on her mother's lips. This was going to be good, she thought. If anyone could put on a show to teach Ty a lesson, Ajay was that person. \"Have anything doing this evening? Good. We're going to a dinner party at the White House. No, just Dad, myself, you and then Tanesha. The boys are not going. Get here by five so we can talk strategy. We'll go together. And Jay? Dress to kill.\" Then with a devilish laugh, Dora Ashton hung up and gave her daughter her best Cookie Lyon pose. \"Now, show me a killer dress?\"",
        "Tanesha burst into laughter. \"Oh I love you mum.\" She threw her arms around her mother's neck. She knew she couldn't have asked for a better mother.\n\n\"Love you too, baby. But promise me you're going to let this go after what we're going to put Wesley through.\" Dora looked into her daughter's eyes.\n\n\"Mum, I can't just forget about...\"\n\n\"All I'm saying is for you to let go of the anger. He sorta...didn't have a choice.\"\n\n\"That's just it mum.\" Tanesha gushed. \"He did. He could have...\"\n\n\"I know what he could have done. But from what you said your friends told you this afternoon, he looked for a way out. Be grateful that he was able to. These military folks don't joke with their rules. Listen baby, life is short. When you get the tinniest chance at happiness, you have to grab it with both hands...and feet if possible.\" Mother and daughter smiled at each other. \"Forgive.\" Dora whispered.\n\nTanesha nodded as she wiped the tears from her eyes. \"Okay mum. Thanks.\" \n\n***\n\nLtCdr. Ty Wesley stared with his mouth opened. The two Arrowheads standing with him didn't even notice how ridiculous their colleague looked because they also had the same gobsmacked expressions on their faces as Ty.\n\n\"Fuck!\" Jackson, Ty's badass African American colleague gasped. \"Nice rack. Are they real?\" He asked but Ty didn't answer...he didn't hear a word.\n\n\"This is it man.\" Will, the other Arrowhead rasped. \"Tell me you're hitting that. 'Cause if you're not, I...\"\n\n\"Go anywhere near her and I'll break you fucking legs.\" Ty growled and started towards Tanesha as if he was being controlled by a force.\n\n\"And where do you think you're going, soldier?\" Matt asked in his deep voice, steering Ty in another direction. \"What did I tell you? You had your reasons, man. And a good one at that. Much as I understand her anger, it had to be done. But you have to give her time to stew. When she's ready to talk, she'll come to you.\"\n\n\"I can't wait till when she's ready, Matt.\" Ty groaned. \"Look at her. There're a few words I can come up with to describe exactly what I'd like to do to her in that dress in front of everybody.\"\n\n\"Dude...come on...\" \n\n\"I need to talk to her. Being in the same room with her and not being able to talk to her is killing me.\"\n\n\"What do you mean being in the same room?\" Matt chuckled. \"She just got here for fuck's sake. She hasn't even seen you.\"\n\n\"But I have seen her and...who the fuck is that guy?\" Ty growled, staring daggers at the scene unfolding before his eye. Some hunk had his hand places possessively on the small of Tanesha's back. And her back was bare for fuck's sake.\n\n\"Looks like she brought a date.\" Matt stated the obvious. \"Work with me here dumbass. You act too eager and desperate, she's going to drag this out. Trust me on that.\" Matt lowered his voice conspiratorially. \"I swear that girl of yours is a closet redhead. You sure do know how to pick them.\"\n\n\"Look who's talking.\" Ty snorted.\n\n\"Hey, I'm not on the chopping block here. You are, asshole.\" Matt gave a mock scowl. \"You could always cut in when she's dancing with someone later in the evening. No matter how angry she is, she's still a lady and can't tell you to go fuck yourself...like she should...\"\n\n\"You dickhead.\" Ty chuckled, his eyes still stuck on Tanesha and her date. He wanted to shoot the idiot between his eyes.\n\n\"Yeah, yeah, yeah. This dickhead is trying to save your ass so stop staring and pay attention. When you get her in your arms, do your thing. Remind her with your body what she's missing. Then politely thank her after the dance and leave.\"\n\n\"You really think I can do that?\" Ty looked at his friend with his face filled with incredulity. \n\n\"You have to...\"\n\n***\n\nAcross the room from where Ty stood with Matt, Tanesha stood in a corner with her cousin Ajay, who had his hand on the small of Tanesha's back. Ajay was saying something but Tanesha's eyes remained locked on Ty. He was in another white ceremonial attire but this one was actually a suit. And Ty in a suit was an absolutely cum-inducing sight. Tanesha felt her breath quicken as she stared at the man who ruled her heart, admiring his masculine perfection. He was unbelievably sexy. \n\n\"Tanny come on, help me make this believable.\" Ajay drawled, amused at the stark need in Tanesha's eyes. \n\n\"God, he's so hot.\" Tanesha whispered, not taking her eyes off Ty. \"Look at that suit on that body.\" She sounded dazed.\n\nAjay chuckled. \"Yes, the decorations make it nice and all that but...it's just a suit.\"\n\n\"Well, if you care to know, a well-tailored suit is to women what lingerie is to men, Jay.\" She said, still looking longingly at Ty.\n\n\"Really?\" Ajay laughed softly. \"I didn't know that. Tanny, stop staring at him already. The guy hasn't even looked your way once.\"\n\n\"Well, you can see that he's busy talking to people.\" Tanesha hissed. \"He hasn't seen me yet.\"\n\n\"Well I can't wait till he does. Dude is going to drool. 'Cause girl, you're rocking that dress. Damn!\" Ajay purred making Tanesha burst into laughter despite herself. \"Your friend was right you know. You do look breathtakingly elegant.\"\n\nFrom the admiring stares she'd been getting from people since she entered the hall, and the reaction of Shane when she'd spoken to him outside, Tanesha knew she looked good. Her mother had dismissed the dinner dress she'd shown to her that afternoon and taken her shopping for a 'killer dress' as she'd called it. And what a dress it was. The stunning ivory mermaid, off shoulder, backless evening gown featured a silver beaded bodice that helped shield Tanesha's nipples as the dress didn't have room for a bra. It had a concealed thigh high slit which provocatively revealed itself when Tanesha took a step. Though the style of the dress was downright seductive, the colour gave it an innocent elegance. On her feet was a pair of beautiful six-inch high red peep-toe platform heels which had adorable silver jeweled accents ankle straps. With her matching red clutch, minimal jewelry, flawless makeup, and her long hair twisted into a classic chic bun atop her head, she looked absolutely exquisite. \n\n\"Thank you Jay.\" Tanesha said, allowing herself to be steered towards their table. She felt her cousin's hand on the bare flesh of her back and groaned. \"Why bother. Like you said, he's not even looking.\"\n\n\"Oh but he is.\" Ajay said naughtily, turning Tanesha to face him. \"Keep your eyes on me, my adorable Hour Glass.\" He purred comically as his hand came up to cup Tanesha's cheek. Ajay knew Tanesha would laugh at his hour glass comment and she didn't disappoint. She burst into laughter just as she felt Ajay's lips on her cheek. \"How about we turn on the heat?\" Ajay murmured against Tanesha's cheek.\n\n\"Don't you dare kiss me Ajay Vandyke or I swear to God...\" Tanesha trailed off and the laughter instantly died off as her eye met the pained and furious ones of Ty. \"Oh my God, he's pissed.\" She breathed, surprised at the pang of guilt and pain that slammed inside her.\n\n\"Good.\" It was obvious that Ajay was trying very hard not to laugh. \"Like Auntie Dora said, if he didn't want anyone's hands on you, he should have alerted you that he's still in the race. I bet it doesn't feel good when you're on the other end of the hurt tunnel.\"\n\n\"You don't understand. He doesn't look just hurt. He's furious.\" Tanesha whispered urgently.\n\n\"In this particular instance, both emotions blend into one.\" Ajay chuckled.\n\n\"Ajay, an angry Skull is not one you want to be in the same room with. Trust me.\"\n\n\"Hey, relax. Everything is going perf...\"\n\n\"Hello Ma'am.\" The black hunky Navy Seal whose name Tanesha didn't know interrupted what Ajay had been about to say. \"I'm Jackson.\" He said, extending his hand towards Tanesha.\n\n\"Hello Sir,\" Tanesha smiled, taking the man's hand. \"Tanesha.\"\n\n\"I know.\" He turned suddenly hard eyes on Ajay, who was as tall as the soldier. \"And you're...\"\n\nAjay gave an easy smile. \"Ajay Vandyke, Jackson.\"\n\n\"That's Lt. Jackson. Listen, I don't know who you are but it would be better for everyone here if you kept your hands off Ms. Ashton.\" The threat in Jackson's voice was so palpable Tanesha gasped. \n\n\"Now wait a...\" Ajay started but Jackson was turning back to face Tanesha and a sweet smile.\n\n\"Enjoy your evening Ma'am.\" With that, Jackson gave a slight nod and walked off.\n\nTanesha quickly looked back up to where she'd last seen Ty but he wasn't there. And even as a softly laughing Ajay pulled out her chair for her to sit, her heart was pounding so hard. The initial thrill she'd had within for getting back at Ty was quickly dwindling. All Tanesha wanted to do was find Ty and assure him that there was nothing going on between her and Ajay. She would have laughed at herself at that moment if she wasn't feeling so worried. To think she was actually ready to give up the plot just to see Ty's face filled with anything but pain and fury. \n\n\"You okay, Tanny?\" Her dad asked when they were eating. \"You're playing with your food.\"\n\n\"I'm fine dad. Just not hungry.\" She tried to give her father a smile but failed. All she'd been able to do was take sips of her wine, which by her level of tolerance, wasn't a good thing. \n\nPaul Ashton looked worriedly at his daughter. \"Well, allow me to take these yummy looking shrimps off your plate then.\" Paul Ashton said, using his fork to pick a shrimp off Tanesha's plate. \"Jay, what are you waiting for? Dig in.\" Paul said making his wife and Ajay laugh. \"Hmm...just as I thought. Yummy.\" The elderly man gave a deliberately humorous moan, shocking Tanesha into laughter. \n\nPaul leaned in to kiss Tanesha on the cheek. \"That's more like it.\" He murmured, laughing when Jay too kissed Tanesha's other cheek. \n\nBut of course whilst Paul had kissed his daughter with no ulterior motive, Ajay did it on purpose. He'd seen Ty looking their way and thought what better time to kiss Tanesha again than at a time when she was laughing and the obviously angry soldier was looking their way. \n\n***\n\nAt his seat, Ty had to call on all the angels for strength and self-control. He was trying very hard not to move across the room to where that idiot sat touching Tanesha and squeeze the life out of him. Who the fuck was he anyway, Ty fumed. Probably whoever Tanesha had wanted to go clubbing with the other day. Yes, his boys had told him about that. And yes, he'd been furious that she would even want to go clubbing with any man apart from him. But he'd let it go because Tanesha had assumed he was dead at the time. This time around, she didn't have any excuse a she knew he was very much alive and wanted her more than ever. Was she trying to kill him? Was she doing that on purpose? Had she moved on? Had she been seeing the guy before she was kidnapped? If so, why hadn't she told him on the Island? She'd virtually told him everything about herself but hadn't mentioned anything about a boyfriend. But from the way the two were behaving...the way he kept touching her, kissing her, laughing with her...it was obvious they were very familiar with each other. Had that hot kiss that morning been a mere goodbye kiss?\n\n\"Fuck!\" Ty swore suddenly, causing the people at his table to look at him. \"Sorry.\" He muttered, staring into his plate of food which he hadn't even touched.\n\n\"I'm going to break his legs.\" Jackson murmured beside Ty, drawing a bitter chuckle from Ty.\n\n\"Why bother?\" Ty murmured. \"She's obviously moved on. I don't see her discouraging all the attention.\"\n\n\"Typical.\" Jackson muttered, sounding pissed. \"I just can't believe all it took was a handsome bloke to turn her head. They were probably fucking before you even came on the scene.\" \n\n\"No, they weren't.\" Ty growled, clenching his fists at the mere thought of someone besides him fucking Tanesha. \"She's not that kind of girl, Jackson.\" Ty couldn't wait to whisk Tanesha away and ask her what the fuck was going on.\n\nAnd as the evening wore on, the newly promoted Lieutenant Commander got angrier and angrier. The idiot, who Jackson claimed was called Ajay, danced virtually non-stop with Tanesha. She'd only danced with her father and Tristan for some brief minutes. All the other dances were with the guy. Despite the fact that Ty was boiling pissed, he couldn't help but admire Tanesha though. She exuded utter elegance. He wasn't surprised when he noticed almost all eyes on the couple. \n\n\"It's time to cut in, don't you think?\" Matt muttered, coming to stand beside Ty. The squad had seen what was going on and were not happy but they didn't want to say anything to Tanesha as they didn't want to piss her off any further. Besides, Aaron and Tristan had warned them to stay away from the feisty beauty. Matt therefore felt the only chance Ty had to assert himself was to dance. \n\n\"I don't intend to, Matt.\" Ty rasped, watching how the Ajay guy had his hand against the bared skin of Tanesha's lower back. Ty remembered clearly how smooth that skin felt to the touch and felt his heart pound with fury. \"In case you haven't noticed, the situation is no longer how we thought it was when we had that conversation earlier. If he's the one she wants, fine.\"\n\n\"Really? I must admit I never thought I'd see this day.\" Matt chuckled. \"A day when Ty Wesley would give up something he really wants. How disappointing.\" He shook his head as if the most unfortunate thing had happened. \"Oh look. Something really slow.\" Matt drawled when the band started playing Sister Sledge's 'Thank You For Today', which was a slow song. \"Oooh this is going to be good. See the way he's pulled her closer? I bet he's rub...\" Matt trailed off when Ty abruptly left his side and stalked purposefully...like a panther towards its prey, to where Tanesha and her date danced. He almost burst into laughter. \"Stubborn fool.\" He muttered as he turned towards his table, where his fianc\u00e9e, Jen, waited with a knowing smile on her face. It was no secret amongst the squad how the Petroleum Engineer loved that particular song by Sister Sledge. \n\n***\n\n\"May I cut in please?\" Ty asked in a hoarse voice. He didn't have any choice but to act polite. He couldn't possibly create a scene in the presence of his superiors and the president of the United States. \n\n\"Finally.\" Ajay breathed, pressing a quick kiss to Tanesha's forehead. \"Took you long enough.\" He murmured to Ty as he stepped away from Tanesha. \"See you later kiddo.\" With that, Ajay sauntered away. \n\nThe confusion on Ty's face couldn't be masked as he took Tanesha into his arms. What the fuck had the guy meant by that comment, he wondered. But he didn't say anything as the woman he knew for a fact he'd die for, melted against him...her head resting comfortably against his shoulder, thanks to whatever heels she was rocking. And at that particular moment, nothing mattered but the woman in his arms. Ty would have died happy. When the song ended, Ty wished he could tell the band to repeat it. But they started belting out Westlife's 'Flying Without Wing', which he thought was beautiful too. He felt a shiver pass through Tanesha as her hands moved up to wrap around his neck. Ty tightened an arm around her waist as his other hand rubbed against her bare back. \n\n\"God, I missed you.\" He rasped against her ear. \n\nTanesha's breath hitched in her throat at the sound of that voice. God, he sounded as sexy as hell. \"I could almost believe you.\" Tanesha murmured, breathing hard. The feel of Ty's body against hers, his hands touching her bare skin, his breath on her face and the beautiful song that was being sung by the talented lead singer was driving her crazy. \n\nTy winced. \"How can you even doubt that?\" He growled low in his throat as his hand deliberately moved down to caress Tanesha's arse, pulling her tighter against him. From the low moan that tore out of Tanesha's throat, Ty knew she could feel how hard he was. \"There was no second that went by that I didn't miss you.\"\n\nTanesha couldn't suppress the gasp that tore out of her when she felt Ty's hand on her arse, pulling her tighter against his erection. Her pussy throbbed in need. She wanted him inside her so bad. \"Skull...\"\n\nTy chuckled. It was understandably going to take some time for Tanesha to get used to the fact that Skull wasn't his name. \"What is it baby?\" They were virtually not moving. \n\n\"Sorry Tyler...Tyron...Ty. Urgh.\" She groaned. \"What do you want me to call you?\" She whimpered, unconsciously rubbing her cheek against Ty's neck. Tanesha had obviously forgotten where she was. It felt as though the two of them were in their own world.\n\n\"Oh shit.\" Ty moaned as a delicious shudder passed through him. \"You can call me anything you feel comfortable with.\" Ty husked as he tightened his hold on Tanesha, squeezing her arse in the process. And when he felt the wet flick of Tanesha's tongue against his skin, his eyes fluttered shut. \"Christ...\" He gasped, so aroused he wanted to fling Tanesha over one of the tables and fuck her hard and fast till she screamed his name in release. \"Tan, stop that please...\"\n\n\"Stop what?\" Tanesha murmured, as she licked at a particular spot on his neck. She remembered very well how a mere kiss to that spot drove Ty wild with need. Loving the sound of the irrepressible moan that tore out of Ty, she latched onto that sensitive spot and began to suck.\n\n\"Fuuuck!\" A low growl rumbled within Ty's chest as he began to uncontrollably move against Tanesha. They were virtually humping each other on the dance floor. And when a lustful cry of need fell out of Tanesha's lips, it was all Ty could do not to shoot his load right then. He knew he had to get them off the dance floor before he disgraced himself. He extricated himself from Tanesha and took her hand. \"Come on.\" He softly instructed in a voice thick with desire. \n\nTanesha didn't ask where they were going. She simply allowed herself to be led outside, to a long brightly-lit empty balcony. Ty led Tanesha to the very end of the balcony, where there was a little darkness. Then in a classic move, which a professional dancer dancing Pasodoble would envy, Ty cupped Tanesha's nape and turned her to face him. Tanesha's lust-glazed eyes were locked on Ty's mouth. She wanted those lips on hers so bad a whimper escaped her throat. Ty was just as desperate to taste her. With an animalistic growl, his mouth claimed hers in a burning rush, swallowing her breathless cries and moans. He ravaged those sexy lips. Tanesha felt as though she were going up in flames when Ty's tongue flicked sensuously against the roof of her mouth, driving her insane with delirious pleasure. The kiss was ravenous, passionate, hot and dirty...all tongues and desperation, flooding them with pure uncontrollable lust. It was like nothing he'd ever given her. But for Ty's arm firmly locked around her waist, she would have crumpled onto the floor. When Tanesha felt the hot, flared, velvety mushroomed head of Ty's cock against her bare thigh, she didn't even bother wondering when he'd taken it out. She just wanted it.\n\nShe tore her mouth off Ty's as her heart rate soared out of control. \"Oh please, yes.\" It was almost a sob. She knew she was behaving like a slut but she didn't care. She just wanted Ty. And if that made her a whore, so be it. When Tanesha felt her pantie being torn off her, she moaned at the sexiness of that aggression. \n\nTy stared down into Tanesha's passion-glazed eyes as he pushed the slip of a thong his woman called panties into his pocket. He was pleasantly surprise to realize that the concealed slit on Tanesha's dress actually went as far as her hip. The dress was utterly sinful but it made his work easy. \n\n\"I could kiss you till morning but...\" Ty slipped an arm beneath her dress and wrapped it around her bare arse to hold her still. \"I need a taste.\" He muttered huskily. Then without wasting any more time he pushed two fingers deep into her dripping slit.  ",
        "\"Ahhh...\" Tanesha moaned helplessly, her eyes fluttering close. \"Oh God...\" The blissful sensation of Ty's fingers swirling through her wetness, working that tight needy pussy, was too much. Her hips began moving of their own volition, undulating sexily as his fingers stroked her deep. She'd missed having any part of Ty inside her. \"Skull...\" With her head thrown back in lustful abandon and her hands firmly holding on to his shoulders, she rode those thick and long plunging fingers. \n\nTy couldn't resist leaning forward to drop a kiss along her graceful neck. He'd never seen a more sexy and responsive woman. He avoided touching her clit in any way, knowing Tanesha would explode if he did. He was going to make her come hard...but only on his cock.\n\n\"Fuck.\" Ty swore when Tanesha cried out lustfully. \"How I wish I could bury my mouth in here and drink from you.\" He said huskily as he watched Tanesha shamelessly fuck herself on his fingers. He craved the taste of her juices. That was an addiction he'd acquired since the very first time he fucked Tanesha. With a groan Ty withdrew his fingers, ignoring Tanesha's cry of protest. He slipped his fingers, wet from Tanesha's juices, into his mouth and licked it clean, watching Tanesha's dilated eyes the whole time. \"Damn, you taste good.\"\n\n\"Skull please fuck me now.\" Tanesha whimpered, trying to climb up Ty. \"I need you inside me. Please...\" She was virtually sobbing. She needed his big cock inside her, needed him to make her come. \n\nTy didn't make her beg a third time. He picked her up and moved to one of the massive squarish pillars, and then braced Tanesha's back against it. \"Put your legs around me, baby.\" They were already hooked around his hips before he completed his instruction. \"Give me your hands.\" He whispered. Taking both wrists into one hand, Ty pinned Tanesha's hands to the pillar above her head. He had her right where he wanted her...immobile, waiting to be ravished. And to Ty, Tanesha had never looked more beautiful than she did at that particular moment.\n\nWith a lustful groan, Ty covered Tanesha's mouth with his and plunged into her tight heat in one slow but persistent thrust. They both screamed into the kiss. For a second, Ty was grateful for his quick thinking of locking their lips together. The balcony would have been filled with party guests investigating their screams otherwise. In the next second however, the guests were the last thing on Ty's mind. He was going out of his mind with utter pleasure. Tanesha was as tight as she'd been when he'd first taken her. And that tight heat gripping his cock was sending him into a meltdown. He tore his mouth away from Tanesha's. \n\n\"Oh fuck I've missed this.\" He gasped. She felt even better than he remembered. \"You feel phenomenal. Have you thought about this as much as I have?\"\n\n\"Every single minute.\" She whimpered, relishing the blissful sensation of being stretched and completely filled by Ty. \"Oh my God...\" Tanesha cried out brokenly, totally losing her mind when she felt Ty rubbing that spot deep inside her with his hardness. It was exactly what she'd been craving...deep, hard penetration. It was so mind-numbingly good she could barely catch her breath. Her head fell back against the pillar in erotic bliss, sounds bursting from her mouth as Ty sent her into the realm of ecstasy. The orgasm, when it hit, took her by surprise. \"Oh...Skull...Ahh...\" Tanesha cried incoherently as she suddenly began to buck rhythmically against Ty.\n\n\"Shit.\" Ty quickly covered her mouth with his again as he felt her orgasmic contractions around him. \n\nTy stopped his movement, wanting her to ride the waves of her orgasm without any distraction. Besides, he knew he was going to lose it if he thrust into her whilst her pussy rippled around him. He just wasn't ready to end it. Each contraction gripped Ty with so much pressure it felt like his seed was being sucked out of him. He held still, willing the need to join Tanesha in orgasmic bliss to pass. When Tanesha's orgasm eventually ended, they released each other's mouth and simply stared at each other. \n\n\"Are you okay?\" Ty asked huskily, taking in the look of undisguised bliss on Tanesha's gorgeous face. At Tanesha's nod, Ty kissed her lightly on her swollen lips. \"Ready for round two?\"\n\n\"Give it to me, baby.\" She purred seductively with a come-hither look, her eyes all soft and dreamy. \n\nTy released Tanesha's hands and reached behind her to open her zipper just a little. That made it easier to pull down the bodice of her dress, releasing her beautiful breasts to his greedy eyes.\n\n\"Holy fuck.\" Ty gasped as he stared. \"Oh God.\" He looked dazed. Those dark hardened nipples called to him like steel to magnet. Ty hungrily licked his lips. \n\nTanesha saw the awe in Ty's eyes and felt...beautiful. She also felt Ty's cock jerk inside her, showing the effect her boobs had on him. She suddenly wanted his mouth on her taut flesh so bad. \n\n\"What are you waiting for?\" She whispered brokenly. She needed that mouth on her that very instant.\n\n\"Perfection.\" He breathed. \"Don't scream.\" He gave the warning a split second before his warm mouth closed around a taut flesh. \n\nTanesha screamed. She couldn't have stopped herself even if the president and her parents were staring at her at that very moment. Both hands moved to cradle the back of Ty's head to keep him against that taut flesh as her head fell back against the pillar in utter ecstasy. Ty ignored the scream as he fucked into her hard and fast. His thrusts were deep, the rhythm unfaltering and relentless. And the whole time, he alternatingly sucked, bit and licked one nipple, whilst he pulled, squeezed and rubbed the other at the same time. He couldn't control the sounds falling out of Tanesha's lips, knew they would be heard if the band stopped playing, and therefore had just one goal in mind...give his woman another orgasm and take his pleasure before the band stopped playing. And Ty did exactly that. \n\nWith the thickly veined length of his big cock, Ty worked Tanesha till she was reduced to an incoherent mess. Tanesha's cries of pleasure only spurred him on. Ty plunged powerfully in and out of that divine heat, claiming and possessing Tanesha like no man had ever done. At a point, he slowed down and rotated his hips slowly...maddeningly...working that sweet spot inside her. Tanesha forgot to breathe. Her eyes actually crossed as she totally lost herself to sensation. She whimpered his name as her arms tightened around his head. It was the most wonderful sensation.\n\n\"Ahh...Christ, f-feels so go...good.\" Tanesha gasped brokenly, her face etched with awe at the ecstatic feeling swirling through her entire body. \n\nAnd when Ty resumed fucking deep into her, she got lost in a sea of sensation, unable to keep track of where it generated from. The combination of that cock rubbing that crazily delicious spot inside her, the warm mouth on her nipple, sucking and biting, the fingers on her other nipple, twisting and pulling, that glorious feeling of pleasure pain...Tanesha didn't know what hit her. For the second time that evening, her orgasm was upon her before she even knew what was happening. And just as she cried out her pleasure to the skies, Ty erupted inside her, powerful spasms racking his body as he found the pinnacle of pleasure. \n\nTanesha writhed against Ty as her spasming core milked every drop from his spurting cock. She took in harsh breaths, trying not to pass out from her intense release and the mind-blowing sensation of Ty's teeth on her nipple. She thought she'd seen and felt it all. But Ty always managed to shock her into submission and euphoria with each encounter. \n\n\"Oh God, Skull...\" Tanesha gasped as she rippled around the still pulsing cock inside her. And in the midst of the pleasure assailing her mind and body, Tanesha couldn't believe she'd had to go without that pleasure for three whole months. \"I hate you so much right now.\" She muttered shakily.\n\nTy released the nipple in his mouth and straightened up, his cock, understandably, still spurting deep inside Tanesha, whose legs remained hooked firmly around him. Three months' worth of cum...no, he wasn't surprised at all. Ty took in the streaks of tears on Tanesha's cheeks and could have bet his last cent that she didn't even know she'd cried. He leaned his forehead against hers and stared into her still dazed eyes. \n\n\"And I love you so fucking much right now it scares me.\" Ty whispered with so much emotion Tanesha's eyes widened.\n\n\"Oh my God...\" She whispered brokenly as her chest began to heave. Then her lower lip began to quiver... \"Oh my God...\" She repeated and then burst into tears. She wound her arms tightly around Ty's neck and pressed her mouth to his neck, trying to muffle the sounds of her sobs. All the emotions she'd felt since seeing Ty that morning...shock, joy, betrayal, anger, lust, love...everything came out as though a dam had finally burst within her. She simply let it all out.\n\nTy didn't stop her. Somehow he felt she needed to let it out. He simply held her till she quieted down. Then he sought her mouth with his, soothing her with a sweet gentle kiss. But the kiss that was meant to sooth soon progressed into demanding, hungry and intense. Ty went completely hard within Tanesha. With a tortured gasp of her name against her swollen lips, he began to grind against her, so caught up in the moment he didn't even notice that the band had stopped playing. He couldn't have enough of Tanesha. And her lustful moans and words of encouragement weren't helping matters at all. But just as Ty began to thrust in earnest, he heard it. Footsteps...right upon them... \n\n\"Shit.\" Ty swore and quickly tucked Tanesha's head into the crook of his neck, one hand cradling the back of her head to press her face against his neck. The least he could do was shield her from prying eyes. \n\n\"You're getting sloppy, soldier.\" Cole said dryly beside them. \"Don't tell me you didn't hear me coming.\" The humour in his voice couldn't be masked.\n\nTy groaned with both relief and frustration when he heard Cole's amused voice. Better one of his boys than one of the dignitaries. \"Fuck, I didn't notice the music had stopped.\" Ty groaned, his arm tightening around Tanesha who had stiffened at the sound of Cole's voice. \n\n\"Don't be too hard on yourself, man. You were...occupied.\" Cole drawled sarcastically. \n\n\"I don't think you came here just to tell me about my inability to hear your footsteps.\" Ty drawled right back. \"What is it Cole?\"\n\nCole chuckled. \"I thought I should warn you that Tanesha's father is headed this way.\"\n\n\"Fuck...\" Ty swore under his breath. \"No, don't.\" He stopped Tanesha when she attempted to unlock her legs from around him. He wasn't ready to expose his woman's nakedness to his silly friend. Besides if the man was really headed their way, his friend wouldn't be standing there with that shit-eating grin on his face. Knowing his guys, they were probably stalling the man just to enable Cole do what he was doing right then...watch him squirm. \"Shit!\"\n\n\"That's exactly what I said when I saw the old guy headin....\"\n\n\"Cole...\"\n\n\"Yes Lt. Cdr. Wes...\"\n\n\"Will you cut the crap and just disappear from here?\" Ty growled. \"Please...\"\n\nBut Cole didn't look like he was ready to leave. \"Don't worry. Dean is talking to him right now. He had to stall him whilst I came to warn you. Because I don't think you would want your girlfriend's father...an ex-soldier himself, to see you deep dic...\"\n\n\"I swear to God, if you don't...\" Ty began but Cole only burst into laughter.\n\n\"Alright, I'll leave. But on one condition.\"\n\n\"What do you want?\" Ty would have loved nothing more than to punch the living daylights out of his crazy friend but he knew if he moved, Cole would see Tanesha's boobs so he stayed put. \n\n\"I want Tanesha to talk to me before I leave.\" Cole said smugly.\n\n\"What?\" Ty turned his head to stare at his friend. \"Are you nuts?\"\n\nCole shrugged. \"Hey, don't blame me. Tris and Aaron says if they see any of us talking to her, there's going to be hell to pay. Because she asked them to keep us away from her. Can u imagine? Now you want something from me so I have to get something back. It's only fair...right? It's legal.\"\n\n\"It's black-fucking-mail.\" Ty growled. \n\n\"You choose to see it that way. I don't.\" Cole was obviously enjoying himself.\n\nTy gave a deep sigh. If he knew his friend, he wasn't going to budge till Tanesha said something to him....anything. \"Baby?\" Ty felt Tanesha shaking against him and swore darkly. Now she was crying again. \"Cole please...\"\n\n\"Oh my God...\" Tanesha's laughter finally burst forth. She kissed Ty lightly on the cheek just to let him know she was okay. \"Cole?\"\n\n\"Yes darling?\" Cole's mouth widened in a grin.\n\n\"You're a prick.\" Tanesha laughed.\n\n\"Well, looks like you've got two of those right now then.\" Cole drawled, drawing a groan from Ty and a soft laughter from Tanesha. \"Is that all?\" Cole looked like he was having a blast.\n\n\"And I love you to bits.\" Tanesha sighed. \n\n\"Love you too, gorgeous.\" Cole laughed. \"Are we still on for tomorrow?\"\n\n\"Eleven a.m.\" Tanesha responded. \"Won't miss it.\"\n\n\"I'll be expecting you. Oh and Dean said to tell you he deserves to be pardoned too seeing as he's stalling your dad and all.\"\n\n\"Tell Dean he's not off the hook. He started it.\" Tanesha retorted.\n\n\"Actually it was Kyle's idea and I think...\"\n\n\"Cole!\" Ty growled.\n\n\"Alright, alright, I'm outta here. Jeez.\" Cole said and finally turned to leave. \"You have ten minutes to make yourselves presentable before you find yourself flying over this balcony, Ty.\" He called out.\n\n\"Asshole.\" Ty muttered, trying very hard not to laugh.\n\nTanesha couldn't help the laughter that tore out of her throat as she quickly unlocked her legs from around Ty. But her laughter turned into a moan of pleasure when Ty took a step away from her, allowing himself to slip free of her body. She missed him instantly. \"Oh crap.\" Tanesha gasped when her feet wobbled but Ty quickly wrapped his arms around her to steady her. \"I'm missing you already.\" She whispered, looking up at him with eyes of a well-fucked woman. \n\n\"You're beautiful.\" Ty murmured, looking into the eyes of the woman he'd come to love with all his being. \"Are you okay?\" At Tanesha's nod, Ty gave her a quick kiss. \"As much as I'd love nothing more than to keep holding this sexy body, Cole is right. We need to get presentable before your father shows up and throw me over this balcony.\" \n\nTanesha laughed. \"Your friends are nuts.\"\n\n\"They're your friends too. Sorry about that by the way.\" Ty groaned. \"We have this silly thing we do to one another.\" Ty started to explain as he adjusted Tanesha's dress and zipped her back up, but not before dropping quick kisses on each nipple. Tanesha couldn't keep the smile off her face. \"God, I missed that smile.\" Ty gasped. \n\n\"And I'm already missing you even though you're standing right here.\" Tanesha said with a frown on her face. \"Does that even make sense? What is it you guys do to one another?\"\n\nTy laughed softly as he fixed himself up. \"Whenever we find any of us in a compromising position, we stand close and watch...just to make the person squirm. Silly I know but...\"\n\n\"Seriously? So all that wasn't for my benefit?\"\n\n\"Nope. Sorry. Making you talk to him was just a bonus.\" Ty laughed, his laughter as usual, sending delicious tingles down Tanesha's spine. \n\nTanesha sighed. She wanted Ty again. Christ, what had the man done to her? \"Where are my panties, Skull?\" Tanesha asked, looking around. \"I need to use them.\" She could feel Ty's cum sliding down her inner thighs. She needed to use the panties or anything to...\n\n\"You call those panties?\" Ty chuckled. \"I want you to go without them for the rest of the evening.\" He said with all seriousness. He knew why Tanesha needed the panties. \"Knowing that my cum is running down your thighs as you speak to other men, or get ogled by them gives me a sense of security.\"\n\n\"Ow come on...\"\n\n\"And that man...\"\n\nTanesha didn't need to ask who Ty was referring to. \"There's nothing going on between us and you know it.\" Tanesha muttered, straightening the front of her slightly crumpled beautiful mermaid gown.\n\n\"Do I?\" Ty growled. \"You allow him to touch you and kiss...\"\n\n\"He's my cousin, Skull.\" Tanesha sighed.\n\n\"What?\" Ty's shocked eyes bore into Tanesha's. \"So why was...\" His trailed off as it finally dawned on him. The jig was up. Tanesha couldn't read Ty at that moment. But she sensed just how hard he was trying to control himself. She actually flinched when he cupped her cheeks in his hands. \"Don't ever do that to me again.\" He said quietly. \"Please.\" Ty never ever wanted to feel what he'd felt that evening again. It'd hurt. Fuck, had it hurt. It had been the worst feeling ever. \n\n\"I just wanted to...I needed for you to hurt too. That was just a fraction of what I've been through.\"\n\n\"Trust me, it wasn't. I know you're hurt and thought I deserved to have a taste of what it felt like to have your heart ripped out of your chest. But believe you me, for over three months my heart has virtually been stopping every day for you. Have any idea how it feels to watch the life of someone you love, at stake?\" Ty asked gruffly.\n\nTanesha's eyes widened. \"You loved me even then?\" She asked in a small voice.\n\nTy nodded. \"I did. I just didn't know it then. Listen Tanesha, what I went through this evening, seeing that man...\" He trailed off and groaned deep in his throat. \"I was in hell. I could have killed.\"\n\n\"Oh my God.\" Tanesha whispered as the import of how her little stunt had affected Ty finally hit her. \"I'm so sorry, baby.\" She reached up to kiss him on the mouth.\n\n\"Just don't do it again.\" Ty rasped, softly rubbing Tanesha's cheek to wipe away all traces of tears. \n\n\"Never again.\" It was a promise. \n\n\"Thanks.\" Ty gazed at Tanesha with eyes filled with so much love she gasped. \"Fuck, I missed you.\" He hugged her to him. \"So damn much. And not just for sex, don't get me wrong.\" He leaned back and looked at her with sincere eyes.\n\nTanesha's eyes twinkled with amusement at the wary look on Ty's face. \"Hey, relax.\" She closed the distance between their lips and kissed him gently. \"We both needed this.\" Tanesha murmured against his lips. \"That was some damn mind-blowing release.\" Tanesha purred, causing Ty to shake with laughter. \"And I...\"\n\n\"Tanesha?\" Tanesha heard her mother's voice and immediately moved towards it. \"Honey, I told you she's okay. She's with Lt. Cdr. Wesley. What better hands can you hope for?\" Dora Ashton laughed as she turned to look at her husband.\n\n\"Are you okay, angel?\" The question was directed at his daughter but Paul Ashton's eyes remained on Ty with a slight frown. \"I got worried when I couldn't see you after the band stopped playing.\" He finally gave Ty a nod.\n\n\"I'm alright, daddy.\" Tanesha went to her father. \"I was having a chat with Lt. Cdr. Wesley.\"\n\nDora Ashton moved towards Ty with a brilliant smile on her face. \"We haven't had a chance to talk, Lt. Cdr...\"\n\n\"Please call me Ty, Ma'am.\" Ty said politely, wondering whether he should remind the woman that she and her husband had said thanks to him after the ceremony that morning. A look of surprise passed over his features when Tanesha's mother went up on her toes as if to kiss his cheek. Ty bent towards the elegant woman to accept the kiss but...\n\n\"You hurt her, they'll never find your body.\" Dora Ashton hissed into Ty's ear, and then stepped back with the sweetest smile on her face. \"Close your mouth, darling.\" She murmured. \"And the name is Dora.\"\n\nThe look on Ty's face was priceless. He'd been rendered totally speechless. \"Are you okay?\" Tanesha asked Ty, who only nodded. She watched the naughty smile on her mother's face as she linked her arm with her husband's and strolled off. ",
        "\"Coming?\" Dora called, not turning to look at them.\n\n\"Right behind you, mother.\" Tanesha's eyes flashed. She knew her mother had told Ty something probably outrageous. She linked her arm with Ty's and fell into step beside him. \"What did she say?\"\n\nTy gave a deep sigh which ended with a chuckle. \"Your mother just threatened my life.\"\n\n\"What?\" Tanesha gasped and stopped walking.\n\n\"And guess what? I've had my share of threats from badass soldiers and criminals. But your mother's threat was hands down the most lethal of them all.\"\n\n\"I'm going to kill her.\" Tanesha resumed walking.\n\n\"What I wouldn't give to have my mother threaten someone on my behalf like that.\" Ty murmured with a wistful look on his face. \"I like her.\"\n\n\"You've earned the right to ask your mother to threaten me, baby.\" Tanesha chuckled.\n\n\"She can't.\" Ty responded smoothly. \"Been dead my whole life.\"\n\n\"Oh Skull...\" Tanesha looked like she was going to burst into tears.\n\n\"Hey don't worry about it. I never met her but I've seen her pictures. And she's a beauty.\" He said, trying to lighten the mood. \"Besides, I have a sweet step-mum so I'm cool.\"\n\nTanesha realized she didn't know anything about her man. She knew they had to talk but she didn't want to mar their reunion with any serious talk. She simply wanted to savour the moment. The band started to play again just as they got to the entrance of the hall.\n\n\"I'm so sorry about your mother.\" Tanesha said quietly.\n\n\"Hmm...I'm sure she would have loved to meet the woman who's not only rocking her son's world, but also owns his heart.\" Ty murmured and pressed a kiss to Tanesha's temple. \"Damn, I love touching you.\" He husked. \"Will you dance with me?\" He murmured.\n\nTanesha swallowed past the huge lump that had formed in her throat at Ty's words. How could the man manage to sound so sweet and sexy at the same time, she wondered looking up at him with eyes filled with so much love. \n\n\"And I would have loved to meet the woman who gave me my world.\" Tanesha said shakily, her eyes welling up.\n\n\"Dance with me.\" Ty murmured.\n\nTanesha laughed despite herself. \"Real dancing or just allow myself to be groped by you?\" Tanesha murmured as they stepped into the hall.\n\nTy chuckled. \"You're a fine one to talk.\" Ty said huskily, remembering what Tanesha had done to him on the dance floor earlier. \"I just want to hold you so we might not even dance at all.\" \n\n\"Works for me just fine.\" Tanesha sighed, turning to lean against Ty and coiling her arms around his neck even though the band wasn't playing a slow number. God, she loved having his arms around her. \"I actually dread sitting down, thanks to you.\" She murmured, drawing a chuckle from Ty.\n\n\"Don't wanna ruin your dress huh?\" Ty's eyes glittered with mischief.\n\n\"I'm so gonna get you for this.\" She groaned, feeling Ty shake against her as he laughed. \n\n\"Sure about that?\" He whispered, his hand slipping beneath the slit on Tanesha's dress to caress her bare hip. They were in a world of their own.\n\n\"Oh God, I can't believe I'm in your arms right now.\" Tanesha moaned. \"Tell me I'm not dreaming.\" \n\nTy reached up for one of Tanesha's hands and brought it down between them to press against the outline of his rock hard cock. \"Feel that?\" At Tanesha's gasp, Ty brought her hand back up around his neck. \"Think you can feel that in a dream?\"\n\n\"Oh my God, you're crazy.\" Tanesha groaned. \"Why are you still hard?\" She murmured.\n\n\"Do you really need to ask? Now you see why I can't let you out of my arms?\" He chuckled.\n\n\"What if you really have to let go of me?\"\n\n\"Not gonna happen.\" Ty growled. \"I don't plan on allowing you into the arms of any other man for the rest of this evening...not even your father.\"\n\n\"What if the president...\"\n\n\"Just left with the first lady.\" Ty answered smoothly. \"In fact I think most of the elderly folks have already left.\" Of course the elderly military guys didn't look like they were ready to leave, Ty couldn't help but notice. Those men did love to party.\n\n\"I wish I could sleep in your arms tonight.\" Tanesha whimpered.\n\n\"That can't happen tonight, baby.\" Ty groaned, nuzzling his face against Tanesha's hair. \"Your dad would have my balls for breakfast if...\"\n\n\"Eeewww...\" Tanesha laughed, leaning back to look up at Ty. \"My father...\"\n\n\"Is right behind you.\" Ty said softly, causing Tanesha to turn around swiftly within the circle of his arms to face her parents.\n\n\"Dad...mum...\" She gasped.\n\n\"I see you've really enjoyed yourself, angel.\" Paul Ashton addressed his daughter but just as before, his eyes were on Ty, whose arms remained firmly around Tanesha's waist. \"Ready to head home?\"\n\nTanesha's eyes widened. \"Err...\" She wasn't ready to leave Ty. And even if she was, she couldn't possibly move away from Ty because even at that very moment, she could feel his erection poking her arse as she looked at her parents. \"Mum...\" Tanesha's eyes pleaded with her mother. \"Can I stay a while? Please?\" \n\n\"No, you can't.\" Paul answered smoothly. \"How are you going to get home if we leave you here?\"\n\n\"I'll make sure she gets home safe, Sir.\" Ty responded quietly. He wished he could cross something. He couldn't cross his fingers since they were splayed on Tanesha's stomach for her parents to see. And his toes were out of the question since they were inside his shoes. For a split second, he contemplated crossing his eyes. Ty had to make a conscious effort not to burst into laughter at that silly thought.\n\nAfter a long stare down between Paul and Ty, during which Dora made silly faces at her daughter, Paul finally looked at his wrist watch, and then looked back up at Ty. \"Time says ten fifty-one p.m. now. I expect to see my daughter home by twelve midnight and not a second after.\" Paul said sternly. \n\n\"She'll be home before twelve midnight Sir.\" Ty promised.\n\n\"Good.\" Paul said and reached a hand towards Tanesha but Ty automatically tightened his hold on Tanesha. \"I want to kiss my daughter. Have a problem with that?\" Paul's eyes narrowed. \n\n\"I'm sorry Sir.\" Ty said and released his hold on Tanesha.\n\nBut surprisingly, Paul didn't even pull Tanesha to him. He only leaned forward and pressed a kiss to her cheek. \n\n\"See you later darling.\" Dora said as she reached up to push a tendril of hair that had escaped the bun on Tanesha's head, back into place. Her daughter looked thoroughly fucked but Dora wasn't going to tell her that. \"See you around Ty.\" Dora gave Ty a slow wink which brought a smile to Ty's face.\n\nPaul had already turned to leave but he suddenly turned around. \"Lt. Cdr. Wesley?\"\n\nTy's smile disappeared. \"Ty, Sir.\" He corrected automatically but it seemed as though Tanesha's father didn't even hear him.\n\n\"We have to talk. My wife and I will be traveling to London tomorrow evening. Can you pass by the house at ten a.m. tomorrow?\"\n\n\"Sure, Sir.\"\n\n\"See you tomorrow then.\" With that the elderly couple turned to leave, leaving the two love birds with bemused expressions on their faces.\n\nNeither Ty nor Tanesha noticed how her mother was trying very hard to suppress her laughter as they left. Neither did they hear her comment to her husband; \"Well played. For a moment I thought both of them were going to shit their pants\", Nor did they hear Paul's response of; \"The silly boy saved my life by saving my daughter's and somehow I think he knows it. Can't allow him to think I'm so grateful I'm going to give my daughter to him on a silver platter, can I?\"\n\nTanesha turned around to face Ty. \"What just happened?\" She whispered, looking dazed.\n\n\"I just got summoned.\" He replied, pressing the side of Tanesha's face against his shoulder.\n\n\"He knows I won't be around.\" Tanesha groaned. \"He did it on purpose.\"\n\n\"Don't worry babe, I can handle myself.\" Ty said, soothingly rubbing Tanesha on her back.\n\nTy had a feeling Tanesha's father was going to make him squirm the next day but he tried not to let that ruin his night. At that moment, all that mattered was the woman in his arms. But even as they danced the night away...oblivious to the curious stares they were getting from the other guests, the knowing smirk on Admiral Mathias' face, and the happy grins on the faces of the squad, a part of Ty's mind was on his meeting with Tanesha's father the following day. He clearly remembered the warning his Admiral had given him about the man.\n\nBut what could Tanesha's father possibly do to him?"
    ],
    "authorname": "adjoaq",
    "tags": [
        "party",
        "voyeur",
        "passion",
        "dancing",
        "tanesha"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/sizzling-embrace-ch-06"
}