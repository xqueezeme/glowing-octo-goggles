{
    "title": "Acting Out Their Fantasies",
    "pages": [
        "Notes from the author:\n\nThis story is about three characters: The male and female leads in a TV show and her husband. It contains marital infidelity. If that offends you then do us both a favour and stop reading now. If you're offended by that and still reading, please resist the urge to tell me how wrong you think it is when you reach the end. I may agree with you, but this is a story. A fantasy. You can't say you weren't given fair warning and I'm not interested in being preached at.\n\nMoving on: the actors/celebrities in this story are loosely based on real people who have worked together on more than one TV show. I've obscured and changed a few details because this story is in no way meant to be confused with reality and I am not suggesting that any real people have behaved like the characters do in my story. Again, it's just a story, a fantasy. Fans of the actors will probably recognise them -- I haven't obscured them that much. I hope that people who don't recognise them, probably the majority of readers, enjoy the story anyway on its own terms.\n\nChapter One\n\nThe lights were low, the bedroom was comfortably warm. The bed was king-sized and not too firm nor too soft. It was the perfect time and place for the sort of relaxed backrub that Jeremy was currently giving to Claudia, his television actress wife.\n\n\"You remember me telling you that the ratings on my show were dipping at the end of last season?\" she asked in her deep, sexy English-accented contralto. He paused in massaging her back to dribble a little more baby oil onto her, watching in fascination as it slowly drained across her curves and into the hollows of her spine. He added a drop more, fascinated as this time it settled between her perfect butt-cheeks.\n\n\"Hmm?\" Jeremy rumbled in reply, encouraging her to continue speaking while his hands returned to their important task of slowly rubbing up and down her long, slim back. He moved slightly, allowing one of his hands the space to continue downwards to her firm, well-toned and bare ass. No sense in wasting the oil he'd just dribbled there, after all.\n\nJeremy often thought that one of the joys of being married to an actress of leading-lady status was the fantastic body he got to enjoy seeing and touching on a daily basis. Not that he had any illusions that he was the only one who enjoyed seeing and touching her body -- that was the flipside of course. Kissing and canoodling with her fellow actors was pretty much part of his wife's job description. If you weren't OK with that, you'd be better finding a different job, or, in his case, a different spouse.\n\nJeremy was fine with it. The truth was, ever since he'd met her, several years earlier, he had been rather turned on by the thought that other guys lusted after his wife. More than that, he was actually secretly more than a little excited whenever he thought about the fact that Claudia was frequently touched and kissed by other guys as part of her job.\n\n\"You know how Ben's been bugging the writers, the producers, anyone'll listen, to write us some bedroom scenes?\" Claudia burbled on, clearly totally relaxed. Ben was her co-star. He was handsome, charming, and he and Claudia had extraordinary chemistry together. Jeremy knew he ought to have been insanely jealous, but he'd learnt that he didn't seem to be that kind of suspicious guy. If anything, he loved watching them act with each other, really routing for their characters to get it together.\n\n\"I remember you saying....\" He moved both his hands back up to her shoulders now, lifting aside her long, lustrous mane of thick, black hair in order to gain unimpeded access to the fine porcelain skin of her neck upper arms and upper back.\n\n\"Well, they've decided to drop in a few in,\" she drawled into her pillow, as though it was nothing more remarkable than the price of groceries. \"Nothing too raunchy, it's a family show.\"\n\n\"Shame. I'd quite fancy seeing some action,\" he chuckled. A fantasy of her lying on the bed, being ostentatiously taken from behind while dressed in white, lacy lingerie and stockings filled his head, causing his cock to twitch.\n\n\"There might be some making out in underwear...\" Jeremy felt his cock stiffening further. He was half surprised that he found the idea such a turn-on, but he did. His cock was quickly becoming fully erect. He began elaborating on the scene in his head. \"Nothing to worry about, though: I'll likely be in a sports bra, rather than something from Victoria's Secret...\" Claudia drawled on, but his thoughts were already way beyond that. His cock was fully hard and twitching now, begging for either her mouth or his imagination to give more details.\n\n\"You... you ought... You'll need to rehearse...\" he wondered if she could hear the tremble in his voice, betraying his uncertainty as to whether to say what was on his mind.\n\n\"I guess,\" she shrugged slightly, settling herself more comfortably. \"Hmm, more on that spot,\" he rubbed harder with his thumb at the tight knot on her shoulder. \"Hmm, that's good. Bet all the pervs on set'll be jockeying for a ringside seat.\"\n\n\"You can do it here if you like, away from the set,\" he knew what he was suggesting: in his mind it went way further than even an undress rehearsal. \"Take the pressure off.\"\n\n\"That's not a bad idea,\" she replied casually, obviously not privy to where his mind was going with the idea. \"Some of the crew... and the other actors... can be such assholes. And everyone always wants to watch...\"\n\n\"I'd like to watch...\"\n\n\"Pervert. Well, we'll need to make a rehearsal tape. I'll make you a home movie,\" she chuckled sleepily, not apparently taking the whole conversation that seriously. \"You can jerk yourself silly.\" Jeremy's cock physically ached at the thought. \"Ooh, lower down, and a bit more oil.\"\n\n\"Sure thing, sweety,\" he paused and picked up the bottle of baby oil. \"But If you're gonna strip off in front of Ben, I wanna to choose your outfits,\" he ventured as he poured a few drops more oil into his palm to warm it. He was already fantasising about the erotic possibilities in his head.\n\n\"Well, you can choose my outfit,\" she purred back. Something really sexy, expensive, Jeremy imagined. The sort of outfit most guys might only fantasise about seeing on a woman. He wanted to make his fantasy really good. After all, when it came to the actual show, he knew exactly how safe and vanilla they'd play it: even if they were doing it for ratings, there was only so much hotness that primetime could handle. \"Is it gonna be passion killers?\"\n\n\"I'll decide on that.\" His cock was already filling his head with images of the sort of things he'd like to see her in. \"Deal?\"\n\n\"If you insist.\" she snorted.\n\n\"You're a star,\" he leaned over and kissed her cheek.\n\n\"Hmm, and don't you ever forget it!\" she replied with a sleepy laugh. \"Now shut up give me a proper back rub!\"\n\n'~'\n\nBen was sitting just where Claudia had expected to find him, in the quiet corner of the set where they often tried to steal away to eat their lunches. She ambled across, enjoying how a happy, boyish grin split his face when he saw her. It was almost always the same. She knew the size of torch he carried for her: It was just amazing Ben's wife put up with it.\n\nClaudia suspected he was checking out her legs, and as she drew nearer that feeling was confirmed: although her calf length leather boots and long denim skirt appeared demure from some angles, the side split that ran almost from hem to hip on the skirt meant that she was flashing plenty of black-hose-clad thigh and knee as she walked.\n\nBen was being quite brazen in his ogling, even for him. Not that Claudia minded one little bit. She swung her leg a bit more than strictly necessary in order to give him more of an eyeful, her grin turning into a smirking pout as she made the most of their latest flirtatious game.\n\n\"Hey,\" she greeted him, putting her food tray down and settling herself opposite him. \"Something catch your eye?\" she teased. He bit his lip and arched an eyebrow. A snort of laughter escaped through his nose. His expression fairly shouted that he knew that she knew he'd been eyeing her up and he knew that she liked it. They stared into each other's eyes for a few seconds longer than was strictly professional, grinning like teenagers in their shared, unspoken understanding.\n\n\"Hey yourself,\" he finally broke the silence. \"So what's new, gorgeous?\"\n\n\"Stuff,\" she shrugged, playing it cool, pretending that they hadn't both been blatantly eye-fucking each other for the last minute or so. \"You've seen the script for next week?\"\n\n\"Yeah babe.\" He flashed her one of his ridiculously sexy half-smiles. \"Looks like I owe the writing room big time.\" He leered and winked at her across his enchilada. \"They really came through...\"\n\nClaudia wasn't in the least surprised at his reaction to the news of their impending bedroom scene. He'd been mouthing off to cast and crew, for two seasons now, about wanting a scene in the sack with her. He'd always spun it as a joke, and she'd always outwardly responded to it in the same vein. They were both married, after all. But there had never been any denying the sexual attraction between them, at least not in the privacy of her head, anyway. It was what made their performances in the show so natural and sexy, despite them never before having had a scene together which called for anything more than fully clothed kissing and horseplay.\n\n\"I thought it read pretty corny,\" she sniffed in pretend disdain, picking at her salad.\n\n\"Of course it's corny,\" he smirked. \"These things always are.\"\n\n\"Whatever,\" she dismissed the subject of the alleged quality of the writing. She had other things on her mind. \"But it will be a key development in our characters' storylines.\"\n\n\"Oh, absolutely,\" he took a mouthful of his beloved coffee. She couldn't stand the stuff. Opposites attracted, a little voice at the back of her mind whispered. She hushed the thought.\n\n\"So we need to rehearse.\" She remarked as casually as she could manage, despite her heart beating like crazy at the thought of how she secretly wanted that rehearsal to go.\n\n\"After lunch?\" He suggested and took a big bite of his smelly Tex-Mex wrap. Claudia shook her head.\n\n\"Do you remember all the.... Comments... last month when we did the elevator scene?\" she explained. \"No way am I going through that again.\" His character had been pressed against hers from behind. The rehearsals had been marked by numerous cat-called suggestions as to where he should be putting his hands, and other parts, and what he should do with them when he did.\n\n\"So?\"\n\n\"Are you free Thursday night?\" She could feel her heart beating in her throat as she braced herself to say the next line. Although they flirted like there was no tomorrow, she had to get her next words to come out like a normal work thing, rather than an invitation to something more risqu\u00e9. There were lines in the sand, after all, lines that actors were not supposed to cross. And besides, someone might overhear. \"Jeremy's out of town, so you can come round my place and we can rehearse in private.\" She thought she had got the tone about right.\n\n\"That sounds great!\" Ben grinned back at Claudia like he was already anticipating getting her into the sack. Which, she supposed, he probably was. Not that she wasn't thinking much the same thing, although she thought that she was better at being a bit more discreet about it than he was.\n\n\"About seven then?\" she shrugged, trying to give the impression that her attention was all on her salad. \"Wear something nice.\"\n\n\"Yes ma'am,\" he laughed and took another bite of the foul-smelling enchilada.\n\n\"And don't forget to brush your teeth!\"\n\n'~'\n\n\"This could get a bit raunchy,\" Claudia told Jeremy as she finished applying her glossy, red lipstick. \"Are you sure you're still OK with it? I could call Ben and tell him I'm not feeling...\" Not that she wanted to, off course. For the last few days she had been able to think of little else but Ben coming over tonight. In her mind she was struggling not to fantasise about how he would soon undo her dress, how he would see her in the almost unbearably erotic lingerie Jeremy had chosen for her, how he would touch her, pretend to make love to her and perhaps, even, how they would tip-toe back and forth across the line between acting and reality.\n\n\"Hey, it was my idea, remember,\" Jeremy replied. Claudia had been just a little surprised that Jeremy had been so enthusiastic about their rehearsal. He seemed more than OK with the whole bedroom scene thing, going as far as to suggest that she and Ben should practice the scene here, in their own bedroom. More, somehow he'd got her to agree to let him choose her outfit. She'd been a little surprised when, a couple of days later, he'd shown her his choice. Not that it wasn't nice, very nice. Outrageously hot and classy, even. But if his intention was to give Ben a raging hard-on, he couldn't have chosen better. The size of Ben's bulge was legendary on set and amongst their show's many female fans. If, no, let's be honest, when he got an erection during their rehearsal it was going to prove.... Interesting. She wasn't sure if her husband realised that actors didn't just leave their desires and their human reactions in the dressing room when they stepped on stage.\n\nStill, if Jeremy was so keen on making this evening as hot as possible, she certainly wasn't complaining.\n\nClaudia bent over her dressing table and picked up the black, lace and silk briefs that her husband had chosen for her to wear and pulled them up over her long, lean legs. She settled the ribbon-like sides across her slim hips before making sure it sat right across her neatly trimmed pubic hair and down the crack of her well-toned ass. She quickly checked herself in the mirror. You could just about make out her minimal bush, but because the material was dark it wasn't outrageously obvious.\n\n\"You know I love shipping Mike and Chloe,\" Jeremy continued from where he sat on their opulent marital bed, egging her on with all the enthusiasm of a kid on Christmas eve. \"This way I'll get to see a lot more than the channel would ever dare show. Plus,\" he paused. She turned her blue-grey eyes his way, as she started pulling on the effectively transparent silk and lace mesh bra that went with the thong, making sure the label was suitably tucked in. He winked lasciviously as she jiggled her pert and firm 36C breasts into place in their cups. \"We get to record it for old time's sake.\"\n\n\"Pervert.\" She winked back, wanting to lighten the word yet still get it out there, on record. \"How much more exactly do you think you'll see, anyway?\" Claudia asked jokingly. The whole outfit was far sexier than what she knew she'd be expected to wear when she and Ben were actually filming the scene for real. Hardly surprising: it must have cost hundreds. Ben was practically going to cream his pants just at the sight of her. Honestly, what had Jeremy been thinking? No matter, she had her own plans for this evening, plans that involved her having as much fun with the situation as she could. Plans that would be helped along nicely by the fact that she had persuaded Jeremy to go to a hotel for the night: she'd argued that it was necessary so that she and Ben could rehearse for as long as they needed to in peace.\n\nHe chuckled and grinned lasciviously in reply. His thoughts were clear, even if he hadn't said them out loud. She wasn't going to let him get away with it.\n\n\"You wanna see me touching his dick?\" She enquired as she picked up her first stocking.\n\n\"You're gonna be making out half naked, I think that's a given,\" he laughed. \"Hands, boobs, who knows?\"\n\n\"If that's what you want?\" She fixed him with a defiant glare as she lifted a long, lithe leg up onto the end of the bed and began slowly to roll the sheer black stocking up its extensive, shapely length, enjoying the way the display reduced her husband to a pair of eyes on stalks. \"I'm sure I can oblige.\"\n\n\"That'd be something to see,\" he taunted her. If Jeremy was going to be an asshole about it he'd better watch out: he'd been pushing her buttons about tonight for days and she was in the mood to give as good as she got.\n\n\"So, do you really want to see me give him a hand job, then?\" She asked, picking up her second stocking.\n\n\"Pfft,\" Jeremy snorted dismissively leaning in to stroke the top of her already stockinged leg, watching her with hungry eyes as she rolled on the second hose. He seemed to be taking it all as just an extension of their usual risqu\u00e9 banter, but she certainly wasn't. Days of him going on about tonight, of Ben going on about tonight at work, had seen to that. \"And the rest...\"\n\n\"Maybe a blowjob?\" she upped the ante, slightly annoyed at his reaction, as she moved on to fasten the silk and lace black suspender belt around her well-toned waist.\n\n\"Yeah, right!\"\n\n\"Maybe I should go the whole nine yards and fuck his brains out?\" she challenged, daring to tease her husband with what she actually wanted to do to Ben. \"Is that what you're looking to see?\"\n\n\"Be nice if you could,\" he replied with a wink. She glared back at him. \"Simulated of course.\"\n\n\"I could do him right in front of you on screen and you wouldn't even know. Not for sure.\"\n\n\"Yeah, right,\" he laughed. Claudia fumed. A little voice in her head said that that that was exactly what she ought to do, just to teach husband a lesson, to get her own back on him.\n\n\"Could you sort out my suspenders before you go?\" Claudia asked him, not bothering to hide the hard edge to her voice as she made one last check of her reflection in the mirror to see that the seams of her fully-fashioned stockings were straight.\n\nJeremy's eager fingers threaded the first strap under her thong and then began clipping it into the lace top.\n\n\"You know,\" she drawled as he moved onto the second suspender. \"You only thread those things underneath when you want the panties to come off and the stockings to stay on?\"\n\n\"Like that's going to happen,\" Jeremy chuckled, barely pausing as he began to thread the next suspender beneath the silk ribbon that made up the back of her panties. \"Everyone knows you've got a strict no nudity clause.\" The cocky bastard! He was so sure of himself, so sure that he thought he could arrange for his wife to dress up in sexy lingerie and make out with a desirable guy without anything really happening.\n\n\"I wouldn't be nude. The stockings and suspenders would still be on,\" she bit back. Well, she was an actress, a good one, and Ben had made no bones about how much he was up for. If Ben was up for half of what he'd said, they'd give her cavalier husband the show of his life.\n\n\"We'll see,\" Jeremy winked, so cocky, so sure of himself it made her mad to see.\n\n\"We will,\" she replied, buttoning up her sexy, clingy black dress. \"Or you will, later. Grab your bag,\" she ordered. \"Ben'll be here soon. I want you to be long gone.\"\n\n'~'\n\nBen could feel his heart beating like a drum as he pulled up outside Claudia's place. He'd been thinking about this evening all week, fantasising about what it might mean that she'd asked him round to rehearse such an intimate scene in the privacy of her home, of, to be more accurate, in her bedroom. His thoughts kept returning to the thought of how far they might take things. Half of him, the sober, married half, expected nothing more than a very professional rehearsal, but another part of him was so expectant for more that he had swallowed a Viagra tablet just before getting in the car to ensure that his body would be up for absolutely any eventuality.\n\nHe'd always had a thing for Claudia, ever since they'd first met a couple of years ago. The many hours he'd spent in her company since had only served to entrench his infatuation, whilst the occasional clinches and kisses they'd had to perform at work had served to fuel a slow burning lust. Shooting his mouth off about how much he fancied her, how much he wanted a racy scene with her, had all been part of constructing a defence mechanism based on the plausible deniability that it was all just part of the PR act to get the audience hot and bothered about their characters. It seemed to work: it even seemed to have both of their spouses fooled.",
        "He popped a breath mint into his mouth and rang the doorbell.\n\nThe door opened to reveal Claudia done up as fine as he could ever recall seeing her. She looked like a million dollars, her slim, toned frame shown off by a tight, black silk dress, black hose and high heels. She was wearing 'date-night' make up and her thick curly black hair cascaded freely across her shoulders. He liked her hair whether it was up or down, but the way she had it done tonight made his stomach do backflips.\n\n\"Ben!\" she announced, stepping aside to allow him in. \"You're looking fabulous, darling!\"\n\nAs the door closed she leant forwards to press her ruby-red lips against first his left then his right cheek in the time honoured greeting of their profession. At close quarters she smelt divine too. She must have spent a fortune and an age getting ready for him. He leant back from the kiss, took hold of her arms and drank in the sight of her.\n\n\"God, babe, you're absolutely delicious!\" He grinned, holding on to her for longer than was strictly necessary. \"And I love what you've done with your hair,\" he continued, getting a pleased blush from her. He was so pleased that he'd not stinted on his own ablutions or choice of clothes. And he dared to hope that that little blue pill he'd popped earlier hadn't been a fool's hope either. His hands slipped lower to rest easily on her waist and hers came to rest on his shoulders, her fingers flirting with the fabric of his shirt, arranging his collar to her satisfaction. It was all shaping up very nicely in line with his fantasies.\n\n\"Well, you can eat me later, I'm sure it's in the script,\" she winked at him suggestively, her already deep, sexy voice dropping even further. His cock stiffened almost instantly in response. The way they were pressed against each other at the hip, he was sure she must have felt it. Her smile broadened and she seemed to be smirking. They flirted all the time at work, of course, but he couldn't help but feel that this was different: They were in private and it was already a given that they would be tearing each other's clothes off in the near future.\n\n\"We've got the place to ourselves -- Jeremy's on a trip,\" she reminded him. \"Won't be back tonight.\" She paused, letting the words hang in the air. She was still in his arms, still staring straight into his eyes, still completely at ease with his bulge pressing insistently against her. \"So we can take our time, improvise around the script as much as we like. Really explore how our characters feel about the scene.\"\n\n\"I like the sound of that, babe,\" he replied, his hands dropping to cup her ass. He wasn't lying, his mind was already going into overdrive, imagining the possibilities. His fingers stopped when they found two bumps that could only be suspender straps. My God, he thought, she'd dressed in stockings and suspenders, knowing that he would be undressing her, knowing that it wasn't required in the script. That could only mean that she was as up for this as he was. From the broadening of the grin on her face it was clear she knew what his hands had just discovered, and that she was loving it, too.\n\n\"Do remember we're recording it though.\" His mind cleared just enough to recall a conversation about taping their rehearsal so that they could watch it back and see what worked and what didn't. Oh, and something inconvenient about her husband wanting to see it, too. \"Gotta make it look good for Jeremy,\" she added in confirmation. Make what look good, he thought? Actual sex or the pretence of having sex while looking like you weren't having sex? Or, heaven forbid, even not having sex while pretending that you were, like in the formal script? He fervently hoped it wouldn't turn out to be the latter.\n\n\"Jeremy?\" He vocalised at least part his disappointment and worry.\n\n\"He really wants a copy of our rehearsal tape,\" Ben couldn't disguise his crestfallen expression. His hands slipped away from her waist.\n\n\"What, to make sure it's all above board?\" Ben was crestfallen.\n\n\"Don't worry, darling,\" Claudia pouted. \"He's really excited by it all. He's our number one fan. He's such a pervert.\" She winked.\n\n\"Well, if you're sure...?\"\n\n\"We can always edit it out if your cock escapes, like that scene last season with Alex,\" she teased, bringing up a famous wardrobe malfunction he'd suffered on set the previous year. Still, he was encouraged by the fact that she had already considered the possibility of editing bits out if they got too racy.\n\n\"Come through, I'll get you a drink before we get started,\" she continued, casually turning and walking away. \"Help you relax.\" Ben stared brazenly at her retreating form, like a hungry man sizing up an all-you-can-eat buffet: her luxuriant, wavy black hair, hung halfway down her slim back; her tight butt wiggled intoxicatingly. That was to say nothing of her long, slim legs, half visible beneath her dress, and most notably her calves, encased in black, seamed hose atop tall, strappy black stilettoes.... The sight of those seams returned his mind to the stockings his hands had already confirmed her to be wearing and at the combined thought of seamed stockings his cock kicked upwards once again.\n\n\"Are you coming Ben?\" She called to him, snapping him back to reality.\n\n\"Give me a moment!\" He called back, fervently hoping that he would indeed be coming sometime in the next hour. Preferably either inside or all over his beautiful leading lady.\n\n'~'\n\n\"... Jeremy called earlier,\" Claudia chatted to Ben as she led him into the bedroom. \"He said his hotel's nice.\" It wasn't 100% true of course -- Jeremy probably hadn't even got to, never mind checked in to the hotel ten miles down the road where he was going to spend the night.\n\n\"Great,\" Ben replied, fixing her with a smouldering, blue-eyed, hungry gaze. \"Did I tell you how gorgeous you look tonight, Claud?\"\n\n\"Possibly...\" She smiled to herself. \"Probably.\" It was always nice to be appreciated, and ever since she'd opened the front door to him ten minutes ago, he'd been appreciating her verbally, physically and with his gaze. She'd watched with satisfaction how his eyes had roamed freely over her figure-hugging black, button through silk dress, taking in the matching high heels and seamed stockings. She'd been thrilled by the feel of his hands performing a similar reconnaissance. She'd loved how his hands had lingered on the backs of her thighs while confirming the bumps of the suspender clips. She also knew that he couldn't have failed to notice the seams running up the backs of her legs as they came upstairs a few moments ago: what red-blooded male wouldn't have? He'd even tried to cop a feel of her ass on their way upstairs, but she'd anticipated the move and dodged away from his outstretched hand. All the better to bring his lust to the boil, she thought to herself.\n\n\"You're not looking too shabby yourself,\" she replied, turning to face him as she stood halfway between the bed and the dresser, unable to resist returning his look of naked desire. She bit on her bottom lip and turned her head, suddenly all business-like. There'd be plenty of time for the other soon enough.\n\n\"Cameras are set up there, there and there.\" She pointed and gestured, indicating that one was angled to shoot from the head of the bed and one from the bottom corner of the bed with the third one angled towards the dresser.\n\n\"Three? Kinky.\" Ben winked and leered, fixating on how much fun their rehearsal was likely to be.\n\n\"So we can catch everything and check on what worked and what didn't,\" she explained again patiently. He nodded, trying to match her sudden seriousness. \"It might help with the editing afterwards for Jeremy's present, too.\" Now he chuckled. She grinned back.\n\n\"Understood,\" Ben nodded with a miniature mock-salute. \"So, how do you want to play this? He continued, a slightly coy smile now hovering about his lips. Claudia was well aware that he was already undressing her with his eyes, anticipating what might be underneath her little black dress. He'd never been backwards in communicating how much he fancied her. Of course, the feeling was mutual: He was charming, well built, had a great ass and the sort of eyes that made her heart do flip-flops. The very real sexual attraction between them was a big part of what gave such smoking hot chemistry on screen.\n\n\"Right,\" she licked her lips nervously. It wasn't that she was nervous about making out with him: it was more that she really wanted tonight to be good, to be as sexy as they could manage. And she wanted to have fun, away from the usual pressures of the job, the cast and crew. Besides, they did actually have to film this scene next week. They did actually need to rehearse. She turned away from him, turned away the enormous bed he was standing in front of. Her matrimonial bed. The bed she intended to soon tumble onto with him, both of them in an advanced state of undress and likely also sexual arousal.\n\n\"Well, my dressing table can stand in for the desk.\" The scene was set in a hotel room and opened with her character looking at something on the desk before calling him over to look at it. It didn't matter what the thing was, it was just a McGuffin to get the seduction scene started. The script said that as he peered over her shoulder things would heat up and then it would all kick-off. The scene would cut as they tumbled onto the bed in their underwear.\n\n\"How about I call you over, you come up behind and start getting frisky\" she began to describe the scene as she saw it unfolding. \"Then... pretty much the same way these scenes always seem to play out: I turn, I get frisky back, kisses and whatnot. Then you undo my dress. Slowly.\"\n\n\"Slowly, naturally,\" he winked.\n\n\"I take off your shirt and undo your trousers. You squeeze my ass and suck my tits. You go down on me. You come back up...\"\n\n\"Sucking your tits again on the way? Slowly, of course.\"\n\n\"Naturally. It's the trope. It's practically compulsory,\" Claudia nodded. \"Then I wrap my legs round your waist and we head to the bed... and cut.\"\n\n\"Cut?\" he sounded disappointed.\n\n\"Well, it's not that sort of show. We have to leave the audience's dirty minds to fill in what they might see on an adult show.\"\n\n\"What might they see?\" He winked, encouraging her to talk dirty to him.\n\n\"You know, the bit where I give you a hand job, go down on you then gather the sheets round me to obscure what we're not doing and ride you to ecstasy.\" Claudia rambled on, trying not to keep her cool despite the unrelenting sexy, grinning stare he was lavishing on her.\n\n\"Sounds like a plan. You wanna fill things out...?\" He asked, rubbing a thumb against his bottom lip in a failed attempt to cover a smirk. That mannerism just did things to her insides, and damn him, he knew it.\n\n\"Nah, just improvise this time through, get a feel for it...\" She wanted to joke that she wanted him to fill her out, but never got around to it.\n\n\"Whatever 'it' might be,\" he interrupted, winking at her. She laughed back, flashing him one of her broadest, most toothsome and open grins, the sort she knew that he found irresistible.\n\n\"So, you ready?\" He asked, seeming suddenly more serious. Ready to work.\n\n\"And willing,\" she winked back before turning her back on him and leaning on the dresser with both hands.\n\n\"OK, and.... action,\" he supplied.\n\n\"Mike, you should take a look at this!\" she called, slipping instantly into the character of Chloe. Not that it was hard to do so, and not that there was anything on the dresser anymore apart from her single, trifold make-up mirror.\n\nThe sound of two heavy footsteps coming up behind her signalled his arrival and the start of what she hoped would be something pretty special. Claudia's breath hitched as she felt the familiar heat and weight of his body pressing against her back. His enlarged bulge was already pressing against her ass as he leant across her shoulder, one strong, well-muscled arm planted either side of hers. His chin came to rest on her shoulder and his breath fanned her ear. She already wanted to fuck him senseless. Good job she was a professional: They were rehearsing, no time for personal indulgences she lied to herself, half acknowledging the untruth even as she thought it.\n\nThe musky, woody smell of his aftershave invaded her nostrils, driving her excitement a notch higher and pushing back her flimsy self-delusion about keeping it strictly professional.\n\n\"You smell nice tonight,\" his nose nuzzled her ear. \"New perfume?\"\n\n\"New shampoo.\" Her breath came in short ragged gasps as her heart-rate went ballistic. \"You like?\" She angled her neck so that he could nuzzle it more effectively, more sensuously.\n\n\"You bet.\" Claudia shuddered slightly as his right hand started to caress its way up her bare arm, the touch so light that it was almost a tickle. \"Makes me want to do.... Things...\"\n\n\"Oh really?\" she giggled. \"Such as?\"\n\n\"Such as slowly undress you,\" his hot, breathy whisper invaded her ear. \"Take off your dress. Caress you. Finger you. Eat you out...\"\n\n\"It's about time,\" she almost giggled as she pressed herself closer against the muscular heat of his body, feeling his growing erection burrowing eagerly ever deeper into the crack of her ass. His hand reached her cheek now, smoothing the few stray whisps of her long, raven hair away from her ear, allowing him to nibble and then kiss her earlobe and the side of her face. She started to turn in to enable the kiss and as she did so his hand was already made its way back down, under her arm, gliding smoothly up and across to cup her breast through the thin, silky layers of her dress and bra. Another little shock of excitement ran through her at the feel of his fingers snuggling around her supercharged nipple.\n\n\"Then I'm going to fuck you, Claudia,\" he whispered in her ear. She shivered with excitement, barely believing that he'd used her name, not her character's, but so turned on that he had.\n\n\"Yes,\" she moaned in reply, not knowing where her character ended and she began. \"I want you to...\"\n\n\"Turn,\" Ben whispered in her ear, the husky edge to his voice making it sound less like a stage direction and more like the friendly command of a confident lover. Not that he really needed to -- she was already starting to do so. They were always like this together -- always on the same page.\n\nClaudia finished turning in his arms, still pinned against the dresser. The brief disappointment of losing the exquisite feel of his hand on her breast was mitigated by the fact that they were now facing each other and able to kiss as well as caress.\n\nHis lips found hers, their mouths opening as the kiss rapidly deepened. Their tongues met and passions rose, his hands briefly cupping her face, ensuring that all their attentions were on that first kiss.\n\nFinally, after what seemed like an age of exploring each other's mouths, they backed off to pass noses, then the kiss deepened again. They'd done this so many times before: their characters were famous for the passion of their smooches, swapping kisses with the elegance and expertise of professional dancers. She knew that Jeremy loved to watch them kiss, but tonight she was going to give him so much more. As though it were in response to her thoughts Ben's hands began now to roam freely across her waist, hips and then ass. His palms slid up and down the backs of her thighs, fingers edging the hem of her dress higher, seeming to pause for his character to confirm the presence of her suspender straps through the fabric of her dress.\n\n\"You like those?\" she rumbled just for Ben, too quietly for the cameras to pick up.\n\n\"You bet, babe,\" he grunted in the affirmative, giving the strap just the gentlest of pings against her buttock. She chuckled as she moved her own long, eager fingers to his chest, running them across the well- muscled planes of his pecs, anticipating the feel of touching him skin to skin for a few seconds before she began unbuttoning his crisp, white cotton shirt.\n\n'~'\n\nChapter Two\n\nClaudia had long since left for the studio when Jeremy finally made it home next morning. The house was quiet and deserted -- he went through every room looking for any sign of her or Ben, but everything was completely shipshape. Even the bedroom was neat and tidy, the bed immaculately made.\n\nThere was a note on the dresser, next to the laptop. He picked up the piece of paper\n\n\"Dear Jeremy,\n\nThe rehearsal went great, thanks for everything. We even improvised a couple of extra scenes, just for you.\n\nLook in the My Videos folder, file is called 'Present for hubby.'\n\nHope it's everything you wanted. Enjoy.\n\nLove Claude.\n\nPS, I'll be working late tonight so see you about midnight.\"\n\nWhile the laptop was booting up a sudden idea gripped Jeremy. Going through to the bathroom he opened the laundry basket. There, near the top, was a small pile of flimsy, black fabric -- the lingerie Claudia had worn last night. He picked the garments out and looked at them. Her panties had a small mark on them. He sniffed. All Claudia. She must have been turned on last night. He wasn't surprised. He'd wanked himself silly in the hotel room just imagining what might be happening. The bra was totally clean, too, just hint of her perfume and her sweat. But there was a small, crusty white mark near the top of one of the stockings, and another on the suspender belt. Neither mark was large, but Jeremy knew dried cum well enough when he saw it. What the hell had happened last night?\n\nWith his heart beating like a drum he rushed back to the laptop with her lingerie still clutched in his hand to open the file.\n\nJeremy took the laptop over to the bed and lay down, tossing his wife's lingerie onto the bed next to him.\n\nThe video started to play: it was only about 25 minutes long. He'd been away for the whole night. That immediately got him thinking that all sorts of things might have gone on that weren't on the video. He had no time to dwell on that, though, as the screen was showing Claudia walking into their bedroom, an eager and clearly horny and playful Ben following close behind her. To Jeremy, it looked like they were already practically fucking each other with every look and word that passed between them, just like on the show. It was such a turn on.\n\nBen and Claudia had such great chemistry as Mike and Chloe. When they were on screen together they didn't look like they were acting -- they looked like they genuinely were a couple that had a strong attraction to each other. Their show, like so many others, had contrived to keep their characters from actually consummating their relationship for a couple of seasons, but this year it looked like it was going to be different. The first step was the unambiguous make out scene that they were just starting to rehearse. As a fan of the show he was excited at the prospect of seeing Mike and Chloe actually take things to a new level. As the husband of an actress, he felt a secret frisson of excitement at the thought that his wife's job sometimes called on her to make out with other, undoubtedly attractive, men before returning to his bed. Jeremy had long ago realised that all actors and actresses were exhibitionists, and all spouses needed to enjoy being voyeurs and willing cuckolds. If they weren't, then maybe they ought to find someone different to marry.\n\nHis mind was going wild in anticipation - he could barely believe that he was about to see his wife acting out one of his most cherished but secret fantasies, staring in what amounted to a soft core movie just for him. Part of him wanted to fast forward on, but a bigger part knew that, certainly first time through, he wanted to see things slowly unfold. He wanted to revel in the excitement of not knowing what would happen next. When the video got to them discussing the outline of the scene, how they were going to undress each other and simulate having sex he could feel his excitement rising, matched by the almost painful tightness of his pants as his cock struggled to be free.",
        "On screen, Ben walked up behind Claudia and laid his hands covetously on her, running them up and down her figure for a few seconds and then spinning her to face him. Jeremy felt his trousers tightening painfully as they began to passionately kiss, her hands tugging at his buttons. She soon finished unbuttoning his shirt and her hands began playing across his chest, slowly pushing the shirt down and off his shoulders. His hands left her ass long enough for him to discard his shirt, before returning, this time to the topmost button of her black silk dress.\n\nAnd all the while they were kissing with a hungry, dangerous passion.\n\nThe first button on Claudia's dress opened, allowing Jeremy a tantalising view of the creamy curve of the top of her breast. Of course, he'd seen similar scenes many times before, but this was different, way different. It was his wife, and that upped the excitement to near unbearable levels.\n\nJeremy barely had time to swallow and bite his lip before the second button opened, revealing a flash of the black silk and lace beneath. His heart began to speed faster as the next few buttons followed in quick succession. His eyes were bugging out, glued to the screen as Ben's mouth left Claudia's and began to trail down her neck. She threw her head back to grant her lover better access, her teeth showing as a wide smile of sheer delight. Ben's mouth moved in to take full advantage of the long length of naked, ivory flesh, framed and accentuated by her lustrous raven hair, her open dress and the transparent black of her lingerie.\n\nIt was shaping up to be Jeremy's own private fantasy porn scene, with his wife as the star. His hand slipped into his lap, cupping his own growing bulge. On screen, Claudia's hands had not been idle while her dress was being unbuttoned. Her fingers tugged eagerly at Ben's belt. Once it was loose she wasted no time moving on to the fastening of his trousers. Jeremy heard her gasp in triumph as her hands pushed the heavy fabric off of his hips and down his legs, out of sight. Jeremy's fingers echoed those of his wife, tugging open the buttons of his fly to relieve the growing discomfort the tight trousers were causing him. His eyes didn't leave the unfolding scene for a second.\n\nNo sooner were the trousers disposed of than her gasps took on a new quality: his lips, having trailed down her neck and across her shoulder, were moving now across the upper curve of her nearly exposed breast, his mouth heading straight for her left nipple. His fingers pushed the dress down and then returned to her breast, cupping, tweaking.\n\nFor a few seconds as her dress fell away Jeremy could clearly see Claudia's aureole through the fine mesh of her bra. Ben's hand moved across and away again and now he could see her nipple poking hard and erect through the fabric. And then his view of it was gone, as Ben's mouth moved in. Jeremy's mind's eye pictured Ben's lips latching on to the sensitive bud, through the thin lacy fabric of her bra. Jeremy moved one hand to his own nipple and began to caress it, tweaking it until it was erect and super-sensitized.\n\nTheir clinch seemed to be getting really heated now. Ben and Claudia shifted position slightly, his left hand disappearing between their bodies. Where had his hand gone? Jeremy wasn't sure, the angle just wasn't right for him to see. Still, it wasn't like he could have been missing much. Ben had gone back to kissing Claudia's neck, leaving her left boob all but uncovered now, the cup of the bra pushed down past the nipple. Claudia was panting heavily, her breaths coming in deep, desperate gasps, while her cheeks had turned bright pink. Even though some of it was probably blusher, some of it stubble-burn from Ben, he had to admire his wife for her acting chops. To summon up flushing cheeks like that was something special. Jeremy could feel his own cheeks reddening with arousal at what he was seeing, his fingers stroking his erection through the thin fabric of his shorts.\n\n\"Yes, Mike! Yes!\" Claudia could be heard to moan. The sound of his wife's distinctive, deep, sexy voice calling out another man's name so lustily drove Jeremy's own passions to new highs.\n\nBen was moving lower again, pausing briefly to minister once again to Claudia's well-suckled, erect nipple, which glistened with fresh saliva as it peeked above the line of her dislodged bra cup. He continued down, bent his knees and his hands slipped around her waist to lift her up to sit on the edge of the dresser. Then his hands and lips returned to continue their inexorable glide south across her torso. As his hands passed her waist his fingers took a gentle hold of her panties and began to edge them downwards. Her hands diverted from tousling his hair for a few seconds, just long enough to rest palm down on the edge of the dresser and push her ass an inch aloft.\n\nThat was all the time and help Mike had needed to slip her panties off and away down her long, lithe, stockinged legs.\n\nJeremy gasped in excitement and outrage as the realisation dawned that his wife had just voluntarily allowed Ben to remove her panties: he couldn't say he was totally surprised, she had warned him it might happen when she was getting ready, given him an out. And he had deliberately facilitated it by continuing to lace her suspenders inside her panties. And yet he was so thrilled that he had. His fingers tightened around his cock, gripping it like he was hanging tight onto a talisman of his wife's fidelity. Meanwhile Ben, one task accomplished, had dropped fully to his knees. At the same time she had lowered herself back onto the dresser top while his head had disappeared between her thighs. Jeremy wasn't just going to sit and watch, though: he pushed his shorts down, allowing his engorged cock to spring free.\n\nJeremy marvelled at their ability to make it all look so convincing. He knew full-well what activity they were about to portray. They didn't disappoint him. She swung her legs over his shoulders, crossing her stiletto-shod feet behind his back and apparently pulling his face even closer into her pussy. But, because of the camera angle and the positioning of his wife's long, flawless thighs and Ben's own head, it was impossible to tell whether Ben was actually eating her out or whether it was all just an illusion. He had to hand it to them, it was great acting, and all done seemingly with barely a word to coordinate what they were doing.\n\nJeremy's hand stroked slowly up and down his cock, his entire attention focussed on the screen, watching how his wife's hair fanned out beneath her head, how her back kept arching, just like it did when he was eating her out. Her hand clutched spasmodically at the edge of the dresser top and her small plaintive gasps and cries of pleasure were interspersed with astonishingly realistic wet, lapping sounds from Ben. The sights and sounds were driving Jeremy wild with lust.\n\nOne of Ben's hands had slipped beneath Claudia's ass, pulling her tightly into his face, while the other was stretched up to her breast, roaming freely about, the fingers alternating between kneading her soft flesh and tweaking her now clearly fully engorged bud. Jeremy ceased stroking and began tweaking and teasing the tip of his cock in synchrony with the attention being lavished on his wife's nipple.\n\n\"Yes! Yes!\" Claudia called out, loudly enough to be clearly heard through the camera, her breaths coming in deep, desperate gasps between the words.\n\nHow much was real? And how far was his wife willing to go? He stroked his cock with renewed vigour. He could only wonder at the answer.\n\nJeremy watched in awed disbelief as Ben lifted his wife like a ragdoll and, her limbs wrapped tightly around him, carried her over to their bed. Was this where the scene ended? Should he bring himself off now, or was there more, and likely better, yet to come? The video timing said there was plenty still to come. Jeremey held himself back from climaxing, wanting to see everything first.\n\n\"So, this is about as far as we go in the script,\" Claudia said with Ben standing just inches in front of her. His erection was now obvious, partially escaping his distorted shorts.\n\n\"So, is it 'cut?\"' Ben smirked. It was obvious that he wanted, no, he expected more. Jeremy gripped his cock hard and stopped stroking, desperately willing them not to stop.\n\n\"Well, I reckon our audience, our fan...fans would love to know what happens next.\" Claudia replied. She wasn't wrong. Jeremy longed to see the whole scene played out. She'd always been a hands-on flirt, but Jeremy was surprised to see her now laying her hands on Ben's bare thighs, her fingers stroking every higher.\n\n\"What does happen next?\" he heard Ben ask huskily as her long, thin and agile hands disappeared up the back of Ben's shorts to play with his bare ass.\n\n\"You know how these scenes always go?\" Claudia laughed, her wide eyes fixed on Ben's crotch as her hands, still beneath Ben's boxers, slipped around to the front. What the hell was she doing in Ben's shorts? Was there any way on Earth she wasn't touching Ben's cock or balls now?\n\n\"She gives him a handjob, then a blowjob and finally fucks his brains out. Unless the director says 'cut?'\" Jeremy could hardly believe his ears or his eyes. He knew they'd joked about it when she was dressing, but how serious was she about giving Ben a blowjob? He supposed he was about to find out.\n\nBen theatrically looked around the room for a few seconds. \"Seems not.\" He laughed. Claudia didn't even wait for him to finish speaking, though, before she slipped her hands out from under the fabric, took a firm hold of the waistband of his boxers and yanked them down.\n\nBen's long, thick cock jerked free, the tip of it hitting Claudia's face as it sprang up, causing Jeremy to groan with excitement. The sight of Ben's cock bumping against her face was about the most arousing thing he'd seen so far. He closed his eyes and gave a long, slow stroke of his own equipment.\n\nWhen he opened his eyes again she was biting on her bottom lip in concentration as her long, elegant middle finger moved in teasingly to stroke Ben's tip. Jeremy groaned again -- the imagery just got hotter and hotter!\n\n\"Claude!\" Ben gasped between deep breaths. Jeremy knew exactly how he felt.\n\n\"Stay in character!\" she chided as more of her hand came into contact.\n\n\"Are you sure? Your husband..?\"\n\n\"It's OK. He reckons touching your dick is, and I quote, 'a given'.\" She had him there, even if he was inclined to take issue with her giving Ben a hand job, which he wasn't. He was hoist by his own petard.\n\nHer fingers played freely and lightly about Ben's rigid manhood for maybe half a minute before edging back to the tip. Without a pause, she brought her index finger to her mouth, sucking on the last joint to the accompaniment of a deep, throaty groan. Jeremy matched the sound with one of his own.\n\nBut it seemed she wasn't yet done. Before her groan had even died, her other hand reached out and took a firmer hold of Ben's shaft before pulling Ben into contact with her right boob, the one now only half cupped by her bra. Jeremy watched her slowly running Ben's cockhead around the erect bumps of her aureole. How could he complain? She was only doing exactly what he had dared her to do earlier, what he had not so secretly wanted her to do? Jeremy's thumb mimicked the motions around his own nipple, allowing the sights, sounds and sensations to sweep him away.\n\n\"Now... blow...\" She intoned in her deepest, huskiest voice, concluding the words by treating both men to the sight of her talented tongue pulsating up and down, back and forth inside the open O of her mouth.\n\n\"No....!\" Jeremy cried out loud. But it was half-hearted protest. There was nothing he could do, nothing, in truth, nothing he wanted to do to stop it. He'd deliberately made this bed, and now it seemed that his wife was going to suck off another man in it. Or maybe just pretend to? The next minute or so would surely tell.\n\nThere was a cut to the other camera, which showed Ben laughing as he rolled onto and across the bed, tugging the quilt around him slightly as he went.\n\nClaudia leant across him, her mouth homing in on Ben's cock. The mantle of her long, thick raven hair tumbled down around her face, sweeping around and combining with the sheets to obscure what was going on. Her shrouded head began to bob up and down slowly to the accompaniment of loud slurping noises. It certainly looked and sounded real. Jeremy frantically peered at the screen, trying in vain to determine whether Claudia really was giving head to Ben. After a minute or so of suspense, Claudia tossed back her tousled, raven mane and sat up, settling the sheet around her hips as she straddled the top of Ben's thighs.\n\nJeremy could see Ben's cock standing proud and erect. He couldn't be sure, but it seemed quite red in places, almost like it was smothered in lipstick. Whether it was or wasn't, even the thought that it might be was almost unbearably erotic.\n\n\"So, did you enjoy that?\" Claudia grinned down at Ben, running her hands slowly and freely over her co-star's taught, muscular abdomen.\n\n\"Oh, yeah, you betcha babe.\" Ben replied, as though in a daze. Jeremy was breathing hard -- he'd enjoyed it too.\n\n\"I bet the fans woulda loved it.\" She continued, obviously pleased with herself. She wasn't wrong, Jeremy mentally agreed as he ran his fingers slowly up and down his shaft.\n\n\"So hot...\" Ben burbled on.\n\n\"And now it's the part where we fuck each other's brains out.\" She turned to face directly at the camera and winked. Jeremy almost whooped with excitement and his hand retightened around his cock once more. \"It's what the audience has been itching to see.\" She announced. And indeed he had.\n\nJeremy's hand moved faster and faster as he watched Claudia rocking steadily forward, riding up Ben until she could lower her boobs into his mouth. He suckled briefly, but satisfyingly, then she moved back down again, returning to a more upright position as she went. Meanwhile Ben's hands roamed longingly across her boobs and up her exposed knee before disappearing beneath the sheet. Jeremy knew well enough that both of the actors had lost their underwear. There was no way that Ben's erection wouldn't be pressed against Claudia, hard naked flesh to soft naked flesh. And yet he couldn't see a damn thing, not with that sheet in the way. The not knowing quite what was going on was both frustrating and incredibly arousing. He could feel himself close to an orgasm.\n\nJeremy slowed his strokes, trying to stave off his climax and prolong the moment. His pause coincided with a lull in her gyrations on screen. Her lips parted in a blissful, breathy sigh.\n\n\"You OK, babe?\" he heard Ben ask. \"That's not hurting you?\" She shook her head, angled her body more upright and began to renew her rocking.\n\n\"Perfect,\" she shook her head, the gesture extending and morphing into a rhythmic circular toss of her hair as the gyrations of her bodies began to build again. Jeremy always loved it when she rode him like that, and it was just as exciting to see her do it on screen. It was her favourite position, his too. He renewed his own strokes in anticipation of her climax.\n\nClaudia arched her back, emitting a banshee keening of carnal pleasure as she acted out her orgasm. Jeremy was convinced it was an act, because when he and Claudia were in bed her orgasms were far more muted affairs and it took her much longer to come. Her cries were surely all Chloe, a little voice at the back of his mind desperately wanted him to think.\n\nAt the sight and sound of her coming Jeremy couldn't hold himself back anymore. His orgasm swept over him with almost unprecedented ferocity and intensity. His own cum hit him the face not once but twice. He could feel his cock pulsing in his hands as it flung out yet another thick, white rope of ejaculate.\n\nWhen his eyes rolled down from the tops of their sockets and his mind was able to focus once again he was actually relieved to see that Claudia and Ben had also concluded their gymnastic act. They had collapsed in bed, ensconced beneath the sheets, his arms wrapped around her, his nose and fingers playing with her hair. The last shot, a still, was of her spooned against Ben and staring straight into the camera with a thoroughly wicked grin. The video time stopped at just over 26 minutes.\n\nWhat had they done for the rest of the evening, though?\n\nJeremy's glanced down to see that his fresh cum was all over her lingerie, mixing with Ben's smaller, dried-on contributions. He stared at the soiled garments, finding himself wondering if it really had just been an act or whether Claudia had actually fucked Ben in front of him. Whatever, it had been insanely hot to watch. His gaze settled on a tiny patch of dried cum on her garter belt, proof that wherever the truth lay, it hadn't been entirely an act.\n\nThe realisation thrilled him and set his mind racing: perhaps next time he could persuade Claudia to let Ben cum over her on video?\n\n'~'\n\nChapter Three\n\nClaudia locked her lips to Ben's in a deep, passionate kiss while she finished unbuttoning his shirt. She pushed the shirt down and off his shoulders, allowing her fingers to spread out across his broad chest, revelling in the feel of his muscles beneath her hands. She sensed his shirt falling to the floor and then felt the slight tug as his fingers began to work on the top button of her dress. The growing eroticism of the situation was really starting to get to her -- she struggled to stay in control, to stay in character and not get carried away in the moment, if only to exercise some control over what could be seen on the camera trained on them.\n\nThe first button on her dress must have opened because she felt a similar tug on the second and then the third and fourth as they yielded to Ben's advances in quick succession. While his hands followed through, heading for the last few buttons below her waist, his mouth left hers and began to trail down her neck. She threw her head back to grant him better access, a wide smile of sheer delight on her lips. She knew that her dress was falling away now, granting Ben full access to her nearly naked body. His eyes and hands were roaming freely across her, drinking deeply of her. She could feel his bulge, knew that he wasn't just acting a part. He was genuinely turned on by her and the knowledge of it electrified her with excitement.\n\nWas she playing the part of Chloe anymore or was it her own desire that drove her fingers to tremble with lust and urgency as they tugged eagerly at Mike's belt then, one by one but in quick succession, to undo his fly? Her mind was almost beyond deciding as, with a triumphant grunt, she pushed the heavy fabric of Mike's trousers off of his hips, down his legs, out of sight.\n\nHe was pressing and wrestling against her now. Her gasps of pleasure took on a new quality, a new urgency and a new level of realism as Ben's lips trailed down her neck and across her shoulder, moving unstoppably across the upper curve of her nearly exposed breast. She knew exactly where his mouth was headed. She let out a mewl of pleasure as his mouth found and latched on to her left nipple through the gossamer fabric of her bra.\n\n\"Oh, Ben,\" Claudia breathed in his ear as his mouth returned to her neck, not caring if he heard her use his real name. In seeming response to her encouragement the fingers of Ben's left hand, which had just finished undoing the last button on her dress and was the one furthest away from the camera, tracked up her thigh, past the top of her stocking and across her exposed flesh towards her sex. At the same time his right hand pulled the bra cup down off her nipple in order to tweak and tease her now that his lips were elsewhere.\n\n\"Just a little improvisation. Don't worry, I've got the angles covered,\" he whispered, his teeth nipping at her ear as his fingers began to stroke gently but firmly across her clit through the fabric of her panties.",
        "\"Ben!\" She gasped back, a questioning, begging whimper inaudible to anyone but him.\n\n\"You want it... You're wet to your ankles,\" he whispered back, his finger stealing past the side of the fabric, slipping inside her panties, stealing inside her labia as he pushed further and further past their professional boundaries. Two of his fingers were inside her now, probing deeper, pulling back to find her G-Spot. Should she try to stop him? Did she really want to? Probably not, she decided, or she wouldn't have encouraged him by using his real name, wouldn't have let things go this far.\n\n\"Mike! Yes, Mike!\" she called out more loudly and deliberately, trying to keep up the pretence of acting, her breaths coming in deep, desperate gasps as Ben led her by her G-Spot towards her first climax of the night. The pleasure behind her tone and words was genuine. She could feel her cheeks flushing, betraying her arousal, and knew well enough it was important to at least give the semblance of still being in character for the benefit of the camera, for the benefit of her husband.\n\nHer first climax shook her body. Ben seemed to take the shivers running through her as the signal to move his left hand out from between them, from inside her. She was grateful for the temporary relief from the almost unbearably exquisite sensations, but she hoped he would return soon.\n\nShe was still coming down from her high as he began to trail kisses back down her body pausing, all too briefly, to suckle at her erect and sensitized nipple, before continuing downwards on his way.\n\nHe crouched ever lower, and she felt his hands slipping around her waist to lift her up to sit on the edge of the dresser. His fingers took a gentle hold of her thong and begin to edge it downwards. She knew what he wanted to do: It would serve Jeremy right to watch Ben do it, too. She recalled all the suggestive remarks she had endured, remembered how her husband had deliberately threaded her suspenders through her panties, even when she had reminded him what that implied. He deserved this: she lifted her hands from where they were tousling Ben's hair, lay them palm down on the edge of the dresser and pushed herself an inch aloft.\n\nThat was all the time and help Ben needed to remove the garment. Satisfied that his task was accomplished and in expectation and encouragement of what he might do next she began to recline back on the dresser, watching him as he dropped fully to his knees. His head began to disappear between her thighs, leaving no illusions as to what he intended to do. He was following through with the outline they had agreed for the scene, but neither of them were playing a part anymore. She was pretty sure that, because of the camera angle and the positioning of her legs and Ben's own head, it would be impossible to tell whether Ben was actually eating her out or whether it was all just a simulation. Determined to maintain the appearance that it was all just simulated, for the benefit of the camera, she swung her legs over Ben's shoulders, crossing her stiletto-shod feet behind his back, pulling his face the last inch into her.\n\nHis tongue found her and began bestowing such illicit pleasures she thought for a second that she might black out.\n\nBen lapped relentlessly at her pussy, focussing mostly, but not exclusively, on her clit. Comfortable that the camera could not show the truth of what was happening, confident that she could claim she was simply acting, she gave in to the pleasure that Ben was bestowing on her. She allowed her head to sink back onto the dresser, her long, thick hair fanning out beneath her head. One of Ben's hands slipped beneath her ass, pulling her tightly into his face, while the other was stretched up to her breast, roaming freely about, the fingers alternating between kneading her soft flesh and tweaking her now clearly fully engorged nipple. Her back began to arch in time with the peaks of the orgasmic waves washing over her, while her hand clutched spasmodically at the edge of the dresser top.\n\n\"Yes! Yes!\" she called out as her plaintive gasps and cries of pleasure filled the air and her second orgasm washed over her.\n\nBen slid upwards from between her legs, his hands and nose maintaining contact with her all the way until their lips locked once again. Claudia could taste herself in his kisses, driving her to new heights of wanton lust. She sat up and wrapped her limbs tightly around him, arms round his shoulders, legs around his waist. He stood, lifting her easily and carried her over towards the bed, allowing just enough of her weight to fall on his erect cock that she could feel him pressing against her wet, naked pussy and ass through his tented boxers.\n\n\"This is as far the script goes,\" Claudia told him, recovering a little of her composure as he sat her on the edge of the bed. Ben stood in front of her, his erection at her eye level, proud and obvious and barely contained inside his distorted shorts.\n\n\"So, do we 'cut?\"' Ben smirked. It was obvious to her that he wanted, no, expected more. There was just the small problem of Jeremy and the rehearsal tape. But then, hadn't he taunted her, told her that he wanted to see her and Ben performing certain acts? And she could always edit bits out, if she had second thoughts about him seeing some things.\n\n\"I reckon our audience, our fan...fans would love to know what happens next.\" Claudia suggested, as much to herself and apropos of Jeremy as to Ben as she laid her hands on Ben's thighs. She revelled in the feel of his muscles beneath her fingers as she stroked higher.\n\n\"So, what does happen next?\" She slipped her long fingers beneath his shorts, cupping and stroking the delightfully taught curve of his ass.\n\n\"You know how these scenes always go?\" She laughed nervously, partly trying to make light of what she was about to say, partly because her fingers had now slipped around to the front, still hidden beneath his shorts as she teasingly, fleetingly ghosted her fingers around his equipment. \"She gives him a hand job, then a blowjob and finally fucks his brains out.\" She dared as she revelled in drawing out her first skin-to-skin feel of him.\n\nBen, who was doing a good job of not over-reacting, theatrically looked around the room for a few seconds, as though looking for stage directions and then laughed. Claudia didn't even wait for him to finish before she took a firm hold of the waistband of his boxers and yanked them down.\n\nBen's cock sprung free. Claudia was taken by surprise by the full, free and flying size of it. It was long as well as thick and she was unable to move back quickly enough to prevent the tip of it hitting her face as it sprang up. She licked her lips, her eyes transfixed by the sight of the magnificent specimen bobbing about right in front of her, making her go cross-eyed as she tried to follow its movements.\n\n\"God, Ben, that's quite a package you've got there!\" She chided with a hint of soft laughter. \"You should be more careful, you could have some ones eye out!\"\n\n\"Sorry babe,\" he chuckled. \"Umm, oughtn't we stay in character?\" He winked at her. She knew exactly what he meant by that: less chatting as Claudia and Ben, more hands-on sex as Mike and Chloe. She was in absolute agreement.\n\n\"Hmm, you're right,\" she nodded and gave an earnest frown, her gaze remained locked on the enormous member bobbing and throbbing just inches in front of her nose.\n\n\"So, hand job?\" She wanted to push things, to take Jeremy to task for him saying that he expected to see her touch Ben's cock. Well, if that was what he expected to see then she was more than happy to oblige.\n\nAll of her attention was focussed on the task at hand: She nibbled her bottom lip in concentration as she raised her long, elegant middle finger up until, with feathery softness, it contacted the very tip of his cock.\n\n\"Claude!\" Ben gasped between deep breaths.\n\n\"Stay in character!\" she hissed as a second finger made soft contact. He was absolutely rigid beneath her touch, save a slight, understandable quiver. She really wanted a better feel.\n\n\"Are you sure? Your husband..?\"\n\n\"It's OK. He reckons touching your dick is, and I quote, 'a given'.\" Ben arched an eyebrow at that, but at least he knew it was time to shut up and play.\n\nMore of her fingers and then her thumb came into contact with him. The velvety skin seemed to Claudia to burn like a furnace, and the entire member bucked gratifyingly as her fingertips slowly traced a spiral pattern around the bell. She barely noticed Ben's eyes rolling back in their sockets, although his moans of joy and pleas for mercy as her finger slowly made its way along the length of his organ were loud and clear. Reaching the base, she strummed her fingers on his balls. The way they rolled up tighter and firmer against his perineum in response to her was fascinating: she tarried for a while, caressing them, enjoying feeling them move in response to her, before her fingers made a return journey to his bulbous bell. His tip was starting to weep cum. In one flowing motion she lifted the tiny bead and brought it to her mouth, sucking on the last joint of her finger to the accompaniment of a deep, throaty groan.\n\nHis taste reminded her of salted caramel. She wanted more.\n\nHaving savoured his taste, her other hand reached out to take a slightly firmer hold of him. Jeremy had reckoned Ben's dick would touch other bits of her, too and she was determined to oblige. She pulled his cock into contact with her right boob, the one now only half cupped by her bra. She slowly ran Ben's satiny head around the erect bumps of her aureole, treating her achingly hard nipple to a circular cock massage. She knew she was pushing the envelope, indeed, pushing way beyond the boundaries of what she ought to do, let alone let her husband see, but she was so turned on, and Jeremy had been such an idiot about this whole business. It served him right.\n\n\"Now... blow...\" She intoned in her deepest, huskiest voice, concluding the words by treating him to the sight of her talented tongue pulsating up and down, back and forth inside her now open mouth.\n\n\"Really?\" Ben seemed surprised.\n\n\"We can edit it down,\" She cackled, only half meaning what she said. She leant forwards but, instead of taking him in her mouth, as he had surely expected, she brought her lips as close as she could without touching and began to actually blow. She tilted her head, sending a jet of her warm breath first down one side of his cock, then across the top of the base, then back up the other.\n\n\"Ah, you're killing me here babe!\" Ben groaned in protest.\n\n\"You want more?\"\n\n\"Mmm... more.\"\n\nHow could she refuse? She gently kissed his tip, once then twice, getting another taste of his delicious precum. She slowly and carefully licked him up and down his length. Then she opened her lips and teeth, took him an inch into her mouth and rolled her tongue against him. He shuddered and groaned in a most gratifying way. As a reward for his appreciation, she took him deeper, closing her lips around him and sucking hard.\n\n\"You're amazing!\" he groaned.\n\nIt was amazing, but she wanted other things, too. She backed off so her mouth was clear of him.\n\n\"Yeah, but that's not going in the home movie. It's too much. Lie down so we can act out Chloe sucking Mike off!\" She commanded.\n\n\"Always the professional,\" Ben laughed and rolled into the indicated position on the bed, tugging the quilt around him slightly as he went.\n\nShe leant across him, the shroud of her long, thick raven hair tumbling down around her, providing a curtain through which she knew it would have been difficult to see whether she was actually fellating him or not. But it wasn't enough. The trope in shows like theirs was that everything was covered by sheet, and so she pulled the quilt up to partially obscure Ben's crotch. With the combination of her hair, the sheet and the barrier of her own body all that Jeremy would see would be the suspicious bobbing of her head.\n\nSatisfied that her actions were sufficiently obscured from the cameras' view, she ran her tongue around Ben's tip, cleaning off more of his precum. Then she moved lower, squeezing him with the powerful muscles of her lips. She flicked his tip with her tongue, rolling it against him once, twice, then backed off until her lips were barely touching him. Then she began again. Slowly up and down she went, four or five times, each time going a little lower, until she could take no more of him in, his enormous member pushing at the back of her throat. She tried once more, this time his tip somehow actually popping into the back of her throat. It was fabulous, but it would have to do -- the involuntary urge to gag was just too much, and she didn't want that. Neither did she want him to some in her mouth on film -- it would be just too inconvenient to edit out. Ignoring Ben's groans of slight disappointment, she backed off, rolling back onto her haunches.\n\n\"So, did you enjoy that?\" She grinned down at him running her hands slowly and freely over his taught, muscular abdomen, revelling in the sight and feel of him, of the taste of him still in her mouth.\n\n\"Oh, yeah, you betcha babe.\" He was almost senseless now. Or acting almost senseless.\n\n\"I bet the fans woulda loved it.\"\n\n\"So hot...\"\n\n\"So now we fuck each other's brains out.\" She turned her head to face directly at the camera and winked. \"It's what the audience has been itching to see.\"\n\nClaudia swung her leg across Ben's so that she was sitting across the top of his thighs, the sheet wrapped around them to conceal everything below the tops of her breasts. His cock was also hidden from sight now, but she could feel it as it beat insistently against her belly, breaths and heartbeats causing it to rock and jerk in a slow dance. She angled herself so that the tip kept brushing against the lower curves of her breasts, driving her crazy with the sensation of fleeting, hot touches. She desperately wanted to know what it would feel like to have him inside her, to have him fill her up with his cock and then his cum. But could she do it without Jeremy knowing? What they'd been doing so far was one thing, a thing her husband had actually encouraged, but she felt sure that openly fucking Ben might be crossing a line, an act which would surely lead to unresolvable complications.\n\nThe bedcovers were her allies and she knew it. She'd been an actress long enough to know just how to use the sheets to conceal what was really going on beneath.\n\nClaudia edged further forwards: The feel of Ben's sizeable cock as it pushed back against her clit, was making stars flash before her eyes. The silky, bone-hard organ was being steadily pushed down towards Ben's belly as she shuffled up him. Inch by inch his cock slid beneath her, the shaft pressed heavily between her labia by a combination of her own weight and its own fabulous tumescence. Ben had propped his head on a pillow, his eyes straining to enjoy the sight of her advance up his body. Little whimpers of pleasure escaped from his mouth as finally she decided to pause and began to set up a slow, rhythmic rock with her hips, back and forth across him.\n\nShe was all but lost in their combined pleasure. The delightfully wicked sensations she was garnering from his cock were being complemented by his right hand, which was playing freely with her exposed left nipple, and his left hand, which had slid beneath the covers to massage her still stocking-clad thigh.\n\nShe needed him inside her, her mind addled by endorphins, swept up in the lust of the moment. She leant forwards and upwards, pushing her breasts towards Ben's lips and he eagerly matched her move, straining up to suckle on her. Their movement finally brought her far enough up for the bell of his cock to slip past her clit and nestle between the dripping lips of her labia. Her breaths came in shivering gasps as she realised where they stood, on the edge of the precipice. His cockhead nestled in her entrance but was not yet fully inside her. She felt his hands settle on the tops of her thighs and start to give her a gentle, encouraging push back downwards. She looked deep into his sky blue eyes, bit her bottom lip to stifle the cry that she was sure to come and then lowered her hips back down.\n\nA sudden change in sensation caused Claudia to catch her breath as Ben's bell transitioned from floating around her entrance to entering fully inside her. She could feel her walls wrestling with and protesting against his unfamiliar girth for a second or two and then the feelings were gone, replaced by an unprecedented sense of tight fullness. She revelled in the consummation of her many fantasies about her handsome co-star.\n\nLost in the moment, she grinned down at him and he grinned back. There was only their tiny little world now, him in her, her around him. His hands renewed the pressure on her thighs and she sank slowly back onto him, his length sliding deeper into her, filling her inch by glorious inch. Her unhurried descent down on to him seemed to be everlasting: an unending transit into the deepest of pleasures that she could imagine.\n\nA strange sensation filled her abdomen, like something was pushing stretching her inner length, pushing things aside. She gasped, partly in shock, partly in pleasure, as she realised that Ben must surely now be pushing up into her cervix, extending the repertoire of her sensations.\n\n\"You OK, babe?\" he asked. \"That's not hurting you?\" She angled her body against his until the sensation was all pleasure.\n\n\"Perfect,\" she shook her head, the gesture extending and morphing into a rhythmic circular toss of her long, black hair as the gyrations of her bodies began to build.\n\nBeneath her Ben was rocking in time with her, pushing her pleasures to new heights. She could feel she was close, and she hoped that Ben was too. Everything was just perfect -- she had had great sex before, but she had never had better, never felt better.\n\nShe felt his hands gripping hard against her thighs. A deep long gasp escaped the O of his mouth and his eyes rolled upwards. She could feel his cock twitching and jerking as he came, could feel the geyser of his cum filling her to the brim. It was all she needed to push her over the edge. She arched her back even more, emitting a banshee keening of carnal pleasure as she climaxed.\n\n'~'\n\nBen couldn't recall having an orgasm of such intensity before. And yet he felt a tiny twinge of sadness that his love-making with Claudia was over, at least for a while. There was no way he could accept that they would not have sex again. Indeed, as far as he was concerned the night was still young.\n\nClaudia rolled off of him, pulling him into a spoon against her back. It was a good start.\n\n\"I guess we ought to check out the video, see how we did?\" Ben whispered, allowing her to pull his hand up so that she held it between her breasts, his arm wrapped around her body.\n\n\"Can we give it ten minutes?\" Claudia replied nestling back against him contentedly. \"This is nice, relaxing.\"\n\n\"Sure thing, babe,\" Ben replied, gently stroking her hand.\n\n\"Then we can have another go,\" Ben couldn't quite believe his ears or his luck. She wanted to do it again!? \"That's if you're up to it?\"\n\n\"Ten minutes'll be fine,\" he chuckled. He found her such a turn on that he was sure of it. She snuggled tighter against him even as he pulled her closer. Quiet, comfortable minutes ticked by. Ten, twenty, it didn't matter. They would be making love again soon and that was enough for him.\n\nBen pulled Claudia closer against him, revelling in spooning against her back as they relaxed and recovered.\n\nHe could still barely believe it: Years he'd been dreaming about doing something like this with her, but none of his dreams had even come close to the reality. He buried his face in her thick, black mane and rubbed his nose on the sensitive flesh beneath her ear. She let out a little groan of pleasure, causing his dozing cock to twitch ever so slightly. Maybe it wouldn't take him all of those ten minutes to get going again?",
        "Lifting his head to breath more easily, he took in the sight of her: long lengths of pale, perfect skin, adorned only by the black of her bra and, lower, her suspender belt and stockings. Her hip and buttock were framed perfectly by the belt, its strap and the stocking top. His cock stiffened a little more at the sight of her.\n\n\"You fancy improvising a couple more scenes?\" He asked, his hand switching from simply cupping her boob to stroking and rubbing it, tweaking the nipple back into life. \"Just for us?\"\n\nShe pushed and wiggled her arse back against him in reply. He was already growing quite hard and her actions only mad him more so. \"How come you're..?\" She chuckled, obviously surprised but appreciative of how quickly he was ready for her again.\n\n\"It's all you, babe. Helped along by the wonders of modern science,\" he replied, reaching round her to push his tip against her clit as he rubbed his shaft backwards and forwards across her sex. She was wet through from her juices and his cum, and still revved up from their recent activities: While the feel of him pushing on her clit was fantastic, she was more than ready for him to enter her again.\n\n\"OH! Thank you, geeks everywhere!\" she gasped with pleasure as his tip popped into her entrance and then slid a short length into her. He guessed from how little of him was in her and how she was reacting that he was pushing insistently against her G-spot. That was just fine with him. He loved this angle -- everything about it turned him on.\n\nHe rocked against her, enjoying every moment of their second round of love making. Now it was all for them, and just them. No script, no characters, no rehearsal and no bloody recording for the titillation of anyone else.\n\n\"Over a bit more,\" Claudia asked, rolling slightly onto her front.\n\n\"All fours?\" Ben asked.\n\n\"Hmm.\" She grunted in reply.\n\nHe was happy enough with that. They separated for a moment, just long enough for her to roll onto her knees and present her ass to him. Kneeling himself, taking in the gorgeous site of her ass framed by stockings and suspenders, he positioned his cock between her cheeks, reached around to line himself up with his hand, and guided himself in.\n\nClaudia's groan mixed with his own as they started rocking once again. He looked down at her, delighting in how beautiful she looked: trim ass, long, slim back, her mane of thick black hair, and, to make the view even more erotic, he could just make out her boob swinging back and forth in time to their actions.\n\n\"Yes! Fuck me! Fuck me, Ben!\" She encouraged, pushing back into his thrusts, deepening the pleasure of both of them.\n\nThe connection between them physical and emotional, was electrifying. And now he had taken the edge off with one orgasm, he felt that he could keep this up all night.\n\nHe probably could have, but after a couple of minutes Claudia rolled forwards and off of him. Ben was almost disappointed for a second or two until she rolled onto her back and pulled him down onto and into her.\n\n\"I want you on top for a while,\" she explained. Oh yeah, he could cope with that.\n\nOnce again his cock slid smoothly inside her, despite her tightness around him. But this time they were face to face and able to kiss as well. And kiss they did, as deeply and passionately as they could manage. They'd had plenty of practice kissing on set over the last couple of years, learning what was good, and what was better. What each liked, what each responded to. They were putting that wealth of experience to good use now. And all the while they rocked and rolled against each other.\n\n\"Fuck me Ben, Fuck me senseless!\" she gasped between kisses, her voice hoarse with animal passion. What else could he do but oblige?\n\nIt was all too perfect. Ben knew it couldn't last forever, no matter how much he wished it might. He moved around, changing the angles. First he pushed upwards, making his shaft press firmly against her clit as he thrust in and out, then he lowered his hips between hers, thrusting upwards, deeply into her, striving to push against her G-spot, then slowly edging his way back up, until he was pressing hard against her clit again. His hands and mouth roamed freely all the while, as did hers over him, trying to excite each other in every way they could imagine.\n\nAfter a few more minutes he could feel her gasped breaths and groans building towards yet another noisy climax. As she began to cry out he let himself go for a second time, emptying himself into her once again, pushing and grinding one last time with all his strength and weight, trying to wring every last bit of pleasure out for both of them.\n\nHis energy spent, he rolled forward, slightly to one side, trying not to squash her with his weight.\n\n\"Ben... that was... amazing,\" Claudia purred, stroking his hair. \"Do you think you could..?\"\n\n\"Go again?\" he chuckled.\n\n\"No, roll off me,\" she laughed. \"You've suddenly got heavier.\" She added with a wink.\n\n\"Sure thing babe,\" he obliged, rolling off and round. She turned with him so they were lying on their sides, almost nose to nose. They were still unable to keep their hands off each other, but for now, at least, frantic, forceful fumblings had given way to slow, gentle caresses.\n\n\"We ought to go over the scene again,\" Claudia wiggled her eyebrows and smiled at him. He grinned back, he couldn't help himself. Was he falling in love with her? It was possible. \"When you're ready?\"\n\n\"Maybe not tonight, though,\" he replied. She looked a little sad at that. Did she think they were done? He wasn't done by a long way. \"I want the next few hours to be just about you and me.\" Her smile broadened and she nodded.\n\n\"Sounds wonderful.\"\n\n\"We can rehearse again tomorrow evening. We're through with shooting at about 7, I think.\"\n\n\"So, your dressing room afterwards?\" she suggested.\n\n\"Sure thing babe,\" Ben nodded back, running his fingers up and down her naked arm. \"So long as you don't wear me out tonight.\"\n\nClaudia didn't reply to that, but she did laugh wickedly as she propped herself up a bit as a prelude to leaning down and taking his still half-hard and fully grateful cock gently into her mouth.\n\nThe end "
    ],
    "authorname": "RPF69",
    "tags": [
        "actress",
        "voyeur",
        "cuckold",
        "stockings",
        "lingerie",
        "movie",
        "exhibitionist",
        "actor",
        "television",
        "rehearsal"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/acting-out-their-fantasies"
}