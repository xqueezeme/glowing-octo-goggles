{
    "title": "Miss Callahan Ch. 16-20",
    "pages": [
        "Author's note: We're close to the end! There will be one installment after this one. Thanks for sticking with the story -FFF\n\nChapter 16\n\nMy office feels unusually quiet as I continue to stare at my computer screen, not really reading anything. It's the same thing I've been doing all morning.\n\nIn the past, I've always been able to work through any personal turmoil I'm going through. But with this situation, I can't seem to parse out the personal from the work because it's all intertwined.\n\nIt doesn't help that I got so little sleep last night. By the time I got done finalizing the exploration questions with Jackie and Michelle, it was almost ten o'clock. Once we were done, I felt like I needed to focus before today so I went to my own apartment instead of Lauren's and now I haven't seen her since she left my place on Monday.\n\nShe called me this morning to let me know that Altitude \"leadership\" thinks she should stay home during Olivia's visit. Lauren sounded less than thrilled with the decision, but I honestly can't blame whoever made that final call. If Olivia's visit is just an indirect way of making contact with Lauren, then she shouldn't be here to make it easy for her ex.\n\nI'm also relieved for my own, biased reasons. I don't think I could concentrate on this upcoming meeting if I knew Lauren was around. I'm already nervous enough for it.\n\nI look at the clock on my computer and see that I only have 20 minutes until the meeting starts. Which means Olivia is probably here in the office\u2014 maybe even already in the conference room with Michelle\u2014 and I can feel the nerves in my stomach grow.\n\nI pull out the mirror in my desk for one final look. I'm acutely aware that while I'm about the meet one of Altitude's biggest clients, I'm also about to meet my girlfriend's extremely beautiful ex-wife.\n\nI usually try to dress nice for client meetings, but I can't lie to myself and say I didn't spend a little extra time getting ready this morning. Jackie may be able to see through my pettiness, but Michelle will just assume I'm trying for the sake of the account.\n\nAfter I finish reapplying some of my lipstick, I smooth out the dark blue sleeveless blouse I'm wearing. I paired it with a pencil skirt that has won me more than one pitch and I'm happy to see that at least my appearance looks more put together than my insides feel.\n\n\"Hey,\" I hear as someone say as they knock on my open office door.\n\nJackie is standing there uncertainly. We haven't talked on a personal level since she left my apartment over the weekend. Normally it wouldn't be weird for Jackie to stop by my office, especially before a client meeting, but things still feel awkward. We spent most of yesterday together but Michelle was there the whole time and this is the first time we've been actually alone.\n\n\"Hey,\" I say back tentatively.\n\n\"They're ready for us. Michelle sent me to get you.\"\n\nMy eyes automatically snap back to the clock on my computer to confirm that I wasn't actually late.\n\n\"Apparently, Olivia Ellison wants to start now,\" Jackie adds when she can see the confusion on my face.\n\nA wave of annoyance rolls through me but I will my face not to show it. Olivia Ellison is once again proving that she has an insatiable need to control situations. Beyond what Lauren has told me about her ex, I've already seen it first-hand. Not for the first time, I feel a spark of anger over her presence here. This entire meeting feels like at the worst, some kind of trap, or at best, a complete waste of time.\n\n\"Have you seen her?\" I ask Jackie, not able to stop myself.\n\nJackie gives me a long look for a moment before she shakes her head slightly. It's as if she's having an internal battle on whether or not she can speak to me like a human.\n\n\"But Sarah did,\" she finally says, staring around my office instead of looking into my eyes. \"And you can imagine what she said,\" she adds, but her voice sounds guarded and doesn't hold her usual humor.\n\nI'm sure I can guess what Sarah said, knowing Sarah. But I can't help myself but ask anyway.\n\n\"What did Sarah say?\"\n\nJackie leans against my doorway and looks down the hall before turning her head back into my office.\n\n\"That she was the hottest woman she'd ever seen.\"\n\nThis time I know I can't hide my extreme annoyance so I busy myself by putting the mirror back into my desk drawer. When I look up, Jackie's eyes are on me. I wouldn't say her expression is warm, but she does look softer than she has in recent days.\n\n\"Ready?\" she asks.\n\n\"No. But let's go,\" I reply and move around my desk so we can head to the conference room.\n\nI leave my phone on my desk because I'm paranoid that somehow Olivia will see Lauren's name on it. But as I walk slowly behind Jackie, I can't help but think about her and what she might be doing right now.\n\nI've felt a sort of tension from Lauren ever since Olivia sent that text over the weekend. Once Lauren found out about the exploratory meeting in the office, her mood didn't improve. We both know there has to be more to Olivia being here beyond giving Altitude some account insights.\n\nAfter making some calls yesterday, Michelle is pretty convinced Ellison isn't giving any of the other agencies the same courtesy. Though, given the fact that we're only two weeks out from the pitch itself, this meeting feels more like Olivia trying to create chaos in our process than help us.\n\nIt's simply impossible to know what her ultimate motive is. It seems odd to me that she has come all the way to Seattle and hasn't tried to reach out to Lauren again. But so far, that one text was the extent of her communication to Lauren.\n\nI'm in my head by the time we reach the conference room and I almost walk past it until I see that Jackie has stopped.\n\nWhen I walk the couple steps back to the door, Jackie's brow is furrowed as she looks at me. Just like in my office she looks like she wants to say something but instead she just turns to the door and opens it.\n\nI take one last deep breath to calm the nerves jumping around my stomach. This is just a client meeting, I remind myself. Olivia Ellison is just another prospect.\n\nBut as I enter the room, that small reminder dissolves as I come face to face with a beautiful, dark haired woman sitting at the head of the conference room table.\n\n\"Emma King and Jacqueline Silva, I presume,\" she says in a low, authoritative voice. \"Michelle here claims you're the stars of this show.\" A pair of dark green eyes roam up my body before coming up to stare piercingly into my own.\n\n\"Let's see then, shall we?\"\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nPart of the reason I'm on the development team is that I've always been confident in front of clients and prospects. Presenting, speaking in front of groups, or just connecting with clients one on one has always been a strength of mine. But as I stand there stupidly staring at Olivia, that's not obvious to anyone.\n\n\"I'm not one to ever correct Michelle, so I'll take the compliment,\" Jackie says smoothly, moving over to where Olivia and another woman are sitting so she can shake their hands.\n\nEven though Jackie and I aren't in a good place right now, I'm still appreciative of her typical confidence because in that moment I feel unusually paralyzed. Talking about and planning for Olivia Ellison was one thing\u2014 suddenly seeing her right in front of me is an entirely different matter.\n\n\"I'm the Silva part of the equation, but you can call me Jackie. Only my mom calls me Jaqueline,\" Jackie says as she shakes Olivia's hand.\n\n\"Olivia Ellison. And this is Madeline Rosario,\" Olivia says as Jackie moves over to shake the hand of the other woman sitting at the table.\n\n\"But you can call me Maddie,\" the woman replies with a smile. \"Only Olivia calls me Madeline.\"\n\nI see Jackie return Maddie's smile before taking the seat next to Michelle. And it's only then that I realize I've just been standing near the door, watching Jackie act like a normal human while I just stare at them. If Michelle told Olivia I was some kind of \"star,\" I certainly wasn't proving it yet.\n\nIt's not until I can feel all the eyes in the room on me that I'm able to kick myself into gear and repeat Jackie's motions.\n\n\"Emma King,\" I say as I walk over to Olivia's side of the table and extend my hand to her.\n\nUnlike the way she stayed seated when Jackie introduced herself, Olivia stands when I reach her. She doesn't say anything as she takes my outstretched hand, but I can feel her eyes roam up my body again and I can't tell if she's checking me out, assessing me, or just trying to intimidate me.\n\nOlivia looks exactly like the pictures I've seen of her, but maybe even more beautiful and I understand Sarah's sentiment. But unlike the softness that is always simmering right under the surface of Lauren's domineering persona, Olivia seems strangely cold and detached. When her eyes reach mine again, there is no genuine warmth there, even though she has a small smile on her face.\n\nNeeding to break the intense moment, I turn to Maddy so I can shake her hand as well.\n\n\"Nice to meet you, Emma,\" Maddy says to me and her smile feels much more sincere than the one Olivia is still directing towards me.\n\nI take the chair next to Maddy so I'm across the table from Michelle and Jackie. Olivia continues to stand at the head of the table, and as I sit down, I'm able to get a better view of the woman.\n\nThe dark green dress she's wearing matches her eyes almost perfectly and despite my less than friendly feelings towards her, I also can't help but notice how uniquely green they are. Unlike Lauren's own green eyes, which are light, Olivia's take on a much deeper hue and remind me of the evergreen forests surrounding Seattle. I can't help but wonder cynically if Olivia and Lauren used to sit around comparing whose version of green is prettier.\n\nThe gold buttons of her silk dress and branded designer belt only enhance how sophisticated, and quite frankly, rich the woman looks. With her impossibly black hair, fair skin and high cheekbones, I once again think that Olivia Ellison looks like a runway model.\n\nIt's been so long since I've felt this kind of burning sensation in my stomach that for a moment, I don't realize it's jealousy. In any normal circumstance, I would look at someone like Olivia and probably feel a sense of desire. But looking at her now only reminds me that she was married to my girlfriend.\n\nOlivia's voice jars me out of my distracted thoughts and when I bring my eyes back up to hers from their journey down her body, I can tell she noticed. But based on the smile that seems to grow slowly on her face, mixed with the slight look of surprise, she doesn't seem to mind the attention.\n\n\"I'd like to say a few things before we get started,\" she says, still standing at the head of the table.\n\nI finally tear my eyes away from Olivia to look across the table at Michelle and Jackie. Michelle seems more tense than I've ever seen her, and I can't help but wonder how much interaction she's already had with Olivia since the CEO and Maddy arrived at Altitude. The smile on her face seems tight and I'm curious if she also feels a sense of annoyance at Olivia's presence. After all, Olivia has already made it very clear who is running this meeting and it's not Michelle.\n\n\"Thank you for having us here today,\" Olivia continues. \"As you know, my father is stepping aside, effective at the end of this month, and I am taking over as CEO for all Ellison family subsidiaries. Ellison and Altitude have shared a long history together and my first order of business is not to change that relationship. But as you also know, we are launching something special. Something revolutionary. Something cutting-edge and new. And I need that kind of thinking from my agency partner. That's what I'll be looking for when making my choice. My father is a traditional man and he's led our company well by being a steady and consistent leader. But I should warn you now that I'm not my father.\"\n\nOlivia stops talking for a moment so she can take her seat, but even when she's sitting, she's still an imposing figure with her long legs crossed in front of her like she owns the room. I look over to Michelle to see if she's going to speak, but her face only shows slight concern.\n\n\"I'm here to be a resource for you so you can be successful in two weeks when we return,\" Olivia continues. \"An offer I'm not giving the other agencies. I hope you will take full advantage of my presence here.\"\n\nHer eyes land on me when she ends the sentence and their intensity makes my entire body want to fidget. I do everything I can to keep a level gaze with her and not look over at Jackie or Michelle, who I'm sure are attempting to process Olivia's opening statement in the same way I am.\n\nOlivia is obviously trying to make this visit seem like an advantage for Altitude. Something we should be grateful for. But Olivia's speech sounded rehearsed and didn't hold a lot of real emotion. The sincerity of her visit just doesn't seem to fit with the cold, appraising woman that's in this room.\n\n\"Thank you, Olivia,\" Michelle finally says but her voice isn't the strong, commanding one I'm used to hearing from her. Though to be fair, I wouldn't want to follow Olivia's grandstanding either. \"As you said, our two companies have enjoyed a long and successful relationship. I know you're used to working with our Austin team, but I'm certain you will also be impressed with the Seattle office's level of experience and success in the technology space. It's not every day that a new launch comes around that is this exciting and groundbreaking and I know I speak for all three of us, plus Altitude's leadership, when I say that we are more than capable to handle the job and passionate about the opportunity to lead in such a groundbreaking space.\"\n\nAs Michelle speaks, Olivia finally removes her eyes from mine and turns her attention to the other side of the table, but it really wasn't until Michelle was a sentence or two in that it happened. Olivia's focus on me is unnerving and more than confusing. Could she somehow know about my relationship with Lauren? Or is this just how Olivia acts in meetings? It's hard to know without having experience with her, but she's definitely not giving Jackie the same kind of scrutiny.\n\n\"Let's not speak for the group, Michelle,\" Olivia replies with a smile that doesn't quite reach her assessing eyes. \"But you're right, I am used to working with the Austin office. So please\u2014\" she motions with her hand to me and then to Jackie, \"\u2014tell me about yourselves and what role you play at Altitude. But first, Madeline, why don't you start?\"\n\nOlivia is such an overpowering presence that I almost forgot Maddy was sitting there as well. In any other scenario, I'm sure I'd be appreciating how pretty she is in her own right. It's not every day that two beautiful women come in for a client meeting. Most senior level people in the tech industry are unattractive white men.\n\nBut now that I'm looking at Maddy more closely, I notice just how pretty she is. Her outfit doesn't immediately scream money in the same kind of way that Olivia's does, but her white blouse is flattering against her beautiful brown skin and her eyes remind me of the color of honey. She gives Olivia a quick nod before turning her attention back to us.\n\n\"Thanks, Olivia. And thanks for having us here. I know it's not always easy moving meetings around last minute,\" Maddy says.\n\nHer tone is already less combative than Olivia's and as she looks at us, she seems to be genuine in her sentiment. But I also remember what Lauren told me about Maddy and how loyal she is to Olivia. It could be that they just do a good job playing good cop/bad cop. Or maybe the Lauren of all it all is making my head feel like a fun house and I'm reading way too much into things.\n\nI realize I'm not listening to anything she says as I continue to over-analyze the situation so I force myself to focus back in on what she's saying.\n\n\"\u2014and I was in-house at an Austin company that became a client of Olivia's consultancy firm. After two years of being on the client side, an opportunity came up within her company. We've worked together ever since and when Olivia asked me to join her team at Ellison, I jumped on the opportunity,\" Maddy says. \"While Olivia will be heavily involved in this launch, I will be the primary point of contact for the agency who wins the business.\"\n\nAs she's talking, my eyes slide back over to Olivia and it's then that I notice she's staring at me. I quickly glance over at Michelle and Jackie, but their eyes are trained on Maddy, who's now talking about her role at Ellison. When I look back to Olivia, she has a slight smirk on her face that looks more cocky than charming.\n\n\"Thank you, Madeline,\" Olivia says, finally breaking eye contact with me to look back over at her colleague. She then turns her attention back to the three of us. \"Madeline should be trusted through this process as if she were me. Any direction from her, can be considered direction from me.\"\n\nThis whole meeting is feeling more tense by the minute and as I look up at the clock behind the conference table, I can see that we've already wasted ten minutes of our hour-long meeting on Ellison talking at us, but not really telling us anything useful. And we still need to get through our own requested introductions. At this point, we'll probably only get to ask three of our exploratory questions.\n\n\"Thank you for that background,\" Michelle chimes in next. \"I can start from our end\u2014\"\n\n\"Actually, Michelle,\" Olivia says, cutting Michelle off. \"Since we spent some time together this morning, I'd like to hear from Jacqueline and Emma.\"\n\nIf this were any other situation, I would have laughed at the comically wide eyes on Jackie's face, but luckily, I was able to hold that in and Jackie was able to school her features quickly. Michelle's smile tightens even more and it's as if I can feel the tension rolling off her and over to my side of the table. Michelle has always been a strong leader and she's great with clients, but I'm not sure even in all of Michelle's years of working in the agency world, has she come across someone like Olivia Ellison.\n\nOlivia is giving Michelle an unreadable expression, but it almost looks as if she's waiting for Michelle to challenge her. But when Michelle simply looks over at Jackie to begin, Olivia's gaze follows.\n\n\"As I said before, I'm Jackie Silva. I've been with Altitude for seven years. I started working here on the client services team as a graphic designer, but through my time here, I have transitioned into a creative lead on the design team. My team manages and leads all creative ideation, creation and execution for any new business effort.\"\n\n\"Thank you, Jaqueline. As I understand it, most of your experience at Altitude sits within the gaming industry, is that correct?\"\n\nJackie just stares at Olivia for a moment before answering and I'm sure she's trying to work through what Olivia just asked. It's true that when Jackie was on the client services side of things, her two largest accounts were both in the gaming industry, but she's worked on the development team for four years now and it's not clear how Olivia's comment is relevant to anything.\n\n\"Um, yes. That's correct,\" Jackie says, glancing at Michelle as she does. \"But I've led creative strategies for many different verticals.\"\n\nShe sounds both a mix of uncertain and defensive and it feels as if we're suddenly in the Q&amp;A portion of a pitch when we're the ones who are supposed to be asking the questions of Ellison.\n\nOlivia gives Jackie one of her long, intense looks before nodding and bringing her eyes to rest on me again. She quirks her eyebrow and I have to assume that's her way of asking me to begin.",
        "\"I'm Emma King,\" I start to say before Olivia chimes in.\n\n\"Is Emma short for anything?\" she asks.\n\nI'm grateful my parents went for something so basic because Olivia seems to enjoy overriding nicknames. I've literally never heard anyone call Jackie, \"Jaqueline,\" until this meeting and I can just imagine Olivia trying to call me \"Emily\" or \"Emmaline\" or something.\n\n\"No, it's just Emma. Is Olivia short for anything?\"\n\nThe words leave my mouth before I can stop them and for a moment, the room is silent as Olivia continues to look at me. I don't dare glance over at Michelle or Jackie knowing they're probably as shocked by my question as I am. But Olivia's complete dominance of this meeting is starting to get to me.\n\n\"And what would Olivia be short for?\" she asks back, now with a slight smirk on her face.\n\nI shrug. \"I'm not sure. Olivier?\"\n\nNow she's giving me a full smile and this is the first time I've been able to see her perfect, white teeth. The smile doesn't do anything to soften her features, but at least she doesn't seem to be offended by my question.\n\n\"It's just Olivia.\"\n\n\"Right,\" I say and finally look over at Michelle. When I can see her eyes boring into me, I know I need to move things along. \"I'm a Vice President of Development here. I've been at the agency for two years and before that I worked for The Adams Group in New York City, leading digital strategy. My background is mainly rooted in the technology space and before landing in development, I worked across both client services and analytics.\"\n\nFor the first time since Jackie opened the door to the conference room, I feel confident. I've given that introduction hundreds of times before and I know that for my age, my career trajectory has been impressive. Olivia is no longer smiling but giving me a thoughtful look as I finish.\n\n\"Craig Adams told me you were the one who got away. What made you decide to leave The Adams Group and start at Altitude?\"\n\nMy stomach drops as soon as she says Craig's name and I'm guessing this is what Jackie felt like when Olivia asked about her past accounts. But this feels even more personal than just some insight into my past work. It's clear Olivia is trying to showcase that she's done her homework on us. This production of making introductions is simply that\u2014 a production. Olivia knew exactly who we were when she came into this room.\n\n\"Craig?\" I ask tentatively.\n\n\"He's an old family friend,\" Olivia says but doesn't elaborate or give me any other information as to why I would have come up in a conversation with my ex-boss, who lives across the country in New York.\n\nEvery muscle in my face is going into not letting her see how confused and shocked I am by her revelation. Somehow this feels like a game and I don't want Olivia to win each round.\n\n\"I wanted to move closer to home. And while I will always be appreciative of my start at The Adams Group, I also wanted to join a company that was more advanced in their integrated media effort,\" I say.\n\n\"Meaning?\" she asks, leaning forward and for the first time, I feel like I have her genuine attention.\n\n\"The Adams Group has found success in the traditional PR space. In fact, I think some of their leadership still use rolodexes to call their media contacts. But I'm much more interested in the cross section of PR and marketing. Reaching new audiences with new channels. Altitude leads the country in integrated media campaigns and I wanted to be a part of that,\" I explain before giving her a polite smile. \"But please do say hello to Craig for me.\"\n\nI'm aware that we're not in a pitch so perhaps I should have saved my little monologue for later. But this meeting is clearly something other than an exploratory meeting and it's felt like we've been barreling towards failure from the start. It can't hurt to showcase why Ellison should be choosing us while we have their attention.\n\n\"I can see why he likes you,\" she responds with her own smile.\n\nWhen I glance across the table, both Jackie and Michelle look like they're holding their breath as they look between Olivia and me.\n\n\"We have thirty minutes left before the two of us need to be on a call, so I think we should start with your questions,\" Maddie says.\n\nI feel an automatic sense of defensiveness considering it's not our fault we're so behind schedule. But I hold my tongue because mentioning that, or the fact that they came into town and only gave us an hour of their time, probably won't win us any favors with Olivia.\n\n\"Yes, thank you Madeline,\" Olivia says and she doesn't seem upset with Maddy directing things. \"Anyway, I have a good sense for the team now. The boss and the artist\" she says as she points to Michelle and Jackie on one side of the table. \"And\u2014\" she pauses as she looks at me with another thoughtful expression. \"\u2014the mouth,\" she finishes.\n\nThe intense eye contact we're currently sharing almost mirrors the first few times I ever sat in a room with Lauren. But I feel no desire for this woman and the way she says mouth isn't sexy, it's just uncomfortable.\n\n\"Emma, why don't you start us off?\" Michelle asks in a rushed tone, and it's clear she's trying to veer things into a more professional arena.\n\n\"Great,\" I say, finally pulling the list of questions we have for Ellison in front of me so I can look down at it and refocus my attention on the reason we're here.\n\nGiven the time we have left, I know we won't get through all of them so I mentally prioritize where we should focus with what time we have.\n\n\"The proposal you sent our team calls out the fact that you're looking for an integrated campaign. How much of the budget do you expect to be utilized for PR versus digital channels?\"\n\n\"We want your presentation to focus on where you think those dollars should land. But I will say, we are looking for a healthy mix of media. We'll expect the traditional approach to securing stories in tier one media outlets, mixed with digital strategy. It will be up to you to advise us on that exact breakdown,\" Maddy says easily.\n\nAs I continue to go through questions, Maddy begins to systematically answer them while Olivia sits back and eventually begins to scroll through her phone. Her eyes connect with mine every now and then and I get the sense that even though she's letting Maddy drive the conversation and seems distracted, she's still very much paying attention.\n\nWhen I finish with some of the more tactical questions, Jackie jumps in with the questions we prepared on creative direction. And just like in any other development meeting, Michelle, Jackie and I move around each other smoothly\u2014 with each of us chiming in when necessary to add color or specifics. But what should feel like any other development meeting, still feels strained with Olivia's larger than life presence.\n\n\"We only have about five minutes left. Emma, any other pertinent questions?\" Michelle asks me and I can't help but think she wants this meeting to end even though we've really only scratched the surface of our outlined questions.\n\n\"Just one. As we head into our presentation for you in a couple of weeks, I'd like to end today with a question on measurement. What does success look like for you at the end of the campaign?\"\n\nMaddy looks over to Olivia who's looking at me with a steady gaze. Like earlier, she seems to be thinking before she speaks and the room stays silent as we wait for her.\n\n\"I would say success means that this isn't a 'campaign' at all as you put it,\" she says and each word that she speaks is slow and deliberate. \"I want Ellison Tech and green tech to be synonymous with each other. I want to be seen as the future of cloud computing. Whatever strategy we decide on, it needs to be one that ultimately solidifies us as a thought leader. As the leader for sustainable technology. And it needs to have longevity far past the ask of the proposal.\"\n\nI had a feeling when I asked the question that they wouldn't give me anything quantitative to work with so I shouldn't be surprised by her vague and romantic answer. But it still gives us some indication as to the narrative they'll want to hear in the room. I simply nod once she finishes and look back to Michelle.\n\n\"I know you two have a call, so we should wrap up,\" Michelle says and her tone doesn't hold any of its usual fake charm she puts on for clients. It's only been an hour but the woman sounds exhausted.\n\nOlivia is the first to get up from her chair and despite my annoyance with her, I also notice how graceful she is with her long limbs. Jackie and I both stand up next, and it almost looks choreographed\u2014 as if we only stood up once our queen was standing.\n\n\"I'm sorry we have to rush out of here,\" Maddy says. \"But it was nice to meet you and I look forward to seeing you again in a couple of weeks.\"\n\nOlivia stays where she is at the head of the table and I'm not sure if I should go over to her to shake her hand or if one shake was enough for her. But the agency training in me pushes my legs forward and I walk the few steps to the head of the table so I can shake her hand.\n\n\"Very nice to meet you, Olivia,\" I say.\n\n\"It was nice to meet all of you,\" Olivia says, turning to give Jackie and Michelle a polite smile before bringing her gaze back to me. \"I'll be seeing you again. Very soon.\"\n\nI give her one nod before turning and heading to the door. I don't even bother to look at Michelle and Jackie as I leave, knowing we'll have our own debrief once Olivia and Maddy are gone. But right now, I have to get out of this conference room.\n\nAs I head down the hall and back to my office, I'm finally able to take the breath I felt like I was holding for that entire meeting. I don't even make it back to my office before I need to lean on the wall, close my eyes, and just breathe.\n\nThat meeting could have gone worse I suppose, but it also could have gone better. And now I'm more confused than ever as to what Olivia's motive is for being here. Because that meeting was clearly useless as an actual exploratory meeting. I'll have to go through my notes to really determine if we learned anything.\n\nMore than anything, I think what I learned has nothing to do with the account itself and everything to do with the woman behind the account. Because if there's one thing I learned in the last hour, it's that Olivia Ellison is determined to control everything about this and based on Michelle's lack of backbone in the meeting, Altitude is prepared to give her what she wants.\n\nBefore anyone sees me leaning against the wall and asks me what's wrong, I shake myself out of my moment and head towards my office.\n\nAs I get back to my desk, I look at my cell that I had left there and see that there's a text from Lauren.\n\nLauren: Thinking of you.\n\nAnd I instantly remember that there is a stark difference between the commanding woman I just left in the conference room and the one who just texted me. Sure, Lauren may control me in our more erotic moments, but that control is given freely by me. I won't be granting Olivia that same control, despite her best efforts.\n\nChapter 17\n\nI don't even have time to respond to Lauren's text when I hear a knock on my door and Michelle and Jackie are coming in.\n\nThey're both quiet as they take the chairs across from my desk and Michelle just gives me a serious look for a moment.\n\n\"Well, that was different,\" she finally says.\n\n\"That's one word for it,\" Jackie replies with a short laugh. \"Olivia Ellison is an asshole.\"\n\nFor the first time all day, I feel a smile creep up on my face at Jackie's words, even though I know she wasn't trying to specifically make me laugh like she used to. But it's a relief to hear someone else say the exact thing I've been thinking since leaving the meeting.\n\n\"That asshole is still in the office and may be for a few more hours, so let's hold that kind of talk until tomorrow,\" Michelle says, but her voice doesn't hold much actual chiding.\n\n\"So, you agree with me then,\" Jackie says and it's not a question.\n\n\"She's a challenge, I'll say that. This seemed to be more about her scoping us out than a meeting meant to give us a real edge,\" Michelle responds.\n\n\"Or she was just trying to catch a peak of her ex-wife.\"\n\n\"Jackie, stop,\" Michelle says and now she does sound stern. Jackie simply puts her hands up to indicate that she was done. \"There's nothing we can do about that. We just need to figure out what we learned. Emma, you're quiet. Any thoughts?\"\n\nFrankly, I agree with Jackie's assessment, but ultimately, I know that Michelle is also right and there's nothing we can do about any motives Olivia has outside of the pitch itself. We have to focus on what we can control.\n\n\"I agree with Jackie. I'm not sure we learned a lot of tactical information. I think the biggest learning is that beyond Olivia, we need to impress Maddy. She seems rational, but I also have to assume she's fully in Olivia's corner.\"\n\n\"Agreed,\" Michelle says. \"And I think we learned something about the larger company narrative Olivia will want to see.\"\n\n\"So, does this really change anything about our campaign ideas?\" Jackie asks.\n\n\"No. We continue with what we have. I think we just need to think bigger and focus more on thought leadership. Make sure it's clear how our ideas will catapult them as a leader in the sustainability space for years to come. We should work with Sarah on a measurement plan for that,\" I say.\n\n\"Great. Now we should break until tomorrow. Continue working on the presentation obviously, but from your private offices and not from Anchor. I don't know how long Olivia and Maddy will be in the office,\" Michelle says and stands up from the chair.\n\n\"I'll set-up a touch base for us tomorrow morning so we can see where we stand on everything. Once we finalize the campaign ideas, Jackie's team can start on the presentation itself,\" I say.\n\n\"Should be fun,\" Jackie deadpans as she too stands up.\n\n\"Speak tomorrow, then,\" Michelle says and leaves the office.\n\nJackie follows her to the door, but when she gets there, she turns around to me with an unreadable expression. I'm ready for another admonishment from her since that seems to be the only way we engage anymore, but then I see her lips curl into a faint smile.\n\n\"Olivier?\" she asks.\n\nShe doesn't wait for my reply, but just shakes her head slightly and leaves the room, closing the door behind her.\n\nI pick up my phone ready to finally text Lauren when I hear another knock on my door. I'd love for just one moment to decompress from that meeting, but apparently, my team has other ideas.\n\n\"Come in,\" I call out and I'm not able to hide the slight annoyance from my voice.\n\nSuddenly, Olivia is in my doorway and it's only now that she's standing there, that I notice just how tall she is. It adds to her overall imposing appearance.\n\n\"Bad time?\" she asks with a smile that implies she doesn't care if it's a bad time or not.\n\n\"No, it's fine,\" I say with my own smile, hoping it covers the lie. \"Did you need me for something?\"\n\nAt that, Olivia's smile widens even more. \"Oh, I think so. We head back to Austin early tomorrow morning. But I'd like to invite you to have a drink with me after work.\"\n\nWhen I don't say anything and just continue to stare at her from my desk, she takes a step into the office and closes the door behind her.\n\n\"I think people call it Happy Hour,\" she adds.\n\nI know my face isn't hiding the surprise I feel at her question and I have to force myself to make my lips actually move.\n\n\"Thank you. But, no.\"\n\nI internally cringe at my blunt response. I know it's not that unusual for a long-standing client to get drinks or dinner with their agency partner. But doing it during a pitch process, when there is business to be won, is highly unusual. Plus, the way Olivia is looking at me now makes me think her request is not completely professional in nature. But I could have been smoother in my rejection.\n\n\"I don't think I've ever gotten a 'no' that quick,\" she replies, but doesn't seem deterred as she takes another step closer to my desk.\n\n\"Sorry, I just have dinner plans.\"\n\n\"Good thing this would be before dinner.\"\n\nI can tell that she won't take rejection without a fight so I decide to just be honest with her. Or at least as honest as I can be without telling her I don't feel comfortable being alone with my girlfriend's ex-wife.\n\n\"It also just feels a little inappropriate to get drinks alone together. It feels like a date,\" I say and I can feel my stomach flutter as I say it, but I'm also reminded of my earlier resolution not to let Olivia control me.\n\n\"I assure you, Emma, if I was interested, you'd know for sure if it was a date or not. I recognize we didn't get through all of your questions. I'm giving you the opportunity to do that. Besides, Madeline will also be there. And she's inviting Jacqueline. We'll meet at the bar in my hotel at 4. I'm sure Michelle won't mind you leaving early for a client meeting.\"\n\nHer use of the word client is intentional. I know Olivia has enough experience in the agency world to know that I can't just say no to her request. Not with the account on the line.\n\nEvery interaction we've had, even before she came to Seattle, has proven that Olivia is used to getting her way. This is even more apparent when she turns to the door of my office and opens it to leave, indicating that the decision has been made, despite how I feel about it.\n\n\"I look forward to seeing you there,\" she says. Before she's out of the doorway, she turns back to me. \"I'll even let Altitude pay. Just so you don't confuse this with a date.\" She gives me a quick wink and then is gone.\n\nOnce she's gone, I lay my head back on my chair so I can take a deep breath and think about what I just agreed to. Not like I really agreed to it\u2014 more like I was told. The last thing I want to do is spend part of my evening with Olivia, but I doubt I can get out of this. I'll have to let Michelle know this is happening, but first, there's someone else I need to tell.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\n\"I've paced my entire apartment about 300 times. Finally,\" Lauren says as she answers my call. Her voice sounds as strained as it did this morning when I spoke with her.\n\n\"I'm sure you have. Luckily the meeting is over so you can give your hardwood floor a break.\"\n\n\"And?\"\n\nI sigh into the phone before I answer. \"Your ex is a trip. She started the meeting twenty minutes early and acted like we were late. We took half the time on introductions where she went on to tell us about our own experience that she had researched already, and then we got through only a quarter of our questions. So, all in all, a real success,\" I finish in a sarcastic tone.\n\n\"I should have warned you that she'd try to start the meeting early. She always does that. And I wish I could say any of that surprised me.\"\n\n\"I wouldn't say I'm surprised either,\" I reply.\n\n\"Did she mention me at all?\" she asks next in a much quieter voice.\n\n\"Not once. She's trying to make it seem that she's very much here to give Altitude an advantage.\"\n\nI can hear Lauren snort into the phone at that. \"And she couldn't do that via phone from Austin?\" she asks but it's clear it's a rhetorical question. \"Olivia never just helps anyone.\"\n\n\"Well, the day is young so who knows what else she'll throw at us.\"\n\n\"I thought the meeting was done?\"\n\n\"She's asked me to get drinks with her right after work.\"\n\nThere's a long pause before I hear her voice again. \"Drinks?\"\n\n\"She just stopped by my office and said she knew we had more questions to get through so she's giving us more time tonight.\"\n\n\"She's being manipulative.\"\n\n\"I know that. But there's not much I can do about going. She's a client. Should I have said no?\"\n\n\"Is Michelle going?\" she asks, ignoring my question.\n\n\"No. It sounds like just Jackie and Maddy.\"",
        "\"Oh, so it's a double date,\" Lauren says back in a biting tone that sets me on edge. This day has been exhausting enough without Lauren making it worse.\n\n\"It's not and you know it. But need I remind you why I'm even in this situation to begin with?\" I ask her in my own short tone.\n\nI don't want to be fighting with Lauren. Before I called her, all I wanted was to leave here so I could go kiss her and be held by her. But the tone of this call is anything but comforting.\n\nThere's another long pause before Lauren speaks again. \"You're right. I'm sorry. I know you're just doing your job,\" she says quietly and I can't help but think she sounds defeated.\n\n\"I'd still like to see you tonight,\" I say in a much softer tone.\n\n\"I'd like that to. I can order us a later dinner if you text me when you're coming over.\"\n\n\"It won't be late. I'm only staying an hour.\"\n\n\"Where is the drinks meeting?\"\n\n\"Her hotel bar.\"\n\nShe lets out another short, humorless laugh. \"Of course. And now I get it. She's going to try to sleep with you.\"\n\n\"Does she try to sleep with all her agency partners? Is that her thing? Invite them back to the hotel bar for a meeting and a fuck?\"\n\n\"No. At least I don't think so. She's more subtle than that. But I know her type. And I've seen you. She'll try. Guarantee it.\"\n\n\"So, she can try.\"\n\n\"Not many women have the power to say no to Olivia when she's on the hunt. Believe me, I know.\"\n\n\"I think you need to give me more credit than that, Lauren. She can do whatever she wants, it doesn't mean I'm going to sleep with her. Is that really what you think of me?\"\n\nI can't stop the anger from seeping into my tone again. Deep down I know Lauren doesn't actually think I'd sleep with Olivia, but even the subtle implication is setting me off. I am only in this situation because of Lauren and it's entirely unfair for her to pull the jealous act when it's her ex-wife I'm having to see.\n\n\"Of course not, Ems. It's what I think of her.\"\n\n\"It doesn't matter if the meeting is in her hotel bar or on the bed itself, she won't succeed in seducing me or whatever you're implying.\"\n\n\"Ems, just\u2014\"\n\n\"Trust me, please. Lauren, you need to trust me.\"\n\n\"I do trust you. And I can't wait to see you. I'm sorry. She just gets in my head. It's been a rough morning just sitting here wondering what she's doing over there.\"\n\nHer voice is so small that any anger I felt, melts away pretty immediately.\n\n\"Which I'm sure is her goal of being here. But you don't need to worry. Maybe worry about the account,\" I say with a laugh, trying to infuse some levity into the conversation. \"But not about me. I'll be over later. I'll text you when I'm on my way,\" I say softly.\n\n\"Thank you for being so wonderful all the time. I'll see you soon, baby,\" she says right before we hang up.\n\nThe knot in my stomach that has been slowly growing since this morning tightens as I put the phone back down on my desk. I meant what I said and that Lauren doesn't need to worry about any attraction I might have towards Olivia. But I also know that some of Lauren's fears are justified based on the way Olivia has acted with me so far.\n\nI glance at my clock and note that I have three hours before we need to meet at the hotel. I turn to my computer and open up the browser\u2014 three hours is plenty of time to do my own research on Olivia and Maddy.\n\nI may have done a preliminary look when I first found out about her, but now that I know she's done her due diligence on me, I figure it's only right to repay the courtesy. I'm not going into this happy hour as unprepared as I was this morning.\n\nChapter 18\n\n\"I'll have a glass of champagne. We're waiting for two more people to get here, but they should be here any moment. So please also bring out a glass of the pinot noir and an old fashioned,\" I say to the server who came by to take our drink orders.\n\n\"How do you know what they order?\" Jackie asks me once the server has left our table.\n\nJackie and I came separately to the hotel bar from the office, but we're both on time while Olivia and Maddy aren't anywhere to be seen. Michelle told me they were still holed up in a conference room when I left so I knew I'd beat them here.\n\n\"I did a fair amount of research on the two of them after our meeting. Their drink preferences were pretty easy to find,\" I reply. I don't mention that I almost asked Lauren for the information until I decided that wouldn't help her already rising anxiety.\n\nIf I wasn't so distracted about Olivia and Maddy's impending arrival, I may have thought sitting here with Jackie was awkward, but right now I'm so focused on looking out for the two of them that sitting here with her almost feels normal. It also doesn't help that we're in The Four Seasons and all I can do is remember my first time getting a drink with Lauren here. Luckily, we're at a different table or I'd start thinking about hidden underwear in hotel bathrooms more than I already am.\n\n\"Trying to even the playing field?\" Jackie asks.\n\n\"She talked to my ex-boss about me. I think I have a right to do a bit of my own digging.\"\n\n\"I'm surprised you haven't already. I stalk the shit out of my girlfriends' exes,\" she says and it's so casual that it almost feels as if we're just two friends again. \"And those women weren't still married to their exes,\" she adds.\n\nAnd there it is. I was probably too hopeful to momentarily think we were back to how we were before Lauren ever came into the picture.\n\n\"Googling someone and going out of your way to talk to their past boss are two entirely different things,\" I reply, ignoring her subtle jab.\n\n\"Michelle may not want to talk about it, but we both know why she's doing all this. Good thing her detective skills only seem to run surface level. Imagine what she could find out about you if she dug deeper,\" Jackie says.\n\nThe server comes back to our table with the drinks, allowing me an easy excuse to ignore Jackie's follow-up statement. I take a much-needed sip but can still feel her eyes on me.\n\n\"Did you talk to Michelle?\" she asks when I just continue to drink my champagne in silence.\n\n\"Just to tell her about Olivia's invite for drinks. She seemed to agree we couldn't get out of it.\"\n\n\"We didn't get it as bad as Michelle did today. Olivia didn't even let her talk and now she's not even invited to whatever this is,\" Jackie says, waving her hand around the bar.\n\nI've been so wrapped up in my own drama, I didn't even really think about how hard that meeting must have been for Michelle. She's the leader of our team and was treated with about the same importance as an intern.\n\n\"She seemed fine when I left, but it's hard to tell with Michelle,\" I offer, but immediately stop talking when I can see Olivia and Maddy enter the bar from the hotel lobby. \"They're here,\" I say quickly to Jackie so she knows we can't keep talking about Michelle.\n\nAs they walk towards us, I can see a few of the heads in the bar turn towards Olivia, which I can understand. She's a striking figure and still looks as immaculate as she did this morning. I notice that as they walk, Maddy stays a few steps behind her boss, which I'm guessing is some weird, corporate sign of respect.\n\n\"Hello, ladies,\" Olivia says as she approaches the table.\n\nNormally I would get up to shake a client's hand, but I feel like I've touched this woman enough for a lifetime so I stay seated. Luckily, Jackie doesn't seem inclined to get up either.\n\n\"Are these for us?\" Olivia asks, looking down at the two drinks in the seats across from us.\n\n\"They get busy this time of night so I thought I'd get ahead on your order,\" I reply as casually as I can and take a sip of my drink.\n\nOlivia raises her eyebrow slightly and gives me the same cocky smirk she had on her face this afternoon in my office.\n\n\"Thank you, Emma. Your attention to detail is noted. Though this feels a little too much like an interview. Jaqueline, why don't you move over here to Madeline's side,\" Olivia says, but her inflection didn't raise at the end, implying this was a command and not a request.\n\nJackie gives me a side glance before turning her eyes back to Olivia and giving a small nod.\n\n\"Don't worry, I won't call you Jaqueline like Olivia does,\" Maddy says with a warm smile directed at Jackie.\n\n\"Great. Olivier and Emmaline can sit over here,\" Jackie says as she scoots out of her chair and moves her body and beer across the table.\n\nOlivia picks up her old fashioned and takes the seat next to me.\n\n\"My name isn't Emmaline,\" I say dryly back to Jackie.\n\n\"It is now,\" Jackie replies. With the way she's cocking her head and smiling, I can't tell if this sudden banter is genuine or if it's for the benefit of our clients.\n\n\"I'm impressed. There aren't many people bold enough to make Olivia the butt of a joke,\" Maddy says and tips her glass to Jackie's.\n\n\"Yes, very clever,\" Olivia deadpans back to Maddy.\n\nI'm guessing Maddy and Olivia have a close relationship if Maddy is willing to tease Olivia like this.\n\n\"How long have you two worked together?\" Olivia asks.\n\n\"Two years. But I'm surprised you didn't know that already,\" I respond with a small wink that I hope will offset my snark.\n\n\"It looks like I'm not the only one to do her research,\" Olivia says as she raises her glass to me. \"Besides, I didn't ask if you've dated. That, I already know the answer to.\"\n\nJackie catches my eye for a moment and even Maddy looks uncomfortable with Olivia's comment.\n\n\"How do you know we dated?\" I ask.\n\n\"I didn't until you just told me,\" she replies easily.\n\n\"Behave,\" Maddy says from across the table, looking at her boss.\n\n\"I am behaving,\" Olivia says back and it almost reminds me of the way Jackie and I usually banter.\n\n\"And how long have you two worked together?\" Jackie asks Maddy, seemingly not as affected by Olivia's manipulation of the conversation as I am.\n\n\"It feels like it's been since birth,\" Maddy jokes and I notice again how much more relaxed she seems in general than Olivia. Maddy has an easy confidence to her, but she's much less imposing than her boss. \"I started working for Olivia's consultancy firm about five years ago.\"\n\n\"You must be talented if she's taking you to Ellison with her,\" Jackie said next, her attention fully on Maddy now.\n\n\"She's the best there is,\" Olivia says, bringing the attention back to herself. \"Though, maybe she has competition,\" Olivia says as she turns to me and raises one of her perfectly manicured eyebrows.\n\nI can see Jackie narrow her eyes sightly at Olivia's comment and I really wish the woman would stop blatantly flirting with me in front of her. Jackie's already mad enough about another certain executive taking an interest in me.\n\n\"And where are you originally from?\" Jackie asks Maddy, turning her body slightly towards the other woman.\n\n\"My family is from San Antonio,\" she replies, also turning her body towards Jackie.\n\n\"Ah, so a Texan through and through,\" Jackie says back with a smile.\n\n\"Via Mexico. My parents moved to Texas two years before I was born.\"\n\n\"Your family sounds like mine,\" Jackie replies. \"My parents moved to Seattle from Brazil. But I guess that was quite a few years before I was born.\"\n\nI can feel Olivia shift in her seat next to me and I wonder if she's as uncomfortable as I am. Jackie and Maddy are so engrossed in their conversation, I feel as if I'm watching a movie of a first date, not able to actually interact with the actors myself.\n\n\"That's quite the jump. What brought them all the way to Seattle?\" Maddy asks Jackie.\n\n\"My dad is a software engineer and there are more jobs here.\"\n\n\"Fascinating,\" Olivia says, but her tone implies that she's anything but fascinated. \"Did you two have any questions we didn't get to today or are we going to find out about Madeline's high school experience as well?\"\n\n\"I for one, would love to hear about high school,\" Jackie says with a smile directed at Maddy before turning a more serious look back to Olivia. \"But I'm also curious about something you said in today's meeting. You mentioned needing the creative campaign to be nimble. Can you expand on that?\"\n\nI've always appreciated Jackie's skill in balancing professionalism with her dry humor and Olivia's presence doesn't seem to hinder that at all as she smoothly transitions from her conversation with Maddy back to PR-mode.\n\n\"There's a good chance this launch will coincide with a separate re-brand for the company at large. We will need to make sure that any creative we use can evolve so it aligns with that re-brand,\" Olivia answers.\n\n\"Are you re-branding just Ellison Tech or all the subsidiaries?\" I ask.\n\n\"Just Ellison Tech. And it may be another year before that happens. But I need to know that our agency partner has the in-house resources to shift things quickly.\"\n\n\"Who's handling the re-brand\"? Jackie asks and I know exactly where her head is at when she does.\n\n\"Are you trying to secure two contracts from us, Jaqueline?\" Olivia asks.\n\n\"As many as I can,\" Jackie replies with a charming smile. \"I do have quite a bit of re-brand experience as well.\"\n\n\"I saw the branding campaign your office did for Tech Farm. It was very clever. Did you work on that?\" Maddy asks Jackie.\n\n\"I led the creative on that campaign, actually,\" Jackie responds with a small shrug.\n\n\"Really? It was amazing. I'm not sure I've ever seen a creative re-brand drive so much PR on its own. Especially without a product launch attached,\" Maddy adds.\n\n\"Unfortunately, we'll be handling the re-brand in-house,\" Olivia says in a louder voice, cutting into their conversation again. \"We just need to know your own team can be flexible as we work through it.\"\n\nAt that moment, the server comes back up to our table to check on our drinks. Olivia's drink is still almost full and she just shakes her head at the server when he asks if Olivia wants another.\n\n\"Nothing for me. Just another glass of champagne and whatever they'd like\" Olivia says, pointing to Jackie and Maddy across the table.\n\nI was already going to order another drink to get through this happy hour, but it grates on me that Olivia just took the initiative to do it for me.\n\n\"Next question?\" she asks, turning to me in her chair.\n\n\"From what we've learned, your father didn't want a great deal of importance put on digital paid media. In fact, he would only allocate a very small portion of each budget to it. What is your opinion on the matter?\" I ask, but direct my attention to Maddy instead of Olivia, who's eyes I can still feel on me.\n\n\"Good question,\" Maddy says. \"Richard is a bit more traditional than the two of us. While we want the big story, we also recognize that the channels where people read their news and get their information is vast. We'll expect to see how you plan to secure coverage while also amplifying that coverage through paid media and other channels.\"\n\nHer answer is music to my ears considering the digital-heavy focus our campaign ideas have taken. Part of why I love working at Altitude so much is the agency's innovative thinking when it comes to traditional PR strategies and I'm glad Olivia and Maddy also see the value in that kind of thinking.\n\n\"You also mentioned thought leadership today. Who will be the Ellison representative that's the face of the launch?\" I ask next.\n\n\"I will,\" Olivia says. \"People expect to see an actual Ellison leading our major launches.\"\n\n\"We also have a man named Simon Simpson on our board. He's very influential in the Southwest sustainability space and would also be a good target for speaking engagements or white papers,\" Maddy adds.\n\nI recognize Simon's name immediately as one of the board members who Lauren said would be pro-Altitude. I believe she had said he owned a large electric truck company in Austin and wasn't a huge fan of our major competitor.\n\n\"I would say we haven't made a final decision on Simon's involvement,\" Olivia says, looking pointedly at Maddy, who busies herself by picking up her drink to take a sip.\n\nI catch Jackie's eye again for a moment and I know she's also noticing the brief moment of tension between the women. I hope it means that Lauren's intel is right and Simon is a much better avenue for us to focus our pitching efforts on than Olivia.\n\n\"I assume as CEO you'll be incredibly busy. It might be good to designate a secondary option if you can't make yourself available to us. If Simon has a background in the industry, he could be a good option to legitimize our narrative\" I say to Olivia, trying to see if I can get any more information on the topic of Simon.\n\n\"I have no issue making myself available to you, Emma. Day or night,\" Olivia responds in a low voice and it's impossible not to notice the slight husk her tone took. \"Next question?\"\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nBefore I leave the hotel bathroom, I quickly look at my phone to see the time. I was too scared to check it at the table because I didn't want to come across as rude and I was worried Lauren's name would be on the screen. But as I look at it, I see that she hasn't texted yet.\n\nAs I head to the door of the bathroom, I pass by the vanity I once put my underwear behind and even though I'm still stressed out about the day's events, I feel a wave of arousal course through my body at the memory.\n\nIt's been almost two hours since we got to the bar. I had only planned to stay an hour, but Olivia was so forthcoming with her answers, that I wanted to take advantage of her loose lips. Lips that didn't seem to be affected by alcohol since she never did have any more of her one drink.\n\nI stopped drinking after my second glass even though Olivia tried to order me another. I never drink more than two glasses when with a client and that rule seems especially prudent tonight.\n\n\"Speak of the devil,\" Jackie says a little too loudly when I get back to the table.\n\nI've known her long enough to know that the slight increase in volume and the red that is now lightly tinting her tanned cheeks is a sign that Jackie is feeling tipsy.\n\n\"I was just asking Jacqueline here how social the employees of the Seattle office are with each other,\" Olivia says as I take my seat again.\n\n\"Oh,\" is all I manage to say through my tightening throat.\n\nI instantly regret leaving Jackie alone at the table with them when she's had so much to drink. I can't imagine she mentioned Lauren, but Olivia's smirk is making me nervous.\n\n\"Yes, she says you never believe her theories on who's sleeping together,\" Olivia adds.\n\nI feel immediately relieved at her comment. Jackie does often have theories on who in the office is sleeping together and they're never right. The latest being that Michelle is sleeping with Guy, who I keep telling her is gay.\n\n\"That's because Jackie's theories are always wrong,\" I say back.\n\n\"Not all of them,\" Jackie says, making eye contact with me and my stomach, which had slowly started to uncoil at Olivia's comment, tightens again at Jackie's subtle implication.\n\nBefore she can make this any worse, I decide to put an end to the evening. I'm anxious to see Lauren again and now that I've gotten all my questions answered, more than anxious to no longer be in Olivia's company.\n\n\"And on that note, I think I'll grab the bill. I have an early meeting tomorrow and I know you two have a morning flight to catch. We both appreciate this extra time though,\" I try to say as smoothly as I can so it doesn't seem like I'm running out of there.\n\n\"It was our pleasure,\" Olivia replies.\n\nThe server hasn't been by our table for a while so I stand up from the table so I can find him and pay. I'm suddenly desperate to get out of here and don't want to wait for him to leisurely come by again.\n\nWhen I come back to the table, I can see Jackie and Maddy leaning into each other and talking quietly. Olivia quirks her eyebrow at me when she sees me looking at them.",
        "\"These two are staying. I'll walk you out,\" Olivia says and gets up from the table.\n\n\"You're staying?\" I ask Jackie, looking down at her.\n\n\"We're going to have another drink,\" she says casually back, but I recognize the challenging look on her face.\n\nShe knows I can't say anything with Olivia and Maddy watching us, so I just give her a nod.\n\n\"Don't worry, I'll make sure she shows up for work tomorrow,\" Maddy says with a smile directed to me.\n\n\"I'm not worried but thank you. Have fun,\" I say and give Jackie one more look before I turn and walk towards the exit.\n\nI know Olivia is following right behind me, but I don't turn around. I could tell from the beginning of the night that there was some spark between Maddy and Jackie and I'm just hoping Jackie doesn't cross the line with her. That would make this situation even more complicated. And I really hope she has enough sense to keep her mouth shut about Lauren.\n\nIt's raining when I step outside of the hotel so I move over to the valet area so I can pull out my phone and order an Uber.\n\n\"Did you drive?\" Olivia asks.\n\n\"No, I'll order an Uber. But I don't like getting wet,\" I reply and it's only once I say it that I hear my own innuendo.\n\nOlivia gives me a slow smile, but fortunately let's my comment go. \"Are you upset about them staying?\" she asks me, nodding her head to the entrance of the hotel.\n\n\"No, not at all. Jackie's free to have a drink with whomever she wants,\" I reply.\n\n\"So that wasn't jealousy I detected?\"\n\n\"No. The two of us haven't been in that place for a long time,\" I say back, intentionally leaving out Jackie's recent declaration to me.\n\n\"Good. Come up to my room with me.\"\n\nMy head snaps up from looking at my phone and I know my eyes must be wide. Of course, I could feel Olivia's eyes on me at times today and tonight, but I didn't think Lauren's prediction would be so spot on.\n\n\"I thought this wasn't a date?\" I ask.\n\n\"It wasn't. But it could certainly turn into that,\" she says as she moves some of my hair behind my ear.\n\nMy whole body tenses at her touch and it's not lost on me how different her hands feel touching my hair than Lauren's do.\n\n\"I have a girlfriend,\" I reply.\n\n\"I don't mind.\"\n\nOlivia takes a step closer to me and the professional space we had between our bodies is suddenly eliminated. I can smell the light scent of alcohol and mint on her breath and if I was interested, it wouldn't take much to lean in and kiss the woman.\n\n\"I do,\" I reply in a low voice. \"And she doesn't like to share,\" I add.\n\nIt feels scandalous to be talking to Olivia about my girlfriend, knowing she has no idea that said girlfriend is actually her ex-wife. And as much as that amuses part of me, the other part of me just wants to get out of this situation as fast as I can.\n\n\"She sounds controlling,\" Olivia says back before lightly grazing her hand down my arm.\n\nI let out an involuntary shudder of discomfort at the sensation, which I hope she doesn't read as arousal.\n\n\"That's rich coming from you,\" I respond as I take a small step back.\n\nOlivia lets out a laugh at my comment. \"I like your sass,\" she says, but thankfully she doesn't move back into my space.\n\n\"I'm not trying to be sassy.\"\n\n\"Even better.\"\n\n\"I have to believe that even Olivia Ellison understands the idea that no means no.\"\n\nOlivia doesn't respond for a moment, but just looks at me before her smirk slowly comes back onto her face.\n\n\"She does. But I won't be forgetting you any time soon, Emma King. And I'll see you in two weeks,\" she finally says.\n\nShe reaches into her coat pocket and pulls out a card that she hands to me.\n\n\"My personal number is on there. Feel free to use it,\" she says with one final smile before turning around and walking back into the hotel.\n\nI let out a breath the second she's gone. I'm glad I didn't have to do more to get out of that situation, but I assume Olivia has no trouble finding women to bed and isn't that upset about the rejection. She probably just has to snap her fingers and women submit.\n\nI turn my attention back to my phone so I can order a car and text Lauren.\n\nMe: On my way. I need a cheeseburger and fries.\n\nThe Uber takes no time getting to the hotel and I hop in to avoid getting too rained on before looking at my phone to see Lauren's response.\n\nLauren: One Happy Meal coming right up.\n\nAs I read her response, I feel the first genuine smile I've felt all day cross my face and I'm reminded that the woman I'm going to right now is so vastly different than the woman I just left.\n\nChapter 19\n\nI feel instantly lighter as I walk into Lauren's apartment and can smell the now familiar scent of my girlfriend. I still have a knot in my stomach at the thought of what Jackie and Maddy could be talking about, but right now I just want to focus on something other than Ellison.\n\nAs soon as I come into the living room, all thoughts of Ellison and Olivia fly out of my head the moment I see Lauren.\n\n\"Welcome home, honey. Drink?\" she asks.\n\nBut I'm still staring at her outfit and can't seem to form words. Lauren has on what appears to be a pair of very short shorts and nothing else. Covering the front of her bare body is a tight apron that says, \"Best Dad Ever\" on it.\n\nI'm simultaneously turned on by how hot she looks and also amused at the odd choice of apron.\n\n\"Yes, please....dad is it?\" I finally respond with a smile on my face as I stand in the entryway still staring.\n\n\"It was the only apron they had in the grocery store and I thought it would be funny. You seem to like it,\" she says in a suggestive tone.\n\n\"Oh, I like it. Come here before you pour me that glass,\" I say.\n\nLauren sets down the bottle and glass she had picked up from the table and slowly walks over to me, making sure to sway her hips as she does.\n\n\"Yes, darling?\" she asks when she gets close to me.\n\n\"I missed you,\" I say and lean in so I can kiss her.\n\nLauren seems to need this moment of connection as much as I do because her hands instantly move up to my face as our lips touch. I move my hands behind her back and grab on to the bare skin there as we allow our mouths to slowly explore each other's.\n\nFinally, Lauren lightly pushes my face backwards a bit so the kiss is broken, but she continues to hold my face as she looks into my eyes.\n\n\"You missed me?\" she asks in a whisper.\n\n\"Of course I did,\" I reply.\n\nI can see a shadow of something cross her features as she continues to look at me. \"I'm so sorry about our call earlier,\" she says. \"I have no right to be upset with you for just doing your job. And I'm sorry you're even in this situation to begin with.\"\n\nInstead of responding, I move my lips back to hers and give her a light kiss before pulling back again.\n\n\"Thank you for saying that. I hope you know I didn't want to be there tonight.\"\n\n\"I know that. Now come have some expensive champagne and a cheap burger and tell me about your day.\"\n\nLauren moves back over to the new dining room table. The room is so much more put together than the last time I was here. Besides decorating, the room seems about done with expensive looking furniture filling the space.\n\nIt's only when I smell the cheeseburger on the table that I realize I haven't eaten all day and I don't even wait for Lauren to take a bite of her own burger before I'm shoving my own into my face.\n\n\"Oh, god,\" I say when I finally take a breath between bites. \"This tastes so good. I was starving.\"\n\nLauren still hasn't taken a bite of hers and is just staring at me with an amused, yet warm smile on her face.\n\n\"You're so cute,\" she says. \"But I'm not surprised you're hungry. You've had a long day.\"\n\n\"I'm not even really sure where to start,\" I say before popping a fry into my mouth.\n\n\"You don't need to tell me anything. I know the NDA makes things hard,\" she says but she's not entirely convincing in her ambivalence.\n\n\"She invited me up to her room,\" I say quickly, putting down my burger. When Lauren just looks down at her plate, I feel like I need to say more. \"I just wanted to be honest.\"\n\nLauren is silent for another moment before she speaks. \"Well, I wish I could say I didn't see that one coming,\" she says. \"But thank you for telling me, Ems. How did she react to your rejection?\"\n\n\"She didn't seem too bothered. She gave me her card with her cell phone number. And then told me she'd see me in two weeks.\"\n\n\"She's not one to try too hard. That's beneath her,\" Lauren says.\n\n\"Jackie was still with Maddy when I left the bar. Is Maddy gay?\" I ask and take another bite of my burger.\n\nLauren's eyebrows shoot up at my latest reveal. \"She is. But I've never known her to date anyone. Was it a thing between them?\"\n\n\"I don't know. It made me nervous to leave them alone, but I also needed out of there.\"\n\n\"Maddy is very loyal to Olivia. But I've never thought of her as a bad person. In fact, I've always gotten along with Maddy.\"\n\n\"I got the same sense from her. She really did give us some good information. And that was one benefit of tonight. I got some much-needed intel, even if Olivia didn't mean for me to.\"\n\n\"As I knew you would,\" Lauren replies with a soft smile.\n\n\"Actually, I think you were worried she'd try to sleep with me,\" I quip back.\n\n\"That too. But it's not the worst thing for Olivia to be rejected by a hot blonde,\" Lauren replies in a playful tone.\n\n\"I do have some questions though,\" I say as I finally push the last bit of cheeseburger away from me. \"What's up with the way she uses everyone's full name? She called Jackie 'Jaqueline' the whole time.\"\n\n\"Oh, that,\" she responds with an eye roll. \"It's one of her things. I think it's her small way of asserting power. She does it to everyone who goes by a nickname.\"\n\n\"I don't even think I realized Jackie's full name until today. Ok, next thing. Does she drink?\"\n\n\"Barely. She'll take a sip or two but not much beyond that. She thinks holding an old fashioned makes her look sexy. But I've never seen her really enjoy one. Alcohol makes her feel out of control.\"\n\n\"Well, at least I got her drink right.\"\n\n\"Meaning?\"\n\n\"She did this creepy thing in our meeting where she dropped knowledge that she knew about us. We were clearly researched. So, after our meeting I did my own sleuthing to see what I could find and I ordered their drinks for them before they got to the bar.\"\n\n\"You could have just asked me.\"\n\n\"I didn't want to upset you more. I know you weren't comfortable with me going to get a drink with her. But I have to be honest. Now that I've met her, I want to know more about your marriage. Because it's hard for me to picture you with someone like that.\"\n\n\"Are you ready to come to bed? Let's talk there.\"\n\n\"Is always too cheesy of a response?\"\n\n\"It's certainly cheesy. But I like it.\"\n\n\"You'll need to take that apron off though if you expect words to come out of my mouth.\"\n\nShe just smiles at me as she gets up and moves to the bedroom. I follow her silently, but as we walk towards her room, Lauren begins to undo the ties behind her apron and finally lets it drop in front of the room to her door.\n\nShe pauses with her bare back to me before she fully moves into the bedroom. \"For tonight, I won't worry about where our clothes land.\"\n\nBut when we get to the bedroom, she doesn't continue to disrobe. Instead, she moves over to her dresser, removes a shirt and puts it on before crawling onto her bed.\n\n\"It this better attire for a conversation?\" she asks as she moves up to the pillows and lays back against them.\n\n\"Yes, but now I feel overdressed.\"\n\n\"Top drawer,\" she says as she points to her dresser across the room.\n\nI can feel her watching me as I move over to the dresser and randomly choose a t-shirt and pair of sweats. Once I'm changed, I move up the bed so I'm laying my head on the pillow facing her.\n\n\"Hi,\" I say quietly once I'm settled.\n\n\"Hi,\" she says back. \"I need to say some things.\"\n\nThe look Lauren is giving me is so intense that I just nod in response, not wanting to break the moment.\n\n\"Olivia being here has made me think about a lot of things,\" she says. \"And maybe that's good because I haven't really allowed myself to dwell on certain aspects of my marriage because it was easier to just walk away.\"\n\n\"You're not about to break up with me, are you?\" I ask with a smile to show her I'm not being serious.\n\n\"I don't generally invite women into my bed for the breakup talk,\" she responds with her own smile.\n\n\"Well, that's good to know. Now, tell me what you've been thinking about.\"\n\nShe lets out a long sigh before she answers. \"I guess I've been thinking about how I ever let things go so far with her. Why I ever let myself marry her. I think I knew who she was long before she ever showed me. And I've been too afraid of the real answers behind those questions to let myself think about it too much.\"\n\n\"What do you mean?\"\n\n\"Life was so hard, Ems. With my parents especially and then even after I left home and got to college. I had a small scholarship, but I also had two jobs and I was always paranoid I would have to drop out because I couldn't make tuition. Or I'd have to choose between food and school. Olivia suddenly made life easy,\" she says in a small voice.\n\n\"I never experienced the kind of childhood you did. It must have felt incredible to have someone who cared about you and supported you. Especially if you never had that. I don't think you should judge yourself too harshly. We've all been in relationships for the wrong reasons.\"\n\n\"I married my wrong reason,\" she replies. \"And I knew deep down that she wasn't a good person.\"\n\n\"From what you've told me, Olivia's true self took years to come out. Right now, you're able to look back and see all the cracks. But when you're in the moment, those are a lot harder to detect.\"\n\nLauren moves closer to me on the bed and begins playing with the ends of my hair. It feels so much better than when Olivia did it earlier and I close my eyes for a moment to savor her light touch.\n\n\"Look at you being all logical and insightful,\" she says. \"How did I get so lucky?\"\n\n\"I don't think it was luck that got me to take off my clothes in my office,\" I say back jokingly, recalling our first time together.\n\nBut Lauren's hand drops from my hair and I can see a frown cross her features again.\n\n\"Hey. What just happened?\" I ask, pulling her hand back over to me.\n\n\"I just don't ever want to be like her,\" she says so quietly I can barely hear her.\n\n\"You're nothing like here, Lauren. I can say that because I just spent an entire day with your ex. Everything she says is dripping in deceit and manipulation. You're so warm and loving and maybe you put on a hard exterior, but I see who you really are. I feel safer with you than I ever have with a woman. Olivia didn't make me feel that way. Quite the opposite and I honestly have trouble even picturing you with her.\"\n\nLauren lets out a small laugh at my comment. \"Sometimes I can't either. We butt heads a lot, even when things were relatively good. And I acquiesced more than I should have. I was a different person back then. It took leaving her firm and making my own way at Altitude to understand how unhealthy our marriage was. And how much control she had over me. Suddenly I was seen as valued and talented in my own right just like I was when I first started college. I just lost my way with Olivia.\"\n\n\"I know today must have been just as hard for you as it was for me. And I still think it was the right decision for you not to go to the office. But I'm also sorry you had to sit here all day waiting.\"\n\n\"Not your fault, Ems. But I did go through a lot of different emotions today just sitting here. At first, I was so jealous, thinking about her eyes on you. Then I hated knowing I couldn't protect you from her. And finally, I remembered that you don't need a hero. Since then I've just been thinking about this. Having you here, back in my bed.\"\n\n\"Knowing I'd get to see you was the only thing that got me through that happy hour,\" I say and lean in so I can touch my lips lightly against hers\u2014 partly because I feel a desperate need to touch her and partly because if I don't kiss her, something much more intimate may come out of my mouth and I'm not ready to say those words yet.\n\nLauren pushes up off her pillow as she deepens the kiss, causing me to fall back on my own pillow as she leans her body over mine. As my hands start to make their way up her back, she stops the kiss and pulls her face away so she can look down at me.\n\nFor a moment I assume she's going to say something about me putting my hands on her back without permission, but the look she's giving me isn't the normal Miss Callahan look. This is still Lauren and she still seems more anxious than her usual, confident self.\n\n\"Wait. Before we go any further, I wanted to say one more thing.\" She leans on her elbow so she can continue to look down but isn't putting her body weight on top of me. \"Being in control in the bedroom is something that I enjoy in a relationship. But it has to be about mutual respect and pleasure. And it wasn't always like that with Olivia. There were times I felt really uncomfortable. That's why consent and communication are so important for me. Ems, if I ever make you feel uncomfortable, I need to know you'll tell me.\"\n\nI look up at her face before answering and push her falling hair back behind her shoulder. Like so much of our conversation tonight, this moment feels charged with an intense energy. Lauren has never made me feel uncomfortable, but her statement still settles in my mind and I feel a warmth flow through my body. Lauren is so thoughtful in the way she does everything and I bet few people have seen that side of her.\n\n\"I will, miss,\" I reply.\n\nBut as soon as I say it, she's shaking her head. \"No. Not tonight. No rules tonight. Just this,\" she says as she dips her face back down to mine and takes my lips in a deep kiss.\n\nThe need for conversation seems to be gone as our lips take over, moving with each other's in a sensual dance. As she brings her body above me, I can feel her tongue begin to lightly play with my own. It's as if we both needed this\u2014 to come together intimately and romantically after the day we had. Right now, nothing feels rushed as we continue to let our mouths do the communicating.\n\nOnce her tongue slides all the way inside my mouth though, I let out a moan and can feel myself begin to get wet. As much as kissing Lauren has become one of my favorite activities, I want to feel more of her so I gently push my body up, causing her mouth to leave mine.\n\n\"Clothes,\" is all I'm able to pant out.\n\nLauren seems to understand my meaning though because a second later, her shirt is off her body and flying across the room. She gives me a playful smile when she sees my wide eyes looking at the way she haphazardly threw her clothes.\n\n\"No rules tonight, remember? Your turn,\" she says before pulling her shorts off and letting them join her shirt.\n\nSoon we're both fully naked with our clothes strewn across Lauren's floor and she's moving back so she can take her place over my body. Her leg slides in between my own and I can tell from her sharp intake of breath that she can feel just how wet I am.\n\nI'm going to take advantage of a night where I get to freely touch Lauren so I grab onto her back and pull her in for another kiss. As the kiss grows more desperate, I can feel Lauren sinking down so I gently flip us so she's on her back.\n\nMy hands intertwine with hers above her head as we continue to kiss and I push more of my weight into her, eliciting a sexy groan from the woman underneath me, which only increases in volume as my leg hits her center.\n\nI'm desperate to feel this woman's touch on my body, desperate to come around her fingers and mouth. But overriding that feeling is the need to touch her.",
        "I pull my mouth away from hers and have to smile at the cute sound she makes at the abrupt end to our kissing. I give her a small smile before dipping my head so I can trail wet kisses down her neck and over her chest. I finally land on her left nipple and give it a gentle kiss before swirling my tongue over the hardening bud.\n\nLauren's brings her hands up to grab onto my hair as I move over to the right nipple, urging me on. My licks become longer and wetter as I move between each nipple making sure to get her chest as wet as I can.\n\nAs I take one of her nipples fully into my mouth so I can suck on it, I move my right hand down her torso and push one finger into her folds.\n\n\"Mmm, baby. Yes,\" she whispers as her grip tightens on my hair. \"More, inside of me. Please, baby, I need to feel you inside.\"\n\nI bring my head off her tits so I can get into a better position. I do as she asks and slip that same finger into her pussy allowing her to get used to the feeling before I add another.\n\nAs I add a second finger, Lauren brings her hands up behind my back and scratches down the length. The feeling of her fingernails just turns me on more.\n\n\"Fuck. You feel so good. Add another,\"' she cries out.\n\nI now have three fingers pumping into her as I look down at her beautiful face. She looks so open and free right now, with her eyes slammed shut and her mouth hanging open. I'm in absolute awe of her beauty, even in times of such uninhibited pleasure, that I can't help but take her mouth again with mine as I fuck her.\n\nWe moan into each other's mouths and I can feel her hands grip my back even harder. When I move my thumb to her clit, it's already hard and I know she won't be able to hold off an orgasm for long.\n\nMy mouth doesn't let up on hers, and soon my tongue is matching the in and out motion of my fingers. Her cries are swallowed by our kissing but even without the sound I can feel her body begin to shake under me and know she's about to come.\n\nShe breaks her mouth away from mine suddenly and her hands fall from my back to the bed.\n\n\"I'm coming, baby. I'm coming. Fuck. Don't stop. Don't stop,\" she screams.\n\nAnd I don't stop. I push up so I'm leaning above her as my fingers drive into her, making sure I drag out her every remnant of her orgasm.\n\nWhen she finally puts her hand on my arm, I know her pussy can't handle anymore and I slowly remove my fingers.\n\nI don't move my body from its position above her but do lean on one side so I'm not holding myself up. Lauren turns her head to me lazily and when she looks up at me her eyes are so clear and green that I can feel my heart skip a beat at their intense beauty.\n\n\"You're so beautiful right now,\" I say quietly to her.\n\n\"You're amazing,\" she whispers back. \"That was amazing.\"\n\nAs I bring my wet hand back up to my face, I can smell her scent on my fingers and all I can think about is tasting her. As I look down at her, I put all three fingers that were just inside of her into my mouth so I can swirl my tongue around her juices.\n\nThe look Lauren is giving me leaves no room for doubt that she's turned on by the act and I can feel my own juices coat the inside of my legs as I get my first taste of her.\n\n\"I want more,\" I say and begin to move down her body, but she puts her hand on my head.\n\n\"Wait,\" she says. \"Let's taste each other.\"\n\nIt's clear that though this isn't one of our play sessions, Miss Callahan is still very much a part of who Lauren is. There may be no rules tonight, but the woman can't help but be a top.\n\nBut the implications of her statement are so hot that I don't dwell on that much. And quite frankly, I wouldn't have Lauren any other way.\n\nOnce I'm back up near her head, Lauren sits up and motions for me to lay down on the pillows. After fucking Lauren and getting that little taste of her from my fingers, my body is so on fire that I'm glad I'll be on the bottom because I don't have much strength to hold myself up. I also know I won't last long in this state of extreme arousal.\n\nLauren crawls over my body so her head is down by my pussy and her own pussy is right above my face. Now that I'm this close to her wetness, I inhale her scent and feel another wave of juices flow out of me.\n\nWithout warning, I feel her tongue come down onto my pussy as she makes one long stroke up the length of my folds.\n\nFor a moment I'm distracted by the loud moan she lets out as she first tastes me that I forget what I'm also supposed to be doing. But she must be getting wetter because I can swear the smell of her gets stronger as her licks become more frenzied.\n\nI wrap one arm around her lower back and lift my face so I can reach her pussy with my tongue and what I predicted is right\u2014 Lauren is impossibly wet, especially for a woman who just came.\n\nThe room is suddenly filled with the erotic sounds of our mutual licking and moans as we both continue to feast on each other's pussies.\n\nI begin a rhythm of sliding my tongue through her folds to get it nice and wet, before bringing it back up to her clit and as I do so, I can feel her own tongue start to flick my clit.\n\nMy legs begin to shake even more and I know I'm getting close to an orgasm. Not wanting to be the only one to come, I start circling Lauren's swollen clit with tight circles of my tongue.\n\nNothing is graceful about the way I'm panting into her pussy as I try to pleasure her at the same time as I feel an orgasm drawing nearer, but whatever Lauren is doing to me is sending me to the edge and fast.\n\nI plunge my tongue as far inside her pussy as I can in this position at the same time as I can feel her slide a finger into my own. It only takes two pumps of her finger and I feel my orgasm rip through me.\n\nAs I let the intense feeling wash over me, I manage to keep enough awareness to continue flicking her clit with my own tongue and soon I feel it harden and know she's about to fall into her own orgasm.\n\nI feel her mouth lift off my pussy as she speaks. \"Come again. I'm going to come with you, baby\" I hear her command from the bottom the bed.\n\nLauren adds another finger inside me and pushes harder into my pussy right as I plunge my tongue deep inside her own pussy and suddenly, I can feel both our bodies tense.\n\nAs she fucks me with her tongue, I feel my second orgasm hit and hear the sounds of Lauren's own pleasure rolling through her as we both continue to lick and suck each other.\n\nAs I give her one final lick, I feel her body jerk and know that her pussy is too sensitive to keep going. Lauren seems to sense the same with me and slowly removes her fingers from inside me before giving me a light kiss on the inside of both my thighs.\n\nWe both don't seem in a rush to move as we catch our collective breath, but I have to assume Lauren's arms are getting tired so I shift and pull her back up to the pillows.\n\n\"Wow,\" she says as she rests her body against the headboard. \"That was fun.\"\n\nI let out a small laugh as I let my own body fall backwards onto the pillows. \"Yes, it was.\"\n\nWe're both quiet for a minute as we savor the aftereffects of our mutual orgasms and let our breathing come back down. But when I bring my eyes back up to Lauren leaning against the headboard, I can see her eyes trailing around the room.\n\n\"You're thinking about all the clothes thrown about, aren't you?\" I tease.\n\n\"No,\" she says but her tone isn't convincing.\n\n\"It's ok that you're a little neurotic. It's adorable.\"\n\nLauren quickly takes one of the pillows on the bed and lightly throws it at my head, causing laughter to erupt from me.\n\n\"Always so sassy after an orgasm,\" she says with a smile before her face turns a bit more serious.\n\nShe moves the hair off my face that the pillow had ruffled. \"This day didn't turn out so bad,\" she says.\n\n\"Actually, I think it turned out pretty well,\" I say but at the same time I'm also hit with a giant yawn I can't stop and my words are a bit muffled.\n\n\"That was really cute. Now bedtime. Turn,\" she says and motions for me to get into our normal spooning position.\n\n\"Bossy again already, I see,\" I joke as I move my body into hers.\n\n\"Old habits die hard.\"\n\n\"That's understandable, miss.\"\n\n\"It's not too late for a spanking, you know.\"\n\nLauren wraps her arms around me and pulls me close. I can feel her inhale the back of my hair as she has done so many times before.\n\n\"How about a cuddle instead?\" I ask as I allow my eyes to close and the feeling of her arms around wrapped securely around my body to bring me closer to sleep.\n\n\"It's never too late for that.\"\n\nChapter 20\n\nI'm just getting out of my car across the street from my office building when I feel my phone buzz.\n\nBefore pulling it out to see who texted, I pull my coat closer to my face as I quickly run across the busy downtown street and into my building. I know it's petty, but the fact that VPs have to park across the street, instead of in the actual building's parking lot, annoys me every morning that it's not sunny. Logically I get that there are a finite number of spots so they prioritize them for SVPs and above, but right now as I shake off rain from my clothes, I don't care about logic. I guess I could buy an umbrella, but apparently nobody in Seattle actually owns one and I'll just look like a tourist to my colleagues.\n\nOnce I'm in the lobby of the building, I pull out my phone as I head to the elevators in the middle of the room.\n\nJackie: We need to talk.\n\n\"We need to talk\" is never a good sign and given the fact that I left Jackie with Maddy last night, my stomach instantly tightens.\n\nMe: When?\n\nJackie: Meet me at the office. Now.\n\nMe: I'm on my way up.\n\nJackie is sitting in my office when I come in and she doesn't look like she slept much. In fact, she's wearing the same shirt she had on yesterday.\n\n\"Hey,\" I say as I move to my desk, set my things down and sit in my chair.\n\nJackie doesn't reply and just plays with two of the buttons on her shirt, a nervous behavior I've seen her do since we met.\n\n\"Jackie,\" I say when she continues to sit there.\n\nFinally, she looks up like she just noticed that I was there.\n\n\"I slept with Maddy,\" she says quickly.\n\nMy eyes move up her day-old clothes, which now that I'm really paying attention, look more than a little disheveled.\n\n\"I gathered that,\" I reply tentatively. \"Is that what you needed to talk to me about?\"\n\nFor some reason I have a feeling in my gut that Jackie didn't just come in here for a girl's chat. She looks like a toddler who spilled milk and then ran away from the mess.\n\n\"And she knows about you and Lauren,\" she adds.\n\nI was half expecting some kind of revelation like this and yet my stomach still drops at her words.\n\n\"How?\" I ask and I can hear how unsteady my voice sounds already.\n\n\"I told her. Accidentally.\"\n\n\"How did you accidentally tell her?\"\n\nJackie lets out a long breath before rubbing her face with her hands. \"We were drinking. A lot. And we went back to her hotel room. Somehow, we started talking about Lauren. She asked how it was working with her and I told her that I don't really work with her since she can't touch the Ellison account. Then she told me that all the women at Olivia's consultancy firm had a crush on Lauren and asked me if I found her attractive.\"\n\nThe more Jackie talks, the more my stomach tightens. How she couldn't realize what Maddy was doing, drunk or not, is beyond me.\n\n\"I told her that it wouldn't matter because I'm not blonde haired and blue eyed like you,\" she continues. \"Maddy made a comment about that being Olivia's type as well and then I made a stupid joke that it would make all of our lives easier if you just took both of them to bed. It didn't take much for her to figure out that 'both of them' meant Lauren and Olivia.\"\n\nI'm no longer looking at Jackie because my hands are covering my face. Nice or not, Maddy is on Team Olivia and I'm sure this information has already been given to the CEO.\n\n\"Why the hell would you say that? That's not even a funny joke,\" I say into my hands and I can feel my body heat up, but in a very different way than last night.\n\n\"I don't know, Ems. I was drunk. So drunk. I was stupid.\"\n\nSure, I'm angry at Jackie for being so careless, but a sense of fear is also settling itself into my mind. Everything feels like it's about to come tumbling down around me with this one mistake. But somewhere in the back of my mind, it also doesn't feel completely accidental.\n\nHer use of my nickname again barely resisters as I try to process everything she just told me.\n\n\"You have to see how it's hard for me to believe it was an accident considering your attitude towards me lately,\" I say in a biting tone, letting my anger win out over any other emotion.\n\n\"Being heartbroken isn't an attitude, Emma,\" Jackie says back quietly and in an instant my anger dissipates a bit.\n\nJackie made a huge mistake last night. But she's not responsible for us being in this situation\u2014 I am. And the fact is, she didn't have to come here this morning and tell me all this.\n\n\"You know she was trying to get information out of you, right?\" I ask in a much gentler tone.\n\n\"Not everyone is as duplicitous as Olivia. It didn't feel like prying. We were just getting to know each other,\" Jackie says.\n\nHer defensive tone sets my annoyance off. She's defending a woman who we know is loyal to Olivia Ellison.\n\n\"Coming from the same woman who's been saying Lauren is only sleeping with me to get back at her ex, it's not out of question for me to accuse Maddy of sleeping with you to get information.\"\n\nJackie leans back in the chair and lets out a puff of breath, but she the guarded look she had on her face a moment before is gone.\n\n\"Look, I'm the one who made the mistake. I know how it sounds, but I really don't think her goal was to get that out of me. And maybe there's a chance she won't tell Olivia or maybe she won't even remember. We were really drunk.\"\n\nI finally let my hands fall from my face and lean back in my own chair as I look at Jackie. Even if Jackie is right and Maddy doesn't remember, I can't take the chance that Olivia won't blow all this up around me. And if that happens, I can say goodbye to my Altitude career.\n\n\"I have to tell Michelle and Guy,\" I finally say in a quiet voice.\n\n\"No. That's a terrible idea. At best, you lose any chance of a promotion and at worst you lose your job and so does Lauren. There's too much money on the line. Agencies are loyal to the bottom line and you know that as well as I do.\"\n\n\"Jackie, they're going to find out. I can't even imagine what Olivia is going to do with this information. Especially after last night.\"\n\nMy dread just increases as I think back to the events of last night and the way I turned Olivia down. If the next thing she finds out about me is that I'm fucking her ex-wife, we're all doomed on this account.\n\n\"What do you mean?\" Jackie asks.\n\n\"Olivia asked me to come up to her room last night and I told her no.\"\n\nJackie's eyes widen for a moment as she sits there and takes in what I just told her. \"Jesus. That makes this more complicated,\" she says as I just nod back. \"Do I need to tell all these executive women that your pussy is nice but it's not made out of gold?\"\n\nI let out an involuntary laugh at her inappropriate and incredibly ill-timed joke. Jackie has always had a way to bring levity to any situation and apparently one as dire as this is no exception.\n\n\"I can't believe you're making jokes right now,\" I reply.\n\n\"You know I can't help myself. But I still don't think you should tell them. Because I got my own information out of Maddy.\"\n\n\"And you couldn't have led with that?\" I ask, leaning forward in my chair.\n\n\"Actually, the other information seemed more pertinent. But as I said, Maddy was drunk and is apparently pretty forthcoming. Turns out Lauren's intel on the account was more than spot-on.\"\n\n\"Did you just compliment Lauren?\" I ask.\n\n\"Don't push it,\" she responds with an eye roll. \"Anyway, Maddy implied that Olivia has a major up-hill battle to fight with the board if she wants to change agencies. Simon's name came up briefly and I guess he's gaining influence with the other board members. It sounds like Olivia hasn't made a lot of friends there yet.\"\n\n\"But she's so likable,\" I say in a sarcastic tone that causes a smile to cross Jackie's face. \"That kind of sounds like what Lauren has described Richard Ellison's relationship with the board to be like.\"\n\n\"Exactly. She didn't say much else, but it was pretty clear that Altitude is the front runner for everyone but Olivia.\"\n\n\"So, we stay the course?\" I ask.\n\n\"We stay the course,\" she replies. \"We focus on Alan and Simon Simpson and we showcase why they should stay the course and maintain Altitude.\"\n\n\"Maybe you should do the pitch. You already have your closing line.\"\n\n\"Hell no. I color. You present. We win.\"\n\n\"We win,\" I repeat.\n\nThough my stomach is a mess with a sense of dread for what's to come, it also feels nice to have Jackie back in my corner, even for just a moment. I won't pretend we still don't have things to work through, but at least this gives me a sliver of hope that one day we can be friends again.\n\n\"And if Olivia reveals the truth?\" I ask.\n\n\"If she even knows the truth, and then reveals it, we'll deal with it. But telling them now won't help anything.\"\n\n\"Okay,\" I reply with a nod.\n\n\"I have to go. I have a design review in five,\" she says as she glances to the clock on my wall. When she gets to my door, she turns around before opening it. \"I know it probably seems like I did this on purpose. Because of what's happened. But I didn't. And I am really sorry.\"\n\nThe look she's giving me is the softest one I've seen on her face in a while and it makes my heart ache for our friendship. I wish Jackie would just come back to my office after her meeting so we can talk more about everything, but I know we're not there yet.\n\n\"I know that. Thank you for telling me. You didn't have to.\"\n\nJackie nods. \"And I don't think Olivia and Lauren are cut from the same cloth anymore. In case that matters. Olivia sucks,\" she adds.\n\nJackie has never been one to sparse her words but her choice of verb makes me laugh.\n\n\"She does suck,\" I reply back.\n\nJackie gives me one small smile before she turns and leaves the office. I need to take out my laptop and actually get a start on the day, but I know I'm too distracted so I simply lean back in my chair and close my eyes.\n\nI still don't know if I agree with Jackie's assessment on not telling Michelle and Guy. Altitude has always pushed transparency as a key company attribute. But as Jackie pointed out, this is more than just an account to the agency. This is a game-changing retainer and I'm just a fleck of dust in the way. I could see them preemptively taking me off the account, or worse, just to appease Olivia.\n\nI know it's a long shot that Maddy doesn't remember their conversation. Deep down I know that's unlikely considering Jackie's own recollection. The only chance\n\nI have for my relationship with Lauren to remain hidden is if Maddy doesn't tell Olivia anything\u2014after all, I'm sure Olivia wouldn't be happy to know that Maddy told Jackie the things she did.\n\nI open my eyes and shake myself out of my jumbled thoughts. I have a presentation to finalize with only two weeks left before the pitch. Two weeks to figure out the best way to convince Alan and Simon Simpson that Altitude is the best agency for the job.\n\nAnd two weeks to wait and hope Olivia Ellison doesn't completely ruin my life."
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "bdsm",
        "dominance",
        "girl on girl",
        "lesbian",
        "office",
        "romance",
        "sex",
        "submission"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/miss-callahan-ch-16-20"
}