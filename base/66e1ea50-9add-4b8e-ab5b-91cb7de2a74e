{
    "title": "Glamping",
    "pages": [
        "This story involves light female domination, light transvestism/gender ambiguity, and implied cuckolding. If these themes bother you please feel free to not read. \n\nI couldn't believe I couldn't find them. I remembered packing them. I finally turned to Julie who was getting impatient waiting for me. I'd overslept -- I'm definitely not a morning person! \n\n\"Did you see my briefs, baby?\"\n\n\"No... you forgot to pack them, didn't you?\"\n\nShe had a mischievous look in her eyes which made me a little suspicious but the weight of her stare was bearing down on me. \n\nShe tossed me something that landed on the floor next to my bag. \n\n\"We were supposed to be at the trailhead 20 minutes ago, sleepy princess. Bobby and Jo are probably waiting for us. I'm tired of waiting for you -- just put those on.\"\n\nI was annoyed by the honorific but hid it. I picked up what she had tossed. It was a black pair of her underwear. Boy shorts. Not too frilly or anything... frankly they weren't that different from my briefs but still... I wasn't going to put on her panties. I dropped them and grabbed my shorts.\n\n\"I'll just go commando.\"\n\n\"Don't even think about it. Put them on or you'll chafe. It's a 10 mile hike. Hurry!\"\n\nI knew she'd be pissed all day if I delayed further and figured she was probably right. Plus, I had blown a ton of money on the fancy cabin we'd spent the night in and wanted to fuck her hard tonight so I gave in and put them on. We'd been doing this glamping thing for the last few years and I was starting to get into it. Julie loved the outdoors but I didn't like roughing it. Fucking in a little tent... fuck that. Glamping allowed us to meet in the middle. Out all day in nature but civilization at night. \n\nJulie gave me a cat whistle and slapped my ass on the way out of the cabin but otherwise the rest of the morning was uneventful. We met our friends at the trailhead and had a great hike. Afterwards we all went out for a few beers and BBQ. It was a great time but at one point Julie leaned into me as she grabbed my upper thigh and whispered in my ear, \"did my sleepy princess like her panties?\"\n\nI blushed and retorted with a quiet \"fuck you.\" She played it off by laughing and winking at me. I was a little pissed. More embarrassed I guess. I could feel myself getting hard though and I took it out on her that night. We fucked hard and long. I even pinned her down and all but had my cock in her ass but she fucking cock blocked that... still I fucked her mouth and pussy good. We were up until about 2:00 in the morning fucking and drinking and I passed out hard after I came the second time.\n\n------\n\nI don't know how many times I snoozed the next morning or how many times Julie told me to get my ass out of bed. As I mentioned, I'm not a morning person whereas Julie is one of those crazy people that can run 10 miles at 6:00 in the morning after partying all night. \n\n\"Fuck!\" I yelled as I opened my eyes.. Julie had my balls in hand and was squeezing just enough to wake me the fuck up. \n\n\"I've loaded up the jeep already, princess. I'm leaving in 5 minutes -- I'm not getting stuck in traffic like last year.\"\n\nJulie let go of my family jewels and walked out. I looked at the clock and saw it was 6:00. Jesus, it was ridiculously early and it was only a 3 hour drive back. But that was Julie... bang, bang, bang. Up and at them first thing in the morning. I heard our jeep start up and jumped out of bed. She really had packed everything and loaded the car. She'd left my naked ass a pair of clothes but right there on top of my jeans was a pink thong of hers. All lacy and shit. Fuck that I thought as I put on my shirt and jeans. Jammed my feet into my kicks and put the panties in my pocket as I ran out of the cabin. \n\nJulie had the jeep warmed up and ready to go in the dark parking lot. I grabbed the passenger door but it wouldn't open. Julie cracked the window a tiny bit and looked my way. She was wearing my old John Deere baseball cap. She said, \"My princess is going to show me her panties before she gets in.\"\n\nI grabbed the panties and held them against the window as I said, \"fuck that, let me in. It's cold out here!\"\n\nShe persisted, \"put on those panties, sleepy princess.\"\n\nShe started slowly driving away but then stopped. I ran up and before I could say anything she laughed and said, \"Get in my headlights and put your pretty little panties on where I can watch you or you'll be going home with Bobby and Jo.\"\n\nI knew I was defeated. Julie had a little crazy in her and while I knew she wouldn't leave me behind, I also knew she'd fuck with me for a while just for shits and giggles and I was fucking cold. The parking lot was totally empty and no lights were on in the surrounding hotel or cabins so I swallowed my pride and stepped in front of the headlights, took down my jeans and began to put the panties on. I jumped and nearly fell over when Julie pressed hard on the horn. I yanked the panties on and my jeans over them and ran back to the jeep before anyone might wake up and look out. \n\nJulie let me in this time with a big shit eating grin on her face. I was mad and about to yell at her when she leaned over and put her hand in my lap -- to my chagrin I was fucking hard and that shut me up. She didn't say a word but just turned back and drove off. \n\nI couldn't help but admire how easily she got in my head. No-one ever controlled me like she did. The thing is, if I got mad she'd just look at me with those baby blues, say she was just joking, and I'd melt. \n\nI sulked for a bit but I was so tired that I fell asleep quickly. \n\nI woke up a couple of hours later. We were stopped at a gas station and Julie was filling us up. After she grabbed a bag out of the back and went into the gas station. She was gone forever. When she finally came back, she tossed her bag in and then got back into the driver's seat. I didn't say anything as I suddenly became very self conscious that I was still wearing the panties. The sun was bright and she had her aviator sunglasses on. She was beautiful but with my baseball cap on and the sunglasses she had a slightly masculine feel to her. That went up a notch when she put an unlit cigar in her mouth. It was a crazy quirk but my little Julie liked smoking cigars occasionally. \n\nJulie drove off as she turned to me and said in a masculine Southern drawl, \"Good morning boy.\" She sounded just like Foghorn Leghorn. Julie was an actress and great at accents and voices. \n\nI didn't respond. I was still waking up from my car nap and not in the mood for games. \n\n\"Speak up boy.\"\n\nI was too tired for this but let out a reluctant, \"I'm good.\"\n\n\"Is that right boy? You good, huh?\"\n\nShe reached over, grabbed my jaw and turned my head towards her, \"I bet those purty lips of yours are good. You must be right popular boy.\"\n\nI lifted my head to escape her clutches and looked out my window. I thought about what was going on. Julie had just starred in an off broadway play in which she played the gorgeous mistress of a Confederate Colonel in Civil War Virginia. Her leading man was really attractive and they had a couple of steamy love scenes in the play. Her overactive libido had gone even further up when rehearsals had started. I enjoyed the rewards even though the ember that lit the fire made me jealous. Julie was brutally honest and didn't hide that she was attracted to him. I knew she'd never cheat on me but it didn't stop her from fucking with me -- doing things like telling me to fuck her like the Colonel when we were fucking. \n\nI went to the premier with a bunch of friends. It was torture watching her with the Colonel. I was embarrassed but hard as a rock while I watched the Colonel pawing her ass and breasts and passionately kissing her. To make it worse all our friends kept looking at me and teased me endlessly afterwards. I could feel my erection throbbing -- I hated myself for being wired that way. I saw the show a handful more times -- usually with friends and my reaction was always the same. \n\nI stopped daydreaming and snapped back into reality. She was playing the Colonel and that was going to put me in the role of her mistress or sleepy princess... but now she was calling me 'boy'... I knew I was overthinking things. And fuck... I still had those panties on... And a damn hard on that wouldn't quit.\n\nWe were getting close to home. Julie got off the freeway and at a red light she turned to me.\n\n\"I do declare boy, looks like you are coping with one helluva e-reckshun.\"\n\nI blushed.\n\n\"Let me see what you packing boy.\"\n\nI looked at her with uncertainty but couldn't read her eyes behind those sunglasses. Her lips were wrapped around the cigar, nonetheless I felt a subtle snear. \n\n\"Don't be shy boy... it's just us boys... you slower than molasses on a winter day. Pull down them dungarees or I got half a mind to whip you to tarnation.\"\n\nI didn't want to. I wasn't going to... but my hands were operating on their own. It felt surreal as I unzipped and undid my belt. I shimmied up a bit and yanked my jeans down to my knees. My cheeks were beet red as I felt her stare at my hard on popping out from under the panties.\n\n\"Oh, so you one of them, boy? Now I know why you so shy. I do wonder how your hot little girlfriend would feel about your unholy proclivities.\"\n\nThe light turned green and we started moving again.\n\n\"Unzip me boy.\"\n\nI kept obeying her. I felt like my free will was gone. She unsnapped her jeans and I leaned over and unzipped them. \n\nShe had my briefs on! I laughed. She was clever. I sat back in my seat and was about to put my jeans back on. \n\n\"You ain't done boy. Pull down these damn skivvies. You hear boy?\"\n\nI looked again at her crotch and noted a bulge this time. My head spun and my mouth went dry as I leaned over and touched her. I was pretty sure it was a strap-on.\n\n\"Don't be shy boy, pull my cock out and see what the Colonel is cooking with.\"\n\nI felt a punch in my gut when she called herself the Colonel but went ahead and pulled the strap-on out. It was big.\n\nShe was still driving and without skipping a beat she grabbed the back of my head and pulled me into her lap. I couldn't believe I opened my mouth... but I did. She kept the pressure on and soon the phallus hit the back of my throat and I gagged. I tried to sit up but I had no leverage and she was easily able to keep me going down on her with her hand on my head.\n\n\"The Colonel has a big cock, yessiree. It's been driving your slutty girlfriend crazy in rehearsals.\"\n\nShe pushed down hard again and I gagged once more. She kept me down for a half beat longer than the time before but then let up a bit as I gagged. She repeated this a bunch more times -- holding me down longer and with more force each time and never taking the cock all the way out of my mouth. My eyes were so teary I could barely see the strands of my saliva emanating from the faux cock to my mouth. My breathing was ragged and short as the large phallus almost entirely prevented me from breathing through my mouth. \n\nI felt the car stop and it got darker as I heard our garage door closing. We were home. Julie put her seat back a bit while maintaining a firm grip on my head. \n\n\"Boy, you know why the Good Lord gave you ears?\"\n\nAs she said it, she grabbed both my ears and started bobbing my head up and down on her cock. She quickly ramped up the speed and force. On every downstroke, her cock would bruise the back of my throat. Soon I noticed I was making the 'guh guh guh' noise that porn stars make when they are being brutally mouthfucked. The more pathetic I felt, the harder I got. \n\nI'd done this to Julie before but never for long. She kept me going and going. I was in such an awkward position. I couldn't really move my arms and the emergency brake was digging into my ribs. I didn't know how much longer I could take it. Julie sensed my struggles and let up a bit. She raised the steering wheel, put her seat back as far as it would go, and told me to kneel in front of her. I did as she said. There wasn't enough room but I managed to squeeze myself in. The ribbed driver's mat started cutting into my knees. Once in position she leaned forward and grabbed my hard cock. \n\nI gasped as she rubbed the head. I could tell I was leaking pre-cum. I was desperate to cum.\n\n\"You a right happy cocksucker, ain't you boy?\n\nI felt utterly humiliated as I nodded my head yes.\n\n\"You want my cum in the back of your throat don't you boy?\"\n\nI nodded again. \n\n\"You bes' address the Colonel properly and beg to swallow his fat cock and cum.\"\n\nI hesitated. I knew that she wanted me to fully take on this role. We used to role play a bit -- stupid stuff like student/teacher as it suited her dramatic flair but I could never get into character. I was too self conscious. She got frustrated with me and eventually we stopped. I loved Julie and in the fog of sexual arousal I gave in and became what she desired in that moment. \n\nJulie slapped me with her cock and then rubbed it all over my face.\n\n\"Beg for it boy.\"\n\nIt was barely more than a whisper but I said it. I knew what she really wanted was for me to call her Colonel.\n\nI felt my cock spasm and butterflies in my stomach as I said, \"Please Colonel, let me suck your fat cock and swallow your cum.\" \n\n\"What you think boy? What you think your hot little girlfriend would think if she knew you got the mouth of a dime store hooker. She done make me so hard every time I kissed her. She'd always gasp like a debutante surprised by a water moccasin when she felt my big cock stabbing her thigh. I'd say the dirtiest things to her and she'd just sigh and say 'please'. That night at the premiere... You remember boy?\"\n\nI nodded.\n\n\"I told your dirty little Julie that I was going to fuck her in front of you. Make you my cuckold. I got the measure of your jib and I made her swear she would never let anyone fuck her tight little ass but me... You hear that boy? She promised I owned her ass... She tol' me I made her wetter than catfish soup. Now beg the Colonel to fuck your Julie. To fuck her mouth. Her pussy. Her ass. Beg for it boy.\"\n\nI couldn't stop myself, \"Please Colonel... fuck my Julie. Please... I'll... I'll swallow you so you can fuck her... fuck her... please.\"\n\nJulie had a huge smile as I opened my mouth and eagerly swallowed her cock without her help. I tried to look up at her like I'd made so many girls do to me when I fucked their mouth. I forced the cock into the back of my throat and made myself gag. I tried several more times and gagged over and over but finally I got the cock into my throat. Somehow Julie felt it and she leaned forward again. She put one hand on the back of my head and started thrusting with her hips to fuck my throat. She grabbed my cock with her other hand and started jacking me roughly. I wasn't going to last long.\n\nShe yelled, \"I'm cumming boy!!!\" right as I started cumming. She held me down on her cock as I moaned around it while she collected my cum in her hand. \n\nShe let go of my head and I coughed and sniffled as her cock left my throat. I wiped my eyes and saw her coating her cock with my cum. I slowly caught my breath and could feel my cheeks flush a deep red. I couldn't believe what had just happened. It was hard to read her with her sunglasses still on. She lit her cigar and took several deep puffs blowing the smoke towards me. \n\nIn a smug Southern drawl she said, \"hunting dogs hunt. woodchucks chuck wood. Cum swallowers swallow cum... I want to watch you lick the Colonel's cock clean.\" \n\nI didn't want to... my heightened arousal was transiently sated allowing my self consciousness to come rushing back... but I felt so defeated... After the things I said... What did she think of me now? I gave in.\n\nI looked up at her as I licked my cum off. It had a salty flavor and an odd texture. It was hard to swallow and Julie enjoyed watching my struggles. She kept pointing out gobs I'd missed and even made me lick her fingers clean.\n\n\"The Colonel's cum is finger licking good, ain't it boy?\"\n\nI just looked up at her and continued fellating her fingers. \n\nOnce she was satisfied I'd gotten it all she told me to get in the backseat as she opened her door and stepped out. I obeyed once more. I climbed between the front seats into the back and then opened the door for Julie. She pulled a little bottle out of her pocket -- I was pretty sure it was lube and briefly marveled at her planning and execution.\n\n\"Flip over boy. That dread you may be feeling is rightfully there but shall be overcome by inevitability.\" She snickered. The cold lube hit my ass. She got in position awkwardly --- the back seat wasn't wide. Once she had the cock in place she told me to back up on it. I did slowly all the while thinking how crazy it was -- she'd never let me fuck her ass but now she was taking mine. It hurt like hell but I impaled myself with effort. My skin had a cold sweat as I kept moving back a little bit at a time. Once she was satisfied, she plunged into me balls deep. She quickly built up speed, force, and rhythm. She was rough with me -- slapping my ass hard and bucking into me with groans of exertion. She pulled my head back and held her hand over my mouth and nose so I couldn't breath -- occasionally lifting her hand to offer me the briefest moments of respite. All the while, she was whispering the dirtiest things in my ear. Words so lewd as to never be repeatable. I have no idea how long it lasted but eventually she collapsed onto my back -- sweaty and hyperventilating.\n\nOnce she caught her breath, she kissed my back and I could feel her tenderness again. I heard her regular voice for the first time since the gas station. \n\nShe said, \"meet me in the bedroom\" and hopped out of the jeep. It took me a few minutes to exit the jeep as my jeans were down to my ankles. I eventually maneuvered out. I went into the guest bathroom to clean up a bit and then went into the bedroom. Julie was coming in from the master bathroom. She had taken off the baseball cap and sunglasses. She was smoking her cigar and had poured herself a Scotch neat. She took a sip as she sat on the bed. She gestured for me to sit next to her.\n\n\"That was so hot.\" I was relieved to hear still talking in her normal voice. \n\nI nodded. I didn't know what to say. \n\n\"Are you ok?\"\n\nI nodded again.\n\n\"I love you. I loved that. I loved seeing you lose control. I loved feeling power over you.\"\n\nI could feel my cheeks flushing again.\n\n\"You liked it?\"\n\nI nodded. \n\n\"I don't know... it was a lot... but... I mean... I guess?\"\n\n\"You were harder than I've ever seen you.\"\n\n\"Yeah.\" I admitted with resignation. \n\n\"Are we good? Did I... did I go too far... are you feeling... I don't know... are we good?\"\n\nJulie leaned in and hugged me, \"we are good baby. I loved it. Love, love, love, loved it. I couldn't believe you got that thing into your throat and ass! Are you sore?\"\n\n\"Yeah\" I admitted shyly.\n\nShe beamed with pride, \"ass or throat?\"\n\n\"Both.\"\n\nShe kissed me deeply.\n\nShe laughed and said, \"You taste like cum.\"\n\nI blushed again. \n\nI continued, \"Are you and the Colonel... going to... I know you like him... and think he's hot. And I said things... \"\n\nWhen we first started dating Julie had a couple of fuck buddies that she continued to see. She was open about it and told me she was cool with me fucking around but I was too into her to be interested in anyone else. She liked making me jealous as she could feel the power it gave her over me. Even after we got serious and she stopped fucking others in the flesh she would still fuck with my head. Just the weekend before we were dancing at a wedding and she whispered in my ear about how she had just blown the groom and best man and they had both cum in her mouth. I hated myself for getting as hard as I did but I pulled her in as she confessed her tale. She started kissing me passionately, occasionally stopping to ask me if I could still taste their cum in her mouth.It was all fantasy but in the moment it felt so real.",
        "So it goes to say I always wondered when something like that might really happen. \n\n\"Is that what you need?\" I asked again nervously. \n\nShe reached out and touched my leg, \"yes baby. He's hot and sexier than anyone I ever met. Dumb as a bag of rocks and boring but he is really big. Really big. I haven't seen it but he would get hard all the time when we rehearsed and I heard from a casting agent he fucked... \"\n\nI could see the lust in her eyes. \n\n\"I don't know for sure how big but he's definitely bigger than you.\"\n\nI couldn't believe I was getting hard out of jealousy again. Julie could tell and rubbed my neck. \n\n\"I really want to fuck him in front of you. I want to have him come over soon. I texted him earlier and he's free tonight and he's cool with you watching.\"\n\nMy mouth was bone dry and my erection struggled to break out of my jeans.\n\n\"I'm so horny and wet that I think I could take him. I want you to lick me to get me even wetter but don't make me cum -- I want to cum on his cock. And I want you to lick me...\"\n\nJulie blushed. She was so blunt and matter of fact but sometimes little things would embarrass her.\n\n\"I want you to lick me back there... I want to try to give him my ass. I want to see how jealous you get, how hard you get watching him fuck me. And how it will drive you crazy knowing that you'll never have my ass -- that he'll be the first and only. That it will always be his whenever he wants and you'll always be the one to lick me to get me ready. I want you to put your fingers inside of my pussy and feel his cum. I want you to kiss me after I've licked his cum off your fingers. I want you to smell him on me and our sheets. I want you to fuck my pussy when he's done with me and feel his cum on your cock. I want you to try to fuck me and feel how stretched out my pussy is. I want you to hear me tell you I can't even feel you. I want you to hold me after when I'm too tired and sore from his big cock. I want you to sleep in the wet spots he makes. I want you to think of his big cock spurting into me every time you go down on me.\"\n\nShe grabbed her phone and texted him. She handed me her phone. She'd asked for a dick pic. He responded immediately. It was big. She leaned into me and held me. \n\n\"Text him.\"\n\n\"Huh?\"\n\nShe started tracing the outline of my cock. Fuck... it felt good.\n\n\"Reply baby... make him hot for me.\"\n\nThe butterflies in my stomach came back but stronger than I'd ever felt. I wasn't sure what to type so I went with the obvious, \"omg, it's huge! And the old eggplant emoji.\"\n\n\"Make him horny.\"\n\nI started typing things while pretending to be Julie about how Julie wanted to suck him and swallow his cum. Feel his cock in the back of her throat, take it in the ass. That Julie wanted me to watch and see your cum gushing out of all her holes. Occasionally, Julie would take pics of her tits, pussy, and ass and I'd send them. By this time, Julie had my cock out and was rubbing me to the brink and then slowing down. Over and over. She liked teasing me like that. She whispered in my ear, \"there's no way you are cumming tonight unless I let your cock in my stretched pussy already full of his cum.\"\n\nI groaned in heat and frustration. \n\nHer phone pinged again. The Colonel texted -- 'I'm coming over, what's your address?'\n\nI looked at Julie, \"what should I do?\"\n\nJulie looked at me and said, \"It's up to you.\"\n\nMy hands were shaking as I typed in our address."
    ],
    "authorname": "vkseverin",
    "tags": [
        "anal",
        "creampie",
        "cuckold",
        "femdom",
        "role reversal",
        "strap-on"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/glamping-1"
}