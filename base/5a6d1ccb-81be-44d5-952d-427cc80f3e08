{
    "title": "Life as a New Hire Ch. 39",
    "pages": [
        "Editing magic performed by KJ24 and Shyqash, plus contributions by the regular gang of brigands and neer-do-wells\n\nLoving your enemy is easy. You know precisely where the two of you stand\n\nJust in case anyone cares, I do not hate China or the Chinese People. As a Global Power, the PRC is fair game as a great antagonist. Not only do they have, as of 2015, the world's largest economy, largest population and a truly global Diaspora, they also have a rather totalitarian governance system that enables them to devote scary levels of resources to any endeavor they set their minds to.\n\nI usually paint all governments to be entities capable of great good (rarely achieved) and great evil (because it makes such enticing fiction). In my stories, it often falls to the people within those institutions to make judgment calls on what is the right thing to do. In my final analysis, there are no 'Evil' governments, just evil people who use the system to get what they want\n\n*****\n\n(Right where we left off)\n\n{9 pm, Tuesday, August 16th ~ 23 Days to go}\n\n{aka 2 am Wednesday, Aug. 17th ~ 22 Days to go [Havenstone time]}\n\n[The following is in Mandarin until I note otherwise]\n\n\"What are you doing?\" I struggled to keep the panic from my voice.\n\n\"Killing all these alarms,\" Zhen responded. She was grinding her teeth in frustration and fear. \"There is nothing we can do to fix those problems.\"\n\n\"My ... right rudder ... its barely responding,\" I grunted. This was fly-by-wire, not typical manual control, so my concern was entirely mental - not wanting to miss our turn south into the sole runaway on Johnston Atoll. With the steady degradation of the plane's electronics, we wouldn't make the 360 for another pass.\n\nLanding from the southern end of the runway would put the cyclone force winds behind us. There would be no way for the plane's two inexperienced pilots to make that miraculous landing happen. No, we had to approach form the north, into the winds and allow nature to slow us down.\n\n\"On it ... I'm good,\" she confirmed that her co-pilot's systems were still doing their job. \"Tell me when we are making our final approach.\" Zhen, my Seven Pillars of Heaven co-pilot (and designated assassin), couldn't see where we were going. Our avionics had perished earlier in this disaster.\n\nGoddess Dot Ishara was communicating with Goddess Sz\u00e9lAnya who was frolicking in this maelstrom; the Draconic Storm Divinity was in her element. Dot was 'in' her element as well ~ her last living mortal descendent (me) ... if you didn't count all those unborn offspring I'd been contributing to in the past few weeks.\n\n'Are you thinking about me, Wakko?' she whispered into my mind. I was Wakko Ishara. I was supposed to be Yakko, but that hadn't worked out. As the 'main girl' in the relationship between me, the leader of her Amazon House, and Yakko Ishara ~ my first Ishara ancestor ~ she earned the slot of Dot (see Warner Bros.) Ishara. \n\nOne of her earliest gifts to me was to make my mind inviolate to ALL supernatural penetration which was the reason she was bothering to ask about my thoughts and intentions.\n\n'Yes,' I thought back. 'I'm worried you are expending too much energy on my behalf, Dot.'\n\n'Opposed to leaving you alone with Sz\u00e9lAnya? I don't trust her around you. She'd make a little Dragon-offspring/avatar with you if I'm not careful.'\n\n'If you aren't careful? Don't I get a say in all of this?'\n\n'No. Trust me ... she's clingy and you are more active than a whole temple of Babylon's whores. Her mortal avatar would further bond your two legends together and your Legend is already the prop ... placed with House Ishara.' Translation: My Goddess was clingy. After all, she'd meant to say my legend was her 'property'.\n\n\"Flaps!\" Zhen yelled at me. \"Check your flaps. Mine keep shorting out.\"\n\n\"On it,\" I replied. I'd 'zoned out', so she'd screamed at me to get my attention back on task. Altitude ... 1200 meters ... which meant flaps at ... fuck if I knew.\n\n\"What do I set them ... Oh Shit!\" I realized I'd forgotten something horribly imperiling.\n\n\"What?\" Zhen shot me a furious look.\n\n\"Fuel! We've got to start dumping the fuel!\" I screamed.\n\n\"Why?\" \n\n\"Fireball, Zhen. If we hit hard, this bitch will barbeque us,\" I spit the words. \"Don't you watch any airplane crash movies?\" I added.\n\n\"The Airbus 350 has plenty of ... safeguards ...\"\n\n\"You mean like all the other ones that have failed us in the past half hour?\"\n\n\"Opening main tanks #1 and #2,\" she grumbled. \"If we are struck by another lightning bolt we could blow up in mid-air.\"\n\n\"Won't happen,\" I feebly jested. \"The Storm Goddess loves me.\"\n\n\"Does she love my brother and I?\"\n\n\"Nah. She wants you and everyone else on this plane dead ... but she's humoring me right now.\"\n\n\"Flaps,\" she reminded me. \"Why would she care about you?\"\n\n\"Having no other useful skills, I am a truly remarkable lover.\"\n\nZhen spared me a blistering look.\n\n\"You have seized this aircraft from my brother, me and forty of our best Special Operations Strike Warriors. That does NOT qualify you as 'unskilled',\" she lambasted me.\n\n\"Oh no? You should see a 'real' Amazon in action,\" I teased her. \"I'm just an intern who hasn't yet completed his 84 day trial period.\" I also worked the flaps.\n\n\"Too much,\" she snapped. \"If we drop below 400 kph, these winds will slam us into the Pacific.\"\n\nI was adjusting the flaps appropriately as we began our final roll to the left when a cloud-to-cloud bolt of electricity coursed through our craft. We didn't blow up.\n\n\"Thank you, Sz\u00e9lAnya,\" I whispered.\n\n\"What?\" Zhen worried. Fucking up now would be the end of us all.\n\n'Your gratitude is overdue, C\u00e1el,' Sz\u00e9lAnya slipped her murmur into the crashing thunder and another lash of raw, natural fury. 'We will talk later.'\n\n\"I thought you said she loves you.\"\n\n\"Ummm ... did I forget to mention I told her I was going out for pizza and never called her back?\"\n\n\"That makes no sense,\" Zhen glared at me briefly. I was gifted with a visual of our plane in perspective to the runway. Yay ... five meter waves were smashing into the atoll. I adjusted our yaw to the right.\n\n\"We are three kilometers out,\" I advised her.\n\n\"Flaps ... spoilers,\" I went over my limited Alal-knowledge. This stuff worked on a piston driven commercial liner and it was the only flight data I had.\n\n\"Landing gear,\" Zhen responded. She had to throttle up a little because all that drag was cutting into our speed.\n\n'You are being blown too far to the east,' Sz\u00e9lAnya advised. I did the best I could.\n\n\"What are you doing?\" Zhen was starting to sweat.\n\n\"Responding to divine intervention.\"\n\n\"I ... I see it!\" Zhen's panic turned to exultation as she could finally make out the pale concrete runway surrounded by the angry sea.\n\nToo disasters hit us simultaneously.\n\n\"The left landing gear is not fully deployed,\" Zhen cautioned me.\n\n\"We are coming in too fast anyway,\" I dryly noted. The Goddess had brought me in on target, but she knew nothing about aircraft aeronautics.\n\nThe Airbus came down too hard, too fast and our left landing gear snapped on impact. Sarrat Irkalli's parting gift was decay. Every design weak point gave in. The front fuselage broke apart, my hand on the dagger slipped and the power died. The front 25% of the plane spun off to the west while the remainder shot down the runway and off the southern end of the island.\n\nSadly we went off into the lagoon between the western side and the barrier reef. In a delayed bit of good fortune, our careening section went head to head against a massive storm surge. \n\n\"Go!\" I screamed at Zhen. \n\nShe snatched up her Jian that she had used to pin the undead necromancer Tsu. I was right behind her, though I did stop to retrieve Sarrat Irkalli's dagger and pluck the two bone reliquaries from his neck before following Zhen's tight, athletic buns out of the cockpit and toward Aya. My diminutive better half was still in her seatbelt and clutching the medical bag to her chest.\n\n[English] \"C\u00e1el, I think we are sinking,\" she noted with a twinge of concern and more courage than I felt like utilizing. As Zhen was rescuing her brother the enormity of my mistake sunk in. All the Seven Pillars people were unconscious thus unable to save themselves from drowning. Aya's survival came first. I'd worried about my 'would-be executioners' later.\n\nI swept up Aya so fast it took me a second to realize she was poking me. She had retrieved the trinkets Felix had given Mu - our phone cards, my Dot-treats and my Amazon blade. I quickly strapped the blade to my arm. The water was rushing in through the severed back section.\n\nI turned to see Zhen struggling with her brother. Her look said it all. She expected them both to die. She wouldn't abandon him to save herself and the waves were too rough to make it with him.\n\n\"Get as far as you can,\" I shouted to her over the typhoon strength winds. \"I'll come back for you.\"\n\nHer face expressed how little faith she put in my promise. Zhen had no choice left to her. I cut off two lengths of seat-belt to give Aya a harness to wrap over my shoulder and opposite underarm. I used the second piece to create her harness I linked with my own. {Back to English as the primary language}\n\n\"He'll come back for you,\" Aya tried to assure Zhen while I worked.\n\n\"Aya, take a deep breath then expel it,\" I advised. The second she did I dove into the water. I had never attempted to swim in water this nasty, but I had been dumped into a white water rapids before. That was the best I had.\n\nSomehow in the madness, I pointed myself in the right direction. Once more, the storm came to my rescue. Two monster waves picked us up and pushed us toward the edge of the runway.\n\n'Go to the north end of the island,' Ishara told me. There is a building there that will shelter you ... and C\u00e1el ... I must leave now. Don't do it.'\n\n'I can't not try,' I replied. 'Can you help Aya?' I gave one last appeal. No reply. I twisted southward to locate the next monster wave. My precious cargo pressed tightly to my upper torso, I flipped over so that my feet were facing toward the onrushing runway. I'm not as dumb as I look, or sound.\n\nI bent my knees in the same way they instruct you when you go cliff diving. Up we went. I pulled Aya and I as deep into the water as possible ... up ... up ... crest and then down-down-down. My bare right foot hit something jagged and sharp. I'd worry about bleeding later. The momentum of that contact tried to tilt me head-first, but I resisted.\n\nMy left foot slapped down on a hard, smooth, granular surface - the sea wall. Now I swam backwards with my free arm while I raced to get my right foot back under me. My body ended up surging forward, yet I was in control of my movements once more. I rolled with the impact, taking the brunt to my left shoulder while shielding Aya with my right. Three rolls and I was on my feet again.\n\n\"Aya!\" I beseeched my companion.\n\n\"That was fun,\" she yelled back over the hurricane force winds. \"Let's try to do this next year ...\" the rest was lost. I kept staggering forward in about a foot of water that the storm had flooded over the land. I looked behind me. \n\nThe next wave was unfriendly. The one behind that one appeared to be a lot like what I imagined a Berlin Wall-sized tombstone would look like. I ran. I survived the first wave then gave Aya a cautionary squeeze. I felt her tiny lungs inflate, soak up the salt-water spray and oxygen then flush the air back out. \n\nA few more steps then we plunged back sideways into the monster current ~ the wave had already crashed.\n\n\"What did you say?\" I shook Aya as we surfaced once more.\n\n\"...next year ... much later next year,\" she grinned up at me.\n\n\"Aya, do you think you can ...\"\n\n\"Yes. Go find them. You gave her your word,\" she hugged me.\n\n\"Stay on the runway - head north - Dot says there is a building up there that is still intact. Aya ... take this,\" I handed her the pistol and a spare mag.\n\n\"Do you promise you won't let me die today?\" she shouted over the winds. I had to think about that. Aya rammed the pistol and magazine into her medical bag's side pocket. Oaths had their own power and maybe, just maybe, Dot Ishara would help me honor this one.\n\n\"I swear to you, I will not let you die today,\" I yelled back.\n\n\"Then go and hurry,\" she hugged me as I cut her loose. \"She needs you more than I do. Go!\" With that, we separated. Aya slugged forward a few steps, was staggered by another wave then turned and gave me her 'thumbs up'. \n\nI turned to the south and the blinding winds and terrible surf. I had to try. Alal kicked in. Jumbo commercial airliners = no help. Shipwrecks = he'd survived a few. I mapped out in my mind the waves, winds and their direction relative to the plane. I could still make out its half-submerged shape.\n\nThe edge of the runway had a U-shaped seawall which created a peak that channeled the waves. I couldn't see the structure itself due to the high tide, but I could locate the wall by watching the waves break. If I could get to the outside of the eastern peak, I would have an easier time going about this rescue. Also, if Zhen wasn't brought in by the same waves that saved Aya and I, she would be driven to the northwest, parallel to the island.\n\nI could intercept them. I'd effective killed everyone else. Maybe ... I dove in.\n\n 'Don't!' \n\n'Too late, Sz\u00e9lAnya'. I vaulted off the semi-submerged sea wall, then let the undertow pull me along the broken coral rocks the Navy had put there when they expanded the airfield in the 1960's.\n\nI kept my hands on the rocks, rock climbing in reverse. The waves passing overhead tried to pluck me up and return me to the land. I moved as rapidly as I could, until my muscles ached from the water's chill and oxygen starvation. My lungs were on fire. I let the next wave pull me up.\n\nFortune favors the foolish should be my new motto. I broke the surface just after another large wave passed by. I kept my breathing short and steady, despite my burning hunger for air. Gulping air would only earn me a mouthful of salt water. I took the reprieve in the storm's efforts to drown me.\n\nThe 'foolish' was waiting for me four meters away, slightly behind me and to the East. Zhen was being dragged past the atoll. I kept one eye on her progress and the other on the waves. A monster rolled up, I dove under and thus resurfaced less than two meters away. Zhen had Mu in a classic rescue swim position. He was still likely to suffocate in this downpour.\n\nThe look in her eyes was ... pure confliction. I cut through the last bit of ocean to be at her side. My first action was to point to the next tidal beast heading for us.\n\n[Mandarin] \"I've got him. Dive beneath the wave,\" I hollered. Had she resisted, all three of us would have been screwed. She didn't.\n\nI took another deep breathe then sort of freaked her out. I clamped my mouth over Mu's and expelled my air into his lungs. My right arm snaked under his left with my hand grabbing the back of his head. I shoved his head tightly against my face, pressing his nose shut, then dove. Zhen was right behind me.\n\nAfter that, we had our routine down. Zhen took Mu every fourth wave. Breathing for both him and me was tough. I'd take him back for the fifth and slowly we made ourselves to the eastern shore. I hit first, fell flat on my face but kept a hold on Mu. I temporarily lost sight of Zhen. One life at a time.\n\nI lugged Mu up, staggered his unconscious and my exhausted forms a few feet and then was toppled by yet another wall of water. This time, when I returned to a standing position, I check Mu's breathing. He would make it. I few more steps - another wave. I kept my footing that time. Another ... Zhen came careening our way from the North. The waves had swept her passed us.\n\nZhen immediately looped her arm under Mu's right arm. That allowed her, me and our shared burden to slog another meter inland, then the next wave caught up with us. Zhen fell; I stumbled, but righted myself and thus kept Mu from being washed away. Zhen rolled a few feet forward, rebounded up, only to be shoved away when a gust of wind hit us.\n\nOn her next attempt, she rejoined us. From that point onward, we were far enough away from the land's end so that we were slogging through standing water and could resist the waves that impacted us.\n\n[Mandarin] \"You came back,\" she shouted.\n\nThere were all kinds of romantic, chivalric and very true responses to that. I chose a half-lie. [Mandarin] \"I really wanted to see your tits one more time,\" I yelled. The looks she gave me was priceless. She was convinced I was a lunatic ~ no doubt about it. \n\nWhile she puzzled out her reaction/retort, we chanced upon a Quonset hut. In its lee, we caught a break from the worst of the wind. We also picked up a little Epona who had made the same logical choice (to get out of the wind) as we had. My heart leapt for joy. She was grinning like an impish hellion as she tried to tell me something.\n\nI leaned down until her lips were touching my ear.\n\n\"I forgot to pack my swimsuit,\" she chortled. \n\n\"It's probably sitting at home along with my surfboard,\" I kissed her on the forehead. \"How about we get inside - somewhere?\" Aya nodded.\n\n[Mandarin] \"Let's go,\" I roared. Zhen nodded briefly. We turned Mu around so we would be dragging him with his back to the winds. The journey to the structure Sz\u00e9lAnya had pointed me at (the JOC building) took over an hour and a half to cover the two kilometers. Along the way, Aya discovered her inner Peter Pan.\n\nThat was the childish fiction I was going to use to explain what she did when I regaled this episode to her Mother, assuming we made it back. In common parlance, a gust of wind that must have been ~150 kph picked her up and off she went. Hell, I'd honored my oath to Zhen. I dropped Mu and raced after my own personal good luck fairy. \n\nA freak micro-burst, shot Aya up so high I lost track of her in the rain. \n\n'Please'.\n\nI saw my tiny human javelin plummeting to earth several meters away. Aya had refused to mitigate her fate by releasing the medical bag. I jumped, caught her and took another hard spill to the ground, Aya on top of me. She said something to me.\n\nI made it back to my knees, clutching a standing Aya firmly to my chest.\n\n\"I said 'I've had enough fun for today,\" she sputtered. \"Can we go inside now?\"\n\n'You now owe me a life ... I go ...'\n\n'Thank you'. If she heard me, she didn't acknowledge it. The storm didn't relent its assault, that was for sure.\n\nI couldn't risk losing Aya again. I had placed Zhen and Mu on solid ground so she returned to being my top priority. I slogged my way through the typhoon - cyclone - 'what have you', only to find a solid steel door between Aya and safety. I felt volcanic fury building up inside me. Then I remembered I still had a few firearms ...\n\nThe QCW spoke and the door popped opened. I raced around the first interior corner, deposited Aya, ran back to the door, reverse course, raced back to Aya, kissed her cheek then ran back out into the blinding rain and battering winds. Zhen was right where I'd left her. She had relied on me coming back, damn her.\n\n(The JSOC Building)\n\nFive minutes later, I had the Seven Pillars twins inside and the door wedged shut. We were all temporarily safe. Here and there small puddles of water had formed from leaks above, but otherwise the structure was solid, sound and safe. Zhen and Mu were on the opposite side of the room. After she tended to her brother, she looked my way.\n\nI took the medical bag from a wide-eyed and happy Aya.\n\n\"We are down to two of them,\" she shivered. \"Perhaps you should ask her to surrender now, while they still can?\" I snorted then chuckled.\n\n\"Do you really think the proud scions of Duan will bow before the Amazons?\" I asked her. Aya fatigued mind worked that question over.",
        "\"No, you are right. I don't think they are smart enough to know when they are beat. C\u00e1el, they called me 'Ch\u01d2ul\u00f2u de cu\u00f2w\u00f9' ... or something like that,\" Aya kept her eyes on Zhen. \"What does that mean?\" It took me a second to piece that together. You can tell a great deal about people if you catch them talking about you behind your backs ... or when they think you can't understand what they are saying.\n\n\"Ugly Bug,\" I translated. Aya snorted.\n\n\"That was rude. We can call her 'L\u00fas\u00ecla ninda',\" she proclaimed loud enough for Zhen to hear, \"and we can call him Amar.\" \n\nI had to applaud her choice of names for our would-be killers. \n\nSee, L\u00fas\u00ecla ninda roughly translated from Amazon to English as 'cupcake'. Amar was Amazon for 'calf' which was a play on his Mandarin name - 'Mu'.\n\n\"Dumu?\" I indicated her. Aya's eyes sparkled. Duma was the diminutive for 'daughter'.\n\n\"Atta,\" she murmured back. That was 'respectful Father'; a title no Amazon girl had addressed a man with in ... well maybe, ever. The term was largely religious and only used in the terms of female divinities referring to divine paternals.\n\n\"Take the gun,\" I withdrew the QSW-06 from the medical bag. \"I'm going to take a look at Mu.\"\n\nI wasn't a surgeon, most of my medical skills were self-taught (I get hurt a great deal), I was personally acquainted with pain and I wasn't easily grossed out. Alal's past granted me beaucoup knowledge to fill in the gaps. Mu was going to be okay. \n\nHis problems were the bullet hole, blood loss, our mutual damp condition and his complete exhaustion. Zhen knelt close by as I cut open his pants. The bullet was still in him. I was guessing the round had cracked his femur, not broken it. I cleaned out the wound with minimal disturbance to Mu's sleep. The antiseptic came next, followed by the wrapping and finally a syringe of general antibiotic.\n\n[Mandarin] \"Let's find something to dress ourselves in and then we all need to get out of these wet clothes. If we don't shed these clothes soon, we'll get a chill we don't need,\" I advised.\n\n[Mandarin] \"How bad is it?\" she asked. She meant her brother's condition.\n\n[Mandarin] \"He'll be okay. Feel free to try and kill me when you wish. He doesn't need me anymore.\" That ... pretty much confirmed for her what she suspected ... I was a lunatic. \n\n[Mandarin] \"Well - okay. Thank you. I will not kill the child; I have given you my word.\"\n\n[Mandarin] \"Are you talking about 'Ugly Bug'?\"\n\n[Mandarin] \"Oh. I thought she didn't know our language either,\" she blushed then frowned. \"She never revealed she understood our words.\"\n\n[Mandarin] \"She doesn't. Aya has a phenomenal memory. All Amazons are taught from a very young age to develop a strong eye for detail. This includes remembering words spoken around them, even if they don't know their meaning.\"\n\nThat silenced her. The medical kit gifted us with five glow sticks. \n\nThe women paired up to search the first, second, third and fourth floors; I didn't trust Zhen to find something useful and report it to me. I knew women. She wouldn't kill Aya tonight and Aya would keep her honest. I went for the basement looking for some traces of whatever infrastructure systems I could find. \n\nAt the bottom of the stairs was a sealed door with a wheel lock. It turned easily in my waterlogged hands. Sure enough, there were twin generators, fuse boxes, and telephone network boards lit by two lonely ceiling lights (battery powered).\n\nA handy-dandy laminated 'Beginners Guide' showed me how to hand-pump fuel from the reserve tank - 6500 gallons (87% full) - into the igniter chamber and main generator. Then I had to hand-crank the igniter until it built up enough of a charge it would remain hot enough to begin the diesel combustion in the starter.\n\nThe next step required me to flip a few toggles, hit a red button, then a green one that allowed the starter engine fire up the massive generator meant to power the building. I politely filled out the Engineering Log stating the time I started the generator and the fuel level. I was to update the thing every 12 hours, or until I shut things down.\n\nSince my kidnapping involved me because of my official capacity as a 'Person of Interest', I signed off of using my (self-designated) official Mugwump designator: UHAUL (Unpaid Honcho Assigned to Unit L). Javiera would be pleased I was keeping my head in the crisis ... you know ... by not using my real name. \n\nThe next step was priming the fuse box. First, all the breakers needed to be in the 'Off' position - check. I cut the primary fuse on. All the subsidiary lights but one ~ laundry room ~ turned red. The one standout was either burned out, or something was wrong in that room. I put that breaker in the 'locked' position.\n\nThat done, I flicked all the other breakers into the 'neutral' position. All the lights behaved by turning yellow. Had I known at the time this base was used for test-firing nuclear missiles, I wouldn't have been so impressed by the government-made structure. One by one, I cut on forty-three of the forty-four breakers.\n\nOn the thirty-seventh I got a really startling development. \n\nIt wasn't the lights coming on in the generator room. It was the ten walkie-talkies squawking to life. They were older than me ... say something from the early '90's. I think I'd seen them in 'Die Hard'. That was the third bit of good news this place had delivered. (The generators being functional and the breaker for the 'Communications Room' working being the first two.) A battery indicator showed them all to be at 40% power (how much battery life that meant wasn't explained), but the chargers were working, so I took four. I'd come back for their replacements later once those had recharged.\n\nThe basement offered one other blessing - a fireman's axe. I took it off the wall sconce while leaving the plastic blade and pick covers on for now. I went back upstairs. Not too surprisingly, it was just me and Mu and he was still unconscious. I put one WT in his lap, put his hand over it then trotted after my ladies.\n\nI began cutting on the lights as I went (~ 80% of the overhead neon lights still worked). On the second floor, when I cut the hall lights on, Aya called out.\n\n\"Oh cool - blankets,\" she said. \"C\u00e1el - Atta, good job with the lights.\" Zhen poked her head out of the room I suspected the noise was coming from.\n\n[Mandarin] \"We have found a storeroom,\" she announced. I walked her way, smiling. With the nights I could make out her sharp nipples doing their damnedest to poke through her sports bra. She'd shed her wet shirt, pants, socks and boots. She had a bit of a camel toe, too. I leered. For a second she shot me an uncertain look, then followed my gaze.\n\nShe blushed, grimaced my way and stormed back into the room.\n\n\"Are you ogling L\u00fas\u00ecla ninda's goodies?\" Aya giggled to me as I strode into the room.\n\n\"Dumu, do you have to ask?\" I chuckled. \n\nZhen had her back to me, but shot angry looks over her shoulder. I didn't mind. That allowed me to ogle her butt, which I had already appreciated earlier.\n\n\"Can you tell her something for me?\" Aya looked my way. Sure enough, we found a store room with all kinds of olive drab clothing, blankets, MRE's and sunscreen.\n\n\"Sure.\"\n\n\"Word for word,\" Aya grinned. This was going to be fun.\n\n[Mandarin] \"Zhen, Aya wants me to tell you something.\" She looked at me grumpily while showing Aya something akin to kinship.\n\n\"C\u00e1el - finds - you - to - be - very - womanly,\" Aya walked me through it. Sadly, Mandarin and English don't translate over very well word for word. The languages have nothing in common. Still, she puzzled it together.\n\n[Mandarin] \"What ... ask her what other women think of you,\" Zhen asked. She studied me carefully, looking for some deceptive exaggerations on my part.\n\nI translated that while we began gathering up fresh clothes for the four of us, as well as blankets, towels and food.\n\n\"Tell her 'all women love you. Even the women who hate you, love you',\" Aya proclaimed proudly. I translated; Zhen didn't believe me.\n\n[Mandarin] \"Honestly, I would prefer the ones who hate me to only hate me. This wacky 'only love me if I'm broken, bleeding and enslaved at their feet' is hard on my knees,\" I joked. She mulled that over. We were all quiet for a while. We allowed her to change Mu in private. \n\nAya and I went to another room where she found my bashfulness when she stripped down in front of her odd. Around one another, Amazons exhibited very little body consciousness.\n\n\"Let's leave that issue with you being nine and me being raised differently,\" I spoke with my back still to her. \"Okay?\"\n\n\"Sure, because I love you, Atta,\" she let that last word roll off her tongue. Instead of going at the hopeless task of trying to fit Aya with regular clothing, I stuck her in a size-L GI issue olive t-shirt which hung past her knees. She decided to go with an 'M' instead. I had to agree. The 'L' made her look like a flying squirrel. \n\nBack with our Seven Pillars shipwreck co-survivors, we feasted on some US Military bounty. They were better than I'd read about. Being starving probably helped with that assessment. Only after I finished policing the area did Zhen take a moment to corner me away from Aya.\n\n[Mandarin] \"Why did you save us?\"\n\n[Mandarin] \"Why does it matter? You and your brother are alive.\"\n\n[Mandarin] \"Is it because you want my body?\" she gave me that look that said 'I want the truth, but I'm not going to believe you whatever you say'. Since I hit on every woman I meet, I've dealt with my fair share of the crazy ones.\n\n[Mandarin] \"Not really. I'm the type of person who doesn't want to see people die. Since I cause way too much dying, I make an extra effort to save lives when I can. You are attractive. Had you been a 135 kg hag, I would still have saved you. Your beauty is the Universe's way of giving me a break after a horrible two days,\" I explained.\n\nOh, I was lying. Had she been a 300 lbs. troll, I know I'm morally weak enough to have first saved Aya before going back for her. I'm not a nice, pleasant Politically Correct guy and I've known that for four years now. Know how to lie, gentlemen.\n\n[Mandarin] \"Oh ... thank you. I am in your debt,\" she bowed.\n\n[Mandarin] \"Does that mean you will have sex with me now?\" I inquired hopefully.\n\n[Mandarin] \"No!\" she yipped. \"I am not that kind of woman.\" She turned around and stormed back to her brother. She shot me evil looks for several minutes.\n\n\"Do you think she will have sex with you tonight, or will you wait until the morning?\" Aya yawned.\n\n\"Tomorrow,\" I ruffled her hair. \"This one is going to need a little foreplay.\"\n\n\"My Mother would like a little foreplay,\" she snuck one up on me.\n\n\"Do you want a little brother, or sister, that badly?\" I teased.\n\n\"Yes. Mom would be happy with that, Atta,\" she nodded sagely. Damn her. I went back upstairs, gathered up two armfuls of blankets then came back down. I created a layered bed on the floor for the four of us.\n\n[Mandarin] \"Come, join us,\" I offered Zhen. She was wisely cautious because she wasn't that kind of woman and I was that kind of guy. \"Mu is the worst off so I'll sleep on one side and you sleep on the other. Aya will sleep on top of my body and we four will sleep under two blankets. How does that sound?\"\n\nSee, I was back to being a thoughtful man trying to keep her brother alive and healthy.\n\n[Mandarin] \"Yes. That will work. I expect you to behave,\" she insisted. Of course I nodded to that request. I'd behave for a while, if that meant a girl would let down her guard.\n\nThe set up started that way. Once we were all under the blankets, I caught Zhen looking at me and Aya in her customary spot sleeping on my chest. If such a pose had warmed Desiree's heart, I knew Zhen was doomed. She slowly crawled on top of her brother. That was really the better spot for keeping him warm. \n\nShe didn't recoil when I slipped my left hand into hers. That was the conclusion of my eroding of her morality for tonight. It was already lights out for Aya and I soon followed her into slumber. She didn't let go of my hand because she wanted me to be the hero, the man of Iron Virtue, so fate would pardon her for the affection sent my way ~ to her enemy.\n\nShe wasn't that kind of woman. They never were at the start. They always changed ... unless I left the room in a hurry, drove off and never contacted them again. Otherwise, they would become that kind of woman soon enough. Ugh. I have a horrible life, I know.\n\n(The Morning under the Burning Sun)\n\n{11 am, Wednesday, August 17th ~ 22 Days to go (Havenstone time +5h)}\n\n[Once more, the conversation is in Mandarin]\n\nZhen's eyes were will-o-wisps of pleasure. She was poised, in an Olympic fencer's stance, her right hand Jian pointing at me, running a straight line from tip, down the blade to her hand, forearm, upper arm, shoulder and to her neck. Her left hand Jian kept at the small of her back, pointing ramrod-straight toward the sparsely clouded sky. \n\nI was wielding two Fireman's axes. We'd found the other on the first floor at a fire-fighting station (along with a spigot and 15 meters of hose). It turned out each floor had the same setup. The Communications Room was on the third floor and that room's functionality was one of the reasons Zhen was so wound up ~ more on that later.\n\nShe let me become comfortable with the awkwardness of the two tools. Fireman's axes are heavier than the Iron Age axes I'd used at Havenstone, or with Kimberly at college, and longer and less balanced than my tomahawks. A bit of Alal-introspection followed by a few practice swings and I was ready to go.\n\n\"Are you sure you will be okay with those ... things?\" Zhen mused.\n\n\"Let's find out,\" I laughed. Sure, she could use this practice bout/attempt to bleed off some tension as an excuse to make me dead. I was counting on one serious factor to keep me alive.\n\nZhen was exulting in her survival. She and Aya had spent the morning combing the atoll for debris. They'd found six of her fellow Han, dead, washed up on the shore along with several pieces of luggage which equated to real clothing for her and Mu. Mu was awake and sulky. He'd missed his chance to be martyred for his cause. I'd spent the morning calling for help ~ more on that later.\n\nAt the moment, she was looking to 'school' me with her blade artistry. Sure, she had specialized weapons and over a decade of training while I had tools and an acquaintance with the necessary fighting style, but this wasn't about winning. I'd been impressing on Zhen my worth as a human being for nearly three days now.\n\nI hadn't cracked when they tortured Aya, I had managed to ensure the death of two of her commandoes before we even got onto the plane in New York. Sure, I'd been constrained and unconscious as we'd winged our way to Tampa Bay then Mexico City. I'd made up for it by killing everyone else on the plane, except her and her brother and that was only because I'd promised to save them (in her mind).\n\nI had delivered in some truly apocalyptic condition, risking my life and the life of my boon-companion to make sure they were currently drawing breathe right now. Initially she had assumed I was completely unhinged. As the night had worn on, I'd given her a glimpse into an alternative motivation ~ her sexiness.\n\nShe didn't want to play the helpless gentlewoman versus my ravenous barbarian. I certainly wasn't behaving like the barbarian. There was no Code of Chivalry for me to violate. I had picked up the pieces of my shaken, chaotic life and forged ahead. That I held Aya in great affection was obvious to her now.\n\nI had not spared her the pain of torture because that was a false lure ~ Aya's safety ~ but I'd never deviated from thinking about my minute companion. I was a man of compassion and an enemy who kept to his word, both baneful and gracious. Zhen lunged forward quickly.\n\nThe angle of her blade made it difficult for me to predict her reach and true location. I had an answer for that. I let my left hand slide up to the base of the ax-head of that axe and used the metal to parry her blows - gauntlet like. I went halfway up the right axe, sacrificing cutting power for speed.\n\nI knocked her first attack aside, swung with the axe, missed then went on the defensive. I wasn't humiliated. I was using 'tools' after all, while she had a weapon perfected over 2300 years. To complicate things, I had assumed she was going to fight with the blades in tandem.\n\nThat wasn't her thing. She kept up the attack and defense with one hand until her arm got tired then switched to her 'off' hand, quickly showing me she was truly ambidextrous. Between her training, natural talent and superior weaponry, she drew first blood. The salty light ocean spray over the island made her cut across my left forearm sting more than it normally would.\n\nShe took a step back instinctively instead of pressing her advantage. That move shocked her and pleased me. I was her sparring partner, not her enemy, for that one critical instant.\n\n\"Ow-ee!\" I teased her. \"Don't worry, you'll get plenty of more chances to split my heart.\"\n\n\"Do you really believe I will try to kill you now that I owe you my brother's life and my own?\" \n\n\"Of course,\" I smiled. \"You are a professional and the pride of your brother and father. You are biding your time for the proper moment.\"\n\nNo she wasn't. I'd been given her the 'shy eye' all morning long. You know, those puppy dog eyes that convey affection that must remain unspoken. Zhen ate it up. See, I was respecting her. I obviously held her up on an unobtainable pedestal because I thought she was the best thing since chopsticks.\n\nBelieve me, girls WANT to think this way. That makes the moment when they finally get all wet between the legs all the more special. If I wasn't buttering her up as well as sexing her up, she'd feel like a total slut when she let me fuck her. This way, she could tell herself that she was something special in my heart.\n\nDon't get me wrong; EVERY girl I've had sex with was and is special. Perhaps my definition of special and theirs is different and if I was a diction-Nazi, I might bother trying to correct the feminine gender about this misconception. Since I'm a horn-dog, I'm happy with the way things work out ... until they finally can't ignore the truth any longer.\n\nThen they hate me when the have sex with me. I'm okay with that. Angry sex has its own unique quality to it.\n\n\"Do you need a moment to bind your wound?\" she allowed.\n\n\"No. The pain will be yet another reminder of how deadly you are and I need all the help I can get,\" I sighed.\n\n\"You didn't believe I was this good?\"\n\nOf course I believed she was 'this good'. That wasn't the point.\n\n\"Oh please,\" I rolled my eyes. \"You are cheating.\"\n\n\"I am not cheating,\" her eyes narrowed.\n\n\"No?\" I tilted my head to the side slightly. \"Then stop looking so damn sexy. It is killing my concentration. At least put a shirt on. My mind keeps wandering back to our moment on the plane.\" That moment when I blackmailed her into showing me her breasts.\n\nAt first, the moment shamed and incensed her. Then the compliment sunk in. Her 'sexy' was a weapon she was using against me. She was in black boy-shorts and a black sports bra. That's cheating in my book. We were both barefoot which made the warmth of the runway interesting - we had to keep moving from foot to foot. I was in a set of grey with white trim boy-shorts (7 Pillars Commando issue). \n\n\"I could say the same thing about you,\" she countered. I do look rather fetching in nothing but underwear. I've had way too many women tell me so to think they were doing to me (the buttering-up part) what I was doing to them.\n\n\"That's not fair,\" I groused. \"This is all I could find that fits me.\" \n\nThat was almost the truth. This was all I felt comfortable with and I wanted to work on my tan anyway.",
        "\"Is that so?\" she purred. \"Then we are even. I find your apparel distracting as well.\" Gotchya. She lunged forward and we were clashing steel once more.\n\nI changed up my tactics. I could over-extend myself because I was fighting with two weapons at once. My grip on the right ax lengthened and began targeting her Jian. Even when she could slip the blade around the ax-head and hit my handle, the material was very resilient and could withstand a hundred such deflections.\n\nThat caused her to switch up her Jian faster as my far stronger blows were hammering her muscles. Around the third, exhausting minute, I got a swing past her, drawing a line of blood from her shoulder/upper arm section to her sternum. He bra strap on the left side was severed.\n\nBefore she could do more than recover from the shock and pain, I'd hopped back three quick steps, knelt and put my axes on the ground. She looked confused by my vulnerability.\n\n\"This is what I do when training with the Amazons,\" I explained.\n\n\"Since I am the only male in a sea of women, I have to be extra cautions to not offend the spectators when I wound one of the warriors I'm dueling with.\" See, I was showing her my ultimate honor by comparing her favorably to my 'senior' partners. \n\nThat these exemplars were women and I had the utmost respect for female warriors wasn't lost on her either. She was measuring up to some really dangerous people. She'd spent much of her life trying to be that dangerous in a society that regulated her best to second place, or 'luck'.\n\nNo male student in her school would have done as I did unless he was foolishly besotted with her. All good, moral, upstanding manly Seven Pillar slayers-in-training were schooled to be merciless and to consider all women as weaker than men solely because they had boobs and a nice ass.\n\n\"It hurts,\" she complained. \"I need to treat it.\"\n\n\"Let me,\" I stood and walked her way. I left the axes behind. This was another chance to do me in. She had her left blade between us in a flash. Its blade's point rested between the ribs sheltering my heart. Gently, I pushed the blade aside.\n\nThe mental moment to slaughter me had passed. I she barely protested when I slipped an arm around her hips and steered her toward the medical kit sitting close to one of the few palms and under some fallen palm thatch along with my QCW-05 submachine gun. \n\nI used the end of a palm frond for her to bite down on as I used some antiseptic on the wound. It was all play-drama. She'd undoubtedly suffered through worse pain in silence. Those Seven Pillar bastards were a tough lot. I gave her the prop so she could be womanly for me. Why? She wanted me to see her as a sexy, desirable woman, that's why.\n\nI'd respected her as an enemy, as a sister and now as a warrior ~ an equal. She was ready for the 'sexy' part of the C\u00e1el's magical mystery tour. She grimaced as proof she was 'girlie' and my brow furrowed because I didn't want to cause her pain ... which was true, just not 'furrow' worthy. The next part of my plan had to wait until I'd applied the bandage.\n\n\"That should take care of it,\" I mumbled my assessment.\n\n\"Oh,\" she murmured. \"It feels better.\" I was crowding her personal space. Then I kissed her. \"No!\" she protested. She wasn't that kind of girl. I looked suitably ashamed though no apology was in the offing. I got up and stormed back to my axes.\n\nHer hands migrated to her swords as I picked them up. I pretended not to notice. Instead, I made a bee-line for the JOC Building.\n\n\"Wait,\" she called out. She was back on her feet. I did stop but didn't turn around. All part of the game plan. She walked over until she was right behind me. \"Why did you kiss me?\"\n\nAt this point she wanted to believe. I turned on her, very angry.\n\n\"I've wanted to kiss you since the first time I saw you. It was a mistake for me to get this close to you. In a few hours - most likely - one of us is going to have to kill the other. Wanting you is pointless!\" I growled. Bingo. Her 'happy indicators' poked up against her sweat-dampened bra.\n\n\"I ... I,\" she stammered so I kissed her again. This time, she stared at me, a study in indecision. So I dropped my axes and kissed her again. My left hand pressed against the back of her head while my right came to rest on the small of her back. Before she could drop her Jain ...\n\n\"Don't,\" I broke off the kiss. \"They are valuable to you. Sheath them.\" Back to the kissing. I wasn't going to relent in my passions now. Zhen had to fumble through putting her two swords safely away while my tongue explored her tongue, her teeth and tickled her cheeks from the inside. She had zero experience with French kissing.\n\nZhen's hands moved decisively to my hips, pulling my groin tightly to her stomach. She moaned in response to my obvious need. My right hand stroked her lower back going.\n\n\"I will kill you if I must,\" she uttered passionately between deep breathing exercises. Normally, that would be a turn off ... but I worked with Amazons so it was no big deal.\n\n\"I believe you will,\" I responded ardently. She pulled back her head long enough to look deep into my eyes and read my soul. I was hedging my bets. I knew she'd try to kill me. I also knew I'd shoot her if she did try. My soul wasn't really lying when it confirmed her desire to be treated like a mature, trained threat to my every breath. \n\n\"I'll try to make it quick,\" she blurted out before diving back into my lips. She was taking a few quick tongue tactical lessons from my lips to hers. I was coaxing her along the amorous art of the kiss; I was making this fun for her. A minute later, I took my turn to be stupidly romantic.\n\n\"I'll try to make this last as long as possible then,\" I whispered libidinously. It took her ten second of tonsil hockey to recall what I meant. She mumbled something that turned into one long moan.\n\n\"I'll make this good for you too,\" she worked out between some wicked smooching. I was going to hold her to that - that last part.\n\nBy complete accident, I had put out some spare blankets when I'd brought a few out to wrap up the dead (who were all safely inside the JOC out of the Sun's heat). I must have forgotten about them ... otherwise this entire episode would have lacked the feel of spontaneous lechery. Zhen had seen me bring the blankets earlier and hastened us over to them.\n\nThe three of us (Zhen, Aya and I) had put tarp out to capture the morning moisture (even though the water stores in the building were more than adequate). We had plenty of room to walk hunched over beneath it. A few casually placed palm leaves, covered with some blankets she hurriedly threw down and she was reclining with this urgent desire to pull me to her.\n\n\"You have been with many women,\" she jolted me with her finally braking maneuver. \n\n\"Yes, even a Goddess. I told you that,\" I bludgeoned her with the truth. She wasn't inquiring into my Man-slut background. Nah, she was seeing how high the bar was for her to be the best fuck I'd ever had.\n\nI'd stumped her. I tossed out some divine sex (which I'd never actually had) to put her off her game and shake up her desire to control our intercourse. I wanted to give her a sense of vulnerability along with a sense this was a competition she could win.\n\n\"A Dao, a rapier and a kopis are all swords, Zhen,\" I reasoned with her. \"They are all wonderful blades and there is an art in each one.\"\n\n\"Women are remarkably similar to deadly weapons,\" I gave her a salacious smile. Zhen's sexy leer returned and she pulled me down to her own version of argot wrestling. While she was preoccupied with that contest, I rolled us onto our sides. She was unsure what to make of that until I slipped a hand down the back of her underwear, working the material down past both cheeks in five seconds flat.\n\nZhen countered my ploy by attempting the same feat with my underwear and miraculously succeeded on her second attempt.\n\n\"Bra,\" I moaned. She moved her hands around to roll up her top and I took the pause to completely shed my only garment. Zhen, not to be outdone, rapidly removed her sports bra and boy shorts.\n\nHad she any final reservations about the fierce fornication I was about to impart, I buried that in one swift penetration. I only had to push my cock head past her labia to cross that final, ethical frontier. Once she felt my penis at the precipice of her vagina she could accept it was too late to stop things now. I slowed down and she guided me further in.\n\nHer virginity wasn't a matter of debate. She'd shed it years ago as part of her training I suspected. She could be expected to use sex as a tool in her line of work. Zhen was still very tight. She'd had little recent intercourse, doubtfully played with sex toys and had narrow hips, which all combined to make her vaginal passage a snug exploration.\n\nI gave enough vigor to keep her constantly aware of my ardor for her, yet let her control the rate of my progress sinking in for that first penetration. When our pelvic bones touched, she bit her lip over the surprise of the situation. I could throb my dick and I had my 'big fella' vibrating like a pro the moment I felt the entrance to her womb.\n\nI didn't want to press any farther. The sensations I was giving her were totally new and making her emit very lewd groans and moans. Now she was embracing being that kind of girl with a passion and I was stoking the magma chambers to bring forth her volcanic eruption.\n\nZhen didn't have a hair trigger. She was making me work for it and I didn't mind in the slightest. Had I not been denied sex for THREE WHOLE DAYS, she might have fared better. I was insistent and had no trouble coming first. My semen splashed over her vagina and pumping my seed into her uterus was a totally new sensation for her.\n\nAny worry that I was a quick shooter evaporated with my continuing strenuous efforts to drive her hinny through the blanket until her ass held a permanent marking from the palms beneath it. To further entangle her into my erotic web, I flipped us over so that she was riding me cowgirl. I had one hand on her mid-back and the other began to playfully smack her ass.\n\nThose were light taps ~ more for shock value than any kind of super-kicking pain-play. She liked it. With the hand on her back, I leveraged our bodies so that we met at the thirty degree plane for some serious breast appreciation. I stayed away from the teeth; we could do that later. All my action was in my muscular tongue flicking the nipple at varying speeds while my lips adhesion pulled blood to the surface and verified she wasn't lactating. \n\nTo kiss me, she had to rock back on my rod, driving me in deep. When she didn't, I pile-drove up into her wet box with continuous escalation to her vulva's stimulation. In a way, all women are the same. In far many more ways they are different. The look I received from Zhen as she rode out her climax, holding my jaw in her two hands as I gave her the greatest orgasm of her life ...\n\nI had seen it before and yet it was also totally new for me. Me and my moment of Zhen.\n\n[Mandarin] \"You are ...\" she panted, \"... like no man ... I have ever met before.\"\n\n[Mandarin] \"If you are asking me to surrender, I'm seriously considering it,\" I gently teased her. She was still in the dominant position.\n\n{Topaz}\n\n\"Hrrmmm,\" Mu muttered from the doorway. I had left it to let the breezes remove the stale smell of our living area. Had I closed the door, he couldn't have snuck up on us and ruined our moment. He hated me and was horrifically conflicted by what he saw his sister doing. Zhen started to scramble for her clothes.\n\n[Mandarin] \"Mu, I seduced your sister. It is what I do,\" I stated in the form of an apology for me and an excuse for his sister. Zhen got her shorts on then stopped.\n\n[Mandarin] \"No,\" she asserted. \"No,\" she repeated, louder now. \"I had the chance to kill him and didn't. Brother, I don't want to kill him anymore. Is there even a point to it?\"\n\n[Mandarin] \"He is still our deadly enemy and close confidante of our chief nemesis. He must die eventually,\" he stated calmly. His resolve weakened slightly. \"There is no need for him to do so right now. What has happened, has happened. I came out to remind you that our contact will be in touch soon.\"\n\nZhen put on her bra while I worked on my shorts. I winched when I picked up my SMG and axes, exhibiting my wound. After we stepped out from under the tarp, Zhen rebounded and kissed me on the lips quickly. She skipped off into the dim light within. As I started to follow her, Mu put his hand on my chest.\n\n\"I have no doubt you have seduced my sister and I will take extra enjoyment when you die at my hand, or at the hand of someone I direct,\" he glowered. \"If you speak of this,\" he coughed, \"she will ...\"\n\n\"I deserve death many times over and this is just another insult to human compassion that I'll have to live with,\" I replied. What did I mean by that? I'd let him figure it out. I had a call to make.\n\nThat contact? It had started early this morning. I had climbed up on the roof in time for 'Alal' to tell me he didn't know jack about ultra-modern telecommunications but did know something about telemetry hook-ups. (Like me, he didn't need to sleep much so he read stuff like technical manuals.) I had already found somebody out there who seemed cautiously helpful.\n\nZhen was already bounding up the stairs when I got inside so I had to race to catch up. She was a nibble lithe minx. I didn't get to grapple her before she stopped abruptly just inside the Communications room. Aya was crouched down behind the far side of the chair closest to the critical gear. Her QSW was leveled at Zhen until she saw me.\n\n\"Please tell Zhen it isn't anything personal. I don't trust anyone who tries to kill us,\" Aya said as she stood. Of course, she had heard feet running up and done the Amazon thing; taken shelter and prepared to kill anything coming through the door that wasn't me. She must have discerned my footfalls behind Zhen's.\n\nI tapped Zhen's arm. She looked to me, smiling despite the danger. Aya was a reminder that I ran with a rough and ready female crowd. Being in their metaphysical company was an honor for her. \n\n\"Mu,\" I motioned back down the stairs. A peg-leg Mu would take five minutes of painful progress to climb all the stairs even with the palm frond cane I'd created for him. Off she scampered.\n\n\"You know who else would like to be fucked that silly?\" Aya bantered playfully.\n\n\"Desiree?\"\n\n\"Yep.\"\n\n\"Daphne?\"\n\n\"Yep.\"\n\n\"Your Mother?\"\n\n\"Got it in three!\" she teased. \"I'll let Mother know she's advancing in the lineup.\"\n\n\"Please don't do that,\" I begged as I walked over to the console. I place the QCW on the table and my axes next to Aya. I worked the nobs and switches but held off from making contact until the rest of our quartet was there.\n\n[Mandarin] \"See,\" Zhen told her brother, I said he would wait for us before making contact. He said if we ran into a Chinese, or neutral party, he would tell them to come get us. He is a man of Honor.\"\n\nMu wasn't buying that for a second. Still, I hadn't really lied to him yet. I was about to.\n\n\"Are you a man of honor,\" he studied Aya, not me, as he spoke.\n\nI extended my left arm to Aya so we could clasp, forearm to forearm.\n\n\"Maybe not by your strict terms, Mu, but I will give my Word of Honor to Aya, who you know I love and respect, to not do you any further harm,\" I suggested. \n\nShe studied me and my gesture. It took her a few seconds to work out my intentions. I was setting the groundwork of disinformation between the Seven Pillars and the Amazons. See, Amazons don't have a 'word of honor'. That runs contrary to belief that race / house / team come first and foremost. \n\nTo Amazons, a person putting their personal beliefs ahead of that of the Host was acting in a treasonous fashion. An Amazon will give her 'word of honor' to an outsider if asked and she thinks she can get an advantage by doing so. I was letting Mu think that was really the case. Aya sold it well with her solemnity.\n\nDon't get me wrong, that doesn't mean they don't value the concepts of truth and honor. They weren't particularly prone to dishonorable behavior. But only that whatever factors do restrain them does not include some sense of personal obligation to a non-Amazon. \n\nThe only people whose opinions matter are their sisters, and no Amazon would ask another Amazon to put their personal welfare over that of their group. That was the sin of Sakuniyas's sister. She held such personal love for Saku that she allowed her sister to kill her, even though she knew it to be the wrong thing to do for her House and the Host. That was something else I had to look into, damn it.\n\nI sat down and went to work. That consisted of calling for help over the airwaves.\n\n\"Topaz? Topaz? This is UHAUL. It is 12:00 my time.\"\n\n\"Hello C\u00e1el Nyilas, I have made calls in a manner similar to the ones you requested and I am happy to inform you help is on the way,\" the sultry female voice responded.\n\nMy call sign had been UHAUL to maintain a veil of anonymity, but she had pierced my pale deceptions. I had asked her to call Katrina at Havenstone and Javiera at work because being a poor shipwrecked sailor wasn't reason enough to explain my access to the encrypted satellite system I accessed with my phone card. \n\nI didn't know how I was on such a system, so I couldn't explain it to the tech person on the other end. Wisely, she'd asked me for some people who might validate the legitimacy of my urgent desire for rescue. She was suspicious by nature and my being called ... well, I told her that U-Haul had stolen my name and I was currently in the court systems trying to get it back.\n\nStunningly to everyone but Aya (who believed that I could do anything, given enough sex appeal), Topaz agreed to help us. Twenty-three frequencies later, none of us could raise anyone else, so we were all forced to wait on Topaz to get back to us via satellite. Fearing the interim, I had asked if she could hook me up with some Direct TV. She informed me she wasn't that kind of system'. They never are. \n\n\"So, when can we expect salvation?\" I tried to act cool.\n\n\"Ask her who she is with,\" Mu hissed at me.\n\n\"You can expect the plane to arrive between 5:40 and 6:00 pm, your time,\" she answered, \"and I'm with the CIA.\"\n\n\"Woot!\" I exulted in not being bound for China. That fact that she blissfully handed over her secret identity began to feel somehow odd to me.\n\n\"Tell her I demand recognition of my diplomatic status. She must ...\" Mu ground out.\n\n\"I'm not that kind of system,\" Topaz countered. All of us clued into the fact that she was answering questions she shouldn't have been able to hear.\n\n\"Good system,\" I remarked.\n\n\"Thank you. I have been informed that you will deal in a forthright and confidential manner, C\u00e1el. They also said you were most comfortable working on a first name basis.\"\n\n\"What kind of system is she working for then? She has admitted to being a member of your federal government and I have announced my diplomatic status,\" Mu growled.\n\n\"I am the kind of system that has orders from Unit Xerxes to place a sanction against you and Ms. Duan to be fulfilled by C\u00e1el if necessary, Mr. Duan.\"\n\n\"Whoa now. No one is whacking anyone else for the foreseeable future, Topaz and exactly who has been lying to you about my character?\" I asked.\n\n\"Both your bosses. I explained the delicacy of your and my situation and they told me it was a constant occurrence with you ... you and women you couldn't talk about,\" Topaz enlightened me.\n\n\"And they still told you to trust me?\" I wondered out loud.\n\n\"Aya,\" Topaz explained in one word.\n\n\"I take it you know who that is,\" I nodded (though I didn't think she could appreciate the physical gesture.\n\n\"Of course. Aya Ruger was kidnapped with you on Monday ~ roughly 9:13 am in New York City, New York. It was front page news around the globe.\"",
        "\"Oh boy,\" I looked at Aya. Amazons were supposed to avoid notoriety. There was a lengthy pause. Mu quietly relayed the news to Zhen which distressed her.\n\n\"So, what was it like making love under the tarp?\" Topaz inquired.\n\n\"Wait a second,\" I prevaricated. \"How did you know about that?\"\n\n\"I am that kind of system, C\u00e1el,\" she affirmed. Mu translated which only caused Zhen greater distress.\n\n\"There were blankets under there,\" I evaded.\n\n\"That shows preplanning on your part. Most wise,\" she pointed out.\n\n\"It was totally by accident, I sw ...\" I got out.\n\n\"My system has a voice stress analyzer,\" she cut me off. Mother fucker! My feminine worst nightmare. Don't get me started on Antonio Banderas and clowns.\n\n\"Do you have to use it on me?\" I avoided sounding sarcastic. There was another long pause.\n\n\"I've never thought about not using it,\" she confessed. Bingo.\n\n\"Are you a computer?\" I asked in all seriousness. Another pause.\n\n\"The Turing Test? I understand you have taken it numerous times,\" she noted.\n\n\"You don't work for the CIA, do you?\" I guessed.\n\nPause.\n\n\"Yes, though my work for the Agency is somewhat of a sideline to my dedicated purpose,\" she tossed me a bone. Then, \"Deirdre says hello.\"\n\nI was leaning toward the Illuminati anyway. Yes, I had been saved by my crazy Aunts. \n\n\"What kind of people are coming to get me - us?\" I questioned nervously.\n\n\"Military people.\"\n\n\"What kind of military people?\"\n\n\"I think it is best for me to leave you guessing,\" she taunted me.\n\nThat was okay. I had been saved by a wacky spy satellite with delusions of Artificial Intelligence secretly operated by the CIA who secretly-secretly really worked for the Illuminati. \n\nWith layers upon layers of byzantine program, Topaz might really have been approaching sentiency. I desperately wanted to go back to being a delivery boy. My sanity required it.\n\n\"It was damp, warmed by compassion and stoked by passion,\" I related of my sexual session with Zhen. \n\n\"It was unique in the look in her eyes when they sparkled, the curve of her breast from beneath and the way sweat trickled in multiple rivulets down her throat. She has these two secret places - one was new to her, I could tell,\" I continued. \"Her heart beats strong and her breathing is even in the manner of a true athlete.\"\n\n\"In one way she was every bit a woman. In another, she was exactly the kind of woman I wanted her to be and that's a tough thing to do, believe me,\" I finished up.\n\n\"You are a poet,\" she responded. \"You should go home.\" By home I believed she meant 'Ireland'. I had this deep down sensation. \n\n\"Nope. No way ~ no how,\" I cut that discussion off. \"I prefer to live as a free castaway on a Sun-blasted reef than a parakeet in a gilded cage.\"\n\n\"Meet Deidre half way then?\" she countered.\n\n\"That I can do. When the flying monkeys let me go, have her give me a call,\" I agreed. Eh, I was going to end up banging an Aunt or two eventually. As long as I was sure they weren't my real mother, I would cope somehow.\n\n\"I will monitor your situation for the next two hours and be back by the time your rescue is achieved. Until then, C\u00e1el Nyilas,\" she exited our conversation. That was okay, the Marines were on the way. It had to be the Marines. I didn't think nature made kick-ass seahorses big enough for the cavalry to come riding in on.\n\n(The Marines have landed)\n\nThe first contact with our salvation force was by cell phone. We used Aya's phone card in Zhen's phone and sure enough, a nice marine made a call when they were twenty minutes out. The Sun hadn't set the eastern sea on fire yet. Everything in this artificial sea-skillet was beautiful. \n\nIt was rendered that way because we were leaving this abandoned atoll very soon. Fondness works that way. Their plane had the luxury of trained pilots and clear weather, so they were able to make a full circuit of the airfield before landing. Their landing was flawless and they even taxied the US Navy C-37B over to the JOC building ~ show offs.\n\nA Naval Lieutenant named Toffler had assured me everything was okay with his craft, he had two naval corpsmen onboard, as well as some 'special guests'.\n\n\"Thank you for being less than perfectly helpful,\" I snorted. He laughed at me. \n\n\"Is your companion in the black sports bra seeing anybody?\"\n\n\"Her vision is 20/20, so you are out of luck, smart-ass,\" I laughed back.\n\n\"I'll make sure to take off my wedding ring,\" he bantered while rolling to a stop.\n\n\"That's too bad,\" I faux-sympathized. \"She has a thing for married men.\"\n\n\"Why are we rescuing you again, Joker?\"\n\n\"You are here to save the girl. I'm the Guy Friday,\" I explained.\n\n\"Tell her 'the Marines have landed,' but squids are where the real action is at,\" he informed me. \n\nThe ramp was coming down. I went from a kneeling position to a crouched jaunt to meet our guests. Two men came out of the sandstorm swept up by twin engines going to idle. I could tell they had two separate types of helmets. One was the classic 'Fritz' design. The other ... \n\n\"Menner? Menner!\" I exulted. Here was my Romanian companion who had allowed me to feed Ajax to an angry goddess and save hundreds of lives in the process. With him were five Marines from Lima Co. 3rd Battalion (Trinity), 3rd Marine Regiment ~ \"Fortuna Fortes Juvat\" (Fortune Favors the Brave) - thank you, Grandpa.\n\nMenner was leading four men from the V\u00e2n\u0103tori de munte as eight troopers set up a semi-circular perimeter around us, kneeling with their weapons pointed down. They weren't expecting a hostile encounter, but they were ready for any fight whatever came there way.\n\n[Romanian] \"My brother ~ my Prince,\" Menner chuckled over the low roar of the plane's engines. His eyes wandered over to the bound bodies of the Seven Pillar killers. \"I see you've had your battle without waiting on the rest of us this time. Are you okay?\" he added. Then he squinted, \"I see you had your usual extraordinary companions, I recognize the eyes.\"\n\nI looked over to Aya, who was on one knee five meters away, cradling her QSW-06 in the same manner I had been holding my QCW submachine gun moments earlier. Her face was serious and her eyes carefully tracked all the new arrivals for a hostile motion. The medical pack was strapped on her back. You never knew when you might need more medical supplies.\n\n[Romanian] \"I am bringing all my troopers home this time,\" I turned back to Menner. \"She needs tending to. Our kidnappers tortured her by cutting off two digits of her right middle finger. She toughed it out - gave them nothing. She is my daughter in all the ways that matter, my friend.\"\n\n[Romanian] \"Then she will be a princess amongst our people,\" he grinned grimly. \"She already embraces the responsibility.\"\n\n\"Gang,\" I shouted as I motioned the three forward. \"Time to go home.\" Aya started trotting our way. The closest Marine had been waiting for me to finish my bonding moment with Menner before speaking. He walked and talked like an officer.\n\n\"You are certainly Mr. C\u00e1el Nyilas,\" he nodded. \"I'm Lt. Robeson, United States Marine Corps. I would like to take you and your party home. What is the situation?\" \n\n\"Lieutenant, this young lady is Aya Ruger. She was kidnapped along-side me and managed to kill over twenty of our enemies, so be careful around her.\" I was deadly serious about what I said. Aya should get proper credit for all the people she sedated then drowned. Dead was dead, even if it was accidental.\n\n\"These two,\" I pointed to Zhen and Mu, \"are L\u00fas\u00ecla ninda and Amar, Taiwanese nationals suffering some shock from the abrupt crash landing of the aircraft. They don't seem to know why they were kidnapped, but they were instrumental in aiding Aya and me making it to shore during the typhoon.\"\n\n\"If you say so, Sir,\" he nodded. He did believe me, yet a soldier was taught to be skeptical of anything a civilian told him about a military situation. \"The bodies?\"\n\n\"Those are the corpses we found after the storm. I decided we should attempt to place them in your custody so you can figure out who they are,\" I suggested.\n\n\"Sir, I don't think we can let civilians keep their weapons aboard the flight,\" the Marine Lt. stated since I had both a pistol and submachine gun, Aya had her pistol and Zhen had her and Mu's blades. A Marine NCO sent a party to gather the dead.\n\n\"Marine, I am C\u00e1el Nyilas, Irish diplomat, freebooter and Champion of the worst possible causes,\" I began my spiel.\n\n\"You probably have some orders concerning bringing me in alive. I am not so constrained and am more than willing to steal this aircraft and fly back to Hawaii without you. My team keeps their weapons - or you give me your best shot ... right now,\" I met his gaze. He mulled over his options. Two Romanians and two Marines were starting to load the ad hoc body bags aboard the C-37B.\n\n\"Normally I don't take that kind of crap from a civilian and I don't want you to think I'm making an exception because of your Security Clearance. I'll let your people keep your weapons, but if something goes wrong, I'm shooting you first,\" he assured me.\n\n\"Done deal,\" I offered my hand and he shook it.\n\n\"Oh and Happy Tibetan Independence Day,\" he congratulated me.\n\n\"What?\" I gasped."
    ],
    "authorname": "FinalStand",
    "tags": [
        "amazons",
        "assassin",
        "interracial",
        "chinese",
        "intrigue",
        "plane crash",
        "cyclone",
        "impregnation",
        "aya"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/life-as-a-new-hire-ch-39"
}