{
    "title": "Always Welcome in the Back Door",
    "pages": [
        "\"Always Welcome in the Back Door\"\n\nI walk almost every day. Partially for health reasons and partially just to be outside. I have a few different routes I take to break up the monotony. Or at least I took different routes until a few months ago.\n\nI had walked down the main street coming into my neighborhood and then turned on a street that made a wandering loop by the lake and back to my street. She was in her front yard weeding the flower bed. She had on a conservative one-piece jump-suit looking thing. She was sitting on a little stool pulling weeds.\n\nThe first glance was a quick one as I approached the house. Her back was to me as she leaned over the flower bed. Dark hair partially covered slim shoulders. The material of the jump-suit, pulled tight as she leaned, outlined an attractive back-side. She sat up, turned and waved just as I was taking my second, longer glance her way. Showing no indication that she caught me ogling her backside, she smiled and turned back to what she was doing.\n\nI thought the same thing I suppose every 60+ year old man thinks when they see an attractive woman. 'Damn, she's hot.' That was my first thought. My second thought was that this just became my daily route.\n\nMy name is Tom Jenkins. I'm 63 years old, retired, and widowed. I lost my wife to illness three years ago and never considered remarrying. I am still sexually active and have a couple of \"friends with benefits\" I visit from time to time to help keep me sane.\n\nSo...this route became my everyday route. She wasn't out every day, but often enough we became \"waving and speaking\" friends. The speaking started as a 'Howdy' or \"Nice Day' and evolved into 'Nice garden' followed by 'Thank you'.\n\nThen it became an \"I admire your roses. How do you keep them so full?\" Which, of course, meant that I had to stop to get her answer. Her explanation turned into a 20-minute chat. During that chat I introduced myself and she became Ellen Brown.\n\nEllen appeared to be in her mid-30s. She told me her husband, Dan, was a regional manager for a chain of car dealerships and traveled quite a bit. Over the next few weeks, we became frequent friends. Sometimes she would be working in her flower bed and other times just sitting in the shade of the garage. Any time she was out, I would stop and visit. As spring turned into early summer and the days started heating up, I would be sweating as I passed by.\n\nOne of those hotter days, she invited me into the garage to get out of the heat and offered me a bottle of cool water. We sat in the shade of the garage and shared family histories. She found out I had two grown sons and 3 grandchildren.\n\nI found out Dan had an older daughter from a previous marriage but they didn't have any children of their own. She told me Dan was a few years older than her but never said just how much older. She said she had a good relationship with her step-daughter and was comfortable with not having children of her own. I also learned that Ellen was very open and direct.\n\nBy the time summer was in full swing we had become good enough friends that she asked me openly about my personal life after my wife passed. I shared that I had no desire to remarry but never mentioned that I had an outlet for my urges. She, of course, asked. As politely as I could I danced around the question and just told her I dated occasionally.\n\nAs the summer heat set in, her attire adjusted. From the jump-suit of weeks ago, she had gone to loose-fitting hiking shorts and t-shirt. That turned into yoga pants and a sports bra. The hotter it got, the more reveling her outfits got. And the more reveling her outfits were, the more often she seemed to spend out in her yard or garage.\n\nIt was foolish of me to think it but I wondered if she was making it a point to be out when I came by. But, true or not, it didn't hurt my ego in the least.\n\nBy July summer was in full stride and the weather was almost unbearable. But, being the health nut that I was, I didn't let it keep me from my daily walks. It didn't hurt that by now Ellen was wearing a bikini that did very little to hide her well-developed assets. It also didn't hurt that our cool down breaks had moved from the garage to their pool in the back yard.\n\nWhen I tried to protest, asking about what the neighbors would think if they saw an old, strange man hanging out with her around the pool while her husband was out of town that was my first chance to witness Ellen's directness. When I expressed my concern, her answer was quite simply, \"Fuck 'em, this is my yard and my business. I don't like most of those assholes anyway.\" I was slightly taken aback by her frankness and her language.\n\nSo...we spent the summer visiting. I had started just wearing my swim suit when I walked because it became a given that we would take a dip in the pool to cool off. I always showed up sweaty from walking and always left with a boner from watching her as she moved in and around the pool. She seemed very comfortable in her skin and, while she never came on directly to me, she seemed to be flirting in a sneaky kind of way.\n\nI wasn't sure at the time if it was intentional or just her free spirit showing but she routinely bent over with her back turned and gave me a close-up view of her scantily clad ass or bend over facing me and provide me with a view of her ample cleavage. I'm am almost certain that a couple of times I got a quick peak at one of her nipples. And then one day things changed...\n\nThat day she had excused herself to change, saying the bikini top was bothering her. She handed me a beer and said she would be right back. Just the fact that she handed me a beer rather than a water should have told me things were different. When she returned, I knew things were definitely different.\n\nShe was wearing a shear white gown of some kind of thin gauze material. The neckline plunged to her waist, held closed by a belt of the same material, and barely covered her breasts. When she walked around the pool, back-lite by the sun, it was obvious she was naked under the gown. Her breasts swayed gently as she made her way back to her lounger\n\n\"Now, that is much better, don't you think?\" she asked as she leaned over to put her drink on the table. When she leaned over, the opening flared open, leaving both of her breasts in full view. The nipples looked delicious.\n\nShe smiled demurely as she glanced up and saw me looking as she sat down. \"So...do you like them?\" she asked once she was seated. Battling to remain a gentleman, I asked, \"Like what?\" She threw her head back and laughed out loud. I couldn't help but notice the jiggling of her breasts when she laughed.\n\n\"My breasts, Tom. Do you like my breasts? Please don't tell me you didn't see them. I have been trying for several days to show them to you. I was beginning to think you didn't want to see them.\" I was now beet red I'm sure. What was I supposed to say? Yes, I saw them. Yes, of course I liked them. All men like all breasts, that is a known fact. And all those same men would agree with me that Ellen's were exceptional.\n\nSiting on her lounge chair facing me, she raised an eye-brow as if she was waiting for my answer. \"Yes\", I answered. I saw them. They are amazing.\" I wasn't sure what else to say. I could no longer deny that I was looking at them.\n\n\"I'm glad you like them, Tom. Would you like to touch them?\" I was now speechless. A young, beautiful woman I had only known casually a few weeks was asking me if I wanted to touch her breasts. I was instantly hard. My swimsuit tented before I could hide my excitement. Smiling as she pointed at my obvious erection she said, \"I take that as a yes. If you want to see more, I'll be in my bedroom. If you aren't interested, I'll see you the next time you walk by.\"\n\nWith that, she stood and headed for the back door. Just as she opened the door, she shrugged the gown off her shoulders and let it drop to the ground. The last thing I saw as the door closed behind her was a firm back and an incredible ass. And what an incredible ass it was. Only a fool would walk away. And I didn't consider myself a fool. I picked up the gown on my way in.\n\nIt took me a minute to find the master bedroom. It was worth the search. She was laying on the bed, naked as the day she was born. She was reclined on pillows that left her in a partial sitting position. Her right leg was bent at the knee, demurely hiding her nether region. She patted the bed, indicating that I should sit. That was the moment I realized I was in the bedroom of a man I didn't know with his wife, who I only knew from casual visits. Sex had never been a part of any of our conversations other than the time I told her I dated from time to time.\n\nI sat and then asked the obvious question. \"What are we doing and why me? You are a young, beautiful woman who could have your pick of men. I'm an old man with children almost your age.\" Raising up slightly toward me, she kissed me lightly on the lips and then leaned back onto the pillows.\n\nLooking me in the eye, she answered, \"What we are doing, or at least what I hope we are doing is having some fun that should bring us both considerable pleasure. And as to why you. First of all, I like you. Over these past weeks I've come to know you as a kind, caring man and I find myself attracted to you. I believe you are someone I can trust to help with my special needs.\" \"Yes, I realize I have many options when it comes to men but I prefer older men. They are more patient, and gentle than younger guys. You see, being gentle is important to me.\"\n\n\"And yes, there have been other men, all of them around your age. But not all of them were interested in the same things I am and had trouble playing by the rules. And yes, Tom, there are rules. If you like the rules and can follow them, I promise that you will enjoy our visits. If not, I'm sure we will remain friends on a casual basis.\"\n\nMy head was spinning with confusion and excitement, all at the same time. \"But what about your husband?\" None of my \"friends with benefits\" were married so this was uncharted waters for me. I had never been with married woman. \"And you mentioned special needs and rules. I'm not sure what that means.\"\n\nAn understanding smile crossed her face. \"My husband, Dan, knows that I see other men and is ok with it. Our agreement is that I can entertain other men only when he is out of town. I always call him afterwards with details, minus names of course. Dan is a good man and a great husband. I love him dearly and have no intentions of leaving him. So, I'm not looking for a new husband, just someone to help me satisfy my special needs.\"\n\n\"And now about the special needs. You see, Dan is very good as a lover. He is adequately endowed and our sex is always fun and fulfilling, with one exception. He doesn't like anal sex so I have to find other men to 'scratch that itch'. I came to love it before Dan and I met and married. I was upfront with him about my special need and it has never been a problem for us. He is a very understanding man.\n\nMy already excited penis just turned to granite. \"You mean you want me to...you know...do you back...\" I was stammering and couldn't help it. Ellen, ever the blunt person that she was, helped me out. \"Yes, Tom, I want you to fuck me in the ass.\" So, there it was. Just like that. I think I came in my swimsuit.\n\nI had thought a lot about anal sex. Dreamed about it. Longed for it. Years ago, I had even masturbated to visions of doing it. But had only experienced it twice early in my marriage. My wife, the trooper that she was, knew I wanted it and had agreed on a couple of different anniversaries to try it. It was just not her thing. And here I sit on the bed of gorgeous naked married woman who wants me to do just that.\n\nWhile I was trying to digest that, Ellen continued, \"As for the rules, there is really only one. My pussy belongs to Dan. You can see it, touch it, lick it, finger it, anything but fuck it. The rest of my body is yours to do as you want.\" The frankness of her explanation only re-enforced her straight-forward approach to things. It seems as if she was describing an apartment rental agreement rather than her body.\n\nThe silence was deafening. I didn't quite know what to say so I didn't say anything. She was a beautiful young woman who had just offered me the chance to fulfill a life-long desire. I was afraid to even speak for fear of screwing that chance up.\n\nSensing my hesitation Ellen once again bailed me out. \"Listen, I know this is a lot to absorb and I know I caught you by surprise. I don't want it to be as formal and structured as I made it sound. I really do like you, Tom. I enjoy your company, with or without the sex. I also find you attractive and would like very much to spend some intimate time with you. But only if you want to.\" If there was ever any doubt, and there really never was, that did the trick. I stood and held out my hand to her. She took it and I pulled her over to the edge of the bed and she sat up, her legs hanging down. I lifted her to stand and engulfed her in my arms. And we kissed.\n\nEllen was on the tall side, probably 5'9\", so she was almost eye-to-eye with my 6'2\". The first kiss was a gentle touching of our lips as if we were testing the temperature of something hot. For me, it was true cause she was smoking hot. The kissing heated up as our tongues battled for dominance. My hands drifted down to that incredible ass. I cupped both cheeks and pulled her to me. She moved seductively against my erection as a slight moan escaped her lips.\n\nBreaking the kiss, I eased her back onto the bed, this time laying across the bed with her legs hanging off the edge. Using my knee to spread her legs, I moved between them and leaned over her body. Her breasts were beautiful. Each one slightly more than a handful (the universal measurement used by men world-wide) with eraser sized nipples that were presently standing at attention, begging for someone to kiss them. So... I did.\n\nGently kissing one and softly kneading the other, I alternated between the breasts. The cooing from Ellen told me I was doing something right. Her hands on the back of my head helped guide me from one to the other. After a few minutes those same hands put slight pressure on my head, encouraging me to move south.\n\nKissing my way down her body I mentally admired the firmness of her body. As my hands each claimed a breast to massage, I worked my way down her body, softly licking and kissing as I went. The quite moan I heard when I kissed my way around her navel gave me a hint to just how sensitive to the touch her body was.\n\nKneeling as I moved further down, I was surprised to see a smooth, clean shaven vagina. It was a first for me. My wife nor any of the other women I had been with had been clean shaven. It made her love nest even more sensual. Her nether lips were already moist with arousal. I fought the urge to bury my face in her and devour her. I was determined to make this a pleasurable time with her.\n\nI kissed my way around her core. Placing her legs over my shoulders, I licked my way down her left leg to her knee as I slid my hands under her and massaged her firm ass. Reversing direction, I worked my way back up, coming close but never touching her center, I repeated the action on her right leg. The moans coming from above were continuous.\n\nI could feel myself getting hard. The thought of anal sex with this beauty was beyond my wildest dream. For years I had longed for it, dreamed about it. Now it was truly going to happen. And with a young, lustful woman who seemed to want it as bad as I did.\n\nKissing my way back up her leg, I slipped my tongue softly across her clit. Her body jerked in response. Blowing light kisses around her pussy lips, but never actually making contact, I moved my hands from her ass and began massaging her inner thighs. She arched her back but I moved away to avoid the contact I knew her body was seeking. It wasn't time for that yet.\n\nMy hands drifted from her inner thighs back to her firm ass. Cupping the cheeks in my hands, I again squeezed and massaged them as I continued to breathe soft breaths on her pussy. She spoke for the first time, \"Om my god, Tom. Please!!!\"\n\nIt was time. Holding her ass cheeks firmly in my hands, I slid my tongue across her clit, this time more forceful than before. She gasped and tried again to push her pussy into my face. This time I didn't resist. My tongue made a couple of laps around her clit and then traveled down thru the moistness that was leaking from her pussy lips.\n\nI lapped at her juices as my tongue slipped up and down her opening. I sucked her clit into my mouth as I slipped the middle finger of my right hand into her. She screamed in orgasm as her body bucked against my finger. Hoping that I wasn't pushing the envelope too far, too fast, I upped the ante. As I continued to finger-fuck her thru her orgasm, I drug my tongue thru her pussy and rammed the tip of my tongue against her asshole, trying my best to force it into her.\n\nThe screaming became a garbled mix of begging me to stop and begging me not to. I'm not sure if it was the same orgasm or a second one but her body shook to the point where I was worried that she would slip off the bed. After a bit her body stopped moving and I felt her relax against me. I gently rubbed her legs and lower body but avoided her vaginal area, understanding that she needed time to recover.\n\nShe moved her legs off of my shoulders and let them drop. She extended a hand and I helped her sit up. She slid off the bed and stood and I rose to face her. \"Thank you, Tom. That was amazing. It's been a long time since I had an orgasm that strong. Now it's your turn.\"\n\nShe motioned for me to sit on the bed. Trying to be considerate I started to say, \"Please don't feel obligated to return...\" but was interrupted. Holding up her hand to stop me she replied, \"Tom, I very much enjoy the feel and taste of a man's cock in my mouth. Now remove that swimsuit and sit.\" I was becoming accustom to her frankness.\n\nEllen kneeled as I slipped the suit off. My erection popped out at full attention, almost smacking her in the chin. \"Oh my god, Tom. Your dick is huge. I'm not sure this will fit in my ass.\" I was surprised by her comment. I always considered myself adequate in size but never thought of myself as \"huge\".\n\nHer hand on my stomach guided me to sit on the edge of the bed. Raising slightly, she pulled me forward and kissed me. Then worked her way down my chest, taking time to stimulate my nipples as she went. At her urging, I laid back on the bed as she took my erection in her hand. I could feel her breath on it as she began to gently stroke it.\n\nThe touch of her tongue on the tip startled me. My hips flexed involuntarily from the contact. She took the tip in her mouth as she stroked me. I could feel her tongue as it circled around the head of my dick as she took more of me into her mouth. Slowly she eased her mouth up and down on me, coating my cock in her saliva. I could feel my heart pounding in my chest.\n\nHer talented tongue continued to work its magic. Ellen took me into her mouth and then pulled back and licked the underside of my manhood from the base all the way to the tip. All the while stroking me with her right hand. She began massaging my nut sack with her left hand, causing my already rock-hard erection to flex in surprise. The next surprise was when the middle finger of her left hand lightly circled my anal opening. I almost lost my load right there. No one had ever touched me there.\n\nI was excited beyond belief. Her licking and slurping on my cock as she circled my ass ring with her finger was pushing me over the edge. I wasn't sure if she wanted me to cum in her mouth or not. \"Oh...that feels amazing. I'm about to cum,\" I said in way of warning in case she didn't. She removed all doubt by taking me fully into her mouth as she slipped her finger into my ass.",
        "My world whirled around me. I flexed my hips up, my body rigid. My cock exploded in her mouth. I could feel my nut sack tighten as it pumped her mouth full of cum. She sucked and swallowed, her finger buried in my ass. I had never had an orgasm like this. It seemed like I came forever. Finally, I felt the flow of cum slow to a stop as she slipped her finger out of my ass and eased her mouth off of my cock, licking me clean as she went.\n\nI lay on the bed and tried to catch my breath. Ellen stood and laid beside me as I turned on my side to face her. \"Wow, that was wonderful. Thank you, Ellen.\" I took one of her breasts in my hand and gently massaged it. She reached down and took my now flaccid penis in her hand. A devilish smile showed on her face. \"Don't thank me big boy. You are about to earn your reward, but first, let's rinse off.\"\n\nShe took my hand as we stood and headed out of the bedroom. I was confused. I was sure there was a shower in the master bath. I figured we were going to use the guest bathroom shower for some reason. That is what I thought right up to the time she led me thru the kitchen, headed for the door to the pool. I hesitated at the door, looking uncertainly at her.\n\nShe turned and laughed out loud, \"Fuck the neighbors.\" Releasing my hand, she stepped to the edge of the pool and dove in, butt ass naked. Oh well, when in Rome...I dove in right behind her. I surfaced a couple of feet from her in neck-deep water.\n\nWhat followed was a game of playful \"grab ass\" that lasted several minutes and ended when I had Ellen pinned against the side of the pool, my hands covering her breasts and my dick lodged between the cheeks of her ass. We were both breathing heavy from exertion and arousal.\n\nI slipped my dick down between her legs and slowly moved in and out, teasing the lips but never entering her \"off limits\" pussy. I released her right breast and used that hand to stroke her pussy lips. A soft moan escaped.\n\nFeeling empowered, I taunted her, \"You know what I'm gonna do? I'm gonna finger fuck you till you cum. Then, I'm gonna take you to your bed and fuck you in the ass.\" I slammed two fingers into her pussy and used my thumb to stroke her clit. Seconds later she arched against me and screamed in release. I held her tight between me and the edge of the pool. I kept my fingers moving in her until she begged me to stop.\n\nI held her close until she recovered. Leading her to the shallow end, I helped her up out of the pool and back into the house. I grabbed a couple of towels on the way. Back in the bedroom I guided her to the shower. I joined her and we took turns bathing each other, taking extra time on the \"special\" places. I was rock hard by the time we toweled off.\n\nGrabbing me by the penis, she lead me to the bed. Kneeling in front of me Ellen took me in her mouth. Kissing and licking around the head, she used her hands to massage me. Looking up at me seductively she said, \"I want this in my ass...\" One more kiss on the head and she crawled onto the bed. Laying on her back, she offered herself to me.\n\nStarting with her feet, I kissed and massaged my way up her body. Spreading her legs, I slid my tongue across and thru her pussy lips. She was soaking wet. Folding her legs up to her breasts left her ass and anal opening fully exposed. She locked her arms in the bend of her knees, leaving my hands free.\n\nWhile I continued to caress her pussy with my mouth, I slipped the middle finger of my right hand into her dripping pussy. A couple of strokes in and out and my finger was adequately coated. I trailed that finger down to her ass and used her juices to lubricate the opening. She grasped out loud when I slipped the finger past the ring and into her ass. It was a tight fit.\n\nI held the finger still for a moment to let her adjust. Then started to gently move it in and out. Using my tongue as the carrier, I licked her juices down to and around my finger, re-lubricating it as I finger fucked her ass. When it was slick with her juices, I added my index finger. The addition brought a moan from her.\n\nShe was at such a state of excitement the juices were flowing freely from her pussy. Dripping down on my fingers, it provided natural lubrication. I increased my speed of my fingers in her ass as I used the thumb of my left hand to massage her clit. The moans from above became louder. She had another orgasm when I slipped a third finger into her tight ass.\n\nHer body bucked against my fingers as the orgasm swept thru her. She screamed so loud I worried that the neighbors would hear. But to quote Ellen, 'Fuck the neighbors.' I was on the cusp of fulfilling a life-long fantasy. And the chance to do it with an incredibly beautiful woman was more than I could imagine. I was determined to do this, no matter who heard her scream.\n\nI stood and, holding her legs, I moved between them. I laid my cock across her pussy and moved it back and forth thru her lips, coating it with her juices. I could see the apprehension in her eyes when she realized what was coming. She pointed to her night stand. Opening the top drawer, I saw what she motioning for. I opened the bottle of anal lube and slathered it on my rigid cock. She used her hands to work it the length of me as I applied some to my fingers and prepared her anal opening.\n\nLooking me in the eyes, she spoke, \"Please Tom, be gentle. I very much want your beautiful cock but I was serious earlier when I voiced my concern. I have never had one this big before. Please fuck my ass but please don't hurt me anymore than necessary.\" I assured her I would be gentle. I still couldn't believe this was happening. I was praying I wouldn't blow my load before I could make my dream come true.\n\nLining my cock up with her opening, I leaned forward slightly. Her anal opening resisted. I could see the concern in her eyes as I applied more pressure. I smiled at her, hoping to non-verbally transmit my understanding. I moved forward incrementally until I felt the mushroom head of my cock slip past the resistant ring. \"Oh!!!...wait...don't move\" she gasped involuntarily as the tight ring grasped my manhood.\n\nI had to think about a root canal to keep from blowing my load right then. I was insane with lust. It took all my will-power to keep from ignoring her and slamming my cock in her to the hilt and pumping her ass full of my cum. Finally, she sighed and said, \"OK, a little more...slowly...\" I eased another fraction of an inch into her. \"Oh my god, Tom. Your cock is so big. Please keep going but for god's sake take it slow.\"\n\nSo...that's what I did for several minutes. I would ease forward a bit just to hear her cry out for me to stop and let her adjust. The frequent stops also helped keep me from cumming pre-maturely. The further I slipped my cock into her ass, the more I could feel the heat of her rear canal. I wasn't watching to clock but I'm sure it took several minutes before I felt the soft skin of her ass cheeks against me, a tale-tell indication that I was in her ass to the hilt.\n\nBy this time, root canals didn't help. I was thinking in full open-heart surgery mode to keep from exploding. The heat in her ass was intense. I wasn't sure if it was her body or my cock but, she was so tight, I could feel someone's pulse. Her plea to be still was un-needed. I was breathing hard and sweat was running off my face.\n\nJust as I was getting brave enough to move, her bed-side phone rang. It scared me so bad I thought I would lose my erection. I was more than a little surprised when she motioned for me to hand it to her. Trying desperately to hold my position, I grabbed it from its cradle and handed it to her. She looked at the number and smiled seductively.\n\n\"Hey baby, how are you?\" Oh shit. Here I stand with my dick buried to the hilt in a woman's ass and she takes a call from her husband. I thought I would die. Her next comment almost caused me to need that heart surgery I was thinking of earlier.\n\n\"What am I doing? I'm laying across our bed with this delightful man's cock buried in my ass. Yes, I really am Dan. And you should see it. It's a magnificent cock, too. I wasn't sure I was going to get it all in me.\" I am now in full panic mode. I know she told me I was not the first stranger to fuck her in the ass but I hadn't counted on her telling her husband about it while we were in the act. She had said she always told him later.\n\nI could feel my dick shrinking. I guess she could, too. Licking the middle finger of her left hand, she began fingering her pussy as she tightened her anal muscles around my penis in an obvious attempt to keep me hard. She seemed to be wrapping up her conversation. \"Yes Dan, I'll tell him. I love you to baby, see you in a few days.\" She clicked off and pitched the phone out of the way.\n\n\"That was so fucking hot, Tom. That's the first time he's ever called while I was getting fucked. I almost came when I saw it was him. I hope it didn't startle you too much. I felt you start to go soft in me. Oh...and he said to tell you to fuck me unconscious and fill my ass with your cum. So...what are you waiting on. Fuck me unconscious with that huge cock and fill me with your cum, please.\" That last comment had me back at full mast. I wasn't sure if my heart was racing from the phone call or from the fact that my cock was deep in the ass of this beautiful married woman.\n\nEver so slowly I began to move in and out of her. The first time back out took almost as long as the first time in. Just before the head slipped from her rectum, I reversed direction. Her pussy was leaking profusely, negating the need for any more anal lube. Each trip in and out increased in speed. The tightness was unbelievable. It looked like I was turning her asshole inside out each time I withdrew.\n\nHer initial look of concern had been replaced by one of desire. The moans were intermingled with almost incoherent babbling. \"Oh god, Tom...fuck me...oh wait...oh...fuck me...fuck my ass...oh that hurts...please fuck me...please fuck my ass...\" Both of her hands were now busy with her pussy as she alternately pulled on her clit and slammed multiple fingers into her red and swollen orifice.\n\n\"Oh,,,OH...god, Tom. Fuck me...FUCK MY ASS...PLEASE FUCK MY ASS...I'm about to ...AHHHHH...I'm cumming....Fuck me I'm cumming...\" Her body pitched wildly in release as her orgasm consumed her. I have no doubt the screams were heard 3 houses down. By some miracle, I had managed not to blow my load. I'm not sure how because that was the most violent orgasm I had ever witnessed.\n\nI held still as she calmed down and her breathing almost returned to normal. After a few minutes she opened her eyes and smiled at me. Reaching between her legs, she pushed gently on my stomach, indicating that I should pull out. I guess the disappointment was evident in my face. \"Don't worry Tom. We aren't finished. Just re-grouping.\" My cock slipped reluctantly from her ass as I helped her sit up on the edge of the bed.\n\nShe wrapped her arms around my neck and pulled me to her for a passionate kiss. \"Thank you, Tom. You are amazing.\" I started to return the compliment but she silenced me with a finger to her lips. \"Don't talk. Save that energy for round two.\" Reaching into the bottom drawer of the night-stand, she brought out a realistic looking fake cock. Crawling up on the bed, she motioned for me to join her.\n\nWe turned length ways in the bed and she bunched pillows up behind us so we were in a semi-reclined position. She lay on her back and I lay on her left side, resting on my right elbow. She coated the dildo with lube and eased it into her pussy. I played with her breasts as she fucked herself, tweaking first one nipple and then the other. After a few minutes I moved between her legs and took the toy from her. \"Please, let me do that.\" She let me and moved her hands up to take the place of mine on her breasts.\n\nI worked the fake cock in and out of her pussy as I leaned forward and licked her clit. She groaned and arched her back against my mouth. It wasn't long before another, if less violent, orgasm swept thru her. Her hands dropped to the back of my head and held me to her as I simultaneously licked and fucked her thru it.\n\nI eased back up beside her and held her as she recovered. We snuggled and petted as we relaxed. She turned on her side facing me. Running her hand down my chest, she grasped my semi-erect penis and began stroking it back to life. Reaching up to kiss me, she said, \"Tom, please fuck my ass again. I need this monster to rip my ass apart.\" This woman was insatiable. She had just had several orgasms, one a mind blower, and she still wanted more. Who was I to refuse?\n\nRolling her over I kneeled behind her and lifted her up on her hands and knees. I re-coated my cock with lube and once again aimed it at her rear hole. Even though initial entry was easier this time, her anal canal was insanely tight. After a time, I was once again fully engulfed in her ass. On one of the first return trips I added more lube to make it easier on both of us.\n\nHolding her hips I was soon fucking my full length in and out of her, gradually increasing the speed with each stroke. She dropped her head to the bed to free up her hands. She picked up the dildo and eased it into her pussy. She started pumping it in and out of her pussy in time with my movements. As I pulled out of her ass, she would plunge the fake cock into her pussy.\n\nThe sensation of the dildo rubbing my cock thru the thin membrane separating them had an instant effect on both of us. The harder she plunged the dildo into her pussy the harder I slammed my cock to the hilt in her ass. We were spinning out of control.\n\nI had never been very verbal during sex. But then again, I had never fucked a cock-hungry beauty in the ass before either. \"Take it Ellen. Take my cock up your ass...I'm gonna rip your ass apart. Take it...fuck back against me...take this cock up your ass...\"\n\nI was almost certain I was hurting her but I didn't care at this point. I was driving my cock into her at bone crushing level. I know I was bruising her. I could feel bone against bone contact with each thrust. I was beyond caring. Her asshole was fire hot. My cock was swollen beyond reason.\n\n\"Oh god...fuck me Tom...fuck my ass...slam that monster in me...make me cum...I need to cum Tom. Fuck me...FUCK ME!!! FUCK MY ASS YOU SON-OF-A-BITCH!!! MAKE ME CUM...FUCCCCCCCCCCCCCKKKKKK MEEEEEEE!!!!!!!!!\n\nMy body shuddered as I slammed into her time and time again. I was close. I was fucking out of control. I couldn't have stopped if the house was on fire. I had waited years for this and I wasn't about to miss out any longer. Sweat was running off of me in rivers. My hands had a death grip on her hips as I repeatedly rammed my cock up her ass.\n\n\"Cum for me Ellen...cum on that dildo in your pussy while I'm fucking your tight ass!!! I'm gonna cum Ellen...I'M CUMMING....I'M CUMMING IN YOUR ASS...AAAGGGGGHHHHH...FUCK ME ELLEN...I'M CUMMMMMMMINGGG!!!!\n\nThe instant my cum erupted in her ass her body began to buck and pitch violently. She screamed louder than before. I thought for a brief second about what I would tell the police when they arrived because there was no doubt in my mind that one or more of the neighbors was on the phone to 911 this instant.\n\n\"OHHHHHH...AAHHHH...fuck me Tom...please fuck me...Pump my ass full of cum...FUCK ME....FUCK MY ASS...HURT ME TOM...FUCK MEEEEE...I'M CUMMING....I'M CUMMINGGGGGG...AAAGGGGHHHH...HARDER TOM...HARDER...FUCK ME HARDER...I'M CUMM...\"\n\nSuddenly she stopped screaming as she reared up on her knees like a wild stallion, arms flailing helplessly, and dropped full length to the bed and didn't move. My cock slipped from her ass as she dropped. Cum flooded from her asshole as my cock dribbled my remains onto her ass cheeks. I could see the dildo still buried in her pussy. For several seconds her body would suddenly convulse and then stop. Convulse and stop. Convulse and stop. I thought she was having a seizure. Finally, it stopped.\n\nI was starting to panic. I had never witnessed anything so violent. Had I hurt her? Had I killed her? I knew I had completely lost control. Maybe I broke her neck. Maybe I choked her to death. I didn't remember doing either one of those things but I was starting to worry that I my lust blinded rage I had really killed her.\n\nThen, after what seemed like forever, I saw a slight movement. First one hand and then the other. Then her head. Small movements but enough to know she was still among the living. Slowly, very slowly, she began to move more. I moved from between her legs and she eased over onto her back. The dildo slipped from her distended pussy and dropped beside her. It was covered on her juices.\n\nI sat beside her on my knees, waiting to see if she fully recovered. Her ragged breathing was slowly returning to normal. Finally, she opened her eyes and looked at me. I wasn't sure what to expect. Smiling weakly she said, \"Damn Tom, I don't think Dan really meant it when he told you to fuck me unconscious.\"\n\n\"Oh my god, Ellen. I'm really sorry. I lost control. I don't know what came over me. Did I hurt you? Are you ok?\" I was seriously worried that I had gone too far.\n\n\"Yes, I'm ok. And, yes, you did hurt me. I probably won't be able to sit for a week and I know for sure my hips and ass will have bruises this time next week. But Tom, that was, without a doubt, the most sensational sex I have ever had. I passed out from fucking for goodness sakes. Who passes out from sex? Thank you, Tom. That was simply amazing. Now, help me up and to the shower.\"\n\nRelieved that she was ok and equally relieved that she was still speaking to me, I held her around the waist and guided her to the shower. I joined her under the soothing spray as we sat on the bench and let the warm water wash over our sore muscles.\n\nI dried her and helped her back to her bed. Turning the covers back, I helped her onto the bed and tucked her in. I dressed and stepped over to check on her before I left. \"Thank you, Ellen. that was sensational. I will remember this forever.\" I kissed her on the forehead and turned to go.\n\nEven as much as I had enjoyed it, I was certain this was a one-time thing. I was worried that I had crossed the line. I knew there were other men in her life. She had told me as much. I was certain they never abused her like I felt like I had.\n\nI had made it a couple of steps when she called out to me. \"Tom, please come here.\" I stepped back to the edge of the bed and took the hand she offered. Pulling me down to her, she kissed me gently on the lips. \"I had a wonderful time this afternoon. I need to rest but I would like very much to see you again.\" My heart raced with both relief and delight.\n\nSmiling her best smile, she continued, \"You are welcome at my house anytime, Tom. But remember, you can only cum in the back door...\"\n\n \n"
    ],
    "authorname": "Aguywithastory",
    "tags": [
        "older man",
        "younger woman",
        "marriage",
        "loving wives",
        "erotic",
        "anal"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/always-welcome-in-the-back-door"
}