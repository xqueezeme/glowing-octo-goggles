{
    "title": "TT Spalding: The Conner Case",
    "pages": [
        "Many of you have read and enjoyed the TT Spalding PI stories I post so I thought you might like to meet some of the other characters. Bruno and Polly work for TT on most cases, but so far I haven't said much about them. This story is about Bruno and his part in one of TT's cases. It was the Conner Case.\n\nEdited by Angel Love with my thanks as always. \n\nBruno and the Conner Case.\n\nI got a call today from TT. You know TT Spalding, the PI? He just got a new case and wants me to drop everything and get right on it. Like I don't have a life of my own. Nothing to do but stop what I'm doing and hop right on his stuff. I know he lives for this shit, since all he talks about is his job and that stupid fictional character, Mike Hammer. Who the hell is Mike Hammer anyway? OK, so he's before my time, but come on. I don't read crap like that. He's not real, not like TT himself. As far as I'm concerned, one of the best PIs anyplace is TT. I know since I've been with him like since forever. Anyway, he wants me on it and it seems like a straightforward deal. \n\nTT says this case is a real gem. It's about a woman who wants to catch her cheating husband with his secretary. She's convinced he's bopping the bleached blond bitch (her words) that works for him and he's doing it in the office after hours. She must have sold TT on it as well cause he wants me to get right on it. Says she's a real looker and has a body made for sin. As if TT was going to do anything about it. That's a real laugh. He's married to Maggie and Maggie would have TT's ass in a sling if he so much as thought about another woman. Hell, TT is so much in love with Maggie that he can't see straight if she so much as yells at him. Goes into a funk if she gets mad at him. I guess I don't blame him. Maggie is one of a kind. Beautiful, smart, hard working and loyal as all hell when it comes to TT. She turns a lot of heads and attracts a lot of male attention when she goes out but the only head she pays any attention to is her husband's.\n\nBut back to business. I'll do just what TT wants as he knows perfectly well. He is the only person in this black hole of a world that I would do anything for. TT saved my life a long time ago and I owe him, big time. He never asked for anything in return and he gave me this job a while back just to help me out in a time when I needed it. I'm still here, even though I've gone on to become a relatively rich dude. Some of my inventions in the electronic spying arena have done quite well. I have a few patents that will keep me in spending money for a long time to come. TT knows that but never mentions it when he calls. Just assumes that I love this shit like he does. Well, I'm not going to burst his bubble. But I'll tell you this: when he calls, I answer. That's a fact.\n\nI put things to bed for the night, made a few calls and cleared my schedule. I liked to be ready when I went in to see the boss. That's what TT would always be for me: the boss. He and I spent several years in the field together when he worked for the DA. He was what they called a special investigator and was one of the best. That's when TT and I got together the first time.\n\nTT found me on a case he was working. It involved drugs, some very bad men, and me. I was the 'wires' guy for a gang that was building their reputation in the drug distribution business in the Bronx. I disabled alarms, opened doors and tracked shipments that the others would hijack. Anything to do with wires and computers. They were building their business on the back of the competition. Me, I worked for drug money. I was a junkie at the time. Yeah, that's right. I'm not proud of it but there it is. I was hooked on crack and those I worked for liked it that way. They could control me and I would do what they wanted for enough to buy a fix.\n\nIt was not a nice story but let me just say that TT found me working my trade on an alarm system in a building he was staking out. He collared me, took me in and listened in to the interview. I guess he saw something in me that he liked because the next thing I knew I was working as his CI: his confidential informer. He put me back, made sure I was wired and let me do my thing. A few days later when he had the whole gang in one place and in possession of a million dollar cache of cocaine, things came to a head. The place swarmed with cops and it went down without a shot being fired. After the bust, I was singled out and taken to a small room. TT came in, talked to me, said some things that drove my situation home and then made me a deal that put me in rehab. Afterwards, he took me in, set me up in business as an electronics expert working with him and the DA's office and made sure I kept straight. \n\nHe was a hawk, always on me to make sure I wasn't using or carrying. He never let me out of his sight. There was one time I scored a bag and was about to find a quiet place to shoot up and get high but he found out. I still remember it. TT caught me with the stuff and never said a word. He just took me to his apartment ( he lived alone at the time, before he met Maggie), had me sit down on his couch and then he said to me, \n\n\"If you're going to kill yourself, that's your choice, but I'm going to make sure you're safe while you do it. No one else is going to kill you. That's your job so go right ahead. You just go ahead and put that shit in your veins and scramble your brains. That's what you want to do. So go ahead. But you're going to do it in front of me.\"\n\nWell, hell! I looked at him, sitting there so damn quiet and serious and I said, \"I can't do this when you're watching me.\"\n\nHe said, \"That's too damn bad because I'm not letting you out of my sight. Go ahead: shoot up and get stupid. Make your momma proud. I'll make sure no one else takes advantage of your stupidity.\"\n\nWell, suffice it to say I couldn't do it. The son of a bitch just wasn't going to let me go. I finally decided he must know something that I didn't. So, I took that dime bag of shit and flushed it down the toilet and that was the last time I considered doing drugs again. From that day on, if I ever got in trouble, I called TT. If I felt the need to do the deed he would always respond. If I just felt like shit and needed someone to dump on, he always responded. Always. \n\nWe worked together for the DA for about three years before he decided to go private. By that time, I was straight and had been all that time. I had begun to see some money coming in from my patents, patents that TT showed me how to file, and I was doing pretty damn good. That empty feeling that demanded the release that cocaine gave was gone as well. Finally, someone else had filled it. A good friend, someone who believed in me and found something worth saving. When TT told me that he was going to quit the DA's office, and asked me to come to work for him, I told him I didn't want a full time job but that all he had to do was call and I would come. We shook, and that was that.\n\nYou know most of the rest. He set up his PI business and TT Spalding Investigations was born. He met Maggie a year later when he hired her as his secretary and gal Friday. It was love at first site, at least for Maggie and TT had no chance. She set out to snag him and he proposed three months later. I was best man at their wedding and Polly was maid of honor. That was the first time I met Polly. She was cute, sort of bubbly and very eager but not my type. The feeling was mutual and we became friends, but nothing more.\n\nBut back to the case. When I came into the office, Maggie was working in front at the computer. She smiled when she saw me and rose to give me a kiss on the cheek. \n\n\"Bruno! How have you been? It's been too long since you were in. You know better. Just because TT doesn't call doesn't mean you have to be a stranger. You'll have to come to dinner some night next week.\"\n\n\"I know Mags and dinner sounds great. It's my fault. I've just been too busy to keep up my social skills. You know me, the social king of the Bronx.\"\n\n\"Yeah, I know you too well. Go on in, he's waiting for you. This one should be a breeze for someone like you.\"\n\nI walked in and saw TT sitting in front of his computer. Typing! Oh no! It was probably more of his crap for that great novel he had been writing for the past three or four years. It was his only vice as far as I knew. He saw me and waved me to one of the chairs in front of his desk, but I made my way to the comfortable chair behind his desk. He always kept those damn plastic chairs in front, to make the clients uncomfortable enough to keep the visit short. Hell, I wasn't a damn visitor so I went round and took a seat, waiting for him to finish.\n\nHe stopped, hit the save button and looked over at me. I felt a cold shiver go down my back as I knew this was going to be bad. \"Listen to this and give me your opinion. If it's a good opinion that is. If it's not, just keep your damn mouth shut.\" He read from the screen.\n\nI was hiding in the closet, the louvered door giving me enough of a view to cover the full scope of the room. She was moving around the bed, her golden hair reflecting the light from the single lamp. She was wearing a silk robe that hid untold treasures behind that thin barrier. She went directly to the picture over the bed and moved it aside to reveal the wall safe behind it. She stared intently at it for more than a minute before replacing the picture, straightening it. Did she have the combination? I wasn't sure but the way she smiled told me she did.\n\n\"Well, what do you think? Pretty good huh? Sound like something Mike Hammer would say don't you think?\"\n\nTactfully, I kept my mouth shut and just nodded my head. I forced a smile on my face and hoped it would get me through this. Hell, I wouldn't know good literature from a hole in the ground and I had no clue what Mike Hammer would say. Far as I knew, he never said anything. Wasn't he just a fictional character? \n\nIt apparently didn't fly as I saw a grimace from TT. But, he didn't say anything so I breathed a sigh of relief. Made it through another mine field called 'give me your opinion'. TT swiveled his chair around to face me and began.\n\n\"OK, here's the deal. Got a woman named Amanda Conner. She's a real looker by the way. Tall blonde, ice blue eyes, skin like alabaster and legs that go on forever. She fills out a sweater like you wouldn't believe. Maggie likes her so maybe she isn't what I think she is. She says her husband is banging the secretary and she wants proof. Says she wants to take him for a bundle, but there were a lots of tears on her part. Looks to me like there's a jilted trophy wife who is sorely pissed and isn't going to settle for second place.\"\n\nTT handed me a folder with most of the stuff I needed. SS number, credit card numbers, phone number for cell and land lines, picture and other stuff for the mister. Name was Ryan Conner, and the picture showed a man of age 45, black hair, grey eyes, good build and nice dresser. Top of the line suit and what looked like a Rolex on his wrist. The cuff links were gold and probably real. Worked as chief operating officer for a company out on the island that handled transport and shipping from the docks. Import/Export business it said on a business card I found in the folder. Right there I was suspicious. What the hell was an Import/Export business anyway? Anybody really know?\n\nTT continued once I had a glimpse of the guy. \"I got the feeling the wife really loves the dude, but seems to me there might be more to this than meets the eye, you know? I want you to do the routine but also keep your eyes open for you know what. Anything out of place, anything not what it should be, that sort of thing. You know the drill.\"\n\nI did know the drill. How often did we find one grieving spouse trying to pull a fast one on the other? Too damned often! In this case, TT wanted me to hit the wife as well as the husband. TT had obviously spotted something and his instincts were almost always right on target. I had learned to trust him in matters like this. I had to ask though, \"Are you bringing Polly in on this one?\" It would make a difference in how I handled this.\n\nTT shook his head negatively. \"Not this time. Don't think we need to for this one. Do you?\"\n\n\"Negative. I can handle it myself. Same deal? $800?\"\n\n\"Same deal.\"\n\nI headed out with my file and an idea of what I would need. I gave Maggie a goodbye kiss on the forehead and left to do my thing. I smiled to myself on the way back to my Hummer. It was a full size Hummer, not the H2 or the H3 toys. It cost me just under $75K loaded with all the options. As you can see, the $800 was just a token for me. Hell, one of my cameras was worth more that that. I always spent more than $800 on the job but I don't think TT really knew that. He believed the money was good and that I was making out on the deal. He'd never hear different from me. I wondered, not for the first time, about Polly. Same had to be the case for her. She was a successful photographer as far as I knew. She probably lost money on his deals as well. Wonder what her story was. \n\nWith the information TT gave me, I set up my plan. First thing was to make a visit to the office and gave the secretary in question my card. The one indicating I was a rodent removal specialist. I killed rats in other words. (I thought that was a clever play on reality). That was the first step. I found my way up to the right floor, went in the office and spotted the bleached blond right away. She was really hot! No wonder the Mr. was banging her. But, I was here on business so I shoved my eyes back in my head, closed my mouth, wiped off the drool and went up to her.\n\n\"Excuse me. I'm just making the rounds, and I was hoping to leave you my card. I just started my own business in extermination. My specialty is rats. Rats of all kinds and sizes. I kill them quickly and quietly. You might not need me now but you may some time in the future. So, please would you keep my card on file?\"\n\nI gave her my best smile and a look that should have made her think I was desperate. Whatever, she smiled back, flirted a little, told me her name was Cindy, and took my card. I took a look down her cleavage, knowing she was making it easy for me to do so and kept my eyes there for that fraction of a second too long that would make her happy. She expected it and I obliged. A few more words and I was out the door on my way back to my Hummer. \n\nThe next step was to visit the wife over in Jersey. They lived in an upscale suburb as you would expect. I found the place easily and cruised past, scoping out the area. There were a lot of trees and large open spaces, so it was simple to find a place to watch the house from. I made plans to set up a remote camera that I could monitor from my laptop. In all modesty, to call it a camera was misleading. It was computer controlled, satellite linked and top of the line with a few more improvements of my own. That baby could see a mouse trying to sneak into the house from a block away, and it knew what the mouse was thinking before the mouse did. It was also equipped with a remote zoom control. I needed a few days of observation to see what I could see, so I set it up to record only when movement from the house activated it and I could monitor it from my Hummer or from my own place. \n\nTwo days went by before I put the next phase into effect. I waited till the office where Mr. Conner worked was closed for the night and broke in, going in through the window I had jimmied the last time I was there. First floor window of course. Heights scare me a lot. I went in, took my box of very special mice up to the second floor and let the little buggers loose in the big man's office. They were hungry so I left them some cheese in the supply closet just inside the office. They would stay there for a while and make appropriate mouse noises. All I had to do was wait for a call, assuming the bleached blonde goddess had kept my card handy.\n\nSure enough, the following morning I got a call from Cindy. \n\n\"Mr. Exterminator? This is Cindy, from Mr. Conner's office. Would you believe we have rats in the office? It sure is a coincidence that you stopped by the other day. Can you come over right away and do something? Please?\"\n\n\"Sure can Cindy. I'll be there in twenty minutes. Tell your boss he'll have to leave the office for about ten minutes or so when I get there. I'll get rid of those little pests for you in no time. And thanks for thinking of me. I really appreciate it.\"\n\n\"OK, I'll tell him. I think he has a meeting anyway that I can shift to one of the conference rooms. It'll be all ready for you when you get here.\"\n\nPerfect. I got my equipment and packed a bag with all I would need. I also put on my uniform, the one that had the replaceable logos that I used. I put on the one for 'Rodents are Us' and tried to stifle the snicker that came with it. Well, Cindy didn't seem to be the sharpest tack in the card so this should work. My last piece of equipment was the little sound emitter that sent out a supersonic sound that the mice would respond to. As you might have guessed, these weren't just any old mice! I put it inside the cage I took with me. Now, I was set.\n\nOnce there, I flirted with Cindy, made sure I thanked her for thinking of me then I went inside Conner's office, shut the door and placed the cage with the emitter on the floor. I left the cage door open but went right to work setting up my cameras and microphones. Two of them, covering the whole office. They were also motion and sound activated so they were self contained. Either would zero in on the source of either movement or sound and had a range of just under 500 feet so I could set them up to record from the controller I placed in the utility closet just down the hall. I had scoped it out on the last visit. After testing them to make sure they were working properly, I turned on the emitter and sat back to wait. Sure enough, within a minute or two, I had four tiny white mice inside the case, snacking on the cheese I left them. I shut the door, took a last look around and went out to show Cindy my prizes. Her little shiver had me responding somewhere else. God, was she built!\n\nBack at the shop, I booted up my computer and checked the camera at the Mrs.' place and the ones in the office of the Mr. All were working perfectly. Now, all I had to do was just watch and wait. I thought it should only take about a week to get all I needed, but that was before I noticed a scruffy looking dude that came to the Missus' house a couple of times. I decided I needed to see who he was and what was said inside that house. That I could do so I waited until she left one afternoon, slipped inside and did my thing. \n\nSo it was almost two weeks later that I called TT and requested a meeting with him. Told him I had what we needed and he seemed pleased. He set it up for last thing in the afternoon when the office was shut for the day. He and Maggie would be there, so just about 4:15, I gathered everything I needed and headed out. It was a ten minute drive over to his place so I wanted to be on time. TT hated people who couldn't keep on a schedule. He constantly beat me over the head with that. In all the years I had known him, TT was always right on time and never, ever late.\n\nMaggie gave me a smile that caused my heart to beat a little faster when I came in. She always did that just to tease me cause I think she knew I had this huge crush on her. Not to say she was mean, but she was a woman and they're all like that. At least to me. But then you don't know what I look like. Good thing too, so I'll keep it that way. \n\n\"Come on in Bruno, honey. Go right back. TT's waiting for you. I'll be along directly.\"\n\nI hurried back to the office and set up my CDs and my pictures. I knew TT loved CDs so he could see everything in real time. He was pretty smart on picking up on people's body language. As I was setting up, Maggie came in and sat down next to TT. I saw her hand reach over for him and as always, I was moved by the love these two had for each other. Maggie the beautiful and TT the homely. A strange pair, those two. But, a pair they were.",
        "I started the CD player and went first to the office of Mr. Ryan Conner. I won't go into a lot of detail but what I told Maggie and TT was that Mr. Ryan Conner wasn't banging Cindy. Matter of fact, he wasn't banging anyone. He was doing exactly what he said he was doing: working on one humongous merger with another financial firm. It was big stuff as I found out from the conversations he had with several very important people. (As a matter of fact, I looked into the stocks and made a purchase. I wasn't adverse to making a buck or too off inside info). Cindy was in and out most of the day, taking dictation, answering questions, getting files, showing visitors in and just general secretary stuff. Seems she was rather efficient at what she did and those huge mammary assets were just a distraction. After two weeks, he had been with her several times alone and did or said absolutely nothing wrong.\n\nTT was shaking his head, not sure whether to laugh or cry. I know TT was always rooting for the happy ending. He was a real sap that way. In this case, half of the twosome was innocent. But TT was also pragmatic. He never counted his eggs before the chicken was in the pot.\n\n\"OK, so it looks like Ryan Conner is innocent of all charges. Good for the Mrs. if she cares about him. But, now tell us about the Missus. Tell me what you found. I know that look. You found something didn't you?\"\n\n\"Boss, I surely did. But not what you might think. It seems the Missus had reason to suspect Mr. Conner. She was tipped off you might say.\"\n\nI fired up the CD player again and played a section showing the inside of the Conner's home. I had gone back at the end of the first week and installed pickups in the living, dining, and family rooms and one in the kitchen. Neat little jobs just about the size of a penny. Thought it was necessary when I spotted that guy coming and going too often to be normal. TT and Maggie just raised one little eyebrow when they saw that part but neither said a word. I thought I saw a smirk on TT's face but it was gone in a flash.\n\nThe CD showed the inside of the living room, with the view covering the front hall and the front door. As the picture began to change, the doorbell could be heard in the background. In a few seconds, Amanda Conner walked down the hall and to the door. She opened it, said a few words but than backed up to allow a man to enter. The man was dressed in a suit and was short and slightly balding. He walked past Amanda and went into the living room. Amanda followed, looking slightly aggravated. The man sat down on the couch and Amanda stood in front of him, looking down. Then the sound began.\n\n\"What the hell are you doing here? I thought I made it quite clear to you that I was never going to be with you or anything like that. I want you to leave. Now!\"\n\nThe man smiled up at her and leaned against the back of the couch, looking quite smug. He watched her for a second and then spoke.\n\n\"Well, I don't know why you feel that way. Ryan is screwing Cindy, his secretary, as we speak. He's been doing her for over a month and from what I've seen, she really likes it. I could help you get even with him. Just a little roll in the hay, so to speak. I want you and I know you want to get back at him so why not?\"\n\nAmanda's face was red and she has hugging herself so tight I expected her ribs to crack. There were tears beginning in her eyes and she was holding herself together by the skin of her teeth.\n\n\"Get out of my house, you son of a bitch! Get out now!\"\n\n\"OK, but when you decide to get even with him, give me a call. I'll keep my mouth shut and you can tell him whatever you want. Just think about it. He needs to know how it feels to be cheated on. And I'm the guy who can help you accomplish that.\"\n\nWith that, the scene faded. Following that were three more attempts by the man to talk to Amanda but on each occasion, she refused to release the safety chain and finally slammed the door in his face. After each visit, Amanda could be seen crying.\n\n\"Well boss. It seems pretty clear to me what's been going on. The guy's name is Randy Johnson and he's a clerk in the company Ryan works for. Seems he's been busted several times for sexual harassment and is still there only so long as he stays away from the women. One more complaint and he's out the door.\"\n\nMaggie was furious but TT was smiling as he listened. This was his cup of tea. Now he had what he wanted and it was clear he was thinking of how to deal with this. I had my ideas but I wanted to hear his.\n\nTT put his arm around a very angry Maggie and kissed her forehead to calm her down. \n\n\"Well now. I think we want to take care of Mr. Randy Johnson for all the trouble he's caused our client. He is just now a very nice man. So, the first thing to do is get Mr. Conner in here and let him know what his clerk has been doing. I believe Mr. Conner will take the appropriate action against our Randy. Then, we let Mrs. Conner know that her husband has been the perfect gentleman. That should be easy with what you have. Finally, we need to get the two of them in here together and let them know what they have and how easy it can be taken away. \n\n\"Maggie, you should talk to the Mrs. and let her know her husband is innocent, while I talk to the Mr. That should be fun when he finds out his wife was spying on him but I can calm him down with a good talking to. Then, we'll bring the two of them together and make both happy.\n\n\"Bruno my man, you do good work. This deserves a $100 bonus.\" At my attempt to refuse, he said, \"That's all right. Don't thank me, just take it and enjoy.\"\n\nMaggie rose and took me by the hand to lead me out of the office. As she walked me to the door she said, \"You know you just made his day don't you? I told him that woman loved her husband but he just had this idea something was wrong. Now he knows.\"\n\nWell, that took care of the Conner case and I was all of $900 richer. Of course, I probably lost another couple of thousand in business while I was on the case, but it was for TT so I chalked it up to paying back a debt. A debt as far as I was concerned would never be fully paid. \n\nOne last thing. I went back to Mr. Conner's office to see if the mouse problem was properly resolved to our Cindy's satisfaction. It was and she was quite pleased. After some conversation and a cup of coffee in the cafeteria, she agreed to see me socially. That was a couple of weeks ago. This weekend, we're driving up to a small cabin in the mountains that I own. She's bringing a small suitcase since we plan to be there for the weekend. A very small suitcase! Seems she thought I was very cute. I think she needs glasses but that's just me.\n\nThat was the Conner case and it turned out well for everyone but Randy Johnson. Just for your information, my weekend with Cindy went very well and we have plans to do it again. Finally, I want to extend my apologies to Mike Hammer. Sorry Mike, but I just think TT is better."
    ],
    "authorname": "thecelt",
    "tags": [
        "private eye",
        "characters"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tt-spalding-the-conner-case"
}