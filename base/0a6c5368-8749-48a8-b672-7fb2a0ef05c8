{
    "title": "Dex and the Twins at College Ch. 10",
    "pages": [
        "Dex and the Twins at College\n\nCHAPTER 10\n\nThe weather forecast for tomorrow, Halloween, was for overcast skies, no wind and mild temperatures. Thankfully, there was no rain. Not so today. It was pouring and windy. That combination was stripping the trees of their dead leaves, which blew horizontally past the family room picture window as we ate breakfast. We were all thankful that I had my car.\n\nI wanted to leave early so I wouldn't have to park so far away from my first class. I grabbed an umbrella from the coat-closet in the foyer just in case everyone else had the same idea. We were all dressed in raincoats as we sprinted to the car. I thought, 'I should have put my car in the garage last night.' A big, wet Oak leaf smacked me in the face as I opened the driver's door. It fluttered on my cheeks in the wind and disappeared before I could get my hand up to tear it away.\n\nI dropped June and Julie right at the door of their classroom building and they piled out of the back door without a word and ran for it. I watched them until they were inside and muttered to myself, \"Have a good day. I love you guys.\"\n\nI drove across campus to my first class. I was early, so I went to the lobby and found a comfortable chair and studied while I waited. I was alone and, besides the howling wind and leaves slapping at the windows, it was quiet. Then I heard the front door slam shut and the sound of stamping feet and a collapsing umbrella. I didn't pay any attention until I saw a person come in and sit down across from me. I glanced up to see who it was. It wasn't anyone I knew but I recognized her from somewhere. She was smiling as if she knew me. I went back to my book but my curiosity got the better of me and I looked back up at her. She was pretty. She had that smile on her face like she knew me but also knew that I couldn't place her.\n\nAs always, I scanned down her body but I couldn't make any assessment with her bulky raincoat on. She had bare legs and wore sneakers. Her legs were nice. I went back to my book.\n\nI heard the rustling of her raincoat and realized that she was getting up from her chair. I watched her with my peripheral vision expecting that she was leaving. I was a little surprised when she came toward me and sat down in the chair beside mine. I looked at her and tried to place where I'd seen her before. I definitely didn't know her name.\n\nShe unbuttoned her raincoat and pulled it open. She pulled her cell phone from an inside pocket and began thumbing the icons. She found what she was looking for and pushed her phone in front of my face. On the screen was a close-up shot of me in nothing but nylon gym shorts, coming out of a Dorm room as I was pulling a tee shirt over my head. She flicked her thumb across the screen and the photo was replaced by a close-up shot of a whiteboard lined in a grid. In the grid of primary focus were the words, 'Dex: 3+2+2'.\n\nIn that instant, I knew where I'd seen her before; in the hallway of Alicia's dorm. She had been one of the girls snickering at me in the hallway while I waited for what I assumed was for Alicia to clean up her room before letting me in. I had the feeling then that they knew what I was there for, before I did.\n\nI looked up from the phone in her hand and made eye contact with her. She had a huge grin on her face as she pulled her phone back and stuffed it back in coat pocket. I could feel the heat of embarrassment on my face as I recalled how stupid I felt when I realized that I had been duped my Alicia.\n\nThe girl stuck out her right hand and said, \"Hi Dex. I'm Sephia.\" I took her offered hand briefly. \"You remember now where you've seen me?\" she said. I smiled and nodded. She went on, \"Everyone in our dorm knows about the competition going on between Alicia and Dori. They are both beautiful and have no problem reeling in the guys, but Alicia landed 'Moby Dick', so to speak.\" She giggled and her face flushed. She went on, \"Everyone else in the dorm are betting on their competition. My money is on Alicia.\" She chuckled as her eyes revealed that she had an amusing thought. She said, \"Dori is going to have to be on her back for a week to catch up now.\" She laughed. \"You know that Dori will be putting on a full court press to get you into bed so she can get those seven points back.\" We both laughed. I knew that wouldn't happen.\n\nThen she changed the subject, \"We must be in similar majors to have classes in the same building.\" I told her that I was in Engineering and she revealed that she was in physics. We were both geeks, I guess. We chatted together until it was time to go to classes. As we headed our separate ways, she said, \"It was a pleasure to meet you, Dex.\"\n\nI waved and said, \"Same here. I'm sure I'll see you around.\" She grinned and waved and was gone. As I headed for my class, I realized that I hadn't taken the opportunity to check out Sephia's body under her open coat. That was unusual. She was just a pretty face with an unknown body. She was funny and smart and I had really enjoyed chatting with her.\n\nAfter my last class, I drove to the fieldhouse to work out. It was still pouring but the wind had died down considerably. The lacrosse field was empty, as I expected, so June and Julie were either in the fieldhouse Juice Bar waiting for me or they had walked home in the rain.\n\nWe didn't feel the need to maintain a distance between them and me anymore. The word was out that the two super-hot blonde Freshmen twins were housemates with a super-tall, ripped Junior guy. Some knew other details too, but none of those details revealed that we were related in any way. I checked in the Juice Bar and the twins weren't there. Molly was though and she waved me over to her table of cheerleaders. I walked over but had no plans to stay. I asked Molly if she had seen June and Julie, not even thinking that they had probably never met.\n\nMolly had a blank look on her face and she said, \"I don't know them. Do I?\" I could see the gears turning and she broke into a smile and said, \"Are they the gorgeous blonde twins on the lacrosse team?\" I nodded and she continued, \"I think they were here earlier. What are you looking for them for?\" She revealed a bit of jealousy but quickly pushed it away.\n\nI said, \"We're housemates and I was going to give them a ride home, but they probably walked. They'll be soaked.\" I could see the gears turning again as soon as I said housemates. I said, \"I'm surprised that you don't know them. You'll meet them tomorrow night.\" The others at the table all began tittering when I mentioned 'tomorrow night'.\n\nI excused myself and went to the locker room to change. I had a great workout and then showered and dressed in the same clothes. I didn't stop at the Juice Bar but I waved to Molly, who was still there with her team mates.\n\nThe rain had subsided to a misty drizzle as I drove the five minutes to home. I dropped the umbrella back in the foyer closet and found June and Julie sitting on the floor of the family room with the box of Halloween costumes between them. They were pawing through the choices.\n\nJulie had separated the Captain Marvel red, blue and gold costume and a strapless top Tinkerbell costume. June had pulled aside a Spiderman costume and the Wonder Woman costume. The Spiderman costume was probably for a guy but I was intrigued by the vision of June providing a different set of curves and bumps in the form fitting material. They were both fretting over which one of their choices to pick. Julie held her top two choices up to me to help her choose. She'd be smoking hot in either of them. The Tinkerbell costume would show more skin and I pointed at that one. She grinned at me and tossed the Captain Marvel costume back in the box. She must have already decided on the Tinkerbell costume or there would have been push-back on my choice.\n\nJune held up her two choices. This was a tougher choice. She would fill out the top of the Wonder Woman costume every bit as well as Linda Carter did when she played the original Wonder Woman on TV back in the seventies and far better than the current Wonder Woman played by Gal Gadot. Gal Gadot is a gorgeous woman but a little light in the breast department to play a credible Wonder Woman after the standard was set by Linda Carter and the original comic book character. The Spiderman costume would cover all of June's assets in the bright red form fitting material, but I kept getting a vision of June's big boobs, slender waist and gentle slope to her hips and perfect ass and down her straight tapered legs. I pointed at the Spiderman outfit. She wasn't as sure as Julie had been and she lifted both costumes up and down in her hands like she was weighing them on a double-pan balance scale. She went with my suggestion and gave me a sultry smile.\n\nAll of the costumes looked so small, even my Captain America costume. I already knew how much they stretched and the more they stretched the more form-fitting they became. The girls would drive the crowd crazy tomorrow night.\n\nThe girls grabbed up their choices and thundered up the stairs to their room. I picked up the box and set it on the bar in the kitchen and grabbed a beer out of the refrigerator. I popped the tab and sat down in the family room and waited for the fashion show to start. I had a pretty good idea about where the fashion show would lead.\n\nJulie came down the stairs first, dressed in her Tinkerbell costume and walked into the family room. I mumbled to myself, \"Fuck.\" The costume came with a pretty nice-looking blonde wig. She had it on and the hair was piled up in a ball on the top of her head. There were bangs and it was short on the sides to show off her pixy ears which she held in her hand at the moment. She would use spirit gum tomorrow to keep them in place over her ears. The top was a light-green, and strapless. It was tight and a large percentage of her big boobs were being forced out of the bustline. The bottom was a very short, light green skirt that was cut at the hemline like it had been fashioned out of large jungle leaves. She spun around to show how the pixy wings fastened to the back of her strapless costume at her shoulder blades. The top of the semi-transparent wings tapered to a point about six inches above her head and the rounded bottom lobes came to her waist. She topped her ensemble off with a pair of stilettos. She showed me the little green slippers with powder-puff white balls on the top that came with the costume.\n\nJulie did a few model-poses and said, \"These slippers didn't add anything.\" I agreed. I'm a big fan of stilettos anyway. She said, \"I have the wig on now but I can do better with my own hair tomorrow. One of her pixy ears, that were at the moment just resting on her ears fell off and she giggled. You can fix me up with these tomorrow, right?\" I nodded.\n\nI motioned for her to keep turning around. There was never a sexier Tinkerbell ever. My cock had been flirting with an expansion but I couldn't have foreseen how hot Julie looked and I had to make a quick adjustment in my pants. Julie giggled when she saw me do that.\n\nJune thundered down the stairs and came into the family room and stood beside Julie. June ogled Julie all over and Julie did the same to June. She hadn't pulled the Spiderman head mask on but somehow, she had squeezed her incredible body into the form fitting top and bottom. The spiderweb theme over the bright red spandex went from her neck and flared out over her big boobs and then tapered to a point between her thighs. A big white spider sat above her bustline. The same red under spiderweb theme started at her biceps and ended at her fingertips and also came up out of her crotch and over her hips like a pair of high-hipped bikini panties. The rest of the costume was shiny blue spandex on her upper arms, back and down her legs. She had on bright red spandex high-calf boots to finish it off.\n\nEven my imagination, when I first envisioned June in this outfit, was nowhere near reality. June held up the red full-face mask emblazoned with the signature spiderweb, with the big spider eyes and said, \"This thing is hot. I'll only wear it when I don't want to be recognized. Otherwise, what you see is what you get.\"\n\nJune spun around a few times to show me the back and her ass in that tight material was awesome. Julie was grinning at June as she cocked her hips and thrust out her hands, palms up and cocked back like the spiderman character in the movies when he was shooting a web.\n\nJulie looked back at me and said, \"What do you think? Any suggestions?\"\n\nI said, \"I don't know how you improve on perfection.\" The girls laughed and came over to me. Spiderwoman went to her knees and unzipped my pants. She glanced to her left when Tinkerbell's other pixy ear fell off and Julie bent over and picked it up. She put both of them on the coffee table. My cock had pushed out of my pants and it slapped June in the face when she turned back from the coffee table. She giggled and grabbed the shaft.\n\nJulie was getting down on her knees beside June and as June began a tight-fisted hand job, she said, \"Oh yeah. I forgot. This comes with a wig of long red hair. It's pretty realistic. It comes down to the middle of my back. What do you think? Stay with my blonde hair or go with the wig?\" Julie had just pushed her lips down my shaft and I completely lost the gist of June's question.\n\nJune pulled her hand back up to the ridge trying to force Julie off the end. Julie took my knob between her teeth and mumbled, \"You snooze you lose.\" Julie pushed her lips back on and began her famous blow job. June gripped what was left and started jerking me off to the rhythm established my Julie's lips. I pushed my back against the sofa and lifted my hips toward Julie's face. She made a pass down my shaft pushing June's hand off as she buried her nose in my pubic hair.\n\nThen Julie pulled back and off and moved back allowing June to take her place. When June slid forward and pushed her lips on, Julie stepped in close behind her and reached around June's head on both sides and grabbed my cock like she was pulling a rope and vigorously stroked my cock as June continued her blow job while she tried not to get punched in the face by June's flailing hands.\n\nI let out a groan, \"OH FUCK. YESSSS,\" and moments later I humped up my hips and launched my load in June's mouth. She heaved up and gulped what she had in her mouth and then braced herself for the next load. Her eyes pinched shut and she gagged but she never came off. Julie, as Tinkerbell, continued her double hand job until I was done.\n\nJune pulled her face off and grinned at me. Tinkerbell moved around to June's left side and lifted up her short green skirt that barely covered her perfect ass and she wasn't wearing underwear. She grinned at June, who said, \"Great, I have no idea how I'm going to get any in this outfit,\" as she looked down at her costume.\n\nI laughed and said, \"Same here.\" I looked at Julie holding her skirt up. Her sex was soaking wet. I nodded at it and said, \"Is that how you plan to go tomorrow for the party or is that just for me?\"\n\nJulie giggled and said, \"It's for you right now, but yes; that's how I plan to go for the party.\" I grinned as a whole new dimension of the party came into focus in my brain. Tinkerbell ran her fingers down through her wet pussy and then she climbed over my thighs and lifted herself up high enough to push my cock into position. Then she groaned hard as she slid down my shaft. I did too. Damn, she's a good fuck. Both of them are. Tinkerbell made a slight adjustment and then peeled down her shoulder-less top to expose her big, round tits and went to work thrusting herself on and off my cock. June fondled my balls which added greatly to the stimulation. I doubted that I'd get off or at least I wouldn't be able to cum in time for Julie's orgasm, which I could already feel building in her body as that familiar muscular tension started to grow.\n\nJulie was heaving her breath out as she slammed down my shaft and sucking it back in as she came back up. It seemed that my cock, plunging into her, was forcing air from her lungs. That was obviously ridiculous but the timing made it seem that way. Julie began tossing her head from side to side as intermittent groans became one long groan. Her blonde wig flew off to the floor and Julie didn't even slow down. Her real blonde hair that had been pinned to her head came free and cascaded down over her boobs and swept from side to side across her hard nipples.\n\nJust that slight additional stimulation from her hair pushed Julie over the top of her crushing orgasm. She screamed hard as she began bucking her pussy on and off my cock. I reached up and cupped her breasts and thumbed her nipples and she screamed again and started chanting, \"OH JESUS. OH JESUS. OH JESUS.\" Her pussy was clamping hard on my cock and I wondered if it would stop.\n\nWhen her pussy spasms finally did stop, her chin dropped to her chest as her hair covered her face. She was gasping for oxygen. Julie had done all the work but I was gasping for breath too. Julie pitched forward and her face collided with my chest. I held her there with my arms across her back. Her pussy had pulled off my hard cock when she collapsed.\n\nJune stood up and began peeling her Spiderwoman pants down over her hips and then swung her hips from side to side to get them off one leg. She didn't bother with the other leg. Her pussy glistened wetness and she ran a hand down through her sex. Then she climbed onto my thighs behind Julie, pulled my cock back from Julie's butt-crack and quickly mounted me. I let out another groan as did June as she let gravity drop her down my shaft.\n\nJune sat down hard and started grinding her ass. She reached behind herself to find my balls and she said, \"Your balls tell me that your cum isn't very far away.\"\n\nJulie giggled into my chest and mumbled, \"Are you a new kind of Taro Card reader? You read moving testicles?\" We all burst out laughing. When June started moving again, I realized that she wasn't wrong. I could feel that familiar pressure building. I tried to pull it forward and by the time June groaned into her orgasm, I was ready too. June's motion was pushing Julie's tits forward and back across my ripped abs and she groaned from the stimulation to her hard nipples.\n\nJune's orgasm seemed to ooze out of her. I could see it building in her face and eyes. Mine was the opposite as I rocketed jizz up my shaft into June's pulsing vagina. Her pussy was clenching like usual but with less urgency. She seemed to be luxuriating in the sensation as she gently writhed her body like a serpent. She had a deliciously sexual smile on her face as she writhed her hips on and off me. She milked every drop and then I dropped my hips to the sofa. I hadn't even realized that I'd been heaving them upward with each shot.\n\nWe stayed there like that with Julie face down in my chest and June face down on Julie's back. My softening cock was still buried in June's pussy as it randomly pulsed, causing a soft moan from her. Just to mess with her, I'd randomly flexed my semi-erection in her which caused a shudder and a louder, but similar moan from her.\n\nWhen my flaccid dick fell out of June's pussy, there was a flood of cum that came with it. June pushed her hands down between her thighs and struggled to get off mine. She tripped on the one Spiderwoman pant leg and with one hand jammed to her pussy, she yanked the remaining pant leg off and ran to my bathroom. Gooey cum had drooled down my shaft and over my balls to the sofa below.\n\nJulie reached behind her and dragged her fingers through my pubic hair and giggled as she mumbled into my chest, \"Your cock is covered in cum all the way down to your balls.\" She pulled her cummy fingers to her face. Her fingers were covered in pearly, white gooey jizz. She pushed all four fingers into her mouth and sucked them clean and then went back for more. She offered me some and I declined. She giggled and stuffed her offered fingers in her mouth with a grin on her face.",
        "June came back with a hand towel stuffed in her own pussy and another for Julie and stuffed it up under her ass. She bent down and sucked my flaccid dick between her lips and used her hand to stuff it all in her mouth. She lashed her tongue around the soft shaft until she was satisfied that I was clean. Then she pulled off the end with a loud 'SMACK'. She giggled like she always did when she did that. Julie giggled too.\n\nJulie rolled off me to my right and took the hand towel between her thighs with her. She lifted herself so she could kiss me and I kissed her back, ignoring her cum-tasting tongue that she jammed into my mouth. She giggled as she pulled away. She had an evil look on her face.\n\nBoth girls picked up the pieces of their costumes and thundered up the stairs. Moments later, I heard their shower come on. I went to the kitchen with my soft dick hanging out of my cum stained pants. I got a wet sponge and cleaned cum off my pants and my balls and thighs and went back and did the same on the sofa.\n\nI was starving, so I made a bologna sandwich and grabbed a handful of potato chips. I watched some TV until it was late and then went to bed. I opted to shower in the morning since June had cleaned me up with her mouth and tongue.\n\nI wasn't surprised to be woken from a fitful sleep by the twins in the middle of the night when they came down for another round. Not a word was spoked and the only sounds was our heavy breathing and the sounds of sex as they took turns riding 'cowgirl' until each had an orgasm and then they shared blow jobs and hand jobs until I blew my load down their throats. They kissed my knob and were gone. I curled up in a fetal position as my cock softened. I slept like a stone after that.\n\nI had early classes so I was up, showered and going before the twins made any noises upstairs. I was going out the door when my cell phone rang. As I slid into the driver's seat, I looked at the screen to see \"MOM\". I answered. Without any hello or anything, Mom said, \"I forgot to tell you that the caterer will be there this afternoon to set up for tonight's party. I tried to get Fatima's company but she wouldn't drive that far. I don't blame her. I've checked out a local caterer and they have good references. They provide both food and booze. They'll provide two servers to keep the food replenished and two bartenders.\"\n\nWhile she was saying all that, I assessed my class schedule and concluded that I'd need to blow off the last class of the day so I could be here to let them in. The twins had lacrosse practice. When Mom was done talking; I said, \"There won't be many people here over the drinking age. I don't know if you need two bartenders.\"\n\nMom laughed and said, \"It's a house party with adults present and besides, I paid extra for them to not card anyone.\" I thought, 'Of course you did.'\n\nI said, \"Okay Mom, I'll make sure I'm here. Can't wait to see you in costume tonight.\"\n\nShe giggled and said, \"I can't wait to see you in that Captain America costume. Gotta go, Baby. Bye.\" She hung up before I could say anything else.\n\nI started the car and drove to campus, thinking about costumes. I was going to have an erection in my costume all night as I thought about June and July's modeling session last night. I realized that I didn't see the box of left-over costumes on the bar where I left it last night. 'I guess the girls took it up to the spare bedroom,' I thought. I had planned to offer the extras to invitees if they let me know that they couldn't get one. It was beginning to look like they'd go unused. Too bad. They were very expensive and detailed.\n\nI was back home in plenty of time to meet the caterer and they arrived a little after 4:00 PM. The twins should be home by 5:30 and it would be getting dark by six. The party was scheduled to start at seven. Some people would be early and others would be late. I figured that we should be in costume and have the decorations system on by six.\n\nThere was a total of five caterer employees in the truck and the car that followed it into the driveway. The truck would leave as soon as everything was unloaded, leaving the two servers and two bartenders that Mom had arranged for. The servers were women in their late twenties and they were dressed as lusty wenches in a British Pub with pushup bras forcing their boobs out of their low-slung linen tops. The bartenders were young guys, also in their late twenties. They were dressed as Roaring-Twenties Mobsters. I told them they could set up in the dining room.\n\nAt six o'clock, the twins came gently down the stairs. Julie had fixed her real blonde hair into a ball on the top of her head like in every photo of Tinkerbell. She wore a green self-stick mask over her eyes to hide her identity. She had spirit gummed the latex pixy ears over her own. Holes in the latex ears allowed her to hear. The form fitting costume had the same effect on me as it did last night. She went with the stiletto heels instead of the slippers which added sex-appeal. She giggled and lifted her short skirt and she was wearing a thong. I guess she had second thoughts about going commando.\n\nJune had opted for a red, with overlaid black spiderweb, mask like Julie was wearing. She had the full head/face mask with the big spiderman eyes in her hand. She held it up and said, \"I can't drink or eat in this thing and it's so hot.\" Other than the mask, she wore her Spiderwoman costume just like last night. I marveled at her amazing body encased in that form fitting material. I wanted to call it spandex but I wasn't sure if that was correct. She had on her Spiderwoman boots and gloves. She turned up her wrist and showed me that there was a small metallic cylinder under each cuff of her long sleeves. She pointed her hand at me and pulled her hand back and a blast of silly string shot out from the cylinder.\n\nJulie jumped back startled by the spray. I burst out laughing and said, \"That's incredible. Can you walk up the wall and across the ceiling?\" June laughed and shook her head.\n\nThe efforts in the dining room to set up the bar came to screeching halt. The two bartenders just stood there gawking at Spiderwoman and Tinkerbell with there mouths open and eyes bugging from their skulls. I had to laugh. The looks on their faces were cartoon-like.\n\nI told the twins to hold down the fort while I got into my costume. My erection was evident and I had no clue how I was going to hide it in my skin-tight costume. The top was no problem. It was just difficult to stretch it over my pectoral muscles and push my biceps and triceps down the skin tight sleeve. The pants weren't a problem until I had them up over the hem of the shirt. I pushed my erection to every location I could think off. The foam cup helped matters to hide the specific outline of my cock but the added foam made my package stick out even further. I worked at it in the mirror and found the best solution, but even that wasn't very discreet. I pulled on the long gloves that came up almost to my elbow. The stretch boots came up almost to my knees. I pulled the cap with the big white star over my head after I placed the self-stick vinyl eye-mask like June and Julie were using. I would probably remove the hood because, like June said, it was hot.\n\nI didn't like the feeling of the gloves. I pulled them off and found a pair of scissors in a drawer. I cut the fingertips back to the first knuckle and pulled them back on. I flexed my fingers and this was much better.\n\nI came out of my bedroom in the complete outfit. Even the lusty-wenches were gawking at the twins until they saw me walk into the room. I noticed that they looked wide-eyed at each other and even though I couldn't hear them. One of them mouthed the word, \"Fuck.\" I chuckled as I went to the living room and powered up the control station and turned on all of the various animatronic characters, speakers and lights.\n\nThe two lusty-wenches let out hair-raising screams when the skeleton, sitting in a dining room chair stood up. The skeleton had been there in plain site as the barmaids worked around it but it was a completely different story when it stood up. The bartenders were in the family room when I turned on the system. They reacted to the barmaids scream and hurried toward them. A motion sensor picked up their movement and a hand and forearm crawled up over the back of a chair and the mobsters jumped a foot and one yelled out, \"Holy Shit.\" The twins burst out in a nervous laughter. They had seen it last night, but it still caught them by surprise. The bartenders eased out of the family room in the center of the room hoping they wouldn't trip anymore surprises.\n\nI went outside to see how the decorations would look like to new arrivals. Everything that was on last night was on now. The lightning storm and wind and creaking caskets and animatronic creatures hiding in the bushes. The blinking red eyes all across the lawn. I smiled to myself. This was going to be awesome.\n\nInside, my cell phone rang and I picked it up off the bar. It was Mom. They had got to their hotel room a half-hour ago and they were getting into their costumes. She still wouldn't tell what she and Dad were dressing as. I told her everything was ready to go here. I heard Dad in the background saying something and Mom said she had to go and she hung up.\n\nAt six-forty, several football players showed up dress as Gladiators, with the leather-like boots and open chests under leather straps and canvas loincloth or leather looking pleated short skirts. I'm sure that's not what they were called then. They carried various plastic weapons and had plastic helmets on. The two biggest ones were sharing the load of a keg of beer. They were followed by two more carrying a trash basket of ice. Another was carrying the pump and hose accessories. I pointed out the back door and they trooped through the house to set up the keg on the back patio.\n\nWhen they came back in with solo-cups full of sudsy beer, they got their first looks at June and Julie. They practically plowed into each other as they stopped to gawk at them. June and Julie were more than used to guys acting this way but they giggled in stereo.\n\nThere was no way to tell if I knew the guys with the keg. I wasn't surprised to see that the football players had shown up without ever sending a single RSVP and I don't remember inviting so many of them.\n\nOne of them said, \"Hey Dex. Looks like it's going to be a great party.\" My height gave me away as I knew it would. One of the guys in the back was trying to maneuver to get a better look at Tinkerbell and Spiderwoman and he tripped the sensors for the skeleton sitting in the dining room chair. It startled him, frightened him would be a better description, and he screamed like a girl as he jumped away from it. His scream startled several of the others and they jumped back away from the standing skeleton. The skeleton sat back down in the chair, which startled the rest of them.\n\nI heard a blood-curdling scream from out front and I went to the front door that had been left open to the full-glass storm door. I stepped out under the portico and was met with another scream worthy of any horror-film actress.\n\nHarley Quinn was standing in the driveway with a horrified look on her face. Her companion, The Joker, was half-way up the walk and frozen in place. A strobe lightning flash revealed the horrified look on his face. Another growl from the bushes was followed immediately by screams from both of them. The Joker wasn't a guy it was Emma with a short green wig on, face painted like The Joker and a long purple coat over green pants. Harley Quinn was Eva and I chuckled because I had thought she looked a lot like Harley Quinn when she was here before with her side pony-tails. Now they were dyed red on one side and blue on the other. This time she had the messy lipstick job over a white-washed face. She wore a tight tee shirt over her gigantic boobs that read, 'Daddy's lil Monster' and leather studded bikini shorts.\n\nWith me urging them on they cautiously slinked past the growling monster in the bushes and stopped dead in their tracks and whimpered at the sight of the coffin with the skeleton hand drumming its fingers on the side. They side-stepped that obstacle and made it into the foyer with relieved looks on their faces until they saw the coffin in the foyer. They both grabbed me and closed their eyes as I led them into the house. I figured that we'd hear screams from them all night as other little surprises jumped out. Once they made it to the kitchen, Emma, aka 'The Joker', threw her arms around my neck and pulled her big boobs against me. She was trembling. Eva was already on the prowl as she looked around at the gladiators while she smacked the real baseball bat into her left hand. This prompted the gladiators to do the same with their plastic weapons of the Roman era. It almost looked like a mating dance.\n\nA very curvaceous 'Green Lantern' walked in with a 'Snow White', who was followed by her 'Seven Dwarfs'. They all wore masks covering their eyes so their identities weren't apparent. It was obvious that the 'Dwarfs' were females though. It was also obvious that the twins knew who they were as they raced over and everyone gave hugs all around. My guess was that they were the Lacrosse Team, so, Snow White was likely Coach Mandy in a black wig. She was eye-balling me.\n\nSnow White came over and said, \"Hi Dex.\" I recognized her voice. It was Mandy. I had to laugh. I didn't recognize anyone here but they all knew who I was. I looked her over in her costume. Her black wig was in a style associated with Snow White in the cartoons. So was her costume. Mandy leaned in and whispered, \"Later?\" I smiled and just nodded.\n\nI took her over to the dining table to show her the buffet. The skeleton stood up like it had before and Mandy was startled and stopped dead in her tracks. The skeleton sat back down. Mandy said, \"Where did you get all these decorations? I've never seen anything like it.\"\n\nI laughed and said, \"You ain't seen nothing yet.\"\n\nI heard the thundering hooves of the twins going up the stairs and saw that they were showing their team mates around. It wasn't long before we all heard screams from upstairs, followed by the thundering herd of Dwarfs flying down the stairs. The twins followed as they were laughing hard. One of the Dwarfs yelled, \"What the fuck was that creepy thing under your bed. Fuck. It scared the shit out of me.\" The twins roared with laughter and that got the other Dwarfs going too.\"\n\nThe 'Green Lantern' came over to 'Snow White' and me, right into an embrace with Mandy. Then she turned to me and threw her arms around my neck and pulled me down for a kiss. It was Coach Vivian. She whispered in my ear, \"Have you ever fucked in a coffin before?\" I smiled at her and shook my head. With a wink and not another word, she turned to the buffet table.\n\nAnother small group of costumed partiers came in and went right to the bar. I had no clue who they were. They were dressed as 'Aliens', with bulbous head masks. Half of them were females dressed in sexy outfits.\n\nA group of 'Pixies' arrived. They all had the look of wide-eyed fear on their faces after running the gauntlet to the front door. They must have coordinated their costumes. Their hair was pulled back to a ponytail on the very top of their heads. Red hair, blonde hair, brown hair. They all had pixie ears glued to their real ones. Their costumes were similar to Julie's Tinkerbell costume. They were off the shoulder, exposing a lot of cleavage if the girl had enough boob to show any. The redhead sure did. She came right to me and pulled herself up for a kiss and then said, \"Great party.\" It was Molly. I had recognized the bustline but her eyes were covered by a mask. I assumed that the other 'Pixies' were the Cheerleading Squad.\n\nAlmost in unison came screams from the dining room and the family room. One of the 'Aliens' had been confronted by a creepy hand and forearm crawling up the back of a chair in the family room. The same skeleton, that had got so many already, stood up in the dining room. I suspected that the skeleton would get everyone at least once as people went to get food.\n\nMolly elbowed me in the side to get my attention and said, \"Check this out. It's my mother.\" I looked toward the foyer and a regal looking Maleficent dragging a long black cape behind her. The cape had a high popped collar and it covered a long black, low-neckline dress. A lot of cleavage was on display. A signature antler like headdress was on her head. She wasn't wearing a mask. No one, besides her intimate friends, knew who she was anyway. She seemed to glide in her outfit as she came over and hugged Molly and then me. She whispered in my ear, \"The decorations are amazing. The wind and lightening and thunder out front are a nice touch. The growling in the bushes scared me a little.\" She stretched up and kissed me on the cheek and whispered, \"Do you have a boner?\" I put my hands to my crotch and shook my head. \"Fuck. You're busting out of your pants already. When you do get one. You're not going to hide it in that outfit.\" She giggled and nudged my hands away as she took another look.\n\nAnother small group of three walked in. One was in a Wonder Woman costume that looked suspiciously just like the costume that came in the box from Mom. The two taller ones were dressed as 'Batgirl' and a female 'Robin'. Their costumes also looked familiar. They were wearing eye masks over their eyes except 'Batgirl' wore the full head and face mask worn by Batman in the comics. I didn't know 'Wonder Woman' but I sort of recognized 'Batgirl' and 'Robin'; I just couldn't quite pull names from memory. They seemed to be jumpy and I assumed it was from their run through the outside gauntlet.\n\nI was trying to remember where I knew them from when Mom and Dad arrived. The room was like the king's court as everyone went silent when the king and queen arrived. Mom was dressed as a queen; the 'Red Queen of Hearts' from the 'Alice in Wonderland' story. She was in white-face with blue eyeliner and bright red lips and bright red frizzy hair with a crown on top. She was a lot sexier than in the movie. Like queens do, she wore a floor length fur coat over a very low cut, floor length, red dress. Her high-riding breasts were on full display and that erection that Molly's mother, Linda, warned me about, was escaping from the foam pad in my pants. Linda noticed immediately and her hand went down to feel it expanding. Her fingertips scratching along my shaft hurried thing along.\n\nDad was dressed as the Mad Hatter as depicted by Johnny Dep. The grungy black top-hat over a disheveled mop of red hair. He was in white-face with his eye-sockets painted in red and black. He wore an unbuttoned blue waist coat over a maroon double-breasted vest. His pants were baggy. Neither of them wore masks. No one but my sisters and I knew them.\n\nThey passed through the crowd as everyone looked to see who they were. Mom stood in front of me and eyeballed me from head to toe and then offered her red lips for a kiss. I bent down slightly and she kissed me very lightly on the lips. I swung my arms around the room and said, \"What do you think, your majesty? Pretty great huh?\" As she looked at all the spooky creatures, like big black spiders scurrying around on huge spiderwebs in the corners. She was distracted by scream as another girl got caught by the skeleton in the dining room. I shook Dad's hand. He was looking all around and grinning like a Cheshire cat.\n\nDad laughed and said, \"Your mother was in such a hurry to get here from the hotel room that she got pulled over for speeding. The cop was surprised to see us in costume. Your mother just pulled her dress down a little lower and he gave us a warning to slow down.\" Mom was listening to Dad's story and she pulled her dress down for me like she had for the cop. He got quite a show.",
        "Mom moved in close and said, \"If that cop had delayed us any longer, I was going to give him a blow job. Is that hard-on for me? I've missed it so much. Every woman here will be wanting a piece of that. The Queen commands your presence in my chambers at mid-night.\" She giggled and turned to 'Maleficent', who was still standing beside me. They both scanned each other. Mom towered over Linda and Mom's big, round boobs were right in Linda's face. Mom said to her, \"Your hand was in his crotch when I came in. What do you think?\"\n\nLinda looked straight back at Mom and said, \"I think there's enough for both of us.\"\n\nMom smiled and said, \"I think you're right.\" She turned back to me and said, \"Have 'Maleficent' here join us?\" With that she headed for the bar with Dad close behind. He examined Linda's boobs on the way by.\n\nLinda said, \"Who are they? She's gorgeous.\"\n\n\"Ummm .. They're the owners of the house. They live elsewhere and rent it to me and my housemates for a ridiculous cost.\" I chuckled and then continued the lie, \"She does require a good fuck whenever she's in town.\" It occurred to me that the last part wasn't really a lie. Linda just grinned at me. I could tell that she knew I wasn't lying about fuck part.\n\nShe leaned in and whispered, \"What's happening at mid-night?\" I just grinned at her and walked toward the foyer to greet two new arrivals in a 'Catwoman' costume and a Johnny Depp stylized 'Pirate' costume. 'Catwoman' filled her costume out every bit of sexy as Halle Berry did when she played the part in a movie. The curves in the 'Pirate' costume told me it was a woman. They were both locked onto my eyes as I approached to greet them. My erection had subsided and retreated to the foam pouch, but as I scanned 'Catwoman's' curves, I was getting that feeling again.\n\nThey each gave me a sultry smile and pushed past me heading for the bar. I was sure that 'Catwoman' was Alicia. It was her height and the way she moved. If that was true, then the 'Pirate' was probably Dori and I was sure she would be looking for her seven points.\n\nI watched as they walked to the bar. They hadn't been invited but I was sure that the word had got around campus. There were way more people here than were invited. I smiled thinking, 'The more the merrier.\"\n\nThe last person to come was \"Captain Marvel\". She wore the costume but no mask and it was Sephia. Her body, that I had paid little attention to under her raincoat, looked fantastic in her tight costume. She came over to me and said, \"I know I wasn't invited but the word got around. I heard that Alicia and Dori were coming and I wanted to see if Dori got her points. Do you mind?\"\n\nI smiled and motioned with my arm for her to enter and said, \"Consider yourself invited. I'm pretty sure that Alicia and Dori are over by the bar in the 'Catwoman' and 'Pirate' costumes. Sephia looked where I was pointing and she looked back at me and grinned as she nodded.\n\nEveryone was eating and drinking. The 'lusty wench barmaids' were busy replenishing the food and the two bartenders were either busy mixing drinks or chatting up the girls. There were a lot of them. The only guys there were the bartenders, Dad, me and the several football players, dressed as Gladiators. They had all removed their headgear so they could eat and drink. I only knew the names of two of them. Alicia and Dori must have found a few of them that they hadn't bedded yet and they were working them hard, but Dori never took her eye off me for long.\n\nThe booze was loosening everyone up and couples consisting of guys and girls and girls and girls started making their way upstairs to the bedroom or anyplace that was private. I had visions of them casing the house so I went up the stairs to check. In the twin's bedroom was Dad on his back with Julie riding his cock cowgirl style and June was squatting on his face. I guess Dad's aversion to tongue-fucking pussy had been cured. Both girls were moaning and both burst into an orgasm as I was backing out and closing the door.\n\nIn Mom and Dad's room was 'Harley Quinn' aka Eva and 'The Joker' aka Emma laying back on the edge of the king-sized bed with their knees pressed back to their shoulders as two 'Gladiators' stood side by side holding the girl's ankles and slamming their cocks in their pussies. There was a whole lot of moaning and groaning from all four of them.\n\nAnother 'Gladiator' was fucking Dori as she sat on the vanity in the bathroom. He had grips on her lower thighs near her knees as she leaned back against the medicine cabinet. She was getting more points. She was gasping for air and when she saw me look in, she said, \"You're next.\" I just smiled at her and left. My cock was bulging out of the foam cup in my pants and trying to push out the top of my tight pants.\n\nI crossed the hall and pushed the spare bedroom door open. There was a lot of activity in there. Molly and her Cheerleaders were lined up on the two beds with their knees at the edge, with feet in mid-air, while one 'Gladiator' on each bed fucked each of them in turn. 'Pixies' that had no interest in a cock were splayed wide on the bed in front of a kneeling 'Pixie', who ate them out while they got their pussies intermittently fucked. There was a lot of moaning but I doubted that these two guys were going to drive many of the girls into orgasm before they blew their loads.\n\n'Maleficent', Molly's mother, Linda was bent over the desk with her antlered head bobbing forward and back beside the red-eyed skeleton typing on the computer keyboard. Her long cape and dress were piled high on her back as a 'Gladiator' was slapping his big gut on her ass as he fucked her. Around her moans, she said, \"Cum in my mouth.\" He was obviously close and he pulled his cock from her and she spun off the desk to her knees and took his smallish cock to her open mouth and extended her tongue. She smiled at me when she saw me watching.\n\nWhen I left the spare bedroom, Julie and June were coming out of their bedroom, fully dressed in costume again. They saw me coming and they stopped and said, \"Fuck, what a party. Best ever.\" I grinned. I doubted that they even knew what was going on in other bedrooms.\n\nJulie motioned me to come in close and I did. She whispered, \"Who's the 'Catwoman' in our room fucking Dad. She's some kind of hot. She came in when we were about to switch positions.\"\n\nJune added, \"Dad's a pretty good at eating pussy. Not as good as you though.\" They both giggled and noticed my hard-on. June said, \"You're walking around with that thing and you haven't been tackled yet. What are you waiting for? We can take care of that for you.\" She ran her hand down over the length of my bulge. My cock flexed from her touch and pushed back against her hand. She giggled and said, \"OOOO. Someone's going be a lucky girl.\" The twins ran down the hall and thundered down the stairs.\n\nI opened the twin's door and looked in to see Dad's bare ass pile-driving his cock into a half-dressed 'Catwoman' in a missionary position. It looked like Alicia was adding to her total points too. Dad was having a good time. I wondered what Mom was doing.\n\nI found Mom and a half-dressed 'Green Lantern', aka Coach Vivian in the living room in a sixty-nine on the floor next to the sofa. When Mom saw me walk in, she pulled her tongue from Vivian's pussy and motioned me over. Vivian looked up and grinned as she rolled off Mom and grabbed my arm and pulled me down to the floor beside Mom and yanked my tight pants down to my thighs. Vivian was first to find a perch on my cock and she buried it in herself with one push. Mom Rolled up off the floor and planted her pussy on my face. I drove my tongue deep in her wet pussy and she groaned and said, \"Oh my God. I've missed that.\" I thought, 'That's something I'll need to explain later.'\n\nMom said to Vivian, \"Is there a better cock anywhere?\"\n\nVivian groaned hard through a simple, \"No.\" Mom must have been near an orgasm when I came in and already, she was grinding her ass on my face as she exploded into her orgasm. The same must have been true for Vivian as a dozen cycles on my cock brough her to orgasm. After they recovered, they agreed to switch and Mom spread her cape and dress to my side and eased herself down my rock-hard shaft. I had missed her pussy and her ass; which I knew I'd be fucking before she went home. She set up a rhythm and I joined her by pushing my cock up by flexing my ass-cheeks. Vivian came down and kissed me before moving her pussy to my lips. Mom was grinding her flexing pussy on my cock and I flexed my cock back at her. I flicked my tongue from Vivian's anus to her clitoris and she liked all of it.\n\nI heard footstep across the carpet and felt feet take up position on either side of my chest and then I heard the slurping and sucking sounds of a blow job. I couldn't see but one of the 'Gladiators' must have finished up whoever he was fucking and was ready to go again. I knew this guy was going to get the blow job of his life. The sounds changed to 'aaawwwkkk .. aawwkkk' as Mom readied for her throat job. I could tell that the guy was fucking Mom's face. She liked that.\n\nAs Mom took on this guy's cock, she lost her rhythm on my cock and I took over full control while I jackhammered my tongue into Vivian's pussy. Vivian began groaning and yelled, \"OH FUCK. YES. RIGHT THERE. OH MY GAAWWDDD.\" She was grinding her sex on my face. Then the guy with his cock in Mom's mouth groaned, \"UUUNNGGGAAAHHHH,\" as he blew his load. Mom slurped it all in and swallowed after he pulled his cock out.\n\nHe groaned out, \"Jesus lady. That was an awesome blow job. Fuck.\" He stepped off me and I heard him walk away.\n\nVivian went spastic and her hips fired on my face. She leaned forward and put her hands on my stomach as she throbbed her sex on my face. She muttered, \"Jesus Christ. He gets better every time.\" Mom giggled as she went back to work on my cock.\n\nVivian rolled off my face and I lifted my head to see Mom rolling her hips from side to side like a cork-screw on and off my cock. She was still the best fuck I'd ever had. Mom groaned out, \"Oh my gawwdd. Here I go. Fuck, I've missed your big cock.\" Another comment needing explanation at another time. Her pussy grabbed my cock and clenched many times. I suppose I could have tried to catch up with her but I knew I had others who wanted my attention. I'd have a few days with Mom to satisfy her and me.\n\nMom's orgasm was huge and lasted a long time. When she was done, she crawled up my body, pulling herself off my hard cock and she kissed me passionately. I kissed her back the same way. Mom rolled off and stood up as she spread her robe and dress back into place. Vivian was pulling her 'Green Lantern' stretchy pants back on. I laid there on the floor with my cock slapping on my stomach, watching them get themselves together.\n\nMom threw me an air-kiss and led Vivian back toward the dining room. I got up and sprawled my legs as I sat back on the sofa. My eyes fixed on the grandfather clock in the corner of the living room. I still had some time before meeting Mom and 'Maleficent' in the 'Red Queen's' Chambers. I wondered if her chambers would be vacant by then. I could hear a lot of moaning and groaning coming from the family room. I guess the party had degraded into an orgy. No surprise there. I was about to get up and go check the action when 'Batgirl', 'Robin' and 'Wonder Woman' walked into the living room. Their appearance got me wondering again, who they were. I knew I didn't know 'Wonder Woman' because she wasn't wearing a mask. 'Batgirl' was still wearing the full head mask and 'Robin' wore her eye mask and was probably wearing a red-haired curly wig.\n\n'Batgirl' motioned the others into the living room. 'Robin' whispered to 'Wonder Woman', \"See, I told you. Unbelievable, huh?\"\n\n'Wonder Woman's' eyes went wide as she stared down at my bouncing cock. Her hand went to her mouth to stifle, \"Holy Shit. I wouldn't believe it if I didn't see it.\" I chuckled to myself. I'd heard this conversation before. I flexed my cock and it snapped up off my stomach and I held it there for several seconds before it slapped back down on my 'Captain America' costumed stomach.\n\n'Batgirl' went down to her knees on the left side on my thighs. 'Robin' did the same on my right. They both gripped my cock and stroked it several times as 'Wonder Woman' moved to her knees between mine. She didn't even look at me. Her attention was completely on my cock as she nibbled on the right side of her lower lip.\n\n'Batgirl' and 'Robin' pulled my cock back toward 'Wonder Woman' who looked up at my face for the first time with a look that was asking for permission. I nodded and she stretched her lips over the knob and flicked her tongue on the 'spot'. The other two continued jerking me off and giggling as 'Wonder Woman' worked her way gingerly down my shaft, pushing the hands further down my shaft.\n\nShe heaved and gagged and pulled back and offered my cock to 'Batgirl'. She stretched her lips on and started her blow job right away. After a while, 'Wonder Woman' pulled my cock from 'Batgirl' and guided it to 'Robin'. She didn't hesitate and pushed her mouth on and started her blow job. My mind was swirling. I knew who she was, but I couldn't place her. I knew one thing. She had sucked my cock before and so had 'Batgirl'. I had no sense of knowing 'Wonder Woman' other than that she was older than the other two.\n\n'Robin' pulled off and offered my cock back to 'Wonder Woman', who pushed back on again. She was looking up directly into my eyes as she increased her pace. 'Batgirl' pressed her lips to the bottom half of the left side of my shaft and 'Robin' did the same on the right side. They followed 'Wonder Woman's' face up and down my cock.\n\nThis sight was incredibly sexy and my orgasm began swirling. I felt my balls pull up as cum boiled in them. 'Wonder Woman' knew what was about to happen and she struggled to get her lips off my knob. She gripped my cock with both hands and started jerking me off, forcing the other two back. 'Wonder Woman' motioned for the other two to come around beside her and get their faces in beside hers.\n\nI felt my body tense and my orgasm was right there. She smiled up at me as her hands flailed on my shaft. She was going so fast that her top hand flew off my cock and smacked 'Robin' in the face and knocked her eye mask off. She pulled away as she tried to get her mask back in place and said, \"Ooww Mom! that hurt.\" She knew right away that she'd misspoke. I got just enough of a glimpse of 'Robin's' face to know that she was Sandy from the other side of the hedge.\n\nI was well beyond worrying about who they were as a long, powerful, jet of cum rocketed into 'Wonder Woman's' open mouth and across her face. She squealed and aimed my cock at 'Batgirl', who tried to position her mouth to catch the next long steam. She caught some but most launched across her face and mask. 'Robin' was trying to get her mask back in place but she didn't make it before the next shot was aimed at her. She dropped her mask and opened her mouth and stuck out her tongue. She didn't do any better than 'Batgirl', who could only be Sarah and 'Wonder Woman' could only be their mother. That knowledge seemed to add to my orgasm. I blew three streams of cum on each of their faces. 'Wonder Woman' pushed her lips on my knob to collect the last, much less powerful, shot.\n\nShe grinned up at me and pushed the cum out on her lips and sucked it back into her mouth. Sarah and Sandy laughed and Sarah said, \"Mom? That's kind of porn-video slutty.\"\n\n'Wonder Woman' giggled and said, \"It is isn't it?\" She wiped her lips with her fingers and then offered her right hand to me and said, \"Hello, Dex. I'm Grace. I'm their mother, which you already know. I know we are crashing your party, sort of. Your housemates re-invited Sarah and Sandy and left the box of extra costumes on the patio for them. I was hoping to not reveal who I was, but little miss bigmouth gave me away.\" She leaned forward and sucked my hard cock into her mouth again. She pulled back off and said, \"I guess they were right about that too. Does this monster go soft or is it always like this?\"\n\nI chuckled as the three of them began stroking my cock in one synchronized motion. Grace said, \"Thanks for the costumes. We'll get them back to you tomorrow. They must have been very expensive.\" The mystery of the missing costumes was solved. June and Julie were in on this from the moment that I had disinvited Sarah and Sandy. I doubt that the either of them had any idea where this would lead.\n\nGrace, Sarah and Sandy licked cum off their faces and masks before they stood up. She looked down at my bouncing cock and back to my eyes and said, \"We'll need to talk soon.\" I nodded and they turned to leave. Sarah looked back and pushed her tongue into her cheek several time and grinned at me. I grinned back. Sandy was trying to stick her mask back over her eyes.\n\nThey were about to round the corner and nearly collided with June and Julie with 'Snow White' and her 'Dwarf' in tow. After Grace, Sarah and Sandy avoided the collision and disappeared, Julie looked down at my erection and said, \"How many times have you cum?\" I held up one finger and her face burst into a huge grin, \"Perfect.\"\n\n'Snow White', aka, Coach Mandy sat on the sofa beside me and the \"Dwarfs', aka, seven members of the lacrosse team knelt around me on the floor in a semi-circle. June said, \"This is Dex, our housemate. As you can see for yourself, we weren't exaggerating. Dex, this is Mandy, our lacrosse coach.\" Mandy and I shook hands and maintained the ruse that we hadn't met before. Julie went around the semi-circle introducing me to her team mates. They were just staring at my cock bouncing up and down on my stomach. I didn't remember a single name.\n\nJune said, \"Well, I guess we'll leave you guys to it.\" Julie and June reluctantly left the room. There was a moment of silence before one of the girls whispered to the girl beside her, \"Fuck. That's huge. Do most guys have penises like that?\"\n\nThe girl she was whispering to humped up her shoulders indicating that she didn't know but she said, \"I don't think so. I've seen some but none were that big.\" Murmuring swept through the 'Dwarfs'. I looked at Mandy and she grinned up at me.\n\nMandy looked around at her 'Dwarfs' and said, \"Does anyone want to go first.\"\n\nNo one said a word and then the whispering girl said, \"Coach, you should go.\" This brought vigorous nods from all seven of them. Mandy grinned at me again and stood up and pushed me back into the sofa. She lifted her knee length flowing skirt and pulled her thong down her legs. She ran her fingers through her wet pussy and then pushed those fingers into my mouth. I accepted her offer with a smile and sucked them clean.\n\nMandy's lacrosse players didn't know me even by my height so I left my head and face mask on as Mandy turned her back to me and maneuvered herself up to sit on my stomach with her feet on the edge of the sofa and slid down to press her pussy to the base of my cock. The 'Dwarfs' giggled and one said, \"Hey coach, it looks like you have a monster cock.\"\n\nMandy reached down to her sex and began stroking my cock like it was her own. I could easily imagine what the view from the semi-circle looked like. A few moments later, Mandy looked to her left and said, \"Charlotte? Can you hold this so I can get on it?\" Charlotte was reluctant but she got up on her knees and scooched in closer to wrap her fingers as far around the circumference as she could.\n\nShe looked up at Mandy' grinning face and said, \"Jesus, Coach. His dick, umm ... cock is awfully hard. Are you sure about this?\" Charlotte ran her hand down my shaft and back up again.\n\nMandy turned back to me and mumbled, \"I've never been surer about anything in my life.\" She looked down at Charlotte and said, \"Guide the tip into my pussy.\" Charlotte stopped stroking my shaft and Mandy pushed herself upward, confident that Charlotte would guide it to the right spot and then pushed herself down my shaft with a loud groan from both of us. The murmuring around the semi-circle started up again as they scooched in closer to get a good view. Fingers were either strumming their own pussy or the girl's sitting next to them.",
        "Mandy pushed herself up and down my shaft with her legs as she strummed her own clitoris with her right hand. Her left hand went to her dress covered breasts. Three of the 'Dwarfs' broke out of the semi-circle and into a daisy-chain of tongues on pussies. The moaning and groaning ramped up from there. The other four 'Dwarfs' split their attention from Mandy, sliding up and down my cock, to the daisy-chain. The squishing noises of fingers in wet pussies provided background noise to Mandy's moans.\n\nMandy drove her pussy on and off my cock until she suddenly seized and groaned, \"Oh my gawwdd, I'm gonna cum.\" She increased her pace and I added as much as I could. Then she slowed and let out a silent scream as she humped up and exploded into her orgasm. The four remaining 'Dwarfs' attention was fully on Mandy' spasming pussy. The murmuring started again.\n\nI could have caught up with Mandy's orgasm but I didn't know if any of the four would be interested in fucking me, so I held back. Mandy couldn't have cared less as she groaned through her climax. Her pussy clenched on my cock for over a minute and then she settled down and cooed out a satisfied expulsion of air. Her pussy continued to randomly quake on my cock and I flexed my cock every time, which cause her to jump and moan in response.\n\nWhen she was done, she found that she couldn't get off my stiff cock. She struggled to push with her feet and then I reached down and lifted her ass straight up off my cock. She giggled when I came out of her. My gooey cock slapped down on my stomach and Mandy slid down over it to the floor. She ran her fingers down through her wet pussy and said, \"Who's next?\" The four 'Dwarfs', still in the semi-circle, were silent and looking at each other as if saying, 'You go. No. You go.'\n\nMandy said, \"Anyone? Depending on your experience, it might hurt for a moment, but I guarantee you won't be sorry.\" I think the, '... It might hurt for a moment,' killed any thought of pushing their pussies down my shaft. Mandy waited a moment and then said, \"Well. We can't leave him here like that.\" She pointed at my rigid cock, pulsing off my stomach.\n\nOne of the four said, \"Can we give him a blow job? We're better at blow jobs. The other three vigorously nodded.\n\nMandy looked at me with a wicked evil grin and said, \"I think blow jobs would be fine.\" I grinned at Mandy as the four got up on their knees and knee-walked in around my thighs. I scooched my ass to the edge of the sofa to provide access to my balls in hopes that they would know what to do with them.\n\nThey were actually pretty good at blow jobs and two of them sucked my balls at the same time as the other two shared my cock. They couldn't take much more than the knob, but with their hand jobs, my orgasm was back. I could tell from the look on Mandy's face that she wanted to join the action, but she didn't. When I groaned and launched my huge load, it caught all four by surprise and my jizz rocketed onto the faces of the two girls in the middle. The look on their faces was priceless. It was obvious that their experiences with cocks was that they dribbled a small amount of cum. The two on the ends pulled their heads away in a reaction to the gasps from the middle two. It took two shots for the four of them to gage where my load was going and then they opened their mouths wide in an attempt to catch some. They laughed and giggled as the other three from the daisy-chain joined the cum catching. They seemed to really enjoy this game and Mandy got laughing. One girl grabbed my cock and pumped it several times to see if she could get any more. They were all covered in cum and they started licking cum from my cock and each other's faces.\n\nMandy dropped herself into my lap and kissed me passionately with her arms around my neck. One of the 'Dwarfs' guided my softening cock to Mandy's pussy and when she sat back, she was startled to feel my cock push back into her. She yelped from the surprise and the 'Dwarfs' giggled. Mandy grinned at me and I started fucking my softening cock up into her. It wasn't long before my cock was hard again. Mandy joined the action and we were fucking full bore again.\n\nOne of the 'Dwarfs' pushed her face in under Mandy's ass and sucked my left testicle into her mouth and then switched to my right one. I knew I wasn't going to cum anytime soon but it didn't take Mandy very long before she screamed into hers. The murmuring started up again. Mandy stopped her motion and I slowed my pace until her pussy stopped clenching on my cock. She pulled herself up my front to get off my cock and then rolled off to my right. She just sat there running her fingers through her pussy. Then one of the three 'Dwarfs' that had formed the daisy-chain pulled herself up to her knees and pushed her lips and tongue to Mandy's pussy. Mandy let out a wail with the attack on her pussy. Then she settled down and humped her hips up into the girl's face and muttered, \"Oh God. YES.\" The others watched as their team mate slurped Mandy's juices from her sex.\n\nI kissed Mandy and got up and pulled my 'Captain America' pants and boots back on. She straightened her dress and assessed the faces of her players and licked off any glob of cum left over. We walked together back to the party.\n\n'Gladiators' were fucking the 'lusty wench bar maids' doggy style bent over the dining room table. The 'mobster-bartenders were fucking 'Captain Marvel', aka, Sephia and 'Green Lantern, aka, Vivian doggy style bent over the bar. The family room was littered with guy on girl and girl on girl couples in various positions. Molly and her cheerleaders were in a multi-girl and one guy daisy-chain. Emma and Eva were in a sixty-nine just groaning through mutual orgasms. Alicia and Dori were furiously humping two 'Gladiators' in a competitive game of 'who can make your guy cum first.'\n\nIt looked like Sarah, Sandy and their mother, Grace had left or they were upstairs in one of the bedrooms. Considering what was going on now, that was a prudent move. From the looks of things, no one cared much about privacy any more. Everyone was down here. 'Maleficent', aka, Linda, was watching her daughter and team mates moaning through their daisy-chain. She kept checking her watch. I looked at the clock behind her and realized what was on her mind. It was nearly mid-night.\n\nI guess Mom and Dad were still upstairs. They were the only ones not down here. The lacrosse team had found places to sit with new drinks in hand that they had made themselves because the bartenders were otherwise engaged. I didn't see Coach Mandy.\n\nLinda looked over at me and tapped her watch. She had a lusty look on her flushed face. I nodded toward the stairs and we met at the bottom. She leaned in and kissed me as she pushed her hand down in my pants. She moaned into my mouth as my cock responded to her hand. I fondled her tits and she moaned again. She pulled back from my lips and muttered, \"Fuck. I'm so horny. Madelyn is so hot. I'm gonna cum the second she touches me.\"\n\nI smiled and said, \"She is pretty hot. Best sex I've ever had.\" She grinned and pulled my hard cock up the stairs behind her. At the top of the stairs, the coffin lid wasn't moving, so there was weight on the mattress inside. I could her muffled groans. Linda lifted the cover to see and Dad was fucking Mandy in the missionary position. There wasn't much room for any other position. Mandy looked up at Linda and me and her grin morphed into a grimace as she grabbed Dad's hips and yanked him into her as she tensed into another orgasm. Dad never looked up to see who was watching.\n\nLinda looked at me and said, \"In a coffin? Not me.\" We continued down the hall to the 'Red Queen's' chamber. I knocked twice and pushed the door open. Mom was naked with her white-face cleaned off and her red wig discarded. She was herself and never looked sexier than right then. She lifted her hips and dragged her fingers through her sex. Linda looked at me and said, \"You go ahead, I want to get out of this costume and masturbate to take the edge off.\" She went into the attached bathroom. She left the door open so she could watch us.\n\nI peeled off my costume and set my cock free to bounce high above horizontal. Mom looked at me and said, \"How many times have you got off?\"\n\nI shrugged my shoulders and said, \"How many times for you Madelyn.\" She giggled at the use of her name and it felt awkward to me too.\n\nShe said, \"I lost count hours ago.\" I sat down on the bed beside her and she pulled her fingers from her sex and wrapped them around my shaft and started jerking me off. \"I've been thinking about this all day. I'm so horny right now.\" Mom looked into the bathroom at Linda and whispered. I'm anxious to get my tongue in her. Is she good in bed?\" I smiled and nodded. Mom continued stroking my cock and whispered, \"Jarod will be with us in a few. He got an offer to fuck a young lady in a coffin. He wasn't going to turn that down.\" I chuckled and nodded. Mom whispered, \"Where are the twins?'\n\nI whispered back, \"They've been busy. Do you want me to find them and bring them here?\"\n\nShe smiled and shook her head, \"No, I've got plans just for you. We can add them in later after everyone has gone home. Right now, Linda and I are going to show you how it's done.\" I grinned at her and leaned in and kissed her sensuously and eased two fingers into her sex. She moaned into my mouth and pushed her hips up at my hand.\n\nBefore we could get started, Linda came out of the bathroom, completely naked. She saw us making out and came around the bed to join us. I had totally forgot about the 'creepy thing under the bed', that tripped when you walked past it on that side of the bed. Linda must have gotten the full effect of it touching her, because she screamed and jumped into the bed on top of us. Mom burst out laughing and cupped her free hand on Linda's large tits. She said, \"That thing got me the first time. Scared me near to death. I knew to crawl in over the foot of the bed after that.\n\nAfter Linda recovered from her fright, she laughed and rolled off me to suckle Mom's tits. They were both moaning. I resumed my attack on Mom's pussy and positioned myself so I could use the other hand in Linda's pussy. They were both driving their sexes on and off my fingers as they fondled the other's nipples. I was on my knees between them sitting on my feet. My raging hard cock was pointing straight at their faces. They just gawked at it. I felt both women begin their rise to their orgasms. Both of their hips locked and then they started trembling. When I felt Linda's rush in, she pinched Mom's nipple, kind of hard, I thought. But Mom groaned from the assault and both pussies began pulsing on my fingers.\n\nI barely let them recover before I was maneuvering into the second act. I eased Mom over onto her side facing away from me and lifted her top leg. She giggled when she knew what I had planned. She adjusted her position with her ass to my groin and I pushed my cock up into her soaking wet pussy. I buried it deep and stopped. Mom groaned, \"Oh fuck. YESSSS.\" I positioned Linda on her back with her knees splayed wide. I lifted one leg over my shoulder and burrowed my face into her sex.\n\nLinda moaned, \"Fuck Dex. You are so good at this.\" Mom snickered at Linda's moan.\n\nI was thinking, 'The woman lying next to you taught me everything I know.'\n\nJust then, the bedroom door crashed open and one of the 'Gladiator's' staggered in with the 'Pirate', aka, Dori planted on his cock. He was shit-face drunk. She was furiously humping herself on him. He staggered but then found a spot on the wall to push her against. Her eyes were pinched shut so she didn't see us on the bed and he was too drunk to see much of anything. Her legs were wrapped around his ass pulling and releasing for all she was worth.\n\nWe watched them going at it on the wall for several moments until Mom decided that she was more interested in where we were going than watching them and she yelled at the wall-bangers that the room was occupied. Their fucking motion instantly stopped and Dori looked over the 'Gladiator's' shoulder and grinned at the three of us. \"Are you guys collecting points too?\" she slurred. The guy with his cock still buried in her, dropped his head to her shoulder. It looked like he'd passed-out just like that. Dori nudged him awake and whispered something in his ear and he pulled her back off the wall and staggered out of the room with Dori resuming her furious humping motion.\n\nThey had left the door open but none of us wanted to get up to close it. Mom pulled her sex back off my cock and said, \"Where were we?\" Linda giggled and rocked her sex on my tongue. She screamed when I flicked it across her clitoris and jumped almost as high as when the 'thing under the bed' touched her.\n\nFrom there, I went to work trying hard to concentrate on both Mom and Linda. It was like patting your stomach and rubbing your head at the same time. I must have been doing okay as both Mom and Linda writhed together on my cock and tongue.\n\nJust as I had expected, Mom couldn't stand to have my cock to close to her anus and she pulled her hips forward until my cock came out of her pussy and then she reached back and guided it to her anus. She pushed back and groaned hard. Linda saw the movement and looked down to watch my cock disappear in Mom's ass. Linda muttered, \"I want some of that.\"\n\nMom chuckled as she pulled her ass slowly back to the ridge of my knob. \"He's the best butt-fucker I've ever had.\" I started fucking her ass hard and she shut up and groaned hard until she found my rhythm and added her own motion. Linda pussy was sloshing in her juices and I slurped up what I could.\n\nI guess Linda was as horny as she had said downstairs because she surprised me when she grabbed my hair and pulled me into her sex just as she was crushed by her second orgasm. I had expected that the first to go would be Mom and she actually wasn't very far behind. Neither was I as my own climax surged forward when Mom screeched into an anal orgasm. I used her pulsing sphincter to milk every powerful shot into her bowels. She groaned hard with each one. They were both vibrating. Quivering would be a better description.\n\nIt was quiet for a couple minutes after that as we collected out breathing. Then Linda pulled herself out from under me and stepped to the floor, where the 'creepy thing under the bed' sprang out and dragged across her bare leg. She screamed with fright again and high-stepped it past the bed. Mom chuckled until I pushed my still hard cock back into her ass. The chuckle morphed into a groan, \"Oh gggawwdd.\"\n\nLinda ran into the bathroom saying, \"Save some of that for me. Okay?\" She came back moments later with a wet facecloth and a towel. I eased my hard cock out of Mom's ass and Linda wrapped the hot, wet facecloth around my shaft and began stroking it up and down my cock like she was jerking me off. Mom pulled the facecloth off my cock and stuffed it to her ass as Linda dried my cock with the towel.\n\nLinda wasn't taking any chances as she positioned herself like Mom had been positioned and eased her sex up to my throbbing erection. Mom moved to where Linda had been and pulled my face into her sex with her foot draped over my head.\n\nI fucked Linda's pussy to get my cock lubricated again and then she pulled off and positioned her anus for penetration. She was more cautious than Mom and she went slow and stopped when she let out a groan. I let Linda take control as I concentrated on drilling Mom's pussy with my tongue. I flicked it from her clitoris to her anus. She pulled away from me when I tongued her rosebud. It was probably a little sore. It had been a while since she'd had my big cock in her. Dad was butt-fucking now but his cock is considerably smaller and it wasn't the same.\n\nMy mind flashed to Dad and Mandy in the coffin at the top of the stairs. 'He couldn't be still going at it with her,' I thought. Dad had pretty good stamina, which I'd read is common with age and experience, but that would be a super-human effort. Linda brought me back from my thoughts when she screamed as her pussy pushed back against my balls. Her ass spasmed and I reacted with a flex that brought another scream.\n\nMom giggled as she gyrated her hips around my face, \"I think she likes your cock in her ass,\" she said. She chuckled and said, \"I think she'll be sorer than me.\"\n\nLinda started furiously driving her ass on my cock and her fingers went to her pussy as she moaned and groaned. I let her take what she wanted and went to work on Mom's pussy. I gently flicked my tongue across her erect clitoris. It was extended from its protective hood and deep red in color. Then her mouth opened in a silent scream and her hips pulsed hard against my face. I knew before her pussy began clenching on my tongue that she was in the throes of a massive orgasm. She wheezed out the air in her lungs and then gasped in another breath. Her entire body had gone rigid and unmoving except for her pussy which was clenching rapidly. Her mouth was still open in the silent scream as another breath wheezed out of her followed by another gasp. I picked up on the rhythm of her clenches and jammed my tongue with the release and let her pussy push my tongue back out. I kept that up until her body went limp and the clenching stopped.\n\nI could tell by the sounds coming from Linda that she was closing in on another orgasm and when it rolled over her like a Tsunami, it was a vaginal orgasm. She didn't care. Her consciousness had left the room. I realized that she was not breathing, not gasping for air. Mom must have realized it too because she rolled on her side toward Linda and whispered, \"Breathe Linda. Breathe.\" Mom gripped one of Linda's big boobs and pinched her nipple. Linda stirred and sucked in a huge breath of air and reached up and put her hand on top of Mom's hand. Linda pulled her ass off my cock and rolled onto her back and they kissed passionately.\n\nI grabbed the wet facecloth and towel and pulled myself to the foot of the bed to avoid the 'creepy thing' and went to the bathroom. I washed my cock in the sink and dried it with the same towel. I heard sounds of sex in the twin's room and I opened their bathroom door to see who it was.\n\nIt was June, on her bed in an over-under sixty-nine with Emma, still in costume as the 'Joker' and Julie, in her bed in a side-by-side sixty-nine with Eva, who still had the Harley Quinn red and blue pony-tails but had discarded her 'Daddy's lil Monster' tee shirt and micro-shorts. The twins were both naked. June's hair was still up in the signature 'Tinkerbell' ball on the top of her head. None of them noticed me and I silently closed their door and went back to my tasks at hand.\n\nMom and Linda were writhing around the bed in a sixty-nine of their own. They were both moaning their pleasure. I didn't want to interrupt them, so I sat down in an overstuffed chair by the bureau and watched as I stroked my hard cock. I had planned to come back in here and have Mom and Linda suck my cock until I blew a load all over their faces and tits. Then I wanted to tit-fuck both of them until I went soft.\n\nWhile I watched them and stroked my cock, I noticed movement at the open bedroom door. It was Sephia. She had discarded her 'Captain Marvel' costume and was standing there fingering herself as she watched Mom and Linda going at it. She didn't notice me until I started jerking myself off again. Her face broke into a wide grin as she walked toward me. She threw her left leg across my lap and positioned her knee between my hip and the arm of the chair and then pushed herself onto my lap and tucked her right knee inside that arm. She pulled my head down to her tits, which were bigger than what I had expected was there under her raincoat that day in the lobby. I licked her hard nipples and she moaned and leaned back as she tried to pivot her hips onto my cock without using her hands.",
        "That was never going to happen because the bulbous knob of my cock was slapping her just below the navel. She looked down between us and she grinned as she said, \"Definitely a three pointer. Alicia and Dori may need to add a 'four' to their chart. Has Dori had you tonight?\" I shook my head and tried to suckle on her long nipples. She chuckled and said, \"Well. This is the last night of the month so it looks like I'll share the winnings for this month. I may win the whole pot if my point guess matches their board. They were both getting points tonight, so we won't know the final tally until tomorrow. If I win, let me take you out to dinner?\"\n\nI chuckled and nodded as I sucked her nipple between my lips. She moaned again and I lifted her by her ass up out of the chair and set her back down again with my cock pushing into her pussy. She groaned out, \"Oh my God, Dex. It feels like it's twice as big inside.\" She started gyrating her hips as I rocked my hips forward and back. The sensation of her writhing and grinding pussy was amazing. Everyone has their own techniques that they've been taught or learned on their own. Sephia's technique was unique and it was getting to me. Her entire body writhed like a snake as her torso sensuously arched forward and back driving her hips to roll her pussy on and off my cock. She moaned constantly as she writhed her body on mine. I noticed that Mom and Linda had finished each other off and they were cuddled up together with a hand fondling the other's tits. They were watching us.\n\nSephia's eyes were closed as her pussy road up my cock and then bobbed several times on my knob before letting herself back down the shaft again. The rolling of her hips kept the sensation fresh. She was enjoying it as much as I was. I suckled on her nipples whenever they came within reach. The look on her face was pure lust. I could feel her body building to her climax and a subtle smile formed as she muttered at almost a whisper, \"I'm gonna cum. Cum with me, Dex?\" Her words were so 'matter of fact'. There was no urgency in her voice and then her orgasm seemed to ooze out of her. My first thought was that it was a little one, but it wasn't. She kept writhing in my lap and as my own orgasm began boiling in my balls, hers built higher like a giant wave as the wall of water rose up to the white-water crest at the top. Her mouth opened slowly to form and 'O' and her eyes shut as the crest formed and as she rose to the top, she started a low pitched, demonic sounding groan that built along with the wave. I watched all of this happening in her with fascination. When she rolled over the crest, her groan changed to a scream and I released my first salvo with a loud, \"UUUUNNGGGGG.\" I heard Mom and Linda giggling.\n\nSephia's eyes flashed open. They had a wild frantic look. She screamed again as I launch my second bolt of cum. I had to hold on to her as she flailed all around in my lap. Her pussy was furiously clamping on my cock. It was harder than most pussy clenching that I had experienced. She screamed with every cum-shot. As the power diminished, so did her screams. As she began to settled down, she let her torso collapse into my arms and I held her there. Her pussy continued to randomly clench and my cock continued to randomly flex. We both reacted to every sensation down there. She mumbled into my neck, \"Jesus Dex. I've never experienced anything close to that before. Fuck.\" I wasn't sure if I ever had either.\n\nI could feel my cock softening in her pussy and she giggled as it seemed to soften in increments. When it fell out of her pussy, it was followed quickly by my load of cum. She stuffed her hand between her legs and pushed back out of the lap. She did a three-sixty looking for somewhere to go. Mom solved her problem when she said, \"Come over here dear. Let us clean you up. We had planned to get that load deposited directly but this is even better.\" Linda giggled and nodded her head vigorously.\n\nSephia turned back to me and grinned and then she climbed on the foot of the bed with her hand still in place and turned around on her back with her legs spread wide to accommodate both Mom and Linda crawling toward her. Mom buried her face in Sephia's pussy and slurped up the nectar as Sephia pulled her hand away and sucked each finger clean and then her palm. Mom pulled her face out and Linda went in. Sephia groaned and jumped as Linda must have contacted her clitoris. Mom and Linda worked as a tag-team on Sephia's pussy. It was a sight to see and I wondered if the tag-team would get Sephia off again. They didn't and she finally went completely, rag-doll limp. Mom and Linda came up along both sides of Sephia and gently suckled on her breasts. Sephia cradled Mom and Linda's head to her tits with her arms.\n\nI got up from the chair and pulled my 'Captain America' pants on and adjusted the position of my semi-hard cock. I left the room and went looking for Dad. He should have showed up quite a while ago. I checked in the spare room across the hall in case he got hooked up with another co-ed. He wasn't there. I checked in the twin's room and discovered that the twins were in a Daisy-chain with Molly on Julie's bed and the rest of the cheerleading squad covered June's bed in various carnal positions with several of the twin's dildos, but no Dad. Julie motioned for me to join them and I told her that I was looking for Jarod. She giggled at my use of Dad's name but she didn't offer any information except the last time she saw him he was in the coffin with 'Snow White'. I nodded and left.\n\nThere were still a lot of people downstairs and most of them were in various states of inebriation. Almost all were currently recovering from sexual exhaustion. Dad was sitting on the sofa in the family room with a red solo cup of beer. He was mostly out of costume and surrounded by 'Snow White' and her lacrosse team 'Dwarfs' who were trying unsuccessfully to get his dick back up. From what I had seen, he had accounted for himself pretty well during the party.\n\nThe 'lusty wenches' and the 'mobster' bartenders had left at some point while I was upstairs. Dori followed me across the room with her eyes ever hopeful of collecting her seven points. A couple of 'Gladiators' were valiantly trying to make up for their limp dicks with their tongues in pussies belonging to the 'Green Lantern', aka, Coach Vivian and 'Catwoman', aka, Alicia. They both were naked from the waist down but they wore their full head masks to hide their identities.\n\nI crossed the room to kneel down on the sofa beside Dad and whispered, \"Mistress Madelyn is worried about what happened to you.\"\n\nJarod pulled himself quickly to his feet and untangled from the co-eds fondling his dick. He said, \"Fuck. I totally forgot. Did I miss anything?\" I chuckled and nodded. He pulled up his pants and hurried across the room and up the stairs. I went out the back door and poured myself a solo cup of beer. There was a lot of beer left in the keg. I had no clue what I was going to do with that. I guzzled half the cup and topped it off again. The cold air on my bare torso felt good.\n\nI looked up into the high intensity strobe lights, simulating lightening above the picture window. As before, I was amazed at how realistic it looked. The back door opened and I looked back at 'Snow White'. She walked right into my arms, slopping beer from my cup. She kissed me and said, \"The 'Dwarfs' want another shot at you. Most of them don't have very much experience with sex with guys. This party opened a lot of their eyes.\" She giggled, \"Hell. It opened mine. I've never been to an orgy before. Is that what this was?\"\n\nI laughed and said, \"Well, it wasn't planned as one but that's what it turned into. It will be impossible to keep a lid on this around the campus.\"\n\nMandy brought us back to her initial subject, \"Do you think you can get up again. I know some of them aren't into cocks and those that are were frightened of the size of yours, earlier. A couple asked if I could get you to give them another chance.\" She reached down in my stretchy pants and gripped my cock as she smiled up at me. I didn't try to hold myself back and her smile broke into a wide grin as my cock hardened in her hand.\n\nI told her I'd be in the spare bedroom on the back of the house. I thought maybe some privacy might help the two 'Dwarfs' get past their fear. Mandy nodded and went back inside. Now I had to run the gauntlet through the family room with an obvious erection in a room full of woman hoping to find one.\n\nI almost made it, but Vivian noticed and she pulled herself away from the 'Gladiator's' tongue in her pussy and was hot on my heels as I went up the stairs. I went straight to the spare room and climbed up on one of the two beds. The red-eyed skeleton, typing at the desk frightened Vivian when she came in behind me and she screamed into her hand.\n\nI laughed and she side-stepped the desk keeping a close eye on the skeleton as she climbed up on the bed with me. She pulled my pants down my legs and was about to climb into my lap when I said, \"Mandy and a couple of newby 'Dwarfs' are on their way up here. They passed on my cock earlier and want another shot.\n\nWhen Mandy walked in with two 'Dwarfs', Vivian took a position sitting beside me. Mandy laughed when she saw a half-naked 'Green Lantern' sitting beside me. She said to Vivian, \"Jesus. You've fucked every guy here at least twice haven't you?\"\n\nMandy had a big grin on her face indicating that she was just teasing her best friend. The two 'Dwarfs' had no idea who was in the 'Green Lantern' costume, which is just the way Mandy and Vivian wanted it. There was no good to be had if the word got around that two coaches were right in the middle of this orgy.\n\nMandy and her 'Dwarfs' climbed up on the bed. Mandy was still in her 'Snow White' dress and she lifted up the hem to show me she wore no panties. The 'Dwarfs' showed me their pussies as an ice-breaker. Vivian smiled at Mandy as she started jerking me off to get me up to full size. My balls ached from over-use.\n\n'Dwarf 1's' eyes went wide as my cock got longer and fatter as Mandy's hand stroked from my balls to the ridgeline. \"Jesus Christ. That's huge.\" She looked at Mandy and said, \"Are you sure that can go in my pussy? It looks like it'll split me in half.\" 'Dwarf 2' vigorously nodded her agreement.\n\nVivian laughed and said, \"No way. I remember the first time on this, I thought the same thing. Fuck, was I ever wrong?\" Mandy giggled and nodded.\n\nMandy said, \"Just try it. If you want to stop, just stop. He won't force you.\"\n\n'Dwarf 2' rolled her eyes at Mandy's statement and said, \"Yeah right. My high school boyfriend always forced me when I wanted to stop.\"\n\nVivian said, \"Well, we are here and he would never do that.\n\n'Dwarf 1' said, \"It's going to hurt, isn't it? Even though I'm not a virgin. It sure hurt the first time.\"\n\nMandy said, \"Honestly, it might hurt for a moment. I'm sure the guy who took your cherry didn't have a cock like that.\" She pointed at my cock in her hand. 'Dwarf 1' got off the bed and just left the room. Mandy looked at me and said, \"Sorry. They told me they wanted to.\"\n\n'Dwarf 2' said, \"I do.\" She scooched over close to me and took my pulsing cock from Mandy. She giggled at how it moved in her hand. She started jerking me off like she had been watching Mandy do it.\n\nMandy said, \"Kiss it and put your lips around the knob.\" The girl had a tentative look on her face but she leaned down and kissed the tip. I intentionally flexed my cock and she pulled back. Mandy gave me a look. The girl kissed my knob again and pushed it into the corner of her mouth and waggled her lips back and forth to get it in her mouth. Her eyes were already watering. She was determined though and she tried to relax her lips as she finally got them past the ridge. Vivian smiled at Mandy and Mandy said, \"Fantastic. Just hold it there and flick your tongue on it. See how velvety soft it is.\" The girl did as Mandy instructed and her eyes smiled up at me.\n\nThe girl started using her hands on my shaft and I groaned from the sensations. She kept it up of for a while and then struggled her lips off the knob. She grinned at Mandy and Vivian. She didn't even look at me. She said to Mandy, \"What's the best position to put it in my pussy?\" Mandy looked at Vivian for any input from her.\n\nVivian said, \"How about doggy style. You can control how much you can take and when.\" Mandy nodded and helped the girl up and maneuvered her so her knees were on the edge of the bed facing inward. I rolled out of bed to the floor and I was about to get into position when I thought of something. I left the room and crossed the hall heading for the bathroom. Dad was fucking Linda in the same position I was about to take. I looked closer and Dad was fucking Linda's ass. I didn't stop to watch. I pulled open the medicine cabinet and grabbed a small jar of petroleum jelly and hurried back to the spare room.\n\nIn my spot was Mandy with her face in the girl's sex. She was tongue-fucking the moaning girl's pussy. When she heard me come back in, she got out of the way and smiled and nodded when she saw the jar. She took it from me and scooped a finger-full and pushed it into the girl's pussy and wiped her finger clean on the girl's labia.\n\nI stepped up and put my knob on her sex. She flinched and pulled away as she dropped from her hands to her elbows and then returned. I barely touched her pussy and Mandy said, \"You can take what you want. Just push back against his cock.\"\n\nShe did and she moved excruciatingly slow but she steadily pushed back. I maintained my position. She was really tight. I'd never taken a girl's cherry before so I didn't know what a virgin felt like. This girl had said she'd had sex with her high school boyfriend, so she wasn't a virgin but I couldn't imagine a virgin being any tighter. Vivian got down low on the bed and kissed the girl passionately on her lips. She kissed back. Vivian was trying to distract her, to get her to relax.\n\nI was in past my knob and she groaned, \"Fuck. It feels like he's in my throat.\" Both Mandy and Vivian giggled. They said the same thing themselves. She was persistent and pushed back a little faster and she stopped with half of my cock imbedded in her sex. She pulled back slowly and pushed back on a little faster. Soon, she was rocking her body back and forth on my cock and Mandy encouraged her, \"You're doing it. You're fucking his big cock.\" She laughed and tried to push on further but she flinched and stopped. She gathered her breath and started again and this time she achieved a near normal fucking pace and started groaning with pleasure instead of pain. She took more and then stopped and pull off and rolled away.\n\nShe looked at Mandy and said, \"I'm getting a really weird sensation. I'd better stop.\" Mandy pressed her for more information and the girl said, \"It's hard to explain. It's like nerves all over my body tingle like a charge of electricity pulsing. It was getting stronger and spreading and I started worrying if everything was okay.\"\n\nMandy was smiling at Vivian. They knew what was happening and they tried to convince the girl to keep going and pull that feeling all the way up, but she was done and she got off the bed, bent down and kissed my knob and thanked me. I chuckled as she left the room.\n\nMandy watched her go and then said, \"Holy shit. She was about to experience her first orgasm and she walked away.\"\n\nVivian said, \"When she has her first, she'll think back to this and kick herself in the ass.\" Then she pulled herself back to now and said, \"Oh well. That's more for us.\" Mandy giggled and threw herself on her back with her head hanging over the bed beside my cock. She reached up and pulled it to her lips. She giggled around my knob and pulled off. She smacked her lips and said, \"She sure tastes good.\"\n\nVivian dropped to her knees beside Mandy and pulled my cock to her lips and said, \"Let me taste her.\" She lashed her tongue around my shaft and pulled back. \"Yummy.\" She put my cock back on Mandy's lips and then she got off the bed and moved up behind me and pushed me steadily into Mandy's greedy mouth. Her boobs pressed hard against the tight material and her nipples were on high-beams.\n\nI resisted Vivian's push for fear of forcing my cock too deep in Mandy's face but Vivian only pushed harder and Mandy used her hands to motion me deeper so I went with it and then I was buried to my balls pushing my knob into her throat. I could actually see the outline of my knob in her neck and I unintentionally flexed my cock. Her eyes pinched shut and a sound like, 'Buullllffff' was forced out. I backed off to let Mandy breathe.\n\nVivian dropped down low and rimmed my anus with her tongue and then sucked one testicle into her mouth and started batting it around with her tongue. Mandy giggled as her eyes were up close to my balls and upside-down face to face with Vivian. Mandy motioned me back in again and then I was fucking her face and Vivian had to abandon my balls. She pulled Mandy's low scoop dress down off her boobs and started sucking her tits and nipples.\n\nI gently gripped Mandy's head and increased my pace as I looked for any indication from her that I was being too vigorous.\n\nI heard several people coming down the hall. I heard muffled voices across the hall and then the door opened and eight or more bodies filed in. I stopped what I was doing and turned my head to see what was up. One of the 'Gladiators' said, \"Hey, Dude. Amazing party. We're done and gonna go.\" He didn't go. Another 'Gladiator' said, \"Fuck Dude. I don't know how you just keep going. I can't even get an erection any more. I'm afraid I broke something.\" Molly and her 'Pixies' were in the crowd and the 'Pixies' were all giggling as I slowly resumed my fucking motion in Mandy's mouth. She had her mask on so no one knew who she was. Vivian had 'Snow White's dress bunched up at her waist and she was finger-fucking her while I face-fucked her.\n\nI stopped what I was doing and slowly extracted my cock from Mandy's lips. She flexed her jaw with her hand as I turned around to face the crowd. All eyes went to my erection as it caught up with my turn. Before I could say anything, the first 'Gladiator' said, \"Fuck Dude. You have a cock like that and you can fuck all night? Makes me wonder why we were even invited.\" Molly giggled and pulled her hand to her mouth to smother it.\n\nOne of the 'Pixie's' eyes went wide and she loudly exclaimed, \"Hey guys.\" She was pointing at my bouncing cock. \"Doesn't that look like the cock from the shower room that one time?\" The other 'Pixies' just stared. Another of them said, \"It might be. Not sure. It certainly is big enough. Fuck.\"\n\nVivian, who had experienced my cock first hand that day came around the bed from the other side and triggered the 'creepy thing'. She screamed when it touched her leg and jumped away. Every one burst out laughing. I think all of them had encountered the 'creepy thing' tonight.\n\nMolly knew it was my cock in the wall that day in the girl's shower room. She had set it up and then joined the action before Vivian had come in and shooed everyone away so she could fuck the cock in the wall. Molly grinned at me and said, \"Come on ladies. We have to go.\" Molly sent me an air-kiss and took one more glance down at my cock.\n\nWith Molly and the 'Pixie's' departure, everyone left. I went with them to the front door with my erection pointing the way and thanked them for coming. A 'Gladiator' laughed and said, \"Yeah, cumming.\" The other's chuckled. Molly threw her arms around my neck, pushing my cock to the side, and gave me a kiss.\n\nThe crowd filtered out to encounter the active decorations in the front yard. One of the 'Gladiators' waded into the bushes along the front of the house looking for the source of the growling noise. That same 'Pixie' said, \"I'm sure that's the same cock from the shower. We knew it wasn't the Maintenance Man.\" The others ignored her and drifted away to the driveway.",
        "Molly pulled back from me and pinched my cock and said, \"I think my mom is still here with Madelyn. Do you think she'll be home tonight?\"\n\nI just shrugged my shoulders and said, \"With Madelyn? Who knows?\" Molly laughed and hurried off to join her 'Pixies' getting into her car.\n\nI was standing outside in the nude with an erection that was starting to come down. It was cold, so I didn't wait for all the cars to leave. I went back in and found the ground floor empty and totally destroyed. Plates of food and half-empty solo cups and empty booze bottles were everywhere. 'Thank God tomorrow is Saturday,' I thought. It will take all day to clean this mess. I didn't want to look too closely. There would be cum and other juices everywhere.\n\nI went back upstairs to Mandy and Vivian and my cock rose as I thought about how sexy they are. I found them on the same bed as before stripped completely naked and grinding their pussy together in a 'scissors' position. They were moaning and writhing together.\n\nI stood across the room, stroking my cock back up to full size as I watched each of them roll into their orgasm and then collapse back on the bed. Without even looking my way, Mandy mumbled, \"I've got to get out of here. I'm about cummed out. What a night.\" Vivian just 'MMMM'd' her agreement.\n\nI backed out of the room. I didn't want them to think they had to take care of me before they left. I still had Mom and the twins and probably Linda to take care of with my current erection. That sounded like a daunting task. I went down the hall and stopped at the twin's room to listen. I heard nothing. I continued down the stairs to my room to pull on a pair of athletic shorts and a tee shirt. I refused to look at the mess everywhere and went to the living room and shut down the decoration system. I checked the coffin in the foyer to make sure it was empty and was surprised to find that it wasn't.\n\nA naked 'Harley Quinn' was face down and passed out on top of her roommate, 'The Joker' who was also passed out. I had to touch them to make sure they weren't dead. They weren't. I lifted Eva up and discovered that they had a double-headed dildo still jammed in their pussies. I pulled Eva's hip up and the dildo pulled out of Emma's pussy and dangled from Eva's. I had to laugh. Eva was a rag-doll and after I pulled the dildo from her pussy, I carried her into the family room and laid her down on the sofa. I went back to collect Emma, who moaned when I lifted her out. Her eyes half-opened as I carried her to the family room. She grinned at me but she didn't come to. These two weren't going anywhere tonight. I would carry them upstairs to the spare bedroom when Mandy and Vivian left.\n\nFive minutes later, Mandy and Vivian came down the stairs redressed in their costumes. They came over to me and both kissed me hard. Vivian said, \"Awesome party. You'll have to do this again. The whole campus would show up. I'm afraid you are going to a popular guy from now on.\" Mandy giggled and nodded her head. With another round of kisses and hugs, they left. I stood in the mess and listened. There were no sounds of sex anywhere. It suddenly occurred to me how exhausted I was. My balls ached like never before. I had no idea how many of the women I had fucked and lost count of how many times I had cum.\n\nMy original plan was to return to Mom and Dad's room but my revised plan was to crawl into my own bed as soon as I got Eva and Emma upstairs. I was sure that I reeked of sex but I was too tired to shower now. I briefly scanned the devastation looking for Emma's and Eva's costumes. I didn't see them, so I picked up Emma and carried her upstairs and put her in the bed nearest the desk. I returned for Eva and tucked her in beside Emma. They both moaned and spooned up together. I shut off the lights and thought about checking to see what Mom, Dad and Linda were up to. I decided to just go downstairs and crawl into my own bed. I doubted that I'd see the morning light before Mom, Linda and the twins were after me.\n\n \n"
    ],
    "authorname": "BigZeke13",
    "tags": [
        "group",
        "threesome",
        "brother sister incest",
        "twincest",
        "blonde",
        "ffm",
        "blowjob",
        "lesbian",
        "oral"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/dex-and-the-twins-at-college-ch-10"
}