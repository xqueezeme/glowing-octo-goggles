{
    "title": "Your Eternal Reward",
    "pages": [
        "Author's Note: This was a tough one to categorize. It could arguably have gone in Nonhuman, Humour, Non-con (not really but kinda), or probably even Anal or Group for that matter. But the core kink is futa on boy stuff, so that's what I went with.\n\nThanks to LizHaze for giving this a read even though it's not really her jam.\n\n****\n\nConnor woke up lying on soft grass, warmed by the morning sun. He cracked an eye, then shut it again. He carefully tested his body, moving his arms and legs, wiggling his toes and fingers, and running his hands over his other bits. Nothing hurt.\n\nThe lack of pain was confusing, but he wasn't quite sure why. More confusing still was where the hell he was.\n\nConnor sat up, opened his eyes again, and looked around. Nothing looked familiar. He was in someone's front yard, but he didn't know whose, nor how he'd ended up there.\n\nIt was a very pleasant morning, so at least he had that going for him.\n\nMovement caught Connor's eye. The door to the house opened, and three girls walked out, appearing to be maybe in their early twenties, at his best guess. They were all in a line at first, then spread out horizontally once they hit the grass.\n\nConnor swallowed hard. The three girls were insanely cute, and were only dressed in panties and camisoles. He couldn't really see anything inappropriate, but they were awfully flimsy outfits considering he'd never even met them before. Not that he remembered, anyway. Memory wasn't his strength so far this morning.\n\n\"Good morning,\" one of the girls said cheerfully as all three of them stopped just short of Connor. \"Ready to get started?\"\n\n\"Maybe,\" said Connor. \"Started with what? Do I know you?\"\n\n\"Of course not,\" said another girl. \"We've just met.\"\n\n\"I'm Monica,\" said the third girl. \"That's Demi, and she's Lita,\" Monica said, gesturing at her companions.\n\n\"Oh,\" said Connor. \"I'm Connor.\"\n\n\"Yes, we know,\" said Demi. She reached out a hand and helped Connor up. She was much stronger than she looked. \"Ready?\"\n\n\"For what?\"\n\nMonica clasped her hands behind her back, which only made her scantily covered chest all the more prominent. \"Do you remember dying, Connor?\" she asked just as casually as one might about the weather.\n\n\"No,\" said Connor. \"But... I don't think that's something anyone can remember. They'd be dead, right? Unless... it's one of those things where they get resuscitated.\"\n\n\"Well, you weren't,\" said Demi.\n\n\"Not even a little,\" Lita added chipperly.\n\nConnor looked around again. Other than the one property they stood at, he could kind of tell there were more houses and yards and things around, but they were... blurry. Kind of. He could see them, but he couldn't. It was odd.\n\n\"You're kinda stuck here,\" Demi said with a shrug. \"For now, anyway. Things can change. I wouldn't worry about it.\"\n\n\"Stuck where?\" Connor asked, frowning. \"You're making it sound like...\"\n\nHe paused and looked down at himself, again running hands over his torso. It was intact and didn't hurt anywhere. That little nagging voice inside him was telling him firmly that that wasn't right.\n\n\"Like you're dead?\" Lita asked, leaning forward, giving just a tease of some more cleavage in the process. \"We're definitely hinting at it, alright.\"\n\n\"If you're too obtuse, we're just gonna skip past it and let you work it out later. Some people are sooo slow to accept it,\" Monica said.\n\nDemi nodded toward the house. \"Come on. This is your place.\"\n\n\"Oh,\" said Connor. He scratched his head. \"Why can't I see other houses properly?\"\n\n\"You're asking all the wrong questions, my dude,\" Demi said. \"But I mean, that's fine. You've got time.\"\n\n\"Lots and lots,\" Lita agreed.\n\n\"Am I... am I in Heaven?\" Connor asked.\n\n\"Hey, there you go,\" Demi said, patting him on the shoulder. \"Getting warmer. So to speak.\"\n\n\"Not that Heaven really exists,\" Monica said. \"Not in the way you probably assume.\"\n\n\"There are... good places,\" Demi said airily. \"Some of them could be called Heaven, I suppose.\"\n\n\"But this ain't one,\" Lita said with a small giggle.\n\n\"But... really? I mean, it's a nice sunny yard, I get my own house, there's you three...\"\n\n\"Awww,\" Lita cooed. \"I think he likes us.\"\n\nDemi wrapped an arm around Connor and led him toward the house. She was fairly petite next to him, yet he felt like she could probably throw him around if she wanted to. She just had a solidness to her, a confidence, and some serious muscle, even though he couldn't for the life of him spot any on her cute, slender body.\n\n\"Of course he does,\" Demi said. \"We're very likeable.\"\n\n\"Likes looking at us, maybe,\" Monica said.\n\n\"'Cause we're super duper hot and adorable,\" Lita said firmly, as though stating fact.\n\nConnor couldn't find any reason to argue.\n\nThe inside of the house was nice too. It wasn't a massive house by any means, but was bigger and fancier than anywhere he'd ever lived.\n\nLived.\n\nWas he still doing that even? Walking around like this after death didn't seem all that likely, but then so many people believe in afterlives that maybe there was a reason for it.\n\n\"So, uh, if Heaven doesn't exist-\"\n\n\"It does,\" Monica said. \"And it doesn't.\"\n\n\"... what?\"\n\n\"Well, like, clouds and harps and famous people and that bearded guy and stuff? Not really a thing.\"\n\n\"Oh. But, so, this place is like a Heaven, but not?\"\n\n\"Yes,\" Demi said with a wicked grin that didn't match her otherwise cherubic innocence. \"Exactly. Not Heaven.\"\n\n\"If you're really good, you might get something better,\" Lita said, swinging back and forth a little, drawing attention back to her chest.\n\n\"Eventually,\" Demi added.\n\n\"Eventually,\" Lita agreed easily.\n\nConnor nodded. \"Ok, well assuming this isn't some fever dream or bad trip, I think I can work with this. This doesn't seem so bad.\"\n\nThe three girls all exchanged looks that could only be described as amused and impish.\n\n\"Let's check out the bedroom,\" Demi suggested lightly.\n\nConnor felt a little thrill at the suggestion. \"Sure,\" he said, voice cracking slightly. \"That sounds... interesting.\"\n\n****\n\nDemi followed close behind Connor as he walked into the bedroom. Lita and Monica were hot on her heels.\n\nShe felt a predatory smile creeping over her otherwise flawless cherubic aura. Despite being warned, Connor still thought he was getting a Heaven. That made what was to come next all the more delectable.\n\nHe was such an innocent, in many ways. New to this plane of existence, for one. Not even quite thirty when he died, relatively young even for his species. And hadn't believed in an afterlife, which as far as Demi understood the system, didn't much matter, but usually cost a few points on the overall final score.\n\nUpon entering the room, and while Connor was still facing away, Demi and her counterparts dropped their panties in smooth, synchronized movements. As one, they stood up straight and let their big, hard cocks free. It was a bit of a trick hiding them away, but the surprise reveal was worth it.\n\nIt was so much more fun if he didn't see it coming. Not that there was any reason he would, probably, but particularly when their outfits had left so very little to the imagination, and he couldn't possibly predict that they'd been hiding these monsters in their tiny, clingy panties.\n\nConnor's eyes bugged out as he turned around and saw the girls lined up together, all pointing straight at him.\n\n\"Wha... um... what?\"\n\n\"This would be your afterlife for now,\" Demi said casually. \"If you're a good boy, it's possible you might move on out of here.\"\n\n\"Eventually,\" Monica added with toothy smile.\n\n\"Maybe only a few decades,\" Lita chirped, bouncing slightly to make her cock jiggle.\n\nConnor's eyes shifted back and forth between the three hard shafts, drifting down to the smooth, hairless balls beneath.\n\n\"This is... what I...\"\n\n\"Sure is,\" Demi said, stepping closer, taking her time, really making sure he appreciated the gravitas of her advance.\n\nDemi wondered, as she had the night before he'd arrived, how long it'd take for him to break. Everyone was different. Some were nearly immediate. Some tried to maintain a facade for much longer. She couldn't read Connor well enough yet to know about him. He was still so confused she wasn't sure he'd processed it all properly.\n\nMonica and Lita flanked Connor, still looking sweet, innocent, and cute, excepting their evil grins and big ol' dicks. They pushed him to his knees easily enough. He wasn't resisting, and they were much stronger than him anyway.\n\n\"This is for you,\" Demi said with the soft confidence of someone who doesn't need to yell. She pressed her cock to Connor's face. \"Open up.\"\n\nIt seemed like Connor might be defiant. Or that he still hadn't understood. But then, after swallowing nervously, he opened his mouth.\n\nDemi sighed happily as she slipped into his mouth. Her cock hit the back of his throat, and for the moment she didn't push further. She rocked back and forth, fucking his mouth, staking an initial claim on it.\n\nShe didn't expect him to fight. He didn't seem like type. Resist, sure. Lie in wait, then strike when she wasn't ready, not so much. But he wasn't even resisting so far. Just kind of accepting her cock in his mouth.\n\nThat was fine. Demi had more than that for him.\n\nConnor's eyes opened wider and he gagged heavily while Demi slowly pushed deeper. She held his head with an iron grip, not letting him pull away. Only once she was firmly in his throat, having made the point that she could force her way in if she wanted, did she let him pull away, slide back off her dick to take some deep breaths. Already his eyes were running and his chin was damp with spit and precum.\n\n\"You'll need to do better than that,\" Demi said with that same quiet tone of authority.\n\n\"Much better,\" Lita said. \"She wasn't even in all the way.\"\n\nConnor stared up at Demi, panting slightly, then again swallowed and opened his mouth. Demi cocked an eyebrow, but didn't hesitate in shoving her cock right back in, going even deeper this time.\n\nHe didn't seem like he would have already caught on to how things were going to go, that he would have accepted it. No one submitted to their fate that easily, and Connor hadn't been overly swift on figuring other things out.\n\n\"He's so cute,\" Lita cooed, stroking Connor's hair while helping force him down on Demi's shaft. \"Look at his eyes. So determined. He's really trying.\"\n\nMonica had reclined on the large, spacious bed, waiting for her turn. She'd taken her top off and was lying there naked, idly tossing her foot back and forth and toying with her cock. \"That's actually a smart move. Cooperation and compliance make a difference when it's time for review.\"\n\n\"Yeah, but he doesn't know that,\" Demi said, thrusting hard and smiling at the gagging and choking sounds from Connor's throat. \"You think he's planning something?\"\n\n\"Can't imagine what,\" Monica said. \"Not like he can just run for it.\"\n\n\"He could try,\" Lita said. \"It's funny when they get out in the yard and bounce off a wall they can't see.\"\n\n\"Let's maybe save that for a slow day, if we can,\" Demi said.\n\nConnor's throat was feeling really good. He didn't have much of a handle at all on breathing technique, or control over his gag reflex. He probably didn't realize yet that he couldn't suffocate, so he didn't actually need to panic about air.\n\nGenerally, he had a nice soft mouth and throat, the way Demi's favourite boys tended to. And the gag reflex felt exquisite along the end of her shaft. The more she got into him, the more of her got squeezed and massaged by his tensing muscles.\n\nDemi finally buried herself fully, balls to his chin. He seemed much more worried at that point, even though she made sure to let him breath again from time to time, just to keep things fun. Her whole cock was slick from all the gaggy spit going everywhere, and even her balls were getting wet from his drool.\n\n\"I think I might cum down his throat,\" Demi mused.\n\n\"Already?\" Monica asked. \"It hasn't been that long yet.\"\n\n\"I want to see what he does,\" Demi said. \"I'm not really getting the proper reactions yet.\"\n\n\"Sometimes you don't,\" Monica said. \"Sometimes they gotta get past their shock before you get much of anything.\"\n\n\"Maybe he likes it,\" Lita giggled. \"You have such a pretty cock.\"\n\n\"Don't be weird, Lita,\" Demi said.\n\nBasically at will, Demi shoved her cock deep into Connor's mouth again and let her cum burst forth. She pumped all kinds of hot, thick, creamy cum down his throat, pulling gradually back to make him work harder at swallowing it, eventually only cumming in his mouth to make sure he got a good taste as well. She allowed him to spill some, so long as he was mostly only making a mess of himself.\n\nDemi made Connor clean her cock off some with his tongue before vacating her spot.\n\nLita jumped eagerly at the chance and proceeded to shove her cock at Connor while he was still dazedly recovering from Demi. Still, he managed to open his mouth and take her in without too much fuss.\n\n****\n\nConnor was rather impressed. Heaven-not that that's what this was, exactly, according to the girls-had never struck him as being that exciting as a concept. Wherever he'd ended up was much more of a thrill. Cute girls with big cocks demanding blowjobs? It wasn't what he ever would have guessed, but it was quite a good time all the same.\n\nDemi seemed a bit annoyed with him at times. He knew he wasn't the best at sucking cock, but he was trying his level best. He hadn't had many opportunities to practice sucking girls off like this in his life. Or any opportunities at all, really. It was all new.\n\nHe'd made her cum, at least, and she'd seemed to enjoy it. She'd cummed a lot, too. It tasted so fucking sexy, and there was so much in his tummy already.\n\nNow Lita wanted him, and he was going to do his best with her as well.\n\n\"You're so much cuter than the last guy I was assigned to,\" Lita said happily as she casually violated Connor's throat. \"He was older, though, and that doesn't help. He used to whine a lot too.\" She patted Connor's head like a puppy. \"You're quieter, huh?\"\n\nConnor wasn't sure if he was meant to be answering, but he couldn't regardless. His mouth was very, very full. As far as he could tell so far, the girls all seemed to have cocks roughly the same size as one another, so taking her wasn't any trickier than Demi. Plus he had that small amount of experience to work with now.\n\n\"I thought I was being rough enough,\" Demi was saying to Monica, over at the bed. \"Didn't get much of a reaction though, did I?\"\n\n\"Gotta go harder,\" Monica said. \"I'll show you when Lita's done.\"\n\n\"Good luck. She'll take forever. I don't know how she still gets so excited about it.\"\n\n\"Of course I'm excited,\" Lita said. \"It feels so good!\" She beamed down at Connor, who was struggling to keep his eyes on her while gagging on her cock. \"You're nearly a throat-virgin, aren't you? Hm? Yes you are! So snug. So soft. So wet. Very nice.\" She patted him again. \"And so well behaved.\"\n\n\"Hnnnhh ghhhnngg,\" Connor said, flushing slightly at the praise.\n\nLita hummed happily to herself as she mouth-fucked Connor. She of course wanted to go deeper too, and Connor's throat was forced to stretched out for her. He had some practice with Demi now, and wasn't quite as unsure of himself. That helped. Plus Lita seemed so much more excited and encouraging of him, which for being so new to this was very helpful to him.\n\nLita's cute face was all lit up, her eyes wide and gleaming. Connor tried to look up at her as best he could, but there was only so much eye contact he could make with his eyes watering and blinking, his face being somewhat roughly handled, and his throat protesting and causing him to gag at semi-regular intervals.\n\nConnor was afraid he was going to look a bit of a mess. Already did, really. He couldn't seem to stop choking and drooling everywhere. All down his front and soaking his shirt was a mixture of his spit and Lita's precum, which was surprisingly tasty. It would have been quite sexy anyway, but having an amazing taste was a lovely bonus. There was, too, some of Demi's cum that had previously spilled from his mouth.\n\nIt did, indeed, take Lita longer to cum than Demi, as she and Monica had guessed. Connor was feeling fairly lightheaded by the time Lita was ready to finish. He felt a thrill run through him as he sensed more cum on the way, another massive load presumably. Demi had cummed so, so much. Hopefully Lita would too.\n\nHe wasn't disappointed. Lita grunted and moaned and shoved her cock in deep as her balls pulsed and shot hot cum all inside him. He swallowed fast, not wanting to make such a mess again. It felt so unprofessional. Unlike Demi, Lita hardly let him taste any at all, mostly shooting it into the base of his throat, almost to his stomach already. The last bit she let him have in his mouth, giggling as she instructed him to hold it for a minute before he was allowed to swallow.\n\nConnor was panting even harder after Lita. He was already a little tired from the attention that seemed as though it had only just begun. Very happy with it, though, and still quite excited.\n\nHis cock was so damn hard after having two cute girls use his mouth and throat with their throbbing dicks. Monica hadn't gone yet, so presumably he'd get at least one more go. Maybe more.\n\nConnor coughed to clear his throat. \"Could I possibly get off my knees? I'm not used to this, and they're getting a bit sore.\"\n\nThe girls looked at each other as Monica hopped off the bed, cock swaying enticingly as she sashayed over. \"Sure thing. I didn't want you down there anyway.\"\n\nMonica helped an unsteady Connor to his feet. She rather efficiently peeled off his messed shirt, then worked on his pants too.\n\n\"Why you stripping him already?\" Demi asked. \"It's not time for that yet.\"\n\n\"Maybe I like seeing a cute, naked boy,\" Monica said. \"What's it to ya?\"\n\nLita nodded. \"He's very nice to look at,\" she agreed. \"So smol. Makes you think he won't even be able to take our dicks.\"\n\n\"Not that small,\" Connor mumbled, blushing.\n\nHis cock was soon totally uncovered, and he got a few incredulous stares once it was.\n\n\"The fuck?\" Demi said. \"Why's he all hard and... dripping?\"\n\n\"It happens,\" Monica said. \"Just a reaction.\"\n\n\"You'd think he's enjoying it or something.\"\n\nConnor frowned slightly at that comment. Of course he was enjoying it. But Monica was already moving him, using that deceptive strength the girls shared. Connor stopped moving, resisting a little just to see what would happen. It didn't faze Monica in the slightest, and she tossed him on the bed like it was nothing.\n\nIf anything, that only turned Connor on more. They were going to use him and there was nothing he could do about it. Fuck that was hot.\n\n\"There we go,\" Demi said, cheering up a bit. \"He kinda fought there a bit, didn't he?\"\n\n\"A little,\" Lita said, scratching her head dubiously.\n\n\"I definitely had to throw him,\" Monica said, \"but...\"\n\nShe trailed off as she approached and Connor opened his mouth for her. She frowned, bodily dragged him to the edge of the bed so his head was hanging over, upside down. She adjusted her angle, then pushed her cock in, getting halfway into his throat on the first thrust, thanks to his open-throated position and excited expectation of what was coming.\n\n\"Yeah, I dunno,\" Monica said. \"It's a little too easy, huh?\"\n\nShe fucked Connor's throat hard, getting balls deep in him far more quickly than the other two. She kept going, kept fucking his face, going harder and faster. Connor was struggling to keep up, to time his breaths, anything.\n\n\"Little fucker's leaking precum down here like crazy,\" Demi muttered, running her fingertips over Connor's slick cock.\n\nConnor moaned at the touch, which got a breathy gasp from Monica in return.",
        "Lita cooed over Connor, his hard, leaking cock, and his cock-stuffed face. \"He's so adorbs!\" she squealed. \"This is so much better than my last gig!\"\n\n\"Is it?\" Demi asked.\n\n\"Yeah. Don't you find the constant whining gets to you after a few decades? This is nice. He's so quiet. Except all the choking and spluttering, but that's kinda hot, so it's fine.\"\n\n\"Some of us like the whining and screaming,\" Demi said. \"That's what we're paid for, you know.\"\n\n\"So I'm a rebel. Bite me.\"\n\nConnor couldn't see much of anything other than Monica's swinging balls. He could hear some scampering and giggling though, as well as feeling the mattress shift under him. From what he could gather, Demi was literally trying to bite Lita.\n\nConnor tried to push Monica back some. She wasn't letting him take many breaths at all, and it was starting to panic him a bit. She was going hard at his throat, which was super hot and all, but she needed to pull out more on the upstrokes or he was going to pass out.\n\nOr at least he thought he would. He couldn't budge Monica no matter how hard he pressed, and the more she kept fucking him, filling and stretching his throat, making him choke on cock, spit, and precum, the more lightheaded he felt, but somehow he never felt like he was about to black out or anything.\n\nMonica made Connor taste almost all of her eventual orgasm. She left his mouth filled, but his throat empty, pumping him full of cum faster than he could keep up with. He swallowed lots, but quite a bit flooded out and over his face, making quite a mess.\n\nConnor was gasping for a long while after that, ineffectually swiping at his messed face, and not really getting anywhere as far as cleaning it up. He smiled under the cum-mask and patted his full tummy. These girls were good.\n\n****\n\nMonica, much like Demi, was a little disappointed in herself and this odd boy. She'd throat-fucked him hard, hard enough that he should have snapped out of whatever daze he was in, at least out of a sense of self-preservation or something.\n\nIt had seemed like it was working when he was frantically trying to push her away for part of it, but he'd given that up all too quickly.\n\nPlus then, even though she could have held back longer if she wanted, Monica had felt like she really, really needed to cum in him. Lita was right, he felt amazing. Just the softest, snuggest little throat a girl could ask for.\n\nConnor was taking a breather, but other than gasping and trying to clean himself off all the cum on his face, there was very little indication of him hating the experience so far. Even those weren't necessarily sure signs.\n\n\"Ok, you were right,\" Monica admitted.\n\n\"Told ya,\" Demi said. \"That was a good try, though. There was spit actually flying, you were fucking his face so hard.\"\n\n\"Yeah, fuckin' hot,\" Lita agreed. \"Whatcha think, face fuck him more? I vote more.\" She raised her hand eagerly, but Monica and Demi just rolled their eyes and ignored the vote she was trying to call.\n\n\"Usually we don't need to do butt stuff on the first day,\" Demi said. \"But...\"\n\n\"Might be needed,\" Monica agreed.\n\n\"Ooh, even better,\" Lita said, clapping her hands. \"Me first?\"\n\nDemi shrugged. Monica had just gone, and while she didn't technically need any recovery time, a little break was nice. \"Go for it.\"\n\n\"Thanks!\" Lita whipped her head around. \"Where's the lube?\"\n\n\"Don't know,\" Demi said. \"Weren't s'posed to need any yet. Hadn't bothered to look.\"\n\n\"Could do it with spit,\" Monica said. \"Like the old days.\"\n\nDemi winced. \"That just chafes your dick after a while. Not worth it.\"\n\n\"That's ok,\" Lita said, bubbly and undeterred. \"Lotsa cum here. Might as well make use of it.\"\n\nConnor watched in fascination as Lita swiped her fingers through the cum on his face then rubbed it all over her cock. She took another big handful, then twirled a finger on her clean hand in a circle. Connor just stared at her.\n\n\"Oh come on now,\" Lita said. \"You were being such a good boy. Turn around for me, would you?\"\n\n\"Are you... are you gonna...\"\n\n\"Gonna fuck your ass, yep yep. Your own fault, you know.\"\n\n\"I... I've never had anything like that. I don't know if-\"\n\n\"Too bad!\" Lita declared gleefully. \"Turn around, chop chop. Lemme deflower that tight little virgin bum of yours!\"\n\nMonica felt some relief at the conversation. She could tell Demi did too. Maybe this guy had just sucked a lot of dick or something. Usually boys like that didn't get sent here, but maybe there'd been a mix up. He certainly didn't seem eager to have his ass fucked, at least. They could work with that.\n\n\"Whatcha think?\" Monica murmured to Demi. \"Loved sucking cock in his life, or what?\"\n\n\"You'd almost think so,\" Demi agreed. \"Except he didn't really have any technique or anything.\"\n\n\"True. But then again, we didn't give him much of a chance to demonstrate even if he did know some stuff.\"\n\n\"Yeah, I s'pose.\" Demi shook her head. \"I don't think so, though. They're pretty good at screening for this stuff. In theory, we've got ourselves some prime virgin holes here.\"\n\n\"But... but the lack of fighting and whining and squealing and everything!\"\n\n\"I know. Trust me, I know. The ass fucking will get him, though. You can see he's scared.\"\n\n****\n\nConnor was pretty damn nervous. Anal was supposed to hurt the first time, right? Especially with cocks the size these girls were packing?\n\nHe was so fucking excited for it, though. He might really pass out this time, from the thrill of it all rather than lack of breath. Or maybe from the pain, if it was as bad as some of his worst anxieties suggested it might be.\n\nLita was so very cute about it. Clearly just as excited as he was. He didn't want to disappoint her. Plus he had a feeling he didn't really have a say in the matter at the end of it. This was an odd sort of eternal reward, based on what he knew of afterlife doctrine that got spread around on Earth, but it was a pretty dang good one.\n\nSo many things back in life-and he was already coming around to the reality of not really being alive anymore-had seemed fun and amazing, but hadn't been practical or possible for a variety of reasons. Maybe he was going to get to go through all of them eventually. Maybe this was just the first.\n\nCute girls with big dicks fucking him as much as they wanted, cumming in him, stuffing him with cock over and over, stretching him all out every which way. It was scary, since he hadn't been able to do anything like that before, but it was a dream come true. He wasn't going to waste the chance, scared or not.\n\nWhile trying to appear confident, and failing miserably, Connor slowly turned himself around, ass toward Lita. He was trembling. It was pretty bad. Maybe part of it was excitement and adrenaline getting him all shaky, but nerves were still the bigger factor.\n\n\"That a boy,\" Lita said, patting his butt. \"It won't be so bad.\" She started giggling. \"Actually yeah it will. But it'll be over soon.\"\n\n\"No it won't,\" Demi said.\n\n\"Oh yeah. No it won't.\"\n\nLita was cracking up like she was telling a really funny joke. She rubbed his butt some more with her clean hand, then placed her cummy hand in his butt crack and smeared slippery cum all around.\n\nHer finger slid into his butthole surprisingly easily. Connor gasped at the intrusion, eliciting some favourable murmuring from Demi and Monica.\n\n\"He's so tight!\" Lita cooed. \"Oh this is gonna be fun.\"\n\nShe swiped more cum off of Connor's face and did her best to get more of it inside his ass. She managed to get two fingers in him, which was already starting to feel like a bit of a stretch, then three. It kind of hurt a bit before he adjusted.\n\nHer cock was definitely going to be worse, he reasoned. But he'd adjust to that too. She'd go slow probably, wouldn't she? Well, no, probably not given how the girls had behaved so far. Maybe that was part of it, though. It wouldn't have been nearly so fun or intense if they'd only gently stuck their dicks in his mouth. Hard, deep throat fucking his recently virgin throat wasn't something you could build up to if you wanted the full effect.\n\nConnor trusted that they knew what they were doing. That it would be awesome, and he wouldn't be seriously injured. He lowered his face to the sheets, smearing cum on them in the process, while sticking his ass up even more wantonly. It might hurt at first, but it'd be so, so worth it.\n\n****\n\n\"That's a good slutty boy,\" Lita said approvingly as Connor went face down, ass up for her. \"So eager to please already.\"\n\n\"Maybe his arms just gave out,\" Monica muttered behind her.\n\nDemi only snorted and waited.\n\nLita ran her cock back and forth along Connor's ass crack, feeling his tight cheeks, and all that slippery cum lubricating their skin to skin contact. A virgin boyhole. Such a treat. And so young and cute. Lita was really hoping for a proper young one at some point, in the eighteen to twenty range. For logistical reasons, they were pretty rare. Let alone getting them before someone else did.\n\nShe swapped more cum from Connor's face to her cock, making sure everything was all ready to go. In theory, unlubed anal was more a punishment, but in practice it wasn't really much fun. It was so much extra work getting into tight little asses and fucking them. And it really did chafe if you went too long. Which was, of course, a big part of the point.\n\nNo. Lube was better. Definitely.\n\nLita fixed her eyes on the small, slick hole in front of her. She carefully lined her cock up with it and pressed the tip in. Connor resisted her at first, but she could be patient enough for this, and more importantly could keep increasing the pressure.\n\nConnor whined slightly as his ass gave way more and more, and finally Lita popped in.\n\n\"Ooh, fuck,\" Lita purred. \"That really is lovely and snug.\" She patted his ass. \"This is gonna be good.\"\n\nConnor whimpered as she kept pressing in, then started to thrust back and forth to get deeper and deeper. She didn't give him a break to adjust, just kept going. Penetrating as deep as she could.\n\nIt still took a while to bottom out in him. He kept whining and squirming, trying to crawl away. He was surprisingly docile overall, though. She'd had much, much worse. Ones who wouldn't cooperate at all. Plus Connor was still adorable even when he was being non-cooperative, and that was a nice change too.\n\n****\n\nConnor couldn't believe how deep Lita was going in him, nor how much of an initial stretch he felt. He probably should have known, in a sense. He had been thoroughly throat fucked just recently, after all. He knew the exact dimensions of the cock now fucking him from the other end.\n\nBut it fucking hurt at first. He'd tried to be good and to get through it. He couldn't help whining and trying to get away from it, though. Initially, it was just one of those pains that he couldn't stay calm and still through.\n\nAfter a few moments, that pain faded to a worrying ache and continued stretch that felt like it would tear him open, but something much more manageable, at least. And the sheer fullness as Lita got balls deep inside him was breathtaking. It was a sensation unlike anything else. Kind of what he would have expected, but even better, if anything. It was so real and visceral. The pleasure was only heightened by the pain it took to get there.\n\nLita was relentless and merciless in her enthusiasm. She sounded like she was having the time of her life as she fucked him hard and energetically. Her cock went deep into him over and over and over again. Her balls audibly slapped against him. Her fingers dug into his butt, spreading it so she could get just a tiny bit deeper.\n\nIt was so fucking good.\n\n****\n\nMonica relaxed and let Lita take care of Connor. It was all going better now. The whines, whimpers, and squeals were much more like it. And all the squirming and wiggling, trying to escape. That was more like it. Finally he was acting like he was properly being punished. She'd been getting rather perturbed up until now.\n\nDemi, too, seemed to be happier about how things were going. She'd been getting jittery, not that anyone who didn't know her would have been able to tell. And she had quite a temper if someone managed to annoy her sufficiently.\n\nMonica nudged Demi. \"Smoke break?\"\n\nDemi looked at Connor. \"Yeah, Lita can handle him for a while.\"\n\n\"She's having a good time. Won't even miss us.\"\n\nThe two of them hopped off the bed and padded nakedly away. They let their cocks soften, so that they were only swaying between their legs and not lewdly jutting out in front. There was no point showing off for each other.\n\n\"How long's Lita been at this, anyway?\" Monica asked.\n\nDemi shrugged. \"Two or three centuries? I think?\"\n\nMonica nodded. \"I remember those early days on the job. Everything still seemed so exciting.\"\n\n\"It's honestly adorable. She's not all jaded like us yet.\"\n\nMonica snorted. \"You start to find out nothing really gets any different after a while. There's a few different kinds of guys coming through, and they only repeat themselves.\"\n\n\"You'd almost think they'd get together on Earth and really sort out all these punishments they're earning.\"\n\n\"Ha, yeah. What a fucking joke though, huh? Have you seen all the different rules people keep spouting to them? No wonder they have no idea what they're doing. You know how long they thought slavery was ok?\"\n\n\"Still do in some places, I hear.\"\n\n\"Mmhm. Fucked up. Even the good ones don't stand a chance a lot of the time.\"\n\n\"Oh well. Thank fuck we don't have to sort that out, am I right?\"\n\n\"Aw jeez, yeah.\" Monica shuddered. \"I worked in admin for a few decades, way back when. Barely lasted twenty years.\"\n\n\"Rough stuff. Glad you found your way to us. You help make the centuries of torture fly by.\"\n\n\"Aw, didn't know you cared.\"\n\n\"Torture bitches.\"\n\nDemi held her fist out. Monica bumped it without looking.\n\n\"Torture bitches,\" she echoed.\n\nOnce they got to the back deck, Demi stepped out into the lovely, warm sunlight. As she stretched out and basked in the perfect heat, her body changed.\n\nDemi grew from a cute girl with a big cock, to someone much taller, redder, and generally scarier. Her hair became jet black and fell in smooth, perfect waves down past her shoulders. Her long, thin tail emerged just above her butt and flitted about whimsically. Her teeth got sharp and pointy, and her eyes lit with a fiery glow.\n\nMonica was only shortly behind, releasing herself to her demon form and sighing happily as the quick change finished.\n\n\"Damn, that's better,\" Demi said, tilting her head to crack her neck. \"You know you're getting old when holding that primitive shape starts to wear you out.\"\n\n\"Old, pff.\" Monica grabbed a meaty handful of Demi's now much fuller ass. \"Not a hint of sag anywhere on you.\"\n\n\"Oldness can be mental. You don't know.\"\n\n\"I know you're full of shit and just want an excuse to be grumpy. That's what I know.\"\n\n\"Hmph.\"\n\nDemi shrugged and waved her hand in front of her, plucking a pair of cigarettes from the aether. She handed one to Monica, then lit it with a pass of her finger over the tip.\n\n\"You seriously gotta show me that trick sometime,\" Monica said, taking her first drag. \"You've been promising for decades.\"\n\n\"You've been asking for decades. I've never promised a damn thing.\"\n\nDemi took a deep inhale of her own, then relaxed against the railing.\n\nIt was such a pleasant day out. It almost always was. Just because this was a punishment zone of the Hellscape didn't mean the demonesses working there should be miserable too. The houses, yards, and weather were all engineered to be nice and hospitable as a consideration for the staff rather than the guests.\n\n\"How long you think before we're gonna show this one who we actually are?\" Monica asked, letting smoke curl up from the corners of her lips, then puffing the rest out in a small circle.\n\n\"Never can tell, really.\" Demi shrugged. \"I suspect it might be soon, though. Connor doesn't seem to be bothered by seemingly delicate girls throwing him around and having their way with him.\"\n\n\"Yeah. I really feel like humiliation aspect of the smol girls hasn't been working as well for a while. You still every now and then get someone really bothered by it, but manliness ain't as stubborn as it once was.\"\n\n\"Nah, I know. Or even the whole, like, religious fear thing. Either of demons, or the whole... how did that go?\"\n\n\"What?\"\n\n\"You know, you'd get those nutjobs, and they'd be all 'oh no, if you fuck my ass I'll go to hell!'\"\n\nMonica cracked up. \"Oh shit, yeah. That was hilarious. It's like, guys, you're already here. Stop worrying about it. Jeez.\"\n\n\"Who the fuck ever told them a boy loving another boy was a sin anyway? Anally or otherwise? I never got that memo.\"\n\n\"Well let's be thankful they did, or we wouldn't get this sweet gig fucking boys in the afterlife. Wouldn't be a punishment if they all just accepted that ass fucking is awesome.\"\n\n\"True dat.\"\n\nMonica stubbed out the rest of her smoke. \"You done?\"\n\nDemi took another long pull, then flicked the butt of her cigarette. It tumbled through the air, then disappeared before it hit the ground.\n\n\"Done.\"\n\n\"Seriously, you're gonna tell me how you do that. I need to know.\"\n\n****\n\nConnor was feeling a bit brain-mushy. Lita had a power and stamina that he just wasn't ready for. It may not even have been possible to be ready for her.\n\nBut holy fuck was she amazing.\n\nHe couldn't believe that it was actually happening. A hot girl straight up pounding him, taking his ass as her own, using him hard and relentlessly. It was something out of one of his horniest fantasies, only it was actually truly happening.\n\nIt didn't even matter that his butt was gonna be sooo sore after, that it continued to ache as she railed him into the bed. She filled, stretched, and pounded him so good. He'd happily accept being unable to walk for days if it meant she could keep going, keeping fucking him this way. Treating him like a sex toy for her own insatiable urges.\n\nLita had already cummed in his butt once. That had added to the amazing pleasure in its own right. It was hard to say for sure, but it definitely felt like she'd put another load in him matching the ones the girls had all deposited in his tummy, via mouth or throat.\n\n\"You're being such a good boy, aren't you,\" Lita said. She rolled him over, pushed his legs back, and kept right on fucking him senseless. \"I bet you wanna cum, huh? I kinda want to see that. Look how bad your cock's twitching and getting all drooly with precum.\"\n\nConnor didn't answer. He registered her words, but couldn't quite make the connection to doing anything with them.\n\nLita reached up and patted his cheek curiously, as though unsure he was still with her. She smiled as he blinked slowly at her.\n\n\"Still with me?\" Lita asked. \"Can't have you going all zoned out on me, can I? Much too early for that.\"\n\n\"Hm?\"\n\n\"Want a nice little cum?\"\n\n\"... yes.\"\n\n\"Thought you might. Don't know if the other girls would approve, exactly, but it's not technically against the rules.\"\n\n\"Wha'?\"\n\n\"You're so cute compared to who I usually get assigned to. I think it'd be hot seeing you cum. I'm gonna do it.\" Lita shrugged. \"I mean, you don't really have a choice in the matter. Don't know why I'm asking, even.\"\n\n\"... ok.\"\n\n\"I could make you cum over and over until you can't anymore. That's fun sometimes. But... you really have been well behaved. We should reward that, shouldn't we?\"\n\nLita switched to a different rhythm, different strokes, and right away Connor felt her hitting some brand new places inside him. Some wonderful, magical places. He thought it had been amazing before, but that was nothing compared to now. She was still filling him up beyond his ability to process, which he loved all by itself, but now he could feel an orgasm building along with it.",
        "\"Please... cum...\"\n\n\"Ooh, a please, even.\" Lita grinned madly. \"I'm really gonna like you. I know I am. But, uh, you may want to get over whatever your game is and be more properly scared and reluctant with Demi and Mon. They're more traditionalists about this stuff.\"\n\nConnor didn't know what that meant. He didn't care, really, nor did he have time to think about it either way. Lita kept hitting this one beautiful spot in his ass again and again, combining it with that throbbing ache around her cock, and the previously unknown feeling of being so very filled up.\n\nHe groaned and felt the most intense and amazing orgasm of his life, such as it was, flood over and through him. His balls tensed and released in a powerful surge, shooting through his cock and splashing his own cum all over him as Lita kept fucking him on his back with her deep, powerful strokes.\n\nConnor got better distance with his cum than he thought possible, hitting himself in the face where more mess wouldn't really be noticed, even if lots had been wiped off in the interim. More landed on his chest, his tummy, and some stray strands elsewhere on his shoulders, arms, or thighs.\n\nLita's eyes gleamed, just above her cat-like smile. \"Wow, that was a nice one,\" she purred. \"You got yourself all messy.\"\n\nConnor felt post-orgasm relaxation setting in. Lita didn't stop fucking him for a second, and it wasn't long before he was feeling horny again, but even then he felt like his ass was relaxing into it more, and he'd be able to go a lot longer. Not that he seemed to have much choice in the matter, which was pretty fucking great.\n\n\"How long?\" Connor murmured.\n\n\"How long's my dick?\"\n\n\"No. How... how long... will you...\"\n\n\"Ohhh. I mean, I'll probably swap with Demi or Mon when they get back. You're probably gonna get fucked all day.\"\n\nPleasant tingles ran all through Connor at the promise of more. So much more. More than he could possibly handle without going even mushier than he already was.\n\n\"And tomorrow?\"\n\n\"Same thing.\"\n\nConnor grinned broadly even as Lita flipped him back over, propped his ass up, and pounded him down.\n\n****\n\nDemi gave Monica first go at Connor when they returned. Lita had already dumped two loads of cum in him, so he was nice and slippery inside. His tummy was also getting bigger, not as much as it eventually would, but it was starting to expand from all the cum in him.\n\nMonica took over smoothly from Lita. She crouched above Connor rather than kneeling behind him, and used the hidden power of her deceptively thin thighs to pile drive his ass hard.\n\nThey'd gone back to human girl form so as not to blow the surprise yet. It was worth saving their true selves for if he started getting complacent at some point. The humiliation he might have felt at being taken by girls much more petite than him didn't seem to have any effect. It sometimes didn't with certain boys. But when it worked it was worth the effort.\n\nIt probably didn't matter much what shape they chose at the moment. Connor seemed to be totally out of it, babbling incoherently at times, or just drooling on himself at others. Leaking from both mouth and cock. It might have bothered Demi about him being so hard and precummy, and apparently having shot a load all over himself at some point, but that sort of thing happened as an involuntary reaction sometimes, and was nothing to fret over. He was clearly taking more than he could handle.\n\nIt was very relaxing to have basically no sounds coming from Connor at all, except the sloppy sounds his butt made and the occasional mumble or hopeless moan. Lita was right that constant whining and screaming could lose its charm after a century or two.\n\nMonica finished up the better part of an hour later, expanding Connor's tummy again with another big load of demon-cum, nicely deposited deep, deep in his ass. She stepped away lightly, wiping at her brow with the back of her arm and grinning.\n\n\"Your turn,\" Monica said.\n\n\"How is he?\"\n\n\"You mean mentally, or physically?\"\n\n\"I can see mentally. Nothing happening there right now.\"\n\n\"True.\" Monica glanced at Connor. \"His ass is premium.\"\n\n\"Yeah?'\n\n\"Hell yeah. It's so warm and tight and soft. And... I don't know, it doesn't fight you the whole time like some do. Harder pulling out than pushing in, weirdly. Doesn't make much sense, but it's like it'd rather have you fully buried than out entirely.\"\n\nLita was off fucking around somewhere taking a break. Demi couldn't ask her to confirm, though she knew Lita had very much enjoyed it. But really, anything she wanted to know, she could just find out for herself.\n\nIt was Demi's turn to have a crack at this supposedly delectable boy hole. He didn't move or speak as she crawled behind him and lined up. His ass was gaping from the poundings it had already taken, and it was easy enough to slide right in.\n\nConnor almost certainly wasn't as tight as when Lita had gone, or even Monica. He still gripped Demi nicely as she pushed balls deep into him, then tried to reverse course. She had to put some more power into her movements to get a rhythm going. It was weirdly nice.\n\nNot to mention that he was just as warm and soft and accommodating as Monica had claimed. There was definitely some fun to be had here.\n\n****\n\nConnor had a rotation of the three girls fucking his ass all the rest of the day. They were variously gentler or harder about it, apparently just on whims, but he was never empty for very long at any given time.\n\nAt times, one of them might fuck his throat again while another was using his ass. And Monica sat on his face at one point and twisted his nipple until he started licking her asshole for her.\n\nThat seemed to give Lita the idea to teabag him afterward, dipping her balls in his mouth and having him suck them, then pull away, only to do it again. She giggled a lot and seemed to enjoy the game.\n\nMostly it was ass fucking with some mouth stuff, anyway.\n\nBy the day's end, Connor was nearly comatose. He felt limp and sore all over, but so very happy and relaxed. Each little ache reminded him of so much more pleasure than he'd ever thought possible. He'd been filled, stretched, and pounded so good, and they hadn't slowed for all the many hours of the day.\n\nThe girls all stood grinning at his boneless form as they got ready to leave for the night.\n\n\"Hope you had a good time,\" Demi said, grinning evilly. \"'Cause we get to do this to you again and again and again. Starting first thing in the morning.\"\n\nConnor swallowed, tasting cum even while just trying to dampen his dry mouth. \"I did. Thank you.\"\n\nDemi frowned. \"... what?\"\n\nLita rolled her eyes. \"I warned you, dude.\"\n\n\"Maybe he's delirious,\" Monica said with a shrug.\n\nConnor shook his head weakly. \"No, that was intense, and kinda hurt, and I'm super exhausted, but that was probably the best day ever. Do I really get more again tomorrow?\"\n\nMonica swore. Demi's eyes went dangerous, an ethereal flicker running through them.\n\nLita just threw her hands up and walked out of the room. \"I waaarrrned yooouuu.\"\n\n\"You think you're funny, huh?\" Demi snarled. \"You can't even move, can you?\"\n\n\"Uh... not really,\" Connor agreed. He was a bit confused by the anger, but he was starting to catch on to the game, and he was pretty sure that was part of it.\n\n\"Don't taunt us,\" Monica said, calmer than Demi, but arms now folded and a calculating look in her eyes. \"You might think this is as bad as it gets. That you can take it. You're playing with fire.\"\n\nConnor's eyes widened. \"There's more?\"\n\n\"Damn straight there is,\" Demi said. She spun around. \"Just wait for tomorrow!\"\n\nDespite being so exhausted, Connor wasn't sure how he'd sleep. It was like being a kid again and being all hopped up on sugar, trying to sleep on Christmas Eve. It wasn't easy.\n\n****\n\nDemi was raging even before the end of a full week. \"This is such bullshit!\" She sucked hard on her cigarette, demolishing the end of it. She plucked another from the air in front of her and lit it with the dregs of the first.\n\n\"Don't let him get to you,\" Monica said. \"I'm not happy about it either, but getting mad isn't going to help.\"\n\n\"Says you!\"\n\n\"Well... you hate-fucked him all yesterday, and most of the day before. Didn't help, did it?\"\n\n\"Little fucker just keeps acting like he's enjoying it!\"\n\n\"Yeah.\"\n\n\"And Lita's not helping things. She keeps cooing over him like a pet.\"\n\nMonica shrugged. \"Kids. What ya gonna do?\"\n\n\"... Connor or Lita, you mean?\"\n\n\"Both.\"\n\n\"Right.\"\n\nDemi took another long drag, then held it and slowly released, trying to calm her breathing. \"She's getting attached. She's not supposed to do that.\"\n\n\"You don't have to tell me. But what can we do? It's not like we're not trying our hardest. You pounded him into a literal dent in the floor yesterday. And we tried tying him up tight with his ass in the air and fucking him hard all day while he was totally helpless.\"\n\n\"He was already helpless. It didn't change anything.\"\n\n\"I'm just saying. We're trying. Don't let one happy customer ruin your whole decade.\"\n\nDemi flicked her cigarette back into the void, watching as it snapped out of existence. \"It's such fucking early days,\" she muttered, \"but I gotta get demonic on his ass.\"\n\nMonica nodded and stubbed her cigarette out in a more normal fashion. \"Yeah, that's fair. We haven't tried that yet. You think it'll work.\"\n\n\"Hard to say. At the very least, you'd figure it'll have to hurt more.\"\n\n\"He doesn't seem to mind that.\"\n\n\"Yeah, I know. Don't remind me.\"\n\n****\n\nConnor felt like he was settling nicely into his eternity. It had been a pleasant surprise to wake up the second morning and find that he was all recovered from his first day. His ass was tight and ache-free, his tummy and ass weren't all swollen with cum, and he had all the energy of a boy who hadn't spent a full day getting fucked into submission.\n\nAnd that happened every morning. A full reset. He was downright giddy about it.\n\nThe one drawback was possibly that it meant he was never all loosened up and ready to go for the first couple fucks of any given day. But since it meant he got to experience being all stretched out all over again each and every morning, it was a trade he was happy to make.\n\nThis morning, Lita was cheerfully taking her time fucking Connor's ass while the other two were nowhere to be seen. On a break, supposedly. Demi and Monica had already had a turn each in his butt, and were still playing up being annoyed with him about his appreciation for their efforts.\n\nThey were maybe taking the charade too far at this point, but Connor had to admit he liked the power that Monica used when she was 'punishing' him, and the way Demi glared at him like she really wanted him to suffer while she stuffed his ass deep and full yet again. That extra thrill was nice at times.\n\nConnor was already starting to get attached to all three of the sexy, cute girls and their insatiable appetites for screwing him silly. He was probably falling hardest for Lita, though. There was something about the sheer joy and delight she expressed, and the way she'd fuck him for hours for no greater purpose than just because she loved it. With her, there wasn't nearly so much pretense and playacting. She was more genuine for it, Connor felt.\n\nAs Lita pulled out of Connor long enough to flip him on his back, prop his butt up with some pillows, and push his legs back, he stared at her boobies and smiled as he reached for them. He cupped one, fondling it gently even as she ploughed back into his ass.\n\nLita looked down at his hand, then at the dreamy grin on his face. \"You're really having a good time, aren't you?\"\n\nConnor nodded happily, still feeling Lita's tits. \"You know in life I'd always doubted the idea of paradise. Like if one even existed, how would it possibly work? But... guess I've been proven wrong, huh?\"\n\nLita grinned just a tad shyly. \"That's really what you think?\"\n\n\"Mmhm.\"\n\n\"I've never had anyone say things like that before. It's... it's kinda nice.\"\n\n\"Well you do good work. You should be proud.\"\n\nConnor was pleased to see an actual blush on Lita's cheeks. Faint, but definitely there.\n\n\"You really need to stop saying things like that around Demi and Mon,\" Lita warned. \"They don't like it.\"\n\n\"Well, I know they're pretending they don't, but they must like being appreciated for their work, don't they?\"\n\n\"They want screams, tears, and regret. Haven't you figured that out yet?\"\n\n\"I mean, that's not what they reeeaaallly want, right?\"\n\n\"What makes you say that?\"\n\n\"Well... I mean the whole game of this place... they're playing like-\"\n\nConnor couldn't finish his sentence. The door banged open, thrown faster than it knew how to move, knob sticking in the wall at the end of the short swing. The wall would probably fix itself overnight the way Connor himself and his bed always did. No matter how broken and abused either were, the next day was a clean refresh every time.\n\nNo, it was no concern for property that stopped him. It was who walked in through the doorway afterward.\n\nA tall, powerful, red skinned woman walked in, naked and with a rapidly filling erection that outclassed even the ones he'd gotten used to since arriving. Her nails appeared razor sharp, as did the teeth of her evil looking smile. Tiny, illusory flames danced in her eyes. And was that a tail?\n\n\"The hell?!\" Connor yelped, caught totally off-guard. He tried to squirm away from the scary demon lady, but was quite firmly pinned by the cock in his ass.\n\n\"Yes,\" said the demoness, padding forward like a tiger. \"Exactly.\"\n\nLita shrugged and pulled out of Connor. \"I warned you,\" she said softly.\n\nConnor tried to roll off the far side of the bed, but was caught easily. As he was rolled back into place, he realized there was a second Demoness behind the first, just as fearsome looking.\n\n\"What's going on?\" Connor asked, looking to Lita who was only very calmly sitting cross-legged at the back corner of the bed.\n\n\"You got them pissed now,\" Lita said. \"This was gonna happen sooner or later.\"\n\n\"What? Who? Demi and Monica? And they brought these two over? I don't-\"\n\n\"No no,\" Lita explained patiently. \"They are Demi and Mon. They aren't playing with kid gloves now.\"\n\nThrough his fear and confusion, Connor stared at the demoness pinning him down like he weighed nothing. She wasn't quite as terrifying on a second look, though it was pretty clear she could tear him apart without even blinking. There was maybe a semblance of the girl he'd gotten to know over the past few days. She maybe had some similar facial features, an identical annoyed frown, eyes that studied him the same way, albeit in a more infernal manner.\n\nDemi, if that was her, wasn't paying his confusion any attention. She was already lining herself up for penetration. She took a few practice thrusts across his ass, sliding over his balls and cock, and up over his tummy as well.\n\nConnor's eyes widened as he noted how much deeper into him she could potentially get. She couldn't actually get balls deep in him, could she?\n\n\"Come lube me up, would you, Lita?\"\n\nThat... that was almost Demi's voice. Different, but recognizable somehow. It might actually be her. But... what was the deal with the change of appearance? Or was this what she actually looked like?\n\nConnor chewed his lip nervously. There were a lot of things he still didn't understand about his new life, nor afterlives generally. But Demi, if that was indeed who she was, fit a general description of a demon as far as he understood, and they tended to be portrayed as denizens of Hell. That might possibly mean he'd had it all wrong this whole time. But even that didn't really add up.\n\nHe got distracted as Lita casually rubbed lube all over Demi's demon-cock. It took her a disturbingly long time getting the whole length and thickness. And that was all going inside him, he was sure of it. Assuming it fit at all, of course, but he was pretty sure it would one way or another.\n\n\"Could you maybe go slow, at least?\" Connor asked nervously. \"You could break me in two with that thing.\"\n\nDemi smiled evilly. \"Yes. Precisely.\"\n\nConnor swallowed anxiously. His heart thudded in his chest, and his tummy was all fluttery and tense. His cock was hard and dripping with precum.\n\nSure as he was that this would be excruciating, he was excited too. If he could somehow take that monster in his ass, he could only imagine just how full and stretched he'd be.\n\nConnor closed his eyes and took a deep breath. The girls had been so good to him already, fulfilling fantasies that would never have even been possible in his old life. He should trust that they knew what they were doing. Their dominance and wrecking his butt were some of the best parts, after all. He couldn't back out now.\n\nActually, he was half convinced he literally didn't have a way of back out. Knowing that he was stuck with it was both scary and possibly the biggest thrill of all.\n\nThere was no further chance for Connor to acclimate himself to the idea. Demi wasn't waiting for him.\n\nHe gasped, then moaned and whimpered aloud. Demi used that hidden strength-not so hidden in her current form-to hold him in place and push against his asshole. And his butt just couldn't resist her.\n\nConnor was already loosened from being fucked. The cock trying to get in him now was bigger and required more room than his body knew how to give, warmed up or not. A sharp pain jolted through him as Demi forced her way in, claiming his butthole on a whole new level.\n\nLuckily, that initial pain was the worst of it. It still wasn't immediately pleasant at all, and Connor thought he might cry or pass out for a few moments. But as Demi fucked her way deeper and deeper, and deeper still, he experienced the beautiful feeling of being filled by her to such a greater degree than ever before.\n\nConnor was thankful for the generous amount of lube used on Demi's cock. Supposedly it was for her benefit more than his, but it didn't matter either way. She still wrecked his ass going in, but it allowed her strokes to be nice and smooth once he finally started to adjust, his butt giving up entirely and succumbing to its wide-open existence.\n\nAs he was ass-fucked with long, powerful strokes, Connor put a hand to his tummy where he could feel Demi's cock moving inside him. At first it wasn't any deeper than he was used to, but as she got closer to burying her full length, he actually lost her somewhere around his ribcage. She was simply too far in him to track.\n\nIt was intense and amazing, and ever so slowly becoming less painful so that he could properly enjoy the experience. That initial pain drove home just how much cock he was taking, and it must have been for exactly that reason. Truly these girls or demonesses, whatever they really were, wanted only the best for him, and were experts in their field.\n\n****\n\nDemi finally felt properly in control. Connor had at last figured out that he was in trouble. She'd been able to smell it all over him. Over the omnipresent scents of sex and demoness-cum, even.\n\nThen there'd been those adorable whimpers as she buried herself balls deep in him. He couldn't take it. Human bodies weren't made for it.\n\nSure, in the Hellscape it was a bit different, and bodies could take a lot more punishment than they usually could, but the great thing was that nobody really knew that. Men came in with all the same expectations and reactions as they would have in life. They thought they needed to breathe, and that they'd break in two with the size of the cocks going up their butts. They wouldn't, but the pain and panic remained.\n\nConnor had been able to hold out remarkably well, but even he couldn't stand up to full-sized, unrelenting demon-cock. Once the initial shock had passed, he was left blank and mostly unresponsive, drooling on himself with his eyes rolled back, seeing nothing.",
        "He couldn't handle it, and it was so gratifying after these past few days of his ridiculous lack of proper reaction to his eternal torment.\n\nA bonus on top of everything was just how good he felt. Physically, he was just about the perfect little boy toy for a demoness. On the young and pretty side, as these things went, initially virginal when it came to his ass, and so damn soft and snug.\n\nThe way Connor gripped Demi now at her fullest size was nothing short of magical. He'd ruined the effect before by enjoying himself, or pretending to at least. She still wasn't sure about the truth of it. He couldn't possibly ruin it now, though. She'd heard and felt the pain, the regret, the realization of his fate.\n\nThat sweet, tortured music and the reluctant embrace of his ass were an addictive and salving combo. Demi really felt like she could enjoy her time with Connor after all.\n\nDemi came inside Connor in due time, adding to the sloppy mess of his insides. She really let loose, let her balls empty into him, and watched his tummy expand that much more. He was being such a good little barely-conscious cum dump.\n\nMonica tagged in right after Demi, taking her turn in Connor's widely gaping, well-wrecked ass. He barely grunted as she entered him and worked her way as deep in as Demi had just been. He was too far gone.\n\nJust for fun, and because she was enjoying herself now, Demi straddled Connor's face and carefully pushed her cock down his throat. He struggled and choked some while she filled him up from this end, but ultimately couldn't fight her at full strength, let alone while he was nearly passed out and once again getting his ass railed.\n\nDemi and Monica shared Connor between them, fucking him hard from both ends. They grinned toothily at each other as their cocks met in the middle, bumping into each other inside their little butt slut. It only encouraged them to pound him harder and try to outdo one another.\n\n****\n\nConnor came all over himself while getting fucked by both Demi and Monica at the same time. Neither seemed to notice or care. He fucking loved it.\n\nHe was being used like an inanimate fuck toy. Like he wasn't even a person, didn't have feelings or sense of pain or pleasure. They just kept going, fucking him deep, choking him on demon dick and making sure his ass would gape wide open the rest of the day.\n\nThis was the absolute pinnacle of being filled by girl cock. Connor couldn't imagine any greater sense of having someone inside him than this. He was pretty sure they were literally bumping cocks inside him. There was no more room anywhere in his body.\n\nA boy simply couldn't be stuffed any fuller than he was. Except maybe with more cum, since apparently he could inflate somewhat with it. That had been a trip to discover. Demi and Monica would surely make his tummy swell even more when the both came in him.\n\nIt was a sexual feeling unlike anything else in the world, and made better by the firm suspicion Connor had that the girls all secretly cared about him and were doing everything they could to make his afterlife perfect. Lita was the least subtle about it, showing some more obvious affection. Demi and Monica were definitely playing hard to get when it came to any sort of love or caring.\n\nBut they cared. He knew they did. They wouldn't spend all their time fucking him over and over, doing these insane sexual stunts to his helpless body unless they at least liked him some. Even if they'd been assigned to the task, they were far too dedicated for it to just be another job for them. There was no way.\n\nConnor moaned around Demi's thick shaft as he felt it pump cum down his throat, deep inside him. Maybe even somewhere past his stomach. He had no idea what they'd done to his internal anatomy, except that it would all reset by the next day, so it was fine. Monica also came in him, creating a vortex of cum within in, flowing from opposite directions, but all collecting within and expanding his tummy like a cum balloon.\n\nHe coughed heavily as Demi pulled free of his mouth. He apparently couldn't pass out or die from lack of air, but his body maintained a need for it, and punished him for choosing dick over oxygen. It didn't seem to matter than he had no say one way or the other.\n\n\"He's all boneless,\" Monica said, grinning at Demi. She lifted Connor's leg and let it flop back to the bed. \"Like jelly.\"\n\nDemi seemed happy about their work too. \"He's broken for sure this time. We've got him now.\"\n\nConnor was still sucking in air and gagging on the excess of cum and spit that he couldn't quite clear from his throat. He wasn't able to express his adoration for this new extreme form of violating his well-fucked little body, but they seemed sufficiently pleased with themselves regardless.\n\n****\n\nLita crawled over while Monica was still kneeling by Connor and running her fingers over his gaping, destroyed ass. Lita casually lifted Monica's cock out of the way and sneaked her way in between them, much to Monica and Demi's shared disbelief.\n\n\"You're not gonna give him a minute?\" Monica asked.\n\n\"You know he won't even feel it if you fuck him right now,\" Demi said, displaying equal consideration.\n\n\"Aw, you guys really ruined him, huh,\" Lita said, pouting as she felt Connor's ass. \"I could put my whole fucking arm up him and he wouldn't notice.\"\n\n\"He'll close up,\" Monica said. \"Eventually.\"\n\n\"By tomorrow anyway,\" Demi said.\n\n\"He'll at least start in a few minutes or something,\" Monica said. \"Could put your dick in and see how long it takes to feel anything. That could be fun.\"\n\n\"Or just get out of that silly human form and fuck him properly,\" Demi suggested. \"Not that he could get much more wrecked, or that he'd notice. He's pretty out of it.\"\n\n\"Yeah, we did good.\" Monica reached past Lita and fistbumped Demi.\n\n\"I like being a cute li'l human though,\" Lita said. \"Makes it feel so much more like I'm embarrassing Connor when I throw him around some and pound his ass.\"\n\n\"He doesn't seem to mind that so much,\" Monica pointed out. \"It's the big demon cocks that finally got him.\"\n\nLita sighed. \"Whatever. I'll give him a minute, then.\" She fingered Connor's loose, painfully stretched ass. \"Or an hour.\"\n\n\"Yeah, you do that.\" Monica patted Lita's head. \"I'll be back in a bit.\"\n\nDemi hopped off the bed too. \"Whatcha think, get some sun?\"\n\n\"It's a nice day out.\"\n\nLita rolled her eyes. \"It's always a nice day out.\"\n\n\"Always good tanning weather,\" Demi said, undeterred. \"Call us if you need backup.\"\n\nMonica snickered and headed out with Demi close behind.\n\nLita kept playing with Connor's ass. It was no fun fucking him while his butt was all loose the way it was, but it was kind of neat to just kind of play with it. It seemed like it was never going to close all the way.\n\n\"How ya feeling?\" Lita asked.\n\n\"Ok,\" Connor croaked.\n\n\"Yeah? You look pretty wrecked to me. Not just your ass.\" Lita dipped her finger into the mess all over Connor's front. \"And did you cum on yourself? Repeatedly?\"\n\n\"Maybe.\" Connor coughed, clearing his throat some more. \"I am pretty wrecked,\" he admitted.\n\n\"I can tell.\"\n\n\"Can you... can you do that?\"\n\n\"Do what?\"\n\n\"You know. Change. Get... bigger.\"\n\nA slow, cunning smile spread over Lita's lips. She peered intently at Connor's face. It was hard to discern much of anything in his face, messy and unfocused as he was. \"You liked that, didn't you?\"\n\nConnor smiled dopily. \"It was amazing. I didn't think I could actually get fucked any harder or deeper. Or be any fuller.\"\n\n\"You were wrong about that one, huh?\"\n\n\"So wrong.\" Connor sighed. \"You're all so good to me.\"\n\nLita burst out laughing. She couldn't help it. This fucking boy was out of a fairy tale or something. He didn't make any sense, but she was growing such a soft spot for him.\n\n\"You better not breathe a word of that,\" she said, wiping a tear from the corner of her eye.\n\n\"I think I'm starting to get that,\" Connor said. \"They, uh, want me to play along, yeah?\"\n\n\"No, idiot. They want you to suffer. That's what we get paid for. I keep trying to explain. I thought you'd get it by now.\" Lita reached over and pinged Connor's forehead with her finger. \"You're just about the most obtuse boy I've ever worked with. You're lucky you're cute and adorable, and so much fun to fuck.\"\n\nConnor blushed. \"See, I know you care, even when you pretend to be mean.\"\n\n\"Oh little one, what am I going to do with you?\"\n\n\"Well...\"\n\nLita giggled. \"Yeah, fucking's good. Have you closed up any yet?\"\n\n\"Hard to say. My butt's kinda numb now that's had a break.\"\n\n\"Well a good hard fuck could fix that, probably.\"\n\nConnor nodded hopefully. \"And maybe... I mean I like you like this, don't get me wrong, but what if... what if you were in me, then changed?\"\n\n\"Grew while I was inside you?\"\n\n\"Yeah.\"\n\nLita snorted. \"You're a hopeless case. I can sense it.\"\n\n\"... so can you?\"\n\n\"You're just lucky that sounds like fun, is all.\"\n\nLita cheerfully pushed her cock into Connor's loose boyhole, barely even feeling it despite her already sizable girth. As he'd requested, she then changed into her demoness form while buried fully in him.\n\nThe results were interesting. Lita had never tried doing such a thing before. It wasn't at all the same as thrusting her way into a tight ass. The end result was basically identical, but the process was fun and unique. Her whole cock got to experience being snugged up against on all sides all at once. She stretched Connor back out from the limited amount he'd managed to tighten up.\n\nConnor moaned as his ass was filled right back up, its whole aching length forced to accommodate Lita now even after so shortly ago being abused by Demi and Monica.\n\n\"Regretting it yet?\" Lita asked, knowing the answer.\n\nConnor's eyes flicked open and locked on hers, a big grin flashing her way. \"Thank you,\" he said softly.\n\nLita smiled back even as she started fucking his overly stretched butthole. \"You little idiot,\" she said affectionately.\n\n****\n\nIt was weeks before Monica saw Demi get pissed again, but when it happened, it was a big one. The two of them stood out on the deck under the perpetually clear sky while Demi chained cigarettes like she was going for a record.\n\n\"That little fucker!\" Demi roared as she flicked yet another butt into the void.\n\n\"Yes, yes,\" Monica said, folding her arms and tossing her raven hair flippantly. She and Demi had pretty much stayed their true selves ever since first revealing them to Connor. It had seemed to be working so well. \"But what did he actually do?\"\n\n\"You wanna know?\"\n\n\"Yes. I asked, didn't I?\"\n\nDemi took another drag and let the smoke out slowly. \"I thought I'd sleep in this morning. We've been working hard, keeping that little shit all floppy and broken each and every day.\"\n\n\"Sure,\" Monica said. \"Doesn't seem to bother him as much as it should though, does it?\"\n\n\"That's exactly it! I sleep in, and you'd think either you or Lita would get to him, or if not he'd just enjoy a brief respite. No. No that's not good enough for him!\"\n\n\"So what'd he do?\"\n\nDemi tossed her only half-smoked cigarette away angrily. \"I wake up and find that he's sneaked into bed with me. Under the covers. Little asshole's sucking on me to wake me up. Just sucking and licking on my balls. Playing with my cock, trying to get me hard.\"\n\n\"Oh.\"\n\n\"Yeah. Oh.\" Demi threw her hands up in defeat. \"I mean what even is that?\"\n\n\"He likes the cock.\"\n\n\"He likes the fucking cock. Fuck's sake.\" Demi rubbed her forehead. \"It actually felt nice, just to rub salt in the wound. No one's ever suckled my balls to wake me up.\"\n\n\"I mean, I coulda done it if I knew you wanted it. Or made someone do it.\"\n\n\"That's a kind offer, but not tremendously helpful.\"\n\n\"Sorry.\" Monica clicked her tongue thoughtfully. \"You know, I've been talking to some of our neighbours. Rayne's just down the street, you know. And Kavi. Apparently it's not just us. We all got boys in similar age ranges, and... it's a problem for lots of us. Most of us, maybe.\"\n\nDemi tilted her head. \"Really?\"\n\n\"Yeah. Millennials I guess they're called. They've, uh, got kind of a tendency to like the idea of girls with big cocks fucking them senseless.\"\n\n\"Shit, really?\"\n\n\"Apparently.\"\n\n\"Fucking millennials. Ruining everything.\"\n\n\"Well, to be fair, they've been thrust into a situation not of their own creation that's really quite unfair and one-sided. It might not really be their fault that they aren't reacting the way we think they should. They're getting fucked and just kinda making the best of it.\"\n\nDemi frowned. \"What, are we doing social commentary now?\"\n\n\"I dunno. Maybe.\"\n\n\"Well fuck it all anyway. Maybe I need to go talk to Rayne too. She always had good sense for stuff like this.\"\n\n\"Mmhm. A little change of scenery might-\"\n\n\"Don't patronize me.\"\n\n\"Right.\"\n\n****\n\nDemi hadn't expected Connor to ask to join her, but there wasn't much he could do to truly surprise her anymore. After he'd taken quite a hate-fucking and gotten all pumped full of cum, she'd asked if he still wanted to go. And, indeed, he remained undeterred. A painful, aching ass and a sloshing belly full of cum weren't enough to even slow him down anymore. He was getting far too used to things.\n\nDemi shoved a butt plug in Connor to keep him from leaking everywhere, and put a collar and leash on him to make sure he didn't run off. Not that he wouldn't come back, but it would be embarrassing to appear as though she had no control over him.\n\nIn fact, the control she did have wasn't exactly what she wanted. She should have had him afraid to make any wrong moves lest he face her wrath. Instead, he just wanted to please her and make her happy, and ideally get some more hard fuckings out of her. It was all very odd, but she was just going to have to get used to it.\n\nConnor was eager and alert as he walked out ahead of Demi, naked, leashed, and cum-pregnant. He walked funny, with his sore and plugged ass hindering him, but he was curious too and kept peering at every new sight they passed. Mostly that meant other yards, nearly identical to their own. Lots were empty, some contained colleagues, and most of the latter also contained other butt sluts serving their time. A distressing number of them doing so happily.\n\n\"How many people live here?\" Connor asked. \"Are they all boys? I mean, the ones who are human, obviously.\"\n\n\"All boys, yes,\" Demi answered. \"That's the way this section is organized. I don't have a number for you. It gets hard to count, the way the geography works. Even if you ran away, the street just kind of... loops on itself.\"\n\n\"Why would I run away?\"\n\nDemi sighed. \"Why indeed.\"\n\nThey made it to Rayne's house and found Rayne and her two coworkers sunning the backyard, all in demon form, apparently taking turns pounding away on their boy.\n\nDemi unclipped the leash from Connor's collar. \"Alright, go play.\"\n\nConnor looked at her for a second, then turned and padded in rather ungainly fashion over toward the other boy. The two of them were soon face down in the grass getting their asses stretched in a nearly synchronized manner.\n\nDemi watched just for a moment, then took a seat next to Rayne, who was waiting for her.\n\n\"So you're having problems too, huh?\" Demi asked.\n\nRayne shrugged. \"You could say that. Honestly, it's kind of refreshing to be able to relax and not have to fight all the time. Or listen to all that whining and carrying on.\"\n\n\"Fuck's sake, you too? Lita's always saying stuff like that.\"\n\n\"You're not ready to give in?\"\n\n\"I shouldn't have to give in! He belongs to us. He should be giving in.\"\n\n\"But he's not, is he?\"\n\nDemi sighed and slumped back in her seat. \"No.\"\n\nRayne waved her hand. \"So just enjoy it. Nothing else you can do.\"\n\n\"Yeah, I'm getting that at home too. But... shit, what about when the bosses find out?\"\n\n\"You think they don't know?\"\n\n\"... they wouldn't just leave us here like this if they did. What happens when my paychecks stop coming in?\"\n\n\"They won't, Demi. Chill. The mucky-mucks know. They aren't going to do anything.\"\n\n\"How could you possibly know what they'll do?\"\n\n\"Well it's all politics, innit?\"\n\n\"Is it?\"\n\n\"Yes. See, there was this push to shut down the whole division. Or at least this street. But, ah, see, then someone would have their little empire reduced, and they can't have that. So they get their friends and push back. All of a sudden it's looking like a war if anyone pushes more one way or another.\" Rayne shrugged. \"So they're just gonna leave it. Not worth it for one little street.\"\n\n\"Even if no one's getting punished or tortured here?\"\n\n\"Well, you know, a few still are. It's a painfully low rate of success, but it's something.\" Rayne grinned. \"Face it, Demi, we got a good thing here. Getting paid to casually fuck our respective boys whenever we feel like it. And if we don't bother, they'll probably climb on our cocks and fuck themselves. It's like a nice vacation for a few decades. Maybe longer, if we play our cards right.\"\n\nDemi eyed the two boys, side by side. She could hear whispers of the excited, hushed conversation they were trying to have in between moans and grunts as they were fucked hard and deep. Just the way they rather annoyingly liked it.\n\n\"Fuck it,\" Demi said. \"You got anything to drink?\"\n\nRayne grinned wider and plucked a bottle from the otherwise empty air. \"Always. You're welcome to have a turn on Jos too, if you want. He's a good little butt slut.\"\n\nDemi thought about it, then shook her head. \"Vacation, right? Let me just relax, then.\"\n\n\"His butt's all silky smooth,\" Rayne added temptingly.\n\n\"So's Connor's. Big deal.\"\n\n\"You don't mind if I have a go on yours then? Compare them?\"\n\n\"Be my guest. He'll love it, I'm sure.\"\n\n****\n\nConnor walked unsteadily back home. His tummy bulged even more obscenely, and his legs were all wobbly. Every now and then he'd stumble a little too far away and feel the gentle tug of the leash reining him in.\n\nIt had been fun feeling different girls' cocks in him. Demi's friends had all taken a few turns in his ass, and they all fucked him with subtly different styles. It made for a fun few hours.\n\nStill, it was nice getting back to 'his' girls.\n\nLita was bouncing impatiently waiting for him to return. She was out in the front yard in cute girl form, naked, hard, and dripping precum. She immediately snatched the leash from Demi and led him to his bedroom.\n\n\"Finally!\" Lita said as she unclipped Connor and shoved him into bed. \"I didn't think Demi'd take you away for so long.\"\n\n\"Miss me?\"\n\n\"Hell yeah! You can't take your sweet booty away from me like that.\"\n\n\"Sorry.\"\n\n\"And look what they did to you!\" Lita yanked Connor's butt plug out and tsked at a small gush of cum that flowed out. \"Didn't even cum deep enough in you. Sloppy work.\"\n\nDespite her apparent disapproval, Lita got Connor rolled onto his front, knees under him, ass in the air. She cooed and fussed over his gaping bum for a while until it had closed up enough that she could stretch him back out again.\n\n\"At least your recovery time's getting quicker,\" Lita said.\n\n\"It's helpful,\" Connor agreed.\n\n\"Did you have a fun day out with Demi?\"\n\n\"Mmhm. I got to meet another boy who's here like me.\"\n\n\"And get pounded by other demonesses?\"\n\nConnor giggled softly. \"That too.\"\n\n\"You'll make me jealous, behaving like that.\"\n\n\"No I won't. You know you and Demi and Mon are my girls.\"\n\n\"And I'm your fav, right?\" Lita asked, punctuating the question with a particularly hard thrust.\n\n\"You're definitely the cutest.\"\n\n\"Awww.\"\n\n\"But you know I love you all.\"\n\n\"I guess that's fair.\" Lita smacked Connor's butt. \"Wouldn't want to upset anyone by playing favourites, huh?\"\n\nLita fucked Connor's sore little tushy, welcoming him home after his first excursion away from his girls since he'd arrived. It had been a very interesting day.",
        "****\n\nSlowly, gradually, the level of socializing on the street picked up. Connor got taken to few different houses by one of more of his girls. Always on a leash, of course. He got to meet other boys and demonesses that way, and of course get fucked by the latter. He gathered that over half of them liked to fuck boys in their natural demon form, while plenty of others either alternated, or like Lita stayed mostly in human futa shape.\n\nIt was very fun getting to meet some of his peers, and get to experience yet more variations on getting stretched beyond all reason and pumped full of cum.\n\nEven better than all that was when Lita and Monica finally convinced Demi that they should host a barbecue. The event being, as usual, an excuse to socialize and for boys to get pounded by a variety of cocks.\n\nAs part of the host team, Connor was already excited at being the ass of honour all day. It only got more thrilling when he discovered what Monica had set up for him.\n\n\"See, we get you all strapped in and lifted up, and you just have to stay there and take everything until we let you down,\" Monica explained.\n\nConnor looked at the complicated series of straps and chains dangling from a solid tree branch in the yard. A tree he was certain hadn't been there the day before, even.\n\n\"How does it work?\" he asked. \"I can't even see how I'd get into it.\"\n\n\"Don't worry about it. I can handle that part. You in?\"\n\nConnor's heart beat harder at the promise of being all restrained and helpless all day, ass presumably on prime display and ready for using any way someone saw fit.\n\n\"Do you even need to ask?\"\n\nMonica grinned.\n\nIt turned out to be quite comfortable, actually. There were so many straps holding Connor that his weight was very nicely distributed.\n\nPart of the complication of the whole setup was that he could be held in any number of different positions by careful and selective manipulation of various straps and chains. Once he was in, Monica played adjusting him many times until she had a good grasp of things.\n\nLita 'helped' by testing Connor out while he was hanging at various angles, legs and arms in different stages of spread wide, or held close and tight but out of the way.\n\nThey then had some fun with him by pushing him back and forth in his sex swing, teasing him by keeping their cocks just at the very edges of his arcs.\n\nConnor was pretty sure he was going to spend the whole day hard and excited for more.\n\nAt least Lita actually lubed him up and fucked him before guests started arriving so that he was all ready for them. That was nice of her.\n\nThe rest of the day was basically a blur of taking cock after cock. He was both the only boy available for free use the whole time, and the only one suspended in the air, easily moved to any height or angle someone wanted. It made him a novelty on top of being such a smooth, supple, and willing cock holster.\n\nLots of other boys were brought around, and he got to talk and compare experiences with most of them, but that was only between getting fucked senseless or having his throat viciously filled. A game developed at some point of demonesses pairing up and taking him from both ends, trying to meet their cocks inside him. He had suspicions one of his girls was spurring on the friendly challenge, but it honestly didn't matter how it happened. The important thing was that he got fucked and filled over and over and over.\n\n****\n\nMonica kept an eye on Connor most of the day. She probably didn't need to worry about him. He was having the time of his life accepting every cock that came his way, either at his face or ass. Both at once, even, once she started suggesting it to some of her friends. The game of meeting in the middle was enough to amuse some, for reasons of sport or simply seeing what Connor could take.\n\nHe could take a lot. That was made very clear.\n\nOn occasion someone would get him to eat her ass or suck her balls or something, but mostly it was all cock all the time.\n\nThere were plenty of other little butt sluts around too. Monica helped herself to a few boys through the day, mostly taking their sloppy, gaping asses for a spin.\n\nOnce or twice she encouraged an eager boy to clean her up while she sat back and relaxed. They somehow universally took that to mean licking and sucking on her, despite her never saying anything of the sort. She grinned at their slutty, enthusiastic faces while chatting away with her friends, enjoying those wet, pink tongues all over her cock and balls.\n\nThe only thing Monica really needed to help Connor out with was to drain him every now and then. Not his balls, since he came regularly all on his own from getting railed by girls and demonesses. But he actually collected enough cum inside him to expand his tummy to dangerous levels, to the point where he was being pushed back and forth like a ball on a rope just to hear the sloshing in his belly.\n\nIt took several minutes each time for enough cum to pour of out of him that Monica could let everyone get back to it. The poor boy wouldn't be functional by the end of the day, but he undoubtedly would be pleased as could be about it. He only grinned dreamily at her when she came near, provided his mouth was currently unused.\n\n\"Mon?\" Connor whispered to her once when he was able.\n\n\"Yes, little one?\"\n\n\"Thank you.\"\n\nMonica patted his head and made way for his ass to be filled once more.\n\n****\n\nLita enjoyed herself in the beautiful sunny weather all day. She didn't get to fuck Connor much at all since he was so busy, and since even when he wasn't he was too stretched out for her.\n\nShe did, however, get to entertain herself chasing after newly arrived boys in games of tag that ended in fucking their butts. It wasn't much of a challenge until some other girls joined in, at which point it became a fiercer match of shoving one another away and trying to claim the prize first. All in good fun, of course. Hardly any serious injuries at all.\n\nLita went to sit with Demi or Monica sometimes when she wanted a break, curling up beside one or both of them for the security of their presence while she cat napped.\n\nLater in the day, as everyone's energy waned from a fun day of hanging out and fucking, she was able to find some tired, well-used boys to curl up with on her frequent breaks. She would have liked to snuggle up with Connor for a proper siesta, but he didn't get any breaks, really. Plus it seemed so complicated getting him down from that swing Monica had him firmly strapped into.\n\nShe sometimes watched him bounce roughly around on other cocks, obviously having a grand old time with it, but there were other holes to fill, and time waits for no infernal being.\n\n****\n\nDemi padded up to Connor as evening broke and the last of the guests were slipping away, often having to carry the boys they'd brought with them.\n\n\"Still conscious?\" she asked lightly.\n\nConnor cracked an eye open. \"What day is it?\"\n\n\"Same day as when you went up.\"\n\n\"Oh. Then... probably.\"\n\n\"Would you like to get down?\"\n\n\"Yes please. It's a nice swing, very snug and cozy, but I'm a bit sore.\"\n\nDemi snorted. \"A bit?\"\n\n\"My everything hurts.\"\n\n\"Everything?\"\n\n\"Everything. It doesn't really seem physically possible how many different parts of me I can feel aching.\"\n\n\"Well, you know, Hell and damnation. Physically possible is more a suggestion than a rule.\"\n\n\"Fair point.\" Connor sighed. \"Seems a waste it'll all be good as new again tomorrow.\"\n\n\"You're such a little weirdo.\"\n\nDemi considered the myriad of straps holding Connor in the air, then shook her head. She passed her hand along the length of his body, snapped her fingers, and smiled in rather petty glee as he fell in a heap to the ground.\n\n\"Ow,\" said Connor.\n\n\"So sorry.\"\n\nDemi waited a moment, but he definitely didn't seem like he could move on his own, and she didn't have all night to wait around for him to recover.\n\nOr, more to the point, she couldn't be bothered hanging around that long.\n\nDemi bent down, scooped Connor into her arms, and marched him delicately into the house. He happily nuzzled at her while being carried along.\n\n\"How are you so heavy?\" Demi grumbled. \"How the fuck much cum did you take?\"\n\n\"A lot. Mon drained it all out a few times.\"\n\n\"And you're still this swollen with it?\"\n\n\"Yep.\"\n\n\"You slut.\"\n\nConnor grinned lazily. \"I know you only say mean things 'cause you love me.\"\n\n\"I'll drop you again.\"\n\n\"You'd have to pick me up again if you did that.\"\n\n\"Could just leave you.\"\n\n\"That wouldn't be nice.\"\n\n\"You're lucky we're here already,\" Demi said, nudging the bedroom door open with her foot, the carrying Connor in and depositing him summarily on the bed. \"Get some sleep.\"\n\n\"M'not tired.\"\n\n\"Yeah, you look all full of energy.\"\n\nDemi pulled the covers up and tucked them around Connor. \"Get ready for more poundings tomorrow. I'm not gonna go easy on you just 'cause you had half the street running a train on you all day.\"\n\nShe turned to go.\n\n\"Demi?\"\n\n\"Yeah?\"\n\n\"You can cum in me, if you want. You look like you need to.\"\n\n\"Who says I need to?\"\n\n\"You're all hard and dripping.\"\n\n\"So?\"\n\n\"You don't have to be gentle with me just 'cause I'm tender right now. I can take it.\"\n\n\"Maybe I just don't feel like it, is all.\"\n\n\"You don't wanna hurt me. It's nice. But I didn't see you fucking anyone all day. You should cum. You'll sleep better.\"\n\nDemi turned on Connor, glaring at him. It didn't faze him, though. It never did. He was frustrating that way.\n\n\"Do you know you're unquestionably the worst at being tortured?\" she asked. \"Just the absolute worst. I've never known anyone so bad at accepting a punishment.\"\n\n\"I'm very good at accepting it,\" Connor protested, rolling over and pulling his covers off. He wiggled his butt a little.\n\n\"Not like that. Bad at accepting that you're being punished, I mean. Like mentally coming to terms with it. Anyone else in your position I've ever worked with would be sobbing themselves to sleep right now, if they could think at all. You're here begging for more.\"\n\n\"You don't have to pretend all the time,\" Connor said, stifling a yawn. \"It must get exhausting. Have a nice cum in me and we'll go to sleep, ok? You can berate some more in the morning.\"\n\nDemi sighed and wished she could just walk away, but she really was horny. And, despite all his many, many faults, Connor was the only one she'd really considered fucking all day. All those other boys were as bad as he was, but with none of the rapport built up. The connection. Irritating as he was, Connor somehow grew on her after a time. He was a pain in the ass, but he was her pain in the ass. Hers, Monica's, and Lita's.\n\nThey were stuck with him indefinitely, and the more time they spent together, the harder Demi had to work to build up the same fury about it. It was getting to be comfortable in its own way. Maybe, just maybe, Connor wasn't the worst boy to be assigned to.\n\n\"A quick cum, then,\" she allowed, making sure to sound begrudging about it. \"But then you're going to sleep, ok? No arguments.\"\n\n\"Just a quick one,\" Connor agreed. He struggled to lift his butt until Demi helped lift him up and he was able to get his knees under him. \"It's sweet of you to not take advantage of any of the other boys,\" he said softly. \"You didn't need to do that, though. I know you need to cum more often than that.\"\n\n\"They're more aggravating even than you are. Had nothing to do with you other than that.\" Demi tossed her hair as she climbed up behind Connor. \"Just 'cause my sex drive runs high doesn't mean I 'need' anything. It's useful for my work. Doesn't mean anything else.\"\n\n\"But it's nice to cum more often,\" Connor insisted, wiggling his bum again.\n\n\"Yeah, well... maybe.\"\n\nDemi ran her fingers over Connor's sloppy, messy, gaping butthole. There was so much cum everywhere that she didn't need to worry about any additional lube.\n\nShe didn't want to admit to him that she did, indeed, need to cum pretty badly or she'd spend a rather frustrated night. It didn't matter, though. He knew.\n\nDemi thrust into Connor's ass, making him grunt and whimper softly. Even though he was tender and sore after a long day of taking cock and getting cummed in, he still pushed back against her, helping her get deeper inside.\n\nThere was hardly any resistance at all from his poor, overstretched bum. Demi was able to go balls deep in him quickly and relatively painlessly.\n\n\"I'm gonna pound you and cum deep in your messy ass,\" Demi warned softly.\n\nConnor sighed contentedly. \"I know.\"\n\nDemi grabbed big handfuls of Connor's hips and butt, kept him spread wide for maximum penetration, and started fucking him.\n\nCum spurted back out of Connor on particularly hard thrusts, and he gave little whimpers from time to time. It bothered Demi just how cute she was starting to find some of the noises he made, and how adorably slutty he could be. He'd spent the whole day having his ass broken and was still enjoying having her pound him, even with how achy he clearly was.\n\nShe could have gone for hours on him if she wanted. Really drive home just how painful he was making things for himself. But it was late, and maybe... maybe she didn't really feel like doing that to him.\n\nShe was getting so damn soft on this boy. It wasn't natural.\n\nDemi pounded Connor's ass long enough that she felt the point had been made, then allowed herself to cum. She hissed in pleasure as her balls pumped a long overdue load of thick, creamy cum into Connor's slutty boyhole.\n\nAnother trickle of cum leaked out of him as Demi pulled herself all the way free. His ass was so destroyed that if not for the nightly reset, she wasn't convinced he'd close back up properly for days. Weeks, maybe.\n\nDemi rolled Connor onto his back and straddled him, slapping her sloppy cock on his face. \"Clean me,\" she said.\n\nShe didn't need to bother. Connor already had his tongue out to start licking before she'd finished her brief sentence. He didn't have the mobility to do a particularly good job cleaning all the cum off her cock for her, but it was the principle of the thing that counted.\n\n\"Demi?\" Connor asked between licks.\n\n\"Yeah?\"\n\n\"Would you... stay in me tonight?\"\n\n\"... with you?\"\n\n\"No. In me.\"\n\n\"That's what I thought you said.\" Demi sighed and reached down to ruffle Connor's hair. \"You won't be able to sleep at all, you know. If you have me inside you the whole time.\"\n\n\"I think maybe I won't be able to sleep without you. I'd feel too empty. I feel empty right now.\"\n\n\"Why are you so slutty?\"\n\nConnor grinned shyly up at Demi past her cock. \"You bring out the best in me,\" he said in a near-whisper.\n\nDemi loathed the sense of affection in her that made her agree. She rolled Connor on his side and slid back in, spooning him while balls deep in his slutty ass.\n\n\"Better?\"\n\nConnor nodded. \"Yes, thanks.\" He snuggled back deeper against her tits. \"You're so soft. And warm.\"\n\nDemi wrapped her arms around him, hugging him to her. \"You don't tell anyone about this,\" she warned.\n\n\"Pretty sure Mon and Lita already know.\"\n\n\"They don't know shit.\" Demi sighed. \"No one outside this house, then.\"\n\n\"Promise.\" Connor sighed happily. \"I'm so happy I ended up with you girls.\"\n\n\"I hate that I know you mean that.\"\n\n\"Thanks for being amazing to me. Love you.\"\n\nDemi tried to muster some annoyance at the simple, genuine emotion expressed. But she couldn't. This boy had ruined her worse than anyone could ever ruin his ass.\n\n\"You're... not the worst,\" she whispered, keeping her voice low in case anyone else might hear.\n\nShe could feel the goofy smile on his face without even having to look.\n\nDemi only got to lie there with Connor for a few minutes in silence before the door swung gently open. Demi groaned but refused to look up and show any guilt or shame at being caught like this.\n\n\"Well well,\" Monica purred. \"Aren't you two cozy?\"\n\n\"Tell anyone and I murder you in the face,\" Demi replied automatically.\n\n\"Perish the thought. Just came to check on our little one. Seems to be doing ok, though, doesn't he?\"\n\nMonica stalked silently over to the opposite side of the bed from Demi. Neither was the least bit surprised when Connor reached out for Monica and tried to pull her into bed as well. At least slightly surprising was how easily Monica let herself be dragged into the warm cuddle.\n\n\"You were a good boy today, weren't you?\" Monica cooed to Connor.\n\n\"Don't encourage him,\" Demi said.\n\n\"Took so many cocks. You were just the sluttiest little thing,\" Monica continued, undeterred.\n\n\"What a magical fucking moment this is,\" Demi grumbled. \"Only missing-\"\n\n\"Hey!\"\n\n\"-Lita.\"\n\nLita bounced in, pouting at the scene in the bed. \"I was gonna come cuddle-fuck Connor! No fair!\"\n\n\"Too slow,\" Demi said.\n\n\"I had things to do! That's... ugh. Not even any room for me. Rude!\"\n\nDespite her words, Lita clambered up on the bed, making everyone grunt a few times as she accidentally kneed or elbowed them before she finally settled. She cozied up right on top of Connor, the only place left she could cuddle with him, what with Demi on one side and Monica on the other.\n\n\"This'll do, I guess,\" Lita said, just before yawning loudly.\n\n\"So glad you could join us,\" Demi said.\n\nLita made a rude noise and otherwise ignored her.\n\n****\n\nConnor was warmer and snugglier than ever before. He hadn't anticipated this when he'd asked Demi to stay, but it was absolutely amazing that it was happening.\n\nHis three girls, all snuggled in a warm, loving ball surrounding him. Soft, lovely boobies pressing into him, one cock deep inside and two others gently poking him. Some tickling hairs on his skin, at least one twitching tail flicking against him, strong arms around his chest, and the overwhelming sense of love, protection, and belonging.\n\nThey'd had him going, at times. That he might actually have ended up in some kind of Hell. He felt silly for ever falling for that. There was no question. This was Heaven if ever there was one.\n\n****\n\nEpilogue: Sometime in the Future\n\n****\n\nDemi and Monica stood on the back deck, leaning against the railing, taking a slow smoke break. They watched the action in the yard with casual interest.\n\n\"S'nice seeing him with his friends,\" Monica commented.\n\nDemi nodded distractedly as she exhaled smoke. \"It is, I suppose.\"\n\nConnor was mid play date. Which was to say he and two other boys from the street were face down, ass up on the lawn, positioned so they could talk easily with each other when they weren't getting pounded too hard.\n\nRayne and her colleagues had brought Jos over today, and Namila's crew from a ways down the road had come over with little Gabe.\n\nPlay dates had become fairly common over the years. Ever since that party they'd thrown, really. They gave everyone a chance to socialize and experience different cocks or buttholes, as the case may be.\n\nEven as Demi and Monica just watched and smoked, all three boys were moaning incoherently as they all got their asses drilled deep. Everyone not fucking them at the moment was just kind of hanging out and taking it easy. Relaxing and sunbathing.\n\n\"You know his review's coming up,\" Monica said.\n\nDemi blew out a more forceful puff of smoke. \"I know.\"\n\n\"What do you want to do?\"\n\n\"Push it back.\"\n\n\"We pushed it back last decade.\"\n\n\"I know.\"\n\n\"And the one before. And-\"\n\n\"You want him going up for review?\"\n\n\"No. We'd risk losing him.\"\n\n\"So why pester me about it?\"\n\n\"Trying to see if you'll admit you don't want to lose him either.\"\n\nDemi took a last drag and flicked her cigarette to the aether. \"How would I ever get a chance to break him if he went somewhere else, hm?\"\n\nMonica rolled her eyes. \"That excuse wore thin years and years ago. You still rolling with that?\"\n\n\"What else do you want from me?\"",
        "\"To admit you kinda like him.\"\n\n\"Maybe I do. So what?\"\n\nMonica grinned smugly. \"Knew it.\"\n\n\"Yeah. Whatever. Every decade you think getting me to admit that's some kind of victory. Now who's wearing thin?\"\n\nMonica just grinned.\n\n\"You tell anyone-\"\n\n\"I know, I know. Murder me in the face.\" Monica stubbed out her cigarette. \"Haven't told anyone yet, have I?\"\n\nLita came prancing up. \"Hey, almost your turns again,\" she said in her bubbly voice she reserved for particularly good days of fucking boys.\n\nDemi shook her head minutely. \"Aren't you ever going to get out of that ridiculous form?\"\n\nLita looked down at her cute human futa body. \"Why? Connor likes me like this.\"\n\n\"Yeah, I bet he does. You can do whatever you want, you know. He doesn't get a say.\"\n\nLita shrugged. \"Don't see why not? He's as much part of the family as any of us.\"\n\n\"We aren't a family.\"\n\nLita rolled her eyes. \"Such a grump. How many years we gotta live together before you accept this, hm? Another fifty? A hundred?\"\n\n\"She's coming around,\" Monica said. \"She's old. Stuck in her ways.\"\n\nDemi glared at the two of them. It had no effect whatsoever on their impertinence. \"I miss the days when everyone screamed in fear at my approach,\" she grumbled sulkily.\n\n\"Yeah yeah. The good old days.\" Lita bounced impatiently, jiggling her cock in the process. \"Are you gonna come fuck some boys or what?\"\n\n\"Alright,\" Demi said. \"We're coming.\"\n\nLita kept pace with them for the short walk to the well-fucked boys. \"We pushing back review time again?\"\n\nMonica nodded happily. \"Yep.\"\n\nLita smiled. \"Good. I knew we would. Rayne and Namila are too. Most of the street, I think.\"\n\n\"Yeah, gee, that's not gonna look suspicious or anything,\" Demi muttered.\n\n\"We've been over this,\" Monica said. \"No one wants to deal with this mess. We keep it handled, we've basically got free rein.\"\n\n\"That's the best kind of rein,\" Lita added.\n\nConnor's ass was free, and Demi knelt down behind him, glad of an excuse to ignore her friends.\n\n\"You're all sloppy and gaping, huh?\" Demi said, running her hands along Connor's messy ass cheeks.\n\nConnor tried to look up at her, but he was a bit limp, the way he so often got after getting his ass railed for hours on end.\n\n\"Got my ass wrecked,\" he murmured. \"It's been nice.\"\n\n\"Someday you're not gonna enjoy this so much.\"\n\n\"Nuh uh.\"\n\nDemi rolled her eyes, but a small smile crept over her lips too. Without warning, she plunged her cock into Connor, going balls deep in one powerful thrust. He was very used to such moves by her, but still seemed to enjoy them every time.\n\n\"Heard my review's getting pushed back,\" Connor gasped when he was able to talk again.\n\nDemi held herself deep inside him for a moment. \"It is.\"\n\nHe smiled. \"Thanks, Demi. You're the best.\"\n\n\"Shut up.\"\n\nConnor only grinned wider. \"Love you.\"\n\n\"... I'm not saying it back.\"\n\n\"That's ok. I know.\"\n\nLita bounced in front of Connor. \"Come onnn Demi. You aren't even fucking him yet.\"\n\n\"Seriously? You want another turn already? How many centuries is it gonna take for you to calm down?\"\n\n\"It feels good. Maybe I don't wanna get jaded and grumpy like you,\" Lita said, sticking her tongue out.\n\n\"You can fuck my mouth, if you want,\" Connor offered.\n\nLita looked around. \"Guess your friends are nearly passed out, huh? Can't really talk to them anyway.\" She knelt down in front of Connor and had to help him get up on his arms. \"You're a good boy, you know?\" she said, patting Connor's head.\n\nConnor nuzzled at Lita's cock. \"You're all so good to me too. I love you all so much.\"\n\n\"Awww,\" Lita said with a faint blush. \"Love you too, our little slutty boy.\"\n\n\"Is Monica there? She-\"\n\n\"I heard,\" Monica said, fucking Jos next to them. \"Ask him to please stop embarrassing us in front of everyone.\"\n\nLita nodded. \"Mon says to please-\"\n\n\"I heard,\" Connor said. He obediently opened wide and waited for Lita to shove her cock in. He wasn't waiting long.\n\nDemi and Lita fucked Connor from both sides. They didn't bother being gentle. Not with Connor. They knew him too well for any of that.\n\nDemi was unsurprised to feel his ass contracting and twitching around, signaling that he was cumming from their efforts. That seemed about right.\n\n****\n\nConnor was his usual floppy, sloppy, total mess of a boy by the day's end. Demi and Monica helped him into bed and tucked him in, then Lita read him a story. The latter would have been almost sickeningly sweet, except that Lita's stories were self-written, and generally so graphically sexual they could make a grown demoness blush.\n\nConnor was soon fast asleep after his rather exhausting day, and being put so tenderly to bed. Demi and Monica each kissed his forehead before leaving him alone. Lita, however, snuggled right under the covers with him.\n\n\"We could stay too,\" Monica murmured as she and Demi padded out.\n\n\"Nah.\"\n\n\"He's good cuddles.\"\n\n\"I know. But Lita likes having him to herself sometimes.\"\n\nMonica grinned and lightly nudged Demi with her elbow. \"You're such a softie underneath it all, huh?\"\n\n\"I am not.\"\n\n\"Are too.\"\n\nDemi sighed. \"You-\"\n\n\"I won't tell.\"\n\n\"No. I was gonna ask if you wanna sleep together.\"\n\n\"What, like, you wanna fuck?\"\n\n\"No. Actual sleep.\"\n\n\"Ha, you really are turning into a softie, huh?\"\n\n\"... you want to or not?\"\n\n\"Course I do.\"\n\nDemi and Monica fell into bed together. They snuggled together under the covers.\n\n\"I mean, you didn't say it,\" Monica said, \"but obviously no one hears about this.\"\n\n\"Yeah, no, obviously,\" Demi murmured back.\n\n\"This job's pretty great, huh? With Connor?\"\n\n\"It has its moments.\"\n\nMonica snorted. \"Well I love it. And I know you do too.\"\n\n\"Maybe.\"\n\n\"Night, Demi.\"\n\n\"Mmm. Good night.\""
    ],
    "authorname": "Xarth",
    "tags": [
        "sneaky feelings",
        "sex punishment",
        "big cock",
        "boytoy",
        "cum inflation",
        "demon cock",
        "excessive cum",
        "futa",
        "futa demon",
        "gangbang"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/your-eternal-reward"
}