{
    "title": "Ginger or Marianne?",
    "pages": [
        "\"Please come with us. It's just lunch.\"\n\n\"I don't think so. I appreciate the offer, but I'd feel more comfortable staying at home.\"\n\n\"Farah, I know how hard it's been for you. And I know how much you loved Ben. But you can't stay home all day, every day.\"\n\n\"Traci? I don't do that. I'm not home 24/7, and you know that, so please don't exaggerate in order to get me to do what you want, okay?\" her friend said, trying to stay polite.\n\n\"You and I have have been best friends since the 4th grade. I know you. And I love you. You're the sister I never had. I was your Maid of Honor, for crying out...\"\n\nShe stopped when she realized she'd just brought up the wedding.\n\n\"I apologize. Not for caring about you. Just for being insensitive.\"\n\nHer friend of well over 25 years knew there was no malice in those words. They were true. Traci Redding had been her Maid of Honor, and yes, she loved her like a sister, too. But Ben Walker had been the love of her life, and when he was taken from her in a moment of senseless rage, a part of her died with him.\n\nIt wasn't that she didn't need to get out. Farah Cole-Walker, who'd been named after Farrah Fawcett by a father with a not-so-secret crush on the late actress, knew that was true. But it was also true that after letting her best friend set her up twice with two different, 'really nice guys' with whom she had nothing in common, she just couldn't see any reason to do so a third time. Maybe one day. Just not now.\n\n\"I'm sorry, Trace. I just can't.\"\n\nHer friend stared at her for a few seconds then said, \"Okay. Let's compromise. I won't bring Cody and you don't have to meet Jeff. Just you, me, and my mom. Will that work?\"\n\nFarah loved Traci's mother, Alice Wallace, almost as much as her own daughter did, and she hadn't seen her for at least two months, and if she also didn't have to endure another setup, then maybe lunch wouldn't be so bad.\n\n\"If you're serious, then, okay.\"\n\n\"Yeah? Really?\" Traci asked excitedly.\n\n\"Yes. I'll go.\"\n\nFarah finally smiled then said, \"But only because I haven't seen your mom in forever.\"\n\n\"Ha! Whatever works!\" her BFF said, a smug smile of victory on her face; her very pretty face.\n\nTraci (nee Wallace) Redding had been a cheerleader from the 7th grade through the end of high school. She was head cheerleader and homecoming queen their senior year, and she was still beautiful. Farah knew she was also still an attractive woman, even at 37, but Traci was the one woman who had always made her feel plain. It wasn't her friend's fault. It was simply a matter of her being so attractive that she sucked all of the oxygen out of every room she walked into. \n\nTraci was a natural blonde who still wore her hair below her shoulders, and even worse, it still looked great on her. She'd been blessed with fair skin, blue eyes, and a perfect smile. She also had a perfect body to go with it and that included two perfectly round, very perky breasts that easily filled a C-cup bra.\n\nFarah, on the other hand, had dark-brown hair that was just below chin length. She wore it parted on one side and nearly always put a small curl in it at the bottom so that it turned inward a little and just a wispy hint of bangs in front. It was perfect for her face which was still pretty but had never been Traci Redding pretty. Which wasn't just pretty but beautiful. \n\nHer best feature were her eyes, which were green, something that only 2% of the population could claim. It wasn't an exaggeration to say they were an emerald green that many people mistook for the more common hazel color. Her eyes were the one area where, compared with Traci, Farah was the clear winner. \n\nThe one thing she had in common with her longtime friend was a great smile. The difference was that Farah's came by way of an orthodontist while Traci had been born with a set of bright, white, perfectly-straight teeth.\n\nPhysically, Traci was two inches taller, and at 5'10\", very close to the ideal height for most models. At 5'8\", Farah was still slightly above average, but there was a difference here, too. The difference was in weight where Farah weighed almost exactly the same as her friend in spite of being two inches shorter. \n\nThat didn't mean she was overweight, however. Farah easily fit into a size 8 dress, but when she was feeling a little down, the fact that her friend still wore a 6 with ease could make things worse. Lastly, Farah was at best a full B while Traci was...stacked.\n\nWhen Ben was alive, none of that had mattered. He'd made her feel like the most beautiful woman on earth. And anytime she'd tried comparing herself to Traci, Ben had always found a way to convince his wife that she was the more attractive woman.\n\n\"Beauty's in the eye of the beholder, honey,\" he'd told her many times.\n\nBut what she'd loved most of all was hearing how not every man preferred big boobs. Or blondes. Or...Traci.\n\nThe one time she'd tried to prove him wrong, he'd shot her down in a way that made her never again wonder if he meant it. At least not while he was alive.\n\nHe asked her to imagine Traci's husband Cody, who was as handsome as his wife was beautiful, then to imagine him standing side by side with Ben.\n\n\"Who do you find more attractive?\" was the question he asked.\n\nFarah hadn't needed even one second to provide the answer.\n\n\"You. Of course,\" she'd said immediately.\n\n\"But most women would chose Cody, wouldn't they?\" he rightly observed.\n\n\"Yes, but I'm not most women,\" she replied, feeling good about how she was thinking on her feet. \n\nWhat she'd just said was the truth. To her, Ben was far more attractive than Cody who was so good looking he seemed almost...plastic...like a Ken doll or something. In contrast, she thought Ben was...yummy. And over the years she'd had girlfriends tell her the same thing.\n\n\"And I'm not most men,\" he told her with a wink and a smile.\n\nHe then took her hands and said, \"Listen. It doesn't matter what every other man on earth thinks\u2014even though I know many of them think like me. What matters is what I think. And I think you are far more attractive than Traci. Okay?\"\n\nAfter that, she'd let her petty jealousies go. But her resolve had slowly faded since the day Ben's life had been taken during a short-lived incident of road rage that ended with Ben, as well as one of the other drivers, dead, after swerving to avoid a third crazed driver hellbent on running another man off the road. \n\nIt all began when the first driver passed the second guy's car then cut back in right in front of him. Other witnesses said it didn't appear to be intentional. He just didn't have the amount of time he thought he had, so he'd had to pull back into the right lane in a hurry. The driver he'd 'cut off' took it very personally and went berserk. \n\nHe began by tailgating the first car just inches behind it while traveling at well over 60mph in 45mph zone. The first time he had an opening, he whipped out into the left lane, looked over and angrily cursed at the other driver, then pulled back in front of him even more sharply than the way it had happened to him.\n\nThe second driver backed off trying to defuse the situation, but the first driver slammed on his brakes causing the second driver to tap the back of his vehicle. From there, the first driver lost his mind. He slowed to 25mph in the four-lane, undivided highway, and as the situation allowed, cars began whizzing by them almost immediately, leaving the second driver nowhere to go except to stay behind him and wait.\n\nAt some point, the second driver saw an opening and went for it. He quickly pulled into the left lane and tried to go around. He'd gunned the engine and was going about 45mph or so. As fate would have it, Ben was right behind him by that point. He also tried to go around, having not seen any of the earlier drama, and it was at that time that the first driver whipped his vehicle into the passing lane, hitting the first driver's passenger door and shoving it into oncoming traffic. Ben swerved so hard to avoid the mess that the sudden change in direction caused the car to flip over and roll. The second roll threw the car into oncoming traffic where it was struck by a large SUV that couldn't stop. \n\nFarah refused to look at the crime scene photos or even go to the trial where the driver who'd lost it ended up going to prison for 3-5 years for negligent manslaughter, far less than she thought he deserved. Ben was gone, and nothing was going to bring him back.\n\nIt was nearly a year before Farah could really function again, and in the last 18 months since then, she was almost back to her old self, but she wasn't quite ready to really get involved yet. Then again, perhaps it was just the men she'd gone out with. Like the ones Traci had set her up with. \n\nEither way, she had no interest whatsoever in meeting another one of Traci's 'hot, single' friends. He would almost certainly be good looking, but if we were like the others, Farah would have to politely smile and endure the evening as the self-centered hunk endlessly talked about himself and/or his business successes, a huge turnoff and a total bore. \n\nLonely or not, there was no way she was going to put up with another evening like that.\n\n\"So tomorrow at what time and where?\" Farah asked. \n\nKnowing Traci's mother would be there made her gave her a reason to want go, and now that she off the dating hook, she found herself looking forward to getting out again.\n\nAs she got ready the following day, Farah wanted to look nice, but wasn't going to even try and compete with Traci\u2014a lost cause on any given day. Doing so was an exercise in futility because her friend not only had looks, she had money. She never flaunted it, but Cody was a medical doctor and like beauty, money was a fact of life for her.\n\nBen had provided well for them, and even now she was able to get by on the life insurance money that came from the policy he'd insisted on taking out the year they got married. Farah never bothered arguing with him because it was only a few dollars a month, and more importantly, it made her husband feel like he was 'doing his duty'. She never once thought she'd ever collect on the policy, but as heartbroken as she'd been, she was still very appreciative of Ben's forward thinking.\n\nRather than a fancy dress like the one she knew Traci would wear, she chose something more appropriate for the early fall weather in Indianapolis, Indiana, where she'd lived her entire life. \n\nFarah laid out a pretty, dark-gray sweater with a black skirt and a pair of black heels. She'd worn it before and knew it looked great with gold earrings and maybe even a necklace. It was overkill for fast food, but Farah knew her friend would insist on going to someplace nice where she might still feel underdressed. Traci would undoubtedly look stunning and turn every head in the room, while Farah could enjoy the safety of relative anonymity while quietly living in her shadow.\n\n\"Still...not too bad for 37,\" she told herself once she was ready as she turned both ways while looking in the mirror to see if her rear end had somehow grown since the last time she'd looked. \n\nThe outfit was slimming, and even though she didn't have a great 'rack', she thought it was...appropriate...and maybe even pretty. Not stunning by any means but not bad, either.\n\nAs usual, Farah arrived first and waited in the lobby. As she sat there she realized how differently she viewed the world as a single woman. It wasn't true, but it felt like everyone else was paired off and part of a couple. With the exception of children, it seemed like every man or woman who came in was with someone she imagined was a spouse, a fianc\u00e9, or a date. And as far as she could tell, there was only one adult exception to her rule\u2014her.\n\nBut as Traci walked in with her mother, Farah temporarily forgot about being alone and instead felt like she was maybe some kind of a prop in Traci's world. Her friend was wearing an off-the-shoulder, light-blue dress with 4-inch black heels and most definitely looked amazing. And just as she'd predicted, both men and women turned to look once they became aware of her presence.\n\nAfter hugging her friend, Farah turned her attention to Traci's mother who also hugged her and told her how good it was to see her again. \n\n\"You too, Alice! And you look so nice!\" Farah told her regarding the very pretty, age-appropriate dress the 64-year old woman was wearing.\n\n\"Thank you, dear. And may I say, so do you,\" Alice told her sincerely.\n\nAlice hooked her arm in Farah's, and as they followed the hostess to their table, more heads turned to see the gorgeous woman in the beautiful dress with the bare shoulders that were covered in a cascade of long, silky, blonde hair.\n\nIt wasn't long before the conversation turned to the inevitable subject of how Farah was doing when Alice politely inquired. She dreaded being asked but understood it was something everyone who cared about her would continue wanting to know for the indefinite future.\n\n\"Better,\" she told her friend's mom with a smile that said she meant it. \n\n\"I'm so glad. I still can't imagine how difficult this has been for you.\"\n\n\"Thank you. And yes, it has. But Traci keeps pushing me to, you know, get back out there.\"\n\nTraci put her hand on Farah's arm and said, \"Pushing? I'm not pushing, hon. Didn't I back off from insisting you meet someone today?\"\n\n\"Okay, maybe it just feels like she's pushing me,\" Farah told Alice while looking at her daughter.\n\nA young woman came to take their orders, and once she left, Alice insisted on picking up the tab. Farah tried to protest, but the older woman was having none of it.\n\n\"Nonsense. It's the least I can do after not even calling you for so long. I just hope you can forgive me.\"\n\nAs Farah replied, telling her it hadn't been all that long, she noticed Traci was smiling at something. Or more likely...someone. Farah turned to look, and when she did, she saw the cause of the smile.\n\n\"He's a little young, don't you think,\" Farah said to her friend who was still smiling back at the younger man bussing tables who was smiling at her.\n\n\"I'm only flirting with him to get him to come say hello to you, Fare,\" her friend said.\n\nAlice noticed, too, and when she looked, she said to her daughter, \"I don't think he's looking at you, sweetheart.\"\n\nWhen Traci turned toward her mom to tell him he most certainly was, it was obvious he wasn't.\n\nFarah turned back and took another look, and he was most definitely still staring. At her. This time he kind of raised his head as a way of acknowledging her, and when he did, she subconsciously smiled back. There was no attempt, and certainly no desire, to flirt with him. He was definitely very attractive, but other than that there was nothing about him that would have ever caused Farah to even look had Traci not mentioned him.\n\n\"Oh, my gosh! You're right, Mom. He is definitely looking at someone else. Hmmm. Gee, I wonder who that might be?\"\n\nTraci pushed her friend's arm twice very quickly and said, \"Go say 'hi'!\"\n\n\"Are you...insane?\" Farah replied.\n\n\"If I was single, I know I would,\" her friend said with a smile.\n\n\"And if I was 40 years younger, so would I,\" her mother added.\n\n\"Oh, my goodness. You two are...incorrigible!\" Farah told them as she stared straight ahead.\n\n\"No, we just recognize gorgeous when we see it. Right, Mom?\" Traci told her as she looked for the mystery busboy again.\n\n\"Well, he's gone, so I guess we'll have to make due with just eating lunch today,\" Traci announced, after looking for him again as though they were missing out on something important.\n\nBut just as they were getting up to leave, a certain very attractive, younger man reappeared with a large gray tub which he sat on the table next to them.\n\n\"Good afternoon, ladies,\" he said, an amazing smile on his amazing face.\n\n\"Well, hello there,\" Traci said, an equally big smile on hers.\n\n\"I uh, I don't mean to interrupt, but...\"\n\n\"Oh, you're not interrupting. Trust me,\" Traci shamelessly said as she reached out and touched his arm similarly to the way she'd touched Farah's.\n\nFarah saw him glance down and look at the huge, four-carat diamond on her hand. Even so, he smiled politely as he produced three paper flyers.\n\n\"I know you're leaving, but I wanted to invite you to hear our band. We're performing at The Blue Moon this weekend, and if you three beautiful ladies have some spare time, we'd love to have you stop by.\"\n\nHe offered them each a flyer, and all of the women accepted one then looked at it.\n\n\"I should probably take your dishes now in case the manager comes out. He doesn't take too kindly to me drumming up my own business on his time.\"\n\n\"Oh, so...does that mean you're the drummer?\" Traci asked, the smile just as big as it was before.\n\nIt was nothing more than a cute play on words, so the handsome busboy's reply surprised everyone.\n\n\"I am.\"\n\n\"And do you have a name, gorgeous?\" she asked.\n\n\"It's Shawn,\" he replied as he picked up a couple of empty glasses and placed them in the tub.\n\nTraci was looking at Shawn, and Farah was looking at the flyer. Alice was the only one noticing that Shawn never took his eyes off of Farah, and once she finally set the flyer down, she, too, realized he was looking at her.\n\n\"Hi,\" Shawn said to her as the other two women also looked her way.\n\n\"Hi?\" she replied with raised eyebrows as she looked at Traci and then Alice.\n\n\"What?\" she asked when they only smiled.\n\n\"My best friend here is Farah. Like Farrah Fawcett only with one 'r',\" Traci told Shawn.\n\n\"Oh. Um...good to know,\" he said his eyes still fixed on Farah with one 'r' who was now feeling very uncomfortable.\n\n\"She's single. Just in case you're wondering,\" Traci said in a faux whisper that was more than loud enough for Farah to hear.\n\n\"Oh, my...God!\" Farah blurted out. \"What is wrong with you, Traci?\"\n\n\"And that would be me. Traci,\" she told their busboy.\n\nSensing Farah's discomfort, he looked at Alice then asked who the other beautiful woman was.\n\nTraci went to answer when her mother cut her off at the knees.\n\n\"I can answer for myself, thank you very much,\" she replied rather curtly as she shot her daughter a look Traci'd seen many times before while smiling politely before turning back to Shawn and telling him her name.\n\n\"It's been my pleasure. In all three cases,\" he said as he asked if he could start clearing their plates.\n\n\"Oh, you can do anything you like...Shawn,\" Traci told him as she refused to move back when he reached her way, coming dangerously close to her very large 'rack'.\n\nShawn saw Farah shaking her head but didn't say anything. However, when Farah looked at him again, he did smile at her, and for some reason she couldn't understand, she looked away so fast it startled her. Hoping Traci didn't notice, she reached for the flyer again.\n\n\"We'll be there,\" Traci said without bothering to even look at her BFF.\n\n\"We...what?\" Farah said with disbelief as she dropped the flyer.\n\n\"I hope you will be,\" Shawn said to Farah before looking at the other two women and adding, \"All three of you.\"\n\n\"I'm not much for loud music anymore,\" Alice told him apologetically.\n\nShawn smiled and said, \"We're not too loud, ma'am. No screaming or heavy metal. In fact, we're a cover band, and we don't do too many songs that weren't big hits from the 60s and 70s.\"\n\n\"The sixties, huh? That's definitely my era,\" Alice said as she reconsidered. \"Maybe I will be there.\"\n\n\"I'd like that,\" Shawn said before taking her dishes, too, then looking back at Farah.\n\n\"Will you be there, Farah with one 'r'?\" he asked her directly.\n\nShe knew it was rude not to look at him, but for some reason she couldn't. Again, she picked up the flyer and looked at it.\n\n\"Carbon. That's a different kind of name for a band,\" Farah mused while staring at the paper.",
        "Shawn laughed, then as he reached for her dishes, told her he'd majored in chemistry as an undergraduate.\n\n\"So...are you a grad school student?\" Traci asked.\n\n\"Yes,\" he replied very modestly.\n\n\"Very nice. And yes, she'll be there,\" Traci told him without asking her friend.\n\nFarah was already feeling...well, flustered. When Shawn looked at her again and smiled, it got worse. When he told her, and only her, he'd be looking for her, she felt so out of sorts she thought she was back in junior high school.\n\n\"I'll make sure she wears something a little less...\"\n\nTraci did the fake whisper thing again as she said, \"Dowdy.\"\n\nShawn put the last of their dishes in the bin then said, while looking at Farah, \"Dowdy is the last word I'd ever use for Farah, with one 'r', considering she's every bit as attractive as the former star of Charlie's Angels.\"\n\nFarah looked at him for a brief moment, and when she saw his smile, she somehow smiled back. It wasn't intentional. It just happened.\n\n\"I'm more of a Kate Jackson fan,\" Shawn explained, referring to the woman with dark brown hair most men considered less attractive than her blonde co-star, Farrah Fawcett with two 'r's.\n\n\"Ladies, it was my pleasure,\" he told them all as he looked at each one of them in turn.\n\n\"Oh, no. Trust me. This was all very much our pleasure, right, ladies?\" Traci replied.\n\nAs he walked away, Traci kept staring then said, \"His butt is as gorgeous as his front side, and his front side was...\"\n\n\"Okay. For crying out loud already!\" Farah interjected, cutting her friend off.\n\nUndeterred, Traci turned to Farah and said, \"He likes you. You know that, right?\"\n\n\"That's...ridiculous!\" she told her BFF.\n\n\"No, he was definitely flirting with you, honey,\" Alice said, agreeing with her daughter.\n\n\"He does not like me, and even if he did, I most definitely do not like him!\" Farah asserted. \n\n\"Then why did you blush when he said he'd be looking for you\u2014meaning...you?\" Traci asked, a big smile back on her face.\n\n\"Blush? Please! I did not...blush.\"\n\nFarah looked to Alice for support, but she was looking at her daughter and trying not to laugh.\n\n\"Okay. If you say so, dear,\" Alice replied almost patronizingly with a little smile.\n\n\"Are we done yet?\" Farah asked as though she were thoroughly exasperated.\n\n\"We are, but you have a date,\" Traci told her with a laugh. \"You just don't know it yet.\"\n\n\"Okay. That's it. We are SO done here!\" Farah replied.\n\nIt was so obvious that she was flustered that Alice couldn't keep from laughing, too.\n\n\"Sorry, dear. That was rude,\" she said, trying to sound sincere.\n\n\"Like mother, like daughter,\" Farah told them both, the 'exasperation' still there.\n\n\"Come on. We need to go find you a killer outfit for your date!\" Traci told Farah as she stood up.\n\n\"Okay, you have officially lost your mind!\" her friend said as she stood up, too.\n\n\"Nevertheless, we're going shopping, and that's all there is to it, right, Mom?\" Traci said, giving her mother no chance to object.\n\nTwo hours later, Farah had not one, but two new outfits. She'd done her best to insist on paying for them herself, but Traci's credit card was in the sales associate's hand before she could even fish hers out of her purse, knowing this would add pressure to get her friend to wear one of them.\n\nBefore Traci said goodbye she got serious.\n\n\"Farah? Please go to with us to see the band, okay?\"\n\n\"I...I don't really want to do that,\" her friend replied.\n\n\"I know you don't. But you need to.\"\n\n\"Are you sure you don't need me to?\" Farah asked with a smile.\n\n\"You have to admit he's cute, huh?\" Traci replied.\n\n\"Yes, and yet you're the married woman.\"\n\n\"I have no interest in him. You know that.\"\n\n\"And I don't, either, and you know that.\"\n\n\"It isn't him, Farah. It's you. You need to do things and meet men.\"\n\n\"He's only a man in terms of legal age,\" Farah reminded her.\n\n\"So he's young. Who cares? And who knows? Maybe his handsome, single father will be there and you'll hit it off.\"\n\n\"Or maybe it'll be a long, boring evening of loud, boring music!\" Farah said even though she loved the kind of music Carbon played.\n\n\"Okay. That's it. You are definitely going even if I have to drag you there. This poor, poor, pitiful me thing of yours has run its course.\"\n\n\"But you don't understand why I...\"\n\n\"Oh, no you don't. You're going and that's final! Choose one of the new outfits and be there by 8 o'clock.\"\n\n\"Eight o'clock? I'm an hour from going to bed at eight!\" Farah complained.\n\n\"Farah, Farah, Farah. What am I going to do with you?\" her best friend said.\n\n\"Let me stay home?\"\n\n\"No. Sorry. Anything but that. Eight o'clock. Be there!\" Traci repeated.\n\n\"Fine. I'll go,\" Farah mumbled.\n\n\"See! That's the spirit!\" Traci told her as though she'd just happily agreed. \n\nBy Saturday evening Farah was still looking for an excuse not to go, but an earlier text from Traci about how much she was looking forward doing this convinced her she wasn't going to be able to avoid this. The other thing she said was that her mom wouldn't be joining them, and that made Farah wish she had the strength to stand up to her best friend and, as the old saying went: just say no. But she didn't so...\n\nBoth of the outfits she'd bought looked like they were for women 10-15 years younger than her, and she nearly chickened out and wore something she'd feel more comfortable in.\n\nOf the two, the sleeveless knit top with the low neckline and leather skirt\u2014the very short leather skirt\u2014seemed like the more conservative option, something that made her laugh, so she went with it.\n\nThe top was deep black and the leather skirt was was a reddish brown, and once she had it on, it wasn't as bad as she'd thought. Yes, it had seemed fine when Traci raved about it in the mall when she tried it on there, but after that, it just seemed...scary...until she gave it another look with a less critical eye.\n\nSome mascara a small amount of gray eye shadow seemed like more than enough makeup, and yet Farah found herself putting on a coat of clear lip gloss\u2014and a coat\u2014before leaving the house.\n\nIt was no surprise that she was a few minutes early and Traci was still nowhere to be found. As she walked inside of the club, the only good news she could find was that it wasn't noisy yet. People were laughing and talking, but it was still very tolerable.\n\n\"Tolerable. Geez, how old are you, Farah?\" she asked herself just when she realized someone was talking to her.\n\nWhen she turned around, there he was.\n\n\"Farah, right?\" the smiling face asked.\n\n\"Um...yes. And you're...?\"\n\nShe knew his name and felt silly not saying it, but that came out of her mouth so...\n\n\"Shawn,\" he reminded her. \"Shawn Baker.\"\n\n\"Right. Shawn. Nice to see you again.\"\n\n\"You, too. And you look sensational, by the way.\"\n\n\"Oh, gosh. Thank you. That's very kind,\" Farah replied, now glad she'd worn what she was wearing.\n\nHe smiled then asked, \"So...where's your posse?\"\n\n\"My...posse?\"\n\nShawn laughed then apologized if his choice of words offended her.\n\n\"Oh, no. I think I just forgot where I am,\" she said, immediately regretting that choice of words, as well, as it implied she was at some lowbrow place she wouldn't normally frequent.\n\nShe felt better when Shawn laughed.\n\n\"I uh, I need to get backstage, but I'm really glad I you're here,\" he told her, the smile still there, not having taken her words as some kind of dig.\n\n\"Um, yes. Same here,\" she replied as she forced herself to smile, too.\n\n\"Listen, I was hoping we might be able to talk some more after the show.\"\n\n\"I...I don't know. I'm not much for late nights out,\" she told him. \"You know. Older, married woman that I am and all.\"\n\nThis time, her reply was at least honest, but Shawn's reaction surprised her. It started when he looked at her left hand which was followed by a shake of the head.\n\n\"I don't mean to be rude or anything, but I do remember your friend, Traci, saying you were single. That may have been funny to her...or to you...but it isn't to me.\"\n\nHe wasn't being rude, but it was obvious he felt like he'd been lied to, and Farah was so surprised she wasn't sure what to say. Her first thought was to 'play the widow' card and tell him her husband had been killed in a horrible accident and to mind his own business. But she somehow realized he was upset because he honestly thought she was unmarried only to find out she had a husband. Even more surprising was the realization that he might actually see her as a potential...date. Or maybe more.\n\nRather than say something offensive she quietly said, \"My husband passed going on three years ago. I still wear my ring because... Anyway, I hope you didn't think I was trying to deceive you or...\"\n\n\"Farah. I am SO sorry,\" he said before she could finish. \"Wow. I...I feel like such an ass. I should have put two and two together, but for some reason I just assumed the worst.\"\n\nHe looked right at her and said, \"I hope you can forgive me, and I truly am sorry.\"\n\n\"Sorry? For what?\" they both heard a chipper female voice say.\n\nFarah didn't need to turn around to see who was talking to her this time.\n\n\"Traci. Hey. You remember Shawn, right?\" Farah said as Shawn said hello to her.\n\n\"Remember him? I haven't stopped thinking about him since we met,\" she replied, her eyes fixated on his very handsome face, a very big smile on her own.\n\nShawn looked at Farah who finally smiled at him, then said, \"I'd love to talk, but we're getting ready to start, so I really need to run, but it was very nice seeing you ladies again. Both of you.\"\n\nBefore Traci could say something else to embarrass her friend, Shawn kind of waved as he turned around and walked away.\n\n\"Look at you gettin' busy with it!\" Traci told her BFF as she kind of elbowed her.\n\nFarah not only didn't reply, she just glared at her friend.\n\n\"Okay, okay. I saw you talking to him, and I was just kind of hoping you might...you know.\"\n\n\"No, I don't know. And for that matter, I don't even want to know whatever it is I don't know. Okay?\" Farah told her, wondering what any of that even meant.\n\n\"Fine. Okay,\" Traci said as she looked around. \"Wow. This place is packed. We better go find a seat before they're all taken.\"\n\nPeople had been streaming in just since Farah arrived, and as they walked to find a table, she heard someone talking about how good Carbon was, and that gave her hope that she might at least enjoy the music. And if she could somehow slip out before the final song of the last set, this might not be all that bad.\n\nThe noise level had grown with the increase in people and in direct proportion to the amount of alcohol consumed. They no sooner found a table when the emcee grabbed the mic.\n\n\"Ladies and gentlemen. May I have your attention, please?\"\n\nThe room was filled to capacity, and in spite of the freely-flowing booze, got fairly quiet as the band was introduced. The lead singer was an attractive, younger woman in a short, sequined dress. The lead guitar player was a very nice looking younger man with long hair. The guy playing bass was essentially hidden behind a huge beard, even longer hair, and sunglasses, and then there was the very attractive, clean-cut drummer.\n\nWhen he was introduced, Traci hollered at him, and Shawn smiled and nodded.\n\n\"So without further ado, I give you...Carbon!\"\n\nThe entire place erupted in applause, and Farah found herself hollering out something that didn't matter right along with them. But even louder than their noise was the voice of the lead singer as she started with a song by Fleetwood Mac.\n\n\"So I'm back to the velvet underground\n\nBack to the floor that I love\n\nTo a room with some lace and paper flowers\n\nBack to the gypsy that I was \n\nTo the gypsy that I was...\"\n\nFarah remembered Shawn saying they played cover songs, but she had no idea the first song would be one she loved. It was called Gypsy, and she and Traci were singing along with the beautiful woman behind the mic.\n\nThe second song was even better as it got people up, and, like the name of the song, walking like an Egyptian, a song from the 80s by The Bangles. A cover of Dido's hit, White Flag, followed, and then came an oldie from the 60s called California Dreamin by the Mamas and the Papas.\n\n\"So much for just 60s and 70s music,\" Traci said.\n\n\"This is great!\" Farah called out, ignoring her friend, as she listened to yet another song she loved.\n\nBy the end of the first set, she'd forgotten all about the cute drummer who'd invited her to stay and talk and was having a really good time.\n\nBut the first song of the second set changed all that when the spotlight focused on Shawn, who was himself evidently a singer, as well. Once it got quiet, he began speaking.\n\n\"Folks. I have a dedication. And...it's my own, by the way. It's for someone I recently met who's made quite an impression on me. And since this is my song, I hope you'll bear with me and allow me a little poetic license.\"\n\nBoth Farah and Traci recognized the Hall & Oates song Sara Smile after the first few notes. But when Shawn clearly sang it \"Farah...Smile\" and substituted her name for Sara's every time, she found herself unable to sing along.\n\nShawn was clearly looking right at her, too, and Traci definitely noticed.\n\n\"Well, well, well. Look who has a crush on you!\"\n\nWhen her friend rolled her eyes, Traci said, \"Come on, Farah. Smile!\"\n\n\"Don't be ridiculous!\" she hollered back over the noise.\n\n\"I'm not!\" her friend smugly yelled back. \"You're just in denial!\"\n\nAs Farah looked up, she saw Shawn staring at her as he sang, \"It's you. And me. Forever. Farah...smile!\"\n\nHe kept right on smiling at her as he played and sang.\n\n\"You gotta admit he's very talented!\" Traci called out.\n\n\"Okay, I'll give you that much,\" Farah agreed, knowing it was true. \n\nJust like the female singer, he had a very nice voice. She had no idea how to play the drums, so she could only assume he was at least pretty good at that, too, and for all she knew, he might even be very good. What she did know was that this song, and the way he was looking at her made her very uneasy.\n\nWhen the last note was sung, the place erupted in loud applause and whistles.\n\n\"That was for the beautiful lady in the black top,\" Shawn told everyone before saying, \"whose name is Farah, in case you hadn't figured that out.\"\n\nThere was a lot of laughter, and then a guy called out, \"She's hot!\"\n\nTraci turned to her friend to tell, \"I told you so!\" when several others hollered out their agreement.\n\n\"So's her blonde friend!\" another yelled.\n\n\"Ha!\" Farah said, as though it was a legitimate retort.\n\n\"It just proves my point!\" her friend said.\n\n\"And what point would that be?\" Farah asked, almost afraid to find out.\n\n\"We still got it, of course!\" Traci told her before the next song, Who'll Stop the Rain by Creedence Clearwater Revival stopped their squabbling.\n\nIt was 10:55 when the lead singer announced this would be their last song. She thanked them for being a wonderful audience, waited for the loud applause to die down, then a male voice began singing.\n\n\"You never close your eyes anymore...when we kiss.\"\n\nThe entire club sang along when Shawn got to 'you've lost that lovin' feeling,\" including Farah and Traci.\n\nQuite a few people began filing out when the song ended, but Farah wasn't one of them. She'd had a really great time, and for some reason, she didn't want the evening to end. To her surprise, it was Traci who said she needed to get home.\n\n\"I promised Cody I'd be home before midnight, and I kind of feel guilty being out this late without him.\"\n\nFarah knew how much she loved her husband, but for Traci, this was not just unusual, it was almost scary.\n\n\"Trace? What's going on?\" Farah asked just as her friend looked up and behind her.\n\n\"You guys are amazing!\" Traci said, causing Farah to turn around.\n\nShawn was right behind her, and now it all made sense.\n\n\"Thank you. We love performing, and we also love hearing anytime folks enjoy it.\"\n\n\"We did, but unfortunately I have to run,\" Traci told him as she stood up.\n\n\"But please. Have a seat. Farah is my best friend in the whole world, and she had as good a time as I did.\"\n\nTraci grabbed her purse and coat then said, \"Right, hon?\"\n\n\"Um...yes. It...it was wonderful, but do you really have to leave?\" she asked, her eyes begging her friend to stay.\n\n\"Sorry. The old ball and chain calls, right?\" she said with a smile and a twinkle in her eye. \"But you kids stay. Have a drink. Get acquainted.\"\n\nBefore Farah could respond, Traci bent down, kissed her on the cheek then smiled at Shawn and wished them goodnight.\n\nAs she walked away, Farah turned to Shawn and said, \"That was...awkward.\"\n\nHe laughed then asked if he could sit down.\n\n\"Oh. Yes. I'm sorry. Please do,\" she told him.\n\nHe did then said, \"I get the feeling Traci is trying to...get the two of us together. Alone.\"\n\nFarah sighed then told him he was right.\n\n\"She's never pressured me like this before. She's always given me my space, but suddenly it's as though she's decided it's time for me to, you know, start dating again, and there have been some recent setups that were, well...pretty awful.\"\n\n\"I don't know her, but I do know she's your friend, and it seems like she has your best interests at heart,\" Shawn observed.\n\n\"Both of those things are true. We've been best friends for...well, a very long time,\" Farah said, not wanting to say the number of years. \"And she's been there for me like no one else since...since my husband...passed away.\"\n\n\"Again, I am so sorry, Farah.\"\n\n\"Me, too,\" she said before remembering how much she'd enjoyed herself. \n\n\"I had no idea you could sing like that,\" she nearly bubbled.\n\nShawn chuckled then said, \"We tend to think of people fitting into molds or boxes of our own creation. In my case, you saw me as a busboy, so that's who I was to you. Now I'm a singer and a drummer. And a busboy.\"\n\nFarah smiled then said, \"Something tells me you're a lot more than just those things.\"\n\nShawn smiled back and said, \"I wouldn't say 'a lot'. Not in the sense of me being anything important. But as I said, I'm also a grad student, so there's that aspect of my life, too.\"\n\n\"What are you studying?\" Farah asked with genuine interest. \"Chemistry, right?\"\n\n\"No. That was my undergrad major. I love chemistry, but my real love is flying. So I switched to engineering. Aeronautical to be precise. I had all the math but had to take a bunch of 'catch-up' classes to get into the program. I've been fascinated by planes since I was old enough to watch them fly, and I nearly joined the Air Force twice.\"\n\n\"Twice?\"\n\n\"Yes. Right after high school and then again after getting my bachelor's. But as much as I'd love to fly a jet, I have other dreams and I felt like getting a masters would help me get there.\"\n\n\"Well, I want to hear more,\" Farah told him, genuinely enjoying their conversation and having forgotten how young he was.\n\nHe smiled at her then said, \"I guess it's pretty obvious I sat down so I could get to know you, Farah\u2014with one 'r'. Talking about myself any more would bore me to tears. So perhaps you could tell me a little about who you are.\"\n\nThe wonderful time she'd had aside, as soon as he said that, she got that uneasy feeling again, and when she stopped smiling, Shawn knew something was wrong.\n\n\"Farah, I won't lie. I am interested in you, and in more than just getting acquainted. But I know your...history...and if it's too early, then I'll respect that and back off.\"\n\nHer first impulse was to run. Her second was to tell him it was most definitely too early. And thirdly, she thought about reminding him how much younger he was than her being the real problem, but as she sat there and thought about it, staying and just talking didn't seem quite as frightening.",
        "\"I...I'm very flattered, Shawn. I really am. It's just that, we're, you know. I mean, you're...and I'm...\"\n\n\"Enchanting?\" he said with a smile. \"Or were you going to say beautiful? Both are correct, but I don't want to put words in your mouth.\"\n\nFarah opened her eyes widely then smiled and told him, \"You kind of just did.\"\n\n\"Yeah. I guess I did, huh?\" he replied. \"But you are both of those things, Farah.\"\n\nJust as she was getting ready to level her next objection, a pretty young girl came over and asked what they'd like to drink.\n\n\"Oh, no. I'm driving, and I really need to get going,\" Farah said.\n\n\"You could have a cranberry juice with me, couldn't you?\" Shawn asked her, that amazing smile on his face. \"It's on me.\"\n\nAgain, before she could answer for herself, he told the girl, \"Two cranberries, please.\"\n\n\"They charge like...$5 for one of those here. How does a grad student afford that?\"\n\nShawn laughed then explained.\n\n\"We actually do really well. The band, that is. We've been together for five years now, and we uh, we kind of have a reputation around town. I'm not saying we're rich, but we make decent money doing cover songs. In fact, were I not paying graduate-school tuition, I could just about get by on what I make playing with Carbon.\"\n\n\"That's really amazing,\" Farah told him, very surprised by his revelation. \"So...why Carbon? What's the meaning?\"\n\n\"Oh. That. Well, in addition to loving airplanes, I'm a science and chemistry nerd, and carbon is the basis of all life. Music sort of gave me my life back after my mom died, and...\"\n\n\"Shawn. Oh, my goodness. I am so sorry,\" Farah told him before he could finish.\n\n\"Thank you. I was in junior high when she and my dad sat me down and told me she had cancer. It was a month before my 13th birthday, and when it rolled around, she insisted my dad spring for a set of drums and lessons. He was worried the noise would be a negative influence on her, but my mom wanted to watch me play every time I practiced. No matter how bad I was or how bad she felt, she was right there smiling\u2014even when things got really bad\u2014and that was my motivation to play better. After she died it kind of became my salvation. I'd always sang pretty well, and by my sophomore year of college, I met the other guys in our band and we started jamming together. And now...here we are.\"\n\n\"I've already said you guys were amazing and wonderful, so I'm not sure how else to express that, but Carbon is really, really good.\"\n\n\"Well, thank you for saying that. We all love performing, but all of us know the end is...nigh.\"\n\n\"As in...after you finish grad school?\"\n\n\"Yes. I've got the rest of this semester left and then I'll be looking for full-time work in the aviation industry. And there's not much here in Indianapolis that's aviation related.\"\n\nTheir 'drinks' came, and the girl told Shawn they were on the house which made sense for him as a performer, but not so much for Farah. But she thanked her...and him...then asked about his future plans.\n\n\"Nice one,\" he replied before taking a sip. \"You almost turned this back around on me.\"\n\n\"Oh. Right. You wanted to talk about me, huh?\"\n\n\"Very much so.\"\n\n\"There really isn't all that much to tell,\" she began. \"And what there is isn't very interesting.\"\n\nBut it was after midnight before she realized she hadn't stopped talking about herself or Ben or their life together since telling Shawn there wasn't much to say.\n\n\"He sounds like an incredible guy,\" Shawn said about her late husband.\n\n\"He was,\" Farah said rather wistfully. \"And I'm sure your mother was just as incredible.\"\n\n\"That's true. She was really an amazing woman. She was so strong all the way to the end.\"\n\n\"You're strong, too, Shawn. Anyone who could go through that and still have such a positive outlook on life and not be bitter is...pretty amazing in my book.\"\n\nFarah had no idea she was reaching over, even when she put her hand on his arm before saying, \"I'm sure your mother would agree.\"\n\n\"I hope that's true,\" he told her as he went to put his hand on hers, causing her to quickly pull back.\n\nFor the first time since he sat down, there was a lengthy lull in the conversation.\n\nFarah felt uneasy again, but not for the same reason. She started to say it was time to be getting home again when Shawn spoke before she could get the words out.\n\n\"Would you maybe like to dance?\" he asked, surprising her so much her eyes popped wide open.\n\nAfter the band's last song, the club started playing recorded music. It was much quieter but still clearly audible, and a few people had been dancing here and there the entire time they talked.\n\n\"That wasn't quite the reaction I was hoping for,\" Shawn said as his face indicated a little wince to the way she looked at him.\n\n\"Sorry. I didn't mean to do that. You...you surprised me,\" Farah told him.\n\n\"So I didn't just scare you away?\" he asked, his eyebrows raised high in hopeful anticipation.\n\n\"No. Not at all,\" she told him in a rather sweet way.\n\n\"Oh, okay. It's me, isn't it?\"\n\n\"Wait. What?\" Farah asked with a slight shake of her head.\n\n\"Well, I'm clearly interested in you, but it's becoming equally clear that you don't feel quite the same way about me,\" he told her without sounding like he was complaining.\n\n\"It...it isn't that so much as it is...\"\n\nShe saw him tilt his head a little indicating he was listening and waiting.\n\n\"I...I guess I just don't understand...why. I mean, if you like, you know, older women, I'd have thought you'd have been interested in Traci.\"\n\n\"No. No way,\" Shawn replied. \"First of all, she's married.\"\n\n\"Oh, gee. Duh!\" Farah replied with more than a little embarrassment.\n\n\"Second, she's not nearly as attractive to me as you are,\" he told her as he looked right at her. This time he wasn't smiling, and it was obvious he was very serious.\n\n\"That...that makes no sense at all,\" she said, forgetting the things Ben had told her.\n\n\"It doesn't?\"\n\n\"Well, no. I mean, she's got long, gorgeous, blonde hair, a perfect figure, and her face is...amazing.\"\n\n\"She's attractive for sure. She's just not nearly as attractive as you are,\" Shawn told her so sincerely it scared her. \"And just so you know, I've never dated anyone older than me before, so it's not like I 'have a thing' for older women.\"\n\nHe smiled at her then said, \"Just...one...older woman.\"\n\nHer eyes were rapidly moving between his and then she suddenly looked away.\n\n\"Oh, wow. It's after midnight already,\" she announced as though Shawn hadn't said a word.\n\n\"Do you...turn into a pumpkin or something?\" he teased.\n\n\"What? No. I...it's...it's just really late. That's all,\" she managed to get out.\n\n\"One dance,\" he said, ignoring her protestations.\n\nThe current song ended, and before the next one started, she heard herself agreeing. \n\n\"If it's just one dance then, well, I...I suppose that would be okay.\"\n\n\"Yeah?\" \n\nShawn's face brightened as he stood up and reached for her hand.\n\nFarah felt both foolish and yet...happy...as she let him take it.\n\nJust as they got to an empty spot on the floor, the next song began, and it hit both of them hard as Eric Clapton sang, \"Would you know my name, if I saw you in heaven?\"\n\n\"If this is too much...\" Shawn said when he saw the look on her face after they realized what song it was. \n\nIt was an ode to Clapton's son who died when he was four years old, and anytime Farah heard it, the song reminded her of Ben, and without fail, it made her tear up.\n\n\"No. It's...fine,\" she told him without looking at him.\n\n\"You sure?\"\n\nFarah didn't answer him, she just moved in closer and kind of moved around in a circle as the song continued with the words, \"Would you hold my hand, if I saw you in heaven? Would you help me stand, if I saw you in heaven?\"\n\nShawn was concerned about her but couldn't see her face. But when he felt a warm tear fall on his neck, he knew.\n\n\"Hey. Are you sure you're okay? I promise I had no idea this song was going to play,\" he quietly asked as she pressed her body against his, her face next to his.\n\nShe nodded then held him a little tighter. He did the same but no other words were spoken until it ended.\n\nWhen it finished, she slowly let go of him, and Shawn waited for her to look at him.\n\n\"Are you really okay?\"\n\n\"Yes,\" she replied, a forced smile on her face. \n\nShe'd somehow managed not to cry more than a few tears and said, \"I just wasn't expecting that particular song.\"\n\n\"No. Me, either. If I'd known...\"\n\n\"No, it's okay. It was...it was actually...very nice,\" she said, as she blinked several times to clear away what was left of her having teared up.\n\nWhen they got back to their table, Farah didn't sit down. She told him again it was getting very late and that she needed to go.\n\n\"Sure. I understand. May I at least walk you to you car?\"\n\n\"You don't have to do that,\" she told him as she reached for her coat. \n\nShawn gently took it from her then went behind her and helped her put it on.\n\n\"Thank you,\" she said without turning around to look at him. \n\n\"I'd like to walk you out,\" he told her again. \"But if you're um...tired of me...\"\n\n\"Oh. No. It's just that...\"\n\nShe gave up then told him, \"That...that would be fine,\" still not looking his way.\n\nHe grabbed his jacket on the way out then opened the door for her and asked which way.\n\n\"I'm over there,\" she said, pointing to the larger lot on the left side of the building.\n\n\"It's already getting cold,\" he remarked as the early-morning air hit them.\n\n\"Yes, it is.\"\n\nFarah pulled her keys out and hit the fob causing her taillights to blink.\n\n\"That's me,\" she told him, as though he might not know.\n\nShawn walked alongside her, and when they got to her car she finally looked at him.\n\n\"Thank you for inviting me. I had a really nice time tonight.\"\n\nThis time it was his eyes doing the darting as he looked to see if she was just saying that or really meant it. He felt confident she was being sincere, and he told her he did, too.\n\n\"Farah? I'd really like to see you again,\" he quietly told her.\n\nShe was looking at him until he said that, and when he did, she looked down.\n\n\"I...I don't think so, Shawn,\" she said unconvincingly.\n\n\"May I ask why?\" he gently probed.\n\n\"Isn't it obvious?\" was her surprise answer.\n\n\"No. Not at all,\" was his equally surprising reply.\n\n\"You're a really great guy. You're obviously extremely intelligent. You have this amazing voice. You're an excellent drummer, and...\"\n\n\"Then what?\" he asked just as quietly as before.\n\n\"I...we...had a nice time. And I'm grateful for that. I don't have very many of them.\"\n\n\"I'm glad you did,\" he said before she could finish.\n\n\"But people date because they think there's a chance they'll, you know, hit it off. But you and are...we're...I'm just...\"\n\n\"Embarrassed to be seen with a busboy in public?\" he teased.\n\nShe finally looked at him then said, \"No! That has nothing to do with it. Not at all.\"\n\n\"Is it the band? Or rather...my lack of a real job?\" he asked in the same way.\n\n\"Shawn, stop! You're making this very difficult for me.\"\n\n\"I'm certainly trying to,\" he quietly told her without smiling.\n\nShe'd looked away again, but when she looked back, he smiled. She didn't want to smile back, but she couldn't help it. When she gave in and smiled, Shawn went for it.\n\n\"One date? Just one. I promise.\"\n\nShe started to explain why that was a bad idea, but he kept talking.\n\n\"Unless, of course, you realize what a great catch I am and can't say 'no' to a second date when I ask you. Which I will.\"\n\n\"Gee. Full of yourself much?\" she asked, trying to sound very serious and feeling much less...uptight about all this.\n\n\"No. Just eternally hopeful. And optimistic.\"\n\nShe looked into his eyes and said, \"I...I don't know, Shawn. I mean, we're both just so...\"\n\nFarah had no idea he was kissing her until his lips had been on hers for nearly a full second. When she realized what he was doing, she flinched a little but didn't pull away. She didn't kiss him back, but she never tried to stop him, either, so when he ended the one-way kiss, he knew she'd say yes.\n\n\"Tomorrow night. Dinner. I'll stop by at seven and promise to have you home by ten.\"\n\n\"You're not going to take 'no' for an answer, are you?\" Farah told him as she realized she actually wanted to see him again even though she had no idea why.\n\n\"So may I please have your number?\" he asked, ignoring her rhetorical question.\n\nShe rattled it off very quickly, then asked if she needed to repeat it.\n\nHe laughed then said, \"No need. I'm really good with numbers,\" as he entered it into his phone.\n\n\"Is there anything you're not good at?\" she asked playfully but trying to sound serious.\n\nEven more seriously he told her, \"Um...yes. Log burling. I'm really awful at log burling.\"\n\nFarah tried as hard as she could not to laugh, but she couldn't stop herself.\n\n\"Okay. Fine. I'll see you tomorrow. At seven.\"\n\n\"You mean...today, right?\" \n\nShe gave him a puzzled look then remembered it was after midnight.\n\n\"I can't remember the last time I was out this late, but...touch\u00e9,\" she said with a laugh.\n\nShawn reached around her and opened her door, again not paying any attention to her comment.\n\n\"Thank you,\" she said as she slid into the driver's seat.\n\n\"Be careful, okay?\" he said as she looked up at him.\n\n\"You, too.\"\n\n\"I will. I promise.\"\n\nHe closed her door then said, \"Goodnight, Farah.\"\n\n\"Good...morning,\" she said back before laughing and starting the car.\n\n\"Ohh! Nice. And...touch\u00e9!\" he called out as he tapped on the glass.\n\nHe stood there and waited until she was out of the parking lot, and once she was gone, he smiled. And in her car, Farah smiled, too. At least until it hit her that she'd just agreed to go out\u2014on a date\u2014with someone who had to be at least ten years younger than her; someone who'd not only sung to her but who'd also kissed her. \n\nWhen those thoughts dawned on her, she panicked. It was too late to call Traci, so she fretted on her own, tossing and turning until she finally fell asleep around 3am.\n\nIt was well after ten when Farah woke up, and it took her a second or two to understand why the sun was up so high.\n\n\"Oh, no!\" she moaned into her pillow when the reason why hit her. \"What have I done?\"\n\nBy noon, she was showered, dressed, and had had half a bagel and some coffee. She brushed her teeth then sat down and thought. Thirty minutes later she picked up her phone and dialed her version of 911.\n\n\"Traci? Hi. Yes. Fine,\" she said as her friend began peppering her with questions.\n\nFarah finally got a word in and stopped her.\n\n\"We need to talk,\" she said in a way that scared her best friend.\n\n\"Farah? Did something...happen...last night?\" Traci gingerly asked.\n\n\"Oh, yes. Yes, indeed. Something definitely happened.\"\n\n\"Wait. Not something...bad, right?\"\n\n\"That...depends.\"\n\n\"Hmmm. Let me guess.\"\n\nThere was a pause before she heard Traci say, \"Oh, wait! Did you...did he...kiss you?\"\n\n\"I really, really need to talk to you!\" Farah nearly begged.\n\n\"Okay. I'm on my way, and I'll be right there. But Farah? I want details!\"\n\n\"Details? I just want someone to talk to before my head explodes!\" Farah replied with desperation in her voice.\n\nBy the time Traci got there, Farah had calmed herself down a little by realizing she wasn't obligated to go out with anyone\u2014including Shawn. What she hadn't yet addressed was why he in particular was causing her so much angst.\n\nTraci insisted Farah sit down while she boiled water for some tea. When they were both ready to talk, Traci asked what was going on.\n\n\"I kind of agreed to go out with him. Tonight.\"\n\n\"Ah-hah. And you kissed him, didn't you?\"\n\n\"No. Well, he kissed me, and I...I didn't move away.\"\n\nTraci surprised her by not replying the way she normally did. She was actually serious for a change, and this was a side of her Farah loved as much as the fun-loving side.\n\n\"You know I flirt. A lot. But do you know why I flirt?\" her friend asked.\n\n\"You're very attractive, and flirting is your way of warding off advances,\" Farah guessed based on years of friendship.\n\n\"Partly. But that's not the main reason.\"\n\nTraci took a sip of the Earl Gray tea then set her cup down.\n\n\"I flirt because I'm lonely. Now please, please don't think that means I would ever be unfaithful, because that just isn't going to happen. Ever. I love my husband dearly, but he has a mistress.\"\n\nFarah's eyes opened so wide it made Traci smile, but she remained serious.\n\n\"Not a human mistress. Cody's other love is medicine, and I'm extremely jealous of her. I know he loves me dearly, and I love him just as much. But work takes up a LOT of his time. I could sit around and complain, and he might scale back his hours, but then he'd resent me because he loves medicine as much as he loves me.\"\n\nFarah wanted to ask what this had to do with her current situation, but she knew her friend was making a point. Plus, it was obvious she also needed to talk, so she took another sip of her tea and listened.\n\n\"What I'm saying is that no marriage is perfect. Yours was about as close as I've ever seen, but even you two had your issues, right?\"\n\nFarah hated admitting it, but Traci was correct. She and her late husband had problem areas, but since his death, she'd only ever thought back on the good times. There were a ton of them because, for the most part, they really did have a wonderful marriage. But it definitely wasn't perfect, and Traci was correct in saying that no marriage ever was.\n\n\"Of course. Several come to mind,\" Farah told her truthfully.\n\n\"Well, no relationship is, either.\"\n\n\"Okaaay...\" Farah replied waiting for the rubber to hit the road\u2014or something like that.\n\nTraci leaned forward in her chair a bit then said, \"Shawn seems like a very nice guy. He's obviously goal-oriented, he's willing to do pretty much anything to pay the bills, he's extremely talented where music is concerned, and once he gets his advanced degree in engineering, he'll have no trouble finding a good job. So while I'm not saying he's the one or anything even close to it, how could it be so bad to go out with him? You know, the age difference aside.\"\n\nFarah was watching her friend closely, and when she finished speaking said, \"Why is it that I came to the same conclusion but wouldn't believe it until I heard you say it?\"\n\n\"Because...it's me,\" Traci said as she threw her arms out dramatically, the other side of her personality back. \"I mean, who wouldn't be convinced by...all of this.\"\n\nShe batted her eyes and struck a dramatic pose causing Farah to laugh.\n\n\"You're exactly what the doctor ordered!\" she told her funny friend.\n\nTraci sighed then said in a more serious tone, \"If only that were true.\"\n\n\"Is it really that bad?\" Farah asked, the inference to her husband-doctor impossible to miss.\n\n\"No. No, it isn't. And whenever it does get to me, I remember why I married him and look around me and see everything his hard work has provided, and that makes me even more grateful. But most of all, the time we do have together is almost always wonderful. So how could I have all that and be ungrateful?\"\n\n\"I'm glad you're my best friend, Trace.\"\n\n\"Back atcha, girlfriend,\" Traci told her before asking, \"so...where are you guys going?\"\n\n\"Ha! I was enjoying our talk so much I actually forgot all about that.\"\n\n\"May I ask a personal question?\" \n\n\"Seriously? You know you can ask me anything about anything.\"\n\n\"I know. Just being polite,\" Traci told her with a smile. \"Do you like him?\"\n\n\"I...I don't know. We just met, and last night we talked for maybe an hour or so. Based on that, I'd say he's everything you pointed out.\"\n\n\"And gorgeous, right?\" Traci said with a grin.\n\n\"He's...nice looking,\" Farah said as though there were qualifications to her statement.\n\n\"Nice looking? He's...Chris Evans nice looking. He's...Noah Mills attractive. He's a younger...George Clooney or Tom Cruise handsome. Shawn is...\"",
        "\"Okay. I get it. Yes, he's very...\"\n\nFarah smiled then said, \"VERY good looking.\"\n\n\"And he likes you,\" her friend pointed out.\n\n\"And that's the part I don't understand.\"\n\n\"Oh, my. Dear, dear Farah. What am I to do with you?\"\n\n\"Meaning?\"\n\n\"Honey, you are too smart not to know the answer to that,\" Traci told her.\n\n\"Then why am I asking you to tell me the answer?\"\n\n\"Because you're modest. And sweet.\"\n\n\"Oh. Well, that clears it all up!\" Farah told her as she made a face that indicated just the opposite.\n\nTraci laughed then filled in the blanks.\n\n\"You know how people say 'gentlemen prefer blondes', right?\"\n\n\"Of course.\"\n\n\"Do they? Do ALL gentlemen prefer blondes?\"\n\n\"No. Of course not.\"\n\n\"So...do ALL men like women with long hair?\"\n\n\"Um...no. I'm sure a few prefer short hair.\"\n\n\"Since you really don't know anything about what Shawn likes or finds attractive, how do you know you're not all of those things rolled into one in his mind?\"\n\nFarah was modest, and were she to answer that honestly it would sound like she wasn't. But she understood Traci's point. It was at least possible a guy that good looking found her equally attractive. Ben had. And as soon as she remembered that, she realized her friend might be right.\n\n\"That seems a little far-fetched,\" Farah finally replied, still not ready to believe herself in spite of her late husband's kind words or Shawn having told her she was the more attractive woman.\n\n\"Not to me.\"\n\nFarah sighed then said, \"I know you're going to tell me I'm beautiful, blah, blah, blah, but the truth is\u2014you're beautiful. I'm not putting myself down, I'm just not in your league. Or anywhere near it.\"\n\n\"Ah, but that's where you're wrong, sweetie. Oh, and thank you for the compliment, by the way, but what you're missing is that a certain percentage of men find women like me undesirable.\"\n\n\"Yeah, right!\" Farah replied with a laugh, having forgotten about the 'Ken doll' analogy and therefore missing the 'Barbie connection'.\n\n\"I'm serious. Guys like that look at me and think 'plastic' or 'phony'. But they look at you and say, \"Hmmm. Genuine. Real. Yummy!\"\n\nFarah nearly spewed the tea she was drinking when she heard the word 'yummy'.\n\n\"Laugh all you want, but it's true,\" Traci informed her. \"And I'd be willing to bet Shawn is one of those guys.\"\n\nAgain, Traci had to admit her dearest friend might be right. It seemed illogical and counterintuitive, but it was possible.\n\n\"But you're forgetting how much younger he is than me. Or you.\"\n\nTraci sighed then said, \"And you're still missing the point.\"\n\nFarah thought for a moment then said, \"So...that's just one more thing he likes about me. The age difference. Is that the point?\"\n\n\"Ding, ding, ding! And the light has finally come on!\" Traci announced, again in a dramatic fashion.\n\n\"Gee, thanks,\" Farah said with a roll of her eyes.\n\nTraci ignored her and asked another question.\n\n\"So the only question that remains is, are you going to kick him out of bed for...being too young?\"\n\nFarah was expecting to hear 'for eating crackers', and the surprise wording made her laugh.\n\n\"Out of bed. Ha! Listen to you,\" Farah said.\n\n\"Just think about that, okay?\"\n\n\"No! I am not going to think about it. Not about...that.\"\n\n\"You should because after your third date, you're going to have to think about it,\" Traci playfully warned.\n\n\"Do you need some more tea?\" Farah asked, now tired of this conversation, and mostly because Traci was winning every point.\n\n\"Oh, heavens no. I have to drive home, silly girl,\" Traci told her as though she'd been drinking something harder than tea.\n\nFarah laughed then told her how much she loved her and got a 'dittoes' in reply.\n\n\"Now, let's go pick out what you're going to wear tonight, okay?\" Traci said as they took their empty teacups to the kitchen.\n\nShawn wanted to think about the older beautiful, older woman he was going out with that evening all day long, but he was up to his eyeballs in homework. He also had to put in four hours bussing tables before getting ready to go out with her, so his fantasies would have to wait.\n\n\"Farah. With one 'r',\" he said out loud as he forced himself to get to work.\n\nThe thought made him smile as he returned to analyzing the data he'd been collecting as part of his master's thesis which had to be completed in less than 60 days. The topic he'd chosen would cause the eyes of most people to glaze over, but it was something in which he was very interested: 'The analysis of high temperature effects on piezoelectric based ultrasonic transducers'. \n\nA close second had been: 'Aerodynamic performance analysis and inverse design of horizontal axis wind turbines'. But in the end, the sheer excitement of ultrasonic transducers had won out.\n\n\"Ultrasonic transducers. A real page turner,\" he also said out loud. This time he laughed before getting serious and diving back into his research.\n\nBecause of his insanely busy schedule, Shawn was extremely good where time management was concerned. He got his studying done, put his time in at work, made it home and showered then headed to Farah's after verifying her location with his phone/GPS.\n\nHe'd also made reservations for two at a restaurant called Livery, one of the nicest places in the city, located on North College Avenue. The one thing he hadn't done was ask Farah what she liked, and maybe more importantly, if there was anything she wouldn't eat. \n\nBut it was too late for that now, and by the time he pulled up to her house, he didn't think that would be an issue. He had a feeling about this older woman he was strangely attracted to and felt confident things would work out well with her. He couldn't be sure, and he had no idea how they might 'work out', but he still felt very good about his budding relationship with Farah. With one 'r'.\n\nOne of things Shawn already loved about Farah was the way she dressed. As far as he knew from the friends he had it seemed like most men didn't care what a woman wore unless she was wearing something skimpy or nothing at all. Maybe it was the engineer in him, or maybe he was drawn to engineering because of the way his brain worked, but this was just one more thing he tended to notice, and what he'd noticed so far he really liked.\n\nIn his mind, a woman who dressed well showed pride in the way she looked. To a point. If a woman was obsessed with her looks, that was as much a turnoff as one who made no effort at all. He didn't know her friend, Traci, well enough to say she was obsessed with her appearance, but he had that initial impression of her. \n\nFarah, on the other hand, did not. She definitely made an effort to look nice, and so far he'd really liked the way she looked both times he'd seen her. At the restaurant where he worked, she looked classy and professional, something he liked a lot. At the club, he felt sure she'd gone out of her way to look a little more sexy, and the leather skirt, which was a very nice touch, had done the trick. \n\nBut when she opened the door and let him in a few minutes later, Shawn was having a hard time keeping his jaw shut and his eyes above 'see' level, which would be 'C' level as in...chest, level. It wasn't that Farah was...big. It was just the way she looked in what she was wearing.\n\nHer hair looked amazing, and for the first time, she was wearing full makeup which, unlike many women he'd seen, made her look even more beautiful. Growing up in Indianapolis were it got down below freezing for too often and was only 'very cold' much of the rest of the year\u2014with blazing hot summers the exception\u2014he was very used to seeing women in sweaters.\n\nBut the off-white cashmere sweater Farah was wearing was just...gorgeous. Or was it her that made it look so nice to him? And the black, high-waisted skirt she wore with it along with a different pair of heels made her look sensational.\n\n\"Wow!\" Shawn said before repeating the same word a second time.\n\n\"So this is okay?\" Farah asked just to be sure.\n\n\"Um...yeah. That's...that's definitely okay.\"\n\nWhen he 'looked her up and down' not once but twice, she not only wasn't offended, she was flattered. \n\n\"I was concerned it might be too plain.\"\n\n\"Too plain. Um...no. Trust me. That is most assuredly not too plain,\" Shawn assured her.\n\n\"I guess after the leather skirt I couldn't help but think you might, you know, expect that sort of thing.\"\n\n\"Farah?\" he said as he came inside and closed the door himself. \"I'm not interested in you for what you wear, okay? I like your style\u2014a lot\u2014but that's not why I like you so much.\"\n\n\"I'm still struggling with why you do,\" she told him.\n\n\"That's easy,\" he told her as he smiled.\n\nVery quietly he then said, \"You see, you're Marianne.\" \n\nShe heard every word, but his words left her completely lost, and her facial expression told him that was true.\n\nShawn smiled then explained as she invited him to come in and sit down.\n\n\"I told my dad, who's my best friend by the way, that I'd recently met someone; someone special.\"\n\n\"Oh. I see,\" she replied, even though she 'saw' nothing.\n\n\"He's the one who said it. After I described you and your friend. Traci.\"\n\nShawn could tell she still didn't get it, so he kept on explaining.\n\n\"I've never really watched Gilligan's Island more than a little here and a little there. I've heard of it, of course, but it was way before my time. But my dad grew up watching the reruns in the 70s, and there were three women on the show. One was an older woman married to a tycoon named Thurston Howell, the third. The other two were younger. One was a movie star named Ginger, a beautiful, glamorous redhead. And then there was Marianne, a brunette who wore...less fancy clothes. Evidently, asking whether a guy prefers Ginger or Marianne is a thing because intuitively, everyone should prefer Ginger. But a whole lot of guys answer 'Marianne'. Guys like me.\"\n\nFarah had never heard it, either, and once she understood, it made sense just like it had when Ben told her he preferred her to Traci.\n\n\"Ah, now I get it,\" she told him with a little laugh. \"Just please don't start calling me 'Marianne', okay?\"\n\n\"I won't. And you really do look sensational,\" he told her.\n\n\"You look very nice yourself, Shawn,\" she said as he moved even closer.\n\nHe was wearing a dark-green sweater and a pair of black pants that looked great on him, but Farah knew Shawn would look good in anything. \n\nShe hoped she hadn't blushed when she thought to herself, \"Or...nothing.\"\n\n\"Can I get you anything to drink?\" she asked as she stepped aside, now that she knew she was his 'Marianne'.\n\n\"No thanks. But we should probably get going. We have reservations at Livery in 15 minutes.\"\n\n\"Livery? Shawn, that's a five-star restaurant,\" Farah said with a concerned look on her face.\n\n\"So I've heard,\" he replied with a smile.\n\n\"Well, I don't want you to spend that much money on dinner. We could get some takeout and come back...\"\n\n\"I made over $300 last night and a little more on Friday. Nothing would make me happier than to spend some of it on dinner. For us.\"\n\n\"Even so, I really would be just as happy with takeout,\" she told him again.\n\nShawn narrowed his eyes then said, \"Hmmm. Are you sure you're not embarrassed to be seen with me?\"\n\nHis question surprised her so much she couldn't help but react in a visible way.\n\n\"What? No. Of course not. That never even crossed my mind.\"\n\nHe smiled, but even so, Farah said, \"If there's anyone who should feel that way it would be you.\"\n\nShawn moved back in front of her and reached out for her hands.\n\n\"What?\" she asked as he took them and looked into her eyes.\n\n\"You're amazing,\" he said with a warm smile.\n\nShe wanted to hold his stare, but she couldn't.\n\nWhen he saw her look down, he quietly said, \"You just don't get it, do you?\"\n\n\"I...I must not,\" she told him as he looked right at her.\n\nHe inched even closer then slowly ran his fingertips along the soft fabric covering her arms and said, \"You are so beautiful, you...\"\n\nHe had no idea if she knew the song from the movie Top Gun or not, but he sang, \"You take my breath away,\" on key and in tune.\n\nFarah not only knew the song, she loved it. Ben had loved the movie, and she'd heard the soundtrack many times, and although he couldn't carry a tune in a bucket, he'd once sang it to her himself.\n\nWhen she began tearing up, Shawn was as confused as she'd just been.\n\n\"What's wrong?\" he quietly asked. \n\nHe had a small kerchief in his pocket and pulled it out and gently dabbed her eyes which never looked at his.\n\nShe managed to tell the story without crying, but Shawn could feel the deep emotion in her voice.\n\n\"Farah, I...I had no idea,\" he said by way of apology.\n\n\"No! It's okay. I love the song. And you really do have a beautiful voice. It just took me by surprise. That's all.\"\n\nShawn moved closer still until their bodies were touching, and Farah thought he was going to kiss her again. In spite of her emotional state of mind, she would have let him, and this time she'd have kissed him back. Instead, he just put his arms around her and held her.\n\n\"I really am very sorry you lost your husband,\" he quietly told her again.\n\n\"Thank you,\" she said as she had before. \"And dittoes for your mom.\"\n\nIn spite of the reason they were standing there holding each other, Farah was glad he'd chosen to hug her rather than kiss her, and now she didn't want the hug to end. Traci had helped her through a lot of her concerns about the age difference, a difference she still didn't exactly know, but even so, the way she was feeling still made very little sense to her. And yet, as he held her, it was the only place she wanted to be.\n\nEven so, she forced herself to say, \"We don't want to be late, right?\" as she slowly moved back and smiled at him and asked, \"is my mascara a mess?\"\n\n\"No. It's perfect,\" he told her before gently smiling and saying, \"just like you.\"\n\nIt had been so long since any man had talked to her like that, and even though she barely knew him, Shawn's words warmed her heart like no others had since Ben was alive.\n\n\"I'll uh, I'll just grab my coat, okay?\" she said, as she looked away, too afraid to continue looking into his eyes for reasons she couldn't explain but knew, deep down inside of her.\n\nThe coat was also an off-white color and Farah looked just as beautiful in it as she had before putting it on. \n\nShawn walked her outside, opened the car door for her and waited for her to get in. Farah thanked him then watched him walk around, and as he did, she couldn't help but feel there was something very unusual and even...special about this very handsome younger man who made her feel like she was the most beautiful woman on earth; a thought that made her realize that Ben was the only other man who'd ever done that.\n\nWhen he got in and started the car, she was unaware she'd never stopped looking at him until he looked her way asked if everything was okay.\n\n\"Oh. Yes. Everything is...wonderful,\" she told him, drawing a smile in return before she looked away again.\n\nShe'd only been to this particular restaurant once, and it was on her fifth wedding anniversary. She should have been upset or at least melancholy when she walked inside and looked around, but instead she felt...happy. \n\nWhen they got to their table, Shawn helped Farah with her coat then also helped her get seated. The maitre'd handed them their menus, and Farah was almost afraid to open it up.\n\n\"Have anything you like,\" Shawn told her with a warm smile.\n\nShe smiled back then looked down and gasped.\n\n\"Oh, my...\"\n\n\"What? What's wrong?\" he asked.\n\nShe lowered the menu, looked left then right, then 'loudly whispered', \"These prices are outrageous!\"\n\n\"Oh, that,\" Shawn replied with a quiet laugh. \"The food here is great, so it only makes sense the prices are set accordingly.\"\n\nShe'd forgotten the menu was Mexican-themed until she started reading the items.\n\nA small bowl of soup was $11, and she was thinking she'd have that and call it a meal. But when she mentioned that, Shawn was having none of it.\n\n\"Don't make me order for you,\" he play warned, his head tilted down and one eyebrow raised high.\n\n\"Okay, fine. I'll have the Paella,\" she said with a big sigh.\n\n\"Excellent choice,\" he replied in response to her order of shrimp, scallops, and chorizo fried rice. \"I think I'll have the lamb tamale.\"\n\nJust as their server came over, they laid their menus down. \n\nWhen she asked what she could bring them for appetizers, Shawn said, \"Two Gazpachos and two glasses of...\"\n\nHe smiled at Farah and asked, \"Red or white?\"\n\n\"White, please,\" she told him, a smile on her face, as well.\n\nAs much as she wanted to know about Shawn, Farah was almost afraid to ask. She wasn't exactly dumb or stupid, she just didn't have any background in math or science, and she thought she'd have no idea what he was talking about. Still, she really wanted to know so she finally asked him.\n\n\"You made me talk about myself before, so now it's time for you to tell about Shawn Baker,\" she informed him.\n\n\"Oh, right. I kinda did do that, didn't I?\" he replied with a smile. \"Okay. You asked for it.\"\n\nThere were quite a few times where she felt lost, but he had a way of explaining things that helped her understand. But the thing she really loved was his passion. He was as enthused about his future career as he was about music, and she already knew he loved singing and playing in the band.\n\n\"So do you have any idea at all where you might end up?\" she asked, remembering him telling her there weren't many opportunities in Indianapolis.\n\n\"No. Not yet. I'm familiar with a lot of the places where a degree in my field is marketable, but I've been too busy trying to graduate to think about resumes.\"\n\n\"I don't know any such place, so could you maybe tell me which cities you're thinking about?\"\n\n\"The truth is, I don't have a real preference. I'm mostly going to be looking for a job that looks rewarding.\"\n\nHe smiled in a way that made her...tingle...then said, \"Now were someone else involved in the decision-making process, that person's opinion would carry a whole lot of weight.\"\n\n\"Oh, I see,\" Farah told him with a very nice smile of her own.\n\n\"The cities are Hartford, Connecticut, Huntsville, Alabama, Los Angeles, Palm Bay, Florida, Philadelphia, Savannah, Georgia, Wichita, Kansas, and Washington, DC. Oh, Boston is also on the list as is Dallas, Texas, and a handful of other cities.\"\n\n\"Does cost of living matter?\" she asked, her prudent side showing.\n\n\"Again, if it's just me, no. But if I had say...a beautiful woman in my life...and if that mattered to her, then it would become very important to me.\"\n\n\"Ah. Good to know,\" she said before asking if weather played any role.\n\n\"Honestly? I'd like to live somewhere I could get outside and ride my bike a lot. It's a little tough her when it gets down around 20 degrees or less.\"\n\nHe laughed when he said it, but Farah understood. She wasn't an exercise person, but as she saw Shawn's enthusiasm about bicycle riding, she thought she could see herself riding along with him. Unless...\n\n\"You're not a Lance Armstrong kind of rider, are you?\"\n\nShawn chuckled and assured her he was not\u2014either in terms of his skill level or using steroids.\n\nAfter a second glass of wine, Farah couldn't believe two hours had already passed. There'd barely been a lull in the conversation the entire time, and suddenly it was already time to go.\n\nThey talked all the way back to her place, as well, and once they got to her doorstep, she asked if he'd like to come in. \n\n\"To talk,\" she emphasized.\n\n\"I'd like that. A lot,\" he told her. There was always work to do, but he'd cleared his calendar to spend time with Farah, and he wasn't about to leave as long as she wanted him around.\n\nA third glass of wine was out of the question for both of them, but she did make some decaf coffee which neither of them of them drank because, as they later agreed, 'decaf coffee' was a true oxymoron.",
        "\"You mentioned you don't really date much,\" Shawn said at one point. \"Have you just not met anyone you like?\"\n\nThe effects of the alcohol were long gone, but Farah still said something that really surprised her in answer to his question.\n\n\"Not until just recently.\"\n\nShawn did another head tilt along with the raised eyebrow.\n\n\"Do tell,\" he replied.\n\n\"I don't really understand it myself, but I...I think I really like being with you,\" she told him.\n\n\"Yeah?\"\n\n\"Uh-huh,\" she replied with a sweet smile.\n\n\"I can't tell you how happy that makes me,\" Shawn told her. \n\nHe almost always smiled, but this time, his voice was calm, sincere, and quiet.\n\nShe hated bringing up the age thing, but a part of her had to know. She was hoping against hope he was at least close to 30, but something told her not to get those hopes up too high.\n\n\"Shawn? May I ask you...\"\n\nThe pained look on her face told him the question.\n\n\"How old I am?\"\n\n\"Do you mind?\" she asked with a little wince.\n\n\"I'll be 25 in January.\"\n\nThe wince in her face disappeared and a blank stare replaced it.\n\n\"You okay?\" he asked when she neither spoke nor moved.\n\n\"I'm...I'm not sure,\" she quietly replied.\n\n\"Is that a problem?\"\n\n\"I...I want to say 'no', but I...I'm still trying to wrap my mind around what you just said.\"\n\n\"It doesn't change the way I feel about you, Farah,\" he told her just as sincerely as before.\n\n\"Don't you want to know my age?\" she asked, feeling almost sick to her stomach.\n\n\"Eventually, yes. But it won't change anything,\" he replied, the sincerity still there.\n\n\"So...even if I told you I was say...40...you wouldn't care?\" Farah asked, the incredulity in her voice now obvious.\n\n\"You're not 40, so that's a moot point,\" he told her, the smile back on his handsome face.\n\n\"No. I'm not 40,\" she quietly replied. \"But I will be before you're 30.\"\n\n\"Okay. So?\" he said.\n\n\"So? That's all you can say is...so?\"\n\nShe wasn't being mean or accusatory, she just couldn't imagine it wasn't a huge issue to him.\n\n\"It seemed nicer than 'so what'?\" he replied with a laugh.\n\n\"Shawn! Be serious!\"\n\n\"I am.\"\n\n\"No. No, you're not. You're not even thinking rationally!\"\n\n\"I assure you I am,\" he said with a serious tone that was clearly playful.\n\n\"I'll be 38. In January,\" she finally admitted.\n\n\"What day?\" he asked so cheerfully it surprised her.\n\n\"What day? You only want to know what day?\"\n\n\"Yeah. What else matters?\" he asked as though it was obvious nothing else did.\n\n\"The 21st.\"\n\n\"No way!\" he said, suddenly very excited. \"That's my birthday, too!\"\n\n\"What? Are you serious?\" Farah replied, briefing forgetting about her age-related anxieties.\n\nShawn stood up, pulled his wallet out, then walked over to where she was sitting and plopped down beside her. He produced his driver's license and told her to look for herself.\n\nShe looked at him then at the license then back at him before he pushed it closer and told her to go ahead.\n\nShe closed her eyes then opened one and peeked.\n\n\"January 21st, 19...\"\n\nShe looked over at him, her eyes wide with shock and finished saying the year.\n\n\"Ninety...five.\"\n\nHe had to remove the license from her hand because she couldn't believe what she'd just seen.\n\n\"Yes. I was born in 1995,\" Shawn said as though it was just any old number.\n\n\"So...I became a teenager the day you were born,\" she replied as she continued staring straight ahead.\n\nThinking it would be funny, Shawn turned toward her and said, \"Wow. That means you'll turn 40 a LOT sooner than I'll turn 30!\"\n\nShe turned to look at him, pulled her head back a little, then said, \"NOT funny!\"\n\n\"It's...kinda funny,\" he told her with a little shrug of his shoulders and a silly little grin.\n\n\"Okay, now you're just being mean!\" she told him as he continued smiling at him.\n\n\"Wow,\" Shawn said.\n\n\"Wow? Wow...what?\"\n\n\"You're just as beautiful when you're upset as you are when you're happy.\"\n\nHe sat there smiling as she shook her head and said, \"Unbelievable.\"\n\n\"You really are,\" he replied quietly.\n\n\"Shawn, be serious!\" she told him.\n\n\"I am. I'm very serious.\"\n\nHe moved even closer then reached up and brushed her dark hair back.\n\n\"What...what are you doing?\" she asked as though she had no idea.\n\n\"I'm going to kiss you again,\" he told her so matter of factly it made her want to laugh.\n\n\"You'll do no such...\"\n\nWhen his lips met hers, she quietly said, \"Thing,\" before realizing she wasn't going to be able to keep up the facade any longer.\n\nShe tried to resist for a couple of seconds, but age difference or not, he was SO good looking, and just as nice, and her body ached for the touch of a man. She gave in and kissed him back, and when she did, he pulled her close and kissed her like she hadn't experienced since Ben.\n\n\"See,\" he quietly said when the kiss ended.\n\n\"See what?\" she asked, her heart racing.\n\n\"I'm all grown up now.\"\n\nShe still wanted to be mad or whatever it was she'd been trying to feel, but as he sat there just inches away looking at her, and smiling like that, Farah knew it was 'game over'.\n\n\"So you don't care that my driver's license says January 21st, 19...82?\" she asked, her eyes hopeful and darting with his.\n\n\"No. Not at all,\" he told her before leaning over and kissing her again.\n\nAs badly as she wanted him, she hadn't been with a man since Ben, and before him, there'd only ever been one other. She was 37 years old, but in terms of 'worldly experience', she was sure Shawn was the far more experienced between them.\n\nThe first time she let a boy 'feel her up', she remembered wanting to put his hand there when he was too shy to do it, so she'd done it for him. For some reason, the thought occurred to her that she could do that again now, and that thought excited her almost as much as it had all those many years before.\n\nFarah moaned softly when he squeezed the mound of flesh.\n\n\"That feels so good,\" she told him as she put her hand on his as he began gently kneading her breast.\n\nFrench kissing added another layer of excitement, and although she was now extremely wet, Farah was unaware of that fact. For her, she was reliving\u2014or maybe living for the first time\u2014all these things she hadn't done in so very long. But when she realized she might be sending the wrong impression, she nearly panicked.\n\n\"Shawn?\" she said as she moved away a little.\n\n\"Too much too soon?\" he politely asked.\n\n\"Is that okay?\"\n\n\"Hey. Anything is okay, Farah. We'll go at your speed and only when you're ready.\"\n\nThe way he spoke as well as the way he was looking at her, moved her to the point of making her want to give herself to him then and there. But it was still too early, and she just wasn't ready.\n\n\"That's the second time tonight you've made feel like the younger person,\" she told him quietly and very sweetly.\n\n\"Oh?\"\n\n\"The other was during dinner when you were explain the various...control things...on an airplane. You know, like the rudder and the alarron thingies and what not.\"\n\nHe didn't even smile at her mispronunciation. He didn't care what she knew about flight controls or anything else aviation related. He just knew he was falling in love with this beautiful, older woman\u2014his Marianne.\n\n\"I should probably be going,\" he quietly replied in order to give her an out.\n\nFarah knew she was the reason he said that, but she also knew he said it because he respected her, and that, along with so many other things, made her look at him very differently from that moment on.\n\n\"I...I hope I'm not sending mixed messages,\" she told him almost apologetically.\n\n\"You're not. You need time, and we can take as much of it as you need, okay?\"\n\nShe smiled at him then said, \"Thank you. And thank you for the most wonderful evening I've had since...\"\n\n\"Since coming to hear us play?\" Shawn teased.\n\nFarah smiled again then said, \"Yes.\"\n\n\"I had a really nice time, too,\" he let her know before standing up and offering her a hand which she accepted.\n\nFarah walked him to the door but wasn't sure what to do.\n\n\"Goodnight, beautiful,\" Shawn told her before softly kissing her one more time.\n\n\"G'night,\" she nearly whispered back as she pulled him in for one more quick kiss.\n\n\"I'll text you soon, okay?\"\n\n\"Yes. Please.\"\n\nAs he walked out, she couldn't help but wonder if he would. She hadn't really dated in a dozen years or so, and now that she was relatively okay with the actual age difference, she wondered if her junior-high 'love antics' might have sent some kind of signal worse than 'mixed messages'.\n\nBut before she could walk back to the kitchen, she got a text from Shawn who was in his car in the driveway.\n\n\"You are an amazing and remarkable woman, Farah Walker, and I can't wait to see you again.\"\n\nShe smiled happily and felt so good her feet did a kind of happy dance as she typed a reply.\n\n\"I feel the same way about you, Shawn Baker, and I can't wait to see you again, either.\"\n\nShe thought for a moment, smiled, then added, \"Love, Farah.\"\n\nShe got an immediate reply which was just a little heart emoji, but it was all she needed to keep her feeling of being on top of the world alive.\n\nFarah was still smiling when she laid down, and the last thing she remembered before falling asleep was the way she felt whenever she was with the handsome, younger man she thought she might possibly be falling in love with. It was ridiculously early, but she didn't care, because it had been so long since she'd felt this way, all she wanted was to savor the feeling for a little while longer.\n\nThe next morning, she woke up still smiling, but by the time she finished drinking a first cup of coffee, Farah knew she needed to talk to the one person she trusted more than Traci.\n\n\"Mom? Hi. Can I stop over for lunch today?\"\n\n\"You know you don't have to ask, sweetheart. Just come over.\"\n\nHer mom hesitated then said, \"Is something wrong?\"\n\n\"I just need a sanity check,\" she told her mother using a phrase her father had often thrown around and still used every now and then.\n\nHer mom laughed then said, \"I can do that, honey. See you soon.\"\n\nWhen she arrived at her parents' home, her dad was at work, and her mom had lunch waiting.\n\n\"So what's this sanity check for?\" her mother, Violet, asked. \"Would it have anything to do with a man?\"\n\nFarah wasn't surprised. Her mom knew her better than anyone to include Traci.\n\n\"I'd ask how you do that, but it wouldn't matter,\" her daughter replied.\n\nViolet laughed then asked her to start talking.\n\n\"You know Traci's set me up a couple of times, right?\"\n\n\"Oh, yes. I believe you told me in no uncertain terms about the dates you called 'unmitigated disasters',\" her mom said with a laugh.\n\n\"Right. The 'I love me' fests,\" Farah said, laughing, too.\n\n\"So this one must be different,\" her mom observed.\n\n\"Oh, you can say that again!\"\n\nHer mom was tempted to actually say it again but didn't.\n\n\"In a good way or a bad way?\"\n\nFarah sighed then said, more asking than saying, \"Both?\"\n\n\"Uh-huh?\"\n\n\"Well, I haven't even liked anyone since Ben, and that's not news.\"\n\n\"No. No, it isn't. We loved him, too, honey. And your father and I miss him terribly.\"\n\n\"I know, Mom. He was kind of like the son you never had.\"\n\nFarah smiled then said, \"The son who...married your daughter.\"\n\nHer mom laughed but didn't comment on the quasi-incestual aspect of her daughter's humorous comment.\n\n\"He's the first guy I've really liked, Mom. He's incredibly smart. He's a very talented musician. He's kind, he's thoughtful, and...he's gorgeous.\"\n\n\"And?\" her mother insightfully asked.\n\n\"And...he's...he's younger than me.\"\n\n\"I see.\"\n\nFarah knew that meant, \"Tell me how much younger,\" and she didn't need to ask her mom to be more specific.\n\n\"A...lot...younger.\"\n\n\"Oh.\"\n\n\"As in...\"\n\nFarah suddenly couldn't get the words out, so she said something else that was related but not the answer.\n\n\"He's finishing a master's degree in engineering.\"\n\n\"So he's over 21?\" her mom said, surprising her daughter.\n\n\"What? Yes. He's over 21, Mom.\"\n\n\"But I take he's under...31.\"\n\nFarah looked at her mom, made a little bit of a face, then said, \"Quite a bit under.\"\n\nViolet surprised her daughter again when she asked, \"How does he make you feel when you're with him?\"\n\n\"Like...Ben did.\"\n\n\"Do you get the impression he's using you for any reason?\" her mom asked. It wasn't accusatory. It was just an honest inquiry.\n\n\"No. Not at all. I mean, it's not like I'm wealthy or anything.\"\n\nHer mother laughed and told her that was true, also in a very non-judgmental way.\n\n\"From what you've said, he's everything you described: smart, caring, and everything else.\"\n\n\"But?\" Farah asked, expecting the other shoe to drop.\n\n\"No buts. You just have to decide how young is too young. For you.\"\n\n\"We have the same birthday,\" Farah told her mom.\n\n\"Just very different years, right?\" her mom said with a warm smile.\n\n\"As in 1982 vs...19...ninety...five.\"\n\n\"Nineteen ninety-five. Hmmm.\"\n\n\"I know! Mom, what am I going to do?\" Farah almost pleaded.\n\n\"Honey, I can't decide that for you.\"\n\n\"I know. I'm just so...torn.\"\n\n\"If he was say...34 instead of 24...all other things being equal, would you...\"\n\n\"I'd be all over him. Sorry. It,\" her daughter said as they both laughed.\n\n\"Speaking of sex,\" her mom said, again surprising her daughter.\n\n\"We haven't,\" Farah replied immediately.\n\nHer mom laughed then said, \"That's not where I was going, but I'm glad to know that.\"\n\nShe smiled then continued talking.\n\n\"I'm just thinking about children. You've always wanted them, but they never came along. Does this young man who's name I still don't even know want them?\"\n\n\"It's Shawn. Shawn Baker. And I don't actually know the answer to that question.\"\n\n\"Well, that's extremely important. He's clearly motivated, and with that kind of degree, he'll easily be able to support a family. Are there any other differences...other than age? Politics? Religion? Money?\"\n\nFarah didn't know the answer to those, either.\n\n\"I feel a little silly now,\" she told her mom. \"I'm asking for advice, and I really don't know that much about him.\"\n\n\"You know you're attracted to him. You know he makes you feel special. You know he'll be a good provider. You said he's a talented musician. And so far, there's nothing about him you don't like. You just need to work through the age difference. So learn as much as you can while you do then trust your judgment. You're a smart girl, Farah. You hit a home run with Ben, and I can't see you striking out with anyone. So go slow and enjoy the time you spend with him. If it doesn't work out, you'll have had a lot of good times together, and then you can move on, right?\"\n\nFarah finally smiled then told her mom, \"That is exactly what I needed to hear, Mom.\"\n\nThey ate lunch together, talked for another hour or so, then hugged each other goodbye, and as always, said 'I love you'. By the time she got home, Farah realized she had nothing to worry about. There was a lot to learn about Shawn, and there was plenty of time to learn it, and her mother was right. Even if it didn't work out, it could be a very pleasant experience dating someone so much younger than her.\n\nFarah texted Shawn later that afternoon and told him about talking with her mom. He replied almost immediately.\n\n\"I had another talk with my dad, too. Great minds, right?\"\n\nHe put a couple of smiley faces after that then continued.\n\n\"So what kind of advice did you get?\"\n\nFarah smiled then told him, \"Very good advice.\"\n\n\"I hope it wasn't, 'Run, Forest, Run'!\"\n\nShe laughed then told him 'not at all'.\n\n\"In fact, I was kind of hoping we might be able to spend some more time together.\"\n\nShawn smiled when he read that then wrote, \"I really like your mom!\"\n\nFarah laughed a happy laugh then told him she did, too.\n\n\"I'm on a break at the restaurant, and I have at least three hours of studying to do, but we could get together around nine or so if that works.\"\n\n\"Nine sounds great!\" she replied.\n\n\"Your place, mine, or somewhere neutral? Warning: my place is a typical bachelor pad. It's clean, but that's about the best I can say.\"\n\nFarah laughed again then typed, \"I'll pass on your place\u2014for now. So maybe mine?\"\n\n\"I'll be there!\" Shawn wrote.\n\n\"K. See you then!\"\n\n\"You will, and I can't wait!\"\n\nThe happy feeling she'd experienced before came back, and after the talk with her mom, she felt very good about the way things were going. Then, just like clockwork, Traci called.\n\n\"So...what's the latest?\" she asked.\n\n\"About?\"\n\n\"Oh, please! You know better!\" her friend replied.\n\n\"Oh. That.\"\n\n\"Yes. That. Or rather\u2014him.\"\n\n\"Well, he's coming over tonight.\"\n\n\"Uh-huh.\"\n\n\"That's it.\"\n\n\"You do remember what said about the third date, right?\" Traci told her.\n\n\"This isn't a date,\" Farah firmly reminded her.\n\n\"Oh, okay. If you say so.\"\n\n\"What's that supposed to mean?\"\n\n\"Oh, nothing. Nothing at all,\" Traci said in that sing-song voice that drove Farah crazy.\n\n\"Well, nothing\u2014at all\u2014is what's going to happen, okay?\"\n\n\"Okay. If you say so.\"\n\nFarah wanted to be upset, but there was a part of her\u2014a growing part\u2014that couldn't be because it wasn't so sure 'nothing' would be the only thing going on.\n\n\"I'm a big girl, okay?\" Farah replied.\n\nShe could tell Traci was smiling as she said, \"I know, but...don't say 'no' just because he's, you know...\"\n\nFarah opened up and told her best friend everything from his age to their dinner date to her conversation with her mother, and her...growing interests.\n\n\"Farah? If he was goofy, flighty, lazy, or mean, it wouldn't matter how cute he was. But he's none of those things and he's freaking gorgeous!\"\n\n\"Yes. Yes, he is,\" her friend replied, her voice trailing off as she spoke.\n\n\"All I want is for my best friend to be happy again. You've been through so much, and Shawn seems like such a great guy.\"\n\nTraci paused then said, \"Young but still pretty great.\"\n\nAgain, Farah said, \"Yes. Yes, he is.\"\n\nThey chatted for a few more minutes then Traci wished her all the best\u2014no matter what did or didn't happen that evening\u2014and when she hung up, Farah knew that if Shawn wanted her that she'd happily give herself to him, and that thought got her up and looking for something to wear later that evening.\n\nLike her friend, Farah had some off-the-shoulder tops and even a dress like that. But she also knew a lot of guys liked jeans, so she pulled a pair that fit just right and laid them on the bed. The logical choice, at least to her, was something green to go with her eyes, and she had a top she loved but hadn't worn for many months. She laid it next to the jeans and smiled knowing it was a winner.\n\nAround 6 o'clock, she showered then put her hair up in big rollers and did her makeup. With the exception of a band of material around her upper arms, the very light-green knit top left her shoulders and arms bare while tightly clinging to her body as the jeans showed off her butt which still hadn't gotten any bigger since the last time she checked. She placed a pair of pearl earrings in her lobes then added a double-stranded pearl bracelet to her left wrist to complete her look. \n\nOnce the rollers came out, even Farah was pleased with the result as her hair looked thicker and shinier than it had in a long time. She added some glossy, copper-colored lipstick and hoped Shawn would like the way she looked as much as she did.\n\nBy the time her doorbell rang at ten after nine, Farah's level of anticipation was reaching a fever pitch. When Shawn saw her and just stared again, she knew he approved.\n\n\"Wow. Every time I see you you look even more beautiful,\" he told her as he produced a bouquet of red roses.\n\nFarah was genuinely touched by both his words and his romantic gesture, and after taking them from him, she smiled then kissed him. When she did, he kissed her back, and seconds later the flowers ended up on a coffee table and Farah in his arms while tongues flicked and dance as soft moans and gentle groans were heard.",
        "The kiss lasted a good, long time, and when it finally ended, Farah could only say, \"I should put these in some water.\"\n\nShawn, of course, had no idea Farah had decided she was ready to take things to the next level. He wanted that, too, but he was in no hurry. She was someone worth waiting for, and if she needed another week or even a month or more, that was just fine as long as he could be with her.\n\nAs she trimmed the stems, Shawn stayed on the other side of the kitchen counter.\n\n\"I hate to keep saying the same thing, but you look even more amazing tonight than...ever.\"\n\nFarah smiled and kind of even laughed before thanking him.\n\n\"It's funny, but it seems like I spend a lot of time wanting to make a good impression on you,\" she told him as she set the first rose in a vase.\n\n\"You do that just by being you, Farah.\"\n\n\"Ben always made me beautiful.\"\n\nShe looked at Shawn then added, \"Too.\"\n\nHe came around the counter and stood behind her as she continued trimming.\n\n\"I'm glad I make you feel like that, but the truth is, you are beautiful.\"\n\nShe sensed him moving closer then when he reached up and gently pulled her hair back on both sides she froze and both of her eyes closed as she waited for whatever might come next.\n\nShawn leaned down and softly kissed her neck and Farah's body shuddered.\n\n\"Goosebumps?\" he quietly asked.\n\n\"Yes,\" she whispered as he continued nuzzling.\n\n\"Your perfume mixed with your shampoo are intoxicating.\"\n\nFarah set the knife down once her hands began trembling.\n\nShe moved her head further to the side offering more of her neck to his kisses. When she did, the soft, gentle kissed became less gentle. At one point, she felt his tongue touching her as his lips sucked the skin harder and harder.\n\n\"Shawn, you're going to leave a hickey,\" she nearly moaned as he moved to a new spot.\n\n\"I'll be careful,\" he whispered in her ear as he nibble it before returning to her neck.\n\nThis time his arms wrapped around her waist as Farah stood up and pushed her bottom into his body. She was rewarded with a familiar hardness she hadn't experienced in what seemed like forever. As she pushed against it, Shawn groaned quietly, and that caused Farah to push ever harder as she took his hands and again placed them on her breasts.\n\n\"If we don't slow down, I may not be able to stop,\" he quietly warned her.\n\n\"Who says I want you to stop?\" she asked, her voice husky with desire as he squeezed both of her soft, round globes causing her to gasp.\n\n\"Then wouldn't it be better to find someplace comfortable to continue this?\" he asked as he gently used his teeth to 'bite' a large area of her neck.\n\n\"I...I agree,\" she replied, her breathing getting deeper as her urges grew.\n\nShawn closed down on the bite just a little bit harder, and when he did, Farah gasped. She pulled his hands down, turned around, and put her arms over his shoulders and pulled him to her.\n\n\"Make love to me, Shawn,\" she said between furtive kisses.\n\nHe pulled her arms down, took her hand, and led her to the only hallway in the house and waited for her to tell him where to turn. Once inside the room, they nearly clawed each other's clothes off before Shawn grabbed her and laid her on the bed.\n\nNeither of them spoke as he got on top of her then began exploring her body. When he got to her naked breasts, he began sucking one of the nipples when she decided to risk sharing something with him that only Ben had known.\n\n\"Would you...bite them?\" she moaned, hoping he wouldn't think her request was so odd that he'd stop.\n\nHe not only didn't stop, he did what she asked. When he did, Farah moaned loudly with pleasure and told she loved that before telling him she liked it even more when it was harder.\n\nShawn had been with two other women who loved the same thing, so he wasn't surprised at all. The only words he said were, \"Tell me when it's too hard.\"\n\nFarah never said those words, and as he did the thing she loved and needed, her 'special place' grew wetter and wetter until she begged him to take her.\n\nThere was no need for oral on either side. The demand for sex itself was so intense neither of them cared that they'd omitted that part of the lovemaking experience. \n\nHe'd only been in her for a very short time when nearly three years of pent-up want and need exploded in a body-shuddering orgasm, the likes of which Shawn had never seen or Farah had ever felt. Her body tensed and jerked over and over as she cried out with happiness and relief.\n\nWhen the spasming stopped, she pushed him off her and immediately lowered herself onto him and spent several minutes slowly and deeply pleasuring her young lover with her warm, wet mouth. When he could take no more, Shawn roughly rolled her over then repaid the favor until she begged him to take her again.\n\nNeither of them had any idea how long they'd spent making love. All they knew is they were as satisfied as they'd ever been. \n\n\"You are unbelievable!\" Shawn told her as he rolled off of her and onto his back.\n\n\"Me? Oh, my gosh! No. it's you and that...magic staff of yours!\" she told him.\n\nShawn laughed then rolled back on top of her and smiled.\n\n\"You are the most amazing woman I've ever known,\" he told her.\n\nFarah laughed a happy laugh then asked, \"Known? As in...the biblical sense?\"\n\nShawn laughed, too, and said, \"In every way. You are just an incredible woman.\"\n\n\"You're pretty incredible yourself. And not just in bed.\"\n\n\"But I am amazing in bed, right?\" Shawn teased.\n\n\"Are you kidding? I need a new word to describe your talents. I know it's been a long time, but I have never before in my life had my body do that.\"\n\nHe smiled at her just before said, \"I mean. I'm still shaking.\"\n\n\"You know, I would have waited. Longer,\" Shawn told her, suddenly serious.\n\n\"I knew you would, and I love that about you,\" Farah replied. \"But I couldn't wait any longer.\"\n\nShe looked into his eyes then asked, \"Is that okay?\"\n\n\"It was more than okay. It was absolutely amazing.\"\n\nHe smiled again then told her, \"Like you.\"\n\n\"Is it too early to ask you to stay here? Tonight?\" Farah asked hopefully.\n\n\"No. Not at all. Nothing would make me happier.\"\n\n\"Really?\"\n\n\"Yes. Really. I'm not the kind of guy who stays, Farah. Nor do I ask women to stay at my place. I only say that to let you know that you are a one-of-a-kind woman to me.\"\n\n\"Yeah?\" she replied with a happy smile.\n\n\"Yes. Big time,\" he told her.\n\n\"Speaking of...big,\" she said as she felt him growing hard again. \"You are um...very big.\"\n\nShawn laughed, opened his eyes wide then said, \"All the better to...you with, my dear!\" as though he wear the Big Bad Wolf.\n\nFarah also laughed and realized she was truly happy as she replied in character.\n\n\"I see. Well, then this Little Red Riding Hood wants you to do just that to her\u2014again!\" \n\nOther than to get a snack around 11pm, they stayed in bed the entire night and well into the morning when Shawn told her he had to get going so he could study, go to work, and rehearse.\n\n\"Come listen to us,\" he suggested after they showered together. \"It's the only free time I'll have today.\"\n\n\"I'd love to,\" she told him, knowing how busy he was and amazed at how he handled it all.\n\nAfter the rehearsal that evening, Shawn told Farah he wanted her to meet his father. She'd mostly put her concerns about their 13-year age difference aside, but she couldn't help but think his father would see her as some kind of sick, predatory older woman. But he reassured her it wouldn't be anything like that, and in the end, she agreed.\n\nShawn's father was every bit as warm and accepting as she'd been told. He was also a very attractive man for someone in his early 50s, and Shawn looked like a younger version of him so much it was uncanny.\n\n\"You're almost all my son talks about anymore,\" he told her after dinner. \"And now that I've met you, I understand why.\"\n\nBy the time she left, Farah felt like she'd not only known Shawn's dad for some time, she understood why his son was such an incredible man. His father had also put himself through college many years ago, and he'd instilled many positive values in his son; values that were making her fall in love with him.\n\nA week later, Farah asked him to meet her parents, and Shawn had no misgivings whatsoever. He already knew he loved Farah, and all he could do was hope her parents would at least accept him.\n\nHer mother was the easy half. She already knew her daughter had fallen in love with a much younger man, and she welcomed him like he was part of the family. It took her dad a little time to realize this 'kid' was everything his daughter had told him he was. \n\nAs they were leaving some three hours after getting there, her father begrudgingly gave his approval. Kind of.\n\n\"I uh, I had a lot of reservations about my daughter dating someone 15 year younger than her,\" he began.\n\n\"Dad. It's not 15 years, okay?\" Farah said rather defensively.\n\n\"Oh. Okay. How many years is it then?\" he asked while looking at his daughter with a raised eyebrow.\n\nShe knew the actual number of years wouldn't sound any better so she only said, \"Okay. Point taken.\"\n\nSatisfied, he actually smiled then looked at Shawn.\n\n\"I'm still not sure about all this, but I haven't seen my daughter this happy since Ben was alive, and if this makes her happy, then...I suppose this...thing...is okay.\"\n\nShawn thanked him then stuck out his hand. The older man hesitated, looked at his daughter and saw her smile, then accepted the handshake.\n\n\"That wasn't so bad, was it?\" Farah asked on their way back to her place.\n\n\"No, and the truth is, I'd have walked through fire if that's what it took,\" Shawn told her.\n\nHe tried to sound playful, but Farah knew he was serious.\n\n\"I know you would. And that's just one more thing I love about you.\"\n\nShawn reached over and took her hand then said, \"When we first made love, I didn't want to rush things, and I hope I'm not rushing them now, but...\"\n\nHe looked over at her as they drove and said, \"But I love you, Farah.\"\n\nHer face lit up immediately, and without hesitation, she said, \"I love you, too, Shawn.\"\n\nShawn's time was very limited, but he found a way to see the older woman he loved every day for some amount of time through mid-November.\n\nAfter a huge Thanksgiving meal with both families, when they were back at her house, Farah suggested her place was large enough for two.\n\n\"Why Farah\u2014with one 'r'\u2014are you asking me to move in with you?\" Shawn asked, as though he didn't know.\n\n\"Well, your place is, um...\"\n\n\"A dump?\" Shawn suggested.\n\n\"I was going to say 'rather spartan', but...okay,\" she replied with a laugh.\n\n\"Yes. I'd love to move in with you,\" he told her seriously before getting playful again. \"And not just because my place is a...dump.\"\n\nShawn had to give up playing in the band after that, but everyone knew he would be gone by the 1st of the year at the latest anyway. They all understood this was the only way he could finish his thesis and other classes, and be able to spend more time with the woman he loved. Giving up music was an easy choice as not working wasn't an option for him.\n\nIn early December, Shawn's faculty advisor accepted his thesis, and once that was done, all he needed to do was attend classes for another two weeks then wait for grades to come out and receive his diploma. He got the grade report online a few days after Christmas, and his graduation ceremony was scheduled for the first working Friday evening in January. \n\nBy finishing mid-year, that meant there weren't many people receiving diplomas with him, but everyone Shawn or Farah knew were there to cheer for and congratulate the new graduate.\n\nShawn's father paid for a celebratory dinner afterward, and the question came up about what he wanted to do next. It wasn't a new question, it was more that now that his coursework was done, it was a reality everyone had to face. A reality that would likely include moving somewhere out of state.\n\nNo one wanted either of them to leave Indianapolis, but everyone understood the amount of jobs available there in Shawn's chosen profession were scarce. Even so, he'd already quietly sent out resumes, and without telling Farah, he'd also gone to a job interview with a company called Comlux Aviation, located in their hometown. \n\nJust that morning he'd gotten a call from the chief engineer who'd interviewed him that included a job offer; a job with a very good salary and full benefits. Shawn told him he needed to discuss this with his girlfriend, and because it was the weekend, he had three days to get back with the company.\n\n\"Well, I have some good news,\" Shawn replied.\n\nEvery head turned his way as he put his arm around Farah, who was sitting next to him, and said, \"I just received a job offer today and it's right here in town.\"\n\nFarah's eyes opened wide in disbelief as several family members demanded details.\n\n\"I need to discuss this with Farah, but...\"\n\n\"Yes!\" she told him without any further explanation.\n\nThere was a lot of laughter before he told them who it was with.\n\n\"Full benefits, too. Now that's a job!\" Farah's father said as he proposed a toast to the newest graduate in town.\n\n\"And now that I have a job\u2014with benefits\u2014I'll be able to support a family,\" Shawn said while glancing around the table before turning to Farah.\n\nHer heart began beating wildly as she saw the way he was looking at her.\n\n\"At the risk of rushing something else,\" he said to her, knowing only she would understand, he produced a small box then, as he got down on one knee, he opened it.\n\nHe had quite a few lines memorized about how his life had changed since the first time he saw her at the restaurant with Traci and her mother. He was also going to say something about how wonderful she was and that he couldn't imagine his life without her. \n\nBut before he got halfway through the first sentence, Farah shouted out, \"YES!!\" several times so loudly everyone in the restaurant turned to look.\n\nThe people at their table all laughed as Shawn said, \"So much for the speech,\" and slid the ring on her finger as she grabbed him and kissed him before he could stand up. \n\nShawn nearly lost his balance, but he managed to keep his footing, but in doing so, he ended up spinning Farah around. It almost looked intentional, so he dipped her then stood up, took her hand and bowed as the entire room burst into applause.\n\nThat summer, the engaged couple bought a home of their own, and the following month, they married in a local church where the members of Carbon, less their former drummer, played at his wedding.\n\nWhen Shawn's father asked his new daughter-in-law to dance, they chatted for bit about how happy she and Shawn were when he said, \"You know you're his Marianne, right?\"\n\nFarah had forgotten all about that since the time Shawn first explained it to her, but when he mentioned it, she was all smiles.\n\n\"I do. And one of these days I'm going to watch the show to find out who she is. And this Ginger woman, too.\"\n\nHe laughed then said, \"For what it's worth, I agree with my son who tells me you're the most beautiful woman he's ever met.\"\n\nFarah laughed happily then said, \"Well, your son is a very smart man.\"\n\nHe laughed again, told her agreed, then moved aside when his son asked if he could cut in.\n\nAs Shawn took his wife's hand she smiled and told him what his father had just said.\n\n\"Ah, yes. That's right.\"\n\nHe looked right at her then said, \"Ginger or Marianne. Gee, that's a no-brainer.\"\n\nFarah smiled back, moved closer then put her arms around her husband, the only...other...man who'd ever made her feel beautiful and loved.\n\nThe question about whether or not he wanted children was answered a year later when Farah Baker told her handsome younger husband she was pregnant. He picked her up and spun her around and told her she'd just made him the happiest man on earth. Again."
    ],
    "authorname": "komrad1156",
    "tags": [
        "friends",
        "dating",
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/ginger-or-marianne"
}