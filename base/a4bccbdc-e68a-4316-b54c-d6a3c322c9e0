{
    "title": "Hard Landing Ch. 08",
    "pages": [
        "*** This series was awarded Best Lesbian Story, as well as Most Literary/Genre Transcending Story in the . Thank you to all who voted. ***\n\nWelcome to Chapter Eight. If you're planning on reading this but you haven't finished chapters One through Seven, then, well... I don't know what to tell you anymore. Come here, sit next to me and I'll pat your knee and tell you that everything's okay.\n\nAs usual, I've updated my Spotify playlist with the songs featured in this chapter. You can find the link in the contact tab of my author page.\n\nThanks to my editor, ThisNameIsntTakenYet, for his diligent work in making me look less dumb.\n\nThis chapter is dedicated to a dear internet friend. She knows who she is.\n\n~~ Front Royal, Virginia, June ~~\n\nJO\n\nAfter taking the controls from Blue, Jo had flown her dad's Bell-47 back to the farm. It was a hair-raising flight, with Jo throwing the helicopter into dives and banks, and following the path of the Shenandoah River the last couple miles a few dozen feet off the water. When she approached the farm and climbed to a less terrifying altitude, Henry insisted Blue take the controls back, wanting her to get more practice at landing. It took her a few attempts to get straight on the sled outside the hanger. She came down crooked and dusted off the first two times, while Jo sat on her hands to keep from grabbing the stick. On the third try, Blue set it down perfectly. She killed the engine and after the blades slowed to a stop, hit the remote to slide Margaret back into her home.\n\nJust taking the controls for a short time seemed to have breathed life into Jo and she was almost bouncing as they walked back to the house. They spent a few minutes making small talk with Henry, then Jo made their excuses and nearly dragged Blue back to her cabin.\n\n\"I think someone is in a good mood,\" Blue gasped as Jo pinned her to the wall just inside the door and nibbled on her neck.\n\n\"God Blue, after everything you've done for me since I woke up... today was... if dad hadn't been with us I'd have taken you right there in the cockpit before the rotor had even spun down.\" She pulled Blue's shirt off. \"I'm only a little mad at you for springing the Major on me like that.\" She threw Blue over her shoulder and limped into the bedroom to throw them both down on the bed.\n\n\"Jo, your dad is right next door! I can see his porch from here!\" she pointed across Jo's house to the glass front door.\n\n\"Fine!\" Jo got up and shut her bedroom door. \"Better?\" she said, whipping off her own shirt and sports bra in one motion.\n\nBlue leaned up on her elbows, grinning. \"I haven't seen this Jo since January. I like this Jo.\"\n\nJo had kicked off her sneakers and was busy pulling off her jeans, getting them snagged on her prosthetic. She impatiently ripped them past her foot. \"You better get used to this Jo, 'cause you're the one that's brought her out.\" She fumbled with the button on Blue's jeans. \"I like you better in dresses,\" she growled as she worked them down her hips. Her eyes widened to see that her Blue Girl wasn't wearing underwear. \"And you getting me back on the stick this weekend...\"\n\nBlue giggled and said, \"Which stick is that Jo? The one in your dad's helicopter? Or the one I strapped around your hips last night?\"\n\n\"You sexy little...\" Jo breathed. \"That's it, incoming!\" She launched herself at Blue, who squealed \"Eep!\" with delight.\n\nLater, as Jo lay on her back with Blue resting her head on her shoulder, she mused, \"Gotta say, I was skeptical about your 'Jo plan', but I'm feeling a lot better about things right at this moment.\"\n\n\"That's good,\" Blue murmured, half asleep.\n\n\"What's next on the agenda?\"\n\n\"Mmmm. You'll find out soon.\"\n\nThere was a pause, then Jo said \"You're not going to spring something big on me again are you? You know I have a problem with that.\"\n\nBlue turned her head to rest her chin on Jo's chest and look her in the eyes. \"Sorry, I forgot. We have three weekends left before the beach tour. Tonight, we're going back to D.C. You still have PT and therapy all week. But I was going to take us out on Thursday evening.\"\n\n\"To do what?\"\n\n\"Something you told me you wanted to do the night we met.\"\n\n\"Huh. Refresh my memory?\"\n\n~~ Fairfax, Virginia, July ~~\n\nJILL\n\n\"I don't know why this is making me so nervous,\" Jo said.\n\n\"Maybe because the Army hasn't let you do this for the last thirteen years of your life?\" I asked.\n\n\"I guess so.\"\n\n\"Do you regret doing it?\"\n\n\"No,\" Jo said, turning her head back and forth as she looked in the mirror, \"No, I think I really like it. You were right, this is cool.\"\n\nI smiled. \"Megan Rapinoe's got nothing on you baby.\"\n\nJo's hair was purple now, starting with a bright purple at the tips and fading to a light, whitish-purple at the roots, and styled a little more punk than normal, with the six-inch long hair on top curling down over the left side of her forehead, the sides and back still almost buzzed tight against her head.\n\n\"Justine, Blue was right, you're a wizard.\"\n\n\"Thanks,\" my sister said as she ran her fingers through Jo's hair. She eyed Jo's haircut critically, then picked up her scissors and clipped off a microscopic fraction of an inch off the front. \"As it grows out, your natural hair color should go pretty well with the color I managed at the roots, so you should be good for at least six weeks. Don't wash your hair for seventy-two hours. Stay out of swimming pools and hot tubs for a while if you can. I don't know why I'm telling you this, Jill is probably as good at taking care of a dye job as I am at this point. But you're done. Jill's got another hour to go at least.\"\n\nI was sitting in the salon chair next to Jo's, my hair festooned with foil strips. I was keeping the blue hair, but Justine was adding in highlights in lighter and darker blues, with the occasional streak of purple. The stylist that Dr. Samuels had taken me to in Germany had done an adequate job, but it had been fairly monochrome. My sister was making it look more... naturally blue, if that could be a thing.\n\n\"Okay.\" Jo said standing up from the chair. \"Do you mind if I go check out the Guitar Center across the way?\" My sister's salon was in a strip mall in Fairfax near the intersection of Fairfax and Lee Highways. We'd passed the guitar store when we'd driven through the shopping center.\n\n\"Not if you kiss me before you go.\"\n\nJo chuckled and leaned over to plant a long kiss on me. \"I'll be back before you're done.\"\n\n\"I don't think I've ever seen you as happy as you are with her,\" Justine told me when Jo had left. \"She's certainly unlike anyone else you've ever dated.\" She was fussing with my hair while we talked.\n\n\"She's the best thing that's ever happened to me,\" I said.\n\n\"Good, I'm glad you guys are happy. This needs to sit for another twenty minutes, then we'll start taking these out.\"\n\n\"Justine?\"\n\n\"What, sweetie?\" she said, teasing the ends of my hair.\"\n\n\"I'm going to marry her someday.\"\n\nJustine stopped and met my eyes in the mirror. \"You asked her?\"\n\n\"Oh god no, it'll have to come from her. She'd freak the hell out if I ever brought it up first.\"\n\n\"She asked you then?\"\n\n\"Nope. But she will. Someday. I know it.\"\n\nJustine looked dubious. \"Okay, baby sister. If you say so. Not sure she seems like the marrying kind, but you know her better than me.\"\n\n\"I do know her. It feels like I've always known her. But that brings me to my next thing...\"\n\n\"Which is?\" She'd gone back to teasing my hair.\n\nI hesitated. She stopped again and met my eyes in the mirror. \"Jill, you know they won't be interested.\"\n\n\"I know,\" I sighed. I felt my eyes welling up with tears. \"I mean, they don't even call me on my birthday, I have to call them. So why do I want them to meet Jo so badly?\"\n\n\"Because every kid wants their parents' approval of their partner. Even after they shut you out of their lives. I give them holy hell about it pretty much any chance I can. Honestly, I'm getting uncomfortable having Danny around them because of it.\n\n\"I just want to stand in front of them with Jo and say 'This is the woman. The woman that's repairing my life whole after you fractured it. The woman who's made me happy, finally'.\"\n\nJustine leaned down and hugged me, careful not to mess up the foil strips in my hair. \"Jill, I'm so sorry they're like this. I can't tell you not to reach out to them, but I'm not sure I'd bother trying if I were you. They'll just hurt you more.\"\n\n\"I know,\" I said, sniffing. She handed me a tissue.\n\n\"I'll always be your big sis, for what it's worth. Tell you what, I've been meaning to do this for a long time, and I'm really sorry we haven't before, but how about I host Thanksgiving this year and you bring Jo and any of her family you want. You can invite Sara and her parents too.\"\n\n\"What about mom and dad?\"\n\n\"I'll tell them who's coming and if they chose to stay home by themselves, then fuck 'em.\"\n\n\"Justine!\" I said, a smile peeking through my tears.\n\n\"What? Like they deserve better? You can also come over for the Fourth of July this weekend if you want to.\"\n\n\"Thanks, but Jo wants to see the fireworks on the Mall. She's never seen them in person.\" I sniffed and wiped my nose again.\n\n\"I love you, Jilly-bean.\"\n\n\"You too, Just-enuff.\"\n\n~~ Walter Reed National Military Medical Center, Bethesda, Maryland ~~\n\nJILL\n\nLooking back, I was a little surprised it didn't happen sooner.\n\nThe Fourth of July weekend went by quickly. Jo handled the crowds on the Mall better than I'd expected. Even the deluge of booming explosions from the firework show hadn't seemed to rattle her much.\n\nThe next week, I'd finished work for the day and was sitting in our suite at Reed, waiting for Jo to come back from working out with Liz so we could get ready for dinner. I'd started to pack some of our things since she was going to be discharged next week and move in with me.\n\nAs I took a break from packing, I looked over at our nightstand. There were two framed pictures there. The first was an old photo Jo always kept near. It was a jumble of faces. Henry was in the middle, with Jo and Steve on the right, Jo's chin resting on top of Steve's head, her apple cheeks wide and rosy, both of them pressed tight to Henry. On the other side were Larry and Suzanne. Everyone was much younger in the photo than they were now, all of them laughing like it was their best day ever.\n\nThe other photo was of Jo and myself, from our reunion in January. Just our faces and shoulders. You could tell we were naked, lying on my bed. The bite mark Jo had left on my neck was front and center and we were both giggling like mad. I don't know what it was about those pictures, what caused me to do it just then. But as I sat on the bed, I took out my phone and stared at it.\n\nThen I opened my contacts, scrolled through and hit the number.\n\nIt rang four times and I was ready to hang up when he answered. I gulped. I was hoping it would be mom.\n\n\"Hi daddy... How are you guys? Good... Is mom... oh. Okay, listen I'm calling because...\" I gulped, took a deep breath, then said, \"Daddy, I'm calling because I've met someone and I think she's my forever girl, and I wanted to see if you and mom would... Daddy... No, dad, listen... Daddy, I love her. I love... Dad... Dad can I... Can I just... Dad... Dad!\"\n\nI sighed and dropped my hand holding the phone into my lap, closing my eyes tight for a moment, then put the phone back to my ear.\n\n\"Okay dad. No, no... I get it... okay... okay... Fine. Tell mom I love her. Goodbye dad.\"\n\nI was still sitting on the edge of the bed a half hour later, staring at Jo's family photo when I heard her walk in behind me.\n\n\"Blue, I got just a text from Suzanne saying she can't wait to see us this weekend? What the hell's happening?\" she demanded of me.\n\n\"We're meeting the band at the farm so you guys can practice together for the tour,\" I said softly, not turning around.\n\n\"Well, that's fine, but I thought we'd talked about the 'no surprises' thing.\" She sounded cross.\n\n\"I'm sorry Jo,\" I almost whispered, \"I just forgot to tell you.\"\n\n\"Just remember next time, okay?\"\n\nI cracked right then. I imagined I heard the sound of a brick flying through the plate-glass window of my mind, broken shards falling in a musical rain to the ground at my feet. It took me a moment to shake off my lethargy as everything ran through my head. All the therapy sessions I'd sat in with Jo. All the stories I'd heard over the last year hanging out with the band. Hearing about how much her family loved each other. How they were all there for each other through the pain of when her mom had passed, and every day since. How they'd kept Jo from totally losing it. How Larry had been almost as distraught as Jo and Steve had been after the accident. How when they met Suzanne, Henry had accepted her like another daughter. Watching them all pull together when Jo had crashed.\n\nAnd how my parents had thrown me out of their home and their lives when I told them I found someone I cared about, because she happened to be a woman. Treated me like a pariah. Barely deigning to speak to me when I called. Never evincing the slightest concern for my well-being when I did. How they had no interest in even acknowledging the fact that I might have found someone I wanted to spend the rest of my life with.\n\n\"Did you hear me? I said remember that I don't want you to throw surprises at me anymore.\" I stood up and turned to face her. She immediately retreated a step and said, \"Uh, Blue, what's, uh, what's wrong?\"\n\nI knew she had meant nothing by it. I knew she was blameless in what was happening in my head right that second. It didn't matter. I couldn't stop myself. It was like I was watching myself from outside my own body.\n\n\"Fine, Jo! I won't handle you! I won't go out of my way to make sure your family is there for you, and that we spend weekends at the farm with your brother and father and Larry and Suzanne! God it must be such a chore to have to deal with that! What a terrible thing to surprise you with!\"\n\nShe stepped back towards me. \"I'm sorry, what\u2014\"\n\n\"Don't touch me!\" I yelled and stepped around her towards the door. There were tears streaming down my face, and the room felt a hundred degrees too warm.\n\nI threw open the door, slamming it hard against the wall. She caught my arm and said, \"Blue, wait! What's going on?!\"\n\nI spun around and threw my phone. I wasn't aiming at her, but she had to duck anyway, and let go of my arm as my phone flew at-cross the room and shattered into pieces against the wall.\n\n\"I said don't touch me!\" I screamed and took off down the hall, almost blind from tears, oblivious to the stares of the other patients in the hallway. She'd started training on her running prosthetic, but I knew with the everyday one she was wearing now she had no chance of keeping up with me as I stumbled towards the stairwell.\n\nI heard her calling after me as I ran down the hall, but I didn't slow down. \"Blue! Blue, stop please, I'm sorry!\" Then, as I slammed open the door to the stairs, \"Jill, come back, please! Jill!\"\n\nThe door shutting behind me cut off her voice.\n\n~~ Adams Morgan, Washington, DC ~~\n\nJO\n\nIt was almost midnight and Jo was pacing back and forth on the sidewalk in front of Blue's apartment building. She'd knocked on Blue's door long enough one of her neighbors had finally stuck his head out in the hallway and irritability said, \"Lady, she obviously ain't there.\"\n\nShe'd been in front of the building ever since, alternately pacing and sitting on the steps whenever her stump started to ache too much.\n\nHer phone rang and she pulled it out of her jeans and looked at the caller ID.\n\n\"Justine?\" she said, answering it. \"Have you heard from her? Me, either... wait, here comes Sara, hold on.\"\n\nSara and Steve pulled up to the curb in Steve's SUV. Sara rolled down the passenger window and handed Jo a key ring.\n\n\"Jo, I'm so sorry, it took me an hour to find her spare. Have you heard anything?\"\n\n\"No, and neither has Justine.\"\n\n\"I know some of the places she likes to go. Steve and I will go check them out. If you hear anything or if she comes back call me right away, okay?\"\n\nJo squeezed Sara's hand and said, \"I will, you too.\" She ducked her head and looked across the car at Steve. \"Thanks Bro.\"\n\n\"You know it, Sis. Keep your chin up, we'll find her.\"\n\nJo stood there, watching them drive away until they turned the corner and disappeared from view, then remembered the phone in her hand.\n\n\"Justine, I just got her apartment keys from Sara. I'm going to go in and check it to see if there's anything that might tell me where she could be, then I'll hang out here until she shows up or Sara finds her. Okay... yeah, Liz is hanging at our suite at Reed in case she comes back there. Okay... thanks, Justine.\" She hung up and put her phone in the pocket of her jeans, looked up at Blue's windows on the fourth floor and muttered, \"I hope she didn't pack up and leave or something stupid.\"\n\nIt was dark and silent in Blue's apartment when she let herself in. Jo flipped on the light in the small combination kitchen and living room and looked around. Nothing looked out of order. Nothing was obviously missing.\n\n\"Shit,\" Jo said to herself. She had been pacing around for a few hours outside and was feeling the effects. \"Might as well hit the head while I'm here.\" She muttered, then walked into the bedroom and flipped on the light.\n\n\"Jesus!\" Jo yelled and jumped, grabbing the door frame to steady herself.\n\nBlue was sitting on the floor between the bed and the wall, staring straight at Jo, expressionless, her arms wrapped tightly around her knees.\n\nHer face was a mess, a maze of dried tear tracks and mascara on her cheeks, and her hair was wild and mussed.\n\n\"Blue! Jesus, you scared the shit out of me! Are you okay? We've all been looking for you!\"\n\nShe said nothing. She barely blinked.\n\nJo walked around the bed and awkwardly knelt in front of her.\n\n\"Tell me you're okay, that you're not hurt.\"\n\n\"I'm fine,\" she whispered.\n\n\"Okay, well, we both know that's bullshit. I assume you heard me knocking.\"\n\nShe put her hand on Blue's knee. Blue didn't flinch, just shifted her gaze from Jo's face to her hand.\n\n\"Justine said you had it out with your dad. She's worried about you.\"\n\nShe looked back up at Jo. \"He told her?\"\n\n\"Justine called your parents after I called her asking where you might go. She said your dad told you off.\"\n\nFresh tears started running down her face. \"Was he... was he worried about me?\"\n\n\"Blue...\" Jo sighed, \"come here.\" She pulled Blue closer and enveloped her an embrace, resting her cheek on top of her blue tresses. \"I'm so sorry he's an asshole.\"\n\nBlue started sobbing into Jo's chest.\n\n\"I just want my dad to accept me for who I am,\" she cried. \"I want my mom to talk to me again! I want my family back!\"\n\nJo held her tighter and waited until her crying slowed. She pulled back and tipped Blue's chin up with her fingers. Blue blinked, squeezing a fresh river of tears out of her eyes, but met Jo's gaze.\n\n\"Blue, I wish I could do something or say something that would make it okay, that might make them pull their heads out of their asses. But there's nothing I can do that can make that happen.\" Blue took a long shuddering breath.\n\n\"And I know I'll never be able to fill that particular hole they've left in you. But Justine still loves you, she's still your big sister. And you listen to me good, you're a part of my family now. I know my dad thinks so. I've never seen him as proud of anyone as he was of you last weekend, not since he taught Steve and I to fly. Sara's your sister in everything but blood and she's marrying my brother. And Suzanne and Larry love you too. Hell, I think Jack would walk into fire for you, ever since you put him in that drawing you did of the band. So, they're all your family now.\"",
        "Jo's breath caught and she had to calm herself before she continued. \"And... I love you. You're my family.\"\n\nBlue lunged forward, wrapped her arms around Jo and starting crying once more. But this crying sounded more like... relief. Less like despair.\n\n\"I'm your family, Blue. I'm your family,\" Jo whispered.\n\nLater, Blue was curled up with her head on Jo's shoulder, her arm thrown over Jo's chest. Jo had her arm wrapped around her, listening to her soft snores. She had texted or called everyone, letting them know she'd found her Blue Girl and that she was okay. Mostly.\n\nJo had held her in her arms until she started falling asleep, right there on the floor. Then she'd lifted her into her bed, gotten them both undressed and had been cradling her ever since.\n\nThe street lights were throwing ghostly shadows on the curtains through the summer leaves on the trees planted along the sidewalks outside. She'd been watching the shadows dance for an hour when Little Voice spoke up.\n\n\"Okay, we gotta rethink this, Collins. She's putting too much of herself into taking care of you. And you're letting her, leaning on her too much. She clearly needs you to be there for her as much as you need her to be there for you.\"\n\nLittle, you spent the better part of last summer and fall telling me I needed to keep her out of my kitchen. What's gotten into you? she thought.\n\n\"A good soldier adapts to the conditions on the ground, Collins. You've shown you can't live without her. When you dumped her last year you became the worst pilot in your squad overnight. Can't have that shit again.\"\n\nWell, I mean... no lies there.\n\n\"Right. So, starting tomorrow, lay off that 'don't handle me' crap. And start paying more attention to what she needs from you. You need to start thinking of some ways to build her up.\"\n\nJesus Christ, Little, when did you become a couple's counselor?\n\n\"You've never dated a girl who fucking learned to fly just to surprise you, have you? Pretty sure if we lose this one again, we'll just have to kill ourselves.\"\n\nJo snorted and Blue stirred on her shoulder.\n\n\"Jo?\" She muttered sleepily, and rubbed her cheek against Jo's skin.\n\n\"I'm here, Blue,\" she answered. Blue made a contented sound then fell back into her dreams. \"I'll always be here,\" Jo whispered, and closed her eyes.\n\n~~ Front Royal, Virginia ~~\n\nJILL\n\n\"Jilly-Bean!\" Suzanne yelled as Jo and I got out of my Mini-Cooper. I'd parked next to all the other cars and Suzanne was coming out of the giant doorway of the barn to greet us.\n\nI groaned. \"I didn't think recommending my sister's salon to my friends would mean they'd all start calling me her pet name for me.\"\n\nSuzanne grinned and tucked her hair behind her ear. She'd shortened it from her usual waist-length reddish-brown braid to a loose, wavy style, falling to the middle of her back. She had blonde highlights coming from either temple now as well. I thought she looked like Rogue from the X-Men. I think Jo would have appreciated that reference, but I doubted Suzanne would have gotten it, so I kept it to myself.\n\n\"She's amazing, Jill. I've already broken up with my regular hair place. I didn't want to go on the tour this year being the only female band member with plain old boring hair. Right, Josafina?\"\n\n\"We're looking hot, Suze,\" Jo agreed.\n\n\"God it's so weird you don't call me Alvarez anymore, but I love it!\" She and Jo exchanged an intricate greeting of high fives, fist bumps, finger snaps, and ended with them spinning around twice and saying, \"Boosh!\" in unison as they bumped butts.\n\n\"Jack's been here since yesterday getting everything set up,\" Suzanne said. \"Larry's putting the finishing touches on his new drum setup. We should be ready to rock any minute.\" Suzanne gave me a fist bump as she led us towards the barn.\n\nLarry was messing with his red drum kit as we walked into the music space, having set it up right next to the old beat-up black Pearl set that was the barn's usual house set. Steve and Sara were talking over in the corner in front of a pile of equipment cases while Steve was tuning his Les Paul, and Jack was behind the Rotor's sound board, which he had set up on a pair of sawhorses. There was about a hundred miles of cables coming out of it, and instead of the small guitar amps normally circled around the space, Jack had set up the band's Marshall stacks in the corners, facing into the room.\n\nThere were the usual four microphone stands in a semi-circle, facing the drums. I was brought up short the moment we walked in, however, as I saw something wildly out of place. In front of one of the microphones was a big, Korg synthesizer keyboard on a stand.\n\nJo felt me stop and put her arm around me to keep me moving. I didn't want to let her.\n\n\"Jo, where did that come from?\" I whispered to her.\n\n\"Relax, Blue. This is all part of my Jill-plan.\" She was grinning like the cat that ate the canary.\n\n\"Jo...\" I said warningly.\n\n\"Seriously, relax. I just want us to have some fun. I'm not expecting anything from you that you aren't comfortable with.\"\n\nWe walked over to the keyboard. It was full-sized, and obviously of far superior quality than the small electric piano I had at my condo. And probably ten times the price. I could see it had dozens of controls and buttons on it too, to change the settings, sounds, and instrument voices.\n\n\"Where did this come from?\" I asked her.\n\n\"I saw it at Guitar Center last week. I had Steve run by yesterday and pick it up for me on his way out here. Got a pretty good deal on it too.\"\n\n\"But Jo... I wouldn't know where to begin with this... I mean, look at this thing! It's like the controls of a spaceship!\"\n\n\"That's where it helps to have a s-u-u-u-per-g-e-e-e-nius of musical electronics at your disposal!\" Jack said, walking up to us, doing his best Wile E. Coyote voice. \"Jill, Jo, it's so good you see you guys again!\" He gave me a hug and Jo a fist bump. He was wearing a t-shirt with the picture I'd drawn of the band silk-screened on the front that said 'The Rotors!\" over the picture and 'F*** Yeah!' under it.\n\n\"I cannot wait to do some serious dancing this weekend. Okay Jill, so I've got it set up as just a piano right now. See these buttons here? These are presets, like your car's radio buttons. Do you know what preset buttons are?\"\n\n\"I'm thirty, Jack, not a tween.\"\n\n\"Good, I won't have to Snap-Chat you to explain it then. So, if you hit button number one,\" he pressed the button he was pointing at, \"it's a piano.\" He hit a random key with one finger and I jumped as a loud, rich piano sound came out of the stack of amps behind me. \"Give it a try.\"\n\nI stepped up to the keyboard and played a scale. The sound was amazing and the action was so much better than my little toy. I realized at that moment that's what I had at home, a toy. This was an instrument.\n\n\"We can mess with the sounds and voices and set up different presets for different songs as we go,\" Jack said.\n\nI played a few bars of a Bach concerto, until Henry walked into the barn, yelling, \"No, no, none of that! C'mon Jill, you can't play that in here! Classic rock please!\" He was grinning the usual lopsided Collin's grin at me. I stopped playing to give him a hug.\n\n\"You okay, Jill?\" he whispered in my ear. \"We were all worried about you this week.\"\n\n\"I'm okay Henry, thanks. Just a little meltdown. Jo got me through it.\"\n\n\"I'm glad. Now git back over there and play me something I want to hear.\"\n\n\"Fine!\" I said, pretending to be in a huff. \"I'm only allowed to play classic rock around you? That's fine. Fine!\" I was grinning as I started the intro to Elton John's Crocodile Rock.\n\nLarry sat down behind his drums and started playing along with me, while Jo walked over to her mic where her guitar, Lola, was waiting for her in its stand. Henry went to the instrument cabinet and pulled out a worn red Fender Telecaster. Steve and Sara walked past me toward a mic, Sara stopping to give me a kiss on the cheek as I played and then we were into it.\n\nAnd boy were we into it. I'd always been a solo performer in high school. Every public performance I'd ever done was just me, a piano, and a piece of classical music. I'd spent hundreds of hours learning pop music piano pieces just to entertain myself, but I'd never played them for anyone. Until last summer when I'd played for these people in this barn. They'd been my first.\n\nBut today felt... amazing. Larry fell right into rhythm with me. Suzanne picked up her Fender bass and joined us. I really got it for the first time why the bass and drums were 'the rhythm section' as we played together. It had nothing to do with me. I was just focusing on playing a song I'd messed around with, but Suzanne and Larry... They'd been playing together for fifteen years. They watched me, and flowed right into what I was doing, like they'd been playing with me for years. Their rhythm made it so much easier for me to stay focused on the notes, like my own personal metronome, they were keeping me on track.\n\nSteve picked up the vocals. Of course, he knew the words. I think there wasn't a song I'd ever heard that Steve didn't know the words to. Henry and Jo played their guitars and I was surprised when Jo kept up the rhythm guitar and nodded at her dad to take the solo. I could see where she got her style. Henry wore his guitar high on his body like Jo did and was just as good as she was.\n\nI didn't think I was anywhere near the caliber of any other musician in this barn. But they were carrying me. They made me sound like I belonged here. I felt like the Grinch. My heart grew three sizes that day.\n\nTowards the end of the song, Steve motioned Sara over and she laughingly joined Steve at his mic, doing the \"Laaaaa, la la la la laaas\" along with his high falsetto.\n\nI fumbled at the end, since the real song just faded out and I didn't know how to end it live, so the tune came crashing down in a disorganized mess. But I was smiling so hard my cheeks hurt.\n\n\"Oh, this is going to be a good weekend,\" Jo said, laughing. She walked over to me and kissed me hard, then whispered in my ear, \"All part of my Jill-plan.\"\n\nFor the next couple of hours, Sara and I watched the band play together, rehearsing some of their favorites to get Jo back into the swing of it.\n\n\"Jo, I made you a list of all the songs I think we've ever done live,\" Jack had said, showing Jo a document on a tablet sitting on a music stand next to her mic and effects pedals. \"If you touch a song title, it'll take you to the sheet music and words.\" There was a tablet on a music stand at every microphone in the barn, including on the sheet music holder on the Korg. \"Jill said once you see it written down, it'll come back to you?\"\n\n\"Thanks Jack, this is perfect,\" Jo said, settling Layla's strap on her shoulder.\n\nI was sitting on a hay bale with Sara, while Henry sat on the next bale over, his elbows on his knees, chewing on a piece of straw, grinning at his kids as they rocked out.\n\nJo was finding her way back into her groove quickly and with every song was increasing in confidence. Steve would suggest a song, Jo would pull it up on her tablet and before they got a dozen bars into the song, she'd have remembered how it went, swung away from the music stand and just rolled with it, like she was on stage again.\n\nShe was running her finger down the list between songs when she excitedly said, \"Ooh! Celebrity Skin!\" She brought up the sheet music for it. \"I remember this! I love this one!\" Suzanne sighed and re-settled her bass on her shoulders and stepped to her mic.\n\nJo looked over at me and I said, \"Go get 'em, Captain Marvel!\"\n\n\"That's Chief Marvel to you, Blue!\"\n\nI blinked, wondering if she had remembered that exchange from the night we met, or if she just happened to randomly say the same thing again. Either way it made me feel warm.\n\nEveryone watched Larry as he counted them in, \"Two, three, four...\" and then Jo let the opening cords rip from her guitar, pounding us from the amps.\n\nSuzanne opened her mouth after the first bar but everyone did a double take when Jo cut her off, singing into the mic in front of her.\n\nOh, make me over! I'm all I wanna be!\n\nA walking study, in demonology!\n\nThey she threw back her head and her voice became raw, an almost perfect Courtney Love, as she screamed into the mic.\n\nH-e-e-e-e-e-y, so glad you could make it!\n\nY-e-e-e-e-a-h, now you really made it!\n\nH-e-e-e-e-e-y, so glad you could make it, n-o-o-o-o-w!\n\nThe rest of the band were grinning at each other as Jo banged her head over Lola, thrashing the cords then coming back to her mic for the next verse. The energy in the barn went up to eleven, with Suzanne and Steve backing Jo's vocals on the choruses. Larry was pounding his skins and Jack was bouncing a foot in the air behind his soundboard, horns thrown up as usual. Sara and I got up to dance.\n\nHalfway through the song, Jo was snarling out the lines \"Beautiful garbage, beautiful dresses. Can you stand up or will you just fall down?!\" and leapt into the air in a jump, holding up her guitar.\n\nExcept she hadn't tried her signature move since she'd lost her foot. She came down awkwardly on her prosthetic, stumbled and fell backwards, throwing her hands behind her, trying to break her fall. She landed hard on her back with a loud thump, her guitar giving a squeal of feedback in protest, then she covered her face with her hands and laid there motionless. Everyone froze as I rushed over and knelt down next to her. Her shoulders were shaking.\n\n\"Jo, are you okay?\" I put my hand on her shoulder. \"Baby, it's okay, you're alright.\" I really didn't want her day ending in tears now that she'd been doing so well.\n\nHer shoulders kept shaking as she took her hands away from her face. But she wasn't crying. She was laughing. She sat up, holding her stomach. \"I can't fucking believe I did that!\" she managed to gasp out. \"Oh god, that was hilarious!\"\n\nSteve was the first one to break. He doubled over laughing with her. \"The picture of grace, that's my sister!\"\n\nSoon everyone was joining in, as I took Jo's hands and pulled her to her feet.\n\nShe wiped a tear from the corner of her eye, as she drew in a breath. \"Oh, Jesus Christ, that was funny. I guess I have more to practice than the guitar before we tour, eh Blue?\"\n\n\"I'm just glad I don't have to sing Hole anymore!\" said Suzanne, trying to stifle her own giggles.\n\n\"Damn right, that's my song!\" Jo said with a grin.\n\nRight then was when I knew. She was definitely going to be okay.\n\nJo\n\nAfter lunch, Jo took Blue by the elbow and led her to her new keyboard.\n\n\"Jill, we're not expecting you to play a whole show with us. Or, really, to play with us at all if you don't feel comfortable enough,\" Steve said. \"But we thought we'd try and work up maybe five to ten songs? And if it feels right, you could do part of a set with us. Maybe we could try it out at the kick-off show, that's our friendliest venue anyway. All the people you and Jo sang for in January will be there.\"\n\n\"Blue, you gotta know even if you don't want to play keys, you and I are doing I'm Feeling You at the kickoff show. And probably at Secrets.\" Her face was serious.\n\n\"Jo...\" She was scaring me. We'd been singing that song together constantly every time it came on my playlist, but to sing it in front of a crowd that big...\n\n\"Don't worry about it now, just have fun. But you're going to see this weekend, you're more than good enough.\"\n\n\"She's not wrong, Jill,\" Suzanne said. \"You are good. You've just never played in a band, so you don't know what to expect. But we got you.\"\n\n\"That's what the barn's for. Messing around and finding your groove,\" added Steve. \"Just have fun. If you don't want to play on the tour it's totally fine. But let's have some fun here.\"\n\n\"It's gonna be fine. You're a really good sight-reader. Hell, you played that tune my mom wrote on the first go. She made me play piano for five years before she gave up and let me focus on guitar and I've never been able to play that piece.\" Jo was looking past Blue's shoulder as they looked at the iPad sitting on her keyboard. \"You want to try something you already know first?\" she asked.\n\n\"I mean, not unless you guys only want to do Billy Joel or Ben Folds. Maybe there's a tune you guys do that has piano but you played around it?\" Blue said as she scrolled through the play list. \"Wait!\" She touched the iPad and brought up a song. She looked at Jo and said \"This is the first song I ever saw you play in my life.\"\n\nJo grinned. \"Special meaning for you?\"\n\n\"I remember when I caught my first glimpse of you playing this and thought 'Whoa!' I knew you were the girl for me right then.\"\n\n\"Barf!\" said Steve. \"Let keep the sap to a minimum. What song is it?\"\n\n\"Smooth, Steve, really Sm-o-o-o-o-th,\" Jo said, by way of reply.\n\n\"Oh, hell yeah!\" Larry exclaimed, then clicked his sticks together and raised them to hit the beat.\n\n\"Wait!\" Blue said, \"Give me like a minute to read through this, I can't improvise like you guys can. There's a lot of piano. But there's... horns too. Jack?\"\n\nJack came over to us and looked at the iPad. \"Do you want to do the piano, the horns or try both?\" he asked her.\n\n\"Both? How could I do both?\"\n\n\"Gimme a second.\" Jack started fussing with the Korg while Blue nervously watched him. At one point he pulled out his phone and brought up a document for reference, then nodded and punched more buttons.\n\n\"Okay, so now this song's on preset two for you. This octave,\" he indicated the top octave on the board \"is the horns now.\" He pressed some keys and a combination of trumpet and saxophone sounds came out. \"Everything below that is piano.\" He pressed the keys below and piano sounds came out. Blue messed around with the keys, trying to figure out how to play the horn part, then sight-read through the piano part again.\n\n\"Ready, Blue?\" Jo asked her.\n\n\"As ready as I'll ever be, I think.\"\n\nJo squeezed her arm, then nodded to Larry. He clicked his sticks, then he and Jo launched into the opening licks of Santana's Smooth.\n\nShe wasn't great. The band was great. Jo was great, ripping the solos, channeling Carlos. But Blue had some trouble with the rhythm of the horn part during the intro, just because it sounded so much different from playing the piano. But after that, there was just the piano, and she held her own, for the most part. She didn't have much experience with Latin rhythm, but the chords were easy enough.\n\nSteve was doing his best Rob Thomas voice. Jo stood right next to Blue, wailing on Layla. Every time Blue looked over, Jo had her eyes locked on hers, smiling and nodding her head in encouragement.\n\n\"Okay, not bad Jill!\" Steve said after they played out the song.\n\nBlue flushed with relief at being adequate instead of awful.\n\n\"Nope,\" Larry said, shaking his head.\n\n\"What?\" Jo said. \"Larry, what the hell?\"\n\n\"Listen, I'm not saying that wasn't good enough for her to be on stage with the Rotors.\" Larry had a sphinx-like look on his face. Suzanne folded her arms on top of her bass and watched her husband with a bemused expression, as if she knew exactly what Larry was up to.\n\n\"You better not be!\" Jo said heatedly.\n\nLarry ignored her, looking right at Blue. \"I'm saying, that wasn't good enough for Jill.\" There was silence in the barn as Jill and Larry locked gazes. \"Right Jill? We all heard you play last year. You're better than that, right? Hell, you were better this morning playing Elton John.\"\n\nBlue didn't say anything. But her jaw took on a determined set as she looked at Larry.\n\n\"Okay, then,\" he said, nodding at her. \"Let's go again.\" He caught everyone's eyes, then nodded at Jo, and clicked his sticks. Jo was frowning at him, but started the intro again.",
        "The horns sounded better and Blue was grooving on the piano part halfway through when Larry stopped and yelled, \"Cut! Nope, nope, nope.\" Everyone stopped and Blue looked at Larry again.\n\n\"Jill, you're a good piano player. But you're just... playing piano right now. You aren't jamming.\"\n\n\"Larry...\" Jo started but Larry held up his hand and she stopped.\n\n\"Jill, you gotta feel it. You aren't moving your body at all. You're standing still, looking at your keys and the music. And I know at this point it's not because you have to focus to play this. I bet I could turn off your iPad right now and you could still play it. This song isn't half as hard as that concerto you just threw off the top of your head this morning. It's because you're thinking about it, you're in your head. I've seen you in the audience when we play this song. You move like there's electricity being pumped into you. When you're playing, you gotta feel that!\" He thumped his chest with his fist. \"We all gotta feel it, together. That's what being in a band is about.\" Steve and Suzanne were nodding.\n\nBlue lowered her eyes to the keys. Then raised them to meet Larry's gaze. \"Fine. Count us in Larry.\"\n\nHe grinned. Jo looked like she'd been holding her breath, but when Larry hit the opening drum riff, Jo hit the opening with extra energy, walking over to her pedals, leaving Blue on her own at the keyboard. Steve put a little extra umph into his lyrics and Suzanne started dancing as she played bass next Larry, doing a salsa with her Fender as her partner.\n\nThe horn part sounded much the same. But then as she went into the Latin piano rhythm, Blue got it. She started swaying her hips and bouncing on her torso as she made eye contact with Larry and Suzanne while they kept her on the beat. Her feet were moving and she was nailing it. When Jo went into the big solo, Blue was swinging her hips enough that her sundress was flipping back and forth. Her face had gone from determined to smiling. She could feel it.\n\nAs they finished out the song, Larry hit his splash cymbals extra hard, pointed a drumstick at Blue and yelled, \"Yes! That's good enough for Jill, right Blue Girl?\"\n\nBlue smiled and said, \"Screw you, Lawrence!\" as everyone laughed. Then she stepped over to his drums and high-fived him. \"Thanks, Larry.\"\n\n\"Don't thank me yet. That's just one song. I'm gonna be on your ass all afternoon unless you keep bringing it.\"\n\n\"Hey, Larry, that's my job!\" Jo said laughing.\n\n\"Jo!\" Blue said, blushing and looking at Henry out of the corner of her eye. She walked back to her keyboard and Jo met her there for a kiss.\n\n\"Told you you were good enough, Blue.\"\n\nThe Korg keyboard wasn't the only surprise the Collins family had for Blue that weekend, although the second one wasn't planned. Blue and the band had spent the afternoon working up songs she felt comfortable playing with them. After dinner, the gang was relaxing around the fire pit behind Henry's house. Jo made a point to sit in the same chair Blue had given her a lap dance in when they'd been here alone, amused at Blue's discomfort at the memories while Henry was sitting right here with them.\n\n\"So, do you guys ever jam out here like you do at the beach house in Ocean City?\" Sara asked as Steve poked at the fire with a stick.\n\n\"All the time,\" Suzanne said, \"but not after we've been practicing all day!\" She laughed, rubbing her wrist.\n\n\"Oh crap, I gotta start thinking of a song or two I can do at the jam, don't I?\" Sara said.\n\n\"You know, it would be easier for you and me to come up with something if we could play guitar,\" Blue said to Sara. \"Any song I think of I have to hope one of these guys knows how to play it.\"\n\n\"I got you babe. You just whisper it to me and if I don't know it, I'll learn it for you,\" Jo said.\n\n\"Yeah, but that takes away the fun of surprising you. I wish I could drag a piano out on the beach.\"\n\n\"Why can't you?\" said Henry.\n\n\"What?\" Blue said confused. \"Are you kidding?\"\n\n\"Nope,\" Henry said, groaning as he got to his feet muttering, \"Damn old knees. Hang on a second, Jill. Be right back.\" He strolled off towards the house.\n\nJo and Steve looked at each other. \"Do you know what he's on about Bro?\" Jo asked.\n\n\"No, I... oh shit! I DO know what he's on about. This is gonna be hilarious.\" Steve wouldn't share his epiphany and soon Henry came back out of the house hauling a big, black box with handles on both sides. It took him two hands to carry it. Jo started laughing as soon as she saw it.\n\n\"Guys, what is this?\" Blue said, demanding to be let in on the joke.\n\n\"This,\" Henry said, setting the box down on the ground and flipping up the lid, \"is a Hohner piano accordion.\" He lifted it out of the box. It had a beautiful marbled red finish, and it looked almost new. It also looked really heavy.\n\nh\n\n\"Again, Henry, are you kidding me?\" Blue said.\n\n\"Not in the least Miss Jill. Here.\" Henry careful set it in her lap, and showed her how to put the shoulder straps on to take most of the weight. \"So, you've got two octaves of keys here on your right hand. This particular instrument is unisonoric.\"\n\n\"What does that mean?\" Blue looked totally flustered, as if someone had set a slightly irritated monkey on her lap.\n\n\"It means it makes the same tones whether you're pulling the bellows out or pushing them in. Bisonoric ones make different tones depending on if you're going in or out, kind of like a harmonica. You'll find this one a bit easier to learn. Here, put your left hand under this strap... right, just like that. Now, you just have to pull out the bellows to get some air into it, then squeeze it back and play as you do.\"\n\nBlue sat frozen. \"C'mon Blue, give it a try,\" said Jo.\n\n\"What in the world do I play?\" she implored Jo. She gave the bellows a squeeze, holding a chord and jumped at the whining sound and stopped. \"Henry, this sounds nothing like a piano!\"\n\n\"No, it doesn't, but it plays just like one. And once you get used to the sound you'll know how to use it,\" Henry said, sinking back into his chair.\n\nBlue looked at the contraption in her lap and made a few aborted starts at songs she was comfortable with. She stopped after a few bars of each one.\n\n\"It doesn't sound right,\" she complained.\n\n\"Think outside the box,\" said Jack.\n\n\"What do you mean?\"\n\n\"Don't try to think of a song with piano, try and think of a song with a mood that goes with the sound of that thing.\" He pointed at the instrument on her lap.\n\n\"Well, I don't... oh!\"\n\nJo grinned. \"She's got one now. Let's hear what you got, Blue.\"\n\n\"Okay, but I'm not singing. One of you better pick me up.\"\n\n\"Steve will know it, almost guaranteed,\" Jo laughed.\n\nBlue pulled out the bellows and worked it back and forth a bit to get the feel, then started the intro. It was clear she didn't know the song exactly, but she improvised the melody well enough that Steve laughed, clapping his hands in delight and started singing.\n\nIf I had a million dollars...\n\nJack, Suzanne and Sara all caught on and joined in, singing the responses to Steve's call.\n\n(If I had a million dollars)\n\nWell, I'd buy you a house.\n\n(I would buy you a house)\n\nIt was a spotty performance, with her not knowing the song well, but she managed well enough the gang was able to sing the whole Bare Naked Ladies tunes, minus Henry, who just watched, bemused and sipping his whiskey.\n\nIf I had a million dollars\n\n(If I had a million dollars)\n\nWell I'd buy you a green dress\n\n(But not a real green dress, that's cruel)\n\nThe accordion's sound matched the mood of the song exactly and by the end, everyone was singing.\n\nIf I had a million dollars,\n\nIf I had a million d-o-o-o-l-l-a-r-s...\n\nI'd be rich!\n\n\"Henry, why do I ever doubt you?\" Blue said after she was done.\n\n\"It's my unassuming country bumpkin charm,\" he said, straight faced.\n\nShe pulled out her phone and started Googling songs. \"This year's beach jam is gonna be great!\"\n\n\"I'm so beat,\" Blue said, later in Jo's cabin. She'd stripped off her dress and thrown herself on the bed in her underwear as soon as they'd walked in from the fire pit. \"Who knew playing music all day would take it out of you like this?\"\n\n\"You were pretty amazing today,\" Jo called from the bathroom. \"I think you could easily do a thirty-minute set with us now. That's just a half a day playing together, and we still have all day tomorrow.\"\n\n\"I still don't know about that. You guys are rock stars. I don't know that I'm in your league.\"\n\n\"You just need to get the experience. One time up on stage and I'll bet you get a taste for it.\"\n\n\"We'll see. Either way I'm going to sleep like a baby tonight.\"\n\n\"Does that mean you're ready to go to sleep now?\" Jo asked, hopping out of the bathroom.\n\nBlue's eyes grew wide. Jo wasn't wearing anything except the velvet choker that Blue had bought for her in Virginia Beach the previous summer. The navy blue went surprisingly well with her purple hair. She leaned against the door frame, echoing the pose Blue usually made when she was trying to rev up Jo's engines.\n\n\"No... no I don't think I'm ready to go to sleep after all,\" she said, her eyes roving up and down Jo's body.\n\n\"Good. Sorry, this next move isn't that sexy,\" Jo said, as she hopped over to the bed on one foot. Blue sat up to offer her hand to help her balance. Instead of joining her on the bed, Jo grabbed the sides of Blue's panties and slid them off, then she pulled a pillow off the bed and set it on the floor. She grabbed Blue's knees, pulled her to the edge of the bed, then knelt down between her legs.\n\n\"Jo...\" Blue breathed, sitting up to kiss her.\n\n\"I've been wanting to do this all damn day,\" Jo said, kissing her way down Blue's neck. She lowered her head and took a nipple in her mouth, delicately sucking and circling her tongue around it. Blue sucked in a breath, and put her hand behind Jo's head. She leaned back on her elbows as Jo moved lower, kissing Blue's stomach, licking her belly button, then putting a hand on each of Blue's knees and pushing her legs wide open.\n\n\"Oh god...\" Blue whispered as Jo lowered her head and parted her lips with her tongue. She licked Blue's clit as she slid two fingers inside and caressed her walls with curling fingertips. Blue closed her eyes, surrendering to Jo's attentions.\n\nHer thighs started to give the quiver that signaled her approaching orgasm and Jo stopped licking and slowed her fingers to a barely perceptible motion. Blue moaned as her body backed away from the edge.\n\nOnce she was certain she wouldn't trigger Blue's orgasm, Jo resumed licking her clit and stroking her fingers again. As she felt Blue near the edge she stopped again.\n\n\"Jo, this is so unfair!\" Blue moaned.\n\nJo simply smiled and repeated the cycle. Then again. And again.\n\nFinally, as she started shaking once more, Blue grabbed a double fistful of Jo's purple hair. \"Jocelyn if you don't let me come right now I may die and you'll have to explain to everyone how you let it happen!\"\n\nJo increased her pace, thrusting her fingers in and out.\n\n\"Oh my.... Jo.... oh my god...Jo... Eep! Jo!\" Blue tensed her entire body, her voice quickly rising in volume, then she started shaking uncontrollably as Jo continued to lick and stroke her through her orgasm until she finally collapsed.\n\n\"Jo... that was...\" She could barely get the words out.\n\n\"Payback for last year in Ocean City when you tortured me like that,\" Jo finished.\n\n\"You can torture me like that every day for the rest of my life if you want to.\"\n\n\"I'll hold you to that.\"\n\n\"You're gonna have to wait a few minutes before I can take care of you,\" Blue said, trying to catch her breath.\n\n\"You don't need to take care of me, Blue.\" Jo stood then knelt on the bed, straddling Blue's leg. \"I know what you mean, but I also want you to know that I know you've been giving me your all, taking care of me since my crash.\" She lowered herself and her excitement left a slick trail of wetness on the skin of Blue's thigh. Blue smiled up at her, and lifted her knee slightly to give Jo a better angle. Jo closed her eyes and made an appreciative sound as she ground herself on the muscle and started rocking back and forth. \"I love you taking care of me... oh that feels good... but I have to start learning for us to both take care... Mmmmm... take care of each other.\"\n\nBlue watched her with undisguised lust. She reached out and ran her hands up Jo's sides to cup her breasts, giving a soft pinch to her nipples, causing her to suck in her breath and speed up her pace, rocking on Blue's thigh. Blue spread her other leg out wider, then reached out and pulled Jo higher on her leg. She moaned herself as they made contact and Jo started rocking her hips, pressing their bodies together. Blue could feel the soft triangle of hair between Jo's legs rubbing against her clit.\n\nJo had a head start and soon her body started shuddering as she gripped Blue's hips and let out a satisfied groan. She opened her eyes, looking down at her lover. Realizing she'd beat Blue over the finish line, she reached her hand between their bodies and slipped her thumb over Blue's clit. She kept rocking her hips and stroking her thumb until soon Blue was quaking as well, her orgasm nowhere near as strong as her first of the night, but to all appearances a satisfying one.\n\nWhen they both stopped shaking, Jo leaned down and curled her arms underneath Blue's shoulders, stretching the length of her body atop Blue, caressing her neck and hair, and kissing her.\n\n\"I'm not going to stop taking care of you, Jo. Just so you know.\"\n\n\"I don't want you to. I just want to make sure I'm taking care of you too, okay? This needs to be a two-way street.\"\n\nBlue grinned. \"You certainly took good care of me tonight.\"\n\n\"It was a good start,\" Jo said.\n\n\"A start?\"\n\nJo raised up on one arm and looked around the room. \"Where did we put that strap-on?\"\n\nThe next morning, Jo opened her eyes to see the sun just coming up outside her window. She reached out and picked up her phone from the side table to check the time.\n\n\"Seven o'clock. Time for a run?\" Little sounded eager.\n\nMight as well, she thought. She looked over. Blue was on her side facing the wall. Her naked back gave Jo thoughts of skipping her run and waking Blue for some morning fun.\n\n\"After what you did to her last night, you'll be lucky if she wakes before noon.\"\n\nNo lies there, Little, Jo thought with a self-satisfied grin. She'd kept Blue up for hours the night before.\n\nShe quietly rolled out of bed. Her closet was off the bathroom, and she hopped in and quietly put on her running clothes. She was getting used to her running prosthetic, but it still took a minute to get it fastened on securely. The socket was precision molded to the stump of her leg like her every day prosthetic, but instead of a leg and foot at the bottom, there was a carbon-fiber post, supporting a hydraulic mechanism that cushioned the shock of her landings. Instead of a foot, there was a foot-long curved steel spring that ended in a simple rubber pad.\n\nOutside Jo spent a few minutes stretching, then took off at a slow jog around the farm. Her dad had made a running trail around the property years ago. Nothing fancy, just a six-foot-wide hard packed trail a little over a mile long, starting and ending at the barn and running around the fields and through the wooded areas. It turned into useless mud if there'd been any recent rain, but it had been dry for a few weeks, so the hard-packed dirt gave her prosthetic no problems. She'd worked up to two miles a day in the last few weeks.\n\n\"Think we'll be able to do the Army Ten-Miler this year?\"\n\nProbably not, Little. Only three months until then, I don't think I'll be up to that distance yet. Next year for sure. We'll have to go to cheer on Liz though.\n\nHer gait wasn't a smooth as it had been before. She had a hitch on her left side, but it wasn't uncomfortable. Just different. As she approached the farmhouse at the end of her first circuit, she saw Larry sitting on the porch drinking from a coffee mug. She raised her hand and they exchanged waves and she ran past.\n\n\"I guess a ten-minute mile is okay while we're still rehabbing, but we're gonna need to bring that time down Collins,\" Little said as Jo checked her running watch.\n\nI don't want to burn out, Little. Going to stretch it out three miles today.\n\nShe heard footsteps and turned her head to see Larry jogging up on her left.\n\n\"Morning Larry. Did I shame you into getting off your ass?\"\n\n\"Nope, curiosity got me. I wanted to see that thing in action.\" He gestured at Jo's leg as they jogged. \"That looks like some high-tech shit there.\"\n\n\"You don't even want to know what it costs.\"\n\n\"No, I really don't. You look like you're doing alright on it though.\"\n\n\"Seem to be. Going for two more miles, got that in you?\"\n\n\"This isn't pull-ups or swimming Jo, I can hang.\"\n\nThey ran in companionable silence the rest of the way. Jo could feel the strain the last half of the third lap and slowed her pace. Larry slowed with her, declining to comment. They arrived back at the barn and started walking in circles to cool down.\n\n\"Thanks for the run. Blue's been running with me lately but she's sleeping in this morning.\"\n\n\"I'll bet,\" Larry grinned. \"Doesn't have anything to do with all the noises Suzanne and I heard last night, does it?\" Larry and Suzanne's room in the main house had the closest window to Jo's cabin.\n\nJo cleared her throat and said, \"I don't know what you're talking about. Must've been coyotes.\" She walked over and leaned onto the barn door to slide it open. \"By the way, thanks for the way you handled Blue yesterday. When you started going at her I was pissed, but you were right. She needed that.\"\n\n\"She's damn good, Jo. She just needs the confidence to go with the skill. She'll get there. She's got a great sound when her head gets out of the way and her voice is outstanding. You going to ask her to join the band full time? You certainly won't get any pushback on it from me.\"\n\n\"I'd like to, if I can talk her into it. I mean, how nice is it for you to get to play with Suzanne all the time?\"\n\n\"Not gonna lie, it's the best. Sex is always better after a night of jamming together too. But I'm guessing you already know that after last night.\" He grinned.\n\nJo turned pink. \"Maybe.\"\n\nShe went to the instrument cabinet and pulled out her dad's Gibson SG. \"I love this guitar,\" Jo said, putting it on. \"I have to get Dad to let me take it on the tour one of these years.\" She plugged it into one of the small guitar amps and set the volume low. No reason to wake up everyone else. She started noodling around with a solo.\n\nLarry sat at the old black Pearl kit, skipping his massive collection of red Ludwigs. \"Do Little Wing,\" he said.\n\n\"What?\" Jo stopped playing and looked at him.\n\n\"Little Wing. Stevie Ray Vaughan? You come out here and play it by yourself sometimes. You don't remember? You and I jammed on it the day...\" he trailed off.\n\nJo stared into the distance as the memories came rushing back. Little Wing. The song she played to herself out here when she was sad. When she'd walked away from another of her 'relationships' over the years. When she was missing mom. When she'd broken up with Blue, ran away from her in her dad's helicopter, then came back to tell her how she actually felt, only to find her gone. That time had been the best she'd ever played it, almost as good as Stevie Ray. She'd crushed the tune with the weight of her emotions.\n\n\"Sorry,\" Larry said, watching her face. \"Didn't mean to bring up bad memories.\"",
        "\"No worries. It worked out for me and Blue after all, didn't it?\"\n\n\"Sure seems like.\"\n\nShe looked down at the Gibson then up at Larry, who picked up his sticks. She hit the opening notes.\n\nThis tune came back to her easily, unlike so many others. She'd played it so, so many times over the years, getting better each time.\n\nBut this time, she was... off. Not right. She couldn't put her finger on exactly what, but...\n\nShe tried to summon the sadness, the blues that fueled her when she usually played it. She thought of her mom. Of walking away from her Blue Girl, right here in this barn. She even tried to remember the crash, losing her leg, losing her memories, losing her Army career. Nothing. She just didn't have it today.\n\nShe finished out the song. Larry said, \"Not bad, Jo.\"\n\n\"Since when have you been one to bullshit me to spare my feelings, Larry?\"\n\n\"Okay, you're right, that was pretty crap. Nowhere near as good as the last time we played it together. Where's your head?\"\n\n\"Beats me,\" Jo said, looking over at Blue's keyboard. \"Maybe I'm too happy to play the blues now.\"\n\n~~ Arlington, Virginia ~~\n\nJILL\n\nThe Rotors' home bar in Arlington was packed, the crowd buzzing in anticipation of the kick-off show for the summer beach tour.\n\n\"You're bouncing like a pogo stick. Can you calm down a little?\" Steve looked concerned.\n\n\"Sorry, I'm just a little tense.\" Jo really was bouncing up and down on the toes of her right leg. We were gathered at the bar for our usual pre-show Corona.\n\n\"Baby, two things,\" I said. \"I know this is your first time on stage since the crash, but you guys have spent the last two weekends jamming and you're right there. You're ready!\" I said, rubbing her arm.\n\nShe stopped bouncing, squared her shoulders and huffed out a breath. \"You're right, you're right. I'm okay, I'm good. Second thing?\"\n\n\"The second thing is, if you don't calm down you're gonna freak me out and there'll be no way I'm going up there tonight.\" Everyone laughed and Jo settled down a little more and put her arm around me.\n\n\"The last time I saw the Chief this nervous, she'd booby-trapped Chief Nguyen's locker in the ready room with a stink bomb, and Major Seely walked in just as he was about to open it,\" said Liz. Jo's former crewmate had come to see the kick-off show.\n\n\"Oh shit, I forgot about that!\" Jo said, laughing. \"Talk about stress. Not sure I've ever moved so fast to distract him from opening it.\"\n\n\"Liz, you're looking good,\" I said. \"You gonna be ready for the Ten Miler?\"\n\nIt was a hot night on the outdoor patio where the band was set up, and Liz was wearing a sleeveless top, showing off the progress she'd made on her arms and shoulders working out with Jo. She really was looking good.\n\n\"Hell yeah I am!\" She popped a wheelie in her wheelchair before dropping the front wheels back to the ground. \"I'm averaging about five miles a day now, and the racing chair I ordered will be here next month, so I can stop using the ones at Reed. Mine's going to be about half the weight of the hospital ones.\"\n\n\"Jilly-bean!\" My sister Justine and her husband David walked up to our group at the bar.\n\n\"Hey Just-enuff! David, I'm glad you guys could come tonight!\" I said. \"Where's Danny?\"\n\n\"With my mom,\" David said. \"This is our first night out doing something like this in a long time, so thanks for the invite.\" He held up two fingers at the bartender and pointed at our Coronas. \"Love our kid, but four-year-olds require too much care and feeding to make going out to shows a weekly event.\"\n\n\"Alright, show time. Ready, Jo?\" Steve said.\n\nShe huffed out a breath. \"Let's fucking rock, Bro.\" She leaned over and kissed me. \"Have fun dancing. You're on for the second set.\"\n\n\"Okay,\" I said, my voice shaky.\n\n\"What does that mean?\" my sister asked as the band walked backstage.\n\nI pointed up at the stage. They'd altered their usual setup. Steve, Suzanne and Jo were still spread out evenly across the front of the stage, although Jo had a mic stand this year. Instead of Larry being center stage behind Steve, his drum set was centered between Steve and Suzanne. My keyboard was set up along the back even with Larry, centered between Steve and Jo.\n\n\"I'm going to play with them in the second set.\"\n\n\"No shit? Wow, baby sister, I can't wait to see it! No wonder you invited us out.\" She hugged me.\n\nThey band took the stage, Steve shouting out his usual greeting to the crowd.\n\nThey started their set slow, with Dada's Dizz Knee Land building to a rocking ending, followed by Hey Jealousy by the Gin Blossoms. The band had worked up more than two dozen new songs for this tour over the last two weekends. The obvious difference in the band from last year was that Jo was singing backing vocals along with Suzanne almost every song now.\n\nThe last Sunday at the farm I'd taken Henry's helicopter out to get my last three hours of solo flight time, making me eligible to take the test for my license. When I'd returned from navigating to Harper's Ferry in West Virginia and back to Front Royal, Jo had grinned at me and told me they'd worked out some new songs for her to sing as well while I'd been gone, but she wouldn't tell me what they were.\n\nI found out soon enough. For the third song, Jo stepped up to her mic and started singing a power pop tune I didn't know at first. By the time I recognized the Harvey Danger song Flagpole Sitta, Jo had gotten to the lyrics in the second verse that caused me to yell \"Oh my God, Jo!\" at the stage.\n\nPut me in the hospital for nerves, and then they had to commit me!\n\nYou told them all I was crazy!\n\nThey cut off my leg now I'm an amputee, god damn you!\n\nI'm not sick but I'm not well...!\n\nJo was singing with a huge smile on her face, while Steve just shook his head as he played. The crowd was mostly die-hard Rotors fans and everyone knew what Jo had been through. There was an audible, collective gasp, then the crowd let out a huge whoop of laughter and cheering, moving in time to Jo as she bounced on her right leg while she sang.\n\nIt was such a Jo moment, taking ownership of her situation through music, telling all those listening, Yeah, this happened, but fuck it, it's not slowing me down.\n\n\"She's one heck of a bold woman,\" my sister told me after the song.\n\n\"That's my Jo.\"\n\nShe stayed at the mic, yelling out \"This one's for my Blue Girl!\" and pointing me out in the back of the crowd near the bar.\n\n\"Oh no, Jill, she's got that look on her face that spells trouble,\" Sara said.\n\nLarry clicked his sticks and yelled \"Two, three, four!\" and they swung into another song I'd never heard the band do, but instantly recognized as Liz Phair.\n\nI-I-I-I-I have loved all over the place,\n\nBut y-o-o-u-u have got my favorite face.\n\nYour eyelashes sparkle like gilded grass,\n\nAnd your lips are sweet and slippery like a cherub's bare wet ass.\n\nWe were all grooving as Jo sang when I stopped, rooted to the spot as I suddenly remembered what the words to the next verse were. Jo let Layla dangle from her strap, Steve carrying the guitar while she pointed at me in the back of the space with both hands. She sang with a decidedly naughty sway to her hips, Layla hanging from her strap and rocking back and forth.\n\nYou walk in clouds of glitter and the sun reflects your eyes,\n\nAnd every time the wind blows, I can smell you in the sky!\n\nYour kisses are as wicked as an F-16,\n\nAnd you fuck like a volcano, and you're everything to me!\n\nDavid did a spit-take, choking on his beer, as Sara and Liz both yelled \"W-o-o-o-o-o!\" and offered me high-fives. I couldn't look at Justine as I was sure I was every shade of red my face could manage.\n\nWhen they finished their first set and came back out to the bar, I punched Jo in the arm.\n\n<br >\"Why Blue, whatever was that for?\" she asked with an innocent smile.\n\n\"You dirty girl, I can't believe you sang that to me in front of my sister!\"\n\n\"Don't worry Jo, I thought it was great, you should sing that every show,\" Justine chimed in, laughing.\n\n\"Justine! Whose side are you on?\" I said.\n\n\"I'm on the side of anyone that can make my sister-in-law turn that color,\" David chimed in.\n\n\"I'm outnumbered!\" I said, mock dismay turning into mock outrage.\n\n\"You ready to go up with us?\" Jo asked me.\n\nI gulped as nerves suddenly hit me again. \"I guess I have to be, don't I?\" I took a long drink of my beer.\n\nSince Jo's recall of songs wasn't what it used to be, the band had written out a set list for the show. The first six songs of the list for the second set were songs they'd been practicing with me for the last two weekends. We'd worked up more than a dozen songs, but they were taking it easy on me for my first time on stage.\n\n\"Blue, you got this. We're all right here with you.\"\n\nJustine squeezed my shoulder. \"Just picture yourself at your high-school recital, Jill.\"\n\n\"Not helping!\" I said, to a round of laughs.\n\nAs I took the stage with Jo and the rest of the band my stomach was doing flips, especially knowing our opening song of the set. The intro was all on me. I stood behind my Korg trying to ignore the audience and checked my settings as the rest of the band got their instruments settled. Then Larry nodded at me and clicked his sticks counting me in.\n\nAlmost the first minute of the song was just keyboards, with Suzanne doing a soft, sliding bass riff behind me. I started the opening bars on the piano setting, hit the button to shift my sound to a synthesizer, then back to piano as I played. Then Steve joined in with his vocals.\n\nI heard you on the wireless back in fifty-two,\n\nLying awake, intent at tuning in on you.\n\nIf I was young it didn't stop you coming through.\n\nSuzanne and Jo added the next line in falsetto voices as Larry came in on the drums.\n\nOh, ah, oh!\n\nUp until the chorus, we'd kept the song pretty close to The Buggles' original version, but as Steve went into the chorus, both he and Jo started hammering rock chords on top of my piano, making it more of a Rotors version.\n\nVideo killed the radio star,\n\nVideo killed the radio star,\n\nPictures came and broke your heart.\n\nOh, ah, ah, ah, o-o-h!\n\nI started to relax as I realized that not everyone in the audience was focused solely on me, watching and waiting for me to screw up. I could see the crowd dancing. And the feeling was... amazing. Jo turned back from her mic to make eye contact with me and I could feel it. I felt the band. I felt Jo. I felt the music. It was incredible. It was a completely different feeling from standing in a circle in the barn playing just for each other, or when I'd done solo recitals in high school.\n\nThe applause and cheering sounded so much louder up on the stage with everyone facing us than when I'd been a part of the crowd. It was a huge rush. As Jo high-fived me I thought, \"I get this now.\" It wasn't the applause, exactly. It was having been a part of lifting up the audience, together, as a band.\n\nI wanted more.\n\nThe next song also started with heavy synthesizers, as we played U2's Beautiful Day. Playing synthesizer instead of a straight piano sound had really thrown me when we'd been rehearsing, until I stopped listening to what my keyboard sounded like and focused on the sound we were making as a group. When Jo started weaving distorted notes around my melody the effect sounded amazing. Jack had managed to find the exact same effects for my Korg as the original song.\n\nWhen we played Counting Blue Cars, my part was background to Steve and Jo's guitars and I was even able to sing backing vocals along with Suzanne and Jo during the chorus. I'd discovered in the barn I wasn't any good singing harmony, but I was pretty good at singing the melody an octave higher than Steve, with Jo and Suzanne providing the actual harmony.\n\nTowards the end of the song, my part only needed one hand to play and found myself doing my usual dance move of jumping up and down behind my keyboard while Jo soloed, my hair bouncing and dress flouncing all over the place. Jo turned and saw me and started bouncing in time with me on her right foot with a huge grin on her face.\n\nAfter a half hour of playing, I found myself disappointed, rather than relieved when my part of the set ended with the Wallflowers' One Headlight. I'd fallen in love with the organ sound Jack had set up for me. Steve asked the crowd to give me a hand as Suzanne and Jo high-fived me before I walked off stage.\n\n\"My god Jilly-bean! That was so good!\" my sister gushed when I came back to the bar.\n\n\"No doubt, Jill!\" Liz said, as both she and Sara high-fived me.\n\n\"You only looked nervous for like thirty seconds, then you were just rocking out! I'm so proud of you Jill!\" Sara hugged me, and Liz offered a high-five. \"You definitely need to do that more!\"\n\n\"Well, I've got one more song tonight for the encore. That's the one I'm really nervous about.\"\n\nThe band finished up their set with Sister Hazel's All For You as I made my way back stage.\n\n\"You ready Blue Girl?\" Jo asked me as I met the band at the bottom of the stage steps.\n\n\"God, I can't believe you're making me do this.\"\n\n\"Jill, look at me,\" Larry said. I met his gaze. He thumped his chest with his fist. \"Just feel it. This is your song, you and Jo. Feel it.\"\n\nI nodded and huffed out a breath. \"Right. Feel it.\" We went back up on stage to cheers. I followed Jo to the front of the stage, and stood at Steve's mic. No keyboards for me this time.\n\nLarry pounded his drums and Jo launched into the guitar, and I started singing.\n\nS-o-o-o-o-metimes I imagine a world without you.\n\nBut m-o-o-o-o-s-t times I'm just so happy that I ever found you.\n\nIt's a complicated web, you weave inside my head.\n\nSo much pleasure with such pain, I hope we always, always stay the same!\n\nAs soon as I had started singing, I'd looked over at Jo... and I could feel it. Our song. The song we'd been singing to each other since she came back. The song I'd tried to win her over with that day in the barn. The song she'd begged me to sing to her in January.\n\nI could feel it. Our song.\n\nI started pouring my heart into the lyrics, Jo and Suzanne backing me on the chorus. It was simply uncanny how well they could harmonize.\n\nAs I started the second verse, I took the microphone out of the stand. Not something I'd rehearsed, just something that felt right. I walked over next to Jo as I sang. To her.\n\nY-o-o-o-u-u-u go, and then I can finally breathe in,\n\n'Cause, baby, I-I-I-I-I know in the end you're never leavin'.\n\nWell, we're rarely ever sane, I drive you crazy and you do the same!\n\nJo was alive on her guitar, playing with as much feeling as I'd ever seen her. As we got to the end, I looked out at the crowd towards Justine and Sara. My family. They were watching me with such pride. We took out the song...\n\nOh, I'm feeling the way when you walk on back\n\nI feel light, I feel love, I feel butterflies...\n\nWe brought the house down.\n\nLooking over at my Jo beaming at me, I thought how right she had been that I would get it, once we did this together. I'd follow my Jo on any adventure she asked of me now.\n\n~~ Rehoboth Beach, Delaware ~~\n\nThe band had booked the same two music festivals in Cape May and Rehoboth as last year, giving me a slight feeling of d\u00e9j\u00e0 vu. I played with the band again at both shows. There were a ton of classic rock songs I already was pretty comfortable playing. Since the crowd in New Jersey leaned older, I was able to play a whole set.\n\nIt felt a little weird for me when the band members were the ones who had to learn Billy Joel's Movin' Out, instead of me learning a song they already knew. They picked it up so fast, though, that I had no time for any feelings of superiority.\n\nWe ended our set with The Cars, Just What I Needed, a song that had really tested me as I'd had to learn how to use the tone wheel on the side of my Korg, something the piano had never prepared me for.\n\nAfter the show, Suzanne, Sara, Jo and I stood on the top deck of the ferry on the way from Cape May to Rehoboth Beach.\n\n\"Good call skipping the snack bar this year,\" Jo said.\n\n\"Those hot dogs were nasty,\" Sara agreed.\n\n\"Where did you two go for dinner last year? I remember you raving about it for days after we left Rehoboth,\" Suzanne asked me.\n\n\"The big raw bar at the end of the boardwalk,\" I said. \"So good. Tell me we're going there again tonight baby.\"\n\n\"Anything for my favorite keyboard player,\" Jo said. She had her eyes closed, her aviator sunglasses perched on top of her purple hair, her face turned up, bathing in the afternoon sunlight as she leaned on the railing. \"We should ditch the boys and do a girl's-night-out dinner.\"\n\n\"I hear that,\" Suzanne said. \"Jill, I have to say, you're fitting right in with us on stage. We need to spend some time this week getting you up to speed on more songs so you can do a full set. I think you really have the best voice of any of us.\"\n\n\"That's because you've only heard me sing melody. If I had to sing harmony I'm not sure you'd let me near a mic.\"\n\nJo smiled and said, \"Practice, practice, Blue. That's the only way you\u2014\"\n\nShe was interrupted as the ferry gave a deafening blast from the ship's horn directly above our heads and we all jumped.\n\n\"Jo's right, Jill,\" Suzanne said. \"We've all been singing together since high school. You'll get there.\" The horn blasted again, making us jump once more.\n\n\"I know I will,\" I said, \"It's still intimidating, but today was less so than the first night. Jo, what songs do you think we should work on?\"\n\nJo had pulled her sunglasses down over her eyes. \"Uh... I'm uh, I'm not sure. I gotta go find the head, I'll hook up with you guys later.\" She turned away from the rail and started down the stairs.\n\n\"I liked your idea of doing some Ben Folds, Jill,\" Suzanne said. \"Good bass lines for me there.\"\n\nI frowned, looking down the steps where Jo had disappeared. \"Hey Suzanne, where's the ladies' room?\"\n\n\"Next to the snack bar.\" She followed my gaze. \"Jill? Everything okay?\"\n\n\"I'm not sure. I'll meet you guys on the bus, okay?\"\n\nI headed down the stairs. When I reached the bottom, the ship's horn gave out another loud blast, and I hurried to find the bathrooms.\n\nJo wasn't in the women's bathroom. I looked around for her as I rushed through the public areas, then headed down to the vehicle deck. As soon as I came down the stairs I started running towards the tour bus. I could see that the bus door was sitting wide open. I found Jo's sunglasses lying on the deck outside the bus. I scooped them up and climbed up the steps, found the salon empty, and moved down the hallway towards the back. I could hear Jo hyperventilating before I even passed the bunk area.\n\nShe was sitting in the corner of the bedroom, her knees drawn up, arms wrapped around them, her face buried. She was gasping and drenched with sweat. I didn't say anything, I just knelt down and wrapped my arms around her, laying my cheek on top of her head.\n\n\"I can't... I can't stop... I can't...\" she gasped out.\n\n\"It's okay, Jo. Just listen to me breathe. Feel my breaths and count them.\" My breasts were pressed against her knees and I drew in deep, slow breaths, so she could feel my chest move. \"Don't focus on your breathing, focus on mine. Count with me. One... two... three... c'mon Jo.\"\n\n\"Four...\" she gasped out, then sobbed once before continuing, \"Five... s-six... seven...\"\n\n\"Good girl, that's good, keep counting, focus on my breaths.\" I stroked her hair.",
        "\"Eight... nine... ten...\" She got to forty before she started to get her own breathing under control, synchronizing it with mine.\n\nI didn't move until her breathing had become slow and steady and she finally lifted her head up. Tears were running down her cheeks.\n\n\"I couldn't... I couldn't stop it. It came at me like a train.\"\n\n\"I know baby. It was the horn, right?\"\n\n\"I just... I felt it coming and I couldn't stop it. I didn't know what to do.\"\n\n\"The first thing you do next time is tell me rather than running away from me.\"\n\nShe hugged me tightly. \"Blue...\"\n\n\"I'm here Jo.\"\n\n\"I want to be past this shit.\"\n\n\"Jo, it's just\u2014\"\n\n\"\u2014going to take some time,\" Jo finished in unison with me. \"Fuck.\"\n\nI pulled back and smiled at her. \"That's right baby. But it's time that I'm going to be here for. I'm not going anywhere. I just need you to turn to me instead of running from me.\"\n\n\"I know... I know Blue, I just... I've never dealt with shit like this in my life. Still getting used to the idea.\"\n\n\"I think a big part of your problem was that you didn't deal with it when your mom died. You just walled it off.\"\n\nShe stiffened and I wondered if I'd crossed a line. But she sniffed and said, \"You've never said a truer thing to me.\"\n\n\"I think you're more open now when things are bothering you though. And I think that's healthier. That's one good thing to come out of your crash.\"\n\nShe looked up at me and the ferociousness of her response startled me. \"It's not because of the crash! It's because of you, Blue! You pulled me out of my shell. I'd started down that road months before my bird went down, and it's because of you. Don't ever say otherwise.\"\n\nI smiled at her then leaned down and wrapped my arms around her again, cocooning us both in my blue hair.\n\n\"This is a role reversal from a few weeks ago, isn't it?\"\n\nShe laughed then found my lips with hers.\n\n\"It'll be my turn again someday.\"\n\n\"I'm here for it, Jo.\"\n\nJust then we heard voices as the rest of the band started coming onto the bus.\n\n\"Fuck, I don't want them to see me like this,\" Jo whispered, rubbing her eyes with the back of her fist.\n\n\"I got you baby,\" I whispered back. I stood up and went to the door of the bedroom and looked out.\n\n\"Hey Jill, everything okay?\" Suzanne asked me with concern on her face.\n\n\"Yup, all good! You're just interrupting a heavy make-out session. Let us know when we get to Ocean City!\" I said and shut the door.\n\n\"Ick!\" Steve yelled through the door at me.\n\nJo gave a bark of laughter, then dissolved into giggles, falling over on her side.\n\n~~ Ocean City, Maryland ~~\n\nJO\n\nDue to the band's show schedule in Ocean City, they'd decided to do the beach jam their first night in town.\n\n\"Just so you guys know, if some surfer hits his head this year, it's someone else's turn to save him.\" Jo was on one side of the giant cooler they'd filled with beer and ice as she helped Steve carry it out to the firepit, her mandolin case in her other hand.\n\n\"I nominate Jill since she's the best swimmer,\" Larry said, his djembe under one arm and a guitar case in each hand.\n\n\"I should stretch then, it looks rough as heck out there today,\" Blue joked.\n\nUnlike the year before, the ocean was almost totally calm, with rollers barely a foot-tall breaking along the shore, and a light ocean breeze blowing inland. There wasn't a surfer in sight as the sun dipped towards the horizon behind the house.\n\n\"Who's starting this year?\" Steve asked as everyone settled around the firepit. Jack and Larry had piled wood high, but were holding off lighting it until the sun was fully down.\n\n\"Me,\" Jo said, holding out her hand to Larry as he broke out the guitars and handed her one.\n\nSteve raised his eyebrows. Jo usually just provided guitar licks behind what everyone else decided to play, she rarely took the lead on a song unless it was a classic sing-alone everyone knew the words to.\n\nJo opened the ice chest and pulled out a Corona, twisted the lid off and stuffed a couple of lime slices from a Ziploc bag down the neck, took a big swig, then sat down with her guitar and beer in the chair next to Blue.\n\n\"You ready, Blue Girl? I expect you to jump on this quick.\"\n\nBlue had lifted her accordion out of its case and slipped on the shoulder straps. \"Ready as I can be.\" She flexed the bellows.\n\n\"Alright, let's do this,\" Jo said. She cracked her knuckles, licked the tips of her fingers then starting picking the strings. The song was instantly recognizable and Suzanne and Larry jumped right on it, with Blue joining in a bar after. It was such an easy melody and the sound of her accordion fit right into the tune and Jo started singing.\n\nAll I can say is that my life is pretty plain,\n\nI like watchin' the puddles gather rain.\n\nEveryone joined in, singing along with Jo.\n\nI just want someone to say to me, oh, oh, oh, oh.\n\nI'll always be there when you wake, yeah,\n\nYou know I'd like to keep my cheeks dry today,\n\nSo, stay with me and I'll have it made,\n\nAnd then the beach jam was off to the races, Steve doing a rousing version of Matchbox Twenty's Real World. After a half hour they'd gathered a small crowd, which grew and shrank as people passing by on the beach stopped for a bit to listen or sing along with them. When Jo called out Sara's turn, she looked a little nervous, but she and Blue had rehearsed a song ahead of time so she didn't have to spoil surprising Steve.\n\nBlue started off the melody, which Jo recognized right away and joined in, strumming the chords, which let Blue do the solo part on her accordion as Sara started a surprisingly soulful version of What's Up?\n\n25 years of my life and still,\n\nI'm trying to get up that great big hill of hope,\n\nFor a destination.\n\nThe rest of the band and their new audience joined the chorus.\n\nAnd I say, hey yeah yeah, hey yeah yeah\n\nI said hey, what's going on?\n\nLater, after the passers-by had all wandered away and the night had started winding down, Blue said, \"I have another one I want to do.\" She'd lead on three songs that night, including a much-improved reprise of If I Had $1,000,000. Jo was surprised she had more in her but nodded and settled her guitar on her knee.\n\nWhen she started the intro on her accordion, no one recognized the song, but it was clear she'd practiced it. Larry and Suzanne joined in with a basic beat, but the rest of them just watched her as she met Jo's eyes and started singing.\n\nO-o-o-h, my soul, sometimes we don't know what to do.\n\nWe work so hard being tough on our own,\n\nBut now it's me and you...\n\nLet's give it up, sad bones, 'cause we all fall on hard times\n\nBut you don't have to stand up all alone, just put your hand in mine\n\nBoth Jo and Steve had started trying to pick out a chord progression as Blue played, until Jo stopped, and Steve trailed off with her. She folded her hands on the top of her guitar and just watched her Blue Girl sing to her.\n\nClimb o-o-o-o-n, a back that's str-o-o-o-n-g, Hey hey.\n\nYou can get what you want, climb on a back that's strong.\n\nAs Blue went into the second verse, Jo was perched like a statue on the edge of her chair, watching her.\n\nAnd if you could show me the story of love,\n\nI would write it again and again\n\nAnd then you could be the woman you need\n\nIf you just let me be the woman I am!\n\nClimb o-o-o-o-n, a back that s-t-r-o-o-o-n-g!\n\nJo smiled, her eyes glistening, as Blue stared back at her, her voice carrying across the beach.\n\nSometimes we try too hard to see,\n\nBut we got one down now, one more to go.\n\nThat's when you say... to me...\n\nClimb o-o-o-o-n, a back that s-t-r-o-o-o-n-g!\n\nAs the last accordion notes died away there was a moment of silence, then Larry said quietly, \"Well, we've been looking for a good ballad to add to our playlist. I think you found it, Jill.\"\n\n\"Yeah...\" Suzanne voice was brimming with emotion. \"Yeah, Jill you're doing that on stage for sure.\"\n\nJo got up from her chair, set her guitar down and pulled Blue to her feet and kissed her, the accordion sandwiched between them.\n\nShe pulled back, holding Blue's hands and turned her head to Steve and said, \"If you say 'ick', I'm going to pick you up and throw you in the ocean.\"\n\nSteve grinned. \"No 'ick', that was totally well-earned. That was beautiful, Jill.\"\n\nWhen they fell into bed that night, it wasn't the rough passion of the nights they'd spent together at the farm. Jo gently undressed them both, then stretched her body atop of Blue's looking down into her eyes in the soft light of the lamp on the bedside table. She ran one finger along Blue's cheek, then kissed her.\n\n\"How long have you known you were going to do that song tonight?\" she asked.\n\n\"Maybe a month. I was going to ask Steve or Jack to figure out a guitar part to accompany me, but when Henry gave me that accordion, I knew I could do it myself.\"\n\n\"You sang that for me.\"\n\n\"Of course.\"\n\nJo went silent, staring into Blue's eyes for so long she said, \"Uh... Jo? You okay?\"\n\n\"Yes,\" she whispered. \"I love you so much.\"\n\nBlue smiled. \"I love you too.\"\n\nJo kissed her again, then moved her mouth down Blue's neck. She dragged her tongue over Blue's special neck spot, causing her to gasp, but then moved on, so as not to trigger a quick orgasm. She took her time, moving down slowly, spending long minutes and attention on Blue's breasts, as Blue ran her fingers through Jo's short, thick hair.\n\nJo moved lower, kissing Blue's stomach, her belly button, the rise of her hip. As she moved between her legs, she could see Blue's lips were puffy with arousal. She rubbed her cheek on the skin above her lips.\n\n\"Did you shave again this morning? You're so smooth.\" She planted little kisses on the skin there, causing Blue's breath to quicken. She gave her a lick, not quite reaching the top of her cleft. \"I really like this. I want you to do this for me.\"\n\n\"Right now?\" Blue gasped.\n\n\"No.\" Jo smiled. \"But soon.\" She lowered her head and licked at Blue's lips. Her clit was already engorged, and Jo found it on the first stroke of her tongue, causing Blue to cry out. Jo slid her hands under Blue's legs, and found her hands, lacing their fingers together. The she slowly and firmly started lapping at Blue. As she approached the edge, Jo slowed, never stopping, but teasing and drawing it out.\n\n\"Oh god, Jo, not this again!\" Blue whined, squirming under her ministrations.\n\nJo loved teasing her, but tonight... tonight she only wanted to give Blue what she wanted. Anything she wanted. Everything she wanted. She flattened her tongue and pressed against Blue's clit, holding her head motionless and swirling her tongue in steady, insistent circles.\n\nIt took no time at all until Blue was thrusting her hips up at Jo's mouth and moaning, then she tensed and hissed \"Yessssssssss!\", crushing Jo's fingers with her own.\n\nJo licked her through her orgasm, then scooted up slightly and rested her cheek on Blue' stomach, and sighed happily.\n\n\"God, Jo, that was... that was really good.\"\n\n\"I feel like I'm just taking from you all the time. I want to give to you more. Doing that to you makes me really happy.\"\n\n\"Well...\" Blue said, catching her breath, \"there is something I want to take from you, if you're okay with it. It's pretty personal.\"\n\nJo raised her head and looked at her. \"You can have anything I have to give.\"\n\nJILL\n\n\"You sure you want to do this, Blue? 'Cause once we start, there's no turning back. You know that, right?\"\n\nI lay on my stomach, my naked back exposed. \"I'm sure, Jo.\" I reached out and grabbed Jo's hand tightly. \"Do it.\"\n\n\"Okay, here we go.\" Jo nodded.\n\nA loud buzzing sound filled the room and I sucked in a breath.\n\n\"Wow, that hurts more than I thought it would,\" I said.\n\n\"Need me to stop?\" The tattoo artist asked me.\n\n\"No, do it.\" I squeezed Jo's hand tighter. \"I'm just glad it's small.\"\n\nJo held my hand and watched as the woman wielded her instrument, tracing the design she'd drawn between my shoulder blades. We passed the time mostly in silence, punctuated by my occasional sounds of discomfort.\n\nWhen the buzzing stopped, the woman wiped my back with a soft cloth and looked at her artwork critically. \"I think I nailed your design. What do you think?\" she asked Jo.\n\n\"Perfect,\" Jo said.\n\nI now had a small, two-inch long silhouette of a Bell-47 on the left side of my back facing my spine, and on the other side were the characters \"N4077Z.\" It was identical to the one on Jo's back, except mine was in indigo blue.\n\nThe tattoo artist covered it in petroleum jelly and a transparent bandage, and gave me a sheet of paper with after-care instructions.\n\n\"Your first tattoo. What did you think?\" Jo asked as we walked out into the morning sunshine.\n\n\"I think I need to take the test to get my pilot's license so I can start catching up to you. You've got seven and I just have the one. I want more.\"\n\n\"I like that you made yours blue instead of black. Makes me wish I could go back and do mine in that color now.\"\n\n\"Do you think your dad will teach me to fly the other models you guys have too?\"\n\n\"No.\"\n\n\"Really? Why not?\"\n\nJo smirked at me. \"Because now that I'm in on your secret, I'm going to teach you instead of dad.\"\n\n\"Can I wear a schoolgirl outfit?\"\n\n\"Only if you want us to fly us into a mountain when I'm on the stick.\"\n\nI laughed. \"Well, I mean if we gotta go, that's\u2014\" I was interrupted by the screech of tires and car horns.\n\nOver Jo's shoulder, I saw a car trying to speed through a yellow light on Coastal Highway, while an SUV coming the other way was turning left. They hit head-on with a loud crunch of metal and glass. Jo spun around in a defensive crouch, then slowly straightened up when she saw what had caused the noise. Both drivers got out, yelling at each other, apparently unharmed.\n\nI looked over at Jo. Her eyes were squeezed shut. \"Baby?\" I asked.\n\n\"Blue... I can feel it coming. I can't...\" She reached out and blindly pawed with her hand until she found mine. \"Don't leave me.\"\n\nI looked around and saw a Starbucks two doors down from the tattoo shop. \"Jo, come with me.\" I towed her down the sidewalk and into the Starbucks. I gave a silent prayer of thanks that the big leather couches at the front of the store were unoccupied and sat Jo down on one, sitting on the coffee table in front of her with her legs between my knees. I rested my forehead against hers, holding her hands in mine.\n\n\"Okay Jo, just focus on me. Feel my breathing. Count with me. One... two...\"\n\n\"Three... four...\" Jo didn't fight me, she just sat with her eyes closed, feeling my breath on her face as I exhaled and counting with me. I concentrated on taking deep, regular breaths. \"Five... six...\"\n\nThis time it only took her until twenty-five to calm her own breathing, although she continued to sit motionless with her eyes closed, leaning her forehead against mine, shaking almost imperceptibly.\n\n\"Hey, are you guys okay?\" I turned my head to see a young woman in a Starbucks apron standing behind me, looking concerned.\n\n\"We're okay, thanks. Can we have two venti iced teas, please?\" I smiled encouragement at her, still holding Jo's hands as she sat there with her eyes shut tight. The woman gave me a look of understanding and walked back to the counter.\n\n\"That was... less bad than last time,\" Jo muttered as she opened her eyes, looking at her feet.\n\n\"That's good,\" I said encouragingly.\n\nShe smiled, took a few more deep breaths, then raised her eyes to mine. \"Thanks, Blue.\"\n\nWe walked back out into the sun a half hour later sipping our iced teas.\n\n\"Well, that wasn't exactly how I'd thought this morning would go,\" Jo said.\n\n\"Nope, but it worked out and we're okay, right?\" I said, holding her hand.\n\n\"We are. I am. Thanks.\"\n\n\"So, what do you want to do now?\" I looked up and down the street. \"There's a tourist-trap souvenir place down the block. Want to go look at trashy t-shirts?\"\n\nJo smiled, staring into the distance. \"Actually, I think I need to go run an errand. Can I meet you back at the house in a bit?\"\n\n\"Jo?\" I asked worriedly.\n\nShe looked at me and her face softened. \"Blue, I'm not running away from you, I promise. It's passed now, and I'm okay thanks to you. I just need to go do something and I need to do it myself. Is that okay? Trust me?\"\n\nI searched her face. She seemed okay. Like... my confident Jo. \"Okay. But don't take too long. Remember tonight's the Secrets show. We're gonna rock the hell out.\"\n\nShe laughed. \"I wouldn't miss that for the world. We're doing Feeling You again tonight, right?\"\n\n\"I'll do that song with you anywhere and anytime you want baby.\"\n\nJO\n\nJo walked into the house two hours later, to the sounds of laughter. As she turned the corner to the kitchen she stopped cold.\n\n\"Dad!\" she exclaimed. Henry was in the kitchen with the rest of the band. \"What are you doing here?\"\n\n\"Jocelyn, is that any way to greet your old man?\" Henry was grinning ear to ear. \"I was doing line work up near West Chester with Pepco this week. There was a big storm upstate and they had to redeploy some guys so I got pushed off until next week. I thought I'd come out and see my kids play at this 'Secrets' place I've heard so much about, flew in a couple hours ago.\"\n\n\"That's great!\" Jo said coming into the room. \"We can tune up one of my spare guitars for you and you can do a song with us on stage tonight!\"\n\nHenry's grin lessened slightly. \"Uh...\"\n\n\"Ha! See dad? How do you like being on the end of the surprise?\" Jo smirked as Steve and Larry chuckled.\n\n\"I mean, it does sound like fun, dad,\" Steve said.\n\n\"We'll see, kids. If I do then I get to choose the song.\"\n\n\"Fair enough,\" said Jo. \"I don't know about the rest of you, but I'm ready to rock, I just need to go change before we head over.\"\n\nBlue followed Jo into their room. \"Everything okay, baby?\" she asked.\n\n\"Yup, all good,\" Jo answered as she stripped off her t-shirt and started digging through her bag.\n\n\"Do you, uh... do you want to tell me where you went?\"\n\nJo stopped and stood up. \"I do, Blue. Just not right now. I promise, it's nothing bad. Okay? Trust me?\"\n\nBlue walked over and hugged her. \"I trust you.\"\n\n\"Good,\" Jo said, then resumed digging in her bags. \"A-ha, here it is.\" She pulled out her tight, sleeveless Captain Marvel t-shirt and pulled it over her head, the gold eight-pointed star settling at the center of her chest.\n\n\"Oh ho... going to be that kind of night, huh?\"\n\n\"Bet your pretty little butt it is.\"\n\n\"Well then, I'm glad I got something to go with it for the tour.\"\n\nBlue dug in her own bag and pulled out a wrapped package, then pulled her dress off. Jo looked up and down her body, taking a step towards her.\n\n\"Think we have time for...?\"\n\n\"No, silly. If we did that, we'd hold up everyone for a couple hours and we have to go set up on stage. Also, I'm not about to do that while your dad is right out there.\"\n\nJo sighed. \"Okay. What's this thing you got for the tour?\"\n\nBlue took off her bra, then opened the package and unwrapped a dress which she pulled over her head. It was similar to her usual sundresses, with thin shoulder straps, but the square neckline was a little higher than usual. The dress was dark, almost midnight blue and came down nearly to her knees, with a wide, flaring hem which swirled around her legs. There were yellow comets and shooting stars printed all over it. A giant image of Saturn the size of a basketball covered her right thigh with a smaller image of earth on her left side under her breasts.",
        "\"Whoa...\" Jo breathed. \"That's...\"\n\nBlue spun around, showing Jo that the back dipped all the way to her waist, with a webbing of strings crisscrossing her back. Jupiter and Mars were on the back of the skirt. You could see her new helicopter tattoo through the strings, the clear bandage still covering it.\n\n\"Hot!\" Jo finished.\n\n\"You're Captain Marvel? I'm your territory. Make sure you keep a close eye on me Carol.\"\n\nJo laughed and gave her a kiss. Then another one. She gave the door a side-eye.\n\n\"You sure we don't have time for a little...\"\n\n\"Jo!\" Blue laughed. \"Save it for tonight when we get home!\"\n\nJo sighed. \"Okay, okay. Let's go rock.\"\n\n~~ Secrets Ocean Bar, Ocean City, Maryland ~~\n\nJILL\n\nFrom the start, I could tell it was going to be a great night. The space was packed with people ready to dance. I was going to play the whole second set, but I was in the crowd with Sara and Henry for the start of the show. Just like last year, they took the stage in the dark. Jack announced \"Ladies and gentlemen, The Rotors,\" over the P.A. from his soundboard and the lights slowly started to come up in time with the building sound of Jo's guitar as they started off with Everlong by Foo Fighters.\n\nBy the time they hit the chorus, the lights had come up all the way, and Jo was hammering the chords as Steve sang. Jo looked around and found me in the crowd as she mouthed the words along with Steve during the chorus, her eyes on mine.\n\nAnd I-I-I-I-I wonder, when I sing along with you,\n\nIf everything could ever feel this real forever,\n\nIf anything could ever be this good again?\n\nThe only thing I'll ever ask of you,\n\nYou've got to promise not to stop when I say when...\n\nMy god, I loved this woman.\n\nThe band kept their tradition of doing harder rock stuff when playing Secrets and pulled out another song I didn't know, one the band had apparently worked up for Jo to sing when I hadn't been there. It was almost metal, with Suzanne, Steve and Jo all amping up their distortion as Jo sang the intro.\n\nI do admit, I've come to like the attention, the heavy look in your eyes.\n\nSo, break a piece off of my latest obsession, a taste of pure paradise.\n\nShe met my eyes over the crowd again.\n\nI like the buzz deep 'cause of what it does to me\n\nI get a fuzzy feeling washing over me\n\nI get a rush now honey when you're touching me.\n\nIs it love? Is it love? Is it love? Is it l-o-o-o-v-e?\n\nHer voice became raw, as she screamed the lyrics into her mic.\n\nI can't sleep, I can't think now\n\nI can't breathe without you\n\nTouching me, is it love or a drug?\n\nIt's a buzz, buzz, buzz!\n\n(I like it!)\n\nI was bouncing with the crowd so hard, I could feel the jarring in my new tattoo every time my feet hit the floor.\n\nAt the set break, the band came out to meet Henry, Sara and me at the bar, where I had a bucket of Coronas at the ready.\n\n\"Holy moly, you guys are on fire tonight!\" I said.\n\n\"Feeling good, feeling right,\" intoned Larry, accepting a beer from me and slipping his arm around Suzanne.\n\n\"Hell yeah,\" Suzanne agreed. \"This is what we came for.\"\n\nHenry looked around the circle. \"I think I need to apologize to all of you for not coming to this show before this summer. You kids are... well, you're a really special group. You're amazing, not just up there, but every day. Although you're especially amazing up there tonight. I'm sorry I haven't gotten to see you play here before tonight.\"\n\nJo threw an arm around him. \"Does that mean you'll come play with us in the second set?\"\n\n\"C'mon dad, you gotta do it. Just one song,\" Steve chimed in.\n\n\"You know it'll only be classic rock. Am I gonna spoil your vibe?\"\n\n\"Henry, we'll do any song you want,\" Suzanne said.\n\nHenry grinned. \"Well then, you can call me the Sultan of Swing.\"\n\nJo laughed. \"Hell yes.\" She raised her beer and we all clinked the necks of our beers in a circle, like a rowdy group of musketeers. \"As long as you know Steve and I are going to add The Rotors touch to it.\"\n\n\"I'd expect no less from my kids,\" said Henry.\n\n\"We'll do that one to start the second set, then we'll bring Jill up for the rest of the set and we'll Party Hard,\" said Steve.\n\nAfter a few minutes of shop talk about what had gone right and wrong in the first set, I noticed Jo had a distant look on her face.\n\n\"Everything okay, Jo?\" I asked.\n\nShe shook herself and her eyes focused on me. \"Yeah, everything's just great Blue. This night is just what I needed.\"\n\nI rubbed her arm and smiled at her. \"I'm glad I can be a part of it.\"\n\nShe shook her head again and said, \"Hang on, I need to try something. Be right back.\" She walked over and tapped Larry on the arm, then leaned in and spoke in his ear. He grinned and nodded and they walked away from us, gathering Jack as they left.\n\nWhat in the world was my Jo up to now?\n\nJO\n\n\"This is a bad idea Collins,\" Little Voice told me.\n\nDon't worry, Little, I got this, I thought as I walked out onto the darkened stage. Most of the audience didn't notice me coming out and picking up Layla, or see Larry taking his place behind the drums. I checked my pedals and settings.\n\n\"But the last time you played this, you sucked!\" Little was clearly worried about me embarrassing myself, but I had this in the bag. I knew what I'd done wrong.\n\nI pointed to Jack at his soundboard and the house lights went down, as Jack brought up all the blue and green stage lights, putting a blue spotlight on me. My favorite look on stage. I could see the surprise on Steve, Suzanne and Blue's faces to see me up there without them as I hit the opening notes of Little Wing, and the crowd all stopped talking and turned their attention to me.\n\nI could tell from the opening chord, I had it. I had this cold. Larry starting filling in behind me with his slow, jazzy rhythm.\n\n\"Whoa, Collins. Where is this coming from? You sure as hell didn't have this at the barn!\"\n\nI leaned my head back, closing my eyes as I stretched out the blues riffs.\n\nI was reaching for the wrong thing, Little, I thought.\n\nIn the past, every time I'd played this song, I'd been fighting sadness, loss, pain. I poured my pain into the song, as an outlet for my loss, a respite from my sadness. And I just didn't have enough of it now. Not since I'd let Blue into my life. She'd filled the hole in my heart, then opened that heart so I could let my family, friends and the world further in. I wasn't nearly as worried about the future. Scared of what was to come. Despairing of what I'd lost. I didn't have enough blues to pour into the blues anymore.\n\nBut I realized that wasn't the only way to play the blues.\n\nThe crowd was mesmerized, I could tell I had them in the palm of my hand. Heads were slowly nodding along with me. Couples were swaying together, their arms around each other. People started holding up their cell phones as ersatz lighters, swaying them back and forth. I was feeling it so hard. During a riff where I was just doing hammer-ons on the neck, I whipped off my Rotors hat with my free hand and threw it like a frisbee into the crowd, tossing my head to flip my hair back off my forehead. I didn't want to hide my face anymore.\n\nI've always used pain to fill this song, Little. But that's not the fuel I've got now. Now I've got Blue. We've got the future. This is what I should have been reaching for.\n\n\"Whatever you're doing, it's fucking working. Don't stop.\"\n\nIt was working so well that when I neared the end of the song, I half turned and made a quick circle gesture with my finger to Larry, who caught it immediately and stayed with me as I stretched out my jam another dozen bars, improvising a long section I'd never done before, departing from Stevie Ray's lead. I didn't know if I'd ever play this well again and I wasn't ready for it to end. I could feel it moving through me, as I took the sadness out of the song, and replaced it with joy and hope, making the notes soar.\n\nWhen I let the last notes die away, the applause from the crowd was thunderous. But I only had eyes for the girl in the back. The girl with the blue hair and the smile on her face.\n\n~~ The Beach House, Ocean City, Maryland ~~\n\nJO\n\n\"Jo, we've walked too far! I don't want you to overdo it again.\" Blue was clearly worried, but there was no stopping me until I got us to our destination.\n\nWe were walking along the packed sand of the beach, near the high-tide line. After we got back to the house from Secrets, I'd pulled Blue outside for a nighttime stroll. Our beach walks last summer meant so much to me. They'd helped pull me out of my shell, to open up to her. I hated it at the time, it had felt like weakness. It had been terrifying. But I could recognize now how important that process had been in bringing us together.\n\nShe was right, though. My leg was hurting, after doing two ninety-minute sets at Secrets. I felt like I'd gotten my jump back to a place I liked on stage, though. I could only take off on my right leg, so I wasn't getting the height I used to have, but at least I'd figured out my landing. It was still a little jarring landing with my bionic leg, as I thought of it now. Thanks dad. The only reason I knew about The Bionic Woman at all, was because my dad had made me watch an episode on YouTube at the farm after he'd called me Jaime Sommers and I'd just looked at him blankly. Dad's such a smartass. But now every time I jumped on stage, I heard the cheesy sound effect in my head. Nuh-nuh-nuh-nuh-nuh My apple didn't fall far from his tree.\n\nI knew we'd passed into Delaware, but I was looking for a specific landmark as I towed her along by the hand.\n\n\"Don't worry Blue, we're almost... A-ha! There it is!\" I pointed across the beach from us. \"See? That one with the widow's walk and the flagpole on the roof? I knew I'd recognize it when we got here.\" The house I pointed out was brilliantly lit up by the full moon shining down over the beach.\n\n\"Oh! I recognize that house, that's...\" She stopped and looked around. \"This is where...\"\n\nI kissed her. \"This is where we had our go/no-go call,\" I said.\n\nShe looked back at me. \"I know that what happened to bring us here that night was an unpleasant memory for you, but that moment... it really meant a lot to me when you took my hand.\"\n\n\"That moment was everything. It's one of the memories of last summer I've never needed any help remembering. It's when I really knew you were getting in my kitchen. At the time it scared the hell out of me, but now... I'm just so glad you had the guts to follow me up here.\"\n\nShe smiled. \"My big, strong Carol Danvers needed me that night.\"\n\n\"I did, Blue. And I always will. So...\" I straightened my shoulders and huffed out my breath to settle my stomach. Not working. Another breath.\n\n\"Just do it, Collins,\" Little said.\n\nI awkwardly knelt down in the sand. This prosthetic was really good for walking, but they clearly didn't spend much effort during design to make it easy to get down on one knee. I guess I couldn't blame them, most people only wanted to do this once in their lives.\n\nShe didn't say anything, just softly gasped and held the fingers of her right hand over her mouth as I held tightly onto her left and reached into my pocket to pull out the ring I'd agonized over that morning at Park Place jewelers. I held it out so she could see it. It was a simple design, a platinum band, with a cluster of diamonds encircling a marquise-cut stone. I frowned at it.\n\n\"I know in the moonlight this stone looks black, but I swear when we get somewhere with real light you'll see this is a sapphire the color of your hair.\"\n\n\"Jo!\" Blue squeaked. She couldn't get out anything else as her eyes filled with tears.\n\n\"Blue, I don't think I would have made it through this last year without you. And I don't want another second of uncertainty that I might ever be without you again. I need to lock this down. Will you marry me? Can we be Mrs. Jo Collins and Mrs. Jill D... Jill D...\" Not now, I thought. I closed my eyes and focused. \"Mrs. Jill D... Doran.\" I got it out! I smiled at myself and looked up at her.\n\nShe swallowed several times, then said, \"No.\"\n\n\"No?\" I suddenly felt sick. Did I misread us? Was she not in the same place as me? God, I was so bad at this.\n\nShe tried to speak, but her voice caught. She cleared her throat then tried again. \"No. You told me that you're my family now. I'm only in if I can be Mrs. Collins too. If we can be Jill and Jo Collins.\"\n\nTears filled my own eyes now. What in my life had I ever done to deserve this woman's love?\n\n\"Okay,\" I rasped.\n\n\"That's a yes?\" Jill asked me, as she knelt down on the sand in front of me too.\n\n\"God, yes,\" I whispered to her. \"Mrs. Jill Collins. You can be that all day long, Blue. All the rest of your life.\"\n\nShe kissed me hard, her hand cradling the back of my head, fingers caressing my scar there. Then she looked down at the ring again as I slipped it on her finger. It was at least four sizes too big, and she laughed at me.\n\n\"Did you think you were marrying Jennifer Walters?\"\n\n\"You're blue, not green. It was the only size they had in this one, and I knew the stone had to be this shade of blue. They said anyone can resize it for us. So, I need to be clear, since I'm so bad at this, we're a yes on both sides now? We're a go?\"\n\nShe threw her arms around me, crying and laughing.\n\n\"Yes! I'm a go, Jocelyn! We're a go, you and me!\"\n\n~~ Epilogue ~~\n\nIt happened the day following my proposal to Blue. We did an afternoon concert on the boardwalk, then spent the rest of the daylight left to us in the pool. My biggest gripe of the day was that I couldn't walk straight off the deck into the pool like I did last year, I had to sit down and take off my prosthetic first. The trials of modern medical technology.\n\nWe didn't do a full-fledged second beach jam that night, but we did sit around the fire pit after dinner, talking and doing a few songs. Blue was getting really good on her accordion. I'd asked her to sing Climb On again so dad could hear it.\n\nWe'd reached the point where we were all played out, no tunes left in us, and the night had settled into a happy, drunken calm. Blue had just gone into the house to visit the little girls' room. Larry was in his usual end-of-the-night position, sitting on the sand leaning back against Suzanne in her chair. My dad was discussing the finer points of mandolin picking with Jack, who currently had my red one in his lap, while Steve and Sara were cuddled in a chair together whispering about wedding plans. For themselves or Blue and me, I wondered? Plenty of time to figure that out later. I'd need to leave most of those details up to Blue, that was so outside my comfort zone. I'm sure Sara and Suzanne would be there for it too.\n\nI was nursing my fifth Corona of the night (or was it the sixth?) and happily thinking about how Blue had wrapped a Band-Aid around the inside of her ring so she could wear it until we had a chance to have it resized for her. She had been showing it to everyone she could possibly interest in a look. The clerk at the liquor store had even gotten a viewing when we'd stopped to get beer tonight.\n\n\"Collins...\", said Little Voice.\n\nI rolled my eyes and got up out of my chair, as if to stretch, and walked a dozen steps out of the firelight to face the ocean.\n\nWhat do you want, Little? I haven't fucked up all day. In fact, I haven't fucked up in a while now, I thought.\n\n\"No, no you haven't. You're good now, Collins. I'm here to say goodbye.\"\n\nWhat? Little, what do you mean? I suddenly felt my stomach twist.\n\n\"You don't need me anymore.\"\n\n\"But... I don't understand,\" I muttered out loud. What do you mean, goodbye? You're leaving me?\n\n\"You've needed me since mom died, but look around you... Collins, look at what you have now...\"\n\nI turned and looked at my family sitting around the firepit. Dad. Steve and Sara. Suzanne and Larry. Jack. Blue was just coming back down the steps from the house to the sand, my ring glittering on her hand in the firelight. My Blue Girl... I turned back to face the ocean.\n\n\"But Little... what will I do without you?\" I whispered. Tears stung my eyes.\n\n\"It's okay, Collins. You're going to be just fine. If there comes a time when you need me again, I'll be back. But you got this.\"\n\n\"Hey there, Mrs. Collins,\" Blue said jokingly, slipping her arms around me from behind. I turned to look at her and concern clouded her face. She wiped a tear off my cheek. \"Jo, what's wrong? Are you okay?\"\n\nI sniffed, looking at everyone around the fire again, then back at her.\n\n\"Collins... Jo... You and Blue have a great life ahead of you. You both have everything you'll ever need, right here.\"\n\n\"Yeah, I'm okay.\" I hugged her. She wrapped her arms around me again and I settled my cheek against her shoulder, breathing in her smell. I squeezed her tighter. \"I've got my Blue Girl.\"\n\n\"You've got the aircraft now, Jo.\"\n\nThe end\n\n~~ Author's Postscript ~~\n\nThank you for coming on this journey with me, friend.\n\nThis isn't the end of Jo and Blue's story, but it is the end of me writing it. This is their happily-ever-after, and while watching them get here made for a good tale, I feel they deserve some time to themselves. They've worked hard to earn it.\n\nAgain, my most sincere and grateful thanks to all of you who have been here for me with your kind and supportive comments and emails, starting with my very first chapter of Hard Landing. You gave me the encouragement I needed to bring us here to this moment. Special thanks again to my editor, ThisNameIsntTakenYet. This series wouldn't have been what it was without him.\n\nI'll miss you, Jo and Blue. But you have a great life ahead of you. You have everything you'll ever need, right here.\n\nYou've got the aircraft now, friends.\n\n~~ Post-Postscript ~~\n\nI want to take a moment to say that I'm not a veteran, I've never served, I've never flown in a helicopter, I've never personally dealt with PTSD, nor has anyone in my circle of family and friends.\n\nOne of my greatest fears during my storytelling has been that my depiction of Jo and her recovery might somehow short-change military personnel or veterans who may be struggling themselves. PTSD and traumatic brain injuries are difficult conditions that I'm sure I can't begin to imagine what it's really like to have to deal with. I'm guessing there's almost no chance that in a real scenario similar to the one I depicted with Jo that she would recover as fully or quickly as she has in my story. So, to any actual veterans or military who read this and thought, \"What the hell does she know?\", know that you are right, and I apologize if anything in this series came off as insensitive or unrealistic. Just know that I was trying my best with the dubious help of the internet.\n\nU.S. military personnel, both active duty and retired, commit suicide at rates that far outstrip the general population. If you or someone you know is struggling, I want you to know, I need you to know that there is help. Please reach out to suicidepreventionlifeline dot org or veteranscrisisline dot net for suicide prevention help, or for help with PTSD at PTSD dot VA dot org.\n\nTake care of each other, friends."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "gay romance",
        "lesbian",
        "lesbian romance",
        "love story",
        "romance",
        "lesbian drama",
        "drama",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hard-landing-ch-08"
}