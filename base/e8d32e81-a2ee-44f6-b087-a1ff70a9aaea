{
    "title": "The Second Hundred Years-Sequel Ch. 03",
    "pages": [
        "I suggest you read Parts 1 &amp; 2. It will explain the characters and events so far and how they flow into this continuation.\n\nPart 3 became longer than I intended, but my characters wouldn't let me stop until their story was told completely.\n\nConstructive comments, emails, and critiques are more than welcome and very much appreciated.\n\nI hope you enjoy the story.\n\n<p align=\"center\">********************</p>\n\nThe Randals, all four of them, trooped into the den after supper as if they were on a mission. William took Chante's journal from the mantel and sat in his big easy chair. James once again sat at his feet on the ottoman; Lewis and Alyssa pulled their own easy chairs closer.\n\n\"Grandpa before we start will you tell me about our family, I mean like since Grandpa Jim,\" young James asked. \"Most of the kids at school don't know their family back very far.\"\n\n\"Okay, I can do that for you,\" William replied. \"Let's see, guess I'll start with James and Chante. They married in 1889 and had John in 1890. Then John and Morning Star married in 1908 and had a son they named William in 1909. With me so far?\"\n\n\"Yes sir,\" James answered.\n\nNext William and Sarah married in 1926 and had a boy named John Ambrose in 1927. John married Rebecca and they had a boy in '46. Which was 'Me,\" William said making a face and smiling. We're getting closer son. James giggled and smiled back.\n\n\"Your Grandma Susan and I were married in 1962 and had John in '63. He married Ellie in early '82 and they had your Daddy that same year. Then you were born in 2008.\" William stopped then said, \"Whew, and there you are. Your family history all the way back to 1890.\"\n\n\"It's really confusin,\" James said. \"I mean with all the kids named John and James and William.\"\n\n\"That's a fact son,\" Lewis added. \"But it's a way to honor the family before you.\"\n\n\"You mean like the Lakota?\"\n\n\"Just like that son.\" Turning to William Lewis said, \"You know I never thought about it before but all of our male ancestors had one child; a son and no other children. Sorta strange.\"\n\n\"This isn't the first time I've thought about that,\" William replied. Returning his attention to James he held up the journal and asked, \"You remember where I left off last night?\"\n\n\"Yes sir. You'd just read how Grandpa Jim disappeared and that Grandpa Iron Buffalo and Uncle Will looked for him until winter.\"\n\n\"That's right.\" William opened the journal and took up where he had left off previously.\n\nAugust, 1891\n\nI have stopped crying every night when I go to bed. I still miss James but I have our son to raise and Eagle's Nest to take care of. The ranch will belong to John one day.\n\nWill has become a part of the family. He does most of the outside work with the cattle and around the ranch. James had told me that his brother had not wanted to be a rancher and left for California when their father died. Looks like he has changed his mind. I don't know if it is because he wanted to come home or because James has left us but he has taken over running the ranch and I'm glad he is here.\n\nAt first Will lived in the bunkhouse with the two cowboys he hired to help him with the round up and branding. I finally got him to move into the downstairs bedroom in the lodge. He loved to play with John and could spend more time with my son living in the lodge. He is James' brother and not a hired hand. Family needs to live with family.\n\nA strange thing happened yesterday. Will came back from the trading post with a cut over one eye and a split lip. He told me he walked behind a horse and got kicked. I don't believe him.\n\nSeptember, 1891\n\nToday I made the ride to the Thomas trading post. John stayed at the lodge with Mrs. King because he has what she calls a cold. There were two men in front of the building when I rode up on Sampson. They quickly stepped out of my way when I went to the door. Nodding at me they mounted their horses and left, spurring the horses into a gallop.\n\nI entered the post and Mr. Thomas greeted me. \"Hello Chante, looks like those two learned their lesson,\" he said. He saw the puzzled look on my face and asked, \"You don't know, do you?\"\n\n\"I don't understand Mr. Thomas. What lesson?\"\n\n\"Last month Will was in here and he and those two got into a ruckus. He liked to beat them to death before I could stop him.\"\n\n\"A ruckus? Oh, you mean a fight. Why were they fighting? Will seems to be a gentle man.\"\n\n\"Well....one of them asked Will how he liked sleepin with a squaw. The other one said some things about you that I couldn't repeat to a lady. Like I said, Will damn near beat those two to death. Pardon my language.\"\n\nWill was sitting on the porch when I got back to the lodge. I walked over to him and as he stood gave him a hug. \"Thank you brother,\" I said. He got red in the face, nodded and said, \"You're welcome. Come on let's eat.\"\n\n<p align=\"center\">********************</p>\n\n\"Why would those men say bad things about Grandma Chante?\" James asked.\n\n\"Back then the Indian troubles and wars were still on a lot of people's minds,\" William explained. \"Didn't matter that Chante hadn't been involved in the fights, she was an Indian and some people didn't like her because of it\"\n\n\"Some people are just plain stupid,\" James said. Lewis smiled at the boy's response.\n\nJune, 1896\n\nI haven't written much lately. It is not that I haven't had the time but it makes me sad to read about losing James.\n\nMy father came to our house today to say goodbye. He is moving the tribe to Canada to live with some other Lakota there. \"I'm getting to old to fight and I won't go to the reservation where the white man tells me I have to live. Bring John Maza to see us, he needs to know of his family and earn his Lakota name.\"\n\n\"Yes father, I will,\" I answered. It was sad to see him and the people leave but I had to stay. James would not want me to give up Eagle's Nest. The ranch would belong to our son some day.\n\nSeptember, 1897\n\nI must get over the sadness from reading some of my words in this journal. I know that James has been gone for over six seasons. But I don't feel as if he is dead. I feel his spirit at our ranch, watching over us.\n\nJohn brings me happiness like a sunrise every time I see him. He looks like his father and has a white streak of hair over his right ear. Just like James. Our son is old beyond his years. He plays and laughs like any child but there is a serious side to him that most children don't have.\n\nSampson and John have become great friends. There is a bond between the two of them. If any of the hands try to saddle him the big horse fights until they leave him alone. One of the men got a nasty bite when he tried to force a saddle on Sampson. Another just missed a kick to his head. It would have killed the man. Sampson will only allow John or me to ride him. He will allow Will to feed and curry him, but even he cannot ride Sampson. I have ordered the men to leave Sampson alone. John and me will take care of him.\n\nA strange thing happened today. Will and our two hands were out finishing the round up so we can drive our cattle to the rail head. Three men rode up to the front of the house and yelled for me to come out. I did not know the men so I carried James' Winchester with me out onto the porch.\n\nThe biggest man said, \"Y'all will have to leave the ranch by next week. We'll be takin over. It ain't legal for an Indian to own land, especially a squaw.\"\n\n\"This ranch belonged to James Randal, I am his wife. Eagle's Nest now belongs to me and my son.\"\n\n\"The boy's not of age and besides he's a half breed,\" the big man answered. \"Course you're a right fine lookin woman. Maybe we would let you stay if you was nice to us.\"\n\nI worked the action of the rifle cocking it. \"I would rather mate with a diseased bear.\"\n\nThe man on the left slowly reached for his pistol. As I aimed the rifle at him we heard a voice from behind the men.\n\n\"If you touch that iron Mister, I'll shoot you outta your saddle.\"\n\nThe three men turned and looked behind them. Will stood with his pistol drawn and pointing at the men.\n\n\"I'm not as fast as I used to be so ifin I have to shoot I'll have to shoot to kill. Don't have the speed to pick my spots anymore,\" Will said. The men slumped in their saddles and Will continued.\n\n\"Now real slow, one at a time, drop your pistols and then your rifles to the ground. You first Mister,\" he ordered, pointing to the man that had reached for his weapon. The three men one at a time slowly drew their pistols and then their rifles dropping them to the ground.\n\nWill ordered them to back their horses up. He picked up the pistols one at a time and unloaded them. He unloaded the rifles next.\n\n\"Just so you know I'm Will Randal. James was my brother. Check the deed on file at the county seat. It shows James and me as the owners of Eagle's Nest. With him gone, I'm the owner. And there ain't no law against a man's brother inheriting property.\"\n\nWill gave the guns back to the men after unloading them. \"Don't come back; don't bother my sister in law or me again. Ifin you do, you better pick a spot for your grave. Now git.\"\n\n\"I hadn't heard that part of the story,\" Lewis said.\n\n\"Knew there were some problems early on but that's the first time I heard the full story,\" William admitted. Then with a smile he added, \"Don't pay to mess with the Randals.\n\nJune, 1898\n\nWe have had no more trouble with the three men who tried to force us off the ranch. Others have learned that Eagle's Nest belongs to us. I took my first trip in a stagecoach and on a train last month. John and I traveled to Moose Jaw Canada to visit my father and the Lakota that live in the area. James made a promise to Iron Buffalo that our son would learn about the Lakota and his ancestors. Will said he would take care of the ranch so John and I spent the summer with my people.\n\nThe tribe had a welcoming ceremony for John. He stood so tall and proud as he was introduced to his people. I am so happy and sad at the same time. My son is growing into a man so I am happy. My son is growing into a man and I will lose him soon so I am sad.\n\nWhile John was learning of the Lakota ways I got to spend time with my father, my brother and his wife. Chayton is no longer my little brother. He is a grown man with a family of his own. I enjoyed meeting my nieces and nephews. It was a good thing.\n\n\"That's so cool. It's just like I do every summer isn't it Dad?\" James asked.\n\nLewis nodded and replied, \"Yes son. To be honest it was your Boompa that suggested you should learn about the Lakota and your ancestors.\"\n\n\"Thanks Boompa,\" James said. He stood and hugged William and then sat back down to hear the rest of the journal.\n\n\"You're welcome boy,\" William responded with the hint of tears in his eyes. Dang he thought, that boy pulls at me as much as Lewis did when he was young.\n\nMay, 1905\n\nThis was my last year going to Canada. John enjoys his time with the Lakota. He spends all day with the other young men hunting, fishing, and testing their skills against one another. My son does not need his mother all the time. He is growing into a man. The Lakota have accepted him and soon he will take his quest to earn his tribal name.\n\nAt night he sits with Iron Buffalo and Chayton and hears the story of our people. I think my son has become a Lakota brave at heart.\n\nSeptember, 1907\n\nI had bad news for John when he came home from his yearly visit to Moose Jaw. Sampson died while John was with the Lakota. Sampson was 21 years old that is over 62 in human years. The big horse was our friend and companion for over 16 years and 4 years before that with James. He helped John grow into the man he is now. I have prayed to the Great Spirit to watch over Sampson.\n\nJohn talked to Will and they have agreed that my son will soon take over the ranch. Will has promised to stay and help but John will be what they call the ramrod.\n\nJohn has been given his Lakota name. He gathered feathers from the eagles and made a war bonnet for Iron Buffalo. He has a scar on his right cheek and another on his forehead. The eagle's made John pay a price for their feathers. My son is sometimes too brave for his own good. He is now called Ska Anunkasan or White Eagle by the Lakota.\n\n\"Will I get a Lakota name too?\" Young James asked, excited at the idea.\n\n\"In a few years you will earn your name son,\" Lewis answered. \"Don't get too excited, you've still got six or seven years before you can take the quest.\"\n\nSeptember, 1908\n\nJohn surprised me and Will when he returned from Canada this time. He brought home a wife. John had taken two horses with him on this trip to Moose Jaw. He said they were a gift. I did not know that they were a bride price for his woman. The girl is called Morning Star in English. I can understand why John was so taken with her. She is a beautiful young Lakota maiden with a sweetness about her. I love her already.\n\nDecember, 1908\n\nJohn and Morning Star told me today that she is going to have a baby. John will make a good father.\n\nWill and John went to Prescott two days later and were gone overnight. I didn't know the reason for the trip until they returned to Eagle's Nest. William signed some papers turning the ranch over to John.\n\n\"Time for the deed to the ranch to be brought up to date,\" Will said.\n\nAugust, 1909\n\nMorning Star had a son today. She and John named the boy William. It was the only time I saw my husband's brother cry.\n\nWill gave John a small leather bag. \"This is for the boy when he comes of age.\" Inside the bag was a gold nugget about the size of an acorn.\n\nWilliam stopped reading. \"James go to my bedroom. Open the cedar chest at the foot of the bed; in the tray is a leather bag. Bring it to me please.\"\n\n\"Okay, be right back,\" James said. He was back in less than two minutes. \"This the one you want Boompa?\"\n\n\"Yep, that's it,\" William answered. He untied the draw string and opened the bag. Reaching inside he pulled out a thin strip of rawhide. It was tied around an acorn sized irregular shaped gold nugget. \"This is the nugget that Will left for me,\" he said handing it to James.\n\n\"How cool.\" The boy looked at the nugget turning it over and over. Then he handed it to his father.\n\n\"I've seen it James,\" Lewis said. He took the nugget and showed it to Alyssa. She looked at it and returned it to William.\n\n\"This is yours now James,\" William said pointing to the nugget. \"I'll hold on to it until you're older but from now on it belongs to you.\"\n\n\"Wow,\" James exclaimed. \"Thank you Boompa. I'll take good care of it\"\n\n\"I know you will son. It'll be in the cedar chest and you can look at it anytime you want to. Now let's get back to the journal.\"\n\nAugust, 1914\n\nWill surprised us today. \"I'm headin back to California after the roundup,\" he told us.\n\nMe and John and even Morning Star tried to talk him into staying.\n\n\"You're running the ranch just fine John and don't really need my help,\" William said. \"Sides, I never did cotton to ranchin. Time to get back to the ocean.\"\n\nEarly October, 1914\n\nWill left for California this morning. He has been a great help to me and to John. We will miss him.\n\nMay 1916\n\nI only write now when something I think is important happens. Life on a cattle ranch is not very exciting. It is a matter of doing what needs to be done and enjoying our family.\n\nToday young William, John and Morning Star will make the boy's first trip to meet his Lakota family. It is a good thing.\n\nJune, 1924\n\nJohn, Morning Star, and me are alone on the ranch. William took the trip to Moose Jaw alone this year. He is now 15 and almost a man.\n\nWe received a telegram from William today. Iron Buffalo has gone on to the next world. My father had a rich, full life and made his own way in the white man's world.\n\nI will leave for Moose Jaw tomorrow to honor him. John gave me a small piece of cowhide with the brand of Eagle's Nest burned into it. He said it will protect Iron Buffalo on his journey. I will stay the summer with my grandson and the Lakota. William will return with me to the ranch at season's end.\n\nAugust, 1924\n\nWilliam has returned from his quest. He has been given the Lakota name of Wicasa Nunpa Cantes or Man of Two Hearts.\n\n\"That's you she's writing about, isn't it Boompa?\" James asked. \"You never told me you had a Lakota name,\" the boy added.\n\nWilliam smiled. \"It never really came up before. It's not something you run around talkin about.\"\n\n\"At least you don't,\" Lewis said. \"I never knew you had earned your name either.\"\n\n\"Why did they call you Man of Two Hearts Boompa?\"\n\n\"Chayton and I held a two day prayer vigil at Iron Buffalo's burial platform. It's a sign of honor to the person who died for you to call out your ancestor's names. It's supposed to bring their spirits to help guide the soul on their journey.\"\n\nWilliam paused and smiled, \"Anyway I talked about my grandfather Jim, who was white and my grandmother Chante, who was Lakota. I also talked about my father John, who was half white and my mother Morning Star, who was Lakota. Because of my mixed blood Chayton named me Man of Two Hearts.\"\n\n\"It's getting late,\" Alyssa said. \"Maybe we should finish the journal tomorrow night. It's past James bed time.\"\n\n\"There's only one page left,\" William said holding up the book.\n\n\"I think we can get by running the ranch if James sleeps in,\" Lewis suggested with a smile. Alyssa nodded and William read the last entry in the journal.\n\nSeptember, 1926\n\nI have made my last trip to Canada. Other than Chayton and his family there are not many of my band left there. Most have moved away. Chayton promised to bring his family for a visit next season.\n\nApril, 1927\n\nMy brother Chayton, his wife Little Elk and their three children have come to Eagle's Nest for a visit. I hope they stay forever. I am enjoying getting to know my niece and two nephews. It is a good thing.\n\nJuly, 1928\n\nChayton and his family are leaving tomorrow. They will visit the Sioux reservation at Lake Traverse South Dakota. We have tried to persuade them to stay at Eagle's Nest. There is enough room for everyone. They want to be back among their people. I can understand. If it hadn't have been for the ranch and my son I would have returned to the people better than 30 years ago.\n\nJune, 1951\n\nMuch has happened since I last wrote in my journal. There have been weddings and births and some deaths. Raising and guiding a family takes a lot of time and I've been more interested in the children than I have in writing. I will bring my writings up to date after I return from the high country.\n\nI am 79 today or near as I can tell. Tomorrow I will go to the high country. It will be my last visit, at least on horseback. I am getting old and cannot ride for very long and it is getting harder to climb the trail to the rock butte. I want to see the eagles soar over the ranch that is named for them. They are a bridge back to my husband James. Soon it will be time to give John, Morning Star, and William my journal.\n\n\"Well that's it,\" William said as he closed the journal.\n\n\"Why didn't Grandma Chante write more?\" James asked.",
        "Alyssa saw the frown that crossed William's face. \"That's enough for this evening,\" she said. \"Bed time young man.\"\n\nJames hugged his family and said good night. After the boy climbed the stairs to his room, William turned to Lewis and Alyssa.\n\n\"The answer to the boy's question is that Chante disappeared on that trip to the high country,\" William told them.\n\n\"What happened?\" Lewis asked.\n\n\"Don't rightly know for sure. Her horse came back late that afternoon. He was lame in a front leg and had a deep scratch across his rump. Looked like it was caused by a mountain lion.\" William had a faraway look in his eyes as he remembered back to that day in September, 1926\n\n\"Dad, Mom, me and even the ranch hands looked for her. We back tracked the horse to the mountains on the west border of the ranch but lost the trail on the rocky ground. After a week we had to put the hands back to work, but Dad and I continued to search until the weather turned bad. We never found her or any sign of her.\" He hung his head for a minute. Lewis and Alyssa remained quiet letting William gather himself.\n\n\"It's strange as hell, you know? She disappeared just like Jim. We know now what happened to Jim because he came back to us but I still don't know about Chante.\"\n\nWilliam took a deep breath and stared at the journal for a few seconds. Alyssa could tell he had something more on his mind and motioned to Lewis.\n\n\"What is it Grandpa?\" Lewis asked\n\n\"I've been thinkin about it. It's not really my call Lewis, but I think you're makin a mistake not telling the boy about Jim.\"\n\n<p align=\"center\">*********************</p>\n\nLewis had made a decision. Alyssa, William, and he had discussed, argued, and debated the question. They talked for three weeks after Chante's journal was read, if not every day at least several times a week. It was decided that young James needed or should be told about his Grandpa Jim's return to the modern world.\n\nWilliam had played \"devil's advocate\" when Alyssa and Lewis pulled him into the debate. After weeks of discussion William said, \"The worst thing that could happen is that James tells some of his friends or their parents about Jim's return to life. The other kids will think it's just a good story and the parents won't believe it.\" Before Lewis or Alyssa could object to his logic he added.\n\n\"Even if someone does believe the story, the worst that could happen is that scientific types will want to investigate.\" William smiled, \"And if that happens we'll tell them to stay the hell off our land.\"\n\nWilliam got serious again. \"I think we'll do more damage by not telling the boy. James may never find out on his own but if he does he'll be hurt that we didn't trust him. Besides, he deserves to be as crazy as the rest of the Randals.\" William gave them a big grin and chuckled.\n\n\"How would he ever find out?\" Alyssa asked.\n\nLewis replied, \"It may be farfetched but I can see it happening. We usually make sure James isn't around if we talk about Jim. When we have slipped he hasn't paid much attention to it\"\n\n\"Another problem is Tom and Helen Casey,\" Lewis continued. \"James hasn't spent too much time with them yet, but he will as he gets older and gets more involved in working on the ranch.\"\n\n\"But Tom and Helen don't know the truth. They think Jim is, I mean was, a cousin from another part of the country,\" Alyssa argued.\n\n\"That's right,\" William agreed. \"But Tom and Jim became close friends and Tom's bound to mention that fact. He could talk about things that Jim told him about ranching in the old days or something. Right now James wouldn't put it together but as he gets older he could begin to wonder.\"\n\n\"Wonder what?\" Alyssa asked.\n\n\"He might wonder how a cousin who'd never been to Eagle's Nest knew so much about it. He might wonder why we've never mentioned this, Jim,\" William replied. \"And if Tom ever describes Jim, especially that white streak in his hair, the boy could put it together with the picture of Jim, Chante, and John.\"\n\nWilliam stopped talking; he had made his point. Lewis and Alyssa were quiet and thoughtful. After a couple of minutes, Lewis straightened in his chair. \"I think we should tell our son. Grandpa's right, James deserves to know about the man he was named for.\"\n\nAlyssa smiled, remembering the joy and wonder that Jim had when he saw his namesake that evening just before he passed away. \"If Jim hadn't come back to us, we would have probably named our son John or Josh or maybe even William,\" she said smiling at the older man.\n\n\"Maybe we should make an early trip up the mountain this year,\" Lewis suggested. \"We could tell James the story then.\"\n\n\"I think that's a fine idea,\" William agreed.\n\nAlyssa said, \"It'll give James time before school starts next month to get used to the idea. Maybe he won't be so inclined to tell his friends.\n\n\"Don't really think that'll be a problem,\" Lewis offered. \"James is very mature in some ways and I'll ask him to promise not to talk to outsiders about Jim. I don't think he'll break his word once he's given it\"\n\n\"Might as well throw everything on him at once,\" Alyssa suggested. \"I think we should tell him he owns Granddad's ranch now.\"\n\n\"You think?\" Lewis asked.\n\n\"Yes I do,\" she answered. \"He's got a right to know that too.\" Lewis nodded.\n\nTwo days later on Saturday morning the four Randals saddled their horses, packed their supplies for the picnic, and rode to the trail head leading up to Jim's burial site. Lewis hadn't told James why the trip was being made earlier than usual, just that it was.\n\nThis time James had brought along a grouse he'd shot the day before. Lewis watched James put the grouse in his saddle bag and raised an eyebrow in question.\n\n\"It's for the eagle guarding Grandpa Jim,\" James said with a smile. \"I wasn't sure if we'd find a grouse on the way up the mountain and I hope I can give it to the eagle again.\"\n\nWilliam led the way with Alyssa riding beside him. Lewis and James rode side by side, following them. \"You and Joshua sure get along good,\" Lewis said.\n\n\"Yes sir. He's my best friend,\" James answered patting the big black horse on the neck. \"We're like partners.\" Joshua nodded his head up and down as if he agreed.\n\n\"Here we are,\" William called out. \"Time to use our own feet for a while.\"\n\nThe Randals dismounted, dropping the reins to the ground. All of their horses were trained to ground tie and wouldn't move far from the spot except to graze a little.\n\nThey gathered their picnic supplies and James led the way up the trail. It took them about 30 minutes to get to the big granite bluff. There was no eagle sitting on Jim's burial platform but there were three soaring on the air currents above the butte. William and Alyssa got the food and spread it out on a saddle blanket. James, followed by Lewis, went toward Jim's final resting place.\n\nAs James and Lewis got close one of the high soaring eagles dropped out of the sky and landed on one of the upright supports.\n\n\"He came back,\" James said excitedly to Lewis.\n\n\"Yep he sure did,\" Lewis agreed. \"Hold the grouse out so he can see and just wait a bit.\"\n\nIn a repeat of their previous meeting the big raptor hopped down and waddled over to James. He slowly reached out and took the offered grouse from the boy's hand. The bird jumped back into the air flapping his great wings. He rose until he caught the air currents over the mountain and soared off to his nest.\n\n\"That's so cool,\" James said as the big predator flew away.\n\nAfter lunch the four of them walked closer to the burial platform. William and Alyssa took seats on a fallen tree trunk. Lewis leaned back against the tree with James sitting cross legged on the ground facing his parents.\n\n\"We came up here to Jim's place early because we wanted to talk to you,\" Lewis said to his son.\n\n\"Did I do something wrong Dad?\" James asked looking at his father and then at his mother.\n\n\"No son,\" Lewis replied with a smile. He reached over and ruffled the boy's hair. \"You didn't do anything wrong. Your mother and I think you should hear this story before you get much older. So does your Grandpa William.\"\n\n\"Okay Dad,\" James said.\n\n\"This is going to sound pretty strange but it's the truth. Okay?\" James nodded and Lewis continued.\n\n\"About eleven years before you were born, I was exploring up here on the mountain. I found your Grandpa Jim sleeping in that cave just across that little canyon there.\" Lewis pointed to the collapsed entrance to the cavern.\n\n\"But I thought Grandpa Jim died a long time ago.\"\n\n\"So did we, until I found him in that cave. Doc Samuels said Jim was in a state of suspended animation. You know what that means James?\"\n\n\"Yes sir. It's like someone sleeping for a long time,\" James replied. \"I read about it in some my science fiction stories.\"\n\n\"That's right, it's like someone sleeping. That's what Jim was doing, sleeping.\" Lewis paused making sure the boy understood. \"We got Jim down to the ranch house where he fully woke up and after a few days he was as good as new.\"\n\n\"That means he was,\" James said and started counting to himself. \"That means Grandpa Jim was over a hundred years old.\"\n\n\"We figured Jim had been asleep for 117 years, give or take a year or two.\"\n\n\"What happened to Grandpa? I mean how did he get put into suspended animation?\"\n\n\"Remember the medicine man that we read about in Chante's Journal?\" Lewis asked.\n\n\"Yeah, Spirit Healer she called him.\"\n\n\"Well Spirit Healer tricked Jim into the cave and gave him something that put him to sleep. He pulled Jim into a small room and built a rock wall to close him in. With me so far?\"\n\n\"Yes sir, but how did Grandpa Jim stay alive for all those years?\" James asked.\n\n\"We don't really know. There was a flame burning in a niche in one wall and it gave off a funny kind of smoke. Doc Samuels thinks whatever was in that smoke kept Jim alive all those years,\" Lewis answered. \"Anyway I saw a hole in that wall and looked inside. I saw Jim and knocked down some of the wall. He woke up when the fresh air hit him.\"\n\n\"You're not teasing me, are you Dad?\"\n\n\"No son. Like I said it's all the truth. Jim lived with us for eleven years. But he started to age real quick after ten and a half years or so. Doc said he thought that whatever that smoke had done to Jim wore off. Jim died three days after you were born. He got to see you before he left us and was real proud that we named you after him. We built this burial platform for Jim, just like the Lakota warriors.\"\n\n\"Wow,\" James responded.\n\n\"I'm going to ask you to promise that you won't tell anyone about this,\" Lewis said looking the boy in the eye. Doc and his wife Dotty are the only ones outside of the family that know about Jim. \"It's really important that no one else knows.\"\n\n\"Okay, I promise,\" James said solemnly. \"But why is it so important to keep it a secret?\"\n\n\"If people find out about Jim they might want to take his body to study,\" Lewis replied. \"We don't intend to let them take Jim away.\"\n\n\"I promise Dad,\" James repeated. \"Cross my heart.\"\n\n\"Good boy,\" Lewis said as he hugged his son. \"One more thing. Joshua was Jim's horse while he was with us. I bought him for your Grandpa and they become great friends and partners.\" Lewis smiled adding, \"Just like you and Joshua are now.\"\n\n\"Thank you for promising to keep Grandpa Jim's story a secret James,\" Alyssa said. She sat down next to him and hugged him. \"Now there's another thing we have to tell you.\"\n\nJames looked at her with big eyes as if to say, there's more?\n\n\"When your Grandpa Josh passed away he left his ranch to you. He asked your dad and me to run the place until you're 21. Then you can do whatever you want. You can sell it, rent it out, or keep running it. Whatever you want.\"\n\n\"You mean all of Grandpa's horses are mine?\" James asked with a grin.\n\n\"Yeah, the horses, the land, and everything else on the ranch is yours,\" Lewis answered. \"Your mother and I hired Jerry Pace to run the place until you get older.\"\n\n\"Great. Jerry's a cool guy. Every time I'm there he takes me to look at the new foals and work with the horses.\" James thought for a few seconds and added, \"He doesn't treat me like a kid.\"\n\n\"We told you about the ranch because my father isn't very happy that Granddad left it to you instead of to him,\" Alyssa said to James.\n\n\"Why doesn't Grandpa Ed like us Mom? I mean he only visited here two or three times.\"\n\nAlyssa shook her head and answered, \"I don't know. Dad never liked living on the ranch. He and Mother said the place is uncivilized.\" She looked at her son and asked, \"You know what that means?\"\n\n\"Yes Ma'am. But why would he want Grandpa Josh's ranch if he didn't like it?\"\n\n\"I think he wants to sell it. He probably wants to buy a bigger home in Los Angeles.\"\n\nJames was quiet for about 30 seconds. \"He can't have it. Grandpa's ranch belongs to me and I'll never sell it.\"\n\nAlyssa and Lewis smiled at James. \"Enough about bad things. We'll tell you more about your Grandpa Jim,\" Lewis said.\n\nWilliam, Lewis, and Alyssa took a couple of hours telling James stories about his Grandpa Jim. They told him how Jim was fascinated by modern technology. How it was his idea to make Eagle's Nest into a working cattle ranch again and invite people to come several times a year to live and work like cowboys.\n\n\"Time to get back,\" Alyssa said. \"We need to get some rest. Our last guests of the year will be here tomorrow to drive the cattle down from the high country.\"\n\n<p align=\"center\">********************</p>\n\nWell that didn't work out the way I planned, Jake Sanders thought. First that damned old man Benson left his ranch to his great grandson. Jake had suggested to Edward Benson that he file a lawsuit to overturn Josh Benson's will in L.A. County. Josh's attorney Sam Reynolds filed a counter motion to move the suit to Prescott. Reynolds' argument was that Josh lived in Yavapai County and the will had been filed there. He stated that the suit should be heard there. Unfortunately for Sanders, the L.A. judge agreed and refused to hear the case.\n\nNow we have to file in a jurisdiction that may not be as favorable to us, Sanders told himself. After a couple of minutes he pushed a button on the intercom. Maybe there's a better way, he thought.\n\n\"Yes sir,\" his secretary Sharon responded.\n\n\"Sharon get hold of a Bryce Jenkins and tell him I want to see him right away,\" he ordered. \"His phone number is in the Rolodex under security sub contractors.\"\n\nAn hour later a big, ruddy faced man came into Sanders' office. \"Hi ya Boss. You wanted to see me?\"\n\n\"Hello Bryce, yeah I got a job for you,\" Sanders told him.\n\nJake looked at the man and thought, he's just the one for this job. Bryce was 6'6. At 275 pounds, he was as heavy as he was tall. He'd been a pro football player at one time and made a lot of money. But after some bad investments and wild spending habits, Jenkins now lived from job to job. His job was intimidating people to do what the men that hired him wanted done.\n\n\"Got a ticklish little chore for you up in Prescott.\" Sanders informed Jenkins. He quickly explained the situation concerning Eagle's Nest and now the Benson ranch.\n\n\"I don't know what the outcome of this lawsuit will be but I want you to suggest strongly to young James Randal and his parents that it would be in their best interest to sell the Benson place to us. Understand?\" Sanders finished.\n\n\"Yeah,\" Jenkins replied and asked, \"How strong do you want this suggestion to be?\"\n\nJake Sanders stood with his back toward Jenkins, looking at the view out of his corner office for almost a minute before he answered. Turning back to Jenkins he said, \"Just don't kill anyone. I expect to hear from you or the Randals in ten days. Now get going.\"\n\n<p align=\"center\">********************</p>\n\nYoung James Randal was excited at being back in school. He liked school, his teachers, and his friends but he was a little sad to be away from Eagle's Nest, his parents, and Joshua for eight hours each school day. But it's Friday and I'll take Joshua on a long ride this weekend, he thought. \"There's Grandpa,\" he muttered when he saw William's truck parked in front of the school.\n\n\"Hi Grandpa. You come to pick me up?\"\n\n\"Hi son. Yeah I had some business at the bank. Come on we'll get on the road home,\" William answered.\n\nBack at Eagle's Nest, as William parked the truck, James ran down to the corral to see Joshua. He stroked the big horse's neck and saw his father in the attached barn. He was mucking out a horse stall and James picked up a pitchfork to help him. Lewis smiled at his son and continued to work.\n\nThey quickly finished their chore and went up to the ranch house. \"I think we deserve some milk and cookies for working so hard,\" Lewis said.\n\n\"I think you're right Dad,\" James replied in a put on solemn voice. Then he laughed. He took a bite of his first cookie and asked, \"Where's Mom?\"\n\n\"She's over to Cole's Trading Post picking up a few things. I don't think we really need anything, she just wanted to get out of the house for a bit.\"\n\nLewis cocked his head at a noise from outside. A truck, driven much too fast, slid to a stop on the graveled parking area next to the house. A truck door slammed shut and someone stomped onto the porch. Alyssa came into the kitchen and threw her purse on the table.\n\nHer cheeks were red, her lips were a thin white angry line, and her eyes blazed like lightning. Lewis had never seen her this worked up.\n\n\"Hi Mom,\" James greeted his mother. \"Dad and me had cookies and milk because we cleaned out the horse stalls in the barn.\"\n\n\"That's nice Baby,\" Alyssa replied. \"Would you go get the packages in the bed of the truck please?\" The boy took off at a run.\n\n\"You alright Honey?\" Lewis asked. \"You look like you could chew nails and spit out thumb tacks.\"\n\n\"I'm so mad I probably could.\" Alyssa took a deep breath and got better control of herself. \"A man named Jenkins made a 5 million dollar offer for Eagle's Nest. I told him it wasn't for sale at any price.\"\n\nShe walked to the sink and got a glass of water. \"Then this Jenkins said it would be a shame if one of us got so badly hurt we couldn't stay on the ranch. Can you believe that? He threatened us. Said he'd be at the Hotel St. Michael in Prescott when we changed our minds. Said he expected to hear from us within the week.\"\n\n\"Do you know who he is working for?\"\n\n\"I'm sure he works for Center Corp. That weasel Sid Collier from Center Corp was sitting in a car out front of Cole's.\n\nWilliam came into the kitchen and felt the mood. \"What's all the fuss about?\" Alyssa repeated her story.\n\n\"I'm going to call the police,\" Alyssa said. \"Maybe they can do something about this thug.\"\n\n\"Call Jasper Dempsey too,\" William suggested.\n\n\"The Sheriff?\" Alyssa asked. \"If I report Jenkins to the police why should I call Sheriff Dempsey?\"\n\n\"I'm not saying don't call the police,\" William replied. \"But they may not be able to do anything. From what you said, Jenkins didn't come right out and threaten you. All he did was make an offer to buy the ranch.\"\n\n\"But he said....\" Alyssa began.\n\n\"Your word against his,\" William broke in. \"J D is an old family friend and he's, what's the word y'all use now? Oh yeah, He's an old school type of lawman.\"\n\nLewis nodded and said, \"Grandpa's right. We should talk to J D.\"\n\n\"Old school?\" Alyssa asked.\n\nWilliam smiled. \"J D doesn't think like the police. There might not be anything the police can do legally and they will let it drop there. But J D knows what's right; never mind the legalities. He'll have a word or two with this Jenkins. J D probably can't arrest him but he'll let Jenkins know that the Sheriff's Department has their eye on him.\"\n\nAlyssa looked at William for a few seconds and then walked over and picked up the phone. When someone answered she said, \"Sheriff Dempsey please. This is Alyssa Randal.\"",
        "Sheriff Jasper Dempsey came on the line. The Sheriff was old school in more ways than one. He wanted to make sure people could hear him so he talked very loudly on the phone.\n\n\"Hello little girl,\" Dempsey answered in a loud voice. \"How's that boy and good for nothing husband of yours? That old scoundrel William still eatin you out of house and home?\"\n\n\"Everyone's fine Sheriff,\" Alyssa replied laughing at the Sheriff's questions.\n\n\"I know I'm irresistible to you pretty young things,\" Dempsey teased, \"but what can I do for you.\"\n\nAs Alyssa explained the confrontation with Jenkins, she picture Sheriff Dempsey. He was the exact opposite of the stereotypical county Sheriff. J D was tall at 6' 4 with a big solid body; he was no fat belly southern Sheriff. He was one of those men whose age was hard to guess. With his dark hair and his suntanned face he could be anywhere between 35 and 55. Alyssa guessed that J D was about 40 because he'd worked for William at Eagle's Nest when he was in his late teens.\n\n\"Don't you fret little girl,\" Dempsey said after Alyssa finished her story. \"I'll have a word with Mr. Jenkins.\"\n\n\"Thank you J D. We'd appreciate anything you can do.\" Alyssa lowered her voice and stepped outside. \"I'm afraid that if something isn't done that Lewis will go to see Jenkins. And we both know how that would end up.\"\n\n\"Tell that man of yours to let me handle it,\" Dempsey replied. \"It may not be as satisfying to him but he won't end up in jail for assault either. I'll let you know what happens when I talk to Jenkins. Y'all take care now.\"\n\n<p align=\"center\">********************</p>\n\nSheriff J D Dempsey went to Jenkins' hotel but the man wasn't in. Guess I could wait for him, Dempsey thought. But I never was too partial to sittin around. He went back to his patrol car and picked up the radio microphone.\n\n\"Dispatch this is Dempsey,\" he said into the mike.\n\n\"Since when have you called me Dispatch?\" Sarah asked. Sarah Reed was sort of an office manager, personal assistant, and the real boss in the Sheriff's office. She did much more than her job description said. If Sarah ever retires I'll have to shut down the office, J D thought with a smile.\n\n\"Sorry Sarah. Got my official hat on today. Put out a Bolo out on a Bryce Jenkins. Sorry Bolo means be on the lookout for. He's stayin at the Hotel St. Michael and probably drivin a car with a Center Corp logo on it. Jenkins is a big man from what I hear, well over six feet and close to 300 pounds.\"\n\n\"I know what Bolo means J D, I was the one that explained it to you,\" Sarah replied a little testily. \"You want this Jenkins arrested if one of the Deputies sees him?\"\n\n\"Nope, just have them call me and let me know where he is. I want to have a few words with him about a personal matter.\"\n\nAbout an hour later Deputy Farr called Dempsey. \"Sheriff that fella you were looking for is havin supper at the Palace. Looks like he just got his food.\"\n\n\"Thanks Farr, I'm on my way. Should be there in twenty minutes or so. Keep an eye on him and let me know if he leaves.\"\n\nBryce Jenkins had just finished his rib eye steak and was thinking of ordering another one. He was a big man and needed a lot of food. Motioning to the bartender, he held up his empty beer mug. The waiter brought him another beer and Jenkins ordered a second steak.\n\nJ D sat down at the table after the waiter left. \"Mr. Jenkins, I'm Sheriff Dempsey. Like to have a few words with you if I might.\"\n\nJenkins nodded and asked, \"Something wrong Sheriff?\" Jenkins wasn't too worried about some hick sheriff from some backwater county.\n\n\"Don't rightly know,\" Dempsey replied. J D found that people underestimated him if he acted like a good ole country boy. \"Understand you had words with Alyssa Randal earlier today. That right?\"\n\n\"I simply made an offer to buy her ranch.\"\n\n\"Heard tell you made some kind of threat. Something about it'd be a shame if any of the Randals got hurt.\"\n\nJenkins sat back and thought for a few seconds. \"Nope, I didn't threaten her. It was just an observation.\"\n\n\"Well to my way of thinkin that was a threat.\" Jenkins started to reply but Dempsey held up his hand. \"I think it would be best if you stayed away from the Randals. I don't want any trouble in my county or with my people. You get my meaning Mr. Jenkins?\"\n\n\"Sheriff, I don't think I like what you're saying.\" Jenkins looked at Dempsey for a few seconds. \"You can't prove I did anything, its Mrs. Randals' word against mine. If you harass me my attorney down in Phoenix will have your badge. You get my meaning?\" Jenkins asked sarcastically.\n\nDempsey's first thought was to swat Jenkins up side his head and arrest him. But he held his temper. \"The people of Yavapai County hired me and only they can fire me. Phoenix is a long way away Jenkins. It might take a while for those big city fellers to do anything; in the meantime you're in my jurisdiction.\"\n\nHe paused and stared back at Jenkins. \"I'll make it plain for you, just so we don't have a misunderstanding. Stay away for Alyssa Randal. Don't make any more offers to her. Don't make any more observations to her. Don't talk to her again. If you do you'll answer to me, badge or no badge.\"\n\nThe Sheriff didn't seem to be intimidated by Jenkins' size and Bryce wasn't used to people who didn't cower in front of him or who talked to him in that way. Before Jenkins could respond, the Sheriff stood and walked away. We'll just see, Jenkins thought.\n\n<p align=\"center\">********************</p>\n\nJames Randal was waiting for the school bus that would take him and others back home. The teachers had a conference so school was only a half day. He and his friends were sitting on a little grassy knoll under a tree. James had just finished explaining a math problem to one of his friends when a mountain of a man walked over to him.\n\n\"You must be Jim Randal,\" the big man said.\n\n\"My name is James,\" the boy replied. \"Do you know my Mom and Dad Mister?\" Most of the children had gathered around when the man walked over. There weren't many problems with strangers in Prescott but they had all been taught to look out for each other.\n\n\"Met your Mom, haven't met your Dad yet,\" the man replied. The kids whispered among themselves, he looks like a giant. \"Guess you're really gonna miss living on your ranch when your folks sell it\"\n\n\"Eagle's Nest isn't for sale Mister,\" James replied a little heatedly. \"You must be thinkin of another place.\"\n\n\"They're gonna sell to me,\" he said. They just don't know it yet, Jenkins said to himself. \"Tell your Mom and Dad, I said hello.\" Jenkins said and walked away leaving a confused boy behind.\n\n\"Slow down there son,\" William said as James rushed into the kitchen. \"You're as wild as a tornado.\"\n\n\"Where's Mom and Dad?\" The boy asked breathlessly.\n\n\"They're down at the corral. What's the problem James?\"\n\n\"Sorry Grandpa, can't talk right now,\" James said and he rushed out of the house toward the corral.\n\nIt wasn't like James to brush him off. There must be something important bothering the boy, William thought. He grabbed a cigar and followed the boy down to the corral. He got there in time to hear Alyssa question James.\n\n\"Did the man tell you his name?\" Alyssa asked. James shook his head. \"What did he look like?\"\n\n\"He was a really big man. Some of the kids called him a giant.\" James thought for a few seconds. \"He's taller than Dad or Grandpa. Bigger too. He smiled a lot but he didn't mean it\"\n\n\"That's Jenkins,\" Alyssa confirmed.\n\n\"Son of a bitch,\" Lewis said in an angry voice. \"Guess I'll have to pay a visit to this Jenkins.\"\n\n\"Hold on Lewis,\" William said. \"Let's talk to J D first.\" At the look on Lewis' face he added, \"I'm not saying to ignore it but let's see how the law handles it first.\" William had a grim smile when he continued, \"If J D can't help us, we'll go talk to Jenkins ourselves.\"\n\nBack in the kitchen Alyssa called the Sheriff's Department. \"Is Sheriff Dempsey in? This is Alyssa Randal,\" she said.\n\n\"Oh hi Alyssa. This is Sarah. J D is over to Crown King. Something about some vacation homes being broke into. He'll be back late this evening I suspect.\"\n\n\"Thank you Sarah. Ask him to call us as soon as he can please.\"\n\n\"This about that Jenkins feller you called about last week?\"\n\n\"Yes it is,\" Alyssa answered. \"He approached our son at the school bus stop.\"\n\n\"I can't call the Sheriff on the radio or on his cell phone,\" Sarah said apologizing. \"Neither one works up in those mountains. J D usually calls when he gets back in range so I'll let him know then. Sit tight he'll get back to you soon. I promise.\"\n\nAlyssa told her family that the Sheriff wasn't available right then. Lewis stared out the kitchen window at the mountains rimming one side of the valley. After a minute or so he turned back into the kitchen.\n\n\"It's only one o'clock,\" he said. \"If I push it a little I can get there by 2:30.\"\n\n\"Get where?\" Alyssa asked. \"You're not going after Jenkins are you?\"\n\n\"Wait a bit Lewis. At least until we talk to J D,\" William suggested. \"I know it's hard to wait but this isn't the Wild West anymore.\"\n\n\"No I'm not going after Jenkins,\" Lewis replied. I wouldn't mind getting him in my rifle sights,\" he nodded at William, \"but this isn't the Wild West anymore. So I'll take another way.\"\n\n\"What way?\" Alyssa asked afraid that her husband would confront Jenkins.\n\n\"If you have a problem with a mad dog you go to its owner and get him to handle it,\" Lewis said. \"I'm going down to Phoenix and see Jake Sanders.\" Seeing the concern on Alyssa and William's faces he added, \"No bloodshed, but I'll let him know he can't keep messing with our family.\"\n\n\"We're coming with you,\" Alyssa said. William nodded his head agreeing.\n\n\"Yes you are,\" Lewis replied surprising both his wife and his grandfather. \"Even James is coming. This is a family matter and we all need to be there.\"\n\nIt was 3:15 when the Randals got off the elevator and walked across the outer office of Jake Sanders. Sharon, his secretary, was shocked to see two men, a woman, and a young boy stride passed her desk. The younger of the two men threw open Sanders' door and stepped into his office followed by the rest of the group. Sharon paid attention to what went on in the office and knew that this had to be the Randal family. Jake's in for it now, she thought.\n\nSanders was sitting behind his desk. He looked up from the email progress report that Jenkins had sent him. \"What the hell are you doing here,\" he asked. Sanders recognized Lewis and William from their last encounter.\n\n\"I see that you remember me Sanders,\" Lewis said. \"Good, I won't have to explain who we are. We've come to tell you to leave us alone. Leave Eagle's Nest alone. I told you before the ranch is not for sale and neither is the Benson place. My boy doesn't want to sell it either.\"\n\nSanders stood and reached for his phone. \"I'm calling security and have you thrown out.\"\n\nWilliam quickly stepped over to the desk and pulled the phone out of Sanders' hand. \"You're gonna listen to what we have to say and then we'll leave. Not before.\"\n\n\"Call off Jenkins,\" Lewis ordered.\n\n\"And if I don't?\" Sanders asked with an evil grin.\n\n\"I'll take care of him like you would any rabid animal,\" Lewis answered. \"Then I'll come for his owner. You crossed the line when you let Jenkins accost my wife. Then he tried to scare our son. That was so far over the line you can never get back. I repeat, call off your dog or I'll put him down and then come to see you.\"\n\n\"This isn't the 1800s Randal. You can't take the law into your own hands anymore.\"\n\n\"You're right. This isn't the old west, if it was you'd already be dead,\" Lewis replied. \"But know this, I'll not let you or Jenkins or Center Corp run roughshod over my family.\"\n\nSanders saw the look in Lewis' eyes and realized that he was in real danger.\n\n\"Just so you know, we've called a news conference for tomorrow at noon,\" Lewis informed Sanders. \"We're going to tell the media about your attempt to force us to sell our home. I don't think the adverse publicity will make you a favorite of the board of Center Corp.\"\n\n\"Lewis has done worse than what would have happened in the old days,\" William said joining the discussion. \"He's hurt you. He's taken away your power and probably your job.\" He paused and added, \"Couldn't happen to a more deserving feller.\"\n\n\"Send Jenkins an email, call him, send up smoke signals but put a leash on him,\" Lewis ordered. \"If he still there when we get back to Prescott...well, you won't like the consequences.\"\n\nSanders slumped back into his chair. He knew that he was beaten. The elder Randal was right; their press conference would seal his fate with Center Corp. The company would distance themselves from the bad publicity, putting the blame on him. He nodded at the Randals and picked up the phone. This time William allowed him to make his call.\n\nOn the drive back to Prescott, James asked, \"Dad what did you mean when you told Mr. Sanders that you would take care of Jenkins and then him?\"\n\n\"I'm sorry you had to hear that James. I'll explain when you're a little older.\"\n\nJames stared out the window of their truck for several minutes. Then he said, \"Oh, now I get it\"\n\nAs they drove up in front of the ranch house, Alyssa's cell phone rang.\n\n\"Hello little girl. This is Sheriff Dempsey. Understand y'all made a trip to Phoenix.\"\n\n\"Yes we did Sheriff. I think everything is okay now.\"\n\n\"I don't know if it was my talk with Jenkins or whatever you Randals did today but he's gone,\" J D said. \"The desk clerk said that he checked out real quick and burned rubber leaving town. I can't find hide nor hair of him anywhere in town.\"\n\n\"My husband seems to have handled the situation very well,\" Alyssa replied. \"Thanks for the call but I think we'll be okay now.\"\n\nThree days later, Sanders was unceremoniously escorted out of his office and through the front door of Center Corp's building by two security men. William had been right. As a result of the Randals' news conference, Sanders actions were featured on TV, radio, and in the papers.\n\nCenter Corp immediately gave press releases to counteract the bad publicity. They claimed that the company would never condone a policy of intimidation and pressure and that Sanders had been acting on his own. They publicly apologized to the Randals. Center Corp also sent a letter of apology to the family.\n\nLewis looked at the letter. \"Trash mail,\" he said and threw it away without opening it.\n\n<p align=\"center\">********************</p>\n\nIt'd been a month since the family's trip to Phoenix. James got off Joshua at the trail head leading up to his Grandpa Jim's burial site. The boy had gotten permission to visit the site alone. He made the climb and stepped around the rock butte to Jim's resting place.\n\nJames walked over to the platform, sat down leaning against one of the upright supports and talked to Jim for an hour as if they were sitting together. He told Jim about Grandpa Josh passing and leaving James his ranch, he told him about Jenkins, how Grandpa William persuaded Lewis not to shoot the man, and he told Jim about the whole family confronting Sanders.\n\n\"I'm really proud of my Dad. He really wanted to shoot that Jenkins and Sanders. Dad made Sanders and that company, Center Corp, back down and leave us alone.\" James smiled up at the platform. \"Grandpa William told me that he had to stop you from giving that Sanders a beating too. You and Dad sure think alike.\n\nJames stood up, stepped back, and looked up at the platform. \"Guess I better go. I promised Mom I'd be back before dark.\" He turned to walk away and stopped. Turning back James said, \"Oh yeah, I almost forgot. Joshua and me have become good friends. Dad says Joshua won't let anyone but me ride him. Guess we sorta belong to each other now. See you in October Grandpa.\"\n\nThe boy walked to the granite wall and stopped. He looked back to Jim's resting place and said, \"Grandpa, I wish you could have stayed with us so I could have got to know you,\" James said and then walked around the rock butte.\n\nA large golden eagle spiraled down and quietly landed on the burial platform. The big raptor cocked his head sidewise and studied the boy as he walked down the trail toward their friend Joshua.\n\nThere was a serenity in the scene as though things were back on track now. The future of Eagle's Nest and the Randals looked as it should.\n\nThe End"
    ],
    "authorname": "woodmanone",
    "tags": [
        "romance novella"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-second-hundred-years-sequel-ch-03"
}