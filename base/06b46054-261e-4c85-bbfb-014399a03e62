{
    "title": "Precious Jules",
    "pages": [
        "God gave you a penis and a brain and only enough blood to run one at a time. ~ Robin Williams\n\n*****\n\nIt was late, I'd left the office well after dinner and found myself pretty hungry on the drive home. Rather than pacify my hunger with something from the drive-thru, quick and detrimental to my health, I figured I'd swing by that upscale grocery store that had opened up to see what they had to fit the bill.\n\n\"Hi, can I help you?\" The kid behind the counter said as I eyed the mounds of shaved ice that filled cases. One of the benefits of living near the coast is a ready supply of fresh seafood.\n\n\"I'm looking for something quick and easy.\" I replied. He walked around and pointed to a rack of recipe cards and suggested something and pointed out to a stack of fillets laying on the ice. I agreed that his suggestion sounded good and I was soon gathering the rest of the ingredients.\n\nI walked up to the check out and my daughter's old sitter was running the register. I put my items on the belt and she looked up smiling wide.\n\n\"Hey Mr. Thomson, long time no see.\" She said.\n\n\"Hi Jules, how have you been?\"\n\n\"Good. How's Sam?\" She asked about my daughter Samantha.\n\n\"She's great.\" I said with a wistful sigh. I noticed her smile dissipate to a concerned look. \"She spent the summer with me and just went back to her mothers for school a couple of weeks ago. Jan and I divorced two years ago.\"\n\n\"I'm sorry.\" She said, letting the beep of the scanner cover the awkward silence. She asked what I had in the bakery sack, and rang it in. As soon as my purchases were scanned she turned off her aisle light and tossed her closed sign up on the belt.\n\n\"Mr. Thomson, could I ask you for a favor? I'm done for the night and my mom can't pick me up. I was going to get a ride home from one of the guys here but he kinda creeps me out. Could I bum a ride home from you?\"\n\n\"Sure, you still living at your mom's over on Birch Street?\" I said sliding my card to pay for the groceries. She nodded.\n\n\"Let me cash out and grab my stuff, I'll only be five minutes.\" She smiled. I let her know where I parked and headed for my car. True to her word I hadn't so much as started the car and turned on the radio that she came walking out of the store. She waved to someone else that was leaving the and I took a moment to enjoy the young woman Julia, Jules as she preferred to be called when she was our sitter, had grown into. She wasn't tall, standing just few inches over five feet, her figure was trim with just the right amount of curves. She had filled out a bit, giving way to the heart-breaker she was becoming. Her eyes were a light brown color, her hair brown with red highlights which fell in waves past her shoulders. As she walked past the hood of the car she smiled at me again, her skin shone in the yellow glow of the headlights. She had an easy-going smile she used often, despite years of braces which gave her a slight overbite. She opened the door and turned, giving me a nice view of her backside as she got in. \n\nShe said thanks, and pulled the seat belt down, the strap nestled between between her breasts. I inwardly scolded myself for noticing that Jules had grown up nicely.\n\n\"You can just head home, I can cut through the backyard and walk home from there.\" She said. Her mother lived on the block behind my little neighborhood which made it easy for her to come and go when Jan and I needed a sitter.\n\n\"Okay. So what are you doing now? Are you still in high school?\" I asked.\n\n\"Not as of last June. I graduated, got me a diploma and everything.\" She said sarcastically.\n\n\"What's next? Did you start college already?\"\n\nShe sighed heavily. \"No.\" She didn't elaborate further, she turned slightly and looked out the passenger window. \n\n\"Sorry. I touched a nerve.\"\n\n\"No it's fine. It's just that my mom and I don't have similar beliefs in what career choices are available to young women these days. She's a tad old fashioned in her thinking.\"\n\n\"Oh? She pushing you to join the elite corps of nurses, secretaries or maybe kindergarten teachers?\"\n\nJules practically spun in her seat and glared at me. \"Exactly! She's got this 'good little girl' vision in her head, and thinks that's how I should be. I should settle down and think about the future. She sees me in an apron and heels cooking for some guy with my two neatly pressed, obedient kids sitting at the kitchen table. I don't even know where she gets that from, she was born in the 70's, with disco, bell-bottoms, weed, and bra burning. Oh but when it comes to me, she does a one-eighty and professes some 1950's lifestyle is the key to happiness. It's such bullshit!\"\n\nI chuckled and looked aside at her. She looked back at me wide eyed and covered her mouth.\n\n\"Oh my god, I'm so sorry.\" She said.\n\n\"Don't be! It's your life, you should live it the way you want to. What do you want?\" I asked.\n\nShe settled back in her seat as I negotiated the turn into our neighborhood. She stared ahead for a moment.\n\n\"Don't laugh, but I want to draw, and paint. I want to become an animator like, for one of the big movie studios.\" She turned to me. \"Mom thinks it's a stupid dream. I pointed out that there's art all around her and she refuses to see that it's a perfectly normal field of work, one that I would enjoy.\"\n\n\"So what's holding you back?\" I ventured.\n\n\"The usual, money and parental disapproval, mostly money. So I grind away at the store putting as much away as I can hoping to have enough to start next year. Only problem is, I only can get so many hours, so I need to find another job.\"\n\nI turned off the ignition and got out of the car. I opened the back door and grabbed my briefcase and my groceries. Jules closed the other door looping her purse over her shoulder.\n\n\"Do you know of anything around here that I could apply for?\" She asked. I struggled with my bags trying to flip my keys around and she stepped quickly around the car to liberate me of the grocery bags.\n\n\"Thanks.\" I got the key in the door, swung it open and flipped on the lights. Jules followed me in, carrying the bags into the kitchen and setting them on the counter.\n\n\"I mean I can do practically anything. I'm a wiz with word processing, spreadsheets and a lot of other stuff. The problem is I can't seem to find anything that pays enough to put some money away.\"\n\nI listened to her rant as I dug through the bags and stowed the groceries, leaving out what I brought for dinner. I looked up when I noticed that she'd stopped talking. Jules stood at the end of the counter looking into the living room. Piles of old newspapers on the coffee table, a shirt laid over the back of an easy chair, a pair of running shoes kicked off by the sliding door. I realized quickly that she probably hadn't seen the place in a few years. Jan, my ex, was a lot more tidy than I am.\n\nJules let out a low whistle. \"So now I know who the neat freak was. I don't remember ever making it this far into the house with my shoes on before.\" \n\nI laughed. \"Sorry, it's a little more 'lived in' these days.\"\n\nShe looked at me shrewdly for a moment. \"Mr. T? Could you use a hand around here, you know cleaning up, maybe a day a week?\"\n\nI chuckled. \"It's not that bad Jules. I clean when I can't make my way from room to room.\"\n\nShe sighed and climbed onto one of the bar stools along the raised counter.\n\n\"Are you hungry? I picked this up and I'm not sure what I'm doing but there's enough for two.\" I said waving the little recipe card that I picked up.\n\n\"Fish tacos? Sounds good to me.\" She smiled. Her cell started ringing and she dug it out of her bag. \"It's my mom.\" She held up a finger, and answered it.\n\n\"Jules' brothel, the madame is in.\"\n\nMy mouth dropped open as I looked up at her.\n\n\"Well you know mom, it's not easy making money for college. A girl has to do what a girl has to do. Uh huh. No I got a ride home with Mr. Thomson, you know, I used to watch his daughter Sam for him a couple years ago over on Elm Street.\"\n\nA grin spread across her face. \"Yes mom, he's still really cute. Oh don't worry, there's no Mrs. Thomson anymore. Yes, really. Want me to see if I can set you up? He's kind of young for you.\"\n\nI had started smiling and shook my head. I could feel a little warmth in my cheeks and was probably blushing.\n\n\"Okay we're going to have dinner, and I'll head home after. Have fun at work. Yes, he invited me to dinner. Yes mom, I'm sure he's aware that I'm just a silly girl and completely at his mercy. I won't let him take advantage of me, besides, he's been a complete gentleman. He saved me from the evil clutches of 'Meat Market' Bobby. That kid would have told everybody at the store we were screwing if he'd given me a ride home. Okay, love you too, bye.\"\n\nJules just rolled her eyes as she put the phone away and then looked up at me and stifled a fit of giggles. \"Sorry, but I swear she thinks I'm a complete idiot sometimes.\"\n\nI didn't know what to say, so I pushed some ingredients across the counter. \"You make the slaw, while I get the fish on the grill.\" I turned to the sink to rinse and dry the fillets. While I patted down the fillets with a paper towel I got the distinct feeling I was being watched. I wrapped the tortillas and tossed them in the oven to warm. I turned, pulled my tie loose and looked at Jules' progress and noted that there was more of her to see. It appeared she had undone another button on her blouse which now showed an inviting glimpse of cleavage. \n\n\"This was Mark's idea, using the taco seasoning to make the slaw, I can tell. That boy does like his food.\" She said, as if to nobody.\n\n\"Who?\"\n\n\"Mark in seafood. He's asked me out a couple times. He's a good guy, not my type, always reeks of fish.\" She chuckled. \"Toss me that lime would you?\"\n\nBefore long we had a nice little spread on the breakfast bar. I was preparing a taco when Jules stopped me.\n\n\"Nope, come over here and sit, no eating while standing at the counter.\"\n\nI did as told and walked past her, getting a faint smell of flowers as I sat next to her.\n\n\"Oh, do you have any hot sauce?\" She asked.\n\n\"Sure let me...\" I said. She held out her hand and hopped off the stool and walked over to the fridge. She bent over at the waist looking high and low in the door, her tight backside pointing straight at me.\n\n\"Do you want something to drink while I'm in here?\"\n\n\"Sure, can you grab a beer for me, have whatever you want.\"\n\nShe turned pushing the door closed behind her, the bottle of hot sauce in one hand and two beer bottles in the other. She stopped for a moment on the walk back, and I noticed her nipples had hardened in the cold draft and pointed neatly through her top. I stopped, with the taco half way to my mouth and looked at her.\n\nShe flashed her eyes at me. \"Don't forget to spice it up a bit.\" I took no time to imagine what her breasts looked like outside that tight white shirt. She walked in what seemed like slow motion setting down the bottles and twisting the caps off. She handed me one and clinked hers to it before taking a long swallow.\n\nWhen she climbed back onto the stool she crossed her legs, dangling her foot just above mine. The closeness was beginning to make me feel a bit uncomfortable. We ate in relative silence and quickly devoured the contents of every dish.\n\n\"That was good. Thanks for joining me, I don't think it would have made good leftovers.\"\n\n\"You cooked I'll clean.\" She said sliding off the stool once again. She opened up the dishwasher and started loading it up while facing me, her shirt fell open as she did showing her breasts peeking over the top of a white bra. She made another trip to grab the rest of the dishes, and the look she gave me from behind a fallen lock of hair was smoldering. She was trying to seduce me and was doing her best to not look like it. I just gave her a little smile as I finished my beer. Were those little flowers adorning her bra?\n\n\"Mr. T...\"\n\n\"Call me Jay, please. I think you've grown past the Mr. Thomson stage.\"\n\nShe looked up from the dishwasher, a shy smile on her face. \n\n\"Jay?\" She suddenly sounded very serious. \"Can I ask you something?\" Her eyes were wide, she seemed very self conscious all of a sudden as her gaze dropped from mine. \"Did you ever... you know, think about me?\"\n\nMy eyes went a little wider because I got the gist of her question immediately. I swallowed hard before I answered.\n\n\"What do you mean Jules?\" It was a loaded question, and I was a little scared to hear the answer because it would mark me as complete pervert.\n\n\"You know, as a girl, not just some kid who used to sit for you. You know, like a fantasy about...\" She looked up at me, her eyes wide, her cheeks flushed red. She looked embarrassed by her own question. I knew I'd better tread carefully for both my sake and hers. I ran my hand down my face before looking her in the eye.\n\n\"Jules you're just a kid, and that would have been very inappropriate. You've grown into a very attractive girl, but...\"\n\n\"You think I'm attractive?\" She interrupted me and smiled.\n\n\"Listen Jules. You're still just a kid!\"\n\n\"I'll be nineteen in a couple of weeks!\" She said. \"Besides all the guys my age are just boys. All they want is to put a notch in their bedpost and to rack up as many girls as they can like rutting bulls!\" She crossed her arms and leaned back against the counter looking down at her toes. \"I don't want my first time to be with some drunken frat boy in a back bedroom of a strangers house.\" She added softly.\n\nI came up with the best thing I could think of on the fly. \"Jules there's no rush. Take your time, it's not as if it's a race to notch your bedpost either. For that matter, don't hang out at parties with drunken frat boys.\"\n\n\"I know.\" She said, still gazing down at the floor. \"It's just that I want my first time to matter. I want it to be with someone that knows what they're doing.\" She scoffed, looking up at the ceiling. \"Not in somebody's back seat.\" She looked me in the eye. \"I want it to be you.\"\n\nI choked on my beer, coughing and sputtering for several minutes, while my mind raced. \"Whoa! Wait a minute, you haven't seen me in a couple years and suddenly now I'm the romantic lead in some fantasy you've cooked up?\"\n\nShe looked at me with those soft eyes again. \"It's not sudden, you have been for years.\" She looked down again, a sparkle flickered at the corner of her eye.\n\n\"There have been many nights where I got off thinking about you. Giving me a ride home and taking a detour. You find a place to park and start kissing me, and reach under my skirt and stroke me through my panties.\"\n\nMy mouth went dry, and I realized it was because it was hanging open for the last few minutes.\n\n\"You said, 'do what you want Jules.' Well, I'm telling you what I want. I want you to take my virginity.\"\n\nI stood and walked around the counter to stand in front of her. She looked up with those bright eyes, so full of hope that I would do as she asked. I reached down to the button on her blouse, and did it up again.\n\n\"I'm flattered Jules, I really am.\" I started. \"But it wouldn't be right of somebody my age to take advantage of you like that.\"\n\n\"You're thinking about it though, aren't you?\" She said. She then ran her finger up the fly of my slacks and pointed out that the thought had been bouncing around my mind by the tent forming underneath her finger.\n\n\"Do you have a girlfriend Jay?\" She took a different tack.\n\nI sighed. \"No, not currently.\"\n\n\"Well there you go. You're divorced, you don't have a girlfriend, and a semi-cute girl wants to make love to you. What's the problem?\" She added a second finger to the first, rubbing slowly up and down my now very hard cock. My breathing was getting labored. She had a point, she was of age and nothing else should be keeping me from ripping her clothes off and having her right now.\n\n\"First of all, you're very attractive, not semi-cute. Secondly... I don't know, this just isn't right.\" I said taking her wrist and firmly pulling her hand away from my crotch. She reached up with her other hand and started to unbutton my shirt. I took that wrist firmly and pushed both wrists behind her. She took advantage of the position instantly and leaned her body into mine; the heat built up quickly as she reached up and kissed my jaw, working her way down to my chin. I released her hands and took her by the shoulders and pushed her away giving her a little shake.\n\n\"No Jules.! How would you feel if a guy did this to you? If you were being pressured like this, then you wouldn't be a virgin would you?\"\n\nShe looked at me shocked, which quickly turned to anger. She shoved me away, grabbed her bag and left, calling me an asshole and slammed the door shut behind her.\n\nI sighed deeply before reaching for my beer and downed the remainder in one long swallow. I grabbed another and went and flipped on the TV. I chuckled when I flipped through the guide to find that the movie Lolita was on, \"how appropriate,\" I thought. The noise of the television faded away as I thought about what Jules had asked me. \"Have you ever thought about... screwing the nanny?\" I completed her statement in my mind. What guy didn't entertain that fantasy, or one like it? I kept telling myself I did the right thing, while simultaneously thinking about what it would have been like to unbutton her shirt, and take off her bra and nibble my way down her neck and chest until her breasts were within reach. I finally turned the TV off and took a shower. \n\nAs the hot water cascaded down over my head I sighed deeply, tonight's little adventure going through my mind. As I thought about her, and the scenario she posed about sliding a hand up her skirt had my cock at full attention. I imagined her here in the shower with me, which was far too easy to do, water cascading over her breasts, curling back into the contours of her body and not letting go until it reached the tub. I took matters into my own hand as I let the fantasy unfold. We kissed deeply, she apparently had a little practice there as her tongue darted cautiously around, making me chase it with mine. I let my hands slide down her waist pulling her gently towards me, the heat of our bodies increasing with the contact.\n\n\"Fuck!\" I exploded. The water cascaded over my head as I leaned against wall as my muscles relaxed and my breathing steadied. I finished up my shower and threw on a tee shirt and shorts. I ended up staying up late, and finished the rest of the six pack before bed.\n\nI smacked the alarm a second time, knowing I was only going to make myself late if I didn't haul my ass out of bed and move. I grabbed my shorts and tossed on a t-shirt and headed for the door, and pulled on my beat up running shoes for a quick run. I walked out into the driveway and stretched for a few minutes before walking down the driveway and starting off at a slow jog. I wasn't a die-hard runner, but this was cheaper than a gym, and it helped me get the blood going before settling into a desk job all day. I decided to change my normal path, which was usually a couple laps around the park that was a few blocks away from the house. Today I turned right. The subdivision wasn't very old, maybe a few decades, the builder had decided to name all the streets running north to south for trees, the other directions for presidents. As I cut across Jefferson I saw Maple Street, then approached Birch Street. I don't know what made me do it, but I turned down Birch and past Jules house. There was no car in the driveway, and the windows were dark. It was early. Jules told me that her mother worked nights. She must not be home yet. I did another lap and went into the house to hit the shower before work.\n\nI was lucky, I had an office, unlike the cube dwellers down the hall. I guess being the senior logistics coordinator gave me a few benefits. I logged into my computer and started my day. The sales boys were trying to open up a new route for us and I was looking at the cost analysis information for the area when I felt my eyes crossing, probably from the six pack the night before. I shook my head and decided I needed some coffee. The break room was down past the cubicles and I made my way greeting people as I went. I poured myself a cup from the bank of carafes on the counter. I turned and wandered over to the huge bulletin board and scanned the postings. My eyes lit upon the section for job postings. There was a temp job opening for one of my department's assistants. \"Hey Mark?\" I asked one of the guys who was filling his cup. \"Why is there a temp posting for Christine's job up here?\"",
        "\"Seriously? You didn't notice she's like seven months pregnant?\" He replied. \"I think they want to get somebody in place so she can work with them for a few weeks before she goes out on maternity leave.\"\n\n\"Anybody bite? Looks like it's been up here for a week at least.\"\n\nMark just shook his head. \"Nah, it's a glorified gopher position. Christine is awesome but it's more of a bottom rung position. It's not like we don't answer our own phones for the most part.\" He said with a laugh. He was right, we don't get many local calls routed, and if we do they go right to the person through an automated system.\n\n\"I can see why nobody inside would go for it. I may know somebody willing to take it though.\" It was temporary, but it I'm sure we paid Christine better than a grocery store checker.\n\nI ended up working a little late again, and decided to see if I could catch Jules at the store. After the way she left the night before she would probably slam the door in my face if I came knocking. I grabbed a basket and made a quick round getting a couple steaks from the meat case. I figure if she'll listen to me, I might as well make her dinner again. I gathered a few other items before making my way to the front. I looked at each of the lanes and spotted her and got into the short line. When she spied me she gave me an icy stare. She rang me out bagging my groceries as she went. It seemed she wasn't going to speak any more than necessary to get rid of me.\n\n\"Do you need a ride home again Jules?\" I asked.\n\nThe guy behind me in line piped up. \"Isn't she a little young for you buddy?\"\n\nI chuckled. \"She's my neighbors daughter and doesn't have a car.\" I said shrugging him off.\n\n\"Bobby is giving me a ride.\" She replied coolly, as she rung out the guy behind me. I just waited at the end of the check out.\n\n\"Fair enough. I just wanted to give you a heads up on a possible job.\" I said. \"I guess you're not interested in more than what you're making now, and working full time.\" I began to turn.\n\n\"Mister T!\" She hissed as she looked around to see if the front end manager was in hearing range.\n\nShe handed the bags over the counter to the guy that was behind me with a smile, as he left she popped her closed sign up and looked back at me. \"You're not yanking my chain are you?\" She said as she gathered her drawer and began to close down the register.\n\n\"Not in the least. There's an office assistant job at my company that's available. The woman is going on maternity leave. It's only temp, but six months of temp at a lot more than you're getting paid now is hard to pass up. She came back a few minutes later.\n\n\"I called over to Bobby and told him I had a ride.\" She said, still a little sullen from last night. She tilted her head towards the door and we left. \"What's the job like?\" She asked as we reached the car.\n\n\"Office stuff, handle the mail, make copies, very few calls since we're pretty much a call center, calls are routed direct to peoples extensions.\" I chuckled. \"Make sure we have coffee and office supplies, and generally keep the place from falling apart.\"\n\n\"Do I get to sleep with the boss?\" She turned to me with an angelic smile.\n\n\"That's not funny Jules. There are laws about that sort of thing, despite your status of no longer being jail bait.\" I chuckled. \"Besides, you answer to the personnel department, not to anybody specific. So I wouldn't be your boss. You'd basically be our girl-Friday.\"\n\nI pulled into the driveway and shut off the car. I reached over the seat and grabbed my briefcase and pulled out the job application and handed it to her. \"Give it to me when you've filled it out and I'll get it into the right hands.\" She just looked at me for a moment holding the application.\n\n\"You bought two steaks, and two russet potatoes. Having company for dinner?\" She asked raising an eyebrow.\n\nI laughed. \"Well I figure I'd make a peace offering. If you don't want to stay that's fine. I can drop you at your door.\"\n\nShe shook her head and stuffed the paperwork into her purse and got out of the car, and walked towards the kitchen door. She turned and looked over her shoulder at me. \"Are you coming?\" I just laughed and followed her with the groceries. She prepared the potatoes in a way I'd never seen before, sliced most of the way through and well buttered, then wrapped in foil. She told me to set them on the grill about twenty minutes before starting the steaks and turn them every ten minutes or so.\n\nShe asked questions about the job, surprising me with the fact that she wanted to know more about what the company did rather than how much her pay would be. I explained what we did and how long I'd been working there, and the project I was working on to open up a new area we didn't previously cover. She had found a dust covered bottle of red wine in the rack and opened it pouring out two glasses. She watched as I flipped the steaks, and we chatted about nothing in particular. I dropped the steaks on a plate and covered them with foil, grabbed the spuds and turned the grill off.\n\n\"Voila, dinner is served.\" I said turning to Jules who had stepped closer to watch me. \n\n\"Don't drop them.\" She said in a husky tone before she stepped between my arms and kissed me. I returned the kiss with equal fervor until, with a jolt, I realized what I was doing. \n\nI lifted my head sharply, \"Damn it Jules.\" I said gasping for air. \"That's not... I said no.\" I put my best stern expression and stared her down.\n\n\"Sorry, I uh, just wanted to thank you for not being mad at me for yesterday, and the job application, and dinner and everything.\" The fading daylight lit her eyes, and they looked positively feral. No, she wasn't sorry in the least. \n\nWe ate at the dining room table, where she discussed all the drama from the grocery store. She mentioned that one of the managers was having an affair with some girl in produce, and him with a wife and kids. Like before, she did the dishes and cleaned up the kitchen. We finished the wine and she asked me why I didn't have a girlfriend, her tone bordered on amazement.\n\n\"Once you've been bitten by a shark, it's hard to dive back into the ocean.\" I said with a laugh.\n\n\"Come on Jay. You're a good looking guy, you got the house, which really could use a cleaning by the way, did the missus really burn you that bad?\"\n\nI nodded. \"Not financially, thank heaven, but she was very, trying. Once the romance was gone, and we had Samantha, she... hardened. I thought some of it was her job. Have you ever heard of a lawyer being a softy?\" I said with a chuckle.\n\n\"I always thought she was,\" Jules began, then stopped suddenly.\n\n\"What?\" I asked with a smile.\n\n\"Nothing.\" She blushed. \"Well it's just that it looked to me like she treated you as rich bitch treats a butler or something. No respect, no affection, in fact I don't think I ever saw her so much as kiss you in the two years I watched Sam. Some nights I thought she treated me better than she did you.\"\n\n\"Well, after law school and her internship were over and she got into the job, she started getting pretty cold. She went from a wild-eyed smiling hippy, drinking out of a mason jar on a Saturday night to a gray suited stuffed shirt.\" I thought back to those times, hanging out with our friends laughing and having fun. I looked up when I felt Jules hand settle on mine. I quirked an eye at her, but she didn't flinch, instead she gave my hand a little squeeze.\n\n\"From righteous bitch to working for the rich.\" Jules shook her head. \"Her loss will be somebody's gain. You need to move on, two years is enough.\"\n\nI took a deep breath and let it out slowly. She was right, but it wasn't going to be a eighteen year old girl with a nice body and pretty face. \"I'm not quite middle-aged enough to be buying a red sports car and picking up coeds just yet,\" I thought.\n\n\"How fast do you think I could get an interview?\" She asked, bringing me out of my reverie.\n\n\"How fast can you fill out the application?\"\n\nShe reached into her purse and pulled the application out, and pulled out a pen as well. She filled out the information, adding me in the referral field and handed it back to me.\n\n\"That's pretty quick, I'll see what I can do.\" I said with a smile.\n\n\"Put my number into your phone, that way you can let me know.\"\n\n\"I'm sure that personnel will let you know.\" I said. She just rolled her eyes at me.\n\nShe put her glass on the counter and took her purse setting the strap on her shoulder and shook her hair loose. \"Thanks for everything Jay.\"\n\n\"You're welcome Jules.\" I said with a smile.\n\nShe walked to the door and turned. \"Are you sure you don't want to take advantage of me before it becomes sexual harassment?\" She asked with a big grin. I just shook my head. She gave me a wink before closing the door.\n\nI pursed my lips remembering that kiss. It was hard and urgent, as if need drove her to it. I couldn't understand how a girl as pretty as her escaped the clutches of every single guy in high school. I shook off lingering thoughts of Jules and her proposition and watched the news before bed. \n\nI dropped off the application with Christine when I got into the office the next morning. She looked it over before bringing it up to personnel.\n\n\"Is she hot? If you say yes I'm shredding this now.\" She said with a nervous laugh.\n\n\"She's cute, in a high school cheerleader kind of way. Why do you ask?\"\n\n\"I want you guys to want me back in six months!\"\n\n\"Of course we want you to come back.\" I said with a smile. I headed to my office and started my day. I sat there staring at my computer screen lost in thought when Christine came into my office with some paperwork.\n\n\"I knew I should have shredded that application.\" She said.\n\n\"You're just being hormonal. Get out of my office.\" I said laughing as I reached for the folders.\n\nI'd gotten a call from personnel and answered a couple questions about Jules, and knew they were going to bring her in for an informal interview. She was practically hired before she walked through the door. Without surprise Jules was at my door the next evening bouncing like a jumping bean. \n\n\"They hired me on the spot!\" She said as she jumped up throwing her arms around my neck.\n\n\"I knew you'd wow them Jules.\" I replied patting her on the back. She began the following Monday, and started turning heads the first day. She deftly handled her admirers by breezing through their flirtations and keeping her mind on the job. She dressed conservatively the first few weeks. When Christine left for her leave, just a few weeks before she was due, it was if a switch was flipped. Jules went into overdrive. She got permission from the corporate office to unload some no longer usable supplies from the stock room. They had been written off, so she was told to get rid of them. She threw them on some online auction site and deposited nearly a thousand bucks into the office petty cash fund. We soon had a new coffee service which saved us enough to start getting a basket full of snacks from a local bakery on Mondays. She had the cleaning service on notice if they didn't step up their game. I wasn't the only one surprised, Rick in personnel called and said she was a find.\n\nIt had been a month or so and thankfully Jules had kept a low profile with regards to her prior demands that I take her virginity at my earliest convenience. She walked into my office with a couple courier envelopes that afternoon. I hadn't seen her much today as she was on some quarterly project to sort and file invoices. She was dressed in a ivory satin top and a short floral print skirt which teased the dress code until it blushed. It was casual day so I didn't say anything, but like every other guy in the office my eyes lingered on her curves as she moved. I did my best to cover the slip by looking down at the folders she handed me. The top one had no markings like most of the folders in the office. She looked sheepishly at me and quickly left. I shrugged it off and pulled the files towards me and flipped open the top one and beneath a film of tissue paper was a drawing. I looked up and verified my office door was closed. I peeled off the tissue paper and beneath it was a charcoal drawing of Jules. She was kneeling with her head back slightly, she had her blouse open, and it had slid off her shoulders and pooled around her elbows. She had one hand on her breast and one between her legs, her fingers delving into the darkness of the charcoal. I realized my mouth was hanging open and my breath was shallow and fast. I placed the tissue back over the drawing and noticed a sticky note on the inside of the folder. In flowing script it said, \"This was me last night.\"\n\nI ran my hands through my hair and took a deep breath before buzzing Jules at her desk to come see me. She knocked softly on the door jamb before stepping gingerly into the office.\n\n\"Close the door.\" I said, my voice a low growl that I didn't recognize. The sound of it must have been threatening because Jules eyes shot up as she fumbled to close the door.\n\n\"What were you thinking? If somebody were to see this I could lose my job, and not just because it's you.\" I said with a menacing whisper.\n\nSomething snapped in her and her eyes went from spooked to feral. \"What have I been thinking? The same thing I've been thinking about for last two months, no let's be honest, four years Jay. I want those to be your hands on me. If I can't have that, then I'm going to make you see what I feel. Do you know what it's like to see you come in here in your suit and tie, to come near you and smell your after shave, feel your warmth but not be able to touch you? Do you?\"\n\nI was surprised, my anger melted away, replaced by shame. I had no idea she was still feeling this way about me. I figured that she had finally given up, or found someone else to receive the gift she'd been so adamant to give me.\n\n\"I had no idea, I thought you were over it.\" I whispered.\n\n\"This fire has been burning for years, and you're the one I want to put it out, and you won't.\" She said leaning forward on the desk giving me a delicious view down her blouse, her breasts pushed up by a lacy bra. \"This is the blouse I was wearing when I did it.\" She stood and lifted her skirt slightly and tugged a few times and lace panties slid down her thighs. She lifted each leg taking them off and deposited them on the folder. \"I came twice in these today just thinking about you getting hard when you saw this.\" She tapped on the folder. \"You keep them, and know that what was in them is available any time you want it.\" She buttoned up her blouse to a more demure level and turned and walked out of my office, closing the door gently behind her.\n\nI started gasping, unaware that I'd stopped breathing. She had no idea, thanks to my desk, that I was hard, my erection strained against my slacks. My wits began gathering as my breathing slowed. I swiped the panties of the desk and took the folder and put both into my briefcase as quickly as possible and got back to work. I don't know what I did for the next fifteen minutes. It was too early in the afternoon to leave for the day. Which was good because there was no way I could get up from my desk until the excitement passed.\n\nThere was a soft knock on my door. I told who ever it was to come in and tried to pull myself together. Jules walked in with a fresh cup of coffee, closing the door behind her. Rather than set it down, she walked around and stood beside me before she leaned forward slightly and set it on the desk. I could smell her perfume, it smelled of wild flowers. I took a deep breath and steadied myself before mumbling a thank you. She turned to face me, daring me to say something about what had just happened. I looked at her, my gaze slipping down her torso pausing at her breasts. She inhaled slightly making them rise subtly. The image of her bent over my desk flashed through my mind as my gaze wandered down past her waist, settling on the hem of her skirt. My breath was coming in short gasps again. My hand reached out of its own volition, fingers grazing the inside of her thigh. She gasped and held her breath as my fingers slid slowly up the soft skin. We were both startled by a sharp rap on the door. She quickly grabbed a folder off the corner of the desk and made her way to the door.\n\n\"I'll take care of this, do you need anything else?\" She said as she opened the door waving the folder boldly at me. \"Oh, sorry.\" She said to the intruder.\n\n\"Uh, no thanks, that's all I need.\" I said, thankful that she was quick to react, and well. One of the guys from sales was peppering me with questions about a new contract he was writing and I did my best to put Jules out of my mind, which was no small task.\n\nThankfully I made it out of the building without crossing paths with her again. I breathed deeply, relieved that I had the weekend to clear my head. If I'd known about the living hell I was about to put myself through I never would have helped her get the job.\n\nSaturday morning dawned bright, and me with it despite it being my day off. I decided to go for a quick jog to get my blood pumping. I put on my beat up shoes and headed out. Once again I found myself turning right at the end of the block and once more I had turned down Birch street, passing by her house. Her mother's car was there this morning, she must not have had to work last night, I thought. I picked up the pace and jogged down several more blocks and turned back, walking the last block to my house. I pulled my t-shirt over my head and wiped my face and chest with it before I stepped in through the sliding glass door into the house. I froze instantly as I noticed the coffee table had been neatened, the newspapers were gone, the magazines stacked. The empty beer bottle from last night was gone. I looked up my eyes darting around in the dim light. The scent of fresh coffee wafted towards me and saw the little red light on the maker. I listened for noise to tell me where she was as I quickly realized it had to be Jules here in the house. I heard a bump and water run, she was in the master bath. I made my way down the hall quietly, not letting on that I was in the house. The bed was made, the clothes I'd left on the floor were picked up and I turned the corner and looked through the bathroom door. She was leaning forward wiping down the counter with a towel, wearing a tank top and denim shorts. When she stood up she saw me in the mirror and let out a yell and grabbed her chest.\n\n\"Jesus, you scared the shit out of me Jay!\"\n\n\"Imagine how I felt when I found my home invaded by a serial cleaner.\" I turned and tossed my t-shirt towards the closet door.\n\n\"Really? I just picked up a bunch of your clothes off the floor.\" She sounded annoyed.\n\n\"Really?\" I shot back at her. \"I don't remember asking you to clean anything! Go home Jules.\" I turned to see her standing in the bathroom doorway, her arms crossed beneath her breasts. I looked her up and down again quickly and realized that the shorts were actually a mini skirt.\n\n\"No.\"Her voice had lost it's edge and volume. \"I want you to finish what you started yesterday.\" She offered meekly.\n\nI took a step towards her and realized that would be a foolish idea and stopped. I rubbed my face with both hands trying to clear my head, when I put them down Jules had begun taking her top off. She had one arm free, her lacy little bra was faded blue like old denim.\n\n\"Stop! If you go any further I will toss your ass out onto the front lawn and your clothes behind you. She pouted for a moment, then a sly smile that scared the hell out of me spread across her face.\n\n\"I'm sure that Mrs. Dickinson next door would love to see me screaming at the front door about how I trusted you after being your sitter for two years, and how you took my virginity, and just tossed me out the door and my clothes behind me.\" She removed the top and stood there in her bra and the skirt. I felt like my heart begin pounding as if I were still running.",
        "Threats weren't going to work, I changed tack. I turned and sat on the corner of the bed, elbows on my knees, and looked at the floor. \"You'd do that to me? You would ruin me for your own ends?\" \n\nI hoped she was bluffing. She stepped in front of me, nearly between my knees. \"Finish what you started yesterday at work.\" She wasn't demanding, she was pleading. I looked at her smooth skin, the slight curve of her shins leading up to her knees, the patella outlined neatly. My eyes continued upwards to her trim thighs and the very short hem of her skirt.\n\n\"Please Jay.\"\n\nI looked up to her face contorted in a grimace, tears flowing from her eyes.\n\n\"Please.\" She whispered.\n\nI looked down at her legs again, and reached out placing my hand on the back of her knee and ran it up the back of her thigh. Her breathing was ragged. I rested my other hand on the inside of her knee and began running it up her thigh, she moved her foot, parting her legs slightly. I stopped at the hem of the skirt, her body was shaking in my hands. I looked up at her face. Her mouth hung open, her eyes shut tight. Her breathing was fast and shallow, her chest rose and fell with each quick gasp. Her eyes opened after realizing I'd stopped, and she looked down.\n\n\"What are you wearing underneath?\" I asked, my voice sounding strange to my ears.\n\nA defiant gleam lit her eyes. \"Keep going and find out.\"\n\nI looked down at the front of her skirt and lifted one hand, pushing the skirt up in back until I was cupping her ass. I lifted the other slowly. \"Tell me you want me to stop.\"\n\n\"I don't want you to stop.\" She whispered.\n\nI felt no resistance as my fingers found the center of her, the heat was incredible, the moisture made my fingers slick. My thumb slid upward eliciting a gasp from over my head. I stopped again. My breathing was getting as ragged as hers. She let out the smallest whimper and pushed her hips forward into my hand. I let her go and stood. Her eyes bolted open her expression complete shock when she looked up at me.\n\n\"No!\" She whimpered. \"Please Jay!\" She reached up and wrapped her arms around my neck and I lost myself as I leaned down and kissed her. I pulled her to me, the soft fabric of her bra pressed into my chest. I reached up behind her and fumbled for the clasp and undid it. I ran my hands up the shoulder straps and slipped them off. I took her by the hips as she leaned back slightly and slipped it off tossing it aside. I looked into her eyes and let my eyes slide down her face, her neck and settle on her chest.\n\n\"You're more beautiful than I'd imagined.\" I said softly as I looked up at her. Her lower lip quivered.\n\n\"You thought about me?\"\n\n\"Practically every day since you told me you wanted me to be the first to make love to you.\" A tear rolled down her cheek and I reached up and thumbed it away. \"I haven't been able to concentrate at work because of you. Your smile, your eyes, even the smell of your perfume completely unhinge me.\" She reached behind her with both hands and I grabbed them, lifting them away from the zipper. She was pinned against me, the smooth softness of her breasts pressed into my chest. \"There's no hurry.\" Her eyes closed part way as she leaned forward and kissed my jaw, trailing more down my neck. I let her hands go and slid mine down to cup her backside pulling her against me fully. Her arms reached around my neck and pulled my lips down to hers.\n\n\"I can't wait, to feel you.\" She said between kisses.\n\n\"I can't believe I'm saying this, but I hope I live up to the fantasy you've cooked up in that pretty little head of yours.\" My hands came together to find the zipper and pulled it down until it stopped. My thumbs slipped into the waist and began pushing the denim over her hips. She leaned back slightly and they fell away. She kicked them off and looked up at me, our eyes met for a moment and she stepped back so I could take her in. She was stunning, her trim waist gave way to the curve of her hips. My eyes trailed lower where she was completely shaved.\n\nShe roused me from my appreciation by taking my hand and turning me around, trading places with me as she sat on the end of the bed. She was eye level with the tent that had become of my running shorts. She looked straight at the front of them, then up at me and back down. She reached for the waist slowly and began pulling them down, they caught on my erection. A little smile flickered across her lips as she pulled the front away from me exposing the snag. Both her eyes and mouth opened slightly as she ogled me. She placed her hands in her lap and looked up at me.\n\n\"Is that because of me?\"\n\nI nodded slightly. \"I wish I could say it was the first that was because of you.\"\n\nA radiant smile spread across her face. She looked me over, appraising me I thought, before raising a hand slowly and took me gently in her hand. I inhaled through my nose causing her to pull back quickly. She looked up at me concerned.\n\n\"Does it hurt?\"\n\nI closed my eyes for a moment, and opened them again, a slight smile on my face. \"Only if left like this for too long.\"\n\nShe took me in hand again, her hand grasped gently and she stroked a few times. My eyes closed again and felt the excruciating slow strokes fuel my desire. I grabbed her hand, stopping her. I looked down to find her wide eyes looking up. I shook my head, while trying to slow my breathing.\n\nI took her hand gently off of me and lifted her off the bed. I walked around and pulled down the covers took her by the hips and tossed her onto the sheets with a yelp. A mixed look of surprise and panic crossed her face. I pulled open the drawer of the nightstand and fumbled knowing I had a couple in there somewhere. I came up with a packet and put the corner of it in my mouth. \n\n\"Wait!\" She held up her hand. \"I'm on the pill.\"\n\nA blinding moment of clarity hit me as I realized she'd manipulated me completely to get to this point. I didn't trust her, but I had to have her now and tore the packet open and applied the condom. I reached down and took her ankles parting them none to gently as I climbed onto the bed.\n\n\"This may hurt a bit, the first time. My voice was deep and full of pent up lust for this slip of a girl. I looked down at her. The fear in her eyes palpable. \"Tell me to stop Julia. Tell me that you don't want this.\"\n\nThe look in her eyes softened as she shook her head slowly and parted her legs further. \"I do want you Jay, please.\"\n\nI leaned forward and entered her slowly, her hands gripped my shoulders, her lip held tight between her teeth as I pushed forward and stopped.\n\n\"Am I hurting you?\"\n\nShe looked up at me and she shook her head rapidly. \"No.\" She whimpered.\n\nI tilted my hips and pushed into her as deeply as I could in a single stroke causing her to cry out.\n\n\"Oh God, I'm sorry, I..\" I fumbled.\n\nShe looked up, a mix of relief and pain in her eyes as a tear ran down into her hair. \"I know.\" She let out a little laugh. \"I've done a little reading on it.\"\n\nThat caused me to laugh as she released her grip from my shoulders and ran her fingers up behind my neck and pulled my face down to hers. She pushed her hips up against me in bold reminder of what we were doing. I took her gently but swiftly. It had been so long I knew I couldn't last. She mewed and whimpered and I climaxed pushing into her as I did.\n\nI recovered as quickly as I could, and rolled off of her. \"That's what you wanted isn't it? You're not a virgin any more.\" I rolled onto my side propping my head on my hand. I looked down at her and she was staring up at the ceiling blankly. \"Jules?\"\n\nShe blinked a few times and turned her head slightly. \"You fucked me.\" Her voice was faint.\n\nI nodded slightly. \"There's a big difference between sex and love Jules.\" A tear rolled down her face and into her hair. \"I'd like to show you the difference.\" \n\n\"Please? That's not how I imagined it.\"\n\n\"First I need a shower, between the run, and that, I feel a little sweaty.\" She pouted. \"I was hoping you'd join me.\" Her eyes lit up and a little smile touched the corners of her mouth. I stood and took her by the arms and pulled her upright, her eyes bolted open as she hopped off the bed and looked over her shoulder at the wet spot, then down at my semi-flaccid cock, still wearing the now bulging condom.\n\n\"Did I do that?\"\n\nI laughed. \"I may have helped, but yes, that's all you.\"\n\n\"I'm sorry.\" She added meekly.\n\nI lifted her chin. \"I'm not.\" I kissed her before took her by the hand and guided her into the bathroom. I disposed of of the condom and turned on the shower. Jules stood still watching me move around. \"Is this too hot?\" She looked dazed for a moment and walked over to the shower and held her hand under the water and stepped into the spray. I watched the water cascade over her body and slip into the tub and vowed to myself that I'd take my time and do this right for her.\n\nShe turned to face me, taking the soap off the holder and began rubbing up and down my chest and arms getting me lathered. \"Turn around.\" She worked a lather down my back, all the way down to my ass and legs. I turned back and she worked her way up, my cock standing up hard once again. Her cheeks lifted in a quick smile as she lathered it up stroking gently. This time I wasn't worried I'd erupt too soon and let her explore. She lifted it and cupped my balls lathering them too, her grip was a bit firm, but a noise from me and she released them. \"Sorry.\" She whispered. After rinsing off me off she reached forward, tentatively and took the tip of my cock between her lips. She experimented for a few minutes, licking and sucking my cock, her innocent ministration had me very hard in no time. I stopped her and pulled her upright and began washing her.\n\n\"We'd better finish before we run out of hot water.\" I said smiling. She turned her back to me and leaned into me as I ran my soapy hands up and down her torso. Her small breasts were high and firm, the small pink nipples hard under my hands. She let out a low hum as I reached lower across her stomach and between her legs. I slipped a hand beneath her and stroked back slow and deep, eliciting a louder moan as I dragged my fingers across her clit. \"How does that feel?\" I whispered in her ear as I did it once more. The other hand cupped her breast and gently pinched her nipple. Her breathing was ragged and quick. I let my hand slide up her stomach again, she grabbed my wrist trying to push it back down and I chuckled in her ear. \"So impatient.\" I pushed her forward slightly and gave her a loud slap on the ass causing her to yelp again. She turned on me a feral gleam in her eyes and made sure she was completely rinsed off before she turned the water off. \n\nShe toweled off slowly, meeting my gaze, and sneaking peeks at me as she did. I was hard as a old hickory again and she looked down at it once or twice. She turned to the mirror and ran her fingers through her hair while patting it dry. \"I wish my boobs had gotten bigger.\" I threw my towel over the bar and walked up behind her and took her shoulders in my hands.\n\n\"No. You're perfect just the way you are. These don't make you a woman, they don't make you sexy or desirable. At least not to a real man. This,\" I tapped her temple, \"and this,\" I touched my fingers between her breasts, \"is where sexy resides. It's in your intelligence, your confidence, and your warmth.\" She looked up at me in the mirror and swallowed visibly.\n\n\"I have that?\"\n\nI chuckled. \"Well you seemed pretty confident that this would happen and here we are.\"\n\n\"I think I begged a lot too.\" She smiled and bit her lip.\n\nI ran my hand up her to her breast, the other down her hip. \"I guess what I'm trying to say is that you're a smart, beautiful, passionate young woman, and I want you to promise me that you'll always keep that foremost in mind. Those are your finest qualities, not these.\" I said giving her breast and backside a gentle squeeze.\n\n\"So I'm not sexy?\" She said with a little smile, fishing for a compliment.\n\nI laughed softly and kissed the top of her head, and pulled her back against me so she could feel my cock sliding up along her lower back. \"Do you know what it's like being trapped behind my desk in a permanent state of erection every time you wear a short skirt or low cut top to work?\"\n\nJules reached her hand behind her and ran it up her back until she had my cock in her hand. \"I'd say I was sorry, but I'd be lying.\" She grinned ear to ear at me in the mirror. \"Now that we're nice and clean, why don't we get sweaty again?\" Her eyebrows went up.\n\n\"I think I've created a monster.\" I said as she led me out of the bath by the hand and brought me to bed. She climbed onto the mattress and stopped to look at the wet spot again. I walked up behind her and took her in my arms again. The mattress was higher and I was nestled between her cheeks as I ran my hands around her body, one massaging her breast, the other sliding down her stomach. \"Is this how you imagined it that night Julia? My hands running all over your body.\" I slipped my fingers down between her legs. I kissed the base of her neck as I stroked her slowly. She let out a soft moan. \"How did you do it?\" I whispered in her ear and kissed my way back down her neck, her body shivered against me. \"Did you rub yourself like this?\" I began rubbing her clit in slow circular motion. She pushed into my hand, her hips rocking like a boat on a choppy lake. \"Did you use your fingers?\" I spread her lips and slipped my middle finger into her, stroking in and out keeping pressure on her clit.\n\n\"Aww...\" She moaned.\n\n\"I bet you taste divine.\" I growled into her ear as I slipped my finger out of her. She let out a small whimper as I lifted my hand to my face and licked the dew from fingers.\n\n\"Lay down.\" I gasped. Jules did as I asked and rolled over and spread her legs of her own volition. I took her by the calves and dragged her closer to the edge and knelt down placed my tongue against her lips, parting them as I dragged it upward. I tried several different things to gauge her reaction when I thought she'd had enough I went after her clit again and slipped a finger back into her. A few minutes of me increasing the pace caused her to lift her hips and she moaned loudly. I didn't let up and rode out the writhing of her hips as she settled back to the mattress. I continued to clean her up and licked my finger clean. Her breathing was ragged as her legs flexed, her heels rubbing my upper back.\n\n\"Jay. Come up here.\" She unwrapped her legs from around my neck and scooted back on the bed. I stood and stretched my legs. She lay across the mattress, the sunlight pouring through the window dappled her creamy skin. She lay on her side, head on her hand and watched me. The swell of her hip enhanced her pose, one knee in front of the other. I followed the curve of it to the slight hollow of her waist and the swell of her breasts, topped with pale pink nipples. I looked at her, she looked at my cock, her tongue running slowly along her lower lip. \"Lay down.\" She rubbed the sheets in front of her. I did as she asked, and turned to face her. She reached down and took me in her hand. I closed my eyes at the pleasure of her soft hand stroking painfully slow. \"Lay back.\" She whispered. She laid her head on my hip getting a close up view of what she was doing to me. Her thumb circled the head getting covered in the moisture that was leaking there. She let me go and brought her thumb to her mouth and sucked it clean. \"Salty.\" She said as she returned her hand and began stroking gently again. She noticed my breathing was fast and shallow and rolled up onto her knees and climbed between my outstretched legs and placed my cock between her lips. It was a slow kiss, delicate, wet and probing. I inhaled sharply and her eyes came up to mine. I had fantasies like this, more so in the last month, and I couldn't believe it was happening. Emboldened by my reactions she let her tongue slide down a little further, licking the shaft carefully. The licks got longer until she was holding the base of my cock and going after it like the first ice cream cone of summer. She took the head in her mouth and began taking slow strokes at first testing her capabilities. She lifted her head and looked up at me through fallen locks. \"Am I doing this right?\" She dove on my cock once more causing me to gasp with her enthusiasm.\n\n\"If you keep it up you're going to find out quickly.\" I gasped. As quickly as it began, it ended as she raised her head again and licked her lips clean.\n\n\"You said you'd make love to me.\" Her voice soft and heartbreaking in its innocence.\n\nMy head fell back against the mattress. \"Come up here Jules.\" I panted, patting the bed beside me. She laid down and put her head on my shoulder. She couldn't reach my cock and settled for rubbing her fingers up and down my stomach as she lopped her leg over mine. I sighed as my breathing slowed to normal. \"You see that? That's a hard cock.\" I laughed. \"It may have a head, but it can't think. It has no conscience, it only wants relief. It has nothing to do with love.\" I stroked her back with my hand and gestured with my other. \"There's a difference between loving someone and being in love with them. You have to be in love with them to make love to them. Fuck that doesn't even make sense to me.\"\n\nJules giggled. \"I do love you though.\"\n\nI sighed again and measured my response. \"One of the foundations of love is trust Jules. When you said you were on the pill, I didn't trust you and put the condom on. Everything you've done to get into this position has been sneaky, under-handed and forced. You bullied me into this no matter how many times I said no. You can't force someone to love you Jules. Here I lay, with an incredibly hard cock, and my conscience has gotten the better of me.\"\n\nJules sat up and scrambled over me and reached for the nightstand drawer and tugged it open. She pawed around and looked over her shoulder at me and held up a small half-empty bottle of lubricant. A smile spread across her face.\n\nI laughed. \"I told you, the short skirts and low cut tops were getting the better of me. I had to take matters into my own hands.\"\n\nShe dropped it back in the drawer and pulled out another condom. She hadn't turned yet, she just stared at me over her shoulder as I rubbed her ass, dimpling the flesh with my fingers as I massaged it slowly.\n\n\"You thought about me? About fucking me?\"\n\nI laughed. \"That bottle was full last week. I hardly think I'm the only one at work who has.\"\n\n\"You aren't, three guys have asked me out since I started.\" She giggled as she turned around and looked at the packet in her hand. \"Jay?\"\n\n\"What Jules?\"\n\n\"Can we do it again, only slower?\" She put the corner of the packet between her teeth and pulled gently. She pulled it out of the sleeve and placed it atop my cock and unrolled it down the length of me.\n\nI was breathing deep and quick once again. \"The only way you're going to get slow is for you to do it. Are you ready?\"\n\nJules eyes went up at that. I directed her to straddle me, she sat up and took my cock and slowly slid down onto it. We both gasped at the feeling. She was incredibly tight and I had to close my eyes hard to keep from rolling her over and taking her like I had before. I ran my hands up her thighs, and took her hips as she rose slightly and rocked back down. She let out a guttural moan as she did it again. I let my hands slide over the curve of her hips and to the narrow waist before taking her breasts in my hands, kneading them gently before stroking the nipples. Jules exhaled sharply as she leaned into my hands.\n\n\"How do you feel.\" I asked.\n\n\"Like I'm on fire. So, full.\" Her hands met over her lower abdomen. \"It's like liquid heat. Is that how it's supposed to feel?\" Her eyes opened to slits and saw my grin and she began to smile.",
        "\"If it feels good, then you're doing it right.\" Her eyes closed as she let out a low hum and rocked her hips in a slow rhythm as if she were riding a horse. I slid my hand back down her side and ran it up the inside of her leg, delving into the heated confines and began rubbing her clit as she rocked. Her mouth dropped open and she started gasping, rocking forward as much as she could to keep the pressure up, before long she was past the point of caring how she sounded. Her hand had an iron grip on my forearm, a blatant demand that I not let up. She let out two, then three loud gasps and went slowly limp. Her grip on my arm changed from holding me in place to holding herself upright.\n\nShe breathed deeply for a few moments, her eyes shut tight. She leaned forward and raised herself off me and rolled to the side before opening her eyes. She stared at the ceiling for a few minutes, her breath slowing.\n\n\"That was intense.\"\n\nI let out a breathless laugh.\n\n\"Holy shit Jay. Still?\" Her eyes were riveted on my still hard cock. She glanced quickly up at me. \"Is that normal?\"\n\nI laughed a little louder. \"Not even remotely. It's because I'm in bed with a beautiful, desirable, and insatiable woman. I thi...\" Jules rolled over and took my mouth with hers. She may not have had sex before, but she was skilled at making out. My hands roamed over her, feeling the dip at the small of her back leading to the swell of her ass. I grabbed at it with a firm but gentle grip.\n\n\"Tell me Jay. Tell me what it's going to take to tame that beast?\" Her fingers traced circles in the whorls of my chest hair. She found my nipple and rubbed it gently causing me to gasp. A bright smile spread across her lips at the discovery. She lowered her head and took it into her mouth and sucked on it gently licking it with the tip of her tongue.\n\n\"Well that's not taming it, that's making it worse.\" I gasped.\n\n\"Then what? What can I do to help?\" Her voice was so sincere and innocent it made me swell with desire.\n\n\"Are you really on the pill?\"\n\nJules didn't reply, she just rolled off the bed, and took a few shaky steps towards the bedroom door. She darted back in, looking over her shoulder. \"I forgot you had that big bay window and the mailman is walking down the sidewalk.\" She grinned.\n\n\"Oh no. Did he get an eye full?\" I said laughing.\n\n\"No, he never looked up from the mail in his hands.\" She giggled. She sat on the edge of the bed and opened a little plastic compact. \"See, the twelfth. I'm up to date.\" She sighed. \"They taught us plenty in those health classes, but not what to do about this. I know this isn't normal and I consider it a compliment.\" She grinned again a blush colored her cheeks. \n\nI rolled off the bed and went into the bath and took the condom off and washed up. When I returned Jules had scooted to the center of the bed, her legs tucked beneath her, running her fingers through her hair like a pin up model. She looked down at my now naked cock and her eyes slowly rose up to mine. Her mouth opened slightly. Her eyes went wide when they locked on mine.\n\n\"Do you really want to do this Jules.\" I felt my chest tighten. \"It may be a little, uncomfortable, like before.\" \n\nShe nodded, her mouth still open.\n\n\"Pile up the pillows.\" I said before walking around to the nightstand and picking up the bottle of lubricant she'd teased me about. \"Bend over them with your ass in the air.\" My voice turned into a harsh whisper.\n\nJules mouth opened further and she shook her head. \"No.\" It came to be me that she thought that was my target. I felt the corner of my mouth rise slightly.\n\n\"Just do it Jules, it's not what you're thinking. Trust me.\"\n\nShe turned slowly and leaned over the stack of pillows, her knees still together. I reached down and took her knees and pulled them apart opening her to me. I pushed my cock into her slowly groaning the entire length. She let out a long low hum as I sank into her.\n\n\"Jules, if I hurt you, you have to tell me so I can stop.\" She answered with a gentle wiggle of her butt. \"Jules!\" I grunted and laid my palm hard against her ass causing her to let out a yelp before she giggled. I started slowly but couldn't hold back before I began pumping into her with complete abandon. Her hands gripped the sheets on either side of her head as I pinned her to the mattress by the neck.\n\nI felt like I had blacked out when I heard her cry out my name. \"Jay, let go! My neck.\" She sounded like she was in pain and I let go of her neck and leaned back, my cock coming free of her.\n\n\"I'm sorry.\"\n\nJules sat up and rotated her head, stretching her neck. \"I'm not. I just think you blacked out for a minute. I can't blame you, that was intense.\" She said with a deep sigh. I looked down and noticed I'd finally found relief and my erection had given out. \n\nI laid down and tried to get my breathing under control again. Jules slid over and nestled under my arm like she belonged there.\n\nI roused to a pain in my shoulder and reached for it without thinking.\n\n\"Ow! What was that for?\" Jules asked while rubbing where I'd accidentally cuffed her on the head.\n\n\"Sorry, something was scratching my shoulder and I reached for it without thinking.\"\n\n\"Oh.\" She lifted her head with a little yawn. \"I didn't realize it was so energy intensive.\" She added.\n\nI looked and noticed a little gold star earring which was likely the culprit. I took her earlobe between my fingers and rubbed the star.\n\n\"Ah, sorry about that.\" She sat up and reached for the earring and removed it, then the other and leaned over me to set them on the nightstand. I ran my hand down the small of her back and gave her ass a whack. She yelped in surprise. \"Careful, you're likely to get me all worked up again.\" She said looking back at me over her shoulder with a smile. She turned and laid squarely on my chest and nestled her head next to mine. I crossed my arms over her lower back, Jules response was a soft hum of contentment and a kiss to the side of my neck.\n\n\"You know, it's amazing when the blood rushes back to the other head that it makes me wonder why you're on birth control if you were a virgin.\" I said with a soft laugh into her hair.\n\n\"Mom. Last year we had 'the talk' something along the lines of, \"Don't make me a grandmother I'm too young for that just yet.\" She pointed out it's better to be safe than sorry. You never know when the opportunity will arise and you're not prepared for it.\" She turned her head away from me, her cheek resting on my shoulder. \"I know she's going to figure it out, that I've been with a man, in the biblical sense.\" She added in a dramatic Southern drawl and ended with a snicker.\n\n\"Should I be worried?\"\n\n\"No, dispatchers don't carry firearms, you're safe.\" She giggled.\n\n\"Well if I'm going to out I might as well go out with a bang.\" I rolled her onto her back with a surprised yelp. She looked up at me surprised, a grin matching my own spread across her face just before I leaned down to kiss her. We took our time, the urgency had passed and I explored her body at my own pace. Soft gasps and low hums filled the room as we made love again.\n\nI lay propped on my elbows over her as she kissed random places on my face, our lips meeting every few moments. \"Now that's how I imagined it.\" She said with a little smile, her eyes squinting in the bright light of the windows.\n\nA loud growl came from between us making us both laugh. \"I think there are other hungers needing to be fed. I missed breakfast.\"\n\nJules looked at the clock on the nightstand. \"Lunch too.\" She grinned. I rolled to the side and let out a deep breath. \n\nI looked over when Jules made a noise in the back of her throat. She sat up carefully. \"One thing that the romance novels and movies fail to let you know about sex is how sticky, wet and smelly it is.\" She laughed, and padded carefully to the bathroom. I got up and stripped the bed, agreeing it was all of the above. I dropped the sheets into the hamper and left the bed unmade. I peeked into the open bathroom door to find Jules standing in front of the mirror looking at herself. She turned her face back and forth. I was unsure what she was looking for in her reflection. There was anticipation in her expression as if she were looking for something.\n\n\"Are you okay?\"\n\nHer head snapped around, eyes wide. \"Yea! I uh, uh.\" She looked down at the counter, I could see her throat flex as she swallowed. \"I just was looking for what you saw in me, when you said I was attractive.\"\n\nI don't know what I was expecting but that was an emotional punch to the stomach. I took a deep breath, let it out slowly and reached for her shoulder. She looked up at me, her eyes wide and brimming, but she wasn't crying, not yet at least. I turned her away from the mirror so she was facing me. \"You're looking in the wrong place. That's not what makes you truly attractive, beautiful in fact. That's in here,\" I set my fingers between her breasts, \"and here.\" I moved them up to her temple. \"Anyone can pull that off.\" I hiked a thumb at the mirror. \"That kind of beauty really is only skin deep.\" The tear rolled down her cheek then. \"Work on these two, and you won't need to worry about her.\" I pointed at the mirror again. \"She'll just go along for the ride.\" My stomach chose to remind me about it's own needs just then, causing us to both break out in giggles.\n\n\"Thank you.\" She whispered as she wrapped her arms around my neck.\n\n\"Let's get cleaned up and we can go out and get something to eat.\"\n\nShe leaned back and looked up at me. \"Is that safe? I mean if someone from work saw us.\"\n\n\"I know a place. Do you mind seafood again?\"\n\nShe shook her head, a smile spreading across her face.\n\n\"Good there's a place down the coast a bit that has it right off the boat. Best crab cakes ever.\"\n\nShe slipped past me without a word and came back with her purse, setting it on the counter and opening it up. She took a hair brush and leaned forward brushing out her mane before giving it a few twists and pinned it to the top of her head with a clip. She slipped past me into the bedroom again. I shook my head and chuckled as I cleaned up. I walked out into the bedroom and she went past me into the bathroom again. I dressed and looked in the bathroom to where Jules was brushing on mascara.\n\n\"I don't think the fish care if you're all made up, it's a dockside tavern and grill, not the red carpet at the Oscars.\"\n\n\"I wanted to look nice for you.\"\n\n\"You look beautiful despite me.\" I said smiling. \"Did you have a sweater or a coat, it might be cool on the water.\" She shook her head. \"Let me see what I might pull off, unless you want to swing by your house to pick one up.\" Her eyes went wide. \"Ah, your mother's not working?\"\n\nShe shook her head again. \"She's probably asleep though.\" She looked anxious as if she were afraid her mother would find out. I couldn't blame her, I wasn't keen on that either. The implications began to crash together and I turned towards my closet and found a flannel shirt that would probably keep her warm. \n\n\"Oh and another thing, skirt up please.\"\n\nShe broke into a broad grin. \"What?\"\n\n\"I have no qualms about taking you out to dinner, or for that matter you wearing a sexy mini skirt, but I want to be sure you're sporting something underneath lest you go around flashing everybody in sight.\" I said with a laugh.\n\nShe gave me a sexy look and reached down and lifted the hem slowly revealing blue lace panties, the same color as the bra she was wearing earlier. \"Happy now?\"\n\n\"Drop it before I call out for a pizza instead.\"\n\nHer smile broadened even further as she took the flannel shirt and slipped it on. She rolled the cuffs up several times then slipped it back off. \"Informal yet chic. This may start a new fashion trend.\" She picked up her bag and left. She looked around quickly to see if anyone saw her getting into my car.\n\n\"Did you want to scoot down?\"\n\nShe looked at me, concern flooded her face. \"I'll keep my head down, nobody will see me.\"\n\nI laughed. \"I was joking, but it might not be a bad idea until we get out of the neighborhood. You're an adult, you don't have to sneak around any more.\"\n\n\"Except when you're hanging around with the divorced father of the kid you used to sit. That would make for gossip gold.\"\n\n\"Good point, put the shirt over your head so anybody that sees you will think I'm going to the cleaners.\" For a moment she thought I was serious, then grinned as I backed out of the driveway.\n\nI drove along the river above the tidal waters that overlooked the delta.\n\n\"I'm sorry.\" I barely heard her over the music on the radio. I looked to the side and saw a wet streak running down her cheek. I pulled to the side of the road at an overlook and stopped.\n\n\"What's wrong?\"\n\n\"I've just been thinking about what I did.\" She swallowed deeply and opened her mouth to speak again but didn't say anything more. She took another shaky breath. \"I'm sorry I pressured you into it.\" She stared straight ahead.\n\n\"Jules, you probably don't weigh a hundred pounds soaking wet. I'd hardly say that you forced me to do anything that I wasn't already thinking about.\"\n\nAnother tear joined the first, her brow screwed up tight. \"I know, but then I threatened you with being found out without having done anything. That was a shit thing to do.\" She was about to speak again. I stopped her by placing my thumb over her lips.\n\n\"Yes, it was. Conscience is a real bitch isn't it?\" I took a breath and let it out quickly, but I stopped myself from softening the blow. I felt it was important that she realize what she did was wrong. I turned off the ignition and unbuckled my seat belt, then hers and pulled her towards me. She turned into my arms as best she could over the console. \"I don't want you to beat yourself up over it any more. I have no hard feelings towards you, and I don't want you to feel bad about it either. I just want you to realize that there are real consequences to actions.\" I kissed her behind the ear. \"When we go to work Monday, we can pretend it didn't happen. Which would probably be for the best.\" I said chuckling softly.\n\nShe sniffled loudly. \"I don't want to pretend it didn't happen. I want to tell everybody. I want them to know that I'm a complete asshole and I shouldn't be trusted.\"\n\n\"Stop it.\" I said pulling back from her and giving her a gentle shake. \"I told you, if I didn't want to, then we wouldn't have done anything.\" I took a deep breath and let it out slowly. She looked up at me, her face the picture of misery. \"Jules.\" I felt like my throat was closing up. \"I couldn't have made love to you if I didn't have those feelings for you.\" Her expression changed from misery to surprise. \"But,\" I added quickly, \"there is no way you should be saddled with a geezer like me. You have so much to experience, so much to learn. Don't be in love with me.\"\n\nShe swallowed hard and looked into my eyes and nodded slightly. \"I'll try.\"\n\nI let out a sardonic chuckle at that. \"That's a first. I've never tried to convince a beautiful woman to not fall in love with me. I wish it wasn't so easy.\"\n\nJules let out a short laugh. \"Oh, you haven't convinced her yet.\"\n\n\"If we don't get a move on we'll have to get some poles and go fish up our own supper.\"\n\nShe pulled her seat belt back on and flipped the visor down finding a mirror. \"Oh hell.\" She started rooting around in her bag as I pulled my seat belt back on and got us back on the road. We arrived and got a table. Jules made a face when I suggested oysters, which made me laugh. We had a wonderful dinner and took a walk down the beach afterward. She was wrapped in my flannel and tucked under my arm as the cold wind blew the spray in our direction. We returned to the car and I started back towards the city. Julia had taken my hand once we were on the road and held it firmly most of the way back to the home. It was dark by the time we turned into our neighborhood and she didn't flinch, duck or hide.\n\n\"Jay?\"\n\n\"Hm?\"\n\n\"Can I stay with you tonight?\" I wanted her to, very badly, and I knew that despite our talk by the river, feelings were setting in. I took a deep breath, about to respond when she cut me off. \"Please? It's not what you think.\" What did I think? I thought that this was going to end badly for one or both of us if we let it run its course. I wanted to say no, and I wanted to say yes for the very same reason she wanted me to. When it came down to it I didn't say anything. I just gripped her hand a little tighter and nodded gently.\n\nWe got into the house and her cell started humming in her purse.\n\n\"Oh shit.\" She dug it out. \"Hey mom.\"\n\n\"I'm fine why?\" Julia smiled and covered the receiver. \"No sarcasm, so she thinks something is wrong.\" \n\nShe uncovered the microphone. \"I'm sorry I didn't know I was going out or I would have let you know. It just came up.\" She looked me straight in the eyes. \"A guy from work.\" She replied.\n\nShe sighed. \"Yes mom, I know dating at work is a bad idea. It's a temp job, if things go well it won't matter, I'll be working somewhere else.\"\n\n\"I'll take care of it tomorrow.\"\n\n\"Yes, I said tomorrow. I'll talk to you then.\" Her voice had dropped in pitch, her smile faded as she looked into my eyes in the dim light. \"Don't you worry. I seriously doubt I could be in better hands. Love you, bye.\" She ended the call, but I could still hear her mother asking questions. Jules turned her phone off completely and dropped it into her bag. She kicked off her sandals and began unbuttoning the flannel shirt as she stepped towards me. She hit the bottom button just before she reached me and wrapped her arms around my neck and kissed me deeply. \"Would you happen to have a spare toothbrush? I probably taste like fish and lemons too.\" She said wrinkling her nose.\n\n\"I probably do. Let's take a look.\"\n\n***\n\n\"I hope there's something in this house to eat.\" Julia said as she rolled over and kissed me. \"Besides you that is.\" She bit my lip and gave it a little tug and growled low in her throat.\n\n\"What kind of jelly do you like with your peanut butter.\"\n\nJulia laughed. \"Is that all you have in the house?\"\n\n\"I have grape and strawberry.\" I said laughing. \"Have a little faith.\"\n\n\"Strawberry then.\"\n\nI got out of bed after kissing her very thoroughly and threw on a pair of shorts and a tee shirt before heading to the kitchen. I assembled my ingredients and whisked a couple eggs with some milk. I could hear her puttering around, and drawers being opened and closed. She walked out a few minutes later in a pair of sleep pants I had with a drawstring waist and a tee shirt of mine hanging loosely on her frame. She walked past me and rinsed out yesterdays untouched coffee and started a fresh pot.\n\n\"You weren't kidding?\" She laughed as she watched me lay out enough bread to make four peanut butter sandwiches.\n\n\"Nope. It's one of Sam's favorites.\" I leaned over and in a conspiratorial voice added, \"I don't make her eat kale when she's here. I let her eat like the kid that she is.\"\n\n\"Oh no, not pizza every weekend.\" Julia scolded.\n\n\"Not every weekend, and if we do we make it ourselves from scratch.\" My voice softened as I thought about it.\n\n\"Where is she this weekend?\"\n\n\"I get her every other weekend during the school year. So she can spend time with her friends and keep up with her busy social calendar of birthdays and holiday parties. I get her on a lot of the school vacation weeks and things like that. We split the holidays.\" Julia's arms wrapped around my waist and I felt her lay her head against my back.\n\n\"You miss her.\"\n\n\"I do. One thing we committed to when we got divorced was that Sam wasn't going to be a bargaining chip between us. She knows we both love her and we continually reinforce that.\" I sighed and Julia let go of me and stepped beside me.\n\n\"What's next?\"\n\n\"Assembly line. We dunk the sandwiches into the egg and then pop them onto the griddle. So let's heat that up. We can put these away.\" I said popping the lid back on the peanut butter. Jules didn't ask where it went but put it away right where it belonged. I squinted at her for a moment.",
        "She laughed. \"You had a three year old, I knew where you kept the peanut butter and jelly, the mac and cheese and the animal crackers. I don't think you had any faith in my cooking abilities.\"\n\n\"More like we knew what she would eat without a fuss.\" I said laughing.\n\n\"Wow! Who would have thought a PB&J would be so good made into French toast?\"\n\nI just grinned as she reached over and knocked off a bite of the grape sandwich I'd made. I had a feeling she might like to try both so I made one of each for myself.\n\n\"You know what else is good like this? Grilled cheese. I use a smoked cheese, a little bit if ham, it's fantastic.\"\n\nJulia started fanning herself with her hand as she took another bite. \"A stud in the bedroom and a chef in the kitchen. What ever did I do to deserve this?\"\n\nI laughed. \"Funny I was just thinking something similar about you.\"\n\nShe looked at me as she took a sip of her coffee. \"You know I've had a crush on you for like four years. I don't think I could articulate why until now. You're a sweet guy Jason Thomson. I could tell way back then.\" She smiled, her whole face lit up with it. \"You're the kind of guy who offers to help his buddy move instead of waiting to be asked, or to help a little old lady carry her grocery bags. You never look at a situation and say, \"What's in it for me?\" Do you?\"\n\nI shrugged.\n\nJulia's cheeks flushed. \"You even got to fulfill the male fantasy by banging the, and I quote, \"very attractive\" former sitter; and rather than strut around afterwards you held onto her while she bawled her eyes out on your shoulder.\" She reached up and put her hand on my cheek. \"Thank you for setting the bar very high for every other guy I will meet in my life.\"\n\n\"I can live with that legacy.\" I said with a laugh. \"Never settle for someone who isn't worthy of you Julia. You're a smart, beautiful, young woman, you'll recognize the phonies quickly enough.\"\n\nJulia got up and set her plate in the sink. I watched the flannel wiggle back and forth over her backside as she padded down the hallway. When she came back she showed me a little pill pinched between her fingers before tilting her head back and swallowing it. She washed it down with the dregs of her coffee\n\n\"C'mon,\" She said putting her hand under my arm, \"I've let you rest long enough.\" A big grin spread across her face. She at least let me put the dishes in the sink as she giggled.\n\n***\n\nI looked across my desk at the side table at the framed portrait. Before she left for school she'd made a pen and water color drawing of herself. It was mostly black on white except for the rose petal pink of her lips, the blush of her cheeks and the golden brown color of a fine whiskey in her eyes. I sighed. \n\nWhen she gave it to me she cried. \"In case you want to remember what I look like.\"\n\n\"Julia, there is no way on earth I'm ever going to forget you.\" I'd told her, and it was the truth.\n\nI'd vowed not to fall for her. I failed miserably. We met in secret many times over the next few months. We dodged the other people in our lives and lived out our clandestine affair hidden in my home, or an occasional weekend far away.\n\nMy phone beeped, startling me out of my daydream. \n\n\"Jay you have a visitor.\" Christine chimed in.\n\nHell, why now? It was the middle of the afternoon on a dreary Friday. I saved what I was working on and hit the reply button on my phone.\n\n\"Send him in.\" I wasn't expecting anyone, but it could be someone from one of the local trucking companies doing a business inquiry. I snugged up my loosened tie and stood as there was a soft knock on the door, and it opened part way to the sound of hushed voices. She slipped in through the narrow opening and grinned back at the opening saying something to the person outside. The door closed and she turned to face me.\n\n\"Hi Jay.\"\n\nJulia stood there. Her head tilted slightly a little smirk on her lips. Gone was the girl that left last fall to go off to school. Her face though still soft no longer held the roundness of youth, her eyes held a spark of fire. She had a poise in her that was never there before. It was clich\u00e9 to even think that she left as a girl and returned as a woman, but it was true. Her eyebrows rose as she awaited a response.\n\n\"You are so beautiful.\" I barely had enough air to get it out.\n\nThe grin spread across her face and the womanly veneer slipped away and the girl reappeared.\n\n\"It's nice to see you too.\" She said as she tossed her bag on the chair and wrapped her arms around my neck, her head tucked up under my chin. She leaned back and looked into my eyes for a moment, and knew the answer to the question she didn't need to ask. No, there was no one else since you left. She kissed me deeply, passionately taking my last breath with her. \"If that's the kind of welcome I'm going to get, I'm coming by more often.\" She said catching her breath.\n\nI smiled. \"How did you fare coming through the shark tank?\" Our nickname for the cubicle farm of dispatchers and salespeople between the offices and the front of the building.\n\nShe smiled and looked up at the ceiling. \"Let's see I got six phone numbers, three dinner invitations and two marriage proposals.\" She laughed and looked back at me. \"I'm slipping, I figured I'd get at least three in this outfit.\" The outfit in question was a sexy little gray wool suit with a short skirt, a cream top and narrow black tie, all perched on a set of black heels. I wasn't surprised in the least. Julia turned many heads and broke several hearts when she worked here.\n\n\"So.\" She started, suddenly nervous she bit her lower lip. \"I was wondering if you were busy tonight? Maybe help a girl celebrate her birthday, some seafood, down by the beach perhaps?\"\n\nI smiled for a moment, \"I have Sam this weekend. I'm picking her up after work.\"\n\nThe girl faded away and the woman reasserted herself. Her eyes narrowed slightly as if challenged. \"So, we'll make sure to get a cake.\" She added with a smile."
    ],
    "authorname": "Member389",
    "tags": [
        "first time",
        "first love",
        "romance",
        "nanny",
        "romantic"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/precious-jules"
}