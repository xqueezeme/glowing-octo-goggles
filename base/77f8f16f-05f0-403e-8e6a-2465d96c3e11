{
    "title": "Succubus Summoning 114",
    "pages": [
        "/**\n\nAUTHOR'S NOTE\n\nThis is the conclusion to the story that begins with Succubus Summoning 101.\n\nApologies for leaving you all on that big cliffhanger. Originally this was supposed to follow a couple of weeks after 113, but then real life intervened again and free time ended up in short supply.\n\nEnjoy!\n\n*/\n\n\"It's time,\" she said, her lips curling up in a cruel smile.\n\nHer words sent splinters of ice through Phil's naked skin.\n\nA few months back Phil would have expected finding himself naked and lying underneath a beautiful, voluptuous and above all naked blonde girl to have provoked a range of strong emotions. Most of them would have been the obvious ones, but he wouldn't have been too surprised if a little fear or apprehension entered the mix. Back then he'd still been a virgin, so a few worries were understandable.\n\nWorries, yes. Even some fear. But complete outright terror?\n\nNo, he wouldn't have expected to feel that.\n\nThis wasn't a normal blonde girl though. This was Nurse Honey -- Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n -- and despite her delectable appearance she wasn't human but a succubus: a daemonic sexual vampire. Phil was in deadly danger.\n\n\"No,\" he opened his mouth to cry.\n\nMam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n was faster. She scooped up his head and smothered his cry in the soft flesh of a large breast. Phil knew what was coming even as her breast shivered and her nipple squirted thick honey into his mouth. It was sweet like the most exquisite sin. Phil tried to swallow but the substance was as sticky as tar. It blocked his throat and flooded his mouth as Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n pumped more and more fluid between his unwilling lips.\n\nStrangely, even though his throat was completely clogged with cloying sweetness, he had no trouble breathing. Air passed through the barrier with ease, but it came out the other side tainted, filling his lungs with heavy, soporific nectar.\n\nMam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n kept pumping thick honey into Phil's mouth until his eyes glazed over. He gurgled as the constant oozing stream welled up through his nostrils and bubbled out of the corners of his mouth.\n\nHer prey subdued, Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n released his head and tenderly lay it back down on the bed. Phil blinked in confusion. His body felt as heavy as a sack of sand, as if he hadn't slept for a week. His mind was clouded, dragged down and submerged in tar as sweet and as thick as molasses. It was hard to think.\n\nHe was in some kind of danger, he thought dimly. He had to... what?\n\n\"Relax,\" Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n said, her voice soothing. \"I'll take care of you now...\"\n\nShe sat on top of him and brought the dripping lips of her pussy close enough to kiss the tip of his engorged erection. Thick amber ambrosia oozed out from between her labia and ran down his shaft, sending shivers of pleasure ahead of it.\n\n\"... forever.\"\n\nMam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n smiled and sat down on his erection, drawing his cock up into the warm, honey-filled embrace of her vagina. She engulfed his full length before languidly lifting her hips in a slow, teasing stroke. Phil felt the suction as her sticky pussy exposed the skin of his shaft in grudging centimetres.\n\nOvercome with bliss, Phil stared into her radiant face as she rose above him. She met his gaze and smiled beatifically down at his prostrate form.\n\nAn angel.\n\nNo. She might have the face of an angel, but looking at her Phil saw only death.\n\nShe descended back down on him. Ripples of warm honey bubbled out over his crotch, popping with wet sounds as Phil's cock and balls were inundated. Waves of pleasure cascaded through his body. No, it was something more insidious and solid than simple sensation.\n\nWarmth flowed through Phil's body. Her warmth, he realised. Her honey. It was creeping through his body, oozing through the moist spaces within him, tickling his inner organs as it squeezed between them.\n\n\"Soak in my pleasure,\" Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n purred. Her voice was soothing, but her smile was cruel and her eyes shone with naked hunger.\n\nShe picked up the pace, her soft fleshy buttocks slamming down on him harder and faster. More of her honey flowed into him. It inflated his dry balls and seeped through his body, enveloping and smothering his organs. She filled him with a warmth that left him soporific and enervated. He felt like he was slowly sinking into the soft bed.\n\nMam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n sighed in bliss. She slid slowly up and down his cock. At the apex her pussy fluttered and a thick glob of liquid ran down his erection and covered it in an amber sheaf.\n\n\"Yes, release yourself into me,\" she sighed.\n\nPhil felt the stirrings of an orgasm rising in his balls. More than that he felt an odd sensation within his body as her honey wrapped snugly around his organs and began to gently, but insistently, tug.\n\nCold perspiration rose on his forehead as realisation of the danger he was in finally pierced the fog clouding his mind. Panicking, he looked around. The other succubi were too busy pleasuring each other to pay attention to him.\n\nMam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n put a soft hand on his temple and moved his head until he was staring up into her white eyes. She folded her wings until they fell down on either side of Phil like the canopy of a hospital bed.\n\n\"I offer intimacy such as no mortal can ever experience,\" Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n whispered.\n\nShe sighed as her pussy pulsed and shivered around Phil's cock. The air was saturated with the cloying aroma of sin and sex. She sat down on him all the way and slowly rocked back and forth, stirring his cock in the oozing well of her pussy. Her honey saturated him and flowed through his body in pleasurable little ebbs and eddies.\n\nPhil felt another little twitch in his balls. It was answered with a stronger twitch throughout his body as Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n's secretions tightened their grip. It was like being cocooned in thick honey, only the cocoon was beneath his skin.\n\n\"Yes, you're close. I can feel it,\" the succubus sighed, her eyes half closed in pleasure.\n\nShe picked up the pace of her thrusts, getting faster and faster. Phil lay helpless beneath her. The room was filled with wet squelching sounds as his cock entered her sugar-dripped vagina again and again, faster and deeper.\n\nAnother ominous twitch tickled his balls. He felt electric shivers of pleasure escape his sexual organs and crackle through his body, carried by the waves of Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n's smothering honey. Part of him was being drawn out, trapped like an insect caught in gum.\n\n\"Yes. A little more, fledgling,\" Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n murmured. \"Release it.\"\n\nShe arched her back and raised her wings. Her body came down on him faster and faster, her large breasts bouncing with each impact.\n\nPhil heard screams. They were faint at first, but they grew louder as though they were approaching him fast down a long tunnel. Or he was racing to meet them. It was hard to tell. There were no words, only incoherent cries of loss and longing for freedom.\n\nPhil squirmed beneath the demon. His hands clenched and unclenched against the sheets of the bed as he fought to hold back the mounting orgasm that would tear out his soul with it. Still she remorselessly fucked him, her dripping pussy stroking his cock to maddening peaks of sensation.\n\n\"Don't resist, fledgling.\" Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n urged. \"Pump your soul into me.\"\n\nPhil was surrounded by a mad chorus as he sank deeper into Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n's sticky grip. This was the true heart of the demon: a roiling pandemonium of innumerable lost souls trapped in a hinterland between this life and the next, enslaved to an existence of eternal servitude within the flesh of a monster that wore the face of an angel.\n\nThis was to be his fate, Phil realised. He couldn't stop it. His stupid cock was throbbing with the urgent need to come, to spray his seed deep into her luscious flesh again and again, heedless of the knowledge his soul would come out with it.\n\nMam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n moaned and sighed, urging him on even as he squirmed and struggled beneath her, caught in a battle against his animal natures he had no chance of winning. Her honey pulled against him and he felt his consciousness start to peel from his flesh.\n\nNo, Phil thought, feeling his hips thrust against her in defiance of his brain. The wails of the damned filled his ears.\n\n\"Yes,\" Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n hissed.\n\n\"No!\"\n\nVerd\u00e9 slid down next to Phil on the bed. She wrapped a protective arm around Phil's upper body.\n\nThere was a long pause as the two succubi stared at each other: Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n imperious, Verd\u00e9 defiant; neither willing to give way. Phil was happy for the brief respite given to his trembling body.\n\nN\u00ffte walked up behind Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n and whispered something in her ear.\n\nMam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n was motionless as she considered N\u00ffte's words. Finally she nodded.\n\n\"Yes. She was his first. It is fitting that she should be his last.\"\n\nMam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n lifted herself off Phil with consummate grace. Whatever was smothering his organs released its grip and slowly receded back through his body. Denied sensation, his body slowly subsided back from that final, soul-shattering orgasm. It was testament to Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n's erotic skills that the relief of his escape was almost overshadowed by the regret at not getting to spurt his seed into the warm clutch of her vagina, even though he knew that release would damn him eternally.\n\nPhil barely had a chance to let his jangling nerves settle before Verd\u00e9 gathered him up in her arms. Her wings wrapped around them like a burial shroud. She planted a series of frantic kisses across Phil's face and the passion of her attentions caught him by surprise.\n\nShe stopped kissing him and stared deep into Phil's eyes.\n\n\"You gave me your virginity,\" she whispered. \"I'll always treasure that.\"\n\nShe whispered words of magic under her breath and hugged Phil closer for a longer kiss. Her soft lips pressed against his and she exhaled a breath that travelled through him like a fresh breeze. The honey clogging his throat melted away and Phil felt a sudden burst of energy as bracing as bathing in a clear mountain stream.\n\nIt was not wholly beneficial.\n\nHe felt her breath wash through him, picking up the flotsam and jetsam of his being and concentrating it down in his balls. He'd escaped one predator only to be delivered into the embrace of another.\n\nVerd\u00e9 was tender as she laid him out on the enormous bed. She straddled him and guided his erection into the moist grip of her vagina.\n\nFuck. Phil nearly came there and then. As perfect as Verd\u00e9's pussy normally felt, it had never felt as tight, or as soft, or as wet as this. She wriggled on his lap and a strange musculature enfolded and manipulated his cock until it was manoeuvred into such a snug fit it could have been part of her own body.\n\n\"Does that feel nice?\" Verd\u00e9 asked.\n\nShe inched up his shaft before coming back down in a long, slow stroke. Her vaginal walls vibrated against his cock. The head pushed up against and into a soft organ that gave like a cushion and enfolded his tip with fleshy suction.\n\nPhil said nothing. His breath was taken away by the sensation.\n\nThe suction was soft and insistent. It travelled down the inside of his shaft, pulling lightly on his balls at first, but then spreading through his body with little rippling caresses. The sensation was strange, but quite pleasurable.\n\n\"It won't hurt if you don't fight it,\" Verd\u00e9 said.\n\nShe whispered more words of magic under her breath. She ran her hands over Phil's naked chest and he bucked as if jolted with electricity. It was a pleasurable shock though, sending warm shivers of pleasure running through his body. In their wake his skin became highly sensitized, so that the pleasure of every caress and stroke was magnified a hundredfold.\n\n\"What will happen to my soul?\" Phil asked.\n\nHe felt the force -- gentle now, but increasing in power -- pulling inside him. He remembered the eternal screams of torment inside Nurse Honey's body. He thought also of the pitiful remains of Jake grafted onto the side of a wargen.\n\nVerd\u00e9 kissed a finger with her full lips and ran it lightly down the side of his face. Her face was sad.\n\n\"It will be destroyed,\" she said, \"consumed by the fires within my body.\"\n\nShe rose up and down with long, delectable strokes. Her vaginal muscles tightened around his cock and drove it deeper into a warm, fleshy organ. The head of his cock was gripped by a strong suction that travelled all the way through his body until he could feel it right to the end of his fingernails and in the roots of his hair.\n\n\"You will cease to exist,\" Verd\u00e9 continued. \"No possibility of reincarnation, afterlife or any of the other mysteries that await mortals when they move from this life to the next.\"\n\nShe sat up straighter, wriggling to find an even snugger fit for Phil's cock within her soft flesh. Her breasts sat up high on her chest, firm and flawless. Her wings unfurled behind her.\n\nPreparing to feed.\n\nNot that Phil could do anything about it. He squirmed in helpless ecstasy as her soft flesh stroked against his over-sensitized flesh and the sensation overwhelmed his mind. Verd\u00e9 stretched her wings behind her as she slowly rocked on his cock. She reached behind her and caressed his testicles. She whispered more words of magic and Phil shivered in pleasure even as he felt her draw more of his essence into his balls.\n\n\"It will be a glorious end,\" Verd\u00e9 said, still rocking on his cock as her fingers fondled his balls. \"Your final release will be like five thousand heavens in one burst.\"\n\nShe paused and stared directly at Phil, her eyes suddenly as hard and as cold as the precious stones they resembled.\n\n\"But it will be an end.\"\n\nHer pussy squeezed his cock and Phil moaned in pleasure. He thrashed his head from side to side, the sensations so strong they threatened to claw away his sanity and leave behind a primal beast, good only for mindless rutting.\n\nThe other succubi had returned to their alcoves. They stared down in respectful silence. Phil was alone on the enormous bed with Verd\u00e9.\n\nAnd the bones of the succubi's other victims.\n\nVerd\u00e9 speeded up, the force of her thrusts driving Phil deeper into the luxurious mattress. Phil's breaths came out louder and harder as his body burned in a conflagration of lust. It was getting harder to hold on. His cock, no his entire body, throbbed with the urgent need to spurt its load. That load was not confined to the contents of his balls. It was his entire body. It was all through his every cell, thought and even in the ethereal fragments of his spirit. Every spark of his being awaited the gates to be opened to rush headlong into her fire.\n\nVerd\u00e9 lifted herself high above him, letting his engorged cock slide slowly out of her moist grip until only the head lay lodged between the plush lips of her pussy. She rocked there, letting her folds slide against his swollen glans.\n\nIt wasn't enough. He wanted to be all the way inside her so he could feel that exquisite, silken flesh brushing against every millimetre of his erection.\n\nVerd\u00e9 looked down at Phil, her green eyes bright and piercing.\n\n\"If I complete this stroke there will be no going back,\" she said. \"Once your cock is all the way inside me you'll start to come and you won't stop until I've drunk every drop of your life, essence and soul. Is this what you want?\"\n\nYes.\n\nHe ached to come. He needed to come. He'd give anything for the blissful release.\n\nNo. The price was too high. This wasn't just his life, but the complete destruction of his soul as well.\n\nVerd\u00e9 didn't complete the stroke. She stayed above him so that only the tip of his cock rested in her moist vagina, delaying the final thrust that would plunge his full manhood all the way into her hungry sex. Her face was completely cryptic to Phil. He got the odd feeling she was waiting for something.\n\nOh fuck, he needed to come so badly. His semen felt like it was boiling in his balls, bubbling and seething with a longing to escape. His hips twitched with anticipation. He couldn't stand how she was teasing him like this. He wanted to be in her warmth. All the way. If she wasn't going to finish this final stroke he'd thrust up to meet her with his hips.\n\nNo!\n\nWhat was she waiting for? He was at her mercy. She could take him at any time. All it needed was a push, a squeeze, a suck.\n\nYet she held her body above him. Why?\n\nWas there something he'd missed? Something he hadn't understood?\n\nHer face was still unreadable. The brief pause, surely Phil's final moment, stretched out as the gears of his mind cast aside the fleshy chains of sensuality and began to whirr.\n\n\"Is this what you want?\"\n\nWhy ask when she could just take?\n\nHe thought back to N\u00ffte's comment when she'd pulled him on top of her.\n\n\"You silly boy. Your body will not be able to withstand the five of us together.\"\n\nHow could he be silly? It was hardly his choice to be here.\n\nShe'd said something similar on the night they'd first fucked.\n\n\"You dally too often with Rosa and Verd\u00e9. Keep on this path and soon they will suck out all your life and consume your soul.\"\n\nShe'd looked surprised when he'd said it wasn't his choice.\n\nAnd Nurse Honey:\n\n\"The fledgling should show more restraint.\"\n\nAs if he'd brought it on himself.\n\nAnd Rosa's rage when she'd been throwing fireballs at him:\n\n\"Stop pretending!\"\n\n\"Don't lie.\"\n\nWhat did she think he was supposed to be? He was nothing to them; a toy, plaything, leftovers they could finish at their leisure, or at least that's what he thought.\n\nHe remembered C\u03adr\u03bcl\u0259a.\n\n\"You don't know?\"\n\nWhat didn't he know?\n\nAnd her other comments:\n\n\"Why do you fear us?\"\n\nYou're going to kill me.\n\n\"If that is your desire.\"\n\nAnd Verd\u00e9 now:\n\n\"Is this what you want?\"\n\nHe thought back to that room in Wargsnouts'seast tower and the ill-fated ritual that had got him in this mess in the first place. He knew how dangerous they were rumoured to be. He'd been extra careful in performing the ritual. He was sure of that.\n\n\"Is this what you want?\"\n\nWhy would she ask?\n\nUnless...\n\nA sadness settled in Verd\u00e9's eyes. She started to lower herself down on Phil's cock.\n\n\"Stop! I command you.\" Phil said.\n\nVerd\u00e9 looked at Phil and smiled. Her pussy released its tight grip on his cock.\n\n\"As you wish... master.\"\n\nShe dismounted him and lay next to him on the bed, her head nestled against his neck. She could have been his lover, albeit one with horns, wing and a tail.\n\nPhil lay back. For the first time he noticed just how fast his heart was beating. He struggled to adjust to the fact he was, against all probabilities, still alive. He ignored the grumbles from his cock and balls as another potential orgasm was starved of sensation. They'd had enough fun already this night. His erection slowly deflated and the essence Verd\u00e9 had concentrated in his balls dissipated back into the rest of his body.\n\nA swarm of questions whirled through his mind. How? Why?\n\n\"I'm your master?\" he asked, still not quite believing the words could be true.\n\n\"You did summon us,\" Rosa said, landing lightly on the bed next to them. \"I assume that was your intention.\"\n\n\"But the ritual...\"\n\n\"Was fine,\" Rosa said. She lay down on Phil's other side so he was pleasantly sandwiched between their bodies.\n\n\"Apart from the protective circle,\" Verd\u00e9 said.\n\n\"Yeah, that was a bit crappy,\" Rosa said. \"We'll get C\u03adr\u03bcl\u0259a to help you with those.\"\n\nPhil's mind span with the new information. He was their master?\n\n\"Why bring me back here? Phil asked. \"Why nearly kill me?\"\n\n\"The summoning forms a special link between warlock and succubus,\" C\u03adr\u03bcl\u0259a said from her perch up in the alcoves. \"It allows us to satisfy their every desire.\"\n\n\"Even the ones they don't know they have,\" N\u00ffte said.\n\nPhil contemplated their words.\n\n\"My desire was to die?\" he said, chilled by the thought. \"What about Jake? What about all these people,\" he looked at the piles and piles of skulls around the room, \"they wanted this to happen?\"",
        "\"They desired pleasure beyond all pleasure, regardless of the consequences, as do all humans that summon us,\" N\u00ffte continued.\n\n\"We satisfy their desires,\" Nurse Honey said.\n\n\"Why didn't I die as well?\" Phil asked.\n\n\"You never desired it,\" Rosa answered.\n\n\"You never gave yourself fully to us,\" Verd\u00e9 elaborated. \"No matter the pleasure we gave you, your mind always refused to take that final step.\"\n\n\"I think someone might have been cheating a little at the end there though,\" Rosa said.\n\n\"Are you insinuating something?\" Verd\u00e9 responded.\n\n\"Oh no, nothing,\" Rosa said. \"I regularly wait ice ages before taking that final stroke.\"\n\n\"I was waiting for him to make up his mind,\" Verd\u00e9 sniffed.\n\nRosa said nothing, merely arching an eyebrow.\n\nPhil paid no attention. His head was still spinning. Not only was he not dead, but he was now, or rather always had been, their master? Him?\n\nHis state of confusion was compounded as a ghostly figure suddenly appeared in the room. Not a ghost, he realised once he'd got over the shock, but an image, a little like a hologram from an old science fiction film. The projection was grainy and flickered like an old black and white TV picture.\n\n\"Ah there you are boy,\" the image said. It looked like the figure was peering into something that displayed this room rather than looking at them directly. \"You're a difficult person to find. Imagine, gallivanting off to hell like that. I'd nearly given up on you. I thought you must be dead for sure.\"\n\nPhil recognised the shadowy figure. It was the Scrote! What was he, or rather his image, doing here?\n\n\"I see you've successfully agreed terms with your demon. Well done boy,\" the Scrote said.\n\n\"You let that book fall into our hands deliberately, didn't you?\" Phil said. He hadn't given it much thought at the time, but it shouldn't have been that easy to take such a dangerous book from the library.\n\nThe Scrote smiled, revealing a mouthful of rotten teeth. \"Correct my boy. While I respect our esteemed headmaster I don't have much patience for these new-fangled philosophies on education. I'm a firm believer in the practical approach.\"\n\nThe practical approach didn't work out so well for Jake, Phil thought.\n\n\"Skips all the fannying around and gets straight to sorting out the wheat from the chaff,\" the Scrote added.\n\n\"That's not so good for the chaff,\" Phil said.\n\n\"Magic's dangerous,\" the Scrote said, flashing another rotten smile.\n\n\"But you've come through boy. You've shown you've got the skills to be a real warlock by successfully binding your first demon, and a very attractive succubus she is as well if I may say so.\" The Scrote noticed Rosa for the first time. \"A pair of succubi,\" he corrected. \"My my, aren't you a lucky chap. I can see why you took your time. Well I won't rush you, but after you've finished dallying come back to Wargsnouts. I have a special program for talented students like yourself. You'll find it to be most interesting I'm sure. I'll teach you about real power.\"\n\nWith that the image flickered out.\n\n\"He looks greasy. I bet he would burn real easy,\" Rosa whispered in Phil's ear. He wondered if she was picking up on his desires again.\n\nSo what happens now, he thought.\n\n\"We get to go to Earth and have lots and lots of fun,\" C\u03adr\u03bcl\u0259a said, back in her young girl form and bouncing on the bed in excitement.\n\n\"Not just yet,\" Verd\u00e9 said. \"Our master needs to rest and get his strength back.\" She helped Phil to his feet.\n\n\"Can I have sex with him first?\" Rosa asked.\n\nVerd\u00e9 shook her head. \"I don't think that's a good idea. Nurse Honey and I took him right to the brink. Any more arousal and... it will be messy.\"\n\nRosa pulled a face.\n\n\"The conjunction has passed, but I'm still feeling horny.\" She rubbed a finger between her labia.\n\nHer face suddenly brightened.\n\n\"Ah ha, the wargen will be slinking from their hiding places about now.\" She launched herself into the air and was gone in a flurry of wings.\n\n\"Come on Verd\u00e9. We need to get ready for the trip to Earth,\" C\u03adr\u03bcl\u0259a said.\n\nShe grabbed Verd\u00e9's hand and pulled the succubus away. Both of them took to the air and swept out of the room.\n\nPhil stood shakily on the bed. His mind was wobbling as much as his knees were currently doing. He wasn't dead. Not only that, but his life had suddenly twisted off into strange, uncharted realms.\n\n\"Master,\" he murmured more to himself, scarcely believing it to be true.\n\nN\u00ffte and Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n were still there. They sat above him in the alcoves and looked down at him, one with eyes of purest white, the other with eyes of deepest black. Those same eyes had witnessed the passage of centuries. Now they were his to command, to satisfy his every whim or wish no matter how trivial or inconsequential? No, he couldn't see that, not at all.\n\n\"The word doesn't mean what I think it means, does it?\" he said.\n\n\"No, it doesn't,\" N\u00ffte said. \"The first warlocks misunderstood the nature of arrangement and that misconception persists to this day. Think of it as a partnership, for the mutual benefit of both parties.\"\n\nGracefully she swooped off the ledge and vanished up into the dark shadows of the ceiling.\n\nThat left Phil and Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n. She left her alcove and elegantly glided down to the bed, landing just behind him.\n\n\"I'm glad you're still alive,\" she said, running a hand across his shoulders. \"I might get to take your soul after all,\" she breathed in his ear.\n\nShe kissed him lightly on the cheek and then she too was gone.\n\nPhil was left standing alone on a gigantic red bed, surrounded by the bones of the succubi's past victims and illuminated by the flickering flames of candles mounted on their skulls, in a room that at once resembled both boudoir and charnel house.\n\nNot everything had changed, he reflected morosely.\n\nSUCCUBUS SUMMONING 101 -- END\n\n/*\n\nAUTHOR'S NOTE\n\nThis concludes Succubus Summoning 101. I'm going to take a break to focus on some other stories and projects, but you can expect to see Verd\u00e9, Rosa and friends show up in the occasional spin-off.\n\nSuccubus Summoning 201 will return in the new year (with hopefully something more resembling a regular schedule!).\n\nThanks for reading.\n\n*/"
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "magic",
        "warlock",
        "demon"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-114"
}