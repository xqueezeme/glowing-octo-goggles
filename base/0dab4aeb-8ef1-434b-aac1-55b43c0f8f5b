{
    "title": "Surefoot 30: Class of 2372",
    "pages": [
        "\"Personal Log, Stardate 49561.36, Sasha Hrelle recording: The Surefoot has arrived at Earth prior to the graduation of the Class of 2372. My class. The cadets and crew are taking the opportunity to catch up with relations or take shore leave. I, however, have... business to attend to. I'm an Adult now, you see.\n\nI hope I can manage Adulting. Seems in parts scary and boring.\"\n\n*\n\nHarbstodt Township, New York State, Earth:\n\nShe looked out of the window at the sprawling treescape, a million greens in as many shades reaching out to the craggy, ephemeral peaks of the Adirondacks. The sky was clear, and the air carried a strong scent of lavender. It was just as she remembered it, and she wanted to stand there and stare out at it forever -- if only to keep from having to face finishing the task literally waiting behind her.\n\n\"Sasha?\"\n\nShe still didn't turn away, knowing the Caitian woman wouldn't think it rude of her, but instead listened to the creaking floorboards as Kami entered the bedroom.\n\n\"Who's this?\"\n\nNow Sasha turned. The woman who had been her Counselor, her friend, and had definitely become a lot more to her since, had lifted up one of the items covering the small bed, a picture frame, and regarded it curiously.\n\nSasha didn't have to look at it to know who it was. \"Mr Oruh, my teacher back on Salem Four, until the Bel-Zon attack. He retired after he recovered from his injuries and returned to Betazed, but he sent me that image when I was shipped to Earth.\" She reached out and examined it again, seeing the kindness behind the solid, coal-black eyes, and she smiled. \"We always thought he used his telepathy to catch us passing notes or doodling instead of paying attention, but I suspect we were just really crap at hiding it. He sent me messages for a while after I arrived but...\" Her expression sobered again. \"But I think Grandma Eismann contacted him and asked him to stop, telling him that it was just reminding me of what had happened to Mom and Dad.\"\n\n\"And not just for you,\" Kami prompted, moving around the room, Sasha's former room. \"For your mother's parents too. It must be like the Seven Hells for parents who outlive their children. I hope I don't have to do that; it would break me. It would just... break me...\"\n\nSasha watched as the Caitian's tail swish gently, and then grow still -- as she placed a hand on her belly.\n\nA thought made the cadet blurt out, \"Are you pregnant again?\"\n\nKami stopped, turned and grinned, her mane of sepia fur shimmering in the morning light streaming through the open bedroom window. \"No!\" But then her eyes twinkled. \"But I admit I am thinking about it. A girl this time, maybe. My own Princess. And better to do it with a shorter gap in years to Misha, so they'll be close but he can handle the change in attention focus.\" Then she dropped her hand and approached Sasha. \"We should get things wrapped up. And by we, of course, I mean you.\"\n\nSasha nodded and faced the bed; all of her childish possessions were scattered here, left in the house with her maternal grandparents, who had taken her in after the Salem Four attack, raised her, and encouraged her to go on to Starfleet Academy despite their obvious fears about her meeting a similar fate to her mother and seemingly her stepfather too. She felt guilty that she never came back more, beyond the odd visit on Academy breaks. But as she had grown, she had forged for herself a life that was growing ever more detached to what was here.\n\nBooks, games, stuffed animals, pens and paper, clothes she couldn't possibly fit into now- then she dug down deeper and found another photo, smiling at it.\n\nKami drew up beside her, sliding an arm around the young woman's waist as she shared the view of the picture: a nine-year-old Sasha, sticking her tongue out, as did a younger-looking Esek Hrelle and his then-wife Hannah.\n\nKami laughed softly. \"So, he was always a fat bastard, huh? I'm amazed he passed the Starfleet physicals.\"\n\nSasha smiled. \"I could never get my arms around him fully. Still can't.\" After a moment, she nodded to herself, slipped the photo into the bag she had brought and fastened it up. \"Let's go.\"\n\n\"That's it? Nothing more?\"\n\n\"I don't need anything more.\"\n\n\"And have you made a decision about the house, the estate?\"\n\n\"Yes. The firm that was hired to maintain the place after the Eismanns' deaths have located some relations in Florida. I'm going to sell it all to them. Or give to them. I really don't care which. At least it'll still be in the family's possession. I've made new family.\"\n\n\"Are you sure about that? It is lovely up here. It could make for a wonderful home for you to stay whenever you're on Earth.\"\n\n\"Home?\" Sasha shook her head with a wistful smile, before looking up at the raftered ceiling, as if peering through it to the sky above. \"I am Starfleet now. My home is in the stars, a thousand thousand twinkling lights, with a thousand, thousand adventures orbiting each one. Infinity is my backyard, Eternity my calendar-\"\n\nKami reached down and smacked the girl on the rear. \"Alright, alright, you've passed the audition. Now let's get moving and collect your Dad and brother before they devour all the fresh toffee apples and caramel popcorn from the nearby town.\"\n\n*\n\nAs it happened, Esek Hrelle never left the graveyard that sat between the Eismann family home and the town of Harbstodt. He had smelled the foods on offer, of course, but was at an uncharacteristic loss of appetite, as he stood at the grave of his first wife. They had buried Hannah in the family plot, and her parents beside her when they had subsequently died.\n\nThere was a twinge of guilt at not being here for Sasha when she had suffered these losses -- and anger at those responsible. But he cast it aside now, at least the latter; the recent work he and his crew had done at the Son'a station had resulted in dozens of arrests of Bel-Zon operatives and associates throughout the Quadrant.\n\nThere had even been arrests of Starfleet officers in their employ, like that First Officer for Captain Lucille Arrington, who had taken over command of the Impala in the wake of her removal from active duty following her breakdown (and thinking about that made Hrelle wonder how much of that had been contrived by the Bel-Zon to put one of their own in a position of power and mobility). Their assets were seized, and their influence no longer extended past the non-aligned Skarosian system. As far as Hrelle was concerned, they could sit there and rot for eternity.\n\nThe guilt remained, and always will, he suspected, despite it not being his fault. But even then, he knew that, while the guilt was there, nothing could be done of it. And there was no sorrow either anymore at her passing. He had moved on. And he believed Hannah would have wanted it that way.\n\nThen his ears twitched as he heard the sounds of someone trying to sneak up on him from behind, careful and quiet as he could be... but not careful or quiet enough for someone of Hrelle's age and experience. Still, the Captain allowed his stalker to draw closer... closer...\n\nMisha, clad in running shoes, red shorts with a hole in the back for his tail, and a matching T-shirt with the Starfleet logo on the front, leapt up onto his father' back, using his claws to climb up and clamp his fangs around Hrelle's neck, growling. Hrelle gave a theatrical yelp, dancing around as he cried, \"You got me, my Warrior Prince! You got me!\" Then, suddenly realising how disrespectful this might appear if anyone else was in the graveyard, he reached around and held the cub up in his arms. \"But maybe you should save it for the park or the playground or the Holodeck, not places like this, okay?\"\n\n\"Trouble Time?\" Misha asked, unsure what he had done wrong.\n\n\"No, no, not Trouble Time,\" his father reassured him, lifting him up onto his shoulders. \"Now, let's go see about some toffee apples. And no farting up there!\"\n\n\"Hey you two!\"\n\nHrelle turned, Misha grinning and waving happily. \"Mama! Sasha! Caught Papa!\"\n\nThe two women were walking up the road, a bag slung under Sasha's arm, the girl grinning at her little brother's proclamation. \"That can't have been too difficult, he is old and fat, after all.\"\n\nMisha laughed with delight and slapped his father on the head. \"Olden fat! Olden fat!\"\n\nHrelle growled as they departed from the graveyard. \"Thanks, Runt of the Litter. Have you settled things?\"\n\n\"Yeah. Can we head back now? I've still got a shitload to do-\" She glanced up at Misha guiltily and clarified, \"I mean, a lot of work to do. Processing for the trip to Vulcan, rehearsing, finishing my speech...\"\n\nThey began walking to the airtram station just outside of town, Hrelle asking, \"You still haven't finished that thing? You've had weeks! How hard can it be?\"\n\n\"You can always let her read your Valedictorian speech for inspiration,\" Kami suggested. \"Oh no, wait, you never made Valedictorian, did you, Esek? In fact, you were in the bottom ten percent of your alumni, weren't you?\"\n\nThat shut him up, and they continued to walk quietly together.\n\nUntil Misha declared loudly to passers-by, \"SASHA HAS A SHITLOAD!\"\n\n*\n\nStarfleet Academy Headquarters, San Francisco, Earth:\n\nThe Golden Gate Bridge glistened in the sunlight raining down on the Bay, and on Starfleet Academy, as Hrelle enjoyed the view from the Superintendent's office. Starfleet had twenty-five Academies in total stretched throughout the Federation, and literally hundreds of Annexes and smaller facilities; not all of the future officers of the organisation could come here to study and train, there simply wasn't the room for them all. But this one was the first, and the most prestigious, and more often than not, when people talked of Starfleet Academy, they referred to the one here on Earth.\n\nAdmiral Ruth Goldstein brought a glass of Aldebaran whiskey over to him. \"Penny for your thoughts, Captain?\" She handed the glass to him. \"It's an old Earth expression-\"\n\n\"I know.\" He turned to her, smiling. \"Actually, I was thinking about taking over your job someday.\"\n\nThe petite, pepper-haired woman smirked, cradling her own glass. \"Oh? Should I be worried about a coup d'etat?\"\n\nHe chuckled. \"No, the thought had come to me in a... dream... I recently had. But the dream took place in the distant future, when I had a lot more grey in my fur.\"\n\n\"Well, I can tell you, Esek, if you get the job, and you don't have grey beforehand, you will once you start dealing with all the political mishigas.\" She raised her glass. \"L'chaim.\"\n\nHe raised his own. \"To Life.\"\n\nThey drank, Hrelle feeling the rush to his head. \"Thanks for that, Ruth. So, what can I do for you?\"\n\nGoldstein was more sparing with her imbibing, and turned to look out at the Academy grounds. \"I know T'Varik and your wife is busy now selecting the next batch of cadets for your ship for September, but there's background talk about whether or not we should continue with the Advanced Work Experience Program at all, in light of the deteriorating situation in the Quadrant. The break with the Klingons, this Cold War with the Dominion. And of course, the remaining threats from the Borg, the Romulans... to put cadets out there to face such dangers before they're ready...\"\n\nShe shrugged. \"There was always that talk, of course; you know yourself, you've been involved in the debate. But now, the threats are more concrete, they're appearing in the nightly news reports. People can't ignore them any longer, and they want to know if it's too risky to let them be out there before they're ready to face those dangers.\"\n\nHrelle's brow furrowed as he considered the woman's words, though he already had an answer for her. \"Ruth: no one is ever ready. You can take all the training, all the classes, all the little cruises around Saturn in some vintage ship. You can walk off this campus with your diploma and your Ensign's pips on your collar and all the best intentions possible. But you're never really ready until you're out there.\n\nI understand the fears; I'm a parent, too, and in my time, my daughter's nearly died, twice, not to mention being assaulted, threatened... and many of the other cubs on my ship have gone through similar trials. But at least now, with our guidance, we can prepare them as best we can.\"\n\nHis face went taut now. \"And... at the risk of sounding ominous: if things do deteriorate and we end up going to War, and the Dominion proves to be as formidable as Starfleet Intelligence claims, then the issue of cadets going out into space too early will be moot. We'll be shortening the education time, relaxing the standards. We're going to need bodies to make up for those we'll be losing. In great big numbers.\"\n\nThey went quiet for a moment.\n\n\"I wish you were wrong,\" Goldstein admitted in a whisper.\n\n*\n\nMinutes later, Hrelle emerged from her office, to find someone else waiting. His hackles rose. \"Admiral.\"\n\nAdmiral Trenagen was staring at a painting of a Constitution-class starship on the wall, his hands folded behind him, but now glanced at Hrelle. \"Good afternoon, Captain. Welcome back to Earth.\"\n\n\"Thank you, Sir.\" Hrelle felt his tail grow still. His relationship with the Head of Starfleet Intelligence began years ago following his escape from the Bel-Zon, when Trenagen attempted to recruit Hrelle into going after the criminal organisation. Hrelle supplied all the intelligence he could recall, but otherwise refused, preferring to be around to reunite with Sasha and regain some of his old life.\n\nTrenagen took it badly. Every subsequent encounter only reinforced Hrelle's belief that he had made the right decision -- especially when Trenagen repeated his offer, but this time hinting that it would not be with SI, but the organisation referred to in rumour as Section 31. And Hrelle made it doubly clear that he wouldn't get involved with an illegal, unsanctioned organisation, no matter Trenagen's convoluted justifications for such an agency.\n\nSince then, the man had been all business, in those few times they had interacted.\n\n\"Congratulations on your daughter making Valedictorian,\" he commented.\n\nHrelle nodded. \"Thank you, Admiral. I'm very proud of Sasha.\"\n\n\"I understand she's attending the Advanced Command Training on Vulcan immediately after graduation.\"\n\nAnd how did you know about that? Hrelle asked himself, settling to answer with \"Yes. I'll miss her, but I'm happy for her.\"\n\n\"Of course.\"\n\nHrelle breathed in, indicating the door. \"If you'll excuse me, Admiral, it's been a delight getting back in touch with you, but we're both busy men...\"\n\n*\n\nSenior Cadet's Mess Hall:\n\nJonas Ostrow checked his pocket PADD for the twentieth time, before returning to not eating his chicken penne, and listening to the conversations around him.\n\nAcross from him, Neraxis Nemm stopped devouring her Bolian vindaloo to study her boyfriend. \"She'll get here, don't worry.\" She smiled, her blue, bisected face widening in a grin. \"Maybe she hasn't responded because she's on the same transport as my mother, and they're too busy planning our wedding reception?\"\n\n\"No,\" he replied absently. \"She's coming in from a different direction, she won't be on the same ship.\"\n\nShe reached across and smacked him on the forehead. \"I know that, Scrappy! I'm as smart as I'm sexy, after all! I just want you to relax!\" More gently, lovingly now, she added, \"We've got some time for ourselves, we'll meet the others tonight, and then tomorrow, your Mom and mine will be here to see us pissing ourselves with nerves in front of hundreds of people!\"\n\nHe smirked, shaking back his silver hair. Then he glanced around at the cadets at the neighbouring tables, before leaning in and speaking more confidentially. \"It's weird.\"\n\nShe frowned. \"What is?\"\n\nHe made a motion of indicating the others in the immediate vicinity. \"I'm looking at them, listening to them talk about classes and dates and musicians and sports events, petty little things that they think are life-changing crises, and they haven't even thought about what they will face Out There. And I know that we're cadets just like them, at least until tomorrow, but... I'm not feeling it any longer.\"\n\nNeraxis' expression sobered. \"That's because we're not cadets like them anymore, Scrappy. We've been through too much. But let's not judge them too harshly, they can't be as blessed as us.\"\n\n\"Or cursed,\" he added gloomily.\n\nShe stared at him a moment longer, before reaching across, and switching his plate for hers.\n\nJonas glared at her. She picked up a chunk of vindaloo onto her fork and offered it to him. \"Here, have some, I guarantee you it'll clear that stick you have up your ass...\"\n\n*\n\nRobert April Annex:\n\nMeow Rrori stopped and adjusted his Starfleet cadet's uniform sleeves once more, his white tail wagging behind him as he rushed up to his mother, hugging her tightly. \"It is so pleasing to see you both! How was the journey?\"\n\nNtruuer Rrori's spotted white fur matched her son's, as did her smile as she hugged and sniffed him, relishing his scent. \"Fine, fine, my darling cub! And you wouldn't believe who was onboard! Fleet Captain Ma'Sala Shall herself! And one of her husbands, Mi'Tree! You know? From the action vivids?\"\n\nRrori smirked. \"I know, Mother. I've met both of them when they visited the Surefoot. It was most impressive to talk with them, work and fight alongside them against the Vlathi.\"\n\nBeside his mother, the Clan's Matriarch Mrirl Rrori stood, supported on a jewelled wooden cane but otherwise retaining the strength and vitality of a female a third of her age, harrumphed. \"You're both too easily impressed. Their clan isn't even one of the original Twenty Landers.\" She held out her free hand, beckoning to her grandcub. \"Well, Meow? I didn't travel 178 light years to just stand here like a statue and not get a hug.\"\n\n\"Sorry, Grandmother.\" He moved in, careful not to squeeze too hard. \"Thank you for coming. Thank you both.\"\n\nNtruur smiled, reaching up and stroking the fur on his head. \"You don't have to thank us, darling! How can we not be here to see you graduate?\"\n\nMrirl began walking along the path. \"And to find out why you didn't make Valedictorian.\"\n\nMeow felt himself blush under his fur; he had been reluctant to even mention it when it had been announced that Sasha had been awarded that honour. But his joy at the deserved victory of his friend was tempered with a growing dread when his clan found out, and wanted to know why it hadn't been bestowed on him. And then he'd have to tell them the truth... \"Grandmother, I told you, Sasha is an amazing cadet-\"\n\n\"And so are you! Amazing, brilliant, talented, hard-working, handsome, well-bred! Especially well-bred! And I find it suspicious that this human, the daughter of your Captain, would get this accolade.\"\n\n\"Grandmother, firstly, she's not like any human you might have met! She's more Caitian than you'd imagine! And secondly, I promise you, her father had no part in Sasha being selected! Please, promise me that you'll drop the subject and not bring it up again!\"\n\nMrirl just grunted in response.\n\n*\n\nStarfleet Medical Academy Annex:\n\nEydiir Daughter-of-Kaas sat in the briefing room with the other appropriate cadets, already aware of the content of the discussion from the older human male in Starfleet Medical blue, but required to attend and at least pretend to find it all novel and interesting. \"Now, you will all have been taking your Pre-Med courses during your four years in Starfleet Academy, and presumably you'll have passed, otherwise you wouldn't be here now to be bored listening to me.\"\n\nHe chuckled at his own joke, and a few sycophants in the audience laughed too. It was all Eydiir could do to keep from agreeing with him out loud and walking out in protest. Following her visit to her homeworld, she had decided on changing her plans and staying full-time at the Academy once on Earth, and studying at Starfleet Medical. It had seemed a good idea. At first.",
        "Now, however, she was beginning to realise how much time would be wasted listening to inane drones bleat about things she had already learned in the field, interspersed with endless excuses to attend pointless parties and play politics with the staff and with preening vapid fools she could easily pummel without a second thought.\n\nThen the fool at the podium continued. \"But now you'll be facing the real challenge: four more years of intense study, internship, residency, and with the possibility of further study should you wish to specialise in a particular field. Now, let's go through the 42 major fields you can specialise in...\"\n\nEydiir ground her teeth.\n\n*\n\nAdministrative Building 1:\n\nGiles Arrington braced himself, took two breaths, then a third for luck, and entered the office.\n\nThey were there, as expected: his father, Admiral William Arrington, currently assigned to Starfleet Intelligence; his uncle, Commander Matthew Arrington, currently working in Starfleet Logistics; and his aunt Lucille Arrington, currently... looking strange in civilian clothes, on Medical Leave following her... problems while serving as captain of the Impala.\n\nHe looked to each of his family in turn, before settling back on his father, nodding and concluding with, \"Hi.\"\n\nHis father smiled cordially. \"Hi, son.\"\n\nGiles held his breath. Things hadn't been easy between them since Giles sided with Captain Hrelle during the family's inexplicable feud with the Caitian. It was especially tense with his Aunt Lucille, who at one point had tried to physically strike him for his alleged betrayal of the family. He had met with one or more of them since for family events, and lastly for the funeral of his grandfather, former Academy Superintendent Admiral Jeffrey Arrington.\n\nBut each time, this awkward entrance, and he fully expected there to be additional issues given his choice of first posting on a border ship, rather than something more prestigious, something worthier of their family's alleged Starfleet dynasty. He was ready for browbeating.\n\nBut then he remembered Captain Hrelle quoting one of the Ferengi Rules of Acquisition: 'Every once in a while, declare peace -- it confuses the hell out of your enemies'. He grinned. \"So, shall we head for that restaurant I heard about in South Bay? New rule: we buy the rounds in reverse order of age.\"\n\n*\n\nOmnivores Restaurant, Fisherman's Wharf, San Francisco:\n\nKit was practically jumping as he moved through the crowds, his lime-green mottled skin flushing with excitement as he clutched Hafsa al-Samra's hand to keep up with her. \"Intimate Friend Hafsa, are you sure you want me along? They are your parents, after all-\"\n\n\"Yes, they are, sweetheart! And they made it clear that you had to come along! So stop fussing!\" She looked back at him, grinned and winked, throwing back her mass of curly black hair as she raised her other hand and shouted, \"Mom! Dad! We're here!\"\n\nThe bronze-skinned couple stood outside of the restaurant, but smiled and waved back as the cadets raced up to them, Hafsa letting go of Kit's hand to embrace her parents. \"Oh, it's so good to see you again! I have so much to tell you!\" She was practically giddy with delight as she drew in Kit. \"Mom, Dad, this is Kit! Kit, this is my Dad Naazil and my Mom Muneera.\"\n\nKit bowed politely to each of them in turn. \"It is an honour and a pleasure to meet you both! Intimate Friend Hafsa's talked at length about you.\"\n\nThe couple nodded back politely, though Mr al-Samra, a tall, goateed man with slicked back black hair and a dark eyes, frowned. \"'Intimate Friend'?\"\n\nHafsa nudged him. \"That's just the way his people talk, Dad! I told you! it's charming! Come on, I'm starving, I couldn't eat breakfast, I was so excited to get together with you!\"\n\nThey entered the restaurant, confirmed the reservation and followed the waiter to a table overlooking San Francisco Bay and the Academy. Hafsa sat next to Kit, nudging him. \"You'll like this place, I chose it because their advertisements say they cater to insectivores.\"\n\n\"Insectivores?\" Mrs al-Samra repeated, looking with some consternation at Kit. \"Do you mean you eat... bugs?\"\n\n\"Yes, Respected Lady,\" he replied. \"Most insects, in fact, not just bugs.\"\n\n\"There's a difference?\" Mr al-Samra asked, looking as if he didn't particularly care about the distinction.\n\nNot that Kit seemed to notice. \"Indeed, Respected Gentleman. Bugs have a stylet, a mouth shaped like a straw, which they use to suck juices from plants. Insects are characterised by three-sectioned bodies, usually two pairs of wings, and three pairs of legs-\" Then he paused and added, \"Sorry. Please forgive this... insectually explicit talk.\" He looked to Hafsa to see if she got it -- her snort indicated she had.\n\nHer parents remained deadpan, silent until the young people had calmed down, before Mrs al-Samra suggested, \"Why don't you go order the drinks now, dear? It'll save time, and we can get to know your... friend... a little better in your absence.\"\n\nHafsa beamed. \"Sure. What's your poison?\"\n\n\"Spican flame whiskey for both of us, neat for me, on the rocks for your father.\"\n\n\"Make mine a double,\" her father added, never taking his glare off of Kit.\n\nOblivious, Hafsa nodded, kissed Kit on the cheek and rose and departed for the bar. Kit watched her leave, aware of the drop in the temperature at the table, but assumed he was misreading things. \"So, Respected Parents of Intimate Friend Hafsa-\"\n\nMr al-Samra cut in. \"We want you to stop seeing our daughter.\"\n\nKit paused, not quite sure what he had heard, his round bronze eyes narrowing. \"Excuse me, Respected Sir? I- I do not understand.\"\n\n\"It's quite clear, young man,\" Mrs al-Samra confirmed. \"We don't approve of your relationship with her.\"\n\nKit's stomachs twisted into knots. \"B-But... why not? What have I done wrong?\"\n\n\"You haven't necessarily done anything, per se,\" the man admitted. \"It's just that we don't believe humanoids should mix with reptoids.\"\n\n\"W-What?\"\n\n\"Gorn, Saurians, Selay, Toseen, Arkonians, Cardassians... you're all...\" The man just shivered. \"Slimy and scaly.\"\n\nKit gripped the edge of the table, confused and alarmed by this sudden unexpected turn of events. \"Please- I must respectfully protest this attitude! It is bigoted and wrong! My relationship with Intimate Friend Hafsa-\"\n\n\"You keep using that word,\" Mrs al-Samra declared darkly. \"'Intimate'. Are you having... carnal relations... with my baby girl?\"\n\nKit gasped, suddenly conscious of the notion that perhaps Hafsa hasn't informed her parents of the extent of their relationship. \"I- I-\"\n\nJust then Hafsa returned with a tray, setting the drinks down. \"Okay, let's get stuck in-\" She handed the emptied tray to a passing waiter and took her seat again, noting Kit's expression. \"Sweetie, what's wrong?\"\n\n\"They- They-\" He swallowed.\n\nShe looked to her parents in alarm. \"What have you been talking about?\"\n\n\"Nothing, dear,\" her mother replied mildly.\n\n\"Nothing at all,\" her father affirmed. \"Like most reptoids, he just gets... hiss-sterical.\"\n\nThe quartet froze, the cadets watching as the parents looked to each other... and burst out laughing, the laughter subsiding until Mrs al-Samra snorted, sounding uncannily like her daughter, and triggering another explosion of laughter between them.\n\nHafsa exhaled audibly and reached for her glass. \"Oh.\" She looked to a thoroughly confused-looking Kit. \"They were playing a joke on you. They have the worst sense of humour, ever.\"\n\nMr al-Samra was still chuckling, but his eyes shone with genuine warmth as he regarded Kit. \"We're sorry, son, but we couldn't resist!\"\n\n\"So you- you do not hate reptiles?\"\n\nHer father grinned. \"It'd be terrible for me if I did, I'm a doctor specialising in reptoid races!\" He peered just past Kit's left earhole. \"I can prescribe something for those dry scales, if you like.\"\n\n\"Oh, thank you, Respected Gentleman.\"\n\n\"Call me Naazil!\"\n\nMrs al-Samra reached out and patted her daughter's arm. \"Hafsa couldn't stop telling us everything about you two! We love it that you're a couple! You seem ideal for each other! Such obvious chemistry!\" A sly glint caught her eye. \"I'll bet it extends to the bedroom, too-\"\n\n\"MOM!\" Hafsa rolled her eyes. \"Sorry, Kit, I should have warned you. Moms and Dads on Earth are like this.\"\n\nRelief washed through Kit, as he nodded and reached for his glass of nectar. \"That is... a-parent.\"\n\nThe four of them stopped. Looked at each other.\n\nAnd guffawed again, raising their glasses for a toast they couldn't actually get out for laughing.\n\n*\n\nChallenger Academy Park:\n\n\"Gramma! Grumpy!\"\n\nMisha left his mother's and sister's grasp and raced up to Ma'Sala and Mi'Tree Shall, the latter dropping to one knee and holding his arms out wide, the ash-furred elderly male's eyes wide as he boomed, \"Yes, Sweet Cub! It's us!\"\n\nThe toddler rushed into his grandfather's embrace, leaping up -- and kicking Mi'Tree in the crotch, making him stifle a curse. Barely.\n\nKami suppressed a grin as she drew up to them. \"Misha! Watch your Grandpa's Dangles!\" She hugged her mother, and then after Mi'Tree released Misha to hug Ma'Sala, she did the same for her father. \"Hello you two! I'm so glad you could make it! And how's Papa Bneea?\"\n\nMi'Tree was still recovering from his grandcub's kick. \"Your other father is well, thank you, my dear, and sends his regrets at not being able to attend, owing to clan business.\" Then he grinned as Sasha drew up for her hugs. \"There she is, our brilliant Tailless Grandcub!\" He looked to Ma'Sala. \"She's Valedictorian! That means she's the best!\"\n\n\"I know what it means, ass.\" But the elderly female hugged Sasha tightly, murmuring, \"And I know how proud I am of you.\"\n\nOnce they broke hugs and started towards the Guest Quarters, Mi'Tree lifted up Misha, huffing a little from the effort as he asked, \"And where is my kin-son Esek? And young C'Rash?\"\n\nKami slipped an arm around her mother's. \"Esek is in a meeting with the Superintendent, and promises to join up with us soon for dinner. But C'Rash has extended security briefings because of the worsening situation with the Klingons.\"\n\nMi'Tree was pointing out some birds on the manicured lawns to Misha, but continued to listen to the conversation. \"Ooh, that business with the Klingons is all just sensationalist media nonsense! Nothing will ever come of it! You mark my words!\" He snuggled into Misha. \"Isn't that right, little cub?\"\n\n\"Right, Grumpy!\"\n\n\"No, cub, it's 'Grandpa'.\"\n\n\"Grumpy!\"\n\n\"No, 'Grandpa'! Who told you it was 'Grumpy'?\"\n\nMisha pointed to Ma'Sala. \"Gramma!\"\n\nHe harrumphed, looking to Sasha. \"And have you prepared a worthy speech, dear cub?\"\n\nThe cadet stuck her hands in her jacket. \"Well, I've put some words on the screen, erased some, added some more, swore at it, got drunk, and finally we agreed to divorce.\"\n\nMi'Tree's eyes brightened. \"Perhaps I could help? I am a most accomplished orator. Some of my most favourite speeches from my best vivids have been used in Drama classes back home.\"\n\n\"But you never actually wrote any of your dialogue, did you?\" Ma'Sala pointed out. \"The Females are Gathering. Why don't you take our grandcub over to the fountain to dip his hand in the water?\"\n\n\"Excellent notion!\" He looked up at the grinning toddler. \"We can go for a swim!\"\n\n\"No, Papa!\" Kami scolded. \"This isn't Cait, he has to keep his clothes on in public! And for that matter, so do you! And keep an eye on him! He's like lightning!\"\n\n\"Yes, yes, my darling cub, I managed you for many years, I think I can manage him.\"\n\n*\n\nAdministration Building:\n\nCommander T'Varik had been departing from the offices to obtain lunch when one of her Academy Liaison counterparts, a Benzite male named Genderan, fixed himself upon her and proceeded to provide an unsolicited account of his experiences with his own AWE Program cadets onboard the USS Shrysia, a tug in the Deneva sector. \"It was tedious beyond belief! Moving decommissioned and derelict vessels out of the shipping lanes, performing customs and safety inspections of Merchantfleet freighters, maintaining communication and navigation buoys! No doubt your time onboard the Surefoot has been just as uneventful.\"\n\n\"No doubt.\" She quickened her pace, indulging in 0.43 seconds of hope that both this and her taciturn responses would be enough to dissuade him from further chatter.\n\nBut he kept up with her. \"And the Captain was the most boorish creature, a Tellarite, and you know what they're like! Always complaining! Don't you hate people like that?\"\n\n\"Indeed.\"\n\n\"And as for the cadets- Goddess, always asking questions, seeking advice, harassing me constantly-\"\n\n\"Indeed. I am certain educational professions would be much improved if we could eliminate the students.\"\n\n\"What? Oh, I see; I didn't know Vulcans had a sense of humour. But you know what I mean! I think I might have to go back to media consultancy, this business is not for me-\"\n\n\"I agree. You sound supremely inadequate to manage such an important responsibility.\" She halted and looked to him. \"Can I stop you here for a moment?\"\n\nThe Benzite braked, the mist from the breathing apparatus in front of his mouth catching up with him. \"Yes, of course.\"\n\n\"Good.\"\n\nThen she proceeded on her way, examining her feelings of disgust at her peer's attitude -- one shared by more than a few she had encountered since her return. She considered whether it was the result of having to manage hundreds of cadets rather than the relatively smaller number under T'Varik's responsibility while on the Surefoot. She wondered if she had held the same attitudes before the Program, and what that said about her-\n\n\"Excuse me, Commander?\"\n\nShe stopped again, not recognising the voice calling to her from behind, and turned to see an Orion female in a cadet's uniform race up the path to join her, pausing to catch her breath. \"Thank- thank- Thank you, Commander-\"\n\nT'Varik drew up formally. \"Is that how superior officers are addressed at the Academy now, Cadet?\"\n\nNow the shapely, green-skinned girl -- petite, her dark-green hair ponytailed back -- shot to attention. \"Ma'am, Cadet Zir Dassene reporting as ordered!\"\n\nThe Vulcan regarded her, noting the Second Year insignia on the girl's collar -- and the subdermal implant visible near her carotid artery, the implant producing pheromone suppressant so as not to affect those around her. It was that ability, plus her people's notorious history and conflicts with the Federation, which made Orion cadets relatively rare within Starfleet. \"And what can I do for you, Ms Dassene?\"\n\nThe Orion breathed in, visibly collecting her resolve before responding. \"Commander, you are involved with the Advanced Work Experience program, selecting and supervising gifted cadets to serve onboard vessels-\"\n\n\"You state the obvious, Cadet. And if you have approached me to solicit your own name for inclusion in the next Program in September-\"\n\n\"No, Ma'am! I'm not here on my behalf, but my roommate's.\"\n\n\"Your... roommate sent you?\"\n\nShe smiled. \"Um... actually he doesn't know. If he did he'd probably burn through to the floor below with embarrassment.\"\n\nT'Varik raised an eyebrow, and folded her hands behind her. \"Explain yourself.\"\n\nDassene swallowed. \"His name's Stalac. He's a Horta.\" After a pause she added, \"They're from Janus IV, non-humanoid silicon-based lifeforms-\"\n\n\"I am familiar with Hortas, Cadet, thank you. Continue.\"\n\n\"Yes, Ma'am, of course. Well, Stalac -- it's short for Stalactite, by the way; he picked it himself, he has that sort of sense of humour -- is majoring in Science, and he has top marks, plenty of praise from his instructors, he'd be perfect for the AWE Program-\"\n\n\"Has he applied?\"\n\nHer eyes sobered. \"No.\"\n\n\"Why not?\"\n\n\"Because... he doesn't want to cause a fuss.\"\n\n\"A... 'fuss'?\"\n\nDassene nodded. \"He's keenly aware that because he's basically a big lump of fibrous rock that eats minerals and sweats acid, that there are a lot of concessions that have to be made to help him adapt to life among us carbon-based types. He's eager to serve, to excel, but he's very self-conscious about his... requirements. I think he'd be quite satisfied to be put on some distant outpost somewhere doing routine research where he wouldn't feel like he was causing inconvenience. But I don't think he should have to settle. He deserves more.\"\n\n\"I see. And do you believe the same for yourself? Have you applied for a place on the AWE Program?\"\n\nThe Orion frowned. \"Commander, I told you, I'm not here for my own benefit, I'm here for Stalac's.\"\n\n\"Why?\"\n\n\"Excuse me, Ma'am?\"\n\n\"The question is explicit, Cadet. Why is Cadet Stalac's welfare of concern to you?\"\n\nDassene regarded her, as if wondering if she was being tricked or manipulated somehow. \"May I speak freely, please?\"\n\nT'Varik nodded in assent.\n\nFinally the girl replied, \"He's my friend. He's the first roommate I'd had here who didn't ogle me when I was changing, or was afraid that I would somehow turn off my implant and enslave them with my pheromones. Then I got to know him, and we ended up helping each other study, and we'd share jokes and listen to music and- frankly, he doesn't make any assumptions about what I'm like because I'm Orion, because I have to tell you, it's tiresome hearing all the same jokes about slaves and syndicates and do I dance or-\" She stopped herself. \"Sorry, Commander. I don't have many friends here -- but I'm passionate about helping those I do have.\"\n\n\"Evidently so. May I ask what your Primary is at the Academy?\"\n\n\"Command, Ma'am.\"\n\nThe Vulcan nodded. \"Very well, Cadet. It is not standard procedure, but I will examine Mr Stalac's academic records. Dismissed.\"\n\nThe younger woman beamed. \"Thank you, Commander!\" She turned and departed quickly, T'Varik guessing that she was probably rushing to tell her roommate the so-called good news, despite T'Varik not having promised anything more than what she had. Then the Vulcan continued towards the Staff Mess Hall, using her PADD to summon the records of Ms Dassene's roommate.\n\nAnd Ms Dassene herself.\n\n*\n\nRobert April Annex Path:\n\nHrelle walked along the winding path, memories returning of all the times he would risk the wrath of that old Groundskeeper by crossing paths to beat a more straight line to the Mess Hall or Study Hall. The grounds had been remodelled in certain places -- for which he was glad, because it helped wipe away some of the memories of times of supreme humiliation for him, humiliation at the hands of the Arringtons, humiliation sanctioned by their patriarch, the then-Superintendent. It still made his stomach churn, despite the decades that had passed, and all the more terrible things he had since experienced. Kami once counseled him that it was because those moments of bullying had gone unresolved, which made sense. He just wished he was man enough to put it to rest once and for all-\n\n\"Captain!\"\n\nHe paused at a juncture, watching three Caitians approach, the one male he recognised, the two females he didn't, but guessed from their scent their relationship to the cadet. \"Mr Rrori, I see your family has arrived for the big ceremony tomorrow.\"\n\nRrori beamed. \"Yes, Sir. This is Mriri Rrori, Matriarch of our Clan, and my mother, Ntruuer.\"\n\nHrelle nodded politely to each of them, half-expecting the traditional Caitian hug whenever their people met away from the Motherworld, but neither female gave off such a welcoming scent. Indeed, both stared with such outright hostility that he half-expected their claws to be bared. \"Well, you two should be proud of this cadet, he has proved to be a talented and-\"\n\nMriri raised her cane and smacked him on the chest with the gold tip. \"You! You have some nerve!\"",
        "Hrelle took a step back, his hackles raised. \"Excuse me, Madame?\"\n\nRrori looked aghast. \"Grandmother, no! You promised!\"\n\n\"No she didn't,\" Ntruuer reminded her son, stabbing a finger at Hrelle's muzzle. \"Don't think that we don't recognise a naked display of favouritism on your part! A bias against my cub in favour of yours!\"\n\nHis jaw dropped in utter confusion. \"Excuse me, Ms Rrori? I don't understand-\"\n\n\"Captain, I'm sorry!\" Rrori pleaded. \"Let me explain it to them-\"\n\n\"You think you can get away with awarding your cub the honour of Valedictorian?\" Mrirl demanded loudly, smacking him on the chest again with her cane. \"Well, you can't!\"\n\n\"Madame-\"\n\n\"Esek?\"\n\nHe turned at the sound of his wife's voice, acknowledging the approach of Kami, Sasha, and Ma'Sala from another path, his delight at their arrival not offsetting his confusion.\n\nMa'Sala strode up, offering her fellow Matriarch a sharp glare. \"Unless you want that cane rammed up your ass, I suggest you get it out of my kin-son's face. Now.\"\n\nMrirl snarled -- but complied, as Ntruuer gathered her righteous anger in the face of the increased numbers on Hrelle's side now, sniffing their scents and recognising Sasha. \"So, you're the one who steals honours from more deserving individuals?\"\n\n\"Sorry?\" Sasha squeaked, perplexed.\n\n\"Not yet you're not, cub! When I'm through with you, I'll-\"\n\n<br >\"You'll do nothing,\" Ma'Sala warned, growling.\n\n\"Esek, what's going on?\" Kami asked.\n\nHe was beginning to comprehend, if not understand. Why would they think Rrori was in the running for Valedictorian, after he told them about the incident with the Rising Star-\n\nThen he saw the guilty look on the cadet's face. Oh.\n\nAnger rose within Hrelle as he finally replied, \"It appears Mr Rrori's clan believe he didn't make Valedictorian because of influence on my part. They don't realise that he put himself out of consideration for it 18 months ago.\"\n\nThe Rrori females started, their Matriarch snapping, \"What?\"\n\nKami drew in closer to her husband, but looked reprovingly at Rrori. \"You didn't tell them? That wasn't fair on them, Cadet. Not at all.\"\n\nThe females looked to Rrori, who swallowed and offered, \"Please- let's go somewhere where I can explain-\"\n\n\"No,\" Hrelle denied sharply. \"You've had plenty of time to do that before subjecting your clan, and us, to this embarrassment.\" He faced the females again. \"Eighteen months ago, Mr Rrori was a shuttle pilot on an Away Mission to what was believed to be a derelict ship, the SS Rising Star. The ship proved to be inhabited, and because of a misunderstanding, they fired upon the shuttle.\n\nHad he followed orders and withdrawn the shuttle at the time, the matter could have been settled peacefully. But he didn't follow orders, he argued with his mission commander, and as a result, serious injuries occurred. When his commander beamed aboard the Rising Star to lend assistance, he ordered Mr Rrori to take no aggressive actions. But Mr Rrori ignored that order as well, because clearly being so handsome and well-bred, he must have known better.\n\nHe didn't. More lives were put at risk as a result of his actions.\n\nUnder normal circumstances, he would have been expelled from the Academy for these multiple infractions. But he did perform a heroic act in safely landing the Rising Star and saving the lives of those onboard, so all he ended up with was a loss of credits and a note on his Academic record; but these were sufficient to kick him off the shortlist for Valedictorian.\"\n\nThe Rrori females looked to the cadet again, his mother noting acidly, \"I remember you mentioning how wonderful you were landing that vessel. But nothing more.\" She looked back at Hrelle. \"Our apologies, Captain, for insulting you\u2014and in front of your Matriarch and family, too.\"\n\n\"I understand, Madame,\" Hrelle replied, glaring at Rrori. \"I don't blame you for this.\"\n\nRrori was gasping, almost shaking. \"Captain, I'm- I'm sorry for-\"\n\n\"I'm last in line for your apologies, Mister. And I'm not interested in hearing them.\" He turned, motioning for his clan to follow and leave the Rroris to deal with it.\n\nMa'Sala grunted. \"I wouldn't be in that cub's place for all the shuris on the Motherworld.\"\n\n\"How could he keep shtum about that?\" Sasha asked.\n\n\"He's a preening little coward,\" Hrelle snarled. \"That's how.\"\n\nKami slipped an arm around his. \"Hush, you. He's a young cub who makes mistakes, like any other young cub. And he's under immense pressure from his clan to live up to their exalted standards. I'm sure he thought the subject would never be raised again. And he has improved a great deal since then. He'll make a fine Starfleet officer.\"\n\nMa'Sala chuckled now. \"Though I'm sure he wishes he took Mi'Tree's suggestion to get into the vivid business and be a star.\"\n\nMention of the name brightened Hrelle's mood. \"Mi'Tree! Where is he? You said he was accompanying you! And where's my Warrior Prince as well?\"\n\n\"They're both together elsewhere, safe and sound.\"\n\n*\n\n\"MISHA!\" Mi'Tree bellowed, frantically looking around. \"Misha! Answer me, young cub! I know you can hear me!\" His eyes darted about, pointed ears twitching madly, having stopped trying to scent the cub, knowing that his nose wasn't what it once was.\n\nHe was terrified. He had only looked away for a moment, to greet some passers-by who had recognised him from his Clawback vivids, a rare treat when he was offworld, and he took some commemorative images with them. And when he looked back, the little terror had vanished! Mother's Cubs, his parents were going to kill him! And then Ma'Sala would make a rug out of his old hide! He should have expected this; the cub moved like a starship at high warp!\n\nHe looked to a dark clump of trees -- and saw an elderly human male in a utilitarian jumpsuit waving towards him. Mi'Tree rushed towards him, ignoring the protests from his heart, his lungs, slowing down as he entered a clearing where bright colourful flowers were being planted in elaborate patterns -- and where Misha knelt, assisting. \"CUB!\"\n\nMisha glanced up as if nothing was wrong, beaming. \"Grumpy! Flowers!\"\n\nMi'Tree stopped, the stress and exertion catching up with him, and he doubled over, heaving. The human approached, gently guiding the Caitian over to a nearby bench and sitting him down, before saying, \"Misha, bring your grandfather that water bottle.\"\n\nThe toddler dutifully obeyed, the human taking the bottle and offering it to Mi'Tree. \"Short sips, when you're ready.\"\n\nMi'Tree nodded, recovering enough to help himself to the water, relief washing through him as well. \"Thank- Thank you, Mr-\"\n\n\"Boothby.\"\n\nMi'Tree nodded again, drinking once more before returning the bottle, before pointing a trembling, angry finger at Misha. \"Young Cub, never, never go off alone like that again! Do you understand?\"\n\nMisha's jaw began quivering, and his eyes welled with tears. \"Trouble Time?\"\n\nImmediately the Caitian's anger melted as he dropped his finger. \"No, Cub. Not Trouble Time. Just don't wander off like that again.\"\n\nBoothby looked at the toddler as well. \"Your grandfather's right. Now, why don't you go finish planting those Bajoran firewheels for me?\"\n\nMisha nodded, looking unsure if he was in trouble or not, but relieved to be returning to something he wanted to do.\n\nBoothby looked to Mi'Tree again. \"Don't be too angry at him, he was caught short, as we say here, and needed a place to water the bushes. Then he got interested in the flowers.\"\n\nThe Caitian nodded, \"Thank you, sir, for finding him, and keeping him safe.\"\n\nThe old human shrugged. \"I didn't do much. I'm sure you would have found him soon enough... once you got past your pride.\"\n\n\"Eh?\"\n\nBoothby looked at him. \"You could have called for help from anyone around you from the very beginning. Any of the cadets or faculty would have assisted, or called Campus Security.\"\n\nMi'Tree harrumphed. \"I didn't need- I mean, I could have- that is-\"\n\n\"Hmph. Typical Caitian pride, especially with you males. I've seen it all the time.\" He pointed to the circle of flowers where Misha knelt, his tongue sticking out in concentration as he filled dark moist earth around the latest plant. \"Right on that spot, decades ago, there was a Caitian male cadet who would get regularly harassed by a clique of over-privileged snots. They would call it 'hazing'.\n\nI called it bullying, plain and simple. I tried to get him to complain, to report it, but he was determined to manage it himself.\" He shrugged. \"Hopefully something good will have come from all that pain and humiliation he endured.\" He looked at Mi'Tree. \"And how are you feeling now?\"\n\nThe Caitian grunted. \"I feel... like a dilapidated old shadow of my former self. Once I could have outrun that cub, you know, tracked him down by sound and scent across kilometres, the way I used to do for his mother when she was his age and went off on adventures. I'm... I'm not the man I once was.\"\n\nBoothby smirked. \"Who among us is?\"\n\nMi'Tree shook his head. \"I was a star in the action vivids back home. I was admired. I was even desired. And when the vividmakers decided to revive the Clawback franchise, they approached me, and I was delighted... until they told me they only wanted me for one scene, while some fit young cat took over the role. Can you believe that? Thinking I'd be satisfied with a cameo, while another took the role I made famous?\"\n\n\"You don't seem the type to settle for anything less than all the spotlight,\" Boothby noted with a smirk.\n\n\"Indeed not.\" He sighed wistfully. \"The only offer I've had of late has been to take over as the new Taleteller.\"\n\n\"Oh? And what's that?\"\n\n\"A popular broadcast among the cubs back home, someone chosen to narrate stories from around the Federation.\"\n\n\"Sounds like a decent gig.\"\n\n\"Bah! It's a job for actors at the ends of their careers! Ones who have stopped being sex symbols and have become... grandparents!\"\n\nBoothby stared at him without comment.\n\nMi'Tree harrumphed again.\n\nA familiar female voice cut into the silence. \"And where's my Warrior Prince?\"\n\nMisha's head shot up at the sound of his father's voice, and he rose and scampered over to the approaching group, launching himself into his arms. \"Papa! Flowers!\"\n\nMi'Tree and Boothby rose to their feet, the former murmuring, \"Um, let's not say anything about...\"\n\nBoothby patted him supportively on the shoulder as they approached the party, Ma'Sala looking at her husband and smirking. \"What's wrong, you old cat? Grandcub wearing you out?\"\n\nMi'Tree stuck out his chest. \"I'll be dancing on your grave, woman!\"\n\n\"Yeah, probably looking for a place to piss for the fiftieth time.\"\n\nHrelle stared at Boothby, frowning. \"Do I... Do I know you? Have we met?\"\n\n\"Maybe. Doesn't matter, what's past is past. Keep that in mind.\" But when he saw Sasha, he smiled. \"Hello again, Spitfire. Still stirring up the hornet's nest?\"\n\nSasha grinned, folding her arms across her chest. \"Whenever I can, Mr Boothby.\"\n\n\"Good. Keep them stirred and stay true to yourself.\" To Misha, the Groundskeeper added, \"And thank you for your help, young man. Maybe someday I'll see you back here as a cadet, like your sister and father.\"\n\nThe toddler grinned. \"I go now!\"\n\n*\n\nSchooner Academy Bar:\n\n\"Goddammit!\"\n\nNeraxis has been studying the brass and wood fittings and ropes hanging around their little corner table, when she turned in alarm at Jonas' exclamation. \"What's wrong?\"\n\nHe was staring at his pocket PADD, before slamming it down on the table with uncharacteristic carelessness, ignoring the looks from the people at the adjacent tables. \"My Mom's transport's had drive trouble! It won't reach Earth until the day after graduation!\"\n\nNeraxis' heart plummeted. \"Aww, shit... I'm sorry, Jonas, really!\" She leaned closer, putting an arm around him and hugging him. \"I'd be gutted if it was my Mom...\"\n\nHe looked caught between rage and despair. \"It's not fair! She's travelled nearly a thousand light years to get here, without a problem! And then this happens, practically on our doorstep! And it'll be because of something I could fix in my sleep!\" His hands clenched into fists. \"If we were on the Surefoot, the Captain would just let me get out there and take care of it! Son of a bitch!\"\n\n\"I know,\" she agreed gently, hugging him.\n\n\"Oh, look! Ostrich is back!\"\n\nJonas started, eyes wide at the trio of Ensigns looking in their direction from the bar. \"Oh, shit.\"\n\nNeraxis looked up at well. \"Who are they?\"\n\n\"The asswipe in the middle is Finnemore,\" he replied sullenly. \"He was an Engineering upperclassman before I joined the AWE Program... and he made my life miserable here. I'd hoped he'd moved on somewhere far away after he graduated.\" He clenched his jaw as they approached. \"Let's get out of here.\"\n\nBut she tightened her hold on his arm. \"No, it'll be okay. We're all adults now.\"\n\nThe man in the centre of the trio was tall, tanned and blonde, broad-shouldered and broad-jawed, and looking like he was missing his surfboard. He glanced at his flanking minions as he indicated Jonas, making some of the beer in the glass in his hand spill out onto the wooden floor as he laughed boisterously, \"I told you, Ostrich was back! I'd recognise that silver hair and virgin's face anywhere! And here I was, thinking you caught a glimpse of a naked woman somewhere along the way and died of terror!\"\n\nNeraxis felt Jonas force himself to stay calm and relax as he replied, \"Still calling me Ostrich. It's as funny now as it was four years ago.\"\n\nFinnemore's grin degenerated into a sneer. \"Yeah, well, you're as short now as you were four years ago.\"\n\nNeraxis chuckled. \"Such wit! You're up there with Oscar Wilde, Maixor Riss and my left asscheek.\"\n\nNow the Ensign focused on her. \"Are you okay? You look a little blue.\"\n\n\"Whoa, more of that wit! Better be more sparing, you only had half to start out with.\"\n\n\"Are you supposed to be his girlfriend?\" Finnemore snorted. \"I knew he'd be desperate, but really, screwing a Bolian must be like sticking your piece in a jar of acid.\"\n\nJonas started, but Neraxis tightened her hold on him, never taking her eyes off of Finnemore. \"Why don't you go try it yourself? Then afterwards, we can hold a very, very tiny funeral for it.\"\n\nHe stared at her, before drawing in closer, eyes glinting as if imparting some confidential information as he te thumbed at Jonas. \"You should have seen him back in the good old days. We used to slip some hot shots of Orion porn and profanity into his reports, hire girls to turn up in his room just before inspections, reprogram the fabricators to make his uniforms fall apart during parades.\"\n\n\"Yeah,\" Jonas agreed sarcastically. \"The good old days. What are you doing back here, looking for someone else to harass? That's pretty much the extent of your ambition, isn't it?\"\n\nNow the older man sneered. \"Watch yourself, Ostrich! I'm a big man with a top-secret project team at Starfleet HQ! One call to the C-in-C, and you and this little blue bitch will be stationed out with the Nybarites!\"\n\nNeraxis felt Jonas' rising anger, and set down her drink and rose. \"You're right, we should get going.\"\n\n\"Yeah.\" Still glaring at Finnemore, he pocketed his PADD and rose too, making a wide berth around the trio.\n\n\"Is your Mommy gonna be there tomorrow for you, Ostrich?\" Finnemore offered as the cadets began departing. \"Or is she too busy whoring somewhere? Send her my way, I'll be her Daddy-\"\n\nJonas spun around again, charged and punched the ensign square in the face repeatedly, sending him sprawling onto the table behind him and scattering glasses everywhere. Finnemore's friends recovered quickly enough to try and grab Jonas and drag him off, before Neraxis joined in, protecting her lover but using minimal force, aware of her superior training against the ensigns, and determined to get Jonas and herself out of there before-\n\n\"SECURITY! HALT!\"\n\n*\n\nSenior Cadets' Quarters:\n\nEydiir lay in bed and stared up at the plain white ceiling, remaining silent and still until Falok turned onto his side and faced her, studying her. \"Are you well? I believed I performed satisfactorily, but if there is room for improvement-\"\n\n\"No.\" She allowed herself a smile of contentment, in time for an afterwave of pleasure to pass through her. \"Improvement is not necessary. It was more than satisfactory, thank you.\" Her smile dropped as she met his gaze. \"I have been troubled by thoughts... but I do not wish to disturb you with them.\"\n\nHe softened his expression. \"I believe I would be more disturbed by the idea that you could not share such thoughts with me after all this time.\"\n\nThe Capellan considered his response, before accepting it. \"I am reconsidering my decision to go to Starfleet Medical Academy.\"\n\nHis brow furrowed. \"You do not wish to be a doctor anymore?\"\n\n\"I do. It is simply the path that is in question. I do not believe I can tolerate spending another four years or more on pure study and residency. I can return to active duty as a nurse and study part-time.\"\n\nHe nodded. \"It will take longer for you to reach your goal.\"\n\n\"True. But in the interim, I will gain immense practical experience, as well as save lives, especially in the coming months.\" She reached up and touched his face. \"But I know that with your posting at Starfleet Command, we will not be as physically close as we had originally planned.\"\n\nHe reached out to her now, his fingertips touching specific points on the side of her face. \"No. But I suspect we have reached a level of intimacy where physical closeness will remain desirable, but unnecessary. And I would be remiss in my role as your lover if I did anything less than fully support whatever decision you might take regarding your career.\" He paused and asked, \"May I?\"\n\n\"Please.\"\n\nThen she felt his mind join with hers, tendrils of thoughts and feelings unshared with anyone else mingling, connecting, building bonds that would linger for long afterwards...\n\n*\n\n\"Giles, just listen to me,\" his father instructed, for what seemed like the hundredth time since they had arrived at the restaurant.\n\nGiles was certain that was precisely what he had been doing, since he was replying, offering what he assumed was direct, relevant and cogent responses to his father's repeated insistence that his son accept a place in Starfleet Headquarters as his first posting, rather than his preferred choice on a border ship.\n\nIf anyone wasn't listening, it seemed to be his Dad.\n\nAnd their first course hadn't even arrived yet. Giles was devouring the breadsticks like a Horta with a marble cake, washing it down with a red wine that was making his head spin.\n\nMeanwhile, his uncle Matthew maintained his expected level of usefulness by occasionally punctuating Dad's arguments with, \"He's right, Giles.\" And Aunt Lucille? She sat there, the silent partner in this attempt to gang up on him... though sometimes it seemed as if she would rather be anywhere else.\n\nAnd then the Hrelles walked in, taking a large table near the main windows, overlooking South Bay: the Captain, the Counselor, Sasha, Misha and the Counselor's mother and one of her fathers. They didn't notice the Arringtons, or at least pretended to not notice. Giles was glad, but was also self-conscious, wondering if they could hear what was being said over here.\n\n\"Giles, listen to me,\" his father repeated, oblivious to the new arrivals. \"I understand, really. You want to make your own mark in Starfleet. But really... a border ship? They're small, overworked, understaffed, antiquated-\"\n\n\"Sounds awful, Dad. Why haven't you been doing something about it?\"\n\nBill Arrington flinched. \"Making Admiral doesn't impose us with Godhood, Giles. As it is, they are working on improvements, which is why they're putting together a team that you can be a part of.\"",
        "\"He's right, Giles,\" Uncle Matthew affirmed dutifully.\n\nGiles forced down his frustration, wondering if the calamari would get here before he lost his temper. \"Dad... I know our family has a history of making their mark in Starfleet.\"\n\nBill smiled, as if his son had somehow made some concession towards the truth.\n\nUntil his son continued. \"But don't you see that can't be the case anymore for us? We're not making a mark, we're reinforcing it.\" He leaned forward. \"It's not an achievement if people think you got there on your name rather than on your merits.\"\n\nBill grunted. \"You sound like him.\"\n\nHe didn't have to elaborate.\n\n\"Dad, I'm needed out there! Especially with what's coming up! I've been out there!\"\n\n\"You're being stubborn, Giles!\"\n\n\"Your father's right, Giles,\" Uncle Matthew added.\n\n\"HI GILES!\"\n\nHis head turned, as did the others, to see Misha, sitting in a high chair beside the Hrelle's table, looking over at him, beaming and waving and ignoring his mother's entreaties for him to quiet down and not disturb the other patrons. Despite the tension at his own table, Giles couldn't help but grin and wave back. He had helped mind Misha Hrelle on more than one occasions, and found the cub a charming, wonderful little thing, making him feel like a big brother.\n\nAn attitude apparently not shared by the rest of his family. Bill sighed as if facing some onerous trial. \"Them again...\"\n\nUncle Matthew looked at the toddler and smirked. \"I didn't know they let pets in here.\"\n\nGiles stared at him in sheer disbelief -- and something snapped in him. \"You PRICK!\"\n\nThe man's jaw dropped. \"Excuse me, young man-\"\n\nGiles rose to his feet, gripping the sides of the table. \"There's no excuse for you! You're a prick! And a stupid prick, too, because I'm pretty sure they can hear everything we're saying over here! You should stick to just kissing my father's ass, it's all your good for!\"\n\n\"Now that's enough, Giles!\" Bill scolded.\n\nGiles glared at his father. \"I'm fed up with this! It's like trying to debate with the Borg!\"\n\n\"Giles-\"\n\nBut the young man stormed away, noting Hrelle and Kami rising from their tables as he passed, offering a, \"Sorry about that.\"\n\nMisha did his best to turn in his chair. \"Hi Giles!\"\n\n\"Hi Sport.\" Giles looked ready to cry.\n\nMisha pointed in the cadet's direction but looked to his mother, appearing concerned. \"Mama! Giles sad!\"\n\nKami patted her son's arm as she rose. \"I know, sweetheart, I know-\"\n\nNow Misha pointed a commanding finger at her. \"Help Giles! You help!\"\n\n\"Settle down, Misha,\" Hrelle breathed.\n\nBill was following his son's departure -- until Kami stepped in front of him. \"Wait, Admiral!\" To Sasha she asked, \"Go get him, keep him outside.\" As the girl rose and departed, she returned to Bill. \"Admiral, if you want to have any chance of salvaging something with your son, you need to listen to me.\"\n\nBill bristled. \"Excuse me, Counselor, but I don't see how any of this is your business-\"\n\n\"Admiral, I've been your son's Counselor for two years, he's spent more time with me than you... and I know what you're hiding from him. He's old enough to hear the truth.\"\n\nMatthew and Lucille Arrington had arisen and approached, too, Matthew sneering, \"You people never know when to quit, do you? Bill, just get him transferred anyway-\"\n\n\"Shut up, Matt!\" Lucille snapped suddenly. She ignored her brother's reaction, and the reactions of the others around them. \"Just shut up! Giles is right about you!\" She looked at Kami. \"And you're right about Giles. Bill, listen to her. Do what she says. She knows what's she's talking about. More than any of us.\"\n\n*\n\nThe restaurant was built overlooking South Bay marina; gulls circled lazily overhead, as if waiting for the sails on the boats below to stop chasing them away. Giles' boots pounded on the wooden slats of the quay as he stormed off in the direction of the public trams.\n\n\"Giles, wait up!\"\n\nHe stopped and turned, not expecting who was calling him. \"Sash?\"\n\nShe rushed up to him, thumbing back towards the restaurant. \"Hold on- Kami wants you to come back-\"\n\n\"No! Forget it! I'm finished with them!\"\n\nHe turned to go, but she reached out and took his forearm, drawing closer. \"Don't walk away from them like this... please, Giles, trust me, I don't know what Kami has planned, but I trust her to know what she's doing.\" She squeezed his forearm and looked longingly at him. \"You don't know if you'll ever get to see your family alive again. Don't walk away.\"\n\n\"Giles?\"\n\nHe turned away from Sasha, to see his father there, and Kami close at hand, patting the man on the shoulder encouragingly to draw closer. He looked into his father's eyes, saw the hesitation, the struggle... it was a vulnerability that Giles had not seen before had not expected, and it stopped the snarky response he was prepared to deliver. \"Dad?\"\n\nThe man approached, hands held out. \"I'm sorry... I'm sorry I haven't been honest with you. About why I want you here... it's not because of tradition, or family loyalty or because you're better than anyone else...\" He stopped, reached out and almost tentatively clasped Giles by the shoulders. \"It's because I'm afraid. I see what's coming, what's coming for all of us. And... And I can't lose you. I know you're all grown up, I know it...\" Tears welled up in his eyes. \"But you'll always be my son. I'm sorry... I should've been honest with you from the start...\"\n\nGiles felt a slight nudge forward in his back, as Sasha walked around the two men to join Kami and finally give them the opportunity to hug.\n\n*\n\nIn the restaurant, Hrelle stood there with Matthew and Lucille, while Ma'Sala and Mi'Tree pretended not to be involved -- and Misha looked up and around at the newcomers, smiling and waving. \"Hi Mister! Hi Lady!\"\n\nLucille smiled at the toddler. Matthew swallowed and blushed, before giving a half-hearted wave back. \"Hi.\" To Hrelle he noted, \"Um, you have, ah, a handsome son, Captain.\"\n\n\"Thank you. We're lucky the restaurant allows pets.\"\n\nJust then Giles, Bill, Sasha and Kami returned, the last smiling. \"It's okay, everything's been sorted... well, it's not getting any worse, anyway. And I'd suggested it'd be a great idea if we all ate together.\"\n\n\"You did?\" Hrelle asked, quickly stifling any further protest with a look from her. He shrugged and signalled to the waiter. \"Four more chairs over here, please.\"\n\nIn moments the table had its additions, drinks were transferred over, and people stared at each other, or in the case of Misha, focused on picking his nose.\n\n\"So...\" Hrelle ventured, hoping someone else would pick up the conversation.\n\nSasha looked across at Matthew. \"Good afternoon, Commander.\" When she caught his attention, she smiled. \"I haven't seen you since my first week at the Academy.\"\n\nMatthew blanched, Hrelle rolled his eyes, and then Ma'Sala looked across at Matthew too, pointing a finger at him. \"Are you the kussik who tried to bully Sasha into quitting?\"\n\n\"Mama!\" Kami scolded.\n\nBeside her, Mi'Tree set down his drink and bellowed, \"You did WHAT? \"\n\nMisha looked back at Matthew now, pointed and helpfully offered, \"Uh oh, Trouble Time!\"\n\n*\n\nCampus Security Headquarters:\n\nNeraxis sat with her back to the stark cell wall and smirked. \"You know what I love about you, Scrappy? All the wonderful prisons you get us in.\"\n\nHe sat opposite her, leaning forward, his head in his hands, never moving as he reminded her, \"I've only got us into one holding cell before this one. A holding cell, not a prison.\" Now he looked up. \"And I'm sorry. I said I was sorry about twenty times already. How many more will it take?\"\n\n\"One more will do.\"\n\n\"I'm sorry.\"\n\nShe waited for a handful of heartbeats before replying, \"Sorries won't cut it, mister.\"\n\nHe looked up again, not mollified by her humorous, forgiving expression. \"I should have just walked away.\"\n\n\"Damn right you should have walked away. Maybe you should remember that, from tomorrow, you're not a cadet, you're a full-fledged member of Starfleet, and you'll be judged that way the next time you're provoked into fighting someone.\"\n\n\"Maybe.\" He hung his head again.\n\n\"And if it helps, Jonas,\" she added with a soft, gentle voice that grabbed his attention again. \"Bear in mind... I can't marry a man if he's gonna keep me worried that he'll end up on assault charges.\"\n\nHe stared at her.\n\nBut before he could respond, the force field around their cell dropped, and two familiar female figures walked into view, the coal-furred Caitian snapping, \"Alright, prisoners! On your feet! Time for your strip search!\"\n\nBeside C'Rash, T'Varik's expression was hardened. \"You speak with jocularity. However, you may proceed if you believe it will help curb Mr Ostrow from future appearance in facilities such as this.\"\n\nThe cadets rose, Jonas stepping forward. \"Commander, I'm fully responsible for what happened, Neraxis was doing her best to get me out before things escalated-\"\n\n\"I believe you, Mr Ostrow, and I believe in your contrition. This does not alter the general question of the ease to which you resort to physical violence.\"\n\nNeraxis stepped forward. \"Commander, I promise you that I will be kicking his ass about this for the rest of the summer, but he did get some bad news just before this prick Finnemore stepped in and started hassling him-\"\n\n\"Bad news?\"\n\n\"Yeah,\" Jonas confirmed half-heartedly. \"My Mom's transport's broke down just past Barnard's. She won't be here tomorrow for the graduation. I know it's no excuse-\"\n\n\"You are correct. But it is an explanation. I have spoken with Campus Security. They are prepared to drop the charges for all concerned if you are prepared to apologise for starting the fight.\"\n\n\"Of course,\" Jonas agreed immediately.\n\n\"Wait!\" Neraxis looked between them. \"That stroke-off had been bullying Jonas for years! I don't give a shit if he's some big man in some top-secret project now at HQ, you can't expect Jonas to kiss his ass after that-\"\n\n\"Yes!\" he denied. \"Yes, they can! I've caused enough trouble to you, to my superior officers, and to our friends! I'm supposed to be the mature professional here! Now let me have a chance to show it!\"\n\n*\n\nMoments later, they entered a nearby holding room in the Security offices, where Finnemore was sitting on a bench with his friends, a PADD in one hand and his bruised lip in the other, rising when the Surefoot officers and cadets entered, T'Varik announcing, \"Gentlemen, Mr Ostrow has something to say.\"\n\nJonas swallowed, breathed out and finally contributed, \"I'm sorry I lost my temper and hit you. It was wrong of me.\"\n\nFinnemore grunted in reply, a look of victimhood plastered on his face as he glared at Jonas.\n\nT'Varik continued. \"Under the terms agreed upon with Campus Security, this matter is now settled. Good day.\"\n\nBut as the Surefoot quartet began to depart the room, Finnemore returned to rubbing his mouth and muttering to his friends, \"Little pussy...\"\n\nT'Varik stopped at the doorway.\n\nShe spun around in place and returned, until she was centimetres from his face, her expression cold steel as she ordered, \"State your name, rank and serial number.\"\n\nFinnemore started. \"Huh? Wh- Why do you want-\"\n\n\"Is that how you respond to a superior officer, Ensign?\" C'Rash barked from the doorway.\n\nThe ensign straightened up, years of discipline snapping back in place. \"Finnemore, Chris; Ensign; Serial Number JS-844-078, Ma'am!\"\n\nT'Varik's expression remained unblinking, unwavering. \"Who was the target of that utterance, Ensign?\"\n\n\"Uh- Commander, I didn't- it wasn't-\"\n\n\"Answer the question, Ensign!\" C'Rash growled.\n\n\"Uh-Ostrich- I mean, Ostrow! Ostrow!\"\n\n\"From this point on you will refer to him as 'Mr Ostrow',\" the Vulcan informed him coldly. \"He deserves nothing less. I am aware of three definitions for the word 'pussy', of varying degrees of offensiveness. Knowing the mindset of certain young male humans, I believe your most likely chosen definition would be that of an alleged weak, inferior man. Did you mean it in that sense against Mr Ostrow, Ensign?\"\n\nFinnemore was turning scarlet from the relentless scrutiny. \"C-Commander, you don't- you don't understand-\"\n\nShe drew in a little closer. \"Ensign, a word of advice: do not even begin to attempt to educate me on what you think I do or do not understand. I will ask you one more time: did you mean to imply that you believe yourself superior to Mr Ostrow?\"\n\nHe was visibly shaking now, managing a weak nod.\n\n\"I have been informed that you are a 'big man' with some 'Top Secret project' at Starfleet Headquarters. Is this true?\"\n\n\"I- I can't- I can't say-\"\n\n\"No, but you can apparently boast about it in a public venue, and get yourself arrested in the process. I will contact Admiral Trenagen and inform him that you are a security risk in whatever project this is that you are undertaking for Starfleet Intelligence-\"\n\nHe looked ready to faint. \"NO! P-Please, Commander, I'm- I'm not-\"\n\n\"You are not a 'big man' with a classified project,\" she prompted. \"So I already surmised; you are not the first male I have encountered with a propensity to exaggerate size.\"\n\n\"L-Look, we were just having some fun-\"\n\n\"Your definition of 'fun' leaves everything to be desired.\" She held out her hand. \"Your duty PADD. Give it to me.\"\n\nHe looked down at it. \"W-Why- Why do you want-\"\n\nC'Rash took a step forward, teeth bared. \"If I have to take it from you, Ensign, fingers will be taken as well!\"\n\nFinnemore handed it to T'Varik. The Vulcan activated it, quickly swiping through the pages of data she found. \"This appears to contain your duty logs at Starfleet Headquarters for the last two years since your graduation. And they mostly consist of assignments to repair and maintain... door sensors.\" She looked up at him again. \"Are they Top Secret door sensors, Ensign?\"\n\nHe swallowed. \"Uh- Ma'am-\"\n\n\"Door sensors- oh, and occasionally, corridor lighting strips and floor cleaners. And according to these performance reports from your superior officer, despite this limited responsibility given you, you have still managed to receive reprimands for substandard work, lateness and rudeness.\"\n\nWithout giving the Ensign a break from her returned gaze, she pointed in Jonas' direction. \"Look at that man. Look at that man and do not look away from him.\" As Finnemore complied, she continued. \"In the past two years, while you have been at Starfleet Headquarters maintaining door sensors and lighting strips, that man -- and do not err, he is a man, as opposed to the parody that stands before me now -- has been commanding Engineering Teams and Away Missions while holding the provisional rank of Lieutenant.\n\nHe had an article published in the March 2372 issue of Starfleet Engineering Maintenance Procedures on suggested improvements to warp core refits, improvements I am told are being considered for approval in future technical manuals.\n\nHe devised a method of tracking pirate ships hiding in dark matter nebulae.\n\nHe helped uncover a Cardassian plot to invade Federation space across the Arkady Cluster.\n\nHe discovered a means of defusing Nekrosi subspace mines, thus saving his Squad Leader's life.\n\nHe helped -- I did not give you permission to look away, Ensign, keep looking at him -- he helped deflect an asteroid from striking a populated planet.\n\nHe has participated in hand-to-hand combat with hostile forces who invaded our vessel.\n\nHe has been wounded in battle.\n\nHe is the recipient of numerous citations, including the Starfleet Medal of Commendation for Exceptional Valour.\n\nHe has helped save many lives. Including my godson's.\n\nAnd he has accomplished all of this before he has even graduated.\n\nAny commanding officer would consider themselves exceedingly fortunate to have him as a member of their team. Myself included. Look at me now.\"\n\nAs he did, she finished with, \"Do you still consider yourself superior to him?\"\n\nHe didn't give an answer.\n\nShe didn't require one. \"I will be monitoring you. If I hear of you harassing anyone else, I will place on your record a reprimand of such potency that it will follow you for the rest of your career in Starfleet.\" She handed him back his PADD. \"Such as it is.\"\n\n*\n\nOnce in the open, Jonas turned to T'Varik, visibly relieved. \"Thank you for that, Commander, really! I don't know what to say-\"\n\nShe gave the Vulcan equivalent of a sigh. \"I would prefer you demonstrate your gratitude by remembering that your next commander might not be as appreciative of your many talents, and consequently may not be as willing to defend you.\"\n\n\"He will, Commander,\" Neraxis promised. \"Um, we have to hurry to get to the spaceport, before my family arrive and demolish it.\"\n\nT'Varik raised an eyebrow. \"Having previously encountered your siblings, that is not beyond the realm of possibility. Dismissed.\"\n\nAs the cadets ran off, C'Rash slipped an arm around T'Varik's. \"You delightful bitch!\"\n\n\"I beg your pardon?\"\n\n\"The way you devoured that thick slab of beef!\"\n\n\"I did no such thing. I am a vegetarian.\"\n\n\"Oh hah hah... Seriously, though, let's get back to our guest quarters! My nethers have gone nova over you!\"\n\n\"Don't be vulgar. I need to make an urgent call to the Starfleet Transport Authority.\"\n\nC'Rash leaned in closer and purred against her. \"Can't you make the call in our quarters? On your back? It'd be more efficient: you do the call, I do you.\"\n\nAfter a moment, T'Varik conceded, \"It would be more efficient...\"\n\n*\n\nAcademy Guest Quarters:\n\n\"It's not right!\" Mi'Tree groused, sitting sulking on the balcony, pretending to watch the sun descend behind the hills across the bay. \"My daughter should not have invited those swine to join us at the table, after all the trouble they have caused! My kin-son should have turned them away!\"\n\nJust inside, Ma'Sala sat nude at the side of the bed, grunting as she twisted to trim some more excess fur from her tail. \"Our daughter believed it best to mend relations, for the sake of their mutual cubs, and each other. And our kin-son respected his wife's decision, though it was obvious it would not have been his first choice. But he is of a forgiving nature. They both are.\"\n\n\"Some things cannot be forgiven! That scoundrel's remarks about Misha-\"\n\n\"Were spoken without thought, and regretted. It was obvious on his face. Get in here and help me.\"\n\nMi'Tree rose, stretching his limbs and tail as he returned to the interior, accepting the trimmer from her as she stretched out one leg. \"And now that you're back inside, tell me what's really bothering you.\"\n\nHe dropped to one knee before her, taking her leg under one arm while he activated the trimmer, never looking at her as he muttered, \"Nothing.\"\n\n\"Liar. You've not been yourself since-\" She frowned as she watched him trim the fur around her calves. \"Did something happen when you were minding Misha?\"\n\nMi'Tree paused, before switching off the trimmer again, his voice low and fragile. \"I lost him. He ran off, I tried to find him, catch up with him... but I couldn't. I couldn't because I'm old. Old and decrepit.\"\n\n\"Of course you are.\" When he looked up in response, she elaborated, \"We all are. Very few could keep up with that little sleekfish.\"\n\n\"His parents -- his young parents -- cope with him!\"\n\nShe leaned in. \"They live on a starship, a safe, enclosed environment with internal sensors that can track a cub with wanderlust in seconds. This is probably his first time on a planet with open spaces since he started walking. He'll rush out into it, unthinking of the mild heart attacks he's giving his carers.\" She reached out and stroked his muzzle tenderly. \"Stop pulling your fur out over it. I love you, you old cat.\"",
        "He responded to the touch, but stubbornly growled, \"Old...\"\n\nShe chuckled. \"Nothing wrong with being old... usually.\" Ma'Sala leaned forward and reached out with her other hand, stroking behind his sharp-pointed ear. \"We do have a wealth of wisdom and experience under our belts. Or in your case, just experience.\" She chuckled at his expression. \"And we have time before the evening party.\"\n\nHe looked up at her. \"Eh?\"\n\nShe smiled slyly, letting her purr travel through her body to his. \"I know you prefer Bneea, you were married to him before you two married me, and you prefer men in general... but we have been known to make love on rare occasions.\" Her expression softened. \"And on even rarer occasions, I like to let my guard down and share some intimacy with someone I love and trust.\"\n\nHer leg descended, dipping beneath his kilt.\n\nShe smiled now. \"Ooh, that doesn't seem old and decrepit...\"\n\n*\n\nSan Francisco Spaceport:\n\nNeraxis rose to her toes to look past the crowd in front of her, as travellers from the latest shuttle landing poured out through the Arrivals Gate. \"This has to be them! You'll help with the bags, won't you, Scrappy?\"\n\n\"Of course.\"\n\nShe dropped and looked to him. \"What's wrong?\"\n\n\"Nothing,\" he lied, looking pale. But then he faced her. \"What if they don't like me?\"\n\n\"What? They've met you already! Remember, when Captain Hrelle arranged for their visit to see me get that medal?\"\n\n\"That was different,\" he grumbled. \"We weren't dating then. I know you told them about us.\"\n\nShe laughed. \"They liked you then. they'll like you now! No one will say anything, I promise-\"\n\n\"NER-NER!\"\n\nNeraxis bolted upright, face flushing cerulean as she waved her arms. \"MAMA!\"\n\nJonas looked up to see a wave of blue pour in through the gates, as nearly a dozen bald Bolians of various ages and sizes swarmed up to Neraxis and Jonas, surrounding them as Neraxis began hugging her mother and the older brothers and sisters.\n\nJonas wanted to step back and let his girlfriend have her moment with her family -- but they were on him, too, her mother coming up and embracing him with huge arms. \"Jonas, darling boy, it's wonderful to see you again! Ner-Ner messaged me with the bad news about your mother being late, I'm so sorry! Have you spoken with her since?\"\n\nJonas tried to catch his breath, just about managing. \"I, ah, tried, but I think their comm system's down as well-\"\n\n\"Well, I'm sure she'll be fine, and we'll be taking more than enough images of you and Neraxis tomorrow, I'll share them with her, I promise!\" She pulled back, regarding the young man with obvious, genuine affection. \"In the meantime, you're an honorary member of the Nemm family!\"\n\n\"Yeah, good luck with that, Scrappy!\" Neraxis joked, laughing as she continued hugging her siblings. There seemed so many, Jonas, an only child, had no idea how they managed to keep things organised, remembered who everyone was or what they liked or hated or did or-\n\nSuddenly he felt something tugging his hand, and he looked down to see the youngest girl -- Alazia, if he recalled correctly -- at his side, beckoning him to come down to her level.\n\nHe dropped to one knee. \"Uh, hi there. Can I, ah, help you?\"\n\nShe stared at him with narrow, accusing eyes, before grabbing him by the lapels of his jacket, leaning into his right ear and announcing with a cackle, \"YOU DO NAUGHTIES WITH NER-NER!\"\n\n*\n\nAcademy Hall:\n\nDoc Masterson slipped on the Smile, the One That Never Fails, as he chuckled at the woman's joke. \"Well, Ma'am, you oughtta know something about Cowboys: we never-\"\n\nHe stopped flirting as he looked past the woman's shoulder to see Eydiir standing there, staring directly at him.\n\nCloser to him, the woman, an attractive civilian with a mass of sable hair and a tint of hazel in her eyes, grinned. \"You never what, Zeke?\"\n\nHe dialled down the charm as he sensed the urgency from the cadet, practically being phasered into him from her eyes. \"We, ah, never fail to respond to an emergency call.\" He nodded past her. \"One of the Medical cadets from the Surefoot, probably wants to thank me for coaching her. You think y'all can spare me a few minutes here while I speak with her?\"\n\nShe reached up and gripped him by his jacket. \"No. I'm going back to my quarters.\" But then she leaned in and added, \"Annex B, Room 412. Don't be long, or I'll start without you.\"\n\nMasterson breathed in her perfume as she glided around him and towards the door, before he started up to the Capellan girl. \"Make it quick, I've got an urgent consultation waiting for me.\"\n\n\"So I saw,\" Eydiir replied dryly. \"Forgive me, Doctor, but I thought it was better if I asked you first.\"\n\n\"Asked me what?\"\n\nShe breathed in. \"My initial intention was to stay here and begin full formal training at Starfleet Medical. I have changed my mind. I wish to return to my duties onboard the Surefoot and continue to study part-time there-\"\n\n\"Done.\"\n\nShe blinked. \"Excuse me, Doctor? I will need your sponsorship, your assistance in completing the courses, certifying me-\"\n\n\"I said Done. It's a done deal.\"\n\nShe frowned. \"You are not just saying this so you can go have sex with that woman?\"\n\nHe chuckled. \"No, I'm not! You're strong, smart, hard-working, and you have more practical experience than most of the rest of the staff! Plus, you can handle a blade... and if this little brouhaha with the Klingons heats up some more, I could use someone watching my back in Sickbay.\"\n\n\"But... you will need to get clearance from Captain Hrelle-\"\n\n\"We already discussed it, after you had decided on going full time here. And he made it plain that he would have you back in two shakes of a lamb's tail.\"\n\nEydiir beamed. \"I will take that as a positive!\"\n\n\"So you should. Go find T'Varik and tell her you've cleared it with me.\"\n\n\"I will. Thank you!\" She waved towards the doors. \"Please, enjoy yourself, she appears most fit!\"\n\nHe tipped an imaginary hat. \"Thanks... Nurse.\"\n\n*\n\nThe main room was packed with hundreds of people; although Sasha would have expected the guests to outnumber the cadets, in fact it seemed that not everyone had people attending the graduation, or who might not be showing up until tomorrow. And factor in the Academy instructors and Liaisons, and the crew of the vessels who participated in the AWE Program, Starfleet outnumbered the guests.\n\nIt had been a dizzying experience for Sasha all the same, meeting people from all races and walks of life, making connections with family and friends of people she knew on the Surefoot, some of them matching her expectations, like the parents of the Kit's wacky girlfriend Hafsa. Others, however, proved surprising, such as the warm, charming persona of Professor Thykrill, the father of the dour Andorian Security cadet Atario.\n\nShe was sorry to hear that Jonas' mother wouldn't make it in time for the graduation, although he seemed too distracted to be depressed, to judge from the constant ion storm of Neraxis' younger siblings, constantly pulling him this way or that. And judging from poor Rrori's face, he had gone through the Seven Hells with his Matriarch and mother over withholding details of his bad record from them. He looked miserable. And Eydiir seemed distracted with something; she promised herself to talk it over with her later.\n\nThen there were the Arringtons, the last people she found she would have warmed up to before today. But then Giles and his father reconciled, Commander Arrington had expressed his regrets at his behaviour with Sasha, and the even the Ice Queen Lucille Arrington melted after Kami let the woman hold Misha, and the toddler purred against her neck.\n\nMiracles do happen.\n\nOccasionally she would run into her Dad and Kami, having left Misha with a babysitter for the night while they charmed the guests. They made a lovely couple.\n\nSasha was glad. And not. The latter because she knew that Sasha and they would soon part company. It was inevitable, she knew. That didn't ease her melancholy.\n\nOr her anxiety. She had completed her speech earlier this evening while getting ready for this party, but that didn't mean she was satisfied with it. Reading it back in her head, it seemed... foreboding. Frightening, even. She detailed what she had seen out there, what she had done. She didn't want to sugarcoat it for those who had yet to experience the grittier side of Starfleet. But she didn't want them to scurry away like swamp rats in the light, either. Hopefully, she would find a balance between the two when the time came to speak.\n\nOn a screen behind the podium, a montage of images appeared, images taken of the cadets on campus and on the various AWE vessels. Every so often, she would recognise one of the images as someone from the Surefoot, and she would get nostalgic -- oy vey, imagine getting nostalgic over something that she had been doing only weeks ago!\n\nIt was when a picture appeared of her Dad and herself, one she recognised from that planet where the Rising Star had crashed, that she heard someone in the crowd behind her meow, followed by laughter from others.\n\nSasha turned, seeing a collection of cadets gathered together, drinks in hand, surrounding a tall, thin human cadet with walnut-coloured skin, who was gesturing up at the screen now and making some pithy remark that his friends found amusing.\n\nShe strode up to him, thrusting out her hand. \"Hi. Squad Leader Sasha Hrelle, Alpha Squad, USS Surefoot.\"\n\n\"Yeah, we all know,\" he noted with some condescending amusement, before grinning mirthlessly and extending his own hand. \"Squad Leader Jack Carradine, Apollo Squad, USS Shrysia.\"\n\nTheir handshake was mutually strong, lingering. Tightening. Challenging.\n\nShe nodded to the screen. \"So... what's funny?\"\n\nHe let go, shrugging. \"I don't know. What is funny?\"\n\nNow she held out a hand towards the screen, though the image had since changed to another. \"You were laughing when my father's image was up there. And making a sound like a cat's meow. It sounded like a joke.\"\n\nCarradine smirked. \"Oh, I'm sure you were mistaken.\" He gave his friends a 'Do you believe her?' look as he turned away, expecting Sasha to take the hint.\n\nInstead she drew back into his line of sight. \"You have a problem?\"\n\nNow annoyance crept into his voice. \"Don't you have another medal to collect? Some award? Another mention in the News? Or is it the turn of someone else on Captain Daddy's ship to get the praise while the rest of us do the real work?\"\n\n\"What?\" Anger pushed aside the confusion she had been feeling. \"Who stuck the bat'leth up your ass?\" She tensed as she felt people moving up beside her, fearing she was being ganged upon on, but then relaxed as she glanced and saw it was Giles, Eydiir, and several others from her ship, drawn to the growing argument.\n\nThe addition of people on Sasha's side triggered an identical closing in the ranks behind Carradine, whose own snarkiness was eclipsed by nastiness. \"Why are you even bothering to play the innocent? Go on, you and the rest of the Surefoot Sensations go stroke each other off.\"\n\n\"What in the Seven Hells are you talking about-\"\n\n\"Oh come, drop it, we all know what's happening!\" Others around Carradine chimed in with agreement. \"It's a nice little arrangement you have. Now go get Captain Daddy a saucer of milk.\"\n\nRage boiled in her now. \"You fakakta little shit-\"\n\nThen she felt Giles' hand on her arm, as he urged, \"Sash, walk away now. I trusted you before, now you trust me.\"\n\nOn her other side, Eydiir added, \"Yes. Ignore this garrulous rampallian.\"\n\nCarradine frowned at her. \"What did you call me?\"\n\n\"I have neither time nor patience to repeat myself with smaller words for your benefit.\" She pushed Sasha away, she and Giles and several others leading her outside.\n\n*\n\nThe Academy grounds were illuminated in bone white from the lights along the winding paths, and there was a slight taste of salt in the air. As she paced around like a caged animal, she watched as Giles and Eydiir were joined by the rest of her squad, and many members of the other squads from the Surefoot, drawn out like moths to a flame. \"What the hell was all that about? The 'Surefoot Sensations'?\"\n\n\"Yeah,\" Giles muttered. \"I've heard other people say that among themselves -- when they thought none of us were around to hear.\"\n\n\"Are they jealous?\" the Bajoran Squad Leader Naavos asked. \"Because Sasha made Valedictorian?\"\n\n\"That mountebank implied Captain Hrelle used his influence to advance her,\" Eydiir sneered.\n\n\"It is more than that, I fear,\" Falok noted, striding up to join the centre of the group, the Vulcan straightening up as he gained their attention. \"Of the four Starfleet vessels participating in the AWE Program at Earth's Starfleet Academy -- the Surefoot, the Shrysia, the Revere and the Gavvl -- our vessel has had the most... colourful history. Indeed, we are no longer even on the original Surefoot or mission.\"\n\n\"Well, no!\" Sasha agreed. \"The original Surefoot was decommissioned due to shiprot! That wasn't our fault!\"\n\n\"Indeed not. But with the new ship, came a new mission, as a tender vessel, with Captain Hrelle performing additional duties as a Strategic Operations Officer for the Cardassian border. This is a much higher profile than the other ships, that have served as a tug, a repair ship and a transport, respectively. As a result, some cadets believe it was contrived by Captain Hrelle to give his daughter, and by default the rest of us onboard, a... I believe the phrase is 'a shot at glory'. Hence the disparaging label of 'Surefoot Sensations'.\"\n\nSasha's jaw dropped, unable to respond.\n\n\"That's bullshit!\" Neraxis exclaimed, her response echoed by others around her.\n\n\"Damn right it is!\" Jonas agreed. \"Sasha nearly died! She was almost blown up by a mine! Half of us have been shot, stunned, assaulted! Do they really think that was all a set-up to get medals and commendations?\"\n\n\"To be fair, not all of our fellow cadets appear to share this notion,\" Falok admitted. \"Most correctly reject it as absurd. The belief appears to be held principally by the other cadets from the other vessels in the Program... and undoubtedly stems from envy at our apparent good fortune.\"\n\n\"'Good fortune?'\" Sasha said weakly, tears welling up in her eyes as the emotion pushed at her insides, demanding release. \"GOOD FORTUNE? My baby brother was crushed... some filthy Goddamn snake crushed my baby brother! They think- they-\" She gritted her teeth and let loose a roar of rage and frustration, her arms shaking. She wanted to quit. She wanted to drop all of this crap and walk away. She didn't want to associate with people who could think like that.\n\nGiles drew in, holding her, murmuring, \"It's okay, Sash. it'll be okay.\"\n\nShe held him back, silently grateful for his presence, his support.\n\n\"I will not allow this to go unchallenged,\" Eydiir declared darkly.\n\n\"I must concur,\" Falok nodded, as others joined in. \"Action must be taken.\"\n\n\"So, we go in and kick their asses?\" Neraxis suggested.\n\n\"I was thinking a protest to the Superintendent would be more apropos,\" the Vulcan replied dryly.\n\n\"Agreed,\" Rrori added. \"And if our families protest as well-\"\n\nSasha pulled back from Giles, wiping her face. \"No- wait!\" As the group stopped talking to look at her, she took a moment to look at all of them: Jonas, Kit, Rrori, Eydiir, Neraxis, Giles, Falok, Naavos, Yeager, Hafsa, Izzy, Praal, Beaudine, Ingalls, Thykrill, Soolamea, all the others. All she had grown to know, some very close, others not so. They would probably never be together again like this. But now, they were all still together, perhaps for the last time.\n\nShe remembered all the ordinary things they had done together: classes, meals, parties, study sessions. And she remembered the extraordinary things, too: rescuing the Malbruk II space station crew, assisting with the rescue of the Malurian refugee children, fighting the Ferasans, the Vlathi. She didn't have the same feelings for all of them -- some she was intimately close to, others annoyed her -- but there was a bond between them all.\n\nAnd she wanted to savour it as long as she could. She wiped her eyes and smiled as she regarded them. \"No. They want to make themselves feel better by believing that crap? Well, I say let them. Anything we say won't change them. It won't change us, either. And I'm proud of us, and what we've done out there.\" She grinned now as many made sounds of agreement. \"And as far as I'm concerned, the only people whose opinion I give a shit about are standing right here.\"\n\nThere was more agreement, as Giles nodded. \"Like the old saying goes, 'Haters gonna hate'.\"\n\n\"Exactly! They can think what they like! It won't make a difference to us! We're Surefooted! They can't knock us down so easily!\"\n\nThe group whooped and cheered and clapped and punched the air.\n\nHer grin felt like it would reach her ears, as she started to step backwards. \"And to be honest, if this is the last night we'll be all together, I don't want to spend it arguing with a pack of mewling stroke-offs.\" She slipped out of her cadet's jacket. \"I'd rather go for a Bellini. Who's with me?\"\n\nMany cheered again and followed, Giles leading the way. Kit looked to Hafsa, who laughed and asked her boyfriend, \"Well, are you up for running naked across the grounds, sweetie?\"\n\nThe Qarari nodded. \"I believe I can grin and... bare it!\" He wheezed with laughter.\n\nGiles rolled his eyes as they cackled and departed. \"Oh dear God...\" But then he followed them.\n\nRrori looked to Isabelle. \"We could technically still get into trouble for this. I have been chewed up enough by my Matriarch and Mother.\"\n\nThe English girl shrugged. \"What more can they get off those pretty bones of yours?\"\n\nThe Caitian started to reply, but then shrugged back and followed the rest.\n\nJonas slapped Neraxis on the rear. \"Come on, Sexy, let's get stripped!\" He ran ahead of her.\n\nThe Bolian laughed. \"Who are you, and what have you done with the real Jonas Ostrow?\" But she pursued him.\n\nFalok and Eydiir remained behind, the Capellan acknowledging. \"I realise that this tomfoolery is not logical.\"\n\nBut then he took her hand in his. \"True. But if I have learned anything in my relationship with you, it is that there is more to life than logic.\"\n\nShe raised her eyebrow in playful imitation of him. \"Indeed.\" Then they followed the others.\n\nBy the corner of the Hall, stepping out of the shadows, unnoticed but having heard the conversation, the Superintendent watched the cadets depart, before she returned inside.\n\n*\n\n\"So, who's up for a Bellini this year?\" C'Rash invited the little group.\n\nT'Varik cradled her glass. \"Such activities are reserved for cadets, not responsible members of Starfleet. If you did not indulge at the time, I suggest it is too late now.\"\n\n\"And what pray tell is this 'Bellini'?\" Mi'Tree asked, intrigued.\n\n\"The original Bellini was a Captain Martina Bellini,\" Hrelle explained. \"Who was famous for her part in the Tomed Incident in 2311 while commanding the USS Ajax. She was considered tough, no-nonsense, stern -- when she was older. But decades before that, when Kirk was still gallivanting around and she was just a snotnosed cadet, she had a wilder reputation. And on the night before her graduation, she celebrated her imminent departure from this hallowed facility by streaking across the parade grounds.\"\n\n\"'Streaking'?\"\n\n\"Running naked,\" C'Rash elaborated, smirking. \"Unlike Caitians, humans are more backward about public nudity, so it was considered scandalous. Other cadets joined her. The Superintendent at the time decided to ignore the breach of protocol on their last night and look the other way.\"",
        "\"The story is apocryphal,\" T'Varik pointed out. \"There was no official record of the incident.\"\n\n\"But it has become a tradition,\" Hrelle confirmed. \"For the more daring in any particular class who hear about it.\"\n\n\"Did you do it, Uncle Esek?\" C'Rash asked, smiling.\n\n\"Me? No! I was too shy. I used to have a weight problem back then.\" He looked to his wife, who was snickering. \"What?\" As Bill Arrington drew up, Hrelle smiled and asked, \"How about you, Admiral? Did you do a Bellini before you graduated?\"\n\nThe man made a nervous, distracted laugh as he glanced at the women. \"I, ah... no. No. My father was the Superintendent at the time, after all.\" He glanced down at the drink in his hand before continuing. \"Can I say something, Captain?\"\n\nHrelle smirked. \"I don't think you need my permission, Sir.\"\n\nArrington smiled hesitantly. \"Probably not, but...\" He seemed to steel himself. \"My family... and I... have treated you appallingly over the years, without any real justification. On these grounds when we were cadets, when you came back from the Bel-Zon, in the dealings with Lucille... You, on the other hand, have been gracious and forgiving. I was touched that you invited us to your table, that you helped patch things up with Giles and me.\n\nI want to publicly apologise to you now. And I sincerely hope that you can find it in your heart to let us start anew.\"\n\nHe held out his hand.\n\nHrelle stared at him, feeling bowled over by the request.\n\nThen he offered his own hand. \"There's enough conflict in the Galaxy already without our adding to it.\"\n\n\"Well done, gentlemen,\" Goldstein remarked, smiling. \"Now maybe we should send you out to solve the Dominion Crisis?\" She turned to T'Varik. \"Commander, may I have a private word with you?\"\n\nThe Vulcan nodded and departed with the Superintendent, as Kami asked, \"Admiral, perhaps you could sate my curiosity: I know all this started with your late father when he was Superintendent. But what did Esek do to earn his wrath?\"\n\nArrington blanched. \"He, ah... he thought your husband was too cocky.\"\n\nHrelle blinked. \"Cocky?\"\n\nThe Admiral nodded. \"Yes... he said you strutted about too much, like you owned the place. And then there were all the female cadets you were with... a different one each week...\"\n\nKami smirked at her husband as she crossed her arms and. \"Oh, really, Admiral? You must tell me more.\"\n\nHrelle harrumphed and turned back to Arrington. \"Admiral, what are Lucille's plans now?\"\n\nBill looked glad to save the Captain from any potential embarrassment. \"No one's sure, not even Lucille, I think. She's accepted that the Bel-Zon had a hand in her erratic behaviour... but she was never the most patient and serene individuals before that. She was cleared for a return to duty, but she's talked of moving on. The Merchantfleet could always use an experienced command officer-\"\n\n\"We could use one in Starfleet, too.\" Hrelle admitted. \"Especially in the coming months.\"\n\n\"If you like, Admiral,\" Kami offered. \"And if she wants, of course, I'd be happy to have a casual talk with her. I might be able to help her make her choices clear, help her find her confidence again.\"\n\nArrington brightened. \"You would be willing to do that, Counselor? Give her an informal assessment?\"\n\nShe smiled. \"Actually, I've already started, Sir, when I let her take Misha in her arms, and watched her reaction with him -- and his reaction to her.\" She glanced at Hrelle. \"And I've had some experience helping victims of the Bel-Zon.\"\n\n*\n\nThe grounds had been cut that day; the smell lingered in the air, kept lingering by the sprinkler units rising up from various points.\n\nThe Surefoot cadets stood at the edge, quickly stripping off, half of them collapsing from drink or nerves, leaning against each other and laughing.\n\nSasha among them, glancing at her friends. It was a declaration. It was defiance.\n\nIt was delightful.\n\n\"Hey.\"\n\nShe turned to look at Giles, and smiled. \"Hey yourself. You sure you should be doing this, being the youngest member of the Arrington Dynasty?\"\n\nHe smirked. \"Are you sure you want to be doing this, being Valedictorian and an example to others of the Best of the Best?\"\n\nShe offered him her middle finger as she slipped out of the last of her clothes, just as the sprinklers started up, the droplets reflecting the white from the surrounding pathway lights. \"Race you to the other side and back!\"\n\nThe grass was wet and thick beneath her bare feet, the water a billion cold bullets striking every part of her. After a few metres, she acknowledged that running without a bra wasn't fun, but didn't stop, instead clasping her breasts down with one forearm while she raced down the field with everyone else, stopping at the end and racing back, still whooping and hollering.\n\nThey collapsed around their discarded clothes, laughing and chattering excitedly amongst themselves. Or, in the case of the couples, taking advantage of the nudity to reaffirm their mutual attraction.\n\nSasha watched, as much as she could without being intrusive, before lying on her back and staring up at the night sky -- acknowledging how long it had been since she had sex. With someone else, anyway.\n\nShe looked over at Giles, who had, intentionally or not, landed beside her, gasping for air. He looked as fit now as when she last saw him naked.\n\nGiles. It had been almost like a star-crossed Romeo and Juliet thing, with their feuding families, and their mutual dislike melting into a respect, and then an attraction... she didn't regret breaking them up. They weren't like Jonas and Neraxis, in different fields; Giles and she both had plans for commanding starships, and neither would be satisfied for long being on the same ship with the other in charge.\n\nBut they did work, and played, well together... She smiled and rolled over to lie on her side, facing him. \"Hey... wanna come back to my quarters?\"\n\nHe was laughing... but sobered quickly when he realised she was being serious. \"What, really?\"\n\nShe nodded, then reassured him, \"I'm not drunk, I'm not emotionally vulnerable, and I don't want to be a couple again. But I am horny. And if you're feeling the same, come over to mine. Soon.\" She glanced over her shoulder once, and then back at him. \"But don't let the others know, or they'll never let us live it down.\"\n\nShe turned around again and reached for her clothes, hoping she wouldn't regret making her offer.\n\n*\n\nTwo hours later, lying in bed, a warm wonderful glow rushing through her, Sasha decided she didn't.\n\n\"Ms Hrelle?\"\n\nShe stirred, pulling the rest of the bedsheets up over her, silently daring Giles to fight her for them-\n\n\"Ms Hrelle, would you wake up, please? We need to talk.\"\n\nShe opened her eyes to the darkness, hearing the male voice, but not recognising it. She bolted upright, pulling the bedsheets up under her arms, seeing the silhouette sitting in the chair near her bed. \"Computer: Lights!\"\n\nThey obeyed, making her blink as she fixed on the elderly, pale-skinned human. He had receding snowy hair, a broad nose centred around a wrinkled, hangdog face, icy-blue eyes... and a Starfleet uniform with Admiral's insignia. He sat there casually, as if it was the most ordinary thing, speaking with an educated British accent. \"Good evening. Forgive the intrusion at this late hour, and the lack of prior introduction, but one in my position must always be discreet.\"\n\nSasha's heart raced, and she glanced around carefully. Where was Giles?\n\n\"If you're looking for Mr Arrington,\" he advised, \"He left some minutes ago, presumably not wanting to wake you. Have no fear, he remained unaware of my arrival.\"\n\n\"Oh. Well, Admiral, if you're here for a sleepover, I have to warn you, I haven't trimmed my toenails. Giles probably hobbled out of here on bloody feet.\"\n\nHe laughed softly. \"You have a sense of humour; I appreciate that. It indicates a proclivity to cope with the unexpected, a most useful ability in my line of work.\"\n\n\"Which is what, breaking into female cadets' quarters in the middle of the night?\"\n\n\"No, commanding Starfleet Intelligence... among other duties.\"\n\nShe started, tightening the bedsheets around her. \"You're... Admiral Trenagen.\"\n\n\"At your service. And the Federation's of course.\" He put on a smile that didn't reach his eyes. \"I wasn't aware that you had resumed your prior relationship with Master Arrington. Does his father know? For that matter, does your father?\"\n\nShe grunted, knowing Trenagen by reputation alone, and by the less-than-complimentary things her Dad had said about him. His presence, and his questions, were obviously meant to put her off-guard, to test her ability to, as he put it, 'cope with the unexpected'. \"Is my sex life of interest to Starfleet Intelligence, or just you?\"\n\n\"Neither. I am here to discuss you, not your romantic activities. You came to my attention following your participation in the Son'a Incident, and further research into your background and history has only impressed me more. You are a young woman of many gifts: strength, intelligence, adaptability, resourcefulness, leadership, and a fierce passion to protect others.\n\nBut just as important as your gifts, is your attitude. You have endured more in your few short years than most will ever face in a lifetime. You understand well how precarious life, and our way of life, is.\" He raised into view a PADD; she saw the scuff marks on it, and recognised it as her own. \"Your Valedictorian speech sums it up succinctly: 'The greatest threats you'll face will not come from the Dominion, the Klingons, or the Romulans, not from criminal or terrorist organisations or natural phenomena, but from your own reluctance to do whatever is necessary to protect us.'\" He set aside the PADD.\n\nSasha gave up, unwilling to indulge the man any longer. \"With respect, Sir, it's late, and I was told you were a man who preferred to get to the point.\"\n\nHe smiled politely. \"Indeed. Immediately following your graduation, you will be proceeding to Vulcan for an intensive three-month course in Advanced Command Training. It is certainly a prestigious start to your career in Starfleet, one undoubtedly and deservedly leading to a Captain's Chair. But you can do better, far better. With my help.\"\n\n\"Uh, thank you, Admiral, but I'm not really interested in a career in Starfleet Intelligence-\"\n\n\"And I'm not interested in offering you one. SI is vital, of course. But it has its limits. And there are other means of protecting the Federation. Organisations where gifted, committed individuals such as yourself recognise that ours is a Universe teeming with dangers. And, like you, they are prepared to do whatever is necessary to protect us-\"\n\n\"Are you talking about Section 31, Sir?\"\n\n\"You've heard of it? From your father?\"\n\n\"I... can neither confirm nor deny that.\" In fact, she had heard rumours from a number of sources, including her Dad. She assumed that it was just a modern legend, like interphasic gremlins and the Douwd,\n\nTrenagen chuckled. \"If such an organisation existed, your father might have been offered a position with it. He's very talented.\"\n\nShe stared at him. \"But he would have turned something like that down. It would have gone against his principles.\"\n\nTrenagen nodded sagely. \"Indeed. It is understandable... but it is also, if I may say, selfish. What good are principles if you're not around to indulge in them, because you allowed hostile forces to overwhelm everyone and everything around you? The Needs of the Many, after all...\"\n\nHe rose. \"I must ask you in the strongest possible terms to tell no one of my presence here, or of what we have discussed. Should you be willing to put the Federation's interests over your own, contact my offices and request a visit; I will know what it means.\"\n\nThen he vanished, without benefit of the usual transporter energy column.\n\n*\n\nJonas made smacking sounds with his mouth as he pulled himself slowly, lazily, from sleep, smiling as he felt Neraxis spooning up against his back, her arm draped around his waist, her hot breath against his neck, the snickering at the side of the bed-\n\nHe opened his eyes. Alazia, Ishiwas and some of the younger Nemm siblings were in the room, Alazia carefully lifting up the bedsheets on Jonas' side to peer underneath. He cleared his throat.\n\nThe ones in the back jumped and ran back into the next room, but Alazia continued to stare back, smiling... and still tried lifting up the bedsheets.\n\nNeraxis lifted up her head groggily over Jonas' shoulder and glowered. \"Lazy! What are you doing?\"\n\nAlazia looked back at her big sister now, asking, \"Is his wee-wee pink too?\"\n\nJonas turned to Neraxis pleadingly.\n\nShe sat up, the bedsheets falling from her as she pointed to the door. \"Go!\"\n\nAlazia dropped her hold on the bedsheets, but pointed back at Neraxis' chest as she scurried off, cackling, \"BOOBIES!\"\n\nJonas lay back again, staring up at the ceiling... and laughed.\n\nNeraxis leaned over him and smiled. \"Sorry. She was always bold. I don't know where she gets it from. I'll tell Mama-\"\n\nHe reached up, stroking the back of her head. \"I love her. I love them all. And your Mom. And you.\"\n\n\"Me, last?\" she teased.\n\n\"I saved the best for last.\" He drew her down for a kiss, their mouths grinding.\n\nA nearby knock parted them again, as Mrs Nemm peered around the corner and looked down at the couple in bed, smiling. \"Sorry, sweeties, but since you two are the stars today, I thought you might want to use the bathroom first.\" She grinned. \"You can even shower together.\"\n\nFrom the adjacent rooms, several siblings made an Ooooohhhh sound at that suggestion, punctuated with Alazia declaring, \"NAUGHTIES!\".\n\n*\n\nThe buzzer to her door drew Sasha out of a fitful sleep. She bolted upright, not quite sure where she was, the events of the night before rushing back to the forefront like puppies to the dinner bowl. The arguments, the Bellini, Giles- Trenagen! She wasn't sure that last had even happened -- until she saw her PADD sitting on the table, where he had placed it.\n\nHer room buzzer caught her attention again, and she grabbed a T-shirt and boxers, slipped into them and moved to the door, surprised to find- \"Grandma?\"\n\nMa'Sala was clad in her red and black uniform of the Caitian Planetary Navy, and smiled. \"Good morning, Grandcub. I know it's early, but I figured you'd need time to get ready and deal with those nerves.\" She entered, hugging the young woman as she went by. \"I can hear your father bouncing around in his quarters next to mine already this morning, reordering larger-size jackets from-\" She stopped, turned in place and sniffed the air.\n\nSasha tensed. \"Something wrong?\"\n\n\"There was a man in here last night.\" She looked to her. \"Something you want to tell me?\"\n\nShe swallowed, feeling her face burn. \"Uh- I can't- I'm not allowed-\"\n\n\"Don't be silly. I recognised Admiral Arrington's son's scent easily.\" She chuckled. \"Hopefully he helped with some of those nerves.\"\n\nSasha laughed, as much with relief as with embarrassment at the Caitian's typical candour. \"Uh, yeah, I guess.\"\n\nMa'Sala nodded, and drew closer again, hugging the girl once more. \"You know, if someone told me a few years ago that I would not only have a human grandcub, but one who could make me so proud... Life throws us such surprises from time to time.\"\n\n\"Tell me about it,\" Sasha agreed, relishing the warmth, the strength and the scent from the older female. The familial connection was strong, though she knew in some cases, that could hurt. \"Do you think Rrori's Matriarch and mother will forgive him?\"\n\n\"Eventually. Even one of the Mighty Twenty Landers to the Motherworld will succumb to the charms of that cub.\"\n\n\"I wish I could say something.\"\n\n\"You can if you want. You have the right.\" Ma'Sala drew back to look at her. \"You have been his Squad Leader for some years now. You can be seen as his Shrinna, his unofficial Older Sister. You can vouch for him. I'm sure he could use someone in his corner right now.\"\n\nSasha smiled, liking that idea. \"Thanks, I'll do that this morning.\"\n\nMa'Sala smiled back. \"At this time, Matriarchs offer cubs about to reach a life milestone like this some advice. And here's mine: whatever you do with your life, stand in the light. Not the shadows. Make sure it's something you can be proud and open about.\"\n\nSasha nodded at that, not quite sure what to make of it, but appreciating it.\n\nThen the Fleet Captain nodded to the bathroom. \"Get showered, while I prepare your uniform.\"\n\nSasha smiled and nodded again, turning and departing.\n\nAnd never seeing the smile drop from Ma'Sala's face, as she sniffed the air again, her claws extending reflexively with recognition, and a growl smouldering in her throat.\n\n*\n\nThe Academy Grounds were crowded, with hundreds of cadets, Academy personnel and civilians milling about in groups large and small, squinting in the bright morning light as reunions were made, images and videos were taken, and people were thanked.\n\nOr in the case of Misha and Alazia, who were rushing around the many groups, chasing each other or some of the older children, scolded. Jonas and Neraxis stood together, sometimes accompanied by Neraxis' mother or some of the older siblings, for the images -- but Jonas turned his head and barked, \"Alazia! Leave those people alone! They don't want you in their pictures!\"\n\nThe little girl stopped running, nodded solemnly and replied, \"Yes, Jonas!\" Then she raced off in another direction after Misha.\n\nBeside him, Neraxis nudged him. \"Wow, you got her listening to you!\"\n\nHe shrugged, smiling. \"I'm novel. She'll get used to me soon and stop paying attention like she does the rest of you.\"\n\n\"Any room for me in there?\" a new female voice asked from behind.\n\nJonas started, turning around, his eyes wide and his jaw dropping. \"Mom?\"\n\nA tall, sturdy woman with hair as silver as Jonas', a pixie nose and a square jaw flanked with softer cheeks, strode up confidently alongside T'Varik, but then raced up the last few metres and swept her son up into her arms. \"Oh, Jonas! I'm so glad I could get here in time!\"\n\nHe was overwhelmed with shock, laughing almost hysterically. \"Y-You're here! I- I can't believe it- H-How-\" Then he looked over at T'Varik. \"Commander?\"\n\nThe Vulcan folded her hands behind her back. \"After you informed me of the problems with your mother's vessel, I made some calls to the Transport Authority. Forgive my lack of communication on the matter, but I could not guarantee success, and did not wish to raise false hopes within you.\"\n\nTears ran down his face unabated as he kept hugging his mother... but silently mouthing to T'Varik: Thank you!\n\nT'Varik nodded politely, turned and departed.\n\n*\n\nIn another part of the field, Rrori breathed in, subdued in the presence of his Matriarch and mother, who took a few images of him, and spoke politely if briefly with those associates of his who approached.\n\nThen Sasha arrived, like Rrori and the others in dress uniform, and addressed the females. \"Good morning. May I speak with you in Meow's defence?\"\n\nThe Matriarch looked to her daughter, and in Old Caitian muttered, \"Send the Tailless Ape away.\"\n\n\"The Tailless Ape speaks the language,\" Sasha informed her, relishing the reaction on the older female, before continuing in Standard. \"The Tailless Ape is also a Caitian citizen, in the Clan Registry, was awarded the Order of R'Masi last year... and also holds a Sixth Tier in K'Gressir, by the way, should you wish to continue to insult the Grandcub of Ma'Sala Shall. May I now speak in his defence?\"\n\nMriri regarded the human, before nodding, \"Proceed.\"\n\nSasha breathed in and announced, \"Madame... Meow Rrori is the most vain, arrogant, self-centred, egotistical male I have ever encountered in my life.\"",
        "Rrori blinked. \"This is your defence of me?\"\n\nSasha ignored him. \"When he is not fixed to the nearest mirror admiring himself, he is strutting about the ship inviting others to admire him. And that's not even taking into account his libido. He will hump anything with a pulse... and a few things without one, and I stopped counting the nights he has awakened the rest of Alpha Squad with making his bed shake from constantly stroking off.\"\n\n\"Seriously,\" Rrori assured her, \"You don't have to do this.\"\n\n\"But I learned that there's more to him than that,\" Sasha continued, smiling. \"I learned how brave he was. How talented. How caring. He loves his clan, and after the business with the Rising Star, he was ashamed, not just because of his actions, but because of how let down you would have been with him.\"\n\n\"He was right,\" his mother agreed.\n\nSasha nodded. \"The first night he arrived onboard the Surefoot, I told him that he was brilliant -- but reminded him that he was now among others who were also brilliant. He had to adjust. It wasn't easy for him, I know. Especially with all the pressure his clan were putting on him to be the Best of the Best.\"\n\nMriri harrumphed. \"You are blaming us now for his concealment?\"\n\n\"No, Madame, with respect, I am reminding you of the Great Mother's own words: 'Our love for our cubs can be perfect. Our cubs cannot'. And I am informing you that I am Caitian and respect your -- our people's -- beliefs and strengths. I have acted as his Shrinna, his Older Sister, in your absence. I claim this responsibility.\" She strode up to Rrori now, clasping him by the shoulders. \"You are my brother now. I am proud of you, and I will always be proud to serve with you in the future.\"\n\nRrori swelled, and swallowed as she hugged him.\n\nThen she pulled back and smacked him on the snout.\n\nHe cursed. \"What was that for?\"\n\nShe pointed a finger at him. \"That was for embarrassing your clan in public! Do it again and they'll have to clone you a new pair of balls! Understood?\"\n\n\"Yes, Ma'am!\" he exclaimed.\n\nThe Matriarch looked to her daughter and remarked, \"I'm beginning to like her.\"\n\n*\n\nElsewhere, Eydiir stood back and observed as Kit laughed with Hafsa and her parents, before noticing his squadmate, making his excuses and approaching the Capellan. \"Best Friend Eydiir, it is very good to see you! Truly!\" He hugged her.\n\nShe hugged him back. \"Forgive my interruption-\"\n\n\"No!\" He glanced back at his girlfriend and her family, and confessed in a low voice, \"I am exhausted! Exhausted from all the jokes! They tell jokes all the time!\"\n\nShe grunted dryly. \"So there is a limit to your hunger for puns. The others will be pleased to hear of this; they assumed your capacity was inexhaustible.\"\n\n*\n\nGiles caught a glimpse of Hrelle as the Captain moved along a row of parents of cadets, and smiled for his attention. The Caitian strode up, holding out a hand. \"Good morning, Ensign Arrington.\"\n\nGiles accepted it. \"Good morning to you too, Sir. I'm glad I saw you before the ceremony. There's so much I want to thank you for.\"\n\nHe smiled back. \"Me? What did I do?\"\n\nGiles straightened up. \"From the first day we met, and you made me sit on the Naughty Step for insulting you rather than face expulsion, you were out to help me. To make me a better man. You did.\"\n\nHrelle shrugged. \"You made yourself what you are now. And I'm glad you patched things up with your father. Have you changed your mind about that border ship posting?\"\n\nThe young man hesitated. \"I'm... not sure. Dad has a position on offer at Starfleet HQ, working with a team looking at improving border ship and crew capabilities.\"\n\nHrelle nodded. \"Sounds good; you've been out there, worked with them, spoken with the crews. You know what they need, what works and doesn't work, better than most of the higher ranks stationed here. You'll be very valuable.\"\n\n\"Yes. But... But won't it look like I'm just giving in to my family's wishes?\"\n\nNow Hrelle smiled. \"Whether you go to the border, or help those on the border here, you're doing it because it's the right thing and you want to do it, and it doesn't matter what other people think.\" He glanced around. \"After all, you didn't care what I thought when you defiled my daughter on that shuttle run all those years ago, did you?\" He sniffed. \"Or last night, for that matter?\"\n\nGiles paused, gauging how serious the Caitian was being. After all this time, he still wasn't entirely sure.\n\n*\n\nThe ceremony soon commenced, with the cadets in the front rows and the guests in the outlying sections, all rising for the Federation anthem, before the Superintendent stepped forward on the raised podium, looking out at the crowd, her voice carrying from the tiny microphone pinned to her uniform. \"I had a pretty good speech written in advance. I was quite proud of it, actually; it would have knocked your socks off. But I overheard something last night that made me rethink all that.\n\nSo I put my speech aside to knock the socks off of the Class of 2373. And instead, I'm going to ask you, the Class of 2372, to ask yourselves something: why are you in Starfleet?\"\n\nAs a murmur ran through the crowd, in the front row, Sasha glanced at Giles, her fellow Squad Leaders and cadets, and then at her Dad and the other officers standing at attention to the side, who looked equally bemused.\n\n\"It is a question I hope you have genuinely asked yourselves,\" Goldstein continued. \"I know it would have been asked of you many times, before you were even accepted. And I know that you would have given the appropriate answers, otherwise you wouldn't have made it as far as you have. But that doesn't mean the answers were honest, or that they haven't changed with time.\n\nThe answers you can give will be as numerous as the worlds you will have come from. You wish to do service for the Federation that has given you so much. You wish to be all that you can be. You wish to expand the boundaries of science, of medicine and exploration. You wish to follow in the footsteps of family, or others who have inspired you. You wish to defend our way of life.\n\nThere are other reasons, of course. You may wish for fame, for glory and acclaim. You may wish to get medals. You may wish to get your names in the media, to be heroes. You may even wish to become a legend, like so many others who have been here, and be honoured so.\" She indicated the surrounding buildings. \"This was the first of the Starfleet Academies, and considered the most prestigious. Just about every building, every garden, every field and walkway is named after a renowned graduate here: Archer, Suku, Grelev, Kirk, Nguyen, Pike, Sortek, Nielsen, Sylhaon... you may wish for something like that to be awarded to you, too.\n\nThese wishes are understandable. But if they are the only things that drive you to put on that uniform every day and go out there... do yourself a favour and reconsider. Those aforementioned names, those so-called heroes, had one thing in common: they didn't do what they did for fame, for glory or for acclaim. They certainly didn't do it for the medals, or the honour of having a building or a fountain at the Academy named after them -- most would have cringed with embarrassment at the very thought of something like that -- but instead, they did what they did because it was their job.\n\nThe plain fact is that most of you will go on to perform duties that will never get medals or commendations or even acknowledgements. That does not mean they are not vital. That does not mean you are not vital. You are. Each and every one of you.\"\n\nAs she spoke these last words, a varied group of people in civilian clothes, of many different races and sizes and ages, were escorted towards the podium, as Goldstein continued. \"If my words today have meant you need new reasons for putting on those uniforms every day, I would like you to listen to a few people I managed to gather at short notice to come here today. Just some of the innumerable people that are out there now. Real, ordinary people whose lives have been touched by Starfleet, and who now wish to offer their thanks, to them. And to you.\"\n\nGoldstein stepped aside, adjusting a microphone on a stand to accommodate the first civilian, a thin, elderly human male, who looked out at the crowd. \"My name is Vihan Giragosian, of Earth. 61 years ago, I was a child with my family on a transport ship, the Mountbatten, journeying to start a new life on Tomed when the Romulans began their offensive. We thought we were doomed. Then Starfleet arrived and saved me, saved my family. We lived. On behalf of myself, my family, and all those who have been born and lived since then: thank you.\"\n\nA middle-aged Trill female was next. \"My name is Yidzul Ruun. When I was a child, I was stricken with Benzite Cytofibrosis. It was a slow, lingering, painful disease. My parents did their best to hide the truth from me, but I knew I would never see adulthood.\" She smiled. \"But then a Starfleet doctor on a planetary survey ship made a connection between another disease and mine, and suggested a treatment for both. A treatment that was successful. On behalf of my husband, my children, the life that I have had since because of the actions of that member of Starfleet: thank you.\"\n\nAnd others followed.\n\n\"My name is Wandalan Lawes. I live on Meradas III. An ancient robot from a dead civilisation had somehow activated, and threatened to destroy my planet. The crew of the USS Ignis gave their lives to stop that machine. On behalf of myself, my family, and everyone on my planet: thank you.\"\n\n\"My name is Professor Togtun Ezah. I am a stellar physicist who has spent most of my life looking for a way to extend the lifespans of stars that nurture inhabited worlds. I was stuck for the longest time... until Starfleet assisted me, provided ships and equipment and expertise. Their tireless efforts helped move me that much closer to finding what I seek. I could not have done it without them. On behalf of myself, and all those who will one day benefit from this work: thank you.\"\n\n\"My name is Barinot Chan-\"\n\n\"-when our colony was attacked-\"\n\n\"The team found the survivors and ferried them from the disaster zone-\"\n\n\"The infection had gripped our world-\"\n\n\"A Starfleet vessel swooped in-\"\n\n\"-on behalf of our city: thank you.\"\n\n\"Thank you!\"\n\n\"Thank you.\"\n\nThe last speaker was the shortest: a hairless, grey-scaled humanoid in a hooded top that seemed worn to protect from the mid-morning sunlight. It seemed frail, or perhaps just nervous, as Goldstein adjusted the microphone stand to accommodate their height. It spoke with a voice that Universal translator extricated as typically female. \"My name is Malala Ufa-Zoysia. I am Malurian. I am fourteen. Two years ago, I lived on an asteroid with my people, isolated from the rest of the Galaxy. Then people came, and took us... all the children... away with them.\"\n\nSasha gasped, her jaw dropping as she glanced at Giles and the rest of Alpha Squad, seeing in their expressions their own recognition: the Malurian children they found on the freighter Beholder two years ago...\n\n\"They locked us away in a container,\" Malala continued, though it was obvious that the memory of that time was still painful to her. \"Where we were kept cold and hungry and sick. They told us that we would work in mines for them, that we would never see our families again. We believed them.\n\nBut then members of Starfleet -- cadets who are standing among you right now -- discovered us, and risked their lives to save us.\" She nodded, milky-white tears running down her sallow face. \"And they did save us. And they got us back to our families, just as they promised. And more; they reunited our people with more like us, found us a new world to call our own. To be safe, and free, and happy. Like all people should be.\n\nI thank those who saved us. And I thank all of the rest of you, for risking your lives to join Starfleet, and whom I know would be willing to do the same for us, and for others who need help. Someday I hope to be among you, to pay forward all the good that has been done, for me. For all of us.\"\n\nSasha couldn't stop wiping the tears from her own face, as she watched Goldstein approach the Malurian girl, hugging her before sending her to join her guardians. The Superintendent looked teary-eyed herself, as the sky above darkened. \"Well, that's a tough act to follow... but we do have to try. The rest of the ceremony today will...\"\n\nHer words trailed away as she looked up at the quickly-darkening sky.\n\nAt the sidelines, Misha was standing beside his mother, clad in a miniature replica of a Starfleet cadet's uniform, not having stopped talking about it since his encounter with Boothby. But now he held up his hands, watching the hairs stand on end. \"Mama, look!\" Then he sniffed. \"Air smells furry!\"\n\nHrelle and Kami felt the same, glancing at each other before he walked up onto the dais, watching Goldstein turn her back to the audience to tap her combadge. \"Ops! Come in! What the hell's going on? I booked this for a sunny day months ago! Ops! Security!\" She looked to Hrelle. \"What's happened to our comm systems?\"\n\nHrelle was watching as a sky that had been clear just moments before was now thickly packed with angry clouds that fought and swirled, the latter in a way that took him back to his days as a cub, on his father's fishing boat watching as waterspouts dipped down onto the waters, like the tongues of demons. Now he tried his own combadge, knowing it wasn't on the same network as the Academy staff. \"Hrelle to Surefoot. Are you reading us?\"\n\nNeheru's voice picked up over the rising wind. \"Yes, Captain! We're detecting a Category 1 storm- no, wait, now it's Category 2! Starfleet Security is reporting Earth's Weather Modification Net has been compromised, as have the power and communications grids in the San Francisco Bay Area!\"\n\nHrelle and Goldstein exchanged glances, before Hrelle asked, \"Can you start beaming people to a safe area?\"\n\n\"Negative, Sir! The storm contains unprecedented amounts of ionic interference that would make transport unsafe!\"\n\nHrelle grunted; so much for it being an innocent malfunction. \"And there's no other reports elsewhere on Earth? No attacks?\"\n\n\"No, Sir!\"\n\n\"Contact Starfleet Security, offer any assistance if required, but otherwise stay in geosynchronous orbit, and if our cadets and crew have communications, we'll need you switchboarding it. Hrelle out.\" He looked at Goldstein again. \"Sabotage, like the Antwerp bombing and the Jiaozhou Bay Bridge collapse. We have to get everyone indoors! The Main Hall is large and secure enough!\"\n\nThe Superintendent nodded, stepping forward to face the audience again. \"Everyone-\" She stopped as she realised the microphone had lost power too, and shouted now, \"Everyone, move to the Hall! Stay calm!\"\n\nHrelle stepped forward, signalling to Sasha. \"Our own combadges still work! Coordinate efforts to get everyone inside!\"\n\nIn the front row, Sasha signalled her acknowledgement and turned to her fellow squad leaders. \"Giles, Falok, herd the left section inside, watch for stragglers! Naavos, Izzy, the right section! Alpha Squad, you're with me! We've got the VIPs on the dais!\" As the wind whipped her hair, she added, \"Watch out for flying debris!\"\n\nOn the dais, Hrelle watched Sasha's squad lead most of the VIPs away, while he was guiding Goldstein, motioning for Arrington to do the same with Trenagen. Arrington called over to him, \"We need to get to Campus Ops-\"\n\nHrelle's eardrums protested at the pressure changes- and then he cursed inside as he looked up and saw the vortices forming in the clouds. \"Not out here, Bill! Come on!\"\n\nThey made their way with the others, Hrelle stopping at the door into the Hall and letting Goldstein make the rest of the way inside herself as he turned back to face the field. The air was in a frenzy now, with chairs tumbling and even whipping up into the air to shatter against the sides of buildings, and trees that had stood on these grounds for centuries without complaint now shuddered as their leaves were stripped from their branches-\n\nA noise caught his attention, and he turned to see two of his cadets, Zajan and Beaumont, trying to escort a civilian to the Hall, staying close to the wall- it was Mi'Tree! They were struggling, with the Caitian's bulk, and with an obvious injury to the male's ankle, and Hrelle raced ahead to help, recognising the cadets close up, signalling the smaller of the two, the Suliban Zajan, to get inside, while he took his place, slipping an arm around his kin-father, stopping only when a chair struck the wall in front of them.\n\nFinally they entered the Hall's anteroom, as other cadets slid the door shut with the manual overrides. It was dark here, the air thick and hot, and Hrelle looked to see Sasha draw up, smiling. \"You found Grandpa!\" She reached out to him, patting him on the shoulder. \"Grandma's been worried sick about you, you old cat-\"\n\nMi'Tree turned and bared his teeth at her, growling.\n\nSasha drew back in shock, as Hrelle tensed, instinctively stepping between his daughter and kin-father. \"Mother's Cubs, Mi'Tree, what do you think you're doing-\"\n\nThe older Caitian glared at each of them in turn. \"Leave me alone! Why can't you all just bloody well leave me ALONE?\"\n\nThen as he hobbled away into the main room, Sasha looking to Hrelle, confused. \"Dad? What's wrong? What did I say?\"\n\nHe patted her shoulder. \"Nothing, hon. His pride was hurt along with his ankle.\" He returned to the business at hand. \"Someone's sabotaged the weather, power and communications in the area, but fortunately it seems confined to us.\" He nodded towards the hall. \"The civilians will be in shock, scared, wanting answers-\"\n\nShe nodded back. \"Jonas had an idea about restoring power to the building, he's working on it now. We're also getting food and blankets, and a few other things. May I continue, Sir?\"\n\n\"Carry on.\"\n\nShe looked to Zajan and Beaumont, still at the door. \"Keep an eye out, if you see anyone in trouble out there-\"\n\nHe nodded. \"We'll go out for them.\"\n\n\"You will NOT! You will call me first, and I'll go out! Understood?\"\n\n\"Yes, Ma'am!\"\n\nThen she was off.\n\nDespite the ongoing calamity and the nasty business with Mi'Tree, Hrelle couldn't stop his tail wagging with pride as he entered the main hall. It was packed, most of the people wisely staying away from the flanking high, narrow windows, though some ventured closer to view the storm outside. Confused, anxious voices were raised, and the air was thick with the same emotion.\n\nHe found Kami, Misha and Ma'Sala together, the Matriarch going up to him and asking, \"Have you seen Mi'Tree?\"\n\nHe nodded. \"He twisted his ankle, we brought him in. Then he bared his teeth at Sasha.\"\n\nHe face went taut. \"He did what?\"\n\n\"She made a little joke about him being old, he took it badly.\"\n\nShe took it in, nodding. \"I'll speak with him. Any word on what's happening?\"\n\n\"A localised incident; if it's like the others that have happened on Earth, Vulcan and the other central worlds, it'll be from Dominion saboteurs. I have to report in.\"\n\nShe nodded again, her hand patting his shoulder as he approached his wife and cub, Misha sitting in his mother's arms, staring out at the lightning with wide-eyed wonder. \"Papa! Fizzers!\"\n\n\"No, Warrior Prince, not phasers.\" He rubbed the toddler's muzzle, before doing the same with Kami. \"You two okay?\"\n\n\"Yes. Now get going, they need you. They're senior officers and fellow starship captains, but like these civilians none of them will have your practical experience with disaster.\"\n\n\"Sounds like you're needed, too.\"\n\n\"Yes.\" She looked to Misha. \"Let's go find the other cubs, eh? They might be scared and need our help.\"",
        "\"Eye Eye, Mama!\"\n\nHrelle found Goldstein, Arrington and the other senior officers together. \"It's another attack, but fortunately appears to be the only one.\"\n\n\"This would be in keeping with the prior reported attacks,\" T'Varik noted. \"Control should be restored shortly.\"\n\nLt C'Rash stepped up. \"Excuse me, Ma'am, but there are emergency tunnels running under the campus grounds, leading to all the major buildings; they were built after the Xindi Incident, kept sealed up but I understand they're still usable.\"\n\n\"We can lead the civilians away,\" Bill Arrington suggested.\n\nHrelle shook his head. \"To where? Public transport's shut down out there. This is the largest, safest, most secure facility for them for now.\"\n\n\"Agreed,\" Goldstein looked to Trenagen and Arrington. \"You could use them, though, to get to Campus Ops, see if you can coordinate efforts there.\" To C'Rash she asked, \"Can you guide them?\"\n\n\"Yes, Ma'am.\"\n\n\"You're not coming with us?\" Arrington asked.\n\n\"My place is here, with the cadets and their families.\" Suddenly the lights above came to life. \"We're back online!\" She tapped her combadge. \"Ops! Security! Come in!\"\n\nHrelle glanced outside, seeing the nearby buildings still cloaked in darkness. \"No, it's just us. Sasha said her people were working on getting us power-\"\n\nAs if on cue, Sasha strode up, stood to attention and faced Goldstein, the ranking officer. \"Ma'am, Ensign Sasha Hrelle reporting: Our CMO Doctor Masterson is leading the Medical and Science cadets in checking everyone for injuries; they've reported only minor scrapes, and shock. And as you can see, we've restored lighting and environmental controls to the Hall.\"\n\nGoldstein fixed on her. \"And how did you manage that?\"\n\n\"The Utilities Building is next door, Ma'am; we used the tunnels to gain access, and we hooked up the fusion batteries from the lawn mowers stored there.\"\n\n\"You managed this without tools?\" T'Varik asked.\n\n\"We didn't need tools, Commander. We have a Jonas.\"\n\nThe Vulcan nodded in understanding.\n\nSasha looked back at Goldstein. \"Ma'am, we've also taken the liberty of commandeering the blankets and towels there waiting to be recycled, and the food that was being stored there for the buffet later. And since the toilet facilities here aren't equipped to manage this many people, we're guiding the more able-bodied down there to use those in the Utilities.\"\n\n\"The tunnels are extensive down there, Ensign,\" C'Rash pointed out. \"If the civilians start wandering-\"\n\n\"No one's wandering down there, Lieutenant; I have the Security cadets posted to keep them in line.\" She looked at Goldstein. \"Ma'am, with your permission we're prepared to recalibrate your combadges to operate with the Surefoot systems, to relay messages to and from wherever required. The campus facilities are still off-power, but we have cadets on standby ready to use the tunnels to go wherever you want to deliver more of our own combadges there-\"\n\nGoldstein held up a hand. \"Thank you, Ensign, but Lt C'Rash will be escorting Admirals Arrington and Trenagen to Ops via the tunnels now, and she can act as our communications link there with her own badge. But it was a good idea, Ensign. Keep them coming.\"\n\n\"Thank you, Ma'am. May I return to work now?\"\n\nGoldstein nodded, indulging in a smile as the young woman turned and departed.\n\nHrelle just indulged in a broad proud grin.\n\n\"What a capable young woman,\" Trenagen noted, as he followed C'Rash and Arrington away.\n\nHrelle gave him a look, feelings his hackles rise.\n\n*\n\nMa'Sala found Mi'Tree sitting alone in a far corner of the Hall. She strode up to him, keeping her voice low as she glared at him. \"If any other male bared their teeth to our grandcub, I'd knock those teeth down his throat. Give me a good reason not to do the same to you.\"\n\nHe never looked up, his voice leaden. \"I have none. I have no excuse for what I did. I am a contemptible wretch.\"\n\nShe folded her arms across her chest. \"You're certainly a self-pitying one; I suppose I should have realised a rutting wouldn't have fully shaken the maudlin funk from your bones. You should have been one of the first ones in here. Why were you one of the last?\"\n\nHe breathed out. \"I wanted to help. I wanted to be useful. Like I was on the Surefoot, when those hideous Vlathi attacked us.\" He nodded to himself. \"I was useful then, wasn't I?\"\n\n\"More than useful; you were vital. You fought very well, especially for someone whose only prior combat experience involved pushy media journalists and drunken prettytails. But that was a different situation: most of our kin-son's crew were trapped, and there was no choice. What you did today wasn't out of necessity, but an attempt to bolster your pride.\"\n\n\"I know.\" Tears streamed down the sides of his muzzle. \"Sasha and Esek will never forgive me.\"\n\n\"Of course they will, ass.\" Ma'Sala lowered her arms and relaxed her stance. \"As will I.\" She held out a hand. \"Come with me.\"\n\nHe looked up, wiping his snout. \"Why? Do you intend to kill me in private?\"\n\n\"Not today. Do you still want to help? Do you still want to be useful? Come with me, and let me show you how.\"\n\nSlowly he rose, took her hand and limped beside her, as she guided him through the crowds to another corner of the Hall, where most of the younger children of the guests, including the Nemm family, sat in a circle facing Kami. Misha sat on her lap, as she pointed to the parts of his face. \"And a Caitian's nose is very, very sensitive; a cub Misha's age could find his mother and father even across several kilometres. The sense of smell is very important to our people; we hug so that we can take in each other's scent...\"\n\n\"What can I do here?\" Mi'Tree muttered.\n\n\"You can take over and entertain the cubs while our daughter Counsels their parents.\"\n\nHe ground his teeth. \"This again? I'm not going to be the bloody Taleteller, not here or on the Motherworld. I'm an action star.\"\n\nShe shook her head. \"You were an action star. And no one will ever take that away from you. This is a new role, with new responsibilities, and a new audience who need distraction and reassurance. You have undeniable charisma, and your voice is soothing and expressive. Kami used to love the bedtime stories, much more than when I told them.\"\n\nHe grunted.\n\n\"Do not dismiss the power and responsibility given here, Mi'Tree. Taletellers have influenced more lives than politicians or warriors. They don't just tell stories, they give advice and counsel, they comfort and reassure. They are a certainty in an uncertain life.\"\n\nHe grunted again.\n\n\"Of course, I don't blame you,\" she admitted. \"Who'd want the Taleteller gig anyway? There's half a billion cubs on the Motherworld and our colonies who watch it regularly, cubs too young to see your Clawback vivids. You'd be constantly hounded wherever you go, fans messaging you, asking for autographs, interviews, clips of your fur... all that attention-\"\n\nHe shook off her hand. \"Get out of my way, woman.\" He smiled broadly as he stepped forward. \"Hello, cubs! And how are you all doing today?\"\n\n*\n\n\"Yes, Ensign,\" Neheru was reported. \"Power and communications are still out, but they've re-established control over the Weathernet, though it'll take a little more time to restore a normal weather pattern in your area.\"\n\n\"Thanks, Lieutenant! Hrelle out!\" Sasha turned to the other squad leaders. \"We'll need to get ready to head out and search the campus for injured, people who didn't make it inside in time when the storm struck. As our combadge network is still functioning, we should team up with the other squads-\"\n\n\"Excuse me.\"\n\nThey turned. Squad Leader Carradine stood there with several of his fellows, sneering as he asked, \"And just who the hell put you in charge anyway?\"\n\n\"Captain Hrelle did,\" Falok informed him.\n\n\"Oh of course, Captain Daddy! We should have guessed!\"\n\n\"Carradine, this isn't about who's in charge,\" Sasha reminded him sharply. \"There could be people trapped, hurt out there! Campus Operations will be stretched thin already, they're gonna need our help. We're not out to step on anyone's toes, but our squads have had more practical experience with emergencies-\"\n\n\"Well, lucky you! We're not taking orders from another Ensign!\"\n\n\"A good point,\" Goldstein pointed out.\n\nThe cadets snapped to attention as the Superintendent stepped forward, ignoring Carradine to focus on Sasha, her expression serious. \"Ensign Hrelle, I was seeking you out to see if you could organise the cadets into search and rescue parties, but you appear to have anticipated that need already... again.\" She made a concessionary glance at Carradine. \"But a good point was raised. You are exceeding your duties as an Ensign.\"\n\n\"Yes, Ma'am,\" Sasha admitted, reddening. \"My apologies-\"\n\n\"Don't apologise; you were sent to do a job without the proper tools.\" She reached up to her own collar, removing to of the pips on her Admiral insignia, before pinning them on either side of Sasha's own ensign insignia, raising her voice so everyone around could hear. \"Effectively immediately I am awarding you a field promotion to the rank of Lieutenant Junior Grade.\"\n\nAs the other cadets reacted to this, Sasha just let her mouth open, offering, \"Uh- are you- are you sure about this, Ma'am?\"\n\nGoldstein smiled. \"These aren't the proper pips; they should be hollow, not solid ones, but they'll do until you get to a fabricator. But I'll want these back, I've had them for years, Lieutenant.\"\n\n\"Uh- yes, Ma'am, I will, promise.\"\n\n\"Good.\" She stepped back and offered her hand.\n\nSasha quickly took it, as cadets whooped, cheered and applauded her, before it quickly died down, and she added, \"Thank you, Ma'am.\"\n\nGoldstein grunted. \"Don't thank me. I've given you more than pips today. I've given you responsibility, reports, burdens, sleepless nights... and it'll get worse the higher you go.\"\n\nShe stepped back and looked around her. \"These aren't gold stars or congratulatory stickers from your teacher for colouring within the lines. These are duties. And if people receive them, it's because they've earned them, by shedding blood, sweat and tears. Don't look on colleagues who have been in battle, have laboured through crises, as 'lucky'. The only luck they're feeling themselves is that they made it through in one piece.\"\n\nShe looked at Sasha once more. \"I want a report on your plans for a search and rescue pattern in five minutes, Lieutenant.\"\n\nSasha barely suppressed her smile. \"Yes, Ma'am!\"\n\nGoldstein started away -- but then stopped in front of Carradine. \"Mr Carradine, I have a special task for you. Something that will require a particular amount of courage on your part. Do you think you can handle it?\"\n\nCarradine straightened up and beamed. \"Yes, Ma'am!\"\n\n\"Good. I want you to find Captain Hrelle, and inform him that you have been running around here like a putz referring to him as 'Captain Daddy', because you believed his daughter and her colleagues didn't earn the recognition they have received. Then you'll apologise to him.\" She leaned in. \"It's important that you use the word 'putz'. He'll know what it means.\"\n\nCarradine blanched, eyes wide. \"Y-Yes, Ma'am.\"\n\nAs the Superintendent departed, Giles, Eydiir, Neraxis and others drew in closer to Sasha, shaking her hand or slapping her on the back, while the young woman still appeared dazed, looking to Giles. \"I'm not dreaming, am I? That did happen, didn't it?\"\n\nGiles laughed, hugging her. \"I think you'll need a drink after this.\"\n\nShe nodded. \"A whole round of them.\"\n\nBeside them, Neraxis turned and shouted, \"Hey, everyone, the first round at the Schooner's on the new Lieutenant!\"\n\nAs the announcement provoked cheers, Sasha turned to her friend and told her where she could stick her bald blue Bolian head.\n\n*\n\nSitting outside the circle of children, Kami adjusted the napping Misha in her arms, her smile broad as she watched her father in the centre, spinning an improvised tale, his voice and hands sculpting the picture he described as if born to it.\n\n\"And there were three of the hideous huge Vlathi slithering along the Surefoot Shuttlebay,\" he continued, his arms snaking in illustration, making hissing and snapping sounds that made some of the younger rapt members of his audience start. \"Drawing closer, ever closer, to the sleeping figure of Princess Kami.\"\n\n\"What are they gonna do to her?\" Alazia whispered, wide-eyed.\n\nMi'Tree leaned in closer, his voice low. \"If they're not stopped... they'll gobble her up!\"\n\n\"No,\" the little girl denied in a murmur.\n\n\"Yes,\" he intoned dramatically, looking around at the others. \"At least, that's what the vile creatures think they'll do! But they haven't reckoned on the captain of the Surefoot. The bravest, strongest, most fearsome Captain in all of Starfleet, a captain who puts fear into the hearts of all dastardly villainous throughout the Galaxy: Captain Misha!\"\n\nAs Kami stifled a laugh, Mi'Tree drew back, drawing his hands out like he was casting spells. \"He swung out and leapt between the Vlathi and Princess Kami, stared at the three monstrous fiends, bared his claws and teeth and declared, 'No! You will not have this woman! Not now, not ever! I swear it!' And he drew back, and he let loose deep from within the mightiest roar that had ever been heard! RRROOOOAAAARRRR!\" He looked around, grinning. \"Come on, roar with me!\"\n\nThe children made their own roars. Mi'Tree cheered with delight at their efforts, then looked past them to his daughter, pointing at her. \"You too, Missy! You're not too old to roar!\"\n\nKami grinned and gave him a roar. In her arms, Misha roared in his sleep, turning her own roar into a laugh.\n\n*\n\n\"USS Surefoot-A, Captain's Log, Stardate 49570.44, Captain Esek Hrelle recording: Starfleet Security has regained control of Earth's Weather Modification Grid and restored a clear blue sky over San Francisco, and power and communications have been restored. There has been considerable damage to both the Academy grounds and the Bay Area, but fortunately no serious injuries reported.\n\nIt is the decision of the Superintendent that once the debris has been cleared away from the field, the graduation ceremony will recommence, not just because many of the attendants are on tight travel schedules back to other worlds, but because we must show those responsible for today's terrorist act that they will not shake our resolve, that life goes on regardless.\n\nOn a purely and shamelessly personal note, I must offer my congratulations to my daughter for her promotion; at this rate, I suspect she'll make Admiral before I do. And probably be more deserving.\n\nI'm gonna get so verklempt when I see her up there giving her Valedictorian speech...\"\n\n*\n\nSasha walked up to the podium, her heart racing as she looked out at the hundreds of people gathered there, looking up at her, waiting for her words of wisdom. Assuming she had any. She felt ready to pee herself in front of them all, which she supposed would make for an interesting variation on the usual speeches.\n\nIn the sidelines near the front, Misha stood between his parents, taking advantage of the moment's silence to wave and call out, \"HI SASHA!\"\n\nThe triggered laughter from everyone around him, including his sister, as she smiled and waved back, before facing her audience once more and proceeding. \"I had a speech prepared, mostly; I wasn't sure about the ending. I looked for appropriately stirring or inspirational quotes from Shakespeare or Yeats or Tarbolde. After about eighteen hours of deliberation I was at the point where I thought I'd end up doing a tap dance or a puppet show or something.\"\n\nThe audience laughed, warming her up. \"I suppose the main thing I want to say is that... I don't know how deserving I am of this honour. But I know how grateful I am. Grateful to all those who have helped get me to where I am today: our Academy Superintendent Admiral Goldstein, Commander T'Varik, Counselor Hrelle, Lieutenants C'Rash and Neheru, and all the officers and crew of the USS Surefoot -- the best ship in the fleet by the way, in case you were wondering.\"\n\nAs her friends cheered that, she grinned. \"And most especially my father.\" She looked at him, grinning as she saw him repeatedly wipe the tears from his muzzle. \"He has given me unwavering love, support, encouragement and inspiration... and has always graciously kept me from putting on too much weight by helping himself to all the food on my plate.\"\n\nThat triggered more laughter, and a Thumbs Up from him.\n\nSasha looked out again, more soberly now. \"And I suppose I should offer some advice, though I question the sanity of anyone looking to me for wisdom. Today's events might have brought home to some of you for the first time how easily our way of life can be disrupted by outside agencies. This, sadly, was not my first time. I have learned long ago that Sometimes the Universe Has Other Plans. I have lost. I have been hurt-\"\n\nShe stopped as she caught a glimpse of Trenagen in the audience, watching and listening.\n\n\"I know what threats are out there,\" she continued, staring back at him. \"But the greatest threats you'll face will not come from the Dominion, the Klingons, or the Romulans, not from criminal or terrorist organisations or natural disasters... but from the temptation to forget our principles. We can so easily be deceived into letting fear drive us into desperation, into justifying compromising our principles to do what we think is necessary to protect ourselves.\n\nBut I say No. I will not compromise who I am. It's too precious. Thank you.\"\n\nThe audience broke into applause. Trenagen continued to regard Sasha.\n\nAnd at the sidelines, unseen, Ma'sala regarded Trenagen.\n\n*\n\nThe sun was setting by the time the delayed ceremony had finally finished: twilight was chased back by the awakening lights along the campus paths, as cadets and family and faculty still mingled. Hrelle was kept busy pressing the flesh with everyone he met, many congratulating him for Sasha. He was as polite as he could be... but he wanted to be with his family.\n\nThen his combadge chirped. \"Captain, this is Neheru. There is a Priority One message for you; I have been instructed by Starfleet Command to beam you onboard immediately to accept it. I'm sorry, Sir.\"\n\nBefore Hrelle could reply, he felt himself being transported away...\n\n*\n\nIn another part of the campus, Sasha nearly ran into T'Varik. \"Commander! Hi there! I'm glad to finally run into you!\"\n\nThe Vulcan stopped, relaxing her posture. \"As I, you. Please accept my congratulations on your promotion.\"\n\n\"Thanks.\" Then Sasha quickly suppressed her emotion to offer a more composed, professional facade. \"Commander, I just wanted to say that it has been an honour to have learned from you.\"\n\n\"I imagine so.\"\n\nThat broke Sasha's attempts, and she cursed.\n\n\"That sounds more like the young woman I know,\" T'Varik noted warmly. \"And I share some measure of honour to have been involved in your development.\"\n\n\"Thank you.\" She breathed out, absently touching her collar. \"Commander, I know I'm not your cadet anymore, but... may I call upon your wisdom and objectivity one more time?\"\n\nShe folded her arms behind her back. \"I will always be available to you for that, whether it is as your teacher or your friend.\"\n\nSasha smiled, but then grew serious again. \"Commander... do I deserve to be a Lieutenant? It was a fluke that this terrorist happened during graduation-\"\n\n\"Indeed. But your reaction was not a fluke. You stepped forward and took charge, formulated a plan of action that was accepted by your superiors, motivated your crew, and exceeded expectations. Your response was not the result of a spontaneous whim on your part, but the culmination of a lifetime of experience and expertise as a civilian and as a cadet.\"",
        "\"But I'm only twenty-one-\"\n\n\"There is an ancient Terran saying: 'It is not the years, it is the mileage'. You should not diminish your abilities because of your age, any more than you should because of your family connections. I can assure you that you have earned what you have today.\"\n\nSasha stepped forward, nodding. \"Thank you, T'Varik. You'll be returning to the Surefoot in September with a new batch of cadets?\"\n\nThe Vulcan nodded. \"They will need to make a considerable effort to compare with the first group.\"\n\n\"I'll take that as a compliment,\" Sasha laughed, before asking, \"Please watch out for my family.\"\n\nShe held out a hand. \"It will be my honour, Lieutenant.\"\n\nSasha accepted it.\n\n*\n\nThe Commander and the new junior officer found the rest of her family and friends in the clearing near where Boothby's flowers had been, before the storm. \"I've been looking round but I can't find Dad, or C'Rash, or Eydiir either.\"\n\nKami was lifting up Misha, sniffing and asking, \"No poop?\" When the toddler shook his head, she set him down again and asked, \"Have you tried their combadges?\"\n\n\"Yes, and none of them are responding. And when I contacted the ship, Neheru was acting all cagey.\"\n\n\"Maybe they're having an orgy and didn't want to invite us?\" Neraxis suggested.\n\nJonas winced. \"That puts far too many wrong images in my head.\"\n\n\"You're welcome.\"\n\n\"More than likely,\" T'Varik offered calmly, \"It is a security briefing following today's incident.\"\n\n\"It is intolerable!\" Mi'Tree declared, booming. \"My kin-son and grandniece should be here for my darling Tailless Grandcub! She is the Hero of the Hour! She saved hundreds of lives today! She's brilliant and brave and-\"\n\nSasha drew up to him and brought a silencing finger to his snout. \"You don't have to keep kissing my ass, Grandpa. I've forgiven you already.\"\n\nMa'Sala crossed her arms. \"Don't be too quick to forgive, cub, you might guilt him into an extra special present for your next birthday.\"\n\n\"This will be most exciting,\" Kit announced, clapping his webbed hands. \"To have one more evening with Alpha Squad and the officers of the Surefoot!\" But then he deflated. \"Exciting... and sad. From tomorrow Sasha will be leaving for Vulcan, and on Friday Jonas will attend the Engineering Seminars in Senegal, Neraxis-\"\n\n\"Wait, wait, wait,\" Jonas interrupted. \"Kit, why are you just saying our names? What happened to 'Best Friend Sasha' and 'Best Friend Jonas' and all that?\"\n\nThe Qarari breathed in as he looked around. \"I have decided to endeavour to save these titles of protocol for more private occasions. Otherwise I will be footloose and fancy free.\"\n\n\"Good to hear,\" Rrori commented, cracking the knuckles in his furred fingers. \"And with my Matriarch and mother having an early night, I intend to celebrate our long-overdue departure from this facility by getting absolutely shitfaced tonight.\"\n\nMisha gasped and strode up to the other Caitian male, pointing a finger at him and announcing, \"Bad word! Trouble Time, Mister!\"\n\nThe former cadets laughed, Kami adding, \"You heard Captain Misha there, Meow.\"\n\nSasha grinned. \"Better say you're sorry, sport.\"\n\n\"What? I will not! You indulge the cub too much!\"\n\n\"Are you saying my cub is spoiled, Ensign Rrori?\" Kami teased.\n\n\"Do I have to contact your Matriarch, cub?\" Ma'Sala growled, albeit humorously.\n\nRrori looked to T'Varik pleadingly. \"Commander, be the voice of reason here!\"\n\nBut the Vulcan eyed her godson and noted, \"He is in uniform, and has Captain's pips...\"\n\nThe white-furred Caitian male started to protest further, before finally giving up, looking at Misha and admitting, \"I'm sorry, Captain. Okay?\"\n\nMisha looked up, frowning -- and then grinned and announced, \"Good cub!\"\n\nThen all eyes turned to the arrival of Hrelle, C'Rash and Eydiir, everyone noting the expressions on their faces, Kami asking, \"Esek, what's happened?\"\n\nHe stopped, regarding his wife and colleagues. \"The Klingons have launched a major offensive across three sectors. They're attempted to retake a lot of the territory that they have historically lost or ceded to the Federation: Archanis, Troyus, Ceti Omega, Sherman's Planet. SI believes the incident here today might have been seen as a sign of weakness on our part. Starfleet sent a ship to Organia on the slim chance that they might have returned from... wherever they went years ago.\" He shook his head. \"No sign of them.\"\n\nThe group went silent, until T'Varik surmised. \"You have been recalled.\"\n\nHrelle nodded gravely. \"Effectively immediately, we'll be providing support to the Fleet, tender and ambulance duties. Probably combat, too. We won't have cadets to supplement us, but we'll stopping at Starbase 154 along the way to take on experienced temporary officers and crew.\"\n\nKami swallowed. \"I'll need to pack, get ready-\"\n\n\"No. I know you planned to stay here for the next few weeks working with T'Varik on selecting the new cadets. When you're done, you can head back to Cait with Ma'Sala and Mi'Tree, and from there get a transport to rendezvous with us.\"\n\nKami drew in and embraced her husband tightly. Misha sensed the change in mood and approached. \"Papa sad?\"\n\nHrelle half-pulled back from his wife, just enough to bend down and sweep his son up in his free arm. \"Yes, Papa sad. Papa has to go away for a while, so he'll miss you and Mama. So you take care of Mama for me until we're together again, okay?\"\n\nMisha nodded and wrapped his arms around his father's neck.\n\nEydiir dropped her shoulder bag and approached her friends. \"I'm sorry this will spoil our plans to frolic and pointlessly indulge on Earth over the next couple of weeks, but I trust you will compensate in my absence.\" After a moment she swallowed and admitted, \"It has been an honour and a pleasure to have lived and worked with all of you.\"\n\nAs she began hugging each of them in turn, C'Rash drew up to T'Varik, growling. \"Damn, I was just getting into Season. What will I do for the next few months without you around?\"\n\n\"Masturbate copiously, no doubt.\" Disregarding Vulcan protocol, she embraced her lover, the contact letting her slip into the Caitian's mind for a few seconds, offering more thought and feeling than she could express in public.\n\nHrelle parted from his family to move to Ma'Sala and Mi'Tree, hugging them and asking, \"Keep an eye on them. Misha especially, he's not been separated from either of us for long before.\"\n\n\"We will, my kin-son,\" Mi'Tree assured him.\n\n\"Take care out there, my kin-son,\" Ma'Sala asked.\n\n\"I will.\" He walked over to T'Varik, managing a smile. \"Commander, it has been an incredible, rewarding experience working with you. I'll be counting the days until we're working together again. But if you think you're getting away without a hug from me, you are very much mistaken.\"\n\nShe raised an eyebrow. \"On the contrary, Sir; as I am technically and emotionally bonded to your family, I would consider a lack of an attempt on your part on this occasion to be insulting.\"\n\nHe laughed and drew in, holding her.\n\nWhen they parted, she added breathlessly, \"Do not expect this to be a regular indulgence, however.\"\n\n\"Understood.\" He turned to the former members of Alpha Squad, regarding each of them in turn. \"I- I hadn't planned on having to say any of this now. I thought there'd be more time. You'd think at my age I'd know better, wouldn't you?\" Tears welled in his eyes. \"Maybe I grew close to all of you because you were in Sasha's squad, but I'd like to think you're all remarkable people in your own right that I would have done so anyway. We've been through too much together.\" He embraced each in turn. \"I owe all of you, more than I can say. If you need anything, anything at all, let me know.\"\n\nHe stopped last at Sasha, who was crying as much as he was. He shook a finger at her. \"You have to stop this, Runt of the Litter. Stop being so wonderful. Stop making me so proud of you. It hurts.\"\n\nHe wrapped her in his arms, taking in her scent one more time.\n\n\"I love you, Dad.\"\n\n\"I love you too, Sasha.\"\n\nSomehow, he managed to release her, breathing in and returning to his wife and other cub, embracing them as well. Misha was mewling, until Hrelle took off his jacket, retrieving the combadge but wrapping the oversized garment like a blanket around the toddler. \"Here, Warrior Prince, this has my scent on it; when you feel sad, you hold onto it, okay?\" He rubbed the side of his muzzle against Misha's, and then Kami's, before steeling himself, pinning his badge to his grey undershirt and standing with C'Rash and Eydiir again, calling the Surefoot. \"Three to beam up; warp out when we're onboard.\"\n\nHe spared a final glance at all those people who had touched his life in various ways, some he knew he would be seeing again soon, others... who knew? But he hoped it wouldn't be too long, or too late.\n\nHe fixed on Kami, Sasha and Misha as he disappeared...\n\n*\n\nSaddleworth Moors, England:\n\nThe wind rattled against the ancient panels on the isolated cottage, though the sole occupant, in bed, swaddled in sheets and blankets, had lived there long enough to sleep without noticing it any longer. Very little could stir him in fact-\n\n\"Ian?\"\n\nHe stirred, pulling the bedclothes up over him.\n\n\"Wake up, Ian. We need to speak.\"\n\nHe opened his eyes to the darkness, hearing the female voice, and recognising it. He shifted, reaching under his pillow for-\n\n\"Your phaser is with me, Ian. You can switch on your light, though. Slowly.\"\n\nTrenagen reached for the old-fashioned bedside lamp, its warm yellow glow reaching out but not fully illuminating his bedroom as he focused on the ash-furred Caitian female sitting in his chair, facing him, miniature phaser in hand. He forced himself to appear calm, though his heart was racing inside his silk pyjamas. \"Good evening, Fleet Captain. This is unexpected.\"\n\n\"Yes. But then it seems you're used to unexpected visits. Though you're usually the one giving them, aren't you?\"\n\nHe sat up, gauging how close his other concealed weapons were. \"I'm sorry to disappoint you, but feminine flesh of any race holds no appeal for me.\"\n\nMa'Sala set down the phaser on an adjacent table. \"That's okay, Ian. To be honest, I'd sooner bend over and spread for a snaggletoothed Ferasan than you. As I'm sure you've guessed, I came to talk to you about Sasha.\"\n\nTrenagen made a sound. \"I'm rather disappointed. I did impress upon the girl the need for our conversation to remain a secret.\"\n\n\"She said nothing. Your scent was thick in her room the morning after your visit. And knowing you, I knew why you were there. We need to talk.\"\n\nHe glanced at his red silk dressing gown, where a subspace alert signal lined one of the pockets. Casually he twisted his legs out from under the bedclothes. \"Of course, Fleet Captain. Let me make us some tea.\"\n\nHe reached for the dressing gown.\n\n\"Touch that and I'll eviscerate you.\"\n\nHe stopped, returning under the covers. \"Perhaps another time then?\"\n\n\"Perhaps.\" The Caitian flexed her fingers, letting her claws extend and retract as she regarded him. \"You broke the Agreement, Ian. All of the Shadow Agencies of the Quadrant -- Section 31, the Mother's Claws, the Obsidian Order, the Tal Shiar, the V'Shar, the Gin'tak -- have survived when our many heads of state have come and gone, because we operate under certain rules... one of those rules being we do not recruit from each other's families. They're out of bounds.\" She leaned forward, eyes narrowing. \"Why would you approach my grandcub, Ian?\"\n\nHe smirked. \"Looking to draw her in to your own organisation, Ma'Sala?\"\n\nShe shook her head. \"She has a decent, honourable future ahead of her.\"\n\n\"Hypocrisy ill becomes you, Madame. You speak of honour, but your fleet employs cloaking devices, subspace isolytic missiles... and then there's that particularly nasty weapon of yours on your flagship. What do you call it again? The Seven Hells? What would your granddaughter say if she knew about that?\"\n\nMa'Sala rose. \"I didn't come here to debate ethics. I came here to warn you: you try recruiting her into your pack of kussiks again, and I'll declare a Mother's War on you.\"\n\nTrenagen tilted his head. \"That has more than a hint of portent to it.\"\n\n\"It should.\"\n\n\"Mother's War, Mother's Claws, Mother's This, Mother's That... a societal psychiatrist could write a paper on Caitian maternal obsession.\"\n\nMa'Sala bared her teeth. \"Ian... you really should take my threat more seriously.\"\n\nHe leaned back, smiling up at her. \"Look at us, woman. These are not our salad days, and neither of us are long for this life. I will welcome Death when it comes for me.\"\n\nShe hissed -- and he started as, from shadows in the corners of his bedroom, black-furred Caitian females, clad in equally-black skintight outfits, emerged, eyes baring down on the man in the bed.\n\n\"You see, Ian,\" Ma'Sala continued. \"The Mother's Claws isn't like Section 31. We're more than an agency. We're kin. Some matters are taken personally.\n\nVery personally.\n\nAnd if something should happen to me in the near future, and you feel tempted to try and recruit Sasha again... these females have your scent now.\n\nAnd when they find you again... and they will... when Death finally comes for you...\n\nIt won't recognise you...\"\n\n*\n\nCait, some time later:\n\nSr'uuras stepped out onto the veranda, ready to call the cubs down from the shellfruit trees in the garden and remind them of the time -- only to see them leaping and tumbling over each other, laughing and chasing each other's tails as they raced up and to the back door, skidding to a halt as their father scolded, \"Wash!\"\n\nThe twins were climbing over each other to wash the dirt off their hands and feet, H'ish grabbing the towel first and ignoring his sister Rtala's protests to dry off as well, until Sr'uuras poked his head around the doorway. \"It's about to start... unless you want to keep fighting in your rooms and not watch.\"\n\nThat always stopped the fighting.\n\nAs the six-year-olds rushed into the living room, Sr'uuras poked his head into his wife's office, smiling once more at the chaos that M'Ria seemed to thrive on in her job. \"Come on. You need a break.\"\n\nM'Ria was hunched over the large datascreen with the building schematics, but now uncoiled herself from her stool, stretching out her limbs and tail before looking over at him. \"I'm stuck. Completely paralysed. Go on with the rest of your life, my husband. Best just leave me here to die...\"\n\n\"Yeah, yeah, yeah.\" He stepped in, swept her up and carried her into the living room. Their children were already lying on their bellies on their blankets and pillows on the floor, having turned on the vividscreen and waiting for the news program to finish, and eating bowls of tava pudding from the kitchen. He set his wife down on the couch and moved over to retrieve their wine, settling himself down on the plush cushions and letting M'Ria curl up against him, the adults frowning at the final notices on the Klingon assaults and Dominion and Ferasan threats.\n\nThen the view changed, the familiar theme music rose, and the cubs' tails swish above them with excitement as The Taleteller's program logo appeared, and the cubs cheered.\n\nThe logo was then replaced by an old-fashioned domestic setting, where Mi'Tree entered and sat down, beaming. \"Good evening, Cubs of All Ages! And how is everyone today? Have you done your homework, your chores? Have you been good today?\"\n\nOn the floor, Rtala looked back at her parents for confirmation, Sr'uuras smiled and replied, as if the image on the screen could hear, \"Yes, we all have!\"\n\nRtala grinned and turned back to the screen, but then noticed she had finished her pudding. She looked to her brother. \"Can I have some of yours?\"\n\nH'ish snorted. \"No!\"\n\nOnscreen, Mi'Tree lifted up a book from an adjacent table and placed it on his lap, his eyes bright with wonder. \"Tonight, I'll be reading from a most wonderful book I've discovered, by a Terran author named Roald Dahl, about a remarkable young female cub named Matilda!\"\n\nThen his expression sobered slightly. \"But first, I'd like to talk to you about something important. I've been receiving many messages from cubs all over Cait and the colonies. Many of you have been watching and listening to the news lately, hearing stories about the fighting that has been going on out there. Many of you are afraid.\n\nOh, my wonderful cubs... I want to tell you all: it's okay to be afraid. Everyone gets afraid of things. Your brothers and sisters do. Your parents and grandparents do. We all do. And in the weeks and months to come, you may see and hear more things that might make you afraid.\n\nBut it's okay to be afraid... as long as you don't let your fear change who you are.\n\nDon't let your fear make you angry.\n\nDon't let your fear make you selfish.\n\nDon't let your fear make you cold.\n\nAnd perhaps most importantly... don't let your fear make you unkind.\n\nThe Great Mother gave us many gifts, many strengths: our love, our compassion, our mercy, our generosity. And our kindness.\n\nBe kind to each other. To your brothers and sisters, to your parents and grandparents, to your cousins and friends, to your teachers and neighbours, to the strangers you meet in the street.\n\nEvery little act of kindness is like a light. A light that can fight the darkness. And with enough light, the darkness can be banished away.\"\n\nOn the floor, H'ish reached out and poured some of his remaining pudding into his sister's bowl.\n\nMi'Tree smiled, as if having seen the act. \"And remember as well: we may have enemies out there in the Galaxy... but we also have protectors. Brave men and women of all races, who are prepared to protect us. Keep them in your thoughts, for we are in theirs.\"\n\nHe opened the book and settled back. \"Now: are you sitting comfortably? Then let's begin...\"\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE..."
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "star trek fanfic",
        "star trek fan fiction",
        "caitian",
        "starfleet academy",
        "bolian",
        "klingon"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-29-class-of-2372"
}