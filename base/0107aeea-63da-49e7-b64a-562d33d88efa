{
    "title": "Voyeur Ch. 10",
    "pages": [
        "This story went quite a while; it was originally meant to stop at the first chapter, hah. Thanks for all the awesome feedback and voting on this series, it was a pleasure to write. Hope you guys like it :) \n\nNB to new readers - this is more plot conclusion than gratuitous smut. \n\nx \n\n**** \n\nGrumbling incoherently, Rachel rolled onto her back and realised Ray was gently shaking her awake. Being tenderly watched by a murderer whilst she slept was incredibly disturbing. \n\nAfter nervously blinking, she finally found her voice. \"H-How long was I...?\" \n\n\"Not long,\" Ray murmured, smoothing unruly red strands from her forehead. \"I didn't want to disturb you, but we really have to go.\" \n\nAware there was no point arguing, Rachel resentfully tensed. Ray noticed her feet lightly kicking under the blanket. \n\n\"I know, I know,\" he sighed, finding her mini-tantrum surprisingly cute. \"You don't want to go. You're just going to have to trust me.\" \n\n\"I can't trust you,\" she mumbled, quickly sitting up when he tried to playfully pinch her wriggling toes. \"Please-!\" \n\n\"Hon, my brother wants to kill you,\" Ray disclosed with brutal honesty. \"And I really don't want that to happen. Understand?\" \n\n\"No,\" Rachel helplessly shrugged. \"I don't understand anything.\" \n\nDespite feeling exceptionally stressed, Ray found himself smiling. \"You'll get it one day,\" he said, wondering how she'd grown on him in such a short space of time. \n\n\"I think you're just going to rape me forever,\" Rachel despondently muttered. Glancing up, she felt like sheltering under the blanket. Ray looked frighteningly pissed off. \n\n\"Don't-!\" he broke off, struggling for the right warning. \"I have never raped you, Rachel.\" \n\n\"That's not exactly true,\" she timidly debated, unable to resist answering a pretty ludicrous claim. Abduction, imprisonment and blackmail for the sole purpose of sex seemed kind of rapey, even if it wasn't violently threatening. \n\n\"Right,\" Ray said flatly, not willing to debate it now. They'd continue this conversation at destination. In bed. \n\nStill eyeing her sternly, he reached for something on the ground. \"Not very sexy, but you'll have to wear it.\" \n\n\"What is it?\" Rachel frowned at the heavy-looking piece in his hand. \n\n\"Protective vest,\" Ray answered. \"It might be big, but it'll have to do.\" \n\n\"Oh, God,\" Rachel said vacantly, staring at the khaki-green gear. \n\nSeeing the protective-wear somehow made everything sink in. It was all real. She was a modern-day sex prisoner to an enamoured psychopath, and someone she didn't even know was determined to kill her. She wondered if she shouted 'CUT', whether a camera crew would appear out of nowhere and ask what the problem was. \n\n\"Can I have a kiss?\" Ray asked, drawing her closer, his eyes on her mouth. \n\nIt seemed like a trick question and Rachel was extremely tempted to say 'no'. \"Alright,\" she relented, though still lowered her head to tentatively avoid him. \n\nRay sighed against her temple and caressed her chin, guiding her face upward. He kissed her, his eyes closed, enjoying the quiet moment before the chaos. \n\n\"When we're clear, we can go anywhere,\" he murmured. \"We can do anything. You have no idea, Rachel.\" \n\nSwallowing, Rachel lightly shook her head in response. That offer didn't appeal to her at all, none of it did. But what she wanted didn't matter. \n\n\"You'll be fine,\" Ray softly assured her, seeming unnervingly genuine and mistaking her dazed realisation for blind terror. \"I mean it. I can handle him. My feelings for you are...\" he trailed off with a wince. \"Never mind.\" \n\nVery glad he didn't finish the sentence, Rachel docilely let Ray fit the vest on her. \n\n*** \n\nBen cautiously lowered onto his stomach beside Ahmed, who was busy peering through the scope of his rifle. An excruciating half-hour passed before Ben caved and tapped Ahmed's shoulder. \n\n\"What?\" Ahmed whispered, still staring through the lens. \n\n\"I thought we were going in,\" Ben whispered back, trying not to sound critical. \n\n\"Ray is on guard. The perimeter will be reactivated. We wait for them to come out.\" \n\n\"Why don't we shoot his tyres?\" Ben breathed. \n\nAhmed irritably shifted. \"Because they'll retreat to the house. Following a predator into their abode is always a last resort.\" \n\nBen turned away and bit his knuckles, feeling more tortured than ever. Rachel was in the house; so close to them. She was captive to a hardened killer, and he had to sit and wait without knowing what kind of condition she was in. \n\n*** \n\nStraddling the bough of a tree, Logan grinned down at the undisturbed sensor half a metre in front of him. Ray was so paranoid he'd probably emerge any second. Ray wasn't a procrastinator; he faced challenges head on and responsibly took care of them. Logan was almost certain he'd try an immediate runner. \n\n\"You'll forgive me one day, kiddo,\" he smirked, checking his weapon. \"You might even thank me.\" \n\nPointing the gun at the house, he shut one eye and practiced his aim. He was a good-enough shot, and confident of fatally clipping the girl, so long as there was at least a metre between her and Ray. Not an ideal firearm for distance shooting, but he wasn't expecting to need anything specialised for a brotherly visit. \n\n*** \n\nHitching his bag across one shoulder, Ray turned to Rachel, who had sobbed consistently for the last twenty minutes. \n\n\"Wait until I reach for your hand,\" Ray ordered, cupping her tear-soaked cheek and holding her dismal gaze. \"Do not step into the open until I reach for you. Understand?\" \n\n\"I d-don't want t-to g-go,\" she miserably hiccupped, with a wistful glimmer in her eyes; a dwindling hope that Ray might magically change his mind. \"P-Please, Ray, I don't w-want to g-go,\" she tearfully repeated, her breath hitching so uncontrollably it was difficult to speak. \n\nIt was like her new mantra. Though it was absolutely pointless, she couldn't stop saying it. This move felt like the final nail in the coffin that would seal a permanent distance from Ben. A definite, irreversible change that would ensure she never saw him again, and the pain of it was overwhelming. \n\nWhen Rachel closed her eyes, she could still imagine Ben. She could feel the heat of his chest against her, his hand running through her hair, their bodies warmly entwined whilst they slept. She could picture his sexy smile and dark, hungry gaze. The idea of farewelling those experiences forever caused literal pain; a horrible dull ache through her chest, her stomach cramped. \n\n\"Not now, Hon.\" Ray's voice was sharp and foreboding, his eyes hard. \"Breathe.\" \n\nRachel forced deep breaths with difficulty, telling herself there was no point being a sook. But that was easier thought than done. \n\n\"Good girl.\" Ray bent to press their foreheads together, angling for another kiss. \n\nBut Rachel dropped her head and cried into Ray's shirt as though the world was ending. She felt his chest expand against her cheek as he sighed deeply, then his arms closed around her. One hand smoothed consolingly up her neck and through her hair, massaging her scalp. \n\nThey stood that way for several minutes, until Rachel stopped hysterically sobbing and managed to regain control of her breathing. \n\n\"Good girl,\" Ray repeated. Rubbing her back, he could actually feel her nervous energy around them. \"It's going to be fine, Hon. You'll be fine.\" \n\nWith Rachel in his arms, anticipatory pleasure warmed Ray's body. He couldn't wait to crack an ice-cold cider and get naked with her. When they were safe and alone, he would make things right. Rachel would learn to enjoy his companionship. \n\n\"Be good for me now, and I'll make it up to you,\" he huskily promised. \n\nRachel would have rolled her eyes if they weren't painfully tear-swollen. \n\n*** \n\nThe front door slowly opened, and Ben mouthed a number of obscenities as he observed Rachel's captor. The guy was clearly agile, and massive. He looked fucking strong. Rachel didn't stand a chance. Ben sharply exhaled, his body stiff with fury. \n\n\"Settle,\" Ahmed sharply cautioned, not taking his eye from the scope. \n\nAfter what seemed like eternity, Ray reached behind and led Rachel out. \n\nBen jerked forward, and Ahmed's hand shot out to seize the neck of his shirt. \"I won't warn you again.\" \n\n\"Why haven't you shot him?\" Ben hissed, his heart twisting at Rachel's visible misery. \n\n\"He's too close to her.\" \n\n\"Bullshit! He's fucking two heads taller!\" \n\n\"Quiet. She's vested up and he's not. That can only mean that he's...\" Ahmed frowned. \"He's guarding her from something.\" \n\nAchieving the impossible, Ben forced himself to relax. From the small glimpse he got of Rachel, she looked tired, miserable, though thankfully alive and uninjured. But she was crying, and he couldn't stand it. He needed to know why; to make it stop. And now she was completely blocked from view by a man he wanted to slowly take apart with his bare hands. \n\n\"I made a mistake,\" Ahmed muttered, shifting against the soil. \"The hostility isn't between...\" he broke off and blinked. \"Rachel is the problem. He's fleeing to protect Rachel, not himself.\" \n\n\"Protect her from what?\" Ben said through his teeth. \n\n\"If I take him out now, whatever danger he's afraid of may have full advantage.\" \n\n\"What is he protecting her from?\" \n\n\"We're about to find out.\" \n\n\"What are you going to do?\" \n\n\"A warning shot; see if we can get Ray to react, and possibly draw the other party into the open.\" \n\n*** \n\nRachel lightly collided with Ray when he abruptly stepped back. \n\n\"Wait,\" he breathed sharply, listening. \n\nThe woods were abnormally still. Not the usual serene quiet. Watchfully silent. \n\nStaring at the trees, Ray used a technique that worked for him in camouflage areas. He narrowed his eyes and deliberately blurred his vision; the surrounds merged into beige, brown and green. Then he glimpsed it. Reflective glass. \n\nRachel yelped when Ray turned on her in a flash, gripped her shoulder and shoved down. \n\nGunfire cracked through the silence, and a front window shattered. \n\n\"Ouff!\" Rachel huffed, painfully adhered to the front porch. Ray crouched in front of her, she watched him pull a gun from the back of his pants and fire three shots. \n\nAhmed dragged Ben down the incline when he saw Ray aim, the ground immediately shuddered as the bullets slammed the other side. \n\n\"That bastard is good,\" Ahmed panted, rolling onto his belly and gesturing Ben to follow. \"He sighted the scope. We'll have to use the short track.\" \n\n*** \n\nThe porch in Rachel's face suddenly vanished and she was airborne, her feet only touching the ground to push off again as Ray half-carried her by the vest. Before she could catch her bearings, she was thrown face-first across the car's back seat, cool leather skidding down her cheek, and dimly heard Ray growl at her to stay down. \n\nIn the next five seconds, Ray was in the driver's seat and the car started, sharply pulling away from the house. Hitting the accelerator as they entered the freeway, Ray glared at Logan's car parked fifty metres down the road from his driveway. \n\nWithout slowing, he found his gun, extended his arm and took a number of shots, managing to hit one front and back tyre. \n\nHearing gunfire, Rachel cried out and covered her ears, feeling jolted as the car went over bumps in the road at increasing speed. \n\n\"Hon.\" Ray's eyes were fixed ahead. \"Put your seatbelt on.\" \n\nWhen she didn't answer, he risked an irritable glance at the back seat. Rachel was curled up, still covering her ears. \n\n\"Rachel!\" He barked, his eyes flaring at the road in front. \"Belt!\" \n\n\"I can't!\" she sobbed. \n\n\"Jesus Christ,\" Ray said through his teeth, checking the rear-view mirror. \n\nLogan knew his house, in and out. He knew what was in the garage. Normally Ray would be seething about his brother potentially scratching his expensive motorcycle. Now, he wished he'd destroyed it in advance. The bike was replaceable. Rachel wasn't. \n\nOn this aggravating fact, Ray viciously pulled to the curb, quickly moving to the back seat to push Rachel up and buckle her in. Soon after, the tyres screeched as he pulled out again. \n\n\"Now, you can go to pieces,\" he snapped, his heart beating annoyingly fast at the thought of losing her. \n\n*** \n\nAhmed hauled Ben to his feet and shoved him back the way they came. \"Get back to Brian. Start the car.\" \n\n\"But-?\" \n\n\"Run!\" Ahmed growled, widening his eyes as Ben suddenly levelled a handgun at him. \"What the hell are you doing?\" \n\n\"Eeeeasy.\" \n\nThe icy drawl came from behind Ahmed, who turned to realise Ben aimed at a man peering interestedly down the incline, his pistol on Ahmed. \n\n\"Who are you?\" Ben demanded; his aim surprisingly steady. \n\n\"Well, you look familiar,\" Logan smirked at Ahmed. \n\n\"I don't know you,\" Ahmed carefully answered, his fingers twitched along his rifle. \"We just want the girl.\" \n\n\"You shot at my brother,\" Logan coldly accused, stepping down the incline. \n\n\"We just want the girl,\" Ahmed slowly repeated. \"We don't want to kill anyone.\" \n\nLogan's eyes flickered to the large sniper in Ahmed's hands. \"You didn't bring a gun like that to extract a hostage without casualties.\" \n\n\"It's not a hostage situation,\" Ahmed levelly replied. \"All we want is the girl.\" \n\nA distant rumble carried their way, and Logan sighed with both relief and impatience. Ray had obviously reached his vehicle and taken off. \n\n\"I don't want to kill you,\" Logan told Ahmed, still aiming. \"I think we should talk.\" \n\n\"Maybe you should drop your weapon,\" Ben said, unable to keep the aggression from his voice. \n\nLogan's eyes narrowed and he angled his head at the gun in Ben's hands, then threw back his head with a genuine laugh. \n\n\"Maybe your weapon should be loaded?\" he grinned. \"Sniper, please,\" he said, extending his free hand to Ahmed, who had closed his eyes as Ben realised his humiliating oversight. Somehow, he'd released the magazine. The gun he pointed was empty. \n\nBen and Ahmed grimly watched Logan accept the sniper, using his thigh and one hand to dismantle a critical part of the rifle. \n\nLogan straightened up. \"What a small world. I remember you,\" he nodded to Ahmed. \"But you wouldn't remember me. I was young.\" His gaze moved to Ben. \"Who's this guy?\" \n\n\"Trainee,\" Ahmed promptly answered. \n\nLogan blew out a thoughtful breath. \"He's a bit old, isn't he? Thought you only work with teenagers.\" He pointed to Ahmed's waist. \"Please be very, very careful when you dump the rest of your weapons.\" \n\n\"I haven't-\" Ahmed quietly began, changing his mind when Logan bared his teeth in an angry grin, eyes flared with a deadly warning. \n\n\"Don't pull that shit. We both know you're saddled up.\" \n\nStone-faced, Ahmed very slowly extracted two pistols from the back of his pants, a taser from his front pocket, a small, golf-ball sized grenade that was attached to his ankle, and finally dropped a curved, serrated knife to the weapon pile. \n\nLogan shook his head, very pleased. \"Was that so fucking difficult?\" \n\nLooking very surly, Ahmed pursed his lips. \"We're wasting time.\" \n\n\"Are we?\" \n\n\"Your brother is very skilled.\" \n\n\"I know that!\" Logan spat. \"I fucking made him.\" \n\n\"Once he gets out of range, you'll never find him again.\" \n\n\"I'll always find him,\" Logan scoffed, though seemed a little uncertain. \"You're a bigger problem for me. I don't like killing people I know,\" he mused, his gaze transferred from Ahmed to Ben. \"Or don't know. But you did try to take out-\" \n\n\"I could have easily killed him, and you know it. I fired a warning shot. Just let us go,\" Ahmed quietly reasoned. \n\n\"Nah,\" Logan said sinisterly. \"Question time.\" \n\nStill with the gun on the men, he lifted his leg and felt for the hunting knife always stashed by his calf. A cracking stick caught his attention and Logan slightly staggered, peering into the bushes beside him. \"What the fuck?\" \n\nMarcus drunkenly launched from hiding like a wild animal, took hold of Logan's thigh, and bit him. \n\n\"THE FUCK!\" Logan screamed, kneeing Marcus in the face with his other leg and firing as Ahmed lunged, knocking the gun from Logan's hand. \n\n\"Get the gun!\" Ahmed shouted to Ben, fighting to get Logan into a headlock. \n\nIn a flash move Logan elbowed Ahmed's ribs, dealt a vicious punch under his chin, and managed to throw himself over the incline as Ben fired. Blood poured from Ahmed's mouth, but he didn't seem to notice. He snatched the gun from Ben and ran after Logan. \n\nGunshots followed. Ben stared at Marcus, sprawled, blood seeping down the neck of his shirt. He jerked out of his daze when Ahmed returned. \n\n\"I couldn't get a clear shot, and he reached the house,\" Ahmed panted, inspecting Logan's weapon. \"We're not here for him. We have to find Ray, before he disappears.\" \n\n\"Marcus,\" Ben numbly pointed. \n\n\"He knew the risks.\" Ahmed spat a wad of blood to the ground and fixed his sniper. \n\nThey sprinted back to Brian, who leaned against a tree, looking pale. \"What happened? Where is he?\" he asked. \n\n\"Ray took off with her. Ran into his brother,\" Ahmed briefly answered. \"Give me the keys, I need to drive.\" \n\n\"I mean, where's Marcus? He ran off, I couldn't stop him,\" Brian faltered. \n\nBen couldn't look at him. Ahmed dropped a hand on Brian's shoulder and squeezed. \"He saved us. Let's go.\" \n\nBrian and Ben managed to get into the back of the car as Ahmed took off, driving like a maniac and looking like Count Dracula. \n\n\"Here,\" Ahmed passed a device to Ben. \"Navigate. We need to intercept them before they reach the clearing.\" \n\n\"What clearing?\" \n\n\"For the flight.\" \n\n\"What flight?\" \n\n\"Stop asking questions,\" Ahmed snapped, wiping fresh blood from his chin and spitting some out the window. \n\nBen finally glanced Brian's way. Brian was belted in, looking serene but extremely pallid. \n\n\"I'm sorry about Marcus,\" Ben muttered, shaken but not undeterred from his purpose. \n\n\"Parasites don't die so easy,\" Brian loosely shrugged; his voice robotic. \"He'll be ok.\" \n\nAhmed met Ben's eyes in the rear-view mirror. \"Check the screen, count the turnoffs from our starting point and tell me when we're approaching the eleventh.\" \n\nBen squinted at the map on screen. \"We're at the fourth.\" \n\nAhmed's jaw clenched and he hit the accelerator. \"They already have a head start,\" he called over the engine. \"It's extremely important we get there first.\" \n\n\"You're going to cut them off,\" Ben realised, feeling suddenly anxious. \"Ahmed, Rachel is with him!\" \n\n\"They'll just clip us. She'll be alright.\" It sounded more like a hopeful intention than a confident guarantee. \n\n\"No, she-!\" Ben shook his head. \"What if the car rolls and she doesn't have a belt on? What if-!\" \n\n\"Ben, if we lose them now there is no getting her back, understand?\" Ahmed barked, his eyes burning. \n\n\"I don't care! I want her to live!\" Ben shouted. \n\n\"Keep your goddamn eyes on the navigator!\" Ahmed raged, slightly turning the wheel to avoid a log on the path. \n\n\"Ninth,\" Ben gruffly called, focusing on the screen that bounced before his eyes with Ahmed's erratic driving. \n\nTrees whistled by as they sped along the narrow dirt track, seemingly at a slight incline. They were approaching higher ground. \n\n\"Tenth.\" Ben's hands were shaking. \"The next turn is the eleventh.\" \n\nAhmed drew a deep breath, slowing down. \"Ben, scoot close to Brian. The left side is taking the impact.\" \n\nThey waited at the fringe, listening. The road was deserted. \n\n\"How much have we gained?\" Ben whispered. \n\n\"About ten kilometres,\" Ahmed softly answered, carefully listening. \n\nSoon the ground rumbled with a vehicle approaching at speed from the distance. Ahmed slowly inched the car forward, then abruptly swerved out. ",
        "\"Fuck!\" Ray's eyes flared at the car from nowhere, suddenly blocking the road. Reacting on instinct, he hit the brakes and slightly turned the wheel, extremely conscious of the barrier standing between the road and a steep cliff. \n\nAs Ahmed hoped, Ray clipped them. Their car roughly jolted ninety degrees; Ray's car almost overturned but managed to remain upright. Smoke emitted from the roadway; the surrounding air reeked of burnt rubber as Ray's car spun. \n\nSomewhat dazed from the impact, Ben's jaw dropped with horror, watching the Range Rover come precariously close to the barrier before coming to a steaming standstill. He glanced to his right and realised Brian was out cold. \n\nThe front door of the Range Rover flew open, and Ray quickly opened the back-passenger door. \n\n\"Hon!\" he said hoarsely, urgently brushing dishevelled hair from Rachel's face. \"Are you hurt?\" \n\n\"I...\" Rachel uttered as Ray hauled her upright and began to check for injuries. Her eyes widened with shock over Ray's shoulder and Ray turned at the same time Ben jumped on him. \n\nShaking his head, Ahmed was out of the car, the reassembled rifle hanging from a strap by his shoulder. Taking aim, he paused, turning in time to see Logan zoom from around the corner on Ray's bike. \n\nAhmed took a shot and missed, managing to leap back before Logan could run him down. The bike knocked the butt of the rifle, sending Ahmed spinning to land in a muscled heap on the ground. \n\nLogan swerved to a stop, his eyes on Ray and Ben, viciously wrestling. Angling his head at the tangle of limbs, he stepped forward, somewhat unsettled by Ben's skilful technique. \n\nContemplating intervention, Logan discerned Ray's nose was bloody, but he'd gained a lethal grip on Ben's head. It was quite close, but Ray was winning. \n\nLogan watched Ray strain toward victory. He smiled at the vicious fight to the death, feeling that wave of powerful pride through his chest, enjoying blood-sport at its best. \n\n\"Atta boy, Ray,\" he mused, his eyes darting to movement from the car. Rachel was unsteadily on her feet, watching the brawl, her jaw slack. \n\n\"Stop! Ray, please don't!\" she begged, staggering toward them, until she saw Logan. \n\nLogan tilted his head at her and swung his leg off the bike. Still grinning, he bent to pull the long hunting knife from the sheath attached to his calf. \n\nUnderstanding, Rachel turned and ran. Logan quickly gained on her, she was exhausted and weighed down by the vest. Logan's heart swelled with triumphant excitement as he chased Rachel down. It had been a long time since he'd experienced such a delicious rush of predatory adrenaline. \n\nRay was about to learn a valuable lesson. He was about to learn that his big brother was always right and would always win. Logan threw himself forward to catch Rachel and they crashed to the ground together. She was limp for a moment, stunned by the impact. \n\n\"This is for contaminating my kid brother!\" Logan sneered, roughly extracting the vest from Rachel's body and throwing it clear. \n\nBefore Rachel could think, Logan viciously twisted her arm behind her back, almost dislocating her shoulder and brutally shoved her down again. Unsatisfied by her limp defeat, he seized her hair and hauled her to her feet. \n\nBen had dealt another nasty jab to Ray's throat and managed to rise to a standing position. But it wasn't enough to free himself. Ray was also on his feet, he clenched his teeth and squeezed. Ben was strong, but not strong enough. He was starting to lose consciousness, but held on, a true fighter. It didn't matter. Very soon, Ben's neck would snap. \n\nRay strained harder. It wasn't over; he could salvage this. He could still take out the others, cap Logan's knees and get Rachel out of there. They could start again. It wasn't over. \n\nRachel shrieked, the sound carrying more agony than fear. Ray looked over. \n\nThe second he saw Logan pull Rachel up by her hair, Ray released Ben and immediately broke into a pounding run. Despite his speed, it was with slow motion he watched the knife in Logan's hand flash reflecting sunlight as his arm extended back. \n\nRay knew that move; knew it was a matter of seconds before the knife was buried to the hilt under Rachel's ribcage. Ray didn't waste precious energy shouting; Logan would ignore him. Ray invested all effort into his run. Ahmed was right behind him. \n\nWithout breaking stride, Ray intercepted the weapon, barrelled into Logan and used the momentum to break Logan's grip on Rachel. The knife swung and missed Rachel's abdomen by centimetres. Ray forcefully drove forward, spending the last of his strength to stop his brother the only way he knew how. \n\n\"YOU'RE FUCKING CRAZY!\" Logan screamed as they ploughed over the barrier together. \n\nHeld upright by a stranger, Rachel moaned, her body filled with aching pain. She heard a thud; a number of sickening cracks as the brothers tumbled together down the jagged cliff-face and into the water with a faint splash. She unsteadily tried to gain footing, and immediately collapsed with a cry. \n\n\"Be still, stop moving.\" The stranger gently lowered her to the ground and sharply tied a cloth around her upper arm where the knife nicked her. \n\n\"I don't want to go,\" Rachel dizzily whispered, suspecting she was in the arms of Ray's pilot. \n\n\"Press down, hard,\" Ahmed instructed, positioning Rachel's hand over the wound. Then he ran to the cliff's edge and dropped to one knee where the barrier had caved. In a swift movement he jerked his shoulder and the rifle fell into his hands. He aimed for two short seconds, then fired. \n\nRachel's body was overcome with adrenaline, fear and pain. Staring at Ahmed, she watched in a daze as he keenly peered through the scope of the weapon. Rachel's vision began to fade. Tired relief washed over her, she closed her eyes and the world drifted further. Somehow, she knew Ben was holding her. \n\nHome. \n\nRachel's eyes fluttered open, and she shifted in the bed. The room was vaguely familiar, but not in a threatening way. \n\n\"Mm.\" She frowned, pressing her palms to her forehead. \n\n\"Hey, girl.\" \n\nRachel jerked upright, wincing when her shoulder twinged. \"Brian!\" \n\n\"Yeah,\" he grinned, leaving his chair to sit on the bed as she reached for him. For a long minute they hugged. \"You alright?\" \n\nRachel shook her head against his shoulder. \n\n\"You will be.\" Brian eased free of her grip and pinched her cheek. \"I told you to stay out of trouble. You kids never listen.\" \n\nRachel managed a weak laugh. \"Where are we?\" \n\n\"My house.\" \n\n\"I don't understand...\" \n\n\"It's better you don't. There's a riled-up punk outside. I insisted on seeing you first, since we're on my turf. It almost came to fisticuffs.\" \n\nRachel gasped fearfully. \"Y-You mean...Ben? He's here?\" \n\n\"Where else would he be?\" \n\nRachel's eyes were suddenly brimming with tears. \n\nBrian took her hand. \"He's here for you.\" \n\n\"I can't see him!\" \n\n\"Why not?\" \n\n\"You don't...I can't...\" Rachel faltered, unable to explain. \n\nBrian pursed his lips, shrewdly watching her inner conflict. \n\n\"You're worried about the footage?\" he asked bluntly, gently tilting his head at Rachel's immediate alarm. \"Ahmed was thorough. The recordings are destroyed. Ben never saw them, and he doesn't have to know.\" \n\n\"But-\" \n\n\"Trust me, it's nothing. I've seen people do a lot worse to survive, you have no idea.\" Brian sighed deeply. \"Fortunately, Ray was a true professional so there was little for Ahmed to clean up. Ray didn't keep trophies. Well, except you.\" \n\nBrian nodded on an afterthought. \"You're in good hands, girl. Ahmed was very impressed with Ben. Said he handled better than most of his proteges. Though apparently, he could do with some weapons training,\" he chuckled at a private joke. \n\n\"I can't. I can't face him,\" Rachel stubbornly mumbled, toying with Brian's hand. \n\n\"I don't think you have a choice,\" Brian said dryly. \"Once he realises you're awake, he'll break down the door.\" He sighed. \"Before that happens, do you have any burning questions for me?\" \n\n\"Do I have to tell the police what happened?\" \n\n\"No. I'll settle it as a misunderstanding. But you'll have to give proof of life before they'll back off. I'll help you prepare for their questions. It will be brief, but unpleasant. Cops don't like being dicked around.\" \n\n\"Does that mean...? Is Ray dead?\" \n\n\"Most likely,\" Brian said slowly. \"Logan certainly is. I have to admit I couldn't believe Ray took out his own brother. That's not something I ever expected, and I've seen a lot of things.\" Biting his lip with a frown, he remembered what he'd been meaning to say. \n\n\"Without a body, Rachel, you need to know there's a possibility Ray survived. That he might come back. I believe it pays better to prepare for the worst, than hope for the best.\" He gently laid a silver bracelet onto the bed. \n\n\"This is entirely up to you, and your ideas of privacy. There's a tracker in it that leaves a clear signal, and the trinket is damn near indestructible. But if you're not comfortable...\" he trailed off, watching Rachel immediately link it around her wrist. \n\n\"Thank you, Brian. If it weren't for you-\" \n\n\"Shucks,\" he shrugged off her gratitude, still feeling responsible for her predicament to begin with. \"You're like a daughter to me. Hell, I wish you were.\" He pulled a face, remembering Marcus. \"I don't expect you to forgive Marcus. But he's genuinely sorry, and he did what he could to make up for it.\" \n\n\"H-He was there?\" she said blankly, feeling even more overwhelmed by this new information. \n\n\"Yeah. Took a badass shot to the forehead, but the bullet nicked the metal plate in his head. That little shit has more lives than a cat.\" \n\nRachel awkwardly swallowed. \n\n\"I can't fucking wait to call him 'Harry Potter',\" Brian snidely added, before remembering he had something important to say. \n\n\"So...\" he stared down at his thumbs. \"The cut will heal in no time. But you had a mild fever, so we had your bloods done while you were out, in case that bastard poisoned you. My guy is thorough. I have a feeling you know what I'm about to say.\" \n\nRachel flushed; her hands clenched into the blanket. \n\n\"It was never my intention to pry. But the doc insisted on an ultrasound, so you should know everything there appears fine,\" Brian said discreetly. \"It's too far along to be Ray's. But as things progress, you'll need to do checks. That is, if you're going to keep it?\" \n\nEyes shamefully downcast, Rachel nodded, thankful Ray religiously used condoms. \n\n\"Congratulations.\" Brian stood from the bed. \"Text me sometime and we'll have coffee. Anyway, guess I'd better-\" \n\n\"Do you have to go right now?\" Rachel pleaded, looking desperately anxious. \n\nBrian smiled sympathetically. \"You can't avoid him forever. Or for much longer, I should say,\" he finished with exasperation, turning to find Ben staring around the door's edge. \n\nTheir eyes met for only a second before Rachel quickly looked down, feeling her heart ache, her cheeks brighten with a familiar blush. It was so good to see him, even if it was painfully unsettling. He was a pleasure to her eyes from the beginning, which only developed as they spent more time together. It seemed the schoolgirl crush she always had on Ben, even before they knew each other, was stronger than ever. \n\nBrian comfortingly petted her hair, then left and closed the door behind him. \n\nRachel heard Ben's movement and looked up in time to meet his shoulder as he pulled her into a crushing hug. Just touching him brought back everything she'd missed, and feelings she never thought she'd experience again. \n\nLike a storming ocean, Rachel's emotions heaved then crashed with all the things she wanted to say but couldn't give voice to. Her body shook with silent sobs, and Ben's arms tightened around her. \n\n\"Rae,\" he murmured against her neck, his hand moved soothingly up and down her shoulder. \"It's over. I've got you.\" \n\nEventually Ben's hand searched for her face, and he cupped her cheek so he could guide her to look at him. Feeling very uneasy, Rachel forced her eyes open. \n\nBen's dark hair was slightly longer, and his normally clean-shaven face was shadowed with stubble. But his dark eyes were the same, possibly wilder and more intense than before. Though they slightly glittered with unshed tears, the passionate glint was strikingly familiar. Ben didn't have to say anything - Rachel knew he felt the same about her. He also seemed to struggle with words but pulled himself together with a heavy sigh. \n\n\"I'm taking you home,\" he said hoarsely, pressing a hard kiss to her forehead. \"I know I look like a mugshot. I'm so fucking happy. I'm so relieved.\" He drew back, scrutinising her uncertainty. \"You're all I care about. Understand?\" \n\nOh, God. Does he know? Rachel paused a heartbeat before nodding. \n\n\"Good.\" Ben abruptly began to gather her things that Ahmed retrieved from Ray's house; his face twisted with disgust. \"I'm gonna burn everything in here that you let me.\" \n\nCatching a glimpse of the anger on his face, Rachel could see he was deeply emotional, and fighting to control it. \n\nNeither wanted to acknowledge there were issues to resolve. \n\nBen quietly brainstormed how to nurse Rachel through a recovery period without coming across as needy himself. But he fucking needed her, that much was clear in her absence. He was afraid to let her out of his sight, and he couldn't imagine that changing in the next decade. \n\nRachel's predicament was more complex. She couldn't continue with Ben after what happened with Ray. Her conscience was unwaveringly unforgiving, and she had already written off the relationship as irreparable. She had to extract herself before he found out about her condition. \n\nIt was pure selfishness, but she couldn't bear to immediately sever ties. She needed him now. \n\n**** \n\nThe next few days were a blur of official business for Rachel; glowering detectives, puzzled colleagues and her parent's fussing. At least they finally met Ben, though that possibly made the situation worse, even if it was heart-warming in the moment. \n\nThey had to break up, and soon. It was only a matter of time before Ben discovered her secret. The fluctuating hunger and nausea she experienced in Ray's house continued after her rescue. Whist Ben was easily convinced it was just lingering trauma, Rachel knew he wondered about her refusal to consume anything alcoholic. Soon enough it would all click. \n\nOf course, Ben respected her wishes not to be intimate. He often touched her innocently, holding her hand, brushing hair from her neck. It was as though he tested her limits, always touching and quickly retreating. Then returning for more. If he got too close, she withdrew. \n\nAfter yet another quiet dinner, Ben tidied the kitchen and left Rachel with an untouched glass of wine. She never drank it, but he poured it anyway. It was like a traditional offering, encouraging her to resume how things were. One day, he hoped, she would lift the glass and sniff it with a smile, the way she used to. \n\nRachel's eyes were fixed on the glass, her mind elsewhere. She was so quiet since coming back. It wasn't her shy quietness, it was different. Ben hated it. \n\n\"I'll put some music on,\" he said lightly. \"Any requests?\" \n\n\"Anything but jazz.\" \n\nBen paused for a heartbeat. \"No problem, I hate jazz.\" \n\n\"Me, too.\" Rachel winced with annoyance, wishing she didn't react so quickly. She knew Ben was curious about what happened, and she didn't want to give him anything to speculate about. \n\nAs Rachel predicted, it was very difficult for Ben to walk away from her statement. But he did, forcing himself to connect his phone to Bluetooth. Shortly after, his favourite rotation of 80's tunes began to play. \n\nReturning to the kitchen, Ben glanced her way, noticing how pale and tight her face was. He turned his back and concentrated on soaking the pots in steaming water. The kitchen was hot after hours of slow cooking. Ben didn't bother with aircon. He ripped his shirt off and carelessly discarded it. \n\nDrawn like a magnet, Rachel's eyes darted to Ben's bare skin. His tall back was to her; strong, smooth, muscled. A pleasurable tingle warmed her body. She wanted to touch him. \n\nIn an unexpected move, Ben abruptly turned and stared right at her. They held gaze, his challenging, hers stunned. Rachel came to her senses and looked away. But it was too late. \n\n\"Gotcha,\" Ben said, his tone darkly triumphant. It was the first word he'd ever said to her, and it triggered sexual feelings for both of them. \n\nRachel didn't dare look again, but it didn't matter. Ben had caught her ogling. It was obvious she wanted him, and now he knew something was up. \n\nStaring at her hands on the table, Rachel watched one of Ben's curl around her wrist, his thumb stroking the silver bracelet. \n\n\"Come on,\" he said softly, the comforting heat of him up against her. \"It's time to talk.\" \n\n\"I don't want to,\" she mumbled. \n\nBut she did want to. She wanted to tell him things she could never voice now that everything was ruined. She wanted to beg his forgiveness. She wanted him to talk to her, tell her things like he did before. But more than that, she wanted to touch him. \n\n\"You're not being straight with me, Rae,\" Ben murmured. \"We need to talk.\" His shirt was back on, as though to appear less threatening. He stood behind her, his arms on either side, his mouth by her temple. Rachel shivered responsively. \n\nIn a daze, she let Ben lead her to the couch. She sat beside him, slightly squirming with discomfort. Ben's eyes were on her face, with the effect of a heat lamp. She could feel her face warming under his scrutiny. \n\n\"I am going to ask you questions, and I expect complete honesty. If you don't want to answer, that is fine, but I don't want lies. Understand?\" \n\nRachel nodded, expecting him to accusingly fire away about Ray, ask her questions she couldn't answer, perfectly aware a lack of answer would be an answer in itself. She didn't have it in her to lie to him, anyway. \n\n\"Did that guy hurt you?\" \n\nRachel shook her head with an awkward shrug. She wasn't sure how to measure 'hurt', but she didn't want Ben to think she had been brutally tortured, either. \n\nBen's jaw clenched. \"He raped you, didn't he?\" \n\nIt was more a statement than a question, but it made Rachel feel sick. There was an uncomfortable moment earlier in the day, when she made a wry joke about having to tell her colleague, Meredith, the truth about what happened since they were rather close. \n\nBen asked straight up whether Rachel would tell Meredith anything he didn't know. It was clear he referred to the sordid little details of captivity that Rachel never talked about. She couldn't quite answer him. \n\n\"He didn't hurt me,\" Rachel numbly clarified, her heart thudding with nervous anticipation. This was the part where it came to the crux of why they couldn't stay together. She had already assembled his response in her mind: How could he possibly rape you without hurting you, unless you let him? \n\nBen took a deep breath. \"Do you want to be with me?\" \n\nRachel looked up from her hands with mild surprise. The first thought was very affirmative, but then she remembered her painful resolve. It was either 'yes, but...' or 'no, because...' \n\n\"I don't know,\" she answered, taking the coward's route. \n\nBen's face was tight but impassive. He seemed neither happy nor upset by her answer. \"Do you still find me attractive?\" \n\nRachel cringed. He had her there. \"Yes.\" \n\n\"Will you let me touch you, intimately?\" \n\n\"No.\" \n\n\"Why not?\" \n\n\"I don't know.\" I don't deserve it. \n\n\"Will you touch me, intimately?\" \n\n\"No.\" I don't deserve you. \n\nBen bit his lip as though working to solve a riddle. He wanted to get the truth out of her without asking questions that might make things worse. But she wasn't recovering, she was becoming increasingly aloof, and he couldn't take it anymore. ",
        "\"Does the idea of intimacy with me make you uncomfortable?\" he asked. \n\nRachel blushed and shook her head. Ben looked slightly appeased; his eyes warmly hopeful by the familiar red of her cheeks. The embarrassed colour he'd fucking missed like crazy. \n\n\"So, what if I wanted you to touch me?\" he pried. \"Do you find that idea unpleasant?\" \n\nRachel slowly shook her head, feeling rather discomfited by the way he so easily demolished her barriers. \n\n\"That's what I want,\" Ben softly confessed, gently stroking her hands. Holding her breathless stare, he began to unbutton his shirt. \"God, Rae, I need you to touch me. I won't do anything you're not ok with, I promise.\" \n\nRachel's eyes widened, distracted by the sudden exposure of his chest. Mesmerised by his alluring bare skin. So much for keeping a distance. \n\nRachel took a tentative breath to answer, but no sound came out. In the background, the song changed to a familiar thrum that roused hopefully feelings she never expected to experience again. \n\nRachel found herself holding Ben's intent gaze whilst her hands slowly laid against his chest. Just touching him sent shivers reverberating through her body and ignited the powerful chemistry they'd had from the beginning. \n\nThe song kicked off with a drumbeat, and Rachel remembered the tune as ardent with a bittersweet yearning. It dissolved all her reservations about letting Ben close. The artist's voice carried through the room, serenading their moment; encouraging her to explore Ben. \n\n'I could feel at the time \n\nThere was no way of knowing \n\nFallen leaves in the night...' \n\nBen's chest trembled under her hands, his own hands twitched and clenched on his knees with restraint. Feeling her heart race, Rachel stroked down his hard stomach, and back up his chest. Her small hands smoothed over his shoulders under the shirt, then slid down and around his waist. \n\n'More than this \n\nYou know there's nothing \n\nMore than this...' \n\nAching to be close to him, Rachel bit her lip and she slowly edged forward into Ben's lap so her hands could roam up his back. It felt so good to be against him. A strange, unexpected wave of blissful relief took her breath away and she managed to quieten a sob, but her arms travelled higher to loop around his neck and for a while rested there with her face against his neck, just holding him with closed eyes, riding out her emotions. The music helped. \n\n'Like a dream in the night \n\nWho can say where we're going?' \n\nBen was shaking, partially regretting the challenge he'd set himself. He was determined not to crack, but having her embrace him so sweetly, feeling her vulnerability so keenly without being able to touch her was pure torture. \n\n\"Rae, please!\" he uttered, his hands shifting then dropping by his sides; like a blind man desperate to touch what's out of reach. \"Please, can I kiss you?\" \n\n'More than this \n\nYou know there's nothing \n\nMore than this...' \n\n\"Yes,\" she breathed against his skin. But it was too good, too much, and the thin barrier that kept her emotions in check since the rescue suddenly cracked. Once again, she cried from happiness, but it was also incredibly bitter. \n\nBen held her tightly, determined to be the rock she needed. Once her breathing steadied, his hand snaked between them to cup her damp cheek. \n\n\"Shh, Rae, don't cry,\" he whispered, his own eyes dark pools of emotion boring into hers, before falling to her lush mouth. \"You're safe, now. I've got you. I'm not going anywhere.\" \n\nSobbing, Rachel lightly shook her head, still cherishing his touch. He didn't know, and she couldn't explain. \n\nFeeling words lacked effectiveness, Ben kissed her fiercely, his other arm crushed her against him as though he wanted to absorb her. He hoped she wouldn't be frightened by his raging hard-on, but there was nothing he could do about that. It swelled to life the moment they sat together. \n\nIt took Rachel a while to lose the passivity, but after enjoying Ben's ardour for a few minutes she felt an urge to match it. The song's presence dimmed to a lull in the background as Rachel found herself fully immersed in Ben's desire. \n\nBen's lips feverishly moved across her cheeks, kissing stray tears before returning to her hungry mouth. He groaned when her lips hotly parted, and he felt her moving restlessly, instinctively in his lap, a slow rise-and-fall momentum that mimicked something they both desperately wanted. \n\n\"Can I undress you?\" he panted. \n\nAlso panting, Rachel quickly nodded, opting for escapism. Ben's hands made quick work of her shirt, moving about her body in a light frenzy. Cool air chilled Rachel's breasts as her bra came away. Ben's hand curled around her hip and squeezed indulgently. \n\n\"You don't mind?\" he said urgently, the question more courtesy than genuine. He would fucking die if she pulled out now. \n\nWith a shy smile, Rachel gave her answer by leaning back to playfully pull Ben's shirt from his shoulders. \n\n\"Oh, thank God,\" Ben said huskily, quickly shedding his shirt, his eyes on her pouting breasts. \"Do you want a moment to perv, before I move in?\" he teased, his dark eyes alight with wicked excitement as Rachel blushed painfully. \n\n\"Come here, gorgeous,\" Ben purred, drawing her into a tight embrace, crushing her soft breasts to his hard chest. His lips lightly caressed her temple, then his teeth tugged her earlobe. He warmly muttered, his breath sensitively triggering her erogenous zone. \"I have you now, my precious girl.\" \n\nBen's words weren't flowery for Rachel's benefit. Though consoling, the statement was raw, gritty emotion uttered more for his own self-comfort. \n\nRachel sighed without objection, one hand settled across his broad shoulders, the other idly slid up the back of his neck to clench through his hair. Everything felt soothingly wonderful. It was the perfect embrace. \n\n\"I can easily hold you like this all night,\" Ben said heavily, finally drawing back to look into her eyes. Her delicious breasts pressed to his chest was sending him over. \"But I want so much more.\" \n\nSilence fell between them, until Rachel realised he was waiting for an answer. As quickly as she'd dismissed her doubts and sad resolve, they suddenly resurfaced. Indulging in an intimacy she ached for would be a mistake, she knew. There was no gently peeling off this Band-Aid. And then there was what he didn't know... \n\n\"I can't,\" she whispered, even if seconds before she certainly could. When she tried to lower her head, Ben tilted her chin high. \n\n\"You can, because you want to.\" \n\nRachel stubbornly shook her head. Everything was ruined, and the enticing situation was pure masochism. She squirmed, remembering he might hate her later. \"Let me go.\" \n\nBen didn't answer, but silently refused to release her. He could feel her heart thudding so powerfully against his chest that it could have been his own heartbeat. It was like they were one heart beating together and there was no fucking way he would retreat from it. \n\nWhatever Rachel's objections were, they had nothing to do with physical discomfort, because her body glaringly emitted every reaction that signalled an intense desire for him. He knew her body. She still wanted him. \n\nIt was her racing heart, her eager panting, the small moans she tried to suppress but still managed to escape from between her teeth. The insane river of juice Ben knew flooded between her legs. \n\nBen didn't know whether to suck her breasts, taste her delectable nipples and feel her heart pound against his chin, or kiss her until she was truly breathless. He wanted to bury his face between her thighs and devour her soaked desire. Overall, he wanted to do things that would make her moans impossible to conceal. \n\nThe chemistry between them was overwhelming, and Rachel felt it clouding her resolve. As she tried to retreat, Ben tightened his arms. \n\n\"No,\" he growled against soft, pastel-pink lips that were parted with anything but discouragement. \"No, Rae. I know you want me, and if you don't, then you'll have to be more convincing about it.\" \n\nThen his mouth smothered any protest she might have expressed, but there was none. The fire in Ben's dark eyes and the heat of his words destroyed the last of Rachel's willpower, and she whimpered her defeat in a sound that was more relief than resignation. \n\n\"Tell me,\" Ben hoarsely demanded. \"Tell me the truth.\" \n\n\"I love you, Ben,\" she whispered, their foreheads resting together. \n\nThere was a moment of silence while Ben processed the unexpected disclosure, the powerful way it affected him. \"Say it again.\" \n\n\"I love you,\" she mumbled, rubbing her cheek against his. \n\nElated, Ben felt like riding on his luck to see where it would take him. \"I want you to be my wife. I want you to have my children.\" \n\nWith a tired smile, Rachel slightly leaned back to tentatively press his hand to her lower belly. \n\n\"W-What?\" Ben jerked back, struggling to discern from Rachel's face whether it was a sweet gesture for the future, a playful joke, or... \n\nGravely returning his questioning stare, Rachel's gentle eyes were unusually solemn. She looked extremely apprehensive, even afraid. Her unease made Ben deliriously happy, because it meant she was serious. \n\nBen's shock morphed into a giant grin. \"No fucking way. Oh, my God.\" \n\n\"It's very early,\" Rachel said quietly, a little unsettled with nervousness. \"Brian said everything was fine so far. But it's early. And I mean...it's definitely yours... But I don't expect you to be-\" \n\n\"Oh, no, no, no.\" Ben's finger immediately pressed to her lips; demanding silence. \"Don't you dare, Rae.\" He kissed down her neck, her right breast, continuing down toward her belly, his face aching as his grin widened. \n\nRachel shyly watched Ben press a gentle kiss to her abdomen, smiling blissfully against her soft skin. Eventually he sat up to look at her. \n\n\"You know what this means, don't you?\" he said, his eyes glowing with mischievous joy, his hand lightly caressing her breasts. \n\nShivering as his thumb brushed a stiff nipple, Rachel uncertainly shook her head. \n\nBen grinned wickedly. \"You can't get out of this one, cutie. You have to marry me.\" \n\n\"I...I...B-But-\" Rachel stuttered, and Ben laughed. \n\n\"I'm not proposing right now,\" he reassured her. \"Just be warned, it's going to happen.\" \n\nUnable to help himself, one hand sneaked down to trace her skin with his fingertips. There was life in there; his baby was growing inside her, and he couldn't be happier. It was fucking perfect. In a selfishly conniving, misogynistic way, he was glad there was something to tie them together. At the very least, it would be more difficult for Rachel to ever leave him. \n\n\"So, you're not upset?\" Rachel mumbled. \n\n\"Maybe a little, because you waited to tell me. Jesus, Rae,\" Ben shook his head. \"I knew you were hiding something from me, but I thought...\" he trailed off, not really wanting to finish the sentence. But he persevered. \n\n\"I thought it was abuse; that you couldn't stand my touch because of what was done to you,\" he muttered, his eyes burned with vicious loathing when he remembered fighting Ray, how lethally strong the other man was. \"It's why I asked you to touch me, first.\" \n\nHe sighed when Rachel didn't comment. \"I wanted to give you time, but you were just growing more distant, I decided to wait until the weekend to confront you but... I caught the way you looked at me tonight,\" he admitted, with a challenging stare that dared her to deny it. \"I couldn't turn my back on that.\" \n\nBen stroked her moist cheek. \"But you couldn't have kept this secret for long. There's no way I wouldn't have found out, silly girl.\" \n\n\"Oh.\" \n\nBen suddenly laughed. \"I can find humour in it now, but if I saw your belly growing whilst stalking you from afar, I'd be fucking livid.\" \n\n\"I understand,\" Rachel said in a small voice. \n\nSo distraught by lingering thoughts of betrayal, she never thought her plan through; it was too painful to contemplate her life without Ben. But now she realised she could never have deprived him of a relationship with his child, or vice versa. That would have been more unforgivable than cooperating with Ray... \n\nBen cleared his throat to recapture her attention. \"I also can't remember the last time I was so fucking happy.\" \n\n\"Oh,\" Rachel blushed, then slightly shook her head. \"Did you just say you would stalk me?\" \n\n\"Only until you're back in my bed,\" Ben chuckled, and Rachel couldn't tell if he was joking. \"Just when I think I couldn't possibly be happier, you...\" he took an awed breath, then ducked back down. \n\n\"Ben!\" Rachel giggled tiredly as he pressed butterfly kisses across her skin. \n\n\"Hey little man, or little lady,\" he teased, resting his ear against her. \"God, I hope it's a boy.\" \n\nWith her hand through his hair, Rachel tensed with disconcerted surprise. \"Why?\" \n\nBen planted one last kiss on her stomach and grinned up at her. \"Because if it's a girl, I'm going to be a fucking nightmare to any punk who dares look at her sideways.\" \n\nRachel smiled tremulously as Ben kissed up her stomach, her neck, shifting up to press his lips to her temple, his hand gently squeezing her breast. \"So...\" he cooed in a completely different tone. \"How far along are we?\" \n\nSomehow, Rachel knew exactly what he was asking. \"I don't really know,\" she wriggled restlessly, feeling her cheeks heating under his shrewd perusal. \"It can't be far.\" \n\n\"Well...\" he purred into her neck; his finger drawing, intimate circles around her nipple, toying with the soft peak. \"I'm not going to risk anything until we check everything's ok first.\" \n\nRachel breathlessly nodded, uneasily aware her pussy was soaked and throbbing for him. \n\n\"Tomorrow, I'm taking you to the doctor. Is that ok?\" \n\n\"Um, yeah,\" Rachel said shyly, summoning the courage to ask a follow-up question. \"Is it so you can have sex with me?\" \n\n\"You sound like a schoolgirl,\" Ben laughed. \"It's so we can have sex. I'm sure it's fine, but I'm not risking a miscarriage. At the same time, I'm fucking desperate for you.\" \n\n\"It could still happen. I mean...\" Rachel slightly edged back, remembering the tranquiliser, having sex with Ray, the strange drug that knocked her out, the insane levels of stress; all troubling things she endured whilst newly pregnant. \n\n\"No.\" Ben pinched her chin. \"Don't say that. Whatever happens, we'll deal with it. But as things stand...\" He was now gently toying with her ring finger. \"You're carrying our child, and we're getting engaged. And I'm so damn happy, I might explode.\" \n\n\"A-Alright,\" she said uncertainly. \n\nThere was no more talking, Ben's mouth was insistent on hers, guiding her lips open, his hands finding their way to her chest almost on instinct. \n\n\"Is it bad of me, that your edginess turns me on?\" he breathed, capturing her mouth again before she could answer. \n\nRachel nodded, though she was dizzily smiling. \n\n\"Mm-Hm,\" Ben smiled back, his eyes suddenly wicked. \"You know...\" he trailed a finger down her collarbone, over the curve of her breast. \"There are other things we can do.\" \n\nRachel found herself nodding eagerly like a bobblehead. She definitely wanted to do those things. \n\nBen moved over her, straddling her on the couch to cup her face with both hands. Pressing a soft kiss to her lips, he peered into her eyes. \"You never stopped being mine, you know.\" \n\nRachel nodded again, her eyes big and vulnerable. That look did things to Ben's libido that he couldn't ignore. \n\n\"Jesus Christ there are things I need to do to you,\" he muttered, still cupping her face. \"Can we fool around?\" \n\n\"I...\" she hesitated, looking scared and excited. \n\n\"Nothing invasive. Just a taste,\" he begged, gently pushing her shoulder so she lay back. \n\n\"O-Ok...\" she replied, embarrassed though obviously keen. \n\nRachel couldn't believe a few minutes ago she felt like her world was ruined, and suddenly she'd swerved back to an incredible happiness, like a professional surfer magically recovering from a glitch and managing to say upright, skimming an insanely tall wave. \n\nRachel's thought process dissolved when Ben's warm mouth gently explored her, his large hands on her thighs, lightly pressing to spread her legs. She sighed, moaned and slowly bucked against his face. It was the best feeling, there was only one better, and they couldn't indulge in that activity yet. \n\n\"Oh!\" Rachel gasped, her voice alarmed but ecstatic when Ben's finger sinuously slid inside her, his thumb slowly caressed her clit. \n\n\"I promise not to offend anyone,\" Ben hoarsely joked, fingering her with his middle finger. She was so soft, wet, tight and tasty. It felt so good to touch her again, to make her respond to him. Her body spoke to him, communicated her desires, when she refused. She was fucking saturated for him. \n\nA brisk pull on his trackpants, and his cock burst free, heavy and hard. It ached; he belonged inside her, but he couldn't do that right now. \n\n\"B-Ben...\" Rachel moaned, then her mind went blank when Ben licked her clit, his finger firmly embedded in her pussy. \"Oh...Unnnh...\" \n\n\"Come on, babygirl, come for me,\" he groaned, devouring her delicious wetness until she arched and cried out. \n\nRachel's orgasm was all-consuming, deliciously enhanced when Ben's hands slid under her buttocks and firmly squeezed. Panting, she sank back into the couch, one hand on her face. \n\nBen was on his knees, watching her, rapidly jerking his cock. \"Rae...\" he said huskily, on the brink of ecstasy. \n\nThe doorbell rang. \n\n\"Fuck off!\" Ben shouted instinctively, startling Rachel. \"Shit...I hope it's not your parents.\" \n\n\"Me, too!\" Rachel gasped. \n\nThey turned to the frosted section of the front door. There was more than one silhouette hovering behind it; collective male voices. \n\n\"Oh, fuck, no,\" Ben moaned. \"Why, me?\" \n\n\"I'm going upstairs,\" Rachel breathed, slipping from the couch and silently fleeing to safety before Ben could stop her. \n\nStill shaking with the need to cum, Ben forced his hard cock into his pants and stalked to the door, quickly wiping the wet from his face before wrenching it open to glare at the men on his doorstep. \n\n\"Worst timing!\" He forebodingly shook his head. \"You couldn't call or text first?\" \n\n\"You haven't been answering!\" Kevin countered, slightly taken aback by Ben's perspiring bare chest. \n\nA chortle escaped Toby. \"Oh, my God,\" he said under his breath; his gaze suddenly lifting to clash with Ben's. \n\n\"What?\" Kevin and Nick asked. \n\nBen glared, daring Toby to point out his giant erection. \n\n\"Nothing.\" Toby innocently raised his eyes to the top of the doorframe. \"Worst timing, I guess. Here.\" \n\nStill staring above, he blindly handed Ben a basket. \"Tracy made some stuff for Rachel.\" \n\nBen frowned, though grateful for something to hide behind. \"Is that a 'Get Well' card?\" \n\n\"Hey, we all signed it,\" Nick said dryly. \"Figured it was the best method to convey well-wishes, in case talking to us all at once would scare her.\" \n\n\"How very thoughtful,\" Ben said graciously, still with a burning look in his eyes that said: 'Fuck you all for being here'. \n\n\"How's she doing?\" Kevin asked. \n\nBen shrugged impatiently. \"Really well, actually. We just had a breakthrough of sorts.\" \n\nToby stifled another sleazy chuckle. \n\n\"Alright,\" Nick nodded, shooting Toby an unimpressed look. \"Great to know you're both alive. Give her our love. Call us whenever.\" \n\n\"Thanks,\" Ben said with relief, pulling Kevin's sleeve to draw him back. \"I fucking owe you, man.\" \n\n\"And I won't let you forget it,\" he smiled. \"Only a matter of life and death would make me wear that fucking hat.\" \n\n\"You passed that test of friendship with fluro colours,\" Ben said, his lips curved into a rueful smile. \"I'll find a way to make it up to you.\" ",
        "\"Damn straight,\" Kevin lightly punched him. \"I'd hug you, but you reek of sex. Carry on,\" he said in a military tone, and followed the others before Ben could offer a comeback. \n\nBen peered suspiciously after them, ensuring they were definitely gone, before quickly slamming the door and dumping the gift basket on a side table. He was still painfully erect. \n\n\"Baby rabbit! I'm coming for you!\" he called in a threat of sorts, desperately sprinting up the stairs. \n\nThe door almost came off its hinges when he forcefully opened it, his breath caught at the sight of Rachel sitting up against the headboard, nestled under his blanket. Her glossy auburn hair was sexily ruffled, perfectly framing her sweet face, blue-green eyes huge and inviting. \n\nThe tentative anticipation on her face always drove him wild; an expression encompassing a mix of innocent, sultry, nervous and eager. And her soft, pink mouth that made him think all kinds of wicked thoughts... \n\nRachel nervously licked her lips, and Ben lost his grip on the doorknob. \n\n\"Jesus Christ, Rae,\" he thickly muttered, urgently fumbling with his pants. \"I fucking love you.\""
    ],
    "authorname": "Bellie444",
    "tags": [
        "assassin",
        "dominant",
        "kidnapped",
        "love",
        "non-con",
        "noncon",
        "obsession",
        "prisoner",
        "romance",
        "stalker"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/voyeur-ch-10"
}