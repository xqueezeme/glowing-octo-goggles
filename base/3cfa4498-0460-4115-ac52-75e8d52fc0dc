{
    "title": "Imperius Ch. 03",
    "pages": [
        "To my returning readers: Thank you for bearing with me through this long delay. The scope of the story has grown exponentially since I began, as has the cast of characters. I'm grateful for all the thoughtful feedback I've received thus far, and I hope to read more. After many revisions, here is the third chapter of Imperius. \n\nTo any new readers: While I do attempt to expound on the universe and the characters here, this story will make considerably more sense if you read the prior chapters first.\n\n~*~\n\nLilah shifted, the clinking of her shackles accompanying the motion. She winced as the rough metal chafed at the already tender flesh of her wrists. The sensation summoned memories of being bound in an imperial slave caravan, ignoring the jeers of staring enemy soldiers. The last time she had felt so sore, it was due to a combination of rough handling and forced immobility as she was bound, naked and exhausted, amongst her fellow captives. This time the cause was somehow more humiliating\u2014she had pulled at her chains in the throws of unwanted passion, pinned beneath the power and the dark allure of her enemy.\n\n\"You shouldn't struggle so much next time, Lilah,\" said Magnus, Praetor of the Imperius, with the dry humor that surprised her so frequently. He circled her, stern and imposing, but there was subtle thread of mischief in him, lurking in the curve of his lips and his potent gaze.\n\nHe had closed the view screen of his sky-ship, casting them in shadow and rendering him the only clear thing in the room.\n\nIt had been only the evening before that he had sent for her, a captive in chains, but it felt like an eon, offering no rest from the fear and treacherous desire he invoked in her.\n\nLilah knew she ought to hate him. Her captor, slaver, would-be destroyer of her country. But his attention was a heady thing, like the air of a thunderstorm, dark and entrancing. She found she couldn't always think under the weight of it. He had only to come near, and it was as though a mist descended over her thoughts, and warm desire flickered over her skin like flames, golden and feather soft. He stood, bare chested, and her own impulse to touch that bare, bronze skin made shudders ripple through her being.\n\nHe knows, she thought. He controls the speed of my pulse like the moon pulls the tides. There was a certain heat to his willpower, at once both predatory and playful.\n\nShe was kneeling on the floor before him, nude and vulnerable, her hands pulled behind her and her head lowered. Her sunlit curls took on a darker cast here, like polished gold falling in tumbling waves down her bare shoulders.\n\nHe touched her cheek, lifting her eyes to his.\n\n\"There are places in Drace for slave training. They are\u2014by all accounts\u2014unpleasant.\" His eyes, a stormy, hypnotizing grey, held hers in thrall. \"I would spare you that, Lilah. But in return, you'll need to prove to me that you're responsive to my instruction.\" He paused, his eyes dark. \"Unhook my pants.\"\n\nShe stared, baffled. Her hands were still bound behind her.\n\nHe raised his eyebrows at her, \"Your mouth.\"\n\nHer mouth.\n\nShe did try, ashamed and awkward as she felt doing so. It felt like minutes, and he waited patiently all the while, watching her lips fumble around the fabric and the clasp. It wanted finesse, knowing when the metal hook had been drawn inward enough to loosen and detach.\n\nAnd she couldn't see, damn it. It felt impossible, sisyphean.\n\nMagnus gazed at her impassively.\n\nShe took a steady breath, trying to silence her frustrated anger by reminding herself how much more humiliating things could be, to balance the knowledge that it was wrong with the awareness that it could be much, much worse.\n\nShe returned to the task, tuning out every other thought. When the hook broke free at last, she watched his phallus rise against the fabric beneath. He lifted it, held it out to her. She expected it to bob awkwardly, but it didn't. It stood, stiff and swollen before her, both intimidating and strangely beguiling, seeming larger than when she had first seen it. Purple veins stood out against the golden bronze skin, and she felt a delirious impulse to trace the lines of them.\n\nThe thought made her thank the heavens for her bindings.\n\n\"I trust you know what's expected of you?\" he asked, his tone dryly solicitous, with that teasing undercurrent that seemed so strange alongside his superficial austerity, \"Or do I need to instruct you?\"\n\nShe promptly flushed, but met his eyes, shaking her head. He was still testing her, framing much of this as a favor to her, as generosity she needed to earn. He knew it was wrong, even owned it, but he used it all the same, gauging her ability to endure the indignity.\n\nIt wasn't easy. As much as she knew that it could be worse for her, there is a vast distance between a thing not being so bad as it might be and a thing being good. Knowing it and acceding anyway was both provoking and humiliating. He was baiting her defiance.\n\nThe thought unnerved her.\n\nShe lowered her lips to the edges of his member and kissed the skin tentatively. The appendage responded, swelling still larger. Her eyes darted to his, and his gaze was eloquent with hunger. \"Use your tongue, Lilah,\" he ordered, his voice husky.\n\nPerfidious desire stirred inside her, and it was a blessing to lower her head again. She touched her tongue to one of the veins, tracing a path against his skin. His hand came down on her hair, as heavy a weight as the incorporeal force of his will. His cock followed her movements as though it sensed her. It might have made her feel powerful if she weren't so keenly aware of being guided and gauged. She bathed his skin with her tongue, responding to silent commands until she felt nearly desperate with the need to please him, to satisfy the hunger she still felt radiating from him.\n\nHe groaned then, and pushed himself through her lips and steadily further into her mouth.\n\nHer throaty whimpers seemed only to incite his passion to a hotter ferocity, and he drove his cock deeper until she sputtered. Then he eased, long enough to allow her to regain her composure, and then began again. The texture of him was soft and slick against her tongue, and yet the force of him against the roof of her mouth was hard and unyielding as stone. The whimpers rose again and again, and each time he buried his hands deeper within her hair, guiding her head with cruel precision as his thrusts gained speed. It seemed to go on and on, wherein one moment, she found her bearings and moved with him, and then the next where it was all she could do to steady her breathing.\n\nWhen at last his taste flooded her mouth, salty and rich, he arched his head back, and his hands in her hair were vice grips.\n\n\"Swallow it,\" he instructed, lifting her face to his. His fingers played along the skin of her neck. She obeyed, her eyes locked with his. The warmth of it slid down her throat, viscid and heady.\n\n\"Good girl,\" he whispered, his voice warm with approval, and she lowered her lids against threatening tears. He kissed her lingeringly, with that slow relish that made her feel shamefully, terribly wet and wanting.\n\nHe moved around her, undoing her bonds with the same overwhelming intimacy, bringing her hands up in front of her and massaging her wrists languorously.\n\nHe finally drew away, giving her the space to be aware of something other than him for the first time in hours. She had barely taken a breath of air before she saw something that sent a cold shock through her. Near the doorway, lurking in the shadows, stood the largest man Lilah had ever seen, silent as a golem, and just as emotionless. His dark eyes gleamed, watchful and unreadable.\n\nLilah let out a gasping little yelp and snatched up the sheet on the bed to cover herself, scrambling around the other side and against the wall for good measure.\n\nMagnus was gazing at her, half dressed and unmistakably amused. \"You spent days naked on a slave caravan being stared at by half the legion,\" he said, \"And now you panic at one new observer?\"\n\nShe flushed, embarrassed in every possible sense, \"I didn't know he was...watching,\" she said, her voice sheepish.\n\nMagnus continued to study her as he dressed, his eyes full of wicked promises, \"Another thing to accustom you to,\" he said, his mouth curving in that barely perceptible, knowing way.\n\nMagnus glanced at the giant. \"Take her to Saphir. When he's finished, bring her to the legate's tent,\" he said. The larger man nodded in acknowledgement, and then his eyes refocused on Lilah, as though watching her for signs of flight. She wouldn't have believed it were possible for someone to make her feel more unnerved than Magnus did.\n\nMagnus came over to her again, and lifted her chin. \"Daegon's function is to protect and guide you. Obey him, but don't be afraid.\"\n\nHis kissed her once more, tilting her mouth to his by her chin. The kiss was dark and deep and lingering, a velvet abyss of need.\n\nAnd then he left, throwing his scarlet cloak over his black ballistic armor as he went.\n\nShe was alone with the giant\u2014Daegon\u2014and the two stared at one another for several long, silent moments. She could see him clearly now.\n\nHe was bare chested, brazenly exposed. His skin was a deeper shade of bronze than Magnus'\u2014a russet color with such a vivid, red under-glow it was as though there was firelight beneath. His hair was long, but drawn together behind him into a tail with several bound sections against his bare back. The hair of his eyebrows was thick and dark, and slightly pointed, as was that of his short beard.\n\nThere was something about him that was nearly bestial, a fierceness in his eyes, though his angular features were handsomely formed. Lilah had known a man in the Illythian military of comparable size, she realized then, and yet that man's immensity had been subverted by the kind solemnity of his demeanor, with a bear-like physique that only took on a ferocity during battle. The man before her was no bear. He was angular and hard, a giant jungle cat.\n\n\"Follow,\" he instructed, his voice deep and flat.\n\nShe followed.\n\nHe led her through the door, and into corridors nearly as dark as the Praetor's quarters, lit with gold cast lamps. She clutched the sheet more tightly around her as she trailed alongside him, and she was relieved not to find herself surrounded by staring eyes outside of the room.\n\nLilah spared her guide a few wondering glances. He was puzzling, wearing pants and boots in the Imperial style, yet without shirt or any other ornament, and his hair and coloring marked him as a Gauthrien nomad.\n\nIt wasn't so strange to think his tribe might have been defeated and enslaved, but it was strange to think he had been given a position as a guard without adapting to Imperial fashion and manners. His demeanor would have been suited to a battle raid in the desert, but not on an Imperial sky-ship.\n\nAt each turn in the corridor, she hesitated for a fraction of a second, peering around the corner to check that it was empty. Upon the third such delay, the giant made a sound between impatience and sudden decision, and actually lifted her at her waist and tossed her lightly over his shoulder. Even in her startled state, she realized immediately why he had done it. His long-legged stride after this took them at three times the pace.\n\nIt was a miracle that the sheet she clung to stayed on in any capacity, however meager that capacity was. He continued down several more corridors, disorienting her with the swiftness of his pace. When they at last turned from the corner and into a room, Lilah scarcely realized it.\n\n\"Daegon, what...,\" a voice broke through her befuddled state, sounding vaguely alarmed, and then exasperated. \"Will you please put her down?\"\n\nA sudden, dizzying movement, and she was set on her feet. It took her a moment to find her balance, and when she did, she hurriedly drew up the sheet again so that it covered her properly.\n\nBefore her stood a young man scarcely older than her. His skin was a honeyed brown, and his hair\u2014silken and softly curled\u2014was a lighter shade of the same color. His eyes, in vivid contrast, were a deep, placid blue, and unutterably gentle.\n\n\"Deus,\" he swore softly, still exasperated. Then he looked into her eyes, his voice warm with compassion, \"I'm sorry.\" He came around to her side with a fluid caution, more worried\u2014Lilah believed\u2014about alarming her than anything. \"Please don't be afraid. I'm here to offer what little comfort I can.\" He took her hand, guiding her gently to sit on a comfortable lounge chair. This room was brighter than the shadowed corridors they had entered from, marbled in white with golden accents, and washed with light.\n\nThe young man turned back to Daegon, who loomed in front of the doorway, arms crossed and unmoving. \"If you stay in here,\" the delicate young man said to the giant, his tone threatening, \"I shall ask for your advice on everything, from the shade of silk to use, to which scent to work into her skin, and you shall hear a great deal,\" he said, with a foreboding pause, \"About cosmetics.\"\n\nDaegon stared back at him, expressionless, for a long moment. \"I will stand outside,\" he said at last.\n\n\"Thank you,\" the young man replied, with a gracious bow.\n\nAfter Daegon had shut the door behind him, her rescuer turned to her. \"I thought you might be more at ease with him out of sight.\"\n\n\"Yes,\" Lilah admitted quietly, embarrassed but comforted.\n\nThe young man took her hand, \"I am Saphir,\" he said, his large blue eyes on hers. His wrists were decorated with golden cuffs, marking him as a slave. Otherwise he wore finely weaved ivory linen, at once sturdy and soft.\n\n\"Saphir,\" she repeated, a little shyly. \"Thank you.\"\n\nIf she felt grateful and shy then, it was nothing to what came next. Saphir had drawn her a bath, and she flushed to discover that he would be the one to groom her. For all her reluctance, the scented water was alluring, and when Saphir asked, \"May I?\" before gently slipping she sheet off of her, she nodded her acceptance. It was pleasant to have someone ask before disrobing her for a change. He washed her hair, and chuckled when she moaned with pleasure. She blushed, but happily, unable to regret the sublime relief of feeling clean.\n\nIt was her first bath since before her capture, and a luxury beyond remembrance. The imperial guards had washed the captives, in their chains, standing them in lines and unleashing a frigid torrent of water from hoses, while they laughed at their new slaves cringing and cowering under the onslaught.\n\nLilah was amongst those who tried to stand erect in the face of this humiliation and pain, but she did resort to covering her private parts against the force of the water, trying to ignore the leering gazes and jeers of the observing soldiers.\n\nIt seemed worlds away now.\n\nSaphir continued to wash her, massaging her skin as he did. His hands moved in soothing circles as he applied a scented oil that whispered of springtime. It was a tranquilizing fragrance, fresh and sensuous and familiar.\n\n\"That's waterlily,\" she said, her voice dreamy and pleasantly surprised by the realization.\n\n\"Something very like it. A scent of home can be comforting, or so I hoped,\" Saphir murmured.\n\n\"Yes,\" she replied, drowsy with pleasure, embarrassment forgotten.\n\nHe continued to pamper her, drying her off and massaging a cream of the same fragrance into her arms and shoulders. She largely forgot to feel shy in the process, so fastidiously did he avoid reminding her of her nudity.\n\n\"This is a strange luxury on a military ship,\" she ventured, while he attended to her hair, braiding and arranging portions of the curling mass with an artist's eye.\n\n\"It's not entirely military,\" Saphir replied. \"It's his.\"\n\n\"That's normal?\"\n\n\"Occasional. Imperial citizens and military officers alike often donate resources to the legion, but rarely ones as large as this. He had it commissioned to serve specifically as his base of operations. It was...a very grand gesture.\"\n\n\"He's very dedicated to the destruction of my country.\"\n\nSaphir said nothing. His gentle gaze met hers, and she felt so open, so naked before him that she looked away.\n\n\"Lilah,\" he said then, as though resolving something with himself. \"You must be careful, for your own sake.\" His voice was soft, \"Both in what you do and what you say.\"\n\n\"They say that harming slaves isn't\u2014,\"\n\n\"It's prohibited,\" Saphir acknowledged, his eyes solemn. \"Officially.\"\n\n\"I see,\" Lilah replied. She felt a flare of outrage, a burning ember of anger and distrust. How many times had slaves been abused, injured, or killed in this Imperius, with its delusions of enlightenment and perfect meritocracy, only for it be passed off as an accident or self-defense?\n\n\"You are new to this,\" Saphir said gently, \"And though it might not seem it, he will have started gently with you. But I believe,\" he added, \"That the Praetor intends to train you himself, and that will often mean punishment.\" He paused, and when he continued his voice was murmur soft, \"The fewer reasons you give him to deal those, the better. He will still punish, but it will be for his own pleasure, and that will be a better thing than his anger.\"\n\nLilah shuddered, and was quiet. The immensity of it, of being a plaything to the whims of her enemy, overwhelmed her.\n\nWhen she was cleaned and dried, Saphir styled her hair, and pondered over several colors of silk. Lilah was lightheaded with gratitude at the thought of once again being clothed.\n\n\"Valencian blue,\" he decided at last. \"I considered rose, to match the color in your cheeks, but your eyes make putting you in anything other than blue feel criminal.\"\n\nLilah felt dull gratitude at this. The pinkness he referred to was her humiliation, and she blanched to consider being dressed to match.\n\nFor all of his threatening Daegon with talk of cosmetics, Saphir used only a few. A touch of color to her lips, applied with a delicate brush. He darkened the shade of her lashes and gave her eyelids a hint of shimmering, golden green powder.\n\nWhen all was finished, Lilah studied herself in the mirror, her elation at the thought of being clothed evaporated, replaced with a new flavor of dreadful embarrassment. Her Botticelli curls were shaped with the same swirling flourish of elegant golden filigree that lined her bosom and her hips like a lover's caress. She was clad\u2014barely\u2014in the bluest of light blue, a sheer silk with no hint of green or purple to the shade.\n\nAround her wrist, the same golden filigree design marked her status as a captive, while her neck held the most conspicuous ornament of all\u2014a golden pendant shaped as a serpent, coiling with no visible end.\n\nThe Praetor's sigil.\n\nIn all, the ensemble balanced the lurid and the elegant, the design as risqu\u00e9 as the color was demure. It could not have marked her as a slave more clearly if they had draped a sign of the word around her neck.\n\nAnd not just any slave. A pleasure slave. Lilah's cheeks burned.\n\nSaphir sighed behind her, \"Well, we'll use pink another time,\" he said reasonably. At her nervous glance, his expression turned somber. \"Lilah,\" he said, turning her to face him, \"This is nothing to what we have to work with in Drace, but you'll still be the most startling thing they've seen in three years of war,\" he said. \"You're going to be stared at, some, and not all of it will be friendly.\" He took her hands in his, his eyes kind. \"Know that I know what it's like, and I will be there.\" He paused, and spared the door a glance, \"And the lummox out there, while thickheaded, is not the worst bodyguard that one could ask for,\" he added, with a grudging tone that, against all odds, made her laugh. She was surprised by the sound.\n\nHe smiled back at her, gave her hands a reassuring squeeze, and went to get the lummox's attention.",
        "The \"they\" Saphir referred to turned out to be the entire Imperial battalion.\n\nHe led her through more corridors\u2014and Lilah realized as they went that the sky-ship seemed designed to be deliberately confusing, and not just ineptly conceived, as she had first thought.\n\nIt was not a comforting realization. There were only two purposes she could think of for such an endeavor, to confuse an intrusion, or an escape. She wasn't sure which scenario was more frightening to imagine, but neither frightened her so much as considering that the ship had been actually built with such likelihoods in mind.\n\nWhat had she gotten herself into?\n\nA ramp descended before them, slowly, and as she stepped out in view of the encampment, she felt a hundred eyes on her.\n\nThe Praetor, Lilah thought\u2014wryly and without surprise\u2014was the sort of man to throw a new swimmer into deep water before they knew what to make of it.\n\nWhat did surprise her was seeing the same bone-deep weariness in the eyes of the Imperial soldiers that she knew so well among the soldiers of the Illythian regiment. These troops had initially been promised a brief campaign in Illythiel, where the technology was decades behind their own.\n\nMore importantly, the Imperius had believed that Illythiel was too fixated on honor and chivalry to be particularly adept at tactics. They were wrong.\n\nIllythiel had proved to be more cunning and inventive than they had ever anticipated. The war had barely begun when they had crafted mechanical men, goliaths towering over the battlefield, that crashed into the enemy ranks and smashed the smaller Imperial sky-ships to bits. They had introduced other innovations as well, devices that drew the Illythian mists to their forces and shrouded both their approach and retreat in mystery and confusion.\n\nMost of those they passed stared, some lascivious, some hostile, and almost all of them exhausted.\n\nShe was nearly relieved when Daegon lifted a tent flap open, guiding her through.\n\nLilah stepped inside and found herself facing the sudden attention of a bevy of imperial officials.\n\nDeep water, indeed.\n\nThere were more than a dozen people in the tent, each clad in the armored regalia of the Imperial military, and divided into four distinct groups. At the forefront of each entourage stood a Praetor, each of them marked by a crimson cloak. Each blazed a force of personality, the precise and stern charisma of military command.\n\nOf course, there was Magnus. He stood in the far corner, arms crossed, his figure drawing her gaze with his primal magnetism. His eyes moved over her, languid and smoldering, sending warm, unwanted ripples of embarrassment and desire through her.\n\nShe hated him so.\n\n\"I know you think it's a mistake\u2014,\" the one nearest to her was saying when she had entered the tent, and went silent, turning at her entrance. Only slightly less tall than the giant Daegon at her side, he had deep, dark eyes and skin like dark umber, contrasted elegantly by white armor. Of all of them, and all the other Imperials she had met, he alone wore something so pale, accented by gauntlets and greaves the color of polished gold. His face was a harmony of angles and curves, the hard square of his jaw giving way to the sculpted roundness of his lips and cheekbones.\n\nHe looked grand and almost knightly in an ostentatious sort of way, and as afraid as Lilah was of her breach of decorum, she realized that she was not quite afraid of him.\n\nThe same could not be said for the others.\n\nThere was a man with hair colored to emulate burnished gold, and flashing emerald eyes. He wore a brooch on his red Praetor's cloak that depicted a rearing, golden lion on a black backdrop. His gaze was haughty but acute as he looked at her, his arms crossed over his chest.\n\nOn another side stood a woman of statuesque proportions, aloof and regal. Lilah had never seen a colder beauty. If she had been asked to conjure a vision of winter embodied, this woman was what Lilah would imagine. Her skin was polished alabaster, pale to the point of translucence. Her hair was raven, so dark it hinted at blue, and gleamed like obsidian. Her eyes were a pale silver gray, opaque and emotionless.\n\nLilah was awestruck, lost in her icy glamour.\n\nWhen she did tear her gaze away, it was only for it to fall on the most alarming thing she'd ever seen outside of a battlefield. Lilah gasped and stepped back, and unthinking, grasped for a handhold.\n\nA panther.\n\nThere was a panther in the tent.\n\nIt sat placidly beside the winter goddess. Its fur was the essence of midnight, sleek and gleaming, and so black that Lilah first mistook it for a trick of the darkness. Its amber eyes shifting to jade in one flicker of light and then back again in the next. It exuded silent power, a quiet inner ferocity that, for Lilah, conjured ancestral memories of jungle shadows and sounds in the dark.\n\nThe woman, her expression as empty as glass, rested her hand on the panther's head. The motion stirred Lilah from her shock and she found herself gripping\u2014of all things\u2014Daegon's massive wrist. The giant was looking back down at her, something unreadable glinting in his eyes. She had a sneaking suspicion that it was amusement.\n\nShe let go of his wrist. Somewhere in the tent, someone chuckled.\n\nSaphir, on her other side, guided her to a point beside Magnus, just a fraction behind him. She felt curious eyes on her and kept her gaze lowered, trying very hard not to think about feline shadows leaping from the darkness.\n\nShe lowered her head, and she did not have to feign that demure impulse now. Her cheeks felt as hot as they had when she had noticed Daegon in the shadows. The giant stood near her shoulder, and she was strangely grateful for his company. As frightening as he was on his own, he was like a blockade against the Praetors' attention. It didn't eradicate it, but she felt small enough in his shadow that her sense of it was diminished.\n\nAll around her, she could feel the energy of the space, tense, curious, and wondering.\n\nIt made her want to bolt.\n\nMagnus cleared his throat, \"You were saying, Ajax?\" he asked courteously.\n\nThere was a pause. \"Yes,\" the other man responded, straightening. \"I was saying,\" he said, with the tone of one trying to reclaim a train of thought. He placed his hands on the war table in the center of the tent. A holographic map floated in the air before him. \"My men need a respite, Magnus.\"\n\n\"Don't we all?\" The blonde man put in, with the tone of mingled boredom and amusement so instinctive to aristocrats. \"Back in the capitol they romanticize this Island, for its fixation on courtesy and valor and its lush scenery.\" He nonchalantly rested his hip against the edge of the war table. Lilah kept her eyes averted, but she could feel his eyes sweep over her as he spoke, curious and arrogant. \"We expected a temperate climate and a swift victory. What we found was this dreary, cloud drenched abyss. Temperate only by virtue that the damp can do little more harm than seep into our bones and rust our weaponry.\"\n\nHe straightened and began to circle the war table.\"After three years of this exhaustive campaign, Who amongst us couldn't do with a little distraction?\"\n\nHe neared Lilah, then, and she tensed at the unexpected attention. Lilah had believed they were moving on from her arrival, but as he came to a stop before her, she could feel his eyes fixed on her face. He was taller than she had expected. At first sight, he had seemed one of the less obtrusive figures in the tent. Not so at this distance. \"Speaking of which,\" he said, \"Who is this pretty little thing you're parading in front of us, Magnus?\" he asked, a sardonic edge in his tone. \"You don't look much like a soldier,\" he added, addressing Lilah.\n\nShe glanced at Magnus, uncertain what to do. He simply nodded, his expression vaguely amused by the turn in the conversation.\n\n\"I'm a medic, my liege,\" she replied, lowering her head in deference.\n\n\"The one who captured you,\" Cato said with certainty. He spoke to Magnus, though his focus stayed on Lilah, and his mind worked behind his arrogant gaze.\n\n\"Just so,\" Magnus said, bowing his head in acknowledgement.\n\nLilah was taken aback to hear the event phrased in such terms. While it was true her commanders had approved of her actions\u2014eventually\u2014after learning who it was she had brought back to camp that day, Lilah herself had only seen a dying man. Someone she could help.\n\nCato chuckled. \"In the end they would have been better off if she had not done so\u2014how many Illythian soldiers did you claim you killed during your escape, Magnus?\" He asked.\n\nThough there was no emphasis on the word \"claimed,\" the tension in the tent deepened at the implication.\n\n\"Seven,\" Magnus said, with an easy amiability, \"I will not pretend, however, I found the task an easy one.\"\n\n\"Remarkable,\" said Cato, in a tone too careless to do the word credit. \"Tell me.\" His eyes narrowed on Lilah, gleaming with naked cunning. \"Do you regret saving him?\"\n\nLilah's skin felt cold. She hesitated, hoping someone would say something to interrupt, to free her from the spotlight. No one did.\n\nSaphir's cautioning echoed in her thoughts. Defiance might be satisfying in the moment, but it accomplished little.\n\n\"I could never regret saving a life,\" she said, her lips numb as she maintained a calm she didn't feel.\n\n\"Ah, the ideal Illythian military hero,\" Cato said, speaking to the small crowd, amusement gleaming in his eyes, \"A pacifist.\"\n\nThere was some appreciate snickering from his own entourage behind him, but it was restrained. Lilah shifted uncomfortably but said nothing, resolving to keep her eyes lowered.\n\nThus she felt, more than saw, Cato's hand reach out as though to brush at lock of her hair or to touch her arm. Daegon caught him by the wrist with a crisp, snapping sound before Lilah even noticed the giant's hand move. Cato didn't flinch, but met the larger man's unreadable expression. Then his gaze moved, swung to lock with Magnus', who observed the scene with a mildly entertained equanimity.\n\nThe tension simmered in the air around them, thick with dark energy.\n\nCato's hand was still very near Lilah's shoulder, held in the Daegon's grip. It was a long, measuring, quiet moment.\n\n\"Then again,\" said Cato, his eyes settling hard on her again. \"It is a little amusing, no? Your own compatriots looked to you for hope on the battlefield, and you salvaged an instrument of their defeat.\"\n\nHis eyes flickered over her again, lazily considering. \"Perhaps, after all, you shouldn't be one of their heroes. Perhaps you should be one of ours.\"\n\nTo Lilah, it seemed as though there was no blood left in her face. Her skin felt cold and unpleasantly charged, as though static energy danced against the surface. The words burrowed into her heart like a parasite.\n\n\"Better her,\" said Magnus, drawing every eye in the tent, \"than someone who's spent more time in pleasure houses than he has in battlefield.\"\n\nHis undercurrent had changed. The electrified energy beneath his surface had rises, no longer amused. Indeed, Lilah realized, it had turned scathing. Angry.\n\nThat was when the tent curtain parted, bathing them all in pale daylight, and the Legate's procession entered.\n\nDaegon released Cato's wrist.\n\nThere were half a dozen of them, trailing in the wake of the Legate's stride. Two bodyguards in red armor, and helmets that covered their faces. Three slaves, marked by their wrist cuffs and downcast expressions.\n\nThree men, walking close at the Legate's shoulders, Lilah would later learn were all Consulars of comparable standing. One of them was familiar. Vero, the very man who had toured Magnus through the slave ranks only a day before, and delivered her to the Praetor. He was a slight man, not thin, but of a modest height and delicately featured. To Lilah's eyes, the just-so sculpting of his short beard seemed ludicrously elaborate. He wore vivid, jewel like green.\n\nBeside him was a man with a grey, monk-like robe and features Lilah would have found reassuring in any other setting. Despite being among their number, this man stood apart in an understated sort of way. He wore no adornment beyond the scarlet silk lining visible just beneath his stolid grey clothing. His features were rounded and quietly pleasant, all except for his eyes, which angled elegantly at the corners. Lilah would have guessed his origin as a southern islander, though she had never seen one before.\n\nThe third was a roundish man with a nervous undercurrent to his movements, wearing cloth of gold that did no favors for his sallow complexion. He was as pale as the Winter Goddess Praetor, but where she was all alabaster perfection, his milky pallor seemed somehow moist, unpleasantly reminiscent of spoilt milk. He had darting, opportunistic eyes. Here was a man, Lilah would have wagered, who would sell his own mother green glass and call it emeralds.\n\nThe Legatus himself put any of their attempts of ostentatiousness to shame.\n\n\"Magnus!\" he enthused upon entry, his arms spread in greeting. His expression was indulgent, even fatherly. His chest was squarish, without being overly-broad, clothed in the deep purple of the Imperial house. Lustrous ornamentation of silver and gold, gracefully entwined, gleamed from his fingers and chest. His beard was neatly trimmed and as dark as his eyes, which were fixed on Magnus. Indeed, he spared no one else so much as a glance.\n\nHe clasped Magnus by the arms, with the manner of a doting uncle. Cato had stepped back from Lilah and the other Praetor had moved to the side, looking on awkwardly.\n\n\"Legatus,\" Magnus responded, inclining his head.\n\n\"And who is this vision?\" The Legatus asked, turning to her unexpectedly. Until that moment, Lilah wouldn't have believed he had even seen her. He took her hand with another indulgent smile. Daegon didn't snatch at his wrist.\n\nLilah felt the familiar flush rise to her cheeks, and with it the renewed realization that she was surrounding by many of the most powerful people in the Imperius. Even in Illythiel, many of their names and reputations were known. Hesiod himself was the Imperator's own brother, and possibly the most influential Legate in the assembly.\n\n\"This is Lilah, your eminence,\" Magnus replied.\n\n\"Oh, but she's trembling!\" said Hesiod, \"my dear, are you well?\"\n\nLilah felt a small sound escape her, a burble of laughter, half panicked and half despairing. She wondered if she were having some kind of out of body experience. No one seemed alarmed by the outburst. Most in the tent gazed at her as if she were an exotic bird adjusting to cage life.\n\nThe frantic laughter threatened to rise up again. In many ways, that was what she amounted to for them. This time, she squelched the sound. \"No, my liege,\" she managed, \"I'm...\"\n\nI'm a nurse, and a military lieutenant in the service of my home, and I'm wearing metal lingerie and I can't stop thinking about my enemy and slave master's knowing, ruthless eyes all over my body. And I think I might have helped you conquer my own country.\n\n\"A little lightheaded,\" she said.\n\n\"Tea,\" said the Imperial Legatus, patting her hand comfortingly. \"That will improve matters. Jadir, would you please...?\"\n\nThe attendant who had intrigued her, with the rounded features and olive gold skin, bowed in acknowledgement and gave her a considering look. Like the Legatus, there was a broadness to him, sturdy yet unobtrusive. Lilah found herself liking his solemn, pensive eyes and serene expression. It occurred to her, as she watched him turn and give a command to the solitary slave behind him, that her choosing favorites among her captors was only complicating her, previously simple, conception of goodness and wickedness. Was that how it would be in the Imperius, measuring the world in terms of which masters were cruel and which less so? How must it be for those who had known nothing outside of such a life? If someone was a slave for as long as they could remember, how would they see someone like her, chafing and straining against her bonds?\n\nThat is assuming, she realized as she watched the slave leave the tent, the slave spared her any thought at all.\n\n\"Well,\" said the Legatus, patting her hand once more and moving away from her, \"Whilst we wait on the tea, let us discuss tonight's festivities. I understand,\" he added with a flicker of humor in his eyes as he turned his gaze on Magnus, \"That there is some objection.\"\n\nMagnus spread his hands. \"I am concerned, my liege. If we give the soldiers a sense of victory now, we risk depleting their resolve before the final throes of the war. They are already counting the spoils in their hearts, and most of them will still not see home for a year or more.\"\n\nHis glance flicked toward Cato. \"This hubris could be our undoing.\"\n\nCaro bristled, \"My esteemed colleague,\" he said slowly, in order to lace each word with a measure of disdain, \"would have it that our soldiers will fall apart and forget their duty at their first taste of pleasure.\"\n\nHesiod put his hands up, forestalling further argument. His expression was thoughtful, and he milked the moment. He's a showman, Lilah realized, doing nothing without a reason.\n\nWhich meant his attentiveness was as much a part of his show as anything else he did.\n\n\"Magnus, I hear my younger brother's wisdom in your words,\" Hesiod said, nodding at the younger man with that same avuncular affection. \"Do not mistake me, I value it.\"\n\nHesiod moved to the war table, and like Cato had, sat his hip against it. Behind him, the tent parted again as the slave returned with a delicate painted tea set and a stand. Hesiod did not observe the activity, as others in the tent did, but picked up a model of a sky-ship and studied it. \"I wonder,\" he said, \"Are we not balancing wisdom against wisdom in this matter? If we do not offer our soldiers some semblance of reward in their endeavor, do we not risk incurring rebellion...In their hearts, if nothing else?\"\n\nThe Legatus looked toward the Winter Goddess Praetor, \"What say you, niece? I understand you have kept your peace on the matter.\"\n\n\"I would that your will be done, Uncle,\" she said, regarding him in turn. Her voice was cool and measured, suffusing imperious pride with deference.\n\nHe shook his head a fraction, looking away. \"That's helpful, Ariadne. Thank you,\" he replied dryly. Lilah understood the silent amusement that shifted through the small crowd. The female Praetor\u2014Ariadne\u2014seemed to make up in silent respect what she lacked in outspoken popularity.\n\nHesiod paused, considering. \"Jadir, how many desertions have we seen since the beginning of this war?\n\n\"Scarcely two hundred, my liege,\" murmured Jadir, pouring tea into dainty cups that the slave held on a tray. The wide sleeves of his robe functioned to protect his hands from the heat of the teapot. His voice was steady and slightly accented. \"That we know of.\"\n\nThe slave, clad in white linen, distributed the cups amongst the officials. Cato and Ariadne declined. Jadir brought Lilah a cup himself, and she accepted it, feeling unwontedly timid as she did.\n\nHesiod sipped his own comfortably before speaking again. \"A tolerable number, perhaps, in balance,\" he said. \"You all know I do not pretend at possessing any military brilliance. I leave that to my younger brother\u2014and somewhat to my elder.\" He set his cup on the war table, and Lilah almost felt a flicker of amusement when she saw a few of the officials follow the motion with pained expressions.\n\n\"I will leave the war tactics in your capable hands. What I can offer you is this: I have seen the state of this encampment. These soldiers need a reprieve, or we will\u2014sooner or later\u2014face malcontent on a scale we have not before seen. We will proceed as planned.\"\n\n~ * ~\n\nHe devoured her with a kiss the moment they were alone. He had let the curtain of his private war tent fall behind him and dismissed his lieutenants, then pulled her close, the heat of his desire searing through her startled tension until she warmed in response, turning soft and pliant in his arms.",
        "He had ached to touch her from the first moment he had watched her enter the tent, her angelic curls framing her face, tempered into gentle elegance with combs of golden filigree. Delicate blue silk stretched tight about her breasts and bared her midriff, deliciously suggestive. The effect in the tent was everything he had wanted. Each official and Praetor was startled in their own way\u2014even Ariadne, though she barely let it show. Some were offended and some were lustful, but none of them failed to be satisfying startled by the sight of her.\n\nAnd all he wanted was to tear away every comb and inch of fabric and feel her warm in his arms, to bury his hands in the silken abundance of her hair. To kiss away the look of cornered prey in her eyes.\n\nNow he burned for her. He could feel her unwanted arousal, the heat between her legs against his hand. It inflamed him beyond reason. He ripped away at the silk fabric she wore, touching every reachable inch of her skin.\n\nHe lifted her, guiding her legs around his waist as he moved to his work table. With one arm he cleared a space, shoving electronics and papers to the ground. Lilah startled at the muffled clatter, but he claimed her mouth again, resting her on the desk and freeing her hair with an impatient hand. Her curls tumbled into his hand, soft and lush as silk. Her skin, her fragrance, she was the most irresistible thing he had ever known.\n\nIt had been a mistake, bringing her to the war council. Everything had gone according to plan, yet he hadn't calculated what it would do to him: to see her ogled and insulted by his enemies, to feel torn between his instincts to protect and dominate, and to see his own impulses reflected in the face of a dozen other men.\n\nThey were alone, at last, but the sounds of the encampment were there, just beyond the fabric of his tent. Lilah looked anxiously toward the tent's entrance as he tore the last stitch of fabric from her chest, freeing her breasts and taking hold of the plump handfuls.\n\n\"Forget them, Lilah,\" he said, his voice rough. \"It doesn't matter if we have an audience of thousands.\" He brought his hand around her throat, guiding her eyes back to his with a subtle pressure. \"I'll take you, whenever and wherever I please.\"\n\nHe kissed her temple, for the pleasure of watching her lashes flutter of their own accord, then trailed his lips down her neck until he reached her breast and claimed it with his mouth, teeth brushing the skin until she whimpered and arched her back beneath, her modesty forgotten at last.\n\nIt was all he could take. He tore away the rest of the fabric, tossing it aside heedlessly as he took the sight. With his other hand, he freed his cock from restraint. She had been shaved since he'd seen it last, but he could still make out the gleam of golden curls in a dainty patch above her quim, which quivered hot and pink and damp against his hand. He traced two fingers against the slickness of her thighs, savoring the sight. \"You're wet for me,\" he said, and looked at her face, no trace of playfulness in his gaze. \"Say it.\"\n\nShe hesitated barely a moment, \"I'm wet for you.\"\n\n\"Master,\" he corrected.\n\n\"Master,\" she said, her face coloring and ashamed.\n\nHe posed his cock at the tip of her cunt, and buried it to the hilt.\n\nShe gasped, and he touched his fingers to her lips, tracing the wetness of her own arousal against the petal-soft skin.\n\n\"Beg me to make you come, Lilah,\"\n\nHer flush was as lovely as a sunrise. For all her humiliation, Magnus doubted whether she knew how smoothly her hips moved with him, how lovingly her cunt tightened around his cock.\n\n\"Make me come, please,\" she said.\n\nHe thrust deeply. \"Louder.\"\n\n\"Make me come, please Master!\"\n\nHe rode her then, fiercely and with very little finesse. It was like hunting, this coupling. He sought her orgasm in the way he would chase prey, thrusting his cock into her like a spear.\n\n\"Again,\" he said, his voice rougher than he expected.\n\nShe stared up at him, a watery shine in the heartbreaking loveliness of her eyes. Somewhere beneath her shame and misery, he saw a sparkle of defiance. \"Please make me come, Magnus.\"\n\nHe didn't know what made her say his name, but he felt like he might die of pleasure when he heard it.\n\nHis cock throbbed as he felt her rise on the crest of her orgasm, and he rode it with her, beyond restraint. When he spent himself inside of her, it was with a quivering, prolonged spasm, his rear clenching, braced against the fury of his own release.\n\nHe nearly collapsed on top of her, bracing himself with one elbow and resting his sweat-dampened forehead against hers. When he did draw back to gaze down at her, something in his chest swelled, an inexplicable yearning coalesced with his satisfaction. He wanted her to wrap her arms around his neck and kiss him, unprompted. He wanted her to whisper of her own satisfaction and pleasure in his ear. He wanted...something.\n\nHe gazed at her for another long, taut moment, and then stood, adjusted his clothing into a presentable condition, and strode out of the tent.\n\nHe felt Lilah's eyes, forlorn and bewildered, follow him as he left."
    ],
    "authorname": "Damoiselle",
    "tags": [
        "ravishment",
        "reluctance",
        "male dominant",
        "slave",
        "slave collar",
        "science fiction",
        "light bondage",
        "warrior",
        "romantic",
        "female submissive"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/imperius-ch-03"
}