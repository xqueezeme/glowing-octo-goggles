{
    "title": "Fantasy Sex Cruise 05",
    "pages": [
        "This is the fifth episode in a multi-part story. Although I hope you would enjoy it by itself, it would be better to start with Chapter 01 first so you can understand the context of the situation and get introduced to the characters. This is a story of a journey and is meant to be read in sequence. \n\n*\n\nI opened my eyes slowly to see Lauren lying on the other side of Kealani. She was awake and smiling as she gently kissed and licked Kealani's left breast. When she saw my eyes open she moved her head slightly so she could suck Kealani's nipple into her mouth. I imitated her actions on Kealani's right breast. This is how we all fell asleep last night after another spectacular round of sexual play out on the veranda under the moonlight. I could feel Kealani's chest rising and lowering as she breathed contentedly. Soft cooing sounds came from her mouth as Lauren and I continued to suck her breasts like two infants.\n\n\"If you two keep this up I'm going to cum or I'm going to start lactating.\"\n\n\"Either one or both is perfectly acceptable.\" I replied.\n\nLauren then said, \"I'm really not that hungry right now so I vote for making her cum.\" She then moved lower on the bed and crawled between Kealani's legs. Her mouth quickly covered Kealani's bald pussy and her tongue went to work on her clit.\n\nKealani spread her legs wide and raised her knees to give Lauren complete access to her crotch. I watched Lauren eat Kealani's pussy like it was her last meal, licking and sucking every part of her.\n\n\"I thought I was the one that was supposed to receive that treatment first thing in the morning.\" I said.\n\n\"Well I'm not about to tell Lauren to stop what she's doing so if you want your cock sucked you'll need to come up here and put it in my mouth.\"\n\nI pulled myself up and slowly swung my leg over Kealani and straddled her chest. I put another pillow under her head to raise her mouth into a better position then slid forward until the head of my cock made contact with her lips.\n\nHer mouth opened and I eased the head inside her warm wet orifice. Her tongue began to lick me and she sucked another inch or so inside. Her hands moved to my balls and started softly caressing them. My cock steadily inflated until soon it was hard enough for me to start sliding it slowly in and out of her mouth. She increased the pressure on my balls and her cheeks caved in as she sucked harder on my shaft. I pushed more of my cock inside her mouth with each stroke until it was fully erect. I continued to fuck her mouth with a steady rhythm feeling the head slide into her throat with each forward thrust.\n\nShe was making garbled grunting sounds and her eyes were rolling back with the lids half closed. I knew this was a result of what Lauren was doing to her pussy.\n\n\"Go ahead and cum Kealani and when you do just squeeze my balls and I'll fill your mouth with sweet cream.\" In another minute she moaned loudly around my cock and I felt her body begin to shiver. I pulled my cock back until just the very tip was touching her pursed lips. She opened her mouth and stuck out her tongue so the head of my cock was laying on it. She squeezed my scrotum and I squirted hot semen across her wet tongue. I was transfixed by the sight as each squeeze coaxed another rope of cum to spurt onto her outstreched tongue even as she continued to experience her own climax. I pulled back from her mouth. She opened it wide so I could see the pool of pearly liquid I had deposited in it then swallowed the entire load down in an audible gulp.\n\n\"I suppose you two think that because the ship is at sea today you can keep me here all day and continue to have your way with me.\"\n\n\"That works for me.\" I replied.\n\n\"Me too.\" Lauren chimed in.\n\n\"OK then but can I at least get up and pee and maybe have a cup of coffee?\"\n\n\"Only if you let us watch.\" Lauren blurted out.\n\nWe all got out of bed and headed for the bathroom. Kealani sat on the toilet and Lauren and I kneeled in front of her. We both watched excitedly as the hot liquid began to flow out of Kealani's hairless slit. It then occurred to me that I had never watched a woman pee before and it was actually pretty stimulating. When Kealani had finished Lauren took her place and I watched another yellow stream of piss spray into the toilet. Then of course, it was my turn. Lauren asked me if she could hold my cock while I did it and as soon as the pee began to stream out she started pointing it at different spots in the toilet.\n\n\"Wow that's really neat. I wish I could do that.\"\n\nI went out to the sitting room to order us some breakfast while the two women took a shower. When they had finished I hopped in the shower and a few minutes later we were all in the sitting room waiting for the food to be delivered. When we heard the knock on the door Lauren and Kealani disappeared into the bedroom while I put on a robe and directed the steward to set up breakfast on the veranda. When he had left I yelled at them to come on out. I discarded the robe and we all went out on the balcony to eat.\n\n\"Kealani you've completely converted me to being naked all the time. It really does feel so natural to me now.\"\n\n\"I'm sorry it took you so long to start. Someone as pretty as you should be seen and appreciated as often as possible.\"\n\n\"What's even more amazing to me than sitting here without clothes is sitting here without makeup. The old Lauren wouldn't even let the dog see her without makeup on. But I look at you Kealani, fresh out of the shower with wet hair and no makeup and I see one of the most beautiful women in the world and I realize I can be beautiful just as I am.\"\n\n\"That's a very sweet thing to say Lauren.\"\n\n\"In case either of you are interested in a man's opinion I feel very privileged to be here like this with both of you and despite the fabulous dresses, makeup and hair styles that you put on when we go out you both are truly beautiful without them. Before we get back to the sexual activities is there anything either of you want to do on the ship today? Remember tonight is another formal dress night for dinner.\"\n\n\"Oh that's right. I forgot about that and I didn't bring a formal gown.\" Lauren said.\n\n\"I've got a short formal you might could wear but there is a dress shop on board that we could go check out to see if we can find you something a little more suited to the occasion.\" Kealani told her.\n\n\"It's almost nine so why don't we all get dressed and go to the dress shop now so we can get that out of the way while we're all nice and clean. We should be able to find you something you like in about an hour.\"\n\nWe headed for the shopping center and located the dress shop. I sat in a comfortable chair while Kealani picked out dresses for Lauren to try on and model for us. After trying about six we all decided on a long midnight blue velvet gown that looked gorgeous on her and displayed her breasts to maximum advantage. Kealani picked out a pair of super sexy high-heeled shoes in a silver color with the actual heel made out of clear Lucite. She told Lauren not to worry about accessories as she had everything else she would need. I didn't doubt that for a minute.\n\nIt was still a few minutes before ten so we decided to stop by the photo gallery to see what new pictures we had available. When we got there we saw that the concierge had been right about what he had said the other night. The ship's photographer had put up a display that could quite accurately be called a shrine with mostly pictures of Kealani but a few of Lauren that were extremely flattering to both of them. Not that it would be difficult to find flattering pictures of them but it might be a little hard to pick the best ones. When he saw us he reached behind the counter and retrieved an album of the ones he had put together for us as well as a CD of all the pictures he had taken. When I tried to pay him he said not to worry because so many other people had bought them. We thanked him and told him not to forget to seek us out tonight for some more photo ops.\n\nWe headed back to the room and as soon as we had gotten inside the phone rang. \"Now who could that be?\" Kealani asked as she walked to the desk in the sitting room to answer it. I helped Lauren hang up her dress while Kealani talked to whoever was on the phone. It was a pretty one-sided conversation with Kealani mostly just saying \"yes\" and \"sure\" and finally \"we would love to. See you shortly.\"\n\nShe hung up the phone and turned around to announce: \"Boys and girls it's time to get ready to parrrrrty! Eddy you remember those young hot ladies we had such an interesting time with the other night at dinner don't you?\"\n\n\"How could I ever forget an evening like that?\"\n\n\"Well it seems that Alison, the little sexpot with the brown hair that was so fascinated with you, wants to take me up on my invitation to play some more games with us. She and her three friends will be here in about 30 minutes. You're about to be literally up to your ears in more young pussy than you could ever have imagined.\"\n\nI guess the dumbfounded look on my face said more than words. \"Don't just stand there. Go take one of your little pills. You're going to need it.\" I headed off toward the bathroom. \"Lauren are you ready for your first all girl orgy?\"\n\n\"Ready, willing and able Kealani. It sounds like fun.\"\n\n\"Eddy do you think you can handle six hot babes at one time?\"\n\n\"I'm willing to die trying Kealani. Especially if you're one of them.\"\n\n\"Awwwh Eddy, you always say the nicest things. I know this wasn't on the list of your fantasies for this trip but I have a feeling you won't mind making room for it.\"\n\n\"Not in the least Kealani. I'll suffer through it somehow.\"\n\nWe put on our robes and sat in the sitting room drinking some fruit juice while we waited for our guests. The room steward had been in while we were shopping and cleaned up so everything looked nice with fresh flowers in the vase on the table. At ten thirty there was a knock on the door. I got up to answer it but Kealani told me to sit down and she went to the door. She opened it and Alison looked a little surprised and asked \"This is suite 1408 isn't it?\" Kealani said yes. \"But I thought you were a blonde.\"\n\n\"I am when I want to be. Come on in.\" Kealani led the little troop into the sitting room. They all had on shorts, t-shirts and sandals.\n\n\"My name is Kealani. I'm originally from Hawaii but I live in Miami now. This is my companion Eddy. He and I are on a sort of voyage of discovery to expand our sexual horizons. And this is our new friend Lauren who decided to join us after we showed her a better way to get over a bad divorce than moping about in her room. If any of you want something to drink we have a fully stocked fridge over there or we can have room service bring in something more exotic if you'd like. So Alison, why don't you introduce us to your friends and tell us what you're doing on this lovely cruise.\"\n\n\"We're all seniors at a small California college and members of the same sorority. We've been waiting until all of us turned twenty-one so we could go on a cruise together instead of doing the more conventional things for spring break. Our sorority has a well-deserved reputation for being extremely open minded regarding sexual activities and the four of us spend a lot of time together. We're all bi and we're always looking for a good time. We really enjoyed our dinner with you the other night and couldn't wait to take you up on your offer to come to your room to get to know you better. I kept hoping we'd see you again somewhere but I guess we just kept missing you.\"\n\nHer eyes spotted the album the ship's photographer had given us and when she saw the pictures of Kealani in her various outfits she squealed \"OH...MY...GOD! You're her? We've seen you every night and didn't even recognize you. I've heard people all over the ship talking about you. What do you really look like?\" Kealani pulled the tie to her robe, opened it and allowed it to fall to the floor. Four sets of eyes locked onto her naked body like the laser tracker of a drone aircraft. \"Now I really can't wait to get to know you better. How do you manage to look so different and exotic every night?\"\n\nKealani gave her one of those inscrutable smiles and looked at the next girl. \"And what's your name?\"\n\n\"I'm Shelley and I'm on the swim team. We're all athletically inclined. Alison's a cheerleader and Donna plays volleyball and has a brown belt in Karate. Emily's our intellectual although she does a lot of running but not on a team. I must tell you that the orgasm I had the other night when you and Eddy were watching us was one of the most intense I've ever had. There's just something about you that radiates sexual energy. I could hardly take my eyes off you.\"\n\n\"Be careful Shelley. The closer you get to her the more you're going to feel like that.\"\n\n\"Eddy now don't scare her. I promise I'll be gentle with you Shelley.\"\n\n\"Oh I'm not scared Kealani. Just fascinated...and eager.\"\n\n\"So Donna you play volleyball. Stand up and let's take a look at you.\" Kealani addressed the third girl. Donna stood and both Kealani and I were a little surprised that we hadn't really noticed how tall she was.\n\n\"I'm six-one.\" She said in answer to the obvious unspoken question on our faces.\n\n\"Emily how did you get mixed up with these jocks?\" Kealani asked the fourth girl who was staring at Kealani's naked body like a deer in the headlights.\n\n\"I may not have quite as perfect a body as these girls but they don't have a 4.0 grade point like I do. And I can match their sex drive any day of the week. I find intelligence to be an invaluable sexual asset and I look for it in my partners. Also Donna has helped me with an unpleasant problem I had with an ex-boyfriend so she and I have become good friends.\"\n\n\"I recommend everyone get naked so we can begin the festivities.\" Kealani said.\n\n\"Not so fast.\" I said. \"There are a couple of things that I'd like to say before we get started. The first thing is a question: Do any of you have an objection to a video recording being made of what we do here today? Before you answer let me assure you that these recordings are exclusively for my personal use and there will be no copies made of them. They will never be shown to anybody else nor will any part of them ever be transmitted to the Internet.\"\n\nAlison spoke for the group, \"Eddy we don't know you very well but you probably have as much to lose from videos of you in an orgy as we do so I trust you and as far as I'm concerned I hope you have fond memories of us when you watch them in the future. Besides there are more than a few pictures of us naked that we've taken of each other at our little parties at the sorority house so a few more won't make that much difference.\"\n\n\"OK that's settled. You may notice the cameras set up inside and on the veranda so just ignore them for the most part unless you want to use one to do some close-ups of some of the action. Just put it back when you're finished if you do.\"\n\n\"Secondly I would like to ask all of you to refrain from taking your clothes off and line up here so I can undress you one by one. This would mean a great deal to me because I haven't had the pleasure of doing this to a beautiful young woman in a very long time and because I consider unveiling a woman's body to be almost a sacred rite. It's an experience that happens only once in the lifetime of the two involved in it and I would like to savor the experience of doing it to you.\"\n\n\"Wow. I've never had a man pay me such a wonderful compliment. I'd be honored to be the first.\" Alison said as she walked to stand in front of me.\n\nI kissed her and said, \"Thank you Alison I really appreciate this.\" I reached for the bottom of her t-shirt and slowly pulled it up as she raised her arms. When I pulled it over her head I saw a lacy pink bra. \"Does that bra match your panties?\"\n\n\"Yes.\"\n\n\"Then I'll save that for later.\"\n\nI unbuttoned her shorts and slowly pulled the zipper down. I put my thumb and index finger on the bottom of the shorts and gently drew them down. She moved her hips from side to side and they slipped off. I grabbed the waistband and held them while she stepped out of them. I dropped to my knees and looked at her in her matching pink lace bra and panties. \"You're gorgeous Alison.\" I kissed her breasts above the bra and reached around to her back to undo the clasp. When it was free I brushed the straps from her shoulders and let it fall to the floor.\n\nI kissed her right nipple and sucked it into my mouth then did the same to the left one. \"Fabulous, simply fabulous. Now Alison it's time for the final reveal.\" I put my hands on her hips and slipped my thumbs under the elastic band of her panties and as slowly as I could, I slid them down. I stopped when the top of the waistband was just above her mound. I kissed her navel and slid my tongue over her stomach and down to the top of the panties. I pulled them down a little more expecting to see the beginning of her pubic hair but soon realized she didn't have any. When her slit was fully exposed I put my mouth just above it and kissed her then inhaled deeply. \"Inhaling the fragrance of a woman's sex for the first time is the most intoxicating thing a man can do. Every woman is different and I will never forget this.\" I slid the panties to the floor and she stepped out of them.\n\n\"Eddy that is the most incredibly intimate and wonderful thing any man has ever done for me. I can't tell you how impressed I am. Be assured that I will never forget this either.\"\n\nI stood and moved over to face Shelley and repeated the process I had just performed for Alison. When I pulled her panties down and inhaled her hairless pussy, she asked me what her fragrance reminded me of. \"Pure golden honey with cedar and musk.\"\n\n\"My God Eddy you've given me goose bumps. That is such an incredibly sweet thing to do to a woman. I'm going to make it a point to instruct everybody I'm ever going to be in this situation with to perform this wonderful ritual.\"\n\nDonna was next. When I finished undressing her I had to take a step back to take in all of her. \"You are magnificent. An Amazon with the body of a goddess.\" She was stunning. The quintessential California blonde with long shapely legs toned to perfection by the exercise she got from playing volleyball. Her hips were full and curvy, her stomach flat and taut and her pussy completely bald with no tan lines. I felt my cock give a little twitch at the sight of her.\n\nKealani came over and stood in front of her. \"Wow you are a long cool drink of water.\" She ran her hands over her breasts and down her sides to her ass. \"I've never seen God put so much beauty in one place before.\" Donna blushed at the compliment but exhibited no embarrassment at being totally naked in front of all of us despite our looking at her like she was a drumstick at a Thanksgiving dinner.\n\nEmily seemed a little reluctant to let me undress her. She looked shy and inhibited. Nevertheless she acquiesced to it and I could see no reason for it. Her breasts were perfect for her size with areolas a beautiful shade of rosy pink and nice sized nipples. I liked the way her tits swayed when she bent slightly to step out of her shorts. Her girlish body may not have been as spectacular as Donna's but she had all the right equipment in the right places. Including another bald beaver.\n\nI asked, \"Is it a requirement of your sorority to remove your pubic hair?\"\n\nEmily answered, \"It's not a requirement but most of the women do. Alison is a cheerleader so when she's in front of a crowd kicking her legs up she really can't have a line of hair on either side of her panties. Shelley's on the swim team and removes every hair on her body because the whole team thinks it helps them swim faster. Donna plays volleyball in a thong so you can practically see everything between her legs when she's playing. I did it because they all looked so sexy and I really like the way if feels. We have waxing parties every week or so and do each other.\"",
        "\"Donna plays volleyball in a thong?\" I asked incredulously.\n\n\"Not when I play on the school team Eddy. I play beach volleyball in a league. I'm even thinking of going pro for a year or two before I decide what I want to do with the rest of my life.\"\n\n\"Too bad, if the team wore thongs women's volleyball would become more popular than NFL football. ESPN would love it.\"\n\n\"Our school's progressive Eddy but not quite that much.\"\n\n\"Alison is there anything in particular you'd like to do or have done? You're our guests so you decide what we start with.\"\n\n\"We have a little game we play at the sorority. We'll need to go into the bedroom so I can show you how it's done.\" We all headed off for the bedroom and when we arrived Alison continued, \"Oh good you have a king size bed that will make it much easier. Kealani you lie down on the bed face up. Each one of us will take a position. One of us will be on each side of you sucking your breasts. One of us straddles your face so you can do something besides just lay there and the fourth one gets between your legs and eats your pussy. After a couple of minutes we'll all shift positions so each one of us gets a turn with your various parts. The winner of the game is the one eating you out when you cum.\"\n\nI sat on the chair in the bedroom and Lauren knelt beside me so we could observe this first round of musical chairs sexual style. I was wondering how long Kealani would last as the game got underway. I moved the chair up closer to the end of the bed so I could observe the ass of the girl giving Kealani head sticking up in the air and framing her hairless pussy lips. The Viagra was kicking in now and watching Shelley suck on Kealani's pussy was beginning to have an effect on my cock.\n\n\"Shelley could you spread your legs a little so Lauren and I can admire your technique and your beautiful pussy?\" Without missing a beat she slid her knees apart and her inner lips came into full view. This was a Kodak moment if ever I've seen one so I quickly grabbed the camera and zoomed it in for a close-up of her. The little minx wiggled her ass then spread her cheeks with her hands so I could record all of her.\n\nLauren got up and left the room and returned quickly with the bottle of massage oil. She poured some in her hand and knelt back down beside me and began to rub it on my cock. It didn't take long for it to become rock hard under her tender caresses. I saw a thin line of moisture form between Shelley's inner lips and they began to glisten. When she moved her hand to insert one of her fingers into Kealani's vagina I said, \"Alison is it against the rules for Shelley to use her fingers on Kealani or is she just supposed to use her mouth?\"\n\n\"Shelley damn it, quit cheating.\"\n\nShelley turned her head around and hissed \"Tattletale!\"\n\n\"Well how would you like it if I did it to you while you're playing?\"\n\n\"Who's stopping you?\"\n\nThat was all the encouragement I needed. I told Lauren to pour a little of the oil on my fingers then reached up and began to rub Shelley's pussy lips from her clit to her anus. She slid her knees further apart. I put the tip of my index finger on the opening of her vagina and slid it in until the nail disappeared from view. I used my thumb to rub her clit. Her cunt was hot and slippery with her juices. I slid my finger in all the way and began to gently rub the tip against the top of her vagina. Her sudden intake of breath told me I had located her G-spot. I continued to massage it until I heard Alison announce that it was time for everybody to switch places. Shelley softly murmured \"Ohhhh Noooo not yet.\" As she reluctantly began to move up to take her position on Kealani's left breast.\n\nNext up between Kealani's legs was Emily as Donna moved off her face and onto her right breast. Alison took her place astride her head teasingly keeping her twat just out of reach of Kealani's tongue until Kealani grabbed her hips and pulled her down on her open mouth. Alison let out a moan that let me know Kealani's tongue was now jammed as far up her vagina as it could reach. Alison made no further attempt at being coy and began to grind her pelvis onto Kealani's face in earnest.\n\nEmily proceeded to use her mouth on Kealani and seemed to be having a definite effect on her judging by the way Kealani was moving her hips and flexing her toes. As I moved closer to Emily's ass she turned her head as if she was startled so I decided to watch her from a more remote position. That was the second time I sensed some discomfort in Emily that seemed to be about me. I studied her ass and the little pink rosebud of her anus. Her pussy was not as well defined as Shelley's much less Kealani's or Lauren's. It was more typical I guess of young women. Neat and tidy with an average size clit. I sat back in the chair and Lauren resumed rubbing my erection as I watched all of the activity on the bed.\n\nSuddenly I heard Alison begin to pant and cry out \"Oh yes. Fuck yes. OH, OH, OH shit I'm cumming.\" Her legs trembled and she grabbed her tits and squeezed them tightly. Kealani's hands were on her ass pulling her pussy into her face.\n\n\"I think that means it's time to move to the next position.\" I said.\n\nAlison fell over on her side and moaned out \"Oh Jesus you're good! You're really, really good.\"\n\n\"Alison are you still in the game or do you want Lauren to fill in for you?\" I asked.\n\n\"I'm still in. Just give me a second to catch my breath. I'm not going to give up the chance to return the favor of what she just did to me.\"\n\nShelley said \"Hurry up Alison it's my turn on her face and I can't wait to have her give me some of what you just got.\"\n\n\"Be careful what you wish for Shelley.\" Alison said as she rolled over and started working on Kealani's right tit as Donna moved between her legs. She told Emily to give her one of the other pillows and put it under Kealani's hips so she could bend that long body of hers into position to work on her pussy.\n\nDonna's rear view was spectacular. Those long thighs leading up to an ass that was the equal of any I had ever seen including Kealani's, which was world class. Her pussy was much more defined with long outer lips and slightly protruding inner lips beneath a larger than average clitoris. I wanted to bury my head between her cheeks and ram my tongue up her twat but decided to wait for a better opportunity later perhaps when we could be one on one. I could see her ample breasts rocking back and forth between her legs as she began her oral effort to make Kealani cum. I could tell by the way Kealani was beginning to squirm that Donna knew what she was doing. I rubbed the tops of Kealani's thighs and could feel the tension building.\n\nShelley was already primed to have an orgasm before she ever straddled Kealani's face and it didn't take long before she let go. Her hips jerked and humped forward and backward as her head tilted back. \"Ohhhhh Yesssssss. Oh GOD I'm cumming all over your face. DON'T STOP. PLEASE DON'T STOP.\" She cried out as she began to quiver all over.\n\nI don't know if it was Shelley's orgasm or Donna's talented tongue that sparked it but I watched Kealani's hips rise up and press hard against Donna's mouth as her legs began to tremble. I could hear her grunt and moan into Shelley's cunt as she continued to suck her while they both climaxed. When she had stopped trembling, Donna rose up and cried \"Yay. I won. I won.\"\n\nKealani said, \"That's not what it feels like to me. What about you Shelley?\"\n\n\"Oh fuck Kealani that was better than the one at the restaurant.\"\n\nKealani said, \"Let's take a short pee break and get something to drink before we continue.\"\n\nI sat in the chair and watched everybody file out of the bedroom and then headed for the sitting room while the girls formed a queue for the bathroom. It was then I noticed Emily standing out by the railing on the balcony. I found Kealani and pulled her aside and told her I thought something was bothering Emily and asked her to please go out on the balcony and see if she could determine what it was. She came back in a few minutes and asked me to come out on the balcony with her.\n\n\"You were right Eddy there is something bothering Emily. It seems she recently had a problem with a young man she thought was her boyfriend but when he found out she liked to have sex with women he blew up and hit her. She told him she never wanted to see him again but he kept harassing her and calling her a lesbian slut and a filthy dyke until she finally told Donna about it. Donna wanted to go break this asshole's neck but she had a better idea. Her father is a detective in the city she comes from so she called him and told him what had happened. Her father said he would take care of it. Emily doesn't know what actually happened but the harassment stopped immediately and she hasn't seen or heard from the jerk since.\"\n\nEmily picked up from there, \"Eddy I hope I haven't been rude to you or hurt your feelings but ever since this happened I've been a little wary around men. This guy wasn't a very good lover anyway. It was all about him and he never considered how I was feeling or what I wanted.\"\n\n\"You're much better off without him Emily and it sounds like Donna and her father have set him straight about bothering you. Let me assure you that you do not have to do anything here that causes you the least amount of discomfort or concern.\"\n\nKealani said, \"Emily, Eddy is the most considerate and kind man I have ever met and he would never do anything to make you uncomfortable.\"\n\n\"I know that. I can tell by how he looks at all of us. The other girls are quite attracted to him but there's another reason I feel a little conflicted about him.\"\n\n\"What do you mean by that Emily?\"\n\n\"Eddy looks and acts and even sounds just like my father.\"\n\n\"Oh. So that's it. It makes you feel weird to be having sex with or in front of somebody that reminds you so much of your father.\"\n\nEmily got this strange look on her face and didn't say anything. She was lightly biting her lower lip as if she wanted to say something but couldn't. Kealani, of course, figured it out.\n\n\"No Eddy that's not it, is it Emily.\" Emily slowly shook her head back and forth unable to actually say no. \"You want to have sex with Eddy because he reminds you so much of your father don't you? Emily, say it. You want to have sex with your father. In fact you've been fantasizing about it for a long time haven't you?\"\n\n\"Yes...yes I do. I've wanted to have sex with my father since I was old enough to know what sex is. I've never told anybody about this and I'm ashamed of myself for wanting it so badly.\"\n\nKealani walked over to her and took her in her arms. \"Oh Emily my sweet darling child. That's nothing to be ashamed of. In fact it's probably the most common fantasy for an adolescent girl in the world. Trust me I know all about this.\"\n\n\"Emily think about this for a minute. You have a rare opportunity here. You're a smart girl. Can you see that you can use Eddy to play out your fantasy and indulge in it without actually involving your father? If Eddy is that much like him it shouldn't take much to imagine that he is your father. You just tell Eddy what you want him to do and he'll be your father for a while. Eddy even has two daughters of his own so he's very experienced with young girls.\"\n\n\"You'd do that for me Eddy?\"\n\n\"Of course I would Emily. After all, that's why I'm on this cruise, to fulfill my fantasies and Kealani has not only done that for me but has managed to come up with some I didn't even know I had. It would be an honor to do this for you.\"\n\n\"OK but I don't want the other girls to know about this. Is there some place we could go to be alone?\"\n\n\"Yes actually there is. You can use Lauren's cabin, it's right across the hall.\"\n\nThe door to the balcony opened and Donna walked out. \"Emily is anything wrong?\"\n\n\"No Donna everything's OK. I just wanted to talk to Eddy and Kealani about something. Don't worry about me, I'm fine really.\"\n\nKealani walked over to Donna and said, \"Emily has a little project she wants Eddy to help her with and she needs a little time alone with him. She'll be perfectly all right. Don't worry about her she'll be in very good hands.\"\n\nDonna said to her, \"Way to go Emily. The only guy at the party and you're going to take him away. That's cold sis. Really cold.\"\n\n\"He'll be back Donna. I'll leave enough of him for the rest of you I promise.\"\n\nWe walked back in the room and asked Lauren for the key to her cabin. I put on my robe and slipped Kealani's on Emily then we headed for Lauren's room. When we were inside I asked, \"How do you want to do this Emily? Do you have some sort of script in mind or do you want me to do anything in particular?\"\n\n\"Oh yes Eddy I know exactly what I want you to do. I've done this a thousand times but daddy never did his part. I'm going to get in the bed and leave the door to the bedroom open a little. You stand outside until you hear me moaning and then come in and ask me if anything's wrong. Then just follow my lead and call me 'baby girl' or 'Emmy'. Oh, one more thing, are you going to record this?\"\n\n\"I didn't bring a camera with me but I'll go get one if you'd like.\"\n\n\"No, I think this needs to be just for us to remember.\"\n\nEmily went into the bedroom and I stood outside the door. Soon I could hear her making the unmistakable sounds of a young female pleasuring herself. It suddenly dawned on me that I had heard those sounds before. A chill ran through me. What was I about to get myself into? I eased the door open and looked inside. Emily was under the sheet with her legs pulled up and slightly spread. One arm was under the sheet. \"Emmy, is something the matter?\"\n\nShe stopped what she was doing and pulled the sheet up tight to her neck. \"No daddy, I guess I was just having a bad dream.\"\n\nI walked in and sat on the side of the bed. \"Are you sure Emmy?\" I asked as I reached my hand over and felt her forehead. \"You feel warm and you look a little flushed. Is anything bothering my baby girl?\"\n\n\"Daddy if I tell you something will you promise you won't get mad at me?\"\n\n\"You know you can tell daddy anything. I could never be mad at my little angel.\"\n\n\"Well I've been having these feelings lately.\"\n\n\"What kind of feelings sweetie?\"\n\n\"I feel these tingling sensations and I get kind of flushed.\"\n\n\"Where do you feel this tingling?\"\n\n\"Down there.\"\n\n\"What do you mean 'down there'?\"\n\n\"You know daddy, down THERE, between my legs.\"\n\n\"Oh my little baby girl is becoming a young woman! Have you talked to your mother about this?\"\n\n\"Not exactly. She told me a few things when I first had my period but it was mostly about how babies are made. She never told me about the tingling.\"\n\n\"Well before you get to the babies there is this very important subject that you need to know about called sex. Did she talk to you about sex?\"\n\n\"She took me to the doctor when I turned 16 and he examined me and gave me a prescription for birth control pills. Mom said I should start taking them so I wouldn't get pregnant when I started having sex but she didn't explain to me much about what having sex meant.\"\n\n\"Unfortunately Emmy most mommies and daddies do a dismal job of explaining sex to their children. My parents never told me anything about it.\"\n\n\"Will you tell me about it daddy?\"\n\n\"It's rather unconventional for a father to try to explain to a daughter but I would much rather you learned about it from me than from some inexperienced boy in the back seat of a car.\"\n\n\"Oh yes daddy, please. I would really love to have you tell me about it.\"\n\n\"OK. We might as well get started since it sounded like you were starting by yourself before I came in.\"\n\n\"My girlfriend at school told me about touching myself when I get these feelings and what would happen after I've done it for a little while.\"\n\n\"And did anything happen?\"\n\n\"It sure did! I got this strange feeling all over my body and my pussy seemed to throb and get wet.\"\n\n\"That's very good Emmy. What you felt is called and orgasm and it's the result of having certain parts of your body stimulated.\"\n\n\"Which parts daddy?\"\n\n\"Oh lots of parts can be sensitive and help you have an orgasm.\"\n\n\"Will you show me daddy?\"\n\n\"I suppose that is the most effective way to teach you.\" I reached up and started to pull the sheet down.\n\n\"Daddy! I don't have any clothes on!\"\n\n\"I know baby girl. You're not supposed to.\" I continued to lower the sheet and she closed her eyes as it slipped below her breasts. \"Open your eyes Emmy. You need to see this as well as feel it. There are some parts of your body that are much more sensitive to sexual stimulation than others so we'll leave those for later. We'll start with kissing.\" I leaned over her and began to gently kiss the side of her neck and softly lick it. I gradually moved to her throat and kissed my way around to the other side. \"How does that feel?\"\n\n\"Wonderful daddy. Really wonderful.\"\n\nI moved to her cheeks and continued kissing and licking her until I got to her mouth. I kissed her lips softly at first then with more pressure and finally eased the tip of my tongue between her lips. She responded and began to kiss me back. I could feel how much this little role-playing session was getting to me. Actually it was getting to both of us. I kept kissing her passionately for about five minutes and really enjoyed it. I lifted my head up and asked, \"How did that feel?\"\n\n\"That felt incredible daddy. Nobody has ever kissed me like that before. It almost took my breath away.\"\n\n\"Never underestimate the power and eroticism of kissing Emmy. It's a very important part of foreplay.\"\n\n\"What's foreplay daddy?\"\n\n\"It's what we're doing now. Exploring each other and making each other feel good and relaxed so we'll both be ready for sex.\"\n\n\"Ummmh, I like it daddy.\"\n\n\"I never met a woman who didn't sweetheart.\"\n\nI slid down so my head was above her breasts. \"Now I'm going to spend some time with your titties.\"\n\n\"Do you like my titties daddy?\"\n\n\"Oh yes Emmy, you have very nice titties.\"\n\n\"They're not too small are they?\"\n\n\"No darling they're just right. Soft and perky with beautiful pink nipples.\" I lowered my head to her right breast and began to kiss it while I gently massaged her left one with my hand. \"Has anyone ever kissed your titties before Emmy?\"\n\n\"I let a boy feel them a couple of times but nobody has ever kissed them. It feels really good.\"\n\nI sucked as much of her breast into my mouth as I could and used my tongue to play with her nipple. It began to expand and I took it between my teeth and gently pulled on it. She began to moan and her head fell back on the pillow.\n\n\"Oooooh daddy that's making me have that tingling feeling. Please keep doing it, please don't stop.\" I continued for a few minutes more before turning my attention to the other one. Her moaning became louder and little shudders ran through her whole body. \"Oh daddy I had no idea my titties could make me feel so good. Thank you so much for showing me. You're such a wonderful daddy.\"\n\nI slid lower and began to kiss and lick her stomach and tickle her navel with my tongue. I pulled the sheet completely off her and exposed her lower body. I paused to look at her and put my hand on her stomach.\n\n\"What are you doing now daddy?\"\n\n\"I'm admiring you sweetheart. My baby girl has turned into a beautiful young woman and I never thought I would get to see you like this.\"\n\n\"Oh daddy do you really think I'm beautiful?\"\n\n\"Yes Emmy, I really do. Even more than I already thought you were.\"\n\nI moved my hand down to her bare mound and rubbed just above her clit. \"Do you know about all these parts down here? Have you ever really looked at yourself with a mirror and seen how intricately pretty your pussy is?\"\n\n\"No daddy I've never really examined it like that before.\"",
        "\"Well you should. It's really amazing you know.\" I looked around the room and spotted a hand mirror on the dresser. I got up and brought it back to the bed. I turned on the overhead light and sat back down beside her.\n\n\"Pull your knees up and spread you legs apart. Now sit up a little so you can see the mirror.\" I held the mirror between her legs until she could see herself. \"We'll start at the bottom and work our way up.\" I used my other hand to touch her anus causing her to jump a little. \"This is your anus and I'm sure you know it's primary function but it can also be a very enjoyable way to experience sex. Many women and men like the feeling of a man's penis or a vibrator inside their rectum. That's a subject for another day though.\"\n\nI moved my finger up to the entrance to her vagina. \"Right here at the bottom of your slit is your vagina, one of the most remarkable places on the planet. This is where a man's penis goes when a man and a woman are having sex. Just above your vagina is your pee hole and above that where your inner lips join together is the most remarkable living tissue in the known universe, your clitoris. I've heard it has more nerve endings than any other place on the human body. Use your fingers to pull the little fold of skin back and take a good look at it. The part you can see and touch is what leads to that wonderful experience known as the orgasm. Any questions?\"\n\n\"Wow daddy what a nice lesson. How did you learn about all of this?\"\n\n\"I'm still learning Emmy. Human sexuality is like chess. Knowing what all the pieces are and how they move is the easy part. It takes years of playing to become a grand master.\"\n\nI got up and put the mirror back on the dresser and turned the overhead light off. \"You stay like you are.\" I told her as I slipped my robe off and lay on the bed between her legs. \"Now I'll continue the demonstration by showing you some of the things you can do with these wonderful parts that nature has so lovingly bestowed upon us after a couple of billion years of evolution.\"\n\n\"Just lay back and enjoy Emmy. Daddy will make you feel real good.\" I placed my hands under her hips and spread each one out over her ass cheeks and began to gently squeeze them. I lowered my head and licked the inside of her right thigh up to her outer lip then did the same to the other side. My tongue slid lower to lick the sides of her crack around her anus. I took my time as I repeated these movements over and over, savoring the way she smelled and tasted. Her breathing deepened and slowed.\n\nI moved my tongue to the bottom of her slit and used my thumbs to pull her lips apart exposing the inner lips. I ran my tongue slowly upward and stopped just short of her clit. I repeated this licking several times and heard her start softly moaning. She placed her hands on top of my head and ran her fingers through my hair.\n\n\"Daddy, I'm tingling again.\"\n\n\"You go right ahead and tingle baby girl. Lay back and enjoy it. Don't be in a hurry. Let it build until it spreads all over you.\"\n\nI pushed up with my hands to elevate her hips a little and placed my tongue on her vagina. I used the tip to lick all around it and then stuck the full length into her. She was hot and wet as I pressed my face into her crotch. Her hips pressed back against my face as I wiggled my tongue inside her. I removed my tongue and licked up her slit and this time sucked her clit into my mouth when I reached it. I licked it with long broad laps of my tongue and felt it begin to swell. Her breathing quickened and the moans got louder.\n\n\"Oh, Oh OHHH DADDY I'M...I'M...AIIEEEEEEEE!\"\n\nI glued my lips to her vagina and sucked hard as her juices flowed into my mouth. Her hips bucked against my face and her hands clinched my head as her climax swept through her.\n\n\"Oh God Daddy what did you do to me? I thought I was going to pass out. I can hardly catch my breath!\"\n\n\"That, baby girl, is what an orgasm is supposed to feel like.\"\n\n\"Daddy that was incredible. Do you do that for mom?\"\n\n\"Not as much as I should honey.\"\n\n\"Well you can do it for me any time you want.\"\n\nI rose up and slid up beside her to hold her. Her hand grazed my rock hard cock. She wrapped her fingers around it and squeezed it. \"Daddy your penis is so hard and hot. Does it tingle too?\"\n\n\"Yes Emmy it does.\"\n\n\"Can I make it feel better like you made me feel?\"\n\n\"Do you want to do that for daddy?\"\n\n\"Oh yes daddy I want to very much. Let me make it feel as good as you made me feel.\"\n\n\"Slide down on the bed until your head is right in front of my cock.\" She quickly got into place. \"Now hold it with your hand and put the head in your mouth.\" I felt her hand wrap around my shaft and then felt her warm mouth envelop the head. \"That's right Emmy. Use your tongue to lick the tip and suck on it like a lollipop.\" She followed my instructions perfectly. \"Now use your other hand to play with my balls.\" I felt her hand move to my scrotum and begin to roll my testicles with her fingers.\n\nShe pulled her mouth off my cock and said, \"Daddy you have very nice balls. Would you like me to suck on them too?\"\n\n\"That would be very nice sweetheart. Just be gentle with them.\"\n\n\"Oh I will daddy. I'll take very good care of them.\" I felt her lips kiss my left nut and then softly suck it inside her mouth. She licked it gently and rolled it around while she continued to use her hand to stroke my cock. She moved her mouth to the other testicle and gave it the same treatment. She finally succeeded in getting both of them in her mouth and rolled them with her tongue. She was good. Very good.\n\nShe removed her mouth from my balls and started to put my cock back in it when she stopped and said, \"Daddy there's fluid oozing out of the tip of your cock. What's that?\"\n\n\"It's called precum Emmy and it means my tingle is increasing and if you keep doing what you're doing I'm going to cum soon like you did.\"\n\n\"What will happen when you cum daddy?\"\n\n\"A thick white cream will shoot out the tip of my cock in spurts.\"\n\n\"Is that your sperms daddy?\"\n\n\"Yes that's mostly what it is.\"\n\n\"And if you do that in my mouth should I swallow it?\"\n\n\"That depends sweetheart, sometimes a man likes to see his cum ooze out the sides of your mouth and run down the shaft so you can lick it up again. Sometimes he might want to spray it all over your face. But usually he wants you to swallow it.\"\n\n\"How does it taste?\"\n\n\"A little salty sometimes but I've been told my cum tastes rather sweet.\"\n\n\"Does mom suck your cock daddy?\"\n\n\"Not as often as she should honey.\"\n\n\"If she doesn't want to I'll do it for you daddy. I love your cock.\"\n\n\"That is the nicest thing you've ever said to me angel. Thank you very much.\"\n\n\"Daddy isn't a man supposed to shoot his sperms into a woman's vagina?\"\n\n\"That's the usual place Emmy.\"\n\n\"Don't you want to shoot your sperms in my vagina Daddy?\"\n\n\"I would love to do that Emmy.\"\n\n\"Me too daddy. Then we can both have an orgasm together. I'd really like that daddy.\"\n\nI pulled her up so we were face to face then rolled her on her back. I took a pillow and placed it under her hips. I got between her legs and used my hand to rub the head of my cock up and down her slit. She was still sopping wet from her earlier orgasm. I placed the head at her entrance and eased forward. It popped in. I held it there for a moment and looked at her. She was positively radiant. My eyes locked onto hers. I wanted to make this moment last as long as I could. The culmination of this little fantasy was about to transpire. We had both almost forgotten who we really were. I pushed forward and buried my cock in her and slowly lowered my self down and took her in my arms.\n\nShe let her breath out in a long sigh as her arms wrapped around me and her legs encircled my hips. \"Oooohhhhhhhh daddddy at last! I've wanted you for so long. Love me daddy. Love me like I love you daddy.\"\n\n\"Yes Emmy I do love you. You will always be my baby girl and I will always love you.\" I started fucking her with long slow strokes savoring each thrust into her hot tight hole.\n\n\"Oh yes daddy yes that feels so good. Push it in as deep as you can so I can feel all of you inside me.\" She squeezed me with her tight little pussy each time the head bottomed out against her cervix. My cock felt harder than it had ever felt in my life. I don't know if it was because of the fantasy or the Viagra.\n\nI increased the tempo a little and continued to fuck her with a steady rhythm. We were both sweating and I could feel my wet skin sliding against her breasts and stomach.\n\n\"Daddy I'm feeling that tingle again. I think I'm getting close to another orgasm. Are you going to have one too daddy? Are you ready to shoot your sperms into me daddy? Will you fill me up with all my little unborn brothers and sisters that are in your balls daddy?\"\n\nWhen she said that I immediately felt the urge begin. \"Oh yes baby girl, daddy's going to empty all his cum into you and fill you with his sperms.\"\n\n\"Oh daddy yes...yes...YES cum in me daddy. Give me every drop you've got.\" I pounded into her a few more times then felt my whole body stiffen as I hit the bottom of her vagina. My cock exploded in release.\n\n\"Oh yes Jessica, now baby, here come all of daddy's sperms deep inside you\". I locked my mouth onto hers and kept it there as spurt after spurt erupted from my cock. Her cunt pulsated with every blast of cum I shot into her.\n\nI collapsed on top of her. I kept my cock inside her as it slowly deflated and both of us came down from a mind numbing orgasm. Finally I rolled off her and felt my limp cock slide out of her cum filled pussy. She continued to lie there breathing steadily and contentedly with a beautiful smile on her face. I stroked her hair above her forehead and kissed her arm.\n\nShe opened her eyes and a tear rolled down her cheek. \"Eddy I'll never be able to thank you enough for doing this.\"\n\n\"Was it everything you'd hoped for?\"\n\n\"Everything and more Eddy. I got the best of both, my father and you. Kealani was right about you. You are the most gentle, considerate lover I've ever known male or female. I will never forget this as long as I live. Can I ask you a question?\"\n\n\"Of course.\"\n\n\"Who is Jessica?\"\n\n\"She's my youngest daughter.\"\n\n\"It seems I'm not the only one with a father daughter fantasy. If you'll let me, I'll put my phone number and email address in your phone in case you want to see me again or ever take another one of these cruises. I'd gladly go with you anytime.\"\n\n\"Yes Emily I'd like that. You will not be soon forgotten either.\"\n\nWe put on our robes, took off the Do Not Disturb sign and returned to my suite. Kealani answered the door. \"How did it go Emily?\"\n\n\"Fabulous. Better than I could possibly have imagined. Thank you for letting me do that.\"\n\n\"We were just about to take another break. Lauren just finished being the woman in the middle of the female roulette wheel.\"\n\nI headed for the bathroom for a pee and a quick shower. As soon as I was in the shower I heard the door open slightly and Shelley stuck her head in. \"Eddy, do you mind if I come in and pee? I really need to go bad.\"\n\n\"Not at all Shelley.\" I watched her walk to the toilet and sit down. I heard the toilet flush and then heard the door to the shower open. She walked in and put her arms around me.\n\n\"Need any help?\"\n\n\"Nice of you to offer.\" She squirted body wash on me and lathered me up then rubbed her body against mine so I could feel her tits on my chest. She knelt in front of me and lathered up my cock and balls. My cock began to come back to life.\n\n\"Ummmh I think you like that. Let's get out of here and I'll show you something you'll like even better.\" We dried off and walked back out to the sitting room.\n\nAs soon as we got there I heard Alison say, \"Emily I've seen that just fucked look on a lot of girls before but you look like you've been gangbanged by the football team. Is Eddy that good?\"\n\n\"Better.\"\n\n\"Well I can see we're going to have to start playing a different game. Eddy, do you see anything you'd like to play with?\"\n\nTalk about a loaded question. There were six beautiful naked females of various ages standing around me. A unique situation for me so nothing in my past experience would be of any help to me now. Despite having recently had an orgasm that registered on the Richter scale, I started looking at their bodies and as I did my cock began to swell until I finished making a thorough scan of all of them by which time it had returned to full erection.\n\n\"That's a good enough answer for me.\" Alison said as she walked in front of me and dropped to her knees. My cock was in her mouth before I could even look down at her.\n\nShelley and Donna joined her on either side and Shelley told her, \"Alison, you're going to have to share or Donna's going to throw you overboard.\"\n\n\"Ladies there's no need to be greedy but before you get carried away I think we should move this game to the bedroom. There's going to be more to it than a blowjob.\"\n\nAlison let go of my cock and looked up, \"I was hoping you were going to say that.\" She stood and grabbed my erection and said, \"Come on let's go.\"\n\nI was hardly in a position to refuse. When we arrived in the bedroom I told them, \"I'm going to lie on my back on the bed. You're going to take turns sitting on my face while the other two lay with your feet toward the headboard so I can play with your asses. You can take turns sucking on whatever you can find between my legs.\"\n\nThey arranged themselves as I had told them. Alison straddled my face with her back to the headboard. She spread her legs and lowered her chest until her twat was touching my mouth and her mouth was around my cock head. Donna lay on my left and Shelley was on my right. They were both tall enough so they could lie on their side and get their head on my thigh in a position for each of them to suck one of my balls while Alison sucked the top half of my cock. As if they were familiar with this configuration they both raised their upper leg and put their foot on their other knee to allow me access to their crotches. A perfect position for an ass in each hand.\n\nThe girls' marvelously coordinated effort on my genitals was without a doubt the most pleasurable experience of my life. I could tell they had honed their skills to perfection by doing this to each other in the game they had played earlier with Kealani and Lauren. It was a benefit of a liberal college education I had not properly considered before now. The school needed to put this course on the official curriculum and hire them as professors. I used my hands to rub and caress Donna's and Shelley's asses while attempting to do justice to Alison's pussy with my mouth. And they say men can't multitask!\n\nAs I tried to process all of the sensory data that was flooding my brain, I wondered why horse racing was called the sport of kings. Watching horses run around in a circle is not the sport of kings; lying in a bed with three young hot women doing their best to maximize your sexual pleasure is the sport of kings. All the emperors and sultans did not have harems because it was customary. They had them because this is the best way you can spend your time on this earth. I could get soooooo used to this. Note to self: remind me to get an application to be the housemother at this sorority.\n\nAfter about ten minutes of this sensual attention I announced that it was time to rotate positions. \"Shelley you're next on my face. Alison you can take Shelley's place.\"\n\n\"Awwwh Eddy, I wanted to be next on your face.\" Donna whined.\n\n\"Patience Donna, good things come to those who wait.\"\n\n\"Well you better get ready Eddy cause something good is coming to your face right now.\" Shelley informed me. \"I'm even going to let Donna and Alison do your cock and balls so I can watch you eat me. I've wanted your lips on my twat since you stuck your finger in me earlier.\" She straddled my face with her back towards my feet so I could have unrestricted access to her clit.\n\nShe hovered a few inches above my face. \"Stay just where you are Shelley, I want to look at you for a minute.\"\n\n\"Eddy I haven't known you very long but what you just said is why I like you so much. No other man I've ever been with makes me feel so desired as you do. Not one of them has ever bothered to take the time to admire me and make me feel so wanted. When I was between Kealani's legs and you started playing with me I could feel you looking at me and appreciating me. I almost came thinking about it.\"\n\n\"Shelley how could any man be with you and not desire you and want to make you feel wanted. You're beautiful.\"\n\n\"Ohhhhh Eddy, goddamn it where have you been all my life?\" As she said this she very slowly spread her knees apart and lowered her pussy onto my mouth.\n\nI started licking her from her taint to her clit with broad strokes of my tongue. After a few licks she began to move her slit in time with my licking. She moved her hands to her mound and pulled the hood of her clit back.\n\n\"Suck my clit Eddy. Suck it hard and I'll cum in your mouth.\"\n\nI engulfed the swollen nub with my lips and sucked and licked it furiously. She humped my mouth as I did so. \"Oh Eddy yes. Do it baby. Make me cum. Yes, yes, yes that's it, make me cum Eddy.\" I grabbed her ass with my hands and squeezed her cheeks as I continued to lick her clit. She threw her head back and pressed her cunt against my mouth and her legs begin to quiver. I pulled her forward and stuck my tongue deep in her vagina. \"I'm cumming Eddy\" was all she said. I could actually feel her orgasm as it engulfed her entire body and her juices streamed into my mouth.\n\n\"OK Shelley get off him. It's my turn now.\" Donna told her.\n\n\"It is your turn Donna but do you think you could give me a minute to pee?\"\n\n\"Sure but hurry back.\"\n\nI headed toward the bathroom and as I was coming out I glanced out the sitting room door to the balcony and saw that Kealani had gotten out the air mattress that Mina had left here when she gave us our massage. It was inflated and Kealani and Lauren were covered in nuru gel and had Emily sandwiched between them on the mattress. It was a tangle of arms, legs, tits and ass as they slid around and on top of each other.\n\nWhen I got back to the bedroom I said, \"Ladies I think there is something happening on the balcony that we would all be interested in taking part in.\"\n\n\"Not before I have my turn on your face Eddy.\"\n\n\"Trust me Donna you'll get your turn but I think you'll like it on the balcony instead of in here.\" Alison and Shelley headed for the balcony. I sat on the bed next to Donna. \"Donna, before we go out there how do you feel about anal sex?\"\n\n\"I've let Emily stick a vibrator up my butt a couple of times while she was eating me and I liked the way it felt but I've never let a man fuck my ass.\"\n\n\"I'd really love to play with your ass because I think it's the most beautiful one I've ever seen. Would you consider letting me take your anal virginity?\"\n\n\"Would you stop if I didn't want you to continue?\"\n\n\"Of course, but Kealani has shown me and Lauren how pleasurable it can be if it's done right so I think you're going to like it. I wouldn't ask you if I didn't really believe that.\"\n\n\"OK Eddy. If I'm ever going to do it, now's the time and I can't think of anybody I'd rather be first than you.\"\n\n\"Thank you Donna, that is a very special compliment. Let's head for the bathroom first. Anal sex should always begin with getting thoroughly clean.\" Once inside the bathroom I had Donna get on all fours and got the enema bag out and filled it half way with warm water. I hung it on a towel bar and touched the tip of the nozzle to the center of her pink puckered hole. I eased it in up to the connection with the hose then undid the clamp and let the water flow into her rectum.\n",
        "While the water was filling her I kissed her marvelous ass all over and rubbed it with my hands. I squeezed the bag to empty any remaining water into her and removed the nozzle. \"Stay like you are until you feel like you have to let it go.\" I rubbed her stomach between her legs and continued to kiss her cheeks. After a couple of minutes I stood up, removed the nozzle and washed it and laid it on the counter top to dry on a tissue.\n\n\"I think I need to go potty.\"\n\n\"You take care of that and then come over and join me in the shower.\"\n\nIn a couple of minutes she got in the shower with me and I gave her an all over bath with the body wash. Sliding my hands all over her magnificent body was a thrilling experience. Her nipples hardened and pressed into my palms as I washed her full breasts. I kissed her and slid my tongue in her mouth as my hands moved down to her bare crotch to rub between her legs. She spread them apart for me in response.\n\nI turned her around and spread her legs again. I poured some body wash on her at the top of her ass crack and let it run down while I held her ass cheeks apart. My cock was hard and I slid it between her legs so the body wash would cover it and began to rub it in and out. Her hand moved down to rub her clit and the tip of my cock as it poked out in front of her.\n\n\"Oh God Eddy you're making me so hot just thinking about having that wonderful cock in my ass.\"\n\n\"I'm going to have my tongue in there first. I can't wait to eat your sweet asshole and lick your pouting pussy.\"\n\n\"Unnnnhhh\" She moaned as her hand moved faster on her clit.\n\n\"We need to get out of here before we both end up cumming.\"\n\nWe hurriedly dried off and headed for the balcony. When we got there, Alison and Shelley were covered in gel in a 69 position next to Kealani, Lauren and Emily. How they all fit on the mattress was a mystery but it was quite a sight to see five naked bodies sliding around in one place. I knew Donna and I couldn't possibly fit on there with them so I told Donna to lie face down on a lounge chair. I covered a cushion with a towel and put it under her hips to elevate her magnificent ass. This way she could watch the action on the mattress while I worked on her.\n\nI walked over to where the camera was and brought it and the tripod over and placed it where it could get the best view of Donna's fabulous ass. I then laid on the lounge between Donna's legs and started rubbing her ass cheeks with both hands. Her skin and flesh felt divine. Smooth and firm yet soft enough to still feel like a woman. She had a nice tan with no lines from playing on the beach in her thong. I licked from half way down her long shapely thighs to the crease of her cheek then kissed my way across her ass to the other leg and repeated the licking while kneading and squeezing her cheeks. I kept this up for about ten minutes then used my fingers to pry her cheeks apart so I could see her puckered hole and her naked pussy.\n\nI pulled her lips apart with my index fingers and exposed her vagina to my gaze. I reached my tongue as far as I could toward her clit and pressed it hard against her then dragged it upwards until I reached her anus. I stuck my tongue in her puckered hole as far as I could and moved it around. She pushed her hips back toward me to let me know I should continue to do this. I must have spent ten minutes licking her like this.\n\n\"Use your hands and pull your cheeks apart for me.\" I told her. When she had both hands clasped on her cheeks I put my mouth over her asshole and stuck my tongue in deeply. I put two fingers in her wet vagina and slowly moved them in and out. After about fifteen minutes of rimming her asshole and finger fucking her she shuddered and let out a long sigh.\n\n\"Oh Eddy that feels divine.\" I continued squirting saliva into her anus and increased the speed of my fingers in her cunt. \"God Eddy you're making me cum!\" Her hips pushed back against my face and her legs flexed as she climaxed. \"Eddy I think it's time you put your cock in my ass.\" She said as her orgasm subsided.\n\n\"I think so too. Stay like you are and I'll be right back.\" I slid back and got up to go over to the bowl of nuru gel and rubbed some on my cock. I was pretty sure Donna was already sufficiently lubricated but there'd be no doubt with this slippery stuff. I walked back to the lounge and knelt between her legs. \"Raise up a little and put your weight on your forearms.\" When she was in the perfect position I spread her cheeks and put the tip of my cock on her wrinkled little hole. \"Take a deep breath. Let it out and relax.\" When I heard her breathe out I gently pressed forward.\n\nShe must have been really relaxed because the head and another inch or so slid in with no resistance. I held it there to let her adjust. \"How does that feel?\"\n\n\"Marvelous Eddy. I'm so ready for this I feel like my whole body is hot.\" I pulled back a little then pushed in again. This time almost half my cock slid effortlessly into her hot ass. I repeated pulling back and pushing in half way for a couple of minutes.\n\n\"Deeper Eddy!\" I slid a little more into her with each stroke but kept the pace gentle. \"OH YES Eddy YES. All the way in now, give it all to me.\" I pushed her cheeks apart with the palms of my hands and pushed my cock into her until my balls mashed against her pussy. \"Don't move Eddy. I want to feel you deep inside me.\" She pushed her hips back against me to be sure that every last millimeter of my cock was in her ass.\n\nShe moved her right arm back under her so she could reach her clit and began to rub it. \"I'm going to get myself off while you stay like you are. Use your stomach and leg muscles to flex your cock.\" That wasn't hard to do since my cock seemed to be throbbing all by itself already. Each time I would flex it she would squeeze me with her rectum. It was the most erotic feeling I've ever had. Her rubbing was getting faster along with her breathing as she started to moan and grunt. A minute later she let out a long low moan and had a shuddering orgasm that almost triggered my own but I held off somehow in spite of the hot vice like squeeze her rectum gave my cock.\n\n\"Did that feel as good as it looked?\"\n\n\"Incredible Eddy. You were right; I do like being fucked in the ass. The orgasm was so powerful.\"\n\n\"Well get ready for another one. And this time I'm really going to fuck you.\" I pushed her forward so she was laying flatter on the lounge with only the cushion under her hips. I stretched out on top of her and told her to put her legs together. My cock felt like it was in warm pudding. My saliva combined with the gel had her rectum fully lubricated.\n\nI started fucking her with steady long strokes. This was my favorite position with Linda only I was in her vagina. I liked it even better in Donna's hot slippery asshole. There was the perfect amount of friction and I liked feeling my hips and the tops of my legs slap against her ass cheeks as I humped her. My balls were getting wet from her pussy's secretions as they made contact with her lips on each stroke.\n\nAfter about five minutes of continuous fucking Donna said, \"Oooohh Eddy this feels soooo fantastically good. Keep fucking me Eddy, keep fucking my tight little ass. Oh yes, Eddy make me your bitch. Unnnh, Unnnh, Unnnh.\" I did as she asked and kept up the steady rhythm for another ten minutes until I heard her say, \"You're making me cum again Eddy!\" I felt her ass pulsate around my cock and felt her leg muscles tense as she trembled with another orgasm. \"Oh Jesus Eddy I can't stop cumming. You've turned me into a total anal slut. All I want to do is stay here for the rest of the trip and be your ass whore.\"\n\nI picked up the pace and began to fuck her harder. \"Is this how you like it? Does my ass whore want me to fill her rectum up with my hot cum?\"\n\n\"YES damn it YES. Shoot your jizz as far into my belly as you can. Fill me with it Eddy. DO IT!\" I felt my balls signal that I was about to do just that. A few more hard thrusts and my cock swelled up inside her asshole. I stopped and waited. Seconds later I erupted and six long spurts of semen shot deep into her bowels. She grunted with each blast and began to tremble as yet another orgasm overcame her. I collapsed on top of her.\n\nWhen my cock finally began to deflate I eased back and slowly extracted it from her ass. As I stood up I noticed the other women had all stopped their own activities on the mattress and were staring at Donna and me. She was still having little aftershocks from her orgasm.\n\nShelley and Alison got up and walked over to kneel at the head of the lounge. \"Donna are you OK?\"\n\n\"Oh I'm a lot better than OK. That was incredible. Why didn't you tell me how fantastic anal sex is?\"\n\nAlison said, \"I've only tried it twice and each time the guy was rough on me and didn't last long enough for me to get anywhere near enjoying it.\"\n\n\"Then you need to let Eddy do it to you. I've never had an orgasm that intense before.\"\n\n\"So Eddy, what's your secret?\" Alison asked me.\n\n\"I owe it all to Kealani. She taught me everything I know about it.\"\n\nThey both turned to look at Kealani and said, \"Would you teach us how to do it Kealani, please, please, please?\"\n\n\"It would be my pleasure to give you a lesson in the correct way to enjoy anal sex. If Eddy thinks he's up to doing it three more times.\"\n\n\"I've got plenty of Viagra and with you six for inspiration I think I could keep it up until we get back to Ft. Lauderdale. I would like to take a break and get a little lunch before we continue.\"\n\n\"Would you order us something sent in Eddy? In the meantime, I'll start the cleansing phase of the anal sex lesson.\"\n\nKealani, Emily, Shelley and Alison took off for the bathroom. Donna was still on the lounge chair with her hips raised slightly by the cushion under them. Her legs were spread apart and as I looked down at her marvelous ass I saw my cum oozing out of her ass and sliding down between the lips of her pussy to form a wet spot on the towel. I was so thankful the camera was still recording. No matter how long I lived I knew I could look at this and still get an erection.\n\nLauren was still on the mattress covered in nuru gel. I went inside and ordered some hors d'oeuvres, some cheese and crackers and a fruit plate. Then went back outside to cover Donna with a big towel and bring Lauren a robe so the room service steward wouldn't be too shocked when he brought lunch. \"How're you doing Lauren?\"\n\n\"I'm having a ball Eddy. That little Emily is quite some young woman. You weren't her only fantasy. She had a crush on one of her female professors last year and tried everything to get her to have sex. The woman was interested but she was too afraid to take a chance with one of her students. Especially since she was married with children of her own. Emily told me I looked a lot like her and I told her to do what she wanted with me and pretend I was her teacher. She really rocked my world.\"\n\n\"Trust me, I know exactly what you mean.\"\n\nI went to the door when the room service arrived and told the steward to put the food on the table on the veranda. When he had left, Lauren and I sat at the table and snacked on the food. A few minutes later Kealani and the others came out.\n\n\"Everybody is thoroughly cleaned out and ready for some ass fucking.\" Kealani declared. When we'd all had some lunch I suggested we take the party back to the bedroom. The sun was straight overhead and we'd all been in it for a while.\n\nLauren said she wanted to take a shower and wash the gel off her and Donna asked her if she'd like some company. \"Sure Donna, I haven't had a chance to get to know you yet.\" I headed for the bedroom where Kealani and the others were already getting started.\n\n\"Alison you and Shelley lie face down on the bed. Eddy can work on Alison while I do Shelley. Emily you can help Eddy unless Alison wants to work on you at the same time.\"\n\n\"I want Eddy's full attention so Emily get that sweet ass up here so I can see how far I can get my tongue in it.\" Alison raised up on all fours so Emily could crawl under her and get her head between her knees. Emily spread her legs and pulled her knees up so Alison could reach her asshole with her tongue.\n\nI knelt on the floor so my head would be level with Alison's ass. This way Emily could lick her clit while I rimmed her asshole. I hadn't spent much time with Alison. She was the perfect example of a California cheerleader. Very pretty, with a shapely sexy body.\n\nEmily saw me staring at Alison's crotch and said, \"Alison does have a beautiful pussy doesn't she Eddy? She always wears panties a size too small when she's cheerleading so she can show it off.\"\n\n\"I kinda got the impression she was an exhibitionist the other night at dinner. I don't blame her, you're only young once.\"\n\nI put my hands on her ass and massaged her cheeks and hips. Her ass was smooth with flawless skin and soft flesh. After a couple of minutes I spread her cheeks apart to expose her anus. A lovely dusty rose color with symmetrical wrinkles. I lowered my head and touched it with the tip of my tongue. I licked it several times then stuck the tip in and moved it back and forth. Emily was giving similar treatment to her clit. Something I was sure she had done many times before. I stuck my tongue in further and started tongue fucking her ass pausing briefly to squirt my saliva into her. The more I got the opportunity to lick and suck a woman's asshole the more I liked it. Linda had better get ready to have this done to her a lot when I got back home.\n\nAfter a few minutes I moved my mouth down and stuck my tongue into her vagina. It was hot and wet; no doubt from the attention her clit had been getting from Emily. I gently pulled Emily's head away from Alison's crotch so I could kiss her. I stuck my tongue in her mouth and the tastes of Alison mingled together. I reached under Alison and cupped Emily's breast in my hand and caressed it. She moaned softly while we continued to kiss. I pulled my lips away but before returning to Alison's ass I spotted Kealani's case with the toys in it. I moved over and rummaged around in it and took out an egg shaped vibrator with a wire leading to a control and a blue gel dildo about six inches long.\n\nI got back behind Alison and put one end of the egg at the opening of her vagina and pushed it in with my finger. Alison moaned and twitched at the intrusion but didn't stop licking Emily's ass. That is, until I turned it on.\n\n\"Jesus you two, what are you doing to me? I was already getting close to cumming and now you're going to put me over the edge.\"\n\n\"Go ahead and cum Alison. Orgasms are free. Have as many as you want.\"\n\nI showed Emily the control and the slider that varied the intensity and reached down and put it in her hand. She winked at me to let me know she understood.\n\nI returned to Alison's anus and licked it some more. Then I took the dildo and put the tip on her hole. I pushed it in about an inch and moved it around then quickly pulled it out. Her asshole stayed open for a few seconds then tightened back up. I kept this up for a few minutes until her sphincter relaxed enough to stay open longer each time I did it.\n\nI replaced the dildo with my finger and moved it in and out then added the index finger of my other hand to the first. I gently pulled my fingers apart and stretched her asshole open. After a little while it was staying open longer as I continued to expand it. I could feel the egg buzzing in her vagina against my fingers as I heard Emily say, \"That's it Ali cum for me baby. Cum all over my mouth. Do it!\" I placed the dildo on Alison's anus and pushed it in. It went in so easily that I kept pushing until the entire length was in her ass. Alison began to jerk her hips and moan as her orgasm swept through her.\n\nAlison continued to shudder for at least two minutes until she finally blurted out, \"Emily please, turn it off. I can't stop climaxing. You two are going to kill me if you keep this up!\" I pulled the dildo out of her ass and Emily turned off the vibrator. \"OH MY GOD! I've never felt anything so powerful in my life.\" I pulled the egg out of her vagina by the wire.\n\n\"Alison you just relax and catch your breath and while you're resting Emily can use that talented mouth on my cock.\"\n\nI stood up and spread my legs so my cock would be at the level of Emily's mouth. She turned her head toward me and opened her lips. I slid the head and a couple of inches of my rock hard erection into her warm wet mouth and began to gently fuck it. She moved her arm and I felt her fingers encircle the remaining shaft and begin to jerk me off. I knew if I kept this up for more than a minute I'd blow a load in her mouth so I reluctantly pulled away from her.\n\n\"OK Alison are you ready for the main event?\"\n\n\"My God you mean there's more? I don't think I could survive another orgasm like that last one.\"\n\n\"Oh come on Alison. A young hot healthy woman like you should be able to have three or four earth shakers like that last one. Or would you rather Emily show you how it's done?\"\n\n\"No I'll do it. If Donna lived through it I'm sure I can too.\"\n\n\"That's more like it Ali. What doesn't kill you makes you stronger.\" Emily reminded her.\n\n\"Alison I'm an old fashioned guy when it comes to sex so before we get back to your butt I'd like you to roll off Emily on to your back.\" She did as I asked. I stood at the foot of the bed and looked at her. I moved her legs apart enough to see her pussy and crawled up on the bed on my hands and knees until I was face to face with her. I lowered myself down until my cock slipped between her legs. \"I'm going to park that next to your hot box for a while if you don't mind.\"\n\n\"Not in the least.\" She answered as she pressed her legs back together squeezing my cock with her upper thighs. It responded by flexing noticeably.\n\nI studied her face as I hovered above her then started gently kissing her all over. Her forehead, cheeks, nose, even her eyelids. I kissed below her ears and the side of her neck then across her throat to the other side. Finally I put my lips on hers and kissed her as passionately as I could. She responded by wrapping her arms around me and pulling me closer to her so I could feel her breasts pressing into my chest. She squeezed her thighs around my cock and lifted her hips up so her pussy could make full contact with it. We continued kissing for about five minutes with tongues sliding into each other's mouth and bodies silently communicating our mounting lust.\n\nI broke the kiss so I could move down and pay some attention to her breasts. Her nipples were already hard and distended when I took the first one into my mouth and sucked on it. She pushed it toward me encouraging me to take as much of it as I could into my mouth. \"Oh Eddy that feels so good. Men don't pay nearly enough attention to my breasts when we're having sex. You really know how to make them feel wanted.\" I continued playing with her breast for a few moments then moved over to the other one and gave it the same attention.\n\nI looked up at her face and saw that it was flushed with arousal with a beautiful smile on it. Her eyes were half closed. I kissed my way down from her breasts until I finally reached her bare mound. I pushed gently on her left leg and she spread them both wide and bent her knees in anticipation of what I was about to do to her next. I got between them and lowered my mouth to her crotch and began to lick from her ass to her clit. She was wet with a mixture of my salty precum and her own juice. I sucked on her inner lips and pulled on them with my mouth.\n\nI continued to lap at her slit for a while then engulfed her clit with my mouth. I inserted my index finger into her anus to check on how lubricated it was. It still felt wet from my earlier efforts to fill it with my saliva. I nibbled and sucked on her clit until she began to make soft moaning sounds and her breathing quickened. I didn't want her to cum yet so I pulled back, rose up and reached for a pillow and pushed it under her hips to get her asshole at the right level to stick my cock into. She pulled her legs back without even using her hands to expose the little puckered hole. I spread my legs and knelt in front of her and lined up my cock.",
        "\"Are you ready Alison?\"\n\n\"God yes Eddy I'm more than ready. Stick that lovely cock in my ass and fuck me!\"\n\nI pressed forward and the head of my cock pushed through her sphincter and into her rectum. She let out a little sigh and closed her eyes. I held still so she could adjust to the intrusion. I was really conflicted at this point about how to proceed. Part of me wanted to ease the rest of my cock into her and then lie on top of her and have her put her legs around me so I could kiss her while we fucked but that would be making love to her and this was not a making love situation. So I decided to remain on my spread knees and enjoy the view of this beautiful naked young woman sharing this most intimate part of her body with me.\n\nI had almost forgotten about Emily. She was still in the middle of Allison and me and Kealani and Shelley. I looked over at them and saw Kealani kneeling behind Shelley who was on all fours. Kealani had put on the strap on dildo and was just beginning to slide it into Shelley's ass. Shelley was almost panting she was so excited. \"Emily would you slide over here next to me so you can help me with something?\" She sat on her haunches next to me and looked at me expectantly. \"While I'm fucking Alison I want you to reach between my legs from behind and play with my balls.\" Her hand moved quickly between my spread legs and cupped my scrotum. She began to massage them and gently pull on them. \"Oh yeah Emily that feels great.\"\n\nMy cock swelled as Emily caressed my balls. I pushed more of it into Alison and watched as her asshole stretched around it. She seemed to be very relaxed and I felt no resistance as I began to pull back and push forward. Soon I was driving it in all the way with each thrust. I would pause a little when I was in to the hilt and Emily would use a little more pressure to squeeze my balls, which caused my cock to involuntarily flex inside Alison's hot rectum.\n\n\"I feel that all though my body when you do that Eddy. It feels wonderful.\"\n\nI picked up the pace and fucked her harder. She grunted each time my hips slapped against her ass. Emily reached in front of me and used her other hand to rub Alison's clit. Her grunts increased in volume and intensity.\n\n\"Ohhhhhh you two are doing it to me again. You're making me cum. Will you cum with me Eddy?\"\n\nI said softly to Emily, \"When she starts cumming I'm going to pull my cock out of her ass. I want you to grab it with your other hand and jerk me off on her pussy while you squeeze my balls.\"\n\n\"OOOWWWHHHHH YESSSS EDDY NOW. I'M CUMMING REALLY HARD.\"\n\nHer head rolled back and her stomach began to heave up and down and I felt her rectum begin to spasm around my cock. I felt the tingle in my prostate and pulled my cock out of her. Emily's hand encircled it immediately and began to jerk it while holding the tip on Alison's slit. \"OHH God yes I'm cumming.\" The first glob of white cum spurted out as Emily squeezed both my cock and balls while pointing the tip at Alison's cunt. The long rope of jizz stretched from her clit to her gaping asshole. Emily jerked again and as soon as the second salvo blasted out she repeated squeezing my cock and balls. She managed to coax six thick jets out of me that covered Alison's crotch in hot white cream. She let go of my balls and lowered her head and stuck my cock into her mouth where she sucked two more hot spurts out of me.\n\nSatisfied that she had extracted every drop from me she removed her mouth from my cock and pushed me back. I sat back as she turned her attention to Alison's gooey cunt and began to lick the cum off of it.\n\nAlison raised her head and looked at Emily. \"That was fucking amazing you guys. When can we do it again?\"\n\n\"Don't tell me you've become an anal slut like Donna.\" I said to her.\n\n\"I shouldn't have to tell you Eddy. It should be obvious. I realize I'm not very old but the last half hour has been the best sex I've ever had in my life. In fact the whole day has been incredible.\"\n\nWe all turned our heads to see what was happening when Shelley howled and began to shake. Kealani had the strap on buried in her ass and her hand was furiously rubbing her clit. After a minute of riding out her climax Shelley pulled forward and dislodged the strap on from her rectum and lay flat on the bed. \"God I see what you mean Alison. These ass orgasms are really intense.\"\n\nEmily looked at Kealani still kneeling on the bed with the strap on dildo sticking out in front of her and said, \"Kealani, since you're obviously ready would you fuck my pussy with that thing while Eddy fucks my ass?\"\n\n\"It would be a pleasure Emily. Why don't you three see if you can get Eddy's cock ready for action while I go pee and get some water?\"\n\n\"Eddy you lay on your back and we'll take turns sucking that cock back to life.\" Emily told me. She and Alison spread my legs and got between them. I felt Alison's hand wrap around my shaft and her warm wet mouth surround my cock head. Her tongue began to lick the tip as she softly squeezed my shaft. Emily lifted my balls up with her hand then sucked one of them into her mouth and began to treat it like it was a piece of hard candy. Shelley decided I needed to have some of the juice her recent orgasm had produced so she straddled my head and lowered her pussy onto my mouth.\n\nShelley's twat was soaking wet. I opened wide and sucked it hard. Her sweet hot juice dribbled onto my tongue and rolled toward my throat. I stuck my tongue in her hole as far as it would go and then pulled it out and sucked some more. Another gush of mellifluous nectar streamed into my mouth. It amazed me how easy it was for these young women to secrete vaginal fluids so copiously. Every time I've had contact with one of their pussies it was practically gushing. They must get a lot of practice. I certainly didn't mind, it tasted as sweet as honey.\n\nAlison's superb cock sucking skills were having the desired effect on my member. Emily exchanged my right testicle for my left as the guest of honor in her mouth and continued sucking, licking and rolling it around with her tongue. She did it with such sincere enjoyment and her actions contributed greatly to the restoration of my erection. There really is no substitute for genuine enthusiasm.\n\nKealani returned and remarked, \"I see you three have diligently fulfilled your mission. Eddy looks like he's ready to return to active duty. But stay like you are for a few more minutes while I indulge in the pleasure of tasting that sweet ass of Emily's.\" She lay down between Emily's already spread legs and buried her face in her ass crack.\n\n\"Oh my, Kealani, I feel so privileged to have someone as beautiful and wonderful as you wanting to stick your talented tongue up my ass.\" Emily raised her hips and spread her legs farther apart to give Kealani complete access to her anus. Despite the distraction of what Kealani can do to your asshole with her tongue, a pleasure I knew from firsthand experience, Emily continued to orally stimulate my balls without the slightest diminution of efficacy. Quite the contrary, she opened her mouth wider and engulfed both of them.\n\nI pushed Shelley's ass up a little so I could say to her, \"Shelley keep your pussy a little above my mouth and use your hand to rub your clit. I want to see how you get yourself off. When you're ready to cum you can push that sopping twat down on my mouth so I can suck your juices out of you.\"\n\n\"Oh God Eddy that really turns me on for a guy to watch me play with myself. I'm gonna cum all over your face.\"\n\n\"It turns me on too Shelley. I don't think I've ever watched a woman do it from this close before. Show me how you like it.\"\n\nI put my hands on each of her ass cheeks and mashed and massaged them as she pulled the hood of her clit back with the fingers of one hand while rubbing the exposed nub with her other hand. She alternated rubbing her clit with extending her fingers down into her slit to rub her lips and her vagina. Her breathing became more rapid. Her nipples were hard and swollen. She was rubbing her pussy with all four fingers now and her hips were jerking back and forth. \"OH, OH, OH I'm cumming for you Eddy. NOW. I'm cumming!\" She lowered her cunt down on my mouth and I stuck my tongue into her as she bent over at the waist and put her hand down on the bed to steady herself.\n\nI had asked Shelley to do this initially as a distraction from what Alison and Emily were doing to my cock and balls but it almost backfired. Shelley's orgasm and seeing her masturbate just inches from my face almost caused me to cum in Alison's mouth. I managed to regain my composure and rolled Shelley off me so she could finish riding out her climax.\n\n\"Kealani do you think Emily's ass is ready for a hard cock?\"\n\nShe pulled her face out of Emily's crack long enough to say, \"She's more than ready but I could keep on eating her sweet ass for another hour or so.\"\n\n\"Well you can go back to it after I deposit a load of cum in it if you want. Now how are we going to arrange ourselves for this double dicking?\" Kealani told me to stay on my back and told Emily to straddle my hips and face my feet. When she was in position Kealani told her to guide my cock to her asshole and press her hips down. I felt the head contact her anus then she squeezed my shaft and pushed down. The head slipped into her hot little ass.\n\n\"Take your time Emily. Relax and lower yourself down gradually.\" She slowly let her hips descend until half my cock was inside her. She stopped and took a couple of deep breaths then let herself plop down and completely engulf my cock. She sat still allowing her innards to accommodate to the hot fleshy invader.\n\n\"Oh Eddy I feel so full.\"\n\n\"Are you doing OK Emily?\" Kealani asked her.\n\n\"Oh yes. I like the way it feels in me. I can feel Eddy's pulse in his cock. I'm getting excited thinking about what it's going to feel like when both of you are fucking me.\"\n\n\"OK then. Lie back on Eddy and put your feet on his thighs.\" I supported her neck as she lowered herself to lie on my chest. I turned her shoulders slightly so her head was on the pillow next to mine. My legs were spread so when she put her feet on my thighs she spread her legs wide with her knees bent. \"Before I get between your legs, use your feet and push yourself back and see if you can fuck Eddy's cock.\" She moved back tentatively and her ass slid up my cock a couple of inches. Then she slid forward and impaled herself once again on my erection. She repeated this movement until she felt confident and comfortable that she could fuck herself with my cock.\n\n\"Oh Eddy I'm doing it aren't I?\"\n\n\"You sure are Emily and you're doing a very nice job.\"\n\n\"Don't get too carried away Emily. I'm going to get between your legs now and put this very realistic artificial cock in your adorable wet pussy. When I do, Eddy will be the anchor. I'll be doing the fucking and I'll do it with enough force to move you on and off Eddy so it should feel like your being fucked in both holes.\"\n\nShelley said, \"Oh wow this looks like fun. I want to try it next.\"\n\n\"We'll see about that but for right now why don't you and Alison get on either side of Emily and suck those perky boobs of hers.\"\n\nKealani kneeled between our legs and placed the tip of the dildo at the entrance to Emily's vagina and began to insert it. She was right about how wet Emily was because I could feel it sliding steadily into her. Having never done this before I didn't know what sensations to expect but I definitely could feel the dildo through the thin walls of Emily's cavities. Kealani gave her a couple of strokes with about half the dildo and finally pushed it all the way in.\n\n\"Ooooohhhhh Kealani stop please. Hold it there deep inside me. Oh God it feels so good. I feel like everything inside of me is being stretched and caressed at the same time. It's wonderful.\"\n\nI turned my head so I could kiss her cheek and neck. Shelley and Alison were both sucking as much of Emily's tits into their mouths as they could. \"Now Kealani go on. Fuck me. I'm ready.\" I wasn't sure if Kealani had ever done this before in either position but she soon made both Emily and me feel like she was an expert at it. The look in her eyes told me she was enjoying it too. She drove the dildo in and out of Emily in an ever-increasing rhythm until Emily's ass was sliding up and down my cock with no effort on our part. Emily was grunting each time Kealani pushed the dildo completely in her and exhaling sharply when Kealani used her hands on Emily's hips to pull her back down on my cock as she withdrew.\n\n\"OH MY GOD I've never felt anything this good in my life! You're all taking me someplace I've never been before. Ohh, Ohhh, Ohhhh!\"\n\nI could feel her body filling with sexual energy. Her rectum was hot around my cock and her head was rocking from side to side. I whispered in her ear, \"Go on baby girl. Cum for daddy. Cum like you've never cum before.\" A wail that sounded something like the song of a humpback whale came out of her mouth and her back arched. Kealani stopped her thrusting. Emily stretched her arms out like she was flying and her rectum squeezed my cock until I thought she might cut off the blood flow. My own orgasm exploded and I began to spurt one jet after another deep into her bowels. Her back literally jerked off my chest with each of my ejaculations.\n\nEmily's orgasm was the most powerful thing I've ever seen another person experience. She lay on my chest almost unconscious for a full two minutes. All of us were in awe of her capacity to let go so completely in a sexual climax.\n\nThe silence was broken by Donna's voice. \"What the hell have you done to her?\"\n\nEmily came back to life and answered her: \"They took me to heaven Donna. I think I left my body.\"\n\nAlison said, \"She's OK Donna. You should know as well as the rest of us how intense these anal orgasms can be.\"\n\n\"Yeah, you're right. Eddy really rang my chimes.\"\n\nWe all disentangled and Kealani helped Emily pull herself off my cock. \"I don't know about the rest of you but I need a break.\" I announced. We all headed out to the sitting room and the veranda. Emily asked me where my cell phone was and I opened the desk drawer and handed it to her. She went out onto the veranda and I headed for the bathroom for a pee and another shower.\n\nAlison followed me in and got in the shower with me and began to wash me. \"I really want to thank you for letting us come here today. This has been the best day I've ever had. You guys are really great. I don't want you to think that we do this type of thing all the time. We're not promiscuous at school. Even among the girls in the sorority we have to be careful. We four are very close and keep our sexual activities among ourselves for the most part. That's why we took this cruise. We wanted to go somewhere that we could really let our hair down and enjoy each other without worrying about somebody pissing on our fun. Meeting you and Kealani and Lauren was a special treat and we'll never forget it.\"\n\n\"Alison I really have a lot of respect and admiration for you and your friends. I've never met nicer women of any age. If there's ever anything I can do for any of you just let me know.\"\n\nShe kissed me and said, \"Thank you Eddy. I hope you know we're all a little bit in love with you.\" We finished washing each other and dried off.\n\nWhen we walked back out on the veranda Emily saw Alison and said, \"Oh Alison there you are. I was looking for you. Smile.\" She took Alison's picture with my phone. Alison started posing and Emily snapped a few more then handed the phone to her and said, \"Here take a few of me so Eddy can remember what we look like. I've already got Donna and Shelley.\" Emily sat in a chair and posed provocatively with her legs spread apart and her breasts pushed out then stood and turned her back and looked over her shoulder with her legs spread and her ass stuck out. She then took the phone back and started pushing buttons on it. \"OK Eddy I've put all our names, numbers and email addresses in along with the best picture of each of us in your contacts. I took the phone and told her I would guard it with my life.\n\nKealani announced, \"Ladies it's going on 4 o'clock and I think we need to wind this party up so we can start getting ready for tonight. It's another formal night and I'm sure you have lots of preparations to make.\" We had another pre-dinner cocktail party to attend at 7 and we needed to see about where we wanted to eat. Our guests put their clothes back on and I put on my swimsuit. I needed a few minutes in the hot tub before I did anything else. We all kissed goodbye and the girls left.\n\n\"Anybody want to join me in the hot tub?\" I asked. Lauren and Kealani both thought that would be a good idea. We deflated the air mattress and washed it off in the shower, then headed up to the pool.\n\nThe soak in the hot tub felt good. \"How did you enjoy your little pussy party Lauren?\" Kealani asked her.\n\n\"It made me see I've led a very sheltered life when it comes to sex. When I was their age, I never even thought about doing the things these young ladies do so casually. I do admire and respect them for being so liberated and comfortable with having sex in a group. Now that I've experienced it and enjoyed what I did with them so much I wish I had done this trip a few years ago. Then instead of my husband sneaking around with his girlfriends he could have brought them home so we both could play with them. I'm seriously going to ask one of them to come stay at my house for my son's birthday this summer so he can learn about sex from somebody that knows what they're doing.\"\n\n\"How about you Eddy, did you enjoy yourself with all that young cooze?\"\n\n\"I felt like the proverbial kid in the candy shop. I agree with Lauren, they did exhibit a remarkable degree of maturity and sexual confidence, which I don't remember when I was dating young women at that age. I think being so uninhibited and adventurous is very healthy and a great way to increase their self esteem. And I didn't detect the least bit of jealousy or cattiness from any of them.\" I wondered what Linda would think about spending half a day having sex with a bunch of college kids, male or female.\n\nOn the way back down to the room we stopped at the concierge desk to make reservations for dinner. We decided on the Italian restaurant and the concierge booked us a table for three at 8 o'clock. When we got to the suite we took turns in the shower. I went first so I could get out of the way of Kealani and Lauren who would take over the bathroom to prepare for the night's festivities.\n\nWhen I had finished I sat in the sitting room and picked up my phone and looked at the entries for the young ladies. I was sure Linda would want me to explain what I was doing with four contacts for young women all with a nude picture. Donna's picture was a shot from behind with her gorgeous ass prominently displayed and her pouting pussy perfectly framed by her butt cheeks and upper thighs. She was looking over her shoulder and smiling sexily. My cock twitched at the sight of it.\n\nI still had some time before I needed to get into my tux so I turned on the information channel on the TV and watched for a few minutes. A video of the Las Vegas style review came on. Tonight's late show started at 10 and was the 'adult' version. Which meant that the female dancers were scantily clad and topless. I made a note to suggest we go see it since we hadn't done many nighttime activities on the ship outside of our suite.\n\nI got dressed and at 6:45 Kealani and Lauren made their appearance. Lauren looked spectacular in her new blue velvet gown. The new high-heels made her taller and she had on the blonde wig that Kealani had worn a couple of nights ago. Her makeup was perfect with a pink shade of lipstick that looked incredibly hot yet soft at the same time. A sparkling diamond necklace and matching earrings completed the image.",
        "\"Goddamn Lauren, you look good enough to eat.\"\n\nShe giggled and said, \"Well if you want to....\" And pulled the gown up to reveal that she wore no panties above a pair of sparkling silver self supporting stockings.\n\nShe walked over and stood beside me so we could both inspect Kealani. She had on an auburn red wig that was full of long curls that hung down to her shoulders. The dress was not sexy because of what it revealed but in the way that it fit her. It was the softest shimmering metallic silver color I had ever seen. It had a collar that encircled her neck almost like a turtleneck. It looked like it was made from three bands of the material and had three covered buttons on one side. The top part of the dress looked like something you would have seen in a movie from the 1930's that Jean Harlow or Ginger Rodgers would have worn. It had long sleeves with cuffs that matched the collar.\n\nThe only way I can describe the material is that it looked like it was made of liquid Mercury and had been poured on her. Her breasts were clearly visible but covered at the same time. They slithered and jiggled as provocatively as if she were naked with her erect nipples clearly outlined. The skirt hugged her hips then flared a little down to the floor. Around her waist she wore a silver rope that was so finely braided it looked like mesh. It was tied at one side and the ends hung down her thigh about a foot. She turned around and slowly swayed her ass from side to side which made it move in such a way as to leave no doubt that she too was not wearing panties. Silver high-heels adorned her feet.\n\n\"I have no idea what I have done to deserve to be with two women as beautiful as you two. You've both taken my breath away and managed to top everything that has transpired on this extremely eventful day.\"\n\n\"Put your coat on and grab the camera and let's go get some dinner. I'm rather hungry for some reason.\" Kealani said.\n\n\"I can't imagine why after all the calories we burned up fucking today.\"\n\nWhen we arrived at the concierge desk even he seemed completely disconcerted by the vision of Lauren and Kealani. You could tell he was struggling to maintain that air of aloof detachment he normally presented. \"Good evening. You both look very nice tonight. Your escort will be especially pleased with his assignment, I'm sure.\" He turned to signal the assistant to begin his duty as cameraman. The young man needed no verbal command to relieve me of the camera and start recording.\n\nIt was hard to say whether Kealani looked more exquisite in one of her costumes or in more modern western clothes. Judging by the stares she got while walking to the room where the cocktail party was to be, you couldn't tell much difference. Although tonight was somewhat different with Lauren added to the parade. She would have gotten stares even without being with Kealani. Both of them together made for a spectacular display.\n\nThe cocktail party was a nice way to begin the evening. At least it seemed that way at first. Only guests with suites and members of the frequent sailing club were invited so it was not too crowded. The combo I liked so much in the little cabaret was there to provide the music and there was a small dance floor where a few couples were dancing. We got a glass of champagne and some hors d'oeuvres from the lavish buffet and stood next to some fellow passengers while we munched and talked.\n\nThe ship's photographer made his inevitable appearance and took a lot of pictures of us. Kealani told him he could take some more at dinner and told him where we were dining. He said he would see us there and continued around the room taking pictures. The combo started playing another of my favorite songs: 'I'm in the Mood for Love'. \"May I have the pleasure of this dance?\" I asked Kealani.\n\n\"I'd be delighted.\" She softly replied. We went out onto the dance floor and I took her in my arms. I held her close as we once again got lost in the joy of dancing with each other. Her perfume made me dizzy with delight. The words of the song were once again giving voice to what was in our hearts. The next song was my favorite Stevie Wonder song: 'Overjoyed'. They did it slower and more sultry and it was perfect.\n\nAfter a couple of minutes I saw Lauren next to us on the dance floor. She was with a very young man who looked like he had just won a prize he was so excited. Lauren was using all that she had learned the past few days to be as seductive as she could and it was having a very noticeable effect on the young man. He was trying not to be too obvious about looking down at her cleavage but it was a losing battle. Lauren's marvelous breasts were displayed so enticingly that no man could resist wanting to bury his head between them.\n\nThe music stopped and so did we. We were suspended between walking off the dance floor and waiting for the next song when suddenly the female vocalist started talking. \"Ladies and gentlemen I'd like to acknowledge a couple of our guests who I think most of you have seen on this cruise but no one seems to know much about. We've performed on quite a few of these cruises and seen a lot of people dancing to our music but I have to say that I've never enjoyed watching a couple as much as I've enjoyed watching these two. So I hope you'll join me as I dedicate this next song to them.\" She walked out onto the floor and came up to us and said, \"I hope you two stay as much in love as you are tonight for the rest of your lives.\" She then returned to her place and began to sing Dusty Springfield's 'The Look of Love'. She might just as well have driven a stake in my chest.\n\nIf you've ever heard the expression 'my heart was in my throat' you'll have some idea of what I was feeling. We couldn't very well just walk off the dance floor but staying and dancing was the most bittersweet thing I've ever done. I had to literally fight to keep the tears from flowing down my cheeks. We had been exposed. Despite every attempt to keep this an arrangement it was obvious even to an entire ship full of people that we had fallen irretrievably head over heels in love with each other. I pulled her close to me and somehow managed to move my feet in a feeble attempt at dancing. She did not resist. I felt her let out a long sigh as she melted into my arms. Just when I thought it couldn't get any worse, everybody else left the dance floor and we became the center of attention. Finally the music stopped and before we could walk off the floor everybody applauded.\n\nI couldn't count the times on this cruise that Kealani had rendered me speechless with how she looked or what she did but this time I was truly dumbfounded. Then I decided, this fantasy stuff is risky business, sometimes you just have to say 'what the fuck'. I took Kealani's hand and bowed to the audience. Then I pulled her to me and kissed her. Might as well go down in flames. Somehow we managed to get off the dance floor and find Lauren. She looked at us and said one word: \"Busted.\"\n\n\"Who was that child you were molesting on the dance floor?\" I asked in response to her all too true comment.\n\n\"A few hours ago you'd have been right. Rodney is celebrating his eighteenth birthday today. I couldn't believe he had the chutzpah to ask me to dance so I said I'd love to.\"\n\n\"Well I think you've made his day.\" I told her.\n\n\"Not yet, but I'm going to. He told me he was going to one of the dance clubs later and really hoped I could stop by for another dance with him. I told him we were thinking about going to the show lounge at 10 and would very much like to have him join us. He said he would meet us at 9:45 at the restaurant we're going to.\"\n\n\"OMG Lauren, you really have become a cougar.\"\n\nThe assistant concierge that was recording our evening was leading us out of the cocktail party and guiding us to the restaurant. \"Did you record everything that happened at the party?\" I asked him.\n\n\"Yes sir.\" He proudly replied.\n\n\"You may edit tonight's recording as you deem appropriate.\" I said quietly to Kealani. She did not respond.\n\nThe meal, although excellent, was anticlimactic after the party. Kealani and I tried to act like it never occurred but the elephant was in the room now. Lauren finally spoke up and said, \"How long do you two think you can go on pretending this hasn't happened. You've both taught me so much in such a short time. Now I'm going to tell you: accept it. Stop thinking about it and just enjoy it. Love doesn't happen that often so don't try to avoid it. Open those fists Kealani.\"\n\n\"Lauren that isn't fair. I'm thinking about Eddy not myself. He hired me to do a job, to be his fantasy girl. It was supposed to be for reawakening and strengthening his sex life with his wife. Not to destroy his marriage.\"\n\nThen Lauren said something truly remarkable, \"Kealani can't he love you and his wife? For that matter can't he love all three of us? Do we have to put limits on him? Weren't we all happy to be there this afternoon when all six of us were with him? Isn't that what unconditional love means?\"\n\nKealani was quiet for some time as she thought about what Lauren had said. \"Yes Lauren that is what unconditional love means. Thank you for reminding me.\"\n\nAs if on cue, the ship's photographer made his appearance. He relieved the tension by dragging Kealani and Lauren around the restaurant and taking their picture. When he finally brought them back to the table he looked at me and said, \"Someday you and I will have to sit together and drink some whisky so you can tell me all about this.\"\n\nWe finished our meal and headed for the exit. There at the door in his rented tuxedo was Lauren's date Rodney. He looked at Lauren like she had just stepped out of a movie and he couldn't believe she was real. \"Rodney! I'm so glad you decided to join us.\" Lauren said to him as she held out her hand. He hesitated like he wasn't sure if he should shake it or hold it. \"When you're happy to see a lady Rodney you should kiss her hand.\" He quickly took it and raised it up as he lowered his head a little to kiss it. \"That's very good Rodney. You did that quite well.\"\n\n\"Thank you Lauren. It was nice of you to teach me that.\"\n\n\"Oh my dear Rodney that is merely the first of many things I intend to teach you tonight.\n\nWhere are your parents Rodney?\"\n\n\"Oh they've gone back to their cabin. They told me to behave but enjoy myself. And to get to bed before midnight.\"\n\n\"Rodney that is excellent advice and I intend to see that you comply with their wishes. Now give me your arm and you can escort me to the lounge.\"\n\nWe found a sort of booth like seating arrangement on the far side of the balcony. It had a good view of the stage but with the high back bench seat and the two cocktail tables in front of us afforded a great deal of seclusion. It was quite dark and the waitress had to use a little flashlight to write down our drink order. I ordered a large bottle of sparkling water and a shot of cr\u00e8me de menthe for Kealani and me. Lauren ordered a split of champagne and two glasses. When the waitress left she told Rodney, \"I know you're not old enough to drink alcohol on this ship but tonight is a special occasion and one little glass won't do any harm.\"\n\nThe waitress brought the drinks as the show was starting. We were seated side-by-side pretty snuggly with me on one end and Kealani on my right. Rodney sat between Kealani and Lauren. There was an MC who told us about the show and then a man sang a couple of songs followed by six pretty women in very scanty thong type costumes who performed a sort of jazz ballet while colored spotlights illuminated their writhing bodies. It was difficult to tell what their faces looked like until the end when the lights came up so they could take their bows.\n\n\"Holy shit!\" Kealani blurted out.\n\n\"What's wrong?\" I asked her.\n\n\"Nothing's wrong. I'll tell you about it later.\"\n\nWhen the stage lights were fully lit I glanced over to see how Rodney was enjoying the show. He had a very contented look on his face. There was just enough light to see why. Lauren's hand was on his cock making sure that he was having a good time. The show lasted until 11:45. I signed for the drinks and we headed for the exit.\n\n\"Rodney are you staying in your parents cabin?\" Lauren asked him.\n\n\"No, I have my own room. It's a small inside cabin three decks down from my parents.\"\n\n\"Then they wouldn't know exactly what time you got back to your room would they?\"\n\n\"I guess not.\"\n\n\"In that case I'll let you walk me back to my cabin. I'd like to give you a birthday present.\"\n\n\"Awwh you don't have to do that Lauren. You already took me to a show.\"\n\n\"Oh I want to give you this present Rodney. And believe me the show hasn't even started yet.\"\n\nWhen we got back to our suite Lauren took the card key to her room out of her purse and said, \"I'll see you two in the morning. I'm sure you have something to discuss and I have something to give Rodney. It's a good thing I have my birthday suit with me.\"\n\nOnce we were inside our cabin I put my arms around Kealani and kissed her. She started to speak and I put my finger to her lips and said, \"Not now. Get undressed and meet me on the veranda. I don't want to waste another minute of moonlight.\" I got out of my tux and hung it in the closet then walked out on the balcony. In a few minutes Kealani appeared. I was a little unsure how she would react. She had turned on the i-pod and turned up the volume so we could hear it on the balcony. 'I Want to Know What Love is' began to play.\n\nShe hurried across the deck and put her arms around me. She borrowed a line from the song. \"I know you can show me.\"\n\nI held her close and felt her breathe. \"Oh my precious, precious darling I realize now I've been showing you since the first moment we met.\" I raised my head and looked up at the beautiful night sky filled with stars and let go of my mind as we both surrendered to the love we could no longer deny. We stayed that way for some time, sharing something that cannot be described in words. Eventually we went back into the suite and fell asleep in each other's arms. "
    ],
    "authorname": "mountaincat4",
    "tags": [
        "mature",
        "oral",
        "lesbian",
        "anal",
        "masturbation",
        "interracial"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/fantasy-sex-cruise-05"
}