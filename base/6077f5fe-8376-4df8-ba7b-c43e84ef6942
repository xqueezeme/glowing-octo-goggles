{
    "title": "Dark Rose",
    "pages": [
        "A Tale of Two Switches is a twelve-part series following the adventures of lovers Zabina Vitelli and Alex Rowe and was written by fellow Literotica author and friend Alex Mort (pen-name TrueMort). Two Switches finished, Alex wrote a loosely-connected follow-up tale called The Black Rose about Irish girl Roisin Donavan, Roisin's American-Islamic girlfriend, tattoo-artist Charon, and her ditzy New Zealander friend Ellie. It is a serious romance but it has the funniest last line I've seen in any Lit tale. Alex told me once that she intended to write more about these characters but she never got around to it, I guess because she was involved in a number of other projects.\n\nThose of you who have read and enjoyed Alex's stories will be sorry to hear that she died earlier this year following a short illness. She was a good friend who will be sadly missed. In tribute, I have taken it on myself to write more about Roisin. This story covers the periods before, during and after The Black Rose with some flashbacks. The middle section of the story is Alex's original plot reprised but in my words so there will be a number of differences: any shortcomings are down to me. \n\nAlex, from me and your other Lit friends Stroudle, LilyVonSchtupp, WaxPhilosophical, CareyThomas and Jodi Hutchins, this story is dedicated to your memory. Goodbye, dear friend. Sleep well.\n\nDark Rose: Pilgrimage is a long love story---I hope you enjoy it. Characters in sex scenes are eighteen years old or over. All characters and some places are imaginary\u2014any resemblance to persons living or dead is coincidental.. (Spoiler alert: if you are looking for immediate sex, you won't find it here.) \n\nCopyright \u00a9 2021 to the author\n\n* * * * *\n\n\"My Roisin Dubh is my one and only true love...\"\n\nRoisin Dubh (Black Rose)\n\nThin Lizzy 1979 \n\n1. Dark Rose: Fleeing the past\n\n\"You!\"\n\n\"Me,\" I acknowledged.\n\n\"And what the fuck are you doing here?\"\n\n\"Nice to see you too, Mammy,\" I said...\n\n* * * * *\n\nDublin - Dover\n\nI used to have a recurring dream, a dream that I had killed my father. His corpse, with dead, sunken eyes and graveyard pallor, the autopsy stitches livid against his torso, would rise up from the mortuary slab and shuffle towards me, pointing an accusing finger. I would wake, sometimes crying out, always shaking with horror.\n\nI hadn't killed him, of course, and I had a copy of the autopsy report to prove it. For the record, he had been thrashing me with the buckle-end of his broad leather belt, something he'd been doing to me regularly since I was a small girl, and I snapped and kicked him in the belly. I only wanted him to feel for once the pain he'd been dishing out to me since forever. Instead he fell down, never to get up again. His mouth fell open revealing poorly-kept teeth and his eyes stared blankly into the unshaded ceiling light. Having hastily checked for a pulse and finding none, I fled that place with my mother's screams of \"Murderer!\" following me into the rainy night. I was a killer, a fugitive who fled Ireland and made for Liverpool, stowed away on a night-time ferry from D\u00fan Laoghaire. It turned out Daddy's heart was a ticking time-bomb and he could have dropped dead at any time during the past twenty or so years. The pathologist expressed surprise that Daddy had lived as long as he had. It was several years, though, before I learned the truth.\n\n'A good, devout Catholic man' they called him and there were a lot of 'good, devout Catholic men' like him where we lived, brutalising their wives and children, especially when in drink, and confessing their sins on Saturdays so they could take Communion on Sundays. If they confessed their cruelty at all, which seems unlikely as they thought it normal, they probably got away with five Our Fathers and ten Hail Marys. Too many of the parish priests were old school as well. Still, I'm sure that in the long run God won't let them off so lightly.\n\nThere was another unpleasant recurring dream but I'll come to that later.\n\nIt took me a long time to fully accept that not all men are brutes, in fact the majority are thoroughly decent. It was on that ferry, too, that I first learned of the kindness of strangers. I had managed to board by mingling in a crowd of rugby fans heading for a big match in England. There were so many of them that ticket-checking was more-or-less abandoned. I found a small cubby-hole somewhere on board to conceal myself---a sort of storeroom containing cleaning materials---and it was there that a deckhand found me. It looked like I was in trouble, the entrance being too narrow for me to squeeze past him and make an escape.\n\nTall and skinny with sharp wrinkled features and sticky-out ears, the man looked at me for a long moment then at my pathetic little canvas bag stuffed with a few belongings. \"Now I'll bet if I asked to see yer ticket yer'd have a problem,\" he said, his Liverpool accent thick and strange to my ear, \"Runnin' away from home, are yer gel?\" I nodded, too frightened to speak.\n\n\"Got a good reason, have yer?\"\n\nI decided to show him---I didn't have much choice. I rolled up one leg of my jeans to show him the old weals and bruises purple against my skin and the fresh cuts which still oozed blood. The man grimaced. \"Christ! Who did that to yer? Yer da?\"\n\nThis time I managed to speak, a feeble: \"Yes.\"\n\n\"The lousy bastard! Okay, I'm Tommy, Tommy McClusky. I don't want to know yer name so if anyone asks me I've never heard of yer. Don't be frightened, gel, but I'm gonna lock this door. I'll be back soon and knock the door three times like this...\" he rapped the bulkhead \"...so's you'll know it's me.\"\n\nTrue to his word, Tommy was back shortly with a packet of sandwiches, a cardboard cup of tea and a can of Coke. \"Didn't know which youse'd prefer so I got both. Now I'm gonna lock yer in 'til we get to Liverpool. It might get a bit stuffy but yer only a little 'un so yer won't use much oxygen.\" He gave a snaggle-toothed grin to show he was kidding and reached to a switch by the door, turning on a dim security light. \"If yer need a pee, use one of these buckets. I'll get yer off with the crowds as soon as possible.\" He pulled out a thickly-folded tarpaulin and laid it on the deck. \"Try and get some sleep on that, it's an eight-hour trip.\"\n\nI was left wondering what sort of reward Tommy McClusky would expect for helping me. The nuns at school had filled us with shocking stories about how men were only after one thing, how they would never do you a good turn without expecting your knickers to come down in payment and if you didn't do it voluntarily they'd force you. They were all the same, one-track minds, no woman or girl was safe from them. Submit to their lusts and you'd be a fallen woman. The only way to avoid the foul depredations of men was to enter a convent and become a nun, a bride of Our Lord, and live your life in cloisters. Some choice! According to the nuns the priests are the only good men---yet recent events around the world have shown that quite a few of the 'good' Fathers couldn't be trusted to keep their trousers zipped with youngsters of either sex.\n\nIt was daylight and Liverpool when Tommy came to release me and hustled me to where the crowds were getting off. He'd even scrounged an Irish supporters' scarf from somewhere that he wrapped round my neck. \"So's yer'll fit in.\" He took my hand in his big calloused one and I thought Here it comes, reward time for the not-so-good Samaritan. Well, I supposed I could endure it and hope it didn't last long. How wrong could I be, how long before I learned to trust? Instead of trying to get into my knickers, he stuffed a couple of twenty-pound notes into my hand. \"It's not a lot, gel, but it should help yer a bit. What're yer gonna do?\"\n\n\"Get as far away from Dublin as I can,\" I told him, \"I'll make out somehow.\"\n\nHe nodded. \"Okay, here's a tip---find the bus station and get a coach down south, maybe the coast. It's the holiday season so it'll be easier to find casual work. Not London, though---the prices of things there'll make yer eyes pop. Now, youse just be careful out there, gel. There's lots of good people an' lots of bad. Just learn to tell one from the other.\"\n\nOn impulse I reached up and kissed his lined cheek. \"Thanks, Tommy. Reckon I've already found one of the good ones.\" I did wonder what my Good Samaritan would think if he knew he'd been harbouring a 'killer'.\n\nWhen I got ashore I decided that Alannah Bronagh should disappear and opted to call myself Roisin, a name I'd always liked after hearing an old song, Roisin Dubh (Dark Rose). As for a surname...? While walking away from the docks I passed a small bakery where I bought a couple of fresh-baked rolls and a coffee. The bakery was called Donavan's and that suited me. Goodbye, Alannah Bronagh, welcome to your new life Roisin Donavan. It was odd, I was streetwise in many ways and yet so innocent in others---I honestly believed that a name change would mean I could never be caught.\n\n* * * * *\n\nI did what Tommy suggested but before finding the bus station I went into a bookshop and looked at a UK road atlas for suitable destinations. I decided on Dover for it was the easiest way to get to France and other European countries. In addition to Tommy's gift I had a small stash of euros, tips for acting as a dealer in illegal card games in Dublin cellars. In Dover itself I slept rough for a few nights before being found by a Salvation Army team. When they were sure I wasn't a junky or an alkie they found me a bed in a decent hostel and arranged a job for me in a local b&amp;b. It was hard skivvying work but the proprietors were kind to me and I got a couple of decent meals a day plus some good tips from guests, especially Americans. More good people and I felt ashamed for misleading them but needs must...\n\n* * * * *\n\nI admit to being a bit of a scamp as a teenager which is one of the things that sometimes kept me away from home for days on end despite knowing I'd get a thrashing when I reappeared. But then, I'd have got the thrashing anyway so might as well do something to earn it. It was one of those nights away that I'd fallen into the world of illicit card games. I watched the men playing for hours, fascinated by the way the cards fell, and found that I had a talent, an almost photographic memory for games. I quickly learned all the major gambling games, variations of brag and poker, pontoon (called blackjack by some) and others. Baccarat and chemmy were too posh for these players although they were only games of chance like the others.\n\nAn old fellow called Liam in one of the card schools spotted my ability and took me under his wing, showing me tricks of the trade and giving me a lot of useful advice. He said never to play in the same school for more than a couple of games---while some of the hardened players might be amused by the wee girl winning once in a while, they might not care for me to win too often. Might even wonder if I was cheating. \"For the same reason, don't win too big amounts, me darlin',\" he instructed, \"Sometimes it might be best to ditch a sure-fire winnin' hand so they don't suspect or resent you.\" His best tip was to volunteer to be a non-playing dealer in exchange for a small percentage of each winning pot. I could shuffle and deal the cards as quickly as any professional and picked up more pocket-money this way than I might have done as a player. And more than once I spent an evening running away from the Gardai when they were breaking up games.\n\n* * * * *\n\nI found a few games in Dover and supplemented my wages and tips that way. An added bonus was no running away---the local police didn't seem to be bothered about small-time card games. After a few months and a decent little sum in pounds which I converted to euros, I decided to move on. Thanking and saying farewell to my employers and a couple of Salvation Army contacts, I hitched my way to Harwich and got a ferry to Esbjerg in Denmark (with a ticket this time).\n\nEurope -- Amsterdam - Tuscany\n\nI opted to by-pass France, deciding instead on Denmark, Holland and northern Belgium because I'd heard English was widely spoken in these places. The European Union's open borders policy meant I could move around easily without a passport or other forms of identification. I didn't have much trouble finding odd jobs, even if it they were crap at rock-bottom wages. I learned some of the Continental card games too and, heeding Liam's advice, made a little money that way.\n\nAnd for the first time ever I was able to openly acknowledge my sexuality.\n\nI'd known I was gay for very many years but where I came from you didn't talk about that sort of thing. Dublin in particular and Ireland in general had a surprisingly strong liberal element; gay marriage was approved by referendum (to the anger and disgust of the Church which in recent years had lost much of its influence). However, if there were any free-thinkers where I was brought up, they kept their heads well below the parapets---approval of gay relationships was a certain way to get all sorts of trouble landing on your head. Beatings up from other teenagers, beatings in your family and/or being thrown out, the wrath of the Church condemning you to hellfire. It might have been worse for someone like me---I was already the oddball kid that no-one wanted to play with or be friends with. Now, in more tolerant places, I could be myself. I found no trouble getting laid and often.\n\nMy personal taste in partners was for femmes but I usually ended up with butch rough-trade although I found to my surprise that they were often very nice girls, more so than their image suggested. Looking back, I reckon my Goth looks weren't to everyone's taste either which is likely why I hooked up with more butches than femmes. Most of my encounters were one-night stands, occasionally a bit longer, but I did learn a lot about pleasing women in bed.\n\nOne of the 'bit longers' was a femme, Liliana, whom I met in Brussels. We made it through a few weeks. Smooth-pussied Liliana wasn't keen on my bush, even though my pubes weren't excessively hairy, and she persuaded me to shave. At the end of three weeks or so, Liliana told me we were through and walked away without looking back.\n\n\"That's Liliana,\" another girl told me, \"She's got a reputation as a player, not a stayer. Never more than a month, if that long.\"\n\nI hadn't been in love with her so I shrugged my shoulders and moved on. However, no matter how often I was able to get laid, it always seemed to leave me empty and unfulfilled. There was something lacking in me, I simply couldn't fathom what. Maybe my upbringing had just soured me for relationships.\n\nAnd my pubes itched like fury while the hair was growing back.\n\n* * * * *\n\nThe dreams started one night when I was staying in Amsterdam. I'd been away from Dublin for almost two years by then and I've no idea why they took so long to manifest. Maybe my conscience had suddenly woken up. Either that or a horrible shock I'd had earlier in the evening had triggered something. I was working as a barmaid in a pub called Conan's, a hangout for gay men. The entrance was 'guarded' by a pair of six-foot-six Schwarzenegger look-alikes clad only in leather pouches and armed with gigantic replica swords. Inside the walls were decorated with huge nude photographs of young bodybuilders, wall-to-wall testosterone and all so well-endowed that I was glad I'm a lesbian---the thought of one of those monsters in my... well... There were numerous advantages to this job: none of the customers made a play for me; I didn't cause any jealous frictions between partners; and there was always a safe pair of hands to walk me back to my lodgings when the bar closed.\n\nThe horrible shock really knocked me sideways. The lighting in the bar was dim with many shadowy corners and I suddenly had a glimpse of a thick-set man of medium height, balding and with a beer-belly hanging over dark-blue jeans. A broad leather belt circled his waist and I could see its large and heavy buckle. Good Christ! Daddy! My heart began to hammer away inside me and I had to clutch at the bar to steady myself. Then the man stepped further into the light and the resemblance to my father was uncanny except this man was smiling and had kind eyes.\n\nIt must have been obvious that something had upset me for Wim, the bar's owner, hurried to my side. Like many Dutch people his English was very good. \"What is it, Rose? Are you unwell?\"\n\nI shook my head and took several deep breaths. \"I'm okay... just...\" I pointed to the heavy customer. \"That man... he looks a lot like someone I knew once ...someone who died... I thought for a moment...\"\n\n\"You thought for a moment you'd seen a ghost.\" Wim patted my hand. \"That's Henrik, he's a nice guy. But you're upset. Do you want to take the rest of the evening off?\"\n\nBut I wasn't going to give up. I shook my head, finished my shift and to be sure I was well, Wim walked me the few hundred yards to my lodging house.\n\nMy rented room was at the very top of a narrow building, one of many similar bordering the canals. \"It's not much of a place,\" the owner had admitted, \"but it's warm and dry and quiet. There are two rooms, a kitchenette and a shower room up there. The second room is occupied by another young woman so you've nothing to worry about.\" I had to mount several flights of perilously steep stairs to the room but it was cheap and I couldn't afford to be choosy. I hadn't met my fellow lodger---maybe she worked days while I worked evenings into the early hours.\n\nI was a bit of a slut that night, still rattled by Henrik's resemblance to Daddy. I fell into bed without cleaning my face and teeth. It didn't take a long to fall asleep...\n\n...I was in a long, straight corridor, one seemingly endless at first. The atmosphere was chilly and damp and there was an unpleasant antiseptic smell about the place. There were doors on either side of the corridor but each one I tried was firmly locked. The further I went, the tighter my throat felt and panic was building up inside me. Then the corridor came to an abrupt end and I was facing a final door. Something told me this was my destination and when I tried, the door opened easily. I stepped inside and the door slammed shut behind me, resisting all attempts to re-open it.\n\nThere were only two items of furniture in the room. Against one wall was a type of trolley bearing a selection of scary-looking surgical instruments, scalpels, saws, retractors, all hideously stained with use. Centrally placed was a table or slab on which lay a sheet covered figure, ominous in its stillness. Unable to avert my eyes, I watched as the sheet began to quiver and then... horror... An arm fell out, hand clutching a heavily-buckled belt, and thick fingers began to pluck at the edge of the sheet...\n\n...I started to scream...\n\n...and woke up, still crying out. My door crashed open and a tall shadowy figure, backlit by the landing's dim security light, came towards me. I cowered away, whimpering with fear.\n\n\"Don't worry, sweetie, I'm not going to hurt you.\" A woman's voice, gentle and soothing. She came and sat on the edge of my bed, taking one hand in hers. \"I heard you yelling, thought maybe you were in trouble and came to the rescue.\"\n\n\"Bad dream...\" I mumbled, \"Scared the hell out of me...\"\n\n\"Scared the hell out of me, too,\" she said, a hint of laughter in her voice, \"and it wasn't even my dream. Must have been bad, you're still shaking. Tell you what, sweetie, if you like I'll stay with you in case it happens again.\"",
        "\"Yes, please...\"\n\n\"Okay, turn over.\" I did so and the unknown woman crawled in behind me. I was conscious of a bare arm around me and a hand taking mine and then I slept again. No more dreams this time.\n\n* * * * *\n\nWhen I woke up again it was daylight. My night-time saviour was sitting on the edge of the bed, unselfconsciously naked. \"Hi there,\" she said, bright and cheerful, \"Feeling better now?\"\n\n\"Thanks,\" I nodded, \"and thanks for last night.\"\n\n\"No worries,\" she said, \"I've got the makings in my room. Give me a minute and I'll get you a coffee. How'd you take it.\"\n\n\"Black, two sugars.\"\n\nShe was back in a moment with two coffees, still naked. She was a big girl, perhaps six-foot or so, broad shoulders, light-brown hair, with ample red-nippled bouncy boobs and an abundance of slightly darker hair on her pubes. I said 'big' but she wasn't fat, more like well-muscled (not body-builder muscled but rather hard work muscled). She sat on the bed again, held out a hand and said: \"I'm Ellie.\" There was a familiar accent there.\n\nI shook. \"I'm Roisin. Call me Rose or Rosie if you like, either will do. You Australian?\"\n\n\"Nah, New Zealand. We like to think our accent's a little more refined than Oz. You're obviously Irish.\" She gestured to her unclad body. \"Hope you don't mind the outfit, Rosie. It's just me, I like being naked. If I had my way the whole world would be one huge nudist colony.\"\n\nAnd that was how I met Ellie who became what was probably the first real friend I ever had.\n\n* * * * *\n\nI've said that the bad dreams were recurring. This doesn't mean that they happened every night\u2014every four to five weeks is about how it was. That didn't make them any easier to cope with as each one was a little worse---in each dream I found myself in that corridor but try as I might I couldn't escape it. And once in that sinister autopsy room, inch by inch, Daddy's corpse seemed to be getting closer to me.\n\n* * * * *\n\nEllie was lovely and I came to adore her (in a strictly platonic sense---after a few weeks I found myself looking on her as a sister I'd never had). For all that she was several years older than me, she was a true innocent abroad and I found myself looking out for her a lot of the time. I think it was this new-found fondness for Ellie that made me realise how little I had come to care for anyone. That's why it hadn't bothered me when Liliana and others dumped me---I just didn't care about them.\n\nThere was a bonus to my friendship with Ellie. She worked in an Indonesian restaurant and was often allowed to bring tasty leftover dishes back for our main meals. If she didn't have anything from her workplace she was a decent cook in her own right. No more living off junk-food and stale sandwiches.\n\nI quickly got used to her penchant for nudity. As she'd told me when we first met, that was just her. She'd get in from her afternoon shift, call me to come and eat and before I could get half-way across the landing she'd be gloriously naked. I couldn't have brought myself to do the same. I guess I'm a bit like an old saying: you can free the girl from Catholic ways but you can't entirely get Catholic ways out of the girl. Something like that, anyway.\n\nEllie had been brought up on her parents' horse and sheep farm and loved animals. When she left school she'd taken a local college course in simple book-keeping and basic accounting and took on that work from her father. Then despite her love of the farm, she became a bit bored with the same old, same old. With her parents' blessing Ellie had done what a lot of young Aussies and New Zealanders do, she took a couple of years off to cross the world and go bumming round Europe. When she asked me about my family and why I was in Amsterdam I gave her some vague story which seemed to satisfy her.\n\n\"Have you got a boyfriend waiting at home?\" I once asked her in a private moment.\n\nHer laugh was raucous. \"Hell no, I'd sooner be fucked by a yeti than any of the blokes I've ever known. You'd better know now, Rosie, I'm gay. Hope that doesn't scare you off...\"\n\nI squeezed her hand. \"That's okay Ellie, I'm gay too.\" With a grin I added: \"But I'm not a gay nudist.\"\n\nThere was never any romantic attachment between us, just friendship, but we did make love a few times and it was usually Elli rescuing me from a bad place. The first time I was in that dreadful autopsy room and I must have been a bit loud because Ellie came in and held me until I woke up properly and calmed down.\n\n\"That bloody dream again?\" she asked.\n\nI nodded. I had never told Ellie the details of the dream. At that time I didn't know her well enough and thought that she might call the cops if she knew everything. Extradition back to Ireland was the last thing I wanted. I told Ellie something that happened to me when a child kept coming back, implying molestation.\n\n\"Okay, Rosie, I'm going to stop the dream coming back for tonight, at least, \" she told me, \"move over.\" She climbed in and wrapped strong arms around me, pulling me in so that I was crushed up against those lovely big breasts. \"Let's get your top off.\"\n\n\"I haven't got much,\" I mumbled.\n\n\"So what? Got nipples, haven't you? Big enough to play with, aren't they? Where's the problem, Rosie? Here, try this...\" 'This' was a thick nipple pressed against my lips and I didn't have much choice but to suckle on it. Not that I was objecting.\n\nMy t-shirt came off. \"Pants too?\" asked Ellie, seeking permission. I nodded.\n\nEllie ran her fingers through my pubes. \"Good!\" she said, \"I like a bit of hair. More natural. When it's too smooth it's like licking a porcelain piss-pot and a load of stubble is like kissing a hedgehog's arse!\" She massaged the area gently. \"I had a mate at home once, another dyke. One of the horses died and I cried buckets, couldn't stop. Sandra took me for a walk away from the farm and did this for me. Soothed me and I came all over her hand. Twice. Now let's see what I can do for you.\"\n\nMoving her hand down a little, Ellie started to rub my pussy with her palm and I felt myself getting moist. \"That's a good girl,\" she murmured and slipped one, and then two, fingers into me, at the same time caressing my clit with her thumb. I clung to her, whimpering, and I felt that I was getting close to the edge, far more quickly than usual. Ellie speeded up as she moved her fingers in and out and I came with a little cry.\n\n\"There, sweetie, feel better?\"\n\nI mumble thanks around whichever nipple I was sucking on and reached between Ellie's legs. She was right, hairy did feel more natural, and she was oozing. I did the same for her as she'd done for me but whereas I came fairly quietly, Ellie let out a yell which could have awakened half of Amsterdam.\n\nAfterwards she said: \"Right, now I'm going to cuddle you and keep you safe. Okay?\"\n\n\"Mmmm.\"\n\n\"No more bad dreams tonight, right?\"\n\n\"Mmmm.\"\n\nIn the morning we were both a bit sheepish. \"About last night...\" I started.\n\n\"Yeah, about last night... it was nice, Rosie, but... I don't want to upset you... well, I love you as a mate, not as a girlfriend. I just wanted to help you get over the nightmare.\"\n\nI sighed relief. \"Thanks, Ellie, I'm not upset. You're a lovely friend and I feel the same towards you. We'll write it off as you being concerned.\" (We did make love three or four more times but only in similar circumstances.)\n\n\"I've got a confession to make, Rosie,\" Ellie once said, \"I hope it doesn't spoil our friendship. I'm a sub.\"\n\n\"What's that?\"\n\nMy friend looked astonished that I didn't know. \"I'm a sub... a submissive. I like to be dominated, not cruelly but my partner should be like a stern parent putting her child right. You know, like telling me what outfit I'm allowed to wear when we go out or if I could have a second glass of wine, things like that. I enjoy some gentle BDSM too.\" My puzzlement must have shown because Ellie seemed to be surprised and then explained submission, domination and BDSM to me.\n\n\"Oh... that's ... interesting... I guess...\" My lack of enthusiasm was evident.\n\nEllie looked disappointed. \"Sounds like it's not for you, is it Rosie?\"\n\n\"Sorry... no... I don't think so...\"\n\n\"It's not going to muck things up between us, is it Rosie?\"\n\nI pulled her in for a hug. \"Of course not, we're good mates and good mates accept you for what you are. They don't just drop each other for petty reasons.\"\n\n\"Well, if ever you fancy trying it, you can be my dom any time.\"\n\n* * * * *\n\nOne day when we'd been friends for several months, Ellie came to me bouncing with excitement. She grabbed my hands and danced me around. \"Rosie, I've been offered a six-month job in Italy. There was an elderly couple on holiday in the restaurant today, name of Vitelli. They own vineyards and horses in Tuscany. Their stable girl is going on maternity break. When I said I loved horses and had been brought up with them, they offered me the job. I asked about something for you---they said there was no other position open but if you'd be prepared to do skivvy jobs for food and a bed with a little pocket money, okay.\"\n\n\"Sounds great, Ellie,\" I replied, \"But what about the language problem? I came to places like Amsterdam because so many people speak English.\"\n\n\"No worries,\" Ellie grinned, \"I speak fluent Italian. That's how I got talking to them, when I heard them speaking to each other. My mum's mother is Italian and I grew up talking both languages. I can teach you some. You're a super pal, Rosie. Please say you'll come...\"\n\nWho could resist? We were on our way to Tuscany...\n\n* * * * *\n\nThe Vitellis were a lovely couple, probably in their late sixties and very warm and welcoming. We moved into the stable girl's hut which was a bit basic but comfortable enough---hell, after where I was brought up almost anything could look good. It was a single room but apart from that not unlike the Amsterdam flats with two bunk-beds, a shower-room and a small kitchen area. I was doing all manner of crap jobs, mostly in the open, and I enjoyed the change. My efforts at learning Italian weren't all that successful but at least I could say 'Good morning' and 'Thank you'.\n\nEllie was very happy with the horses but a bit twitchy otherwise. She hinted several times she'd like me to be her dom but I couldn't bring myself to do it.\n\nPoor Ellie! I felt guilty at not giving what she needed. I simply couldn't. Or I could, I suppose, but it wasn't in my nature and my unwillingness and discomfort would have shown. Ellie was so kind and loving, I believe she would have been upset to think I was going against my own inclinations simply to please her. But there were several evenings, when we had put the horses down for the night, that she seemed ready to bounce off the walls of our accommodation. I decided there was something I could do without getting too deeply involved myself. Ellie owned a set of handcuffs and that gave me inspiration. One morning I borrowed a small item from her bag---I didn't think she'd miss it immediately.\n\nThat evening I told her: \"Ellie, I've got a fun idea. It's only a little thing but it might please your sub side.\"\n\nHer eyes lit up, childlike. \"What? Tell me... tell me...\" For all that Ellie was several years older than me, much of the time I felt like the adult in our friendship.\n\n\"Well, I got hold of your handcuff key today. When we closed up the stables tonight, I taped the key on top of one of the lower fence-rails. Supposing I suggest that you strip off, then I cuff you and send you out to find the key. Would you like that? There're quite a few yards of rail to search.\"\n\n\"Oh wow!\" she breathed, her clothes already coming off. Hands pinioned, she set out on her adventure. As I said, such a little thing but it seemed to give Ellie so much pleasure.\n\nShe was back much sooner than I expected, dangling the cuffs in one hand. She was also wearing a t-shirt I didn't recognise. \"You were quick,\" I commented, \"and you found the key easily. And where did that shirt come from?\"\n\nEllie shook her head violently. \"I never made it to the stables,\" she said, \"I bumped into two other people in among the vines, Miss Vitelli and her girlfriend.\" One of the other estate workers had told us that an American niece of the Vitellis and a companion were occupying the estate's guest bungalow, a bit posher than the stable-hands' hut where we slept.\n\n\"Oh, that could have been awkward.\"\n\nEllie shook her head again. \"Well, I tried to hide but they caught me out and they seemed to take it in their stride. Rosie, I think that the girlfriend was doing the same thing I was. She was doing up her blouse and it was out of whack, lop-sided---the buttons were all in the wrong holes like she'd tried to do it up too quickly. And she was clutching what looked like a handful of panties.\" She started giggling. \"And here's the clincher, Miss Vitelli had a handcuff key so she freed me and loaned me this shirt. Rosie, how many people walking at night just happen to have a handcuff key in their pocket?\"\n\nEarly the next morning when Ellie was exercising the horses and I was mucking out the stables, two women, both much taller than me, approached. \"Hi, I'm Zabina Vitelli,\" one said, \"You can call me Zabi. And this is Alex Rowe.\"\n\n\"I'm Roisin Donavan or Rosie if you prefer. Ellie's out with the horses.\" I put out a hand to shake, realised it had traces of horse-shit and pulled back hastily, wiping it down my overalls.\n\nZabi grabbed my hand between beautifully manicured ones. \"Don't worry,\" she grinned, \"horse droppings are healthy enough, they're only recycled grass and oats after all.\" Alex followed suit with an enthusiastic handshake.\n\nIf I was a lowly Goth, Zabi was an expensive Super-Goth. Her eyes were a fascinating gold-flecked hazel colour and black hair was shaved both sides into a Huron crest with a long braid down the back. She had top to bottom piercings in both ears, tiny silvery rings similar to those in my eyebrows, with a slim steel bar through her left eyebrow. Outstanding was a perfect tattoo of a black rose on her neck, so realistic it could have been freshly plucked.\n\nIn contrast, Alex was attractive in a tomboyish way, green-eyed, athletic build and blond hair close-trimmed and tousled. She was wearing shorts revealing a long, nasty-looking scar down the outside of her left leg, the result of a surfing accident she told us later.\n\n\"Nice tattoo,\" I said, pointing to Zabi's neck. I was a little envious of the skin art. I'd always fancied having tattoos but I'd heard so many horror stories about the pain I'd never followed through. My piercings had stung but they were over quickly. Tattoos took time.\n\n\"Yes, I'm very proud of it and it's special in more ways than one.\" Zabi looked lovingly at her companion. \"It's what first attracted Alex to me. Before we got together, about once a week she'd come into the restaurant I owned and sit there staring at me. It's a wonder food ever passed her lips. Anyway, I hope we didn't shock Ellie too much last night.\"\n\n\"No,\" I replied, \"I think that once she got over the surprise she quite enjoyed it.\"\n\n \"Good. I think Alex enjoyed it too.\" Alex added: \"You bet!\" and both women laughed\n\n\"Okay,\" Zabi continued, \"Thing is, we'd like the two of you to come for a meal this evening. Nothing formal and don't think of bringing anything, we've all we need, especially wine---we've got countless barrels of the stuff here.\"\n\nFollowing that first encounter, we were invited to supper with Zabi and Alex several times and friendships were born. One of those evenings changed my life forever. We seemed to slip naturally into two pairs: Ellie and Alex, whose sexual recreational tastes were similar, were constantly chuckling together as they swapped stories; Zabi and I would just sit and talk. The impression I had at times was that as we talked, Zabi was studying me very closely with a laser-like eye. It was as if she could read my soul. I must admit to having a very slight crush on Zabi but that's all it was, a slight crush---it was obvious that she and Alex adored each other and I wouldn't be the one to put that at risk. But Zabi was all you could want in a friend: caring, clever and classy---most of all, classy.\n\nAlthough Zabi had a number of business interests in California, including fashion outlets and similar, she and Alex had come to Tuscany with a view to learning how to manage the vineyards and winery. Zabi's uncle and aunt were considering semi-retirement and hoping that she and Alex would be able to take over.\n\nOn the evening in question we had all indulged rather freely in Vitelli estate wines and were probably more open than we might otherwise have been. At one point Alex and Ellie came over to us, Alex dangling two pairs of handcuffs. \"We fancy going for a fun run through the vine fields,\" she said, \"if that's okay with you, Zabi.\"\n\nZabi waved a languid hand. \"Of course, little one. Have fun. But you're both a bit tipsy so be careful in the dark.\"\n\nEllie turned to me. \"All right with you, Rosie?\"\n\n\"Yes, why shouldn't it be?\" I could have put it a little more kindly, maybe, for a slight flicker of disappointment crossed Ellie's face and I felt a touch of guilt. Then she brightened, the two stripped off, handcuffed themselves together, and set off into the gloom, giggling like schoolgirls.\n\n\"I think Ellie would like you to be more dominant,\" said Zabi.\n\n\"I know,\" I replied, \"but I'm afraid it's not in my nature. Even if I was like that, it might not work out---we're just friends, not lovers. It seems to work well for you and Alex, though, with her being submissive.\"\n\nZabi shook her head. \"It's not that simple for us. She may be submissive for now but we're both switches.\"\n\n\"What's that?\"\n\n\"We both like being dominant at times and submissive at others. It's a bit more complex than that but the simple explanation will do for the moment. Alex is going through a submissive phase right now. We might change tomorrow or the current situation may last months.\"\n\nIt was the several glasses of potent wine that did it, of that I'm sure. I stood and dropped my jeans. \"I'm not making advances, Zabi, I just want you to see this.\" I pointed to the scars down my legs. \"The fruits of my childhood and teen years,\" I said, \"this is why I could never dominate or submit. I couldn't contemplate doing to anyone else what was done to me, even if it was gentle play rather than vicious.\" And then it all spilled out, the brutal treatment I'd suffered, how I had killed my father and spent the past couple of years on the run, how my dreams served as a constant reminder of my crime.\n\nZabi showed no sign of shock or horror. Instead she took my hand in hers and said: \"You were lying on your bed when your father attacked you. Barefoot?\"\n\n\"Yes.\"\n\n\"On your back or your side---what?\"\n\nI thought for a moment. \"On my side as far as I can recall.\"\n\n\"Doesn't sound like a position to deliver any kind of powerful kick, let alone a lethal one.\"\n\nI shrugged. \"Whatever, I'll be spending the rest of my life looking over my shoulder.\"\n\nZabi shook her head. \"Not necessarily. I've got a suggestion. Why not go to the States when Ellie's contract here finishes? I'll cover your air-fares. As for when you get there, my family has a number of businesses in California and we can find work for you. I'm sure Ellie would like to go with you. I think both of you would find our nightclub interesting---it's called The Ascension and is a little... unusual. Regarding accommodation, we have an apartment overlooking Venice beach. Alex and I intend to stay in Italy for the foreseeable future so the apartment's yours for as long as you need it and rent-free. It'll just be a relief to know that it's being cared for.\"\n\n\"Oh, but that's a grand idea,\" I said, tone sarcastic, \"And here's me without a passport and likely to be arrested by Immigration and deported to Ireland as soon as I get off the plane.\"",
        "\"Leave that to me,\" smiled Zabi, \"How'd you feel about having your photo taken tomorrow?\"\n\n* * * * *\n\nA week or two later Zabi handed me an Irish passport complete with a US visa and a scattering of stamps showing countries I'd supposedly visited. The passport even looked a bit worn as if it had seen some use. This was obviously why she'd taken me to the local photographer. I was astonished to see a green card too. \"Problem solved,\" she grinned.\n\nI regret I was a bit ungracious at the gift. \"These must be fakes,\" I said.\n\n\"Any immigration service in the world will accept those as genuine, including the Irish passport office,\" she told me, adding: \"My family has some unusual connections and we are owed a lot of favours.\n\n\"Now, you will be met by Dominic, my brother and his lady, Jinn. Jinn is lovely but you might find Dom a bit intimidating at first, even scary. As a child and teen he was variously diagnosed as having psychopathic or sociopathic tendencies, if not those then possibly high-functioning Asperger's. Every shrink had a different view. I don't really think he's any of those. Deep down he's kind and caring but he is emotionally... detached, perhaps... he doesn't seem to think the way others do and finds it difficult to relate to people.\"\n\nI asked Ellie if she wanted to come to California with me. I thought I would have to tether her down as she virtually leapt about with glee at the thought. She was almost like the small child on a car journey who constantly asks: \"Are we there yet?\" Within several days, her passport miraculously contained a US visa and there was a green card for her too. Her one regret was leaving the horses but that would have happened anyway when the usual stable-girl returned to work. Zabi promised to find a suitable replacement before we left. A few weeks later and we had airline tickets from Florence to Los Angeles. And without saying why, Zabi suggested to me that the apartment's second bedroom might be more acceptable to Ellie.\n\nThere were last words of advice for me, too. \"Roisin, there are scars deep inside you, mental scars, probably the cause of your bad dreams. Sooner or later you will have to face your problems head on if you ever want to be free.\"\n\n* * * * *\n\nSanta Monica\n\nWe landed at LAX and then it took a good two hours or so to get through Immigration. When we got to the desk I landed a female officer who was cold-mannered but fast and efficient. Ellie got stuck with a particularly officious dickhead who questioned her closely about her green card. Zabi had anticipated this and had tutored us well. Eventually he accepted her story and waved her through. This guy was as tall as Ellie but his eyes hardly rose above her chest level. She was wearing a loose, sleeveless low-cut top and her bountiful bra-free boobs with their prominent nipples swayed and jiggled about, threatening to escape. I guess this is why he took so long to question her---the pathetic creep was hoping she'd have a wardrobe malfunction.\n\nCan't say I blame the creep too much. I reckon the eyes of every straight man and every gay woman were on Ellie as her boobs wobbled their way across the concourse. I didn't say anything to her---by Ellie's standards she was vastly overdressed.\n\n The apartment was something else, finer than anything I'd ever lived in, one attraction being a great picture window overlooking Venice Beach and beyond it sparkling blue ocean. There were a number of packed and sealed storage boxes on the floor but Zabi had hold me that she'd arranged for them to be picked up. \"There're two bedrooms, Ellie.\" I pointed. \"Zabi told me that you might like the second room. Don't know why. Check it out and if you like it, settle in.\"\n\nEllie sauntered off and moments later came bouncing back like a great friendly Labrador puppy. She grabbed my hand and tugged me towards the bedroom. \"Come and see what I've found, Rosie. Fun stuff! Lots of fun stuff!\"\n\nI guess it was fun stuff if you're into that kind of thing. There was a small, stand-alone cupboard packed to the brim with BDSM equipment. \"Rosie, will you fix me up with something here? Please?\" She fluttered her eyelashes at me and I could barely keep from laughing. Although not my thing, I couldn't deny her the pleasure.\n\n\"Okay, Ellie, but later. I promise. Right now I'm worn out, I'd like to grab some shuteye and then perhaps some food.\"\n\n\"Good idea, Rosie. You go for your nap and I'll go out and get something for a meal.\"\n\nI gave her strict instructions to go no further than the grocery store across the road. I didn't want Ellie wandering off and maybe ending up in the wrong hands. She rolled her eyes but promised to be good.\n\nThere was one item of decoration in the main bedroom, a full-length portrait of Zabi wearing very little at all. It was signed by Alex---I had no idea she was so talented. I removed my boots and heavy leather jacket and collapsed on the bed. I was asleep in moments.\n\nI slept for a couple of hours and was jerked awake by a bad dream, not the horrific dream of the autopsy room but a memory dream, accurate in most detail, about the event that had ended up with me on the run.\n\nI'd been out dealing in a poker game and when it broke up I couldn't find anywhere suitable to sleep so I went home. Making sure all the lights were out, I climbed onto the outhouse roof just below my bedroom window and sneaked in that way. Having dried myself and put some fresh clothes on, I settled down to sleep.\n\nI don't know how long I was out of it but was awakened violently by my door slamming wide, the unshaded light going on and the heavy buckle of my father's belt whipping down on my legs, opening fresh wounds.\n\n\"You stupid, filthy little slut, I'll fucking kill you so I will!\" The belt came down two or three more times and that was when I finally cracked. Despite knowing the punishment would get worse, I kicked him in the belly and he went down... for ever...\n\nI don't know now if my mother really did scream \"Murderer!\" or if that's conscience-led false memory. I just got out of that place and spent most of the next day hiding out in a disused building, convinced the Gardai would be hunting me. I bummed a lift to D\u00fan Laoghaire and smuggled myself onto the Liverpool ferry with a crowd of rugby fans.\n\nI was still shivering as I came out of the dream then I realised there was a lovely cooking smell. Bless you, Ellie! I got up and made my way to the kitchen to find that my favourite chef was naked save for some kind of chain contraption wrapped round her waist and between her legs. Every time she moved it put pressure on her vulva and clit and she gave a little shiver. \"I was just going to call you,\" she smiled and put a plate of pasta with a tasty sauce in front of me. As a bonus, there was a glass of beer. I knew we'd need to be careful for a few days, our cash going down fast. Maybe I could con a few bucks at the beach, setting up a Find-the-Lady game. As Barnum is supposed to have said: \"There's a sucker born every minute.\"\n\nWhen we had eaten I kept my promise to Ellie, taking her to the bedroom and fixing her up with the various BDSM items she indicated. The final piece was some kind of battery-controlled vibrator, shaped to stimulate both clit and g-spot. It could be set to go on and off at irregular intervals with varying strengths, the wearer never being sure what was coming next. I lubed it thoroughly before easing it into Ellie's pussy, even though she was already very wet with anticipation. Finally I placed a small alarm in her hand. \"I'll check on you in an hour,\" I told her, \"but if you need to, sound this and I'll come running.\"\n\n\"Thanks, Rosie,\" Ellie grinned then then squeaked as the toy switched on and made her jump. When the thing turned itself off, she added: \"You'd make a great dom, sweetie.\"\n\n\"Maybe, but you know that's not me.\" I kissed her forehead and left her to it.\n\nI was relaxed on the sofa, half-heartedly watching some horror movie when the doorbell summoned me. When I opened the door I was confronted by a tall woman, easily the same height as Ellie if not a bit extra and even more fit-looking.\n\n\"G'day,\" she said, \"You'll be Rosie. I'm Jinn. Zabi texted us to look in on you, check you were settled in okay and shift all these boxes.\" Zabi had told me about Jinn but she hadn't mentioned how damn big the Australian woman was. My eyes were on a level with her boobs.\n\nUs? Then as Jinn stepped in I saw that she had a man with her. The likeness was marked. This had to be Zabi's brother, the big difference being that Zabi's eyes were as warm as Italian sunshine whereas his were dark and icy like a shark cruising the depths. He nodded to me. \"Roisin. I thought you might appreciate a little welcome gift.\" He showed me a case of Guinness. A case of Guinness---it had been a long time since I tasted that.\n\n\"I've got wine for me and Dom, Rosie,\" said Jinn, \"I'll get the glasses. I know where everything is.\"\n\nWhen we were settled with our drinks, I raised my glass of Guinness to them. \"Sl\u00e0inte! Erin go bragh!\"\n\nNot to be outdone, Jinn grinned, returning my salute saying: \"Once a jolly swagman...\"\n\nDominic regarded us with a faintly tolerant air then raised his glass. \"Salute.\" Looking round he said: \"Is your friend here?\" At that moment there came a little cry of ecstasy from the far bedroom. \"Ah yes, Zabina said she might spend a lot of time in there.\"\n\n\"I'll just go and see how she's doing,\" volunteered Jinn, \"I know you have things to discuss with Rosie and a naked woman in bondage is definitely more appealing.\"\n\nWhen Jinn had gone nothing was said for some minutes. Dominic's gaze had the same laser-like intensity as his sister's and I guessed he was assessing me, something else Zabi had said was likely. I kept quiet, leaving it to him.\n\n\"Erin go bragh,\" he mused eventually, \"Ireland for ever... But it's not, is it Roisin, not for you. You're scared to return believing that you'll be arrested and put on trial for your father's death, Alannah Bronagh...\"\n\n\"How the hell do you know my name?\" The other details he could have got from Zabi but I hadn't told even her my true name.\n\n\"I have many friends, many more useful acquaintances, and information is a valuable commodity.\" Dominic reached into an inner pocket of his immaculate jacket and produced a thin sheaf of papers, passing them to me. \"Zabina asked me to get these for you. There is your father's autopsy report and a summary of the inquest findings. You didn't kill your father, Roisin. He had a very serious heart condition, could have dropped dead at any time. His own rage probably killed him. So you see, you can return to Ireland with impunity.\"\n\n\"I don't think so, not seeing I've only just arrived here.\" I stared into those eyes that now seemed a little warmer. \"There's no-one there I care for. Never was, really. In fact, when I think about it, I don't really care for anyone.\"\n\n\"I don't think that's completely true,\" Dominic said. He pointed towards the bedroom door. \"I'll bet that you care a great deal for your friend in there.\" He was right, although I had never given much thought to my caring for Ellie---it just was. \"I can read you, Roisin,\" Dominic continued, \"because in a way we are two of a kind. You perhaps worry that your lack of caring shows you are a sociopath. Dismiss that worry, you're not, just a poor soul whose childhood has warped your outlook on life. You have wrapped your emotions tightly and buried them deeply in the belief that no-one can ever hurt you again. I can relate to that. Although not suffering the brutality that you did, something lacking inside me had much the same effect. That said, I think that you have the capacity for caring if you sever your internal bonds. One day, Roisin, you will have to face your past and conquer it.\"\n\nOthers might not have noticed but I could hear the echo of a strange loneliness in Dominic's voice. We were two lost children, two lost souls. On impulse I went to him and pulled him to his feet so that I could embrace him, offering a kind of comfort. I buried my face against his chest, struggling to hold back tears. After a few seconds he reciprocated, his arms encircling me, stiffly it's true but it was something.\n\n* * * * *\n\nThe doorbell buzzed and when I answered it I was greeted by a scrawny little fellow who respectfully removed his chauffeur's cap. \"Ms Roisin? I'm Danny. Mr Vitelli asked me to drive you to the club.\"\n\nI called out to my friend and we followed the driver to the car. I don't know what I expected but it certainly wasn't the large and gleaming limousine waiting at the kerb. \"You can drop the 'Ms', Danny,\" I told the man as I stepped into the limo, \"I'm Rosie and this is Ellie.\"\n\n\"Sure thing, Rosie,\" he said as he closed the door.\n\n\"Wow, I could get used to this,\" Ellie enthused as she wallowed back into the leather cushions.\n\n\"Make the most of it, kid,\" I said, \"If we're going to be employees at this club, I doubt we'll get this treatment every day.\"\n\nEllie wriggled about, luxuriating in the limo's comfort. \"I wonder what this club will be like.\"\n\n\"Well, Zabi said we might find it an unusual sort of place. We'll soon find out.\"\n\nAfter about ten minutes' smooth drive the car pulled up in front of a nondescript building with a plain, dark-grey metal door. You could tell where other entrances and windows had been bricked up. It looked as if the place might have been an old warehouse or similar at one time. Danny came around to open the limo's door and I began to wonder about his motives, thinking: This can't be the right place.\n\nThen the metal door opened and Dominic---now elegant in tuxedo with black tie---stepped out. \"Welcome to The Ascension, ladies.\" He lifted Ellie's hand to brush it with his lips and came out with a stream of Italian. I only caught the odd word or two, involving the sun and the moon and the stars, so I guess it was some kind of excessively flowery compliment. I know that Ellie went pink and, giggling like a schoolgirl, said: \"Grazie!\"\n\nDominic turned to me and to my surprise gave me a brief hug, whispering: \"Figlia della mia anima.\" I know it meant 'something of his' but that's all. Later Ellie was to tell me it translated as 'Daughter of my soul' whatever that was supposed to mean.\n\n\"Please...\" Dominic stood to one side and gestured that we should precede him into a spacious entrance hall. The door closed behind us and suddenly I felt like Alice through the looking-glass. The outside of the club had been plain and ugly, forbidding almost, but the inside... The best I can say is that it resembled a Florentine palazzo. The panelled walls were highly polished wood, the floor was laid in Italian marble and the ceiling was layered in concentric circles, at the hub of which was an image of heaven. In the centre of the floor was a small fountain, waters bubbling and chuckling. There were three ornately patterned doors off the reception area, each one bearing a title: a delicate and flowery script read 'Paradiso'; bolder and sharp-edged lettering read 'Purgatorio'; and sinister and forbidding scarlet Gothic lettering over the third door read 'Inferno\". This third door alone was black and had a large plate with what looked like some kind of quotation: 'All hope abandon; you who enter!' These few words were also in scarlet and cunningly painted to appear three-dimensional.\n\nFinally there was a plain fourth door marked 'Private' which I later learned led to the offices.\n\nThe one jarring note in the foyer was a desk with several security monitors manned by someone who looked like a Mob enforcer. Dominic introduced him as 'Tony' and within moments Ellie and Tony were engaged in some sort of cross-talk from a gangster film. I was getting hungry by now so I literally dragged Ellie away. Dominic led us to the 'Purgatorio' door and we found ourselves in a dimly-lit short corridor leading to another door. Ellie squealed and clutched at my arm at the sight of the sinister figure waiting for us. Tall, wearing a tuxedo and scarlet shirt, the figure's face was partly covered with a skull-like mask leaving just nostrils, mouth and chin free, very 'Phantom of the Opera'. \"It's okay, Ellie,\" I reassured, \"It's Jinn. You can tell from the eyes and the way she stands.\"\n\nDominic glanced at me and nodded. \"Impressive,\" he muttered.\n\nAs we drew level with Jinn, she held out two black masks, a simple highwayman-style for me and lacy and feminine for Ellie. \"All members and staff wear masks,\" Jinn explained, \"It enhances the atmosphere and anyway, some of our guests are very keen on anonymity.\" The four of us stepped through into 'Purgatorio'. I saw that Dominic did not have a mask and I queried this. His reply was enigmatic. \"Dante didn't wear a mask.\" Once more, what the hell did that mean?\n\nEllie put it best. \"Wow! It's a film set.\"\n\nThe room was huge, part dining-room, part dance floor and for all the world resembled an old MGM musical sound-stage. One wall was dominated by a huge mirror, making the place seem even larger. The other walls were furnished with heavy velvet drapes, a very dark red in colour. Like the approaching corridor, lighting was subdued. To one side was a dais occupied by a beautiful harpist, upper body bare, lower clad in light drapery. Most of the tables were full and in the muted lighting I could see that the serving staff---male and female---were just about naked, wearing only tiny aprons that barely covered the essentials. I did notice that a few comprised a separate group and wore collars---they seemed to work exclusively at a few tables well-separated from the majority. \"They're guests,\" Jinn explained, \"Submissives who get a kick out of serving their partners.\"\n\n\"So, Roisin and Ellie, what do you think?\" asked Dominic.\n\nEllie. could hardly keep her head still, goggling at the near-naked waitresses. A small, Asian-looking waitress bearing a tray of drinks walked past us and Ellie's tongue almost hit the floor. All the others were instantly forgotten. \"Cool,\" she breathed, turning her head to watch the waitress serving at a table.\n\nI thought for a moment. \"Impressive but I'd like to see a lot more before deciding.\"\n\nJinn laughed and pointed at me. \"And tonight's prize for the best Dom sound-alike...\"\n\n\"I think we'll eat in the private dining room,\" Dominic said, leading us to a wall where slight pressure on a panel opened a concealed door. He pointed to the little Asian waitress. \"Do you think Ellie would like Rio to serve us?\"\n\n\"You'll make her night,\" I replied.\n\nThe meal was superb, better than anything I'd ever eaten in my life. Ellie seemed to barely notice the food. Her eyes followed Rio around as the petite Asian served our meal. Rio was now dressed more formally in white shirt and black skirt---obviously the near-nudity was for the club's members, not the private dining room. And the way Dominic spoke to Rio as she attended us suggested that he had great respect and caring for his staff.\n\nWhen Rio exited to fetch our coffee, Ellie turned to Dom. \"The job offers you mentioned, could I be a server, please?\" I could guess why. The prospect of spending her working day near naked must have had quite an appeal and having Rio as a colleague doubled the appeal.\n\nDominic raised an eyebrow. \"I was going to offer something better than that, Ellie,\" he said, \"Something more in keeping with your abilities---as part of our finance administration team, say. Are you sure about this?\"\n\nFor all that she was submissive by nature, Ellie could be surprisingly stubborn at times. She set her lips firmly and repeated: \"Yes, I'm sure---could I be a server, please?\"\n\nDom shrugged. Rio returned and served our coffees and liqueurs. Dom turned to her saying: \"Thank you, Rio. Why don't you take the rest of the evening off? Oh, and Rio, Ellie here will be joining the serving staff soon. Perhaps you'd kindly give her a tour of the premises.\"",
        "I thought Ellie was going to explode with delight as she stood. \"Hi, Rio, I'm Ellie. I hope we can be friends.\"\n\nI glanced at Rio as she looked at Ellie and the attraction seemed to be mutual---I thought I might have to wipe drool from the tiny girl's chin. There seemed no doubt they would become friends...very good friends. \"I'm fairly new here myself, Ellie,\" Rio said, \"it'll be lovely to have a new friend.\" She held out her hand and with a muttered: \"Excuse me,\" Ellie took it in hers and the two left us. Only Dominic and I remained at table, Jinn having been called away on some security matter.\n\n\"I think they've each found their soul-mate so perhaps Ellie knew her own mind best after all,\" Dominic observed. He took a sip of coffee and said: \"I've got a proposal for you, Roisin, a business proposal...\" he hastened to add, \"...Besides The Ascension I have a number of other existing and pending business projects which require a lot of my time. I have it in mind to train you to eventually take over the day-to-day running of The Ascension and with a view to, in time, becoming a member of my management team.\"\n\nI was astonished. I'd been expecting something like a barmaid job. \"Me? How about Jinn?\"\n\nHe nodded. \"You. Jinn's on my team already and has enough responsibility right now. Among other tasks she's my security chief although you would work closely with her in the early days. She and I would be your mentors.\"\n\n\"But I'm not up to anything like that. I'm not bright enough.\"\n\n\"What do you mean?\"\n\n\"To be honest,\" I said, \"well... I'm probably a bit dim for such a high-flying job.\"\n\nA flash of what looked like anger crossed Dom's face before it became impassive again. \"What makes you think you're dim, Roisin?\"\n\nI hesitated. \"That's what I've always been told,\" I muttered.\n\n\"And who told you that you're dim?\"\n\nI shrugged. \"My father... the nuns at school... other kids...they all told me I'm thick.\" My father's favourite endearment for me had been: \"Stupid filthy little slut!\"\n\n\"And I'll wager no-one ever bothered to look deep-down into the real you. A basic principle of propaganda, Roisin, is that if you repeat a lie often enough and forcefully enough, it becomes the truth. The very people who should have nurtured you have put you down instead. All your life they have repeated that lie until you have accepted it as the truth.\" Dom leaned forward and tapped the table with a forefinger. \"You don't strike me as being stupid. Seems to me they were the stupid ones.\"\n\n\"But...\" I clutched at something to say. \"...I don't even know who that bloke Danty you mentioned is.\"\n\nThere was that peculiar little twitch of the lips that passed for a smile. \"Dante. You don't need to know who he was, that's irrelevant. However, it's easy enough to find things out. Someone who has an instinctive understanding of numbers the way you have, who can absorb strange card games and read the fall of those cards, who can pick up on and memorise the smallest details about others, in fact can read people so accurately, someone like that is not stupid. Uneducated, maybe, but not stupid. Roisin, 'ignorance' means lack of knowledge, not lack of intelligence.\n\n\"Listen, Roisin, both Zabina and I are excellent judges of character. Zabina saw something in you worth developing and having met you I agree with her. So I suggest you dismiss this nonsensical negativity.\" He leaned back in his chair, fiddling with his wine glass and seeming to study the ceiling. \"Take a couple of days to think over my proposition. Come to see me two days from now with your decision. If you still feel you can't cut it, I'll find you something else. But Roisin, Zabina and I believe in you, we both have faith in you.\"\n\nWhen I got back to the apartment I collapsed onto the sofa and thought about Dominic's parting words. Nobody had ever encouraged or praised me like that before. Suddenly tears began to roll down my cheeks. A few minutes later I heard the door open and Ellie's voice called out: \"Rosie, I've brought Rio home with me if that's okay!\" She switched on the light and saw me sitting there weeping. She and Rio both rushed to me, each taking one of my hands. \"What's the matter, sweetie?\" asked a concerned Ellie, \"What is it?\"\n\nI smiled through the tears. \"Ellie, Dominic and Zabi believe in me. They believe in me.\"\n\n* * * * *\n\nThe following morning I found out the location of the nearest library and made my way there.\n\n* * * * *\n\nAt the appointed time I tapped on Dom's office door and entered. He gestured towards a chair and said nothing when I sat, just raised an eyebrow in enquiry.\n\n\"Dante Alighieri!\" I blurted, \"Italian Renaissance poet, late 13<sup>th</sup> to early 14<sup>th</sup> centuries. Most famous nowadays for his narrative poem The Divine Comedy comprising three parts, Inferno, Purgatorio and Paradiso which is obviously the inspiration for The Ascension. Dante was believed to be a strong influence on Chaucer and other poets.\" (I didn't let on that I knew nothing about Chaucer; I could leave that for another day.)\n\n\"You see, you can learn, you have started justifying my faith in you.\" Dom nodded approval. \"No truly stupid person would have taken the trouble to find those few basic facts. So can I take that as a yes?\"\n\n\"Yes please, Dom! Give me a chance and I won't let you down.\"\n\n\"I know you won't. You start learning Monday. It will be tough going at first and I'll drive you hard but I believe you'll cope.\" Dom picked up a notepad and wrote several lines on it, tore off the sheet and passed it to me. \"The Goth look has to go although you can keep the piercings if you wish, they're small and unobtrusive. You're an attractive girl, Roisin, but right now you do yourself no favours with your outfits. These are the addresses for the nearest several of Zabina's fashion outlets. They will kit you out in appropriate clothing. There is also the name of a hairdresser and a beautician who can get you tidied up. I'll let them all know you are coming and to treat you with respect---we don't want a Pretty Woman situation. Danny will take you in the limousine and all costs will be charged to the company.\n\n\"One final thing, Roisin. Zabina told me that you made money by playing cards, sometimes for yourself, sometimes as a dealer on a percentage. You were sensible in the way you played and never drew unnecessary attention to yourself. However, I suggest you give this up. Even small games here can be controlled by some very unpleasant people. I strongly advise you to steer clear of them.\"\n\nI promised Dom that I would never gamble with cards again and I've kept that promise.\n\n* * * * *\n\nDom was right, it was tough going at first but I was determined to make a success of this chance he had given me. I was starting to agree with Dom, I wasn't stupid. I was coming on very quickly, my ability to absorb small details and put them to proper use being of great advantage. Now I think my 'stupidity' must have arisen in part due to my resentment of school and the always-unpleasant nuns who ran the place.\n\nEven I was impressed that first Monday morning when I looked in the full-length mirror in my room. My hair had been styled in a neat pixie cut---maybe a touch androgynous but it suited me---and my Goth make-up replaced by subtle shades which I had to admit were far more tasteful and attractive. As for my new work outfits, each item cost more than I'd probably earned in my life. I followed the advice of the fashion house saleswomen, my one stipulation being no dresses or skirts. Instead I had a number of elegant boot-cut trousers and jeans which with crisp shirts and waistcoats looked great.\n\nWhen Danny arrived to collect me, he stared then said: \"Christ Rosie! You sure scrub up well.\" He flushed. \"Sorry Ms Roisin, that kinda slipped out.\"\n\nI patted his shoulder. \"Danny, I've not had many compliments in my life. You can say nice things to me as often as you like.\"\n\nHe grinned. \"Yeah, okay Rosie. But don't tell the missus. She'd kick my ass for sure.\"\n\nBefore taking me behind the scenes to meet the several office staff, Jinn gave me a tour of the three main guest areas. Access was controlled by slender bracelets which worked like touch-cards on pads by the doors. Differently-coloured bracelets allowed or denied entrance to specific areas. Big Tony fitted me out with a gold-coloured management band which allowed me access to all parts of the club.\n\nAt this time of day there were no guests present and Jinn had all lights switched on so that I could see everything clearly. Paradiso was bright and airy, comprising a dance floor surrounded by alcoves and booths. The walls displayed a number of frescos depicting heavenly beings, gentle pastoral scenes and the like. A string-quartet often played in there and when they were resting soft mood music was piped in over a tannoy system. There seemed to be no facility for meals and Jinn explained that for convenience all guests dining went into Purgatorio. Once inside Purgatorio she showed me hidden doors behind the crimson drapes which led into chambers where those who wished could practice mild BDSM.\n\n\"Ready for this?\" Jinn led me to Inferno's entrance and, taking my hand, guided me down a lengthy flight of steep and gloomy steps. Concealed lighting flickered redly, creating the illusion that we were descending into flames. The walls appeared to be of rough-hewn stone, dripping moisture and thick with leprous-looking mosses and lichens with assorted filth and vermin. Screams and cackles of insane laughter, together with shrieks of discordant music and the sound of roaring flames, echoed from the concealed tannoy system. I shivered then, curious, I reached out to touch a wall which to my surprise was dry and smooth. Jinn laughed. \"Specially designed wallpaper,\" she explained, \"Impressive, isn't it?\" She drew back heavy black drapes to reveal a huge window. \"Here's the first chamber. On the other side it's just a mirror.\" I was looking into a black-walled, red-lit space every bit as large as Purgatorio's dining room but instead of tables and a dance floor it was filled with hideous-looking instruments resembling a mediaeval torture chamber. Inferno was obviously aimed at the seriously sado-masochistic.\n\n\"You said the first chamber?\"\n\n\"That's right,\" Jinn replied, \"we have a number of smaller chambers done out like cells. They're for groups of two to eight people. While we monitor all areas of the club, down here we have a permanent security team on duty. It's rare but sometimes a guest can go too far, ignore their partner's safe word, and has to be stopped. In such cases the guest is expelled and we help the partner find a safe refuge if they want it. You'll know security when you see them---they all wear skull masks like mine. Nobody else has those.\"\n\nI felt uncomfortable in this place. \"How often do I have to come here, Jinn?\"\n\n\"Only for your weekly management inspection and that'll be in the daytime. I'll show you the ropes later. My team will handle the rest. I can understand how you feel, Rosie. It took me some time to get used to it but there's no accounting for people's tastes. It's supply and demand and security's as good as we can make it.\" Jinn looked at me closely. \"Still want the job, honey?\"\n\n\"Yes, I promised Dom I'd hack it. Maybe more importantly, I promised myself.\"\n\nJinn put an arm around me for a sideways hug. \"Good. I knew you were the right stuff.\"\n\n* * * * *\n\nTwo months passed and Dom had a gift each for Ellie and me. When we opened the bulky envelopes he had given us we found genuine US passports and citizenship papers in our names---we both now held dual citizenship, our countries of birth and the US. In addition there were social security numbers, California driving licences and anything else of that nature which might be necessary.\n\nThere were two extra gifts for me: a death certificate for Alannah Bronagh who passed away in infancy; and a birth certificate for Roisin Donavan who had coincidentally been born on the same date.\n\n\"But how...\" Ellie started.\n\n\"Don't ask,\" I told her. I guessed that Dom had been calling in favours from some of his many strange friends.\n\n* * * * *\n\nIt had been a hard night. The 'evening' shift started at six pm and frequently went on into the early hours. By the time we had cleared up it was often four or five in the morning. I had managed to grab a few hours' sleep on a sofa in Dom's office and now when Danny dropped me off home at ten or so, all I wanted was a shower and good strong coffee. Fortunately I had a day off which would give me a chance to recuperate.\n\nThat particular homecoming was weird. Weird, weird, weird... As I entered the living-room I was met by the sight of a bare-arsed Ellie face down on our dining table, restrained by a plethora of BDSM equipment. She was making little whimpering sounds as she wriggled against the set of chains fastening her ankles and passed under the table to hold her legs apart. I had a ringside view of her moist pussy. Seeing me and the probable look on my face, she gave a sheepish grin. \"Hi, Rosie. The book says a hard surface is best. I'll clean the table properly when we're finished.\"\n\nBook? We? Finished?\n\n\"Hiya, Rosie.\" A naked Rio wandered in, a book in one hand, a brightly-coloured dildo and a feather in the other. She had a perfect little figure with the cutest-ever tuft of black pubic hair and was as enthusiastic and casual a nudist as Ellie. And in her own funny way she was as ditzy as Ellie. Rio held up the book and I saw the title. BDSM for Dummies. \"I found this in a used book store. I'm learning to be a dominatrix for Ellie. Some of the pages have been stuck with some sort of glue, though. Can't think why.\" I pressed my lips together to contain my laughter. These two were well suited. How can I put it? They gave na\u00efvety a bad name. Every now and again I wondered if I should lock them up for their own good.\n\n\"Don't mind me,\" I said, \"I'm just passing through. I need a shower and some coffee and then I'm going out for a bit of exercise.\"\n\n\"Go get your shower, Rosie, I'll make the coffee,\" Rio volunteered. I'll give her this, she made great coffee. Along with Ellie's cooking the catering at home was almost unbeatable.\n\nShower finished, I was sitting on my bed wrapped in a towel and Rio came in with my fresh coffee. \"Thanks, Rio. I'd fight mountain lions for one of your coffees.\"\n\nRio flushed a little with pleasure and smiled. I beckoned her over and lowered my voice. \"A quick suggestion, Rio. Zabi once told me that Jinn gave Alex some good advice on how to be a dom or a sub. You and Ellie should have a talk with her sometime.\"\n\n\"Thanks, Rosie, that's a good idea.\" Rio listened to the happy little moans coming from the living-room then pushed the door to behind her and whispered: \"Can I ask you something? Rosie, I'm in love with Ellie and I think she feels the same way about me. I haven't said anything to her yet. Is it okay with you? I don't want to tread on your toes.\"\n\nI took her soft little hands in mine and kissed the back of each. \"Rio, I'm delighted for both of you,\" I assured her, \"Ellie and I are only friends, not lovers. Don't waste any time---go tell her now how you feel. I just hope you'll make each other very happy.\" I had a thought. \"In the case of you two I don't think it's really necessary but have you got a safe word?\"\n\nRio nodded happily. \"Yes, it's 'Dark Rose'. Ellie chose it. Said it makes her feel safe.\"\n\nI blinked away a tear---I was Ellie's safeguard. The emotions I'd kept bound and buried for years were starting to unravel. \"I love you both, Rio, and wish you lots of joy.\"\n\nRio leaned in and gave me a sweet little kiss on the lips. \"You're fabulous, Rosie.\"\n\n* * * * *\n\nSanta Monica had been a revelation when we first moved here. Just about all human life was around us, shapes, colours, styles: businessmen in hand-made suits rubbed shoulders with hippies; surfer dudes with street jugglers; Goths with New Romantics; black, white, Asian, Hispanic; and for me the beauty of it all was that nobody frowned or sneered at anyone else. When I had walked in Goth mode almost anywhere outside of the city centre in Dublin, I had been subject to constant looks of disapproval and contempt. I'm sure that many crossed themselves as I passed by, hoping to ward off any evil clinging to me.\n\nI'd left Ellie and Rio to their bizarre little games and set out for a good walk. Although I was now accustomed to my smart business clothes and even liked them, it was still a relief at times to just slip into a t-shirt and pair of jeans. Nobody gave me a second glance and I liked it that way. And I loved my new job with all its pressures. But... I don't know what but there was still something missing as there had been in Europe, some kind of emptiness in my life. Without realising it, as I mused I had wandered down some narrow side-street, one of these places with odd little shops selling second-hand books, bric-a-brac, collectables, musical instruments, all manner of merchandise that buyers thought they didn't want but bought anyway.\n\nStill not really looking where I was going or what I was doing... I had a collision... with a living soul, not a fire-hydrant or lamp-post, but a person. I reached out and grabbed to prevent one or both of us landing on our backsides.\n\n\"Hey! I'm so sorry!\"\n\n\"That's okay!\" A deep and thrilling voice, a woman's voice, contralto I'd guess. \"I wasn't paying attention either,\" she added. I took a look at my victim and... The world slammed its brakes on, stopped spinning, and me without a seat-belt. My inner self went into meltdown and I almost reached for the sky, seeking something to keep me hanging on, grounded. Silly, meaningless words, those, but that was the way the moment got me.\n\nFirst thing I noticed, she was wearing a scarlet head-scarf, one of those things Muslim women wear... hijab, that was it. And a long-sleeved deep-purple blouse with white jeans. And bare feet in red-leather sandals, finger- and toenails painted a sparkling dark-green. She was full glorious technicolour in contrast to my plain monochrome. Large dark-brown eyes set in a beautiful oval, olive-skinned face looked back at me, a face with lips just begging to be ravished. I got a whiff of a very rich and spicy scent, the kind of fragrance to make your libido sit up and howl. I don't know if my mouth was hanging open but it sure felt like it. I took a deep breath and the world started spinning again. Suddenly I understood Ellie's reaction to Rio.\n\nWe were standing outside a shop doorway and she gestured. \"I was just going in to work. Were you aiming to go in here?\"\n\nAt that moment, if she'd said she was going to the ends of the universe I'd have followed her. \"Er... yeah, sure...\"\n\n\"Well, the doorway's quite narrow, we'll not make it through unless you give me my arm back.\" She gave me a wonderful smile when saying this, neither was there annoyance in the way she said it. I realised I was still holding the arm I had clutched at when we collided.\n\n\"Uh... sorry...\"\n\nShe winked. \"This way.\" She headed towards the back of the shop, saying over her shoulder: \"Take a seat, I'll be with you in a moment.\"\n\nFor the first time I noticed the slightly antiseptic smell about the place and at the same time became aware of a faint buzzing sound. I looked around and saw that the place was divided into several large booths. Different kinds of pictures and designs were displayed on the walls. Oh Jesus! I'd come into a tattoo parlour.\n\nMy new friend returned. She had removed the hijab to allow a mass of thick shining hair to fall free and had swapped her blouse for a singlet. I stared.\n\n\"What?\"\n\n\"Your tattoos,\" I said, pointing. Her left arm was a full sleeve of tattoos, exotic and elaborate designs that recalled magazine pictures I'd seen of Islamic mosque decorations.",
        "\"Yes, I get a lot of comments on those.\" She held out a hand. \"I'm Charon.\"\n\nI shook and damned near wet myself when her warm hand enclosed mine.\" \"My name's Roisin. You're a Moslem, Charon?\"\n\nShe grinned, making me feel slightly foolish. \"The head-scarf, right? You're good at picking up the clues, Sherlock. And you must be Irish.\"\n\n\"As shamrock. Now would it be the brogue that gave me away?\" I riposted, \"Do you get any hassle because you're Islamic?\"\n\n\"Yeah, some from the occasional bigot who thinks I'm a terrorist. You?\"\n\n\"We must know the same bigots. Hear my accent, I must be IRA.\"\n\nWe sighed together at the thought of human stupidity. \"Ah well... So, what sort of tattoo are you looking for, Roisin?\"\n\nI'd painted myself into a corner. It looked as if I was going to have the tattoo I'd always wanted but never had the guts to go through with. I thought. What was I looking for? Then I knew. \"A rose,\" I told Charon, \"a black rose.\" I took out my cell-phone and pulled up the photo I'd taken of Zabi's portrait. \"Maybe like this one.\"\n\n\"Hey, that's Zabi,\" Charon said, \"I was only an apprentice at the time but she took a chance on me and I did that rose. How do you know her?\"\n\n\"We met her in Italy.\" I explained our circumstances. As I did so, Charon looked thoughtful, tapping her teeth with a pencil.\n\n\"Can you come back tomorrow? I'll sketch a few ideas and you can pick which you like.\"\n\n* * * * *\n\nThis is going to sound strange but I had no idea of how to ask this enchanting creature on a date, much as I wanted to. Over the several years since fleeing Dublin my dates had generally been along the lines of \"Wanna fuck?\" From what I'd seen, Ellie's approach was only marginally less basic. In their early days she had once invited Rio round for a romantic dinner. When the little Asian girl turned up she found Ellie sitting naked in a chair, legs wide open, displaying pussy in all her glory. Ellie greeted her with the words: \"If you want me, come and get me. I'm all yours!\" That worked for Rio. I didn't think either approach would impress Charon.\n\nI went to consult Dominic, telling him everything. As always, he cut straight to the point. \"Is this Charon attracted to women, or specifically to you?\"\n\nI shook my head. \"I don't know. I'm hopeful.\"\n\n\"She may be married.\"\n\n\"I don't think so---no ring and she looks too happy.\"\n\nDom allowed himself a rare, dry chuckle. \"If you date her, she will not drink alcohol nor eat pork dishes. Both are haram, that is: forbidden. She may be vegetarian, although that is not mandatory in Islam. You should also know the Holy Qu'ran forbids same-sex relationships---then, so do most other religions. But... the Qu'ran also forbids any alteration to one's body which is Allah's design and is therefore perfect. You cannot improve upon his perfection.\"\n\nI briefly puzzled over what he had said and then light dawned. \"Her tattoos!\" Dom inclined his head. \"That means she doesn't follow her religion to the letter.\" Another nod.\n\n\"Is there some special way to greet a Moslem?\" I asked, confident that Dom would know. There seemed to be little that he didn't have some knowledge of.\n\n\"You could say to her 'As-salam-u-alaikum'. That means 'Peace be unto you.' The polite form of reply is: 'Wa-alaikumussalam-wa-rahmatullah' which translates as 'May the peace and mercy of Allah be unto you also.' \" Dom had me repeat these words several times until he was satisfied. \"I hope you find what you are looking for, Roisin.\"\n\nAs I was leaving his office he came out with another of his enigmatic questions. \"You do know, don't you Roisin, that Charon was the name of the entity who ferried the souls of the dead across the River Styx to Hades?\"\n\nEvery time he quoted one of these gems I was left scratching my head. I'd no idea where the River Styx was nor did I know that anyone ferried the souls of the dead, wherever their destination. It sounded like a crap job but I suppose someone had to do it.\n\n* * * * *\n\nThe following morning I was early for our appointment. An hour or so early. Like a smitten schoolgirl. Squirming, afraid my pussy would leak and let me down in front of Charon. I had never had it so bad. Truth to tell, I had never had it at all. When Charon showed, it was all I could do not to jump up and down with glee.\n\n\"As-salam-u-alaikum,\" I called.\n\n\"And Wa-alaikumussalam-wa-rahmatullah to you, Roisin,\" she smiled. \"Did you know that or were you told?\" On my admission that I'd sought advice, she added: \"Your accent's shaky but I appreciate the gesture. Let's go in.\"\n\nSitting in her studio, looking at her sketched ideas, I found out two things about Charon. One, she was a highly skilled artist and two, that her sleeve of tattoos extended to the left half of her back (I caught a glimpse in a mirror while she was changing). I selected a tattoo of three roses from a single stem, scaling my back with a blossom on each shoulder, the third being at the base of my neck. \"We'll make a start today,\" said Charon, \"There's about four or five hours work here...\" She paused and looked closely at me. \"Is something wrong?\"\n\nI found I was gritting my teeth... \"I've never had a tattoo,\" I told her, \"I've heard awful stories about the pain.\"\n\n\"Most talk of the pain is very much exaggerated. It's a stinging sensation and I promise to be as gentle as possible.\"\n\nI trusted her. Removing my t-shirt, I clambered onto her table face down and she started. As promised, she was as gentle as could be and then, surprise, I fell asleep while she worked.\n\n* * * * *\n\nA few weeks later, Charon was coming to the apartment to make preliminary drawings for a portrait of me that she wanted to do. Aware that she didn't drink alcohol I had bottled water, a variety of fruit juices and Rio had prepared a pot of her excellent coffee. She and Ellie were going to spend a few hours on the beach so I didn't have to worry too much about their behaviour. That said, Ellie's beach bag made a suspicious rattling and buzzing noise. I lined them up. \"Only go to the beach,\" I instructed.\n\nThey grinned at each other and then chorused: \"Yes, Mommy!\"\n\n\"No running around naked, I don't want you arrested for public indecency.\"\n\nAnother grin. \"No, Mommy!\"\n\n\"Oh, bugger off and have fun!\"\n\n\"Thank you, Mommy!\" Laughing, they scampered down the stairs. As they went, I saw them reach out and goose each other, letting out little shrieks and giggles. The two burst out of the front door, narrowly missing Charon who was carrying her portfolio and a sketch pad.\n\n\"Is that your roomie?\"\n\n\"The tall one,\" I answered, \"The other one's her girlfriend. Times I worry about what they'll do next. They really should have a responsible adult with them at all times. Coffee, juice or water?\"\n\n\"Coffee please,\" she said as she removed her hijab, then when asked how she preferred it: \"I like it strong, dark and sweet, just like you.\" I felt a little flip inside.\n\nTaking her coffee with thanks, Charon added: \"Truth time, Roisin. That first day we met, did you really want a tattoo or did you just want to get to know me?\"\n\n\"I've always wanted a tattoo but never had the gumption. The truth, though? I didn't know it was a tattoo parlour. You were the attraction. When I saw you for the first time I'd have followed you anywhere. Another thing I've not had the gumption for so I'll speak out before I chicken out. Charon, will you go on a date with me, a proper date, meal or a movie maybe?\"\n\n\"I thought you'd never ask. I came here today intending to ask you the same thing.\" Charon put her hands on my shoulders. \"Here's something else I'd better do before you chicken out.\" She pulled me closer and soft lips descended on mine, warm, velvety and with just a touch of tongue along my bottom lip. I'm sure I floated up to the ceiling where I could hear a celestial choir. I responded and the kiss went on and on, our tongues sucking and swirling and dancing together lovingly.\n\nAs Charon drew back, I was breathless and felt quite weak at the knees. \"Was that serious or just to relax me?\"\n\n\"Do you want it to be serious?\"\n\n\"Oh Charon, you've no idea how serious I want it to be.\"\n\n\"Good. I've never thrown myself at a woman in my life but I'm hurling me at you. Catch me, Roisin.\" It sounded as if Charon was as gone on me as I was on her. Please, please, please let that be so... She pulled me towards her with one arm and unfastened the top button of my shirt. \"This shirt feels expensive. Is it?\"\n\n\"Yes.\"\n\n\"Then I'd better unbutton it properly instead of ripping it off like I want to.\" Nimble fingers moved to the second button and then the third. I tugged her shirt from the top of her jeans and slid my hands underneath onto the warm, smooth skin of her waist and torso. It was like caressing silk and I came close to creaming my pants. If just touching her back could do that to me, what would it be like when our whole bodies were exposed to one another?\n\nMy shirt fell open as the lowest button was unfastened, revealing my neat little cones of breasts with their hard pointed nipples. \"No bra,\" commented Charon, \"Was that hope or expectation.\"\n\n\"A bit of each, maybe,\" I said, \"but I haven't been wearing a bra anyway, not while the tattoos are still healing. Not that I've got much to fill a bra.\"\n\n\"I think they're beautiful,\" said Charon, lowering her head to take a nipple in her mouth. Her warm hands slipped beneath the waistband of my jeans then into my panties to cup my backside. She squeezed and I started to leak.\n\nI managed to peel off her shirt then unhook her bra to reveal lovely, medium-sized boobs with large, dark areolas and even darker nipples. In between kisses I said: \"Yours are nicer.\"\n\n\"We'll argue about that later,\" smiled Charon, \"but right now you'd better show me where your bedroom is.\"\n\nOnce in the bedroom, Charon knelt in front of me to unfasten and slip my jeans down. \"Now you'd best lie face down, Roisin. The tattoos aren't completely healed yet and I don't want to make you uncomfortable.\"\n\n\"You're only saying that because you want to see my ass.\" I lay down as bid and expected Charon to comment on my scars. She said nothing and I braced myself for an expression of distaste, half-expecting her to recoil and walk out. Instead, a gentle finger traced a feather-light path from my bottom to my ankle and then again on the other leg. Then those luscious lips followed suit, kissing every inch or so, pausing only at the backs of my knees where her tongue came into play. I jumped a little and whimpered when she did that. I had no idea that was an erogenous zone. Having reached my ankles, she kissed all the way back up again.\n\n\"Now, let's have these off.\" Charon gripped the waistband of my panties and slowly eased them down, smothering my bottom with kisses as she went. Her tongue trailed up from my perineum, between my buttocks and along my spine to my neck, carefully avoiding unhealed, tattooed skin. She kissed around my neck and licked my ears, whispering, \"You are lovely, my little Irish rose.\"\n\n\"And you are beautiful, my Arabian Nights princess,\" I told her.\n\nMy lover held my hips to raise me into a doggy position and I gave a little cry as her tongue swept the length of my cleft. \"Do you come hard, Roisin?\" she asked.\n\nI honestly didn't know. Most previous orgasms I'd had were fairly low-key, often little more exciting that a sneeze. \"Nothing brilliant,\" I confessed. Previous experience had mostly been with butch pick-ups in places such as Amsterdam.\n\n\"We'd better fix that,\" said Charon, bending again to lick my pussy and reaching underneath to tug my pubic hair gently. She anointed a finger with my lubrication and held it to my lips. \"I wonder if you know how wonderful you taste,\" she said. I had never tasted myself, the still brain-washed Catholic in me foolishly believing that I might go to hell if I so much as touched my 'private parts' or 'secret places' as the nuns used to refer to them. I didn't really believe that crap but it had been so deeply hammered into us it was hard to escape. I tentatively touched Charon's finger with my tongue-tip and was nicely surprised. Slightly bitter-sweet with strong musky overtones, not in the least disgusting as I might have expected. Charon continued to lick, paying a lot of attention to my clitoris and slowly introducing a finger into my pussy. I was very tight there and it was a good job I was as wet as I'd become. When that first finger was all the way in, Charon introduced a second, again slowly and very gently. I could feel something building up inside me and suddenly it was as if I'd ridden a rocket to the moon. I was shaking all over and I think I cried out loudly.\n\n\"And that's the way it should be,\" Charon murmured in my ear and she turned my head so that she could kiss me. She gave a little giggle. \"That day of your first tattoo session when you fell asleep,\" she added, \"you were very lucky not to wake up naked. I just wanted to rip your jeans and pants off and have my wicked way with you.\"\n\n\"For a number of reasons, I didn't think this could ever happen to me,\" I told her, \"but I'm falling in love with you, Charon.\"\n\n\"Keep working at it,\" she said, kissing me again, \"It's mutual.\"\n\nThen the moment was spoiled when I heard the outer door slamming shut. A worried little voice called out: \"Rosie! Do you know how to get a butt-plug out? This one seems to have got stuck!\"\n\nI turned an anxious look to Charon, half-expecting her to get up and storm off in disgust. Instead she clapped a hand over her mouth trying not to laugh aloud. \"Is... that... Ellie?\" she spluttered. When I nodded she said: \"I think I'm going to like her. Come on, Rosie, let's fling something on and go see what we can do for her...\"\n\n* * * * *\n\nWithin a couple of months Charon had moved in with me. I had told Zabi and she had happily agreed to the arrangement, approving too to Rio joining Ellie. I had warned Charon about the occasional disturbance caused by my dreams. She accepted that.\n\nDom's comment that Charon was the name of the ferryman taking the dead souls across the River Styx to Hades had puzzled me. As so often, I had no idea what he was talking about. I really was a sad little creature in those days, having neglected my education in the way that I had. It was just one of the many things he mentioned in passing that determined me to read and learn. I'd learned something about Dante so I could learn something about Charon. Much later I figured out that this was Dom's intention, to get me to educate myself without it seeming that he was pushing me. Now I know all about Charon and the River Styx, about Orpheus and Eurydice, about the Argonauts, and apart from that and other mythologies, so many different things in the world. I had discovered late in life that education was a boon, not a burden. And having learned a few things, I asked Charon why, being of Middle-Eastern descent, she had a name from Greek mythology. She pulled a face as she told me.\n\n\"Because I didn't like my Arabic name.\"\n\n\"In what way?\" I asked.\n\n\"I was the youngest of ten children and while you might not believe it now, I was a sickly child, not expected to survive at first. They called me aldeiif or albayis, more nicknames than a proper name. They mean something like the weakling, the one to be pitied. I suppose in English you'd say I was the runt of the litter. Even when I grew up and eventually became fit and healthy, the names stuck.\" She sighed. \"I'd seen the name Charon somewhere and without knowing the connotations called myself that when I broke away from my family.\"\n\n\"Why was that?\" I said \"I broke from mine because of the brutality, among other things [at that time only Zabi and Dom knew my full story. Eventually I'd told Charon for she deserved to know]. You too?\"\n\n\"Not exactly,\" Charon said, \"I wanted to be an artist of some kind. As you know, I have the talent and I had the hunger. Not good enough for my parents, or rather for my father for he ruled the roost---my mother had little say in control of family matters. Although we were born Americans, he was very much of the old mind-set. When I was only sixteen, father was pushing me towards an arranged marriage with a business colleague of his, a scrawny old man with dirty fingernails and stinking breath---the old goat had been sniffing round me from my early teens and I had to be pleasant to him because he placed a lot of work my father's way. But marriage? No thank you---I knew early on that I was gay but even if I hadn't been... urghh! My three elder sisters were in arranged marriages and none of them were happy. I saved what money I could and one day, instead of going to school, I quietly disappeared and got on a Greyhound heading for California. It was a long haul in stages but I got lucky. A nice elderly couple on the bus took me under their wing and made sure I was safe the whole way. When I got here, I found work in a tattoo parlour as an apprentice and eventually set up my own business. The rest you know.\"\n\n\"Didn't your family try to find you?\"\n\nCharon shrugged. \"No idea. They're in New York, I'm here, and it's a big country. I did send my mother a message once by a roundabout route to let her know I was safe. I'm likely disowned, anyway. End of story.\"\n\n\"What about your siblings?\" I asked, \"Wouldn't they help you stay in touch?\"\n\n\"Wouldn't trust a single one of them,\" she said. She thought for a moment then added: \"No, not one.\"\n\nI had been attracted to Charon in the first instance because of her exotic beauty and then her niceness (thankfully she had been attracted to me, although for reasons I've never been able to fathom) and now I knew that we had more in common, the need to escape a family life of total wretchedness. Now we had each other and each time I looked at Charon I realised I couldn't wish for anything better.\n\n2. Pilgrimage: Facing the past\n\nThen in the course of two dreadful years we had a double tragedy. The first was when Zabina died of cancer. She had known for some time that it was terminal but not wanting to cause any worry or pain, had forbidden Alex to tell us. Zabi was interred in the Vitelli family plot and a grief-stricken Alex elected to stay in Italy to be near the love of her life.\n\nI know that Dominic loved his sister dearly but as always his emotions were buried deep inside, still and unreadable. He went to Italy for the funeral and when he returned asked me into his office. Jinn was there too and seemed to have been weeping. Once settled there with cups of fresh espresso before us, Dom showed me a sheaf of papers in Italian. \"Zabina's will,\" he explained, \"and you are a beneficiary.\"\n\nI was astonished. \"Me?\"\n\n\"Yes, she has left the apartment to you, free and clear.\"\n\n\"But... why... what about Alex? And Jinn?\"\n\nDom gave that strange little twitch of the lips which signified a smile. \"Don't worry about Alex---they discussed the will and Alex was in agreement with everything stipulated. Zabina has assigned most of her assets including her restaurant and fashion businesses with all outlets and design copyrights to Alex. It all amounts to far greater value than the apartment.\n\n\"As for Jinn, Zabi has bequeathed all her shares in The Ascension and other clubs. \"\n\nStill in a kind of shock, I could only mutter: \"Thank you.\"\n\n\"There are a couple of non-optional stipulations to your legacy, though,\" he added, \"One is that Ellie can remain with you, rent-free, until such time as she wants to move elsewhere. I doubt she'll be with you long---I think she and Rio have other plans.\"\n\n\"And the second stipulation?\"\n\n\"That if you decide to sell the apartment and move out, say to buy a house, that any excess over the original sale price be donated to charity. Are these conditions acceptable?\"",
        "\"Yes, Dominic.\" I felt my cheeks growing wet and Dom passed me a tissue, looking vaguely embarrassed as he always did when anyone showed emotion in his presence.\n\nEllie and Rio did have other plans, a home of their own. They wanted Jinn's and my opinion so we went with them to view the one they had in mind. It was a shitty little apartment in one of the shittiest places in town and the rent was at least twice what I would have thought reasonable even though I was told it was cheap for Santa Monica. It was the wall-to-wall junkies and winos in the area that decided me. I persuaded the girls to stay where they were in Alex's old room. Among other things it saved them money and the trouble of moving all the BDSM equipment, Ellie's 'fun stuff'. I had sound insulation installed in both bedrooms. Best investment ever. While Charon and I were generally quiet and discreet as far as our love-making went, Ellie and Rio tended to let it all sing out.\n\n* * * * *\n\nRoughly eighteen months later, Alex died suddenly in a local hospital. She had pneumonia and had disregarded the symptoms, brushing them off as a very bad cold. She persisted in this belief until complications set in by which time it was too late to do much for her. She was laid to rest next to her beloved.\n\nIf nature were human it would likely be a person with an ironic turn of mind. When several years previously Zabi had offered me the use of her apartment, she told me that she and Alex intended to stay in Italy for the foreseeable future. As I said, irony. She could not possibly have seen just how long their stay would be.\n\n* * * * *\n\nZabi's death had saddened me, Alex's death not only saddened me but shook me up too. My bad dreams had never let up, had, if anything, worsened. Sometimes I wondered how Charon put up with my night fears and I said as much to her.\n\n\"Because I love you, you damned fool,\" she said.\n\nAs I said, Alex's death shook me, making me realise that you never could tell when your time was due leaving it too late to clear up all those unresolved issues. I knew what I had to do. Truth be told, I'd known for some time but kept on hoping the problem would go away by itself. It obviously wasn't going to so I went to Dom and told him I need to take some time off to travel to Ireland. Jinn was with him. Just as well, I wouldn't need to explain all over again to her.\n\nHe looked at me in that strange way he has then nodded. \"Your demons piling up on you?\"\n\n\"How did you know? Stupid question---you know everything.\"\n\n\"Not everything. For instance, I don't know---\" I could see a mini-Dom lecture coming on and so could Jinn for she held up a hand to stop him. He gave a rueful little smile and closed his mouth.\n\n\"Back when I first came here,\" I said, \"both you and Zabi said that sooner or later I needed to face my troubles. You were right. That's why I need the time, to go back to Ireland and break the spell.\"\n\n\"I agree,\" said Dom. \"Can you give me a couple of months? I want to look into establishing a couple of clubs in London. I'll find some prospective premises and I'd like you to inspect them and report. Apart from that, take as much time as you need with my blessing.\"\n\n* * * * *\n\nI told Charon of my intentions. I know, perhaps I should have discussed them with her beforehand but I didn't want to risk her persuading me not to go. I don't think she would have done but it was a slight risk. We sat together in the apartment, both solemn and more than a little teary.\n\nCharon clasped my hands. \"Is this really necessary, Roisin?\"\n\n\"Yes,\" I replied, \"Zabi once told me that I seemed to have inner scars that I had to erase somehow if I ever wanted contentment. And Dom told me I was running away from my past and that rather I should face it.\" I shrugged. \"Easier said than done. You know about my life and you've nursed me often enough through my bad dreams. Dom and Zabi were both right. I need to confront my past head-on, Charon, and I can only do that by going away for a while.\"\n\n\"When are you leaving?\"\n\n\"Seven or eight weeks, probably.\"\n\n\"So it's like a pilgrimage?\"\n\n\"Yes. That sounds about right.\"\n\nCharon nodded slowly. \"Pilgrimage is something we Muslims can understand---you will have heard of the haj, the pilgrimage to Mecca. For now... Roisin... I guess you need your own personal haj.\" Her face was a mixture of sadness and apprehension and her voice trembled as she said: \"Roisin, you will come back to me...?\"\n\nAs so often, I had picked Dom's brains for something I wished to say to Charon when the moment was right. Now was that moment. I raised her hand and kissed each finger, saying: \"Qulubuna wahida [Our hearts are as one]. I will be back, promise.\"\n\nLaughter bubbled through her sadness. \"Your accent, Rosie, you'll be the death of me. I want to make a gesture to chain you to me, to join our hearts for sure. This is something I thought of weeks ago and I was saving it for a special occasion. I suppose this is special so I might as well show you now.\" She picked up her portfolio and withdrew a single sheet of cartridge paper, passing it to me. \"What do you think of this?\"\n\nIt was one of Charon's wonderful flower paintings, two roses, stems entwined, a black rose and another coloured a dark reddish-pink, both damp with dew, both so realistic that they could almost have been laid live on the page.\n\n\"They are beautiful.\" I pointed to the dark-pink rose. \"What's this one?\"\n\n\"It's called a Damask rose. They are believed to have originated in the Middle East, Syria maybe, as long ago as the twelfth century. It was held to be representative of beauty and love. You like the design, then?\"\n\n\"I love it,\" I told Charon.\n\n\"Good, then this is our next tattoo. The black rose symbolises you, the Damask rose me. And once it's on our bodies, I'll destroy the design so that no-one else can use it.\"\n\nSo over the course of several weeks we had the tattoo on our torsos, mine applied by Charon and hers by her most able colleague. We each shaved a small channel through the pubic hair above our clefts to make room for the lowest part of the tattooed stems. Once the hair grew back, it would appear that the flowers were rooted in and growing from our pussies. The rest of the stems cleverly looped around our belly-buttons and on to where the flowers settled some inches below our breasts. The artistry complete, our hearts were as one in the sight of whatever God we worshipped.\n\nDublin\n\nThe flight was grand. Dom had insisted that I travel first-class because part of the reason for my journey was company business and the cost could be offset against tax. I could quickly get used to luxury travel and first-class beats the hell out of being stuck next to a crashing bore or a grossly obese person who needed several seats to themselves or, worst of all, a fellow passenger with chronic body odour who shouldn't be allowed out of their house without first being dipped in antiseptic. At one time or another I've had them all. I was booked into The Merchant's Castle, a five-star hotel in the centre of Dublin, which was owned by one of Dom's business acquaintances.\n\nRather than carry out my intentions immediately, I decided to rest a day or two, shake off the jet lag, wander round and get the feel of my home city. I did touristy things like walking along by the Liffey, strolling in Phoenix Park, and visiting the zoo, none of which I had ever done before. It's a strange thing which I've seen in other cities I know: those born and bred there have very often never visited the finest sights or, indeed, know anything about them. I even visited St Michan's church where some peculiarity of the crypt's atmosphere preserves corpses, a few dating back to the thirteenth century. My greatest pleasure, though, was to go into Mulligan's pub and have a pint of draught Guinness (said to be the best in Dublin and I'd not argue with that) with perhaps a smoked salmon sandwich or a plate of Dublin Bay prawns. When I was last in the city I could not have afforded a single prawn, let alone a dozen or more of them. After a couple of days of this I realised that I couldn't put things off any longer and set out to confront at least part of my past.\n\nBefore setting out I changed my clothes. A young woman in an expensive business suit would look an easy target where I was going. For the same reason I elected to take the bus rather than a cab. From the bottom of my case I pulled up an outfit I'd not worn for years, ripped jeans, t-shirt and leather jacket, and large, heavy boots, all in shades of black. I fished out all my long-unused Goth makeup, also black, and gelled my hair into an appropriate style. The hotel's receptionist and doorman both did a double-take when I exited the lobby, no doubt wondering how this scruff had got past them in the first place.\n\nIt was drizzling out and the bus journey from the city centre was long and wearisome, passing through a variety of neighbourhoods ranging from the posh to the eventual grim and downtrodden. The streets became smaller and meaner, seemingly much more so than when I'd been a kid and when I got off the bus I still had the depressing thought of a further ten-fifteen minutes' walk ahead of me. There was a bit of a breeze and I had to bend my head against the misty drizzle.\n\nAt one point I saw a small gang of teenage lads on the other side of the narrow road, none of them much more than fourteen or fifteen. A suspicious-looking cloud hung about them, tobacco or weed, not sure which. As I passed by one of them called: \"Get your tits out!\"\n\n\"Don't bother!\" one of his mates yelled, \"You've got nothing worth getting out!\"\n\nWhen I was young I'd have been stupid enough to cross over and harangue them but now I'm older and wiser and more tolerant. Anyway, I'd heard of so many cases in LA where public-spirited citizens remonstrated with disruptive teens only to have a knife or gun pulled on them. That tends to make you wary. Besides, Dominic had managed to put a veneer of class on me. However, the uncouth little street girl buried deep inside me managed to struggle her way out at times. I flipped the kids the bird and shouted: \"P\u00f3g mo th\u00f3in! [Kiss my arse!]\"\n\n\"If only!\" another grinned. They all laughed but there was no rancour in it so I laughed with them, giving a little wave.\n\nAt last I reached the street where I had been brought up and it was even nastier than I recalled with cracked and broken sidewalks sprouting a variety of weeds and awash with all manner of litter. The house, too, was a sad thing to see. Many of the houses on the street, with their broken and boarded-up windows and litter-filled scraps of front yards, cried out for attention but ours looked far-and-away the worst. As I recalled, the front door had been a dark-greenish colour, now it was filthy to the point of being almost black. The paintwork was blistered and peeling while rot showed through the wooden frame of the front window. I was almost afraid to use the knocker in case the door crumbled beneath its weight. Still...\n\nI had to knock several times before I heard the shuffling of weary footsteps in the hall and a querulous voice repeating: \"All right! All right! I'm coming you pisser...\" The door opened and I was face-to-face with my mother for the first time in five or six years. She peered at me blearily and then recognition seemed to dawn.\n\n\"You!\"\n\n\"Me,\" I acknowledged.\n\n\"And what the fuck are you doing here?\"\n\n\"Nice to see you too, Mammy,\" I said...\n\nShe stood back and made a tired gesture as if inviting me in. The place didn't smell too good (maybe it never had and I had been so used to it I didn't notice). I followed her through to the kitchen which was a disgusting mess, cluttered with unwashed dishes and pots, some plates having the congealed mess of leftover food sticking to them. The linoleum floor felt greasy under my feet, walls blackened with mould, the gas cooker was encrusted with the dirt of weeks, if not months, and I think I saw a couple of cockroaches scuttle under it. My mother slumped into a chair at the kitchen table and I sat opposite. Among other things, there was a half-full bottle of cheap red wine on the table. Mammy slopped some into a small tumbler then held the bottle up as if in invitation. I shook my head and I thought she looked relieved. So was I. Even if I'd wanted a drink I couldn't have taken it from one of those glasses---they looked like beakers in a germ warfare lab.\n\nI studied my mother. She had always been attractive despite Daddy's ill-treatment but now she was as worn as the house, appearing much, much older than her years. She couldn't be more than fifty if that. My skin colour is a light caramel betokening our mixed heritage. Mammy's was always a shade or two darker than mine but now she seemed to be an ashen tint as if life was slowly ebbing from her. Maybe it was. \"Place needs doing up,\" I said, just to fill the silence, \"the front door and window look ready to collapse any time now.\"\n\nMammy scowled and took a swig of plonk. \"It's that feckin' gobshite of a landlord, he won't do a feckin' thing in this place. Anyhow, what're you doing here?\"\n\n\"Came to see how you're doing.\"\n\n\"After all these years?\" she snorted.\n\n\"I've been working overseas, in California,\" I told her.\n\n\"Taking a bit of a risk coming here, aren't you? Having murdered your Daddy that way?\" The weary way she spoke suggested she knew she was talking shite. Maybe she was just hoping to scare me.\n\n\"I didn't murder Daddy and you know it. The autopsy showed he was a dead man walking, had been for years, and the inquest agreed. 'Death by natural causes' the coroner said.\" She looked surprised that I knew so I added: \"I have friends who find out things. And for once, I was defending myself. My name was never mentioned at the inquest so I guess you went some way to keeping me out of it despite thinking me a killer.\" I had to stop and take a deep breath. \"Mammy, why didn't you ever try to stop him beating me like he did? Especially when I'd done nothing wrong.\"\n\nI thought I glimpsed a tear and she shook her head. \"Oh, I tried when you were very small, just got beaten up for my troubles. In the end I gave in.\" She took another slug of the wine. \"You want to know what you did wrong? You got born, that's what you did wrong.\"\n\n\"I don't understand,\" I said.\n\n\"You weren't his, or so he thought, that's what you did wrong.\" Mammy's tears were flowing now. \"He always was a bit of a brute, slapping me around. Sweet as pie, a real charmer, before we got wed, a devil afterwards. Dinner not ready on time?\" Slap! She banged the table with a loud crack. \"On the rag when he fancied a poke?\" Slap! She banged the table again. \"There was something nearly every fucking day to earn me a belting! Then I met a really nice guy and had a short affair. Maybe you're his kid, I don't know. Your Daddy suspected---couldn't prove anything but blamed you as well as me. Everybody's fault but his own behaviour, the lousy pisser. Pity he didn't go sooner, maybe we'd have had a life then. I hope he rots in hell!\"\n\nThat explained a lot although from what Mammy had just said I reckon he would still have been a violent pig even if I'd been his for sure. I know a lot of things wrong in my life were my own fault---I was a bit of a tearaway as a teenager but I never really deserved the level of punishment I got. I took a thick envelope from my pocket and passed it across the table. She looked inside suspiciously. It was stuffed with euros, a lot of euros. \"What's this?\"\n\n\"Money. What does it look like? It's to try to get you away from this dump and into somewhere better.\"\n\n\"There's a fortune here. How'd you make money like this? Whoring?\"\n\nI couldn't say I was surprised or offended by this assumption. So many girls from round here ended up in homes for unmarried mothers or on the streets. The more attractive ones may have earned plenty of money in the beginning but what with booze and tobacco and drugs their looks soon gave out and the days of wine and roses faded for ever. \"No Mammy, I didn't get it whoring. No man's ever put his thing in me and no man ever will. I run some businesses, honest ones, and I'm good at what I do.\"\n\nA look of shame crossed her face. \"Alannah... sorry... I don't know what to say...\"\n\n\"I'm not Alannah now, Mammy, changed my name. I'm Roisin. Call me that, please.\"\n\nShe gave a sad little laugh. \"Funny, you choosing that. Roisin's what I wanted to call you, my own darlin' little Rose, but he insisted on Alannah after his ould cow of a gran. Didn't do him any good---the ould miser left all her money to a local convent. I thought that was funny and earned meself another slapping.\" She tried to wipe her moist eyes with the back of a hand. \"I didn't mean those things I just said to you, you know, about murder and whoring. Was just mouthing off---it was a shock seeing you. Have you got a feller over there in California?\"\n\n\"I told you that no man's going to have me,\" I said, \"I've got a girlfriend. Her name's Charon.\" I waited to see what her reaction would be.\n\nMammy stared at the table-top for a few minutes then said: \"So you're one of those... what...?\"\n\n\"The word is lesbian, Mammy. That or gay. I've known what I am for years, since I was a kid, but I never said anything for fear of himself.\"\n\n\"You did right there. Sure an' the dirty pisser'd've kicked the shit out of you.\" Mammy raised her head and looked me in the eyes for the first time. \"You love her, this girlfriend?\"\n\n\"We love each other madly.\"\n\n\"And is she good to you? And you to her? No nastiness, anything like that?\"\n\n\"Never nastiness, Mammy, only happiness. We've got a wonderful relationship.\"\n\n\"Well now,\" sighed Mammy, \"Can't understand this same-sex business meself but I guess you've made a right decision then, thinking over the things you saw and suffered in this house. Carry on being good to each other, Roisin---don't ever repeat my mistakes.\"\n\nI think that's what you might call my Damascene moment. I had returned to Ireland to confront a demon. Instead I had found myself facing a poor, sad wretch who had been treated as badly as I had, probably even more so. Time and again I had witnessed my father maltreating Mammy but the child and teenager I had been was so self-absorbed in my own misery that I never really noticed. Now I understood.\n\n\"Can you forgive me, Roisin, for not protecting you more, for being a bad mother?\"\n\nI felt a sudden rush of guilt. \"Yes, Mammy, I can forgive you if you can forgive a poor reckless daughter who likely brought you a bundle of grief. We both made mistakes---I must have caused you some real heartache at times. \" I turned away briefly so that she couldn't see the tears prickling in my eyes.\n\nI recovered quickly and said: \"So... let's get some of this stuff sorted out.\" It took me a good while but I at least managed to get the filthy crockery and pots cleaned and put away. Mammy stayed at the table, head down. Her occasional shudder suggested she was still weeping a little.\n\nAfter that we sat in that noisome kitchen for about an hour or two, just talking, I think getting rid of some of our demons. I noticed that for the whole of that time Mammy didn't touch another drop of the wine, the partly-finished glass sitting away from her right hand. When I'd first arrived I had her pegged for an alcoholic, now I wondered if the problem was something else. A real alkie couldn't have left that glass and open bottle sitting there untouched for all that time. As I got up to go, she gave me an embarrassed little smile and although I'd said nothing she emptied the wine, both glass and bottle, down the sink. \"You don't have to say anything, Roisin, I know the booze is no answer and most of the time I stay away from it. I was just feeling extra low this morning. Then seeing you... talking with you awhile... well, let's say I feel a wee bit better now. And I'm glad you've found yourself a good life.\"",
        "\"Okay, Mammy. I've got to go to London on business then I'll be going back to the States but one way or another I'll keep in touch.\" I embraced her and actually kissed her.\n\n* * * * *\n\nI ran into another old acquaintance about ten minutes later, literally. In fact, another of my childhood and teen... what? not part of my angst... not a demon... maybe an ogre or wicked goblin, and one I had not expected to ever see again. It was still drizzling a little, I was on autopilot, head down, thinking things over, and she dashed out of a corner shop. I had an image of colliding with someone much bigger than me and I staggered slightly. I think if anyone was at fault it was her but I mumbled an apology and kept going.\n\nAn aggressive voice yelled out: \"Hey, you! You don't just knock someone over and walk away.\"\n\nI turned. Me knock her over? She was twice my size and weight. And then I recognised her great flat face with its liverish complexion. Peggy Moran, Big Peggy Moran (although by rights the 'a' in her surname should have been replaced by another 'o'). She'd been the biggest girl, and the biggest bully, and the dimmest bulb, in school. Oh, she was a grand good girl around the nuns (\"yes, sister\", \"no, sister\", \"three bags feckin' full, sister\", \"kiss your arse and hope to go to heaven, sister,\") but to the smaller and younger girls she was a terror. Like most, I tried to stay out of her way, not always succeeding. What with regular thrashings from Daddy and the nuns with occasional beatings from Big Peggy, life wasn't exactly great. Bowl of cherries? Bowl of shit! And today, just like when we were in school, Peggy was accompanied by her bestie, Nesta Byrne. I said her 'bestie' but Nesta was more like Big Peggy's lap-dog or toady. Her sole function in life was to follow at Peggy's heel, agreeing with everything the bully said, applauding everything she did. Looked like nothing had changed. And Peggy recognised me the moment I recognised her. She pointed at me with a black-rimmed fingernail.\n\n\"I know you. You're Alannah Bronagh from school.\" An ugly look came over her beefy face as if she intended to cause trouble. \"Where you been hiding all these years, Bronagh, you little squit? In jail?\"\n\n\"My name's Roisin Donavan,\" I told her, hoping to stave off the threatening trouble.\n\n\"Feck off! You're Alannah Bronagh, isn't she, Nessie?\"\n\n\"Sure, an' you're right there, Peggy.\" Ever the faithful Little Miss Echo.\n\n\"There's something different about the look of you, Bronagh. I know, it's them glittery piercings you've got there. I think you'll look a lot better without them. What say I tear them out?\" She must have been on something, booze or junk, to start a fight with a near-stranger for no reason and in broad daylight.\n\nI edged away slowly, there was no way I'd turn my back on her. I was just about the right size for her to start a scrap with. She'd always liked her victims very small. Faced with someone like Jinn, Peggy would probably shit her pants. \"Turn round and walk away, Peggy,\" I said, \"I don't want any trouble. There's no need for it. We're adults, not at school any longer.\"\n\nShe sneered. \"That's what I'll do. I'll rip those rings off just to see if your blood's as yellow as you are.\"\n\n\"Be careful, Peggy. I'm not the girl I used to be.\" I wasn't too worried about Peggy Moran. Not any more, not after the lessons I'd had...\n\n [Only a few months after I started to learn the business at The Ascension there had been an incident in the club, in the Purgatorio dining room. I heard angry yelling and it sounded as if a waitress was crying. Several of the young waiters seemed to be protesting but their lack of clothing made dealing with incidents awkward. Neither would any other guests interfere---many of them had good reason to guard their anonymity. That's why Jinn was around most of the time. I couldn't see her so I went to investigate.\n\nA burly, red-faced man was berating a waitress, Lindi, and making threats to anyone who tried to intervene. The man was wearing a new member's badge---he wouldn't be keeping it for long if I had any say in the matter. \"I'm Roisin Donavan, the duty manager here, sir, what seems to be the trouble?\" Dom was insistent that we remained polite to the clients until they ceased to merit it. Red-face was already over the edge.\n\n\"This little bitch is the trouble!\" he shouted, \"I've offered her two hundred dollars to fuck me in a back room and she's turned me down! Me! Turned down! By a fucking waitress! Sack the bitch!\" He was obviously very drunk and equally obviously a nasty drunk. He ripped off his mask revealing mean, piggy-like little eyes.\n\n\"Sir, our waitresses are just that, waiting staff. They may work semi-nude but they are not hookers no matter how much you've offered to pay them. The club operates a no-touching policy and this is made clear in our welcome pack.\"\n\nHe turned on me. \"Who asked you, you fucking midget? A fucking Paddy bitch trying to tell me what's what in my own country! Know who I am?\" He jerked a thumb against his own chest. \"I'm Alvin Carelli, everyone in town knows Alvin Carelli! I'm a very important guy! I've paid plenty for membership in this dive so I'll get what I want!\"\n\n\"I'm sorry, Mr Carelli, but I for one have never heard of you. And your behaviour is so obnoxious I must ask you to leave now.\"\n\n\"Never heard of me? Obnoxious? You talk to me like that?\" he screamed in my face, the stink of stale Bourbon overpowering, \"I'm very rich. I could buy you and every bastard in here outa my small change. I'm a personal friend of the mayor and I'll get you shut down tomorrow.\" He turned to Lindi who flinched. \"A thousand bucks!\"\n\nI took hold of his elbow, gently, and repeated, \"I must ask you to leave now, sir.\"\n\nHe tore away from me, raising a threatening fist. \"Leave? Leave? I'm going to kick your ass, you little---\"\n\nHe didn't finish. One arm was wrenched behind his back and his buttoned-up shirt was lifted so high by the collar he was forced to stand on tiptoes. Jinn had arrived. She was wearing her customary skull mask and in Purgatorio's subdued lighting looked like an escapee from a horror film. The very important Mr Carelli tried to break free so Jinn twisted his collar, almost choking him as his face turned purple. \"Take his member's badge, Roisin.\"\n\n\"A pleasure.\"\n\n\"You think you're tough, mate?\" said Jinn, her Aussie accent coming across strongly, \"You wouldn't last five seconds on a Saturday night in any of Sydney's clubs. Your membership is now revoked and we'll refund your subscription except for a small sum to compensate the waitress you've upset. Don't try to come back. I'm going to take you out now and introduce you to our doorkeeper, Big Tony. He's a lot tougher than he looks and he looks like a member of Murder Incorporated. If you managed to get past him---unlikely---I'd be waiting. I've castrated more rams than you can count and castrating you wouldn't be any different. Now move!\" She ran Carelli for the exit, his toes scraping the ground, and used his face to open the swing door to the corridor. There was a scattering of applause from some of the other diners.\n\n\"Sorry about that, ladies and gentlemen,\" I announced to the room at large, \"we try to vet our guests for suitability but as you've seen, not always successfully. To make up for the disturbance, I'll authorise a complimentary bottle of wine for each table and those who wish can take a raincheck.\" I signalled one of the waiters to take orders and put an arm round Lindi who was still weeping quietly. \"Come on up to the office, sweetheart. It's the rest of the evening off for you.\"\n\nDom called me in to see him the next morning. \"Jinn says you tried to handle the incident calmly and well. That's good. The free wine for the other tables was a good idea---most guests will think the better of us for that. I've been making some calls. Mr Carelli is not as important or well-known as he thinks he is, he's a minor executive at one of the studios and a drunk. Right now his job's on the line. 'His' riches come from his wife who's a pharmaceutical company heiress and my informants tell me that the lady is currently consulting one of LA's top divorce lawyers. Carelli's apparently well known for his behaviour---his 'personal friend' the mayor has been refusing to take his calls for several years now. Don't know how he got past our vetting process. Anyway, I've seen to it that he's barred from every decent club in the city. From now on, the only nightclubs to admit him will prove very dangerous if he behaves the way he did here. I understand he also threatened you with physical violence. Now, Roisin, can you fight?\"\n\nI shrugged. \"At my size? I've always tried to run away or hide.\"\n\nDom nodded, pressing a button on his desk console. A few minutes later there was a tap on the door and Big Tony came in. \"You called, Mr Vitelli?\" Big Tony isn't really all that big as far as height goes, maybe five-eight, five-nine, but he's almost as wide as he is tall and about as deep. He's likely as near to a human cube as possible.\n\n\"Yes, Tony,\" said Dom, \"Find someone to take over your desk for an hour or two each morning, starting tomorrow. I want you to take Roisin to the company gym for that time and turn her into a street-fighter. As long as it takes. Don't hurt her but make her work.\"\n\n\"Sure thing, Mr Vitelli.\" Tony turned to me. \"I don't know how tough you are, Rosie, but you'll be a lot tougher when I'm through. And then the world's assholes better watch out.\"]\n\n...which is why I wasn't too worried about Peggy Moran. \"Be careful, Peggy. I'm not the girl I used to be.\" She nodded then feinted, as if to go away, but turned quickly and rushed me. She might as well telegraphed her intentions. I moved slightly to one side and gave her a short, hard jab to the nose, at the same time turning to kick the back of one knee causing her to collapse. I grabbed an arm and twisted.\n\nBig Peggy screamed. \"You're breaking me feckin' arm you bitch!\"\n\nI put on a little more pressure. \"Call me a bitch again and it'll get worse.\"\n\n\"Nessie! Do something! Don't just stand there, Nesta! Do something!\"\n\n\"Don't even think about it, Nesta,\" I warned.\n\nNesta hesitated, obviously scared she'd get the same treatment, then her eyes widened at something behind me. She turned and ran. I looked to see what had startled her. It was a big man in the dark-blue uniform of a Garda. He made a little gesture so I released Peggy who stumbled to her feet, trying to staunch her bleeding nose and nurse her painful arm at the same time.\n\n\"So it's yourself causing trouble again, Peggy Moran,\" said the policeman.\n\nPointing at me, big brave Peggy screeched: \"Not me! It was her! Arrest her! She assaulted me! Look at me, I'm bleeding!\"\n\nThe Garda seemed to think for a few seconds and nodded. \"Yes, I could arrest her for assault but then we'd all have to go to the court. You'd give evidence first, likely saying she attacked you without reason. And when you'd given your evidence I'd step into the witness box and swear to tell the truth, the whole truth and nothing but the truth. You know what the whole truth would be? I saw you trying to pick a fight with this young lady and her trying hard to avoid it, then you attacking her and getting punched in self-defence. You'd be in serious trouble for telling lies under oath. It's called perjury, Peggy, and carries a hefty jail sentence. Now is that what you want? If not, away home with you.\"\n\nMuttering a string of curses, Peggy Moran scuttled away. I'd love to have heard the next conversation between her and Nesta. Maybe that would be the end of a beautiful friendship.\n\n\"The name's Brendan Miller,\" said the Garda, \"You know it round here?\"\n\n\"I'm Roisin Donavan,\" I told him, \"I lived here, years ago. Just visiting someone. Going to get a bus back to the city now.\"\n\n\"Don't blame you for moving out. Where do you live now?\"\n\n\"California.\"\n\n\"That's a grand place so I've heard---lucky you,\" he said, \"I'll walk with you a way just to be sure you're safe. Peggy Moran's a nasty piece of work so she is and a little too fond of the hard stuff. I'd have stopped it sooner if I'd been closer.\" He snorted, highly amused. \"Glad I didn't---that was a sweet right jab you handed her. Do her good.\"\n\nWe were passing a boarded-up building and I stopped to stare. A final demon to face. \"The old school's closed up, then?\"\n\n\"Yes, one of the places that eventually went down as part of the big scandal. You may have heard of it in the States. Some of them holy nuns running the girls' schools and the homes could have given Old Nick himself lessons in cruelty. It took the government and the Church a long time to take action against them, too long maybe, but once the Press got its teeth into the story and wouldn't let go action happened fast. Not just nuns, either, but priests and Christian Brothers too, physical abuse, mental abuse, not to mention sexual abuse. Even a bishop was removed from his post for ignoring all the wrongdoings but I reckon he was just a scapegoat really, saving the Cardinal's arse. You went here?\" I barely heard him. I was drifting back...\n\n* * * * *\n\nIn tandem with the dream about killing my father I had another recurring dream, this one about the nuns who taught in the girls' school I attended. If you were to believe Hollywood films, all nuns are warm, cuddly and sweet-natured while the Mothers Superior are like Ingrid Bergman or Deborah Kerr or Audrey Hepburn. Maybe there are such nuns but not where I came from. Where I came from they were mostly vicious bitches only too handy with the cane, strap or whatever other form of corporal punishment they favoured. I heard those who ran the homes and laundries for 'fallen women' were even worse. To my knowledge the sole decent one at school was Sister Agnes but she was only a novice and had little to do with us, mainly teaching the youngest girls.\n\nEvery evening when school closed a small procession comprising eight or nine of them could be seen walking in pairs back to their convent, eyes lowered, fingering their rosaries, graciously acknowledging the doffed caps of the men and the little bobbed curtsies of the women, a fine study in pious hypocrisy.\n\nAbout the second dream---it came from my last day at school. I had always hated skirts and blouses and went to school that day in my full Goth regalia. My last day, they couldn't do anything to me now. As expected I was summoned to Mother Superior's office. The confrontation went like this:\n\n[I was ordered to stand in front of her desk. She was a thin-lipped, cold-eyed woman who wore rimless glasses which made her look like an interrogator in a spy film. She even spoke like one most of the time. \"So, Alannah Bronagh,\" she hissed, \"you choose to flout our rules by coming to school looking like a piece of filth from the lower end of the music industry. What have you to say for yourself?\"\n\nMother always used to scare the crap out of me but now I was defiant. \"You can't touch me now, I'm finished with this dump!\"\n\n\"Now listen, Bronagh, I'm going to speak some wise words which I doubt you'll heed because you're too stupid. You've been a poor pupil for the five years you've been here with not a single thing to redeem you. You're a dirty little slut and unless you change your ways you'll end up in the gutter, prostituting yourself to the lowest of men. Decent folk will shun you as a scarlet woman, a harlot. You'll likely have a flock of brats as disgusting as you who'll end up being taken into care and you'll end up in a prison cell. I see no hope for you.\"\n\n\"And those are your wise words, Mother?\" I put as much contempt as I could into that last word.\n\n\"They're mild compared to what I can see for your future, you pathetic little wretch.\"\n\n\"Then you can stick your wise words up your arse, you feckin' ould bitch, I'm out of here.\"\n\nMother's face whitened with fury and she grabbed the cane hanging from the side of her desk. I snatched it from her and broke it over my knee. \"Not this time, bitch!\" I threw the pieces at her, slammed out of her office and down the corridor. She was calling after me: \"Alannah Bronagh! You get back here!\"\n\n\"Fuck off!\"\n\nTwo nuns were stationed by the school's main entrance. \"Stop that girl!\" Mother yelled to them. They moved to obey but I tore away from them, finding a strength I didn't know I had. Adrenaline, I guess. With one final \"Fuck off!\" I was out of the building and into the street and the fresh air. Not that it was all that fresh, not in that district, but compared with the stuffy, boiled-cabbage atmosphere of the school it was champagne. Later that day I went to a patch of waste ground and burned the skirts and blouses I detested.\n\nThe incident was reported to my parents. This was one occasion when I didn't get the anticipated thrashing from Daddy. He just commented: \"Some of them nuns can be evil cows, so they can.\"]\n\nAnd my recurring dream? In the dream I don't escape because my feet have turned to lead and I seem to be running through thick melted tar. I'm dragged back to Mother Superior's office where all the nuns are gathered with canes and I'm held down while they beat me and beat me and beat... There have been a number of occasions when Charon has had to hold me and comfort me when I wake up yelling in anguish.\n\n* * ** *\n\n\"...it took the government and the Church a long time to take action against them,\" Garda Miller was saying, \"too long maybe, but once the Press got its teeth into the story and wouldn't let go action happened fast. Not just nuns, either, but priests and Christian Brothers too, physical abuse, mental abuse, not to mention sexual abuse. Even a bishop was removed from his post for ignoring all the wrongdoings but I reckon he was just a scapegoat really, saving the Cardinal's arse. You went here?\"\n\nI shook myself from my memories. \"To my sorrow,\" I said, \"got out of it as soon as I could. What happened to Mother Superior and the others?\"\n\n\"Ah, they were all dispersed to different convents, places where in theory they can't do any more harm. Supposed to spend their lives in prayer and contemplation to atone for their sins.\"\n\nCall me cynical but I'd believe that when I saw it. Aloud I said: \"There was one decent nun here, a Sister Agnes, but she was young.\"\n\n\"Ah yes, now there's an interesting tale,\" Miller told me, \"Sister Agnes was so upset by the goings on here that she reported the place to the Church authorities several times. They ignored her concerns, in fact they declared her a vexatious appellant and packed her off to a convent in the middle of nowhere. You might say a punishment posting and a pretty rough one at that. After the scandal broke they hastily brought her back before the Press could get to her and 'redeemed' her as it were. She moved to a less restrictive order and now she heads a team running a shelter and home in the city for abused women and children. They say she's brilliant in the job.\"\n\n\"Do you know the address, Mr Miller? I'd like to see her if I can.\"\n\nThe Garda took out his cell-phone. \"Give me your number and I'll text it to you.\"\n\n* * * * *\n\nSome nuns had certainly changed, Sister Agnes's new order falling well into the modern world. Rather than the full habit and wimple of old she wore a white-collared grey dress, falling to about mid-calf, and a simple headdress. She looked at me then back at the note on her desk. \"Ms Roisin Donavan---you asked for an appointment to see me.\" Her eyes behind her dark-rimmed glasses were still kindly but her expression serious. \"I don't know the name and yet you look familiar. Trying to remember the name I knew you as.\"",
        "I made to speak but she held up a hand to silence me. I looked respectable enough. My Goth gear had been tucked away, perhaps for always, and for the meeting with Sister Agnes I dressed more formally in charcoal trousers and waistcoat with a plain white shirt. I still had my piercings but without the Goth clothing they were less obtrusive.\n\nShe was muttering to herself. \"Something starting with 'A'... Alma... no... that's not it... I know... Alannah... Alannah... Brogan?\"\n\n\"Bronagh,\" I said, \"but Alannah Bronagh doesn't exist now. Changed my name---I'm Roisin Donavan as it says on that note.\"\n\n\"I suppose you have your reasons,\" she replied. Her lips turned up in a little smile. \"I hope you've given up your habit of attacking nuns.\"\n\n\"It wasn't so much a habit,\" I told her, \"More like a one-off. I try not to do it any more.\"\n\n\"I believe your father died some years ago,\" she said, \"My condolences. They said he was a good Catholic man.\" My face must have frozen for she said: \"What?\"\n\nI stood and began to undo my trousers. \"Don't be alarmed Sister, I'm not a flasher, I just want you to see something. I promise my underwear is quite respectable.\" I lowered the garment so she could see the old scars down the backs of my thighs and calves.\n\n\"Holy Mother of God!\" she said, obviously shocked.\n\n\"That's your good Catholic man for you, a brute!\" I snarled, \"Several times a week with his belt-buckle. Never had the chance to heal properly because the next belting was only a day or two away. I wasn't allowed to go to the doctor because he might have called in the Gardai.\"\n\n\"You couldn't have taken that quietly. Didn't the neighbours hear you yelling or crying?\"\n\n\"Sister Agnes, you worked in that area,\" I said, \"so you should have an inkling what it's like. People heard screams but they didn't hear them if you know what I mean.\" She nodded. \"It was pretty common round there,\" I continued, \"I spent most of my younger days with bandaged legs. The school was told I had severe eczema.\"\n\nWhen I had re-dressed, Sister Agnes asked: \"So why did you ask to see me, Roisin?\"\n\nI passed her the cheque I had written earlier and she stared at the amount. \"This is very generous, Roisin. Can you afford it?\"\n\n\"Don't worry about that, I'm on the management team of a very successful business conglomerate in the US. I can afford it.\"\n\n\"May I ask the nature of these businesses?\"\n\nI didn't think a full description of The Ascension and its fellow clubs was appropriate for a nun, even a modern nun like Agnes, so I said simply: \"Catering and entertainment,\" which was a kind of truth.\n\nSister Agnes held up the cheque. \"I don't want to sound suspicious, Roisin, but do you want anything in exchange?\"\n\n\"Nothing outside of your daily work,\" I said, \"I'd ask you to keep an eye on my mother, though.\" I explained the circumstances, adding: \"When I first saw her the other day, I thought maybe she was drink-dependent but now I believe it may be depression. I'll leave you my cell-phone number and my address for when I return to the States. I'll meet any expenses including medical fees. And I'll be grateful to you, Sister Agnes.\"\n\nWhen I left Dublin for my next destination I felt a huge burden being lifted from my soul.\n\n[To get ahead of myself a little, a few months following my return to the States I received two letters in the same envelope, a long one from Sister Agnes, the other, shorter, from my mother. Sister Agnes told me that they had rescued Mammy from the squalor she lived in and that I was right---she was suffering from depression. One of Agnes's fellow nuns was a registered clinical psychologist and between counselling and the correct balance of medication Mammy was slowly recovering. Then came the clincher. Mammy was so impressed with what the shelter was doing that she asked to be taken on as a lay sister. As she said, she'd spent years in the bad place that most of the refugee women were fleeing from so who better to understand and help.\n\nThe letter from Mammy, addressing me as darling little Rose, simply said that she'd donated the money I gave her to the shelter, that despite past appearances she did love me, and that living and working at the shelter was proving to be her salvation. She was more content than she had ever been.]\n\nTuscany\n\nItaly had not been part of my plans but as I was in Europe there was something I had to do. I had no demons from there, only pleasant memories of working at the Vitelli farms in the Chianti region of Tuscany. Ellie and I had some wonderful times there. As I had no specific skills I just did shit jobs. Ellie had grown up on a horse farm in New Zealand so she worked the Vitelli stables. I've mentioned Ellie's Italian was fluent while mine was at the 'barely-get-by' level. And as related, our present fortunes were down to Ellie's taste for running round at night wearing only a set of handcuffs or some other item of BDSM equipment. Came the night she ran into Zabi and Alex and our fortunes changed. We owed them an enormous debt of gratitude, especially Zabi who, with her brother, had seen hidden depths in this poorly-educated little Irish girl and turned her into something worthwhile.\n\nThe Chianti region is beautiful with vistas of gently undulating land, dotted here and there with clumps of tall cypress trees and the shadows of hills and mountains on the horizon. Much of the land is taken up with olive groves and vineyards, another branch of business that the Vitelli family had considerable interests in. The whole landscape was like a living Renaissance painting. I had hired a car with a driver who could speak reasonable English so I had little trouble explaining what I wanted. My destination was very close to the Vitelli farm and as we drew near I began to recognise various landmarks.\n\nThe driver pulled up outside massive wrought-iron gates which were kept open during the day and pointed. \"Up there, signorina, half-kilometre or so. Take all the time you need. I will wait here.\" He tipped his cap over his eyes and settled back as if to have a snooze.\n\nThe cemetery was a lovely place, like a well-kept park, with neatly-tended lawns and a number of the ubiquitous cypress trees. As far as I could tell, there was no-one else around. Their resting place, when I found it, was in a beautiful and elegant spot. The graves were side-by-side and a low marble wall, six or seven inches in height, enclosed them in one pebble-filled plot. There were perhaps a dozen or so ceramic jars and planters filled with bright flowers lining the walls and the actual graves while the headstone, too, was marble and wide enough to encompass both resting places. The background was plain with an embossed central plaque shaped like a pair of hearts. Another layer atop the hearts showed two hands clasped together. There was a small oval photo, continental style, of each woman with their names---Zabina Vitelli and Alexandria Rowe---carved underneath, near to the monument's base, in both Italian and English, the words: 'Il loro amore durer\u00e0 per sempre - Their love will last forever'.\n\nI couldn't help myself. Without warning the plaintive notes of an old Irish lament as played on the pipes echoed through my mind and my emotions gained the upper hand. I began to weep deeply, uncontrollably. I fell to my knees and did something I'd not done for very many years. I crossed myself and began to pray for the souls of these two wonderful friends. My prayers were not formal ones, only a stream of consciousness babble. I didn't think God would mind, even though I'd neglected Her for years\u2014I thought She would recognise sincerity when She heard it.\n\nI don't know how long I knelt there with my head bowed, sobbing. I only know that I felt my knees beginning to get sore and my thighs to stiffen. Unexpectedly, a deep voice spoke to me. \"Mi scusi, signorina, erano suoi amici?\" I knew the word 'amici' and I guessed I was being asked if these were my friends.\n\n\"Si signore,\" I nodded and looked up. I knew him immediately. It was Zabina's uncle and my erstwhile employer, Benito Vitelli. He recognised me at the same moment and switched to heavily-accented but fluent English. \"I know you---Signorina Rose, isn't it? Give me your hand, young lady, and let me help you up. I apologise if I startled you. I was not expecting anyone to be here.\"\n\nOnce on my feet, legs rather shaky, I gestured towards the double grave. \"I am in Europe... on business... I had to come and say goodbye.\"\n\n\"And caused yourself some heartache, I see.\" The old man nodded. \"No bad thing, the tears... they can be cleansing. Now, do you have plans for this evening?\"\n\n\"Just returning to my albergo.\"\n\n\"Nonsense. You have just had a very emotional experience and alone in a hotel is not a good way to deal with it. You are coming home with me, dine with us and stay the night.\"\n\n\"But my fresh clothing is at the hotel and I have a driver waiting.\"\n\n\"So sleep in your underwear,\" Benito laughed, \"As for fresh clothing tomorrow, who cares? A little dirt never hurt anyone. I'll have a word with Paolo, the driver. He can come back in the morning. I'm part-owner of the car-hire firm he works for. [Jesus! Was there anything the Vitellis didn't have a finger in?]\n\n\"Then thank you, Signore Vitelli, I'll be pleased to accept.\"\n\n\"Buono.\" He took out a cell-phone and spoke in rapid Italian. I caught my name a couple of times. \"I have just told my wife we have a guest tonight. We were not expecting company so it will be a simple meal.\"\n\n\"A simple Italian meal is worth a feast elsewhere,\" I smiled.\n\nWe walked for about fifteen minutes until we reached the Vitelli house which was lovely to see. Its roof comprised red terracotta tiles, there was a wide veranda shaded by striped awning and off to one side I could see a large pool shimmering in the afternoon sun. Of course, I had seen the house before but as hired help I had never been inside. Signora Vitelli was waiting on the veranda to greet me. She ignored my outstretched hand and instead gathered me into a warm embrace.\n\n\"Thank you for coming to see our loved ones,\" she said, \"Benito tells me you wept for them.\"\n\n\"It's thanks to Zabina that my life is so much better,\" I replied, \"I owed her so much and had no chance to repay her. I needed to say goodbye.\" I could feel my eyes moistening again.\n\n\"It is good that they have a friend to weep for them,\" said the old woman, \"But no more tears now, child. They are resting and at peace.\"\n\nThen something clicked. When I had worked here, Signora Vitelli's English had been about the same standard as my Italian. Without thinking, I blurted out: \"Your English---\"\n\nShe beamed. \"Is better, no? I learn more for Alex and she learn more Italian for me. We both did good I think. Now come in and we'll have something cooling to drink.\"\n\nThe meal that evening was simple---and wonderful. The main dish was spaghetti smothered in tomato and basil sauce, all sprinkled with grated parmesan cheese, accompanied by chunks of fresh-baked crusty bread with dishes of olive oil for dipping. We finished with home-grown peaches and figs, the whole washed down with wine from the Vitelli vineyards. While we ate they asked me about the businesses in the States and other things.\n\n\"And your friend Ellie? She is well?\" Benito asked, \"We liked her and she was so good with the horses.\"\n\nDonna grinned and patted my hand. \"And does she still enjoy running around with no clothes?\"\n\nI almost choked on my wine. \"You knew?\"\n\nBoth burst out laughing. \"Oh yes, we knew.\"\n\nHalf-way though the evening Benito's phone rang and there followed a long conversation in Italian. Towards the end he switched to English. \"Si, she is here. A moment---\" He passed the phone to me. \"Dominic,\" he said.\n\nI wondered if he was angry with me, expecting me to be in London---it was never easy to tell Dom's mood from his detached tone of voice. \"A little detour, Roisin?\"\n\n\"Yes.\" I tried to match his cool. \"I had to come and say goodbye to Zabi and Alex. If it wasn't for them... well... They are in a lovely place, Dom.\" He would have known that, of course, but I had to make my feelings clear. Donna Vitelli held out her hand and I passed the phone to her. She spoke in English, presumably for my benefit.\n\n\"Dominic, I forbid you to be annoyed with Rose. She had good intentions, kind intentions. She is family now. Capisce?\" She returned the phone.\n\nThere was a rare dry chuckle from Dom. \"You seem to have made quite a hit with my Zia Donna,\" he said, \"I am not angry with you Roisin, I want to say thank you for your kindness. It was thoughtful.\"\n\n\"Well, I am family now, Dom,\" I told him.\n\n\"Yes, you are family now.\" Another of those dry chuckles. \"So you'd better start work on your Italian. While you're at it, before going on take a couple of days in Florence. Visit the Uffizi Gallery and other spots. See some of the Renaissance beauties and enjoy them.\"\n\nThat night I slept wonderfully well and when I woke in the morning, I realised something. Since spending time with my mother and with Sister Agnes, and now with the Vitellis, I had not had one bad dream.\n\nLondon\n\nWhat can I say about my suite in London's Savoy hotel? Sumptuous, I guess. There was a large sitting-room with a soft, comfortable sofa, two matching armchairs, a small dining-table and a number of smaller coffee tables. And, of course, a television about the size of a cinema screen. In the bedroom, the carpet was as deep as winter snow on a Colorado mountainside and the king-sized bed luxurious. Add to this an en-suite bathroom... and what a bathroom... It was tiled in pale-green with everything you'd need for personal hygiene and comfort, including a huge shower-stall, but it was the bath that I fell in love with. Roughly twice the size of any normal bath, it was partly sunk into the floor and had a small flight of three steps to enter by. If only my Charon was here to share this with me. I'd always fancied a sunken bath after seeing one in some epic film set in Ancient Rome.\n\nI looked around and marvelled at life. Little Alannah Bronagh from a Dublin back-street settled into a suite like this. Not knowing London, when Dom told me I was booked into the Savoy I assumed it was some kind of upmarket B&amp;B. Some 'upmarket'! Some B&amp;B! I should have known. He'd booked me into a five-star hotel in Dublin, why not the same in London. When the black-cab had deposited me at the front entrance, I thought the driver had made a mistake. While he was assuring me I was in the right place a top-hatted doorman opened the back door, politely handed me out and picked up my luggage. Having paid the cabbie, including a good tip, I followed the doorman to reception. There came the next surprise.\n\nThere were several receptionists, men and women, each as immaculately dressed as Dominic would be. She who attended me checked my details and said: \"Yes, Ms Donavan, your suite is ready. I'll call for someone to take you there.\"\n\n\"Suite? Must be some mistake. I should be booked into a single room for a few nights while I'm here on business.\"\n\nThe woman checked again. \"No mistake, Ms Donavan, it clearly shows that a suite has been booked under your name.\" She hailed a young man, also well-dressed but with a striped waistcoat instead of a suit jacket. It looked like a kind of uniform. This one led the way to my suite.\n\n\"My name's Simon, Ms Donavan,\" he told me, \"and I will be your butler for as long as you are here. Just use the bell by the door if you need assistance. I can unpack your case if you wish or arrange for a maid to do it.\"\n\nAlthough I was sure the staff here would be very discreet, I didn't want a stranger stumbling across my Goth gear. \"I'll manage thanks, Simon.\"\n\nWhen he had left, I slumped onto the suite's very comfortable sofa feeling a kind of mild astonishment. Butler? Maid? I wondered what kind of world I'd stumbled into. I'd got into the good life in California but this was something else again.\n\n* * * * *\n\nMy contact in London was a woman called Eileen Barter, said to be one of the city's top commercial estate agents. She came to The Savoy that evening to say hello and to make arrangements for our tour of potential premises. I had a message to meet her in the lounge bar which was pretty well filled by pre-theatre groups when I got there. I think she was well-known because the barman pointed her out with no hesitation when I asked.\n\n\"Ms Barter? I'm Roisin Donavan.\"\n\n\"Call me Eileen.\" She stood to greet me and while not quite as tall as Ellie or Jinn, she was heading that way. She held out her hand which was cool with a firm grip when I took it. I noticed her nails were short and coated with a clear varnish.\n\n\"You've got a choice with me,\" I said, smiling, \"I answer to Rose or Rosie as well as Roisin.\" I suppose Eileen Barter could be described as... I don't know... perhaps an 'ice' blonde, having the sort of looks that filmmaker Alfred Hitchcock was alleged to have been obsessed by. She was dressed simply but elegantly in a dark-grey cashmere sweater and well-tailored trousers, probably as costly as those I had in California. I suppose being a top commercial estate agent in London paid very well. I noticed that she wore no jewellery other than simple stud earrings, a white gold wedding band on her third finger and a small gold signet ring on a little finger.\n\n\" I hope you like red wine. I've taken the liberty of ordering us a bottle,\" Eileen told me. I thanked her although I'd have preferred draught Guinness. Thinking about it, I suppose The Savoy is not a draught Guinness kind of place although they might have run to bottles. Still, I was gracious and accepted the wine which, to be fair, was delicious.\n\nWe spent the evening discussing the half-dozen or so premises Dom that had selected for inspection, Eileen telling me that they were scattered over a large area of London. It was likely that four or five days would be taken up with our visits followed by time necessary for me to write my reports. Dom had given me a comprehensive list of points to watch out for and had arranged for a professional building surveyor to accompany us. Inspections finished, I spent a couple of days compiling my report and e-mailed it to Dom. The whole project had gone smoothly and I was able to wrap everything up fairly quickly.\n\nFor the evening after we finished all necessary work, Eileen made the kind of invitation I couldn't refuse. She had tickets for Mama Mia! at a West End theatre followed by supper at her hotel. The show was great but throughout the performance she seemed to find odd excuses to touch my hand lightly, even linking our fingers once or twice very briefly. Her fingers were soft and with each contact I felt a little erotic thrill, my pussy clenching. It was a good thing that I would be going home shortly. Charon and I made love at least once most days and after my time away from Santa Monica I was missing her loving touch deeply.\n\nEileen wasn't staying at The Savoy but a nearby and equally posh and expensive hotel. Their French restaurant was said to be the best in London although I'd have to accept the word of others on that. Eileen's home was in a village about thirty miles from London and she had found it more convenient to stay in London while we worked together. When we had eaten, she said: \"I've ordered a bottle of champagne on ice to be delivered to my room if you'd like to join me, Rose. We can toast the success of your little mission.\" As I had nothing better to do than return to The Savoy and watch some trash on TV, I accepted her invitation.\n\nA waiter wheeling a drinks trolley reached Eileen's room just about the time we did. He uncorked the wine and poured a tasting sample for her which she approved. That little ceremony---which I've always found rather pretentious and amusing---completed, he half-filled two flutes and handed them to us. \"Will that be all, Ms Barter?\"",
        "\"Thank you, yes.\" Having given the man a generous tip, Eileen turned to me and touched our glasses together. \"May all our dealings be as successful as this, Roisin. You will be returning to London?\"\n\n\"Unlikely,\" I told her, \"Dominic will probably wish to deal with things personally from now on. He may bring Jinn with him.\"\n\n\"Jinn?\"\n\n\"His chief of security.\"\n\n\"Oh.\" Eileen ran a long finger down the palm of my hand and I had a momentary feeling of breathlessness. \"That's a pity, Rose. I had hoped we'd be able to meet again.\" Taking my hand, she led me to the sofa. I sat and she remained standing, slightly behind me with hands on my shoulders. \"Yes, a great pity.\" Leaning down, Eileen pressed soft lips to the back of my neck and I shivered. \"I've always had a taste for petite women. My wife stands barely five feet in her stockings.\"\n\n\"Your wife?\"\n\n\"Yes, she's at home. Knows my business often keeps me away overnight, often more than one night.\" Forefinger under my chin, Eileen turned my head and placed a gentle kiss on my mouth. \"You are gay, aren't you, Rose? I'm rarely wrong about these things.\"\n\nI nodded. \"But you're married.\"\n\n\"That's okay, we have an open marriage.\" Eileen kissed me again, this time a little more deeply and running her tongue around my lips. I could feel myself melting. Active fingers opened the two top buttons of my shirt and Eileen slipped her hand in to hold one of my bra-free boobs. My nipples stiffened immediately and ached with longing. \"That feels like a sweet little mouthful, Rose. Can I see them?\"\n\nWithout waiting for consent, Eileen helped me to my feet and still kissing my mouth and throat undid the rest of the buttons to open my shirt. \" Your breasts are lovely, Rose. And what a beautiful tattoo!\"\n\nWhat a beautiful tattoo! What a beautiful tattoo! Our tattoo! The black and damask roses below our breasts. Our pledge to one another. Our hearts were as one in the sight of whatever God we worshipped.\n\nI came to my senses, pulled back and started to refasten the buttons. I had come dangerously close to betraying my Charon. \"I'm sorry, Eileen, I can't do this.\"\n\n\"Why? What's the matter, Rose?\"\n\n\"I have a girlfriend in California. She's the love of my life. I can't cheat on her.\"\n\n\"But Rose, she's in California and you're here. She'd never know.\"\n\n\"You don't understand, Eileen,\" I said, \"She might not know but I would. I couldn't forgive myself and in the long term that would poison our relationship and might kill our love. I'm not prepared to risk that. Not for a one-night stand.\"\n\nEileen shrugged and sat down on the sofa. \"This is one for the book, I guess. You're the first woman ever to turn me down.\" Her smile was rueful. \"You have to do what you must. Maybe you've taught me a little lesson tonight.\" As I reached the door, Eileen added: \"Can we part as friends?\" She came over and kissed my cheek. \"It's been lovely meeting you, Roisin. Now I believe I'll give my wife a call... I think perhaps we have something to discuss...\"\n\n* * * * *\n\nWhen I woke up the following morning, the first thing I did was offer thanks to whoever rules the universe for giving me the strength to resist the previous night's temptation. As I had said to Eileen, Charon might never have known but I would---in time my betrayal would have warped me, sending me back into the depths I'd emerged from and most likely destroying our relationship. I wanted to spend the rest of my life with Charon and I wanted it to remain clean.\n\nA maid brought me coffee with a newspaper. This being The Savoy, it looked as if the paper was freshly ironed. I scanned the headlines and skip-read some items while drinking the coffee. The usual daily fare. Doom, gloom and misery. What's it all about? Where do we go from here? One bright spot was in the gossip column. A hidden paparazzo with a long-distance lens caught the golf-playing President cheating. He picked up a ball in a sand-trap and threw it onto the green when his opponent wasn't looking and his bodyguards had discreetly turned their backs. Another item reported that only the same President could save the world in peril---that had to be true because he was the one who said it.\n\nMy attention was broken by the jarring note of my phone's bell. When I picked it up, no caller ID was showing. \"What?\" I snapped into the speaker. If this was a cold or scam call they were going to get one hell of a mouthful, a classic Dublin tirade of generally pissed-off annoyance. Then I sniggered to myself, thinking Not the sort of behaviour expected of a Savoy guest.\n\nIt was no scam call. A familiar voice said: \"As-salam-u-alaikum.\" Charon, my beautiful, beloved Charon.\n\n\"Wa-alaikumussalam-wa-rahmatullah,\" I replied.\n\n\"After all this time your accent is still lousy,\" she laughed.\n\n\"Well, your attempt at an Irish brogue still leaves a lot to be desired,\" I returned, \"I can never tell whether you're from the Isle of Wight or the Isle of Man.\"\n\n\"But they're not in Ireland.\"\n\n\"Just goes to show how bad your accent is,\" I laughed in turn. I was interrupted by a rapping noise. \"Hang on, there's someone at my door.\"\n\nFlinging a bathrobe about my shoulders, I opened the door to a loud shout of \"Surprise!\" and standing there, phone clasped to her ear, was a vision in a dark-silver hijab. \"Don't just stand there,\" laughed Charon, \"ask me in.\" The tears spurted as I gathered my lovely girl in my arms. \"I do hope those are happy tears and not 'fuck off' tears,\" she said. Yes, they were happy tears but also tears of relief that I had managed to resist Eileen Barter's advances.\n\nI started laughing with Charon, the laughter interspersed with little sobs, and I planted enthusiastic kisses all over her face. \"What are you doing here? How did you know where I was?\"\n\n\"Knowing how much I missed you, Dom suggested that I take a little vacation,\" she said, \"It was fairly quiet in the studio so I agreed. And he was so pleased with your report about the new clubs premises he thought you deserved a small break too. We have five days in London in the suite here. All on Dom.\"\n\n\"That explains why I was given a suite and not just a room. But anything could have gone wrong,\" I replied, \"I could have been on the plane home.\"\n\nCharon shook her head. \"You're not aware but you've been looked after just about every leg of the journey so we knew where you were at all times.\"\n\n\"You mean I was spied on?\" I was astonished and then started to get angry. \"Followed everywhere by private eyes, was I? Not trusted, was I?\"\n\n\"Calm down, my wild Irish rose. Did I ever tell you how beautiful you are when you're angry? In fact, you're beautiful all the time.\" Charon led me over to the sofa and sat me down. \"Of course you were trusted. It's just that knowing your past troubles, Dom had an arrangement with the hotels you've stayed in. He was told when you arrived and when you departed so as to be sure you were safe and well. He'd never admit this but he cares deeply for you. In a way you've replaced the sister he lost. Now take a deep breath and give me a kiss.\" I breathed deeply and kissed as instructed and she added: \"It's eight-thirty now. I've ordered breakfast from room service for ten o'clock. They'll bring my luggage at the same time. That gives us more than an hour for you to show me how much you've missed me.\" She removed the hijab to let her thick, lustrous hair flow freely.\n\n\"Stick a 'Do Not Disturb' notice on the door,\" I instructed, \"and then come and have a look at the bath. We're going to have great fun in that.\"\n\n\"Yes, that's quite some bath,\" Charon agreed moments later, \"but how about you show me the bedroom first?\"\n\nI took her hand and led her through. The bed was still a bit crumpled from where I had got up earlier so Charon simply swept the coverlet and upper sheet back to the foot of the bed and smoothed the bottom sheet. She started undoing her shirt and then began laughing as if to herself. \"What's funny?\" I asked.\n\n\"I've just thought of something you told me about your Amsterdam days.\" Between chuckles she added in a fake Germanic accent: \"Wanna fuck?\"\n\nI didn't need another gracious invitation. I dropped my bathrobe, shed my pyjamas and threw myself on the bed. Holding out my arms, I said: \"You've talked me into it. What are you waiting for?\"\n\n* * * * *\n\n\"Your poor legs.\" I was lying face down and Charon was kneeling beside me, massaging my back and bottom with feather-light touches. She bent to kiss the scarred backs of my thighs.\n\n\"They don't bother me any more,\" I said, \"I stopped caring about them that first time you saw them. You weren't put off by them, you kissed and stroked them and I think that's when I realised everything was going to be all right between us.\"\n\n\"Everything about you is beautiful to me, Roisin.\" Charon parted my buttocks with gentle fingers and ran her tongue up between them several times causing me to gasp and jump. \"The first time we met, you told me later you'd have followed me anywhere. That same occasion, my thoughts were 'I hope this lovely little creature is coming into my shop'. Kismet, Rosie. It was our destiny to meet.\"\n\nCharon lifted my hips so that I was exposed to her and she began to finger-fuck me. \"I never tire of looking at your pussy, Rosie---it's so lovely.\" Not only did I feel the same way about her honeypot in its nest of dark hair, I never tired of hearing the wet noises I made when my lover was playing with me. She laid down and turned onto her back. \"Sit over my face, Rosie, I want to eat you and lick you until my tongue drops off. I've missed the taste of you so much these past few weeks.\"\n\n\"One condition.\"\n\n\"What?\"\n\n\"That I can do it to you afterwards. I've missed you, too. In fact, why wait?\" I turned my back and lower my hips so that kitty was over Charon's mouth and her pussy was right in front of me. As she started to tongue-bathe me, I penetrated her with two fingers. She was so wet that the fingers were thickly coated with her creamy juices. I sucked them and then parted her labia to reveal her clitoris already showing from its hood. Suddenly we both tightened our grip on one another's hips and our licking became more frantic, frenzied even. We erupted more-or-less simultaneously and I hoped The Savoy had good sound-proofing otherwise our cries would have been heard at the Tower of London some miles away.\n\nPanting, Charon said: \"Don't stop now, we need to work up an appetite for breakfast!\"\n\nMuch later we filled the gigantic bath sufficiently to cover us, scenting the warm water with some of the very expensive bath-salts the hotel provided. We were gently sponging each other and I once more gave silent thanks for not giving into temptation the previous night. I felt a tear roll down my face.\n\n\"What's the matter, Roisin?\"\n\n\"Nothing terrible,\" I sniffed, \"It's just that I love you so much and don't ever want to lose you.\"\n\n\"Come here,.\" Charon folded me in her arms and kissed away the tear-drop. \"You're stuck with me my sweet colleen, for ever and a day...\"\n\nSanta Monica\n\nThis time round I had no trouble going through Customs and Immigration. As a bone fide US citizen with all the correct documentation I sailed through after picking up our luggage from the rondel. I started to look for a cab when Charon nudged me and pointed. Jinn and Danny were waiting for us which meant a nice comfortable ride back to the apartment. Stopping off there to jettison our cases, we climbed back into the limo and headed for The Ascension.\n\nThe old, familiar Santa Monica streets came into sight and within minutes we were pulling smoothly into the dedicated parking spot in front of the nightclub. I slid open the privacy window, leaned over and patted the driver's shoulder. \"Thanks, Danny, I swear your driving gets better all the time,\" I praised.\n\n\"For you, Rosie, I'll make it feel like we're drifting on air. From what I've heard of some European drivers, I thought you'd appreciate a decent ride.\"\n\nThe three of us piled out of the limo and found a small reception committee waiting for us on the sidewalk. I guess Danny must have phoned ahead. Ellie and Rio rushed to give me hugs and big wet kisses. \"Hey, go easy you two, don't manhandle the merchandise,\" chuckled Charon, \"She's all mine.\"\n\nThe two girls, great hoydenish Ellie and delicate little Rio, held up their left hands to show me matching rings, glittering blue stones in silver settings. \"Look, Rosie, we're engaged.\"\n\nI gave them an extra hug. \"That's wonderful,\" I told them, \"When's the great day?\"\n\n\"To be decided,\" Rio said, \"but very soon now you're here...\" while Ellie added: \"Yes, we were waiting for you to come back. Dom has agreed to walk Rio to the pastor and my folks are coming to visit so my dad can walk me. Jinn is Rio's maid-of-honour and I'd like you to be my maid-of-honour, Rosie.\"\n\nI felt myself tearing up as I pulled my friend close. Because of our height difference I couldn't kiss her forehead and had to content myself with touching lips to her jaw-line. \"It'll be a privilege, Ellie.\" I'd always said Ellie and Rio were like a pair of five-year olds, not to be allowed out by themselves. Before Rio moved into the apartment to share Ellie's room, she would often arrive at our door and, like a kid, ask if Ellie could come out to play---it could have been taken as a joke but at times I thought she meant it. Maybe they'd grown up a little while I was away. Maybe.\n\nDespite my emotional reaction, though, inside I wanted to laugh. For a start, the wedding party might look a bit odd, what with tiny Rio attended by six-foot Jinn and six-foot Ellie attended by me, not a great deal taller than Rio. Furthermore, as both girls liked to romp around in the nude I hoped the wedding... no, they wouldn't... would they...? My imagination was also tickled by thoughts of what the wedding-night would be like with an abundance of BDSM equipment cluttering the bridal suite. The cleaning staff might find some rather bizarre forgotten items.\n\nBig Tony was there too and I was touched. Normally it would take a major disturbance in the San Andreas fault to shift him from his desk. A huge grin split his ugly face as he took one of my hands, raising it to his lips. \"Godmother, you have my loyalty.\" This play on dialogue from The Godfather was a long-running joke between Ellie and Tony and both gave brilliant Marlon Brando imitations.\n\nI gave his broad shoulder an affectionate punch. \"I know, you great lunk...\" before squeezing his hand and trying to slip into character \"...then be my friend, Tony.\" My accent was more Bob Geldof than Marlon Brando.\n\nThe club door opened then and Dominic stepped out, as immaculate as always in a bespoke suit with dazzling white shirt and discreetly-patterned tie. His lips twitched in what, for him, was a beaming smile. Then he astonished me---in fact, astonished all of us---by doing something he had never done before, a thing foreign to his nature. He came to me, took my hands in his, and kissed both cheeks. He spoke, once again showing there was no end to his unusual abilities.\n\n\"T\u00e1 t\u00fa sa bhaile anois, Roisin dubh,\" Dom said, his Irish greeting seemingly faultless, \"Cead mile failte. [You are home now, dark Rose. A hundred thousand welcomes.]\"\n\nI realised that suddenly I was feeling totally at peace, my inner scars fading away, slowly fading away into nothing. I felt my eyes becoming moist again as I reached out a hand to my Charon. I'd been on a pilgrimage to find peace and I found it. But the greatest peace had been here all along. Home. With all these wonderful friends about me I was finally healed, finally home.\n\nThe End"
    ],
    "authorname": "Maonaigh",
    "tags": [
        "fugitive",
        "loving friendship",
        "nudity",
        "new life",
        "tattoos",
        "lesbian love",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/dark-rose-1"
}