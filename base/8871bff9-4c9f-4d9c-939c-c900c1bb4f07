{
    "title": "Felicity Ch. 37",
    "pages": [
        "Chapter 37. Andrea\n\nI had just finished my freshman year at the university which turned out to be a surprisingly easy year for me. Mom had home schooled me every school year except first, sixth and twelfth. Those years were for social development she had said. I had yet to go into a classroom without already knowing the lesson being taught.\n\nI had found that getting laid was also easy for me. I was tall with a nice smile and easy-going disposition. I played on the varsity baseball team and ran track.\n\nI looked vaguely like a nearly redheaded Asian; which was not surprising, my Chinese grandmother had married a redheaded Texas guy. Mom looked like her mother and had married a tall American soldier and I was what I was.\n\nIt was an end of the school year party at someone's house; I was on the floor, naked, with a pussy on my face and a pussy over my cock. I had reached for both set of tits and guessed I did not know either girl.\n\nThey had their orgasms and left me on the floor with my unfulfilled cock straight in the air. Before I got up a woman said, \"Stay, it's my turn.\"\n\nI thought of her as a woman, she looked to be about three or four years older than me and had a deep slightly gravelly voice that was memorable. She raised her skirt and impaled herself on me with a sigh. She pulled off her shirt exposing her marvelous tits and brought them to my lips. I gently devoured them and she moaned.\n\n\"I know you,\" she said. I know you are polite, caring, and very smart. You are also very handsome and very athletic. You will sire fine children.\"\n\nShe kissed me and began the fuck but it occurred to me I was in a trap. My expression apparently told her what I was thinking.\n\n\"No, I don't want a man in my life but I do want a child. You will get me pregnant tonight then never see me again.\"\n\nI looked into her eyes and saw she was telling me the truth but I was still uncomfortable about our tryst and pried her off me and stood. \n\nShe gave me a small smile and began to walk away until I took her hand and said, \"Wait. Let's go get something to eat and talk. You may still get your wish tonight.\"\n\nShe nodded and we got dressed then I took her hand as we walked to an Italian Caf\u00e9. I had seen her there with some girlfriends almost as often as I had seen her in the education building.\n\nShe was beautiful but didn't know she was. She was apparently very intelligent as she had been summa cum laude in high school and in her undergraduate studies. I had heard her friends call her braniac and kid her about her awards.\n\nHad we been closer in age I would have already asked her out but I had been taught to respect my elders, not ask them for a date.\n\nWe sat in a booth and ordered then I introduced myself.\n\n\"I know who you are,\" she said.\n\n\"But I don't know who you are.\"\n\nShe looked at me in silence for a while then said, \"I'm Andrea.\"\n\nI already knew her name was Andrea as I had heard her friends call her that.\n\n\"Andrea, nice name. Are you graduating this weekend?\"\n\n\"Yes, masters in education. I already have a job.\"\n\n\"And want to be a mother. Why me?\"\n\n\"You have the best genes and I want the best genes for my child.\"\n\nI was sure she had noted my Asian heritage and was not bothered by the possibility of having an Asian looking child. \n\nI liked that and I liked her.\n\nI nodded and smiled at her as our dinner was placed in front of us. We had both ordered calamari in egg noodles and Alfredo sauce.\n\n\"You are a gorgeous woman, why were you alone at the party and why don't you have a boyfriend?\"\n\n\"Thank you. The truth is I prefer women but my girlfriend took off with another yesterday and finding myself alone made me think I did not want to be alone all my life. I decided that a child would be he best way to solve that. You were the first man in me. Do you remember me being here?\"\n\n\"Yes, you were with three other girls.\"\n\n\"The blonde was my girlfriend.\"\n\nI realized she was inexperienced. I mulled things over in my mind then went fishing.\n\n\"But you were OK when your partner left, you did not love her.\"\n\n\"Yes, probably true. But she was company and the sex was good although apparently not good enough for her.\"\n\n\"She was already cheating on you.\"\n\n\"Yes, but she told me we were a couple.\"\n\n\"But you did not believe her.\"\n\n\"No.\"\n\nThat conservation seemed to have shaken a gloom off her and her smile turned from polite to real.\n\nAfter we ate in silence for a while I said, \"I love this.\"\n\n\"Me too.\" \n\nI nodded as we finished our food and drank our ginger ales. As we waited for my check I kissed her softly. She smiled and kissed me back.\n\nAs we walked to the register we held hands.\n\n\"When are you leaving town?\" I asked as we stepped outside.\n\n\"Sunday morning.\"\n\nIt was Friday evening.\n\n\"Let's go to my place and get you pregnant.\"\n\nShe smiled softly and followed me home. We took a shower together then I made love to her until she had an orgasm then I filled her pussy with ejaculate. I cuddled to her and we went to sleep. \n\nThe experience had felt natural somehow. It was not my most passionate fuck but it may have been the most memorable fuck, sex, lovemaking experience I had ever had. Fuck too or did I already say that.\n\nShe was astride my body fucking me when I woke up the next morning. I kissed her tits and caressed her ass until she had an orgasm then I filled her pussy with cum once again.\n\nWe got out of bed, showered and dressed then went to breakfast. We ran into some of my friends and I introduced her as my tutor and complained she would be leaving me the next day. \n\nI was not aware we were holding hands until I saw my friends looking at them.\n\nThe guys asked her how she could work with me without strangling me and she smiled sweetly and said, \"That was the hardest part.\"\n\nGreat line. Our child had a very good chance to be special I thought.\n\nI gave all a mortally wounded act before Andrea and I returned to my home still holding hands. \n\nWe immediately got undressed and fucked again. I did not cum that time; her orgasm had come before I was anywhere near ready for mine.\n\n\"I did not know fucking a guy could be so, so, entrancing. Thank you for making love to me and my pussy,\" she said.\n\n\"I like you and your pussy. At what time do you need to be in the auditorium?\"\n\n\"At one.\"\n\n\"Is your family going to be there?\"\n\n\"Yes but they will be leaving directly after the ceremony, they are flying to Venice.\"\n\n\"Business?\"\n\n\"No, it's a fuck, eat and sightseeing trip. They call it FEAST trips but I figured out that is what they do.\"\n\n\"Nice. Have you been on trips with them?\"\n\n\"Puerto Rico and Costa Rica. They invited my ex on the last one. I learned I was not in love with her when she stayed at the apartment of a friend and they were having sex but I still wanted to be in Costa Rica with my parents. I rarely thought of her those ten days.\n\nI told her I had spent a week in Costa Rica and we shared our experiences. My trip was with my Mom.\n\nWe cuddled silently for a while and I could sense she wanted me to fuck her again.\n\n\"Have you ever sucked a cock?\"\n\n\"No. I have heard that semen has a tremendously bad taste.\"\n\n\"I was thinking in terms of getting my cock erect so we could fuck again.\"\n\nShe smiled then slid down my body and slurped my cock into her mouth. A few sets of directions later she was doing an amazing job of resurrecting my cock. I pulled her over me and she was soon in mid fuck.\n\nShe was no longer in it for the sperm; she was in it for the orgasms. She had three before I ejaculated into her.\n\nShe kissed me and began to get off me but I held her in place and resumed the kiss. She giggled and we just kissed until my cock slid out of her.\n\nShe again began to get off me but I kept kissing her so she stayed.\n\nSeveral minutes later we were both asleep.\n\nSomething told me we needed to get up and when I looked at the clock I saw it was after twelve.\n\n\"Get up, you have a graduation ceremony to attend.\"\n\n\"No problem, I'm already dressed,\" she mumbled.\n\n\"Sweetheart you are naked draped over a naked guy with your pussy kissing his sleeping cock.\"\n\nShe giggled and said, \"Oh, then I better go home and get my gown.\"\n\nShe dressed and left claiming she did not need a ride so I went into the shower then dressed well. I got to the auditorium with plenty of time and made sure she saw me. She gave me a big grin. I figured out who her parents were and they certainly looked very proud of her. Both were close to tears.\n\nAfter the ceremony I stood back until her parents left then walked over to her and took her hand. I took her to a seafood restaurant and we ate a late lunch/early dinner before returning to my house for another fuck; no, we made love. There were more kisses than strokes that time. \n\nWe slept in each other's arms for a while.\n\nThat night she asked, \"Do you have any porn videos?\"\n\n\"Well I have two that have explicit sex although they are not classified as porn, Short Bus and Nine Songs. I also have two from the eighties that are porn, Behind the Green Door and Insatiable.\"\n\n\"Lets watch one of those.\"\n\nWe remained naked and watched \"Insatiable\" as she caressed my cock and I caressed her pussy. She had two nice orgasms before my cock became useful again.\n\nShe straddled me and sunk my cock back in her but did not fuck right away; instead she watched the movie and kissed me.\n\nI kissed her tits and caressed her ass and eventually she began the fuck.\n\nShe said, \"You got me pregnant on our first fuck last night. This and all the other fucks are because I wanted more, wanted you. You have been even better than I hoped and have treated me as if I was the love of your life. I thank you for that. \n\nDon't worry about our child or me; we will be fine. I will never forget you.\"\n\nShe kissed me passionately as she began a wild fuck that had us cumming with great intensity. We panted to a halt and again went to sleep.\n\nWhen I woke up the next morning she was gone.\n\nIt was not until then that I realized I did not know where she lived, where her hometown was or where her job was.\n\nI knew that was for the best but I was still very upset.\n\nI tried to find her but everyone that would be likely to know her would have graduated the year before. The previous years yearbook gave me a last name and that she was from Houston but did not help at all, I was from Houston and so were another five million people.\n\nNine months after she left I was numb thinking that she was having my baby. I wanted to see them, hold them.\n\nIt took some effort not to cry.\n\nFor the rest of my college life I compared all the girls to her and found them to be insufficient. I did fuck a few that just wanted a fuck but I never had a girlfriend. I found myself being somewhat faithful to someone I would never see again.\n\nMy nerves were on edge, I felt the need to be busy so I took full class loads and went to summer school. I completed a degree in Education then graduated with a Masters in Biochemistry a semester before the rest of my class graduated with their Bachelors degrees. \n\nI was offered a job with a large pharmaceutical company. The money was good and I got to travel so I took it.\n\nOn a Friday morning in early June three years later I found myself at a town on the coast introducing our new improved antibiotic. The doctor was happy to see me as she had a patient with a case of West nile fever that had been difficult to defeat. I left her samples to use then checked in at the beach resort. I was going to take the next three days off and be on the road again on Tuesday.\n\nThat Friday as I wandered around the town I was thinking it would be a great place to live. I ate great food and made a few friends. That evening I ended up in a lesbian biker bar that was a lot of fun. I made a lot of new friends there and could have gotten laid had I wanted to do so but I was too tired and needed to rest.\n\nThe following Saturday I went deep-sea fishing and caught a ten-pound king fish that a seafood restaurant in town cooked for me that evening. I shared it with all who wanted some. I made more new friends.\n\nThe following Sunday I spent on the beach. I was about to settle down on a lounger when a little girl ran right into me causing me to flip right over it. The little girl seemed to be vacillating between terror and laughter. Her expression made me laugh so she chose laughter.\n\n\"Who are you? The town avenger?\"\n\n\"No, my name is Susan and I am hiding from my Mom.\"\n\n\"Does your Mom know you are hiding from her?\"\n\n\"Not yet, she went to get us ice cream.\"\n\n\"So your Mom is coming back with ice cream for you and you will not be there. Wont the ice cream melt?\"\n\n\"Oh. Right. I guess I better go back. Sorry I knocked you over.\"\n\n\"I forgive you this time but if it happens again I will tell your Mom you have to get all your shots all over again.\"\n\n\"No, no. No more shots.\"\n\n\"Well OK then. Hurry before the ice cream melts.\"\n\nShe ran towards the town's beach area and I got my body into the lounger.\n\nAbout thirty minutes later I decided I needed ice cream and walked over towards the vendor. Susan saw me and walked to me.\n\n\"Are you getting ice cream?\"\n\n\"Yes I am. Knowing you had one made me want one. Which do you like better?\"\n\n\"The coconut or the rainbow, but the two together don't taste good.\"\n\n\"Good advice,\" I said and ordered two coconuts.\n\n\"Are you moving into town?\"\n\n\"No, just passing through. I just brought a new medicine to the clinic and after they try it and if it works they will order more and then I go to the next town.\"\n\n\"You travel a lot?\"\n\n\"Yes, most of the time.\"\n\n\"Oh.\"\n\n\"You seem disappointed. You are gorgeous but I'm not ready to get married.\"\n\nShe burst into giggles and suddenly ran off. She was gorgeous, a brunette with high cheekbones and an infectious giggle.\n\nI saw her go to her mother who was on a lounger reading. She was wearing a wide brimmed hat and sunglasses but I could see she was a fine looking woman. I walked behind them as I returned to my lounger but Susan ran next to me and held my hand.\n\n\"Oh no, you're not getting my ice cream too,\" I said. \n\nI had seen her give her ice cream to her mother.\n\nShe giggled and said, \"Mom told me to say thanks and apologize to you for trying to fix you up with her. I told her you got the ice cream for her but she did not want me to invite you over.\"\n\n\"That's too bad, she looks like a very pretty lady.\"\n\n\"She is the prettiest Mom in town.\"\n\n\"Wow, you must be proud of her.\"\n\n\"I am but she needs a boyfriend. Do you have a girlfriend?\"\n\n\"Just you.\"\n\nShe again burst into giggles and ran off.\n\nI got to my lounger and finished my ice cream then went into the sea to get the stickiness out of my hands. That took a bit longer than expected because I was distracted by a woman diving off her husband's shoulders. Sometimes when she surfaced her tits would be exposed. She graciously took her time enclosing them back up.\n\nWhen I returned to the lounger Susan was in it.\n\n\"Hey, that's my seat.\"\n\nShe giggled and got off then said, \"Mom told me to leave you alone because I was bothering you.\"\n\n\"I thought bothering people was your job.\"\n\nShe giggled again then ran back to her Mom.\n\nI had about thirty minutes of peace and quiet before she came back.\n\n\"We are going home now, bye.\"\n\nShe gave me a quick hug then ran to her Mother that was now just ten feet away from me. I felt like she was staring at me through her big sunglasses and I began to feel uneasy until she said, \"Good to see you again.\"\n\nThat voice sent chills down my spine; it was Andrea. \n\nSusan was my daughter.\n\nI quickly got up and asked both to join me for dinner at the Italian restaurant downtown.\n\n\"I understand they have the best shrimp linguini in the world.\"\n\n\"Mom, please. I want to.\"\n\n\"I'm in sales and just passing through town. I will be gone on Tuesday but would like to have a memory of two beautiful ladies having dinner with me before I go.\"\n\n\"Mom, please?\"\n\nFinally Andrea said, \"We both love their shrimp linguini so I guess we could. At about six?\"\n\n\"Perfect.\"\n\n\"We will meet you there.\"\n\nWe had to wait for a table but we were soon enjoying our dinners. Andrea and I kept our conversation as if we had just met that day. She was reluctant to give me any information but Susan answered all my questions.\n\nAndrea asked me what attracted me to pharmaceutical sales and I answered, \"The money is good. That and there were no school jobs open when I graduated mid-term.\"\n\n\"You graduated early?' I thought you would extend the college experience as long as possible.\"\n\n\"I had every intention of doing that but an incident at the end of my first year changed it. My nerves became jingly and I used the extra energy to study.\"\n\nAfter a short pause she asked in a low voice, \"Was it a traumatic experience?\"\n\n\"Yes, it was.\"\n\n\"There was another longish silence at the table before Susan asked, \"Did your girlfriend break up with you?\"\n\nI thought about it for a few seconds then said, \"Yeah, she left.\"\n\n\"Did you love her?\"\n\nI took even longer to answer that; I had never considered my symptoms that way. I suddenly decided to change the subject and asked Susan if she had finished kindergarten.\n\nAndrea had apparently been holding her breath; I heard a sort of sigh/sob but did not look at her.\n\n\"No, I finished first grade. I won the price for best student,\" Susan answered.\n\n\"Well, I am impressed, and here I thought you were just the bothersome avenger. Or are you both?\"\n\n\"She is definitely both,\" Andrea said with a smile.\n\nWe finished dinner and the waitress came by and asked if we wanted desert.\n\n\"Coconut ice cream for me,\" I said.\n\n\"Strawberry for me,\" Susan said.\n\n\"Coconut flan for me,\" Andrea said. \n\nThen to me Andrea said, \"They get the flan from the bakery across the street, they make the best everything there.\"\n\nSusan finished her ice cream before I had taken my third bite so when the waitress came back she told her, \"Now I want a coconut ice cream.\"\n\nThe waitress looked at me and I nodded.\n\n\"Your father is a pushover,\" she said to Susan.\n\n\"Oh, he is not my Daddy yet,\" Susan replied.\n\nAndrea and I blushed but the waitress misunderstood and just nodded at us with a smile. Andrea seemed to have been shaken by that exchange.\n\nWe did look like a family enjoying dinner out. I spent my time falling in love with my daughter. Susan did a lot of giggling. Andrea spent her time in Mom mode but it was obvious to me she was holding something in check the best she could.\n\nI had walked to the restaurant and Andrea offered me a ride back to the hotel. When we arrived Susan said, \"Mom, show him where we live so he can find us when he comes back.\"\n\n\"I'm not sure he would want to see us again.\"\n\n\"Actually I would. Susan is the first girlfriend I have had in years.\"\n\nSusan giggled and Andrea drove on to their home; which turned out to be a patio home in a nice complex.\n\n\"Coffee?\" Andrea asked.\n\n\"I would love some,\" I said.\n\nWhile Andrea brewed the coffee Susan led me to her room and told me she had decorated all of it by herself with Mom's help. \n\nShe had a soccer trophy for her team winning her league championship and a diploma for graduating from first grade. There was a large picture of her and her Mom in which they both looked just gorgeous.\n\n\"Do you know if there are little pictures like that? I would love to have one.\"\n\n\"Yes, I know where they are.\"\n\n\"Don't tell your Mom, she might be saving them for someone.\"\n\n\"Oh, OK.\"\n\nWith the photo secure in my wallet we sat on her patio and drank our coffee as Susan chattered away.\n\nSusan asked me to spend the night and before Andrea had a chance to object I declined reminding her I had paid a lot of money to stay at the resort.\n\nThat seemed to satisfy her but when I looked at Andrea she was biting her lip and seemed to be shaking.",
        "\"I better go, it has been a fabulous day thanks to you ladies. Don't worry, I can find my way in this small town and anyway the linguini needs to be walked.\"\n\nI walked to the door and gave Susan a short quick kiss on the lips then intended to give Andrea the same but she turned her cheek to me so I kissed that. \n\nThe kiss lasted longer than intended and she shuddered but did not move. I kissed her again close to her lips. She turned to look at me and I kissed her lips. The kiss was soft and lingering. I put my arms around her and whispered, \"I love you.\"\n\nShe began to cry and said, \"I thought I had missed my chance back then, I am not missing it now.\"\n\nShe took my hand and led me back inside. Susan was jumping up and down cheering. We sat on the love seat and kissed as Susan showered kissed on both of us.\n\n\"I have a Daddy,\" she said.\n\n\"Yes, you have your Daddy,\" Andrea said.\n\nSusan did not catch the wording.\n\nWe eventually noticed it was Susan's bedtime. I told her the story of the flying turtle and she was soon asleep. I found Andrea in her shower and I joined her in it. We kissed and played but reserved the sex for her bed.\n\nI lay down on my back and she straddled me. Penetration was a bit difficult so as soon as she had engulfed my cock I brought her down and we began a kiss.\n\n\"Your cock was the first and last one in me. It feels enormous right now so I will need to go slowly.\"\n\n\"We have all the time in the world.\"\n\nWe kissed some more as I caressed her. She began the fuck and had an orgasm in less than a minute.\n\nShe paused to moan and resumed the fuck at a faster pace. Her pussy was now well lubricated.\n\nShe had another orgasm five minutes later and paused to catch her breath and kiss me. I rolled us over and began a slow, long stroke fuck and after five minutes she was fighting her body until a loud groan announced a major cum. Before she had recovered I began a furious fuck and took her to another shuddering cum as I filled her pussy.\n\nI rolled us back over and we waited to catch our breath.\n\nShe said, \"All those years I had suspected our sex was so good because we loved each other. I decided that was unlikely but now I know it was true. Which is good because I think you just made me pregnant again.\"\n\n\"A son would be nice.\"\n\n\"Or a sister for our daughter.\"\n\n\"We wasted over six years.\"\n\n\"No, we weren't ready then although I was ready for you about three years ago. We were there for your graduation but you were not. I thought you had transferred or dropped out. It never crossed my mind you could have already graduated.\"\n\n\"In that case we have really wasted three years.\"\n\n\"Yeah, but I am still over three years older than you.\"\n\n\"Good thing, when you reach cougarhood I will still be a horny guy.\"\n\n\"The years don't seem as dramatic now as it did when you were still a teenager. I can in fact ask you what you are going to do with the rest of your life and not dread the answer.\"\n\n\"Well, in the morning you will need to take me to the school district office and see if they have a place for a chemistry teacher. Then the three of us need to go to Vegas and get married. I will need to continue working until the end of June then move in here with my wife and daughter. Simple really.\"\n\n\"Yeah, simple. Do you have the money to buy me a ring?\"\n\n\"Yeah, we can do that tomorrow too.\"\n\n\"You will need to adopt your own daughter.\"\n\n\"Probably not. You can just request a paternity test, it comes back positive, so we change her last name. Simple really.\"\n\n\"Yeah, simple. \n\nI love you. I probably fell in love you when you turned down my fuck at the party but then took me to dinner. By the time we went to your home I knew you were the right guy. When I left your bed to come here I knew I was in love with you.\"\n\n\"When I woke up that next morning I knew there was something wrong with me. I didn't realize I had already fallen in love with you until I kissed you at the door today. There was never anything wrong with me.\"\n\n\"Yes there is, you fell in love with an older woman.\"\n\n\"That is a sign of great intelligence.\"\n\nWe kissed and she said, \"I have to call Mom.\"\n\n\"Me too,\" I said.\n\nMy conversation with Mom was mostly me repeating myself. I was surprised she knew the town I was in.\n\nHer conversation with her parents was loud and happy and almost impossible to follow but I learned they would be in town the next day. As soon as she hung up Andrea gave me her soul in a kiss.\n\nI gave her mine.\n\nWe cuddled and kissed for a while until she said, \"Your cock is ready again.\"\n\nWe fucked and made love from nine that evening until one in the morning and again as soon as we woke up.\n\nShe dressed and went to the kitchen and said, \"You will need to lead her to the pot and then load her toothbrush for her then wash her face with a wash cloth. She is a morning zombie.\"\n\nI dressed and used Andrea's toothbrush then went to get my daughter ready. I carried her to the table and her mother said, \"She can walk to the table for herself you know.\"\n\n\"Well she wont have to for a while.\"\n\nOur day went as planned, we got an application at the school district office then Andrea drove me to the resort, I checked out and took my stuff to her house. After we put it away the three of us got in my SUV and went to a jewelry shop in town.\n\nThe redheaded lady owner took her to a computer at the back of the store and began to show her rings as Susan and I watched a screen of the choices in front. Apparently there was a screen that faced outside because soon a crowd had gathered. Two women saw Susan and dashed in. \n\n\"Is that your mother choosing?'\n\n\"Yes,\" Susan said with pride. \"This is my new Daddy.\"\n\nBoth women kissed me hard then introduced themselves and sat with us and watched as Andrea deliberated her ring choices.\n\nWhen her grandmother arrived she squealed her way in and Susan jumped into her arms and she kissed me as she held her granddaughter. Her grandfather gave me a handshake that turned into a hug. \n\nMore women came in and when Susan's mother Ellie confirmed to them that I was Andrea's fianc\u00e9 they kissed me before introducing themselves. I understood by then that the women of the town did things backwards.\n\nThe redheaded lady came to the front and asked for me to come speak to her. She quietly asked me if there was a financial limit on the purchase. \"Ten thousand dollars,\" I said.\n\n\"All the ones she likes are well under that but she is afraid to bankrupt you. I will tell her you said any of them would be fine.\"\n\nSeconds after the lady went back the choice was made and I took my credit card to the desk. Her rings and mine cost me just under seven thousand dollars. I had a twenty thousand dollar limit on my card and paid it off each month.\n\nNot that next month.\n\nMy normal expenses went to my company card and I had managed to save over a hundred thousand dollars in just over three years but I knew I still had Vegas and the paternity test expenses coming up.\n\nThat was when I realized I was going to take a huge pay cut by becoming a teacher. But I was going to have a wife that was also a teacher and she was already handling the bills by herself so between us we would be fine.\n\nAndrea emerged from the office with her father and was mobbed by her mother and her friends. \n\nHer father took advantage to take me aside and said, \"You are getting married in Las Vegas on July fourth. You are staying at a room in the Bellagio for a week; it has discount rates for us. You are flying from here and will have tickets to a concert. Susan will come home with us after the wedding and you two will have four days to yourselves. She will take care of all the arrangements.\" \n\nHe said that last part about the redhead.\n\nThe redhead, Wendy, said to me, \"You will also treat Andrea as the precious jewel she is. We are all happy to see that her daughter already calls you Daddy.\"\n\nI turned to look at the excitement and noticed all the women were giggling and crying. I had to quickly stop a tear from leaving my eye but the woman saw it, grinned, and then kissed me on the lips before she and Andrea's father joined the mob.\n\nSusan came to me and motioned for me to pick her up. She embraced me and said, \"That is the happiest I have seen Mom in all my life. You knew each other before yesterday. Didn't you?\"\n\n\"Yes we did, in college. I fell in love with her then but she left and yesterday I learned I still was in love with her. She is not the only happy person here.\"\n\nA short silence later Susan asked me, \"Are you my father?\"\n\nBefore I could answer her mother, grandmother and her friends had joined us and I felt it was not my place to answer.\n\n\"Yes, he is your father so you are always allowed to mooch ice cream from him,\" her grandmother Ellie told her.\n\nSusan hugged me hard and began to cry and that got everyone crying again, including me.\n\nWe made it through the tumultuous day and after the last visitor left her house we were too exhausted to fuck so we kissed our way to sleep.\n\nI managed to remember to go to the clinic on Tuesday and check with the doctor. The new stuff had worked; the patient had just been released. The doctor had also posted a highly recommended mark next to it and me on my company's web site.\n\nI called my office and resigned effective June thirtieth, that was the last appointment on my present schedule. I was going to need the paycheck and commission. I left Felicity that day to finish my rounds. \n\nAndrea, Susan and I talked on the phone several times each day and I was able to make it home three times before the end of the month.\n\nI had my transcripts sent to the school district and when I got home to stay I had a teaching job.\n\nSusan led the procession at the wedding and my Mom and Ellie just beamed at her and then cried when Andrea walked down the aisle.\n\nAndrea's father hugged me after he brought her to the altar.\n\nMom kept saying, \"I have a granddaughter. I have a daughter, I have a sister.\"\n\nShe held Ellie's hand throughout.\n\nMom and I were the only family we had and she had already moved to the town to be closer to us. She also had a mentor position with the school district.\n\nSusan adored all the Vegas shows we went to see but really adored the band for whose show we had tickets. \n\nThe leader of the band congratulated Andrea and me on our wedding during the concert. Apparently Susan's best friend was their daughter Janis and they sat together during the show.\n\nA few weeks later we learned Andrea really was pregnant so we sold her home and bought a three-bedroom house. \n\nOur daughters grew up healthy and accomplished. Both had somewhat Asiatic features and several had told me Susan looked like me but our baby Penny looked mostly like Andrea. Both were beautiful. \n\nAndrea was beyond that.\n\nWhen Andrea turned forty she became a sex monster. My claims of fragility were ignored and I spent the next seven years in a state of exhaustion. \n\nThen we met some aliens and the town moved."
    ],
    "authorname": "jjcolejr",
    "tags": [
        "romance novella"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/felicity-ch-37"
}