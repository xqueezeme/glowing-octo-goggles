{
    "title": "Kismet Encounter Ch. 02.5",
    "pages": [
        "A romance between two women containing supernatural elements. Although this is very much part of the rest of the Kismet series, it is slightly different. It isn't a direct continuation from where Kismet left off but rather a concurrent event within the story. I hope this doesn't put anyone off! As usual, there's a lot of buildup and plot but I promise the good bits are in there. A huge thank you to WaxPhiliosophic for giving it a read to ensure it made sense. \n\nThank you to all who've left comments on my other stories. I sincerely appreciate any bit of feedback I receive!\n\n************\n\nThe wind off the water was sporadic and it tugged at my wavy blond hair, whipping it into my face. Fall was coming, the cold days far surpassing the sunny ones, and I relished in the lingering heat surrounding me. The earth was warm beneath my bare feet, clusters of sun-kissed grass tickling my toes as I curled them around the blades. It was at times of seasonal shifts that I felt beckoned to the sea, the wild and unpredictable unknown held in the depths of the ocean. Yeah, it was strange, but I couldn't resist its pull.\n\nI tilted my face toward the sun, my hands clasped behind my back, simply enjoying the moment. It was gorgeous, the Chehalis River spilling into Grays Harbor with such a divine elegance that took my breath away. The blue sky was quickly becoming muddled with dark clouds, hinting at a rain shower. I ignored the impending storm. The heat on my face, earth between my toes, and the wind coming off the water combined to seemingly caress my soul. The coalescence was so sensual, it was bordering on erotic.\n\nAnd, then my phone rang. I knelt, digging through my cavernous tote bag, grumbling the entire duration of my search. Finally, I found it on the fourth ring.\n\n\"Hello?\"\n\n\"Hey, Autumn Markle? It's Maria from the hospital,\" the sweet voice chimed on the other end. I rolled my eyes because I did not want to work.\n\n\"Yeah, what's up?\"\n\n\"We had three call outs on night shift. I was wondering if you could work tonight,\" she inquired.\n\n\"I'd rather not,\" I answered, standing back up, throwing the strap of my bag over my shoulder. I felt a droplet of water hit my forehead and I peered up, taking in the swirling cloud cover overhead.\n\n\"I could give you a bonus shift. We're desperate, Autumn,\" Maria lamented. I sighed, her offer placating my refusal. Although I didn't want to work, the momentary incentive of double time was too good to turn down.\n\n\"Okay, but I may be late.\"\n\nI sped back to my rental cottage on the outskirts of Aberdeen, Washington quicker than I thought possible. The space was quiet, my house mate already on his way to work. Ryan Claypool and I met during our orientation at the agency we both worked at as traveling nurses and we became friends instantly. \n\nNancy's Nurses was based out of Maryland, our home state, and in the four years we'd been at the agency, we'd only been on three contracts together. When there were two openings at the same hospital in 'Podunk', Washington, we jumped on it. We were two months into our six month contract at the community hospital in Gray's Harbor County, Washington. As the rain shower transitioned into a torrential downpour the day we moved into the cottage, I'd deduced the name for the area was fitting.\n\nI grabbed the least wrinkled pair of scrubs I could find and threw them on, clipping my name badge to my top as I brushed my teeth. After I hastily dumped some instant coffee in a cup of microwaved hot water, I ran out into the damp evening.\n\nThe weather was as crappy as expected when I headed to work. Thankfully, the rain had settled to a light mist and I opened the windows to take in the scents of pine trees, blaring my music as loud as possible. I breathed in the soft aroma of the wild, wanting to get my fill before being overtaken by the nearly fetid orders of hand sanitizer, antiseptic, and illness.\n\nA congregation of orange hazard cones lined the roadway ahead and I squinted my eyes to see the sign stating WORKERS ON ROAD. Another sign reading FLAGGER AHEAD stood on the side of the road, illuminated by orange.\n\nOncoming traffic was proceeding while the lane I was in halted, the cones lining the road beyond the flagger. The flagger bobbed their head in my direction, either to the beat of the music of to acknowledge my presence. As the only car in the waiting lane, I turned my music down to stifle the embarrassment of my listening habits.\n\nThe flagger put a hand on her hip. \"Hey, that was a good song,\" she balked from the roadside. She was definitely female, the swell of her breasts visible even with the bright reflective jacket she wore. I grinned as I turned up the new hit by Foster the People and she began to dance.\n\nI couldn't help but laugh at the adorable stranger, a car passing on the other side of the road. The flagger remained undeterred, continuing her cavort as two more cars passed by. She finally stopped when the walkie talkie attached to the hips she was just swaying emitted a garbled message. The dark-haired flagger said something into it and then turned the pole in her other hand from STOP to SLOW. I approached slowly, rolling my passenger window down completely. Even in her bulky reflective gear, her body was slim and athletic.\n\n\"Those were some sick moves,\" I called out of the window. The flagger beamed, looking behind my little Toyota to ensure we weren't holding up traffic before she leaned her head through the open window. Her eyes were dark, even with the illumination of the large halogen light above us. A loose strand of her mahogany hair hung next to her bronze cheek, having come astray from the pony tail she sported while dancing.\n\n\"Thanks. I don't usually have such a cute audience,\" the woman squinted to read the name tag dangling from the breast pocket of my scrubs, \"Autumn,\" a charismatic smile on her lips as she enunciated my name. Those lips were decadently plump and, damn, I wanted to taste them.\n\n\"Especially one in uniform,\" she added. I laughed, unperturbed by the flagger's blatant coquettish behavior. If anything, I was flattered.\n\n\"I bet you say that to all the girls,\" I countered, and her grin widened.\n\n\"Only the really cute ones,\" she claimed.\n\nI wanted to stay and continue our mutual flirtation but one glance at the clock on my dashboard informed me I was already fifteen minutes late. With ten minutes still left of my commute, I cleared my throat and let the car move just an inch, the flagger moving alongside. \"Well, thanks for the show. I've got to get to work. I'm late.\"\n\nThe flagger stood from her spot at the window and smirked. \"Do you use this route often?\"\n\nI nodded. \"I do when I'm headed to work. Why?\"\n\n\"We'll be out here for the next few weeks working on the new roadway. Maybe I'll see you tomorrow,\" the flagger's eyes searched my face for a sign of recognition, maybe looking for some universal yes-I'm-just-as-gay-as-you glint in my eyes.\n\nI played along. \"I look forward to seeing you again,\" I winked and pulled my car around her and the cones. I never was good at flirting, but I knew I'd caught her attention when I saw her staring at me from my rearview mirror. And I regretted not getting her damn phone number.\n\n****\n\n\"Autumn, your boyfriend in room six says he misses you,\" Ryan snickered from beside my head as I sat at the computer behind the nurse's station.\n\nI took a deep breath and turned to him. \"If you're referring to the lovely gentlemen who grabbed my ass, you can tell my boyfriend that Jack is taking over his care,\" I snapped, attempting to hide my frustration. I didn't want to give Ryan the satisfaction of knowing a patient got under my skin. The patient in question had grabbed my backside two different times, the second when I was trying to start an IV line in his arm, the nursing assistant witnessing it. After I used my best professional tone to dissuade the man's inappropriate advances, he had the audacity to argue with me and spew some colorful obscenities my way.\n\nRyan chuckled and put a hand on her shoulder. \"I'm messing with you. You know I've got your back, man. At least our little guy in room eight did a one-eighty.\"\n\nI nodded, happy that the child in full anaphylaxis quickly recovered. He wouldn't have made it if it hadn't been for me and a hefty dose of Epinephrine. I don't state that to be conceited or pretentious: it's the truth. I chose to work in the emergency room setting for many reasons, but the biggest being it's the easiest place to use my ability with discretion.\n\n\"You want to grab a drink with me after work?\" Ryan asked. \n\nThe thought of going to a bar at seven-thirty in the morning definitely put me off. I looked up at him with a grimace and shook my head. \"Nah, I think I'm going to head home and play a video game or do some reading.\"\n\nHe chuckled. \"You, my friend, are incredibly lame.\"\n\n\"Love you, too\" I replied without looking at him. He shook his head and walked off toward a patient room.\n\nThe first real memory I have of using the ability I was cursed with had to be when I saved a cat after it was hit by a car. Now, I say cursed because my life hasn't gone by without trouble resulting directly from having said ability. Anyway, Sir Kibbles was a sweet little cat that roamed the neighborhood and refused to become a lazy house cat. As many times as we caught him and brought him into our home, as well as fellow neighbors, he always wanted back outside, to rumpus his unruly ass through the streets. He was a true Tom-cat.\n\nOne day on my way home from elementary school, I found poor Sir Kibbles on the side of the road. His breathing was shallow, and he had a long gash on his back. I picked up the bleeding cat and trotted home with him close to my chest. My adoptive parents were bewildered when I came striding into our house with a bleeding, limp cat. \n\nMy mother almost fainted and my father tried to pull the dying cat from my arms. I told them to stop, that I could fix him. I climbed into the old clawfoot tub, tucking the cat's head beneath my chin. And, I sat there cross legged and ignored their protests. I still remember the feeling that took over me, like a scorching flame, a forest fire in a wind-swept landscape within me.\n\nSir Kibbles started to purr, and he leapt from my lap, rubbing his face all over the inner surface of the tub and my knobby knees. My dad rushed him to the emergency veterinarian clinic in town, bringing him back two hours later with a clean bill of health. That stupid cat went on to live another five more years.\n\nMy parents cautioned me to not do it again. They were afraid, understandably. I think part of them feared me. With no history of my biological parents, they knew next to nothing about what I could do nor how I could do it. All they knew was what the adoption agency told them when I was an infant, which was next to nothing on my next of kin.\n\nBut, I couldn't help it. I continued to heal little animals around our neighborhood, just small stuff. A scrap here, a bad bite there. Nothing came close to my miracle with Sir Kibbles, and I was thankful for that. I wanted to be a doctor or a veterinarian but, when I neared the end of high school, I had matured enough to realize it wasn't the safest option. People fear what they don't understand, and I barely understood my own ability. I couldn't expect strangers to accept it nor understand it. So, I went to nursing school.\n\nIt was my calling, obviously. I couldn't stay in a location for very long, hence the traveling nurse bit. The ER provided me with a platform where I could use my ability with quiet discretion with no one the wiser in acute situations. Strange miracles happen all the time in the medical field, but I still felt more comfortable hopping from place to place with the agency than staying too long in one area.\n\nAny longer than four months and I would develop a nervous restlessness and would have to move on. It made me anxious to have signed up for the six month stint, but I was confident I could keep myself concealed. Well, hindsight is twenty-twenty, and I was a complete dumbass for believing I could be careful.\n\n****\n\nThe next evening, I conceded and let Ryan take me to the club in town. He proceeded to ditch me after ten minutes to dance with his new boyfriend. I sipped my new favorite drink, the super sweet Washington apple and sighed, soaking up the ambience of the club.\n\n\"Hey, Kermit the frog called and said he wants his jacket back,\" said a familiar voice from behind me. I rolled my eyes so hard, I feared they might've been stuck until I looked over and saw the owner of the voice. It was Jim, from radiology, with his obnoxious joke he used each time he saw me in my hoodie. It was my favorite, an emerald green zip up I found at a thrift store in Portland during my last contract and I wore it almost religiously since. Every time he said the joke, it was like nails on a chalk board. \"Heh, hey Jim,\" I muttered, taking a long pull off my drink.\n\nHe met my eyes and smirked, trying to throw his potent charisma my way, it being deflected by, I surmise, my gayness. Since the first time the man started flirting with me, Ryan endlessly teased me about it, wondering why the cute ones always had to be straight. I'd told Jim I wasn't interested in a polite way multiple times and when he didn't get the point, I explained it to him explicitly. Can't help my attraction to women.\n\nYet, here I was trying to enjoy myself and he sat beside me, relentlessly flirting with me.\n\n\"You look a lot different when you aren't in scrubs,\" he noted, his eyes scanning my body, nearly making me cringe.\n\nMy faded jeans and V-neck blouse covered by my ugly green sweater was hardly what I would call attractive. \"I'm not interested,\" I declared clearly.\n\nHe chuckled, the bartender placing his scotch on the bar. \"You just haven't been with the right man,\" he reiterated. Just as I was readying myself to tell him off for the umpteenth time, the clink of a beer bottle hitting the bar drew my attention to my right.\n\nA tall woman sat beside me, glaring at Jim. \"Dude, you're barking up the wrong tree,\" she told him. He scoffed and stood from the bar stool, meandering over to the dance floor, shielding his defeat.\n\nI looked over at my savior, taking in her appearance for the first time. She was tall, her skin holding a dark undertone, familiar hazel eyes, and lush lips. My eyes wandered to her fitted tee underneath a button up hanging open, displaying the pronounced swell of her ample breasts and her athletic thighs were encased in skinny jeans. Long chestnut hair cascaded over her shoulders and down her back. I was overwhelmed with prurience, my fingers aching to touch her plump mouth. \"How'd you know I was a lesbian?\" I asked, lifting my martini glass to my mouth.\n\n\"I didn't,\" she smirked. Oh, my God, those lips, \"Do you want to sit at one of the tables over there?\" she offered, her hand gesturing toward a small cluster of booths and tables in the far corner from the dance floor. I nodded, downing my drink and slapping some cash on the bar before I followed her around the dancing people to an empty booth. She slid into the booth with ease and I sat across from her.\n\nAs she met my gaze with her fathomless eyes, it dawned on me where I knew her from. \"You're the cute flagger!\" I exclaimed, my cheeks blazing when I realized I announced my inner thought aloud.\n\nShe chuckled, the sound rich and loud before extending her hand. \"Carey,\" she introduced herself. I reached my hand to hers. The moment our fingers brushed against one another's, a sharp shocking sensation ran from my fingertips to my shoulder, rupturing through my chest, as if I touched an electrically charged wire. \n\nI gasped, pulling my arm back, Carey miming my movement. \"Sorry about that,\" I muttered obtusely.\n\n\"Static shock,\" she mused, taking a drink from her beer.\n\nAlthough chilling in its manifestation, it did nothing to stifle her allurement. If anything, the shock caused me to feel an undeniable urge to touch her again. \"Carey,\" I repeated her name, testing it out, \"thanks for making my creepy shadow go away. I swear, he doesn't know how to take a hint or a full disclosure of my sexual orientation,\" I chuckled. \n\nShe smiled with a nod. \"It was my pleasure. And I like your hoodie. It brings out the emerald in your eyes,\" she noticed.\n\nThere went the blood to my cheeks again. \"How long were you listening?\"\n\n\"I recognized you when you came in and it took him badgering you and that roll of your eyes to give me the courage to come talk to you,\" she admitted. \n\nMy lips curled into a smile and I nodded. A cocktail waitress stopped by our booth and we ordered refills. After she left, Carey looked at me. \"So, Autumn, I'm the cute flagger?\"\n\nI grimaced but nodded with a stupid grin because she remembered my name. \"Yes. I kept kicking myself for not getting your name. Or number,\" I avowed. She chuckled again and I noted mentally how much I liked that sound. \"Is flagging a fun job? Do you ever worry someone won't stop? I always wondered how I'd stay awake during the night when there are no cars coming. I mean, sometimes it's hard at the hospital when we don't have very many patients, but I keep myself busy reading. Oh, I'm rambling, I'm sorry,\" I embarrassed myself again, my nervous word vomit coming out of nowhere.\n\nThe waitress came back, placing a martini in front of me and a beer in front of Carey. Just what I needed; more alcohol. I sipped it anyway, savoring the sweet drink, Carey watching me with blatant amusement and, perhaps, lust. \"It's okay. I have trouble sleeping during the day sometimes. A lot of my coworkers live off coffee and cigarettes to stay awake, but I usually don't have a hard time with that,\" she paused, placing the tip of the beer bottle to her lips and taking a drink. \"Do you work over at the hospital?\"\n\nI nodded, picking a fuzzy off my sleeve. \"Yeah, I work all kinds of shifts over there. It's the lovely benefit of being a traveler.\"\n\nHer dark brow lifted in question. \"A traveler?\"\n\n\"I work for a traveling nurse agency. I'm originally from Baltimore, Maryland, but I haven't been back since I started working for Nancy's Nurses. I go from city to city or state to state filling holes in staffing. It's not bad unless it's a fill in for a union strike. I do my best to avoid those because of my own moral thoughts on big business. Plus, it's awful walking through those strikers. The pay is really good despite always traveling and we receive a stipend for housing,\" at this point, I realized I had the nervous word vomit again, \"oh, boy I'm sorry. I did it again.\"\n\nCarey simply smiled, and, man, those lips. \"It's okay. I like your voice,\" she averred. \n\nAt the rate of embarrassing moments piling on top of each other, I had it in my brain that my cheeks were going to be stained cherry by the end of this interaction. \"Thanks,\" I replied.\n\n\"Is this your first stay in Washington state?\"\n\nI shook my head. \"No, I did a few weeks up in Seattle at Harborview Medical Center last year. That was quite an experience,\" I laughed, recalling my five weeks in the highest level trauma center in Washington. 'Experience' was an understatement and it was the last time I met someone who shared similar unique traits. But, I digress; more on that later. \"Do you travel for work?\" I asked.\n\nShe nodded, swallowing her sip of beer before speaking. \"I work for the county right now so I don't travel all that far. I'm trying to pay my way through school.\"\n\n\"What are you studying?\"\n\n\"Software development,\" her smirk was tinged with arrogance, \"Want to dance?\" I quickly nodded and I followed her to the crowded dance floor. Most of the patrons were straight couples, the somewhat small town obviously not flowing with a large enough LGBT crowd to allot a gay club. At first, our bodies moved to the tempo of the music a few inches from one another. I couldn't tell if she was avoiding my touch or if that was just how she danced. ",
        "It was odd at first until her hand touched the small of my back and she urged me closer to her. Even with my sweater on, I could feel the same shock when her hand met my back. The intensity was dulled, but still noticeable. I wrapped my arms around her neck and let my body move with hers to the music. The brush of her breath on my face and neck was tantalizing. I found myself so quickly aroused by our proximity that it scared the crap out of me. The hair on the back of my arms stood up beneath the sleeves of my sweater and I felt my nipples harden in my bra. Her lips briefly grazed my neck as we danced and I moaned, thankful for the heavy base of the music playing.What the fuck is wrong with me?\n\n\"Is that your phone or are you just happy to be dancing with me?\" Carey mused next to my ear, causing my goosebumps to spread down my entire back. \n\nMy phone was vibrating and ringing loudly in the pocket of my hoodie and I cursed. \"I'll be right back,\" I promised, heading to the narrow hall toward the bathrooms. When I reached the quieter space, I looked down at my screen to see I had a missed call from Ryan and a text.\n\nHeading to Ben's house. Don't wait up.\n\nI rolled my eyes and texted him back that I didn't want to hear about his night the next day. My eyes lifted from my phone and Carey was standing a few feet from me. \"I didn't want to lose you in the crowd,\" she explained. She was leaning toward the wall, exuding a sexiness that I couldn't deny. \n\nI stepped up to her, my hand touching her face, relishing in the strange static that superseded the touch. My fingers tangled in her silky hair and her eyes were wide as she parted her lips, staring at mine. I closed the scant distance between us, pressing my mouth to hers. She moaned when we touched again with a stronger electric shock that left my skin tingling when she pulled back to look at me again. \"Do you feel that?\" Carey whispered.\n\nI nodded, my heart pounding in my chest. \"What is it?\" I asked with my hand at the base of her neck. I could feel her pulse on my palm, racing wildly and sending out little ripples of energy over my skin.\n\nHer brows were scrunched, and she shook her head in response. \"I...I don't know,\" she answered huskily.\n\nI met her lips with mine again and I wrapped my arms around her neck. She embraced me, pulling my body flush with hers. Every cell within me felt electrically charged as her tongue caressed my own. The music from the club was drowned by the deafening pulse in my ears. It felt as if we slipped somewhere else entirely, the sounds muffled and sensations otherworldly. Who was she and what the hell was happening to my body? \n\nHer hands were raking down my sides, pulling hips to hers and I groaned aloud. She nipped my lower lip before pressing her tongue in my mouth with a frenzied urgency. \n\nShe pulled back from me, inspecting my face with heavy lidded eyes.\n\n\"Want to come over to my place for some coffee?\" I murmured, trying to keep the desperation from seeping out into my voice. I wanted her. I wanted to feel her bare skin on mine, every inch of it, to see those lips pursed in ecstasy, to feel the new height of pleasure I somehow knew would come. She paused for a moment and it was as if I could see the gears turning in her head as she thought over the prospect. I wanted her to say yes so badly but I also felt myself wondering why the hell I was willing to bring a random woman home.\n\nShe smiled broadly and shook her head. \"I'm sorry, nurse Autumn. I'm not that easy,\" she replied. Her lips possessed mine again, rendering her comment contradictory as her hands roamed over my body and I moaned. Jesus, maybe I was just that easy. She pulled back, taking a step from me. \"Though, can I have your number?\" she added shyly, her stoic resolve slipping.\n\n****\n\nI rolled over in the bed, surprised to meet a ray of sunshine peeking through the window. As I sat up to the edge of the bed, the memory of Carey's lips against mine filled my senses briefly. The smell of fresh coffee drifted into the room and I stretched, excited Ryan had made coffee. I was disappointed that last night, the cute flagger walked me to the curb as I awaited a cab and didn't leave with me. She'd kept her word and gave me her number in exchange for mine.\n\nThe hall was quiet and when I rounded the counter, the coffee pot wasn't on, nor was there coffee in the carafe. Confused, I quietly padded my way across the hall to Ryan's bedroom, peering in through his ajar door and his prone figure was under a thick comforter. Well, that's weird I thought to myself. \n\nAnd then it hit me; this overwhelming need to write. Throwing a cup of hot water into the microwave and readying a packet of instant coffee, I found my laptop and powered it on. I wasn't much of a writer aside from college assignments and a dabbling as a teen, but I felt this urge to get things down.\n\nI settled on the couch with my cup of coffee and the laptop on the table. Opening a blank document, I let myself go.\n\nShe breathed in the mist of bitterness, swirling her cup of coffee as a wine enthusiast swirled their glass of Merlot. The bean in question was an expensive one, but after experiencing the taste of it, she had to have it. A tentative sip passed her lips and she sighed. A strange feeling settled over her shoulders that had nothing to do with the coffee. The fine hairs at the nape of her neck lifted against her collar and she peered around the island in her kitchen. It felt as if she were being watched. Like a B-rated horror movie, she stepped out of the kitchen and meandered down the hall, her eyes scanning her little bungalow.\n\nAfter a survey of the small space, she sat on her futon acknowledging there wasn't anyone in the space aside from herself and her goldfish. It wasn't an unpleasant feeling, but it...\n\n\"What are you doing?\" Ryan mumbled, scaring me so bad, I slammed the laptop shut with haste.\n\nI whipped around and met his sleep eyes. \"Nothing. Just writing a little,\" I admitted. His presence scared me, ripping me back to the here and now. The sensation was akin to the feeling one gets when they just barely fall asleep and are awoken with a fierce jolt. My heart was racing, a thin layer of perspiration collecting at my hairline.\n\nRyan held my eyes with skepticism and I shrugged sheepishly. \"When do just write? You practically begged me to help you write your papers when you went back to school to get your BSN.\"\n\nI chewed my lip nervously before taking a sip of my nasty cup of coffee. \"I guess I like it now,\" I laughed and he shook his head in confusion before heading to the kitchen. I had to admit that it was a bizarre development. I hadn't felt anything take over me that strongly before and it kind of freaked me out. Regardless of the ethereal feeling, I opened the lid to my laptop and continued with my possession:\n\n...held an uncanny aura to it. It oddly made her think of her previous night, and with it, the beautiful woman she nearly went home with. But, leaning toward her better judgement, she had decided against the opportunity. Her lips curled and she retrieved her phone from her pocket, debating whether it would appear audacious or too forward if she were to send a simple message to the...\n\n\"Did you really drink all the creamer?\" Ryan's voice made me jump for the second time and I glared at him.\n\nHe was standing behind the couch with one hand on his hip and in the other holding the empty creamer bottle. I couldn't help but giggle at his facial expression. \"Dude, there's another one in the bottom of the fridge,\" I explained, turning my head back to the task at hand before I finished my sentence.\n\n\"Cool,\" he chirped and I heard his footsteps trot back to the kitchen. When I lifted my hands to hover over the laptop again, it was gone. Just like that; the connection to a creative side I hadn't known existed within me was gone. With an exasperated groan, I shut my laptop down and sank into the couch. \n\nI reached for my phone but realized I left it on my nightstand in my haste to have coffee. I stood and headed to my room, deciding that if I couldn't write I would find something intriguing to read. When I reached my phone, a new message was on my screen from an unknown number.\n\nHey, nurse Autumn. It's the cute flagger from the bar. Have anything planned for this afternoon? \n\nMy eyes widened and a dopey grin broke out on my face before I came up with a reply. I hadn't plugged her number in my phone the night before.\n\nWhat's up, cute flagger Carey? I'm free all day without a thing in the world planned. What are you doing today?\n\nThe smile on my face didn't dissipate as I made my way back to the living room, plopping on the couch to sip my stale coffee. Ryan was watching me precariously from the plush chair a few feet away. \"What's up with that shit-eating grin you're sporting?\" Ryan inquired suspiciously.\n\nI took another sip of my coffee and kicked my feet up. \"Oh, nothing. How did your night go with Ben?\"\n\nNow it was his turn to smile broadly. \"He's really something. I know I say this a lot, but, damn, I like him,\" he crooned and I giggled. My phone vibrated in my palm.\n\nNot a thing. Want to grab lunch with me?\n\nI looked at the clock above the television and saw that it was almost noon. I turned to Ryan, \"Well, I'm glad you found someone around here.\" He grinned at my remark and I quickly finished my text to Carey.\n\nI'd love to. How about the Menchez on Heron? It'll take me just a few minutes to get ready.\n\nI got up again, hauling my cup to the kitchen to rinse before heading to my room. It was raining out, so I chose a pair of jeans and a tee shirt, along with my unsightly green hoodie. My phone buzzed as I picked up my brush. I didn't want to come off too desperate in my appearance but hoped I looked cute.\n\nOkay. We can plan to meet up at about one.\n\nI brushed my teeth, ran a comb through my hair, threw on a dash of make-up for good measures, and then headed back to the living room to slip on my sneakers. \"Where are you going to in such a hurry?\" Ryan questioned.\n\n\"I'm going on a date, I think,\" I answered, my head bent, saving Carey's number in my phone as Cute Flagger Chick. His sarcastic snort was the last thing I heard before I slipped out the front door, pulling the hood of my sweater over my head as the midmorning mist assaulted me.\n\n****\n\nGod, she was cute. She wore dark jeans and a loose pull over hoodie and I found her casual attire unbelievably attractive. Her deep mahogany hair lay straight down her back and I wanted to run my fingers through it. I sat across from her in the brightly lit bar and grill we settled on and watched her talk about software development. It didn't make a lick of sense to me, but I listened intently as she went on about the different facets to programming. \n\nShe paused, running her fingers through her hair and smiling at me bashfully. \"I guess I'm the one babbling today. Sorry about that,\" she chuckled.\n\nAfter taking a sip of my water, I shook my head. \"No need to apologize. I find it interesting. I wish I understood computers like that. When did you know you had a gift?\"\n\nShe choked on the French fry she had in her mouth, staring at me with unmasked alarm. \"What?\"\n\nI noticed I struck a cord but wasn't sure what it was. \"You know, when did you know you had a knack for computers and stuff?\" I reiterated, finding her reaction to my question odd.\n\nShe visibly relaxed with a smile. \"I think it was when my dad first introduced me to his old Macintosh. It really fascinated me and I couldn't stay away from it. Do you get to travel all over for work?\"\n\n\"Yeah, I've been all over the place. When I first started, I hung around the east coast but then ventured to the Midwest before heading down south. But, recently I've only been going up and down the west coast. I prefer it over anywhere else. I'm thankful I have quite a deal of say as to where I'm sent and when. Not all companies offer that luxury,\" I explained. It was the truth. The west was always more welcoming than the snobby east coast and the bigoted south. It was just right for me and I was beginning to fall in love with the Pacific northwest in particular after my bout in Portland. She seemed to ponder my words, a brief flash of doubt that quickly disappeared.\n\nWe fell back into an amiable conversation after that, discussing work and our families. \"My parents are back in Maryland and I see them once in a while. My brother lives in New York. I can't remember the last time he and I saw each other,\" I told her. I didn't find it necessary to delve into the fact that I was adopted. It didn't seem first date worthy.\n\nShe nodded. \"That must be hard, traveling all over and not being close to your family,\" her voice had taken on a reserved tone.\n\n\"Are you close to your family?\"\n\nShe sighed, looking down at the table before meeting my eyes. \"My dad was in a freak logging accident when I was twelve and my mom had a heart attack five years later,\" she said.\n\nMy brows furrowed together and a wave of sympathy overtook me. \"I'm sorry. You must've been really strong to get through that at such a tender age,\" I mumbled, feeling quite unfortunate for bringing up an uncomfortable conversation.\n\nShe smiled at me warmly. \"Thank you. It was hard, but it made me grow up quickly, which came in handy later in life,\" she admitted but didn't divulge in the meaning. \n\nWe finished our lunch with a lighter conversation regarding recently released films, Carey hinting at a possible next date. She paid the bill against my protests and I eventually conceded, claiming it was my turn next which earned me a huge smile from her.\n\nShe walked me to my car and I wanted to ask her about something. I couldn't formulate at the time what it was that I wanted to ask her, but there was a sense of familiarity with her that I couldn't place. As we stood in the parking lot beside my little Toyota, I watched her face, my hand reaching to touch hers. \"Thank you for lunch,\" I paused, \"Do you want to get together again?\" I asked lightly, pulling my car keys from my pocket.\n\nShe grinned. \"Absolutely. What do you think about seeing a movie next weekend?\" \n\n\"I'd really like that,\" I managed before her lips were on mine. The feeling was present again, albeit much lighter. Her hands wrapped around my waist, pulling me to her as her tongue caressed my own. I stretched my arms around her neck and relished in the feeling of electricity going through me. \n\nOne of us moaned, I couldn't tell which and she pulled back, her eyes wide. \"I have never experienced anything like this in my life,\" she whispered, amazement mixed with a hint of fear in her eyes.\n\n\"Neither have I,\" I muttered before pressing my lips against hers again. It was an incredible sensation and I had to force myself not to completely surrender to it. A loud honk from a car at a nearby stop light yanked us from our ethereal kiss. Carey chuckled. \n\n\"I better let you get going. I've got a shift later tonight,\" she explained. With a chaste kiss to my cheek that emitted its own frequency, she turned on her heel and headed to her car.\n\n****\n\nIt was late the next evening, both Ryan and I at the cottage instead of work. I was scheduled for a night shift the next day and couldn't settle my mind enough to sleep, Ryan up because he preferred night. The eerie sensation elicited by Carey was far too fascinating to let go but I refused to disclose this to Ryan. He would without a doubt construct some psychological reasoning behind it, having nothing to do with what it really meant. \n\nWhat did it mean? There was an unmistakable allurement surrounding the cute flagger that left me flabbergasted and off kilter. I didn't know how to react to it nor did I know what to say. She felt it just as strongly as I did, which furthered the peculiarity of the situation.\n\nAnd then there was the writing. The feeling overcame me fiercely as I plopped on the couch with a bowl of popcorn. \"I've got to write something down so don't talk to me,\" I announced, shoving the bowl into Ryan's hand, who in turn took it with a shrug. I picked up my laptop from the coffee table and opened a new document.\n\nThe sound of the rain pelting the window woke her first. As she sat up in bed, she realized the feeling was back: someone was watching her. It wasn't an unpleasant feeling however, it was quite disconcerting and eerie. She looked around, aware of the futile survey of her bedroom. No one was there. Easing herself from her bed, she padded over to the window, taking in her reflection in the glare of the night. Her brown eyes staring back at her were nearly obsidian from the darkness of the thick clouds coating the sky. Rain splintered down the glass in a heavy rush of droplets. The rain always reminded her of the discovery of her gift.\n\nIt had been a torrential windstorm, knocking out power in several cities within the region. She and her family lived miles out of town, far in a secluded area with little to no neighboring families. Being bored out of her mind as any normal eight year old would be, she decided she would fix the problem with sheer will power. She wanted to fiddle on her father's computer and play the one game it included. Her father laughed at her when she stepped into his office, candle in hand, sitting before his computer.\n\nShe touched the bulky tower with her palm and, brows scrunched and lips pursed, glared at the dark monitor. She sat there for ten minutes, unrelenting in her determination and her only movements being a handful of blinks. Suddenly, she felt a strong heat within her, swirling in her chest before it erupted to the piece of equipment her hand had contact with. The tower sputtered to life, emitting a loud clanking sound and the monitor fluttered with light. She sat back on her haunches, taking in her work with a satisfied smirk, hand still touching the tower.\n\n\"How in the world did you do that?\" Her father asked from the doorway, unmasked astonishment in his face when she whipped her head around. She was startled by his interruption, fear engulfing her senses. The computer monitor's glow brightened the darkened room, the light becoming near blinding before the glass exploded in a cascade of shards through the small space.\n\nHer father gasped and she jumped back from the desk, frightened of...\n\n\"Are you even listening to me?\" Ryan's voice echoed in my brain and my fingers ceased their pecking. I felt my eye twitch and I yanked my attention from the laptop in front of me to glare at him. He was staring at me with a dubious expression, one blond eyebrow quirked up and his lips in a thin line.\n\n\"No. If you had been listening to me you would've heard me say I was going to write and to bug off,\" I averred and then quickly added, \"But, I'll bite because I did hear some of what you were saying. Why do you think I'd have any idea where you should take Ben to dinner? The nicest place I know of around here is freaking Denny's and he's vegan, so that's not helpful.\"\n\nI hoped that at least placated him enough to ease the butthurt of him thinking I wasn't listening. He was infatuated with the guy he met at the bar shortly after we started our contract in the city and they'd dated ever since. I had to tune some of the crap he rattled off about because I honestly didn't want to hear about his and Brian's sexcapades.\n\nThe story had come in a larger bit that evening and I felt compelled to finish what was going through my brain. To do that, I had to talk to him so he would let me be.\n\nHe sighed and leaned back against the couch. \"I really like him, Autumn. I think I more than like him,\" he admitted. I had to keep myself from audibly swooning at my happiness for him. They were cute together, but I did worry about what they would do when our contract was up.",
        "I sighed and sank back into the couch. \"What about that hipster looking place down on Heron street. You know, near Safeway?\"\n\nHe nodded at me thoughtfully before turning his attention toward the television, his show back from commercial. I took my mental leave and let my fingers do their work.\n\n...more debris. Things changed after the incident. Against her mother's wishes, her father prompted her to use her ability, beginning with simple tasks such as brightening a bare lightbulb with only her touch to as difficult as performing the original manifestation of her power. Her mother claimed it was a remnant from the Native Alaskan tribe they belonged to. She stated it was a rarity among the Tlingit tribe in the new millennium but, its existence was still well known and acknowledged. A gift to be cherished yet ensconced from others. \n\nSince the death of her parents, she longed to tell someone, but not just anyone. Someone special who would understand the struggle of keeping such a monumental burden. She never felt the urge to open up to the women she'd dated in the past nor did she feel comfortable telling her friends. Looking elsewhere for help, she stumbled upon a heavily encrypted forum in the deep recesses of the internet, laden with individuals such as herself. \n\nIt was filled with numerous tales of the impending threat of a covert research study, luring people with abilities to take part with money or blatant threats. When individuals chose to take part in the research, they were never heard from again. This only fueled Carey's firm view on secrecy. \n\nShe crossed the room and meandered down the hall in search of a cup of tea to ease her mind. The feeling was still present, but she knew from experience it wouldn't abate until she slept again, which was eluding her as of...\n\n\"Autumn!\"\n\nI turned to glower at Ryan. \"What?\" I snapped. \n\nHe blinked before opening his mouth. \"I asked you about five different times if you're working tomorrow night,\" he claimed.\n\n\"Yeah. Unfortunately, I agreed to work nights tomorrow against my better judgement. Maria is very persuasive,\" I chuckled, and he grinned, probably because he knew that it meant we'd be working together again. He turned back to the stupid show he was watching and I let my hands hover over the keyboard. It was gone. The image, the person, the emotions, all gone. I sighed, ensuring the document saved and the shut my laptop. It would have to wait until the mood overtook me again.\n\nI quickly analyzed my writing and admitted to myself I had shifted some of my ambiguity surrounding Carey in my story. Psychologically, I assumed I dubbed her with an ability because of my own. I hadn't met very many people in my life at that point who shared my abnormality, so of course, I'd write about a fictional one. It was strange and made me feel slightly stalkerish to make up some paranormal fantasy version of the woman I just met, but it was a strange compulsion to write. It wasn't normal for me to sit down and belt out some sick narrative. Frankly, the process freaked me out.\n\n****\n\nCarey and I met for coffee a few days later downtown. It was cloudy, the sun hinting its existence fleetingly through the dense cloak. \"How has work been? Is the new mini bridge almost done?\" I asked. We had spoken through texts about the construction site she was assigned to flag at. The small bridge was being replaced and Carey had lamented on how tedious the project was.\n\n\"It's getting there. The foreman said it'll be at least another few months,\" she smiled, her eyes shining even in the dull lighting outside the coffee shop. We sat beside the window of the store at a quaint glass table. I was beginning to really like her, our frequent banter through texts becoming a normal routine that I found intriguing. \n\nWhether it was debating over the best brew of coffee or our favorite books, I found myself wanting to spend more time with her. Though she expressed she was an avid reader, I did not allow myself to disclose the fact that I recently began writing a story. Seeing as the fictional main character was seemingly based off Carey, it was a bit strange. Okay, more than a bit. It was fucking creepy.\n\nOne of her hands sat on the table top, fingertips lightly tapping on the glass surface and I wanted to touch her so badly, to feel the sensation that accompanied our skin contact. With a bravado I didn't know I had, I reached across and took it, reveling in the feeling. She smiled widely, her eyes closing and head tilting back as she took a deep breath. Neither of us had brought up the bizarreness of it through our texts because it was just too weird. When her eyes opened, she met mine. \"That never gets old,\" she whispered almost too soft for me to hear.\n\nI desperately wanted to know why it happened when we touched and I never wanted the feeling to cease. As her fingers caressed my skin, I fleetingly wondered what it would feel like to make love to her and quickly bit back my lust.\n\nContrary to my first meeting with Carey, I wasn't usually one to hook up with random women. The one and only time I allowed myself such an experiment was during my stay in Seattle and that was mostly because the woman was only willing to see me twice. I thought it was due to our shared difference from society, intrinsically linked by our abnormality. Roland was a telepath and knew immediately what I was, though, she kept it to herself until after we'd spent the first night together.\n\nWhen I found out what ability she possessed, I was laying across the bottom of her giant bed after our little rendezvous and her blue eyes watched me with a renewed hunger. \"I knew you were different but you didn't tell me the extent,\" she mused. My eyes must've widened to the size of saucers.\n\nI hadn't met very many people like me at that point in my life and I was terrified but very much awestruck. \"What do you mean?\" I played stupid, dropping my eye contact to pick at a loose thread on the sheet.\n\nShe chuckled, crawling in the bed over to me, fingers running through my hair until they rested at my chin. She lifted my face gently, forcing eye contact. \"I don't tell very many people this and I'm not sure why the fuck I'm telling you but, we have that in common,\" she explained, ignoring my diversion.\n\n\"We do?\" I whispered and she nodded before kissing me.\n\nShe was as gorgeous as she was arrogant, and I remember that being my thought when she parted my lips with hers, her tongue pinning my own down. Her fingers tangled in my hair and I moaned into her mouth as her other hand raked up my side. She pulled back abruptly, a smirk on her pouty lips as she quirked an eyebrow at me, fixing me with a dubious look. \"So, you think I'm arrogant?\"\n\n\"You okay?\" Carey's voice pulled me from my memories and I nodded with a smile. I wondered what Carey would think if I told her of my ability. At that point, my adoptive parents were the only ones aside from Roland who were cognizant of my abilities and I liked it that way. As unfortunate as it was, once my contract was up, I'd be moving on to the next city and would leave Carey behind in the tiny town of Aberdeen. It hurt me to even consider our relationship would progress to the point of confessing my anomaly because it surely couldn't.\n\n\"Do you want to go for a walk?\" I inquired and she nodded.\n\nThe streets of Aberdeen weren't the most well kept and we trekked over crumbling concrete and weeds peeking from the cracks, heading toward a little park by the water. \n\nThe park in question was beside the narrow bridge leading across the Chehalis river and it was surprisingly maintained. The grass was damp from the passing rain shower in the early morning hours. Carey had let go of my hand when we left the coffee shop but quickly clutched it as we made our way to a bench overlooking the river. The soft tumbling of the water below was hypnotizing combined with Carey's hand in mine. The sun peeked from behind the dense cover overhead and warmth spread over us. I looked up, the clouds encasing the streams of light, puffy white wisps passing swiftly over the rays.\n\nI let myself imagine the potential between Carey and me if things were different. In reality, I could stay if the hospital had an opening for a full time position and leave Nancy's Nurses. However, with three months left to go on my contract, it was my belief that long-term relationships couldn't be foreseen in such a short period of time. If we were to hold strong for three months and I decided to stay, what would I do if it fell through? I couldn't risk the possibility of becoming chained to one location, not with my ability's secrecy on the line.\n\nCarey cleared her throat, her thumb grazing the back of my hand. \"So, when you said you're a traveling nurse, what does that mean for, um,\" she chuckled nervously and I instantly wondered if she was like Roland. Did she hear what I was thinking in my head? No, it's a coincident, I told myself. I ended up being correct about that but, I digress. She shifted in discomfort, her other hand coming up to scratch her neck. \"How do you deal with the traveling when you're in a relationship?\" Carey met my eyes and I bit my lip.\n\n\"Well, to be honest, I haven't had all that many relationships since I began my career. A few here and there but nothing serious,\" I explained and she nodded her understanding. I felt like I needed to avow my statement but didn't know how. \"Not that I haven't wanted to. The possibility just hasn't presented itself.\"\n\nShe gazed at me and I let myself get lost in her hazel orbs. She was truly beautiful, the sun glinting off her eyes, her bronze cheeks soft, jaw chiseled. \"What would you say if I told you I wanted to be in a relationship with you?\" she questioned.\n\nI took a deep breath and looked away, thinking the same things I was just pondering before she spoke. The thought was exhilarating and exciting but I couldn't lie to myself and imagine things would be just fine. \"I wouldn't make any promises of where we'd go but I would tell you that sounds lovely,\" I answered candidly.\n\nWhen I turned my head, I glimpsed the smile spreading over her face and she twisted her body to face me completely. She let go of my hand and brought it to my face, capturing my lips with her own. I cooed, the wonderful feeling associated with her swirling through my already. \n\nHer tongue brushed my lower lip and I opened my mouth, granting her entrance. My heart raced thrummed in my chest as I let the electricity course through me, my nipples stiffening and a steady pulse quickening between my legs. I wanted her, bad, right there in the park. Her hand slid to my neck, fingertips light on my collarbone, the sensation eliciting its own reaction within my body. A gentle buzzing alerted me of my alarm to take a nap. With me working that night, I planned on being home already from our coffee date. I pulled back, breathing heavily. Carey appeared to be breathless as well, her eyes wide and mouth ajar.\n\nI giggled, touching my still tinging lips. \"That's my nap alert,\" I explained. She looked at me funny so I continued. \"I have to work later and I got up early this morning. I set an alarm to remind me to take a nap so I won't be tired tonight.\"\n\n\"That makes sense. I find myself setting little reminders as well in case I forget. I have to remind myself of how horrible it is to work on almost no sleep,\" she chuckled and I held onto the rich sound.\n\n\"I don't want to go yet,\" I whispered. She pressed her lips to mine again and I lost myself in their silkiness.\n\nBefore I knew it, she was staring at me again. \"I don't want you to either but, I know how hard it is to work when I'm exhausted and I just stand around with a flag! You should go get some sleep,\" she said, her fingers resting on my cheek. The affection she had for me was clear in her gaze and I smiled.\n\n\"Okay, but you have to walk me to my car,\" I declared, needing to feel her lips one more time on my own before I left her.\n\nOh, she kissed me all right. When we got to my car, she pressed me against the driver door, her hands on my hips and tongue in my mouth. It only fueled my eventual dreams during my nap before work. You bet your ass I woke up with my hand in my pajama pants.\n\n****\n\nThe urge to write didn't strike me until two days after seeing Carey. I sat sprawled on my bed, painting my toenails in what Ryan referred to as an 'obnoxious display of nauseating green'. I averred his comment by letting him know it was redundant and I didn't care. It was a rather odd color, but, I slathered that shit on my nails because I liked it. \n\nTo my delight, he was with Ben at dinner, so I had the cottage to myself. I had a local indie radio station playing from my laptop speakers as I worked. I'd texted Carey earlier in the day, asking if she wanted to get a bite to eat but she was already on her way to her job site and was scheduled to work until eleven in the evening. I contemplated texting her again and thought against it, seeing as it was nearing one in the morning. \n\nAs I finished off my pinkie toe, I had an idea. I wasn't sure what the idea entailed, I just knew I needed to grab my laptop and open my work in progress.\n\n...She missed the rain shower and was thankful as her feet pounded the rough terrain behind her house. Running was one of her special moments of solitude; just her and the wilderness. A light fog gathered around the forest floor and she breathed in the scent it produced greedily. It was as if she couldn't inhale enough of the pleasant aroma of crushed fern, damp earth, and something sharp and wild. Her heart fluttered in her chest and her legs pumped as she climbed uphill and hopped over a fallen log. The exercise was fantastic, but her mind still wandered to the alluring nurse that she was quickly fantasizing about. She blamed it on the strange sensation their touch elicited, but she knew there was more.\n\nLimbs sore and heart still racing, she entered her home. She grabbed the towel she set for herself by the door and ran it across her face. On her way to her bedroom, she picked up a pile of mail from her coffee table. The light notes of Bach lifted from the stereo on her dresser where she'd left it on and she perched hersekf at the edge of her bed as she caught her breath. She kicked off her Nikes and yanked her pull over hoodie off, now clad in her shorts and sports bra. The delicate music moved into a crescendo as she ripped open her mail.\n\nThe tedious task was enjoyable when one needed a mindless activity and she figured it was as good as any. She couldn't stop thinking about those cerulean eyes peering at her, the galvanizing feeling of the nurse's lips against her own. \n\nThe sigh that left her lips was thick with restlessness. Tossing the mail on to her bedside table, Carey lay back on her bed. Those pink lips, alabaster skin, soft moans, emerald stare. Carey conceded, letting her desires overtake her. Her hand swept down her torso, trailing her nails over the tight muscles of her abdomen, twirling around her navel.\n\nShe sighed when her fingers toyed at the edge of her shorts, her head relaxing back on her pillow. Fingertips slipped beneath the fabric, reaching lower until she touched her moist slit. She groaned aloud as she slid her finger up and down her lips, bringing forth the wetness to her bundle of nerve endings. God, how Carey ached to see the woman's face relaxed in nirvana, hear the exhalation of her pleasure in a long moan.\n\nHer legs fell apart as she upped her tempo, her chest drawing air faster. She replaced her index finger with her thumb, allowing the finger to slip into the source of her nectar. A groan escaped her as she added a second digit, her wanton hips rising with her own thrusts. She imagined the woman's hands raking her sides, grasping her perk breasts. Her thumb rounded her clit and her free hand found her breast, the nipple hard against her palm through her sports bra.\n\nShe pinched it over the fabric, lightly at first and then harder, gasping at her self-serving actions. Legs shaking, she quickened her thumb on her sensitive nub, picturing the blonde hovering over her body, her hands where Carey's were. The build-up was quick, her breath coming in shorter bursts as the pleasure swirled in her belly. Muscles tightened throughout her body, pressing against her fingers inside herself, her thighs pushing her hips into the air as she rode her orgasm. The image stuck in her mind was of those beautiful baby blues watching her and the electric sensation accompanying their touch...\n\n\"Jesus Christ,\" I muttered aloud to my empty room. I reread my own words about three times before I leaned against my headboard, dumbfounded. In my short span of writing, I had never written anything remotely erotic, yet, here I was staring at the words I wrote that stirred an undeniable arousal within me. I stood, my laptop still open on my bed, and peeked my head into the hall. The cottage was silent, and I shut my door, grumbling that it didn't have a lock in case Ryan came home before I was done.\n\nI sat back where I had been perched, reading the paragraph again. I ran my fingers through my hair, raking it up in a lazy bun, the sensation itself eliciting a tingling between my legs. I took a deep breath and then I sighed, the need to touch myself overwhelming. \n\nJust as I had written, I bunched my shirt up and ran my nails over my stomach, the feeling immediately causing me to close my eyes. Bringing my other hand to my chest, I twirled my index finger over the hardened nipple and moaned quietly. My hand skirted the edge of my yoga pants and I taunted my belly with my fingertips. I bit my lip as my hand started to descend.\n\n\"Autumn! Autumn! He said it!\" Ryan's muffled voice shouted from what I assumed was the living room. I sat up, yanking my hand from its progress and fixing my shirt. Moments later, Ryan bounded through my door, a grin nearly ear to ear. \n\n\"Do you have any concept of privacy?\" I asked. \n\nHe shook his head and plopped on the edge of the bed. \"Nope. What were you doing, anyway?\"\n\nI narrowed my eyes. \"Contemplating your murder,\" I paused for effect and shut my laptop with more force than I meant, thankful for the automatic saving feature, then smiled, \"What did he say?\"\n\nHe chuckled and then grinned widely, \"He said he loves me! He said it first. Oh, God, I love him.\"\n\nI sighed and leaned back against the headboard again. This was the time to have the conversation with him. \"Oh, honey, that's amazing. But, we only have three more months left on our contract,\" I left the statement by itself for him to absorb. I didn't want to crush his happy moment, but I did want him to think about what it would mean for his career. Well, what his career could do to his relationship. Long distance wasn't going to work for him. He'd tried it before. \n\nIt made me think about Carey, what was laying in wait for our relationship. Boy, if I'd known what fate had in store, I don't know what I would've done.\n\nHe sighed with resignation. \"I know. I was thinking maybe, I don't know, I'd stay,\" his shoulders slumped and he dropped his gaze from mine.\n\nI moved my laptop out of the way and took his hand. \"Ryan, I wouldn't be mad if you did. You've found love and I couldn't be happier for you. Just, don't jump into anything too quick. Wait it out until you get closer to the end of the contract here. I'm sure it'll all work out, but better safe than sorry,\" I told him. He gathered me in his arms and gave me a big bear hug.\n\n\"What ever happened with that date of yours?\" he asked when he pulled back from me. \n\nI chuckled and grimaced. \n\nI hadn't told him about Carey because I knew he would follow the admission with relentless taunts. Not that he did it out of spite but to be funny. I wasn't prepared for it yet. \"I guess you could say I have a girlfriend,\" I eventually admitted.",
        "He grinned nearly from ear to ear before grabbing me for another hug. \"Oh, Autumn that's amazing!\"\n\n****\n\nI lolled my head back in the chair behind the nurse's station, trying my damnedest to stay awake. Night shifts were not my preference and I wasn't sure if I was going to make it through the course, especially when the ER was dead. A piece of paper hit my face and I jerked upward to find Ryan and our co-worker, Jan, laughing. I took another sip of my horrid cup of hospital coffee and stood with a stretch. \n\nWe hadn't had a patient in three hours. Not even one. I sat back down and I pulled out my phone and opened a blank document, hopeful I could muster the creativity in my sleepiness. And it came.\n\nWhere had that car come from? It caught her completely off guard, zipping through the cones and smacking into her. The burning was awful, the darkness suffocating. She thrashed her arms, voices speaking to her, but they were far too muffled to understand. She did hear the...\n\n\"Pick a color,\" Jan stood in front of me, holding three different colored rolls of tape. \n\nI glanced up from my phone and met her eyes, her crow's feet looking much deeper with the large smile tugging her cheeks.\n\nShe held out the tape expectantly. \"Go on, just pick one.\" I chose the dark blue. \"Okay, now go out your head on the wall, over there,\" she said, pointing to the wall by the med room door where a yellow and pink X were taped. I obliged, standing and stretching again before I stepped over and put my head against the cold surface of the wall.\n\n\"Move your head,\" she placed a finger where my head had been and placed a tape X in the royal blue I chose.\n\n\"Now, when you're about to fall asleep at the desk, stand up and hit your head on the wall. The pink one is mine and the yellow one is Ryan's,\" she said matter of factly. We erupted in boisterous laughter. \n\n\"Guys, we've got a motor vehicle accident coming in. The ETA is five minutes,\" Dr. Katrina Maylar interrupted, poking her head around the corner of the nurse's station pillar. I pulled myself away from the wall and let my mind get into nurse mode, heading for the trauma room as the announcement was made overhead.\n\n\"Twenty-five year old female struck by a passenger vehicle at the construction site -,\" the paramedic's sentence was cut short from my mind when I saw the woman on the stretcher.\n\nIt can't be.\n\nI took a step back to allow their passage, Katrina and Ryan already hooking her up to the monitors and the x-ray and lab personnel standing by. My jaw would've hit the floor if I'd let it. They were talking but all I could do was stand still, dumbfounded. The x-ray tech ushered us out of the room on Katrina's word that the patient was stable enough for the moment to proceed with a quick set of imaging. \n\nAs I stood in the hall, I tried to calm my breathing. It wasn't possible and I knew it. It was just the average car wreck patient and my fatigued brain had seen otherwise. \"Get back in here,\" I heard Katrina holler, causing Ryan and me to hustle back into the room as Katrina shed the lead apron and the X-ray tech left the room with the large equipment.\n\nI felt my eyes widen again, my little hallway pep talk swiftly abandoned. There's no way\n\nThe dark hair splayed over her forehead, her tan cheeks splattered with drops of blood. So much blood. I've seen more, I was a goddamn ER nurse, but not on those beautiful features.  I'm going fucking crazy. This  has to be some form of sleep deprivation-related psychosis. A vivid hallucination. \n\n\"Run those fluids wide open. Autumn, start another line, get an IO in if need be,\" Katrina called out and I snapped out of my near hysteria. I gathered the supplies from a cart, my brain still reeling. It can't be her. \n\nShe looked so much smaller on the stretcher, her eyelids closed and face grimacing as I slid a needle into her skin, but surely not from my actions. Her heavy reflective jacket was tossed to the floor, exposing the large contusion spanning her abdomen visible beneath her undershirt, and I looked away. For the first time in my career, I felt squeamish and lightheaded at the sight of blood. Her blood.\n\nI hooked up the fluids and stepped back as Katrina began her thorough assessment. The woman shrieked when Katrina touched her stomach with the ultrasound probe and I reached for her hand. It was cold, her capillaries clamping down from the blood loss. Her eyelids fluttered open and they met mine, causing me to gasp. \n\nIt really is her.\n\n\"We're losing a pressure.\"\n\n\"Get another bolus going!\"\n\nHer hand was still in mine and I drew up every bit of strength in the room, sucking it in like a vacuum. She was not going to die. I pushed it forth, my energy spurring through my arm, channeling out. It spread through her, encompassing every organ, every cell, fusing damage. I felt my breath quicken and my heart race against my chest as I poured my energy into her. Then, her eyes met mine again, their depth not obsidian but a charred hazel, impossibly beautiful. I realized at that moment they appeared to me in my visions as obsidian because that's how Carey saw them herself. And I fell to the floor.\n\n****\n\nThe ceiling was hazy when I opened my eyes, the tiny divots of the tiles above looking like pock marks. I was on a stretcher, my head throbbing and I turned to my right to see Ryan sitting in a chair, watching me. I reached up to touch my pounding head and noticed an IV in my hand.\n\n\"Well, she lives! You scared the shit outta me, you ass. Never did I think you'd pass out during a trauma,\" Ryan said, grabbing my arm and giving it a shake. I blinked, unsure of what to say, of what happened.\n\n\"Where is she?\" I whispered, unable to stop the question from coming. I lifted my gaze to his.\n\nHe titled his head, brows scrunched. \"Who, the patient?\" When I nodded, he continued, \"She's in bad shape, but we got her stabilized. Katrina intubated her and sent her over to OR. Looked like a ruptured spleen on ultrasound, but I think that's the least of her worries.\" \n\nI let my head sink back down on the stretcher, sighing. His words were not soothing, but I did find out what I needed to know. She's still alive. I had to stop myself there. My brain must have been severely muddled with fatigue if I really thought Carey was the same woman from my fictional story. That I'd written my girlfriend being hit by a car and it happened. It wasn't possible.\n\nHe squeezed my arm. \"Don't be so hard on yourself, man. She's in good hands. You, on the other hand, are going to hear it from Katrina,\" he warned just as Katrina walked into the little exam room. \n\nShe pushed her glasses up on her nose before folding her sinewy arms in front of her, her eyes glaring hard at me. The doctor was beyond intimidating in general terms, but when I was the object of her irritation, it was downright terrifying. \"You're going home and not coming back for at least two days. And the next time you let yourself get that dehydrated, I'm going to kick your ass,\" she insisted.\n\nI realized I probably drank a bit too much coffee and not near enough water. I flashed a toothy grin. \"My bad?\"\n\nKatrina shook her head, her arms still around her chest. Apparently, my cute smile did not abate her irritation. \"I'm serious, Autumn. It's not only dangerous for you but also puts all of us at risk of injury, not to mention patient safety.\" \n\nI sat up on the stretcher and my stomach sank. She was right. I had to go with her assumption because, quite frankly, I didn't want her calling a psychiatrist to evaluate me. And, surely she would if I told her that I fainted because the patient was my fictional character was in fact the girl I was dating and I wrote her being hit by a car before it happened. \"I'm sorry.\"\n\nShe clasped my shoulder and nodded, apparently appeased with my apology. After she left the room, Ryan glared at me. \"I'm in charge of holding you to your word,\" he grinned. All I could do was shake my head, trying with all my might to disquiet the reality of what had happened.\n\n****\n\nI texted Carey the next day after I slept like the dead. I didn't receive a text back. When I went back to work two days after the accident, I felt compelled to delve into the electronic medical records to pull up her chart, or to be fortunate enough to not find said chart. However, I didn't because I'm a law-abiding citizen and even considering it made me feel guilty. \n\nTwo days turned to two weeks. Somehow, I kept myself from asking about her when I went back to work from my forced sick leave. But, the realization of my plight was more terrifying with each day, as was the prospect of being insane. It wasn't normal to imagine make-believe characters I created in my head were living, breathing people. \n\nHaving not heard from Carey, my suspicions were either I was right about my crazy notion, she was the girl from my visions and almost died, or was dead, or she was blowing me off. As I opened a document so that I could let out my compulsion, I truly hoped for the latter.\n\nThose eyes. Those haunting azure eyes that lingered constantly in the back of her mind. Carey woke in her bed, arms thrashing, the memory of the accident far too fresh. She hadn't seen the car until it was hitting her. It was too late. She couldn't move out of the way. \n\nShe sat up, sweat dripping down her forehead. It was just like every other night before, but this night, she could feel something different. An integral change. An awareness that was both frightening and exhilarating. The owner of those cerulean eyes knew her, had stopped her from falling into darkness forever. The nurse with the soulful eyes. How had she performed such a miracle? Carey knew she was dying when the stretcher tumbled through the ambulance bay at the hospital. \n\nThe notion was solidified when the commotion around her ceased. She couldn't hear anything other than the beating of her own heart until she became sentient of a hand in hers. The presence was there; the same presence she felt fleetingly around her. The nurse had caressed her essence, coaxing her back from the brink of death. Who was she? Her face, her eyes, her touch were so familiar. All Carey knew was she had to find her. But, that would be nigh impossible. What she needed instead was a good run...\n\nI had to close the document. I paced the living room of the cottage, trying to keep my mind from exploding. What the hell was going on with me? I couldn't get her face out of my head, her hazel eyes piercing me. And then the visions. Was that what they were? I could see from her perception, every bit in stark detail down to the way she saw herself, the way she saw me. \n\nWe went on two real dates and she didn't know, nor did I. I thought I was simply using her as a muse or something. She knew who I was, knew that I was the one causing the feeling. I was the watcher. Jesus, I was unknowingly stalking her through some type of cosmic remote viewing.\n\nOr, I was going crazy. Certifiably.\n\nI grabbed my car keys and headed out the door, worried that if I kept up the pacing I would wake Ryan. I decided to go for a walk in Samm Bean memorial park, hoping the sights and sounds would settle what ever the hell was going on in my brain.\n\nThe winding path I took was clear, a jogger with their dog passing by me in my slow meander around the track. There had to be a scientific way to explain what was happening to me. Something feasible. I chuckled to myself. There was no way to explain how I could heal injuries, but I accepted it just the same and always had. Why was it different to accept that I could see into this stranger's mind? That I could hear her thoughts, feel her emotions. I knew her hopes and dreams. It would explain the strange sensation we shared when we touched. Or would it? It wasn't adding up.\n\nI couldn't accept it because it was so strange, yet so real. \n\nWhen I raised my gaze from the concrete path I walked, I was met with striking brown eyes. I stopped, nearly toppling over when I saw her, my shoe catching the ground. Her eyes searched my face. Carey. She wore tight track pants, her body accentuated by the stretchy black fabric and a long sleeved top, silky hair in a loose ponytail. I stifled the gasp that threatened me. She had gone for her run, I had just written about her decision to go for said run. She was breathtaking. I couldn't speak, my voice suddenly yanked from my throat. She stepped forward, standing just a few feet away.\n\n\"Hi,\" she said. I nodded in her direction, still mute. My tongue felt like it was swollen. She took another step toward me. \"I never got to thank you,\" she began. I unconsciously took a step back for fear of being in a psychosis. She followed, \"Please,\" she beseeched.\n\nIn my visions, or whatever the fuck they were, I never got a good look at her face. It was always through her eyes how she saw and perceived herself. Before I could stop myself, I stepped up to her, my hand tracing the air around her chin. Her eyes never left mine as I caressed her face, her eyes closing when the electric sensation spread through both of us. I found her gorgeous before the incident but, there was something different about her now. It was like seeing a ghost.\n\nI let my hand fall. \"I thought I was crazy,\" I whispered. The same woman I danced in the club with, who I had lunch with and promptly made out in the parking lot of a restaurant was the object of my hallucinations. And she was conscious of this.\n\nShe smiled, causing me to want to kiss those lips even more. \"So, did I. I thought I was going crazy. But you...you're real. You've been real,\" her voice was dubious. We were gazing at each other like both of us were waiting for the other to speak. A group of teens ran by, staring at us suspiciously as they passed.\n\n\"Let's walk,\" I offered, and she followed when I turned around. We walked side by side in quiet as we made for a lone bench beneath a copse of pine trees. I sat down and found her watching me as she sat on the bench. I couldn't help but feel insane. Was I making this scenario up in my head? Was I asleep or in some deranged psychosis? God, I hoped not.\n\nI cleared my throat, mostly for my own sake because I couldn't stop the thoughts going through my brain. \"I don't know how this is possible,\" I said incredulously. \n\nShe chuckled, the sound deep in her chest. \"There's a lot of things in my life that haven't made sense, but this is definitely the strangest,\" she met my eyes, \"and most intriguing.\"\n\nI shook my head, trying to dispel my uncertainty. I wasn't crazy. She was sitting right beside me.\n\n\"How did you find me?\" She asked after a bout of silence. \n\nMy eyebrows furrowed. Hadn't I gone to the park to calm myself down? Or, did I know on some unconscious level know where she was going for a run? I wrote it, for Christ's sake! \"I don't know. I came here to clear my head,\" I began but then felt guilty for lying, \"No, I was writing for the first time since...since your accident and I thought maybe I'd bump into you.\"\n\nShe seemed to mull this over, looking out at a dog running in the patch of grass to catch a stray ball flying. \"I knew I felt you. It just didn't make any sense. What do you do? How is this possible?\"\n\nI cupped the back of my neck with my hand, unsure how to explain something I didn't understand. \"I get this feeling to write and then I just write. It feels like I'm transported somewhere. I guess my destination has been your thoughts.\"\n\n\"How do you do it so effortlessly?\" she said without meeting my eyes.\n\nI took a sharp breath and pinched the bridge of my nose. \"Honestly, I have no idea.\" \n\nShe sighed. \"Every time I think about the bizarre feeling we share when we touch, I mean, really think about it, I wonder what you're doing at that exact moment. Then, I feel you around me,\" she looked at me, sincerity in her eyes. \"Is it possible that I'm unintentionally calling out to you on some weird level?\"\n\nI chewed my lip, my brows furrowing. Is that what it was? I had to admit it made a little sense but not enough. Shit, what other explanation could I come up with? I shrugged, truly bewildered by what caused my remote viewing. \n\n\"I've never had it happen to me before,\" I finally said. She nodded at my candor before she digressed. I was thankful she didn't press because I didn't understand how I could delve into the inner workings of her mind. \n\n\"They told me I should've died. I was taken into surgery to fix my spleen that ruptured from the car hitting me. But, when they got me into surgery, the bleeding had stopped,\" her voice was rich when she talked and it felt like it was hugging me from all around. \n\nI watched her as she spoke, taking in every detail of her profile. \"The surgeon said in the initial x-ray, ten of my ribs and both of my femurs were broken. My pelvis was fractured. But, I was essentially undamaged,\" she sighed, running her fingers through her ponytail and meeting my eyes. \"She told me it was either a miracle or faulty machinery,\" she chuckled.\n\nGod, I wanted to touch her. \"I couldn't let you die,\" I admitted. She smiled and reached for me. Her fingertips grazed the skin on the back of my hand and I couldn't keep myself from gasping at the heat and tingling invoked from the chaste contact. My cheeks flared as I met her eyes.\n\n\"I don't know what this is or if there's an explanation, but we're connected,\" she whispered. I nodded numbly because I knew she was right. Somehow, we were connected to one another. I couldn't explain it any other way. Either we were both batshit crazy or we had some strange attachment. \"I'm sorry I didn't reach out to you. When the car hit me that night, my phone went flying onto the roadway and got crushed. I didn't have your number written down anywhere,\" she lamented, her voice defeated. \n\nI smiled despite the insanity of the situation. \"It's okay,\" I assured her. I gulped, remembering the bit I wrote about her having an ability, similar to my healing and I kept my voice low as I spoke, \"So, do you really have a gift, an ability?\"\n\nHer fingers curled around mine and she nodded. \"I do. And you can heal people?\" she ventured but, it wasn't really a question. She had witnessed first hand.\n\n\"I can, but I've never healed anyone in as bad of shape as you were. You were going to...,\" I couldn't finish the statement, my mouth suddenly becoming dry and my eyes stinging from tears that begged to be shed. I cleared my throat, \"Usually, I'm much more discreet because I worry about being caught and I do what I can for people. But, I've never been able to heal someone with the amount of damage you had although, I have tried,\" I chewed my bottom lip as she processed what I said.\n\nIt was true; I kept to little miracles and had tried to save others who were too far gone. I wasn't God/Goddess/Budda/Allah, if you believe in such things. I couldn't bring people back from the dead nor could I heal them from irreparable damage, except, I had. Carey had nearly died, was so very close to the edge of death. Yet, she sat beside me, caressing my hand with a soft smile on her lips, spreading the incredible electric current through my body.\n\nHer brows knitted together, appearing concerned. \"You risked exposure to save me?\" \n\n\"Yes,\" I said though, I hadn't realized it until she asked me. I had risked myself and I felt like a complete idiot. Why did I do that? I knew why and I couldn't deny it: this woman and I were intrinsically bonded somehow. I looked down at our hands, the darkness of her skin stark in comparison to my pale fingers.\n\nCarey's eyes dropped and she looked fearful suddenly. \"Do you have a minute to swing by my place? There's something I've got to show you.\"\n\n\"Other than work tonight, I'm free,\" I ventured. \n\n****\n\nThe trip to her house was much shorter than I anticipated, set back into a dense patch of woods. I followed her up the winding driveway and parked behind her car. The house was a quaint little bungalow and she ushered me inside, the interior looking distantly familiar. ",
        "Then it dawned on me; I'd seen bits of her home during my strange visions. The aroma of fresh coffee pressing against my face, the sound my feet made over the carpet. It was such a strange phenomenon, I reached for the ledge of her counter, bracing myself. Her hands wrapped around my waist, holding me steady. \n\n\"Are you okay?\" she asked, her voice tinged with concern. I nodded. One of her hands touched my hand resting on the counter, sending the sensation through my body, my head nearly spinning. \"I don't believe you,\" she mused.\n\nShe kissed my neck and I moaned, her lips igniting a flurry within me. Both arms were around me, pulling my back against her as she trailed up my neck to my jaw. I felt my body shudder and she groaned at my reaction. I spun around to meet her eyes, my breath already coming fast. \"I'm okay but if you keep doing that, I may not be,\" I said in mock sincerity.\n\nThe grin on my face caused her to smirk and she took my hands in hers, looking down at them. \"How can I ever thank you for saving me?\" she murmured, bringing one of our clasped hands to her mouth, pressing a featherlight kiss on my knuckles.\n\nEvery moment her skin touched mine was a moment I wanted to last a lifetime. The electric feeling is indescribable at best, pushing passed the static to appear more of a soft, gentle heat. The feeling one gets when embraced tightly, the release of oxytocin mixed with a heavy shocking heat. \"You don't have to. It wasn't possible for me to let you die,\" I said. \n\nI couldn't have stopped myself from saving her. There was no doubt in my mind that I wouldn't have been able to not at least try to heal her. \"Do you think anyone will notice?\" Although I knew I wouldn't have been able to stop, I suddenly became very concerned about the consequences.\n\nShe looked up. \"What do you mean?\"\n\n\"What did the surgeon say to you exactly?\" I'd never gotten myself into a situation such as the one I had been in. When I used my ability, it was with quite a bit of secrecy, during any number of normal procedures. I had to keep it subtle to make it look as if a medical intervention was the cause of a patient surviving or turning the corner to wellness. \n\nForehead scrunched, she sighed. \"She told me she believed it to be a miracle and went on to tell me she'd never seen anything like it in her career. In all rights, I should've died. To say she was astounded would be an understatement,\" Carey laughed but then her smile vanished. \"Do you think someone might find out what you did?\" She whispered. \n\nI took a deep breath and nodded. \"It is definitely worth fearing. I don't know what could happen if someone found out,\" I said. Shit, I didn't want to be locked up or tested on. I'd seen enough television shows and movies to assume it would be something catastrophic like that. Except, that was fiction, I figured. Things like that don't happen in reality. Again, I was an idiot. \n\n\"I think everything will be okay but just in case, I'm going to tell Allen,\" she said, dropping her hands from mine and heading to the living room. She pulled her hair from the ponytail and loosened her mahogney locks with a shake of her head. I felt my mouth water when she threw a rueful gaze at me before sitting in front of a computer.\n\n\"Who's Allen?\" I asked, following her to a small desk beside her futon couch. \n\nShe powered up her computer, settling into the high backed chair. \"He's another psi,\" she paused before looking up at me. \"Meaning he can meddle in electronics and crap like me. He's the one who started this little forum for people like us,\" she explained, turning back to the now loaded computer. I had no idea what she was talking about but feigned my understanding. Her forehead was wrinkled in concentration, her fingers rapidly pecking at the keyboard. \n\n\"So, there are more people like us?\" I ventured, and she nodded, her focus still on the screen. I'd only known of a handful in my entire life at that point.\n\nShe pulled up a long message board looking window on the monitor and sat back. \n\n\"There are tons. Allen has a safe house set up for people,\" she began, her voice tentative as she continued, \"There's an organization hunting people like us and I have to tell Allen what happened.\" \n\nThe words hung in the air and my heart rate quickened. I knew that. I'd written it. For some reason, it hit me again that I saw in her head. \"How did I know that already? How do I know so much about you?\" I took a step back, confused at how my healing transformed into something totally different exclusive to Carey.\n\nShe stood, her hands encasing my hips in a strong grip. \"We're connected, Autumn. I don't know how or why but we are,\" she whispered. A crooked smile etched her lips before she continued. \"I didn't feel you around me all the time but there were a couple times that I can remember distinctively. A couple compromised situations,\" she hinted with a lift of her dark eyebrow.\n\nMy cheeks burned as I recalled essentially watching her pleasure herself, a swirl of desire filling my belly. \"I don't think I recall that,\" I breathed, her hands sliding up my sides beneath my shirt, effectively silencing me as I was overcome with the ethereal skin contact. Again, I wondered what it would feel if we were to do more than simple touching although, that was near enough to drive me crazy.\n\nHer fingertips rested at the edge of my bra, shock waves spreading through my body and an achy need developing between my legs. Her lips brushed mine, the kiss soft and tender. My hands reached her head, my fingers drifting into her thick hair and I opened my mouth. The sweet kiss swiftly advanced into one of unyielding hunger, her tongue lashing at mine and her fingers slipping beneath my bra to caress the soft skin. \n\nHer lips left mine to take purchase of my neck, a hand coming up to push my hair over my shoulder. \"I've wanted to do this since we first touched at the club,\" she murmured against my skin, eliciting a newfound sensation to flow through my body, causing me to moan. \n\n\"Why didn't you come home with me that night?\" I somehow managed to whisper as she devoured my neck. \n\nHer hands eased my shirt up and she removed her lips only to pull it over my head before she resumed. \"I wanted to make you work for it,\" she mused, her hair tickling my newly naked skin. \n\nThe taunting words along with her roaming hands caused my ache to become a smoldering need. \"Carey,\" I panted, \"haven't I worked hard enough? I did save your life.\" The concerns for my safety were thrown out the window at that point.\n\nShe chuckled, my bra falling from my body onto the floor, her expert hands having unclasped it without my knowledge. Lips on my chest, she glanced up at me, her gaze piercing. \"Yes, you have,\" she agreed, her mouth finding one of my hardened nipples, her tongue darting out to greet it. Oh, my god, it felt amazing. I can't even begin to describe the galvanizing feeling of her warm mouth on my breast. I moaned with abandon, my eyes squeezing shut and head falling to the side. \n\nMy hands were still in her hair and my fingers tightened, holding on for dear life as she laved at my breasts. My legs wobbled but she continued, oblivious of my knees threatening to buckle with each flicker of her tongue. \"Carey,\" I whimpered, my thighs trembling as she ran her fingers down the length of them over my jeans. \n\nShe disengaged her mouth from my nipple with a soft pop that make my clit twitch. \"What's wrong, baby?\"\n\nMy mouth decided to refuse to cooperate as I tried to relay my concern. \"I...Um...,\" I huffed.\n\nMy face was flushed, my eyelids heavy and my breath was coming in fast. She smirked at me as she stood. \"Do you need to sit?\" She questioned. I nodded and she took my hand, and I felt as if we were floating as we made our way down the hall.\n\nHer bedroom was as I remembered it from my creepy remote viewing. My eyes zoned in on the bed, my mind forming the delicious sight of her pleasing herself from her point of view. My breath caught, cheeks red and she watched me with interest. \"I remember feeling you that night,\" she whispered, as if she knew exactly what I was thinking and she did.\n\nI nodded, my lips curling into a rueful grin. \"I was and there was nothing more I wanted than to be the one pleasing you.\"\n\nPlopping on the bed, she pulled the covers down and scooted over, still watching me. Without preamble, I shimmied my jeans and panties down, snickering when I saw her eyes widen at my brazen tactic. She quickly followed suit, yanking her shirt over her head and peeling her running pants off, panties coming down with them. Tossing her articles of clothing off the bed, she lifted the blankets, shooting me a pleading expression. I climbed into the bed and turned my back to her. \n\nShe wrapped her arms around my naked body, pressing her own to my back. I moaned, the feeling of our bare skin touching over the entire expanses of my body unbearably pleasurable. \"Oh, my god,\" she murmured in my hair and I assumed she was sharing the same sensation. I grabbed one of her wrists and brought it to my belly, the ache below becoming painful. \n\nShe didn't need me to beg, her fingers trailing over my tight stomach, swirling over my navel and reaching my mound. As her fingers met the wetness of my slit, my back arched and I moaned. Removing her finger from where I needed it, she taunted my mound, the junction of my legs and apex, causing me to growl my frustration. \"Don't stop,\" I muttered breathlessly and she replaced her finger, earning herself a loud whimper from me. She dipped into the source of my heat and my head swam with the intensity. Good, God it was unbelievable. Her other arm was still over my chest and I felt her grinding against my backside. \n\nI had to touch her. I turned my body, loosening her grip around me so I could face her. She looked at me questionably, I'm sure because I just told her not to stop and here I was removing her hand and turning over. \n\nBoth of us were on our sides and I immediately brought my hand to her chest, my index finger and thumb capturing a dark, dusky nipple. Her eyes closed and she groaned, one of her hands mirroring my action on my chest. My other hand grazed her side, descending to her apex. My fingers met her soft curls and her head went back, her teeth biting her lower lip. \n\nShe pinched my nipple when I made contact with her dampened slit and I squealed in delight. I parted her folds and teased her entrance, finding a collection of delicious moisture. She groaned, her face pushing into the pillows and her hand at my breast faltering it's progression. I ran two fingers up and down her lips, each time passing over her bundle of nerves and causing her to take a sharp inhale, releasing in a moan. \n\nHer eyes were closed and her mouth was taking gasping breaths, her chestnut hair spread about the pillow around her. I placed my thumb over her clit, circling the bud gingerly as I slipped a finger inside of her warmth. \n\nHer back arched and she moaned at the intrusion. \"Yes,\" she whispered, her eyes squeezing shut and her hand gripping my side. Her hips rocked to meet my movements, pushing herself to my rhythm. I added a digit and she came unhinged, her body gyrating and shivering under my touch. I quickened the speed of my thumb on her clit and pumped my fingers into her. \n\nIt was only moments after this that I felt her tighten, pulling my fingers deeper into her, the muscles of her abdomen becoming taut and her legs trembling viciously. \"Oh Christ, Autumn, \" she groaned, which ended up being the only thing that I understood as she hollered a string of incoherent moans and expletives. The strange sensation accompanying our touch didn't relent when ecstasy hit her but rather intensified, zapping through me and engulfing me in my own swirl of pleasure.\n\nShe shook, her arms coming up to gather me to her as she fought to control her breathing after the shock subsided. I let my hand ease out of her and wrapped my arms around her as well, kissing her damp forehead and running my fingers through her hair. By this point, I was beyond aroused watching her be consumed by the bliss I gave her and equally satisfied by as much. I pulled the blankets over us and she sighed. We lay entwined with each other for quite some time, her breathing finally becoming a steady succession. \n\nEventually, she pulled back, gazing at me with her fathomless eyes and smiling broadly. \"If it hadn't happened to me, I don't think I would ever believe it was possible to feel something that incredible,\" she murmured before kissing me. \n\nHer hand cupped my cheek and I opened my mouth, her tongue caressing my own. She stopped abruptly before scooting toward the end of the bed and beneath the blankets, hands burning a flurry of electricity as they made their way down my body. Gently, she urged me to my back and I couldn't see her beneath the blankets, but I surmised what she was up to. I wanted to tell her how good her hands on my thighs felt but the anticipation stole my voice as she kissed my hip bone. She brushed her lips over my curls and my hands clenched into tight little fists in the sheets.\n\nA tiny swipe of her tongue reached from the bottom of my slit to the top and I gasped, a low, animalistic groan escaping my lips. Evidently, that was all the encouragement she needed as she delved into my nether lips, her tongue darting around, exploring every fold and surface. My head was thrashing, the little shock waves her tongue on my clit caused quickly pushing me to the edge of my threshold. She brought a digit to my opening and pressed inside of me. \"Fuck!\" I moaned, my hips bucking as she curled her finger, rubbing it upon the overly sensitive spot inside. \n\nHow she found it so instantly, I have no idea. All I know is my body betrayed me. I wanted to hold out a little while longer, but it hit me without notice, my legs seizing and my fingers clutching the sheet as if it would keep me from floating off into space from the overwhelming pleasure.\n\nCarey continued to devour me, bringing me to a point of no return. The height of my climax was unnerving as it was nothing I'd ever experienced before in my life. A flash of light behind my closed eyelids. A quivering throughout my entire body at the cusp of Nirvana. I felt myself explode, in a metaphoric and literal sense and the words coming from me were unintelligible. \n\nShe clasped a hand on my hip as I shuddered and thrashed and moaned. My chest was heaving, my heart racing and I hardly noticed when she crawled out from under the blankets and grabbed me. \"Are you okay?\" Carey whispered, holding me close. I nodded or at least tried my best and she seemed satisfied with my half-assed reply. \n\nMy heart rate settled and I relished in our closeness. She kissed me again before I lay my head on her chest, breathing in the scents of her perfume and her own post orgasmic musk. \n\nThe soft lub dub of her heartbeat was the most soothing sound I'd ever heard and I sighed in contentment. Was it too early to be in love with her? Oh, surely, but that didn't stop me from mentally acknowledging my feelings for her. There had to be some type of fundamental formation of love after healing someone so close to death. I hadn't tested the theory before but I was sure it had to do with that fact as much as it did with normal factors. \n\nWe must've dozed for a little while because I was woken by the shrill cry of my phone alerting me that I had to be to work soon. It was somewhere amongst the clothes strewn about the floor in our haste to ravish each other. \"What's that?\" Carey's voice echoed in the quiet, dark room as I clambered awkwardly out of her bed.\n\nI knelt on the floor, finding my phone in my jeans pocket and silencing the alarm before crawling back into the bed, her waiting arms embracing me once more. \"It's my alarm for work. I would totally call out if it were early enough,\" I explained. We sat in silence for a bit, the soft sounds of our collective breath the only thing audible. \n\n\"Please come back in the morning,\" she whispered in my hair, her voice pleading. \n\n\"I'd like that a lot,\" I answered, snuggling in closer to her. I didn't want to leave but it was too late to call out and the guilt would be too high if I called out regardless. It was a good thing too because I wouldn't have been informed of our next quandary until it was too late if I had stayed with her that night. \n\nShe kissed my head. \"I do have to run and get some groceries so we don't starve but I'll leave my house unlocked in case I'm not back by the time you get off of work.\"\n\n****\n\nIt was painful going through the shift at work after spending my day with Carey. Not due to my sleepiness but because I would've rather been with her the entire duration of the evening. Lucky for me, the emergency room was quite busy and it kept my mind off of her, albeit minimally.\n\nAfter a hefty load of charting, I gathered my belongings from the breakroom and headed toward the time clock. As I stood poised to clock out, a hand touched my back, causing me to jump. I whipped around and was face to face with the director of nursing services, whom I hadn't seen since the beginning of my contract. \"Hello, Autumn. Are you free for a quick meeting this morning?\" Heather Gunther inquired. She stood about five inches shorter than I but her small stature still conveyed her authority as did her tight black bun and serious tone.\n\nI was hesitant as she hadn't approached me prior to that morning but also intrigued. \"May I ask what about?\"\n\n\"It's regarding an incident that took place within the emergency department which you were involved in. If you would please follow me,\" she indicted down the hall and without waiting for me, headed in that direction. I was perplexed and followed closely behind her. \n\nShe led me to a small empty conference room and motioned for me to sit. I pulled out a chair and eased myself down, concerned as to what she was going to say. Rather than join me at the table, Heather stood with her hands on the back of a chair. \"One more person needs to be present. If you'll excuse me, I'll retrieve him,\" she said curtly before exiting them room.\n\nThe whole thing was odd. Were they going to fire me? I hadn't in the past been met with any disciplinary action and, as I assumed that what the meeting was for, didn't know what to expect. It dawned on me that it was possibly due to my fainting spell after healing Carey and I hoped for as much. When a tall gentlemen in a crisp suit walked in by himself, I was nervous. \n\nThe man held a small brief case and didn't make eye contact with me. He shut the door, running a flat hand over his jacket before sitting a few spots down from me. I found it odd he didn't introduce himself or shake my hand, as I figured he was from Human Resources or the like. He cleared him throat, opening a small file. \"Miss Markle, where were you the morning of September tenth at approximately three-forty a.m.?\"\n\nIt took me a moment to remember the day he spoke of and when I did, my heart rate picked up. \n\n\"Excuse me?\" I feigned ignorance.\n\n\"A critically ill patient was transported by EMS to the emergency department in the early morning hours of September tenth. You, along with two other nurses and a physician were present during the incident. Could you tell me, in your words, what happened that morning?\" his voice was monotone and he didn't look up from the papers that were quickly spreading over the surface of the faux oak table. \n\nI shifted in my seat, placing my hands in my lap as they began to tremble. Hoping it was due to my collapsing and not Carey's miraculous recovery, I chewed the inside of my lip before speaking. \"Yes, I remember now. Is this meeting due to me fainting, because, I won't let that happen again and -,\"\n\n\"No,\" he cut me off, leering up at me and narrowing his eyes. \"I believe you know what this meeting is truly regarding.\" His stare was icy. ",
        "How am I going to get myself out of this? I wondered, rubbing my sweaty palms over my legs before fidgeting with my purse. \"I have no idea what you're talking about. We had a patient who was injured during a motor vehicle accident that morning.\"\n\nNow that he made eye contact with me, he didn't drop his gaze. \"A critical patient who made a full recovery in less than twenty-four hours. How is that possible, Miss Markle?\" he interrogated. \n\nI shrugged. \"Medical marvel,\" I said dumbly. My thoughts were zipping around and I mentally chided myself for not coming up with something, anything better than that load of shit. Modern medical advances? Anything! A bead of sweat trailed down the nape of my neck and I chewed the inside of my lip raw. \n\nThe man sighed and cleared his throat, his Adam's apple bobbing as he did such and he tilted his head downward to take in the papers again. \"We have several eyewitnesses attesting to an unexplainable event that took place during the morning in question revolving around you.\"\n\nI realized there was no talking my way out of this. I had to get the fuck out of there. \"Okay, well, sir, I do hope you realize I just came off a twelve hour shift and I really have to pee. Could we pause this long enough for me to run to the bathroom? I promise I will answer all of your questions when I come back but it's getting to be really distracting,\" I lied. I didn't think he'd take the bait but I was out of options. \n\nThere was the icy stare again, tinged with disbelief. I tried to make my eyes as pleading as ever and squirmed uncomfortably in my chair. The whole situation was beginning to make me feel a little crazy. What with mine and Carey's revelations about each other, the fact that I saved her from certain death and visited her brain from time to time was already having me question my sanity. That combined with the effective lack of sleep, I was beginning to believe I truly was in some psychosis. \n\nAfter what felt like ten minutes of awkward and tense eye contact, he sighed. \"Of course. But I expect to conclude this interview as soon as possible upon your arrival.\"\n\nI nodded and slowly made my way for the door, the man sifting through the stack of papers once again. \n\nWhen I was in the busy hallway, I forced myself to walk in a normal fashion, worried someone was watching me. How far did the reach of that man go? Where the hell was he from, anyway? How the hell did he let me go? I pulled my phone from my pocket, intending to send Carey a text about my plight but dismissed the idea. What if they were tracking my phone? I had see enough crime shows to rot my brain. Was it a crime to save someone's life with a paranormal ability? \n\nI shook my head to myself, my confusion and overall fatigue wearing me down as I entered the parking lot. A heavy rain was falling, instantly drenching my scrubs. I clutched my purse to my chest, keeping my head down low as I passed a group of people heading toward the front entrance. I let my eyes scan the area and I didn't see anyone in particular watching me but I hurried to my car anyway. \n\nOnce out of the parking lot, I sped my car onto the county road and planned on taking a few back roads to get to Carey's house. I couldn't go to mine and Ryan's cottage rental. What if they were watching that one? I couldn't risk it. Part of me wondered if I was just being extremely paranoid and I was letting my imagination get the best of me. The other part, the instinctual part was screaming to get as far away from Aberdeen, Washington as humanly possible. Europe would be a good start or maybe even Asia. \n\nI peered at the rearview numerous times before I accepted that I wasn't being followed. I'm sure the dude, whatever his name was, would notice I wasn't really in the bathroom and quickly take chase. Would they take chase? I didn't know but I wasn't going to take the chance of leading someone right to Carey's house. \n\nMy car tumbled up the driveway and I thanked my lucky stars that her Jeep was in the driveway still. I threw my car in park, killed the engine and jumped out, leaving the door open as I ran up to her house. It was unlocked and the living room was quiet when I entered. \n\nCarey was sitting at the small breakfast nook, a cup of coffee in one hand and a book in the other. When she looked up, her lips curled into a grin that quickly disappeared when she took in my appearance. \"What's wrong?\" she asked, placing her items on the table before getting up and taking me into her arms. \n\nIt flew out of my mouth, my words as quick and concise as I could manage. When I was through with the story of my morning, she pulled back and inspected my face, her brows scrunched and lips in a thin line. \"We have to leave,\" was all she said. \n\n\"Where will we go?\" I asked, the fear evident in my voice. \n\n\"Seattle.\"\n\n****\n\nWe sat on an overstuffed couch, Carey's arm around me. My fingers were wrapped around a hot cup of tea and I tried my best to listen as Allen spoke to us. We'd been in Seattle for approximately twelve hours. \n\nAfter I told Carey what happened, we packed as much as we could and left in her Jeep, taking as many back roads as possible until we were forced to jump onto Interstate-five. We ditched our phones and any other electronics for fear of being tracked, Carey having written the directions to our location on a notebook. \n\nAll I had were the scrubs I wore and the scant amount of back up clothing I grabbed out of the trunk of my car, which included two more pairs of scrubs. I guess I was lucky for that much due to our circumstances, thankful I always carried a back-up in case I ever got myself into a gross mess at work and needed clean clothing. \n\nI managed to sleep a bit on the way during the seven-hour drive that should've only taken five. Carey told me it was going to take a bit longer because she wanted to ensure we lost anyone if they were following us. Although there were no outward signs of anyone following her Jeep, she took us through a series of towns and small cities. When we finally did reach the safehouse in the heart of Seattle, it was pouring rain and the sky was darkening. \n\nMy head was pounding and I could barely keep my head from lolling to the side when we entered the seemingly dilapidated brick building. We were led down a long hall, the smell of coffee and popcorn thick in the air. I felt like a child, being guided onto a fluffy couch by Carey and a tall, burly redheaded man. Their voices were hushed but carried as they headed back down the hall we'd come. \n\nI nestled myself in the cushions and took my chance closing my eyes. When I opened them again, Carey was kissing my cheek and covering me with a blanket. \"We have to get rid of my Jeep. I'll be right back, baby,\" she whispered. I wanted to protest, to demand her to take me with her but, the softness of her voice with the and the warmth of the blanket drew me in and my eyes closed again. \n\n\"Autumn,\" it was Carey's voice and when I opened my eyes, they were assaulted by the brightly illuminated living room. I sat bolt upright, having fallen down in the couch whilst I slept. \n\nFor a moment, I completely forgot where we were. Carey must have seen the look of fear on my face because she took me into her arms. \"It's okay, Autumn. We're safe.\"\n\nMy eyes finally adjusted to the lighting and I took in the surroundings. It was a large room, with random furniture and an enormous computer set up in the corner. \n\nAllen, the tall redhead with the fuzzy beard and presence of a bear, sat opposite us from a coffee table. He sipped from a coffee mug that read I'M A RAY OF FUCKING SUNSHINE and I couldn't help the snort that followed after I read it. \"I like your coffee cup,\" I chuckled.\n\nHe grinned and looked to Carey. \"I like her.\"\n\nShortly after informing me of the time (it was almost midnight!), Allen went on to tell me about what was going to happen next. Carey had handed me a cup of tea at some point, her fingers lightly running up and down my back. There was a research team hunting down people like ourselves every day, getting closer to developing a serum that would enable mundane people to have abilities such as ours. The problem being, they had to use us as lab rats. My little stunt of saving Carey had become common knowledge among these people somehow and I was their latest target. \n\nIf Carey and I hadn't left when we did, he explained they would've either convinced me to come with them by whatever coercive tactic they needed or outright abduct me. The thought of how close a call it was scared me badly. Carey held me close to her, as if sensing the distress. \n\nHow things had drastically changed in the last two weeks. I went from a nurse who fleetingly healed people and had recently discovered a magic writing talent to a wanted freak and scientific anomaly. At least I had Carey and the strange man across from us. He spoke of a resistance against this organization researching people like us and he showed us some of the data he had collected over the years since he began his mission. \n\nThings were getting worse, he told us, the group becoming more desperate in their attempt to find the information they sought, hence the kidnappings. The goal he had in mind was to collect enough dirt on them to present it to the FBI. The thought was daunting to me. We couldn't just walk into the FBI at Quantico and expect them to believe we weren't just a bunch of nutjobs. \"That's what the data is for,\" he averred when I questioned the solidity of his plan. \n\nThe sound of what I assumed to be the front door slammed and Allen clapped his hands together. \"Oh, good, they're home,\" he looked to us with a huge grin, \"Time to meet the rest of the family.\" I gripped Carey's hand, slightly apprehensive and wondering what the hell we got ourselves into."
    ],
    "authorname": "JodiHutchins",
    "tags": [
        "esp",
        "fingering",
        "lesbian",
        "lesbian novella",
        "lesbian romance",
        "lesbian sex",
        "supernatural lesbian",
        "cunnilingus",
        "romance",
        "love"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/kismet-encounter-ch-02-5"
}