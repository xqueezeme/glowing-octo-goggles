{
    "title": "Ann: A Love Story Ch. 60",
    "pages": [
        "I was a little surprised at first when Ann asked me if I would do it. But things had suddenly changed when Molly said that she'd talked to Tina. Tina had apparently alluded to her that there might be more involved than she normally would encounter in her job as a limousine driver...certainly more than just driving me and Ann around the greater Omaha area. And the 'more' that Tina had alluded to was undoubtedly sex. \n\nMolly was a chauffeur, working for a service that Charles, the manager of the hotel we were staying at, used often. Charles had talked to Tina when she was setting up the nights' itinerary, and during that discussion, somehow Molly came up in conversation. That led to Tina talking to Molly directly...and in doing so, Tina used her considerable charm and abilities of persuasion to talk Molly into becoming our driver for the evening.\n\nNo promises were made, nor were there any descriptions of events that would actually take place. Tina only told a tale, whetting Molly's appetite for adventure...which turned out to be very similar to Tina's...and Ann's. They all shared a penchant for exciting scenarios involving sex. And with Tina talking about what Ann had done for our adventure in Virginia, and now how she was trying to return the favor for Ann...well, it was easy to see why Molly became an eager and willing ally to Tina in no time.\n\nSo, Molly went into the evening open minded, but cautious. She'd said she didn't want to assume anything and take the chance of accidentally ruining our evening. Tina had warned her against just that, telling her that while anything was possible, she had to be patient and let things happen naturally. Molly told us she was supposed to take us to out the dinner theater, and then see what might happen on the way home. But, she WAS supposed to make sure that both Ann and I knew that we had the limo for a couple more hours once the musical was over, to kind of see if there was a spark there. Tina wanted to give Molly an opportunity, just in case.\n\nWhen we...well, when I inadvertently asked Molly to take pictures for us by the road sign by simply handing her the camera when I got out of the car, Molly took that as a silent request to become our photographer. And with that, she assumed that would probably be the extent of her actual participation for the evening. She'd hoped for more, slipping off her panties when she hopped into the back of the limo to change the film in the camera. She wasn't expecting anything, but she wanted to be ready just in case.\n\nAnd worse case, Molly said she wanted to be able to take care of her pent up sexual urges a little easier while she drove. She figured it was a long shot that Tina was actually telling the truth, and that Ann and I might invite her to join us. Actually, Tina had just insinuated that could happen, but only if the stars were to align just right. But since she wasn't suppose to press the issue, and it looked like Ann and I were perfectly content in fucking each other silly in the back of the car once we got back inside, Molly took matters into her own hands.\n\nAnn and I had helped, by telling her to keep the privacy window open between the front of the car and where we were going at each other on the big seat in the back. And by suggesting that she might be able to see what we were doing a little better, if she turned on the lights. And once Ann and I came, Molly confessed that she came along with us, fingering her pussy while she drove us down the interstate.\n\nMolly made that confession when she told us she'd talked to Tina. And from there, she told us a little more about what she and Tina had talked about. While she talked, Molly kept one eye on the road, and the other on Ann, who was naked in the back seat. Well, except for her extremely hot, red heel that laced up her calves all the way to her knees. \n\nI'd moved to the other seat, right behind Molly...so I could get the camera from her. Ann sat across from me, her legs spread wide, showing her well used pussy and how my cum was starting to slowly ooze out of it. She had asked if I'd noticed that it looked good enough to eat; a not to subtle request for me to come back over and eat her pussy...cleaning out what I'd left there in the process. But before I had the chance to answer her, Molly did. \n\nAnd that was when the dynamics of the evening changed. Ann started asking Molly about her conversation with Tina in detail, and details we got. And the more Molly said...the more Ann looked at me, slyly checking to see how I was reacting. When Molly had finished telling us a second time how she was so turned on watching us...and how she couldn't wait until she dropped us off, deciding she had to cum along with us, Ann looked at me, and then at her.\n\n\"Molly?\" Ann asked.\n\n\"Yeah?\"\n\n\"Are you still turned on?\" \n\nMolly laughed and said, \"I think I'll be turned on for the next month after tonight. I have to tell you...you're the hottest couple I've ever had in my limo. I wasn't sure if anything was going to happen at all, but this has been such an incredible night for me.\"\n\nAnn smiled. \"Well, you know Molly...the night's not over yet.\"\n\n~*~*~*~*~*~\n\nAnn asked Molly to put up the window screen for just a moment so we could talk in private. I knew something was up when Ann looked at me while she was talking to Molly. And Molly knew something was up when Ann asked her if she was still turned on...and then asked her for some privacy. And that was when Ann asked me if I would be willing to go for a test drive, so to speak.\n\n\"Baby, I really think we owe it to Molly...don't you?\"\n\nI laughed and said, \"You're just saying that because you want to see how I'll react.\"\n\n\"That's not true. I know exactly how you'll react...you'll love it. And why wouldn't you...she's cute, don't you think?\"\n\n\"Of course she's cute, Ann. It's not like I wouldn't love it. I'm just worried that I might get her in trouble, that's all.\"\n\n\"How would you get her in trouble...are you telling me you're not going to be careful?\"\n\n\"Of course not. It's not like I don't know what I'm doing.\" \n\n\"You'll be fine, baby. I just think it would be a shame if Tina talked Molly into doing this for us tonight, and all she got to do is watch. And you heard what she said...and the way she said it. She wants to.\"\n\n\"Babe...it really doesn't matter to me. I'm just not sure I'm can. I'd hate to do something that she'll regret.\"\n\n\"What do you mean you don't know if you can? You've done it before. You used to be able to, didn't you? I thought you told me...\"\n\n\"You're right, Ann...I used to. But that was a while back...I'm in a different place now. I just don't want Molly taking a chance if will cause a problem.\"\n\n\"Well, why don't we ask her? Maybe she'll think it's worth the risk.\" \n\n~*~*~*~*~*~ \n\nTo be perfectly honest, it felt good...damn good. The subtle movements...the positive response to just the slightest touch. I felt so comfortable going at an easy pace, and yet there was something exciting about knowing there was this power inside, just waiting to be unleashed whenever I wanted to go faster. And yet, as fun it was, I couldn't take my eyes off of Ann...and Molly.\n\nI was driving the limo.\n\nWhen I knocked on the privacy screen, letting Molly know to put it back down, Ann was still sitting on the big seat. Her legs were still wide open, with my load slowly dripping out. Looking at Molly's eyes in the rearview mirror, Ann took a deep breath.\n\n\"Molly, were you serious earlier?\"\n\n\"Uh...about?\"\n\nAnn glanced down at her pussy, moving her hand to it and dipping her finger inside. Pulling out a dollop of cum, Ann brought it to her mouth and seductively licked it off with her tongue. She let out a soft moan as she flashed a sexy smile and said, \"About this looking good enough to eat?\"\n\nMolly let out a nervous little laugh and said, \"What...are you asking me?\"\n\n\"I'm wondering if you've ever been with a woman before?\"\n\n\"No...I haven't,\" she said, her voice cracking a little.\n\n\"Have you ever...thought about it?\"\n\n\"Well, I have for the last half hour or so.\"\n\n\"Would you LIKE to?\" Ann said, winking at Molly like she had when she'd first said she thought Ann good enough to eat.\n\nMolly never hesitated. She looked for the first safe place she could find to pull over so we could switch places, and stopped the limo with a sudden screech. My only concern had been about Molly's job security...I didn't want to do anything that might get her in trouble. The fact was, at one time I actually HAD a chauffeur's license, and Ann knew that. \n\nIt was misnomer to say that a license of that variety was so you could drive people around in a limousine. I'd gotten mine so I could drive a truck for the plant when I first went to work there. I been hired into the shipping department when I first got out of college, and I had to get that classification of license as part of my job description. At that time, you didn't need a Commercial Driver's License to drive a truck, so a simple Chauffer's variety did the trick.\n\nBut the last time I renewed my driver's license, I chose not to through the testing for that again. I had moved to the department I was currently in charge of, and I decided to let that part of my license lapse and just go back to an ordinary, everyday, run of the mill version. My thinking was that if I kept the other one, my boss would keep trying to pull me out of my new responsibilities to do things that had nothing to do with my job. Since they hadn't seen fit to make me a salaried employee, it would have been easy for him to assert the 'other duties as assigned' clause in my job description, and yank me back out of the department whenever he saw fit, or got into a pinch.\n\nSo, I wasn't 'officially' licensed to drive the limo any longer. But I'd been through the training before, and aced the test. And I'd logged hundreds of hours on the job. So it wasn't like it was that big of a deal. Besides, if I could drive a 24-foot, five speed duel axle box truck carrying 20,000 pounds of freight...driving a slightly longer than normal luxury sedan wasn't really going to be that big of a problem.\n\nNone of that really mattered to Molly. She was looking for a place to pull over before I'd even told her about my background. She was staring at Ann in the backseat, and Ann was flirting with her in ways that made me wish I could join them. But Ann also made it very clear to Molly, and to me, that this was not going to be one of those moments where she wanted to share me.\n\nAnn had told me that that day would come...a day where she would want to have a threesome, and watch me fuck another woman. She wanted it to happen...because it turned her on. But I knew almost at once that this wasn't going to be the night. Ann was looking for a little more fun, and she'd felt bad about hooking up with Maryam, and not telling me. Or more to the point, that I didn't get to watch. This was a way in Ann's eyes to make up for that.\n\nAnn and I had already talked about how we wanted to end the night. We were both looking forward to fucking back at the hotel, in the amazing bedroom that was specifically designed for just that in mind...fucking. And as hot as Molly was, I wanted to fuck Ann...in that room...in Nebraska. We'd skipped over Nebraska on our cross-country fuck-a-thon to hit Iowa first, and make our next day's trip more manageable. But I had no intention of skipping it altogether. And if there was any chance that my fucking Molly would mess up our night at the hotel, then I wanted no part of it.\n\nOf course, I was questioning that logic as I watched them in the mirror. My cock was throbbing once again, now trapped inside the pants that came with my tux. And it was more from the sounds that were coming from the back of the car than the sights. In all honesty, I couldn't watch them all that often. I didn't know the area like Molly did, and it was dark...and windy. So, I was forced to concentrate on the road, which meant any glimpses I got of the action in the back were few and far between.\n\nThat didn't mean I missed everything. I'd waited to pull back out onto the highway, wanting to at least see how they would start. I figured it would be a while...what with it being Molly's first time. I expected that there would be some kind of drawn out seduction between the two of them. But Ann was already naked, and the back of the car smelled of sex. When Molly finished showing me what I needed to know about driving the car, she climbed into the back with Ann, and seconds later they were kissing.\n\nMolly was either fearless, or she was scared to death. But either one of those could produce an instant reaction. If she was fearless, she had the confidence to seize the moment, and she didn't want to wait another second knowing time was short. If she was scared to death, then she wanted to dive right in so she wouldn't change her mind. Either way, Molly had made her decision, and there was no looking back.\n\nHer hand found Ann's right breast, squeezing it, feeling its weight. Ann's hands ran to Molly's hair, discarding her hat quickly as she ran her fingers through the tight blond curls. They necked for a while, and then Molly said she wanted to make sure that Ann didn't make a mess she'd have to clean up later...and that meant she wanted to keep any cum I'd left behind from dripping onto the seat. Of course, that was just an excuse. Molly really just didn't want to waste any time.\n\nAs I pulled out onto the highway, I glanced into the rearview mirror out of habit. Instead of being able to see out the back window, I could only see the two of them. Ann was still sitting in the same spot. Molly was on the floor on her knees, bent over as she enthusiastically ate out her first pussy...showing me hers under her little skirt. I couldn't see it well, since the skirt was too long, but the fact that she was flashing me occasionally had me practically panting.\n\nAnn looked at me, playing with her nipples as Molly licked out my sperm. The smile on Ann's face was both wicked and contented. She took her right leg off the floor, bringing it up and around Molly's body to rest it on her back. Her left hand left her tit, moving down her body, snaking her fingers back into Molly's hair. Grabbing it, she pulled Molly into her crotch.\n\n\"Oh...GOD YES! EAT ME MOLLY...EAT ME!\" \n\nMolly moaned, and in seconds, she was not only eating my cum, she was swallowing Ann's as well. And that seemed to just be the start. But Ann wasn't taking any chances. She didn't know where we were, or how long we had. Once she'd finished cumming, she wanted to return the favor right away. \n\nAnn helped Molly out of her clothes, not content to just eat her like she was. Molly offered a playful protest, but Ann said, \"If I'm not going to let Neil fuck you, the least I can do is let him see you. So, if you want me to make you cum, I'm going to undress you.\"\n\nMolly relented...not that it was an issue. She wanted to get undressed, and she stared at me the entire time that Ann helped her out of her clothes. The blazer came off first, followed by the tie. Ann had loosened it up, taking it off over Molly's head while it was still tied. She looked over her shoulder and held it up for me...and I smiled.\n\n\"What are you thinking about, Anna?\" I said with a grin.\n\n\"Last night. It is called a 'tie', after all.\"\n\n\"Don't be getting any ideas.\"\n\nMolly looked at Ann, her eyes widening. \"You're not...\"\n\nAnn laughed and said, \"Only if you don't cooperate. Now...unbutton that shirt!\" Then she threw the tie onto the floor with Molly's blazer.\n\nMolly did what Ann told her to do, exposing a white lace bra that matched the thong that was lying casually between the seats next to me. I hadn't noticed it until I thought to look. I knew she'd thrown it up front, but it never occurred to me until I saw Molly's bra as she slowly removed the white shirt. I couldn't help myself, the feeling coming over me like a compulsion. I picked up the delicate little garment and brought it to my face, taking a whiff of the unmistakable scent she'd left behind...that of a woman aroused.\n\nI smiled as Molly reached behind her back, unhooking her bra, and letting it slide forward down her arms. Ann grabbed it, and moved to the side a little so I could see, offering me my first glimpse of Molly's bare breasts. They were bigger than Ann's, but they weren't massive...probably 36C's. She had tiny areolas, just slightly larger than her very erect nipples, which were on the bigger side. They were thick, and hard, and seemed to stick out a half inch from her chest. \n\nMolly's tits were also pale white compared to the tan she had on the rest of her skin, reminding me a little of what Ann looked like before she started sunbathing without a suit. Molly pressed her breasts together with her palms, making her cleavage bigger...and Ann moved back up and sat on the seat next to her.\n\nWatching Ann lick and suck Molly's nipples might have been a treat, but it was one that I couldn't really enjoy that much. I was stealing little looks, but we'd crossed back over into Nebraska, and I had to keep an eye out for our exit. Besides, I was waiting for the main event...which I thought would be happening pretty quickly. And it did a couple of miles later when Ann got back down and removed Molly's skirt. Since she wasn't wearing her thong any longer, Molly was now dressed just like Ann...naked except for her shoes.\n\nAnn moved to the other seat, where I'd been sitting when we'd stopped the car. \"Play with your pussy, for me, Molly,\" Ann begged, which was something I didn't expect.\n\nNeither did Molly, but that didn't stop her from spreading her legs wide...showing us both her wet, pink pussy. Unlike Ann, Molly was a natural blond down below; her pubic hair matching the locks on her head. Her bush was thick, and neatly trimmed in the shape of a triangle, with it pointing toward the top of her slit. But Molly did keep the around her pussy shaved, making the skin around her lips smooth and bare.\n\nIt was hard to tell from the distance, but Molly's labia seemed to me to be slightly bigger than I'd seen before. The lips were full, laying open to the sides like flower petals, and her hole was already visible, and wet. Her clit appeared big as well, but it was still concealed by its protective hood. I watched her as she moved her hand down, letting her fingers trace along the edges as she got ready to finger herself.\n\nAnn picked up the camera and held it to her face, making Molly freeze. \"What are you doing?\"\n\n\"I'm taking your picture...what does it look like I'm doing?\"\n\n\"Ann...I don't want...\"\n\nLowering the camera, Ann said, \"If you don't want me to, that's fine. I was just hoping to give Neil something to look at later. I'm sure he can't see that well in that little mirror. But don't worry about it. I'll still take care of you...once you take care of yourself.\"\n\n\"You want me to take care of myself?\"\n\n\"Uh huh. I wanted to take a picture of you when you cum...but I still want to watch you.\"\n\nMolly smiled. Instead of asking why, or debating Ann, she simply started rubbing her clit with one hand, while she rammed two fingers of her other hand deep inside her wet pussy. Soon she was pretty worked up, her hands flying as she stared at Ann, who I could tell was slowly rubbing her own slit. The way Molly was frigging herself, it was like she wanted to get that part over with as fast as she could so Ann would eat her. And I suppose I really couldn't blame her. If Ann were half as good at eating a pussy as she was sucking my cock, it would make anyone want to do what they could to make it happen sooner.\n\nMolly seemed on the brink, her chest rising and falling rapidly. Her ass was moving all over the seat, and she ended up spreading her legs farther apart to try and hold herself still. Her eyes were shifting, from Ann...to mine in the mirror, and then back to Ann. Mine were shifting too...from the road, to the action in the back, and then back where I was driving. ",
        "I was looking at the highway when I heard Molly suck in her breath, deep and hard. And when she exhaled, she screamed out. \"TAKE THE PICTURE, ANN...TAKE IT NOW!\"\n\nAnn giggled and lifted the camera quickly, like she'd anticipated that Molly would change her mind. Now that she had permission, even though it was induced by Molly's state of mind being driven by lust and the excitement of the moment, Ann didn't hesitate. She took several quick pictures during and after Molly's orgasm, including a sexy one with Molly cleaning her fingers and winking. Then Molly used one of those fingers to motion Ann over to her.\n\nI watched for a moment as Ann set down the camera, and crawled the few feet to Molly, nesting her head between those amazing, tanned thighs. Ann went to work, and I pulled off the interstate. And that meant that I missed a good portion of the next ten minutes. I had to keep track of where I was, and the traffic, and as luck would have it, I was hitting all of the stoplights on green, so I never got the chance to really look back at them. Sure, I had a couple of peeks, mostly seeing Ann's perfect little ass, and her wet pussy staring back at me. But that was about all I had time for.\n\nIt was a little frustrating, but then again, Ann still hadn't made Molly cum yet. As I pulled into the parking lot of the hotel, I made a quick decision. Instead of pulling up to the front, I pulled around back, finding a secluded area to park. I quickly got out, and opened the door to the back. As I stood inside the open door, looking at them, Ann looked up, her eyes peering across Molly's left thigh.\n\n\"I was beginning to wonder if you were ever going to get us here. Get in and grab the camera,\" she hissed.\n\nMolly didn't protest this time. Instead, she put her foot up on Ann's back, just like Ann had done to her. I took a couple of pictures, and then I waited for the climax. It came swiftly, hitting Molly hard. She started bucking her hips and grabbed Ann's head, thrusting her crotch up into Ann's face. Ann started slurping, swallowing Molly's cum as it washed over her cheeks and down her chin and neck. \n\nMolly was cursing under her breath, trying to hold in her emotions...but it wasn't really working all that well. I took a couple more photos, catching both the intensity of her orgasm, and the tenderness of the post coital afterglow as Ann crawled up Molly's body. They shared a wet, sexy kiss...more passionate than the first one. And then just as quickly, they both burst into girlish laughter...which was followed by a long hug.\n\nMolly leaned next to Ann, whispering into her ear for a second. Ann pulled back and turned to look at me, still holding onto Molly, her right leg still lazily resting on Molly's lap. \"Okay...but you have to eat me again so we can get a picture of that. And of course, I'll want pictures of...you know.\"\n\n\"Can I get copies?\" Molly asked, a nervous look on her face fearing she'd asked a question she wasn't supposed to.\n\n\"Of course...we'll get your address after this, and I'll mail you a set, okay?\"\n\nI was shaking my head, wondering what the hell was going on. But before I could ask, Ann was leaning back sideways on the seat, and Molly was moving so she could get her face back between Ann's legs. Molly moved off the seat, turning around on her knees as she kneeled beside Ann. \n\nAlready knowing what I was supposed to do, I played erotic photographer again. First it was just Molly eating Ann, but then Ann started grabbing for Molly's leg as it rested on the floor, and that lead to Molly climbing on top, and the two of them sharing a quick, hot 69. The orgasms came quickly, like flash floods on a rain-swollen valley. They weren't nearly as intense as the earlier ones, but that really wasn't the point. It started as just Ann wanting to have a picture of Molly eating her, and instead it turned into an erotic sexcapade that made them both cum. When they finished, Molly turned around so they could share another kiss, and it was obvious how much they both enjoyed it. \n\nMe...not so much. Well, that's not entirely true. I was just absorbed in self-pity at the moment. I loved what I was watching, but my cock was so hard by the time they both came again that I just wanted to get inside and fuck Ann. Having to watch Ann lick her cum off of Molly's face, and vice versa, was almost like torture. It was so hot, and so exciting, and yet I was forced to sit on the sidelines with my bulging cock inside my pants, fighting to get out and join them.\n\nAnn looked over at me with a sweet smile, but it changed when she saw the forlorn look on my face. Tapping Molly on her shoulder, she said, \"I think it's time for you to do what you wanted to do, Molly. Neil's feeling a little left out, and he really looks uncomfortable.\"\n\nMolly looked up, and smiled. \"Well, I'll just have to do something about that, won't I?\" \n\nRolling off of Ann as she winked at me, Molly crawled the few feet to where I was sitting. I sat motionless, stunned as she looked up at me from the floor, her bright blue eyes shining as she licked her lips seductively. And then Ann crawled over, taking the camera from my hand. Molly's eyes shifted toward Ann for just a moment, and Ann nodded, giving her an approving grin.\n\nThat was all Molly needed. Her small hands went to my groin in search of a zipper, and she found it. She kept her eyes on mine as she pulled the fly open on my pants, and my boxers...and even when she reached in to grasp my shaft. It was a bit of a struggle for her to get it out because it was so hard, but she soon had both my balls and my cock free. \n\n\"God...it feels so heavy,\" Molly said as she held my cock in her hands.\n\nAnn giggled as she took a picture, and I realized that wasn't the first one. I was so focused on what was about to happen that the first flashes kind of escaped my notice. \"So are his balls,\" she said, prompting Molly to feel those too.\n\nLooking up again, Molly said, \"I want to suck you...and Ann's going to let me as long as you don't cum. So, let me know if I get you too close, okay. I just want to feel this in my mouth for a little while.\"\n\n\"He just came, Molly,\" Ann said, speaking for me. \"He won't cum again for a while, so you shouldn't have to worry about that.\" Ann said it proudly; like it was something she cherished that she was sharing with a friend.\n\nMolly grinned and said, \"Well, that's good to know.\" Then she licked the head of my cock slowly, her tongue stretched out from her mouth to see how I'd react. \n\nI reacted by looking at Ann, who smiled at me and took another picture. And with that, I relaxed and leaned back on the seat. Molly took my head into her mouth, and started sucking me, just like she said she wanted to. She was a little rough, her inexperience showing. It certainly wasn't bad, but it wasn't the one of the glorious varieties of blowjobs I was used to with Ann. Still, Molly made up for her lack of polish in the oral arts with her boundless enthusiasm.\n\nShe was working hard, and fast, trying to please me. My hand went to her head, my fingers digging into her blond curls, letting her know that she was. Leaning my head back, I let out a little moan, and that made Molly moan too, around my cock. She couldn't take my entire shaft into her mouth, but she was over halfway, her left hand was on the rest, jacking me as her mouth went up and down. Ann was right...I wasn't going to cum anytime soon, but that didn't mean that it didn't feel great, or that I didn't appreciate what Molly was doing to me.\n\nBut that didn't stop me from wondering what Molly was getting out of it, besides reddened knees and a sore jaw. Was it just the thrill of being more of a part of what Tina set up? Was it that she got to do something sexual with both of us? Or was it something else altogether that I couldn't think of, because I was having my cock sucked by a gorgeous blond while my fianc\u00e9e took pictures of it, and that was making it hard to think of anything else. \n\nInstead of thinking, I reacted. There had to be something in it for Molly in my eyes...otherwise, she was just wasting time I could be using on Ann. I knew fucking her wasn't going to happen, but that didn't mean I couldn't return the favor. I put my other hand in her hair, and sort of lifted her head gently off my shaft. Molly looked up at me and smiled. \"Is it time?\" she said, thinking I wanted to take Ann inside now. And I did, but not before I gave Molly a taste...of her own medicine.\n\n\"Yes, it is,\" I said as I helped Molly off the floor and traded places with her. I moved between her legs, and looked over at Ann. I could see the excitement in her eyes as she got the camera ready.\n\n\"Hold on, Molly. Neil's going to show you how it's really done.\"\n\nThat was lofty praise, but it was like Ann was urging me on...I just hoped I'd be up to the challenge. As I leaned forward, I inhaled, taking that amazing fragrance once again. It was more pungent that what I'd sampled on her thong, her orgasms making her aroma strong and intoxicating. I couldn't wait to taste her, and see if it matched how my mind had dreamed it be like. But I did wait, teasing Molly as I kissed her inner thighs. \n\nWe didn't have a lot of time, but I was going to take every moment I had to draw out her last orgasm. I wanted it to be the highlight of her night, which wasn't likely going to happen, since it was the same night that she'd been with a woman for the first time...and a woman like Ann to boot. Still, it was good to have a goal.\n\nI had Molly writhing in her seat after just a couple of minutes, as I danced all around her pussy, without really doing anything to it...other that breathing on it. I was kissing and licking around it, inching closer and closer her wet cunt, but I avoided it for the longest time. When I finally took one of her big lips into my mouth and nibbled on it, stretching it out, Molly was rocking the car so much it felt like the wind was tossing us around again. She put her fingertips against the ceiling of the limo, trying to force herself sit still.\n\nAnn had taken several photos, and was about to take yet another just as I was about to snake my tongue through Molly's soft, wet gash for the first time, which I anticipated would make her start cumming in a matter of moments. But Ann moved the camera down for a moment, and touched my shoulder.\n\n\"Neil...I want you to do something for me.\" It seemed hardly the time or the place, and Molly gasped as I pulled my face away for a moment to look at Ann. I started to say something, but Ann held her hand up to stop me. \"I want you to fuck her, baby. She deserves it...and I want to watch.\"\n\nMy mouth fell open, and I started to say something again, but all I could muster was, \"Are you sure?\"\n\nAnn smiled confidently, and said, \"Yes...I am...as long as you can make her cum, without cumming yourself.\"\n\n\"Oh...God...please,\" Molly begged, her voice breathless and ragged.\n\n\"Ann...I...\"\n\n\"Baby...please...don't let the poor girl suffer any more. Or me...I want to watch!\"\n\nI turned back to Molly, who turned and laid down, lifting her left leg and putting it on top of the back of the seat, her foot near the privacy window. She had her right leg firmly planted on the floor, spreading herself wide open for me, and I moved between those sexy legs. I wished I had time to take off the clothes I was wearing, but Molly wasn't going to wait. I compromised as I unbuttoned the pants and quickly stripped them down. Molly reached for my cock, gripping it tight and pulling me toward her like she was worried Ann might change her mind. \n\nAnn cooed and said, \"God I love that ass. I can't wait to see what it looks like from this side.\" \n\nI could hear the camera going off as my cock sunk deep into Molly, splitting her pussy wide. \n\n\"OH...FUCK!\" she growled as I started moving my ass back and forth. \n\nI was worried at first, thinking that it was all too much, and Ann was going to regret telling me to do it later. I didn't want to disappoint Molly, but it was hard not to think about the woman next to me. I took a little peek to my left, as Ann watched us. \n\nAnn looked at me, and she could tell I was nervous about the sudden change...and like she seemed to always do, she came to my rescue. \"Neil...I really want you to do this for me. I can tell you're thinking about it, and you don't have to because I already have...it's okay. Go ahead and fuck the shit out of her...put your heart into it!\"\n\nMolly groaned again. \"I don't need your heart. Just put your cock into it...NOW! I'm so fucking close!\"\n\nWhat Molly said hit me. She wasn't going to get my heart, because it belonged to Ann. But Ann had no problem loaning her my cock for a couple of minutes, as long as my cum stayed put right where it was. I was suddenly a gigolo, working to give Molly the pleasure she needed, and in Ann's eyes, deserved. And the thought of being just a cock to service Molly kind of appealed to me at the time. \n\nI moved forward, grabbing Molly's breasts, pawing them...her hard nipples falling between my fingers as I pressed them together. I looked in her eyes, feeling the heat between us as I bucked harder into her. Molly's hands grabbed my ass, gripping at my cheeks just like my hands were treating her tits. \n\nAs our eyes met, I gave her a sexy little smile. \"Cum for us, Molly. Cum for me and Ann one more time,\" I said quietly.\n\nMolly turned her head, looking directly at Ann as I pumped my cock into her. Ann was grinning from ear to ear, and she took a quick picture. Molly's breathing quickened, and her eyes widened for just a second.\n\n\"Thank you,\" she mouthed to Ann...and then her climax hit her. She sucked in her breath as she closed her eyes...and then her back rose, jutting her chest out. \n\n\"Fuck her baby...she's cumming!\" Ann said excitedly.\n\n\"FUCK...I'MMMM CUMMINNNGGGG!\" Molly confirmed. \n\nAnn started giggling, taking another couple of pictures before she stopped and sat back on the other seat across from us. I kept pumping my hips, slowing my pace a little while Molly threw her head back and forth. Her hands reached up to my shoulders, and then to my neck, pulling me down on top of her. Her left leg dropped off the top of the seat, resting on my bare ass as she wrapped her arms around me...and we hugged. \n\nAt that point, I just held myself still, my hard cock jammed all the way inside Molly. I could feel her warm, drenched pussy pulsing around my shaft, gripping at it as her breathing went from rapid shallow breaths, to long, deep ones. Her chest was pressing into my jacket, and I wished I could have felt her skin against mine. But the way I was dressed felt right when compared to her. It made our romp seem wild and spontaneous, which is was in a way. I never thought in a million years that I would have ended up fucking her, and I owed it all to Ann. We both did.\n\nAnn was watching us, reloading the camera with another roll of film. I wondered how many rolls we'd gone through already on our trip. Not that it mattered. We were on the adventure of a lifetime, and for once, I was the one being photographed. \n\nMolly's hand found my hair, and she ran her fingers through it. I pulled up a little, and our eyes locked again...my hazel eyes staring into hers. I knew what she wanted, and while I felt a little pang of guilt, it was only right. I leaned down, and pressed my lips against hers. She sucked in her breath again, kissing me back. It was slow and tender...almost innocent. There were no tongues, or passionate moans. It was just a warm, simple kiss between two people that shared a special, intimate moment in time together. \n\nI heard Ann sigh as we parted lips, letting me know even when I wasn't looking that she approved of the little buss on the lips that I gave Molly. For her part, Molly approved too.\n\n\"God, Neil...that was fantastic.\"\n\n\"The kiss?\" I said with a smile.\n\n\"Ha...yes...the kiss too.\" I pulled out of Molly, moving back on the couch. She let out a little sigh as her hand went to her pussy, feeling the emptiness I left behind. \"Thank you both...I can't believe you let him do that Ann. I'll never forget this night.\"\n\nAnn took a picture of my hard cock, slick from being in Molly's cunt. And then she took one last picture of Molly, lying on her back with a contented smile, her eyes half open as she looked at Ann. \"That's right, you won't. I'm going to send you some pictures, remember?\"\n\n~*~*~*~*~*~\n\n\"Nice touch,\" Molly said as she touched her thong, making it swing back and forth.\n\n\"I didn't want you to forget it,\" I laughed. \"That seemed as good a place as any to leave it so you'd find it.\"\n\nMolly was driving us around to the front of the hotel from the back were we'd been parked. She was looking at her panties hanging off the mirror, and she giggled. Ann was getting herself settled, making sure her dress looked perfect, which I found funny.\n\n\"Slow down Molly...I'm not ready yet,\" Ann said as she tried to get the back of her dress just right, to show the perfect amount of her ass crack. \"This is hard to do when you can't stand up.\"\n\n\"It's okay, Ann. You look fine,\" I chuckled.\n\n\"It's not right. You know, you could come over here and help me.\"\n\n\"If I'm going to do anything...I'm going to be getting you OUT of that dress in a couple of minutes. Let it go.\"\n\nAnn looked over her shoulder, her eyes smoldering. But I knew that expression on her face...the cute stubbornness that could be Ann from time to time. \"If you want to get me out of this dress, then I want to have it on right. Help me.\"\n\nKnowing it was a losing battle, I got down on my knees and began pulling at the back of the dress, moving the material down on her hips to show a little more of the top of her hard, tight bottom. As I was smoothing out the red fabric with my hands, Molly opened the door to the back. I hadn't even noticed that we'd stopped. But then again, we hadn't had far to go to begin with.\n\n\"You two are amazing,\" Molly said as she held the door for us.\n\nAnn gathered up the camera, and said, \"What makes you say that?\"\n\n\"Because you're going to go upstairs and fuck yourselves silly, and yet you do things like that first. It's so cute.\"\n\nI looked at Molly, standing there in her little uniform. \"You're cute too, Molly.\" I picked up her white shirt and lacy bra off the floor of the car, holding them up. \"Do you want these now?\"\n\n\"Just throw them up front. I'm going home like this!\" \n\nI threw the garments though the window between the front and back of the limousine, thinking about Molly driving back to home like she was. When she was getting dressed, Ann had handed her the tie first, before she reached around to get her other clothes for her. Molly smiled, and didn't wait, slipping the noose of the tie over her head and tightening it. The she asked Ann for her skirt and blazer, saying that's all she needed for the moment. \n\nNow she was standing outside that way, her little chauffer's hat back in place; her blazer unbuttoned and open, covering her chest as her tie hung down between her tits.\n\nI got out, and helped Ann out of the back. Ann smiled at Molly's attire and said, \"Can I take one more picture?\"\n\n\"Take a couple,\" she said, posing like she was. The flash of the camera illuminated where we were standing under the car awning in front of the hotel. Molly gave a quick wink and opened the front of her blazer, giving us another glimpse of her magnificent breasts. Then she lifted the front of her skirt, showing us her blond bush. \n\nI stood by as Ann took one last picture, and then gave Molly a big hug. \"Thanks for being a part of our journey, Molly. You were incredible!\"\n\n\"Me? Thank you for LETTING me be a part of tonight. My God, Ann...this was amazing!\"\n\n\"So, you're really going to drive home like that?\" \n\n\"Yeah...I don't have to return the limo to the office until Sunday. I've got another gig early tomorrow morning...actually, I'm picking them up here at the hotel. So, I'm going straight home, getting in bed just like I'm dressed right now, and I'm getting out my dildo and reliving this night in my dreams.\" ",
        "\"Sounds like fun,\" Ann said as she walked over and took my hand.\n\n\"Not as much fun as you're going to have. My dildo's not as...well, not as wide as Neil. But I'll make the best of it. I just may have to go get a fatter one sometime tomorrow.\"\n\n~*~*~*~*~*~\n\nAnn and I rode in silence up the elevator to our floor, and we walked hand in hand down the red carpeted hallway. She had Molly's business card in her other hand, with her home address written on the back so we could send her the pictures. But we weren't reflecting on what we'd just done the last few hours. There would be plenty of time for that later. Instead, we were looking forward to what was to come just beyond the ornate door to our room. I placed the key inside the keyhole, and slowly opened the door for Ann.\n\nShe handed me the camera bag, and stepped inside the elegant room. With her second step, she pulled at the material on her shoulders, pulling it down her arms. The evening gown being sleeveless helped her slip it off easily, even though it was skin tight. With her back already bare from the design of the dress, I knew that the front of her body matched. A few steps further, and she had slipped her hands inside where the dress still hugged her ass, and she wiggled it slightly. Before the door closed behind me, the dress was on the floor, and Ann had stepped out of it as she walked towards the bedroom. Ann opened the bedroom door, and walked into the mirrored room, turning to me as she reached the bed. Reaching down, she removed the red bedspread, pulling it onto the floor behind it to reveal a similar red silk sheet. She walked back the front of the bed nearest me, and I started to walk in with her, but she put her hand up, telling me silently to wait. \n\nAnn sat down on the mattress, and removed her sexy new shoes. Normally, I would have loved for her to wear them while we fucked, but there was something about watching her remove them that was getting me harder by the second. The way she bent over, one leg crossed over the other, her perky tits hanging down and swaying a little as she untied the laces that ran up her calf. It was as erotic as Ann was beautiful. Then, she did the other one the same way, and letting them stay there next to the bed. \n\nCrawling up into the center of the big circular mattress, Ann looked at me with a sultry stare. \"Two pictures baby. One of me now...before we start. And then I'll let you take one more when you've finished ravishing my body.\"\n\nThe idea of a 'before and after' photo set appealed to me. It was Ann's way of telling me she wanted my undivided attention. Frankly, I really was tiring of taking pictures anyway. I just wanted to be with Ann, and not have to think about anything other than her request for me to ravish her lithe, sexy body. I was going to take her picture, and then I was going to take her. \n\nTo make sure I wasn't tempted later, I took the picture of Ann lying there in a sexy feminine pose, and then I left the camera in the living area. Stepping though the door, I closed it, and moved a couple of steps inside the room. Then I slowly undressed, taking off the tuxedo piece by piece, giving Ann a little show as I moved along. With the room decked out with mirrors along every wall, not to mention the one over the bed itself, Ann got to see a panoramic view of me stripping for her. She was able to look at my entire body, based on where she stared, and the reflections that the angles of the mirrors created.\n\nOnce I was naked, I adjusted the lighting with the dimmer switch, making the room more romantic, if that was even possible. It was a room with one specific purpose in mind, and it wasn't sleeping. It was designed for sex...specifically, romantic sex. Ann and I weren't going to be fucking. We were going to make love.\n\nI crawled up beside Ann, lying down next to her. She put her finger on my lips as she leaned down and pressed her lips on my neck. It was another little hint that she didn't want words...she wanted action. Ann kissed her way down my body, stopping at my nipples, nibbling at them as she sucked and licked around my chest. I never tired of the way she played with them...it was so exciting, and such a turn on to have her give my nipples the same attention I loved to give hers.\n\nAnn left a wet trail as she moved further south on my body, her hand finding my cock. Her mouth found my head, and she swirled her tongue around the tip. My other head was dizzy, watching Ann in the mirror overhead as I lay back and enjoyed what she was doing. As she started to engulf my shaft down her throat, she turned her body, lifting her leg over my head.\n\nMy hand found Ann's ass, and I pulled that silky smooth rump downward, forcing her wet gash over my mouth. Then I rolled her, moving her onto her right side as I went to my left. Holding her leg high with my hand, I licked at her cunt. By changing our position, I was able to look at her naked backside in the mirrors on the far wall, adding a new visual element as our lovemaking. It was so hot to watch her head bob back and forth as she sucked my cock. To be able to do that while I ate her was an incredible turn on. \n\nI found Ann's hard clit with my tongue, zeroing in on it with a designed attack of intense stimulation. She moaned around my shaft as she felt the change in what I was doing, and a minute later, her body went tense.\n\n\"OOOOOHHHHHHHHHHHH!\" she exhaled, bathing my face with her cum, along with her right thigh. \n\nI pushed Ann over again, and spun around. Her eyes were half closed as my cock sank deep inside her in one long, steady push. She let out a little gasp, and so did I. I was balls deep into her, and I realized something that hadn't dawned on me before when I was fucking Molly. I was fucking my second pussy of the day...something that hadn't happened to me since I was with Tina on our own cross-country trip set up by Ann. And this one was set up by Tina.\n\nIt was an odd, random thought, but one that I couldn't get out of my head for a moment. At least, not until Ann reached up and played with my nipples again as I pumped in and out of her pussy in the missionary position. I was staring down into Ann's eyes, watching her watch us in the mirror over my head. She pulled me down farther, hugging me and wrapping her legs around by back, crossing her ankles. She wanted to watch us. \n\nSo did I. First I turned my head to the left, and looked at our profile. Then I looked past Ann's head toward the mirror in that direction...and then I moved my head to the other side of Ann and looked to my right. Every reflection was the same...romantic and sensuous. \n\nWe started a poetic, exotic, horizontal dance on the mattress. Ann and I changed positions, over and over and over again. We'd spend five minutes enjoying each other in one way, and then make a little adjustment to find another way to make love to each other. Once again, we didn't talk...we communicated through our grunts, and our reactions. All of our senses were being used...but we were using our eyes more than normal because of the room around us.\n\nBy the time Ann neared another orgasm, we were both hot and covered with sweat. And that only added to the steaminess of the passion we were sharing with one another. Ann was riding my cock, her hands on my chest. Mine were on hers, pulling gently at her nipples, stretching her tits out. \n\n\"NNNNNNNNAAAAHHHHHHHHGGGGGGG!\" she yelled out, and incoherent babble that said exactly what she felt.\n\nAnn had rammed her pussy down onto my cock, holding herself still while she came...her pussy was doing little spasms, convulsing over my shaft. With her staying as she was, I changed our position again, and resumed fucking her. Or perhaps I was ravishing her, just like she wanted. I took control, taking Ann's body like it was a possession. I moved her around like a ragdoll, and she would moan, or she would giggle...depending on how the position hit her emotionally. I kept the pace strong and steady, changing again every couple of minutes or so...just enough to keep us both energized.\n\nBut that was a losing battle. I was tired, having driven all day. And while Ann had slept most of it, the orgasms she was having were starting to take a toll, and rob her of her strength. We'd been exerting a lot of energy, even though we were making love instead of fucking. The end result was pretty much the same as just raw fucking because of the emotions we were both feeling. \n\nWe ended up in sort of a doggy position. Ann was lying on her chest, her ass in the air a little. I was lying on top of her, my cock slowly moving in and out of her. I was only moving my shaft a couple of inches back and forth, but it felt like I was going all out. We were both building to our final climax of the night...or maybe now it was morning. All I knew was that with each jab of my fat prick into Ann's tight pussy, we were both closer to cumming.\n\nAnn came first, the friction on her clit pushing her over the edge. She screamed into the mattress, her face biting at the sheets as she coated my shaft. She started pushing her hips back into me on each stroke, making our groins hit each other a little harder. And the eighth or ninth time she did that, my balls had had enough.\n\n\"AAAAAAAAAAAAAAHHHHHHHHHHHHHGGGGGGGGG!\" I yelled, collapsing onto Ann's slickened back as those same balls emptied their load into her waiting cunt. I could feel five or six heavy jets of cum leaving my cock, splattering the walls of Ann's pussy. She moaned as she felt herself being filled with my hot sperm.\n\nWe lay together for a little while, trying to gather the strength to move. We were looking at the mirror in front of us, watching each other as we breathed in unison, trying to get oxygen back into our lungs. When my cock softened, I let it slip out of Ann, and I moved back to the side. Ann rolled over, and we hugged...and then we kissed. It was long and passionate....so unlike the one Molly and I had shared when we'd finished fucking after her orgasm. \n\nMy tongue touched Ann's, and the feeling was electric. I felt my cock stir for just a second, but it was just a little jolt. It wasn't going to revive enough for another round...and when I looked in Ann's eyes, I knew she wouldn't be up for it anyway. She'd been fucked...thoroughly.\n\nGetting up, I walked back to the door, opening it. Picking up the camera from where I left it, I turned around to see Ann lying on the bed. Her red, swollen pussy was facing me, her legs spread, but naturally...not in a lewd way. Her dark skin was glistening in the dim lights, sweat making her look like she'd just gotten out of a shower. Her hair was a mess; damp and matted. And between her toned, athletic thighs, the pussy that I'd fucked so well was leaking cum again...just like it had in the limo. \n\nLifting the camera, I turned the dimmer back up, brightening the room. I stood in the same place I'd first picture, the zoom and lighting settings already in the proper positions for the shot. Looking through the viewfinder, I caught Ann's face as I pressed the button. Her eyelids were heavy, her face showing how worn out she was from what we'd just done. It was like she was still feeling her last orgasm as the shutter went off. It was the perfect 'after' picture, to go along with the one we'd taken of Ann before.\n\nI placed the camera back in the bag we were using to carry it, and I put it next to my overnight bags. Walking over to the bed, I grabbed the red comforter, and put it over Ann. Then I got on the bed with her, and picked her up while I was on my knees, before standing up and walking off of the mattress to the floor. I carried my future bride through the bridal suite like we were on our honeymoon, taking her to the living area, where I told her I wanted to sleep for the night. I gently placed her on the large tan sectional couch, in the middle of the pit that was directly in front of the window. Laying her there up against some large pillows, I got in with her and we curled up under the big blanket.\n\nAnn was still quiet as I held her body to mine. We were looking out the big window at the stars under the clear Nebraska sky, listening to the wind slam up against the glass. Ann and I had been like that together in other places, and yet it felt the same no matter where we were. It's so easy to get lost, or feel small when you gaze into the heavens. But I always felt secure, like they were a warm blanket that was always there for me. And sharing them with Ann made me feel even better. Every memory I had of looking up at the stars with Ann in my arms was a good one.\n\nAnn took a deep breath, and let out a very contented sigh. \n\n\"You okay babe?\" I asked, knowing the answer.\n\n\"Yes, baby. This is so amazing.\"\n\n\"What is?\"\n\n\"This whole trip. I'm just a little overwhelmed by everything. Every day has been different, so it keeps me from knowing what's going to happen next. But that's the amazing thing, because each day has also been so perfect. They've been exactly what I've needed each time.\" \n\n\"Well, this week has been pretty special for me too. I love you, more than anything under those stars, Anna.\"\n\n\"I love you too, baby.\"\n\nWe were silent for a good five minutes, staring out that window, alone in our thoughts. Ann's hand had intertwined with mine as I clutched her left breast. She was letting out little moans, letting me know how good she felt in her own sexy way.\n\nFinally, Ann whispered to me. \"Are you still awake, baby?\"\n\n\"Mmm...yes.\"\n\n\"You were incredible tonight. It was so hot watching you with Molly. Thank you for doing that for me.\"\n\n\"You're thanking ME?\" I said, letting out a throaty laugh. \n\n\"Yeah...you knew I wanted us to do a threesome someday.\"\n\n\"Ann...that wasn't a threesome...it was two twosomes. A threesome is when we're all involved at the same time.\"\n\nAnn looked over her shoulder for a second, and said, \"Hmm...I guess you're right. But it was still hot. I loved it.\"\n\nI thought about it for a moment, trying to decide if I wanted to ask a question that had popped into my brain. \"Ann...why did you change your mind?\"\n\n\"What do you mean?\"\n\n\"You told Molly she could do what she wanted, which I think was just sucking me. But then you changed your mind and told me to fuck her. Why?\"\n\n\"Tina,\" she said matter of factly.\n\n\"Tina? What did Tina have to do with it?\"\n\n\"Tina was the reason Molly was with us in the first place. And Tina had told Molly that something MIGHT happen. Molly agreed to be our driver knowing that.\"\n\n\"But something did happen. She had sex with you...which was incredible by the way. And, she sucked me, and I was about to eat her...so why the change of heart?\"\n\n\"I told you...Tina.\"\n\n\"Ann...that doesn't make...\"\n\n\"...and Carol, and Tammy...and Melody. All the girls you fucked on your trip to get your job. I set that up for you, and I know how hard that was. Tina's worked just as hard to do this for us...to make it a real adventure. It's totally different from the one she and you shared. But she's doing it for BOTH of us. Not just me. And that occurred to me when you were about to make Molly cum when you ate her. Molly wasn't just for me...she was for both of us.\"\n\n\"You make it sound like she's an object...some kind of gift from Tina.\"\n\n\"No...that's not what I mean. Molly agreed to do this for Tina, thinking that she might be able to be with BOTH of us. When I told her I wouldn't let you fuck her, I could see the disappointment in her eyes. But she didn't complain. She was happy with whatever we were going to let her do with us. For Tina to find someone that beautiful, and that fun, and that willing to go with the flow...that all hit me when you were eating her. Molly deserved to have you fuck her...and so did Tina.\"\n\n\"Tina deserved me fucking Molly?\"\n\n\"She deserves to know that what she set up was appreciated, by ALL of us in that car.\" \n\n\"Huh,\" I said with a little chuckle.\n\n\"What?\"\n\n\"That actually made sense,\" I laughed again.\n\n\"Of course it makes sense. It's us. Now...let's get some sleep, baby...I'm sure Tina has more big plans in store for us tomorrow.\""
    ],
    "authorname": "mimaster",
    "tags": [
        "sex in car",
        "pussy eating",
        "cum eating",
        "public flashing",
        "photography"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/ann-a-love-story-ch-60"
}