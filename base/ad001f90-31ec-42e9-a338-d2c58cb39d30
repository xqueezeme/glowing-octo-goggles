{
    "title": "Tribal Bonds Ch. 06",
    "pages": [
        "Hello Readers! This is Part Six of a Six-Part story. It takes place in the same universe as my \"Sultanah\" series, but you don't need to read any of that to understand this story (but you really should read it). In Part 1, Kedi was sold into slavery along with a member of a rival tribe, Cilek, but the slavers were seemingly attacked by ghosts. In Part 2, Kedi wakes up surrounded by warrior women who may e ghosts, but are certainly kinky. In Part 3, Kedi learns about the Hayalet and is seduced, in more ways than one. Please, please, please let me know what you think! In part 4, Kedi witnesses a Hayalet wedding and peeps at the wedding night. In Part 5, Kedi watches Cilek join the Hayalet and runs away.\n\nChapter 6: The Words\n\nI could hear the sounds of mirth pouring out of the window behind my head. Despite the cold, the window to the inn was open. The raging fire and the crush of people made it clammy inside. In fact, I could just feel the barest hint of warmth wafting out over my head, where I sat in the mud. I was not welcome inside. I didn't have any money. I didn't have anything of value, save for my body, and I refused to sell it. But I didn't dare leave my spot by the window, right next to the door. Not only was I absolutely dependent on the light and warmth that poured free from the inn's window, but I was waiting on someone inside. \n\nI had arrived at the small inn a few hours earlier. It sat at the easternmost edge of the Hayalet valley, where the river entered. Where I had entered many weeks before as a slave. There had been a caravan of traders lodging at the Inn when I had arrived. I saw the first men I'd seen in weeks. Shivering with cold and relieved that I had made my way out of the Valley, I had approached every man I saw. I had requested transportation East. And North. Back towards the Buz. Being traders, all of the men heading in roughly in my direction were willing to take me along. For a price. \n\nUnfortunately, I had fled from Daire with nothing but a few articles of clothing. The white cloak I had stolen. And a large, warm black cloak that I had stolen from outside of Orospu's longhouse as I had run to the village gate. I had been fortunate, leaving when I did. All of the village Cadilar were still in the longhouse, watching Cilek's initiation rite. By chance, the girls of the village had been engaged in some sort of game, a martial exercise. The women were crowded around the square, watching and cheering. They had not seen me leave the longhouse And they didn't see me a I sneaked towards the gate. There was supposed to be a guard at the gate, but she had evidently wondered over to the village square, to join in the excitement. A rare lapse in discipline.\n\nI had barreled into the forest, in no way certain as to where I needed to go. My only plan was to run as fast and as far as possible before it got dark. I knew that once that Hayalet learned that I was missing, they would set out immediately to find me. They knew the land, they would know I was trying to leave. I needed as large a head start as possible, in order to avoid being caught.\n\nEast. I knew when I left the longhouse that I wanted to head east, to go to the head of the valley, where I'd entered. To retrace my steps to the far North. But I did not know whether I had been taken to the north or the south side of the valley when I had been captured. So, at first, I just sprinted away from the setting sun, knows that I was going east. \n\nThe mountains were steep, and the trees were dense. As I ran, I found that, more often than not, the easier footing tended to be towards the south. While the hills rose and fell, I found that they tended to fall more sharply towards the south. I remembered that, as a slave, I had been camped on the North side of the river. And the Hayalet had attacked from that direction. I gathered that I was in the hills to the north of the valley, and plunged south.\n\nI ran for hours, until my feet ached and my lungs burned. I grew darker and darker as the evening wore on. Eventually, I was tripping over roots and stones. I tumbled once, falling down a six-foot high ledge and crashing into leaves below. I recognized that, despite my desire to get away, I could no longer run safely. I would need to rest. I crawled under the ledge, too tired to even shelter myself or even think. \n\nThe sun woke me early the next morning, and I felt an instant stab of panic. For some reason, I suspected the Hayalet were around me. That they had tracked me during the night and were set to pounce. I honestly did not know what it was that I feared. I suppose part of me figured that, enraged by my breach of trust, the Hayalet would descend upon me and kill me. I knew the were fearsome warriors and, what's more, deeply wary of being exposed to the outside world. It was entirely possible that would die.\n\nBut, in my heart, I knew I was afraid of something much more sinister. I had essentially run away on a sudden, unyielding impulse. I had been scared. Not of the Hayalet, but of my reaction to the Hayalet. The comfort that I felt with them. I believe that I was more frightened that the Hayalet would come and find me, laugh ruefully at my folly, and carry me back to Daire. Because I knew that if I spent one more day with the Hayalet, I would join them. Would dishonor myself and Buzcu by abandoning my people.\n\nWith that thought in mind, I rose quickly from beneath the ledge and quickly began to run towards the south and the east, following the sun and the indications of the tree moss. I was slower today, and more controlled. Some of it was that I was exhausted. But some of it was that the passion that had pushed me from Daire was more controlled now. As I ran, I kept my eyes opened for fast-moving mountain streams, where I would stop and drink. I also looked for berries and edible mushrooms, eating when I could to keep up my strength.\n\nI ran like that for three days. I woke with the dawn, looked for water, and then moved in the direction that I believed would lead to the Valley. Sometimes I moved very slowly, crawling over tall rocks and through felled trees at a snails pace. Other times, I would stumble upon a path. And, moving rapidly, I would cover several miles at a clip. But I never felt comfortable on the paths for long. I knew that I was surrounded by the Hayalet. Behind me, the women of Daire had known for days that I was missing. They would be following me. What's more, I knew there were patrols, somewhere, in front of me. Waiting for their turn to come home. I would run as long on the paths that I felt comfortable. Then, at the snap of a twig or the rustle of a leaf, I would dart back into the woods moving slowly.\n\nOn the third day, near the evening, I suddenly stumbled through a dense copse of trees, and found myself in, what I initially thought was a clearing. But, after a few seconds, my eyes adjusted to the flash of sunlight. I threw back the hood that covered my face and I shielded my eyes with my hand and gazed across the clearing. Except, I realized, it wasn't a clearing. A few hundred yards away I could see, and hear, the river that ran through the center of the Hayalet valley! I could see the mountains in the distance to the south. I had made my way out!\n\nI stood for a few minutes and gazed with satisfaction at the slow-moving river. Not having any idea where I was, and surrounded on seemingly all sides by well-trained warrior women who sought to catch me, I had made my way to the mountains and into the valley. Whatever weakness or softness I had displayed while living with the Hayalet, I had prove myself to still be a Buz. \n\nAfter several minutes of admiring my skill as a pathfinder, I heard something. I am not sure, exactly what it was. My first impression was that it was a horse, whinnying in the distance. But, upon reflection, I couldn't be sure. It might have been a screaming woman. I had I instantly jumped back into the copse of trees that I had escaped. It was still daylight out. There could be Hayalet patrols nearby who could see me. I crouched in the enveloping darkness of the trees for several hours. I never heard another sound.\n\nSighing with relief, I had continued to tread my way to the east, moving slowly. I had remained in the forest, but just barely. I moved along the edge of the valley, with just a screen of trees of protect me. I moved quickly on the relatively flat ground. Plus, the moon was near full, and I was able to walk into the night in the thinner trees. I walked until well after midnight, slept briefly, and then walked again for a few hours in the morning. I saw the mountains to the south drawing nearer and nearer. \n\nAnd then, right before noon, I had stumbled out of the valley, finding the inn. I had escaped. But that had only gotten me out of the Hayalet valley. Tired, hungry, and completely without money. I had many hundreds of miles to go before I returned to the Buz. \n\nFinally, I had found Esek. An elderly trader who hated waking early on cold mornings to feed his horse. Who no longer wanted to lift heavy items. Who didn't want to repair broken wagon parts. He had agreed to take me to Ticari and to feed me along the way (giving me a loaf of bread as a down payment), in exchange for doing all of the work. I had jumped at the offer, agreeing to do any and all work that he needed.\n\nHe planned to leave the next day, wanting to get one last night of drinking. However, our agreement did not include any payment. Therefore, I could not afford to go with him into the inn. I certainly couldn't afford a meal or a room. What's more, Esek's wagon was filled to the brim with goods. As a result, I could not climb inside and sleep. And so, I had staked out a spot next to the Inn door, making sure that Esek did not walk out in the morning, forget about our contract, and leave without me.\n\nIt had been cool the entire time I had been trying to escape from the Hayalet. But this night, the weather had turned to bitter cold. Even with my heavy, brown cloak, I was chilly on the wet ground. I was huddled into a small, shivering ball. I kept telling myself, over and over again, that this was an example of fortitude, that the Buz would appreciate. I was re-establishing myself as a member of the most fearsome tribe on earth. But, the longer I sat, the less I thought about the distance Buz and their austere pride and then more I thought about the cozy longhouses of the Hayalet. The beautiful women with their warm, inviting bodies.\n\n\"Bullshit to your bullshit!\" a voice suddenly called out from inside the inn. Some men had taken a seat at the table by the window, just inches from my head.\n\n\"You don't have to believe just me,\" another, less drunken, voice said, \"Ortagi was with me, he saw it.\"\n\n\"Well bullshit to Ortagi too,\" the drunk said. \n\n\"What did he see?\" a third voice said. He had a commanding voice, like someone who was accustomed to being obeyed.\n\n\"Arayici says he had Ortagi saw something in the Hayalet Valley the other day,\" the drunk voice said. My ears perked up, I leaned towards the window. \n\n\"What?\" the commander asked. There was a pause.\n\n\"A girl. A blonde girl. Coming out of the mountains on the North side of the river,\" Arayici said. I felt my stomach drop and my eyes bulged. I remembered again the sound of horses as I stumbled into the valley.\n\n\"Ortagi, come over here,\" the commander yelled across the room. Then, to Arayici he spoke quietly, \"Don't say a word to him.\"\n\n\"Yes, colonel?\" A new voice, Ortagi, said a few moments later. This confirmed my theory about the identity of the commanding voice. But I was hardly gratified. I held my breath and waited to hear the rest, praying that it was not what I feared.\n\n\"Did you see anything of note in the Hayalet Valley when you traveled here?\" the colonel asked curtly, 'Don't look at him. Just tell me what you saw.\" There was a long pause.\n\n\"Yesterday, in the early evening. We were a few hours ride from here. We had stopped to feed the horses near a bend in the river. And I, well Arayici heard a crack. Like a stick breaking. And, you know how nerve-wracking it is to be in the Hayalet Valley...so we got down low and looked at the direction of the noise. And at first...\" A long pause.\n\n\"What?\" The drunk demanded, \"This isn't story time, give the colonel information.\" I already knew the rest of the story.\n\n\"Yes Sergeant,\" Ortagi said, \"Well, at first...we saw a ghost. You know the legends. That ghosts that haunt the place. I admit that I was scared. We just froze, looking at this white creature standing on the edge of the woods. It moved sort of...ghost-like. Sort of swaying and such. My blood ran cold. And I, well we, we were about the run and then...and then the ghost lifted up her hands and she slipped her hood off of her head. And it was a little blonde girl. A Northerner, I think. I stared for a minute, and went to grab my sword and head towards her. But when I looked back, she was gone. I think he may have been a ghost.\"\n\n\"I had seen a ghost in the Hayalet Valley before,\" Arayici said, \"in the night. Years ago. It looked just like that girl in her robe. But it was dark. And I was scared. We were scared, the whole patrol. But I swear, it was the same.\"\n\n\"Bullshit,\" the drunken sergeant said again. But then there was silence again. My heart was racing. Men had seen me. Soldiers of some sort. I wondered how it was possible that they hadn't recognized me, crouching by the door. Then I remembered I was now wearing my brown cloak over my white garment. I felt slightly safer.\n\n\"Goddamn ghost stories,\" The sergeant said after a long while.\n\n\"Not ghosts,\" the colonel responded thoughtfully, \"A girl disguised as a ghost.\"\n\n\"What difference does that make?\" the sergeant said sharply, there were a pregnant pause, \"sir?\" the sergeant finished, more reverently.\n\n\"Have any of you ever been in the hills on either side of the river? Down in the Valley?\" there was a pause, \"me neither.\" Another long pause. I couldn't breathe.\n\n\"Sir?\" Arayici asked.\n\n\"We have all heard the legends, the ghost stories about the Hayalet Valley,\" the colonel said thoughtfully.\n\n\"And we know for a fact that men go missing in the valley. Or are killed,\" Arayici added.\n\n\"A whole caravan just a few weeks ago,\" the drunken sergeant replied.\n\n\"What if there are bandits up there, in the mountains? Bandits who heard the legends and then decided to take advantage. To use the fear that people had because of the mysterious events that happen there, to control the mountain,\" the colonel said.\n\n\"The ghosts, they don't ever steal anything,\" Ortagi responded.\n\n\"You idiot,\" the colonel said, suddenly heated, \"You just said yourself it was a girl, not a ghost.\"\n\n\"Well whoever it is don't steal anything,\" Ortagi said.\n\n\"I don't presume to know their intentions,\" the colonel said, \"but if there are people up in those hills dressed like ghosts, then they have the advantage. They hold the high ground. They have fear. They have the element of surprise.\"\n\n\"It is a thin reed, sir,\" Ortagi said.\n\n\"We have seen arrows in the valley. Seen footprints. Do ghosts fire bows? Do they walk on wet dirt? There have been many, over the years, who have questioned the old-wives tales about ghosts in the Valley.\"\n\n\"I have questioned it,\" the sergeant said, \"a bunch of bullshit that built up over the decades.\"\n\n\"I think you are reading too much into it, sir,\" Arayici said, \"with respect. This has gone on for hundreds of years. The cities and farms that were wiped from the face of the earth. That happened sir, bandits don't do that.\"\n\n\"Maybe there were...spirits once,\" the colonel said dubiously, \"Or maybe there have just been bandits in the Valley for centuries. I don't know. I just know that I want to know what is happening there.\"\n\n\"What do you mean, sir?\" Arayici asked.\n\n\"It might be nothing. It might be...spirits, I suppose. But there might be something out there. Something living in the Valley. And if there is, that means we can clean them out.\" the colonel said.\n\n\"You want to go into the Valley?\" Ortagi said, nervously.\n\n\"There is no other way to clean it out,\" the colonel responded simply.\n\n\"I ain't never seen a ghost and I ain't never been scared of the Hayalet Valley. Aye, men die in there. But I have always said there must be an explanation. And I think you cracked it, sir. We can ride to Sato, and request reinforcements from the general and then ride in there...\" the sergeant began.\n\n\"Are you stupid, sergeant?\" the colonel interrupted.\n\n\"Sir, I...\" the drunken sergeant responded.\n\n\"We have obtained information that could, possibly, clear the Hayalet Valley of...whatever it is that has infested it. And if we clean them out, that means that a fertile valley, our homeland, can be returned to the Ulus. Can you imagine what sort of rewards would be bestowed on the men who managed that task?\"\n\n\"Yes, it would...\" the sergeant began.\n\n\"Well I can't,\" the colonel interrupted, \"It would be a reward beyond my imagination, and certainly beyond yours. And you want to share it with the general?\"\n\n\"No, I...\"\n\n\"I have 100 mounted men camped within three miles of this inn. We will collect them in the morning, and we will go into the Valley. And, if it is ghosts, we will beat a hasty retreat. And if it is a rag-tag group of bandits who have usurped the Ulus for centuries, then we will take it back, and reap the reward,\" I could hear the colonel's voice glittering with greed. And blood lust.\n\n* * * * *\n\n\"I am Kedi...of the Buz!\" I yelled as loudly as my tender, aching throat would allow, \"I have been at Daire for the last month! Please, I am here to warn you!\" I yelled.\n\nThis had not been my first plan. I suppose, when I started, I didn't have a plan at all. After listening to the colonel and the soldiers from Ulus discussing their plans, I just jumped into action. I rose from my spot on the ground by the inn and sprinted towards the stables. There were a few dozen horses inside and I found the one that looked the fastest. In a matter of minutes, with no food or drink, I was dashing back into the Hayalet Valley, searching for my former hosts.\n\nI pushed the horse hard, forcing him to sprint for long stretches, only permitting him short rests to drink from the river. I knew that I had snuck out quietly, but in the morning there would be 100 Ulus troopers streaming in behind me. I had the advantage of only a couple hours, I needed to warn the Hayalet.\n\nBecause, at that point, there was really no choice but to go back. To warn the women that I had exposed them. The Hayalet, who had freed me from slavery and taken me in when they could have made me a prisoner or killed me. Who fed me, clothed me, and made love to me. I had selfishly escaped them and, as they had predicted, I had put them in danger. If I had an honor, not as a member of the Buz, but simply as a woman, then it was my absolute duty to do whatever was in my power to mitigate the damage I had caused.\n\nGetting into the Valley, however, had been the easy part. The Hayalet had spent centuries learning both the land and the art of deception. Their entire purpose was not to be found. And so, as I moved my horse through the Valley, I kept my eye on the treeline, hoping to see a flash of white. Or anything. But I saw only darkness. I heard nothing but the hoof beats of my exhausted horse. Sometimes, I would leave the horse by the water, and walk over towards the forest, looking inside, hoping to see someone or something. But inky blackness met me at ever turn.\n\nIt was long after midnight when I passed the place where I had stumbled out of the forest two evenings earlier. I could see the bend in the river where Arayici and Ortagi had been standing. For the first time, I reflected on the madness of my plan. If the Hayalet did not want to be found, they would not be found. \"They\" were only seen by the Ulus soldiers because I, for all my delusions about being a tough and resourceful Northern warrior, was stupid. And clumsy. And soft. I had trudged through the forest, loudly. Been discovered. Endangered others. I was a liability. I felt a cold sweat rush over me. I was near panic with shame and guilt. I had put so many good people in so much danger. And I didn't know how to fix it. Each passing moment brought the Ulus closer and closer and closer. Each second lost was a second in which the Hayalet could not plan a response to the coming invasion.",
        "That was the first time I had called out for help. The first time I had screamed out my name and the name of the village. I yelled out the names of women and Cadilar that I knew, hoping that someone would hear me. I knew that my voice would not carry far. The Ulus troops were still some distance behind me. I could yell out now without being caught. But I really wasn't even thinking of that. I was yelling to my...to my friends in frustration and embarrassment. As moments turned into minutes, and then minutes into hours, I grew more and more frustrated by my inability to warn the Hayalet. And more frightened about the consequences. All the muscles in my body felt tense, my fingers grasps the reins of the horse so tightly that my knuckles grew white. Eventually, I was no longer strategically yelling, I just never stopped screaming. Just hoping that constant noise would drive the Hayalet out of their hiding places to listen to me. My heart hammered and bitter tears of frustration ran down my cheeks as I scream for Orospu. For Diger and Damat and even Cilek. Every name I could think of, I yelled out in agony and shame. I yelled until my throat ached and tasted of blood. And still I kept yelling.\n\n\"I am so sorry!,\" I yelled, \"Orospu! It is Kedi! I am...\"\n\n\"Shut up!\" a voice hissed and I instantly became silent. I opened my eyes, and my head swam. I was on my horse and it was nearly dawn. I didn't even know how long I had been screaming. I barely registered that I had heard a voice. I took several deep breaths and turned my head towards the woods.\n\nSuddenly, two dozen ethereal, white forms seems to materialize from out of the forest. I had been looking in that direction just a moment before, and seen nothing. And then, a second later, I was surrounded by the ghosts.\n\n\"My friends!\" I croaked, so relieved I nearly fell from my horse.\n\n\"Friends?\" a familiar voice asked wryly. I turned in the direction of the voice, and saw Omuzlar pull her hood from her head. She was looking at me, her eyes shining with hatred. Soon, other hoods were removed and I found that I was surrounded by people I knew. These were Orospu's wives. And Cilek's new wives. I saw Otusbes and Gul. I saw Geri. The women that I had grown to know the best.\n\n\"Yes...\" I started.\n\n\"Is this a way that you treat a friend?\" Otuzbes shot back, \"To run away from us, to evade us, and then to come back here and scream at us so loudly that every person within a hundred miles would hear you?\"\n\n\"We have heard you yelling for half an hour at least!\" Omuzlar said, \"We have tried to ignore you, but we are frightened of the consequences of your actions, even if you are not.\"\n\n\"God's wounds Kedi,\" Gul said, shaking her head, \"Are you trying to ruin us? We are already out on patrol for a second time in a month as punishment for letting you escape. And now you're making it worse.\" \n\n\"I am trying to tell you something\" I blurted out.\n\n\"We would be within our rights to kill you!\" Otuzbes responded. I didn't even feel fear at that moment. I would have deserved it. I hear other women mumbling that they couldn't believe that I would show myself in that area again. \n\n\"But first I need to help you...\" I stated.\n\n\"We don't need your help,\" Geri said, \"If you have grown hungry or thirsty in your travels, we will give you food. But you have broken your trust with us. You are no longer welcome...\" Every word that Geri said stung. Her implication that I could not take care of myself. Her coldness. Her rejection. I could feel it emanating off the other women as well. But, as much as I knew I deserved her scorn, all of their scorn, there was no time to revel in it.\n\n\"You will soon be under attack!\" I interrupted. And then, brooking no dissent or argumentation, I bowled over everyone to tell my story. About running from the village. Stepping out into the light. Making my way to the inn. The conversation with the colonel. The 100 mounted troopers who were on their way. As I spoke, the women around me grew calmer. Less agitated and upset with me. Not because they had forgiven me. But because they recognized the peril they faced.\n\n\"Gods damn you Kedi and your foolish pride!\" Geri said, when I finished speaking. And I bowed my head. I knew they were all furious with me, but they were warriors. Too focused on the matter at hand to worry much about me.\n\n\"Alright,\" Otuzbes said, and everyone snapped to attention. It was clear that she was in charge, and everyone instantly deferred. \"Kedi has wronged us,\" she said, looking at me. I could not meet her gaze, knowing it was true, \"But we don't know when the Ulus will get here. And we don't have time to punish her or hear her apologies or whatever now. We must act quickly. This is not the first time some enterprising officer from the Ulus has questioned whether he could come into the Hayalet Valley and test our story. Not everyone believes our ghost stories. It has been a long time and this will be a large force, but this is not unprecedented. We know what we must do. We have to regain the initiative and we need to fight.\" I felt the eyes moving away from me as the women of Hayalet turned their attention away from me and over to the Ulus. Their discipline and control was impressive.\n\n\"Give us orders, and we will obey!\" Some of the voices called out.\n\n\"Where did they see you, Kedi?\" she asked. No malice now, she just wanted information. I sputtered, \"There is no time!\" Otuzbes prompted. I quickly got myself under control (realizing as I took a deep breath how very tired I was), and described the location where I had stepped out into the sun.\n\n\"I know that spot,\" Gul said.\n\n\"Good,\" Otuzbes said, \"That will be where they go first. What is around there?\" Gul quickly described the tactical layout of the situation. The location of trees, hills, the bends of the river, the width of the valley.\n\n\"And,\" she concluded, \"if you walk about a mile up into the foothills from there, you will find Yakin's longhouse.\" I saw Otuzbes wince.\n\n\"If soldiers go walking into the woods there, in an hour they will be at Yakin's front door. We need to go, now.\" Otuzbes said. She turned and looked at me, \"Kedi, you will go to Daire, sound the alarm, and tell them where to go.\" \n\n\"I can't...\" I started.\n\n\"I need every warrior with me, we are outnumbered more than 4 to 1. I can't spare a messenger.\"\n\n\"I don't think I could find my way back,\" I said after a long pause, \"I just ran down into the valley. I don't know the way.\" There was silence.\n\n\"I will go back,\" Gul said and I looked up at her, \"I am the fastest here. I can run and tell the others.\"\n\n\"But you are a skilled warrior, we need...\" Otuzbes said.\n\n\"I will fight in her place,\" I said quickly, \"If Gul will lend me her sword.\" This was no mere bravado, or pride, now. This was real danger. A battle was coming. I was volunteering for something real. But my honor would allow nothing less. Still, I heard some murmuring in the group around me.\n\n\"Cadilar do not fight,\" Otuzbes said dryly. I shook my head, \"I am not a Cadilar. I am just a woman of Buz. And I have made a grievous mistake. There is nothing I can do now, to go back and undo what I have done. Though, I wish I could. All I can do is make amends the best way that I can. All I have is this one life. And I will give it to all of you, to make this right.\" Otuzbes looked me over, I could feel the eyes of the other women moving over me. The corners of Otuzbes mouth ticked up and she nodded.\n\n\"Good,\" she said and she took Gul's sword, and handed it to me.\n\n* * * * *\n\n\"Is this the spot?\" It was well after noon and the colonel had called Arayici and Ortagi up to the front of the column. Arayici looked at Ortagi and shrugged. Ortagi craned his head and nodded.\n\n\"Yes,\" Ortagi said, \"We saw her come out, right over there.\" He pointed to the copse of trees from which I had emerged. The colonel nodded. All 100 troopers were massed a few hundred yards away, near the river where their horses were getting a drink. The colonel peered into the forest and nodded his head.\n\nI had thought the anticipation of their arrival would be the most unbearable hours of my life. We had rushed down through the Valley until we had found the spot where I had been seen. Then, Otuzbes had arrayed us to her satisfaction. She sent a messenger to Yakin's longhouse (they were an isolated family living on a farmstead on the edge of the wood), and that messenger had returned with seven of Yakin's wives who were present and willing to fight. That brought our total up to 28, plus me. And then we had simply waited. And waited. And waited. No one spoke. No one moved. It was just a constantly building tension that made my stomach turn and my knees shake. \n\nBut now, our enemies had arrived. War was not exactly what I expected. It was no longer just a story I was telling, but a threat in the flesh. The nervousness that I had been feeling kicked itself up into a new level, far more powerful than I would have thought possible. My bowels felt tight and I could barely breath. I did not dare move a muscle, terrified that I would give away our position and, once and for all, be the downfall of the Hayalet. I just watched and waited for Otuzbes plan to fall into place.\n\n\"Sergeant,\" the colonel said, and the now-sober sergeant saluted.\n\n\"Yes sir,\" he said.\n\n\"Leave, five men to tend the horses. We are heading into the forest and it looks too dense to ride. Tell the others to spread out and bring their swords,\" the colonel ordered. The Sergeant went off to give the orders. Slowly, the men readied themselves, tying up horses and grabbing shields. Eventually, the men had formed themselves into a long skirmish line about thirty feet from the edge of the forest. Each man, shoulder to shoulder, but spread apart. The idea would be, as Otuzbes had predicted, that they would want to cover as much area as possible when they entered the forest. And they would need room to maneuver in the dense underbrush. So they moved in a long, single-file line, all facing the trees.\n\n\"Scouts, forward,\" the colonel ordered. And I saw four men step forward, one on each end of the line and two near the middle. They looked at the colonel, who nodded his head. The four men began to walk forward, towards the treeline. These were the first line of scouts, send to make sure that they were not walking into some sort of ambush. Wise, given the situation. \n\nBut, also exactly what Otuzbes had predicted. No order was given. When the first man's foot crossed the treeline, there was a gentle \"pfft\" sound. At the exact same instant, all four men dropped to the ground, dead. Three or four arrows pierced each of them. There was half a second of eerie silence.\n\n\"Men, we are under attack. Form up!\" the sergeant said. In an instant, the men were about contract their lines into a more defensible formation. But Otuzbes was prepared. Two things happened at once. First, the 12 Hayalet women who were standing directly in the front of the Ulus army, shielded by the trees, took a few steps forward. They were spread widely across the front of the trees, almost as long as the enemy skirmish line (though much less dense). These women had shot at the advanced scouts with arrows, and now, stepping closer, they had notched new arrows, and were firing again at the skirmish line. And again, and again. We had given them all of the arrows. They pinned the enemy line down, keeping them from advancing and maintaining a mystery as to how many soldiers were within the trees.\n\nAt the same time, 13 other Hayalet women emerged from the forest as a compact unit on far left-hand side of the Hayalet line. That is, on the Ulus' right flank. They emerged totally silently, no war whoop. But they sprinted forward in their light armor and and wheeled around towards the Ulus' right flank. And just like that, half of the Hayalet warriors were rapidly closing in on the far end of the Ulus' thin line. They were outnumbered 4 to 1. But on that small spot of the battlefield, it was 12 to 1 in favor of the Hayalet. They crashed into the last man in the line, killing him instantly. The line began to roll up on top of itself.\n\nI was not in either group. Instead, with three other warriors, I was sneaking out around the left flank, but several hundred yards down the river, where we would not be seen. It was me, one of Yakin's wives, Geri, and Omuzlar. We sprinted out of the trees and down to the river. And then we turned and ran back towards the sound of battle, towards the 100 horses that were now alert, and nervous, by the water. \n\nAs I moved towards the horses along the river, I looked up towards the battle. I saw that the enemy line was crumbling, and men were moving around without any sort of discipline or understanding as to what was happening. That was good. It meant that Otuzbes plan was working. I had caused the Hayalet to lose the element of surprise. But by arranging her soldiers expertly when the enemy had not expected us, Otuzbes had reclaimed it. Further, she had managed to mitigate the impact of our lesser numbers, by using her archers to pin the enemy in a skirmish line while a flying squadron hit the flack with tactical superiority. It was a masterful battle plan, thought up on the spur of the moment.\n\nBut it wasn't finished. The four of us rushing along the river still had a job to do. We were to get in among the horses, face them as best we could towards the battle, and send them running with smacks on their flanks. The idea was to send the horses running pell mell into the Ulus' rear. This would maximize the confusion and prevent our enemies from reforming their lines in a more defensible manner.\n\nI ran in the back of the pack, the sword feeling unfamiliar and heavy in my hands. But it felt good now, to be running. To be heading towards the battle. I had been afraid, while I waited in the woods, that when the time came I would be unable to move. The fear had just grown deeper and deeper with each passing moment. My legs and arms felt weak, my head cloudy. \n\nBut when Geri and Omuzlar took off out of the woods, silent and fast, I had followed them. My arms and legs acting on their own according, growing stronger with each passing moment. I was still afraid, but somehow the anticipation had been worse. Now, in the midst of danger, I felt my blood coursing through my veins and knew that whatever was going to happen was going to happen. What's more, the fatigue (and the panic), I'd felt before was fading. I had felt so helpless, out in the Valley by myself. But with the Hayalet around me, I no longer felt lost. The self-discipline I prided myself on was returned to me and I knew I would do whatever I had to do to atone for my mistakes.\n\nThe Hayalet had tied their horses to small bushes near the river, or set their reins with stakes in the ground. We moved in silently among the horses and began to loosen them. The Hayalet women moved much faster than me, their years of training obvious. Still, I helped as best that I could. I mostly pulled up stakes from the ground, afraid that snapping branches would be too loud. We moved along the river, hearing the sounds of battle but unable to see over the horses. \n\nWe had loosened maybe twenty horses when it happened. I was bending over pulling a small stake out of the ground. Geri and Omuzlar were maybe ten feet in front of me, and Yakin's wife was by my side, working quietly. I heard a strange gasping sound and a sickening crunch. I turned to the side in time to a sword passing through the side of Yakin's wife's head, the point protruding disgustingly out of her temple, before being pulled back quickly. Standing on the far end of the sword was one of the five soldiers who had been left to guard the horses. The other four were standing next to him, swords drawn.\n\nIn the next moment, I did four things in rapid succession, without a thought. Without even enough time to feel disgust at what I'd witnessed, or fear about what would happen next. First, I jumped up and backwards, away from the four men and onto my feet. While I was moving, I screamed as loudly as I could, \"Geri! Omuzlar! On me! The enemy is here!\" I then drew my sword and slashed hard to my right side. There was a horse there, still tied to a branch. I brought down the sword swiftly, the blade cutting the animals stomach open, its guts pouring out. The creature made a hideous noise and began to run, the smell of offal and blood filling my nose. And the noses of the other horses. The dying animal bumped into the other horses his blood flowed freely. As the animals began to jostle and the smell of blood grew thicker, the horses began to panic. \n\nI took my sword, laid it flat, and smacked the flank of another horse nearby. Primed to panic, it instantly took off in a sprint. And the other animals around me, smelling the blood and sensing the confusion, began to bolt as well. Soon, the air was filled with the sounds whinnying horses and the sound of hoofs. It moved in a sort of wave, first horses nearest me, and then rippling out and away. The 20 or so horses that we'd loosened ran easily. But even the other horses, in their panic, pulled up stakes or broke branches. In a matter of seconds, they were all sprinting, away from the smell of blood, and in ever conceivable direction. They were not all running, as we hoped, towards the battle. But many of them did.\n\nWhether we were successful in our mission, I couldn't say. In fact, I was no longer particularly concerned about it. I had been trying to buy myself time, more than anything else. And hoping that the five soldiers would run after the horses, try to get them under control. In the midst of the melee, I couldn't tell what was happening. It was everything I could do to avoid being trampled by horses.\n\nBut eventually, the last of the horses in the herd around me (save for the disemboweled one that was lying on the ground a few yards away) were gone. I was unhappy to see that the five soldiers had not budged. They were still standing over the body of Yakin's wife, one with a sword covered in blood and brain and they were looking at me.\n\nThe only thing that gave me strength was the fact that, in the interval, Geri and Omuzlar had retreated from where they were located and were now standing on either side of me, their swords drawn. We were outnumbered, five to three, and the men advanced on us. The fear returned now. Not the crippling, frozen sensation I'd had in the forest while I waited. But real, nonetheless. Battle was on hand.\n\n\"Good job with the horses,\" Omuzlar said, \"If we die now, we have at least done our duty.\" I felt the word 'die' land in the pit of my stomach.\n\n\"I would rather not die,\" I said, trying to sound flippant, but sounding (as I was) serious. Geri snorted.\n\n\"Me neither,\" she said, \"Omuzlar and I are better trained with the sword. Stand with your backs to us and make sure that none of the men can take us from behind.\" Geri instructed. I instantly complied, taking a half step back and turning around. \n\n\"Alright girls, fun's over,\" one of the soldiers said, and I could hear them closing on us. And suddenly there was a clang. I turned to look over my shoulder and saw that one of the soldiers and brought his sword down rapidly, but that his chop had been parried neatly by Geri. Omuzlar turned to stab underneath of the man's armpit, where he was not protected, but another soldier blocked the the move. \n\nI wanted to continue watching, but out of the corner of my eye, I saw one of the other soldiers worked around to the side, trying to get behind Geri and Omuzlar. I was not a skilled sword-fighter, I had little experience in it. I had begged to be allowed to practice, but was only able to use a sword by myself, when my father was sleeping and did not notice his weapon was missing. I had tried to train myself. Now, I was tasked with fighting trained soldiers.",
        "Rather than attempt to fight a more skilled warrior on his own terms, I decided to allow Geri and Omuzlar do the work of defeating our enemies. My job would be to hold the other soldiers off while they fought, to prevent them from getting around behind Geri and Omuzlar. I would not be trying to defeat them, just to distract them and giving the others the chance to fight on an equal level.\n\nTo that end, I slashed out quickly at the solider who was trying to move around behind Geri and Omuzlar. It was a wild slash, but the solider was forced to jump backwards. I turned the other direction, saw that another solider was coming around on the other side, and repeated my tactic, against successfully. The two men circled around wider, and then both came at me together, head on. Now Geri and Omuzlar were, together, fighting three soldiers, while I had two facing me.\n\nMy stomach clenched and my muscles tightened as the two soldiers neared me. They moved in unison, their swords up for protection. But, despite the fear and despite being outnumbered, I acted. I feinted towards the soldier on my left, swinging at him with no intention of hitting him. The solider on the right took a step towards me. I instantly shifted my weight back in that direction, launched myself on my left foot and sent my right foot crashing between the soldier's legs. I felt my calve crash into his undercarriage and heard him let out a pained whimper. He collapsed onto the ground, dropping his sword and grasping his cock. I dropped to one knee, my hand grasping into the dry sand on the edge of the river. I pulled up a handful and turned to the other soldier, who was moving quickly towards me. I threw the same quickly at the man's face. He screamed and reached his hand towards his eyes as the sand hit. He took a step back. \n\nI smiled in triumph, having bought myself a few seconds while outnumbered. But then I heard a piercing scream and felt a hard smack against my back. I tumbled forward from the force and then rolled to the side. I rose up and quickly turned to see what had knocked me over. I saw Omuzlar, lying on her back. There was a sword through her calf, planted in the ground after passing through her. Her foot was already coated in blood. \n\nIt was then that Geri made a fateful mistake. She turned, just for a second, to watch as her wife and sister collapsed onto the ground. The soldier who had pierced Omuzlar saw her look, and quickly removed the sword (Omuzlar screamed again), and slashed up quickly at Geri. Geri parried the slash, but had to turn to the side to catch it. One of the other soldiers stepped forward quickly, and drove his sword into the side of Geri's breast, through her ribs, and into her heart. \n\n\"No!\" I heard a voice scream, and first thinking it was Omuzlar, but then realizing it was me. Blood pooled at the corners of Geri's lips and she fell in a heap onto the ground. The soldier swiftly pulled the sword from Geri's body. Omuzlar was writhing on the ground next to her wife's corpse, grasping at her own calve and screaming in pain and loss. The soldier who had killed Geri turned towards me, his blood on the blade. He started moving towards me. I grasped my sword tightly, felt blood rising in the back of my throat.\n\n\"No, wait,\" a gasping voice behind me said. I heard him pant a few times. It was the soldier I had kicked in the groin, rolling over onto his hands and knees, \"No, wait, that little blonde bitch is mine!\" he said. The soldier moving towards me stopped. He actually took a few steps back. The other soldiers moved back as well. I turned and faced the kicked soldier who wanted to kill me, raising my sword. Instinctively, I moved so that I was standing next to Omuzlar's body, ready to protect her as best I could.\n\nThe man who I had kicked was still slowly getting to his feet. For a brief moment, I was able to turn and gaze at Geri, lying on the ground. Her eyes were still opened, but she looked peaceful. Beautiful. The sweet girl who had welcomed me into the Hayalet with her warm body. A woman I had feared because of her beauty. A woman who I had hurt, and never properly apologized to. And now she was dead. Because of me.\n\n\"I should kill 500 Ulus warriors to avenge you. But I am not Buzcu. Still, I am Buz. His blood flows in my veins. And I am Hayalet. Their love fills my heart. And I swear to Buzcu and to you that for every 100 he killed, I shall kill one. I shall kill five of the enemies of my clan. Of my family. Five of the Ulus,\" I said to myself quietly as I looked at Geri. \n\nThe words. The warrior words of revenge. Unbidden at my lips. But spoken honestly. I was Buz. Their blood flowed in my veins. But I was Hayalet too. These were the people who had brought me in. These were the people who treated me with respect. Who wanted me to be a part of their society. These were the people that loved me. They were my family. And they were under attack. And I knew my duty. Not for hatred of the Ulus (as I had once hated the Kabile), but out of love for those who loved me.\n\nIt is hard to explain what happened to me in that moment. It was as though, by accepting that I belonged with the Hayalet, that I felt...more like I was part of the Buz than I had ever felt before. Not the bluster and desire to be a Buz. But the real thing. The hardened warrior of the far North. I felt the blood quicken in my veins, felt my mind clear. My muscles felt stronger, quicker. I felt that Buzcu...his spirit was inside of me. I knew, in that moment, that I could kill 500 men to protect the Hayalet and to avenge Geri.\n\nI reached down into the dirt with my left hand and grasped Geri's sword. I now had two. I turned and sprinted towards the soldier I had kicked as he rose up onto his knees. His head flicked up as he heard me and he started to rise more quickly. The soldier with sand in his eyes, sensing that I had taken an unfair advantage with my sudden burst of movement began to close on me from the side. Without turning, I lifted Geri's sword out straight in front of me and lurch hard to the side. The sand-eyed soldier was caught by surprise and he sprinted, at full speed, into the blade. It glanced off his armor, slide up his chest, and then buried itself in his throat. I dropped Geri's sword.\n\nThe kicked soldier was now on his knees facing me. I dodged to the side opposite his sword moving quickly. He slashed at me but I dropped onto the ground, and rolling over so that I was behind him. I lifted my sword quickly and brought it down across the man's ankles, his Achilles tendons snapping and rolling up his thigh. He screaming in pain and pitched forward onto his stomach. I rose quickly onto my feet behind him and buried my sword in the base of his neck.\n\nI was now facing the three remaining soldiers, who had been at my back before. Their eyes were wide with surprise, maybe fear, at my suddenly rapid motions. But they were moving towards me, closing. Rather than wait, I again moved quickly, running towards the man in the middle. Like the Hayalet, I attacked when outnumbered and confused my enemies. The men were walking passed Omuzlar, who was still lying on the ground. The one on my right was closest to her and did not see her wounded leg rise as he went to step over. But I did. Omuzlar was looking at me as she tripped the man. He stumbled forward and I launched myself in his direction, thrusting my sword forward. My aim was perfect. As the man fell forward, his face rushed into my blade, shattering his teeth and the blasting out of the back of his head. I jumped to the right, sliding my sword out of the man's head and turning to face the two remaining soldiers.\n\nThe two men were looking at me, but did not dare approach. I could see their hands shaking a little bit. I had already killed more than their remaining numbers. I did not know what I was going to do next, did not know what approach to make. But, for some reason, I felt no anxiety at that prospect. I felt no discomfort of any kind, at all. I was breathing heavily, but easily. My body felt hyper-alert, aware of everything. The world moved slower. A feeling of pure power. \n\nJust then, one of the men, the one on the right, stole a half-glance at the man on the left. Just half a second, I think to confirm that his comrade was still there. My body reacted before I even understood that the man had looked away. I lunged on instinct. Or something beyond instinct.\n\nThe man was left handed, and he was gripping his sword tightly in the hand closest to my own sword. Rather that jump directly towards the man, I circled in rapidly towards the outside of his sword hand. I raised my sword as I did so. The man's focus began to return to me as he glanced away from his fellow soldier. I stepped forward and brought my sword down rapidly. The man tried to react, lifting his sword up to blow the blow. But his attention had been split, his reflexes were a half second off. My sword came down on the man's wrist, slicing so hard that his hand (and sword) dropped easily to the ground in one fluid motion. Blood spurted from the stump and the man began to scream. But only for a moment. I lifted the sword up and drove it into the man's temple, silencing him instantly as he fell to the ground.\n\nI looked up and saw the one remaining solider. He glanced at me for a second, wide-eyed. He made a strange sound in the back of his throat. The sword dropped from his hands, clattering on his fallen comrade's armor. The man turned and ran. \n\n\"Four,\" I said to myself, realizing that I was one shy of my pledge. Beyond that, it was beyond my power to let this one, scared soldier run away. No one could survive this battle. No one could be allowed to return to the world to tell the tale. \n\nI jumped awkwardly over the fallen body of my most recent victim and began to sprint after the man. He had a split second head start on me and, what's more, he was running for his life. As he ran, he stripped off portions of her armor, growing lighter with each passing second. He didn't look over his shoulder at me. He just ran, as fast as he could. I don't even think he knew what direction he was going. He weaved around horses, bodies, and objects, changing directions sharply and seemingly without reason.\n\nBut I had my own internal drive, pushing me forward. My desire for revenge, my need to prove myself to my people (whoever they were). I gripped my sword loosely, but firmly, and ran. I did not attempt to keep up with the soldier's wild motions. I controlled my stride, ran consistently, breathed deeply. Soon, despite his fear, the man began to tire. He slowed and the distance that had grown between us began to recede. He tripped slightly, regained his balance and kept running. Now he looked over his shoulder at me, saw me gaining, and tried to push himself harder. I kept closing the distance.\n\nI don't know how long we'd run when I caught up with him. It did not feel long, but my lungs ached and my throat felt dry and cracked. My knees were weak. But the man ahead of me was worse. He was limping now, after his trip, and I could hear him crying. I lifted my sword and swung sharply. I felt my blade tear through the man's shirt, but not scratch his skin. He pushed a little harder, separated the distance from me again. I pushed harder. I swung again, aiming down. I felt the blade crash into the man's ankle and heard him howl in pain. He tumbled down onto the ground and I nearly tripped over him. I heard him crying out, perhaps for mercy. \n\nExhausted, I dropped to my knees on the ground beside the man. I gasped for breath, surprised by how weak and tired I felt. The man said something to me but I ignored him. I quickly raised my blade and brought it down sharply in the middle of his chest. He quickly grew quiet and I, with difficultly, wrench the blade from the man's ribs.\n\n\"Five,\" I said to myself, and I tilted my head back, looking up at the heavens and breathing in and out heavily. The sky was a light, delicate blue. Nothing like the slate gray sky of the far North. Not a single, snowy white cloud to be seen. I felt the sense of power slowly easy out of me, as my breath returned to my lungs. My arms felt weaker, my fingers limp. I don't know that I could have stood if I wanted to.\n\n\"Five for the Buz,\" I said to myself, and this time I heard the words. They echoed slowly in my brain, along with the sound of the air rushing into my lungs. Those words seemed to simultaneously drip with, and be devoid of, meaning. They echoed on and on in my brain, growing quieter and quieter with each passing repetition. Until finally, there was silence. Just the sound of my breathing.\n\nAnd, in that moment, I sensed that a debt had been paid. A tether had been snapped. The last connection to a place and a people that I had once considered my own was gone. I thought now, briefly, of the far North. Of the frozen rivers and the wide, white plains. I thought of my family. The father who had sold me. The brothers who I had lost. It felt like looking back on a different lifetime. Having the memories of a different person, a person I didn't even know. I had closed out that portion of my life without even realizing that I had done it. I had been baptized in blood into another life.\n\nWhat was strangest about it was what I did not feel. I felt no sense of loss at my feelings. I had clung so tightly to my identity as a Buz for so long, I defined myself first as a Buz. But now that name, my former tribe's name, sounded strangely hollow to my ear. It wasn't just that I no longer felt any real affection for the Buz. I no longer felt any resentment either. I no longer felt angry that they never listened to me, that they were ashamed of me, that they'd cast me away. I felt absolutely nothing. And this lack was disturbing and confusing. I could not, at that moment, figure out what it meant.\n\n\"Kedi...\" A voice said, nearby. It shook me out of my thoughts and I turned and looked. I saw on the ground, just a few yards away from me, Omuzlar sitting in the grass, still bleeding. She was next to her dead sister, Geri, now. \n\nFor a moment, I froze. The facts could not arrange themselves in my brain. \n\n\"Kedi...\" Omuzlar said again, and her eyes locked on mine. Then I recognized the reality of what I was seeing. I was back where I had started. With the women I had been fighting to protect. The soldier had run me in a circle! He had brought me right back here.\n\n\"What?\" I asked, dazed by my realization. To have run so far and ended up right here, what did it mean? But Omuzlar didn't speak, she just lifted her hand and pointed.\n\nI spun quickly, looking in the direction of her finger. In the near distance, I could see figures moving towards me. Dozens. My eyes were stung with sweat and it had foggy as the battle raged. I could not make out how many. But they were moving slowly in my direction. Towards the river. Towards Omuzlar and Geri.\n\nThere were no longer any sounds of battle, beyond the cries of the wounded. no clash of swords. It was all over. The soldiers coming towards me were the victors. And there was a good chance they were coming to take my life. There was fear then. And the sword felt limp, worthless in my arms. I thought about toss the sword to my right and then turning, running to the left as hard and as fast as I could, hoping for freedom. \n\nBut, despite the fact that she did not speak again, I could sense Omuzlar behind me. And Geri too, though dead. I could sense her presence there. If I ran, they would be exposed. If I stayed, I could not fight all the enemies arrayed against me. But Omuzlar would die with honor. And Geri would know that her body was protected as her spirit moved towards the gods.\n\nThese thoughts brought an intense wave of emotion over me. A fierce level of protectiveness, like a mother feels for her children. I felt my lip curl back in anger, an anger that burst upon me in full force. Anger at Geri's death. Anger at the danger facing Omuzlar. The feeling was both familiar, and unfamiliar at the same time. I could sense my attachment to these people as the same sort of attachment I had once given the Buz, a dedication to something larger than myself. But it was so much deeper, so much richer than anything I'd experienced before. This was not an unrequited devotion, I was not an embarrassment to my new-found friends. They had cared for me when they had no business doing so. And they needed me.\n\nSlowly, the strength that had drained from me after the battle began to course through me again. My arms tightened, my fingers found my blade and grasped around them. I rose to my feet, my knees feeling strong, stable. I felt fear. But also the courage to stand anyway. To protect Omuzlar and the body of Geri. To protect the members of my tribe. Not like a Buz anymore. Something else.\n\n\"I am Hayalet! I am the Ghost, returned from the land of the dead to seek vengeance for my fallen comrades. Fight me if you dare!\" The line of warriors halted. I felt my heart pounding in my chest. I gripped my sword, knowing that even with my strength returned I could not take them all. But I would take some. I would atone for the wrong I had done. And I would earn my place in the Hayalet Valley.\n\n\"I wouldn't dare,\" a voice said. A familiar voice. And out of the shadows stepped Otuzbes. And then more and more of the Hayalet. Coated in blood. Their faces glowing. Victorious.\n\n\"Oh thank the Gods,\" I said and, exhausted, collapsed onto the ground.\n\n* * * * *\n\n\"Kedi, the Warrior Cadilar, I present to you Yakin, and her daughter Kapat,\" Orospu said, standing in the doorway to my longhouse. My longhouse. It still felt strange to think of it as such. But much had happened in the weeks since battle.\n\nThe immediate aftermath of the battle had, in itself, been a whirlwind of activity. The Hayalet had, of course, every reason in the world to be angry at me. I might have killed five of their enemies, but that had only been necessary because I had revealed their whereabouts. However, the Otusbes' quick thinking and tactical skill had turned a possible disaster into an unparalleled triumph.\n\n\"There are times,\" Orospu stated when I returned to the village, \"That the old stories begin to fade from memory. When one or two or even a dozen traders disappearing can cease to have the desired effect. We had been approaching such a moment for a long time. More and more men have been traveling in the Hayalet Valley. A time was coming when an example must be made. And 100 elite, dead soldiers is exactly the kind of example we would like to make. We did not choose the moment, but we seized it.\" And so, the Hayalet were inclined to forgive, or even praise, my recklessness as having a benficial effect. \n\nI had returned at the head of the column of soldiers and the women and Cadilar of Daire had listened spellbound as I, and the soldiers, recounted our daring actions. I learned much about the ebb and flow of the battle. Soldiers described individual feats of honor or bravery. I heard about how the leaders of the enemy force were chased all the way to the river and drowned beneath the waves. In fact, the enemy had been so severely taken by surprise that, despite our small numbers, they'd been quickly overwhelmed. The greatest danger was that one or more solider would return to his horse and make an escape. Luckily, those of us who had freed the horses had made that impossible. All the enemy troops were accounted for. And dead. Burning now, their corpses to feet the river.\n\nWhen the size and scope of our victory became apparent, the Hayalet rejoiced. They, spontaneously, agreed to forgive whatever transgression I had committed by escaping and exposing their location. I was honored as one of the few Cadilar in the last thousand years to act as a warrior, and Omuzlar recounted the nature of my military prowess. In fact, in the warm glow of triumph, Orospu had, again, offered me membership in the Hayalet. ",
        "\"She is already Hayalet,\" Otsubes said, \"She is baptized in the blood of our oldest enemy.\" And, without hesitation, I had agreed to go through any ordeal that was necessary to take my rightful place among my people. It was strange, I had never even made a decision. I had simply...become Hayalet. The ceremony, when it came, was a mere formality. I had shed my old allegiances and taken on new ones organically. I no longer even felt any animosity towards Cilek, she was my countrywoman now.\n\nNor did Cilek feel any animosity towards me. I was not the one to inform her that her new wife, Geri, was among those killed. Omuzlar had done so, as is the tradition of the tribe. I had found her, and apologized for my role in Geri's death. We both sensed the depths of my apology, we both knew that there had been something between me and Geri. But Cilek, too, seemed transformed by the battle. She was not enraged by my actions, nor was she jealous of my affection for Geri.\n\n\"My wife was a warrior. She died bravely in battle,\" Cilek had said stoically (though I sensed pain behind her eyes), \"I, and my other wives, will miss her greatly. But you gave her the opportunity to to die with honor. We cannot ask for more.\" \n\nGeri, of course, had not been the only Hayalet to fall in battle. There were a total of 8 deaths in our tribe, falling mostly on the village of Daire. And so, amidst the rejoicing, there was also sadness and mourning. The Hayalet did not seem to sense any contradiction between the two, very different emotions. Sometimes laughing, sometimes crying. A victory feast held a week after the battle included drinking and games. But also tearful eulogies and a large, memorial bonfire. \n\nThe final ceremonies honoring the battle and its dead had barely been completed when I was finally initiated into the tribe. And then given a large, empty longhouse in the village of Daire. The only unoccupied home remaining. Orospu had simply declared that it was mine. Before I'd even had a chance to joke that it was far too much room for me alone, Orospu was putting the rest of my life in order.\n\n\"You must marry now. You are old enough to have two or even three wives. You have no parents here, so I will handle the negotiations. Yakin is searching for a wife for wives for her eldest daughters.\" I had not had time to object, even if I had wanted to. It was strange. All of these customs were foreign to my upbringing. The celebrations, the funerals, the establishment of households, and marriage. But somehow, I felt like I understood it. Like all of it made sense. I belonged here and was more than willing to follow whatever the dictates of my culture demanded. None of this felt strange, foreign, or unpleasant. It was as it was supposed to be.\n\nAnd that was how I found myself, standing in my very own longhouse, looking at my new mother-in-law and my fiance, the night before my wedding ceremony. Yakin, my soon-to-be mother-in-law had owned an isolated longhouse closest to the battlefield. One of her wives had fallen near me in battle. Despite that, according to Orospu, Yakin was grateful to me. Grateful that I had returned and warned the warriors to protect her home. And grateful I had given her wives the opportunity to fight for the Hayalet. Orosupu had easily conducted negotiations and I was marry five, or perhaps six, of her oldest daughters. Kapat was 20 years old, the only one yet of marrying age. Yakin had never had a Cadilar daughter and, as a result, the fact that I had no sisters to marry into her family was not a hindrance. Yakin had long searched for a match for her family under those trying circumstances.\n\nI had never actually seen Yakin before she stepped inside of my longhouse. I had learned, just that day, that this night-before meeting between a Cadilar, her cadilar mother-in-law, and her fiance, was as much a part of the wedding ceremony as anything I had seen when Damat, Sonraki, and Daha were married. In fact, it was arguably more important. For this was the process by which the marriage contract was truly sealed. This part of the wedding had been concealed from me, as an outsider. And now, as a Hayalet, I was participating.\n\n\"Good Evening, Kedi the Warrior,\" Yakin said, 'It is an honor to be in your home.\" Yakin was an attractive woman in her early-forties. She had long, dark hair, a long thin, nose, and wide eyes. Her neck was abnormally long (though not grotesque), She had small breasts, narrow hips, and svelte thighs. As with many Cadilar who lived on isolated homesteads in the forest, I heard that she had a prickly personality. But this was a largely ceremonial encounter. I would not truly get to know her or her daughter until after the marriage.\n\n\"It is an honor to welcome you and your lovely daughter,\" I said and turned towards Kapat. My heart climbed into my throat. She was an exceedingly lovely girl. She looked very much like a younger version of her mother, though her eyes were flintier and her breasts larger. My fiance blushed and looked down as I gazed at her.\n\n\"The introduction is complete, I leave you now,\" Orospu, my surrogate mother, stated, and she slipped back through the curtain and out of my longhouse. Now I stood alone with two strangers. Luckily, there was a set protocol to this meeting. Orospu taught me all of it.\n\n\"In accordance with the negotiations conducted with your...mother Orospu,\" Yakin said, stumbling a little over the formula's words, as they did not fully apply, \"I offer Kapat for your approval.\" Kapat looked sideways at her mother for a moment. Yakin smiled nervously and nodded. This was a first ceremony for them as well. Kapat took half a step forward, in front of me.\n\n\"Tell me of her,\" I said.\n\n\"Kapat is my eldest daughter. She is shy and reserved around strangers, but warm among family. She is quick-witted and humorous. She is fiercely loyal and commands the respect of her sisters, your future wives. She is a trained warrior who is prepared to go to battle for the Hayalet, though she stayed home to protect me during your battle. She has heard of your exploits, and desires to make children with a warrior Cadilar,\" Yakin said. These were not set lines, this was her true assessment of her daughter. I looked at my pretty fiance, I felt that I could see the spark her mother referred to, flashing in her eyes.\n\n\"She is also beautiful,\" Yakin said softly. \n\n\"I cannot see her to approve of her,\" I said, reciting the lines that Orospu had taught me.\n\n\"Remove your robe,\" Yakin ordered gently. Kapat gazed down at her feet, and then, slowly, up at me. I smiled warmly at her and nodded. I was already naked, being in my own home. Kapat did not speak, but instead, loosened her robe and let it fall in a pile at her feet. My breath caught in my throat. Her body was far more lovely than I'd expected. Naked, her neck did not appear long (like her mothers), but instead, graceful. Her breasts were full and high. Her waist was narrow, her hips wide. Her legs were slender. Her cunny was a narrow, pink slit with a large, hard clitoris at the crest. She was shaven cleanly.\n\n\"She is, indeed, beautiful,\" I said, my voice catching in my throat. It was a line I was required to say, but it was absolutely the truth, \"But young. And inexperienced. It is she prepared to be a wife? Does she know what it means to please a Cadilar?\" I asked.\n\nAt first, Yakin did not speak. Instead, she also began to loosen her robe and, in a moment, it too fell to the floor. I saw her body, still quite beautiful despite her age. Her neck, somehow, looked longer. Though it gave her and interesting, attractive appearance. Her breasts here still firm because of their small size. Her hips were very wide, her legs toned. Between those legs was a small, soft cock, resting against her thighs. She too, was shaved.\n\n\"Kapat, show Kedi what I have taught you since your 18th birthday,\" she said. Her eyes flashed up to me, \"You are in luck Kedi, my beautiful daughter has gone longer than I would have liked without marrying. I have taught her much.\" I nodded along, my eyes fixed on the two beautiful women before me, mother and daughter.\n\n\"Kapat moved quickly, clearly used to obeying her mother. Kapat moved so she was standing directly in front of her mother. She did not hesitate, but instead began to drop to her knees on the floor. As she lowered herself, Kapat's hands rose from her sides. I watched as Kapat's delicate fingers came down gently on the sides of her mother's breasts. As Kapat fell to her knees, her palms moved slinkily down her mother's body, over Yakin's waist and hips. As Kapat settled onto her knees, her hands rested on Yakin's thighs.\n\nIn the weeks since the battle, I had learned about just how much the Hayalet had hidden from me when I was a mere guest. Diger and Alti had, of course, given me a bit of a hint. But I had learned so much more. I had learned that upon reaching the age of 18, the Hayalet became full members of the tribe's society and their mothers' household. And being a part of the household meant initiation into the family's sexual life. Young women and young Cadilar prepared for marriage by sleeping with their mothers, their aunts, and (if any were available), their older sisters. Young women were forbidden from taking a cock into their cunnies until they were married. But any other contact was permitted. Encouraged even. And Kapat was somewhat older than most girls preparing to marry. She had been...taught for months and months.\n\nHer experience was immediately obvious. As she settled onto her knees, the heels of her feet settling into her surprisingly ample young ass, Kapat began to lean forward. Yakin's cock was still soft, resting against her thighs. Kapat's lips spread and her head dropped. I leaned in closely, not even managing to breathe, as I watched. I had, in the weeks since the battle, seen many scenes that would be taboo for the Buz. But I never ceased to feel the same, forbidden excitement. As Kapat's lips closed around her mother's foreskin, I felt a chill run down my spine. And as Kapat sucked in gently, I watch the tip of Yakin's penis slip into Kapat's mouth. \n\n\"Oh Kapat,\" Yakin groaned as Kapat sucked more and more of her mother's soft cock into her mouth, \"I will miss you so much.\" As Yakin spoke, I could see tears well in her eyes. It was a mother-daughter connection, but a lover's connection as well.\n\n\"You may visit at any time,\" I said and I meant it. I saw Kapat's eyes flicker to the side slightly (even as her tongue began to swirl around the tip of her mother's cock). It is hard to explain it was a look of...gratitude or appreciation. I sensed in that moment that Kapat would miss her mother as well, and she appreciated that Yakin would remain a part of her life. With that, Kapat's eyes closed and her mouth pressed fully forward. Kapat's nose was now pressed into her mother's stomach, Yakin's balls rested on her daughter's chin. Kapat shook her head side to side.\n\nAfter a moment, Kapat began to move her head back. I saw Yakin's cock slip from between her daughter's lips, the shaft looking thicker and harder than before. Soon, only the bulbous tip of Yakin's penis remained in Kapat's mouth. And then Kapat was pressing forward again, taking her mother's cock smoothly and easily into her mouth. I could see Kapat's tongue working her mother's shaft. And then out again, in again. Each time Kapat bobbed her head on her mother's cock, the cock seemed harder and longer than before. But Kapat did not seem to notice. She continued to bob her head evenly and quickly. I could see Yakin's cock pressing deeper and deeper into Kapat's throat. Kapat didn't hesitate, she didn't even gag. She simply pleasured her mother with the same level of obedient enthusiasm with which she started.\n\nIt was evident that Kapat was skilled at the task she was completing. I could tell just from looking at Yakin. And not just her increasingly hard cock. As Kapat sucked her mother's cock, Yakin's head was thrown back, her mouth opened. I could hear a low groan from Yakin's throat. Yakin's cheeks were red and her nipples were hard. Well, at least one nipple was hard. One of Yakin's hands was grasping her own breast. The other breast was free, because Yakin's hand was resting on Kapat's head. All of the muscles in Yakin's body looked tensed. \n\nDespite the fact that her role was simply to give pleasure, it was clear that Kapat was enjoying herself as well. Her back was arched and her hardened nipples stood out proudly on her chest. Her knees were spread wider now on the floor and I noticed that one of her hands had slipped from her mother's thighs. I could see Kapat's hand between her legs, rubbing at her clitoris vigorously. I swear, even from several feet away, I could smell the delicious scent of her cunt.\n\nIn fact, even as a spectator, I felt like was in the midst of everything. There was no distance between me and my new family. I could see everything, feel everything, smell everything. My cock, I think, had grown hard even faster than Yakin. My own hand had found my hard nipples and I could feel my heart thrumming beneath them. My breathing was shallow, my eyes aching because I couldn't bear to blink.\n\n\"Oh gods!\" I heard Yakin groan, as her her head snapped forward, \"she is too good. I never last long.\" Yakin's hand slipped from her breast and joined the other on Kapat's head. Kapat thrust her head forward, taking her mother's cock all the way into her throat and holding it there. Yakin's muscles tensed all over and she continued to thrust into her daughter's throat. Kapat's hands wrapped around her mother's hips and ass, pulling her in deeper. Yakin began to groan louder and louder and louder as her body grew stiffer and she rose onto her tiptoes.\n\n\"Oh shit!\" Yakin groaned loudly and her body began to shake. Her fingers tensed around Kapat's head, but Kapat didn't flinch. Her throat just continued to undulate around her mother's cock. Finally, Yakin's body went limp and she dropped down from her toes. Yakin took a staggering half-step backwards and I watched her softening cock slip from Kapat's soft lips. Kapat's mouth remained slightly open.\n\n\"Show her,\" Yakin said, \"Show Kedi how much you enjoy my seed.\" Kapat turned her head towards me, smiling with her eyes. Her mouth opened wider and I leaned in towards her. It was dark in the room, and darker still in the warm cavity of Kapat's mouth. But I could see the pearly liquid of Yakin's seed sitting on Kapat's tongue. There was a large amount of it. It coated her teeth. I heard a low hum and Yakin's seed began to bubble and boil in Kapat's throat. She was gargling her mother's cum! The seed bubbled thicker and messier, coating Kapat's lips. Kapat seemed to groan with pleasure, I could hear her breathing sharply, pulling the sent of her mother's seed into her nose. The seed was about to bubble out, over her lips and down her neck when Kapat suddenly closed her mouth. I saw Kapat's throat working as she swallowed down the frothy liquid. Kapat opened her mouth again, showing me that she had drank it all.\n\nI could not remember seeing anything so beautifully depraved in all my life. And I was leaning so close that I could smell Yakin's seed on her daughter's breath. I don't even remember making a choice. I suppose I didn't. My hand acted on its own, falling from my breast and then grasping around my achingly hard cock. I stroked twice.\n\n\"No!\" Kapat said, more forcefully than I'd expected her to be able to speak. I froze. Her hand shot out and grasped around my wrist. Her palm felt soft and hot. I looked down at her hand and then up at her eyes. \"You cannot enter my cunny, not until we are married,\" Kapat said in a soft voice, \"But there is no need for you to pleasure yourself.\"\n\n\"She has been practicing something for you,\" I heard Yakin say. I saw my soon-to-be mother-in-law sitting on the ground, panting and recovery from her orgasm. She was watching me intently. I turned back to Kapat.\n\n\"Have you...prepared something for me?\" I asked. Kapat, who just a few moments before had been sucking her own mother's cock, blushed slightly.\n\n\"Yes,\" she said, barely above a whisper, \"May I show it to you?\"\n\n\"Gods be praised, please!\" I begged. Kapat smiled charmingly and then scrambled quickly to her feet. Kapat moved with purpose. She was essentially a blur as she scrambled around me. I felt her hand press down gently on the base of my spine, the slightest pressure. I sensed she was guiding me and I leaned forward slightly, thrusting my ass out. Suddenly, in front of me, was Yakin. She had moved a high stool from along the wall so that it was directly in front of me. She patted the seat.\n\n\"Put your hands here,\" Yakin said, and I instantly complied. Kapat's hand trailed down my spine, giving me a slight chill. Kapat dropped to her knees behind me. I felt her other hand rise and then, after a moment, I felt both of her palms pressing firmly into the cheeks of my ass. I felt my ass spread apart, the warm air of my longhouse wafting against it. And then I felt Kapat's long hair tickling the backs of my thighs. And her soft cheeks sliding into my ass.\n\nShe moved so quickly that I was still positioning my hands on the stool in front of me when I felt the wet warmth of Kapat's tongue pressing into my anus. I groaned and gripped the rim of the stool in front of me tightly. Kapat's tongue lapped thickly against the crinkled skin of my asshole. Her tongue was thick, wet, and warm.\n\n\"Her tongue is perfect for this. She practiced on me. On everyone,\" Yakin said with a strange, motherly pride.\n\n\"Yes,\" was all I could gasp. But I couldn't focus on Yakin. Kapat had approached me with the same single-minded dedication that I had witnessed when she'd sucked her mother's cock. I felt her tongue lapping softly, but quickly against my asshole. Sometimes, that tongue would recede, and I would feel her soft lips kissing me gently on my anus. Her kisses began to trail down, kissing down along my cunny and then finding my balls. I felt Kapat's face sink into my scrotum. She kissed and sucked on my balls, pulling them both into her mouth and then letting her tongue roll over them. My cock was achingly hard and I felt it twitching against her mouth. Kapat felt it as well. She let my balls drop from her lips, kissed them again, and then began to lick her way up my cunny, and then back, to my anus. She dragged her tongue against my skin.\n\nHer mouth was so wet, I soon found that my anus was dripping wet. Kapat made her tongue rigid and plunged it, quickly but somehow gently, into my asshole. I felt it split me open, and dig deeply inside of me. Much deeper than I ever imagined a tongue could go. I felt my asshole clench around Kapat's tongue, but she kept firm, pushed deeper. I felt her hair tickling against my legs as she began to bob in and out of me. I gasped as felt her tongue move in and out of me, rigid as a cock but soft as her lips.\n\nThe sensation of Kapat tonguing my anus was so intense, it felt like she was filling every inch of my body. I felt her tongue inside of my ass, on my clit, lapping gently at the backs of my eyes. It was so overwhelming that I almost hadn't realized hat one of Kapat's hands had slipped from my ass. It had reached around my body and Kapat's hand grasped around my cock, stroking it firmly, but gently. \n\n\"Gods!\" was all I could manage to say. I don't know how long Kapat did that, plunging her tongue in and out of my anus while she vigorously stroked my cock. It felt like a wonderful eternity. But it could not have been very long. I could not have held out very long. The sensation was just so intense.\n\n\"Is she not a skilled lover?\" Yakin asked, knocking me from my reverie. \n\n\"I've never felt anything like this!\" I groaned, honestly. I heard Kapat moan with delight, her hand began to stroke faster.\n\n\"Do not spill your seed on the ground,\" Kapat said, \"She will be so disappointed if she cannot taste it. Tell her to stop when you are about to cum.\"",
        "\"Oh gods!\" I groaned, quivering all over. I didn't want to say it. But I didn't want to anger my future wife or her mother, \"Then she must stop now!\" I moaned. Kapat had, evidently, been listening, because in that instant, I felt her disappear. In an instant, her hand had slipped from my cock. Her tongue pulled easily from my anus. And then I was simply standing, leaning over the stool, my wet ass in the air and my cock throbbing, but not quite cumming. I breathed heavily and tried to simply keep my senses, to keep from falling down. \n\nWhen I had, to a certain extent, mastered myself, I found that I was looking at Kapat and Yakin, standing in front of me. Kapat had her arms draped around her mother's neck and the two women were kissing gently. They sensed I was watching them and they turned back to me, no hint of embarrassment. They smiled at me contentedly.\n\n\"I know that you want my daughter's sweet cunny,\" Yakin said casually, \"And I am sorry you have to wait for it.\" My eyes glanced down at Kapat's little pink cunny. My mouth watered. I swear, again, that I could smell it.\n\n\"It will be worth the wait,\" I said. \n\n\"Then she is acceptable to you?\" Yakin asked.\n\n\"I would not take another woman as my first wife,\" I said, once again speaking the truth. Both Yakin and her daughter smiled broadly.\n\n\"Then maybe there is something, in the meantime, that we can do to give you some relief,\" Yakin said.\n\n\"Will you trust us?\" Kapat asked.\n\n\"I already do,\" I said, and I realized that this was true as well. It was simply a feeling that was infused within me. Kapat and Yakin were Hayalet. So was I. We were bound together by ties as close as blood. I trusted them implicitly and without thought. I was of them, they were of me. Kapat smiled.\n\n\"Then follow our lead,\" Kapat said and the two women rapidly approached. There was a sudden whirl of activity. I felt hands against my body, felt the tickling of their long hair as it draped around my body. In a matter of seconds, I found myself being guided down to the floor. \n\n\"We planned and practiced for this as well,\" Yakin said from behind me, as though she read my mind.\n\nBut there was no time to respond. We rapidly moved into position. Yakin was kneeling on the ground with her knees apart. Her cock was hard again, I had seen it as we moved into position. But I couldn't see it now. That was because I was squatting over top of Yakin's body, her cock just inches from my wet asshole. My back was to Yakin's face.\n\nKapat was in front of me. She placed her hands on my waist and applied gentle pressure to my hips. I allowed myself to drop down. I felt a slight, hot tickle as Yakin's cock rubbed against the inside of my leg and then against my balls. Yakin moved her hand slightly, and I felt the tip of her penis align with my asshole. I breathed out, sensing what was coming next. Kapat continued to press on my hips gently.\n\n\"Oh fuck!\" I groaned and I felt my cock twitch as the tip of Yakin's hard cock pressed into my asshole. There was a slight moment of pressure, but I was so wet, so excited. After one small twinge of pain, almost imperceptible, I felt a sudden release. My body had opened up, had allowed Yakin inside of me. I felt her hard shaft slipping easily into me as my asshole squeezed around her. Kapat's saliva had lubricated me deeply, I didn't know it could feel so good. I trembled and my cock ached.\n\nYakin wasn't done. As my body sank down deeper and deeper into her lap, she moved her hand from her shaft. I felt her balls press into my ass and I knew she was totally inside me. The hard shaft seemed to radiate pleasure throughout my whole body. I closed my eyes and enjoyed the sensation. As I did so, I felt Yakin's hands slipped along my legs, one on each side. Eventually, her fingers reached up underneath of my knees, grasping them. At the same time, Yakin began to pull back with her hands. I let out a small yelp as my legs spread apart further and my hips rotated. I felt my back press into Yakin's breasts as she pulled me back. Her cock strained inside of me as my ass rolled up, but it stayed inside of me. I was now sort of reclining against Yakin's body with my legs spread and my cock flopped back against my stomach. \n\nKapat quickly moved to fill the space between my legs. My fiance dropped down on her hands and knees in front of me. In a moment, I could feel her warm breath on my thighs and my ass. And then I felt something else. Her tongue. On the strained skin between my stretched asshole and my dripping wet cunny. Kapat's mouth had locked around that spot and she was soothing the skin with her warm tongue. I sighed. At the same time, I could feel Yakin moving underneath of me. Pulling her hips back and then thrusting them forward again. Not much, but with my body splayed out, it didn't take much motion to feel...everything. Her cock pushed in and out of my asshole, stretching me and digging ever-deeper inside. \n\nKapat did not remain frozen in place. I felt her tongue slip up across my wet slit, heard her groan as she tasted my juices. Then I felt her mouth wrap, against, around my scrotum. I felt my balls seize in her mouth as she swirled her tongue around me. And then she was licking down again, across my slit and then down towards my asshole. For a moment, I felt her mouth move away from me and I groaned when I looked down and realized that she was licking her mother's cock as it slipped in and out of my asshole. I through my head back against Yakin's should as I groaned and I felt her lips against my temple. Kapat continued to move her lips and tongue around on my ass, my cunny, and my balls, keep the whole area dripping wet.\n\n\"Fuck,\" I groaned, \"I don't know how much longer I can last!\" And then I heard something strange. Almost like my words had given a signal. There was a loud bump from the back of my longhouse. My eyes fluttered open, and I found myself looking down at Kapat. Her lips were wrapped around my balls and she was looking up at me. It didn't seem that she had heard a sound.\n\n\"Well, well, well!\" a voice suddenly said to the left of me. I saw Kapat's mouth curl in a smile around my balls as I turned to look, \"The tables have turned!\"\n\nApproaching quickly from the back of my longhouse were all of the Cadilar of Daire! Omuzlar was there. Cilek, Uc, Alti, Diger, Ilk, and many others. And in the lead, speaking, was Damat. The Cadilar whose wedding night I had crashed! They had all climbed into my home through the same place where I had spied before! They were all naked, their cocks hard and their cheeks flushed as they approached.\n\n\"What is going on?\" I groaned, but it was hard to focus. Yakin's cock was still thrusting in and out of my asshole. Kapat's tongue was now licking her mother's cock, keeping everything wet.\n\n\"You spied on me, turnabout is fair play!\" Damat said roguishly. The women began to circle around me and my lovers on the floor. They moved in close, their cocks only inches from my body. I sensed no menace at all. Their attitude was playful, excited. It was hard to think, hard to understand what was going on. But, nonetheless, I found myself smiling.\n\n\"Thank you for holding her down,\" Orospu said, devilishly to Yakin. My eyes grew wide.\n\n\"You knew they were spying!\" I said to Kapat. She pulled her glistening lips back, smiling.\n\n\"You shouldn't have trusted us!\" she said, and the Cadilar around me laughed and began to stroke their cocks as they watched me get fucked.\n\n\"You aren't a guest anymore, Kedi,\" someone said, \"You don't get soft handling.\"\n\n\"You are one of us, and you are going to get treated like it!' someone else laughed and the women around me cheered. I was bathed in their good-natured energy. \n\nKapat returned her head to between my legs, sucking again on my balls. I looked around at the Cadilar standing around me, sensed their excitement and the sweetness of their prank and felt some strange combination of arousal and emotional acceptance. It was hard to explain. I was a part of their society. They wanted me there and they desired me. It was the kind of feeling that you can search a lifetime to find.\n\nIn gratitude, I reached out my hands, grasping for the closest cocks around me on either side. My hands found two shafts and I wrapped my fingers around them. I began to stroke. I turned my head to the side, opening my mouth. In a second, I felt a hard cock pass between my lips and push wetly into the back of my throat, the flavor salty and warm. I bobbed my head on that cock to the same beat that Yakin thrust her cock into my ass. I stroked wildly. I felt Kapat's move up slightly. her hand wrapped around my cock and pulled it up. And then the tip, and shaft, plunged into her mouth and throat.\n\nIn that moment, I melted. That is the only explanation for what I felt. The distance between me and my fiance, between me and Yakin, between me and all of the Cadilar of Daire ceased to exist. We weren't simply one tribe. We were one being. I could feel what they felt, I knew they felt what I felt. I could smell them, taste them, hear their hearts pounding. And then I felt the cock in my mouth expand and contract. It was Orospu's cock. I knew that now without seeing her. I could feel her balls seize against my chin. I could feel her hot sperm pouring salty into my mouth. But, what was more, I could feel her orgasm as well. I could feel the pleasure ripping through her body, feeling her muscles tightening and relaxing. \n\nAnd I knew the others felt it too. Because they began to cum. I felt Yakin's cock strain inside of me. Felt her sperm filling my ass and then dribbling down her shaft to where Kapat could lick it up. I felt the Cadilar around me cumming as well. Felt the sperm pour from their cocks as splash across my face, my stomach, my legs. Coating me. And then I felt my own cock, finally, bursting into Kapat's mouth, pouring down her willing throat. The room was filed with moans and the smell of Cadilar sperm.\n\nThe tingling warmth of all of the orgasms blended together into a great wave of pleasure that rolled through all of us. And I became a part of that wave, as did all of the women around me. My brain was overwhelmed with pleasure as my sense of self evaporated. I didn't just feel the other women, I became all of them. And the only thought that I could think, as I felt the last of the sperm splashing against my skin was, \"Thank the Gods, I am home.\"\n\nThe End. \n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks."
    ],
    "authorname": "YKN4949",
    "tags": [
        "daughter",
        "epic",
        "incest",
        "marrige",
        "mother",
        "oral",
        "trans on female",
        "trans on trans",
        "translesbian"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/tribal-bonds-ch-06"
}