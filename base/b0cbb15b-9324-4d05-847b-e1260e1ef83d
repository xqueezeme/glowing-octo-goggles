{
    "title": "Home for Horny Monsters Ch. 73",
    "pages": [
        "Hi all! I'm back with the next exciting chapter of \"Leeds is a bastard while Beth fights the Apocalypse!\"\n\nNew? Don't blame you, everyone is new at some point. You should strongly consider bingeing previous chapters. There's a lot of plot, a lot of fucking, and a giant cast of characters.\n\nReturning reader? Welcome back, you beautiful person! It's so nice to see you, and I wouldn't still be around without your support. So don't forget to click those stars on your way out!\n\nJust a heads up: my (real world) schedule is gonna get weird this fall. Make sure you check my bio for release dates, because I will do my darndest to stick to them so you don't worry that I've disappeared.\n\nFolks, it's time for you to see the glory of Jenny's master plan. If you ever get a chance to play her, you should remember this rule: Never go against a psychotic spirit on\n\nFamily Game Night\n\nPain rippled through Beth's entire body as she reformed in a golden blaze of light next to Murray. Already, the sensation of being hung from a tree was fading from her memory as if it was nothing more than a bad dream.\n\n\"Ah, there's our princess now!\" War announced with a laugh. \"How did you like the gallows?\"\n\nShe said nothing. Instead, she closed her eyes and took several deep, cleansing breaths.\n\nAfter being killed the first time, she cried hysterically while huddled in a ball. Murray appeared to her in a place full of white light and informed her that her reconstruction would be on a mental, emotional, and spiritual level. The angel explained that the purpose of doing so was to prevent a complete mental breakdown as a result of being killed repeatedly.\n\nThat, and it would disrupt the game.\n\nWhile the memory of being cut in half remained, it now felt like little more than a distant memory or a bad dream. Every death afterward was brutal and terrifying to experience, but the angel made sure that all she retained from them was the memory rather than the trauma.\n\nIn a way, she was grateful to the angel for ensuring her mental safety. Given half a chance, she would pluck the fucker and cast him into the Void with Oliver. But seeing as how she was just a mere mortal, she would have to settle for dreaming about revenge rather than enacting it.\n\n\"And there goes Alaska,\" War declared. The territory Beth had held turned red. \"North America is officially mine!\"\n\nAgain, she said nothing. But she did look over at where Jenny was sitting. The doll had been unusually quiet, and it was taking everything in her power not to scream at the ghost.\n\nThe original plan had been for Jenny to manipulate her own die rolls using telekinesis. With three-on-three, even a slight manipulation in the odds would be beneficial, and allow their deception to go unnoticed.\n\nInstead, Jenny was sullen. She had lost a few territories without so much as a fight, and had yet to win a single round. When a round started, neither side knew who won until the battle was over, and it didn't seem to occur to the horsemen that Jenny seemed to be exempt. On her turn, all the doll did was add troops and move them away from harm. Reggie would often move troops and try to bolster defenses for Beth, or at least discuss strategies between rounds.\n\nIt had effectively become three versus two, with Jenny barely spectating. The doll often wandered off during turns, and would look on in disinterest as the loser was shot, set on fire, or executed in whatever gory manner the winner preferred.\n\nBeth particularly enjoyed her winning rounds. The horsemen didn't seem particularly creative with how they chose to kill her, so would often pick something quick and messy. She tried to rattle them with creative means of dismemberment, and was particularly proud of the time her elves had tossed Famine into a live volcano.\n\nReggie's unique brand of torture usually involved rats. He strapped a cage full of rats to War's belly and then put burning coals on the top so that the rats would chew their way through the horseman to get away from the heat. There was also the time Reggie dragged Pestilence into the subway tunnels of New York and creamed him with a subway train. It had revealed that the horseman was, in fact, composed of glowing insects.\n\nNone of this deterred the horsemen. They shifted troops around and would leave a single troop behind to be taken by their teammates so they could gain continent bonuses. It had pissed her off when the last battle between War and Pestilence had been a simple game of Pinball. War had given his sibling a high-five upon losing, which allowed Pestilence to gain control of Africa.\n\n\"Three territories left,\" War told her. \"And then you're out of the game.\"\n\nStill, she said nothing. Once she was knocked out, Reggie and Jenny would be on their own. Reggie almost had control of Europe, while Jenny had crammed almost all of her troops into east Asia.\n\nIt all came down to trust. She wanted to believe that Jenny had some sort of a plan, but she just couldn't see it. The doll's infamous outbursts hadn't shown up even once. They were ignoring her entirely, so it was likely that Reggie would be the next to go. The horsemen would come for Jenny only when she was the last one remaining.\n\nThe horsemen had learned some time ago how to stretch out their turns. What had started as hour-long skirmishes had become days, depending on the size of the defending armies. Losing Australia had taken almost a month from her perspective, but Murray had assured her that only minutes had passed in the real world.\n\nThe men and women of Middle Earth put up a brave fight over the next few rounds. Beth, fully on the defensive now, didn't make any attacks of her own and chose to bolster her defenses. Her brain compressed the last week of her battles into moments as her territories dwindled down to one final location.\n\nShe had taken Iceland on a lark and found it a fitting location for her last stand. Her troops managed to buy her another week of in-game time as War attacked her from Greenland with ships that fired missiles into the Icelandic countryside. While the city of Reykjavik burned, Beth's army was forced to retreat inland.\n\nHer final stand was at the volcano. She had ridden her horse up and down the line, doing her best to give a speech about how they were the last line of defense, and that she was so proud. The words didn't come easy, and were heavily plagiarized from different movies. Her people had cheered as they turned as one to face the oncoming army, ready to take down as many of War's troops as they could.\n\nInstead, War bombed the volcano, which caused it to erupt violently. It exploded, the pyroclastic flow incinerating Beth and her troops where they stood. There were no last moments of honor or glory, just the howl of angry winds followed by fire, dirt, and pain.\n\nHovering above the Earth afterward, Beth couldn't help but break into tears. She didn't have enough energy to acknowledge War, who taunted her failures. Nor could she yell at Jenny for abandoning them. She wanted to believe in the plan, but her faith had finally been broken.\n\n\"Since you are no longer a player, you may wait here between rounds.\" Murray spoke matter-of-factly, as if Beth hadn't just lost the fate of the world in a board game gone wrong. \"It is your choice.\"\n\n\"I'll keep watching,\" she announced, then looked over at Reggie. \"To provide moral support.\"\n\nReggie nodded his head in thanks.\n\nSeveral weeks passed as Reggie's position in Europe was gobbled away. The horsemen started a blazing wall of fire that gobbled up the land as they conquered his territories. Reggie was able to hold them off for a bit, but it was purely a numbers game at this point. The horsemen had surrounded Reggie, pressing him from multiple directions. His numbers dwindled faster than theirs, and his remaining troops clung to the Eiffel tower as Famine detonated a nuke right on top of them.\n\nThe mushroom cloud could still be seen from space as Reggie reformed. His mech suit was gone, and he wore neither his glasses nor his crown.\n\n\"I have failed you,\" he told her morosely.\n\n\"You did your best,\" she said, kneeling down to pick him up. \"We did our best.\" She gave him a hug, his whiskers tickling her ear.\n\n\"The best is yet to come,\" he whispered in her ear, his voice barely audible. She wasn't even sure he had said anything.\n\n\"Do you wish to continue your turn?\" Murray asked Famine.\n\n\"Huh?\" Famine looked up at the Earth, then over at Jenny. She was looking away from the horsemen, her horse squeaking ominously. \"Oh, right. Forgot about her. I need to move some troops first, but then I'll pass.\" He looked to War. \"Thought you might have more fun with her.\"\n\nWar grinned, his teeth glinting in the unfiltered light of the sun.\n\n\"I'm going to grind you into paste, little girl.\" He licked his lips in anticipation.\n\nJenny stopped rocking on her horse. Her head rotated around until she was looking backward at the horsemen.\n\nI look forward to ripping your eyes from your head and shoving them up your ass. Her voice was composed of multiple wavelengths\u2014as if several men and women spoke through her body. With a click, it became a little girl's voice again. That way, you can watch me kick your butt, mister.\n\nWar was clearly taken aback. He looked over at Pestilence, who just shrugged. It was the first aggressive thing she had said this whole time, and it was clear that it had caught them off guard.\n\nIt was Jenny's turn next. Her territories were massed together, but she shifted the bulk of her troops to the outer ring. Being left alone each turn, she had amassed a rather large force that now formed a barrier around east Asia.\n\nPestilence didn't have any troops nearby, so moved them around. When War's turn came, he pointed at Kamchatka.\n\n\"I attack from Alaska,\" he declared. He had been building a small army there, and everyone teleported down to the ground and watched as War's military presence came from the sea. Large boats dumped troops and equipment on the shore, but there was no sign of Jenny's army anywhere.\n\n\"What the fuck is this?\" War stood on the beach, his sword slung over a shoulder. \"I don't see anybody here.\"\n\nThat's cause we're playing hide and seek, silly! Jenny's voice came from the distant hills. Can you find all of us?\n\n\"I'm not here to play games, I'm here to kill you!\" War's voice magnified and bounced off the hills like distant thunder.\n\nThat's too bad! I'm here to play games with you! The clouds up above formed into a rocking horse with a figure on top. A demonic face formed by opening holes in the cloud, revealing blue sky behind. And you can't kill me until you find me.\n\nWar almost dropped his sword. \"That's not how this works! You have to face me!\"\n\nIt's a game of war, silly! If you don't like it...quit!\n\n\"She is correct.\" Murray hovered in the sky behind them like a marionette. \"For the turn to end, one of you must kill the other.\"\n\n\"Fucking hell.\" War stormed off with his troops. Beth wanted to laugh, wanted to have hope, but was afraid to voice it out loud.\n\nDown by her side, Reggie was wringing his hands together in anticipation, a giddy gleam in his eyes.\n\nWar's troops scoured the countryside for hours. As spectators, Beth and the others were able to hover above the scene and move about, unrestricted by physics. War and Jenny were the only ones confined to the playing field, and Jenny was using it to her advantage.\n\nNight was falling before anything happened. The movement was so subtle, that Beth thought she had made a mistake. One of War's soldiers had walked behind a boulder and had simply vanished in the shadow of the rocks. Not a sound was uttered, and the nearby troops didn't see what happened either.\n\nAn apple a day keeps the doctor away, Jenny announced. You suck at this game.\n\nWar said nothing, but Beth saw that the veins in his neck bulged dramatically. He tapped his sword on the ground, then growled in frustration.\n\n\"What are you playing at, Raggedy Anne?\" He looked up around. \"You mad that nobody ever loved you?\"\n\nMy little girl grew up to be a complete whore. Jenny giggled. She was your mom.\n\nThis actually made Famine burst into laughter. It quickly became a belly laugh, and Famine wiped some tears from his eyes.\n\n\"Oh, she's trying to go so hard on you,\" he cried. \"Stupid girl doesn't even know that we don't have a mother.\"\n\nThat's what the angels told you so you wouldn't feel sad. Jenny's voice was behind them now. Just you wait, fat-ass. I have something special planned for you.\n\n\"Whatever you say.\" He sat on a couch that appeared behind him and pulled popcorn out of the air. Beth recalled a particularly bloody confrontation Reggie had with War where Famine had pulled out a charcuterie board and feasted on cheese and apple slices as the two of them leveled a city.\n\nPestilence buzzed something at Jenny.\n\nNobody cares what you have to say, she replied in a sweet voice. You're just a bag of farts.\n\nThe sun set on Kamchatka, and all hell broke loose. As the shadows grew longer, War's troops disappeared at an exponential rate. Once the disappearances had been noticed, gunfire erupted as they tried to fight an enemy they couldn't see. War had his soldiers set up a base at the foot of a hill and trained spotlights on the surrounding area. Instead of chasing away whatever hid in the shadows, it just revealed a landscape soaked in blood.\n\n\"What the fuck is this?\" War, just as baffled as his troops, ordered them to form up on the perimeter wall of their base. Shadows flitted about, but the soldiers were unable to catch one properly in the light.\n\nAs I lay me down to sleep, Jenny began.\n\n\"Fuck off!\" War replied.\n\nI pray the Lord my soul to keep. The shadows moved so abruptly now that they left large dust trails behind them that blew across the base like fog. And when you die because you suck...\n\n\"Shut up!\" War was so angry he hopped over the walls of the base and charged at the shadows. He swung his sword at them, creating a commotion that drew everyone's attention. In the span of an instant, the lights at the base went out and the soldiers left behind screamed in agony. An explosion rocked the structure, and Beth caught a brief glimpse of twisted beings that disappeared into the darkness, beings made of teeth and knives.\n\nI'll find your mom and then we'll fuck.\n\nWar was the only one left. He yelled at the sky, but the shadows avoided him. Despite his shouting, the shadows left him to seethe.\n\n\"What is she playing at?\" Famine leaned forward on his couch.\n\nNow quit being a bitch and find me! Jenny giggled. When you do, I'll put you out of your misery.\n\n\"This has to be against the rules!\" War turned to Murray. \"She can't make me find her, this territory is huge and she's just a doll!\"\n\nAll is fair in love and war, Jenny replied. And I love playing games with you!\n\nMurray stared at the scene below, then nodded.\n\n\"These are the terms you agreed to,\" he stated. \"You would play a game of conquest where you were able to fully participate. At any point, you may choose to stop playing, but that would be equivalent to forfeit on the part of the player.\"\n\n\"But this isn't conquest, it's fucking hide and seek!\"\n\nAw, are you gonna cry? Jenny giggled. You can quit if you want.\n\n\"And if she's hiding, why can I hear her?\" War swung around, squinting in the darkness. \"Does that mean she's nearby?\"\n\n\"Her ability to speak doesn't affect gameplay,\" Murray said. \"She doesn't have lips, and so I allowed her to use her psychic abilities for communication purposes.\n\nWar hollered illegibly and threw his sword before storming off. A couple of hours passed before Jenny started singing nursery rhymes in a discordant manner that set Beth on edge.\n\n\"I can't believe we have to sit through this shit,\" muttered Famine. \"Hey, angel! Since it's obvious already that she won this round, would it be okay if we helped find her? It doesn't technically affect gameplay, right?\"\n\nMurray went wall-eyed for a moment, then nodded.\n\n\"It would be permitted,\" he informed them.\n\n\"C'mon.\" Famine rose from his couch and looked at Pestilence. \"Let's find the little bitch so that we can move on.\"\n\nBeth looked at Reggie and let out a sigh. \"Should we go find somewhere quiet to sit? It could be a while.\"\n\nThe rat king looked at her with quivering whiskers, then let out a hearty laugh.\n\n\"Why would I stay?\" he asked. \"I'm not technically playing anymore, remember?\"\n\nWith a flash of light, Reggie was gone. Beth's jaw dropped open at the ramifications of his statement, then looked across the dark hills of Kamchatka. How long would Jenny make the horsemen look for her? Had this been her plan the whole time? Already, she could hear War absolutely losing his shit in frustration. The horsemen were capable of many things, but apparently, patience wasn't one of them.\n\nWith a grin, Beth willed herself back into space.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\n\"I would have expected the entrance to Hell to be bigger,\" Eulalie said, staring at the wrought-iron gate behind the house.\n\n\"It goes to the Underworld, not Hell.\" Amymone had her face in one of the books from the Library. It was a primer on dimensional folding. \"And I'm not seeing a damn thing in here about reconnecting it.\"\n\n\"Not without Mike.\" Naia pouted on top of her fountain.\n\nIt was late at night. Suly had escorted Cyrus back to his apartment to get a change of clothes and spend the night there. While the mage was gone, Eulalie had come over to the house to speak with the others. The rats had set up a perimeter around the house with instructions to chase off anyone who came snooping.\n\nEulalie was rather proud of how far her relationship had come with the rats. They were much smarter than they had originally seemed, and a couple of them seemed to understand some sophisticated commands. She noticed that a self-appointed group of rats now followed her around while carrying spears.\n\nShe knelt down to drink some of the deer the centaurs had brought her. Hunger had gotten the best of her earlier that day, and she had sent out an emergency request for food before she snacked on a rat. The deer was trussed up nicely in a cocoon that she could easily move around, and neither Naia nor Amymone seemed to be bothered by it.\n\n\"How does it taste?\" Amymone asked. \"I'm curious.\"\n\n\"Imagine a smoothie made of butter and meat that has little chunks in it,\" Eulalie replied. \"And when you drink it, you can feel warmth diffuse throughout your entire body.\"\n\nAmymone nodded. \"I figured you were a good person to ask since you can eat that and human food.\"\n\n\"We don't technically eat,\" Naia said. \"Amymone absorbs nutrients from the sun and earth. She also likes it when I do this.\"\n\nThe nymph sprayed the dryad with water from her hands, which caused Amymone's dress to cling to her body, revealing her nipples. Amymone licked her lips and absorbed the liquid into her skin, which made her dress stop sticking to her. The gesture was blatantly sexual, but Eulalie ignored it.\n\n\"So we don't have a way to connect to the Underworld through this gate?\" she asked.\n\n\"Mike might be able to.\" Naia stood up straight, the runes on her torso glowing through the fabric of her dress. \"The geas is supposed to regulate everything that happens here. When I choose the new Caretaker, I am able to bring the true house into this world. Whoever took the house will be strong, but Mike's bond will be stronger. With his help, I might be able to reconnect the gate, and then we can try to find the house in the Underworld.\"\n\n\"That sounds like a pretty big assumption.\" Eulalie wiped some blood away from her mouth, then looked at the runes on Naia's body. Her human eyes found them difficult to look at and comprehend, but her spider eyes saw how they actually floated in and out of Naia's body on the surface of her skin. For some strange reason, she got the impression that the runes were multi-dimensional, and were doing their best to fit along the curves of Naia's body.",
        "\"It's more like magical instinct,\" Naia replied. The runes on her body shimmered as if in agreement, but it was only visible on the ultraviolet wavelength of light. \"With my magic, I sometimes get hunches whether something will work or not.\"\n\n\"Are you referring to your own magic or the magic the house gave you?\" Eulalie picked at her teeth with a fingernail. A piece of fur had gotten stuck there.\n\n\"What do you mean?\" Naia asked.\n\nEulalie's eyes flicked to Amymone and back. If this was supposed to be a secret, it was Naia's fault for requesting clarification. \"Oh, it's clear that you aren't an ordinary nymph. You exhibit traits and qualities that fall well outside the standard deviation for your mythos. My theory is that you started as a nymph but were changed in some way. That being said, your nymph magic is separate from your house magic unless there was some type of convergent evolution upon your ascension.\"\n\nNaia blinked in shock. \"You...figured that out pretty fast.\"\n\n\"I've been ass deep in books about magic all week. I'm a quick learner and I have a big ass.\"\n\n\"Clearly.\" Naia smiled. \"Both types of magic work that way. House magic isn't really something I can control. It has a will of its own, but I can help direct its attention. When I say I think I can use Mike to restore the gate, it's almost like I can tell that the house agrees with me. It doesn't feel that way all the time, so I'm confident that we're at least on the right track. As for my own magic, I can usually just tell if it would work. It's instinctual.\"\n\nEulalie nodded. \"I would know something about that. So, out of curiosity...would your magic work on me?\"\n\nAmymone nearly dropped her book. \"Why wouldn't it?\"\n\nNaia tilted her head. \"That depends. I can do all sorts of things with my magic, so I need you to be more specific.\"\n\n\"Could you turn me on?\" Eulalie set down her deer. \"Seduce me. Make me horny. Do you require more euphemisms?\" Many hours of research had been spent on this topic, and she was happy to provide more.\n\nAmymone laughed. \"Naia could turn on a broken lightbulb.\"\n\nNaia held up her hand for silence. \"Is there a reason you want me to try?\" she asked.\n\nEulalie opened her mouth and hesitated. At her core, she knew that sex wasn't written into her code. Her desire to mate was non-existent, and even her self explorations had been minimally enjoyable. It was like a yawning void inside that had only been put there by the realization that she was different.\n\nIn truth, she was almost afraid that Naia could do it.\n\n\"You answered my question with a question,\" she replied. \"That makes me think that you can't.\"\n\nNaia tilted her head. \"That's not quite true. My magic doesn't seduce anyone. I can only amplify desires that were already there. If I were to use it on you, I know it wouldn't result in sex.\"\n\n\"Hmm.\" Eulalie pondered this for a moment. How could there be desire without sex? That sounded so self-defeating. \"Would you be willing to enlighten me?\"\n\n\"Just a touch.\" Naia's eyes sparkled.\n\nEulalie felt nothing at first. She looked at her own body, then over to Amymone. The dryad watched them with great interest.\n\nWhen Eulalie looked back at Naia, her mouth was suddenly dry. The nymph stood before her with one hip cocked out, and Eulalie had a sudden desire to spin some web and use it to tie her legs together. Or perhaps bind her so that her chest was pushed out, or maybe...\n\n\"Oh!\" Eulalie felt her spinnerets moving, and she realized that her body was producing webs. Knots, hundreds of them, flitted through her mind, each one perfect for a different situation. Some were good to prevent strain on the rope, others to prevent strain on the participant. Different weaves could produce ropes so smooth that they wouldn't leave a mark, or thick ones that prevented muscles from flexing. If she wanted, she could easily get Naia's hands behind her back, perhaps bind her forearms together. Would she look better on her knees, or\u2014\n\n\"I think that's enough,\" Naia replied.\n\nEulalie realized that she was on the edge of the fountain, her mouth open in anticipation and a piece of webbing in her hand. Her deft fingers had already braided it into a simple rope nearly six feet long.\n\n\"But this...this isn't sexual.\" She looked around, trying to find somewhere to stash her rope. It was too big of a piece to eat. \"I'm not...horny. Why does it feel like this?\"\n\n\"Desire isn't always about sex, little spider.\" Naia leaned forward and booped Eulalie on the nose. \"But once my house is back, you can tie me up anytime.\"\n\nThose last six words sent a rush of excitement through Eulalie. Not only would Naia look beautiful all tied up, but her aqueous body meant that Eulalie didn't have to worry about hurting her. She could just phase through the bindings and escape, giving Eulalie plenty of feedback to pursue her passions.\n\n\"Okay, right, the house.\" She coiled the rope around her waist like a belt. \"So we can't open the portal, we need to wait for Mike. So what can we do now to prepare him for when he gets home? My assumption is that he's going into a trap.\"\n\n\"A trap set by someone powerful,\" Amymone agreed. \"That could be problematic.\"\n\n\"So let's make sure he's ready for anything.\" Eulalie turned and looked at the dummy house. \"I don't suppose you keep a stash of magical items in that version of the house for emergencies, do you?\"\n\n\"Anything of interest would be in the Vault,\" Naia replied. \"Ratu may have something, but that stuff is extremely dangerous. And I don't think she has any weapons if that's what you're getting at.\"\n\n\"Well, shit.\" Eulalie stomped a foot in frustration. \"I was really hoping we could find a magic sword or something.\"\n\n\"Magic swords?\" Amymone's face lit up in excitement. \"What would you say if I told you I know about a magic tower full of them?\"\n\nEulalie smiled so hard that her fangs extended.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nBeth had been in space for less than a minute before the others appeared in a blaze of golden light. Pestilence and Famine looked livid, but Jenny sat calmly on her rocking horse.\n\nWhen War appeared, his features were tightly pinched. Every vein in his body bulged dramatically as he clenched his fists and shrieked.\n\n\"Sixty! Fucking! Years!\" War turned toward Murray. \"This has to be a violation of the rules!\"\n\n\"I assure you that only a couple of minutes have passed in the real world,\" replied Murray.\n\n\"She made me dig holes to find her!\" War grabbed at his face in frustration. \"That has to be against the rules!\"\n\n\"The winner of each round has been able to kill the loser in the manner of their choice,\" Murray said. \"She wanted you to dig a hole to find her and then have it cave in on you and crush your skull. That does not violate the terms of your agreement.\"\n\n\"The fuck it doesn't!\" War took a swing at Jenny, but his sword passed harmlessly through her.\n\nFucking crybaby, she replied. War continued to attack her, his movements harmless.\n\nBeth put her hands over her mouth. To an observer, she probably looked shocked. In reality, she was trying to hide the biggest smile ever. Jenny had not only won the round, but had trapped the horsemen for sixty years just for the fun of it.\n\nAnd she would bet good money that Jenny didn't experience all sixty of those years. All the doll had to do was withdraw her consciousness so that she was at the table. Those years would have taken mere moments.\n\n\"Would you like to attack again?\" Murray asked.\n\nWar's eyes bulged out of his head, and he looked at his siblings. The three of them huddled up and muttered to each other. Beth wondered what they were even talking about.\n\nYou could always quit, Jenny offered.\n\nWar broke the huddle and started to say something, but Pestilence yanked him back in.\n\n\"What happened in there?\" asked Reggie. \"Did you really make them dig you up?\"\n\nI got bored. Jenny let out a giggle, then rocked her horse over to where Beth stood. So I gave them hints. War had to use his sword to dig me up like a bitch.\n\n\"I attack again!\" War declared.\n\nI wouldn't, Jenny warned. I'm the hide-and-seek champion!\n\n\"Fuck you,\" he replied.\n\nThey found themselves on the ground in Kamchatka again. This time, War's army arrived with several aircraft carriers full of planes and drones. His troops never set foot on land. Instead, they launched an aerial assault.\n\nWar, who stood with them, sneered in anger. Jenny was nowhere to be seen.\n\n\"Let's see your shadow people take something out of the sky,\" he muttered. \"Each of these planes is equipped with the best surveillance technology known to man, so even if you pull your bullshit, I won't have to spend nearly as much time\u2014\"\n\nA plane exploded overhead, the wreckage crashing into the side of a nearby mountain.\n\nBeth could no longer contain her laughter, which drew dirty looks from the horsemen.\n\n\"But I thought she was using shadow people for her troops!\" Famine's face paled. \"It had to be. The toys were acting as gateways, right?\"\n\nGuess again! Jenny then blew a raspberry at them and made airplane noises as War's airforce was destroyed one plane at a time. Beth clapped her hands in glee while Reggie did a series of dance moves next to her.\n\n\"Knock that shit off,\" Famine told them, but they ignored him.\n\nIn a desperate attempt to accomplish something, the planes dropped their bombs. The bombs fell only halfway to the ground before they rocketed back into the sky and exploded. It was like a 4th of July show on steroids, and Beth cheered when it came to an end.\n\nIf you count to a million out loud and say \"Ready or not, here I come,\" I'll give you a hint. Jenny's laughter was distorted. You can get as many hints as you want!\n\n\"You know what? Fuck you. I'm not even going to look.\" War sat down with his legs crossed. \"I'm the personification of War. I'm immortal. You will go mad long before I do.\"\n\nQuitter, Jenny replied. Quitter-Quitter. Quitterquitterquitterquitter...\n\n\"Lady Beth?\" Reggie took her by the hand as Jenny's voice steadily grew louder. \"I think it's time we take our leave.\"\n\n\"I agree.\"\n\nThe two of them waited in space for a minute before the others returned. The horsemen looked defeated, and War appeared in a golden nimbus of light. He looked at Murray with a scowl.\n\n\"I end my turn.\" He moved away from the group and contemplated the Earth.\n\nQuitter, whispered Jenny. You needed a lot of hints.\n\n\"Saying hot and cold didn't accomplish anything,\" Famine muttered.\n\n\"I would like to reassure everyone that only a couple of minutes passed during the last round,\" Murray added. \"It is Pestilence's turn.\"\n\nPestilence attacked Irkutsk from Siberia. They won the first two rounds, but Jenny's mysterious troops didn't make a single appearance. Instead, the doll just appeared in Pestilence's hands both times.\n\nThe horseman, clearly lacking creativity or patience, had promptly torn her apart.\n\nOn the third round, the shadows gobbled up Pestilence's troops without a sound. Jenny didn't bother taunting Pestilence like she had War. Instead, a group of people arrived holding bug nets and glass jars.\n\nPuzzled by this development, everyone watched in silence as Pestilence was stabbed with a knife and the bugs were rounded up and caught. Beth wondered if Pestilence's consciousness was contained in just one specific bug or all of them.\n\nThe glowing bugs were then separated into individual glass jars. The humans laughed maliciously as they shook them, jostling the bugs inside.\n\nWhoever keeps their bug alive wins a prize! Jenny announced. The humans let out a cheer as they separated. And don't forget, they love to listen to music and need to eat shit to survive!\n\n\"This is inhumane!\" Famine declared, then looked at Murray. \"You can't allow this!\"\n\n\"Sounds like you're just mad that you didn't think of something equally insidious,\" Beth responded. Through the months of torture fighting these guys, it occurred to her that they could have put her in a POW camp and starved her to death, or something similar. Instead, they had focused on the brutality of her death rather than breaking her spirit.\n\nJenny had been infinitely more calculating in her strategy, and had zero qualms about torture of any kind.\n\nMurray said nothing. Beth and Reggie stepped out of the round and waited. When Pestilence reformed, their shoulders were slumped forward as if under a heavy strain. The horseman buzzed something at their brothers, and War's face turned bright red.\n\n\"If you back out, I will kill you myself!\" he declared.\n\nWar's statement was very curious. She had been under the impression that a horseman couldn't be killed. Was War just angry, or did he mean it?\n\nPestilence buzzed some more, but then shrugged their shoulders.\n\nIt was Jenny's turn. She cackled maniacally and added troops to territories that needed them then ended her turn.\n\nFamine looked uncertain. The horsemen had been cocky the entire game, but now were avoiding eye contact with each other. Their morale had taken a heavy hit.\n\nWhen Famine attacked, he stood on top of a building while commanding the Hunger. The dark beings tore through the city, looking for any sign of Jenny or her army. The search went on for quite some time before the Hunger began to disappear.\n\n\"How is she doing this?\" War asked, his voice unusually quiet.\n\nFamine looked over at his brother. Sweat had beaded upon his brow as it became clear that Jenny had won the die rolls.\n\nPop goes the Weasel began to play, and the group turned to see a Jack-in-the-Box on the ground, its mechanical arm moving by itself.\n\n\"I'm not going near that,\" Famine declared.\n\nJenny appeared on the roof, her body as large as a small child. She flickered in and out of existence as she picked up the Jack-in-the-Box and walked toward Famine.\n\nDon't be a baby, she told him. After all, it's just a child's toy.\n\nFamine backed away from her until his back was against the edge of the roof. He looked over the side, nodded to himself, and jumped.\n\nThere was a loud clang of metal, and Famine was tossed back onto the roof by a metal ladder with legs like a centipede. Beth gasped when she saw it, suddenly realizing exactly what kind of troops Jenny had picked.\n\nTick tock, motherfucker. Jenny played the final note, and the lid of the Jack-and-the-Box lifted away to reveal a tube-like creature made of fangs that expanded and swallowed Famine whole. Everyone on the roof save for Murray cried out in alarm as the mimic shrank down and pulled itself back into the Jack-in-a-Box.\n\nMoments passed, and Jenny looked around at everyone.\n\nThis will take a while, she announced. They digest things really slowly. And it hurts the whole time that you're dying. Her laughter ricocheted around them.\n\n\"There's no way he fits inside there,\" War pointed out.\n\nThey're bigger on the inside, Jenny replied, then looked at Pestilence. I should have done this with the jars.\n\nPestilence made an alarmed buzzing sound.\n\n\"You can quit after this turn,\" Murray said. \"But not during.\"\n\nWar turned to argue with Pestilence just as a tiny drop of black blood squeezed out of the Jack-in-the-Box. Beth and Reggie disappeared, leaving the horsemen to their torment.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nIt had taken the better part of the afternoon to get home, but Mike didn't mind. Abella was content to walk in silence while clinging to his arm. It threw off his gait a bit, but he had more important things to think about.\n\nEver since the incident in the clearing, the sounds and feelings he experienced had gotten more intense. It was as though he had opened the window into a different world and then forgotten to close it all the way. Each tree they walked past whispered to him in greeting, and on more than one occasion, a tree branch would pat his shoulder as if they were old friends.\n\nThough the paths were buried in snow, he could sense them. The thin trails were lacking in foliage, so they were the quiet parts of the forest. It was almost like having a song stuck in his head, except now it was several radio stations running at the same time.\n\nHe thought of Bigfoot's offer to help him speak with the forest. It was something he would need to look into right away.\n\nIt also felt like he was being watched. It wasn't a malicious gaze, by any means. In fact, it felt almost playful, and he had a suspicion that it was the cabin herself, keeping an eye on him.\n\nNo, not quite the cabin. She was also the land, she had told him as much. He thought back to the times he had conversed with the house. This was far different, with the cabin less secretive and much chattier than her sister.\n\nAnd were they actual siblings? Or was it more of an honorific? Had some guy gone around knocking women up with baby buildings? Was that where the term laying wood came from?\n\n\"Oh!\" Abella squeezed his arm, causing him to stop. A large white rabbit stood in front of them, its nose twitching as it sniffed the air. \"It's not scared of us!\"\n\n\"You know, I've always been told that wild animals who let you come near are dange\u2014okay, yeah, go ahead.\" He watched as Abella scooped the rabbit in her arms. It looked like a snowshoe hare with its massive back legs, but he wasn't an expert by any means.\n\n\"It's so fluffy!\" Abella rubbed her cheek against it, and he half expected it to go full Monty Python and take off her head. The creature was content to accept Abella's love for a few more moments, and then kicked its feet to let them know it was done. Abella set it on the ground and it hopped off into the woods.\n\n\"So like I was saying, you shouldn't handle wild animals,\" he told her. \"It can mean they're sick, injured, or any number of bad things.\"\n\n\"You shoot lightning out of your dick and I breathe fire.\" She cocked her head at him and arched an eyebrow. \"I think I can handle petting wild bunnies.\"\n\nHe rolled his eyes but didn't argue, though he did want to clarify the dick comment. His magic had been related to sexual intimacy, but clearly, it was attempting to do something new.\n\nDid magic evolve over time? Or was it a result of the abilities he had gained from the others creating something new? Thinking on this idea, the weird stuff had started happening after sex with Quetzalli. Was it because her affinity was storms, or was it related to her draconic nature?\n\nHe was probably the only man alive to stick his dick in a dragon. Not exactly something you could find a support group for.\n\nWhen the cabin came into view, Abella unfolded her wings.\n\n\"I need to go back to my duties,\" she told him. \"But count me down for a walk anytime.\"\n\nWith a wink, she took to the sky and started her ascent. He watched her climb until she looked like a distant bird. Now flight would have been a fun ability to gain, but if Abella had stone wings, would his just be skin? On top of having to alter all his shirts, he didn't want wings that looked like a stretched scrotum.\n\n\"You have returned.\" The owl stepped out of her hiding place beneath a large pine tree. \"I wondered if you would return.\"\n\n\"This is the safest place to be,\" he replied.\n\n\"Humans aren't necessarily known for being trustworthy,\" she countered. \"I suspected you to hide somewhere else and leave the work to the others. You cannot fault me for having doubts.\"\n\n\"When you ate humans, did you barf up their remains in large pellets?\" He held out an imaginary football. \"Like, if I dissected it, would I find finger bones and shit?\"\n\nHer brow furrowed, giving her a frightening countenance. \"Are you trying to insult me?\"\n\nHe took a step toward her, never breaking her gaze. \"No. Just reminding you that respect runs both ways. You came to me, remember?\"",
        "The owl clacked her beak, then slumped her shoulders. \"My apologies. I am nervous about our encounter with Leeds and may not have chosen my words wisely. My path with humans has been difficult, and I lean on old habits when stressed.\"\n\nHe nodded. \"I'm nervous, too, but this isn't my first near-death situation. Your plan sounds like it will work.\"\n\n\"And it should. However...\" she held up a clawed hand. Crimson light danced along her talons. \"I feel as if I have overlooked something.\"\n\n\"Well, I hope you remember it.\" He backed away to give her some space. \"When I went camping as a kid, I always felt like I was forgetting something. It seemed like the more convinced I was that I'd left it behind, the less likely I had actually screwed up.\"\n\n\"So if you weren't worried, it was because you forgot it entirely?\"\n\nHe nodded. \"You got it. Right now, I spend almost every day waiting for the other shoe to drop. Maybe I forgot whatever or didn't think everything through, and it will come back to bite me in a bad way. I'm the kind of person who is quick to adapt, cause I'm used to my plans going wrong.\"\n\nThe owl's feathers rippled, sending a couple onto the ground. They were larger than her bird forms, and he wondered if her current size dictated how large they were when they fell off.\n\n\"I am poor at adaptation,\" she replied. \"When it comes to the hunt itself, I am fine. But that is instinct and planning. My spells take time to weave, for that is the cost of my magic.\" She shuddered again, sending more feathers to the ground. It seemed to be the equivalent of losing hair when stressed. \"I suspect yours is your unpredictability.\"\n\n\"How do you figure?\" he asked.\n\n\"When last we spoke, you did not carry such an earthen aura. You smelled of storms and lust, but now carry a certain heaviness. It is very much like the fae, but also the magic of the forest. Magic was never meant to be mixed in such a manner, for it generates chaos.\"\n\n\"Story of my life,\" he muttered. \"So that's what I have? Chaos magic?\"\n\n\"Caretaker.\" She clicked her beak for a few moments as if deep in thought. \"The name itself isn't important, but appropriate. You should know that magic like yours can be quite powerful, but only if it can be controlled. Be warned that it has a life of its own, very much like a roaring fire. If you aren't careful, it will consume you.\"\n\n\"Metaphorically?' he asked, thinking of Emily.\n\n\"No. Literally. In its haste to help you, your magic could tear your body apart. And when you die, the magic doesn't simply vanish. It will be let loose in the world in ways we cannot predict. Never start a fire that you cannot put out.\" She flapped her wings a couple of times and transformed back into bird form. With a cautionary hoot, she flew away.\n\n\"Thanks for the advice, Hedwig,\" he muttered. He watched until she disappeared into the trees and then continued toward the cabin, his hands in his pocket. Finding out that he was potentially a magic bomb had dulled his enthusiasm, so he took his time walking.\n\nAs he was passing the barn, he saw movement within. Dana was still there, and she had taken apart most of the jeep. She stood in the middle of a mess as if contemplating her next move.\n\n\"What the hell are you doing?\" he asked.\n\n\"Hmm?\" She regarded him coolly, then stared at the disassembled jeep. \"What time is it?\"\n\n\"Don't know. My phone was my watch.\" He knelt down to examine what might have been a carburetor. His knowledge was hardly extensive, so this was mostly a guess.\n\n\"I must have lost track of time.\" She wiped some grease off her face, only to smear some more from her hands onto her cheek. \"I do that when I'm working on stuff.\"\n\n\"But why dismantle the whole thing?\" He moved over to the body of the jeep and realized that she had pulled out most of the engine.\n\n\"It started as an oil change and I got carried away.\" She pulled a spark plug out of her pocket. \"Found a box of these and wanted to put some new ones in. Figured I would change the air filter, and it kind of snowballed.\"\n\nMike kicked a tire. They had been stacked in the corner. \"You don't say.\"\n\n\"Figured I would rotate them. Don't move those, I need to put them back on in a certain order.\"\n\n\"If you say so.\" He sat down in the passenger seat, which was on the floor next to the body. \"Velvet is going to freak when she sees her dad's car like this.\"\n\nDana's face darkened. \"Shit, you're right.\" She looked around her feet. \"Don't suppose you want to help me?\"\n\n\"Reassemble a car? Not really.\" He picked up a ratchet. \"I don't know where most of this stuff goes. Didn't have a garage growing up or anyone willing to teach me about it.\"\n\nDana snorted. \"It's not that different from your usual approach to things. Tab A in Slot B, you know what I mean.\"\n\nMike looked up at Dana. Even though she was looking away from him, he could see the small grin on her face. It had been hours since she had fed, so he was surprised to see her so...lively.\n\n\"My dad restored an old car when I was seven,\" she told him as she started putting stuff back under the hood of the jeep. He couldn't see what she was doing because she was moving too fast. Between her memory and the fact that she didn't tire, it was like watching a one-woman pit crew. \"It seems dumb, but I don't remember much about it now. He would only work on it on the weekends, and my mom let me stay up late to spend time with him. He was always working long hours, so weekends were our only time together. There was one Sunday night that my mom went to bed early, so he let me stay up until almost three on a school night. Mom gave him hell for that.\"\n\nMike chuckled but said nothing. He didn't have a story of his own to add and was too busy watching Dana's facial expressions. He had spent so many months seeing Dana devoid of almost all emotion, and he was now seeing tiny bursts of it. It was almost like watching an actor in a play break character. Was Dana even aware she was doing it?\n\n\"So what has your panties in a bunch?\" she asked him.\n\n\"Who told you that I'm wearing panties?\" he asked.\n\nDana snorted. \"Are they mine or Quetzalli's? I don't think you'd fit in mine, and if you stretch them out, I'll eat your hands. Don't dodge the question.\"\n\n\"I had an experience with Abella in the woods,\" he replied. \"My magic did something weird, and now the owl has me all paranoid I'm going to explode.\"\n\nShe stopped what she was doing and stared at him. \"I'm going to need you to run all of that by me again. More details this time.\"\n\nExcept for the sexual details of his interlude with Abella, he told her everything. How the magic had connected him to the land, how Abella had started breathing fire. She listened without a single word until he had finished.\n\n\"So what do you think?\" he asked. \"And before you answer, we both know that you're acting differently than you usually do. Something has changed, and you were affected, too.\"\n\nDana bowed her head in contemplation, then nodded. \"This rush of mine should have worn off some time ago. I think it's why I lost track of time, I'm used to falling out of the rush. It's like having the perfect amount of caffeine, you feel all inspired and energized, but you know it's going to wear off eventually so you try to get as much done as you can.\"\n\n\"You're smiling,\" he told her.\n\n\"Why, so I am.\" She grinned at him. \"And before you ask, I'm not fixed or anything. Slashed open my forearm earlier, didn't even hurt. Being dead has made me a little careless at times, I will admit. Has its perks, though.\" With that statement, she rolled a tire over to the jeep and lifted the chassis off of a group of cinder blocks with one hand.\n\n\"I knew you were strong, but this?\" He watched in amazement as she casually stuck the wheel back on and then tightened the nuts down with an old-style bar-type lug wrench.\n\n\"That's about my limit,\" she explained. \"I can actually feel the strain in my bones from it. If I lifted it too quick, I would probably snap my spine or rip a muscle. The human body is an interesting place when you don't feel pain anymore. It really reminds you that you're just a bowl of pudding piloting around a robot made of meat.\"\n\nHe frowned at the visual, but she wasn't wrong.\n\n\"Sometimes, if I'm not too involved with whatever I'm working on, I can actually feel how my joints work,\" she continued. \"Or how my muscles contract and extend. It's almost like I'm able to shut out the noise and really feel all the things my body can do.\"\n\n\"You mean kind of like when you're falling asleep and can hear your own heartbeat if it's quiet enough?\"\n\nShe feigned shock. \"Discrimination! Check your privilege, beating heart.\"\n\nIt had been a while since he had seen Dana and Lily hanging out, and he now worried just how much the succubus had rubbed off on the zombie.\n\n\"But yeah, close enough.\" She put another tire on the opposite side of the first. \"You wear your body your whole life without really understanding how it moves. There's a process in there that we take for granted. Have you ever tried to program a robot to walk? It's super hard, but toddlers can nail it pretty quick. I had a professor once who was obsessed with biometric design.\"\n\nHe nodded, now lost in thought. It was easy to see her point, but now he could apply it to his immediate problem. Instead of his own body, it was his magic that had him flummoxed. He used to have good control of it, but those were just baby steps.\n\n\"What's the fine line between understanding how something works versus just figuring it out?\" he asked. \"When do I know if I'm overthinking it?\"\n\nShe shrugged. \"Ask a baby, I guess.\"\n\nFrowning, he turned his attention to the dirt floor of the barn. Thinking about how a baby learned to walk, he could easily picture how they would use something to stand up first, then move. Was there a way he could learn to stand first instead of having to hit the ground running?\n\nThe clearing Abella had taken him to was teeming with life, which had overwhelmed him. Looking at the dirty floor of the barn, he could see the occasional sprout of dead grass along the boundaries of the building. This was a place that was connected to the earth, but minimal on nature. Could he connect with it as he had in the glade?\n\nWhen he closed his eyes, he could sense that thick bass note from before. It was dim, as if very far away. He tried to focus on it, and shifted in his chair to get comfortable. His hand slipped off the side causing him to brush his fingertips in the dirt. The volume in his head jumped several levels on contact.\n\nOkay. That's interesting. He put the palm of his hand on the ground and waited. The musical tones pressed against his flesh and a sense of peace permeated his body. His magic matched the rhythm and pulsed outward from him, scattering loose dirt away from his hand.\n\nEven with his eyes closed, he could sense where Dana stood. His senses expanded, and now he could feel the family of mice that lived in the corner behind boxes of motor oil.\n\nThe sensations were there, but they were quiet compared to the cacophony from before. Little by little, he expanded outward from the barn. The land around them was largely short brush, so he met plenty of burrowing critters waiting on warmer days to emerge from their homes. He felt the corners of the cabin, then immediately withdrew when he discovered an intense presence. Unsure if it was the entity that he sensed, he decided to expand his senses somewhere else.\n\nThe land around the barn was covered in snow, yet teemed with life that hungered for warmth. The fleeting thoughts of small mammals and insects touched his consciousness like whispers. As he explored the land, he felt it try to cling to his magic. It was easy to imagine that his magic was similar to sunlight, and that it could nourish the surrounding property. If he wanted, could he wake up the vegetation as he had in the clearing?\n\nHe took in a sharp breath as he realized that the sexual nature of his magic still applied here. While he hadn't dug a hole in the ground and fucked it physically, his magic was currently mixing with the earth in a very intimate manner. It was inside of him just as much as he was inside it.\n\nFor just a second, he thought he heard a woman's laugh. Whether illusory or not, it definitely belonged to the cabin.\n\nWhat could he even do with this knowledge? Was it just this land, or could he connect with the house, too? Maybe it would be a means to speak directly to the house, or even his other properties. If they were alive, then surely they had desires that he could assist them with. Maybe the house wanted a new coat of paint, or the cabin wanted to cut some trees for a better view of the mountains.\n\nIn turn, maybe they would be more forthcoming about what was expected of him. It would be nice for a change to simply be told what to do next.\n\nSparks flowed down his arm and into the ground, and he gasped when he felt the trees touch on his consciousness. Even with his eyes closed, he could see the tiny flames at their center, each one connected to its neighbor by gossamer strands of light. More and more flames appeared of all shapes and sizes, and it wasn't until he saw one swoop through the air like a bird that he realized that he was looking at souls.\n\nIn awe, he tilted his head in Dana's direction. Hers was like a tiny star strapped in chains of darkness, bound tightly to her body. Fascinated by the sight, he didn't notice the chill in his gut until it bloomed violently throughout his entire body.\n\nDistant flames were being snuffed out at an incredible rate. As they vanished, he realized that whatever was happening was headed right for him.\n\n\"Dana!\" He opened his eyes and pointed at the wall of the barn. \"Something is coming!\"\n\nThere was the loud snapping of wood, followed by a high-pitched shriek. The wall of the barn exploded inward as a massive figure crashed through it. Mike held up his hands, only catching a brief glimpse of the beast through his outstretched hands.\n\nDana, already in motion, had picked up the tire closest to her and whipped her body around to throw it like a discus. The tire slammed into the intruder hard enough that it was knocked off course, crashing into the ground next to Mike.\n\n\"What the fuck is that?\" he cried, jumping to his feet. The thing on the floor was a tangle of long black hair that was filled with branches. Expecting the creature to stand, he flinched when it levitated off the ground and turned to face them.\n\n\"Holy fucking hell,\" Dana muttered.\n\nIt was a giant head, almost six feet tall. Fearsome eyes that blazed with malevolent intent sat over dagger-like teeth. With a cry, it flew toward them, its hair spreading out like a pair of black wings.\n\nDana shoulder checked Mike out of the way. He crashed hard into the ground and felt something in his knee pop. The sharp pain of impact vanished in the rush of adrenaline as he leapt to his feet and looked for a weapon.\n\nThe head had Dana in its teeth and was growling as it tried to bite through her. In the corner of its mouth was a lug wrench that Dana held, using it as a wedge to keep it from closing.\n\nIt floated around the barn, slamming itself into the walls in an attempt to dislodge her. Up above, the barn creaked dangerously as if it was going to topple any moment.\n\n\"Abella! I need you!\" He shouted, then ran to the back of the head. The long hair was matted and smelled swampy, but he jumped on and tried to climb up the scalp. The odor made his eyes water, but once he was on top, he tried to punch the head in the eye.\n\nIt slammed its eyelid closed, pinning his hand in place.\n\nThe head spiraled around, scattering the pieces of the jeep before colliding with the chassis. The jeep toppled over with a large screech, the undercarriage sliding violently over the cinder blocks.\n\n\"Shit!\" Dana cried, then disappeared from sight as she moved further into the head's mouth.\n\nThe smell of gasoline filled the air, and Mike realized that the tank must have been ripped open. He really hoped the giant head hadn't brought along a giant cigarette to light up.\n\n\"Mike!\" Abella's cry came from outside, and he saw her from a distance through the broken wall. She was still far away, her face set in determination.\n\nA metal blade popped through the head's eye, and it emitted a terrible shriek as Dana stabbed it from within. It spun violently, throwing Mike to the ground, followed shortly by Dana. Both of her arms were bent the wrong way, and her clothes had been slashed up.\n\n\"What the hell is that thing?\" he asked her as the head fell over, its mouth gasping like a fish out of water. He had so many questions, like how it breathed, and if it needed to eat.\n\nUp above, he heard a chuckle. When he looked up, he watched in horror as the shadows coalesced into a dark figure with bat-like wings and a horse's head.\n\n\"That was my insurance policy,\" Leeds told them as the head shuddered one last time, its remaining eye going slack and its mouth hanging open. \"What is that phrase that always bounces through your head? Be prepared?\"\n\nMike was going to say something witty but held his breath instead when Leeds held up an old zippo lighter.\n\n\"Burn in Hell, Caretaker.\" Leeds tossed the lighter toward the spreading pool of gasoline. It clanged against the jeep and promptly put itself out when it landed upside down in the dirt.\n\n\"Dumbass,\" Dana muttered as she tried to stand up. One of her legs was crooked. \"By the way, you give terrible head.\"\n\nLeeds snorted and dropped from the rafters onto the ground near the jeep. Mike tried to tackle Leeds away, but was grabbed from behind by a shadow that yanked him off his feet. The pain in his knee blossomed, and he almost blacked out.\n\n\"Let's try this again,\" Leeds muttered, then picked up the lighter and lit it. He knelt down and held the flame against a line of gas until it ignited and the fire rolled toward the gas tank. With a laugh, Leeds stepped into a shadow and vanished.\n\nMike closed his eyes, thinking the jeep would explode. When it didn't, he opened his eyes and saw that the shadow holding him was gone. He crawled over to Dana.\n\n\"There wasn't much gas in the tank,\" she explained, using her one good limb to scoot toward the exit. \"Darren never bothered refilling it before he died, most of it has probably leaked out already.\"\n\n\"So it won't explode?\" he asked.\n\n\"Not a lot, but\u2014\" there was a loud boom, followed by a roar as the fire expanded, filling the air with smoke and fumes. The barn shifted around them, the structure groaning. \"We need to go.\"\n\nThey crawled toward the door as the flames surrounded them. The barn was old and full of plenty of things for the fire to consume. His leg dragged across the uneven ground, each bump causing him to grit his teeth in agony. He didn't bother looking back over his shoulder at the burning vehicle, nor contemplate how this was exactly the kind of situation that would put him back in therapy.\n\nHe could feel the flames licking at his back when Abella arrived. Saying nothing to Dana, she picked up the zombie and threw her out the door. Dana bounced and then slid across the snow, safe from the flames almost thirty feet away.\n\n\"Didn't take you long to get in trouble,\" she muttered, kneeling down to pick him up. With her body between him and the flames, he felt the temperature drop several degrees. Abella looked over at the giant head, which had caught on fire, and gaped. \"What the fuck is that thing?\"\n\n\"That's Todd.\" Mike tried to laugh at his own joke but started coughing instead. \"Nine out of ten dentists hate him.\"\n\nShe cradled him against her body and leaned forward, hot embers bouncing off her back. Once they were outside, she set him in the snow and turned her gaze toward the roof of the barn.\n\nLeeds stood up there, his coal-red eyes blazing in the fading light of day.",
        "Abella tried to leap toward him, but the shadows at her feet wrapped around her ankles and held tight. She stomped her talons, but couldn't get free.\n\n\"I don't think so, gargoyle.\" He sneered in their direction. \"With that busted wing of yours, you'll never be strong enough.\"\n\nMike looked toward the forest. Leeds had come far earlier than predicted, but the owl should still be watching. Where the fuck was she?\n\n\"Maybe she's dead,\" Leeds replied, likely reading Mike's thoughts. \"Or maybe she betrayed you. Wouldn't that just be delicious? Or maybe I'll kill you and you'll spend the rest of your life wondering which it was?\"\n\n\"Are you going to talk me to de\u2014\" Something wrapped around his neck and squeezed. He turned his head to see that his own shadow had reached up to strangle him.\n\nHis magic raced through him as he let out a scream of rage. Streamers of white light leapt from his hands and twisted around his shadow, causing it to burst and reappear back where it should be.\n\n\"Maybe you should come down here and finish the job,\" Mike said, his voice raspy. His magic was crackling through his body, just below the surface of his skin.\n\nLeeds sniffed the air, then stomped his hooves on the roof.\n\n\"A temporary setback, Caretaker. I have all the time in the world, and you? I am well aware that you are operating under a time limit.\"\n\nMike's nostrils flared and the air around him sizzled, his magic hungry for blood. Behind him, he heard Abella grunting as she fought to free herself.\n\n\"I have no intention of leaving this land or letting you capture me. Kill me a hundred times and I shall only return to torment you again.\" Leeds laughed, the smoke of the fire billowing up around his body. \"And you certainly can't kill me. One way or another, I will win.\"\n\nThe farm groaned beneath Leeds, who took a couple of cautionary steps, then fixed Mike with his blazing eyes.\n\nI will take everyone from you that you love. Leeds' voice was like nails on a chalkboard inside of Mike's head. It is no longer enough to have your land. I would have your absolute misery, to see you wallow in grief as I crush your family into blood and bones.\n\nThe smoke billowed upward, obscuring Leeds from sight.\n\nWho should I take first, Caretaker?\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\n\"Ah, there you are.\" Bigfoot stepped from between a pair of trees, his colossal shoulders knocking free a bunch of snow. Velvet watched him approach from atop a young buck. It flailed its legs, unable to gain any purchase in the snow. \"I've been looking for you.\"\n\n\"Sorry, Uncle Foot.\" She didn't have the heart to tell him that she had been trying to lose him all day. Not only did she feel his attention would be best used elsewhere, but she also wanted to go check on her egg. The glove box had been a safe place to store it, but with Abella always atop the barn, she hadn't been able to relocate it somewhere better, like her own room.\n\nWhat would the gargoyle think if she knew that one of the eggs survived? Velvet felt guilty about the deception but had no regrets. Of all the clutch, that one had been the most important to her and she still needed some time to contemplate whether she should even let it hatch.\n\n\"Don't play with your food,\" he chastised.\n\nThe buck let out a pathetic bleat. She had bitten it a few minutes ago, the frantic beating of the deer's heart speeding the digestive enzyme through its body. It had grown considerably weaker, and she gave its haunch an exploratory squeeze.\n\nSatisfied that the buck would make a good meal, she snapped its neck. A final gasp escaped the beast along with some steam from its nostrils. Her dad used to tell her that it was the animal's soul escaping the body, but he also used to tell her that there was a monster on the roof that ate little spider girls if they snuck out of the house.\n\nStill, it was a poetic thought. She took an exploratory bite and almost moaned in relief when liquified protein filled her mouth.\n\n\"C'mon, it's getting dark,\" he said. \"We should get back home soon. I don't know if Leeds is coming tonight, but I don't want to be caught in the woods if we can help it.\"\n\n\"Why? It's just Leeds now, right?\"\n\nBigfoot shook his head. \"You remember those documentaries about sharks? They have those fish that follow them around and eat their leftovers. Well, some of the creatures in the woods are like those fish. They didn't follow him here for altruistic reasons. Even the owl believes that a bunch of the Nirumbi still seek his favor.\"\n\n\"Dumbasses.\" She contemplated the buck. \"I don't feel like taking this to go. If you want to head back now, I'll follow when I'm done.\"\n\nHe crossed his arms. \"Not gonna happen. If I didn't know any better, I'd wonder if you were trying to get rid of me.\"\n\n\"Why would I want to do that?\" She bit the deer again. \"I just know you hate watching this.\"\n\n\"I've had decades to get used to it.\" He sat down on the ground. \"I've gotten used to lots of things I never thought I would.\"\n\n\"Mmhmm.\" Velvet tried to come up with a different excuse to go home without him. With any luck, maybe Abella would be on patrol. She already had a great spot for the egg picked out in her room.\n\nBigfoot chatted with her as she consumed her meal. He was feeling nostalgic, but all Velvet could think about was her egg. It had been smaller than the rest with a very faint blue sheen to it, and could easily fit inside a pocket. She was hoping to stash it away until she could talk to Eulalie about what to do next.\n\nIt wasn't just the issue of the survival of her species. She recalled plenty of conversations with her mother about what the Arachne were and how it would probably be best that they never return. It had been a moot point for the most part because her desire to breed hadn't kicked in until she met Mike. But now she felt as though her mother had been a massive hypocrite in expecting her own children not to pursue the life that she had.\n\nIf her parents had made raising a child work, perhaps she could make it work with Mike? Sure, it would be difficult at times. Arachne children were their own kind of trouble, and it had taken both of her parents and Bigfoot to keep them in line. A child living in a magic house would probably sneak away every chance she got.\n\nWould the others help, too? Abella probably wouldn't. Thinking of her made Velvet's stomach clench into knots. The tenuous understanding they seemed to have now would likely be over. And what would happen if her daughter tried to eat someone? It wasn't like they could just move out.\n\nThe cabin would probably be the safest place for her daughter. Even with the newest immigrants, it would probably be okay. But what about Mike? He had his own responsibilities and probably wouldn't live with her full time if she stayed in Oregon.\n\n\"You okay, fluffball?\" Bigfoot stared at her. \"You aren't eating.\"\n\n\"Yeah, I'm fine.\" She resumed her meal, but only out of habit. There was no telling when she would find something else to eat.\n\nOnce she was done, she tossed aside the shriveled husk and used her legs to dig a hole. The remains were buried beneath the earth, and she made sure to say a small prayer of thanks to the forest. It was something her mother taught her, a way to remember and appreciate that an Arachne's life could only continue at the cost of another's.\n\nMaybe that would be something she taught her daughter. A bunch of things would come instinctually, but morality? That was something she would have to make sure was instilled early on. She had a good feeling about her daughter, but there was no telling what her actual strengths and weaknesses would be. Eulalie could probably help in areas where Velvet was weak.\n\nShe fought back a sigh. Eulalie would probably be mad that she had done this. It wasn't as though she had any control over it. Being horny from time to time was a far cry from becoming obsessed with procreating, and now that the deed was done, she was experiencing what the internet called 'post-nut clarity.'\n\nSex with Mike had been fantastic, but now that she had an egg to worry about, all she felt was some intense feelings for him. If they were to fuck, she probably wouldn't lay any more eggs for a bit. Her body needed time to produce more, and she simply wasn't ready for it. In fact, she was now worried that she wasn't ready for motherhood in general.\n\nA small grin crossed her lips. The fear of being a bad parent was the human part of her talking. She remembered snooping on many conversations between her parents where her father had expressed those same concerns. Her mother had always been supportive, but she was largely a creature of instinct and didn't have the same concerns he did. Or if she did, she didn't express them.\n\nDone with the buck, she allowed Bigfoot to lead her home. All around her, she could hear the spiders chattering anxiously. Spring was on its way, and they were eager to wake up and go about their simple little lives. None of them had to worry about devils, and falling in love, or angry stone women who would want to cave in their skulls.\n\nAbella. There was a thousand-pound problem she had no answer to. Having her destroy the clutch was hard, but necessary. She had been too caught up in the emotions of the moment to do the deed herself, and she was ashamed.\n\nShe would have to tell her, and soon. Though the gargoyle was made of stone, Velvet sensed that she had a good heart. If she explained that the egg was good, maybe she could get the gargoyle to forgive her. The longer she waited, the heavier her betrayal would become.\n\n\"I hate human problems,\" she muttered. If she was a regular Arachne, she would just say nothing and hide the egg away until it hatched, then disappear. If she really wanted to, maybe that could be an option.\n\nBut where would they hide?\n\n\"You've got an awful lot on your mind,\" Bigfoot said, interrupting her thoughts. \"And don't bother lying to me about it, I can tell something's up.\"\n\n\"It's about Mike,\" she replied, realizing that if there was someone who would see things her way, it would be her uncle. Instead of spending all day trying to dodge him, she could have told him what was going on, and maybe he could have offered help or advice. It was something Eulalie would have told her to do, or even her father.\n\nGod, she missed them both.\n\n\"I always dreaded the day you discovered boys.\" Bigfoot chuckled at his joke. \"Tell me.\"\n\nShe opened her mouth to say something, but the harsh stench of fire flitted across her nostrils. Frozen in place, she looked around in fright, trying to determine where it was coming from.\n\n\"Fire,\" she whispered as if afraid nearby trees would ignite at the word.\n\nBigfoot sniffed the air deeply, then growled. \"Shit!\"\n\nHe sprinted, his large gait leaving her behind. She was barely able to keep up as they hopped through portals. The smell of flames continued growing until they burst through the trees and into a thick cloud of smoke.\n\nVelvet choked on the ashes in the air, her eyes watering. The sun was little more than a dim orb through the smoke-laden air, and Bigfoot gasped in horror.\n\nThe wind changed direction, revealing that the source was the barn. Thick flames reached for the sky like hungry hands, each one curling around a dark figure who moved along the roof, his body barely visible against the smoke. The setting sun gleamed off of Leeds' horns.\n\nMy egg! No sooner had the thought crossed her mind did Leeds turn his snarling visage in her direction. His horse lips twisted up into a sadistic grin, revealing thick buck teeth.\n\nNo. My egg. His voice penetrated her mind, freezing her in place. Unfurling his wings, he took to the sky with maniacal laughter that boomed across the landscape.\n\nBigfoot yelled her name, but she barely heard him as she gave chase.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nA ton of shit is about to go down as the final act begins. Stay tuned as the Radley family fights foes on multiple fronts, and I will see you next time! Don't forget to leave me some stars on the way out, I love your comments, and I will see you next time!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "family game night",
        "tick tock motherfucker",
        "monstergirls",
        "plot driven erotica",
        "jenny scares me",
        "mike gets a big head",
        "evolving magic",
        "fire bad",
        "hoedown in the barn"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-73"
}