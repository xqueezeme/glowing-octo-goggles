{
    "title": "I Will Love You Forever Pt. 2 Ch. 08",
    "pages": [
        "The house buzzed with activity in preparation for Will and Sally's wedding which was scheduled to take place in a few days. Everyone, the children included helped with decorating the house and the backyard with flowers. Dianna helped in the kitchen while Eli, Ralph and Marie put flowers in the vases. Kenji, Joel, Nick and John carried the table, chairs outside, and covered them with old sheets and blankets. \n\nThe only people not working were the bride and groom and it wasn't because they didn't want to, no one would let them.\n\n\"This is your wedding.\" Abby said as she shooed Sally out of the kitchen for the third time. \"Go spend time with your groom.\"\n\nWill wasn't faring much better. He tried to help carry chairs out to the yard but John stopped him.\n\n\"What do you think you doing?\"\n\n\"I was just going to carry out a few chairs.\" Will replied.\n\n\"No you're not\" John said taking the chair away from Will. \"Why don't you take Sally for a walk or something?\"\n\nFinally, Will and Sally gave up and went for a walk. As they walked, Will put his arm around Sally and pulled her tight against him. For some inexplicable reason, Lawrence Goodman and his cousin the warden crossed his mind. Even though they hadn't heard from Ellis and they had received no word that Lawrence was dead or was going to be released, he was nervous. Sally on the other hand was ecstatic. She couldn't wait to change her last name from Goodman to Mahoney. They talked to Dianne and Eli who both decided not to change their last names although Will was going to adopt them.\n\nSally was disappointed but understood their decision. Lawrence did love them and they didn't know about the threats or the depths of his Klan activities. She and Will had argued about whether they should be told about their father but Sally didn't want to destroy the good memories that they had of him.\n\n\"Sally, they need to be told.\" Will told her during one of their conversations. \"The man is dangerous and he's planning to come here looking for you and he'll take them with him when he leaves.\"\n\n\"He wouldn't hurt them, he loves them.\" she protested.\n\n\"Like he loved Kenny?\" Will asked fully aware that he was hurting her but she needed to see the danger.\n\n\"That isn't fair!\" Sally exclaimed.\n\n\"Maybe not,\" Will conceded, \"but neither is letting those kids believe that their father is anything other than what he is. What do you think he's planning to do with them if he gets his hands on them?\" he asked.\n\nSally was crying but he pressed on.\n\n\"He is going to make them into good little Klan soldiers like he did with Kenny and that's after he kills us. They need to know about him, they have to know that they need to stay away from him.\"\n\n\"Kill us? Why would he kill us?\" Sally asked.\n\n\"You know better than any of us what he's like.\" Will replied. \"You've even admitted that he scares you and you can't tell me that the idea that he could and would kill you hasn't crossed your mind. He's coming to California as soon as he's released or he escapes whichever happens first and we need to be ready.\"\n\nIn the end, they agreed to tell Dianne and Eli the truth about their father if only for the sake of safety. The talk they decided could wait until after the wedding and short honeymoon. That last conversation took place not long after Sally had received the signed petition for divorce and after thinking about it, she knew that Will was right.\n\nDianne and Eli needed to know the truth about everything and that included how Kenny had really died.\n\n<center>*******************</center>\n\nBecca looked at herself in the mirror. She was still waking up with bouts of nausea and vomiting but it was getting better. She realized that she wasn't \"coming down with something\" occurred to her after the second week of having symptoms. Immediately, she went into denial. She simply could not be pregnant! Her parents would never understand and this time, if they sent her away there would be no coming back.\n\nHowever, they weren't her only concern; there was Ty. What would he say? What could he say? The way that she saw it, there was only one option; they had to get married before it became known that she was pregnant. The problem was, she didn't want to get married to anyone except Andrew but it was marry Ty or be sent away to who knew where.\n\nInstead of facing facts, she went into denial. That had been a week ago and now she had no option but to accept the fact that she was indeed pregnant. It was obvious that she had to tell Ty first and hope that he agreed to marry her. The fortunate thing was that her parents liked him even if they thought him too old for her. She slipped her dress over her head and examined herself imagining herself with a huge stomach. The mental image was disconcerting at best. She had never thought of being married to and pregnant by anyone other than Andrew.\n\nShe wondered what his reaction would be to the news and then there was Ernie. He was looking for her and so far, she had managed to evade him. She knew that he wa still angry about his unspoken shunning from the group and to some degree, she understood but on the other hand, he could have said no and gone to Andrew. In her mind, what happened to him was his fault and not hers.\n\nBecca sighed, finished dressing and went to wait for Ty to pick her up.\n\n<center>*******************</center>\n\nTyrone did another count of the available funds. At the rate he was going, by the time Lawrence was released, they would have more than enough to pay the rent on a house for a few months. He would have to keep working but he had no problems with that. He actually liked his job and almost wished that he were doing it because he wanted to and not because he had to. But it was as Lawrence said, \"we have to sacrifice.\"\n\nHe got ready to pick Becca up in the car furnished by Richard Cartwright. Tyrone wondered what the family would think if they knew his true agenda. He also wondered what the Cartwright's politics were; they had never given any indication that they had the same beliefs as the Klan although Becca obviously did. In addition, if her parents didn't harbor the same beliefs, where had her beliefs come from? That was one of the things that he intended to ask her. He knew that she wanted to talk to him about something as well and wondered what it was.\n\nAfter he took her back home, he had business that needed to be taken care of. He now knew where Nick Alexander lived as well and would drive by from time to time. After that, he would drive by the house that Lawrence's wife lived to see what he could see. He had been watching the house for the past week and saw nothing earth shattering. It was obvious to him that Lawrence's wife and the lawyer living with her were much more than friends. He was due to send Lawrence a letter but he would wait until after the weekend to send it.\n\nHe looked around to make sure that the money was hidden and headed toward Becca's house. As he drove, Tyrone thought about how lucky he was that things had come together so easily. Lawrence would be proud, happy and relieved to know that he would have a nice place to stay in when he was released. It was even better that Becca's family liked him although they thought that he was a little too old for her. All it had taken for them to accept him was a flirt here and there and a stroking of the old man's ego.\n\nHe parked in front of the house, tapped on the horn lightly before he got out and walked up to the front door. Becca greeted him with a smile but he noticed that she seemed to be nervous.\n\n\"Hello baby.\" he greeted and gave her a kiss, \"you all set?\"\n\n\"Yes... my father wants to talk to you before we go though.\"\n\nTyrone felt his stomach drop; he couldn't lose his job. He hadn't saved enough money yet.\n\n\"Sure, is he in the study?\"\n\n\"Yes, I'll wait here.\" Becca replied.\n\nA minute later Tyrone was in the study sitting across from Becca's father.\n\n\"You wanted to see me?\" he asked.\n\n\"Yes.\" Mr. Cartwright replied. \"I have a few concerns that I would like to talk to you about with the first being my daughter. In case you haven't noticed, she's quite smitten with you and I want to know your intentions.\"\n\n\"I... I don't have any intentions.\" Tyrone replied. \"She's a very sweet young woman whose been helping me get acclimated to my new surroundings. Did she say something?\"\n\n\"No but I know the look.\" Cartwright replied. \"I'm going to make a suggestion, if this is no more than friendship as you say it is, then stop seeing her so often.\"\n\nDamn it! Tyrone swore as he replied, \"I think that might be a good idea. I'll tell her tonight. What was the other concern?\"\n\n\"I have always believed that a man can believe what he wants to so as long as he doesn't push those beliefs onto other people.\"\n\n\"I would agree with that.\" Tyrone said as he wondered where the conversation was heading.\n\n\"I'm glad to hear it because it makes it easier to voice my next concern. I heard you on the phone the other day and I didn't like what I heard.\"\n\nTyrone didn't speak.\n\n\"I heard you using the \"N\" word and I don't appreciate that kind of language in my office and would appreciate if you refrained from using it. I know that it's a commonly used word in your part of the country but we're not in the south are we?\"\n\nTyrone bit his tongue and curbed the urge to punch the man but restrained himself. If he did that he would lose his job and Becca's money. He plastered a smile on his face, nodded his agreement, and apologized.\n\n\"Of course you're right and I do apologize.\"\n\n\"Good, I was hoping that you would understand. It's about time that this country came to grips that the Blackman is here to stay and that they deserve the right to pursue their dreams as much as the white man does.\"\n\nTyrone almost choked, Becca's father was the enemy that Lawrence had talked about but still he needed him. They talked for a few more minutes before shaking hands. Tyrone fought the urge to run to the kitchen to wash them but did stop in the bathroom. He was more even confused about Becca than before. It was clear that her parents didn't share her beliefs; the conversation with her father had confirmed it. It didn't matter he decided as long as he remembered to watch his mouth at work and he still had her money coming in.\n\n\"Is everything alright?\" Becca asked.\n\n\"It's fine.\" Tyrone replied. \"Let's go.\"\n\nTyrone drove her back to the hotel and snuck her up the back stairs to his room. He knew that people would hear them fucking but he didn't care. As far as they were concerned, she was a slut. It was an impression that he did nothing to change.\n\nAs soon as they were in the room, he pushed her down to her knees while he fished his cock out.\n\n\"Ty...\"\n\nWas all that she got out before she found her mouth filled with his cock, her nose buried in his pubic hair.\n\n\"Oh yeah... do that thing that you do.\" Tyrone moaned. \"Do it and I might eat your ....\"\n\nTyrone's head flew back as he grabbed Becca's head, held it in place and began ramming into her mouth hard and fast until he came moaning loudly. Pulling her up by her hair, he led Becca to the bed, pushed her back and roughly opened her legs.\n\n\"Ty you're hurting me.\" Becca said. He had never been so rough before and he was scaring her.\n\nHe slowed down and apologized.\n\n\"Sorry baby, I just got carried away.\" he wanted to tell her to shut up but he still needed her. He gave her clit half-assed attention and crawled out of the bed.\n\n\"Th... that was it?\" Becca asked.\n\n\"Are you complaining?\" Ty asked.\n\n\"No... I mean I didn't come.\"\n\nTy shrugged and then thought better of it. He lay beside her and fingered her until she came not once but twice.\n\nSomething in his reaction niggled at Becca but when he brought her to orgasm twice she pushed it away. \n\n\"What did you want to tell me?\" Ty asked when Becca tried to cuddle with him.\n\n\"We have to get married.\"\n\nTy looked over at her, \"What are you talking about?\" he asked.\n\n\"I'm pregnant with your baby.\" she announced.\n\nHis initial response was anger but then he saw the opportunity. He tamped his anger down, put an arm around Becca, and pulled her close. He would have to come up with a story for her father but that wouldn't be hard to do and who knew? Maybe her folks would help them get a house. It would solve a whole lot of problems even though he really didn't want a kid but then again maybe it wouldn't be so bad. Lawrence was always talking about raising little soldiers for the organization.\n\n\"How far along are you?\" he asked.\n\n\"Not far, maybe a month... Are you mad?\" Becca asked.\n\n\"No baby... I think it's great but we need to get married as soon as we can. We'll tell your folks tonight when I take you home.\"\n\n\"Ty?\"\n\n\"Do you love me?\"\n\n\"Sure baby.\" Ty said absently anxious for her to be gone so that he could write that letter to Lawrence.\n\nTwo hours later, Tyrone, Becca and her parents were convened in the living room. Becca's father was beyond furious.\n\n\"You assured me that you and my daughter were no more than friends!\"\n\n\"I know that and I'm so sorry that I lied but I knew that you feel that I'm too old for her.\"\n\n\"Pregnant!\" Becca's father spat out while her mother sat on the sofa too shocked too say anything.\n\n\"Daddy....\"\n\n\"Quiet! I don't want to hear from you.... Pregnant! You have to get married right away and there won't be a wedding.\"\n\n\"But everyone will know that we had to get married!\" Becca wailed and looked to her mother for support.\n\n\"You should have thought about that before you fornicated!\" her father snapped.\n\n\"Mom?\"\n\n\"I'm sorry Becca but I have to agree with your father for the reason that he just stated and for another reason. If we wait then people will definitely put it together. As it stands now, if you get married this week, you could always say that the baby came early.\"\n\nTears streamed down Becca's face. She barely heard what her father was saying but he had Tyrone's full attention. \n\n\"Of course you'll need a house but you can stay with us until we find you one. Harvey Carter is a friend of mine; he'll find us a deal on a house. In the meantime, get out we need to talk to our daughter.\" he said to Ty.\n\nTyrone knew that he should have objected and stayed with her but he really didn't care. He was getting what he wanted and he couldn't wait to tell Lawrence the news.\n\n<center>*******************</center>\n\nLawrence walked around the prison yard aware that he was being watched not just by the warden and Jacob Lincoln but also by the other black inmates. While not frightened, he was nervous and for the first time began to wonder if he was going to leave the prison alive. Jacob Lincoln no longer hid his hatred of him and Lawrence knew that it was more than the fact that he was a white man. This was very personal.\n\nHe searched his memory trying to recollect if he had ever met the man or seen him anywhere but he couldn't remember. As far as he was concerned when you saw one nigger, you saw them all and he made it a habit not to look at them too much unless he had one captive.\n\nDuke caught up to him and walked with him.\n\n\"What did you find out?\" Lawrence asked.\n\n\"No one knows any more about him than what I told you.\" he replied. \"All of the guards that could have helped me are gone and Ellis just fired two more for sharing cigarettes with the prisoners.\"\n\n\"Fuck.\" Lawrence swore under his breath. \"Any mail yet?\"\n\n\"Nope but Ty is good about keeping you up to date, maybe next week.\"\n\nLawrence felt a sense of urgency that he couldn't explain. He would have to take the first opportunity that came along and escape. The nigger and the warden had been just issued a reprieve unless he could get his cellmate up to snuff sooner. It meant that he had to choose between his targets and it would be Jacob Lincoln since he would be the easier of the two targets.\n\nLawrence looked around the yard for his cellmate Saul Manning and spotted him sitting alone staring off into the distance. Saul was barely recognizable as the dirty, smelly cellmate that Ellis had moved into his cell. Lawrence made the man bathe, made sure that he was clean and took the time to find out about him.\n\n\"Where you from boy?\" he asked the night the warden made him sign the divorce papers.\n\n\"Down the road about twenty miles.\" He replied surprised that he had been spoken to.\n\n\"What you in for?\"\n\n\"Killin a man.\"\n\n\"Yeah? Who'd you kill?\"\n\n\"I don't wanna talk about that.\"\n\n\"That's alright... A man's got to keep some secrets.\" Lawrence replied.\n\nIt took a couple of weeks before Saul felt comfortable enough to tell Lawrence whom he killed and why.\n\n\"He shouldn't have hurt Darlene.\" he said.\n\n\"He\" was Saul's father who had always had a bad temper and the family knew to stay away from him when he came in the door with a scowl on his face. They all learned never to ask, \"What happened?\" it only earned them a backhand across the face. By evening, he would be back to his usual grumpy but approachable self with the exception of the night that Saul killed him.\n\nThat afternoon Samuel Manning had come home angrier than usual. By evening, the anger had escalated to the point where no one would come out of his or her rooms, not even for supper. Their mother was in the bedroom with the youngest, Darlene who had begun to cry because she was hungry. Tried as she might, she couldn't get the girl to stop crying which in turn incensed Samuel.\n\n\"Shut that fucking kid up!\" he screamed from the living room.\n\nDarlene only cried harder when she heard the anger in her father's voice. Before anyone really understood what was happening, Samuel was in the bedroom snatching Darlene from her mothers arms and violently shaking her as he screamed at her to shut up.\n\nSaul had had enough. He went into the kitchen, grabbed the cast iron skillet, ran into the bedroom and hit Samuel as hard as he could across the back of the head. His intent hadn't been to kill him but that's what happened. The next thing he knew, he was in jail, had his trial, found guilty and brought to the prison. He was eighteen years old, still impressionable and needed a friend.\n\nLawrence found out why Saul had been so dirty. He was too afraid to go into the showers because of comments that were made to him.\n\n\"No one's going to touch you.\" Lawrence said and made sure that someone was always nearby when the Saul showered.\n\nFrom that point on, Saul followed Lawrence around like a puppy and did whatever he asked without question. \n\nHe would be the perfect patsy.\n\n<center>*******************</center>\n\nJacob continued his campaign to unnerve Lawrence. He like Lawrence wasn't without his resources. He wanted Lawrence know that he was being watched and purposely began to let little pieces of information to get out. It was nothing major but enough to keep Lawrence interested. \n\nJacob also knew from a very reliable source that Lawrence was planning an escape but the source didn't know when or how it was going to happen. It didn't matter. Lawrence Goodman wasn't going to leave the prison, at least not alive. \n\nIt was time for him and Lawrence both to start making their peace with god. Jacob had no doubt that when he killed Lawrence, he would hang for it and he was fine with that. It meant that he would be reunited with his family. As far as Lawrence went, he hoped to god that he ended up in his own special hell.\n\nHe saw Lawrence standing across the yard and called out to him, \"Nice day isn't it?\" and then walked away chuckling knowing that he had gotten under the man's skin. It was time to begin his preparations.\n\n<center>*******************</center>\n\nThe summer had been a hellish one for Andrew and he was glad that it was ending. He spent the bulk of it organizing the group that Hathaway had put him in charge of. He spent some of the time finding out what he could about the \"melting pot\" and spent a lot of time examining his feelings for Patricia.",
        "In the end, he admitted to himself that she held a certain fascination for him. He went as far as to admit that he found her attractive and that in another place and time... maybe. However, it wasn't another place and time, it was the here and now and she, her husband and the Jew were enemies and had to be treated as such. \n\nHe now knew where they lived and had even driven by a few times and even sat in his car watching it one day. It angered him that they lived in a house bigger and much nicer than he and his family did. Then he saw Ralph and Marie in the front yard. His initial reaction was that they were beautiful children; the second one was that it was too bad that they had been born into a world like this and his last thought was that he had to do what he had to do. There would be casualties and unfortunately, those casualties would include children on both sides.\n\nWithout realizing it, he had just crossed a line that it wasn't too late to go back over. He looked at the house again and got angry again. It was the realization that the Jap and his wife were living better than he was that made his anger grow. As he stared at the house, he was unaware that Ralph was staring at him wondering who he was and why he was watching the house.\n\nAndrew shook himself back to attention, saw Ralph staring at him, cursed and took off. He could only hope that the boy would forget about seeing him. \n\n<center>*******************</center>\n\nEven with the summer classes, the summer for Kenji, Patricia and everyone else had been a pleasant one with the pending wedding being the highlight. Ralph was still missed but the brunt of the pain of his passing had eased with time. Penny had become a frequent houseguest, was readily accepted into the \"family\" in no time, and was active in the planning for the wedding. When they weren't studying and everyone was free there were frequent get togethers with the last week of August being used to finalize wedding plans.\n\nPatricia loved seeing Kenji relaxed as he played with the children, all four of them and taught them basic martial arts moves. Eli loved it and asked Kenji about advanced lessons.\n\n\"You must ask your mother first.\" Kenji said pleased to have another student.\n\nWhen the children were in bed, he and Patricia had their own private lessons that he couched in the terms of something for them to do together. However, she wasn't fooled; she knew what he was thinking. He was trying to prepare her so that she could defend herself if she had to. Even so, she loved the private time especially the kisses when she did something well and the touches that included a caress when he corrected her position.\n\nJoel and Penny's relationship grew to the point where everyone was wondering when there would be an engagement announcement but they were too polite to ask. \n\nThe only thing that would have marred the summer was if Ralph would have remembered to tell Kenji about the car that he saw watching the house.\n\n<center>*******************</center>\n\nMarji made Hathaway's dinner without comment. Her several days of peace and solitude were over with. Michael had been gone for several days and hadn't told her where he was going or when he would be back. She took the time to count the cash that she had hidden in the chest and began to think about leaving. The issue that remained was what she was going to do if he killed her niece as he promised.\n\nOne thing was for sure, she couldn't take much more of his hatred and abuse. She began to examine her reasons for staying and came up with several. Shame was at the top of the list. She didn't want to be the first in her family to have a failed marriage. She also didn't want to explain how she was married to an anti-Semite and racist. The second thing was Naomi, Michael wasn't bluffing-he really would hurt her and other members of her family if she left and then there was the money. If she left, she would have nothing except for her life.\n\nShe weighed her options and it came down to two or three. She could call her family, tell them what was happening and leave with the money she had, she could stay and finally, she could kill him and be free of him forever. Her stomach roiled at the thought of murdering Michael and what would happen to her if she were caught. She wasn't sure if she could survive prison.\n\nThe front door slammed signaling that Michael was home. As usual, he stomped into the kitchen without speaking to her, sat at the table and waited expectantly for dinner to be served. What he didn't know was that she had started making his meals kosher and had started praying over them in the prayers that she remembered from her childhood. If he had even suspected, he would have beaten her to within an inch of her life.\n\n\"What is this shit?\" Michael asked as he looked at the food in front of him.\n\n\"A new recipe.\" Marji replied. \"I thought that you might like something different.\n\nHe looked at her and then looked at the plate that contained what looked like beef stew. He didn't like his foods combined and she knew it.\n\n\"You know that I don't like combined dishes.\" he said.\n\n\"You don't like casseroles but this isn't a casserole.\" Marji said softly.\n\n\"Fix me something else and make it quick I have a meeting.\" \n\n\"I... is a sandwich alright?\"\n\n\"Just hurry up!\" he snapped.\n\nMarji quickly removed the offending food and made him a sandwich surprised that he wasn't angry enough to hurt her.\n\nShe set the sandwich in front of him and backed away her eyes on his hands. She watched as he quickly ate the sandwich barely chewing before swallowing and wondered what was going on that he was so preoccupied. Without a word, he finished his meal, got up and left.\n\nMarji let out a sigh of relief and slumped against the kitchen counter. After several minutes, she moved away from the counter, looked at the calendar and did a mental calculation. The phone bill had just been paid and wouldn't be due for another month. With any luck, he wouldn't be here to see it. She took a deep shaky breath and closed her eyes not believing what she was about to do.\n\nShe looked around as if she expected her husband to materialize out of thin air, picked up the phone and made a call.\n\n\"Meyer? This is Marji.\"\n\n<center>*******************</center>\n\nErnie's summer was even more miserable than Andrew's had been. He was still on the outside looking in. He wasn't invited to any of the special meetings and wasn't privy to what was happening with the group. He had even tried talking to Andrew to tell him that he had learned his lesson. Andrew let him have his say but made no comment either way. By the end of June, Ernie realized that he would never be accepted back into the group, which meant that in essence, he had no real friends.\n\nHe heard that Becca was back in town but as of yet he hadn't seen her. She was the cause of all of his troubles, he still wanted retribution, and he was determined to have it. That was the only thing that kept him sane as the summer days slowly passed by.\n\nIt was now September and he still hadn't seen Rebecca, he had given up on talking to Andrew and for all practical purposes dropped out of the group. No one had even questioned his absence which told him several things, they weren't' afraid that he would talk; if he did he would be beaten again. It also told him that Andrew Kelley wasn't and had never been his friend, none of them had. If they had been, they would have punished him for his stupidity and then moved on but they hadn't, he was still being punished for one stupid mistake.\n\nHe was no longer concerned about what Andrew called the \"melting pot\" instead he became curious about them and that led him to examining why he was so concerned about them to begin with. He realized that it was because of Andrew and his need to belong somewhere. If it hadn't been for Andrew, he wouldn't have given the small group a second thought. And who knew? He might have even become friends with them. Of the group, he admired Kenji the most.\n\nHe liked his calm demeanor and the way that he carried himself. There was something else; he was strong enough to stand-alone. He didn't seem to need anyone or anything to make him feel strong. Ernie envied him and wondered if there was anyway...\n\nNo he decided, there was no way that he could look Kenji in the face after what he did and after how he treated the Jew. \"Joel\" he corrected himself. \"His name is Joel and not Jew boy,\" he muttered.\n\nWith nothing else to do with his time, he began to look through the textbooks. Classes would be starting in a couple of weeks.\n\n<center>*******************</center>\n\nSally looked at herself in the mirror and had to admit that she looked beautiful. She smoothed the skirt of the powder blue dress that she had chosen for the wedding and then patted her hair that Hattie had fixed into an elaborate bun.\n\n\"You look beautiful.\" Patricia told her.\n\n\"Do you think that my future husband will agree with you?\" she asked.\n\n\"I have no doubts about that.\" Patricia replied smiling at her.\n\n\"I can't believe that this is really happening.\" Sally said as she turned to face Patricia\n\n\"It's about time!\" Patricia replied.\n\nSally hesitated and then spoke.\n\n\"I want to tell you something before we go out.\" she said. \"When we moved here I really didn't know the depths of Lawrence's hatred. I never wanted anyone hurt but I am ashamed to say that I did hold to some of his beliefs enough to begin to teach them to our children. What I didn't expect was to find another family and to be shown just how wrong we were.\n\nYou, Kenji and the rest showed the kids and me a kindness that we really didn't deserve in spite of Lawrence. I can't undo anything that was done or take back anything that was said but .... I am so happy to be here and I am pleased to call you my friend.\"\n\nThe two women hugged until Hattie tapped on the door.\n\n\"It's time!\"\n\nWill stood with Nick standing to his left with Ralph and Eli standing beside him. He looked up when he heard the back door open. Marie came out wearing a blue dress and carrying a basket filled with the petals of various kinds of flowers. Patricia came out next followed by a very nervous Sally and Dianne. The music was provided by the radio that John turned on to the already selected station when Marie began her walk. He turned it off when Marie, Patricia and Sally reached their spots and then took is place next to Hattie. The only other guests were a few people from Will and Nick's office who knew about the eclectic family and considered themselves friends. Overall, there were twelve guests, which included Paul, Joel, Abby and Penny.\n\nThe minister began the service right at five pm and by five thirty; it was over. As the minister spoke, Nick looked at Hana and wished that he could legally marry her and wondered if that day would ever come. He looked at the faces watching the ceremony. None of the people from the office knew about the true relationship between him and Hana and if they did, they didn't say anything or gave any indication that they knew. As far as they were concerned, Hana was his housekeeper whose son was a friend of his. As much as he hated the way things were, there was nothing that he could do about it.\n\nAfter the ceremony and while everyone was eating, Nick pulled Kenji aside.\n\n\"I want to have a meeting with everyone sometime in the next couple of weeks. We need to start planning for Goodman's eventual release.\"\n\n\"Have you heard something?\" Kenji asked.\n\n\"No but I just want to be ready. I don't need to remind you to watch your back.\" Nick replied.\n\nKenji nodded. He sensed Nick's unease and wondered about it.\n\n<center>*******************</center>\n\nRalph, Eli, Dianne and Marie ran around the house playing tag always letting Marie win.\n\n\"Awww you got me!\" Eli said to her laughing as he picked her up and spun her around.\n\nNone of them with the exception of Ralph noticed the car parked across the street. He recognized the man as the same one who had been watching the house before. Whoever he was, Ralph didn't like him. When the man saw Ralph looking at him, he sped off.\n\n\"Tag!\" Marie screamed and took off pulling Ralph's attention from the car.\n\nAndrew swore. This was the second time that he had been spotted and by the same kid. But what had disturbed him even more was the fact that there were two other children- white children playing with the mixed kids. He wondered where their parents were that they would allow such a thing. Hathaway was right, he thought to himself, if they weren't careful, marriage between the races would become legal and if that happened, the white race would become the minority if not extinct.\n\nIt wasn't until the guests had gone and Ralph, Dianne and Eli were picking up the dirty dishes that Ralph remembered the car. He looked around for Kenji and saw him in the far corner of the yard talking with Nick. He was going to wait but was afraid that he would forget again so he handed the plate that he was holding to Eli and ran over to Kenji and Nick.\n\nHe waited until Kenji acknowledged him before speaking.\n\n\"Do you need me?\" Kenji asked.\n\n\"Yes papa.\" Ralph replied. \"I want to tell you something.\"\n\n\"Of course, do we need to speak privately?\" Kenji asked.\n\nRalph thought about it for a minute before answering.\n\n\"Grampa Nick can stay.\" he replied.\n\n\"Alright then, what do you need to tell me?\" Kenji asked.\n\nBoth men listened as Ralph told them about the car that he had seen watching the house not once but twice.\n\n\"Ralph,\" Nick said, \"can you tell me what the man looked like?\"\n\n\"He is white and has yellow hair.\"\n\n\"Did he say anything?\" Nick asked.\n\n\"No grampa, he just watched the house.\"\n\nKenji knew who the man was and couldn't believe that he had allowed himself to be seen.\n\n\"Is there anything else?\" Kenji asked.\n\n\"No papa.\"\n\nKenji picked Ralph up and hugged him. \"Thank you for telling us, you have done well in helping to protect your family.\"\n\nRalph glowed under the praise and hugged Kenji back.\n\n\"Now go finish your chores and we will read together before bedtime.\" Kenji said putting him down.\n\nWhen he was out of earshot, Nick looked at Kenji.\n\n\"That is one smart kid you have there.\"\n\nKenji nodded his agreement. A normal child wouldn't have thought anything about a car parked across the street from their home. Ralph noticed the car twice and followed his instincts. He knew that the car meant trouble.\n\n\"Do you know who it is?\" Nick asked.\n\n\"I do.\" Kenji replied. \"Andrew Kelley.\"\n\n\"The punk from school?\" Nick asked. \n\n\"Yes that is the one.\" Kenji replied as he wondered how long Andrew had been watching the house. Later when the children were in bed, he and Patricia had to talk.\n\n<center>*******************</center>\n\nBecca looked at the simple white dress that hung in her closet. By Monday afternoon, she would be a married woman and in eight months, she would be a mother. She didn't know which scared her more and after several minutes of deliberation, she decided that motherhood was more frightening than getting married.\n\nShe had tried unsuccessfully to get her parents to agree to a small wedding. She almost had her mother convinced but her father vetoed the idea.\n\n\"You don't deserve a wedding! The money that would have been for your wedding is going toward the purchase of a house now don't bring it up again!\"\n\nA tear escaped as she looked at the dress. This wasn't how it was supposed to be she thought as she bitterly wiped away a tear. There was supposed to be bridal showers and a huge wedding at the church. Her friends were supposed to be looking at her with envy as she married Andrew. She didn't want to be married to anyone except Andrew and god help her she was still in love with him. If she had only kept her mouth shut and not gotten involved with Ernie, she wouldn't be getting married to a man that she had convinced herself that she loved. The reality of it was that she didn't love Tyrone and now it was too late.\n\nThe bad part about it was she was coming to realize that Tyrone didn't love her any more than she loved him. He hadn't called or come to see her since they broke the news to her parents. When she called the hotel to talk to him, he was never there and hadn't returned any of her phone calls. \n\nShe turned away from the dress wishing that there was a way out of the mess that she had gotten herself into. Andrew was out of the question and there was no point in even thinking about him, he wouldn't give her a second look even if he wanted to. No one would she realized. Her only option was to run away but to where? In addition, how would she survive? She had no money-she had given it all to Tyrone.\n\nShe was trapped.\n\n<center>*******************</center>\n\n\"Kirei we need to talk.\" Kenji said once the children were in bed.\n\n\"What's wrong?\" Patricia asked not liking the worried tone of his voice.\n\n\"Let's talk downstairs. Joel should here this too.\"\n\nJoel and Penny had just finished the last of the dishes when Kenji and Patricia got to the kitchen.\n\n\"All done!\" Penny said in her usual cheery voice.\n\n\"Thank you but you really didn't have to wash dishes.\" Patricia said.\n\n\"No bother! And besides I got to attend a lovely wedding and got to eat some of the most delicious food I've ever had.\"\n\nJoel wasn't listening but watching Kenji. Something was wrong.\n\n\"Kenji? What's going on?\" Joel asked. \n\n\"We need to talk.\" Kenji replied.\n\nThirty minutes later, Joel and Penny were aware of the situation.\n\n\"He was here twice?\" Penny asked.\n\n\"At least.\" Kenji replied.\n\n\"What do you want to do?\" Joel asked. \"I can move back here if it'll help.\"\n\n\"That is a possibility but my concern lies more for when we are at school.\" Kenji said. \"During the day Abby, my mother and Patricia's parent's are here alone with the children.\"\n\n\"Can they go somewhere else during the day?\" Penny asked.\n\nAfter discussing it for several minutes, having them go to another house during the day was the only viable option that they could come up with.\n\n\"We have four homes available to us.\" Kenji said. \"Nick's, Abby's, John's and Sally's.\"\n\n\"Do you think that Andrew knows about them?\" Penny asked.\n\n\"I don't believe so but we'll tell the others to be aware of any strange vehicles parked in front of their homes.\" Kenji replied. \"We'll call them tomorrow. When we take them to any of those places we'll have to leave earlier for school.\"\n\n\"If I'm off....\"\n\n\"You will go where the children go.\" Kenji said interrupting her, \"and it isn't up for negotiation.\" he said firmly.\n\nJoel and Penny left shortly after they formulated a plan leaving Patricia and Kenji alone to finish their conversation.\n\n\"Do you really think he'll do something?\" Patricia asked.\n\n\"I do not know but we need to be prepared.\" Kenji replied. He hesitated in completing his thought already knowing how she would react.\n\n\"Kirei, we need to pack a bag for each child and one for us just in.....\"\n\n\"No.... not again.\" she whispered as the memories of always having to be ready to leave at a moments notice hit her. She had believed those days to be long gone.\n\nKenji pulled her close and began to rub her arm and back. When she calmed he continued.\n\n\"I know that this is difficult for you, it is difficult for me as well but Kirei, we have to do this until Andrew is taken care of.\"\n\nPatricia sat up not liking the tone of his voice.\n\n\"Wh... what are you going to do?\" \n\n\"It is one thing to try to harass me at school; it is one thing to have his anger directed at me but another thing altogether when he brings it to our home. I will not allow him to come here and frighten our children and our family.\"\n\nPatricia had only heard that tone in his voice only once before and that was when he saw the cut on her face and wanted to know who had done it. She managed to keep it from him then by telling him that her father was handling it, which had been true, but now he knew who the threat was.",
        "\"Kenji what are you going to do?\" she asked again.\n\n\"I am going to do nothing more than talk to him.\" Kenji replied.\n\nPatricia wanted to tell him not to confront Andrew but didn't. It wouldn't have done any good but she could caution him.\n\n\"Kenji, please be careful. He wants you to get angry.\"\n\n\"I already know this.\" Kenji replied, \"He has been trying to find the best way to get me to react and now he has my full attention.\"\n\n\"Kenji....\"\n\n\"Let's go to bed, I would like to take the children to the zoo tomorrow.\"\n\nPatricia wanted to say more but didn't. She would try again in the morning but she already knew that she would fail.\n\n<center>*******************</center>\n\nKenji's chance to talk with Andrew didn't come until classes had started. He, Patricia and Joel dropped Ralph and Marie off at Nick and Hana's on their way to class. The ride was tense, quiet and it was because of Kenji. His anger at Andrew's appearance at their home hadn't cooled.\n\nPatricia stroked his hand the way that he had stroked hers countless times in an effort to calm him. If it was working, she couldn't tell and she refrained from saying anything. She looked back at Joel and saw that he was as angry as Kenji was and realized that he would be of no help to her.\n\nWhen they got to school, Kenji walked her to her class, kissed her on her forehead and gave her hand a little squeeze.\n\n\"I am fine, do not worry.\" he told her before he walked away.\n\nBut she was worried.\n\n\"My name is...\"\n\nWas all that she heard the professor say. She kept looking at the clock and wondered if it was broken because it didn't seem to be moving. Finally, class was over. She gathered her things and ran out of the classroom forgetting her promise to wait until Kenji came to get her and ran into Joel.\n\n\"Where's Kenji?\" she asked.\n\n\"He's fine, he asked me to meet you.\" Joel replied.\n\n\"Where is he?\" Patricia asked panicked.\n\n\"Patricia, he's fine. I promise.\"\n\n\"Joel, please where is he?\" Patricia begged.\n\n\"I... I can't tell you.\"\n\n\"What? What do you mean that you can't tell me? What is he going to do?\" Patricia asked now crying.\n\n\"He's just going to talk to him.\" Joel replied. \"He doesn't want you there in case it becomes more than a talk.\" Joel added deciding that the truth would be better than vague explanations.\n\n\"Joel...\"\n\n\"Come on, let's wait outside.\"\n\n<center>*******************</center>\n\nAndrew knew from the moment that Kenji walked into the room that he was angry. He had hoped to see a little fear and was actually surprised when he saw nothing but anger in Kenji's eyes. He was now questioning the wisdom of returning to the house for that second look. He really didn't think that he would be spotted the second time but he was and it was by the same kid. Kenji's demeanor had answered the question that had nagged at Andrew for the past week, had the kid said something?\n\nKenji sat in his seat looking forward not even acknowledging Andrew. He forced himself to pay attention although he already knew the material. As soon as the clock showed that it was five minutes until the end of class, he began to pack his bag. He knew that Andrew was going to try to leave the room as soon as the class was dismissed.\n\nThe last five minutes of class seemed to drag for both Andrew and Kenji. They both knew that the uneasy peace between them had come to an end.\n\n\"Joel, go to Patricia and do not let her come here.\" Kenji told Joel before class started.\n\n\"What if she asks?\"\n\n\"Do not let her come here but tell her the truth. I do not want here in case this becomes more than a talk.\"\n\nWhen the bell rang, Joel took off and Kenji called Andrew's name. Andrew and his group stopped, turned around and looked at Kenji surprised that he had spoken. Andrew looked at his group and dismissed them.\n\n\"No, I want them to hear me.\" Kenji said as approached Andrew. \n\nAndrew shrugged his shoulders giving the appearance that he could care less but inside, his heart was beating fast. He now knew the one thing that would make Kenji lose his cool-he thought. He looked at Kenji and was dismayed to see that although he was angry, that cool, calm demeanor remained.\n\n\"What do you want?\" Andrew asked coolly.\n\nKenji was now about a foot away from the group. He stopped and looked each man directly in the face before turning his attention to Andrew.\n\nAndrew returned the gaze resisting the urge to step back. Kenji's eyes, which were normally a warm light brown, were cold and anger filled but he was under control.\n\n\"What do you want?\" Andrew asked again.\n\n\"It is one thing for you to insult me, it is one thing for you to threaten me but it is another matter when you begin to involve my children and family. I am going to tell you this once. Stay away from my home and my family. Your issue is with me.\"\n\n\"Kick his yellow ass Andrew!\" someone called out.\n\n\"Shut up!\" Andrew snapped not taking his gaze off Kenji.\n\n\"You can't let him.....\"\n\n\"I said, shut the fuck up!\" Andrew snapped again.\n\nWhoever the speaker was, didn't listen. He charged Kenji and found himself sitting on his ass. Andrew's eyes widened in surprise, he hadn't seen Kenji move. The other men started to approach but Andrew stopped them.\n\n\"Stand down! Milt, get up later we'll talk about following orders.\"\n\nKenji stared at Andrew assessing him and not liking what he was seeing. Andrew Kelley was a bully and a coward. And whether he knew it or not, the men in his group knew it too. \n\nDamn it! Andrew thought, he wasn't prepared for a physical confrontation but Milt's rash action had decided the matter.\n\nKenji hadn't moved; the ball was in Andrew's court. It had become a game of who would blink first. Just as Andrew stepped closer to Kenji, a voice rang out.\n\n\"Is there a problem?\"\n\nAndrew stepped back his eyes never leaving Kenji's face.\n\n\"No problem.\" he called as he backed away relieved that the \"talk\" hadn't become anymore physical than it had.\n\nKenji watched Andrew retreat. It wasn't over. It was just beginning. Andrew had no choice now but to save face or to admit to what he really was. Kenji felt sadness settle over him. He had no desire to fight with Andrew or anyone else for that matter but he would in order to protect his family. He picked up his bag and walked out of the classroom to find Joel and Patricia.\n\n<center>*******************</center>\n\nErnie watched the whole thing from the back of the classroom and was thrilled to see Andrew shaking in his boots. He found his admiration of Kenji growing. When he saw that the confrontation was escalating, he went and found someone, it was his way of helping without coming forward.\n\nAs he left the classroom, he thought about the disturbing rumors that he was hearing about Becca. He couldn't believe that she would be stupid enough to get knocked up and that she had married the guy. He found himself feeling sorry for her and realized that he still had feelings for her. It was those feelings that led him to help her more than the blowjob had.\n\nHe let out a sigh and headed to the library finding that he had more time to study now that he wasn't a part of the group anymore. It wasn't too late for him to pull up his grades so that he could get a job at a good hospital somewhere.\n\n<center>*******************</center>\n\nPatricia paced restlessly waiting for Kenji. She didn't want him to do anything that would get him kicked out of school after all they had through to get there. She tried several times to get Joel to tell her where Kenji was meeting Andrew but he refused.\n\n\"He'll be here soon.\" he said after she began to beg. \"Patricia, I know that you're scared but try not to be. Kenji can handle himself.\"\n\n\"But what if all of them jump him? Who's going to help him?\"\n\n\"Alright.\" Joel said, \"If I go will you promise to wait here?\"\n\n\"I promise!\" Patricia said eagerly.\n\n\"I mean it Patricia, you have to stay here.\" Joel said.\n\n\"I promise now go!\"\n\nJoel ran into Kenji as he was coming toward him.\n\n\"Where is Patricia?\" Kenji asked.\n\n\"Over by the library scared half to death.\" Joel replied. \"What happened?\"\n\n\"Andrew Kelley is much more dangerous than we thought.\" Kenji replied. \"Let's go to Patricia, we can talk on the way home.\"\n\nWhen Patricia saw Kenji, she took off at a run toward him. Not caring who was looking, she hugged him.\n\n\"Kirei, I'm alright, nothing really happened.\" \n\n\"What do you mean by nothing really happed?\" Patricia asked.\n\n\"I mean just that.\" Kenji replied. \"Let's talk in the car.\"\n\nOnce they were in the car, Patricia bombarded Kenji with questions. All of which Kenji answered honestly.\n\n\"One of them attacked you?\" Patricia asked shocked. \n\n\"Yes Kirei but no one got hurt. An instructor came in before anything more happened.\"\n\n\"But what if he hadn't?\" she asked.\n\n\"I would have defended myself.\" Kenji replied.\n\n\"Do you realize that you could be expelled?\" Patricia asked.\n\n\"Kirei, listen to me. Andrew Kelley means you and the rest of our family harm. I would give my life to keep all of you safe. I will give up school if that is what it will take to keep all of you safe. You, our children and our family are much more important than anything that I may want or need. I will not go looking for him but I had to let him know that I will not tolerate him threatening our friends and family.\"\n\n\"Kenji, he's dangerous isn't he?\" Patricia asked. \"Especially since his friends know that he's really afraid of you.\"\n\n\"Yes Kirei and that means that we must always be on guard. When at school be careful and try not to go anywhere alone. He will use you to get to me; the rules of the game have just changed. They changed the moment Ralph saw Andrew watching our house that first time. When we get home, we will pack a few things and stay with Abby until this is over.\"\n\n\"But....\"\n\n\"No kirei, no arguments.\" Kenji replied. \"Joel, would you mind helping by packing up the perishable food in the refrigerator?\"\n\n\"Of course not and for the record, I agree with you.\" Joel said.\n\n<center>*******************</center>\n\nBecca Morgan sat on her bed looking at the plain gold wedding band that was only a few days old. She and Tyrone were staying with her parents until the house that her father bough for them was ready. It wasn't long after the wedding that the real Tyrone began to peek through the fa\u00e7ade. In front of her parents, he was the attentive husband and future father but alone he was rude and demanding and seemed to take delight in humiliating her.\n\nOn their wedding night, he insisted on staying at her parents' home instead of going to the hotel room. He made her give him a blowjob knowing that her parents were just down the hall.\n\n\"Tyrone please, they'll hear.\" she begged.\n\n\"It's kind of late to be worried about what they'll hear isn't it? I mean you're already carrying the proof that you weren't a good girl now get to it.\"\n\nFeeling as though she had no choice, Becca complied humiliated as Ty moaned loud enough that she knew that her parents had to have heard him.\n\nThat was two nights ago and it had happened every night since. Her fears that her parents heard them were confirmed every morning when her parents, especially her mother wouldn't look at her and if she did; her cheeks were a bright red.\n\n\"The house will be ready by the weekend.\" Her father said with obvious relief in his voice.\n\n\"We don't know how to thank you.\" Ty said in what sounded like sincere gratitude, \"Isn't that right sweetheart?\" he asked Becca.\n\n\"Umm yes, thank you daddy.\" Becca replied.\n\nHer father didn't reply but gave her a curious look. Suddenly he wasn't so sure about his new son-in-law and wondered if he had been wrong in insisting that they marry.\n\n<center>*******************</center>\n\nLawrence reread Tyrone's letter with unbridled delight. Things were going much better than he had planned. Not only was Tyrone married and an expectant father, the girls father had provided them with a house that had two extra bedrooms. There was also news in the letter that disturbed him, his wife had wasted no time in marrying the traitorous bastard that had put him in prison but there was more. She and her nigger-loving husband were socializing with Japs and niggers hugging and kissing them as if they were family.\n\nAs soon as he read that part of the letter, he grabbed a sheet of paper and wrote back.\n\n\"Brother Morgan, \n\nAs always, I appreciate hearing from you. Congratulations on your marriage and the pending arrival of your bundle of joy. I trust that your new wife will be a blessing to you as the good lord intended. I found the news regarding our mutual friends most revealing and disturbing but what of the others? I would love to make their acquaintance as well. I look forward to the day of my release when I can freely walk in god's sunshine. I look forward to hearing from you again very soon and if it isn't too much trouble, can you tell me more about our new friends?\"\n\nGod Bless you, \n\nLawrence Goodman.\"\n\nHe reread the letter, made a few minor changes and sealed it. The mail wouldn't be picked up for another day or two but it was ready to go. Pleased with the letter, Lawrence decided to work on Saul a little more. He still regretted that he wouldn't get top kill Jacob Lincoln or the warden himself but sacrifices had to be made. \n\n\"So Saul, if I asked you to take care of something for me, would you?\"\n\n\"Yessir! Anything you need.\" Saul replied eagerly.\n\n\"That's good to know.\" Lawrence replied, \"We'll talk again later.\"\n\n<center>*******************</center>\n\nThe warden looked out over the yard watching as the inmates enjoyed the warm fall sunshine. Lawrence Goodman was acting like a model prisoner but he didn't trust him. His gut told him that Lawrence was up to something and he thought he knew what it was. Escape.\n\nIn a way he wished that he would try then Lawrence could be legally eliminated and his little band would be destroyed. Ellis had eyes everywhere, he even knew about the black inmate who made a point of aggravating Lawrence although he wasn't sure why. He only knew that it wasn't just because Lawrence was white, there was much more to it. The man's file lay on his desk waiting for him to read it. \n\nEllis walked away from the window, sat down at his desk, opened the file, and began to read. It didn't take him long to understand what Lawrence's connection to the man was, Lawrence was the one who ordered the man's house burned down with his wife and children still inside.\n\n\"Well I'll be damned.\" Ellis muttered as he wondered if he should let thing play out or help them along. There was no rush he decided. According to his sources, Lawrence was nowhere near ready to go but the idea of pitting Goodman again Lincoln intrigued him. The more he thought about it, the more he liked the idea and began tossing around some ideas in his head. If he had his way, Lawrence Goodman would be leaving the prison in a body bag.\n\n<center>*******************</center>\n\nWarden Ellis wasn't the only thinking about Lawrence. Jacob sat on his cot with his back against the wall and his eyes closed. He was trying to think of how he wanted Lawrence to die. Actually, he knew how he wanted him to die the question was if it was possible. However, it was going happen, he had to start planning; his source was telling him that Lawrence was planning to escape sometime in the next few months.\n\nWith his eyes still closed, he visualized the prison yard. He had every inch of it memorized. He started as soon as he heard that Lawrence was coming. The seemingly aimless walks were much more than they appeared to be. It was him looking for the best place to exact his vengeance and god's justice on the man that took his family away. \n\nIn preparation, he had started to collect small flammable objects that he hid throughout his cell. His biggest concern was being caught with the items but so far, he had been lucky. \n\n\"Soon you'll be squealing like a pig you son of a bitch.\" Jacob muttered under his breath as he dozed off.\n\n<center>*******************</center>\n\nAnother two weeks passed before Andrew and Kenji exchanged words again this time it was Andrew's initiation.\n\nKenji and Joel were packing up their books after class and were about to leave when they saw that the door to the hallway was blocked. One of Andrew's crew was standing by the podium acting as a lookout. When he was certain that his group was in place, Andrew sauntered up to Kenji and Joel with a sneer on his face. He faltered slightly when he saw that neither Kenji nor Joel backed down and neither of them looked even remotely nervous. Still he kept walking until he was within a foot away from them.\n\n\"What are you going to do now?\" he asked, \"There's no one to interrupt us this time.\"\n\nKenji looked at him and waited dropping his bag to the floor. Only Joel noticed the slight shift in Kenji's position and repositioned himself as well.\n\n\"Think you and Jew boy can take all of us?\" Andrew asked.\n\n\"Do you remember what I told you the first time we spoke?' Kenji asked. \"I told you that you were a bully who relished in the torment of others. What I did not realize then was that you are also a coward. Have you told your friends how you lurked in front of my home not once but twice? What were you planning to do? Frighten my children? Or were you going to throw a rock through the window?\"\n\nNo one interrupted as Kenji spoke. The thing that disturbed Andrew was the soft tone that Kenji used. Finally someone spoke.\n\n\"Shit Andrew! Kick his ass!\"\n\nKenji didn't move as he waited for Andrew to respond. Kenji's eyes flashed as she saw Andrew make an almost imperceptible movement with his finger and those not guarding the doors moved closer.\n\n\"I'm going to break your fucking hands!\" Andrew snarled.\n\nStill no reaction from Kenji. Andrew paused, his only chance was to make Kenji lose control and he knew of only one way to do it.\n\n\"Pretty kids... Too bad that their mama is a nigger and their father a Jap.\"\n\nNo response.\n\nAndrew looked around; his group was waiting expectantly for him to do as he promised.\n\n\"Fuck Andrew! If you're scared of him just say so!\" someone from the back called. \n\nInstead of Kenji attacking as Andrew had hoped, he was the one to attack. His fist flew toward Kenji's face and missed. Like Milt two weeks before, Andrew found himself humiliated and sitting on his ass. He hadn't seen Kenji move. Before Andrew knew it, Kenji and Joel were surrounded and he was being helped to his feet. Furious, he shook off the hand that had helped him up and advanced not on Kenji but Joel who he considered the weaker of the two. He threw a punch that grazed the side of Joel's head and was rewarded with return punch from Joel that connected with his chin that sent him stumbling back.\n\n\"Hey! His woman is coming!\" one of the men guarding the door called out.\n\n<center>*******************</center>\n\nPatricia gathered her things and went by the door to wait for Kenji. At first, she wasn't too concerned that he wasn't waiting for her when she came out, her class had finished a few minutes early but then he was five minutes late, then ten and then fifteen. A sense of foreboding hit her as she tried to decide on what she should do. Finally unable to wait any longer, she headed toward Kenji's classroom. She had the thought to look for Paul but was afraid that whatever was happening would be over by the time she found him and got back.\n\nShe stood across from the classroom debating whether she should go in or not.\n\n<center>*******************</center>\n\nAndrew got up from the floor for the third time and looked around in amazement. As soon as someone said that the woman was coming, Kenji went on the offensive. In no time, Andrew and two of his men were on the floor put there by Kenji. Two others were on the floor put there by Joel even as the ones guarding the door were going join in.",
        "\"Someone's coming!\" Duke who was standing by the podium said urgently.\n\nKenji and Joel had just walked out of the door when whomever it was that Duke thought was coming walked into the room by. Even though he acted angry about it, Andrew was relieved. He had figured something out about Kenji. In his own way, he was dangerous and that if anything happened to his woman or children; he would kill no matter the cost to himself.\n\nWhat no one noticed was that there was an observer way in the back. Paul Mynt sat in the back-watching ready to intervene if things got out of hand and to serve as a witness if anything happened. As always, he admired Kenji's restraint and had a healthy dose of respect for Joel. It was hard to believe that he was the same fragile man whose hand had been broken by the same group that he now faced with Kenji.\n\nPaul sincerely believed that Kenji would not have attacked if Patricia wasn't involved and quickly came to the same conclusion that Andrew did; Kenji was dangerous when anyone he cared about was threatened. He hoped that Andrew would realize that and back off.\n\n<center>*******************</center>\n\nJust as Patricia made her decision to go into the classroom, Joel and Kenji walked out. She took in Joel's disheveled appearance and ran over to them.\n\n\"What happened?\" she asked.\n\n\"We will talk in the car.\" Kenji said taking her by the hand and leading her away.\n\n\"Joel, are you alright?\" Patricia asked looking back at him.\n\n\"I'm fine.\" he replied as he glanced behind him.\n\n\"We are both fine.\" Kenji assured her as he pulled her along.\n\nPatricia looked at Kenji, then back at Joel, and knew that they wouldn't like what they were going to tell her. \n\n<center>*******************</center>\n\nErnie sat nervously under a tree in the front of the building and waited. He had done all that he could do short of becoming directly involved. He knew that Dr. Mynt and Kenji were friends and hunted for him until he found him.\n\n\"Dr. Mynt?\" he called when he found Paul in his office.\n\n\"Yes?\" Paul replied. He recognized Ernie and wondered what he wanted.\n\n\"Could I have a moment of your time?\" Ernie asked nervously.\n\nPaul invited him in raising his eyebrows when Ernie shut the door behind him. Paul assessed Ernie with cool eyes and waited.\n\n\"Umm sir, I'm Ernie....\"\n\n\"I know who you are.\" Paul said tersely.\n\n\"I... I know that you're a friend of Kenji's and I thought that you should know that Andrew and the rest of them are planning on cornering Kenji and Joel after class today.\"\n\n\"Why are you telling me this?\" Paul asked.\n\n\"I just don't think its right, all of them against two and... I wanted to help somehow.\"\n\n\"Thank you for coming to me, I'll take care of it.\" Paul said by way of dismissal.\n\nAfter Ernie left, Paul put on his jacket and went to the dean's office.\n\n<center>*******************</center>\n\nIt had been a long class for Ernie as he wondered what was going to happen now that he had told someone about Andrew's plans. He no longer sat with the group but on the opposite side of the room near the front. His grades were already improving and he missed the group less and less. He had even let go of his anger at Becca deciding that maybe it had been a blessing in disguise.\n\nAfter class, he left with the other students leaving Kenji alone with Andrew and the group. After what seemed to be hours, he saw Kenji, Patricia and Joel walk out followed by Andrew and the group several minutes later. He breathed a sigh of relief when he saw that no one seemed to be hurt. He waited until Andrew passed him without saying anything and got up to go home. As he walked, home her thought that he saw Becca but he couldn't be sure because the woman disappeared into a store before he got a good look at her. \n\nHe continued his walk home his mind on what had almost happened not long ago. Andrew was about to have his ass handed to him on a platter and Joel had been no slouch either. Ernie was coming to the same conclusions about Kenji that Andrew and Paul were- he was dangerous but then so was Andrew. Of the two of them, Ernie decided that Kenji was the most dangerous; he had a wife and children to protect whereas Andrew only had his hatred. \n\nErnie thought back on his role in harassing Kenji and Joel and felt guilt. He had always considered himself a fair person and had always rooted for the underdogs but he had sided with Andrew against those he considered to be at a disadvantage. The one thing that he had never considered himself to be was a coward. His father had always taught him to stand up for what was right even though it wasn't the popular opinion. He now understood why he never talked about Andrew and the others to his parents, he knew what they would say and he knew that he was wrong to be a part of that group.\n\nBy the time he reached home, Ernie had made a decision.\n\n<center>*******************</center>\n\nBecca looked at the textbooks that would go to waste and felt a tear escape down her cheek. She wouldn't be able to return to school now and wouldn't even if she could. One of her friends stopped by the house one afternoon after running into her mother at the grocery store.\n\n\"Becca is it true? You're really married and having a baby?\"\n\n\"It sure is!\" Becca replied hoping that Susan who was probably her only real friend was buying the forced happiness act.\n\n\"Why didn't you say anything? We could have had a combination bridal/ baby shower!\"\n\n\"I wasn't pregnant at the time.\" Becca replied and it happened so fast.\"\n\nSusan looked at Becca and took her hands in hers.\n\n\"Bec, I know that I don't come from a rich family and that my clothes aren't of the latest style and I also know that you were nice to me so that you could prove that you weren't a snob....\"\n\n\"Susan...\"\n\n\"Let me finish.\" Susan said interrupting her. \"But Becca, I always considered myself your friend even though you didn't really consider yourself mines. I haven't said much well because... who listens to me? But I know that you were pregnant when you got married, that's the only reason for the quickness of it. I'm not judging but just saying if I thought that then so is everyone else.\"\n\n\"Are they talking about it?\" Becca asked not bothering to deny it.\n\n\"No at least not that I've heard. Since you've been gone I've been demoted back to my previous status and wouldn't be included in on the latest gossip but that's not why I'm here.\" Susan said. \"I'm here because you need a friend.\"\n\nBecca stared at Susan and suddenly threw herself into her arms sobbing.\n\n\"I've made such a mess of things!\"\n\n\"Tell me about it.\" Susan said softly.\n\nBecca talked for two hours straight ending with the unplanned and unwanted pregnancy.\n\n\"What are you thinking about doing?\" Susan asked.\n\nBecca looked around as if she was expecting to see someone standing behind her.\n\n\"I heard that there's a woman that helps girls in trouble.\" she whispered.\n\n\"Becca you can't! Do you know how dangerous that is?\"\n\n\"I don't care! I don't want this baby!\" Becca replied.\n\n\"You could die! Have it and give it away or something.\" Susan advised.\n\n\"Do you really think that he's going to let me give this baby away?\" Becca asked. \n\n\"No but what you're thinking of doing is... don't do it alright?\"\n\n\"Becca! I'm home! Come here and do what you do best!\" Tyrone called as he walked into the living room with his cock in his hand.\n\n\"Oh fuck!\" he said as he turned his back and tucked his stiff member in his pants. \"I'm sorry; I didn't know that you had company.\"\n\n\"This is Susan one of my friends from school.\" Becca said. \"Susan, this is my husband Tyrone.\"\n\nSusan and Ty eyed each other, the dislike instant, mutual and intense.\n\n\"I'd better get going.\" Susan said as she stood up her gaze never leaving Ty's face. She knew what he was; her family had several of them. He was an abuser and if he hadn't started hitting Becca yet, he would even if it was after she had the baby.\n\n\"Thanks for stopping by.\" Becca said. \"Maybe we could have lunch sometime.\"\n\n\"Sure, you just tell me when.\" Susan said as she hugged Becca.\n\nBecca walked Susan to the door and hugged her again. As soon as the door closed behind Susan, Becca heard the sound of Ty unzipping his trousers and the rustle of them falling to the floor.\n\n\"Get over here and do your job.\" he said.\n\nBecca didn't argue but she now hated the one thing that she used to love doing. She dropped to her knees, took Ty's cock into her mouth, and began to suck on it as the tears flowed. This was now her life. She knew that she wouldn't do anything to get rid of the baby just as she knew that as soon as this one was born, Ty was get her pregnant again.\n\nWhen she was through, he helped her up and issued an order.\n\n\"I don't want that bitch back in this house now go make dinner.\"\n\nBecca was going to protest but she saw the look in his eyes, she kept her silence and went to the kitchen.\n\n<center>*******************</center>\n\n\"Will one of you tell me what happened?\" Patricia asked.\n\n\"Kirei, it is nothing.\" Kenji replied stroking her hand.\n\n\"Kenjiro Takeda! Don't you patronize me! Wasn't it you that always said no secrets? Now tell me what happened!\"\n\nKenji told her about what happened after class and waited for her reaction.\n\n\"They were going to attack you here at school?\" she asked shocked.\n\n\"Yes Kirei. But as you can see we are unhurt.\"\n\n\"This time but what about the next time?\" she asked.\n\n\"Then we will defend ourselves as we did today.\" Kenji replied. \n\n\"Kenji, stay away from him, they'll side with Andrew before they side with us.\"\n\n\"I know this but Kirei I will defend you and my family even if it means that I cannot attend school here.\"\n\nThe tone in his voice told her that he meant it and all that she could do was to hope that there would be no more confrontations between Kenji and Andrew.\n\n<center>*******************</center>\n\nAndrew stomped off to his car humiliated and angry. He hadn't seen the hit coming and now his leadership was being called into question. He needed time to regroup and to come up with a way to catch the \"jap\" unawares. The only good thing that came out of it was that he now knew how to get under Kenji's skin. On the same token, it was the very thing that would turn him into a killer.\n\nHe had to leave the woman and the kids out of it for now but the Jew wasn't off limits and neither was his nigger-loving girlfriend. Andrew went to the diner and found several members of is group sitting in a corner talking amongst themselves. He already knew what the topic of discussion was. Him.\n\nHe quietly walked up to them listening as they went.\n\n\"I'm telling you,\" Milt was saying, \"He's a mother fucking coward! He's scared of the Jap and the Jew.\"\n\nAndrew realized that if he didn't do something, he would have a full-scale mutiny on his hands and Milt would be the ringleader.\n\n\"Am I now?\" he hissed as he walked up to the table.\n\nThe table went silent as Andrew stared at each face before landing on Milt's.\n\n\"Yeah you are!\" Milt said standing up. \"Why didn't you drop his Jap ass or let us go grab his woman?\" he asked the challenge in his voice.\n\n\"Michael...\"\n\n\"Michael my fucking ass!\" Milt spat. \"I'm betting when he finds out about this one, your ass will be kicked down foot soldier.\"\n\nMilt was right and he had to be stopped before he went to Michael.\n\n\"I have a plan.\" Andrew said looking at Milt, \"and the fewer people that know about it the better. I'll call you later and we'll set up a time to talk.\"\n\nMilt eyed him suspiciously but then agreed, \"I'll be home in an hour.\"\n\nAs much as he wanted to stay, Andrew left. To stay would have showed that he was insecure in his position and besides, he had plans to make. He had to shut Milt up.\n\nAndrew drove home, slipped in the back, ran up the stairs to his room and locked the door behind him. He got on his stomach and pulled a box from beneath his bed, pushed it back and then pulled it out again. He sat on the floor for a long time looking at the box before he finally opened it.\n\nThe pistol, a Nambu type 14, hadn't been fired since the war. His father had taken it from the body of a dead Japanese officer, brought it home with him and had given to Andrew as a gift. Andrew lifted the weapon from the box and held it in his hands hardly believing that he was actually thinking about using the pistol against one of his own. \n\nHe sat on the floor for more than an hour weighing his options. After another hour passed, he had made his decision. Milt had to go. If he didn't, Milt would continue to undermine his authority and call attention to his courage, it would be only a matter of time before he went to Hathaway and that was unacceptable.\n\nAndrew loaded the pistol, grabbed a jacket, put it on and put the pistol in his pocket. He opened his bedroom door and listened for any clue that his father was home. Hearing no signs that anyone other than himself was home, Andrew went the kitchen and called Milt.\n\n\"Meet me at the old abandoned nursery... yeah that's the one. It is? Ok then the old grocery store. See you in thirty minutes and remember to come alone. We can afford any leaks.\n\nAndrew adjusted the weight of the pistol in his pocket and left. \n\n<center>*******************</center>\n\nPenny held Joel's hand as he relayed the story of the almost attack that had happened earlier in the day. Like Patricia, she was scared and told him so.\n\n\"I know but we'll be fine which reminds me.\" Joel said stroking her hands, \"Be careful and make sure that you're never caught anywhere alone. Andrew was mad and if he knows about the kids then he knows about you. Don't trust anyone other than the people who you know feel as you do.\"\n\n\"You're scaring me.\"\n\n\"I know and I'm sorry.\" Joel replied, \"But I want you to be safe. As a matter of fact don't you and Patricia have a class in the same building on Fridays?\"\n\n\"Yes and I already know what you're going to say.\" Penny replied with a kiss, \"You want me to wait with her.\"\n\n\"Please, I just have a bad feeling about this.\" Joel replied returning the kiss.\n\n\"Alright as long as you and Kenji promise me that you'll be careful.\"\n\n\"I promise.\" Joel said as he unbuttoned her blouse. He was no longer shy about touching her or making his needs known. He knew that in the not to distant future that Penny would be his wife but he had to help Kenji deal with Andrew Kelly before he thought about that.\n\nHe pulled Penny's bra down and exposed nipples that were already hardened in anticipation of his mouth.\n\n\"I love you.\" he murmured as he took a nipple into his mouth and began to nibble at it.\n\n\"I love you too.\" Penny replied as she forced more of her breast into Joel's mouth. She pushed up against him and ground against him.\n\n\"I can't wait to make love to you.\" she murmured as she ground harder against him.\n\nJoel stopped moving and looked at her,\n\n\"I want that too and I wish that there was a way that we could.\" Joel replied.\n\n\"What do you suppose Kenji and Patricia do?\" Penny asked. \n\n\"I don't know but there are condoms... they're made out of rubber....\"\n\n\"Can you get some?\" Penny asked.\n\n\"You're alright with us making love without being married?\" Joel asked.\n\n\"Joel, I love you and let's not kid ourselves, we're going to get married sometime so yes I'm alright with it but for now, finish what we started.\"\n\nJoel took a nipple into his mouth and started over while Penny reached between them and unzipped his slacks, reached in and pulled out his erect cock. She pushed Joel onto his back, sat beside him and began to stroke the length of him.\n\nShe stopped stroking him, stood up, undressed and stood before Joel completely naked.\n\n\"Penny....\"\n\nA few minutes later, Joes was naked and laying on his back, his cock pointing up at the ceiling. Penny stretched out on top of him, opening her legs so that Joel's cock was sandwiched between her vaginal lips and began to grind and slide her clit against it. Joel grabbed her ass and held her in place as he thrust between her lips using his cock to rub against her clit. Penny moved so that her nipples were at his mouth and offered him one by touching his lips with it.\n\nThe combination of rubbing and sucking was enough to send Penny into orgasm. When Joel felt his own pending orgasm approach, he rolled to his side and pulled his cock from between Penny's legs. Before he could touch his cock, it was in Penny's hands and it was spouting his seed on her stomach.\n\nThey lay together for long minutes each of them thinking the same thing; they needed to find some method of birth control.\n\nJoel left Penny's house sometime after one am and drove to Abby's house. The first thing that he was going to do as soon as the stores opened was to find some condoms.\n\n<center>*******************</center>\n\nKenji and Patricia put Ralph and Marie to bed and then went to their own room even though it was early. She was frightened and was trying not to show it.\n\n\"Kirei come here.\" Kenji said after he closed the bedroom door behind him. He met her halfway, took her into his arms, and kissed her. \"Try not to be frightened, I won't allow anything to happen to you or the children.\"\n\n\"I'm scared for you.\" Patricia replied hugging him tightly, \"You hate violence.\"\n\n\"I know but if I have to use violence to protect you then I will and I will be alright with it as long as you are safe.\"\n\n\"Will this ever end?\" Patricia asked as she laid her head on Kenji's chest.\n\n\"I hope and pray that ends soon but all we can do is to continue to love and trust each other and those who are our friends and family.\"\n\n\"I know.\" Patricia said, \"But I'm still scared and I want to go back to our house.\"\n\nKenji hugged her tighter; this was too much like before the war ended when they had to hide. \n\n\"It will be over soon.\" Kenji said as he kissed the top of her head. \"I haven't tasted you in quite sometime.\" He said.\n\n\"What do you mean?\" Patricia asked, \"It was just the other night.\"\n\n\"That is too long ago, get ready for me.\"\n\nGetting ready entailed a quick shower and the insertion of the diaphragm. When Patricia left to get ready, Kenji peeked at the children and made a quick phone call to Nick.\n\n\"Are you alright?\" Nick asked when Kenji finished relaying the events of the day.\n\n\"We are fine but I just wanted to keep you informed.\" Kenji replied.\n\n\"Good and while I have you on the phone, Goodman is still in prison but that could change at any time. I want to get together with everyone to talk about an escape plan and about the possibility of buying another safe house. What are you doing this weekend?\"\n\n\"Nothing that I am aware of.\" Kenji replied.\n\n\"Good, come over here on Saturday around three... we'll cook outside and really begin to plan. My gut is telling me that our time is going short.\"\n\nKenji didn't disagree with him. \"I'll tell Patricia.\"\n\n\"Tell Patricia what?\" she asked from behind him as he hung up.\n\n\"That we are going to my mother and Nick's house on Saturday. Nick wants to discuss a few things. \n\nPatricia didn't need to ask what the discussion was going to be about, she already knew. Lawrence Goodman and now Andrew Kelley. She didn't want to talk about any of it anymore tonight; she wanted to make love until she was exhausted. Kenji held out his hand and led her to Abby's room.\n\nThe memory of their earlier physical relationship flitted across his mind making him laugh.\n\n\"What's so funny?\" Patricia asked.\n\n\"I was remembering how we used to calculate how much time we had to make love before Abby returned.\" Kenji replied.\n\n\"Do you realize how long ago that was?\" Patricia asked laughing.\n\n\"In many ways it seems as if it was a long time ago but yet the memory is as fresh as if it was just yesterday.\" Kenji replied. \"It doesn't seem possible that we have been married for seven years. Kirei, do you have regrets?\"",
        "\"No!\" Patricia replied, \"Do you?\"\n\n\"No Kirei, when I say that I will love you forever that is what I mean.\" He said kissing her. \"Wait here.\"\n\nPatricia watched as Kenji slipped out of the room and came back a few minutes later with a plate filled with fresh fruit and a glass of water.\n\n\"I checked on Ralph and Marie on my way to the kitchen.\" Kenji said as he sat the plate of fruit and glass of water in the table by the bed. \"It is time to care for you.\"\n\nPatricia watched him undress and neatly lay his clothes over the chair of the vanity table. One of her favorite things watch the muscles of his ass flex as he moved, it was something that she never told him about, it was her little secret. It wasn't because she thought that he would stop, it was better because he wasn't aware that he was doing it.\n\nWhen he turned to face her, his cock was hard and seemed to be pointing at her.\n\n\"Sit on the bed and lay back.\" Kenji told her as he approached her.\n\nPatricia did as he asked and waited for him to reach her. When he did, he went to his knees, spread her legs open and began to lick at her careful to avoid her clit. Patricia moaned and then jerked moving her hips trying to get his tongue to touch her clit.\n\nKenji toyed with her until she began to beg and then he latched onto her and flicked his tongue over her clit until she cried out her release. In one fluid movement, he was buried deep inside of her pumping slowly in and out until Patricia came a second time. After her second orgasm, he allowed himself to release inside of her. After she rested, he made her drink the water and eat some of the fruit.\n\n\"You will need it.\" he told her when she objected.\n\nTwo hours later, Patricia was sleeping the sleep of the well sated and Kenji wasn't far behind. His last waking thought was the hope that he wouldn't have to hurt anyone.\n\n<center>*******************</center>\n\nMeyer Weiss got off the bus and looked around. The phone call from his cousin Marji had come as a surprise but not an unpleasant one. He had always liked Marji even though they hadn't spent much time together and he was several years older than she was. \n\nThe reason for the phone call startled him. She wanted to leave her husband but was too afraid to.\n\n\"Does he hurt you?\" Meyer asked.\n\nHer silence told him all that he needed to know but he sensed that there was more that she wasn't telling him.\n\n\"Can you keep safe until I get there?\" he asked.\n\n\"Yes... I've stayed this long a few more weeks won't matter.\" she replied.\n\nThat conversation had been a few weeks ago and if she had said that she was in immediate danger he would have left Jersey immediately. Her only request had been that he come before the next phone bill came in. Meyer hated men like Marji's husband; they beat on defenseless women and children in order to feel like men. He had plans for Mr. Michael Hathaway, he was going to be taught a lesson that he would never forget.\n\nFirst things first, he had to make sure that Marji was safe and then he would take care of her husband. Meyer caught a cab and went to the hotel that wasn't very far from where Marji lived. He hadn't given her an exact date of when he was coming and he hadn't called because he didn't know if her husband would be home. He did tell her to be ready to go at a moments notice and that she could stay with him and his family in Jersey until she decided what she wanted to do.\n\nMeyer checked in but didn't unpack, he didn't expect to be in town for more than a day or two. He immediately left the room and went for a walk which took him past Marji's house. He didn't see the car in the driveway and decided to take a chance. If her husband was home, he would act as if he was at the wrong house. He rang the doorbell and waited for a few minutes before ringing it again.\n\nMarji opened the door a moment later. Tears of surprise and relief came to her eyes; the phone bill had just arrived.\n\n\"Is he here?\" Meyer asked.\n\n\"No, he just left for a meeting.\" \n\n\"Good, get your things and go to the hotel, the room number is 131. Stay inside and wait for me.\"\n\nMeyer handed her the key to the room as he slipped inside.\n\nMarji ran up the stairs, grabbed a bag that she had packed a month ago which also contained the money that she had saved over the years. She took the letter that she wrote as soon as Meyer told her that he was coming and put it on Michael's dresser. As she went down the stairs with her bag in her hand, she experienced a moment of doubt that she was doing the right thing.\n\nThe phone rang; she jumped and ran to answer it.\n\n\"Who is it?\" Meyer asked.\n\n\"Michael, if I don't answer he'll come home.\"\n\n\"Good. Now get out of here and I'll see you later.\"\n\n\"Meyer...\"\n\n\"Go on now, I shouldn't be too long.\"\n\nMarji looked around the living room and left. Meyer would go to the bank with her tomorrow and get Michaels's names off her accounts and in effect leaving him penniless. How he survived would no longer be her concern.\n\n<center>*******************</center>\n\nAndrew hid behind the back of the store waiting for Milt to show up. He kept his hands in his pockets and gingerly touched the butt of the gun. He was about to commit cold-blooded murder but that wasn't what alarmed him, it was the fact that he was no longer nervous about it.\n\nHe heard Milt's car pull up beside his and realized that he hadn't thought about what to do with the car. He walked up to Milt's car, waited until the window was down and before Milt could register what was happening, there was a bullet in his head.\n\nAndrew didn't take the time to check to see if Milt was dead, he jumped into his car and took off. As soon as he got home, he cleaned the gun and put it back in the box under the bed, his leadership for the moment was safe. He was vaguely aware that he had crossed a line that he couldn't recross. He was now a murderer but he decided that he could live with that especially if it made the others fall into line.\n\nThe enormity of what he had done didn't hit him until he cleaned the gun and put it away. Even then, there was no remorse but more of a feeling of shock that he had actually killed someone and that he had actually liked it. What he found was that it was now easier to think about the next one and the one after that.\n\nThe line had been crossed and there was no going back even if he wanted to.\n\n<center>*******************</center>\n\nMarji looked around the hotel room, sat on the bed and began to cry. They were tears of sadness, relief and anger at both her and Michael. Done crying, Marji went to the bathroom, washed her face and prayed that Meyer would keep his word and not kill Michael. As much as she hated him, she didn't want his death on her hands or her conscience and she didn't want it on Meyer's either. She sat back on the bed and began what seemed like an indeterminable wait.\n\n<center>*******************</center>\n\nMeyer sat in the darkening living room wondering if Hathaway was going to come home or if he was spending the night with one of the whores that he spent Marji's money on. He was about to give up when he heard the car that was bought with Marji's money pull up in front of the house. He didn't move as the front door opened and Michael came in. He listened as Michael walked through the house calling Marji names and demanding to know where supper was. In that moment, he was hard put not to kill the man.\n\nHe waited until Michael was in the kitchen before he moved from the corner. Slowly he made his way to the kitchen where Michel was cursing under his breath and making promises of an \"ass whipping\" for Marji.\n\n\"You will not touch her again.\" Meyer said from the kitchen doorway.\n\nMichael turned, startled by the sound of a male voice in his home.\n\n\"Who the fuck are you and what are you doing in my house?\"\n\n\"Who I am doesn't matter but what you are and what you have done to my cousin does.\" Meyer said as he walked into the kitchen.\n\n\"What I do with my wife is none of your business.\" Michael said heatedly.\n\n\"Do you know what you are?\" Meyer asked ignoring Michael's statement, \"You are a coward of the worst kind. You pick on women because you aren't man enough to face another man. I will even go so far as to say that when it was time to sign up to help defend this country, you didn't. What did you do? Go to one of the civil service camps? Did you talk about how you were against violence?\"\n\nMichael didn't reply. He didn't owe this filthy Jew any explanations.\n\n\"I must have hit on the truth.\" Meyer said as he moved until he was standing right in front of Michael. \"You are a racist dog and I now wish that I hadn't promised Marji that I wouldn't kill you.\"\n\nMichael began to laugh, as far as he was concerned the bitch could leave as long as she didn't take her money with her.\n\n\"You can have her!\" he said still laughing, \"I don't give a fuck.\"\n\nThe laughter turned into a winded cry of pain when Meyer punched him in the stomach.\n\n\"It's not that simple.\" Meyer said. \"I have papers that need to be signed.\n\n\"I'm not signing anything!\" Michael said as he caught his breath.\n\n\"I think that you will,\" Meyer calmly replied as he hit Michael again. \"You have been spending her money on whores and for the promotion of your cause. Sign the papers giving her money back to her and the papers that will transfer the ownership of the house back to Marji after which you will have twenty-four hours to vacate the premises.\"\n\nIn spite of his pain, Michael laughed while Meyer watched him not seeming to be disturbed by Michael's laughter. He took the folded forms from his pocket and laid them on the kitchen counter with a pen.\n\n\"Sign the papers.\" he said calmly.\n\n\"Fuck you and every Jew bastard that lives!\" Michael snapped.\n\nAt the end of an hour, Meyer was leaving the house with every form signed but not before he issued a warning.\n\n\"The house will be watched; you have until tomorrow night to be gone. If you have any ideas about torching the place forget it because if you do I will find you and I will kill you. If you come back here, I will kill you. If anything happens to Marji or any one in our family, I will find and kill you. Do you understand?\"\n\n<center>*******************</center>\n\nMichael watched Meyer walk away and then slowly got to his feet cradling his left hand that was broken in several places including the fingers. His face was caked with dried blood and his gut hurt from the repeated punches administered to him by Meyer. He stumbled upstairs undressing as best he could with one hand as he went and got into the shower. He cried out in pain as the hot water hit his bruised body and broken hand. He finished the shower, walked to the bed without drying off and laid down. He lay there for a long time trying to weigh his options and decided that maybe it was time to move on. He wasn't penniless; he had a few hundred dollars that would tide him over until he found something else.\n\nHe had been thinking about moving to South where the attitudes were more in line with his thinking but hadn't done it because of Marji. Since she was no longer an issue there was nothing else to hold him back. The group at the school could fend for themselves. \n\nHe dragged himself off the bed, got dressed and then began to pack He didn't see the letter from Marji until he went to his dresser to empty it. He looked at it, debated about opening it and then left it. He had no interest in reading anything that she had to say. He carried his suitcase down the stairs in his good hand cursing whenever he accidentally bumped the broken one reminding him that he needed to have it tended to before he left town.\n\nHe opened the front door expecting to see the car where he had left it.\n\n\"God damn mother fucking Jew son of a bitch!\" he exclaimed when he saw that the car was gone. He turned to go back into the house when he caught a glimpse of a man standing in the shadows.\n\nIt was time to leave.\n\n<center>*******************</center>\n\nMarji jumped up when she heard the tap on the door.\n\n\"Marji it's me, let me in.\" Meyer whispered.\n\nMarji opened the door and hugged him.\n\n\"Are you alright? Did he hurt you?\"\n\n\"No,\" Meyer replied, \"and he won't be hurting you again either. He'll be gone by tomorrow night.\"\n\n\"So he isn't dead?\"\n\n\"No and I have a gift for you.\" Meyer replied and handed her the papers.\n\n\"What's this?\n\n\"The house is now in your name and his name will be off of your bank accounts as soon as you take these to the bank in the morning.\" Meyer said.\n\n\"He agreed to this?\" Marji asked surprised.\n\n\"Yes and its best that you don't know why he agreed.\"\n\n\"I don't know what to say except thank you.\"\n\n\"You're welcome.\" Meyer replied. \"You're not coming back with me are you?\"\n\nMarji hesitated, \"No, I want to stay here but thank you for the offer.\"\n\n\"I thought as much but Marji; don't wait so long to call for help if you should need it again. The car is out front but I think that you should stay here tonight. I gave him twenty-four hours to get out. I'll go over tomorrow to make sure that he's gone before I take you home.\"\n\n<center>*******************</center>\n\nMichael called a cab and waited on the porch for it to arrive. He could see the man who was making no real effort to conceal himself watching him and hoped that he stayed where he was. The first stop would be the hospital, the second stop the train or bus station whichever was leaving first for the south. The fact that he knew no one in the south or that he had no real destination in mind didn't faze him in the least. It wouldn't be the first time that he started out like this nor was it likely to be the last.\n\nAs he waited for the cab, he concocted what he thought to be a believable story about the damage to his hand. The cab pulled up fifteen minutes after being called. Before he left the house for what would be the last time, Michael turned, looked at it and spit.\n\n<center>*******************</center>\n\nBy the end of December 1946 Verdicts from the Nuremberg trials and the sentences were rendered and carried out. 'Faraway Hill' the first soap opera ever shown on a television network aired and ran for twelve weeks. On the eve of the Jewish holiday Yom Kippur, President Harry S. Truman cabled the British Prime Minister Clement Attlee endorsing the immigration of over 100,000 Jews into Palestine. George Adamski saw his first UFO hovering near Mount Palomar and began his career in urology. The brochure 'The Communist Infiltration of the United States' was released by the U.S. Chamber of Commerce.\n\nPresident Truman ended all price controls because of the American shortage on meat. With no ceiling, the price of meat doubled but production increased. The \"Doctors' trial\" against twenty Nazi physicians and two administrators continue and will end in July of 1947. For the first time in history, the President of the United States will have his own private railroad car. The RCA Research Laboratories in Princeton, NJ the first demonstration of the color television was privately made.\n\nThe new Constitution of Japan, which included the renunciation of war, was made. The United Nations Organization admitted its first new members since 1945 with Afghanistan, Sweden and Iceland bringing its membership to 102, Coal miners across the United States (400,000) went on strike stopping production one month before winter began. 'The Best years of our lives' a movie about the return of American Veterans returning to civilian life after WWII made its premiere. In response to pressure of the Republican Party, EO#9086 was created-A six member temporary commission on Employee loyalty was created. In March of 1947, it would become EO# 9835.\n\nFidel Castro a 22-year-old law student made his first major speech denouncing Cuban President Ramon Grau; the 23rd Indian Division completed a mission that began two weeks before V - J Day. They sustained 407 dead, 808 wounded and 167 missing. Author Martin Gilbert described it as the \"last Allied casualties\" of WWII, UNICEF (the United Nations International Children's Emergency Fund) was founded, 'It's a wonderful life' starring Jimmy Stewart was filmed, the Havana Conference- a summit of American organized crime bosses was held in Havana, Cuba at a hotel owned by Jewish mobster Meyer Lansky.\n\nGangster Bugsy Siegel opened the Pink Flamingo Hotel and Casino on the Las Vegas Strip.\n\nPresident Harry Truman issued Presidential Proclamation 2714, which announced the official end of American hostilities of WWII.\n\n<center>*******************\n\nCivil rights</center>\n\nAfter participating in the trial of two white men in Columbia, Tennessee, African-American Lawyer Thurgood Marshall was arrested by city police and narrowly escaped a lynch mob. President Harry S. Truman issued EO#9808 thus creating the sixteen-member Presidential Committee on Civil Rights. The Airport Homes Race Riots occurred when the Chicago Housing Authority attempted to move the families of two distinguished veterans into an all -white housing area in an attempt to desegregate. \n\nThe University of Tennessee's men's basketball team refused to continue a game against Pennsylvania's Duquesne University because they refused to bench its African-American player Chuck Cooper.\n\n<center>*******************\n\nSports</center>\n\nNotre Dame won the unofficial Championship of the 1946 football season, the Cleveland Browns won the first All-American Football Conference, the St. Louis Cardinals won against the Boston Red Sox 4-3 in the 1946 World Series, Gordie Howe made is National Hockey League Debut. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "historical",
        "racism",
        "japanese",
        "wwii"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-08"
}