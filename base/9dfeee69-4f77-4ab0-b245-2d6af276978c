{
    "title": "Alex & Alexa Ch. 07",
    "pages": [
        "Chapter 7- What Will I Do Without You? \n\nDriving was difficult. Concentrating on driving was difficult. My mind was going a million miles an hour, my heart thundering in my chest and my head was just full of white noise. All I could do was remind myself to not speed. \n\nDon't speed. If you get pulled over, you'll be delayed. \n\nWhat if I was too late because I got pulled over? \n\nAlexa, what would I do if I got pulled over? \n\nWhat if I don't- \n\nConcentrate. Feel nothing for now. Feel ice. Be ice. Be mechanical. You'll get there sooner if you don't lose your head. You can worry when you pull into the parking lot and take the keys out of the ignition. There'll be time. \n\nThere's got to be time. \n\nPlease let there be time. \n\nOh God, please... \n\n*** \n\nMy hands were almost shaking as I pulled the keys out of the ignition. I'd arrived in good time, pushing the speed limit but never drawing attention to my driving. I flexed my hands several times as I tried to breathe. I felt like I was going to burst. I had to struggle to not hyperventilate. \n\nI clutched the wheel tightly until it shook with my hands and let out a cry of pure terror and frustration. \n\nGet it together! They need you! What will you do when you get up there? Be a part of the problem? \n\nMy head thunked back against the chair rest and I took several deep breaths. Deep, deep breaths. I didn't have long to compose myself, but I needed to be composed. I couldn't exactly go rampaging in, pretending she was my lover and beloved, could I? \n\nI was ready a few seconds later, feeling significantly more in control and steeling myself for the worst. I got out of my car and headed in through the Emergency entrance of the hospital. A nurse behind the desk noticed me. \n\n\"Are you Alex de Bourne?\" she aksed. I nodded. \n\n\"Your family's in room 709, straight back, take the elevator to the Seventh floor and then just around the left corner.\" \n\nI nodded and walked quickly, horrified that they seemed to be waiting for me. I followed the nurse's instructions and took the elevator up. Rounding the corner, I almost ran into a young doctor, who was looking at his charts. He blinked as he saw me and then nodded when I gave him my name. \n\n\"I think your father took your mother for some fresh air,\" he said solemnly. \"But you can go in if you like.\" \n\nI thanked him and approched the door, my heart once again jackhammering in my chest. It was dim in the room, the heavy curtains drawn. There was only one bed and I saw her laying on it... \n\nAlexa... \n\nI couldn't help gazing in wonder. Even in this place, she was completely beautiful. There was a bandage around her head and one on her exposed arm. Her face was tilted to one side, eyes shut. Needles and sensors ran from her arm and her left temple. \n\nOne of the machines she was hooked up to beeped slowly. \n\nMy whole body trembling, I approached the bottom of the bed. I could see the charts hung on the bottom of her bed and took one up with an unsteady hand, looking at what it said. \n\nUnconscious since arrival. No major injury, internal or otherwise, detected. Minor bruises and scratches. Recommended to keep overnight to watch for concussion or other head trauma. Vitals all strong. \n\nI could feel my hands shaking worse than ever as I replaced the chart, but I knew now it was with relief- Alexa was going to live. I stared at the monitor that read her vitals, indicating a strong pulse and blood pressure. I'd never been so happy to see one of those stupid machines in my life. \n\nI must have exhaled loudly, because she sighed as she laid there, almost as if in response to the audial stimulus. She stirred slowly, as if she was beginning to wake up. I stood still and just watched in wonder. Her head tilted up and slowly, ever so slowly, her eyes began to open. It took everything I had in me to not shout for joy. \n\nHer lovely blue eyes fluttered open, staring at nothing for some time. Finally, though, they began to look around. After some time they settled on me and simply stared. \n\n\"Hey,\" I said softly, smiling warmly as I came around the bed to her left side. \"Good to see you...\" \n\nShe said nothing but her eyes slowly tracked me. Maybe she was really drugged up. I decided to stay patient and just let her hear my voice. Hopefully she would find it soothing. \n\n\"You gave us all a scare,\" I continued, speaking with a calmness I barely felt. \"But your charts seem to say you're going to be completely fine.\" \n\nShe turned her head to look at me a little more, her eyes still bleary and red. Her mouth was moving a little but no sound came out. \n\nI leaned in a little closer, trying to hear what she was saying. \n\n\"Who...\" \n\nI leaned in closer, my ear almost to her lips. \n\n\"Who am I?\" \n\nMy world suddenly spun. I felt my knees almost give out and I reached backward to grip the armrests of the chair that was placed next to the bed. I missed and crashed to the floor, the chair making a terrible racket as it clattered away. I felt my head hit to cold tile floor and then everything sounded rather slow and sluggish. \n\n\"Oh my god, Alex!\" I heard her exclaim. \"I was only joking, you jerk!\" \n\nI said nothing. I did nothing. I just laid on the floor, letting the world rotate around me. A doctor rushed in at the noise, turning on the light and just stared dumbly upon seeing me. He was followed half a second later by my parents, who took in the whole situation quietly. Mom simply looked down at me, one eyebrow raised. \n\n\"Why are you lying on the floor?\" she demanded, clearly not impressed. \n\n\"Mom, can we trade her in?\" I asked finally, still lying where I'd landed. \"I don't like her anymore...\" \n\nMy mother now glanced at Alexa, while my father had his hands in his pockets and was looking at the ceiling with interest. Since nobody, including the doctor present, seemed inclined to help me up, I slowly rolled onto my hands and knees and pushed myself to my feet, rubbing the back of my head. It really smart. \n\n\"I... might've woken up while Alex was here,\" Alexa began to explain, now lying on her side so she could talk to people. \"I pretended I had amnesia and didn't know who I was. Alex reacted unexpectedly poorly and lost his motor control.\" \n\nMy mother looked at me again. \"You fall down, go boom? What's it like to be on the receiving end of an evil sense of humour, Grumio?\" \n\n\"Ooh, good reference.\" Alexa said. \n\n\"And as for you,\" my mother said, turning toward her younger sister. \"Are you trying to make him dumber?\" \n\nAlexa snickered. \"No, I didn't expect that reaction from him, to be honest. I thought he'd laugh.\" \n\n\"Good God, I'm surrounded by lunatics,\" my mom muttered. \"While you were taking your nap, the doctor was kind enough to tell us that your injuries, as far as they can tell, are completely ephemeral and superficial, much like a Sociology degree. Michael and I were relieved, of course, but they want to keep you for a day or two, make sure you don't have a concussion.\" \n\n\"Fair enough,\" Alexa agreed. \"Is this likely to be covered? I've been here less than a week, even if I'm still a citizen.\" \n\n\"Oh, I doubt the hospital or province is dumb enough to give us grief about it,\" dad chimed in. \"It makes no sense to screw over a brilliant young woman who was just offered a full scholarship to one of the best universities in the country. Besides, you've got bruises and scratches after a really bad accident, nothing for them to complain about.\" \n\n\"Yeah, what happened, anyway?\" I asked, my mind now focusing on the hows and whys of my morning so far. \n\nMy mother shrugged. \"We were just driving, passing through an intersection and some drunk moron ran his red light and t-boned my car. Spun us right out and almost up on the curb. I think he's a couple of rooms over, actually. He'll be charged no doubt.\" \n\n\"And your car?\" I asked. \n\n\"Ugh, total write-off,\" mom said, scowling. \"He nailed it good, I'm amazed neither of us was killed, to be honest. I was fine, since I could get out on my side and called the cops, while your aunt decided to take an unscheduled nap and scare the hell out of me.\" \n\n\"Sorry about that,\" Alexa said somewhat sheepishly. \"I vaguely remember a crashing impact and spinning, but after that, nothing. Well, not until I nearly gave Alex a heart attack, anyway.\" \n\nDad chuckled. \"Let's just all be thankful it wasn't worse. A wrecked car and some bruises is nothing to sniff at.\" \n\n\"Could you give us a few minutes while I check her vitals?\" the doctor asked, walking up to Alexa, now that we seemed to have figured out everything. Mom, dad and I exited the room and sat on some chairs in the corridor. Dad put his arm around my mother and she sighed deeply, her eyes tearing up. I took her hand and squeezed it. \n\n\"She gonna be fine, mom,\" I said assuringly. \n\n\"I know,\" she said in a voice I could only describe as wet. \"I just... sometimes you cry with relief, you know? She's my baby sister and I just got her back in my life, I don't want to lose her.\" \n\nDad pulled her to his chest and held her tight while she cried silently for some time. I just waited patiently, struggling with my own feelings. Mom and dad would expect me to be relieved, that was just common sense. But they didn't know about Alexa and I, that we were lovers. They couldn't know how I felt, how terrified I'd been and how relieved I was now. What would I have done if the worst had happened? \n\nWould I ever have been able to tell them? \n\nA horrible chill ran through me. I could have lost my aunt and my mother. \n\nI glared down the hallway, something hot and beyond angry rising inside me. \n\n\"Don't worry, Alex,\" my dad said, noticing my face and deducing what was going on in my head. \"He's in pretty bad shape himself and there's a cop at the door of his room. His life is going to be hard enough from now on, show a little mercy.\" \n\nI sighed. Dad was, of course, right as always. He was what mom referred to as annoyingly melioristic. Not only did he see the good in everything, he had this infuriating way of being right and making you realize you were being selfish, without even trying. I pushed the thought of the other driver from my mind. There'd no doubt be plenty of fallout to deal with later. \n\nThe doctor came out a few minutes later and smiled. \"We do want to keep her for maybe two nights, just to be absolutely certain, but my opinion is that she has no concussions or other head trauma to worry about. You're very lucky. You may go in and see her again until the nurses say it's time to let her rest.\" \n\nWe thanked him and went back in. Alexa beamed that beautiful smile at us from where she was now sitting in her bed, having raised it to a postion better suited for conversing. Mom sat in the chair while dad and I stood nearby. \n\n\"Really sorry about the nap,\" Alexa said to my mother. \"At least Mike got a good laugh out of my prank.\" \n\nMom and I both looked at dad, daring him to answer. He shrugged. \"Maybe just a little one. And on that note, I'm going to go call the university and let them know what happened before they find out through the grapevine and begin calling in a total panic.\" \n\nDad stepped outside, cellphone in hand. Mom sighed and took Alexa's hand in hers. This had clearly terrified her. \n\n\"They say you don't appreciate what you have until it's gone,\" she murmured. \"Let's hope that this was close enough for the lesson gods to leave us alone for a bit.\" \n\n\"No argument there,\" Alexa agreed. \"Not sure what the lesson was, since we weren't at fault, mind you. But I'm going to do my best to never take my time with my family for granted, that's for damned sure.\" \n\n\"Glad to hear it,\" mom said, nodding. \"I want nieces and nephews on day, after all. You'll probably find some nice young guy on campus. God knows you're pretty enough that you'll be beating them off with a stick before long. Alex probably has some friends to introduce you to. It's about time you began dating.\" \n\nAlexa was silent for a moment as she looked at her lap. \"Yeah. I guess it is...\" \n\nMom's phone rang and she answered it. She looked at us and covered the speaker. \"It's the insurance company, they have questions,\" she whispered. \"This could be a bit, so I'll take it down to the cafe on the main floor.\" \n\nShe left and then we were alone. Neither of us said anything for sometime, lost in the last words she'd spoken before mom got the call. Alexa stared at her lap. I stared off at a cabinet. The air was heavy, the silence between us maddening. I'd never experienced anything like this with Alexa and wasn't even sure it would've been possible before now. We had no idea what to say. \n\nI looked at her when I heard her sigh softly. She turned to look at me and I saw tears in her eyes. \n\n\"Could... could you turn off the light please, Alex?\" she asked. \"It feels so artificial...\" \n\nI nodded and walked to the door, turning off the light. \n\n\"And close the door, please?\" \n\nI closed it and walked back. She drew a deep breath before looking up at me. \n\n\"And please sit down on the bed with me,\" she said quietly. \"I... looking at you is terrifying, but I need to, I owe you that...\" \n\nI sat down and she crossed her legs to make room for me. She took my hands in hers and I could see the fear in her eyes when she gazed into mine. \n\n\"I'm not frightened about the accident, Alex, not in the conventional sense,\" she began. \"I'm... frightened because of the doors that have suddenly swung open, long before I was prepared for them to open and have to walk through them. I could've been killed and here I am, looking at decisions that I have to make. That... we have to make now.\" \n\nI nodded, dreading what she was referring to. \n\n\"It's horrible,\" she said softly. \"Horrible and unfair. We never discussed where this would take us, what we'd do when we reached a point where choices needed to be made. We were so lost in one another and selfish about it, not that I blame us. Alex, you make me feel like no one ever has before. I can say that with complete honesty.\" \n\nHer hands squeezed mine now and I could hear the frustration in her voice as it cracked. \"And it's so damned unfair that you're my nephew. How did you keep it together when you got here and not break down? Alex, I know how much I mean to you, I see it in your eyes when we're together. And you mean every bit as much to me. But if it'd been you lying here, I don't know if I could have kept up the facade that protects us.\" \n\nThere were tears on her cheeks as she pressed the back of my hands to her lips and kissed them. \n\n\"We should have always known, should have been more restrained. Because how the hell could we ever continue this, no matter how much we both want it?\" \n\nI pulled her to me and hugged her tight as she cried, her body shuddering against mine. I didn't really notice her breasts squashed to my chest or the softness of her skin or any of the other enthralling things I normally reveled in about her. I stroked her hair and kissed the top of her head, just letting her weep gently after her ordeal. \n\n\"I'm so terrified, Alex,\" she said against my shoulder. \"I'm terrified because I knew all along I had to lose you.\" \n\nHer next words were like thunder in my ears, even though she spoke them with the tiniest voice I'd ever heard her use. \n\n\"Because I know I'm in love with you...\" \n\n*** \n\nI was sitting in the chair reading when my dad and mom came in, obviously having met up after their calls ended. I put a finger to my lips, indicating that they should be quiet, because Alexa was sound asleep. I walked with them out into the hall. \n\n\"Any news?\" mom asked. \n\nI shook my head. \"Nothing you don't already know. She just got tired and took a nap. She's probably pretty drained.\" \n\n\"Fair enough,\" mom said, rubbing her eyes. \"Been a long day for everyone and it's not even noon yet. So what'll we do?\" \n\nDad sighed. \"Well, you and I are already behind on grading papers, maybe we should head to school and do our big people jobs? We know Alexa's fine, Karen. Leave her with Chatterbox McGee here, at least we know she'll get some sleep that way.\" \n\n\"And what if I had plans?\" I interjected, trying to sound annoyed. \n\n\"Oh, please, Hyrule or whatever can save itself for a day,\" mom snorted before looking at dad. \"Hyrule? Did I get that right?\" \n\nDad shrugged. \"I'm a PC gaming god, honey, not a dirty console peasant.\" \n\n\"You're worse than he is,\" mom muttered. \"Fine, we'll come see her after we finish. Link, you stand guard for a while and keep us updated. We'll be done after five.\" \n\nThen they turned and made their exit, leaving me standing in the hallway outside of Alexa's room, staring dumbly. With a sigh, I went back into the room and sat in the chair, reading stuff on my phone. Maybe an hour later, Alexa woke up and turned her head to look at me. \n\n\"Hey...\" she said softly. \n\n\"Hey, you,\" I said, smiling. \"Mom and dad went back to work since the university was calling like crazy, freaking out.\" \n\n\"I'm sure,\" she mused, sitting up. \"They could've lost one of their senior staffers in the Physics department.\" \n\nWe sat silently for a few moments before she turned her head to look at me. \n\n\"Are we stupid for ever having started this, Alex? It could never be what we wanted, civilization wouldn't let us be together.\" \n\n\"I don't know,\" I answered glumly. \"I... would have kept on as long as I could, but this scare sort of put it in perspective, right? Maybe we were fooling ourselves.\" \n\nShe laid back against her pillow, staring at the ceiling. \"I've never been in love before, not like this,\" she murmured. \"It feels so right and natural.\" \n\n\"I know,\" I sighed. \"I've... well, Alexa, I'm pretty damned sure I'm in love with you too. Hell, I know I am. You're all I ever think about and I nearly fell apart on the way over here. Thought my heart was going to burst out of my chest.\" \n\nShe smiled sadly and squeezed my hand. \"It thrills me to hear you say that, Alex, but it also makes me sad, because now we share the pain. If you didn't love me the way I love you, at least only one of us would be suffering and I'd never wish what I'm feeling on you.\" \n\nShe closed her eyes, still holding my hand. \"It feel so right with you. Like it's meant to be. But it's not. And I don't know what to do.\" \n\nI drew a deep breath. \"Do we... do we just see other people and hope it fades in time?\" \n\n\"I guess,\" she replied, opening her eyes and looking at the far wall. \"But I live with you, I don't know how that will help. I'll be seeing you all the time and just yearning.\" \n\n\"I know,\" I sighed. \"But I'm out of ideas.\" \n\nWe were silent for a while longer when someone came in. Jeanie, the student of my mom and dad's that I had met the previous day, swished into the room, looking quite concerned. \n\n\"Alexa!\" she exclaimed as she came over and gave my aunt of big hug. I began to understand what my mom and dad meant about her being dumb, because any person with functioning neurons would have known better than to bear hug a person in a hospital bed after they'd been in a car accident and were still hooked up to the machines. Alexa graciously returned the hug and smiled at her. \n\n\"Hi, Jeanie,\" she said pleasantly. \"I'm glad you could come down, that's very nice of you.\" \n\n\"Of course I did,\" Jeanie said, holding Alexa's hand and looking stern. \"Had to make sure you weren't trying to get out of our playdate, after all.\" \n\n\"Perish the thought,\" my aunt said, waving the concern off. \"I wouldn't dare miss it. I'm only a little banged up, no broken anything, no head trauma, just badly shaken nerves and maybe my pants need washing.\" \n\n\"Kinky,\" jeanie said slyly before looking over and finally noticing me. \"Oh, hey, I remember you, you're Mr de Bourne's son, right?\" ",
        "\"Yep,\" I said, standing to tower over her, perhaps feeling a little possessive of my aunt. \"I met you yesterday in dad's office.\" \n\n\"Yeah, you do look alike,\" she used nodding. \"Your dad's hot. So you two know each other?\" \n\nAlexa and I paused for a moment, bewildered by her question. This girl really was dumber than a box of rocks. \n\n\"I- yes, sweetie,\" Alexa said. \"My sister is Alex's mother. I'm Alex's aunt.\" \n\nJeanie's eyes widened in confusion for a moment as she tried to process what Alexa was saying. She screwed up her face for a second and then exhaled. \n\n\"Oh, I get it,\" she said finally before looking at me. \"You're adopted?\" \n\n\"No,\" I said slowly, trying not to sound exasperated while Alexa's eyes clouded over with tears of laughter. \"Alexa is my aunt. She is just much younger than my mother, your professor. We're the same age.\" \n\n\"Oh.\" Jeanie said, trying to figure that out. \"Oh, wow.\" \n\nShe looked at the two of us. \"That's kinda hot, actually.\" \n\nI pinched my eyes. \n\nJeanie clapped her hands together once. \"Well, I gotta go, but I couldn't get on with my day without seeing you once Mr de Bourne mentioned what happened. So, you're sure you're gonna be alright for our playdate next week?\" \n\nAlexa nodded. \"They'll let me out of here tomorrow night with a clean bill of health, I promise I'll be fine, sweetie.\" \n\n\"Good!\" Jeanie said brightly. \"Okay, gotta bounce! Lates!\" \n\nShe started to exit the room before pausing and then scurrying over to Alexa and giving her a hug and kiss on the cheek. She then made her way to the door and paused once more. She turned around, went up to my aunt and put her arms around her, kissing her on the mouth, rather deeply. She moaned through the langorous kiss and I'm pretty sure slipped Alexa the tongue. \n\n\"Much better...\" she said as she stood up and then swished out of the room, leaving my aunt and I staring after her. We said nothing for several seconds before Alexa sat back and sighed loudly, looking at the ceiling. \n\n\"Guess we know what kind of playdate I'm in for.\" \n\n\"Could be worse,\" I chuckled. \"She's about as smart as a bag of hammers, so she's gotta be great in the sack.\" \n\nAlexa gave me a look. \"I thought you said I was great in the sack.\" \n\n\"Don't you try and turn this around on me,\" I said, holding up a finger. \"I just meant she's an idiot so being good at fucking is all she's got. You're the most incredible person I've ever met, you're intelligent, you're kind, you're beautiful, you're a sex goddess...\" \n\n\"Oh, don't stop, go on please,\" Alexa said, turning on her side and smiling. \"I could use some good news today.\" \n\nI sighed grumpily. \"Well, I've got good news and bad news for you. Good news, I am very, very in love with you. Bad news, you're my aunt and I can't be with you the way I want to be.\" \n\n\"I know,\" she said quietly, her eyes said. \"It sucks. It's so beyond unfair. Alex, this may sound dumb, but... would it, would it not hurt as much if I just dated girls?\" \n\nI thought about what she was saying. If she dated girls, I didn't really have anything to be jealous of. It was a service I couldn't provide. I don't know if it actually solved anything for me, but if it helped Alexa feel like she was sparing my feelings, why would I deny her that? \n\n\"Okay,\" I said finally, shrugging. \"As long as I don't have to date guys to make you feel better.\" \n\nShe giggled. \"I somehow doubt the thought of you having super happy bum-fun with boys will make me feel better, although I'm willing to bet that picturing me scissoring with a hot girl will be good for you...\" \n\nWe were silent for a while again. \n\n\"Alex, can you please close the door again?\" she asked quietly. \"Because I... I really want to kiss you...\" \n\nI got up and closed the door quietly, putting a sign on the front indicating she was sleeping. I then came back to the bed and she sat up, tucking her feet under her. I sat on the bed next to her and she stared deep into my eyes, caressing my cheeks. Her own beautiful sapphire eyes were crystalline with tears. \n\n\"I can't believe how quickly I fell for you,\" she whispered. \"I had no control over it and I didn't even try to fight it, I was so confused. And now I know I love you and you're perfect for me and I'm forced to give you up... and I don't know how...\" \n\nShe leaned in and kissed me lovingly, trying not to cry as she did so. I could feel the tears on her cheeks, her skin against mine. I held her and kissed her back, letting her feel everything I had in me, showing her exactly what she meant to me.  \n\n\"I love you, Alex,\" she choked through the kiss. \"I'm so in love with you. Damn you for being my nephew...\" \n\n\"I love you too, Alexa,\" I murmured back. \"I love you so much and I don't want to give you up.\" \n\nThe kiss ended, for the moment, and she pressed her forehead to mine, still caressing my face as she tried to compose herself. \"It's so stupid,\" she whispered. \"All this confusion I'm feeling, and fear about everything, and the one thing I'm absolutely certain of is my love for you, which is the problem everyone else would have. It's the only part of all this that feels right, like it's supposed to be or meant to be. It's everything else that's fucked up. At least, that's how it feels.\" \n\nI said nothing, just holding her and thinking about how cheated we both felt. Finally, I posed a question I was inexplicably terrified to ask. \n\n\"What if... what if we just faked dating?\" \n\nShe looked at me for several moments, wiping her eyes. \"Fake date?\" \n\nI nodded. \"Go out on dates with other people, y'know, people we're pretty sure we have no interest in, except for maybe fucking them for the sake of something physical. But then we'll still be seeing one another behind the scenes. If we're careful, mom and dad won't suspect, because they'll see us dating other people.\" \n\nShe thought about what I was saying for a few moments. \"We could... we could still be together, at least for a while.\" \n\nI nodded. \"I don't think it solves our ultimate problem at all, but at least we'd have more time together.\" \n\n\"Yes,\" she said, looking at my face and touching my lips with her fingers. \"And it might make parting even harder than it is right now. I don't know if I could be that strong. But... well, I don't know if I'm strong enough to give you up even now. I sure as hell don't want to.\" \n\nShe sighed and sat back in her bed, her eyes distant. \"I don't know. Inevitably we'll be forced apart, no matter how in love we are. I couldn't do that to Karen. But the thought of being without you, Alex, I...\" \n\nShe finally closed her eyes. \"This is all so much right now. I guess... let me sleep, Alex. I don't mean to sound selfish, but I think I need to sleep and be alone for a few hours. Maybe I'll have clarity when I wake up. I can't be objective around you, I'm sorry.\" \n\n\"No, trust me, I understand,\" I said readily, rising from the bed. \"I'm not the least bit objective around you either, Alexa. You think, I'll think. We may not come up with an answer we like, but if we both think it through, at least we know we'll come up with the right answer.\" \n\nShe nodded. \"I'll message you later, think of something I need from the house so you can bring it over.\" \n\nI nodded, not wanting to leave or even take my eyes off her, as if I was afraid something would happen the moment I did. \n\nHer eyes were glassy as she looked up at me. \"Kiss me, Alex?\" \n\nI went to her and gently pulled her into my arms, kissing her deeply and lovingly again. It felt like the most natural thing in the world, even if those crystal tears from her lovely blue eyes ran between our cheeks. She was beautiful when she cried, even if it tore my heart out. \n\n\"I love you, Alex,\" she murmured again through the kiss. \"I'm in love with you.\" \n\n\"I love you too,\" I replied, memorizing what she felt like against me. \"Sleep now, Alexa, get better for me. You'll see me soon.\" \n\nAs I closed the door behind me, I could hear her beginning to sob and it took every bit of my willpower to not rush back in and comfort her. She needed her time. My face was warm and flush as I walked out of the hospital, my mind spinning. To lose the woman I loved... \n\n*** \n\nI'd taken a nap myself upon returning home, since my nerves were pretty shot. I'd done some thinking about the predicament but there were no satisfactory answer to be found, nothing she and I would like. I'd crashed on the long couch and was awakened when I heard my dad's vehicle pull up and the doors close. I blinked and checked my watch. It was almost 6:30. \n\nDad and mom came in, noticing me rising from my nap on the couch. \n\n\"Did you sleep well, Alex?\" mom asked as she came in. \"We stopped by the hospital on our way back and Allie said she'd sent you home so she could sleep and not feel obligated to stay awake and entertain someone. She's had a long day.\" \n\nI nodded. \"I think we all have. You okay, mom?\" \n\n\"Oh, I'm fine now, thank you,\" she said almost cheerfully. \"Now that I know my baby sister is going to be okay, I'm relieved and able to think again. We just brought home take-out, darling, you hungry?\" \n\n\"When is he not?\" dad chuckled. \"It's just burgers and stuff, but it was quick and easy. I somehow doubt he'll object.\" \n\nI stood up and joined them at the table, where mom filled me in on more of the details of the incident. It seemed a little surreal to hear about it since I already knew the outcome. But mom told me about it at length and in great detail. It occured to me that she was doing this as much for her own benefit as mine. Her analytical, scientific mind was describing and formulating it so she could deal with it. I let her talk as much as she needed. \n\nShe showed me pictures of what was left of her vehicle and I was amazed- the passenger's side was royally fucked up. It was hard to imagine Alexa not having been killed in that impact, forget escaping with just minor cuts and bruises. A cold chill ran down my spine. \n\nMom sighed and nodded her head. \"I'm just glad there's nothing wrong with her.\" \n\n\"I wouldn't say that,\" I muttered. \"Anyone who would pull a prank like that the moment they woke up from a car accident isn't right in the head.\" \n\nDad laughed. \"Turns out your family has a sense of humour after all, Karen. It must have just skipped you.\" \n\nMy mother shot him a look. \"That's right, Mike, keep feeding the bear. I hope neither of you mind, I might go through an entire bottle of wine by myself this evening. Help with the nerves and all.\" \n\n\"Doesn't bother me,\" dad said cheerfully. \"I promise to not even try and take advantage of drunk you this time around.\" \n\n\"How chivalrous of you, Conan,\" mom said dryly, rolling her eyes. \"But stay nearby, in case I need a shoulder to cry on.\" \n\nDad nodded and began clearing the remains of supper away. Mom looked at me. \"I've had enough of cars for one day, Alex. If Allie calls and needs anything, you're getting stuck driving since I'll be in no shape to make it out there, got it?\" \n\nI nodded. \"I'll play offline for a change, just so I don't get tooo caught up.\" \n\n\"Good,\" she declared, taking a wine glass and an entire unopened bottle of Old-Vine Zinfandel. \"I'll be up on my bed getting blitzed. Your dad's in charge of directing you now. G'night.\" \n\nI went down to my room and began playing a game, to keep myself occupied and keep from fretting when there was nothing I could do. I'd been playing for maybe two hours when my dad called down the stairs. \n\n\"Alex?\" he said loudly. \"Your aunt was hoping you could take her some of her books and her laptop? I guess she's a tad bored.\" \n\n\"Yeah, I can do that,\" I said, trying to sound resigned to the prospect. \"I'll be up in a minute to get her stuff and then go.\" \n\nDad seemed satisfied with that answer and left me to finish up. I went upstairs and packed her laptop, along with some of the novels I found under her nightstand. I also packed her webcam, in case her friend Freja wanted to see her. I called out that I was leaving and drove back to the hospital. It was now dark and the place was practically empty. The nurse at the desk nodded me through, reminding me that visiting hours ended in just under forty-five minutes. \n\nThe door was open so I knocked and went in. Alexa's face lit up when she saw me, smiling radiantly. She never ceased to get more beautiful in my eyes. \n\n\"Alex,\" she said almost dreamily. \"Close the door. Come here and let me kiss you...\" \n\nI did so and then put the laptop and books down as she held out her arms. They'd removed the IV's and sensors from her, meaning she could move freely. I pulled her into my arms and kissed her deeply, enthralled to be feeling her against me again. I couldn't get over how right it felt. It was Heaven. She moaned through the kiss, apparently every bit as relieved as I was. \n\nShe pulled back from the kiss and smiled at me. \"I love you, Alex. And it may not be the smart thing to do, but I want to be with you as long as I can. I need this and I need you. I won't give up my present happiness because of a possible future sadness.\" \n\nShe pulled me down to sit on the bed, her hands clasped in mine. \"I guess I did need that time. So if you have no objections, let's go with the fake dating plan.\" \n\nI looked deep into her eyes and drew a deep breath. \"Well, actually...\" I said reluctantly. \n\nAlexa froze. I could almost feel her heart stopping, her blood turning to ice. Her eyes were wide with an instant horror at what I was obviously going to say next. \n\nI grinned. \"Gotcha. Now we're even for that amnesia prank. Yes, we should fake date other people.\" \n\nAlexa's eyes almost spiralled in her head as she collapsed back against her pillow, staring wide-eyed at the ceiling and her hand over her heart, to make sure it was beating. \n\n\"You... txortalari...\" she sighed finally, still staring at the ceiling. \"You nearly fucking killed me. Haven't I nearly died enough today, you bastard?\" \n\nI chuckled. \"At least your head landed on a pillow when you fell backward.\" \n\n\"Oh, just give me a minute and shut up, motherfucker...\" she breathed. \"Holy cow, you really got me. Shit...\" \n\nFinally she made a beckoning motion with her hand. \"Your dick, please. No arguments.\" \n\nI laughed and stood, unzipping my pants and going to stand beside her head. She turned on her side and took hold of my cock, stroking it for several seconds before sliding it inside her mouth with practiced ease. Her moan was one of both pleasure and relief, clearly delighted to have me in her mouth again. I sighed and caressed her beautiful hair as she bobbed up and down my length slowly. \n\nHer hand followed her mouth as she sucked on me, her tongue swirling around the skin with devlish skill. I could not believe how wonderful everything she did felt and my erection was massive and rock hard in no time at all. Her sapphire eyes looked up at me, lust kindling in them. One of her legs bent up, the hospital gown dropping away to reveal her smooth pussy, which was already wet with her desire. \n\n\"Mmmm, she's been waiting for you, you know,\" Alexa purred, smiling up at me and winking. \"Almost a whole day without her best friend. You plan to apologize and make it up to her, right?\" \n\n\"Sure do,\" I said, nodding. \"But what if someone comes-\" \n\n\"I don't care, Alex,\" she said bluntly. \"Not at this very moment.\" \n\nAnd that was good enough for me. I loved her and I wanted, no, needed to make love to her. Consequences be damned. \n\nShe pulled her wet mouth off my cock and indicated a chair with no arms. \"Go sit, please...\" she said huskily. I nodded and went to sit down, pulling off my pants and my t-shirt while I did so. Alex got off the bed, shedding her hospital gown and standing gloriously naked in front of me. My cock throbbed at the sight of her body, aching in need. Smiling, she straddled my lap, putting her arms around my neck. Looking into my eyes, she pressed her pliant, slippery pussy against my cockhead and slowly sank down, taking me deep inside her. We both moaned in pleasure, happy to be one again. \n\nWe kissed soulfully, lost in one another as she began to move slowly up and down on my lap. I held her tightly against me as I dared and she made no demur. Alexa squeezed and rippled herself around my cock, transporting me to a world of bliss, consisting only of us. And that was all I needed. \n\n\"Alex, I'm so in love with you...\" she murmured as she moved up and down on top of me slowly and gently. \"I can't be without you.\" \n\nI bit her neck and she shuddered and moaned, clasping me to her. I leaned my head down and bit her breast again, over the previous mark I'd left on her and she gasped in delight. \n\n\"Yes, my love,\" she whispered, fingers flexing on my neck and bck. \"Mark me again, Alex, make me all yours...\" \n\nI took her nipple in my mouth, sucking it greedily. Alexa shivered and thrust herself down on me even harder, fucking me eagerly. It never ceased to amaze me how rapt I was by her, every aspect of her. She was my goddess and I loved her madly. There was nothing I wouldn't do for Alexa. \n\nWe kissed again feverishly as she began to squirm up and down faster and faster on me. We were swallowing one another's tongues as I ground my hips up into her and she pushed down harder, desperate to feel me as deep insider her as possible. Our bodies were warm and wet together, pink with our exertions, shining with our sweat. Her heart pounded against me and I could feel my own, as if it was going to burst right out of me. She looked into my eyes, hers flashing with a great eagerness. \n\n\"Cum in me, Alex,\" she growled softly. \"Please, cum in me, let me feel you again. Oh God, Alex...\" \n\nWe kissed again, almost to silence our screams as we crushed ourselves against one another, shaking uncontrollably. She moaned into my mouth and I groaned in ecstasy as I came, pumping my thick, pearly essence deep inside her clenching, tight pussy. She bathed my thighs with her wetness and her nails almost dug into my back. \n\nShe collapsed against me, panting, her chest heaving. The wonderful feeling of her soft breasts pressed to me was heavenly. I just held her, wondering what could ever be more blissful than this. And I knew I never wanted to give her up. \n\n\"So in love with you,\" she whispered against my shoulder, kissing it gently. \"That's all that matters right now...\" \n\nI held her for a while longer before slowly rising and removing my cock from her pussy. She giggled as my cum seeped out of her, dribbling on the floor. I deposited her gently on the bed and went about cleaning up after us while she replaced her gown and wiped her pussy clean. Neither of us felt like answering questions about why she smelled like sex when the only visitor had been her nephew. \n\n\"God, I needed that,\" she sighed, stretching her arms over her head like a contented cat. \"I'm pretty sure I'm a total addict now. Think you'll be able to sneak back tomorrow?\" \n\n\"I would think,\" I reasoned. \"Mom and dad are easier to keep track of now, since they share his vehicle temporarily. So we've got that working for us.\" \n\n\"Good,\" she said, smiling. \"I guess I'll start fake-dating Jeanie, which has the added bonus of really throwing Karen and Mike off the trail about us since they'll now think I'm into girls. Who will you date?\" \n\n\"I have no idea,\" I confessed. \"Haven't given the matter any thought. But I will now, once I head home.\" \n\nShe nodded. \"I'll probably be Skyping with Freja tonight, since she's really worried and wants me to prove I'm okay.\" \n\n\"I don't blame her,\" I replied. \"Her best friend was in a car accident and there's nothing she can do about it. Did you at least send her some pics from your phone to ease her mind?\" \n\n\"Yes, it seemed like the thing to do, you know?\" she agreed. \n\n\"I actually have a question about that,\" I said, sitting down on the bed next to her. \"We've taken a zillion pictures. Who do you send them to?\" ",
        "She giggled. \"Nobody, dopey. Not the naughty ones, anyway. I sort them into folders and I have sent Freja and some of my other friends back in Europe some of the G-rated ones, to let them see my life. I wouldn't show them any of the personal ones without your say-so, and even then only Freja, because she'd think it was kinky and like it.\" \n\nI shrugged. \"I don't mind if you do or if she knows about us. If she'll be happy for you, Alexa, go for it, okay?\" \n\nShe smiled warmly. \"Thank you, Alex. But you'd better get home before Karen makes Mike call. You were just supposed to drop off my stuff, right?\" \n\n\"Yeah,\" I sighed, unhappy at the prospect of parting from her. \"You can text or message me whenever you want. It doesn't matter if I'm asleep, hearing from you is what matters to me, okay?\" \n\nAlexa nodded and pulled me in for another loving kiss. We confessed our love for one another and then I left, sad to be going but knowing I had to. The drive home was a quiet one for me, lost in contemplation about what would happen next. \n\nHow would I fake date? Who? How much did I need to like or just not mind a person to make it convincing dating? My parents weren't likely to fall for a ruse for long if I didn't find the right person. And what if the other person became interested in me? What would I tell them? Did I just never date a person more than once? Maybe I could just get some friends with benefits who didn't really want anything more. \n\nI was lying in bed when a text message from Alexa asked me if I wanted to Skype. I opened my screen and activated the program, smiling when I saw her beautiful face. She told me quietly that she'd already talked with Freja, assuring her friend that she was fine. She was smirking as she looked at me, her hospital robe not visible on her shoulders or the swell of her bosom. \n\n\"So,\" she purred, smiling slyly. \"Am I naked or just teasing?\" \n\nI chuckled. \"Normally I'd hope for teasing, because then you could strip for me, but it's a hospital gown. Only you could make stripping out of a tent sexy.\" \n\nAlexa giggled and slowly panned the camera down her body in the dimly lit room, revealing her incredible breasts, trim stomach and finally her smooth pussy. She used two fingers to pull the sticky lips apart and show me her inner pink, which was glistening invitingly. \n\n\"I've got an idea,\" I said as she returned the camera to her face. \"Each of our laptops has a built-in cam and we also have the webcams. Let's open two windows each, one fixed on our face and the other on our bodyparts as we choose so we can see one another cum.\" \n\nHer eyes lit up in delight. \"I love that idea, Alex. Tell me how to do it and we can cum together. I love your cock but then I can always see your face too...\" \n\nShe followed my instructions and soon we each had two windows on our screens opened, one fixed directly on our faces, the detatchable webcams displaying my hardening cock and her wet slit. We watched one another silently as she began to finger herself and play with her breasts while I stroked my dick. I could hear her sigh in pleasure, thrilled to have me watch her. \n\n\"Do you like it, Alex?\" she asked quietly, using her fingers to spread her lips and show me inside herself. \"Do you like how wet I get for you? Ohhhhh, I wish I could be louder, make someone in the hall wonder what was happening in here...\" \n\nI was lying on my side, stroking my shaft and watching her intently, my eyes darting back and forth between the two windows on my screen. I was loving how she played with her pussy, but at least as mezmerizing for me was the look of pleasure on her face. Her eyes were sometimes closed, but other times those captivating sapphire eyes were looking straight at me, knowing she held my gaze. I moaned and pushed my hips closer to the webcam centered on my cock, letting her see up close exactly what she did to me. She gasped in response and slid two fingers deep inside herself, working them in and out feverishly. \n\nOh my God, she was so wet I could hear the slick, juicy noises she was making as she fingered herself. It drove me wild and I was pumping my hand furiously up and down my length, desperate for release. I was hoping she'd cum soon, because I was ready to blow. \n\nShe bit her lip as she stared at me, sweat shining on her brow. Her fingers were plunging into her pussy now, glistening with her arousal. She panted as our eyes locked, both straining to hold on for one another to peak. \n\nI groaned as loudly as I dared while she craned her neck and moaned wantonly, all thoughts of who may be outside her door forgotten. Cum pumped from my cock, splattering the old white shirt I'd laid in front of me. I spared a look at her womanhood while she came, the entire region of her inner thighs shining with her essence. \n\nI rested my head on my arm as I slowed down, casually stroking now, just watching her. Her fingers had finally pulled out of her steaming tunnel and she caressed her lips slowly, a look of bliss on her face. Her eyes were closed as she brought herself down from the orgasmic high she felt. When her eyes fluttered open, she smiled at me serenely and mouthed the words 'I love you'. \n\nI told her I loved her back and we simply lay together for some time, watching one another relax. She pulled her hands up from her pussy and sucked on her fingers, enjoying the taste of herself and winking at me. She fondled her breasts for me and I tapped the aperture of my webcam with my cock, like I was tapping her face. She giggled and smiled naughtily. \n\n\"It feels so good to be able to say 'I love you' in English,\" she said finally, stretching her arms overhead and jutting her breasts forward proudly. \"Doing it in other languages you didn't know was not quite as fulfilling, but I was afraid to tell you how I really felt.\" \n\n\"Fair enough,\" I replied, nodding. \"I was fit to bursting not being able to tell you. So when you said 'I love you, daddy' the other night during our little roleplay, you meant it.\" \n\nShe nodded slowly. \"It was my chance to say it to you in a context that could be excused, but I really needed to say it to you. I don't see myself getting tired of saying it, I'm warning you.\" \n\n\"And I don't object and never will.\" I promised. \"Hearing you say it is the best thing about my day. I nearly burst when you confessed it to me earlier today.\" \n\n\"I had to, Alex,\" she said, her voice carrying a note of seriousness. \"After what happened, I couldn't not tell you any longer. I wasn't sure what we'd do, but I couldn't go on without you knowing. The minute I saw you at the airport, I had a dread feeling you were someone I was going to fall in love with. And I don't fall in love easily.\" \n\nI nodded slowly. \"I was crazy about you really quickly too, although I was really confused by how I felt. I fought my feelings, telling myself I was insane, but there was no way I was winning that. And I'm glad I lost. Because loving you, being in love with you, Alexa, makes me happy.\" \n\n\"I'm glad,\" she said softly. \"That means the world to me. I don't know what will happen ultimately between us, but I'm determined to love you for all I'm worth until that fateful moment. I'm in love with you and I've surrendered my heart and my body to you.\" \n\nI sighed and nodded. \"I feel the same way, but... what about other people? I don't know what to do and I'm conflicted. Sure, I can fuck another girl and it'll feel good, but I can't stop thinking about you.\" \n\nShe smiled lovingly. \"I know. And I can fuck girls and still be stuck on you. Who knows, maybe we'll find one who can keep a secret worth a damn and share her. Wouldn't that be a thrill?\" \n\nI laughed softly. \"I love how depraved we are together. That doesn't bother me a bit, that idea, because I'll be sharing her with you.\" \n\nShe giggled and then yawned. \"Well, I should sleep. Oddly enough, it's been a long and emotional day with its fair share of scary happenings. I hope you sleep well and you'll come by and see me tomorrow and make love to me?\" \n\n\"I can't think of anything I'd rather be doing,\" I said, grinning. \"Get some sleep. I love you, Alexa. Don't forget that.\" \n\nShe nodded. \"And I'm in love with you, Alex. Dream of me, okay?\" \n\nI nodded and smiled while she kissed her fingers and pressed them to the camera before turning them both off. I turned onto my back and stared at the ceiling, lost in thought. My body felt heavy but contented. It certainly had been a wrenching day, but we had confessed our feelings and were determined to be together as long as possible. We were in love and promised our hearts to one another. She was my angel and my goddess, to whom I was utterly devoted. \n\nAnd who could have asked for more? \n\n*** \n\nAuthor's Notes: Hopefully this was worth the wait. Part of the problem is that while I am submitting the stories in a format that the Literotica website theoretically understands, it claims it does not and my chapters end up waiting a few days for a live human to convert and post it. Don't ask me why, I have no answers. Probably has something to do with me using Ubuntu on this damned laptop. \n\nDon't worry, this story is continuing. The only story I have on hiatus right now is 'Love You, Daddy!' and that's because it's at a point where it can be left for a while until Part II is ready. All my stories are important to me, for different reasons- Alex &amp; Alexa is just fun and people like it. My Naughty Neighbour is actually somewhat autobiographical about something that really happened to me and I wrote a story about it. Sapphic Serenity is a personal project that allows me to indulge my fetish for tribadism and general lesbian debauchery. Love You, Daddy was fun because I've always wanted to be a father and have a loving daughter (if not quite so literally). \n\nLast is 'The Great Khan', which is the most unlike the others. It's a war/action story with erotic elements strongly weaved in. If you're familiar with my work on other sites, you'll notice a strong similarity to 'The Young Conqueror' story I've been writing for several years now and just passed 870,000 words. Talk about a labour of love... \n\nAnyhoo, the other big delay was the fact that I have recently moved home to Toronto from the States after thirteen very trying and agonizing years. I'm getting my life back together and mostly starting over, so please be patient for the updates, since real life must take precedence, even if it's nowhere near as sexy. \n\nOne final note, and this is a personal one- some hateful little cockmongler messaged me at some point, expressed a hearty disapprobation with my work and rather than simply not read my offerings, has made it abundantly clear that he intends to annihilate my story ratings by going to every computer and different ISP he can find and give me 1's repeatedly. Now there's nothing I can do about this nasty little troll, but my plea is on behalf of other writers on this site. \n\nPLEASE keep in mind that writers sometimes feel a compulsion to write what is in their heads. It's one thing to offer constructive criticism so that they might improve, but there are people who are just nasty in their reviews as well. Maybe something someone writes grosses you out. Big deal. Don't write a review then. But telling them their work is crap because you don't like something they wrote about is not objective and, well, petty. To be honest, I expect better of the people who read my stories, I try hard to keep them stimulating on several levels, not simply a venereal one. \n\nSo if you happen to be the petty little whineball giving me all 1's because you've made it your mission to tank my stories, whatever. I pity you. You've never had the tallywags to leave an honest review, so I'm having a hard time caring what you think. To everyone else, please try to be kinder to authors if you tend to be unkind. Telling it like it is and being mean are not the same thing, I assure you. \n\nWell, that's enough pontificating for now, I'm going to spellcheck this and then submit it. Should be up in about two days, I'm thinking, but you already know that, right? \n\nKeep your stick on the ice! \n\n- Management"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "incest",
        "aunt",
        "nephew",
        "secret",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/alex-and-alexa-ch-07"
}