{
    "title": "Mia Mine Ch. 06",
    "pages": [
        "David awoke (as usual) at around 4 AM. Ever since he had moved over here and gotten up every weekday at 3:30 to catch the 4:40 ferry, it was difficult to sleep much past that even on the weekends. He looked over at Mia, sleeping soundly. Her lovely hair spread on the pillow, framing her beautiful, peaceful face. He held back his urge to lean over and kiss her, she looked so deeply, peacefully asleep. He slipped out of bed as quietly as he could, walked softly into the bathroom, and quietly closed the door.\n\nAfter he had the door closed, he turned on the lights, and got ready to shower. He didn't want to start the fans, so he took a very quick shower so as not to steam up the bathroom too much. He shaved and brushed his teeth, threw on some comfortable clothes, turned out the light, and carefully and quietly opened the door.\n\nHe walked past the bed, gladly noticed Mia hadn't even stirred. He once again marveled at the turn in his life that had brought him this beautiful woman, so intelligent, so sexy, so everything he had ever wanted and much, much more. He made his way quietly down the stairs and made his coffee. He was a stickler for the old method of grinding his own beans, and using a drip style filter to pour the boiling water on top of the ground coffee.\n\nOnce the coffee was made, he got his \u00bd grapefruit and dry wheat toast, and settled in with his laptop. He checked the emails from work since he had left early, but there was nothing that couldn't wait until Monday to handle.\n\nHe checked the local news and weather, and then decided to look up Mia's company online. He remembered the name from the tags on her bags, and typed it into the Bing search engine he used. \n\nHe found the main website and was very impressed with the professional and elegant look of it (thinking to himself it mirrored some of Mia's qualities).\n\nHe found a who's who button and clicked it, and to his shock and amazement he saw Mia's name and picture, not as the HR head, but as the founder, owner, and CEO! He was a little taken aback, and quickly read the short blurb about how Mia had started with nothing and turned the small fledgling company into an international powerhouse in its field. \n\nHe closed out of the site and turned his laptop off. He really didn't know what to think. Granted they barely knew each other when Mia had told him she was head of HR, but she hadn't expounded upon it as they became so much closer. Some of his old insecurities and mistrusts began to take over his thoughts and he chided himself for 'listening to them'.\n\nHe decided he should go out for a walk and clear his head. He figured Mia would probably sleep for quite a bit more and he would be home before she awoke. He left her a note in case she did awaken, to please have whatever she wished for breakfast, the coffee was hot on the stove, and that he'd be back when he cleared his head.\n\nHe got on his warm coat and left through the front door, so he could keep Mia locked in. He walked in his normal long stepped gait and soon found himself at the water's edge where he loved to walk the tide line. It was always different to see what the tide had taken and what it had left. He walked up and down the beach trying to get rid of his fears. \"Why wouldn't she tell me?\" kept ringing in his head. He combatted this with \"it never really came up, I'm sure she was planning on telling me this weekend.\"\n\nBut then the fears would respond, \"Maybe she just doesn't want you to know she is so rich and powerful, thinking you might turn into a gold digger.\"\n\nHe once again had clearer thoughts and replied to himself \"I am not a gold digger, and she has nothing to fear from me, nor do I have to fear she is keeping things from me.\"\n\nWith that last soliloquy he turned and headed back for home. He had to trust his feelings for Mia. She had shown nothing but honesty and respect to him, so that is what he was going to believe.\n\nHe unlocked the front door, and saw Mia, in his white shirt again, sitting on a stool at the island, sipping a cup of coffee and typing away on her laptop. Her beautiful, long, smooth legs hanging freely as she sat atop the stool. When she heard the door, she looked up and gave him a big smile. He relaxed and walked into the kitchen to give her a big kiss.\n\n\"MMMMM good morning to you too sweet one!\" Mia said.\n\n\"I saw your note and was kind of disturbed that something was wrong.\"\n\n\"I just had a couple things to work through and did it, so I am back and loving seeing you in the house, relaxed, and drinking our coffee.\"\n\n\"I love the coffee by the way, just another one of your secrets?\"\n\n\"Not really,\" David said with a laugh, \"just a bit of the old school way of making it. A step above what we called my Dad's Norwegian Cowboy coffee. He used to boil the water, pour the grounds in, and let them settle. That was some strong stuff. This is a bit tamer.\"\n\nMia laughed at his description of his father's coffee, and gave him another kiss.\n\n\"So, we have some things we need to talk about if you don't mind.\"\n\n\"Not at all, please let me know what is on your mind.\"\n\n\"I know this has all happened so fast, but I really believe we met for a reason. David, I am falling madly in love with you. I cannot even think of being apart from you.\"\n\nDavid started to say something but Mia reached over to place her finger over his lips, \"Please let me finish I want to throw all my thoughts onto the table before we talk this out together.\"\n\nDavid nodded his head and motioned with a sweep of his arm to continue.\n\n\"So, when I told you I was the head of the HR department for my company, it was a little bit of a fib. I am the head of all the departments, because it is my company. I own it and am CEO. I was very disturbed that my three groups of applicants for heading this branch's HR department did not give me a candidate I want. I was just in contact with some of my people in San Francisco and have put into motion me staying on up here for a while and handling the HR duties myself.\"\n\nDavid smiled from ear to ear and wanted so badly to say something or just pick her up, hug, and kiss her, but he knew she wasn't quite done so held his silence.\n\n\"Now, I didn't think it was presumptuous of me to think I could stay here, you have placed many clear hints that you want me here as much as I want to be here. So, what do you think?\"\n\nNow David had his opening and rushed over to her, hugged her so very tightly, and kissed her like he had never kissed before. As they broke the kiss, David loudly said, \"Yes, Yes, Yes, a thousand times Yes!\"\n\n\"So, I guess I will take that as a yes then,\" giggled Mia.\n\n\"You guessed correctly my dear!\"\n\n\"There is one condition however, that you must agree to.\"\n\n\"OK, I agree,\" said David.\n\n\"I haven't even told you the condition yet you goof! Ok, so your beautiful new house needs to be decorated. It is screaming for a woman's touch to turn this into the wondrous home it wants to be, and I am just the woman to do it!\"\n\n\"You drive a hard bargain my love, do I get any say in this decorative process?\"\n\n\"Of course, this will be a joint venture, we will go and pick out the things together.\"\n\n\"Wonderful, then yes, I totally accept your condition. But I have one condition of my own.\"\n\n\"Oh? And what might that be?\"\n\n\"We have to incorporate some of my framed photos, as soon as I can find the box they are in.\"\n\nMia hemmed, \"Well, let me take a look at them, and then we'll decide if they will fit in with my plan.\"\n\nThey both laughed, and came together for another hug and kiss.\n\nMia then had a bit of a concerned look on her face and said, \"Now tell me, what was it that you had to get clear in your mind?\"\n\nDavid felt a little embarrassed, but didn't want to keep anything from Mia, so he sort of stammered, \"Well, I looked at your company's website this morning while I had my coffee and saw you were quite a bit more than just the head of the HR department. I started to feel those insecurities and wondered why you hadn't told me, like you were afraid I was a gold digger or something. But my walk in the cold air and being near the water cleared my mind, and made me get back to trusting you would tell me, which of course you just did.\"\n\n\"Oh David, I am so sorry I didn't tell you sooner. When I told you I was the head of the HR Department, we had just met, and it is a protective thing I do almost without thinking. Things went so well so fast for us, I had really not even thought about my job or work until this morning, when I couldn't bear to think of leaving you.\"\n\n\"Yes, the thought of having to say goodbye to you on Monday morning has been nagging at me. I have been trying to be in the present and not let what I thought was coming in the future bother me, but it has been very hard. I have fallen so deeply in love with you too Mia, and the thought of this house without you in it has been very disturbing. To hear you say you want to stay and become a part of my life is dizzying. I have to admit, I am not much of a shopper, I usually get tired parking the car at the parking lot, but going there with you, to decorate 'our house' sounds like another wonderful adventure to share with you.\"\n\n\"Great David! That's exactly how I see it as well. I won't put you through the ringer and try to do it all today. I have to go shopping for some clothes too, as I only packed enough for a few days, and suddenly I have someone I want to look good for. Let me go upstairs and get dressed and we can get going. I won't hear back from most of my emails until much later, and the responses are going to be just a formality anyway. They all know me well enough now, that when I put something into action, they respond with action.\"\n\n\"Wow, I love the authority and self-assuredness in your voice my dear! Do you mind if I come up and keep you company while you dress?\"\n\n\"Yes please, why don't you help me?\" Mia said a bit suggestively. \n\nDavid bounded up the stairs, hearing Mia's laughter behind him.\n\n\"You look like a little kid, running to get his candy treat.\"\n\nDavid smiled from the top of the stair landing, \"Oh, I am getting a treat alright, and you are my most favorite candy!\"\n\nWith that, Mia took his hand and he helped her up to the landing and they walked into the bedroom arm in arm. Mia went to her suit case and started to pull things out.\n\n\"We are definitely going to have to get another dresser for all my stuff.\"\n\nDavid quickly went over to his dresser and rearranged the drawers, leaving her the top two drawers. He spent so little time and money on clothes it wasn't difficult to combine all his stuff into the bottom two drawers. He went over to grab her suitcase and bring it over to the dresser to make it easier for her to unpack.\n\n\"Always such the gentleman! And I do mean gentle man David. Your demeanor and the wonderful way your treat me as a woman, as your woman, means so very much to me. I know I told you a bit of how hard it was growing up locked in a man's physical body, but knowing in all senses, I was a woman. It has caused so many awful situations throughout my life, but being with you has washed all those memories out the window.\"\n\nWith that as his encouragement, David reached over slowly and unbuttoned the three buttons Mia had buttoned on his dress shirt. He opened it up to reveal her beautiful breasts, nipples protruding proudly. He bent over to take one in his mouth, loving the feeling of her hard, excited nipple, and especially loving the moans his attention was creating from Mia. As he sucked, flicked, and playfully bit her one nipple, he let his hand roam to the top of the shirt to push it off her shoulders. She shrugged her shoulders to help, and the shirt slowly fell to the floor at her feet, leaving her completely naked in front of him.\n\n\"And now for that candy treat you promised\" he said as he moved his hands down to cup her sac, and run them up and down her now hardened penis.\n\nMia moaned in pleasure, leaning her head back, feeling her hair tickling the top of her back. David now moved his head down, so he could feed her hard shaft into his mouth with his hands. As Mia felt herself enter David's masterful mouth, she let out a large gasp, and grabbed his now bobbing head. She had never been with anyone who could bring her to the beautiful edge of orgasm quicker than David. Truth be told, she got hard just looking at him, when they were both fully clothed. But his first tender, then sexually charged manner could bring her to that cliff overlooking her passion, and she could hardly wait to jump off, feeling that orgasmic relief. \n\nDavid sensed her body tightening, readying itself for the oncumming orgasm. He reached behind her, to first cup her ass cheek, then find the beautiful crack, and send his finger into her. As he pumped his head, he matched each pump, with his finger sliding all the way to try to hit her spot.\n\nThis pleasure attack on all her senses was too much for Mia, and she came, with a yelp, a shortened scream and finally a \"OH GOD DAVID! I'M CUMMING!\" \n\nDavid removed his finger so he could put each of his hands on her luscious cheeks, to pull her now spurting penis deeply inside his mouth. His hands helped her almost automatic thrusts as she pumped her hot seed into his waiting mouth and now throat. He was getting much better at taking her load now, and enjoying the taste and sensations of her cum inside him. \n\nHe felt her last push, and she held herself like that as the last few spasms shot little drops of the last of her orgasm. His hands held her cheeks, and held her tightly against him until he felt her release, and he let go of those cheeks he so loved so he could slide up and kiss this beautiful woman. \n\nMia finally regained her composure, broke the last kiss and said, \"If we are going to get anywhere shopping today, we should probably get a start. But rest assured, this wonderful interlude will be repaid tenfold when we return.\"\n\n\"I will look forward to that very much,\" said David with a bit of an evil grin. \"So I was thinking, we should probably go clothes shopping for you first, the furniture can wait a bit. I know of this lovely little store down in the main part of town. I walk by it every day. Two young women started it up at a time so many of the businesses in the center of town were closing down. They have beautiful clothes there, at least I think so, but I am certainly no fashion expert. I know what I like, and what I would love to see on your beautiful body. And, they donate a percentage of each sale to a very worthy cause.\"\n\n\"Ok, so how much do they pay you for commission on all the sales you bring in with that glowing report?\" Mia asked smiling.\n\n\"Very funny, we don't have to go there, there is a mall at the next town north of here. I don't go there much, I am not much of a mall person.\"\n\n\"Oh! I was only ribbing you, I loved hearing your story about the little store, and it sounds lovely, just like the stores I like to shop in. I don't really like malls much myself. And I am all for women owned businesses and try my best to support them. I would be honored to have you take me to this store.\"\n\nWith that, they went back downstairs, got their coats, and went out to the garage and into David's car. Mia watched with a giggle how much fun he seemed to have pushing the automatic garage door opener on his visor and watching the garage door open. \n\n\"Your love of the small things in life is very charming David, my dear, another thing I love about you.\"\n\n\"Hey! After all those years of having to park outside and scrape the frost, ice, and snow off my windshield every winter morning, having a garage, with an automatic door no less, is no small thing!\"\n\n\"I stand corrected, but I still love watching you use that remote,\" said Mia with a warm smile and reaching her hand to lightly brush the side of his face.\n\n\"What a beautiful morning, cold, but so clear, you can see the mountains over there, with their winter snow caps,\" said David pointing over to the west.\n\n\"It is so beautiful here David, so many wonderful sites, and to be able to share them with you every day is just going to be heaven.\"\n\n\"I can't even imagine my life without you in Mia, and frankly, I don't want to imagine that!\"\n\nThey drove the short distance to the center of town, and parked just a couple blocks away from the ferry terminal and the hotel Mia had stayed in. Mia was amazed to see free parking (for 2 hours). After parking David rushed out to open her door, take her hand, and help her out of the car.\n\n\"Oh my, a girl could get used to that type of treatment.\"\n\n\"Well you better start getting used to it, you are going to be stuck with it forever now.\"\n\nMia smiled and tried to hide the little tear trying to escape the corner of her eye. She kissed him gently, holding his head in her hands.\n\nThey entered the small store, and immediately a beautiful young blonde woman walked up with a gorgeous smile and said, \"Hi David! Welcome back!\"\n\nMia was a bit taken back by this warm welcome, \"So you are a regular here buying clothes for all your women?\"\n\nThe saleswoman laughed and said, \"No he was here a few weeks ago to buy a dress and he was such a pleasure to deal with. He knew what he wanted, but also was gracious enough to listen to my suggestions. He ended up getting a gorgeous dress, and made a very good impression on me. First, we don't get a lot of men in here, and when we do, they don't really want to listen to suggestions very much. David's soft spoken strength and ease to deal with makes him hard to forget. My name is Cecilia by the way, very nice to meet you. Is this the sister you bought the dress for?\"\n\n\"No Cecilia, this is Mia, the love of my life and we need to get some clothes for her.\"\n\nMia reached her hand out, \"Hello Cecilia, so nice to meet you, and I agree, David is quite hard to forget isn't he?\"\n\nCecilia laughed. \"So what can I show you?\n\nBefore Mia could speak, David said, \"There was a sort of peach top, with almost flesh tone shoulders that was in the window with a sleek, black pencil skirt, I don't see it anymore, do you still have that outfit? I would love to see Mia in it.\"\n\nMia just stood there smiling at his way of trying to get the clothes he wanted to see her in, and hoped Cecilia could find them.\n\n\"Let me go check, a lot times we put the replaced display items in back, I will be right back. As she walked she turned her head a bit so say to Mia, \"I see you as a size 7, is that correct?\"\n\n\"Very good Cecilia, yes, size 7.\"\n\nMia smiled at David and whispered into his ear, \"I already love this place, and Cecilia is just a darling. Thank you so much for thinking of this place and bringing me here.\" Then she kissed his cheek and stood back, just as Cecilia appeared through the back curtains with the outfit David had requested.\n\nMia gasped when Cecilia held the two pieces in front of her. \"Oh my! Perfect! Let's get a few more outfits and I want to go try them on.\"\n\nDavid stepped back and let the ladies converse about what type of clothes, for what situations, and what colors were needed. He marveled at how quickly the two seem to have become friends. They talked and shared and laughed and giggled like old chums. It really made him smile, and gave him yet another wonderfully warm feeling about the woman he was giving all his love to. After a few minutes, they had amassed a rack full of things for Mia to try. To please David, she tried on his suggestion first, and when she stepped out of the changing room, both David and Cecilia gasped.\n\n\"Wow! It never looked that good in the window!\" said Cecilia.\n\n\"I agree,\" said David, \"turn around hon and give us the full Mia look.\"\n\nMia spun around almost like a runway, model, and David and Cecilia both began to clap.\n\n\"Stunning, absolutely stunning my love.\"\n\n\"Oh thank you David, I just love it, and Cecilia, it fits just perfectly.\"",
        "Cecilia giggled and said, \"You are most welcome. Would you mind walking around close to the windows? I want any and all passersby to see how beautiful they could be if they wore our clothes. You are such a perfect model!\"\n\nMia laughed and took a spin around the store, trying to stay close to the windows. David could see she was a bit uncomfortable doing this, but appreciated her style and grace, even when she really didn't like being on display. Luckily, there weren't that many people outside and Mia strolled back to the changing area. She went in and tried on all the rest of the clothes they had picked out, and showed David each and every one of them. He was an enthusiastic supporter, loudly complimenting each of her choices. He loved that she used some of her accessories with some of the outfits. She wore her reading glasses when she came out in a very businesslike suit, and looked like the stern boss. David shouted out a \"Yes Ma'am\" when she came out causing them all to laugh. \n\nShe next came out in a beautifully, almost tailored grey pinstripe skirt and jacket suit, with a deep pink blouse. As she turned the corner David said, \"The deal is done before you even open your mouth, where do I sign?\" They all had another laugh.\n\nAfter she had tried on everything, she told Cecilia, \"I will take them all!\"\n\nCecilia squealed with delight and wheeled the rack over to the cash register. David reached for his wallet to pull out his credit card. Mia said firmly, \"Oh no you don't! These are my clothes and I will buy them.\"\n\n\"Wow! OK, but at least let me buy you the one I had wanted for you, Cecilia, you don't mind ringing that first outfit up separately do you?\" replied David.\n\nCecilia looked at Mia, who gave her smiling nod of approval, \"Of course not, I will ring them both up with a 5% volume discount!\"\n\n\"Please Cecilia, ring them up at the listed price and send the 5% to the women's empowerment charity on your sign,\" said Mia.\n\n\"That is very kind of you Mia, and thank you so much!\"\n\nThe process of ringing up, and packaging all Mia's new clothes took several minutes. David made a couple trips out to the car to load everything in while Mia paid for her portion of the purchases. \n\n\"Well, thank you so much Cecilia, you have made this a very pleasurable experience. I just love your boutique and the wonderful work you are doing for women. You have certainly made us into repeat customers, you can rest assured on that!\"\n\n\"Oh thank you Mia, you and David are always welcome here! It is such a pleasure to help such a lovely couple,\" said Cecilia smiling broadly.\n\nAs Mia and David walked out of the store, Mia leaned over to give David a kiss on the cheek. \"Thank you so much for my outfit, and for bringing me to this store! You never cease to amaze me.\"\n\n\"Well, you are welcome, and I hope I can continue to amaze,\" said David, returning her kiss.\n\n\"So, where do we go to look for furniture?\" Mia asked as David started up the car.\n\n\"You know, I don't really have any suggestions for that, I suppose we should try heading up to the mall.\"\n\nMia took out her smart phone and said, \"Let me see if I can find anything on the internet.\"\n\nAfter a bit she said, \"Well your plan to go to the mall area sounds like the best idea. There are several big name stores as well as quite a few smaller ones, so we should have a good chance of finding some things.\"\n\nJust as she was about to put her phone away, it buzzed. Mia saw she had a text from Jennifer.\n\n\"Mia, please come down to the office immediately, there is something going on and you need to see for yourself, and we really need to talk NOW!\"\n\n\"Uh Oh,\" said Mia, \"looks like our plans, at least mine, have changed. I have to go to the office immediately according to Jennifer. I can't imagine what is going on.\"\n\n\"No problem,\" said David as he started turning the car around so they could head back to her office.\n\n\"Do you mind if I come in with you?\" he asked.\n\n\"I insist on it, please David, I want you with me to help deal with whatever this situation is.\"\n\nThey drove the short distance to her new offices, parked in the front, and got out. Before Mia could even get her keys out, Jennifer came flying out of the door.\n\n\"My God Mia! Something is up down there at headquarters. My friend Jessie called me and said there were some very strange, closed door meetings going on with a few of the management people.\"\n\n\"Woah, there Jennifer, hold on one second please, we will get to the bottom of this right away,\" said Mia as she walked inside to her office, tossing her jacket aside. \n\n\"First I would like to introduce you to David, David, this is my wonderful assistant Jennifer, Jenn, this is my love, David.\"\n\nDavid reached his hand out to the lovely Jennifer, which she took and shook but held it for just a second longer than usual. She had a wonderful, and so beautiful smile, and seemed to calm down a bit from her earlier exhibition of panic.\n\n\"I can see why you were so smitten Mia, he is absolutely gorgeous, and has such a wonderful, calm demeanor, I just love him already!\" said Jennifer with another splendid smile.\n\nDavid too, was taken by Jennifer, her beauty was obvious, but he sensed such a wonderful mixture of respect and love in her.\n\n\"So very nice to finally meet you Jennifer, Mia has told me wonderful things about you,\"\n\n\"Ok, let's try to start from the beginning, Jenn, tell me what you have heard,\" said Mia as she sat down at her desk.\n\n\"Well, Jessie had to go in today at Mr. Franklin's insistence, and she was shocked at what she saw. She said just about the entire management staff was there, in meetings with the doors of the meeting room closed and locked! One would occasionally come out and order Jessie to get some backup paperwork for them, but they didn't say why they needed it. The information ordered was both financial and organizational. Jessie is very upset. She thinks they are trying some sort of coup to try to take over your company! She was in tears when I last talked to her, you know how much she loves you and would do anything for you.\"\n\nMia had found Jessie on a street corner a few years ago, begging for a job. She had been through some very rough times with both her family and her ex-boyfriend, and had ended up homeless, penniless, and without a hint of a job. Mia saw something in this damaged woman and being compassionate for those whose lives had taken a bad turn, took Jessie in, gave her an entry level job in the mail room, and let her get back on her feet. She was a very intelligent girl, and had a wonderful work ethic, and it didn't take long to realize she had so much more potential than being a mail room clerk. While she stayed with Mia, Mia helped her re hone her computer skills, and in no time she was ready to be given a promotion with a raise, to come up as one of Mia's personal assistants.\n\nMia also helped her get her own apartment, and the two of them had many heart to heart talks about their past, and how they had the want to be the best they could be. Mia even felt comfortable enough to share being transgendered. Jessie swore herself to secrecy and told Mia she would protect her secret with her whole being. So it was easy to see why Jessie was so upset with the strange goings on at the office.\n\nMia asked Jennifer to get Jessie back on the phone, while she started up her computer to check her email. She found one that was sent to the entire board from an email address she did not recognize.\n\nIt was short and to the point.\n\n\"I have some information about the owner of your company that could be very damaging to your company's image if it got out to the public. I have contacted your owner in a separate email to see if she is willing to take the steps necessary to prevent this information from being released to all the local news media.\"\n\nMia was not included in the blanket email, but it was forwarded to her with a little private message just to her.\n\n\"Well hello son, I guess you are probably quite surprised to hear from your dear old Dad. Yes, I found out about your name change and your rise to fame and fortune. I think it best for you to listen to my demand for 1 million dollars, to keep this knowledge quiet. Please let me know your decision right away, for I cannot keep the board guessing for too long. They have all responded and demanded to know what I am talking about.\"\n\nMia read both emails out loud so both David and Jennifer could hear. There was a heavy silence in Mia's office for a few seconds, then Mia broke the silence.\n\n\"How about the nerve of that old bastard?\" she said.\n\n\"What is he talking about, Mia?\" asked Jennifer.\n\n\"Well\" sighed Mia looking into David's loving eyes for strength, \"I am transgendered. I was born with a boy's body, but a woman in every other aspect.\"\n\n\"What difference would that make to the company?\" asked Jennifer, genuinely confused.\n\n\"Well, there are probably a lot of our customers that are not quite ready to accept the owner of the software program that they use to run almost every facet of their business being transgendered,\" said Mia.\n\n\"You aren't going to pay the bastard are you?\" asked David.\n\n\"I don't know what I am going to do right now,\" replied Mia. \n\n\"Well, I am pretty sure you wouldn't want to open that door, I don't know the man other than what you told me about him, and now this, and I can say I hate the guy. I wouldn't trust him to keep his mouth closed even if you paid him. And with all the activity down at your main office, who is to say he hasn't told them already?\"\n\n\"I would have heard something,\" said Mia, \"from what Jessie has told us, they seem to just be scurrying right now, trying to figure out what this all means. As for my father, no, I am not going to give him a dime.\"\n\n\"Should we call the police, or FBI or somebody?\" asked Jennifer, wanting to try to help her boss and friend.\n\n\"I don't really want to do that,\" said Mia, \"I am trying to figure out the best way to keep this as low key as possible. I know that sounds hard at this point. But something like this, especially if we bring in the authorities, can get blown way out of proportion in the media.\"\n\nDavid put his arm around Mia, \"in my credit manager role, a few times I have had to use a private detective to run down low lifes, I can give him a call and see if he has any connections in San Francisco, or if he would be willing to go down there himself and find your father.\"\n\n\"That is sweet, David, thank you, but for now, I think I have an idea as to how I want to play this out. I am pretty sure I am going to have to go back down to my main office. The board deserves to hear whatever transpires directly from me. I can just see them running around like frightened mice right now, bumping into each other and trying to look like they know what they are doing. I only trust a couple of them, for most were brought in after the company got so large I had to have help in some of the larger aspects of running an international company. I never really wanted it to get so big, for I feared something like this could crop up eventually. It sucks that once the label of 'transgendered person' gets out, the label takes on its own life, and transcends the person being labeled. My work, my ideas, and now my company will all fall under the label, and not their own merit.\"\n\nDavid and Jenifer listened intently, and admired how Mia was able to keep her calm, even at the prospect of losing everything. \n\n\"Jennifer, I think I want you to try to get Marsha on the phone for me. You have her personal cell number in your file for her. I want her help with my decision. She always seems to have a wonderful grounded opinion on a lot of things, hopefully she will come through for me again.\"\n\nJennifer left Mia's office to go to her desk to try to get Marsha on the phone. Marsha Stowe was Mia's lawyer from almost the very beginning of her company. Over the years she had become a very trusted, close, and dear friend. She did a lot of work in the GLT scene and knew of Mia's complete background. She was almost like a cross between a protective mother and a very best friend all rolled into one rotund, greying, loud and always cheerful package. Mia couldn't wait to talk to her, first she wanted to tell her about David, and then seek her advice about this situation with her father.\n\nAs they waited, David still had his arm around Mia, and she appreciated this very much. The only other person she had felt this close, and let them get this close to her was her mother. She made a mental note to call her mother later too. She had already emailed her with the wonderful news about her new and beautiful man, but she also wanted her mother's take on the current situation.\n\nJennifer turned and said, \"Marsha is on line 1 Mia.\"\n\n\"Hello Marsha, how are you?\"\n\n\"Well, Mia, I don't think the question is how I am, how are you doing? Jennifer gave me a short recap of what you are dealing with. Have you done or said anything to anyone yet?\"\n\n\"No, Marsha, we have just been made aware of it, and have kicked around a few ideas, but we have taken no action yet.\"\n\n\"That's good honey, this could be a very ticklish situation that could turn into a maelstrom if we are not careful. I want to check with my favorite media advisor and sort of run a short description of the situation by her. She handles a couple of production companies, and also advises a few prominent people, and has a real way of handling how information gets \"leaked\" to the media.\"\n\n\"Ok, Marsha that sounds great. I am going to try to get back to San Francisco on Monday, it probably wont be until late afternoon or early evening now. Do you think you could go to my office first thing on Monday morning and see if you can calm the board down a bit?\"\n\n\"No problem hon, I can go there and talk all day and say nothing to those bozos. I know I helped you hire them, and they are all good at what they do, but they don't seem to have a backbone for anything 'real'. I should be able to handle them at least until you get there.\"\n\nMia frowned, \"It looks like I have to go back after all.\"\n\nDavid kissed her knitted brow, \"Don't worry Mia, you are not going alone. I have a lot of vacation time unused, I will call and let them know I will be gone for a while. I would not send you down to the sharks all by yourself. Not to say you couldn't handle it, but I want to be there for you in any way I can.\"\n\nMia started to cry, \"Thank you David, I will really need you there, by my side. I love you!\"\n\n\"I love you Mia.\"\n\nJennifer now had a little tear welling up, \"Do you want me to come down and help too?\"\n\n\"Thanks Jennifer, but I am going to need to have you run this office for me while I am figuring all this mess out down there.\"\n\n\"Well, it looks like we've done as much as we can do here, why don't I take you two lovely ladies out for lunch and perhaps a cocktail or two. I, for one could use a stiff one right about now,\" said David with as much cheer in his voice as he could muster.\n\n\"That sounds lovely to me, Jennifer, can you please come as well, we have a few things we need to talk about,\" said Mia, trying to sound positive.\n\n\"Ok, I don't want to be in the way of you two love birds though,\" said Jennifer smiling.\n\n\"I know a little place right on the water, why don't you follow us there Jennifer?\"\n\n\"Ok, let's blow this joint and get a little loose!\"\n\nThey left the office, Jennifer locking the door behind them after setting the alarm. They got into their cars, David careful to check the rear view mirror to make sure they didn't get away from Jennifer.\n\n\"Jennifer seems like a wonderful girl, and great employee,\" remarked David.\n\n\"Oh yes,\" said Mia, \"she is smart as a whip and very loyal. I just love having her here, she runs a tight ship but has that remarkable quality to make it seem like fun. I also trust her implicitly.\"\n\n\"So, are you formulating a plan to get back to your dad's request?\" asked David.\n\n\"Well, I think I am going to respond to his email tonight, being a little vague, telling him I am out of town and wont be back to San Francisco until Tuesday. Hopefully I can word it so softly that I can string him along thinking I am actually considering paying him.\"\n\nDavid silently nodded his head at her plan, \"I am glad you aren't considering giving that bastard a nickel. God I hope I can get my hands on him.\"\n\n\"Settle down there tiger, we don't want you getting in trouble for pounding on a low life,\" Mia laughed. It felt good to laugh, and once again she was thankful for David's easy going ways, and how he could make even the heaviest situations a little bit lighter. She reached her hand over to David's thigh as he drove. She lightly massaged his thigh muscle, and then let her fingers roam slowly up towards his now tenting crotch. \n\n\"Careful there honey, I am trying to drive you know.\"\n\n\"I'll be careful, but I want to feel you, I want you so badly, I can't wait to get home. This day has really affected me, and I need you inside me, I need you to not be gentle, I need you to take me, and take me hard.\" She lost track of what her hand was doing as she whispered the last sentence and had grabbed David's now rock hard cock and squeezed it with each mention of 'take'.\n\nFor safety, Mia moved her hand back to David's knee, and rested her head on his shoulder. David pulled into the restaurant's parking lot and saw Jennifer right behind them. They parked and met at the front door. As it was only mid-afternoon by that time, the place was quiet and they seated themselves as per the instructions on the little sign at the front desk. They sat at a table that looked over the water and enjoyed the soon to be setting winter sun on the water.\n\nThe waiter arrived and took their drink orders, and David ordered a calamari plate for them to nibble on.\n\nThe drinks came and Mia raised her glass, \"To my two favorite people, their support and love is so very much appreciated!\"\n\nThey all raised the glasses, and let them clink together above the middle of the table, with David adding, \"To love, support, and favorite people!\" and they clinked again. Not to be left out, Jennifer added, \"To getting to know you both better, and for a quick and hopefully painless end to the situation at hand.\"\n\nThat got a rousing \"Here! Here!\" from everyone along with a burst of laughter. They finally got to sip their drinks after the toasts were finished. \n\n\"Jennifer, I wanted also to thank you for taking my transgender revelation so totally in stride. I am sorry you had to hear it in such a way, I would have much preferred to make you aware of it in a quieter, more private conversation. I was quite amazed at how you just took it in stride and kept up with all the heavy business,\" said Mia, with a bit of a tear in her eye.\n\n\"Oh Mia, my grandparents are hippies, my parents sort of hippies, and I grew up in a situation of trying to learn and respect people for who they are, not their labels. You have been an inspiration to me from the moment I met you. Your elegant grace mixed with your super high intelligence and business savvy has helped me in my goal setting. I want to be just like you, you are my hero!\"\n\n\"Well, I don't quite know what to say to that, but I will say thank you. I also want to say you are your own unique and beautiful being, Jennifer, your talent list seems to be endless. I see wonderful things in store for your future, should you decided business is what you wish to do. Remember, you have a very willing mentor and supporter at you beckoning.\n\n\n\"Thank you Mia, I really appreciate that, and I would be honored to consider you my mentor! And I do want you to know that you can count on me to do anything and everything I can to help get us through this little storm.\"\n\n\"Hi, my name is David, and I am pretty sure I am sitting at this same table.\"\n\nBoth Mia and Jennifer laughed, and clinked their glasses together again in David's honor.",
        "\"Sorry David, I just wanted to let Jennifer know how much I/we appreciate the way she is handling things.\"\n\n\"I thought I was a spectator at a mutual admiration society meeting there for a while,\" David chuckled.\n\n\"Your idea for a drink was just perfect David,\" said Jennifer, \"I so enjoy both of your company so much! You are both so comfortable with yourselves and each other, it is so easy to just become a part of each conversation. I can tell you from experience that does not happen very often. So thank you for including me, I am having a wonderful time,\" said Jennifer and backed up her statement with her beautiful, radiant smile.\n\n\"Yes, David, this little break was wonderful, but we have a lot to think about and a lot to do. I think we better cut this short and get home to do some planning. I have to get a flight back to San Francisco, and I want to hear what Marsha might have found out,\" said Mia starting to slip back into her business mode.\n\nDavid raised his hand to the waiter and asked for their check. \"Yes, we are basically going to have to turn the kitchen into a war room.\"\n\nAfter David paid for the drinks and appetizers they walked back out to their cars, Jennifer gave Mia a big hug and told her to let her know if she wanted her help, she would be glad to come over and do anything she could. Mia hugged her back, and thanked her, telling her she may be giving her a call a little later.\n\nJennifer then turned and gave David a big hug, whispering in his ear \"please take good care of her, I know you will, but I am so worried about all this.\"\n\nDavid gave Jennifer a kiss on the cheek and told her, \"I will do everything I can to take care of Mia Jennifer, please know that. And we may be seeing you later so you can help too.\"\n\nDavid opened the passenger door to let Mia in his car, then walked Jennifer over to her car and waited for her to start it up, and waived as she drove away.\n\nAs he opened his door he said to Mia, \"She is a very special girl, you deserve to be surrounded with people like her.\"\n\nMia smiled, and bent over to give David a big kiss on the lips, sliding her tongue into his mouth to dance with his. \"You know, we do have a lot of work to do, but I owe you a big release, and I think it would be good for us both for me to take care of that business first.\" As she spoke, she had been rubbing his \n\ncrotch, feeling David becoming erect inside his jeans. \"Just a little while baby, and mommy will let you out to play!\"\n\n\"MMMMM, hope I don't get a speeding ticket, I think I want to set a record to get home,\" David moaned.\n\nThey did make it back home, no speeding ticket involved. David pushed his remote, Mia smiled to herself as she watched his joy to this simple thing.\n\nDavid parked the car, and went over to open Mia's door, took her arm, and helped her out. As she stood, he bent down to give her another big kiss, Mia kissing right back. She pressed her body into his, and she could feel herself getting hard next to his hardening cock through their clothes.\n\n\"Let's go upstairs and continue this lover,\" cooed Mia.\n\nDavid held her arm and let her through the door, through the great room to the stairs. They climbed the stairs in haste and made it up to the bedroom.\n\nMia wasted no time, and began taking off David's clothes, David tried to undress Mia, but it was a bit difficult with her bent over trying to get his jeans off. He decided to wait when she freed his now rigid cock from his boxers and took him in her hungry mouth. He just stood there enjoying her mouth and tongue caressing his hardness, as her head bobbed up and down taking his shaft all the way in, and then all the way out to just the tip. As she reached the tip, she treated herself to the drops of precum that her erotic work had created. \n\nThen, Mia stepped back and began to take off her clothes in haste, throwing them haphazardly across the bedroom floor. She laughed and said \"I have never done that before, I am always little miss fold things up and put them away.\"\n\nDavid laughed too, \"I think I love the new you!\"\n\nAs Mia finally slipped her panties off her foot, she tossed them at David's face. He caught them and rubbed them to his face, taking deep, exaggerated breaths and saying, \"Oh your fragrance is driving me wild with desire. I want you, I want to take you, I want to make love and just plain fuck you senseless.\"\n\nWith that he grabbed her arm and dragged her over to the bed, and tossed her down on her back. He reached over to the nightstand for the lubricant, and squirted a hefty load onto his hand and her puckered opening. Mia threw her head back and arched her back, \"Yes, yes, please, take me, use me, make love to me and fuck me. I am yours, do what you wish.\"\n\nWith that encouragement David finished lubing up her anal canal, and with very little foreplay, took his rock hard cock, slid it up and down her now erect penis, then slid down to her opening. Mia moaned loudly during all this. He then held the tip right at her opening, circling it with his hard tip. Mia finally screamed, \"don't make me wait any longer, I can't take the teasing, just fuck me, fuck me hard right now!\"\n\nDavid plunged his rigidness deep into Mia on his first push. Mia gasped, but put her hands on his hips and held him to her. He then pulled almost all the way out, but then pushed hard and fast to the hilt, his balls slapping the bottom of her ass cheeks.\n\n\"OH GOD YES!\" screamed Mia. \"More, harder, deeper!\" was all she could force herself to say. David started to find his rough rhythm, pounding in, pulling back, then pounding harder again. As he reached her hilt, he held it there to keep the pressure on. He could feel himself building towards his orgasm, so he reached down with his still lubricated hands and began stroking Mia's erect cock with his hands in time with his thrusts. \n\n\"Tell me when you are close, I want us to cum together,\" David cried out.\n\n\"OH David! I am so close, please do it now!\"\n\nDavid pumped himself as hard as he could, felt his orgasm begin and held himself as deeply inside Mia as he could. He pumped furiously on her cock, and could feel her spasms begin. Just as his first jet of cum filled Mia's ass, she shot her first load straight at David's chest. He could feel her hot juices as he pumped his second load deeply inside Mia. He slowed both his thrusting and his stroking as they both started to come down from the shared orgasmic high. He felt his cock becoming flaccid and sliding out her anal canal, in his river of cum. He looked down at Mia, and she was just opening her eyes, and she saw him looking at her and she smiled.\n\n\"My God, I can't begin to tell you where you took me with that one David.\"\n\n\"I think we were very close to the same place my sweet one,\" purred David. \"That was spectacular!\"\n\n\"I agree totally, come here, lay with me a bit, hold me, hold me tightly to you. I've never said this to anyone before, but I, I, I need you,\" stammered Mia.\n\n\"Thank you Mia, I need you to, as well as want you. That was the most wonderful thing anyone has ever told me, and with such feeling, my heart knows you mean it, I love you Mia.\"\n\n\"I love you David.\"\n\nDavid slid in with Mia, and lifted them both up to the top of the bed so they could use the pillows for their heads. He saw she wanted to be spooned, so he wrapped his arms around her and pulled her as tightly to him as he could. He could feel her luscious ass curves at his crotch, and his cock even had a bit of a stir in it. He decided to go for the full effect, so moved his hands to cup each of her wonderful breasts. He held her like this for what turned out to be a couple hours, for the next thing he knew, he opened his eyes to the early winter evening darkness.\n\nHe rustled a bit, and kissed Mia's neck, then nibbled on her ear lobe. \"I think we need to get up and get started with 'The Plan',\" he whispered into Mia's ear. She too now stirred a bit. A bit groggily she said \"ok, you are right, we better get going.\"\n\nThey got up and David gave Mia his robe, and put on a sweat shirt and sweat pants. They went downstairs and David decided he better make some coffee, so he started that as Mia got her phone and laptop up and running.\n\n\"I see I have a message from Marsha, she wants me to call as soon as possible.\"\n\n\"Do you want to talk about it first, just you and I, to see where we are going to stand together?\"\n\n\"I think I want Marsha's input first, I don't have the slightest idea how to handle something like this, and at least she is in the business of weird shit like this, so I would like to know how she thinks we should handle it,\" said Mia, not quite at ease with what she was saying.\n\n\"Ok, I understand, go ahead and give her a call, do you want a cup of coffee too? I just made some fresh.\"\n\n\"Oh yes please! I have a feeling we are going to be in for a long night,\" Mia mused.\n\nMia savored a couple sips of the fresh coffee and then dialed Marsha. David hovered around to try to hear at least Mia's side of the conversation, but most of her input was \"I see\" and \"uh huh\" and \"mmm.\"\n\nFinally he got to hear Mia actually talk, with a \"Ok, Marsha, thank you for all your work and your ideas. I want to kick this around with David and when we get to San Francisco on Monday, let's meet. Try to keep your late afternoon and evening open, and I am pretty sure we will have to meet at my office. Thanks again Marsha... for everything... yes dear, I love you too. Good-Bye.\"\n\nMia looked up at David with a pained expression. \"Oh David, I have done some difficult things in my life, but this seems to be growing into something I don't know I can handle.\"\n\nDavid put his arm around her, \"we will face it, deal with it, and beat it, and come out with what we want. I know this, for I believe in you, I believe in all your strength and intelligence. I will also be there with you every step of the way.\"\n\nMia began to tell David of all the scenarios Marsha had come up with, saving the one she thought best until last. Once David heard the last one, he jumped up and shouted, \"YES! That sounds like the best plan! Go on offense, like they say in football, the best defense is to stay on offense.\"\n\nThe plan they both agreed upon was for Mia to set up a short interview with one of the cable financial talk shows. Make a short statement of the whole truth of the situation, allow a few questions, and get up and leave, let the chips fall where they may. Marsha said she had worked up a short speech, had run it by some of her experts, and they all agreed it was the best way.\n\nMia opened up Marsha's email to read the speech:\n\nI have just a short statement in regards to the extortion attempt instigated by my estranged father. He has demanded I pay him one million dollars or he would tell the world I am transgendered. His demand/threat was sent to me and a vaguer message to all the board members of my company. This has started some unrest amongst the board members, for they did now know what the threat entailed. I decided I would 'come out' and make the announcement myself. I have a large group of intelligent advisors, and it is their, and my opinion that my being transgendered has nothing to do with my company or how it is run. We all agreed to appeal to our customers' intelligence and common decency, that being transgendered is a private thing, and like any other minority group, one should not be discriminated against for being different. It is not an illness, or a devious danger, it is simply a state of being. I will be meeting with the board members tomorrow morning and we will all discuss the best way for our company to move past this minor bump in our road. \n\nAs for the perpetrator of this attempted crime, we have turned over all the emails as evidence to the authorities, and plan to press charges.\n\nThank you for your time and your understanding.\n\n\"Well, what do you think?\" asked Mia.\n\n\"I like it, it is short, to the point, informative and very positive,\" said David giving her a hug.\n\n\"I just don't know, I wish I felt a bit more confident in this approach. You know I have had to be so secretive and hide who I really am for so long, to make that statement in front of TV cameras is going to be like I that bad dream where you find yourself the only one naked in a crowded place. It is going to be like showing the whole world my penis in a sense,\" Mia murmured. \n\n\"I can only imagine how hard this is going to be for you Mia, spending your whole life hiding who you are from almost everyone. It's not going to be like getting a dark secret off your chest and feeling better for getting it out and moving on. This could just make certain things even harder for you.\" And with that David reached over to hold her shoulders.\n\n\"Tell you what, let's invite Jennifer over and get her opinion,\" proposed David.\n\n\"Ok, I will give her a call, and give her your address if she can make it. It will be good to get a younger person's perspective as well, said Mia.\n\nIt turned out that Jennifer did not live very far from David's house, had nothing planned, and was ecstatic about coming over and helping.\n\nOnce Jennifer arrived, David gave her the nickel tour of the house, saving the upstairs and master bedroom to last. Jennifer was impressed with the house, and agreed that Mia could do wonders with the \"empty\" pallet as it was now. Once upstairs, Jennifer could see the view. Being still winter, the sun was long gone, but all the marina lights, and various lights up and down the channel were shining brightly and were reflecting on the relatively calm water.\n\n\"This is simply incredible!\" Jennifer exclaimed. \"You must just love it here!\"\n\n\"Yes, I was and still am amazed, I always wanted to retire in a place that had a view of the water, now I already have it. Seeing the water does something wonderful to me, it calms me, makes me humble and appreciative.\"\n\n\"Well I would have to agree it is doing its job on you, for those are all attributes I noticed in you right away. I have to confess, I was all ready to give you the 'Don't Fuck with Mia' speech when I heard you were coming. You dispelled all those thoughts immediately, and I knew you were just perfect for Mia. In just this short time I've known you, and you and Mia as a couple, I just love hanging out with you, and basking in the most wonderful vibes and auras,\" Jennifer said.\n\n\"Well, thank you very much Jennifer, that is very kind of you to say, I have to admit I felt a real connection with you the first moment I met you as well, and was so happy Mia had such a wonderful and competent person working for her,\" David replied.\n\n\"Ok you two, either get a room, or let's get to work,\" Mia kidded.\n\nThey all got a good laugh at that, and Mia quickly got her notes together. \n\n\"Now, this is the rough, first draft of my statement on a cable news announcement we are planning on me delivering come Monday morning. Please listen like you don't know me, and try to give your most honest appraisal for this approach.\"\n\nMia cleared her throat and gave the prepared statement again, this time a little more comfortable with the content. When she finished, she put down the paper, and looked at the suddenly quiet Jennifer.\n\nJennifer sat quietly, with a stern 'thinking about it' look on her face. It was evident she was running several ideas through her mind. She finally looked up and said \"I think it is good, I just wonder if it is really necessary to mention the transgender theme at all right now. I know we all think we as a society have progressed and can look for what a person really is, and not what 'group' they 'belong to', to perceive the individual and not the 'group'. In theory I think it is great, but I fear in practice, we, as a society have a lot farther to go than we make out.\"\n\n\"Thanks Jennifer, I appreciate your comments, for I was thinking almost the same things,\" said Mia, now in her stern, business mode. \"The thing is, I don't trust my father at all, and I think taking his trump card away early is my best choice. I am not looking forward to this in the least. And I want to make it perfectly clear there will be no questions to be asked after my statement. I want to give it, and then leave and go straight to the office. I have to calm down the board somehow.\"\n\nJennifer nodded her head, \"yes, I can see that point. Of course you know I will support you whatever you say, and whatever happens. I want you to know you can count on me for anything.\"\n\n\"You may have to deal with the media up here Jennifer, and I wanted to go over this statement and a few other things I want you to cover if they ask for an interview with the local office. I want it made plain that all media requests go through you, and no one else.\"\n\n\"Thank you Mia, I won't let you down,\" said Jennifer, with a quiet tone of respect.\n\n\"I know you won't Jennifer that is why I am insisting you handle all the media. I have already sent out a blanket email to the entire office up here, so you should have no problem following through.\"\n\nWith that, Mia and Jennifer went over the plan the local office was going to take. They covered all the different scenarios they could, and Mia told Jennifer if there was a question she did not know the answer to, she should just say so, and say that all formal statements will be coming from me, at the head office.\n\nAs Mia and Jennifer discussed how Jennifer was going to handle things at the local office while Mia was gone, David remembered all Mia's new clothes were still in his car and told them he was going to bring them in and take them upstairs.\n\nMia thanked him and continued on with her discussion with Jennifer. As David brought the third load in and started up the stairs, Jennifer laughed and asked if Mia had left any clothes in the store. Mia told her of the wonderful little shop David had taken her to, how much she enjoyed it and that the saleswoman had remembered David from his purchase of a dress for his sister a few weeks ago. Jennifer got all excited and said, \"Oh I just love that shop! I go there as much as I can. It was so wonderful they started that type of shop here, we needed one so badly.\"\n\nMia and Jennifer finished their plan on how and what Jennifer would be handling things while Mia was back in San Francisco. \"I don't know about you Jenn, but I would sure love a glass of wine right now. Can I offer you one?\"\n\n\"I would love that, thank you Mia,\" Jenn said. Mia got up and got one of the nice bottles of white wine she had seen in the refrigerator, and remembered where David kept the wine glasses and poured them all a glass. Just as she finished, David returned from putting the last of Mia's new clothes in the walk in closet off the master bedroom. \n\n\"You read my mind, thank you Mia,\" as he reached for the glass Mia had poured him.\n\nThey moved out to the great room and sat and sipped from their wine glasses. There was a bit of a lull in conversation, as all the day's happenings were beginning to catch up to all of them. Jennifer finished her glass and said, \"Well, I am tired, this has been a long and stressful day. I am going to take off. Thank you both for including me in everything. I know you will handle fine, and we'll all come out of this on the bright side.\"\n\n\"Thank you for all you've done today Jennifer, I really appreciated all your input and support. I can really leave without a worry you will run the office with a wonderful business as usual spirit. I will call you when we get into San Francisco, I got us a couple seats on a flight out tomorrow morning so we will be getting there before anyone knows we will. It will be good to have a little time to adjust before the shit hits the fan Monday morning.\"\n\nDavid and Mia walked Jennifer to the door, and with hugs for everyone, she left. David and Mia watched as she got into her car, waived, and drove off. \"A remarkable girl,\" mused David. \"That she is,\" replied Mia.",
        "\"Well, we should be off to bed ourselves, we have a lot to do tomorrow and probably for quite a few days. We are going to need all the rest we can to cope with the circus we about to enter,\" said Mia.\n\nDavid wrapped his arm around Mia's shoulders and walked her to the stairs, \"Yes, we are certainly about to enter The Twilight Zone for me, I have never had to deal with anything of this magnitude before.\"\n\n\"Nor have I,\" Mia whispered."
    ],
    "authorname": "cliptoe",
    "tags": [
        "transgender",
        "love",
        "shopping",
        "extortion",
        "anal",
        "oral"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/mia-mine-ch-06"
}