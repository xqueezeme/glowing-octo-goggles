{
    "title": "The Ensigns of Detection Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 12 - The Crime Scene \n\nThe railroad tracks that come out of the west with the highway begin their curve before reaching the River, and as they straighten out to go south they pass by BigPharmaCorp's plant on the side opposite the River, bracketing the property. The north side of the plant is the 'front', with a parking lot for employees fed by a drive leading to the highway. The plant stretches alongside the River for a distance, and a railroad siding branches to the BigPharmaCorp complex near the plant's back fence.\n\nIt was Monday morning, November 23d, and it was near the front of the plant and the parking lot, between the plant and the tracks, that the body had been found. A steep incline led up to the fence that protected the BigPharmaCorp plant, and the body was at the bottom of this hill. There was a line of myrtle trees along the side of the railroad tracks and a dirt road between the trees and the tracks.\n\n\"That's a steep hill.\" Joanne Cummings said. \"It looks like they built it on purpose. I wonder why...\"\n\n\"When they built the plant,\" I replied, \"they looked at the maps for the 500-year and 1000-year flood plains of the River, then built the ground up higher than that. So if the River floods that much, half of the Town will be underwater, and this plant will be an island in the middle of a lake.\"\n\n\"If it floods that much,\" Joanne said, \"they'll be looking for Noah's Ark to come get them.\" I chuckled.\n\n\"Who called this in?\" I asked out loud.\n\n\"BigPharmaCorp's Security Office.\" said Martin Nash. \"They saw it on their first patrol after shift change. Which means the night shift didn't catch it.\"\n\n\"Good thing I'm not their boss.\" I said. \"Heads would roll.\"\n\nWe were watching Martha the Medical Examiner and the Crime Lab at work. The dead man was tall and large. He'd once been very muscular and powerful, but was now getting a bit of fat here and there. His skin was not dark enough to make him Hispanic or Black, but was more of an Italian 'olive-skin' color. His hair was black and wavy, and oily. He had a thin mustache and beard, somewhat reminiscent of the now-dead 'Skinny Beard'.\n\nHis clothes looked ordinary: brown work pants, work boots, faded orange-ish shirt with thin white stripes in a criss-cross pattern, and a worn brown leather jacket.\n\n\"No ID on him. No cellphone, either.\" said Martin Nash, coming up to me, Joanne and Cindy. \"But we've taken fingerprints on the app and sent them to the FBI, as well as a photo of his face, for what it's worth. The M.E. thinks he's been dead a while, at least 24 hours, maybe 36 or more.\"\n\n\"Think he's an employee here?\" asked Joanne. \"His clothes look like what a factory worker might be wearing. I'll check with the company when I do follow up interviews today.\"\n\n\"Tell you what.\" I said to Joanne. \"I want you to talk with Mrs. Wilkins and keep your focus on the Wilkins case, as well as beginning to look harder into connections with the Grayson case. Martin, this case here will be your priority, and I'll tell Lt. Perlman I've egregiously interfered with her job again.\"\n\n\"That's okay, Commander,\" said a voice behind me, which turned out to be Tanya Perlman herself, \"you can do my job, and I'll go twiddle my thumbs in your office today.\"\n\n\"Believe me, my friend,\" I said, \"there are times I wish I could swap our places like that. You have no idea how fortunate you are to be able to work these cases and not have to worry about the overhead crap.\" Cindy was nodding vigorously in agreement.\n\n\"So how did this man die?\" I asked.\n\n\"Blunt force trauma to the head.\" said Martin Nash. \"Someone hit him very hard on the back of the head, crushed in his skull halfway to his forehead. M.E. Martha thinks it was a baseball bat.\"\n\n\"And not a crowbar?\" mused Tanya. \"No respect for our Commander, there.\"\n\n\"Thank goodness for small favors.\" I replied right back. \n\nMartin said \"Martha said that if it had been a crowbar, it would've split his head in two, taken off the top, such was the force of the blow. But the fat baseball bat just crushed in his skull.\" \n\nI could feel the tension amongst some of my Officers: I did not need to say out loud that we'd seen examples of both crowbar blows to heads and baseball bat blows to heads. I'd done the first to the aforementioned 'Skinny Beard'. While none of them saw that in person, a couple of 'anonymous' photos showed the damage.\n\nAnd no one who saw it could ever forget the Corporal Peter M. Feeley crime scene provided by the Black Widow. I again thanked God and the Universe I'd kept Tanya Perlman from seeing that firsthand.\n\nI heard M.E. Martha call out \"Okay, Commander, you can examine him now!\" I went over to do so, inviting my Detectives and their leaders to do the same.\n\n\"Okay, the Crime Lab said his pockets were empty.\" I said. \"But they lied to me in saying that, because there is lint here in his pants pockets. Hey, J.R.! Come bag this lint! May be nothing, but it may have some chemicals on it.\" Barnes hurried over and took lint samples, then did the same for the rest of his pockets.\n\n\"Belt is fairly new, and not scuffed or worn in specific places.\" I said. \"Pants are old, but there are no specific areas of wear or fading.\" I said. \"His shirt is likewise old, but about as clean as he was going to get it. So I'd suggest these are not clothes he would routinely wear to work, but maybe to go to a bar to pick up a woman on a Saturday night.\"\n\n\"He wore work boots to a bar?\" Cindy asked.\n\n\"Steel-toed boots, too. They'd be good if he got into a fight.\" I said, knowing that brand. \"Good quality leather, don't look all that bad, and maybe the best shoes or boots that he owned.\"\n\n\"We've already taken samples from the bottoms of his boots, sir.\" said J.R. Barnes.\n\n\"Good.\" I said. \"And guys, when I say he's going to a bar to pick up women, I mean women of his general economic class. We're not exactly talking the Cattleman's Club, here.\" There was a murmur of understanding running through the crowd as I said that.\n\n\"J.R.\" I said. \"When you get the clothes from the M.E. at the morgue, check them carefully for chemical stains, dirt or dust stains, and specific places of wear and tear that I might not be seeing here.\"\n\n\"Yes sir.\" said Barnes.\n\n\"Okay, anyone see anything I've missed?\" I asked. I only saw Detectives with dumbfounded looks on their faces, except for Lt. Tanya Perlman.\n\n\"No wedding ring, hasn't had one is quite a while, if ever.\" Tanya said. \"No oil or grease under his fingernails. Has a gold necklace with a rectangular emblem on it; that must be why you think he was going out, Commander. That's his idea of 'dressed up', I suspect.\"\n\n\"You're on the ball, Lieutenant,\" I said, \"and giving away my secrets. Anything else?\"\n\n\"Just that he's a big man.\" said Tanya. \"I'd hate to run into this guy in an alley, at least without my service weapon and a crowbar backup.\"\n\n\"Yep.\" I said. \"And whoever hit him was also a powerful man. What else? Anyone?\"\n\n\"Oh!\" said Joanne Cummings. As we looked at her, she said \"No bruising on his face! He didn't lose a fight; he was ambushed!\" I vigorously nodded and gave Joanne the 'thumbs-up' signal.\n\n\"Blondes with brains!\" exclaimed Cindy, giving Joanne a fist bump. This was an inside joke they'd shared a number of times over the past few months.\n\n\"Martin, anything?\" I asked.\n\n\"He was obviously brought here, sir.\" said Nash. \"Technically we're on BigPharmaCorp's property. They own this field for another kilometer west; the railroad has an easement through it. They're pretty alert at night about prowlers, and their security does patrols along the fence and looks out constantly. So whoever brought him here either knows their routines, or could possibly be an employee who would not be particularly noticed for being out here.\"\n\n\"Good information, and observations, too.\" I said. \"You're not going to give the Chief too much to teach you, if you keep this up.\"\n\n\"Ohhhh, I don't know about that.\" said a gravelly voice. I looked up to see Chief Moynahan behind me. I needed to be more aware of my surroundings, I thought to myself, and not let people sneak up on me.\n\n\"For example...\" said the Chief. \"De-tec-tive Nash, how much blood do you see around this body?\"\n\n\"Top of the back of his shirt is stained pretty badly.\" said Nash. \"Which you'll see if you roll him over. But not his jacket.\"\n\n\"Ah, instructive.\" said the Chief. \"Miss Martha,\" he said, addressing the middle-aged M.E., \"would you say he bled out here, or elsewhhherrrre?\"\n\n\"Oh, certainly somewhere else, Chief.\" Martha said. \"And he was probably somewhere else for a while, then brought here much more recently. No animals have attacked the body yet.\"\n\n\"So, everyone... except the Commander and Lt. Perlman,\" said the Chief, \"how could he be brought here without BigPharmaCorp's excellent Security people noooo-ticing?\"\n\nI looked around and saw the reason, but the Chief had forbidden me from giving the answer. Cindy and Nash seemed to just be waiting to be told, but Joanne was looking around... and figuring it out.\n\n\"I think the answer is coming now, guys.\" I said. A train was coming up out of the west. With a blast of noise, the screech of brakes and steel-on-iron as the train wheels grabbed the curve, the train whizzed by us as it headed south, just 100 feet away from our position.\n\n\"That's it!\" gushed Joanne as the train roared on by. \"Someone in a car or truck could have been behind those trees. When the train came, they quickly brought the body out and dumped it. The sound of the train would mask their sounds, and it's likely the BigPharmaCorp security people are used to trains and didn't pay much attention when it went by.\"\n\n\"So much for the dumb blonde theory, Chief.\" I said. Cindy gave Joanne another fist bump.\n\n\"In this Police Department, anyway.\" said Chief Moynahan, earning a 'look' from Cindy. \"Just kidding, Captain Ross, just kidding. So, everyone, we're looking for the needle in a haystack of a bloody crime scene somewhere else, and a car trunk or truck bed full of blood, which likely has been washed out by now...\"\n\n* * * * * * * * * * * * * * * *\n\n\"By the way, Tanya,\" I said to Lt. Perlman as we walked into Headquarters, \"did you get that warrant served about the research materials?\"\n\n\"Sure did.\" said Tanya. \"I emailed you the results, but the Cliff Notes version is that nothing was found missing. Every item was either present, or had an incoming and outgoing notation on their logs.\"\n\n\"Hmmm.\" I said. \"How good do you think their security and procedures are?\"\n\n\"Very good.\" Tanya said. \"They do a billion dollars or more a year on research, and industrial espionage is a top concern. So their research materials are carefully accounted for, almost like the nuclear material at the power plants.\"\n\n\"So you'd say that this report is accurate and reliable?\" I asked.\n\n\"To the extent of my knowledge and the conversations I had with the security people,\" Tanya said, \"I'd say it's accurate. Of course it could've been tampered with, but I saw no signs of that.\"\n\n\"Neither did I, when I read your email.\" I said. \"So that just leaves one other possibility.\"\n\n\"What's that?\" Tanya asked. \n\n\"That this sample was never entered into the logs in the first place.\" I replied. \"No paper trail, at all.\"\n\nTanya gasped as if she had a sudden thought. \"Sir, I just had a sudden thought: didn't someone say that some of their most secretive research is done in their more secure Pennsylvania lab?\"\n\n\"I think that's the case.\" I said.\n\n\"So maybe this was shipped in from there, but no inventory record made.\" Tanya said.\n\n\"Good thought, Lieutenant.\" I said. \"Keep that up, and the Chief might just replace me with you.\"\n\n\"And send you to the Crime Lab, Mr. Chemistry major.\" Tanya replied with her wicked grin.\n\n\"Don't you threaten me!\" I shot back, causing both of us to break down laughing. Just then, Cindy came down the hall and saw us, wondering what the joke was...\n\n* * * * * * * * * * * * * * * *\n\n\"That Detective Cummings is really impressing me.\" said Chief Moynahan as I sat with him in the Chief's office. He was not going to formally move his things in until December 1st, citing superstition, but the desk was there and he was using it.\n\n\"Me too, sir.\" I said. \"That's one reason I'm glad you're here. She's got a lot of talent, and your experience and teaching her can only make her better.\"\n\n\"She reminds me of Molly Evans when Molly first came to me in Midtown.\" said the Chief. \"Molly was smart, and tough. Joanne is smart, and tougher than everyone would think.\" I agreed.\n\n\"Speaking of Molly,\" said Captain Moynahan, \"she and her sister are not as much alike as I thought they would be. Molly has a wicked sense of humor, but Cindy doesn't have as much of one.\"\n\n\"True.\" I said. \"But Cindy does have a pawky vein of humor that will show itself at unusual times. You'll start seeing it when she gets to know you and trusts you better.\"\n\n\"I'm sure.\" said the Chief. \"Sooooo, Mr. Crowbar, what do you think of these cases? Think this last case is related to the Grayson and Wilkins crimes?\"\n\n\"Too early to tell, sir.\" I said. \"Did you get a copy of the autopsy and Crime Lab reports?\" Moynahan affirmed that he had.\n\n\"I sent those results to the Coroner,\" I said, \"with a note that a full Coroner's Inquest is needed. If I were a betting man, I'd bet Wilkins was murdered.\"\n\n\"I agree.\" said the Chief. \"By the way, Chief Griswold told me to call you 'Crowbar', that you like it but will never admit it.\"\n\n\"Chief Griswold is wise beyond his youth.\" I said. Chief Moynahan chuckled.\n\n\"Well, then... 'Crowbar',\" said the Chief, \"let me tell you that I have been going over all of your cases since you arrived here. And I am absolutely amazed. I can see that you are digging very deeply into tunnels of corruption, and rooting some seriously bad things out of this County. So I know that there may be things in these recent cases of which I am not yet a-warrre. Having said that, it's clear to me that BigPharmaCorp is involved in some way in these recent cases. Too many co-innn-cidences, as you are fond of saying.\"\n\n\"Yes sir.\" I said. \"Way too many. So would you be totally surprised if I said that this last killing might actually be a coincidence?\"\n\n\"Why do you say that?\" said the Chief.\n\n\"I don't, not yet anyway.\" I said. \"But if he's not a BigPharmaCorp employee, I'll want to talk to Nash about it, and make sure he's not... 'distracted' by the other cases and their relation, or lack of it, to this one.\n\nPart 13 - Case Work \n\nAt 10:00am, Paulina Patterson came into my office, her face looking very concerned.\n\n\"Everything okay with the baby?\" I asked.\n\n\"Oh!... just fine, just fine.\" she said, giving a brief smile. But it vanished quickly as she said \"Your Detectives were denied entry to BigPharmaCorp this morning. They stated the warrants no longer apply, because your Detectives have already talked to their people once, meeting the standard. In addition, the Coroner informed them that there will be a formal Coroner's Inquest of Dr. Wilkins's death, and they are essentially claiming their employees are protected from having to talk to us because of that. They also say this new murder case is separate, and therefore requires fresh warrants.\"\n\n\"That sounds bogus.\" I said. \"At least the first part. That last part I can live with.\n\n\"It's BigPharmaCorp.\" said Paulina. \"They are one of true 'Big Boy' companies in this Nation, one of the Oligarchs. They have politicians at every level bought and paid for. Krasney literally got sick, I mean he went to the sink and puked, when you forced him to let us get those warrants the other day. He's scared to death, sweating bullets right now.\"\n\n\"Damn, he really is that spineless, isn't he?\" I mused, more to myself than the lovely black ADA in front of me.\n\n\"In a word, yes.\" Paulina said. \"But it's more than that: he wants to run for Mayor in the next few years. BigPharmaCorp is one of the County's biggest employers and one of the Nation's wealthiest companies. He absolutely has to have their support.\"\n\n\"He'd get a lot more votes by being the D.A. that prosecutes the murderers of Dr. Wilkins and the guy we found this morning.\" I said. \"Has he forbidden you from working with me, or from getting any more warrants?\"\n\n\"No.\" said Paulina. \"He's not going there. He's just not going to raise any stink with BigPharmaCorp over this situation. And technically, the company has complied with almost every one of the subpoenas and requests for data. It's just talking to the people that's a problem.\"\n\n\"Can they really stop us from going in and talking to their people?\" I asked.\n\n\"At this point, they can stop us from going on their property, since they're fighting the warrants.\" Paulina said. \"You could send in the entire TCPD, protected by the SWAT Team, to enforce the warrants... but it's likely they'll intimidate their employees and tell every one of them not to speak to you. Alternatively, you could go get and speak to the employees at their homes or bring them into Headquarters, but they can ask for lawyers, not speak pending the Coroner's Inquest, especially if they're going to be called as witnesses...\"\n\n\"Am I the only one smelling something really bad coming from across the River?\" I asked. Paulina assured me that I was not.\n\nJust then a steaming mad Joanne Cummings came to my office, followed by Theo Washington. I told them that we were going to have to regroup and try again, but first I had to lay some groundwork...\n\n* * * * * * * * * * * * * * * *\n\nAt 1:30pm, Senior Detective Martin Nash came into my office, followed by Lt. Tanya Perlman. \"Sir, I have some information for you.\"\n\n\"Sure, come on in.\" I said.\n\n\"Where's Captain Ross?\" asked Tanya. She'd phoned me to make sure I was free for this meeting, and knew I'd normally call in Cindy.\n\n\"She's with our FBI friends, doing some computer work pertaining to these cases.\" I said. \"So, whaddya got?\"\n\nNash said \"I've got some information on this morning's victim. Fingerprints came back as a 'Michael Campbell Fulton'. Thirty-nine years old. Had a number of brushes with the law while he was in his twenties: multiple arrests for disorderly conduct, disturbing the peace, assault, all stemming from bar fights and similar altercations. He was also accused of rape a couple of times, but the charges didn't stick when the women recanted... and it's believed they recanted under threats of worse violence to their families.\n\n\"The Police in Hillside, in Nextdoor County to our east, thought they had him when the semen collected from a woman that had been raped in front of her husband matched Fulton's DNA.\" continued Nash. \"An APB was put out on him, but he was never found. The Statute of Limitations has run out on that crime, since it was eight years ago. That notwithstanding, Fulton pretty much fell off the grid after that rape case, and has never been apprehended by authorities since.\"\n\nNash then said \"I've already asked the Crime Lab to run the DNA workups from Mrs. Grayson's attackers against Fulton's DNA matrix on file. And while it may be a longshot, I'm having the Police sketch artists put together photos of his eyes as if they were behind a mask, and we'll see if either of the Graysons can identify that much of him.\"",
        "Police sketch artists do a lot more than just draw, these days. They have computers that can do things that would seem to be sheer magic in Sherlock Holmes and Watson's day, I mused to myself. Digital pictures are a thing of beauty to the law enforcement officer... though they are a disaster as Court evidence.\n\n\"Good work, Martin.\" I said. \"So what was this Fulton's occupation, if any?\"\n\n\"Not sure.\" said Martin Nash. \"I'm thinking he was working under a new identity, which is why he's stayed off the grid for nearly a decade. I'm checking for any missing persons calls for someone in the area that didn't show up to work today, and I'll keep working that angle for the next couple of days. I'm also checking for any altercations in any bars that might've been between him and what may turn out to be his killer or killers.\"\n\n\"More than one, you think?\" Tanya asked.\n\n\"I'm not saying that's the case,\" said Nash, \"but Fulton was a large, powerful man with a record of getting into fights. I think just one man taking him down would be quite a feat, and that kind of fight probably would've led to arrests made by Police over the weekend. So I'm thinking that he had to have been totally ambushed, or it took someone the size and strength of Commander Troy here to deliver that kind of blow.\"\n\n\"C'mon, I'm not that big or powerful a guy.\" I replied. \"But I get the point: this man was a bruiser, and wouldn't be easily taken down without a good fight. So, what else are you going to do to get a bead on this man?\"\n\n\"I've already checked with BigPharmaCorp's personnel office, and he was not an employee there. None of the security staff recognized his photo, either.\" said Nash. \"I'll check with the other shifts as they come on, and I'm thinking of making the round of bars to see if anyone recognizes him.\"\n\n\"You can't do that yourself.\" said Tanya. \"That's going to take some manpower.\"\n\n\"Yes, it is.\" I said. \"And since Captain Ross is unavailable, I'm going to personally call all three Precinct Captains and tell them to have any and all Detective wannabees to come in wearing plainclothes, and to report to you, Detective Nash. Send them Fulton's photo and have them canvas all the bars in the areas that working-class people would tend to go, then work down to the strip clubs and the Tenderloin District as the last resort.\"\n\n\"Sir,\" said Tanya, \"do you think this murder is related to the other two crimes involving BigPharmaCorp?\"\n\n\"I don't know. No data yet.\" I said. \"It could be, but I have reservations about it. Above all else, Martin, don't let the other cases cloud your judgment on this one. Treat it as a separate case, whether or not it is one. If there are connections, they'll present themselves to us soon enough.\" Nash nodded and made some notes.\n\n* * * * * * * * * * * * * * * *\n\n\"Animal fat.\" said J.R. Barnes. He was sitting in my office with his preliminary report. Dr. Woodrow was in the Chief's office, making the acquaintance of his new boss, the Chief.\n\n\"Slight spots on the clothes, and all in the lint you had me bag.\" said Barnes, not needing to say that he was impressed that I'd had him take that precaution. \"Some animal blood, also, but not enough to make a good, clear determination of the species.\"\n\n\"Still,\" I said, \"this is fast and amazing work, J.R. Tell everyone in the Crime Lab how impressed I am with them.\"\n\n\"Commendations on Medals Day would go a long way towards conveying that, sir.\" said Barnes. \"Dr. Woodrow and I are sending you some emails.\"\n\n\"I've already got a couple, and yes, send the rest and I'll push them through.\" I said. \"Okay, so Fulton had traces of animal fat on his clothes...\"\n\n\"Mostly in the cloth of his pants pockets, sir.\" said Barnes. \"He must be coming into contact with the animal fat, then putting his hands in his pockets.\"\n\n\"So what does that tell you, 'Detective' Barnes?\" I asked with a smile.\n\n\"Tells me I'm not a Detective, Commander. Damn good CSI, but not in the ballpark of the Iron Crowbar and his team.\"\n\n\"Modesty is a human trait, Mr. Barnes. I will excuse it.\" I said with a grin, getting to use Chief Griswold's line for the first time myself. A 'bucket list' item achieved, I thought to myself. \"You and all your Crime Lab people are better detectives than you let on.\"\n\n\"I appreciate the compliment, sir,\" said Barnes, \"but seriously, Dr. Woodrow asks us to not speculate nor theorize, lest we bias our tests and results. He said something about the Police Commander not being happy about theorizing without facts.\" I could not help it; I began laughing and could not stop for a moment.\n\n\"He's right, he's right.\" I said as I got hold of myself. \"Okay, seriously, what does this suggest to you?\"\n\n\"It suggests he uses a product with animal fat in his work, sir.\" said Barnes. \"Animal fats are used as machinery lubricants, and of course in the food industry.\"\n\n\"Yes.\" I said. \"Tallow is made from animal fat, and used extensively for making things like soap, flux for soldering, biofuels, print etching, and of course food products.\"\n\n\"Yes sir,\" said J.R., \"but what we found wasn't rendered tallow. Just plain old raw animal fat.\"\n\n\"Hmmmm.\" I said, thinking about that. \"Okay, what else?\"\n\n\"The 'bling' he was wearing, the necklace.\" said J.R., \"It's a cheap piece of crap. Necklaces like it are sold mostly in Florida on the beaches as trinkets. Here's the thing, though, sir: a minor gang was using them as a membership emblem. I've sent an email with the details of it, but the wearers were white guys in south Florida that were infiltrating Cuban and Latino gangs. They'd set off gang wars amongst the Hispanic gangs, but then someone ratted them out, and we think it was the FBI that did the ratting.\"\n\n\"The Government does not like competition.\" I said. \"They probably had their own operations, and these necklace-wearers were interfering.\"\n\n\"Could be, sir.\" said J.R. \"And it was an FBI white paper that I read that talked about this. But that's not to say our guy here was one of them; it could be sheer coincidence he was wearing that same type of necklace.\"\n\n\"Okay, good work.\" I said. \"I want you to brief Detective Nash fully when he gets back. I've already left him an email to contact you. You did email him all your findings, didn't you?\" J.R. assured me that he had, and sent a copy to Lt. Perlman as well.\n\n* * * * * * * * * * * * * * * *\n\n6:30pm. Cindy Ross came into Headquarters, and pronounced herself surprised to find me still at work.\n\n\"Chief hasn't gone home yet.\" I said. \"And you know that deal. But you can go home if you like. I've already chased the Detectives out of MCD, those that aren't working with Nash on canvassing the bars, and Vice goes home whenever they damn well please--\" I stopped myself, then said \"That is not a complaint; I know that they do nighttime missions. So, what did you find?\"\n\n\"Sandra Speer and I were catching up on Robin Grayson and his college chemistry work.\" Cindy said. \"You'd love it, it was about---\"\n\nI raised my hand to stop her. \"I read his reports, years ago. Refreshed my memory over the weekend. \" Cindy was either displeased I'd stopped her narrative, or not happy that I was ahead of her on this, but she continued:\n\n\"Well, I remember you interviewing Dr. Wilkins after the Grayson home invasion.\" Cindy said. \"He said that Grayson was not doing work on the refined heroin anymore, but someone may have been. What Sandra and I found out is that there's a patent application on file at the Patent Office, and there are two NDAs on file with the FDA with some of that work being part of the research.\"\n\nOne of the things about Government that frustrates Your Iron Crowbar is that a big drug company can spend billions, literally billions-with-a-'b', of dollars on research, try to keep it secret, try to sneak their patents through the Patent Office before the competition sees the applications... but then when they file an NDA (new drug application) with the FDA, they are obligated to describe the drug and the processes in making it... and just about anyone can obtain that NDA information, including foreign entities like the Red Chinese; it's all just there for the theft of the intellectual property. Sheesh.\n\n\"Hmmm,\" I said, \"I wonder if Dr. Grayson knew this, or if someone was trying to sneak around him. From what I know of BigPharmaCorp, they're pretty good about letting their researchers file for patents personally, then licensing them.\"\n\n\"Maybe that was the source of the rift between Grayson and Dr. Wilkins.\" said Cindy. \"Grayson found out someone else was using his, Grayson's, former research, he complained to Dr. Wilkins, who didn't act fast enough for Grayson's liking...\" She broke off, putting the thoughts together in her platinum blonde head.\n\n\"That's a possible idea.\" I said. \"I do daresay that the left hand did not know what the right hand was doing. You know...\" I stopped. And went into a reverie myself.\n\nSome minutes later, I came out of my thought-trance. Cindy was looking at me. \"You went deeper than me, that's for sure.\" she said.\n\n\"Yeah...\" I said, still halfway out of it. \"I just realized some things. I think you're onto something about this. When we break past BigPharmaCorp's legal barriers, we have some serious questions to be asking, and of the right people.\"\n\n\"Cool beans.\" she said. \"By the way, I peeked at all the emails on this morning's dead guy, Fulton. Seems to be a rough character, by all accounts. Rape, too.\"\n\n\"Exactly.\" I said. \"And that is why you and I will be going with some Detectives to interview the Grayson's tomorrow at their home. The Graysons have been released from the Hospital, but are still recovering. I want you to talk to Mrs. Grayson, and show her the pics the Sketch Artists put together of this guy Fulton in a mask, and then his face from this not-too-recent mugshot. I'll do the same for Dr. Grayson, and also interrogate him about the Wilkins death.\"\n\n\"Wilco.\" Cindy said.\n\n\"So...\" I asked. \"What have you got against Robin Grayson?\"\n\nCindy's eyes widened, then bored into me. \"What makes you think that?\" she asked.\n\n\"Ohhhhh,\" I said, leaning back in my chair, \"I couldn't help noticing that, as you talked about them just now, you give Dr. Wilkins his title of 'Doctor'... but you're calling Dr. Grayson by his last name alone, dropping the title, showing a dropping of respect for him. What gives?\"\n\nCindy nodded as she processed that. \"I wasn't aware I was showing it so blatantly. But you're right. I think something's goofy with him. He was having an affair with Emma Washburn, his wife knows he's had other affairs, and I'm starting to get a vibe about him... the 'smarmy' vibe.\"\n\n\"The infamous 'smarmy' vibe.\" I said with a grin, teasing my partner. She could not prevent a grin. Then I said \"Seriously, I do understand where you're coming from, though I don't feel that way about him yet. If you want to ask Mrs. Grayson more about that, and she's up to talking about it, go for it.\"\n\n\"Okay.\" Cindy said agreeably. \"Anything else? I need to get home and see how Jenna's doing after her first day back at work.\"\n\n\"Yeah, just one thing.\" I said, \"I don't want you to mention this to Martin, nor to Tanya. I want to see if he checks out the victims of Fulton's previous rape crimes, and thinks of doing that on his own in the next 24 hours or so.\"\n\n\"Do I understand that you're not going to be letting any perps get away in waiting like that?\" Cindy asked.\n\n\"I believe that will be the case.\" I said...\n\nPart 14 - Interviews \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely MILF redhead reporterette at 7:00am, Tuesday, November 24th, from in front of the gates of BigPharmaCorp. \"Channel Two News has learned that BigPharmaCorp is refusing to cooperate with the Town & County Police and its investigation of the death of their Senior Vice President and Research Director, Dr. Laramie Wilkins, as well as the attack on their Vice President Dr. Robin Grayson and his wife!\"\n\nBettina went on: \"BigPharmaCorp CEO Dr. Tom Cubbard states that his company has cooperated with all subpoenas for information, but that the TCPD has exceeded those warrants in their attempts to interrogate BigPharmaCorp employees. Incoming Police Chief Sean Moynahan responded vigorously, stating that no company is too big to respect the law and cooperate with authorities, including BigPharmaCorp. Chief Moynahan has called upon District Attorney Gil Krasney to open an investigation of BigPharmaCorp.\"\n\nWow! I thought to myself, elated. Chief Moynahan is not playing; he is not brooking the politicians nor the political ramifications of BigPharmaCorp's power play against us. And astute observers would know that one did not ask the D.A. to open an investigation; by rights, we should be asking the FBI to do that. So I knew that Chief Moynahan was lighting the proverbial fire under Krasney's political ass. This... was going to get fun, I was thinking.\n\nBettina continued, as a photo of Michael Fulton appeared on the screen: \"Channel Two News has also learned that a body found near BigPharmaCorp's property is that of one 'Michael Campbell Fulton'. Fulton has a long rap sheet of crimes, and the Police are asking anyone who may have seen Fulton this past weekend to contact the Police Department.\"\n\n\"In other news,\" said Bettina, who was going strong, having eaten her Wheaties this morning, \"Fireman Roy Easley is making tremendous progress as he heals from the burns he received in rescuing a child from a devastating apartment fire last week. Doctors say he still has a long recovery process from his burns, but he is out of mortal danger. That cannot be said of Deputy Chief Robert Brownlee, who is still in critical condition in the ICU at University Hospital after a massive heart attack.\"\n\nBettina gave way to Chuck Pringle for the Sports report. As we listened, Joanne Cummings asked \"Why isn't Nick Eastwood giving the Sports, especially this week? After what happened to him against State Tech last year, I would think they'd want to feature him.\" There was a general acclaim of agreement in the room.\n\n\"I think it's exactly because of last year that they're keeping Nick away from coverage of this game.\" I said. \"The Media has been asked by the Conference to play down the tensions from Nick's career-ending injury. So Nick gets to cover the Wildcats-Purple Hawks game.\" There was a general acclaim of understanding in the room.\n\nWhat I did not tell them, which Laura had told me, is that Nick Eastwood himself had been asked to speak up to urge calm and good sportsmanship... and he'd refused. Eastwood had said he would not add fuel to the fire, hence his not covering the Bulldogs game for KXTC; however, he had made it clear that nothing was forgiven, much less forgotten, as State Tech had cost the young man a lucrative NFL career. \n\nI could empathize, actually. 'Forgiveness' is overrated, I thought to myself. Vastly overrated.\n\n* * * * * * * * * * * * * * * *\n\n\"This is Priya Ajmani, Five-Alive News in the Morning!\" shouted the gorgeous Indian reporterette at 8:00am. Cindy and I were watching in my office.\n\nPriya reported: \"Local police report no progress in the cases of the assault on BigPharmaCorp's Dr. Robin Grayson and the gang rape of his wife. Police are also looking into the apparent suicide of Research Director Dr. Laramie Wilkins, and consider some aspects of the case to be suspicious enough to warrant further investigation. BigPharmaCorp CEO Dr. Tom Cubbard issued a statement that the company is cooperating with the investigation.\"\n\nPriya continued: \"While Fireman Roy Easley continues to recover from injuries sustained in an arson fire near the Business District, Police have no leads on the arsonist, nor any reasons why the fires were set. And Deputy Chief Robert Brownlee continues to fight for his life after a massive heart attack suffered at Police Headquarters.\"\n\nMore Priya: \"KSTD's formal complaint of Police interference with our First Amendment rights to report the news you have a right to know, has been ignored by the County Inspector General, Horace S. Wellman. KSTD plans to file formal legal action against the Police Department and Commander Donald Troy, for unlawful stops of KSTD news vans and the arrest of one news crew as we attempted to bring coverage of the rescue of A.D.A. Jenna Stiles and her assistant. Ms. Stiles returned to work on Monday, and has not returned KSTD's calls for comment.\"\n\n\"KSTD just does not learn, do they?\" I asked as I assembled paperwork on my desk.\n\n\"Think anything will come of their lawsuit?\" Cindy asked.\n\n\"Absolutely.\" I said. \"It will be dismissed with prejudice within ten seconds of reaching Judge Folsom's desk, and he will be pre-empting any other judges from action upon it. Priya, or more accurately KSTD, has riled up just about every Government official in this County, including those of the Judicial branch.\"\n\n\"How do you know he's going to do that?\" asked Cindy. I had to smile at that one.\n\n\"My dear cousin,\" I said, \"I am finally learning how to play this Game. Let's just say that sources deep within the County government have quietly and confidentially informed me of His Honor's intentions.\"\n\nCindy allowed her eyes to roll. \"Secret sources. Now you have an excuse for not telling me anything.\"\n\n\"Whaddya mean, 'not tell you anything'... I just told you what Judge Folsom is going to do.\" I said. \"And don't tell me you're not working on developing your own secret sources. At least I hope you are... Captain.\" That jolted Cindy wide awake: it made her realize her Police position was as much political as professional, and she had to play the Game, too.\n\nJust then there was a knock on my door, and Detective Nash peeked in. I waved him on in.\n\n\"Sir, ma'am,\" he reported, not sitting down, \"the Duty Desk just told me that a missing persons report was called in. The Publix up near the Mall and River Valley County Club said that one of their employees in their meat department didn't show up for work yesterday. They called it in and our Duty Desk said they'd look into it. But as you know, missing persons cases don't become formal for 24 hours. The Publix called back this morning, so I'm going to go talk to them.\"\n\n\"Sure. Sounds promising.\" I said. \"Did you or your guys get anything last night?\"\n\n\"Maybe, sir.\" said Nash. \"Sergeant Carswell and Patrolman Phil Goodwright said that Fulton looked familiar to the barkeep of the Riverside Tavern. That bar is just north of Ronald Reagan Park, on the River and near the Mall and the subdivisions up there. If Fulton is the missing guy from the Publix, it well might be where he'd go to get a drink before going home.\"\n\n\"Okay, but don't make assumptions.\" I said. \"Go check out the Publix, and we'll go from there. Meanwhile, Captain Ross, you and I will go do our interviews, and we'll take Torres and Parker with us.\"\n\n\"Yes sir.\" said Nash. \"I'll take Goodwright with me, if that's okay with you. He's a rookie, but he's got some promise.\" Cindy and I nodded in agreement.\n\nNash then said \"And after that, I'm going to follow up on Fulton's alleged rape charge in Nextdoor County, and see what I can find about the victims of that crime... what?\" he asked, seeing Cindy and I look at each other, mentally 'high-fiving' each other through our eyes.\n\n\"Nothing.\" I said. \"I'm glad you thought of that, Martin. Do follow up on it, and let us know what you find...\"\n\n* * * * * * * * * * * * * * * *\n\nI drove in my Police SUV, with Cindy riding shotgun, and Detectives Diana Torres and Teddy Parker in the backseat.\n\n\"This is a nice car, Commander.\" said Torres. \"I've got to get me one of these.\"\n\n\"I have to say,\" I replied, \"that this vehicle is one of the two best perks of the job.\"\n\n\"What's the other one, sir?\" asked Parker.",
        "\"An office with a door that closes and locks.\" I replied. \"And if you two keep doing the good job you've been doing, you'll have offices like that and SUVs like this one. I might even give you Captain Ross's SUV; she never uses it.\" A blue crowbar was waved in my general direction.\n\n\"Sir,\" said Parker with a teasing grin, \"who are we going to get to replace Diana in MCD, since she's in Vice now?\"\n\n\"Whaaa?\" Diana gasped, looking over at Parker as if he'd lost his mind. I laughed, and even Cindy got a chuckle out of that.\n\n\"Time will tell.\" I said as I pulled into the Grayson's driveway. \"Time will tell. Okay guys, here we are. Parker, you'll be with me interviewing Dr. Grayson; let me take the lead in asking the questions. Torres, you're with Captain Ross, and do the same in letting her take the lead in talking with Mrs. Grayson.\"\n\nWe were admitted into the house by Mrs. Grayson's mother, a woman about my mother's age with a polite manner but a commanding disposition if she wanted to show it. I instantly felt the vibe in the air, a chill, a formality about the house, and Dr. Grayson's mother-in-law was a part of it. I could see that Cindy had felt it too.\n\n* * * * * * * * * * * * * * * *\n\n\"Hello, Mrs. Grayson,\" said Cindy as she entered Mrs. Grayson's bedroom on the second floor. \"This is Detective Torres. Are you able to answer some questions?\"\n\n\"Sure.\" said Mrs. Grayson. \"If I had known you were coming, I would've insisted upon getting dressed to receive you. My mother means well, but she overdoes the insistence that I rest.\"\n\n\"I understand.\" said Cindy. \"Let me first show you a couple of photos. One is made to look like he's wearing a mask, and then I'll show a full face. Does this look like one of the men that attacked you?\"\n\nMrs. Grayson looked at the photo of the 'masked' man, and shook her head. \"No, not that I can really remember.\"\n\n\"Okay, that's fine.\" said Cindy. \"How about this man? Do you know him at all? Have you ever seen him?\" She showed the full face photo of Michael Fulton.\n\n\"No, I don't recall ever seeing him before.\" said Mrs. Grayson. \"Do you think he was... one of the attackers?\"\n\n\"We don't know.\" Cindy said. \"He was found dead near BigPharmaCorp's property. It's just routine for us to check any possibilities, however small, that they might be related events. I'm sure you've heard about Dr. Wilkins, also?\"\n\n\"Oh, yes.\" said Mrs. Grayson. \"He killed himself? That's just so sad...\"\n\n\"Tell me,\" said Cindy, \"how well did you know Dr. Wilkins and his wife?\"\n\n\"Fairly well.\" said Mrs. Grayson. \"He and my husband are colleagues at BigPharmaCorp, of course. We saw them at all the company events, and things like that.\"\n\n\"Were you close?\" Cindy asked. \"Did you and your husband socialize with the Wilkinses, have dinner together, things like that?\"\n\n\"Oh no, nothing like that.\" said Mrs. Grayson. \"Dr. Wilkins, he was a gentleman, very nice man. But his wife... she was... it's hard to describe... I don't want this to sound snotty, but she just wasn't our type of person. She wasn't a very smart person, she couldn't really keep up with the conversations that our husbands had, or even what most of us other ladies were discussing.\"\n\n\"I see. Did the Wilkinses get along with each other? Did they look like a happy couple?\" Cindy asked.\n\n\"Yes, I think so.\" said Mrs. Grayson. \"They stayed together during company events, as if he felt he needed to stay with her.\"\n\n\"Stay with her?\" Cindy asked. \"Out of a medical need? Just comfortable with each other? Or jealousy?\"\n\n\"Possibly the latter.\" said Mrs. Grayson. \"Again, I don't want to sound bad here, but Mrs. Wilkins had a lot of people fooled. I'm sure her Baptist Church ladies club and Pastor Westboro would be stunned to know some of the truths about her.\"\n\n\"What truths would those be?\" Cindy asked.\n\n\"The kind that I can't prove and could get me in trouble if I said them to a Police Officer as if they were fact.\" said Mrs. Grayson. \"In other words, I don't think it would be appropriate to say. All I will tell you is that old adage of 'follow the money'.\"\n\nCindy decided to change the line of questioning. \"Did you and your husband have other friends from the company?\"\n\n\"A few.\" said Mrs. Grayson. \"Mostly those who also live in this Country Club community, though, the ones I played tennis with. Robin tried to have us socialize with Donovan Donolan and his wife Trish when he was CEO, but they were a strange couple and that didn't really work out. Lucy Cubbard, that's Tom Cubbard's wife, was friends with Trish Donolan, and Robin set it up for me to play tennis with Lucy several times, but she works at BigPharmaCorp herself, so I don't see her a lot.\"\n\n\"Mrs. Grayson,\" said Cindy, her voice changing inflection slightly, \"I'm now going to have to ask you some questions that may be tough, and are very personal in nature.\"\n\n\"About my husband?\" Mrs. Grayson asked.\n\n\"Some are.\" Cindy said. \"First, you've said before that you believe your husband was having an affair or affairs in the past?\"\n\nMrs. Grayson's face darkened. \"I don't just believe it, I know it.\"\n\n\"Do you know with whom he was having these affairs?\" Cindy asked.\n\n\"No.\" said Mrs. Grayson. \"I don't know their names, anyway. There was this woman a few months ago, she gave a cooking class for people at BigPharmaCorp; they sponsor things like that for their employees. Robin likes to cook, so he went to the class, and not long afterwards I was told that Robin and that woman were seen together in Town.\"\n\n\"Who told you that?\" Cindy asked. Mrs. Grayson looked as if she were struggling to get the answer out. \"Take it easy, take your time.\" Cindy said. \"It's okay.\"\n\n\"It... it was Dr. Wilkins that told me.\" Mrs. Grayson said. \"He said Robin was acting like a lost puppy dog, and it was affecting his work. Wilkins was also a very straight-laced guy, really honest. He wouldn't brook any malfeasance from his employees, and I would imagine he didn't appreciate Robin's public infidelity or the plagues it was bringing into their work environment.\"\n\nCindy asked \"Mrs. Grayson, I have to say this: it is very unusual for a man to just tell another man's wife that the husband is having that kind of affair. Usually the snitch would have an ulterior motive for his actions. So I have to ask if you know why Dr. Wilkins would come to you like that? Did you ask him? What brought that out?\"\n\nMrs. Grayson said \"It's not the first time I've suspected something. Lucy Cubbard seemed to be very friendly with Robin, and that bothered me and Dr. Wilkins. We both were worried about Robin's career and Dr. Wilkins's career if something were going on and Tom Cubbard found out.\"\n\n\"But there was also another woman that Robin was talking to at the Labor Day weekend picnic.\" continued Mrs. Grayson. \"I asked Dr. Wilkins who the woman was, and he said he didn't know her; he didn't think she was a company employee. She had brown hair, glasses, not that tall. She was wearing high heels, and... I have to admit... she had great legs.\"\n\n\"Have you seen her anywhere else, at any other time?\" Cindy asked.\n\n\"Just once.\" said Mrs. Grayson. \"At the Fourth of July race. She was wearing a shawl, and she was sitting with your Commander Troy and his baby daughter. And then this old man with white hair came up to them... you know, that older man looks a lot like you, Captain Ross...\"\n\nIt took every bit of Cindy's considerable will power to keep her face from showing anything. She merely said \"I'm going to ask Commander Troy to ask you more about that woman, if that's okay with you.\"\n\n\"Sure.\" said Mrs. Grayson. \"By the way, I asked the Commander to investigate Robin's infidelities. When is he going to tell me the truth, the things that he knows to be true?\"\n\nCindy got up, about to leave. \"Mrs. Grayson, as I told you... men don't tell other men's wives about infidelities... unless they have ulterior motive. Are you sure you don't want to tell me why Dr. Wilkins told you?\"\n\nMrs. Grayson looked into the ice-blue eyes of the Police Captain. \"Like I said, he was of a pious nature.\"\n\nCindy then said \"Mrs. Grayson, have you cheated on your husband at any time in the recent past?\"\n\nMrs. Grayson's face turned cold. \"As this is a formal police inquiry, I refuse to answer that question.\" Cindy did not press it, but motioned to Detective Torres to go.\n\n\"Captain Ross,\" Mrs. Grayson called out. As Cindy turned back, the woman said \"I know that you are a... friend... of Jenna Stiles. Please tell her... I understand what she is going through, and if she needs someone to talk to...\" She did not need to finish the sentence.\n\n\"Thank you. I'll tell her.\" Cindy replied. \"It might be good for both of you if you talk together. And maybe Dr. Fredricson can have you meet and work with both of you.\"\n\n\"Dr. Fredricson...\" mused Mrs. Grayson. \"Oh yes... how in the world did your Police Commander manage to sweep her off her feet?\"\n\nCindy said nothing, but simply smiled as she turned and left the room...\n\n* * * * * * * * * * * * * * * *\n\n\"Hello, Dr. Grayson.\" I said, entering the study of the home. It was not the room where the attack had occurred. I could see that the man was haggard, needed sleep, and probably could've used a drink or two... or three or four...\n\n\"Hello Commander.\" he said, his voice empty.\n\n\"Why don't you come sit on this sofa, and get comfortable.\" I said, drawing him out from behind his desk. This way I could see him better, see his hands, and also take away the natural dominant position of being the one behind the desk.\n\nHe sat on the sofa and I sat on the other side of it as Detective Parker sat in a nearby chair. I introduced Parker, then said to Grayson \"Things not going well?\"\n\n\"No.\" said Dr. Grayson. \"Not at all. I've been kicked out of the bedroom. We've told the kids that their mom got sick and needs to rest. They're young enough they don't really understand. Right now, I'm begging my wife to stay together for the sake of the kids, but I don't know if even that will work...\"\n\n\"I'm sorry to hear that.\" I said. \"I need to ask you some questions, Doctor. First, you worked with Dr. Laramie Wilkins?\"\n\n\"Yes.\" said Grayson. \"He was my boss at BigPharmaCorp, of course.\"\n\n\"How well did you and he get along?\" I asked.\n\n\"We had a good, professional relationship.\" Grayson replied. \"I would not say we were personal friends, though.\"\n\n\"Were there personal problems between you and him?\" I asked.\n\nGrayson contemplated, then said \"For years, we got along just fine. And even recently there was nothing outright, we didn't argue or anything. But he... he knew that I was dating Emma Washburn. He told me I needed to break it off, and I told him that it was my personal business. He didn't mention it again, but after that things were... polite and professional, but nothing more, and things were very cool otherwise.\"\n\n\"Did he take any actions against you at work? Cut off any funding? Try to get you demoted or moved out of your position?\"\n\n\"No.\" said Grayson. \"I was way too valuable to him, and to the company. I have patents that they license, and I'm putting in place some of the processes for their new drugs. If they'd done anything to me then, and I'd resigned and left... well, it wouldn't be the end of the world for them, but it would set them back. Besides, Dr. Cubbard liked the research I was doing, and would not have followed any advice by Dr. Wilkins to can me.\"\n\n\"Let me ask about your research.\" I said. \"Not the details or anything, but in general. I know you had done that refined heroin research in the past. Did you do any of that while at BigPharmaCorp?\"\n\n\"In my first years with the company,\" said Grayson, \"I did some work along those lines. But the actual college research was the property of the School, and the professor that I studied under had patents for some of those processes, so I didn't really do much with it. I began doing research on multi-step chiral center blocks, to convert one drug into another, which was far more absorbing to me.\"\n\n\"Did anyone else work on any of your original research, the refining of drugs, stuff like that?\" I asked.\n\n\"If anyone did, I'm not aware of it.\" said Dr. Grayson. \"Of course my old professor at School might've done more with other students that subsequently came to BigPharmaCorp, but I have no knowledge of that.\"\n\n\"Did you ever do any work for the Government?\" I asked. \"And I have a Top Secret clearance, so don't hold back on that account.\"\n\n\"No, I never did.\" Grayson said. \"I don't think any of that went on or goes on at our plant here in Town. We're not that secure, for one thing. But we have a smaller facility and research lab in Pennsylvania, which is incredibly tight with security. I don't know what goes on there... but I would not be surprised if things are going on there.\"\n\n\"So they might be working with your old research in that lab, and you'd not know about it?\" I asked.\n\n\"Uh... I never thought about that,\" replied Grayson, \"but no, I wouldn't know about it if they were doing that work at that secure facility.\"\n\n\"So were there any other issues that, to your knowledge, were bothering Dr. Wilkins?\" I asked.\n\n\"Not that I know of.\" said Grayson. \"Of course, he and I had stopped speaking except when we needed to for business to get done, so he wouldn't have confided in me. But he did not seem bothered or disturbed about anything, and no one else came to me and said anything was bothering him.\"\n\n\"Okay, Dr. Grayson,\" I said, \"this is the part that gets harder. Besides Emma, did you have sexual affairs with anyone else, especially in the last two years?\"\n\nGrayson winced, exhaled, then said \"Yes. I've had several relationships. Emma was the only one that was serious. Look, let me just tell you everything, get it out.\" I nodded.\n\nGrayson started: \"Excuse my language here, but my wife is a cold, frigid bitch. We only had sex during her fertile periods so that she could get pregnant. I loved her when I married her, but the frustration of our marriage got so bad that I had to either turn to drink, or I had to find 'relief' with... with other women.\"\n\nGrayson continued: \"Most of the relationships were only physical in nature. Buy a woman dinner, take her to bed, go home to the wife and kids. Then came Emma. She was different, she made my blood boil, and I fell head-over-heels madly in love with her. But I felt the obligation to my kids, and Emma had told me that I shouldn't leave my family for her...\"\n\n\"I understand.\" I said. \"So Dr. Wilkins knew of your affair with Emma?\"\n\n\"Yes.\"\n\n\"Did he know of any of the others?\"\n\n\"Not that I know of, or at least he didn't mention that he knew of any others.\"\n\n\"Let me clarify that: he didn't mention anyone else, or ask you to break it off with anyone else? Only Emma...\"\n\n\"That is correct.\"\n\nJust then there was a knock on the door. Cindy looked in, then asked if I could come outside for a moment. I did. In the hallway, Cindy asked me to ask Dr. Grayson something. I would imagine my eyes were very wide with surprise at her words.\n\nI went back in the room, with Cindy following, took out my iPhone and brought up a picture. \"Dr. Grayson, is this one of the women you 'dated'?\"\n\nDr. Grayson looked at the photo and gasped. He looked up at me in total shock, the shock that I knew. \"I... I'm not sure I should answer that at this time.\" he said.\n\n\"Good enough.\" I said. \"Captain Ross, if you have any questions, now is the time to ask them. I'll go upstairs and talk to Mrs. Grayson. I'm sorry, Dr. Grayson, but it looks like my efforts to help you regarding Ms. Washburn have been to no avail. Your wife knows, and the genie cannot be put back in the bottle. If you'll excuse me...\" With that, I left the room.\n\nGoing upstairs, I knocked on the door to Mrs. Grayson's room and was admitted, followed by Detective Torres. I showed Diana the picture, then came up to Mrs. Grayson. \"Hello Mrs. Grayson.\" I said. \"I have one question that I must ask.\" I showed her the picture. \"Is this the woman you told Captain Ross you saw?\"\n\n\"Oh my God, yes it is!\" gasped Mrs. Grayson, looking at me as if I'd performed a magic trick. \"How did you know to have that picture?\"\n\n\"Well, that's a different story.\" I said. \"Allow me to put on these reading glasses...\" I put the glasses on. Mrs. Grayson looked up into my face, and understood.\n\n\"Oh my God, is this for real?\" she asked, stunned.\n\n\"Yes ma'am.\" I said. \"And this goes a long, long way to explaining some aspects of these crimes involving the attack upon you, the death of Dr. Wilkins... and the theft of a drug and the arson of an apartment building. Thank you for your cooperation, ma'am. I hope you and your husband can work things out... for the sake of your children. Have a good day.\" With that, I left a very stunned woman and exited the room.\n\n* * * * * * * * * * * * * * * *\n\n\"I'm Detective Martin Nash, and this is Patrolman Phil Goodwright.\" said Martin Nash. \"We understand you made a missing person report?\"\n\n\"Oh, yes, yes I did.\" said the manager of the Publix. \"One of our employees didn't come to work yesterday. We called you Police then.\"\n\n\"Yes sir,\" said Nash. \"We went by his home address but he wasn't there, and we put out an APB on his car. Unfortunately, we can't do much more for 24 hours, but since you called again, we'll find out what we can and then work with the FBI to see what we can do to locate him.\"\n\n\"Oh, I see.\" said the manager, who was leading them into the employees areas and the offices. \"Well, his name is Mike Campbell. Been with us four years, never missed a day unless he called in, and that was pretty rare. He worked in the meat department; he was our best butcher, really good with the knives, too.\"\n\n\"Can you describe him?\"\n\n\"Yeah, big man, powerfully built, had black hair, trimmed mustache and thin beard, not quite a goatee, though.\"\n\n\"Did he look like this?\" Nash said, bringing out his Police iPhone and showing a picture.\n\n\"Yeah, that's him!\" the manager said. \"So y'all found out more about him than you were letting on.\"\n\n\"Actually sir,\" said Nash, \"we came across his name in connection with another case. Let me ask you a couple of questions, if I may.\"\n\n\"Sure.\" said the manager.\n\n\"Did Mike here have any issues with other employees?\"\n\n\"Naw, he was pretty quiet, kept to himself, and of course nobody wants to mess with a man who uses knives to carve up meat for a living.\" the manager said, chuckling at his own joke. Nash and Goodwright remained serious, and the man's chuckling dropped off. \"No, he had no problems with anyone, that I was aware of, anyway.\"\n\n\"Did he have any money problems you're aware of? Did he ask for loans or advances against his paycheck?\"\n\n\"Naw, never, nothing like that.\" said the manager.\n\n\"Did he drink? Come to work drunk?\"\n\n\"Oh hell no.\" said the manager. \"And if he had, I'd have had to say something, because the way he used knives... he could hurt himself if he wasn't in full control of himself, if you know what I mean.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Hello Mrs. Wilkins, my name is Detective Cummings.\" said the lovely Joanne Cummings.\n\n\"Come on inside, dear.\" said Mrs. Wilkins. \"There is so much food and drink here from my friends of the church, would you care for something?\"\n\n\"Thank you, ma'am, but I'm fine.\" said Joanne. \"Would this be a good time for us to talk. Would you be up to it?\"\n\n\"Yes, I guess so.\" said Mrs. Wilkins. \"I was told there would be some kind of 'inquest' about my husband's death. What does that mean?\"\n\n\"First, let me introduce Officer Morton, who is helping me today.\" Joanne said, introducing Sr. Patrolman Chet Morton. He nodded to Mrs. Wilkins.\n\n\"What the Coroner's Inquest is about,\" said Joanne, \"is that evidence has been found that the Coroner needs to be examined further, and that your husband's passing may not be a suicide... but murder.\"",
        "\"Murder?\" asked Mrs. Wilkins. \"Who... who would want to murder my husband?\"\n\n\"That is what we're trying to find out, ma'am.\" said Joanne. \"Can you tell me if your husband had any arguments with anyone, especially recently?\"\n\n\"No,\" said Mrs. Wilkins, \"I don't think so. Certainly he did not have any arguments with anyone in my presence.\"\n\n\"Ma'am,\" said Joanne, \"was Dr. Robin Grayson and his wife friends of you and your husband?\"\n\n\"Oh, I knew them, of course.\" said Mrs. Wilkins. \"I would not say we were friends socially, though. Mrs. Grayson did not like me, she thought I was beneath her. And my husband did not like her very much because of that.\"\n\n\"I'm so sorry to hear that.\" Joanne said soothingly. \"What about your husband and Dr. Grayson? Were they friends?\"\n\n\"They were, in the sense they were working together in their labs.\" said Mrs. Wilkins. \"They worked very closely together for a long time. Laramie said that Dr. Grayson had a very brilliant mind, and was doing some very... I think he said 'cutting edge' research.\"\n\n\"What about your husband's boss, Dr. Cubbard?\" asked Joanne. \"How did you get along with them?\"\n\n\"We very rarely socialized with them, even at company events.\" said Mrs. Wilkins. \"Dr. Cubbard and his wife were cordial with us, especially me, but it was obvious they considered themselves to be at a different level than us. My husband never really aspired to be a top level executive. He once said he only took the Research Department head job so that he could help run it right rather than let others mess things up. I thought he was a bit too retiring in not applying himself to go higher, but he was doing what he wanted, what he loved to do.\"\n\n\"So let me ask,\" Joanne said, \"what was your home life with Dr. Wilkins like? Did you have friends that you visited?\"\n\n\"Oh, I would have some of my friends in my Sunday School class come over, or we'd go to their houses for a group lunch. We do that a little more than you young folks, do. I've noticed you and that handsome young Seth Warner at church, but you haven't joined any of the groups yet.\"\n\n\"No ma'am, we haven't.\" said Joanne. \"Maybe after we get married. And my job keeps me busy sometimes.\"\n\n\"Ah yes, such a young girl to be a policewoman... and a very good Detective, so I'm told.\" said Mrs. Wilkins.\n\n\"Why, you're very kind, Mrs. Wilkins!\" gushed Joanne. \"Now who told you that?\"\n\n\"Oh, Pastor Westboro mentioned it, and also the Widow Athena Jones at the Community Center.\" said Mrs. Wilkins. \"One look in her eyes and you can tell she's as sharp as a tack. She said you were very smart, and learning from that Commander Crowbar... now that is a strange name, 'Crowbar'...\"\n\n\"That's his nickname, ma'am.\" said Joanne. \"So let me ask this: did your husband mention any other people that worked for him that he thought was brilliant?\"\n\n\"He said the lab manager, a young man named 'Ashok', was very bright, very orderly. He didn't think much of some of the younger hires, though. A couple of them, he thought they didn't even know any chemistry. They didn't last very long.\"\n\n\"Did he mention their names?\" Joanne asked.\n\n\"Hmmm... no, no he didn't.\" said Mrs. Wilkins.\n\n\"So ma'am,\" said Joanne, \"on the night your husband died... did he get out of bed around five o'clock and go down to his study?\"\n\n\"No... no.\" said Mrs. Wilkins. \"He was up the entire night. He worked through the night on many occasions, though less frequently in the last few years than when we were younger...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Well hi, Martin!\" exclaimed the heavily pregnant Lieutenant Molly Ross Evans of the Nextdoor County Police, in her office at the NCPD Headquarters. \"What brings you here?\"\n\n\"Hello, ma'am.\" said Nash. \"This is Officer Goodwright, who's working with me on the case I came to see you about.\" Molly shook hands with Goodwright.\n\n\"So, you guys have been doing great things over there.\" said Molly. \"The Viscottis, then the Beanstalk Gang.\"\n\n\"Lt. Croyle has done very well with those cases.\" said Nash, deadpan flat. Molly could see he wanted to get to business.\n\n\"So, what brought you here?\" she asked.\n\n\"A man was found dead near BigPharmaCorp in our County.\" said Nash, showing Molly the picture of Fulton. \"He had a past record of assaults and some rape accusations. He allegedly raped a woman in this county in front of her husband, but disappeared for nearly a decade until he was found dead. I was hoping to talk with that couple, see if there is anything they can tell me. They supposedly still live here in Hillside. Name of 'Stevens'.\"\n\n\"Let's go ask the Chief.\" said Molly. \"And I'll introduce you.\" With that, they went to the Chief's office, where Molly introduced the old Chief to the Detectives (okay, Goodwright is a wannabee). She asked the Chief about the Stevens family.\n\n\"Oh yeah, I remember them, and that rape case.\" said the Chief. \"Lou, the husband, operated the Hardware Store here in town, and they lived above it, on the second floor. His wife Mabel did the books for him, and for some other businesses here.\n\nThe Chief continued: \"So this Fulton guy came out of the local bar, named the 'Reservoir Watering Hole', and apparently followed them into their apartment. Tied up the husband, raped the wife in front of the husband, went at her twice over a few hours, if I remember right. Their son Chad was 13 years old at the time, but said he was asleep and didn't see or hear anything. More recently, I think he just graduated from the University. Pretty skinny runt, at least he was when he was a kid living here.\"\n\n\"Do they still live at that address?\" asked Nash. \"Could we possibly talk to them?\"\n\n\"Well, they moved to a house out on State Highway 142.\" said the Chief. \"And they still live there. Why don't I go with you to see 'em. My Lieutenant here is with child, and is restricted from gallivanting across the countryside.\"\n\n\"Commander Troy and Captain Ross said you could go into labor at any time, Lieutenant.\" said Nash.\n\n\"I think I'm going to eat a lot of turkey on Thanksgiving Day, and then this little guy is going to pop out.\" said Molly. \"I hope that's the case, anyway.\"\n\nGoing with the Police Chief to the Stevens home, they found no one at home. The hardware store was also closed, with a sign on it saying they'd re-open the next Monday, after Thanksgiving.\n\nDriving back home, Nash said \"I don't think we can wait. Put out an APB from the vehicle computer.\" Goodwright did so.\n\n* * * * * * * * * * * * * * * *\n\nAs we drove back to Headquarters, Detective Diana Torres asked me \"Sir, whose picture was that you showed Mrs. Grayson.\"\n\n\"She is someone very well known to me.\" I replied. \"She is an international smuggler, and a damn good one. She is a master of disguise, and she has been involved in industrial espionage for some considerable time: I strongly suspect she is tied to that sample of refined heroin we found on the James and Susan Douglas raid. She is also very good at seducing men, and getting them to do her bidding.\"\n\n\"But sir, why did Mrs. Grayson react so strongly when you put those reading glasses on?\" Torres asked, not mollified by my answer. I smiled, and noticed Cindy barely hiding a grin, as well.\n\n\"Because, Ms. Torres,\" I said, \"Mrs. Grayson recognized the resemblance when I put the glasses on. You see, the woman in that picture... is my sister Elizabeth...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-ensigns-of-detection-ch-03"
}