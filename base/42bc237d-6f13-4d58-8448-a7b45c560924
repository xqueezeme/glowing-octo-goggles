{
    "title": "Our Neighbor's a Porn Star!",
    "pages": [
        "<p align=\"center\">== || &lt; &gt; || ==</p>\n\n\"Ohhhh,\" Heather Fawxx moaned, as the well-hung stud's cock pistoned in and out of her pussy. \"Ohhh, God, yessss!! Fuck me, Danny! Fuck me hard!!\"\n\n\"You like that, don't you, Miss Fawxx?\" the young man smirked, continuing his assault on her cleft. \"Is this how you want me to serve all of my detentions from now on?\"\n\n\"Just shut up and keep fucking me. Oooohhh, your prick is so big and hard. I love it!\"\n\n\"Danny?\" the surprised voice came from one side. \"What are you doing?\"\n\n\"What does it look like, Tina? I finally got this uptight teacher of ours out of her pants. Look at those tits. Weren't you telling me last night how you'd like to suck on them? Well, here's your chance.\"\n\nThe vapidly pretty young blonde giggled and slipped out of her school uniform, revealing a gravity-defying set of breasts. \"I think I'd rather sit on her face and have her eat me. My pussy's been dripping all day, and I'm so horny I can't stand it.\"\n\n\"Maybe later,\" Heather said, sitting up and taking the pins out of her blond hair. Letting it fall in a cascade to her waist. \"But right now I have another item on my menu.\"\n\nWith hard-won skill, she deep-throated the rock-hard cock waving in front of her, then rapidly bobbed up and down. The red shaft gleamed wetly when it emerged from her mouth. From behind her, she could feel a hot tongue probing at her womanly folds, and spread her legs wider.\n\nShe closed her eyes as the young man began to fuck her mouth. To her happy surprise, he kept his strokes short and quick, and the hands in her hair didn't pull, but only guided her.\n\n\"Oh, Miss Fawxx! I'm gonna cum!\"\n\n\"Do it,\" she demanded, letting his rod slip out of her mouth. She spit on the bulbous head and began to rapidly jack him. \"I want to feel your spunk shoot all over my tits. Do it, Danny. Do it now!\"\n\nThe young man stiffened, his eyes glazing. His hips jerked rapidly, thrusting his cock into her stroking hands. As he came, she aimed his crown at her cleavage, watching as several ropy bursts of his semen splattered on her chest. The white liquid trickled between her breasts and down towards her belly.\n\n\"Ohhh,\" the young girl said, wriggling close. \"That was a big one.\" She pushed Heather down on the desk. Pulling her hair back, she began to lick her stomach clean, not pausing until every drop of her boyfriend's cum was gone.\n\n\"Cut!\"\n\n'Heather Fawxx,' who until eight years ago had been known as Heather McCormick, slid off the desk and shrugged into a robe, knotting the belt firmly around her waist. \"Well,\" she said brightly, \"that's the last cock I ever eat on camera.\"\n\n\"Good job, everyone,\" Jacob Weintraub, the director, said loudly. He glanced at his watch. \"We're all done here for today. Go home. Have a great weekend. Be here on time on Monday for Tina's gang-bang scene, or I'll gut you with a spoon.\"\n\n\"Wait,\" pouted the pretty blond nymphet. \"What about the scene where me and Heather sixty-nine?\"\n\n\"We shot that last week, Tina\" Jake said, with a tone of long-suffering patience. While Tina had an incredible body and was amazingly sweet-tempered, no one would accuse her of being a genius, evil or otherwise.\n\n\"Oh, that's right,\" she laughed. \"Well, you can't blame me for wanting to get another crack at her.\"\n\n\"Why a spoon, Jake?\" Heather asked the Englishman with a smile, as the rest of the cast and crew of After School Special 9 drifted towards the door of the cheap soundstage. From the sounds, several of them were already making plans for the weekend. She smiled over her shoulder as Tina gave her butt a farewell squeeze before she wandered off.\n\n\"Because it's dull, y' twit. It'll 'urt more,\" he declared in his broadest Cockney accent, with a lopsided grin.\n\nShe smiled and patted his cheek. \"I'll miss you most of all, Scarecrow.\"\n\nThe tall, thin man, his head capped by a rat's nest of rapidly thinning blond hair, shook his head. \"I don't get it, Heather. Why are you retiring? You're at the top of the heap. I mean, have you seen the download numbers for Jill and the Beanstalk? They're through the roof. We're raking in hundreds of dollars a day.\"\n\n\"Of course I have.\" She rolled her eyes at the cheesy title. 'Heather Fawxx' had climbed up the titular beanstalk only to be ravaged by several horny giants. The only thing giant about them had been their cocks, which had left her nether regions sore and aching for days afterward. \"I bet I keep a closer eye on my numbers than you do.\n\n\"I've done the math, Jake. With what I've put aside and invested, and what I can expect to get from royalties in the future, I can live very happily for the rest of my life. Especially when you count appearances at trade shows and signed memorabilia. If the blue chips and treasury bonds don't do a nosedive, I'll be set.\"\n\n\"Royalties,\" Jake muttered. The word sounded like a curse. \"I should never have agreed to that. Worst mistake I ever made in my life, sending you to night school and teaching you how to think for yourself. Stay,\" he begged. \"Just for ten or twelve more films. Hell, in another two years, you'd be running this studio, not me.\"\n\nShe kissed his cheek, the gesture unmistakably fond. \"Maybe. But I got some good advice when I started in this business. Do you remember what you told me, Jake? 'Once you get ahead, Heather, get out.'\n\n\"You only have yourself to blame. I'm ahead. So I'm getting out.\"\n\nThe older man sighed. \"I remember. But I can't help wanting to keep you around, kid. You're one of the good ones. And I don't just mean on camera, though you'd be a legend if you decided to stick with it.\"\n\nShe shrugged, not wanting to have the argument all over again. When she told Jake about her decision to retire, he had been flabbergasted. Then he had spent the next two months trying to convince her to stay in the business. He had been, she thought wryly, one step away from locking her in the basement and only bringing her out when he needed to put her in front of a camera.\n\n\"So when are you leaving?\" he asked, apparently deciding not to beat a dead horse. She breathed a sigh of relief. She loved Jake like a father, but her mind was made up.\n\n\"Tomorrow morning,\" she smiled. \"Me and the U-Haul are heading east. No more LA, no more smog, no more traffic jams, no more blowing guys on camera for cash.\"\n\n\"Jeez, Heather,\" he said in a pained voice. \"You make it all seem so...so tawdry. You know we're just obeying the laws of supply and demand, right? If we didn't do it, someone else would.\"\n\nShe grinned at him. \"And I won't say that I wasn't well-compensated for providing the supply. But someone else is going to have to do that from now on.\" She pulled him into a hug, surprised to feel the sting of tears in the back of her eyes. \"You've got my e-mail address and cell number. You can call anytime, as long as it doesn't involve a movie camera.\"\n\n\"What about still photography?\" he asked hopefully. He mimed clicking a camera. \"There are some websites that would pay a bundle for some exclusive photos of the one and only Heather Fawxx.\"\n\n\"You're impossible.\"\n\n\"Nope. Only very improbable. I'll see you around, kid.\" Shaking his head, he walked out the door.\n\nHeather took a deep breath and grimaced at the stale scent. She looked around at the stage, the cameras, the cheap props, the scattered costumes.\n\nLet's get the fuck out of here, Heather Anne.\n\nShe kicked off her stilettos, walked out the door, and left her old life behind.\n\n*****\n\nThis may have been a mistake, Heather thought, huddling deeper into her winter parka.\n\nShe stood outside her new home, shivering violently, as she watched the movers carefully unload the truck and carry her newly-purchased furniture and the belongings she had hauled from Los Angeles into the house. A raw northwest wind born on the Canadian prairies swept down out of the gray December sky, numbing her cheeks.\n\nSouth Dakota. I must have been out of my mind.\n\nWell, you wanted someplace quiet. Someplace where you could blend in. Someplace where the cost of living wasn't sky-high. You didn't want to fry in the summer, so you crossed off the southwest, and you didn't want to live in the bible belt, for obvious reasons. And Florida was right the hell out.\n\nAnd besides, didn't you tell yourself that a girl who was raised in New Hampshire could handle a little cold?\n\nShe snorted, a puff of cloudy breath hanging in the air for a moment before it was swept away. Beside her, the representative from the real estate agency shoved his hands deeper into the pockets of his coat. Heather had spoken with him dozens of times over the phone as she went through the interminable procedure of purchasing the house. In her car were the forms she had signed earlier in the morning, scrawling her signature on line after line until her hand ached. It had taken a half-dozen missteps before she had been able to convince her treacherous fingers that her name wasn't 'Heather Fawxx' anymore, and that she was actually purchasing a home, not signing endless glossy photos of herself at some tacky adult convention in Las Vegas.\n\n\"It's a nice place,\" he said at last, seemingly out of a need to fill up the silence. \"Split-level, with plenty of room upstairs and down. And you have a big backyard for landscaping or gardening, if you're into that. A lot of people around here are. And the schools are good.\"\n\n\"What about the neighborhood?\" she asked, more out of politeness than any real need to know. She figured she'd get to know the area well enough in the next few years.\n\nIf I don't die of hypothermia.\n\n\"It's nice enough. Well, your neighbor on the south might be a little touchy at first. She's in the housing biz as well, and she wasn't happy when I got the listing.\" Chad smirked unpleasantly. \"She thought that since she'd known the Swensons for years the old lady would choose her to sell the place when her husband died and she moved in with her daughter.\n\n\"But she didn't move fast enough, and I'm the one who's going to be cashing a commission check on Monday.\"\n\n\"How pleasant.\" She pasted on her professional smile, the one she reserved for fans who stayed just a little too long at her booth at the trade shows. The ones who stared at her cleavage, as if she was going to decide that they were the answer to her prayers and give them a quickie behind the inflatable doll exhibit. I guess it's a good thing to know that South Dakota has assholes, too.\n\nThe last box was carried inside the house, and one of the workmen slid the door of the truck down with a bang. \"I guess that's it,\" Chad said. He nodded at the front door, still propped open. \"Want to take a look?\"\n\nShe kept the smile frozen on her cheeks, wanting only for him to go away. After nearly ten years of being propositioned in every possible way, she could see the signs of a man who was angling for a date. \"We've already done the walk-through. I think I'm going to get a start on unpacking. Thanks for your help, though.\" She offered him her hand, encased in a fashionable leather glove she had bought before she left California. \"If I have any questions, I'll be sure to call. I won't keep you any longer.\"\n\n\"Well, all right then,\" he said, temporarily nonplussed. \"I'm always available, Miss McCormick.\"\n\n\"I'm sure you are.\" Pig.\n\nAs his Lincoln pulled away from the curb, her smile became more genuine. She walked over to where the movers were slowly drifting out of the house. \"Mr. Sanchez?\"\n\n\"Yes?\"\n\nShe reached into her purse and pulled out an envelope. \"I'd like you to share this with your men,\" she said, handing it to the foreman. \"That was a bitch of a job in nasty weather, and I appreciate it.\"\n\nThe dark-skinned, gray-haired man looked into the envelope, and she smiled as his eyes widened. \"Senora, I can't take this. It is too much.\"\n\n\"Why don't you let me be the judge of that? My father spent his entire life doing manual labor,\" she lied. \"I know how tough it is. Take this and buy something extra for your wife and kids for Christmas.\"\n\n\"Gracias. I will. John! Achmed! Get over here! I have something for you two to put in your stockings!\n\n\"And if you ever need work done around the house, senora, let me know. I know all the best plumbers and carpenters and roofers in town. And I'll be sure to tell them you're a classy lady, so no one will try to cheat you.\"\n\n\"Thanks.\" She smiled again, then shivered dramatically as a gust of wind bent the leafless trees in the front yard. \"You have a nice weekend and a wonderful holiday.\"\n\n\"Thank you, senora.\"\n\nShe went into the house, closing the heavy inside door behind her. As the loud noise of the truck faded away into the distance, she unzipped her coat, savoring the unusual silence. Except for the sound of the furnace, running at full blast to counteract the wintry weather, the only sound was the wind keening around the eaves.\n\nShe looked around. Chad James might be a horse's ass, but the house was exactly as he had described. It sat on a piece of sloping ground, the large backyard running down to a small creek, now frozen solid, at the rear of the property. The lower level of the house was actually partially underground, the earth serving as insulation to keep the heating bills down in the winter, and ironically, to keep the air-conditioning bills down in the summer. From the entranceway, a short flight of steps could either take her upstairs to the kitchen, living room, dining room, and the master bedroom and bathroom, or downstairs to a combination den/library, which also had a small half-bath and two guest bedrooms.\n\nShe sighed in relief, then smiled. Mine. All mine. No screaming neighbors in the apartment next door. No constant sound of traffic. No worrying about whether some creep is stalking you. No getting up at 5 AM to have some guy point a camera at your crotch while you pretend to like it.\n\nShe grinned, pulling off her coat and hanging it on a peg by the door. She kicked off her shoes, rolled up the sleeves of her sweatshirt, and climbed the stairs to the main floor. A pile of cardboard boxes met her gaze. She pulled a utility knife out of her pocket, slit the duct tape holding the first box closed, and began to unpack.\n\nMine.\n\n*****\n\nBarb Shroyer frowned as she pulled into her driveway. The lights in the old Swenson place were on, throwing golden patches of light onto the frost-seared grass of the front yard.\n\nDamn that asshole to hell. I know real-estate is cutthroat, but you'd think he'd have some sense of shame.\n\nHim? Hah.\n\nWith an effort, she threw off the spate of bad temper. Despite Chad James' underhanded methods, it was Barbara Shroyer and North Star Realty who were leading the housing market in Rapid City. Not the gold-plated pricks at Platinum Plots Real Estate.\n\nHer smile faded as she entered the house. As usual, the lights were off, and the early winter darkness put the rooms in shadow. Muttering to herself, she flipped on the switches, bringing up the lights in the family room and hallway.\n\nWalking down the hall, she paused for a moment to bang on the door-jamb of her son's bedroom. Even through the closed door, she could hear the music blaring from his headphones.\n\n\"Nathaniel? I'm home.\" A longish pause. \"Hello? Nate? Can you hear me?\"\n\nThere was no answer, and she opened the door warily. Her son sat in front of his computer, some sort of video game playing on the screen. Over his shoulder she could see pixelated monsters being blown into bloody rubble.\n\nShe hesitated before she entered. Over the past couple of years, Nate had become touchy about her entering his room without permission. She understood his feelings. With the two of them living by themselves following her divorce, their need for privacy had increased. Because they were forced to do more things together, the time they could spend alone had become more valuable, not less.\n\nAnd she could understand how she might feel if Nate came barging into her room during an awkward moment. She wasn't too old to remember what it had been like to be eighteen.\n\nSighing, she pulled one of her gloves out of her coat pocket and balled it up, then threw it at her son's head. As it bounced off, he flinched violently in surprise, then twisted in his chair. With a quick flick of his fingers, he paused the game, then took off his headphones, rubbing his temple in mock-pain\n\n\"Nice, Mom. Real nice.\"\n\n\"Well, if you listened to that music of yours at a volume lower than 'jet engine,' maybe you'd hear me when I knocked on the door,\" she smiled.\n\n\"Says the woman who listens to ABBA.\"\n\n\"Careful, mister,\" she said, shaking a finger at him. \"You start making fun of Sweden's finest disco group, and we might have to throw down.\" She balled up her fists and waved them threateningly.\n\n\"Right.\" He stood, his tall, lanky form unfolding from his computer chair, and hugged her. \"What's up?\"\n\n\"I just got home. What do you want for supper?\"\n\nHe shrugged carelessly. \"Whatever you feel like making.\"\n\n\"Okay. I'm going to change. I think we'll have leftovers from Thanksgiving.\"\n\n\"Sweet!\"\n\n*****\n\n\"I thought we were having Thanksgiving leftovers,\" her son commented an hour later. He looked at the soup quizzically.\n\n\"We are.\" Barb took a sip of potato soup. \"I chopped up some of the leftover turkey and put it in. I never thought I'd like this dehydrated stuff, but it does the job when you're in a hurry.\"\n\n\"Oh, God. You wasted leftover turkey in soup?\"\n\n\"Don't worry,\" she replied tartly. \"There's probably still ten or twelve pounds of it left. What in the world possessed you to get such a huge bird?\"\n\nHer son smiled crookedly. \"Well, I figured there would be plenty left for late-night turkey sandwiches. And there would be,\" he said darkly, \"if someone didn't insist of putting it in soup.\"\n\n\"Boo hoo.\" She broke off a piece of garlic bread. \"Did you see that we have a new neighbor?\"\n\nNate shrugged. \"Yeah. The car was in the driveway when I got home from hockey practice. I haven't seen anyone, though.\"\n\n\"Hmm. And was there any interesting mail?\"\n\nNate grinned, pulling two envelopes out of his back pocket. \"Two more acceptances. From South Dakota State and North Dakota University.\"\n\nBarb smiled, catching the gleam of pride in his eyes. \"No word yet from the University of Wyoming?\"\n\nHe leaned back, snorting disgustedly. \"Not yet. But I'm not worried. The message boards tell me that no one has gotten their letters yet.\"\n\n\"Well, at least you have a couple of safety schools to fall back on. South Dakota State isn't too bad, you know. Your father went there.\"\n\n\"Which is one more reason for me not to go.\" Her son's usually mild blue eyes were stormy.\n\n\"Hmmm.\" She kept her opinion about Ray to herself. There was no need to further estrange father and son. Not when her ex was doing such a good job of it on his own. \"Are you sure about the University of Wyoming, though, honey? I mean, it's not exactly convenient. It must be close to three hundred miles. Can you imagine driving home for winter break?\"\n\n\"And Brookings is nearly four hundred,\" he countered, naming the town where SDSU was located. His spoon scraped the bottom of the bowl and he ladled more soup into it. \"It's nearly in Iowa, for crying out loud. And can you imagine driving six hours on Interstate 90 in December?\"\n\nBarb gave a theatrical shudder. Even she, born and bred in the state, wasn't going to try to defend the mind-numbing tedium of driving through it.",
        "\"Besides, Wyoming has a really good College of Business. Maybe by the time I graduate, you'll be ready to hand over the keys to the family business.\"\n\n\"Really? You do realize that I'm only forty-one, don't you, Nathaniel? I'm not quite decrepit just yet. And more than one man has expressed an interest in your old mom's body since your dad skipped town.\"\n\nHe grinned unrepentantly, ignoring the reference to his father. \"Mom, you're hotter than Sofia Vergara walking naked through a five-alarm fire. But you're going to have to retire sooner or later. Once I get my degree from the U of W, it might make sense to hire me.\" His eyes softened. \"Then you can slow down a bit, and enjoy yourself. You deserve it, after all you've done over the past few years.\"\n\nBarbara blinked, her eyes misting with sudden tears. It was unusual for Nate to be speak so openly of what they had gone through following her divorce from Ray. For the most part, he treated her with the sort of teasing affection which reminded her of her relationship with her older brother, on those rare occasions when she and Jess were able to get together. In return, sensing his discomfort with overt displays of love, she treated him like she would a particularly dim-witted puppy, which rarely failed to make him smile.\n\nIt was all Ray's fault, damn him to hell. Barb wouldn't pretend that they had a perfect life together, but it had been good enough. They both had good jobs; her with North Star Realty, Ray with a local bank as a loan officer. The house was all that they would need and a little more. Nate was a good son and showed every indication of growing up to be a successful young man, though she was quietly disappointed Ray and herself hadn't had more children. Even their sex life, while somewhat vanilla, hadn't gone through that mid-life cooling that some of her married fiends complained about.\n\nShe grimaced. In fact, sex was what had caused the divorce. Barb had suspected from a young age that her desires weren't quite in tune with those of most of her classmates. As she grew older, those desires had become more pronounced.\n\nShe hadn't cheated on Ray. She had never even considered it. When she took her wedding vows, she meant to keep them. But when she confessed her curiosity to him one night while Nate was away at a middle-school hockey tournament, the result had been a blow-up of epic proportions. Her husband's savagely conservative upbringing couldn't accept the fact that his wife might have needs he couldn't satisfy. After a long, bitter argument, he had packed a suitcase and left the house, never to return. A few weeks later he had moved out of the state entirely, eventually settling in Nebraska. He had never missed a child-support check, but he had also made it completely clear that he wanted nothing more to do with either of them.\n\nHurt, angry, and confused, she had hidden nothing from Nate when he returned home. He had been fourteen years old, and she had thought he was old enough to understand. Luckily, he was. His anger had been reserved solely for his father. Even as an eighth-grader he had a sense of justice that hadn't been fooled by Ray's feeble attempts to explain away his actions. Together the two of them had forged a new life together.\n\nBarbara blinked as she came back to herself. Jeez, Shroyer. Melodramatic much? \"Well, maybe,\" she said, answering Nate. \"But that's in the future. Right now we have to concentrate on the present.\"\n\nShe stood up. \"Which reminds me. Even though that slimeball James stole that listing from me, it's not the fault of our new neighbors. We should welcome them properly to the neighborhood. I'm going to make up a tray of leftovers, and you can take it over to them. Nothing like a little South Dakota friendliness to make a family feel at home.\"\n\n*****\n\nA short while later, Nate stood at the front door of the house next door, pressing the doorbell. The wind was brutal tonight, numbing ears and fingers in an eyeblink. Before dawn, he knew, the temperature would be well below zero.\n\nJust as he was about to ring the doorbell again, the heavy inner door opened, and he could dimly see the figure of a woman through the fogged glass of the outer door. It cracked open, and a blond head peered out. \"Yes? Can I help you?\"\n\nHe smiled, though his cheeks felt stiff. \"Hi. I'm Nate Shroyer. I live next door.\" With his hands full, he jerked his head at his house. \"My mom wanted to welcome you to the neighborhood, so she sent me over with some food.\"\n\n\"Oh.\" She seemed to consider him for a moment, then opened the door wide, backing away so he could slip inside. \"That's very thoughtful. Come on in before you freeze to death out there.\"\n\n\"Thanks.\" He wiped his feet on the rag rug in front of the door, not wanting to track dirt over the hardwood floor, then followed her up the short flight of steps to the main floor.\n\n\"I apologize for the mess,\" she said as she walked towards the kitchen. Nate couldn't help but admire the sexy curves of her rear through her tight jeans. \"I've been unpacking all day, but I think the boxes are multiplying while I'm not looking.\"\n\nShe turned around, flipping on the kitchen light, and Nate got his first good look at her.\n\nShe was tall for a woman, almost statuesque, perhaps close to five-ten, although still a few inches below his own six-foot-one. He complexion was peaches and cream, her smooth pale skin having a rosy undertone in her cheeks that gave her a healthy glow. Her hair was a dark gold, falling straight down past her shoulders in a rich, shining wave. Automatically, he scanned her body. Her legs were long and toned beneath the faded jeans, and her chest, though hidden by a rumpled sweatshirt, showed the curves of high, proud breasts. They jutted forth, tenting the cloth enticingly. He jerked his gaze back up to her face. Her eyes were a blue so dark as to seem almost violet, and her lips seemed to be quirked in hidden amusement, laughing at a joke only she knew about.\n\nOh. My. God.\n\n\"Here,\" he said, handing over the tray. \"It's leftovers from Thanksgiving. Fried turkey and sweet potatoes and some other things.\"\n\n\"Fried turkey?\" Her voice was as lovely as the rest of her, deep and sensual, hinting at forbidden pleasures.\n\nHe nodded, cursing his fair skin, which made any blush instantly obvious. \"I made it myself this year. It's really good.\"\n\nShe smiled at him, and he tried to keep from becoming a tongue-tied idiot. He had never met a more gorgeous woman in his life. \"So is it just you here?\"\n\nShe nodded. \"Yes. I just moved to the area. My name's Heather. Heather-\"\n\n\"Fawxx,\" he interrupted.\n\nThen he looked around the kitchen, hoping that a hole would suddenly appear that he could throw himself into. And then pull it in after him.\n\n*****\n\nIf it hadn't been for the shock of hearing her stage name blurted out by the sandy-haired teenager in front of her, Heather might have laughed. His expression was so comical, so filled with dismay, that it almost made up for it.\n\nAlmost.\n\nAs it was, she could feel the blood drain out of her face, leaving her pale as a ghost. She closed her eyes. It was impossible! How could this kid know who she was?\n\nOne guess for that one, Heather Anne. The internet giveth and the internet taketh away. Thus are we repaid for our sins. Obviously he's been sampling what's available on pay-per-view. Though you'd think a good-looking young man like him would be busy banging the local cheerleading squad, instead of wasting his time with fantasy women on-line.\n\nTruth be told, Nate was a good-looking young man. A few inches taller than her, and skinny, but with broad shoulders that promised to fill out as he got older. His face was open and honest, though red with the realization that he had just made a catastrophic blunder. His eyes were an arresting shade of blue, deep-set and intelligent.\n\nShe raised her head. \"I'm Heather,\" she admitted. \"Heather McCormick,\" she emphasized, enunciating her name carefully.\n\n\"Heather McCormick. Right. Sure,\" he stuttered. \"I'm so sorry. I didn't mean to embarrass you.\"\n\n\"You didn't. I'm not ashamed of what I used to do.\" She hammered the last three words home. \"But I'm not going to advertise it, either. I moved here to get away from all that.\"\n\nHe nodded rapidly, as if afraid to disagree. She hid a smile as she unpacked the tray. Individually-wrapped portions of food were set out neatly. Turkey, sweet potatoes, dressing, brussel sprouts and more. There was even a large wedge of apple pie, and her mouth watered.\n\n\"Thank you for bringing this over,\" she said. \"You can tell your mom I'll have the tray back to her in a few days, if that's all right.\"\n\n\"Sure. Take as long as you need.\" He pulled on his hat and gloves, clearly eager to escape.\n\nShe looked at him and felt her heart thaw, just a little. He was clearly mortified. How would you have reacted, Heather, if you had visited a neighbor one night when you were a teenager and found George Clooney on the other side of the door? I bet you would have melted into a puddle right on the spot.\n\nShe walked him to the door. As he opened it, she put a hand on his arm, halting him. \"It was nice to meet you,\" she said, giving him a genuine smile. \"And don't worry. This will stay between us.\"\n\n\"Thanks,\" he said, his face blushing, but this time, she thought, with gratitude. He opened the door, then pulled in firmly closed behind him.\n\n*****\n\n\"So what are they like?\" his mother asked, as soon as he came back inside. She was sprawled on the couch, her feet encased in a pair of fuzzy slippers, watching a nature show on the television.\n\nHe pulled off his hat and gloves and unzipped his coat. \"They is actually just a she, Mom.\"\n\n\"One woman by herself? No family?\"\n\n\"That's what I said,\" he replied testily. He closed his eyes, trying to recover his equilibrium after his incredible blunder. He knew his mother wouldn't be satisfied until she had pried some details out of him. \"She's tall. Blond. Maybe about thirty years old. Her name's Heather McCormick.\"\n\n\"Married?\"\n\n\"I didn't see a ring. And like I said, she's by herself. So if she was married, she's divorced now.\"\n\n\"Good looking?\" she teased.\n\nHe thought about lying, but she would meet Heather soon enough, and then she would want to know why he hadn't told her the truth. \"Very.\"\n\n\"Is she from the area?\"\n\nHe shook his head. \"I don't think so. Though I could be wrong.\"\n\nIn fact, he could have recited her biography from memory. \"Heather Fawxx. Born September 22, 1989, in Stuttgart, Germany, the daughter of an air force pilot. Shortly after her birth, she and her parents moved to New Hampshire, where she was raised.\n\n\"Her first adult acting credit was in Voyeur Production's 'Horny Teen Nymphos 4.' Shortly afterward, she signed an exclusive contract with Jacob Weintraub and Sweet Seduction Media, an adult film house which focuses on high-end erotic entertainment, including movies which are more than individual vignettes, but contain plot and character-building.\n\n\"She rapidly ascended to the pinnacle of the adult acting profession, commanding one of the highest salaries ever seen, and was voted Performer of the Year by Adult Video News in both 2013 and 2015. She is perhaps unique in the adult industry in that she has never had facial or cosmetic surgery, including implants, and is completely tattoo-free.\n\n\"Heather is not married and has no children.\"\n\nHe blinked. \"What, Mom?\"\n\n\"I said I should go over there in the next few days and say hello. What did she seem like?\"\n\n\"She was...nice. We didn't have much of a conversation.\" And what they did have, Nate had no intention of repeating. He was sure that terrible moment, when he let slip the fact that he had immediately recognized her, would stay seared in his memory for the rest of his life.\n\n\"Cool,\" his mother replied, and that was the end of that, for that evening at least. \"How was hockey practice?\"\n\n\"It was okay...coach has me working on the second line with Steve and Gus...\"\n\nThey spoke of ordinary things, and the evening drifted by.\n\n*****\n\nGod, I'm horny, Barb thought later that night.\n\nIt was past eleven, and Nate was asleep in his room. Or if he wasn't, the snores that she heard when she passed his door were one heck of a good imitation of the real thing.\n\nShe stepped out of the shower and into her bedroom, shivering a little as the cooler air hit her skin. She wrapped the towel around her waist and examined her reflection in the mirror.\n\nHotter than Sofia Vergara walking through a five-alarm fire, Nate? You smooth talker. But my boobs were never that good, even when I was half the age I am now.\n\nTruth be told, though, how many women's tits could compare to Sofia's? The woman's body was ridiculous, and Barb had spent many nights watching reruns of \"Modern Family\" on the DVR and secretly drooling over her charms.\n\nBut Barb could honestly say that she had nothing to be embarrassed about where her own body was concerned. Having seen the way many of her female relatives on the Mueller side had ballooned out when they hit their thirties, she made it a point to hit the gym three nights a week. Her legs were long and as trim as they had been when she was twenty-five. Her hair was dark and thick, falling past her shoulders, and the first strands of silver hadn't yet dared to put in an appearance. And if the not-so-subtle glances she caught from some of the fathers at Nate's hockey games were any indication, her face and body were just as attractive as they had always been.\n\nShe stretched her arms over her head, smiling proudly as her breasts lifted with the motion. She cupped one firm mound in her hand. A pair of perfectly respectable c-cups, and if they hadn't been getting the attention she wanted, well, that was no one's fault but hers.\n\nYou could have any straight man you wanted, Shroyer, she told herself.\n\nBut it's not a man I want. I want a woman. I want to know what it's like.\n\nShe snorted. As if her career could survive having a female lover! Even though Rapid City was cosmopolitan by the standards of South Dakota, it was still deeply conservative. It might not be legal to fire her for being bisexual, but there were dozens of other ways she could be eased out the door of North Star Realty. And what would happen to her and Nate then? Sure, they could move. But why risk it when her son was only months away from leaving for college?\n\nI guess it's just me and the laptop tonight.\n\nShe pulled her personal computer out of the carrying case and set it on the bed. In a few minutes she had turned it on and had pulled up an adult movie she had downloaded several months ago. It was the work of moments to fast-forward to her favorite part.\n\n\"No!\" the young woman cried, struggling against the hands that imprisoned her wrists. \"Let me go! I don't want to be a lesbian! Stop it!\"\n\n\"Well, then you shouldn't have signed the consent form when you volunteered for the experiment. The wording was very clear. But then, no one pays attention to the fine print anymore.\" The older woman, dressed in a parody of a scientist's lab coat, motioned her henchwomen forward. They came, pulling the blond woman with them. \"And we did pay you five thousand dollars.\n\n\"It's going to be perfectly painless, Heather,\" she went on. One elegant fingernail stroked her throat. The tip pricked into her skin under her chin, forcing her to raise her head. Dr. Summers lowered her voice, her lips all but touching Heather's \"Trust me. After you've Changed, you'll never want to have sex with men again.\"\n\n\"No! I'll...I'll give the money back! I don't need it that bad! I'll find another job!\" Heather jerked and flailed, the motions causing the ripped halter top and the bikini panties, all the clothes that she was wearing, to reveal enticing glimpses of her flesh.\n\nThe doctor turned her back on the young woman. \"Put her in the Machine,\" she ordered.\n\nWith gleeful laughter, the two women dragged her towards an object that looked like a bastardized telephone booth from the 1970s. Thick electrical cables snaked away in every direction. Opening the clear plastic door, they threw Heather inside, then closed and locked the Machine before she could force the door open. Dr. Summers smiled, the expression dark and amused, as Heather beat vainly on the walls with her fists.\n\n\"Engage the protocol.\"\n\nA deep hum sounded throughout the room. Around the sides of the structure, colored lights began to flash on and off in random patterns. Inside the Machine, Heather looked around in fright.\n\nThe perspective changed. Suddenly the point of view shifted to Heather. A soft, hypnotic voice began to sound within the confines of the Machine.\n\n\"You are a lesbian. You want women. Only women. You don't want men. Women are beautiful. Wonderful. Soft, loving, caring, and nurturing.\"\n\nA series of images began to flash on the inner walls of the Machine.\n\n\"Lips.\"\n\nPictures of women's lips formed. Beautiful, pouting lips, opening seductively.\n\n\"Asses.\"\n\nA kaleidoscopic array showed. Bare rear ends, pale white or tanned or dark as chocolate, but all perfectly formed, wanting only a loving, stroking touch.\n\n\"Legs.\"\n\nPanning shots of beautiful calves and thighs.\n\n\"Breasts.\"\n\nAn amazing array of breasts, from flat little fried-egg boobs to massive DDs. From small aereolae to huge, jutting nipples.\n\n\"Pussies.\"\n\nImage after image of women's labia, either teasingly closed or widespread and glistening with female nectar.\n\n\"You want them. You want this. You are a lesbian. You are a lesbian. You are a lesbian.\"\n\nThe voice droned on, the pictures flipping rapidly, now coming almost too quick to see.\n\nThe perspective shifted again. With a hiss, the door of the Machine opened. Heather staggered out, barely keeping herself from falling as she stumbled forward. Then, slowly, she straightened. Gone was the terrified girl who had entered the Machine. In her place was a confident young woman. Her back was straight, her pose almost arrogant. A discerning observer would notice that the crotch of her panties was damp, the transparent material framing the outlines of her nether lips. Her halter top was all but torn away, her large breasts exposed. They were red, the nipples standing high and erect, as if Heather had been fondling herself while in the Machine.\n\n\"Heather?\" The question was oddly hesitant, as if even Dr. Summers was a little shocked by the young woman's transformation. \"Do you feel all right?\"\n\nThe woman smiled. Her eyes were darkly predatory. \"I'm hungry,\" she said, her voice low and sensuous.\n\n\"Hungry?\" she stuttered. \"Why, we can certainly get you something to-\"\n\n\"Hungry for pussy!\" Heather growled. Leaping, she bore the older woman back onto the examination table. The two assistants shrieked and ran out the door. With superhuman strength, Heather ripped open the lab coat, revealing two large breasts. Two more rips, and Dr. Summers was naked from head to toe, her narrow waist and full hips blatantly exposed.\n\nMewling with her need, Heather opened her mouth wide, suckling on a turgid nipple. As the doctor writhed under her, emitting feeble protests, she switched to the other breast. All the while, her hand slipped up her thigh until her fingers had plunged into her vagina. She thrust them in and out of the older woman, until her fingers were wet and dripping.\n\n\"Pussy,\" she panted. \"I have to have pussy. I'm a lesbian and I need pussy.\"",
        "She slid down her body until her face was near Dr. Summers' crotch. Her hands grabbed her under her knees, spreading her legs high and wide.\n\n\"Yesss.\" The word emerged as a sibilant hiss. \"This is what I need.\"\n\n\"Heather, please don't,\" Dr. Summers begged, but her motions belied her words. Her hips rocked upward, slowly rolling her sweet mound towards Heather's face. \"You're out of control. Stop it.\"\n\nHeather paused and a semblance of sanity returned to her eyes. \"Why, Dr. Summers,\" she purred. \"Are you frightened by what you've done?\n\n\"Maybe you didn't really believe in the experiment Maybe you thought it was all just a game.\n\n\"Maybe...you're not really a lesbian at all. Maybe for you it's all about control, and that's what makes your pussy all hot and wet and drippy.\n\n\"Don't worry, Sheela\" she said, patting her thigh gently. \"After I'm done with you, I'll put you in the Machine. Then you will truly realize how wonderful being a lesbian is.\"\n\n\"No, Heather, pleaassssee...ohhhh God.\" The protests were cut off as Heather lowered her face to Dr. Summer's cleft, her tongue licking and probing at her opening. In moments, the doctor had her hands fisted in her blond hair, and her hips were jerking involuntarily into her face.\n\n\"Ohhh, God.\" Barb's voice merged with the sound from the laptop's speakers. She tried to keep the joyful sounds of her own climax quiet. She didn't think that Nate would ever mention it, if her heard her, but some things were better off unknown.\n\nSuch as the fact that your mother liked to masturbate to lesbian pornography in bed.\n\nShe closed her eyes as the last waves of her orgasm rippled through her body, suffusing her with pleasure. Thank God for the internet. After Ray left, she'd had no outlet for her sexual desires. Despite the gains made by same-sex couples, women were a practical impossibility for her. And she didn't want to get involved in another relationship with a man. Downloading and masturbating to lesbian erotica was one of her few methods of releasing her sexual tensions. If she couldn't live the lifestyle she wanted, at least she could live vicariously through those who could.\n\nShe turned off the computer, then the bedside lamp, and squirmed underneath the bedclothes, the clean sheets and warm, heavy comforter fighting off the December chill. She sighed and turned over, if not happy, at least content.\n\nShe was asleep in moments.\n\n*****\n\nIf asked, Heather would have said she would rather take a two-by-four to the skull than face the teenager who had recognized her a few days ago. But unless she wanted to start her new life with a reputation as a woman who never returned things which were loaned to her, she was going to have to take the tray back to Nate's mother.\n\nIt was two days later. The brutal chill of Friday had moderated somewhat, though it was still achingly cold outside to someone who had lived in southern California for most of the previous decade. As Heather knocked on the Shroyer's door, she eyed the lowering clouds distrustfully. The air had a raw, damp feel to it.\n\nSnow on the way, or I'm a brunette.\n\nThe inner door opened, and an amazingly attractive dark-haired woman stood framed in the doorway. Her hand worked at the inner latch, then pushed the outer door open. \"Hello,\" she smiled.\n\nShe returned the smile, with interest. No question where Nate got his looks from. \"Hello. I'm Heather, from next door.\" She nodded at her house. \"I wanted to return this, and to say thanks. The food was wonderful.\"\n\n\"You're welcome. I'm Barbara, by the way. Why don't you come in and warm up a bit? Nate's gone with some friends to a movie, so it's just me here this afternoon.\"\n\nShe hesitated, then nodded. \"Sure. Thanks again.\n\n\"Can you answer a question?\" she asked, a few minutes later, as Barbara (\"Call me Barb\") handed her a steaming cup of cocoa, and set a plate of gingersnaps on the kitchen table.\n\n\"Sure.\"\n\n\"When is trash pick-up? I've almost finished unpacking, and I've got all these empty boxes to get rid of...\" she gestured helplessly.\n\nBarb grinned. \"They do accumulate, don't they? Monday morning. And if Maggie Swenson left you some of those green recycling bins in the garage, just break down all the boxes and stack them inside, then set them out by the street. The city runs a recycling pick-up on trash day. It'll save you money.\"\n\nShe sighed in relief. \"Thank goodness. You never realize how much crap you've got until you've got to unpack it all.\"\n\nBarb nodded. \"I know the feeling. I swore when we moved in here that it'd be the last time I ever moved. If Nate wants to send me to an old-folks home when I'm older, he's going to have to drug me to do it and do all the packing himself.\"\n\nShe laughed, the sound free and unfettered.\n\n\"Now, can I ask you a question?\"\n\n\"Sure.\"\n\n\"Where are you from? And what brings you to South Dakota? Because that sure isn't a plains accent I'm hearing.\"\n\n\"Is it that obvious?\" At Barb's nod, she continued. \"Well, I was born overseas, but I was raised in New England. And for the last eight years or so, I've been on the west coast.\"\n\n\"LA?\"\n\nShe nodded. \"Yeah. Like a lot of girls, I thought all I had to do was show up for some auditions, read a few lines, and then I'd be standing on a red carpet, with DiCaprio on one arm and Sean Bean on the other.\"\n\n\"Sean Bean?\"\n\n\"Hey,\" she grinned. \"It was my fantasy. Let a girl dream, huh?\n\n\"Anyway, it all turned out to be bullshit and moonbeams. After striking out on fifty or sixty cattle calls, I got the hint. No one cared how good-looking I was if I didn't have a speck of acting ability. Luckily, I was smart enough to realize it before it was too late. I got into a different business line of work and did pretty damn well. So well I'm semi-retired now.\" She shook her head. \"There must be ten thousand others still out there, waiting tables and going to auditions and thinking that this time they're going to get the big break. That two lines in a detergent commercial will lead to a five-picture deal with Paramount.\"\n\nBarb nodded. \"Well, I wouldn't say that you don't have a speck of acting ability, Heather. Personally, I was pretty damn impressed with the work you did in The Changing. And no one is a two-time AVN performer of the year for no reason.\"\n\nHeather realized that her mouth was hanging open. Moving carefully, she set her mug of cocoa down on the table with a faint thump. \"You, too?\" Her voice rose. \"Is there anyone in this freaking town who doesn't know what I used to do for a living?\"\n\nBarb's lips quirked. \"I don't know. How many people have you met here so far?\"\n\nShe counted rapidly on her fingers. \"If you include the check-out girl at the grocery store yesterday, I think I'm up to about twelve.\"\n\n\"Hmm.\" Her voice was serious, but her eyes twinkled. \"That leaves us with seventy-odd thousand. Now, I don't know all of them personally, but I would be very surprised if they were all familiar with your work. I mean, some of them are babies and probably don't even know how to operate a computer yet.\"\n\nHeather tried to imagine a newborn typing in a credit card number and downloading a porn clip, and suddenly giggled. Before long, she was laughing hysterically, tears streaming down her cheeks as she clutched her stomach. Beside her, Barb joined in, until they were both laughing like loons.\n\n\"Wait a minute.\" Barb gasped at last. \"What did you mean, 'You, too?'\"\n\n\"Well, apparently you're not the only person in the Shroyer household who finds me attractive.\"\n\nBarb stared at her blankly. \"Nate?\"\n\n\"He recognized me as soon as he saw me,\" she confirmed. \"And when he let that slip, I'm pretty sure he wanted to die.\"\n\nBarb took a deep breath. \"Well, I'm not na\u00efve enough to think that boys aren't going to watch porn. I suppose I should be glad that what he did watch was high-class.\"\n\nAbsurdly, she blushed at the compliment. \"Thanks.\"\n\n\"So, you're retired?\"\n\nShe nodded. \"From films, at least.\" She grimaced distastefully. \"I got a bellyful of sucking cock and licking pussy on-camera. If I ever do that again, it'll be for me, not for my bank account.\" She suddenly realized that she wasn't talking to someone who was in the adult-film industry, and blushed. \"I apologize for the language.\"\n\nBarb waved it away with a flip of her hand.\n\n\"So...\" Heather tried to frame the question tactfully. \"How did you come across my movies?\"\n\n\"It was about three years ago,\" the older woman said. She leaned back in her chair, and Heather was again struck by her dark-haired beauty. I hope I look that good when I'm pushing forty. She felt an old, familiar stirring in her belly. Oh, Lord. Now is so not the time.\n\n\"Nate's father and I had split up.\" She made a disgusted noise. \"I had told him I thought I was bisexual, and he completely lost his shit. By the next day, he had packed a suitcase and was halfway to Sioux Falls.\n\n\"But that didn't actually take care of the problem.\" Heather nodded her understanding. \"And in this town...\" She shook her head. \"I've got high visibility here. My face is plastered on a good chunk of the advertising space in town, for my real estate business.\"\n\n\"And a very pretty face it is,\" she said. She let her hand fall, not quite casually, on Barb's hand.\n\n\"Thank you.\" To her immense amusement, the older woman blushed scarlet. Idly, Heather wondered if the color went all the way down to her breasts, and what they might look like if she peeled off the light cotton blouse she was wearing.\n\n\"Anyway, I didn't have the guts to look for a female lover. And with a teenage son in the house, recording steamy movies off of Skinemax or pay-per-view didn't seem like a smart option.\n\n\"So I started trolling some of the adult video websites. It didn't take me long to notice Sweet Seduction. The production values were higher. The actors were more attractive. The stories actually had plots.\"\n\n\"Jake always did aspire to be more than just another guy selling T and A,\" she agreed with a wry smile. \"Though he doesn't mind making a quick buck when he can.\"\n\n\"Well, I noticed you right away. Your body, your eyes, your face. The way you seemed to command a room.\" Barb looked down at her fingers, which were crumbling a cookie into tiny pieces. \"I'll admit it. I fantasized about you. Some of the films you did...The Seduction of Rose Red, Heather and Antonya, The Erotic Adventures of Helen of Troy...\"\n\nHeather snickered at the last one. \"That one was fun. But you'll never convince me that a Greek princess was blond.\"\n\n\"Who cares?\" Barb shot back. \"That scene with Helen and her handmaidens in the bathing pool was hot.\"\n\n\"And The Changing?\"\n\n\"God.\" Barb shivered happily. \"That one turned me on so much. It's like it spoke to me, you know? The way Heather -- not you Heather, but the movie Heather -- fought against being a lesbian. But by the end, she was in control of her own destiny.\"\n\n\"So are you a lesbian?\"\n\nBarb shook her head. \"No. I mean, I like men. A lot.\" Her grin was wicked, and Heather wondered if her unlamented ex-husband had ever seen that expression on her face. \"But I think about women, too.\" She gave a sad shrug. \"So I guess I'm bisexual. Not that I'll ever have the chance to find out,\" she said bitterly. \"Not in this town.\"\n\nHeather raised her eyebrows. \"You could.\"\n\n\"Yeah. With who?\" She blinked as she finally understood Heather's words. \"No. No way. You mean, you are?\" She suddenly stammered. \"I'm sorry. That was completely rude. But I always assumed...\" She trailed off, as if she were unable to put her thoughts into words.\n\n\"You thought I was a straight woman doing lesbian porn because I needed the money?\" Barb nodded. \"Well, I don't deny that 'gay for pay' has its charms. But for me, it was never an issue. I walk on both sides of the street.\"\n\nEven as she finished speaking, she tried to suppress the feeling of excitement inside her. At the same time, another, saner part of her mind was telling her that this was a terrible idea.\n\nShe's already said that she isn't looking for a relationship, Heather Anne. Don't try to seduce her just because you're lonely and horny.\n\nBut the old familiar heat was coiling through her belly, warming her groin, making her breasts feel hot and heavy inside her sweater. She wanted Barb on top of her, kissing her, licking her, caressing her...\n\nFor the past eight years, ever since she had stopped trying to be a \"real actress\" and had switched to adult movies, her love life had been caught in a vicious spiral. Either she went out with men and women inside the industry, who were usually insufferably self-absorbed and filed with rampaging egos that would make Nicholas Cage look shy and discreet, or she went out with people who, while not part of the adult film process, nevertheless knew who she was and had impossible expectations about how she might act, either in the bedroom or out of it. For all its size, Los Angeles was still strangely insular, and by the time she did her first feature film for Sweet Seduction, her face was too well-known for her to have any chance of anonymity there. So the men (and women) she dated expected the sort of over-the-top sexual romp that only happened in the fevered imaginings of teenage boys or the people who wrote her scripts. By the time she was twenty-four and had won her first AVN award, she had practically sworn off dating altogether.\n\nWhich made the possibility of a relationship with Barb all the more appealing. Yes, she had seen her movies. But there was still something inherently innocent about her. It was clear she wasn't expecting her to be a sexual superwoman. Perhaps it was her open admission to being inexperienced where women were concerned. Whatever it was, she was strangely drawn to her.\n\nAnd it didn't hurt that the older woman was hotter than hell. She had the sort of body and facial structure which would have had Jake and others in his position lining up to bid for her services.\n\nShe shook her head in disgust. To compare Barbara with other adult actresses demeaned her.\n\nBut to have her in bed, that would be wonderful. Their eyes caught. Heather wasn't sure what Barb saw in hers. But looking into her dark brown eyes, she saw friendship, a little fear, but also desire. Their fingers twined together. Heather felt the balance begin to tip. The passion was there, waiting only for one of them to make the first move. She could feel it in her breath, in her heartbeat, in the way that her blood pounded where her thighs met...\n\nIn the sudden silence, the sound of the garage door sliding open was jarringly loud. Heather thought he heard Barb utter a muttered curse, just before Nate walked into the kitchen through a door which, she assumed, connected the house with the garage.\n\n\"Hi, Mom,\" he said. He tried to cover a start as surprise as he recognized Heather. \"Hello, Miss McCormick.\"\n\n\"Hello, honey,\" Barb said, as her son kissed her cheek. \"How was the movie?\"\n\n\"Really good. I thought it was going to be another stupid alien-invasion flick, with explosions and stuff, but it really made me think.\"\n\n\"Cool,\" Heather raised her brows in interest, inviting Nate to go on. Encouraged, he sat down at the table with the two of them, sipping from a huge mug of iced tea he poured for himself.\n\nAs they discussed the movie he had seen, the conversation shifted to other movies, then to books. Heather took the opportunity to examine mother and son.\n\nThey were both very attractive. Perhaps she had become jaded in southern California, where anyone who was anyone had cosmetic surgery, whether it be breast implants, liposuction, botox, or any one of dozens of other choices. But the Shroyer family certainly didn't need any improvement. Now that he wasn't apologizing for letting slip her stage name, Nate was relaxed and at ease, with an air of rugged farm-boy competence, although he was a bit wide-eyed at finding her at his kitchen table. Heather could imagine that his mind was rapidly churning, wondering what she had told his mother.\n\nAnd Barb? Heather sighed inwardly. Barb reminded her of a leading actress on a network sitcom. The sort of woman who could prepare a meal for eight, and then turn into a wildcat in bed at night.\n\n\"It's snowing,\" Nate remarked, during a lull in the conversation. He used the same tone a person in California might use to say, \"The sun's shining.\"\n\n\"Really?\" She hopped up and scampered to the window. Fat white flakes were spiraling lazily out of the sky. Already they had laid a dusting of white on the black asphalt of the driveway.\n\nShe heard a snicker behind her, and turned with a smile. \"Laugh it up, Nate. I haven't seen snow fall since I was eighteen years old.\"\n\n\"And when was that? Last year?\"\n\n\"Oh, you silver-tongued devil,\" she retorted, smiling at the compliment. \"I'm sure you have the girls just knocking down the door to get at you.\"\n\nHe shrugged, suddenly becoming very interested in the cookie he was eating. \"Not right now,\" he muttered, the tips of his ears turning red. Heather blinked, opening her mouth, then shut it as she caught the slight shake of his mother's head.\n\n\"Well, I should be going,\" she said with false cheer. \"I've taken up enough of your day. Barbara, it was lovely meeting you. And Nate, relax. A good-looking man like you won't be single for very long.\"\n\n*****\n\n\"I like her,\" Barb said as the door closed behind Heather.\n\n\"She called me a man,\" Nate grinned. At his mother's raised eyebrow, he relented. \"Yeah, I like her, too. She's smart and she listens when other people are talking.\"\n\n\"Attractive, too,\" she felt compelled to point out.\n\n\"Well, yeah, Mom. But she's got to be close to ten years older than me. Shouldn't you be telling me to look for a girl closer to my own age?\"\n\n\"I wasn't suggesting that you ask her out on a date, Nathaniel.\" She shrugged, trying to put aside the unexpected spasm of jealousy she felt when she pictured the two of them together. \"But I don't see that it matters. If you aren't going to try with girls your own age, I think Heather is safe.\"\n\nHer son groaned at the broad hint. He had gone out with several girls over the last few months, but few of his efforts had resulted in even a second date. \"Mom, I've tried. But the girls here...all they want to talk about is who said what about who online, or who's going to win the game between Rapid City High and Central High, or some stupid reality TV show.\n\n\"None of them have any ambition. Even the ones who are going to college next fall seem to be doing it just for something to do for the next four years.\" He raked a frustrated hand through his hair, then smiled. \"You set a terrible example, you know,\" he teased. \"If you had been an ordinary housewife, who stayed at home and baked cookies and gave me four or five brothers and sisters, that's the sort of woman I'd be looking for. Instead, I want a smart, ambitious woman who wants to change the world.\"\n\n\"Selling houses is not exactly earth-shattering, Nate,\" she protested, though her cheeks warmed at his praise.\n\n\"Really? How much volunteer work do you do? How much time and money do you donate to special causes? Just because you're not famous doesn't mean you're not making a difference. You and Miss McCormick are a better example than most of the airheads I'm going to graduate with in May.\n\n\"Anyway, I've got to get to studying. I've got a physics test tomorrow, unless we get lucky and school gets canceled because of the snow.\"\n\nHe stood up, finished his tea, and walked out, leaving his mother staring at him thoughtfully.\n\n*****\n\nBy the next morning, there was eight inches of snow on the ground.",
        "Nate got up early, woken by the low growl of snow-blowers. Cursing softly, he dressed in his warmest winter clothes, then opened the garage door. A glittering expanse of white met his gaze. With a long-suffering sigh, he began shoveling the driveway, wondering why his mother steadfastly refused to buy a snow-blower herself. He supposed it made sense when he and his father had both been around to shovel. But by next year he would be gone, and there would be no one to do it for her.\n\nLuckily, the snow was fairly dry, not the heavy, wet, 'heart-attack' snow that claimed dozens of lives every winter. In half an hour he had cleared the driveway, and had done the sidewalk up to the property line with the Parkers on the north, and Heather McCormick's place to the south.\n\nHe paused, panting slightly, his breath forming fog where it escaped through the scarf he had wrapped around the lower part of his face. He leaned on the handle of his shovel, looking at the unmarred expanse of snow on Heather's driveway and the sidewalk leading up to her door. Somehow he didn't think she was quite ready for a South Dakota winter.\n\n\"Morning, Nate.\" The loud, cheerful voice startled him. He turned to see Harold Parker standing next to him, bundled up like he was.\n\n\"Cold front moving through this afternoon,\" Harold said with aggravating cheer. \"It's going to be fifteen below zero by tomorrow morning. And the windchill's going to be close to forty below.\"\n\n\"Lovely,\" he grunted. He couldn't understand the perverse pride some people took in the bitterly cold winters they had to live through. Although I suppose we have to have something to brag about besides Mt. Rushmore. He banged his shovel on the sidewalk, knocking off the last of the snow, and headed up the driveway to the house. If he was lucky, he might have time to get in another twenty minutes of study before he had to eat breakfast and leave for school.\n\n*****\n\nHe arrived home late that afternoon after hockey practice, the sun already slipping below the horizon, the last sunlight of the day throwing long red streaks across the road. All day long the wind had been rising, and now veils of snow whipped through the air, forming ghostly shapes in the glare from his headlights.\n\nAs he turned onto his street, his mouth fell open in shock. Heather McCormick was standing on her front walk, seemingly trying to shovel it. But her motions were slow and jerky. He squinted in the dim light. What the hell?\n\nHe parked the car, not bothering to open the garage door, and climbed out quickly, leaving his bookbag in the passenger seat. Almost running, he went to where the weary figure stood.\n\nHeather was trying to clear the walk with what looked to be a garden spade. Apparently she had finished the section leading down from her front door to the sidewalk, and was now trying to finish the section which led from her house to the Andersons, two doors down from his own. Unaware of his presence, she lifted the spade to shoulder height, then brought it down in an awkward chopping motion, trying to cut through the hard crust of the snow. Nate was horrified to see that she wasn't wearing boots, only a pair of tennis shoes. Her hands were encased in a pair of thin leather gloves, by now certainly providing no protection from the flesh-numbing cold of the wind.\n\nUnable to believe such incredible idiocy, he caught her by the shoulder, spinning her around. She gave a startled squawk of surprise and dropped the shovel.\n\n\"Are you out of your mind?\" he shouted over the howling wind. \"Get inside!\"\n\n\"N-n-no,\" she stuttered, trying to pick up the shovel. \"I'm almost d-done.\"\n\nHe pulled it out of her hands and threw it into the yard. \"You're going to get frostbite!\" A burst of wind flung freezing snow into their faces, the flakes as fine as sand, scouring at the exposed flesh of their cheeks. He could already feel his lips growing numb. He grabbed her around the arm and hauled her towards the door. \"Get inside now!\"\n\n*****\n\nNate dragged her bodily into the entranceway, pausing only to close the door firmly behind them. \"Shoes and socks first,\" he said, scowling at her. He pulled the shapeless stocking cap off his head and slapped it against his thigh, sending a cloud of powdery snow to the floor.\n\nAs she bent, her numb fingers fumbling at the laces of her shoes, he stopped her. \"Never mind. I'll do it.\" He quickly had the frozen, soaking shoes off her feet, rapidly followed by the socks. In the overhead light, her feet looked pale as bone. \"Can you feel them?\" he asked worriedly, poking at her toes with his fingers.\n\nShe nodded, though she was beginning to shiver violently. \"C-c-cold,\" she stuttered.\n\n\"Cold is good,\" he said grimly. \"Not feeling them, that would be bad. Get those gloves off.\"\n\nShe pulled her gloves off and worked her stiff fingers. As she did, he led her up the stairs and into the kitchen. She peeled off her coat and sighed as the warm air of the house began to work its way through her clothing.\n\n\"Here,\" Nate said. He turned on the water at the sink. He tested it with a finger, then nodded. \"If you ever do something that silly again and have to thaw out, remember this. Don't use hot water at first. Your skin will be numb and you won't be able to tell if you scald yourself. Use lukewarm water until you get the feeling in your fingers back.\"\n\nShe held her hands under the water gratefully, muffling a groan as full feeling began to seep back into her abused flesh.\n\n\"Whatever possessed you to try to shovel your sidewalk with a garden spade in this weather?\"\n\nEven in her chilled state, she felt her skin flush hotly in embarrassment. \"I d-d-didn't think it would be so b-bad. And there wasn't a snow shovel in the g-garage. Everyone else on the b-block had done their w-w-walks and driveways. I didn't want to look bad, being the n-new person. I figured I'd get it done t-tonight, and then get everything I needed t-t-tomorrow.\"\n\nNate shook his head disgustedly. \"Heather, this place can kill you. It can kill you easily, if you're not careful. Cold, wind, snow - it's a brutal place in the winter. People weren't really meant to live in an area like this. If you're going to stay here, you're going to have to prepare. You can't shovel snow in high wind in tennis shoes and those crap gloves you were wearing.\"\n\n\"Those g-gloves cost over a hundred dollars!\" she flared, becoming angry at his condescending tone.\n\n\"And did they do the job? Or did they just look good? I'll admit, if you had slipped and broken your ankle, you'd have been a very attractive corpse when they found your body next April. But you need good gloves. And a scarf. And earmuffs and hats and all the rest of it. And boots, too.\" He gestured at his ensemble. \"Do you think I'm going to win any fashion awards in this? Christ, from November to March we all go around town like a bunch of damn cavemen. But it keeps us warm, and that's the important thing.\n\n\"You should probably go take a shower,\" he said, his voice softening at last. \"I'm going to call my mom to let her know what's going on, then I'll finish the walk for you. When I'm done, I'll come back inside to check on you before I go home.\"\n\nUnable to think of a convincing argument to the contrary, she nodded her agreement, then walked down the hall to her bedroom. As she closed the door, she could hear Nate's voice.\n\n*****\n\n\"Barbara Shroyer.\"\n\n\"Hi, Mom, it's Nate.\"\n\n\"Yes, I know it's you. My phone has caller ID.\" She let a smile creep into her voice. \"How are you, dear?\"\n\n\"Just fine. But our new neighbor decided it was a good idea to shovel her walk in a pair of designer gloves, no boots, no scarf, and no hat. I just made her come inside. But I thought it might be a good idea if you took her shopping in the next few days to get her what she needs.\"\n\n\"Is she all right?\" she asked worriedly.\n\n\"I think so. Her fingers and toes seem okay. I told her to take a warm shower. I'm going to finish the job outside and then check on her before I go home. Do you know when you'll be back?\"\n\nHis mother sighed and lowered her voice. \"It's probably going to be a few hours, honey. These people...I've shown them three houses so far this afternoon, and now they want to go back and look at the first two again. And I have some paperwork to take care of at the office, too. And I should go to the gym to try to make sure I don't swell up like a cheap balloon between now and Christmas.\"\n\n\"No problem. But I'll tell Heather to expect your call.\"\n\n\"Ooh, so it's Heather now, is it? I didn't know you were on a first-name basis with her yet.\"\n\nHe laughed. \"Stop it, Mom.\" He zipped up his parka, holding the phone to his ear with his shoulder. \"I'll see you later tonight.\"\n\n*****\n\nTwenty minute's work with a real shovel put the sidewalk in order, though Nate suspected the whipping wind would drift it all over again with blowing snow before sunrise. Frowning, he took a look at the driveway. Full dark had fallen and cold hard stars glittered in the ink-black sky. He shivered and pulled his cap down tighter around his ears. In weather like this it was easy to believe some of the more lurid tales from American history, where unprepared settlers had to resort to cannibalism to survive.\n\nNo. You can do the driveway in a day or two, when it warms up a bit. Hell, we might get lucky and get a thaw and it'll all melt away. Stranger things have happened. Besides, it's not as if Heather is going to become overwhelmed by your snow-shoveling manliness and drag you into bed.\n\nHe re-entered the house, stamping the snow off his boots. \"Miss McCormick?\" he called. \"Heather? I'm back.\"\n\n\"In here,\" her voice called. He followed it down the hallway to a door, cracked open. He tapped on it. \"Come in, Nate.\"\n\nHe opened the door, and stopped, staring.\n\n*****\n\nShe was dressed in a robe out of one of her films. No, he quickly corrected himself. She never wore anything that good in any of her films. Not the ones I saw, at least. Rather, it was a gown out of one of his fantasies. Sheer and white, it glittered in the dim light of the bedside lamp, tiny sequins throwing sparks back into his awestruck gaze. It was long, reaching down to her ankles, but the transparent, gauze-like material both hid and revealed her incredible body. He could see her shadowy curves, moving under the cloth like sunken treasure in a deep ocean.\n\nHe took a deep breath. He would not, would not, embarrass himself. \"Feeling better?\"\n\n\"Much better,\" she smiled. She took a few steps towards him. \"Thank you for watching out for me. It was stupid to go out to shovel the walk in weather like this. If I had been thinking straight, I wouldn't have tried it. And I definitely would have stopped once I realized I didn't have the right clothes or shovel to do the job. But I get so damn stubborn sometimes and can't admit I'm making a mistake.\"\n\nHe felt one side of his mouth curl up in a lopsided smile. \"I'm familiar with the idea. I think half the population of South Dakota is descended from people who were too dang mule-headed to realize that living here was a bad choice.\"\n\n\"Hmmm,\" she smiled. She took another slow step towards him. The movement left her only a foot or so away. He wanted to retreat, but his feet seemed frozen in place.\n\nShe lifted her hand and let it trace, lingeringly, over the thick sweater he was wearing. \"Which leaves us with the question of how to suitably reward you, my hero.\"\n\nHe swallowed. \"Heather. Please. Stop it. I'm not an idiot. I know this isn't one of your films, where the randy housewife gets turned on as soon as the pizza man knocks on the door. Don't tease me this way.\"\n\n\"No, it's not one of my films.\" She looped her arms around his neck and smiled up at him. \"It's better. Should I tell you the story? A lonely woman moves to a town where she doesn't know anyone. She meets a handsome young man who helps her when he could have let her suffer the consequences of her own foolishness. When she is taking a shower, her body recovering from the ordeal, she realizes she is more aroused than she has been in years. Maybe the fact that she could have died has made her realize just how short life is, and how you should reach for happiness when you have the chance. Or maybe she's just a naturally horny woman whose desires have been unnaturally stunted over the past several years.\n\n\"Whatever the case may be, she wants you, Nate.\n\n\"Do you want me?\" She lifted her head and kissed his cheek, then his mouth. Her lips were cool and firm where they met his. As his hands rose and cradled her slim hips, her tongue darted out to trace his lips, licking and probing, before she drew slightly away.\n\nHer hands caressed his arms, pushing up the sleeves of his sweater. As she did, he met her eyes, hoping that the next words out of his mouth wouldn't prove to be an enormous insult.\n\n\"Heather. I do want you. But...I don't want Heather Fawxx. I want Heather McCormick. The real you. Not the fake you.\"\n\nShe lifted her head and kissed the corner of his mouth. \"And that's exactly what you're going to get, lovely man. One of the reasons I left LA was because I was sick and tired of men trying to have sex with 'Heather Fawxx.' To them, I was just a trophy they could hang on the wall, next to the autographed Lakers jersey and the photo they took with Nicholson at a charity golf tournament.\n\n\"And the job...\" she shook her head sadly. \"Do you know long it's been since I actually made love with a man I cared about, and who cared about me? Or a woman? Yes,\" she said, holding up her hand, forestalling his next comment. \"I've had sex. I've had sex, on camera, for money, dozens of times. Maybe hundreds. And I won't apologize for it. I did what I had to do, and I gave honest work for honest pay.\n\n\"But I haven't made love in years. Not to a man or woman who was loving me, rather than screwing me with a bunch of people watching. Or someone who was having sex with a porno actress, rather than a real human person.\n\n\"I want-\" her voice broke, and Nate gathered her into his arms. \"I want to be loved, Nate.\"\n\nHer vulnerability broke him as her strength never could. The feel of her, fragile and soft against him, inflamed him with a desire he had never felt, not with either of the two girls he had slept with before. He cradled her gently against his chest while she cried, her tears dripping down her cheeks.\n\nThe storm of emotion only lasted a few minutes. When she stopped, her eyes were clear and bright, and her lips curled in a smile. He brushed the evidence of her grief away with his thumb, and she moved her head to kiss it. Her hands drifted down his back and curved around to his hips, then slid up under the hem of his sweater. He shivered as they explored his chest.\n\n\"Well,\" she mused. \"What first? What do you like, Nathaniel?\"\n\nHe closed his eyes. The sound of his name on her lips, spoken like a caress, set him on fire. \"I like...\" He groped for the right words. \"I like foreplay. Kissing.\" He smiled sheepishly as she kissed him, her tongue tracing the line of his mouth. \"I really like making my partner happy.\" As he sometimes did, he found refuge in humor. \"So if there's anything I can do for you, or more to the point, to you, you let me know, okay?\"\n\nShe blinked, and her eyes suddenly gleamed. \"Can you hammer a six-inch spike through a board with your penis?\"\n\n\"Not right now,\" he admitted.\n\nShe shook her head sadly. \"A girl's got to have her standards.\" With a subtle move, she pretended to move away.\n\nHe grinned and held her close. \"You know Real Genius?\"\n\n\"Are you kidding? I auditioned for Susan's character for a musical version back in oh-nine.\"\n\n\"Small role.\"\n\n\"She had a bigger one in the musical. The director thought Chris needed a love interest.\"\n\nHe conceded the point with a nod. It suddenly came to him that he was suddenly holding the loveliest woman he had ever seen in his arms, and that talking about a remake of a cheesy movie from the nineteen-eighties might not be the best use of his time.\n\nHeather caught the change as it slipped over him. She had seen the same thing too many times to count. The look a man wore when desire overrode his mind. When lust took control.\n\nBut instead of being wearily accepting, taking it as the price for the job she had to do, this time it thrilled her. For so long, her body had simply been one more asset she could sell to the highest bidder. The money she received from filming sex acts had been her way of keeping body and soul together, with no answer in her heart. This time, it was different.\n\nThis time, it was her choice.\n\nMy choice. Mine. She laced her hands behind Nate's head, and pulled him down to meet her lips. When was the last time it was my choice? Not to make rent, not to advance my career, not even to get ahead so I could retire. But simply because I was horny and wanted to?\n\nHis mouth opened under her probing touch. Not entirely ignorant, no. But not so experienced that she couldn't teach him a trick or two. She smiled as she pulled at his lower lip, her teeth lightly nipping him, the action making him flinch slightly, then lean in towards her, his hands gripping her waist more firmly.\n\nShe leaned away slightly, sliding her hands down his chest to his middle. She found his belt, and unbuckled it with practiced ease, drawing it out of the loops of his jeans and tossing it lightly aside. It thumped softly to the floor, and she moved on to the next article of clothing. She pulled the hem of his sweater up until he reluctantly backed away from her and drew it over his head. She was surprised to see he was wearing a t-shirt underneath, but that, too, soon joined the growing heap of clothes on the floor.\n\nShe drew in her breath as she took in his body. His chest was well-muscled, the blondish-red hair which surrounded his cute pink nipples fading as her gaze lowered to his tight stomach, then growing again. A thick patch surrounded his navel like a halo, then darted down in a honey-trail below the waistband of his jeans. She walked around him, one hand lightly brushing his skin. He tried to turn with her, but she held him in place with a touch. As she stood behind him, she hugged him fiercely, her hands wrapping around his rock-hard abs, her lips dropping gentle, loving kisses on the pale skin of his shoulder blades. She smiled to herself as she saw his hands clench at his sides, and knew he was trying to restrain himself.\n\n<br >\"You're beautiful,\" she whispered softly.\n\n\"Me?\" He laughed in disbelief.\n\n\"You are. Do you think that women are the only ones who have beauty? That women don't look at men the same way you look at us? Don't be silly.\" Her hands slipped down, skillfully unsnapping the button of his jeans and lowering the zipper. She explored the depths of his boxers, finding his cock hard and erect. She stroked it softly and smiled against his skin as he flinched. \"And take off those ridiculous boots. This is Rapid City, not the damned north pole, though it seems you can barely tell, sometimes.\"\n\nNate lifted his feet and pulled off his boots, letting them fall to the floor. When he was done, she knelt in front of him. She looked up into his face, smiling as his breath caught with the realization of what was about to happen. As she slowly eased his pants down below his knees, then off his body entirely, she raised her hand, her palm softly pressing into his boxers, massaging his hard, firm length. It tented the cloth, hidden yet obviously, rampantly male. Near the waistband, the light blue cloth had turned a darker color as moisture leaked from his tip.\n\n\"Well, let's see what we have here,\" she said, keeping her voice deliberately light. She ran her hands up Nate's thighs, smiling as they quivered under her touch. With gentle, deliberate movements, she lowered his boxers to the floor. As his penis slowly came into view, her heart pounded, and her eyes widened happily.",
        "Yes. This.\n\n\"It's not...\" Nate trailed off, as if unsure what to say.\n\n\"It's perfect,\" she sighed. She rubbed her cheek against it, savoring the feel of the soft skin overlying his hard, aroused maleness. She looked up at him. \"Do you know why?\"\n\nHe shook his head wordlessly.\n\n\"Because it's yours. Not some porn-star dick lugged around by a guy with a two-digit IQ, brought on set just so some pathetic loser somewhere can beat off, pretending that he is the one screwing me. Yours. A lovely, hard cock, and I know it was me that made you that way, not a little blue pill like some guys have to use.\" She ran a teasing tongue up the underside of his shaft, and he twitched.\n\nOh, he was lovely. His shaft rose from a nest of sandy-blond curls, straight and true. It was flesh-colored at the base, darkening throughout its length, until it reached the bulbous, rose-colored head. His balls were drawn up tight in their sac, and she let her fingertips graze the sensitive skin, teasing him with her touch.\n\nShe let her hands wander, roaming from his strong, muscular thighs to his hard, tight ass to his taut belly. All the while, she kissed and licked and nibbled his straining member, until his entire length was gleaming with her saliva and he was trembling and jerking with want. She looked up at him and saw his eyes were closed. His hands were shaking. They moved, stopped, moved again, and then settled on the top of her head, as light and gentle as a butterfly's wing.\n\nSo careful. Her eyes pooled with tears. Where was he when I was eighteen?\n\nIn third grade, Heather Anne.\n\nShe raised up, opening her lips, and took his head into her mouth, ignoring the wondering gasp from above. She let her tongue slowly swirl around it, then dipped lower, letting him slide into her mouth, inch by lovely inch. He tasted of young male sweat and musk and an undefinable taste that was his alone. When she felt his head nudge the back of his throat, she stopped. She could have deep-throated him, but the experience would have left her raw and sore and less able to enjoy the rest of their time together. So she let his beautiful rod rest comfortably inside her, only bobbing up and down, and made love to him with her tongue. She stroked and caressed him, tickling him from root to head, while his hands combed through her hair. She let him fall away from her and mouthed his balls, almost laughing as he trembled and jerked under his touch.\n\n\"Heather.\" The sound was a cracked whisper. \"Please.\"\n\n\"Please what?\"\n\n\"I want...I want to come. I have to come.\"\n\n\"And why would that be a problem?\" She kissed his throbbing head, her free hand slowly jerking him. Her fingers could feel his pounding heartbeat, and the way his dick was starting to expand, preparing to erupt.\n\n\"Well...I want to make love to you, too.\"\n\nShe smiled up at him. \"I want you to make love to me, too, Nate. What's the problem? Are you afraid that this is a one-time offer, and that as soon as you come, I'll kick you out?\n\n\"No, sweetheart,\" she said, kissing the tip of his cock. Her tongue teased his weeping slit, tasting his pre-come eagerly, and she could feel the straining effort it took for him not to plunge into her mouth. \"This is only the first time. I intend to make sure that we have lots of fun together.\n\n\"So if you need to come, baby, go ahead. I'll still be here when you're done.\"\n\nHe sighed in relief and seemed to relax slightly. Well, most of him did, Heather thought wickedly. But the part she was most interested in stayed gloriously erect. She slowly pumped his shaft, bathing him with her tongue. When his hands clenched in her hair and his hips jerked, she was ready for him.\n\nShe dove down, her lips and tongue forming a tight seal around his cock, her fingers eagerly massaging his balls, urging his body to give her what she hungered for. With a wondering gasp, Nate spasmed, his erection twitching in her mouth, and the first hot, salty spurt of his come arrived in a wonderful burst. She swallowed it eagerly, but too slowly, for by the time she had, another and yet another blast had entered her. It threatened to overflow her mouth and trickle down her lips.\n\nWith a mighty effort, she swallowed this second load, and then a third and a fourth, all the while enthusiastically milking his rod with her mouth and hands. Luckily, the flow eventually eased, and she was able to let his phallus slip out of her mouth, where it struck his thigh with a meaty slap, shining with their combined fluids. She closed her eyes, smiling as his come warmed her belly, joining the fiery heat of arousal in her groin.\n\n\"That...\" the sound was more of a groan than coherent speech. \"That was the best. Ever. Thank you.\"\n\nShe smiled up at him. \"You're welcome. Do you still want to make love?\"\n\nHis eyes grew somewhat panicked. \"Right now?\"\n\nShe snorted laughter. \"No, you big goof. I mean, I know you're eighteen, and that young men are wonderfully...recoverable...but even this wonderful cock of yours will need a few minutes. That is,\" she said softly, \"if you still want to stay.\"\n\n\"If? God, Heather, try to keep me away. Who the hell wouldn't want to stay with you?\"\n\n\"You'd be surprised,\" she said sourly, too many unhappy memories crowding together in her head. Catching his arm, she rose from her knees. \"How about we actually go to bed this time?\"\n\nNate nodded. For the first time, he actually took the time to look at the hulking piece of furniture in the corner. \"That,\" he said, clearly impressed, \"is a big bed.\"\n\n\"A California King,\" she confirmed. \"One of the reasons it took me so long to find a house was I wanted a place with a master bedroom big enough that this thing wouldn't look ridiculous.\" She walked over and sat down, bouncing cheerfully on the springy mattress.\n\n\"It's so high,\" Nate said. \"Do you need a safety harness when you're getting out in the morning?\"\n\n\"Stop being silly and get over here.\" She stood up. \"You know, I'm starting to feel a little neglected. Why don't you find something to do with those hands of yours?\"\n\n\"All right.\" He carefully undid the knot in her sash. Her robe hung open, but rather than pulling it off her, he slid his hands inside, slowly stroking her from hip to chest and back again. Inside the robe, hidden from his view, her nipples hardened. She looked down at the perky little tents they made on the cloth, and unaccountably blushed.\n\nHe is going to be a wonderful lover. The thought blazed through her head like a bolt of lightning. His mother taught him to respect women. That's why he's so careful. Her arousal, which was already at full-tilt, reached an even higher plateau. She could feel her nether lips growing hot and slippery, and wondered dimly how long she would be able to control herself.\n\n\"Come on, lie down,\" she said, trying to disguise the quaver in her voice. She guided him to the mattress, where they both lay on top of the heavy down quilt. \"Tell me,\" she continued, her voice lightly teasing as she kissed his chest. \"What movie did you like the most?\"\n\nFor a long moment he didn't answer, and she wondered if she had made a mistake. \"Heather Alone,\" he said at last.\n\n\"Really?\" She raised her brows, surprised. \"That's...not what I expected.\"\n\nHeather Alone had been a vanity project, and not one of her top sellers, though it had received good reviews, for what it was worth. Using only herself, a bed, and a single camera, the film, twenty-five minutes long, had shown herself slowly arousing herself and masturbating her way to orgasm. Contrary to Jake Weintraub's wishes, she had not engaged in any dialogue or pretended that she was doing it for someone in the room with her. It was intended solely to show a woman engaging in self-pleasure in the most honest way possible.\n\n\"Really,\" Nate confirmed. \"I don't...\" he paused, trying to gather his thoughts. Under her hands, his skin flushed hotly. \"I like watching women. But not men. It's...just gross, seeing another man's hoo-ha.\"\n\nDespite Nate's obvious discomfort, she snickered. \"His hoo-ha?\"\n\n\"His business. His johnson. Whatever. I don't like it. So I always go for the girl-girl or the solo films. And Heather Alone,\" he sighed. \"You looked so gorgeous, with the sunlight falling through the window, making your skin all golden.\" He turned to his side, his arm coming around her, pulling her close. \"And it was so obviously honest. Your eyes were closed most of the time. You weren't acting. It was just you.\"\n\nShe smiled. \"That's what I was trying to do. But most people who watch the films want to pretend they're in them. So a movie like Heather Alone doesn't do well.\"\n\nHe shrugged. \"I don't care. I liked it.\" Heather sighed as he finally slipped the gown from her shoulders, leaving her naked. He shook his head as he drank in her body. \"I don't know how this happened.\"\n\nShe laid a hand on his cheek. \"It happened because you're a good person, Nate. And damn fine-looking, too.\" She ran her hand between his legs, finding him already starting to surge erect again. Her hand rubbed him softly. \"Now, I just have to see if you're as good a lover as you are a man.\"\n\n\"I'll try.\"\n\n\"That's all any of us can do,\" she whispered, then kissed him.\n\nNate sank deep into the mattress, while Heather rolled over on top of him. Her long, slim body, accentuated with graceful curves, set him ablaze. The golden cloud of her hair fell around their faces as they kissed, and somehow he found that his hands were on her chest. Her breasts filled his palms, and he massaged them gently, his fingertips moving over the impossibly soft flesh.\n\nWhen they found her pebbled aureolae and pink, stiff nipples, she groaned and buried her head in the crook of his neck. He tried to keep his touch light, barely grazing the aroused areas.\n\n\"Oh, God,\" she groaned in his ear. \"What are you doing to me?\" Her thighs spread, her knees coming down on either side of his hips, and he could feel the wet heat of her groin slowly grinding into the base of his cock.\n\n\"Do you like it?\" he asked, running his thumb around one taut nipple.\n\n\"No,\" she moaned. \"I fucking love it.\" Her breath was harsh and hot in his ear, and he shivered. Involuntarily, his hips rose, pushing his shaft into her, and he heard her chuckle.\n\n\"I guess I've found out what you like,\" she said, her voice low and warm. Her sharp teeth nipped at his earlobe, and then he felt the sensation of her tongue as it dove deep into his ear canal. Helpless under her touch, he turned his head to give her a better angle, and his hands clutched her rear, trying to mold their bodies even closer together.\n\nEventually she left off playing with his ear and moved back to his mouth, kissing the line of his jaw, then sitting up. His eyes widened at the site of her, the beautiful folds of her pussy surrounding his cock. She slowly slid up and down, coating him with her moisture. Tentatively, he reached for her labia, trying to remember exactly where the all-important clitoris was supposed to be. He rested his hand on the rise of her mons, and slid his thumb down to where her lips came together. As he did she smiled down at him tenderly.\n\n\"Are you trying to play with my clitty?\"\n\n\"Yes.\"\n\n\"Have you done this with a girl before?\"\n\n\"Not...not really.\"\n\nShe leaned down and kissed him until he was panting. \"Then wait. Doing it like this...you've got a bad angle and you don't really know what you're doing. There'll be plenty of time to teach you later. And also to teach you how to eat me, and what I fantasize about, and how if you do a certain something when we're screwing doggy-style I'll completely lose my shit.\"\n\nShe offered him her breasts. Without thinking, he circled a nipple with his lips, then opened his mouth and suckled on the taut nub. \"Wonderful.\" She laid a palm on his cheek, and her voice was passionate and calm at the same time. \"We have lots of time to learn about each other, Nate. We don't have to do everything at once.\n\n\"And since I'm so turned on I can hardly stand it, I'm going to fuck you now.\"\n\nShe raised up, one hand sliding down his chest, his belly, until it found his cock. She stroked it, the thumb swirling around the sensitive glans, until Nate threw his head back into the pillows and whispered meaningless pleas for mercy. Smiling, she gripped it by the base, aiming it at her beautiful cleft. With a keening moan, she sank onto him.\n\nThe sensation as their two bodies came together was one that Nate thought he would remember for the rest of his life. Hot and slick and terrifyingly intimate, her sheath gripped him tightly. It was nothing like he had ever experienced before. Her inner walls squeezed him, and he hugged her around the waist, his hands clasped in the small of her back, wanting nothing more than to have her body on top of his forever.\n\n\"You're going to have to let me up sometime, Nate.\" The voice was amused in his ear.\n\n\"Sorry.\" He relaxed his grip.\n\n\"I understand.\" Her hands came up, resting on the carved headboard of the bed. The angle put her breasts at the perfect angle to reach his mouth. \"Suck on my titties while I fuck you. I love the feel of your mouth on my nips. Yes, that's it. Now a little harder. Suck on them, use your tongue and just a little bit of your teeth oh Gawd that's good,\" she groaned. Her hips began to rise and fall, her butt-cheeks hitting his thighs firmly on each downstroke. \"I love the way you fill me up. Just right. Just right.\" One hand left the headboard and dove down to where their bodies joined. He could feel her fingers dancing, her fingertips sliding along the ridge of his staff while she gave herself pleasure. She began to move more rapidly, and incredibly, he could hear the sound of their lovemaking, a small squelching sound from their groins.\n\nThis is really happening. As if the sound confirmed what his mind had refused to entirely accept, he found himself grinning like an idiot, even as he held a pair of incredible breasts in his hands and sucked on their nipples and one of the most beautiful women in the world bounced on his dick. He could feel her moisture coating his cock, trickling down and around and into his pubic hair, and still she rode him harder and harder and harder.\n\n\"Oh, Nate. Oh, fuck, Nate. I'm getting close. Are you close? I'd really like to come with you.\" Her dark blue eyes locked on his. They were wide and happy, her lips trembling in an ecstatic smile.\n\nUnable to speak, he nodded.\n\n\"Then fuck me, Nate.\" She reached down and gripped his ass. \"I'm not made of glass. Fuck me. Shove that beautiful cock deep into me. Fuck me now!\"\n\nHer words broke his fragile self-restraint. In an instant he had caught her rhythm, and he bucked up from beneath her, driving his cock up into her folds. She wailed her approval, and her pace redoubled, her hips hurtling into a staccato rhythm which left him unable to do anything except to try to match her pace. She fell across his body, her soft breasts with their rock-hard tips a wonderful warm weight. She kissed him, her lips and teeth almost gnawing at his.\n\nSuddenly, she stopped. A vise-like grip surrounded his aching shaft. His hands, their thumbs stroking the soft skin of her belly, could feel the ripples as her orgasm washed through her.\n\n\"Yes!\" Heather cried, the sound unbelievably joyous. \"Yes! Yes! Yes! Oh, fuck yes!\" Her hips raised one last time, milking his cock with exquisite force, and he came into her channel in a bolt of white-hot fire.\n\n*****\n\nWhen he came back to himself, Heather was lying on top of him, her head pillowed on his chest. As his eyes fluttered open, she smiled and gave him a long, lingering kiss on the lips.\n\n\"That was...\" he shook his head, for once at a loss for words. \"I never thought it could be like that. Thank you.\"\n\n\"No, thank you,\" she replied, cradling his head in her hands. \"I haven't had a come so good in years. I needed it. Bad.\" She squeezed her thighs together for emphasis, hugging his member, which was still semi-erect inside her. \"I can't wait until we do it again, when we have more time.\"\n\nAt the mention of the time, Nate's gaze darted to the bedside clock. \"Oh, God. It's after seven. I've got to go.\"\n\n\"I wish you didn't have to.\" Her voice was soft and sweet.\n\n\"Neither do I. But I've got homework and supper and my mom will be back from work soon, and if I'm not there she'll wonder why.\" At the mention of food, his stomach gurgled.\n\nHeather sighed, but rolled off of him, making a small, disappointed sound as he slipped out of her. \"Serves me right, falling for someone who's still in high school. Why wasn't I smart? I probably could have found a nice sugar daddy to hook up with.\" Despite her aggrieved tones, her eyes were twinkling mischievously.\n\nHe slid off the bed and began to dress. As he did, his brows creased in a frown. \"How are we going to make this work?\"\n\nShe smiled from her position on the bed. In the light from the lamp her body was a patchwork of golden skin and mysterious shadows. In took all of his self-control not to rejoin her, schoolwork and his mother and the rest of the world be damned.\n\n\"One day at a time, sweetheart. Just like everything else.\" With a sigh, she got out of bed, though she made no effort to dress. \"Do you have your phone with you?\" At his nod, she continued. \"Then we can call and text each other, and make plans for when we're both free.\"\n\n\"If people see me going into your house all the time, there's going to be talk,\" he warned.\n\n\"Let them,\" she said flatly. \"I'm not going to live my life being afraid of what someone else might think or say about me. If I was worried about that, I'd have moved back to New Hampshire after I failed as a real actress.\"\n\nNot knowing how to respond, he finished dressing and walked back down the hall and into the kitchen, followed by Heather. He put on his coat and the rest of his winter gear.\n\n\"You're only going to be walking a few dozen yards,\" Heather objected.\n\nHe bent and kissed her. \"Better safe than sorry.\" He fished his phone out of a side-pocket. \"Give me your number?\"\n\nShe did, and he gave her his. She walked him down to the door, where they kissed again. She shivered at the strange feel of his heavy leather gloves on the skin of her rear.\n\n\"I'll see you soon,\" she whispered, then opened the door to let him out into the cold, dark winter night.\n\n*****\n\nBarbara arrived home a half-hour later, peeved at the clients who had dragged her across half of Rapid City, but couldn't be bothered to even make an offer on any of the three houses she had shown them. They had left her at the office with vague promises that they would \"let her know soon.\" She had been in the industry long enough to know that they wouldn't do anything of the sort. They were just wasting her time.\n\nOh, well. No one said this was easy, Barb. And you've got three other properties that are going to close in the next two weeks. You're a long way from having to sell yourself on the street-corner.\n\nShe parked and entered the house. To her surprise, her nose caught the smell of food.\n\n\"Hi, Mom,\" Nate waved from the kitchen table. \"I didn't think you'd feel like making supper tonight, so I did it myself. How does some frozen pizza sound?\"\n\n\"As long as it's not frozen now,\" she said. \"I'm starving.\" She sat down and pulled a slice off of the tray. It burned her fingers, and she juggled it from hand to hand as she scarfed it down. Afterward, she poured herself a glass of milk and sat back in her chair, eating a second slice more slowly.\n\n\"So, how is Heather doing?\" she asked. \"I'm glad that you're watching out for her.\"\n\n\"She's okay, I think,\" he answered, mumbling around a bite of a bread stick. \"I'm sure she won't do anything like that again. I think she just forgot how dangerous it can be in winter.\"",
        "\"Good. It's be awful if something happened to her. I really think I'm going to enjoy having her as a neighbor. She's good people.\"\n\n\"I think so, too.\"\n\nBarb frowned. As they spoke, she had grown aware of a tantalizing aroma in the air, separate from pizza or bread sticks or the ordinary smell of the house. It wafted into her nostrils, something which she had once known intimately, but had missed for several years.\n\nHer breath caught as she recognized it at last. It was the smell of sex. That undeniable, unmistakable smell, a combination of female arousal, sweat, musk, and semen, that resulted when two happy people did their best to love each other into exhaustion.\n\nAnd it was coming from her son.\n\nWho?\n\nHeather.\n\nWho else could it be? Certainly Nate hadn't had time to go to bed with anyone else between school, hockey practice, and his good-Samaritan mission on Heather's behalf. Or had the situation really been what he claimed? Had Heather somehow seduced him, or had he (even more unlikely) seduced her, and then been forced to make up an excuse for his presence at her house?\n\nShe stopped chewing, caught between astonished pride and anger. Pride that Nate had been found desirable by one of the loveliest women that Barb had ever seen. Anger that the woman he had gone to bed with was one that Barb herself wanted very badly.\n\n\"I'll call her up in the next day or so,\" she said, keeping her voice light and casual. \"If her winter gear is as bad as you say, she should have someone take her out and get some quality stuff.\"\n\nHe nodded. \"It's terrible.\" His eyes were clear and guileless, and Barb relaxed a bit. Whatever the two of them were doing, at least Nate wasn't lying about it. \"Her coat looks nice, but it's all show. Same thing with her gloves. They're the kind that look good when you're walking from the car to the store, but rotten if you need to do any serious work in them. And I don't know if she's got any hats or scarves or boots at all.\"\n\n\"Well, I'll call her tonight. Maybe we can go shopping on Friday night out at the mall. Unless you'd rather I be at the game against Central.\"\n\nHe waved his hand. \"They're going to kick our ass anyway. No reason why you should sit around for two hours on a Friday night and watch us get smoked.\"\n\n*****\n\nThe next three days were torture for Heather.\n\nShe thought she was long past teenage infatuation. But she found her thoughts constantly turning to Nate. The sound of his voice. The feel of his skin against hers. The way he looked at her, as if she were the only woman in the world. And, especially, the way he touched her, at once innocent and passionate, as if he wanted to learn every single thing about her body and what aroused her.\n\nThey had only been able to get together one more time, on Thursday afternoon, when he was done with school and his mother was still at work. His hockey practice had been called off, and she practically leaped into his arms as soon as he was inside the door.\n\nThey spent a long, happy hour, filled with lovemaking, in her bed. With her guidance, he learned how to pleasure her with his mouth, and she had held his head close to her mound, wracked with orgasm after orgasm, as his sweet lips and clever tongue stroked her burning clit. Afterward, she let him mount her, and she closed her eyes in bliss as his wonderful cock filled her sheath to bursting.\n\n\"You know,\" he said, just before he had to leave, \"we could tell my mom and not try to keep this a secret.\"\n\nHeather felt a cold hand clutch her heart. Barb! Unable to think up a suitable excuse, she and the older woman were set to go out shopping for winter gear the next evening. She had no idea how she was going to deal with their mutual attraction and the fact that she was sleeping with her son.\n\nShe shook her head. \"Not yet.\"\n\n\"But why?\" His dear face was confused.\n\n\"Women's business,\" she said mysteriously. \"It's not the right time.\"\n\nAnd now they were driving to the mall in Barb's car. She had pulled up outside of Heather's house that night, precisely at six PM, and had honked her horn peremptorily. Heather had quickly zipped up her coat and scurried down the walk to her car, exactly, she thought grumpily, as if she were a fourteen year-old getting picked up after band practice. She leaned forward to put her hands in front of the air vents, trying to warm up.\n\nShe caught Barb's glance and smiled. \"I don't know what's wrong with me. I grew up in weather like this.\"\n\n\"Oh, your blood got thin from spending all that time in the sun in California,\" Barb said with a warm smile. \"Give yourself a year or two, and you'll toughen up.\" She pulled into a parking lot jammed with cars, and gave a weary sigh. \"Friday night in December,\" she muttered. \"Maybe this wasn't the best way to do things.\"\n\n\"At least it actually looks like Christmas outside. You should try California in December. Eighty degrees and all the shopping malls are filled with fake snow. I swear, the first winter I was out there I was in culture shock.\"\n\nBarb laughed as she opened the car door. The sound was whipped away in the wind. While not as bad as a few nights ago, it was still frigidly cold. By the time they reached the doors of the mall, Heather was hunched over and shivering. She saw Barb looking at her quizzically, and tried to smile.\n\n\"All right,\" the older woman said. \"Let's get to work.\" She led her to a large store, the glass front showing pictures of people in all sorts of outdoor gear. Pulling out a cart, she turned to Heather. \"Take off that coat so I can take a look at it.\"\n\nShe did, and watched Barb in dismay as she shook her head dismissively, her lips tightening in disapproval as she examined it carefully. \"And the gloves?\"\n\nShe peeled the gloves off her hands and handed them to the dark-haired woman. She fingered them quickly and handed them back to her.\n\n\"Just like Nate said. Wear them when you're out on a date and want to look good. But not for anything serious outside. They're useless for outdoor work.\"\n\n\"And the coat?\"\n\n\"Throw it out, or donate it to the Salvation Army. It looks nice, but the lining's too thin and it's too short. You want something that will cover your rear end. Otherwise you'll have the wind making that cute little butt of yours cold all winter long. You need a new one.\"\n\n\"A new butt?\"\n\n\"Smart-ass.\"\n\n\"Cute-ass.\"\n\n\"Yours or mine?\"\n\n\"Both.\"\n\nBarbara blushed at the compliment. \"We should get started.\"\n\n*****\n\nIf the United States Army ever needed help organizing an invasion, Heather decided some time later, they could do worse than to ask Barbara Shroyer. The woman was almost frighteningly efficient. In less than an hour, she had helped her pick out a new winter parka, a lighter coat for fall and springtime, heavy winter gloves, as well as earmuffs, two different scarves, a couple of hats, and a pair of fur-lined winter boots. And somehow they all managed to be at least moderately attractive, or at least not horribly bulky.\n\nHeather pulled off the last hat to find Barb looking at her oddly. \"Turn around,' she said.\n\nShe did so, pirouetting gracefully. Barb frowned. \"Are all your pants like that?\"\n\n\"More or less. What's wrong?\" She fought back the temptation to bend over so the tight denim could further accentuate the curves of her hips and rear.\n\n\"They're too damn tight.\"\n\n\"Men like tight.\" After a pause to reflect, she added, \"Women do, too.\"\n\n\"Tight is bad in winter. You need some air between your skin and the clothes to serve as insulation.\" She sighed and pushed the cart in a new direction. \"You need some new slacks and jeans.\"\n\n\"But I want to look sexy,\" she said, aware that her voice had sunk into the almost-whine which used to drive her mother crazy.\n\n\"Sexy's for home. And when the temperature's above freezing. Sexy slacks and jeans won't do you any good when it's so cold no one's looking.\"\n\nWith Barb's help she chose some heavy, durable jeans and slacks, though she pouted at how they made her rear end look like she had gained ten pounds overnight. After paying for her new clothes, she and Barb wandered through the mall, content to people-watch. Adults in unzipped parkas walked past them, their faces in various degrees of cheerfulness or stress. In the common area, a Santa's Village had been set up, and proud young parents with fidgeting, squeaky-clean children waited to take pictures with a resplendently fat and jolly Saint Nick.\n\nIt was all so bland, so dull, so ordinary, that Heather had to blink back tears. For years she had navigated the superficiality of Los Angeles, never getting involved with anyone below surface level. This midwestern town reminded her forcefully of what her life had been like, before she had abandoned it and moved away. Before her parents had disowned her. Before she came to terms with the fact that she would never be a good actress. Or even a respected one.\n\nBefore she could fall too far into depression, her eye was caught by a familiar pink logo. She grabbed Barb's hand. \"Victoria's Secret! Let's go!\"\n\n\"Heather,\" the older woman laughed, \"I don't need any lingerie.\"\n\n\"Didn't you say that sexy was for home?\" she replied, pushing through the doors, bringing Barb in with her. She inhaled deeply, taking in the familiar odors of silk and lace and perfume. \"Besides, women don't buy lingerie because they need it. They buy it because they want it. And they want to look beautiful for their man. Or woman,\" she added, slanting a quick look at her friend.\n\n\"Well...\"\n\nIt was obvious she was willing to be persuaded. Heather let her go, and started browsing among the racks, her intuition telling her that Barb would not welcome someone looking over her shoulder while she shopped.\n\nWhat would Nate like? She paused, struck by an even more wicked idea. What would Barbara like? Her lips curved in a grin as she moved through the store, her hands plucking items off their racks, one by one. She probably could make do with what she had at home. But for her friend, she decided, only brand-new items would do.\n\nThe sales lady was just ringing up her purchases when Barb joined her at the counter. \"Don't tell me you bought something!\" she exclaimed. \"I bet you have a whole collection at home.\"\n\n\"Maybe I do and maybe I don't,\" she responded cheerfully. \"But it's been a while since I got anything new. And if you're going to force me to spend hundreds of dollars on winter clothes just so I can survive in this terrible place,\" she continued, \"I might as well get something for me. Thank you,\" she said to the cashier, as her new belongings were slipped into a bag. She nonchalantly turned away, pretending to become very interested in a display of scented body wash as Barb made her purchases.\n\nThe trip back across the parking lot to Barb's car was made much more pleasant by the sheer fact that her friend insisted that she wear her new winter gear. Grumble as she might about their lack of style, she couldn't deny that her new clothes were much warmer than what she had been using. Her new parka reached down to mid-thigh, and was topped by a hood trimmed in fur. Combined with heavy gloves, fur-lined boots, and a stocking cap which was criminally unfashionable but sinfully warm around her ears, she was actually comfortable as they piled their bags into the trunk.\n\n\"Goodness,\" she said, pushing back the hood of the coat and shoving her gloves into her pocket as she relaxed into the leather interior of the car. \"When you have the right clothes, the weather's almost bearable.\"\n\nBarb gave her a smiling glance as they merged onto the highway. \"For now. But when it gets below zero again like it was on Monday, you'll find out that nothing really does the job. All you can do is bundle up and try to get back inside as soon as possible. I swear, I think if I could I'd spend every minute between November and March curled up under a comforter in my bed, reading. Or at least watching TV in a nice warm bathrobe and fluffy slippers.\"\n\n\"That sounds nice. Especially if you had someone in bed with you.\"\n\n\"As long as it was the right someone.\" Heather caught a glimpse out of the corner of her eye that hinted that Barb had ideas about who that person might be.\n\n\"Want to come in for a bit?\" she asked casually, as they turned onto their street.\n\n\"Sure. If I know Nate, he's going to go out with his buddies for pizza after the game, and he won't be back until after midnight.\"\n\n\"You let him stay out so late?\" she teased.\n\n\"I trust him,\" Barb shrugged. \"He's a smart kid and hasn't ever been in trouble. He knows if he did, I'd come down on him hard. So he makes sure I don't have to.\"\n\n\"That must be nice,\" she said, as Barb parked in her driveway. \"I think my life might have turned out a lot different if my parents had trusted me.\"\n\n*****\n\n\"What did you mean?\"\n\nIt was a short while later. They had stowed her new winter gear in the hall closet, but Heather had drawn the line at putting away the new slacks and jeans. The clothes would still be there in the morning, and she wanted to get to know her new friend better.\n\nMy friend. It was strange to think of Barbara that way, on so little acquaintance, but she did. It seemed so long since she had had a friend who she could hang out with simply because she liked her, not because she might help her get a better role in the next movie, or because they were forming a temporary alliance against another woman on set. But as she pulled a bottle of red out of the wine rack, she knew that this woman was someone who would stay true to her as long as she did the same.\n\n\"What?\"\n\n\"What you said in the car. About your parents.\"\n\n\"Oh. That.\" She pulled the cork out of the bottle and splashed wine into a pair of glasses. \"Cheers,\" she said, handing Barb a glass. They clinked the glasses together, and she took a deep sip, almost a swig, of the rich, dark liquid. \"This isn't a conversation I want to have standing around in the kitchen.\" Taking the bottle with her, she led her into the living room, pausing only to turn on her stereo. Christmas music began to play at low volume. Despite everything, she smiled. One of the few happy memories from her childhood was the old-timey Christmas albums her mother had played during the holidays. Several years ago she had bought copies of all of them; Bing Crosby, Perry Como, Ray Conniff, and Gene Martin, and now she relaxed slightly as the long-familiar tunes played.\n\nShe took a seat on the couch. Somewhat warily, Barb sat beside her. To one side, a gas fire flickered cheerily in the fieldstone fireplace, throwing warm red light onto her brand-new furnishings, barely out of their wrappings.\n\n\"I was born overseas,\" she began abruptly. \"My father was a pilot in the air force. He was in Iraq for the first war over there, back in 1991.\"\n\n\"I remember that,\" Barb nodded. \"I was just starting high school.\" She smiled slightly. \"Thanks for making me feel old.\"\n\nShe shrugged irritably, as always put on the defensive when the conversation turned to her family. \"After the war, what there was of it, we moved back to the states. Dad was promoted and was put in command of the training wing at New Boston Air Force Base in New Hampshire. That's where I grew up.\n\n\"I had it lucky, compared to other service brats, I suppose. At least, I didn't have to bounce around from base to base like a lot of them did. But growing up under my father's thumb was no picnic.\n\n\"It started almost as soon as I hit puberty. I developed pretty spectacularly.\" She gestured at her chest. \"And at a young age. Dad was terrified that I'd get a reputation. And I did.\"\n\nShe snorted in disgust, half-angry with the fact that the memory of those years, over a decade old, could still get her riled up. \"I couldn't keep my hands off myself. I discovered masturbation when I was about thirteen. And a little while after that, I discovered boys. Well, one boy, at least. Denny Montagne.\"\n\nEven now, that first memory made her close her eyes and shiver happily. \"God, it was so much fun. We didn't have sex. At least, not right away. But just holding and touching and kissing each other was so nice. He wanted to see what I had, and I definitely wanted to see what he had, so we took our clothes off and looked.\n\n\"Of course, he couldn't keep his damn mouth shut. By lunch break the next day, I had half the damn junior high panting after me. I don't know what they thought. But word had gotten around that I was a 'nympho,' whatever the fuck that was supposed to mean.\n\n\"Dad, of course, completely lost his shit. Word travels fast on a military base. He came down on me hard. But I was just as bad as he was. The more he tightened his grip, the more I was determined to have my own way. Which basically consisted of screwing every man I could get my hands on, just to show him.\n\n\"By the time I graduated high school, we were barely talking to each other. Mom, too. She always took his side. I suppose I could have handled it better, but shit, I was just a teenager.\n\n\"And I haven't ever found anything that was more fun than fucking.\"\n\n\"Christ, Heather!\" Barb dabbed at her lips with her sleeve. \"Give a girl some warning before you say something like that, will you? Otherwise you're going to have winestains all over this nice carpet.\"\n\nHeather shrugged. \"I've had worse things happen. After I graduated high school a girlfriend of mine and I loaded up her old Buick Skylark and took off for the west coast. I'd done some theater in high school, and I was sure that with a little practice I could start getting roles in movies right away. I mean, all the boys in high school liked me, right? So the men in charge of the film companies were sure to think the same thing.\"\n\nShe sighed. \"God, was I dumb back then. When we got to LA, we got a cruddy apartment in Boyle Heights and I started to go to auditions.\" Her lips quirked with bitter humor. \"For some reason, the casting agents weren't in a huge hurry to cast a girl with next to no experience and next to no acting ability. I got plenty of offers to have sex, but none to actually get in front of a camera.\n\n\"So six months later we were both flat broke, despite the crappy jobs waiting tables we had. We were in our apartment one night, fooling around and smoking a joint Sherry had managed to score, when I made a joke about peddling my ass on the street corner for some cash. And Sherry said that she figured I'd get a lot more money if I did a porno. One thing led to another, and a few days later I was in a sleazy office, auditioning for a role in Horny Teen Nymphos 4.\" She shook her head in bemused reminiscence. \"The good thing was, there weren't a whole lot of lines to memorize. It was pretty much limited to lying on my back, spreading my legs and moaning. And the only thing the casting director wanted to see was how big my tits were.\n\n\"Well, it wasn't as bad as I was afraid of, and the money got us a month's rent, but a couple weeks later Sherry and me had a big fight and she left for home. When she got there, she told my parents what I was doing.\n\n\"Dad called me up and disowned me that night. Told me neither he Nor my mother wanted to see me again.\n\n\"He meant it, too. When Mom died three years ago and I showed up for the funeral, he wouldn't even look at me. If my brother George hadn't been there, I don't know what I would have done.\"\n\n\"I'm sorry,\" Barb said. She caught her hand and squeezed it comfortingly.\n\nShe nodded through a throat gone tight. She had never told this story to anyone. Not to Jake. Not even to Nathaniel. He was a good friend and her lover, but she didn't think, at his age, he could understand her bone-deep sense of betrayal. \"Well, I did a couple more shitty-ass pornos, but then I got a break. The first in God knows how long. Jake Weintraub saw one of my films. I don't know why, but he thought I could be more than just another bimbo. He came to my apartment one night and convinced me to sign an exclusive contract with Sweet Seduction, his production company. He explained to me how things really worked in the adult film business, and how little time I really had.\"",
        "To Barb's raised eyebrows, she explained. \"A good-looking woman has a limited shelf life. Kind of like a tomato. At first, you're fresh and new, so you get cast as a horny young teenager. Cheerleader, naughty schoolgirl, things like that.\n\n\"Then, after you've matured a bit, and if you're good enough and attractive enough, you get the starring roles. You can get the lead in what passes for feature films in the porn business. High-class, with plots and decent scripts and even some special effects. Like The Changing. Or some of the stuff that Vivian Thompson does, or WomansWay Video.\n\n\"You might get three years of that. Or five. Or maybe even ten. But sooner or later it all ends. Your looks start to go. And your tits and your legs and everything else. And no one's interested in seeing you after you've done dozens of films and there's nothing new for you to do anymore. So you get smaller roles. Or older ones. The MILF. The horny stepmother. The schoolteacher. The repressed housewife.\"\n\nShe shuddered. \"Eventually, there's nothing but scraps. The grandmother or the mother superior at the convent. And then you're thrown out like a week-old newspaper.\n\n\"God, I'm lucky I met Jake. I owe him so much. I don't know why he took a shine to me. Maybe he was feeling paternal. He never had any kids of his own. Anyway, he helped put me through night school in between shoots. I got a business degree from UC-Davis, even though I kept on filming. And once I became a star, he even let me renegotiate my contract so I was getting a cut of the royalties rather than a flat fee. That helped me earn out to the point where I could retire and move out here. Where I'll never have to fuck someone I don't want to.\"\n\n\"Did he...\"\n\n\"No.\" She smiled. \"Oh, I would have, no doubt. He wasn't really my type, but I would have done it through sheer gratitude. But he never made a move on me. He was kind of old-fashioned that way, if you can say such a thing about a guy who filmed people having sex to sell on a pay-per-minute basis on the internet.\n\n\"Anyway, he helped me out. With his help, I became an adult-film star, made some decent money, and when I felt I had enough to retire on, I pulled the plug.\n\n\"Which answers, the long way around, your question, maybe. If my parents had trusted me the way you trust Nate, none of this would have happened. Maybe I wouldn't have pushed back so hard. Maybe I would have stayed in New Hampshire. I sure as hell wouldn't have moved to South Dakota to run away from my porn-star past.\" She swallowed the rest of her wine and set the glass down on the coffee table.\n\nSilence hung in the room for a long moment. \"Well, it might sound selfish,\" Heather said, \"but I'm glad you're in our lives. Nate's and mine both. I can't remember if I've ever heard him as worried about someone the way he was for you the other night. And it's always good to make a new friend. You can never have too many. I think you must be very strong to have come as far as you have. Not many women are retired before they're thirty, no matter what industry they're in.\"\n\nHeather smiled noncommittally, wondering if Barb would have the same high opinion of her if she knew she and Nate were sexing each other up. But that thought led her to the lingerie she had bought, and she rose to her feet. \"Come on. Enough moping around out here. I want to see what you bought at the store..\"\n\n\"It's still out in the car,\" Barb protested.\n\n\"No, it's not,\" she replied, lifting the bag so her friend could see. \"I brought it in with my stuff. Come on, sweetie,\" she wheedled, seeing the hesitation on her face. \"If you try on yours, I'll try on mine.\"\n\n\"That's hardly fair,\" Barb said with a sad laugh. \"You're so damn good-looking it's ridiculous. But I'm-\"\n\n\"So damn good looking it's also ridiculous,\" Heather interrupted firmly. \"Don't sell yourself short, girlfriend. You're fine and you know it. Why so shy? There's no one here but us girls.\n\n\"Come on,\" she repeated, pulling her down the hallway to her bedroom. \"You can dress in the bathroom if you don't feel like getting bare-assed in front of me.\"\n\n*****\n\nThis is crazy.\n\nBarb looked at herself in the mirror, hardly able to recognize the woman in the reflection. She was naked but for two wisps of lace. The first was a bra, but to call the garment that was to completely misstate its utter decadence. The straps barely lived up to their name, and the cups were all but transparent, filmy red gauze that left little to the imagination. Below, a pair of panties caressed her cleft, cut high on her hips, accentuating the narrowness of her waist. The triangle of cloth barely covered her labia, and in the rear, a narrow band dove deep into the cleft of her buttocks, serving only to entice and excite.\n\nIt's not too late, she thought, looking at her pile of discarded clothes on the floor. You can put those back on, tell Heather it was all a mistake, and go home. She'll respect your decision. She won't force you to do something you're not comfortable with. Hell, maybe you can even return these things to the store and get your money back.\n\nInstead, she opened the door, walking out unsteadily. Throughout the evening, she had tried to deny to herself the purpose of her shopping trip with Heather. But now she had to face the truth. She wanted the blond-haired, sweet-faced woman, with her sharp, acid tongue belying the gentle soul beneath. She brought to mind an angel on a Friday night, tired of being good all week and ready for a little sin.\n\nOh.\n\nAs Heather turned around to face her, Barb's brain melted into a puddle of lust.\n\nShe was dressed all in white, but there the facade of innocence ended. Her legs were clad in white silk stockings, running from her dainty feet to her trim thighs. There, thin straps connected them to a lace garter belt. Her face flamed as she realized Heather was not wearing any panties. Instead, the naked lips of her pussy glinted cheerfully at her. Above the belt, her waist narrowed, then fanned into the lovely span of her ribcage. As her eyes were drawn inexorably upward, she blushed again, for while Heather was wearing a white lace bra, it was cupless, and the slender band of cloth around her chest only served to support and accentuate her spectacular breasts with their wonderfully full, thick nipples.\n\nShe realized she was staring, and somehow tore her eyes away. \"I'm sorry,\" she stammered, her skin feeling as if it were on fire.\n\n\"Why?\" Heather asked, her voice warm. \"I have to say, sweetheart, you look good enough to eat. Such a wonderful crimson!\" She stepped forward and fingered a bra strap. \"I could never wear something like that. But you have the right coloring for it.\"\n\n\"Me?\" Barb's laugh was disbelieving. \"Are you kidding? Look at you. I feel like a big fat cow just being in the same room. Your body...\" she swallowed around the lump of longing in her throat. \"You're gorgeous.\"\n\nHeather shrugged. \"I don't know. Don't you think it's weird, to be complimented on your good looks? I mean, it's not as if I worked for it. It's just a happy accident of genetics.\n\n\"Now, staying in shape, I will take credit for. My parents signed me up for gymnastics classes when I was just a little girl, and I've been careful to stay in shape ever since. Watch this.\" As Barb looked, wide-eyed, Heather jumped onto the huge bed that dominated one corner of the room. She stood on the edge, then slowly, her legs spread, lowering her body until one white-clad foot was touching the headboard, and its opposite number was at the other end of the mattress. Her torso bent forward, until her chest lay flat on the bed. From her view behind her, Barb could see Heather's nether-lips, wantonly peeking up at her. As she watched, entranced, Heather turned her head, her dark blue eyes looking up at her seductively. Her hips rocked, slowly pushing her mound into the bed-clothes, then easing away. The sweet, taut cheeks of her buttocks formed a wonderful pair of hills, the cleft of her ass a valley she wanted to explore.\n\n\"Miss McCormick.\" Her voice was unsteady. \"Are you trying to seduce me?\"\n\n\"Yes.\" An unidentifiable emotion threaded through Heather's voice. Her hips canted upwards, making her rear lift off the bed. Looking at the array of golden flesh, framed in white silk and lace, Barb felt her mouth go dry. And as if to counteract the dryness above, her core was growing decidedly wet. She closed her eyes, fighting for control as another burst of heat exploded in her loins, making her nether lips wet and slippery. She didn't dare to look down, aware that there would be a revealing dark spot on the front of her panties.\n\n\"I don't know what to do,\" she whispered.\n\nWith an impossibly graceful move, Heather drew her legs together and rolled over on the bed, coming to rest on her side. She propped her head on one hand and looked at her with friendly, cheerful lust. \"No one does, the first time. I certainly didn't. And I bet you didn't either, the first time you were with a man.\"\n\nThe memory of her first fumbling encounter, upstairs at a New Year's party while her parents were getting sloshed downstairs, made her smile.\n\n\"So come here,\" Heather commanded. \"And let me love you.\"\n\nShakily, she nodded her head. Once, then again. Taking a deep breath, she forced her fearful feet to move forward.\n\nIt's not so terrible. Thousands of women do this every day. Tens of thousands. And how many of them wish they were you right now, Barbara? One of the loveliest women on earth is here to teach you about how to make a woman happy. And she wants you.\n\nShe lay down on the bed, mimicking Heather's pose, so that they lay on their sides, facing each other. Heather raised a hand trailed it down from her shoulder, her touch raising goosebumps. Despite her fears, she felt her body warming eagerly. Heather's hand reached her hip and lingered there, her fingers idly toying with the wisp of silk which kept her panties from falling off altogether.\n\n\"You are beautiful.\" Her voice made her jerk her eyes up to Heather's face. Her hand wandered up her back until it reached her neck. \"I love your hair. So dark and thick. And your skin is like cream.\" She leaned forward and kissed her shoulder, then moved lower, tasting the skin of her collarbone. With a gentle nudge, she pushed her until she was lying on her back. Her breasts hovered close, their uncovered tips hanging over her. Hesitantly, she raised her own hands, brushing the lace cloth of Heather's garter belt, then rising upward, her fingers trailing over the golden skin of her sides. She reached her bra, and stopped, uncertain of how to go forward.\n\nOr even if she should.\n\n\"Here.\" Heather's voice was kind. She reached behind her, unclasped the bra, and tossed it away. \"Do you want to kiss them?\"\n\n\"Yes.\"\n\n\"Then do. They want to be kissed, darling. By you.\"\n\nBraced on her elbows, Heather lowered herself until her golden orbs were hanging, just out of reach of her mouth. Closing her eyes, Barb risked a closed-mouth peck, feeling the warm skin give slightly against her lips.\n\nHeather hissed in frustration. \"I'm not your grandmother, Barbara. And if you're going to kiss me, kiss me like you mean it. Or go back home and stop wasting my time! I want you, but I'm not going to put up with that sort of nonsense. I want a lover, not a scared teenage girl!\"\n\nStung by her tone, Barb looked up. Heather's brows were pinched in an angry frown. But behind that she could see her fear. The fear of rejection, that despite all the attention she had received from lonely, horny men, she was no longer attractive,\n\nOnly one way to deal with that.\n\nCasting aside fear and doubt and hesitation, she gripped Heather's waist firmly, raised her head, opened her mouth, and latched onto her left nipple as if she were starving and it alone had the nourishment that could save her. Suckling hard, she gave into her innermost fantasies, lashing the erect bud with her tongue.\n\n\"Yes, God, that's the way to do it.\" Heather's breath was hot in her ear, and her tongue licked her earlobe, making her gasp around the flesh of her breast. Even as she switched to the other side, she felt Heather's hand slide down her belly and dive under the waistband of her panties. Knowing without asking what her lover intended, she spread her legs eagerly.\n\nHer touch was magic, and she was so wet the invading fingers parted her folds easily, sliding into her sheath almost without effort. She threw her head back and moaned, Heather's breast escaping her mouth, as her long, clever fingers pumped into her. At the same time, she became aware of her thumb, circling her throbbing clit, tormenting her with its presence, but never actually touching her most sensitive part.\n\nThrough the haze of lust which had descended over her mind, she still had enough presence to smile up at her friend. \"You're teasing me, you little tart.\"\n\n\"Would I do that?\" She played the part of injured innocence well, feigning a sad little pout, but her fingers did not stop their exquisite torment of her channel.\n\n\"Yes.\" She kissed her, her mouth tasting a woman's lips for the very first time. She moaned into Heather's mouth as those same lips parted, their tongues playing with each other. As they did, she spread her legs and humped her hips up into her hand. \"My clit needs it, babe. Do something, but don't do nothing!\"\n\n\"Mmmm.\" Her dark blue eyes shone wickedly. \"Well, since you asked so nicely.\" She trailed off and lowered her head, her free hand pulling down the lace cups of her bra. As her breasts sprang free, she dropped tender kisses around a straining nipple. Becoming unstrung with frantic want, Barb grabbed Heather by the back of her head, all but forcing her to suckle her burning bud. At the very instant she did so, Heather's thumb, impossibly accurate, came down on her throbbing clit.\n\nBarb's brain blew up. She writhed on the bed, unable to believe such incredible pleasure was possible. Heather's fingers in her cleft, curling upwards, stroking her inner walls; her mouth on her breasts, sucking and licking her aching nipples; her thumb, so clever and wise, urging her towards orgasmic release.\n\nShe became aware that she was holding Heather's head to her chest, her hips snapping upward in time to her pumping hand, screaming a babble of nonsense-words at the ceiling. She could also feel something strange on her leg. She realized it was Heather's stocking-clad thighs rubbing against her. The feeling of the silky cloth on her legs only served to excite her further. Hot wet heat blazed a trail up and down her own thigh as Heather rubbed her naked pussy against her. She looked down, seeing her lover's petals spread wide. On the downstroke, she could see the pink pearl of her clit poking out of its hood, and was struck by a sudden urge to roll over, spread Heather's golden thighs, and lick her to a shuddering climax.\n\nBut for now, she was all but helpless in the younger woman's grip. Her mouth and hands were doing incredible, unbelievable things to her, and she could feel the wave of her orgasm rapidly approaching, set in motion by the release of long-denied desires, coupled with Heather's beauty, skillful hands, and incredible body.\n\nShe blinked through a haze of lust, trying to bring her lover's face into focus. \"Heather. Sweetheart. You make me feel so good. I'm going to come soon.\"\n\n\"Mmmmm,\" Heather's reply was low and throaty, speaking of endless nights to come, as she lifted it from her chest, and her eyes gleamed with desire. \"That sounds wonderful, baby.\" The strokes of her mound on Barb's thigh quickened, taking on a renewed urgency. \"Why don't you suck on my titties for a bit while I get you off. No reason you should have all the fun.\"\n\n\"Yes,\" she breathed, her hands reaching up to encircle Heather's spectacular breasts. She thumbed the fat tips, then took them into her mouth, switching between them in a random pattern that Heather seemed to enjoy, if the increasingly-incoherent sounds from above her were any indication. The pressure of her lips on her legs increased, Heather grinding down on her, twisting her hips at the end of each stroke.\n\nShe closed her eyes as her orgasm approached. Heat, blazingly fierce, lodged between her thighs. The muscles of her legs and belly and womb began to shake, and with a hoarse yell, she came, releasing years of pent-up sexual need in a blinding outpouring of sensual joy. Her pussy clamped down on Heather's fingers. Her arms drew her lover down until their breasts were flattened together, the feel of her ripe mounds against her own tits pushing her release higher and higher, until she barely heard the sound as Heather screamed in joyous release as well.\n\n*****\n\n\"Whoa.\"\n\n\"Yep.\" Heather's voice, Barb decided, was undeniably smug. \"Did you like it?\"\n\n\"Like it?\" She burst into hysterical giggles, her head pillowed on her shoulder. She stroked Heather's thighs, which were still covered in the stockings. \"What do you think?\"\n\n\"I think that maybe you've got a little fetish there,\" Heather said. She kissed her cheek as her hand moved between the stocking and the golden skin of her thigh. Her fingers approached her pubic mound, then backed away. \"What do you say, babe? Do you want me to greet you at the door some night, dressed in garters, stockings, high heels, and a smile?\"\n\n\"That sounds...very nice.\" Barb closed her eyes against a bolt of renewed desire. To her surprise, Heather reached an arm out and turned off the bedside lamp, then pulled the down comforter over them both. \"You want me to sleep here tonight?\"\n\n\"If you like.\" Her breath stirred her hair. \"It's been a long time since I've woken up with someone I care about.\"\n\n\"Me, too.\" She turned on her side, Heather's silky-smooth bottom nestled in her damp groin, her hand curled around one of her breasts.\n\n\"By the way...\"\n\n\"Hmmm?\" The sound was already sleepy.\n\n\"What's my son like in bed?\"\n\n\"Barbara, you have no idea.\"\n\n*****\n\nTo be continued... "
    ],
    "authorname": "Glaze72",
    "tags": [
        "girl next door",
        "lesbian",
        "older woman",
        "porn star"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/our-neighbors-a-porn-star"
}