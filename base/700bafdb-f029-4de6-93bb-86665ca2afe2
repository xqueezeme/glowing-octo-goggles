{
    "title": "Succubus Awakens",
    "pages": [
        "Hey all, been a while. This one is a little different than the usual harem. Female protag, a lot of sex but also a lot of story. It could be in erotic couplings, group sex, taboo (not incest), lesbian, though I'm putting it in Sci-fi fantasy like usual. It has MF, MFF, and FF scenes in it. It was a story I had to write and just wouldn't leave my mind, and it stands on its own. It's just short of sixty thousand words so it's a full novel. I don't have any more story to it, though if it hits me I'll add another book or two.\n\nOh, no sex under eighteen in here, even if it does start out in a high school, everyone involved are seniors about to graduate or older. As usual, I look forward to your feedback!\n\nEnjoy!\n\nSuccubus Awakens\n\nAlexis Black: Book One\n\nCopyright 2020. This is a work of fiction. Names, Characters, Places and incidents are either products of the author's imagination or used fictitiously. Any resemblance to actual events, locales or persons living or dead, is entirely coincidental. All rights reserved. No part of this book may be used or reproduced in any manner whatsoever without permission.\n\n*\n\nChapter One - Caught\n\nThe room was bare, save the single metal table bolted down to the floor, and the three chairs. I was sitting on the proverbial wrong side of that table, as I spared a glance at the wide one-way mirror on one of the walls, and then I made a face as I looked up at the camera. The room looked to have seen better days, with faded light brown paint on the walls, and a lot of scuff marks and scratches both on the metal table and floor.\n\nIt truly looked like a movie set for a bad cop show. Regardless, I could sense the witch and shifter arrive, could feel them through the mirror. Something only my kind and Nephilim could do, at least without spells, scents, and other indicators being involved.\n\nI also felt naked. I was clothed, not naked in that way. I had on a prison orange jumpsuit that my kind hosts had lent for my use, and if I may toot my own horns, I made it look damned good. The mirror showed a young woman just barely past the cusp of womanhood, which was far from the truth. Midnight hair, intense violet eyes, the face of an angel, and a body that even the orange shapeless garment couldn't hide. I was on the petite side at five foot four, but my body was all sumptuous and proudly supple curves that gave me an exaggerated hourglass figure.\n\nNo, it was the lack of all my usual fae enchantments, and the betraying cute and short red horns on my head that told the world and everyone around me the other side of the mirror of my true nature, that made me feel naked. My mother had been fae, though I'd never met her, but my father had been a demon. It'd been quite a surprise, when the horns had grown in at sixteen and I'd grown a body built for sin.\n\nNot to mention my crazy libido, one that I'd fought for two long years.\n\nI was also confused, as a rule, half demons were killed on sight as a matter of course. I objected to that policy, since I didn't feel evil myself, but I might as well protest against the sun rising in the east every morning. The Nephilim led the city councils, and the fae, vampires, shifters, and witches followed their lead. Or they died.\n\nNephilim were self-righteous assholes.\n\nThe humans had gone along with that bullshit genocidal policy because they'd been starstruck by the damned Nephilim and their pedigree as the sons and daughters of angels. Ever since emergence had happened two years ago. That'd been quite a thing, almost a full sixth of Manhattan had gone up in hellfire, it'd been impossible to cover up even for witchcraft and vampire compulsion. I honestly liked humans though, I couldn't blame them for being dumb enough to fall for the press put out by the half children of angels.\n\nIt'd only been my fae magic and glamour that had kept me safe as long as it had. It was the one magic that was easy, glamour was as natural as breathing for a fae. Otherwise I'd have been screwed, because I didn't know much about magic back then, but I'd already been hiding my pointed ears since I was a young child in the human world, so hiding a couple of horns had been no big deal, if a bit freaky.\n\nI also had very little personal power in the moment, which was how they'd caught me. I'd let myself grow careless, too arrogant, and I'd pushed my magic too hard the last three days. For money, what a stupid and venal reason to die. When the hunter team and raid had come, I hadn't had a chance in fighting back, at least not hard enough to take down the full team. Which annoyed me, but what I couldn't figure out was why they hadn't slit my throat yet, after taking me down.\n\nMy power was also being drained by one of their enchantments right at the moment, to keep me nice and safe, and helpless for them. Magic naturally regenerated over time.\n\nI also spared a thought for my companions. Were they alive as well, or had the council put them down already? There was no doubt they were marked for death, merely disagreeing with the council could get a supernatural killed. The first amendment most definitely did not apply in my dangerous world despite living in the United States of America, and me and mine had broken more serious laws than that.\n\nThe door opened, and the witch and shifter walked in. The former about twenty-five years old in human appearance which would put her in her forties. She was attractive, five foot eight with golden blonde hair and light gray eyes that were narrowed with disgust in the moment. She had a faux innocent beauty with soft cheekbones and a heart shaped face. Her body was lissome, all soft curves, with average breasts.\n\nI held my face neutral, even though I felt her attraction to my body, the last thing I wanted to do was piss her off, too much, anyway. My powers as a fae included glamour, speed, and an intrinsic connection to nature. I was also capable of nature spells, and potion making. It was that former that had allowed me to hide myself by disguising my demonic scent markers and horns. But the receptive empathy came from the other side of the equation.\n\nThe shifter was ruggedly handsome, with a hint of boyishness at about the same age. He had brown hair and golden-brown eyes that looked cold in the moment, but I imagined like all shifters they burned hot a lot of the time. He was built, really hot, and a few fantasies flitted through my head, and the witch was involved in most of them.\n\nI'd always been like that, ever since my demon side came in at sixteen. I'd always kept it suppressed, and I swallowed the flirty quips that came easily and often to my tongue. Everyone had that one person in their life that turned almost everything into sexual innuendo and sensual teasing, well that was me for my circle of friends. My mind was usually in the gutter, and I had absolutely no shame when it came to sexuality or flirting... at least in my head I didn't. I still retained a modicum of modesty, only revealing that side of me fully when in bed.\n\nThe witch started.\n\n\"Alexis Black. Twenty-two. Been on the run for three years, since late eighteen, when you caused quite a ruckus at your high school in the latter part of your senior year,\" she shook her head in mock shock as she clucked her tongue, \"Half fae, and from what we know half succubus.\"\n\n\"And you are?\" I asked coquettishly.\n\nShe scowled, but the shifter answered, \"Dennis Franken, and Gale Francis. Council investigators.\"\n\nGale continued, \"Guilty of illegal potion trafficking on the black market. Participating in an underground fight club. There's also the not so small matter of your birth.\"\n\nRight. After emergence witches started to sell potions to humans, since the whole supernatural world had been revealed. Of course, the best and most sought after potions had been regulated with the humans' help, for their supposed safety, but it was really so that the upper-class witches could corner the market. That had inevitably led to a black market, and for someone like me on the run it was one of the few fast and easy ways to make money, if you had the magic to brew potions, that is.\n\nThe supernatural community was a complicated place, and as a half anything that put you at the bottom. I certainly wouldn't be welcomed in any fae mounds, even if I wasn't half demoness.\n\nAs to participating in a fight club, that was a stretch. The only fighters were shifters, they needed the release of it, of a good knock down brawl for their instincts. If they didn't feed their violent instincts piecemeal and in a controlled way, they'd eventually snap and start killing just about anyone.\n\nFor pack shifters they'd find that in their pack, and pack dominance. But for half shifters or even full shifters that were bitten by rogues or not welcome in a pack for some reason or another, they had to find that outlet elsewhere. That led to underground fight clubs, where bloodthirsty rich humans got to enjoy watching a hell of a fight. Not to mention corrupt councils taking bribes.\n\nPoint being, my participation in it was simply being there, and selling potions. Not that they would care about that distinction and it was pointless to argue about anyway. I'd already earned my death, what was one more capital offense? Both how I was born, and peddling illegal potions were more than enough reason to kill me. Either reason would be enough, which led back to my confusion. Why the hell was I still alive?\n\nDennis growled, \"Nothing to say?\"\n\nI shrugged, and I pointed at my horns. Honestly, that was all that mattered. Their rules and laws were corrupt and self-serving to those in power, almost everything was a capital offense in my world, what did it matter what they thought.\n\nGale scowled, \"You will answer our questions.\"\n\nI looked her over and then looked at Dennis, and said sultrily, \"No.\"\n\nGale shook her head, \"What the hell do you mean, no?\"\n\nI said patiently, \"I was answering his question. I have nothing to say about the charges.\"\n\nGale peered at me like I'd been torturing kittens.\n\n\"There is no hope for parole, but we will be merciful when the time comes if you tell us what we want to know.\"\n\nI nodded. Of course, they wanted information from me. That was the only thing that made sense as to why I wasn't dead yet, and my mind spun in circles as I came up with a plan. A horrible plan, one that was surely doomed to failure, but worst case I was dead anyway. All I had was desperation at that point. \n\nThough, I also couldn't imagine what information I had that they would find important.\n\n\"What is it you want to know?\"\n\nGale narrowed her eyes, \"Just like that?\"\n\nI shrugged, \"Not happy about it, or at the prospect of dying afterward, but it's not like you can't drag anything you want out of me with magic and torture. I'd prefer to avoid that, and I'll answer all of your questions honestly. I am half fae, or did you forget that?\"\n\nI didn't really like to lie, though I was like most fae in that I was fairly facile with my tongue when it came to leading people to the wrong conclusion with the truth. That wouldn't really help me here though, council investigators knew all the fae tricks that way, and they knew how to ask questions that couldn't be abused in that way.\n\nDennis accused, \"You seem awfully calm, for a nasty demon about to meet their end.\"\n\nI frowned, \"There's no need to get personal. Besides, don't confuse controlled discipline of mind, with calm.\"\n\nGale said, \"You may be half fae, but you're also half demon.\"\n\nI smiled at her alluringly, \"True, but my demon side much prefers pleasure over pain.\"\n\nShe snorted, but I felt the low level surge of lust from her, and smiled wider, knowingly.\n\nI added, \"Shall we get on with it, or would you like to... investigate that aspect of my nature more... thoroughly?\"\n\nDennis snorted, \"So you can suck out my soul, no thanks.\"\n\nI sighed, the morons believed their own press. Suck out souls? Granted, that was possible, but it wasn't something I'd ever done. I'd compare it to the left-hand path of witchcraft, sacrificial power and summoning evil for power, and it was a part of my nature that would twist me and truly make me evil. In truth, I stuck to the right-hand path, or at least what I saw as the right-hand path for one of my kind.\n\nTo be fair, half succubae children were extremely rare, more often than not demons are summoned by fae or witches for power, and in that case another type demon was far more appropriate to that end. They also usually killed us on sight, so it wasn't like they did any research.\n\nLastly, I was bored with their paranoid questions, I wished they'd get to the point. At the same time, the longer they dallied with stupid ass observations and questions before getting to the point the better chance I had of living just a little longer.\n\n\"I've never killed in that way, nor would I.\"\n\nIt also wasn't on the table, sex would recharge me in moments, instead of days, and would no doubt destroy the enchantments on my wrists. I was hot, but no one was that hot, and neither of them would take that risk just to use my body.\n\nDennis looked at me with disgust, but like his partner I could feel his attraction.\n\n\"I find that hard to believe.\"\n\nGale cleared her throat, \"Your powers. Hellfire, which you used to kill half the team's shifters.\"\n\nDennis growled at that, as if being reminded of that little fact made him want to tear my throat out.\n\n\"True.\"\n\nGale frowned, \"What others do you possess?\"\n\nI said, \"Basic fae talents with glamour, nature magic, enchantment, and potion brewing. On my demon side, empathy, enthrallment, and hellfire.\"\n\nEnthrallment was a tiny bit like compulsion. Except it was both more honest and more horrible at the same time. A victim of compulsion won't remember being told to do something and it will seem like their idea. A victim of enthrallment will do it for me, against their will even, out of lust, desire, and an unnatural loyalty. It was a power I very rarely used.\n\nAnother way to say it is compulsion affects the mind, and enthrallment affected the soul.\n\nI added, \"And of course, feeding, restoring, and even growing my power through sex.\"\n\nThat last one, the permanent power growth, was by very small degrees, unless of course I swallowed a whole soul which would grant a significant increase in power. But power wasn't everything, and swallowing souls whole would twist my own mortal soul. The power of a succubus was not straightforward. Like most things in life, it was complicated, there was a balance, debt, and payment to it, at least in the way I did it, when it came to my lovers. Maybe it was hubris, but it kept my soul clean. Although, I supposed god would be the final judge of that when I finally stood before him.\n\nGale frowned, \"What about permanent enthrallment?\"\n\nI tilted my head, \"No idea what you're talking about.\"\n\nDennis snorted even more violently.\n\nI frowned as I looked at him, \"Can you not smell the truth on the air, dog?\"\n\nGale touched his arm, probably to stop him from breaking my face as he stepped forward with a growl. Wolf shifters really hated being called dogs. They were too, even more indiscriminate than I was, and I was a sex demon. So they were dogs in the literal and figurative sense. At least, until they'd found their soul mate, the one their wolf picked as their mate, then they were steadfast and loyal.\n\nBut until then they were bigger sluts than I was.\n\n\"From our records, a succubus can permanently enthrall a person while using their enthrallment power, but only while simultaneously feeding during sex. It sets a permanent connection. They'll always obey your orders, you can feed from them at any time over a distance, even communicate with them, and their souls literally become an extension of yours, unto death. It's also impossible to trace and detect, or at least current witchcraft isn't up to the task. Apparently one of your kind took hundreds of council hunters and even a few councilors down with them a few thousand years ago.\"\n\nI snorted myself, \"That's convenient, very boogieman under the bed. If you can't detect it then there's no way to prove it either way.\"\n\nThen my mind put it together, and I figured out that suspected power was why I was still alive. They were probably trying to figure out how I'd stayed one step ahead of them the last three years. Feared that I had set permanent enthrallments as spies in their ranks, and worried if they slit my throat a bunch of their own might just keel over dead too.\n\nWhich meant if the power did exist then they'd be investigating it and experimenting on me to learn how to find and trace it. To me though, the whole thing sounded completely ridiculous. Another of the council's lies and manipulations to stay in power. They also said half-demons would start the apocalypse, but for some reason I just hadn't gotten to that task yet over the last three years of running around free either.\n\nYes, that was totally sarcasm.\n\nMore than that, if I did have them wouldn't I be able to feel them? I could literally pull power from them all right now if she was right, and then destroy the enchantments and fight my way out of here. The only supernatural that was a threat to me were other half demons and Nephilim, shifters, vampires, witches, and even fae had no chance against me, if I'd had any magic that is.\n\nI shrugged, \"I've never heard of it, so if I do have some out there then I certainly didn't do it on purpose. It's not like my dad trained me, nor did my power come with an instruction manual. That said, I honestly don't think it's a thing, but I can't guarantee it either. No one can prove a negative.\"\n\nWhat I said was the truth, but my belief was this was partially false pride on their parts. They were looking for some excuse to explain the failures of not taking me down sooner. Of failing to apprehend me in their succubus-hunt. Usually their demon hunts were short and final. That ridiculous power I'd never heard of even as a succubus myself gave them an excuse to forgive their ineptitude, or my superiority in my evasion of them.\n\nOf course the truth was obvious. It was being half-fae that allowed me to evade them, with glamour. Most half demons were half human, and they couldn't hide their horns or their scents. Much less look like completely different people.\n\nAt the same time, I couldn't prove that power didn't exist, or that they were wrong. More importantly for the moment, is a little doubt was a good thing from my side of things. After all, if I convinced them that wasn't a possible danger then they'd have no reason not to slit my throat and incinerate my corpse before the sun rose tomorrow.\n\nGale grimaced, \"We have no choice, we can't take the chance. She could've fucked her way through whole councils, enthralling, fucking and permanently enslaving them.\"\n\nI frowned, \"Except I'm telling the truth, doggy can smell it. If I did enthrall someone permanently, it wasn't on purpose.\"\n\nDennis didn't take the bait this time, \"You're very controlled as you said earlier, and even shifter senses can be fooled. I don't imagine a facile fae and evil demon would think twice about deceiving, and the latter might even believe their own twisted lies.\"\n\nI shrugged, \"You'd know if you didn't kill us all on sight.\"\n\nGale shook her head, \"He's right, we can't hang that many possible lives on the idea a shifter's nose is infallible.\"\n\n\"Then why bother talking? I've told you nothing but truth, as I see it.\"\n\nGale sighed, \"In the hope you would admit it. So we wouldn't have to do what we need to do.\"\n\nI frowned as a chill went down my spine.\n\n\"What are you going to do?\"\n\nGale said distastefully, \"We have no choice, we'll have to review all your memories relating to and around your feeding. That will tell us if you set any permanent enthrallments.\"",
        "I shook my head, \"Let me be very clear. I agreed to share nothing but truth and answer your questions. I do not consent to any such thing.\"\n\nDennis snorted, and that time he did slap me and ring my bell pretty hard. \n\nI blew him a kiss.\n\nDennis growled, \"You don't get a choice.\"\n\nGale shook her head, \"Like I want to see that, feel your nasty feelings and thoughts while you preyed on innocents and took pleasure in it?\"\n\nI rolled my eyes. I really wasn't that bad. In fact, I wasn't even really a slut. I just... wanted to be one, sometimes. My appetites and desires were strong, but that didn't mean I was a slave to them, nor did I believe I was corrupted.\n\nPoint is, how dare the bitch act put out, and like she was the victim here, they were about to rape my mind.\n\nI was disgusted by the idea of them seeing all that, my true thoughts, my insecurities back when all of this had started. When I'd had no damned clue what was going on at all, or how my power worked. All I knew back then was I'd had pointed ears all my life, had grown horns two years before at sixteen, and that I could make people see illusions, I hadn't even really known I was fae, growing up in a human household.\n\nIt'd also been two years before emergence day, before the humans found out about us. I also hadn't used or found out about hellfire yet, or enthrallment. All I knew was I was a lot more obsessed with the idea of sex than my best friend, or even most guys I knew, but I'd hidden and suppressed all that. I'd been embarrassed by it, wondering why I wanted to be such a slut, and I'd heavily edited my speech.\n\nIn fact, I'd kind of been the good girl in the public view. Smart, sexy but conservative dress, in line to graduate near the top of my class and go to college the next year. I was even a tutor for goodness sake, which was what got me into trouble in the first place.\n\nIt was just behind closed doors, that I was almost constantly jilling myself off in my private moments. I'd also used bananas and cucumbers to master my cock-sucking techniques, long before I'd felt a hard yet velvety soft fleshy pole slide into my throat. I used to cum on my fingers, imagining they were real cocks, but I showed none of that dark need in me to my friends.\n\nDamn, I pushed that out of my head, I was getting wet thinking about it. Point was, I didn't want this shifter and witch seeing that either, how vulnerable and confused I was back then.\n\nOf course, all things have an upside. It'd keep me alive just a little longer. It might even persuade them I wasn't evil, though I'd have never consented to it just for that purpose, and in the end wasn't sure I cared what they thought about me. These two were just puppets of their own press and Nephilim leaders.\n\nLastly, that denial of consent was far more important than they could imagine.\n\nThe shifter grabbed my head and he held it steady as he pried my jaw open, and I choked and tried to spit it out when she poured a potion down my throat, but it went down when he pinched my nose and covered my mouth. Then she started to cast a spell, no doubt to read my memories that the potion had been brewed to target.\n\nI felt more than a little sick, as my memories stirred, and the past came up in crystal clear focus.\n\nGods, I was a such an insecure geek back then, but also one of the hottest girls in school, so it wasn't all bad...\n\n\u2003\n\nChapter Two -- Sexual Awakening\n\nThe door banged open and I sighed in annoyance as I pulled off my headphones and looked up at my father. My adoptive father, obviously. One hundred percent human. Besides my weird ability to make up illusions and even affect the other senses with glamour, I had midnight black hair and sexy violet eyes.\n\nMy dad had light brown hair and hazel eyes, my mom light blonde hair and blue eyes, and my little brother had dirty blonde hair and hazel eyes. I'd figured out I was adopted as a preteen, seven years before my horns had come in and removed all doubt. I had no idea what the hell I was, except I did know in that moment it was that side of me that had made my libido go off the charts.\n\nI was also a virgin, hadn't even sucked cock yet, but I'd done it all in my dreams and even my waking thoughts a thousand times.\n\n\"What, dad?\" I asked a little ungraciously.\n\nHe shook his head, \"Watch it, Lexi. Jason is here.\"\n\nMy eyes widened slightly in panic as I looked at my phone, I hadn't realized it'd gotten that late. It was a Saturday afternoon late that April, and our finals were coming up. I was just as hot as the school cheerleaders, but I was somewhat of a geek, and I was tutoring some people that were failing classes or just wanted to do the best they could their last year on grades, to build up my college fund.\n\n\"Umm, thanks, dad. Tell him I'll be right down, dining room?\"\n\nHe snorted, \"Damned right the dining room.\"\n\nI rolled my eyes, he didn't let me have boys in my room, despite me being eighteen, and still a virgin despite my... lurid fantasy life.\n\nI got up and ran into the bathroom, and I started to brush my hair out and I put it up into a quick ponytail so that it'd stay out of my eyes, when looking down at our texts. I wanted to look my best, Jason was hot and a long-time fantasy of mine, and it was our first tutoring session. Of course, nothing would happen, but that didn't stop my stomach from filling with butterflies, as I straightened my loose t-shirt, and as my mind waffled on my appearance. I ran back in my room, took off my jean shorts, and put on a cute black skirt and halter top instead.\n\nNot that the t-shirt really hid my most salient feature, my rounded D cups were extremely proud and supple, and almost indecent on my petite five foot four body, save my bubbled ass which was just as prominent. I'd gotten more than a few looks from the boys the last two years, the teachers as well for that matter. They were even more obvious now, in the tight red shirt, and showed just enough cleavage to tease.\n\nThere was a hunger in me I'd never given into, because as much as it turned me on it also scared me. I didn't understand why I was so into sex, and perversely it made me fight it. My dad being strict about dating and guys sure as hell didn't help either.\n\nThere was also the matter of growing up in a small town, I knew I couldn't be the only supernatural in the world, but I'd never met another one. If there were any, and there had to be, they weren't here. I lived in a small town in Ohio. My graduating class was forty-six, there were less than two hundred kids in my high school. Point being, I may have wanted to be a slut, but I didn't want the reputation of being one.\n\nStill, it was mostly the fear and insecurity, at what my new side and magic might do during sex. Curiosity was normal I knew, I'd done a lot of research and I was far past normal that way. I'd practiced on vegetables with my mouth, done research on guys and what worked as mental fodder, since they were more visual than females. I was... more than ready, but terrified of it at the same time.\n\nI headed downstairs and smiled brightly yet coquettishly as Jason looked up at me and gave a casual smile of his own.\n\nHe was six foot one, with a medium build, and the quarterback of the football team. He had a strong jaw but otherwise a baby face, and generous lips I'd imagined more than once on several different places on my body. His body was toned, and he had on a casual gray shirt with the school's football team across it. He was wearing loose fit blue jeans.\n\nBut as much as I wanted him and was fairly sure if I gave him a green light he'd happily play with my body, I was afraid of it. Guys were easy as far as I could tell, visual, and I knew that I drew looks, and I could even feel his approval of my appearance in the glance he gave me. The surge of desire that flowed over me made me a little wet actually, that receptive empathy. Sure, I was a geek, not among those with power, but I was as hot or hotter than most of the girl pack on top, and I was more than sure he'd be happy to fuck me, if not date me socially.\n\nMy nature and illusion powers still freaked me out sometimes. Illusions, mess with people's minds, a connection to nature. There was a dark side to that power, a temptation to abuse it, use it to take what I wanted. To fool and manipulate people. The magic wanted it, as if it was semi-sentient.\n\nThen there were the horns on my head. I may not have been positive what they meant, but being a demon was up there in my possibility list, and me being a desperate slut in my head had made me wonder if I was succubus more than once, even if I laughed off the possibility.\n\nI mean, what if I gave in, and Jason died or something? Magic wasn't safe as far as I could tell, and it had a dark side. I'd learned to control my fae side, discipline was paramount, but the magic I'd gained at sixteen terrified me. It had to be controlled, and what if I couldn't control it if I gave into my carnal desires and needs? What if I lost control of it, and at the moment I had no clue what it wanted outside of me to open my legs, often and eagerly.\n\nHe reached behind himself and pulled out his wallet, and said while dropping forty on the table, \"I really appreciate this, Alexis. I know you must be busy this time of year.\"\n\nThe forty was my tutoring fee, twenty an hour really, he needed help in both physics and pre-calc.\n\nI rounded the table and sat down next to him, and said, \"You're welcome, and call me Lexi. What do you want to start with?\" I asked, and immediately blushed at how sensually seductive my voice had just come out. I also felt an illicit thrill at the surge of lust it engendered in Jason, not to mention how his eyes dipped for just a second on my dark tanned creamy cleavage.\n\nDown girl, he's here for your brain, not your naughty tits. Or at least, that's what I told myself. It also helped that my father was in the den, it wasn't like we could get away with fooling around even if we both wanted to. My mother and brother were out, and I had no clue where, nor did I care. I wasn't a selfish person, but I suppose self-involved wasn't all that far from the mark at eighteen years of age.\n\nI cleared my throat, \"Do you want a drink?\"\n\nHe shook his head, \"No, thanks. How about pre-calc.\"\n\nHe was smart, just a little confused, and probably hadn't paid close enough attention in class. The next half hour or so bore that out as we went over the math that he could expect to see on the finals at the end of year next month.\n\nMy mind mostly behaved. I was obsessed with sex at times, but even for me that wasn't all I was about, not by a long shot. And while focused on the math I only entertained a few fantasies, and I was only a little wet and warmed up being so close to him as we put our heads together.\n\nHe was a guy after all, and I couldn't help those thrills that shot down my spine each time his eyes wandered over my ripe body, which usually led to a little moistening and a lurid thought or two. It made me feel sexy, powerful, and excited, to feel that he wanted me. It was also a little more impactful for me because we were basically alone, and not surrounded by other students in school.\n\nBut mostly we were focused on the math, and I could feel him getting a little frustrated as well. Not sexually, but at the math. As far as my body he was just enjoying the view. The attraction between us was there but low key, as we focused on why he was really there and learning the math. \n\nI looked up as my father walked in.\n\nHe said, \"I'll be right outside, doing the lawn. Mom should be home any minute, they got hung up at the mall.\"\n\nI said, \"Good to know.\" Not that I really cared, but I knew I was on thin ice at that moment for some reason, and I didn't want to piss him off.\n\nI almost rolled my eyes at the protective threatening look he gave to Jason, before he turned around and walked down the hall to the garage entrance. It was also when several lurid fantasies passed through my mind, of all the things Jason could do to me with dad outside. I of course, pushed all that down even as my body felt a little hot.\n\nI was in control of myself, and I knew better than to let the magic dictate my actions. It was more than a little frustrating in fact, since for all I knew Jason would be just fine if I gave into it, and probably quite happy at my... personally developed skills.\n\nStill, there was no doubt the sexual tension between us had ramped up considerably with my dad leaving the house. Not just in my mind either, I felt his feelings with that receptive empathy, and I could tell he wanted me. He also thought I wouldn't be interested, I could feel his doubt, and he was also focused on our true purpose of being there together. School and his grades were important to him.\n\n\"Sorry about that.\"\n\nHe chuckled, \"No problem, Lexi.\"\n\n\"Where were we,\" I said almost absently, then we started back in on the current problem.\n\nHe was having trouble with the current concepts we were going over, and I paused for a moment as I felt that earlier frustration and stress rising. Again, not sexual, it was all about the math. My power as a receptive empath wasn't always fully telling, and it was more than possible to confuse what engendered emotions in someone. But I knew if it was about our sexual tension those emotions would've been... flavored by it, is the best way I could express that.\n\nNot to say he wasn't feeling the tension or lust, he totally was.\n\n\"Don't get frustrated, you'll get it,\" I said softly.\n\nHe frowned, \"That obvious?\"\n\nI smiled, \"To me it is.\"\n\nLet him wonder if he had a frustrated tell, I wasn't going to tell him I could feel his emotional state.\n\nHe said, \"I just don't get it, and I'm under a lot of stress, my scholarship to state is dependent on my final grades.\"\n\n\"You got the rest, and this will come to. You're smart, Jason. The stress and frustration just make it harder to learn.\"\n\nHe smirked, \"So you're saying I need to relax.\"\n\nI nodded, \"That's the one, it'll happen. We have more than enough time for you to get this down.\"\n\nI felt a surge of lust from him, as he said offhand, \"As my tutor, you could help me relax. Part of my education.\"\n\nI chuckled a bit sultrily, having no doubts in my mind what he'd meant by that, especially with another surge of sexual tension between us, that I definitely felt. Not to mention the slight nervousness and hopefulness of his tone. He'd gone for casual and confident, but had only mostly hit the mark.\n\nNo doubt the school cheerleaders all hooked up with him, it was no big deal, so the request wasn't all that shocking. He was a man, thought with his dick, and that probably would help him out to clear his mind and help him learn better and retain more for the rest of our session.\n\nI also had a pretty naughty mind, and my thought to mouth filter usually worked overtime. I was also stressed about college, and in affording it. My family wasn't exactly rich after all, but conversely too far over the poverty line to get financial aid, which is why I was doing the tutoring and babysitting I'd been doing for the last two years.\n\nWhich I only mention now to explain why money was on my mind, and had inserted itself into my reply.\n\nRegardless, for some reason the thrill that idea sent through me let the first thought slip out of my head and fall out of my mouth. I can't explain why, but the idea of me relaxing him as part of my tutoring service had struck a chord in me, and with my magic. The thrill it had sent down my spine was more powerful than usual because of it. At the time, I'd had no idea why that was at all.\n\nThere was also the human programmed response, society's brainwashing on what was right and wrong, and all that. I should have been offended by the idea, relaxing him sexually for money would make me a whore, after all. Offended, and insulted, and I was, which paradoxically turned me on even more as desire flushed my whole body along with the shame that reaction engendered in me, which turned me on even more as a result.\n\nNot just a slut, but a nasty whore. Why on earth would that turn me on so much? \n\nIt freaked me out as much as it exhilarated me. The thought of that, the absolutely naughty thrill of that idea, which I'd never once considered before. It had to be something about my magic, something it engendered, a natural truth of my nature that I'd just hit upon for the first time. Either way, all that, from the naughty mind, to the deliciously hot shame that heated my body at the thought of being a whore to relax him so he could learn the math better, all made the lurid comment slip from my mouth in a sultry voice that would've both melted butter and hardened a dead man.\n\n\"I'd be happy to be of service, and give you exactly what you need, but I'm afraid it will cost you twice my base fee for my... deluxe service.\"\n\nWhen the sultry and whorish words caught up with my thinking mind I almost winced, but I managed a somewhat playful wink and coquettish look instead. I was also going out of my mind. Had I really just propositioned a trade of money and sex with Jason Kirkwall, quarterback, hot, and probably the mental fodder for half the ladies Jilling off at night in our graduating class?\n\nMy mind was spinning and fogged with lust at the thought, even as I was almost horrified by the idea based on society's programming. My usual controls on my ridiculously high libido were also shot to hell, it was more lust and heat than I'd ever felt before. That was really confusing to me, just how much the idea of sucking him off for cash turned me on, and even the shame I felt from that shocking potent desire just got me hotter for some reason and I refused to examine in that moment.\n\nHe felt a surge of lust and doubt, like he thought I was probably just fucking with him. But he also doubled down, as if daring me to do it. He pulled out his wallet, and dropped two more twenties on the table, right on top of the other two.\n\nA part of me was terrified what the magic might do to him, and if it was bad I wasn't entirely sure I'd be able to stop it, to control it. But another part of me was too far gone. Too thrilled, far too wet down below, my body was practically trembling with the need to suck him off as my mouth watered at the thought. It was the magic partially, but it was also my curiosity, even pride as I wanted to blow his mind and give him the most pleasure he'd ever felt in a young woman's mouth.\n\nBut mostly it was the forty dollars, he'd paid me for it, and I had to give it to him. It was a shocking thing to me, but I could feel the debt between us, like an imbalance I had to quench by delivering a whole lot of pleasure, and that relaxation he'd paid for. That's where most of my magic, the desire to be a slutty whore, was coming from in that moment.\n\nI moved my chair back boldly, and I slid down to my knees with the promise of pleasure in my violet eyes, as they locked on to his warm hazel eyes. I arched my back slightly and pushed my chest out, even as I got a shy look on my face and looked up at him coquettishly through my eyelashes. I'd done the research, guys loved to look at tits, and they loved reluctant sexy woman who just couldn't help themselves as they gave into lust and the need to pleasure them.\n\nEither way, it seemed to work, as my first practical attempt, the surge of lust I felt from him delighted me, and it sent a thrill down my spine. Even as my hands caressed from his knees to his pelvis, and then worked his pants open as he pivoted sideways in the chair and stared down at me in awe.\n\nI really liked he thought I was hot, but that's all it was, and there was no true compliment in it. But... it still sent a cheap thrill through me.\n\nMy eyes widened slightly in lustful alarm. It wasn't that hard to pretend that emotion, mostly because he was rather large if in the range of average from my research. Plus, it was another visual thing, guys loved to think their dicks were big, and I felt his satisfaction at my partially shocked reaction to his size. My hand reached forward, and I smiled and bit my lip, as I looked up into his eyes as I stroked him softly once.",
        "It was softer than I'd imagined it would be. So hard, yet silky smooth, and the way it twitched in my hand as I let out a soft little moan of enjoyment at touching him also drove me crazy. He was completely mesmerized by me, and whatever he saw on my face, as I went closer, and looked up into his eyes as I bent over and licked the soft spongy and sensitive tip.\n\nThe gasp, the surge of pleasure he felt, the wonder and awe as he looked down on me as I let out a naughty delighted moan at his taste, all fed my libido and I felt my body flush with corresponding heat. Almost as if his lust and pleasure led mine. I felt not just the heat, but my pussy tingled sending gentle waves of pleasure into my body and I knew it wasn't just a little moist anymore. I was soaked, and my labia were no doubt flowering open.\n\nJason said, \"God, Lexi, you are so fucking hot.\"\n\nNot exactly poetry, but to be fair he was just a horny male teen, and I still felt a flush of pleasure at the compliment. Being a whore wasn't enough, I was a hot and nasty whore, and so damned dizzy with lust I couldn't see straight.\n\nI winked up at him, then let out another moan as kissed the tip, then slowly slid my lips around him, swirling the tip almost lazily as I gave the base of his cock a light squeeze and milking twist with my hand.\n\nHis cock twitched hard against my tongue, as I sucked, moaned, and slathered the sensitive bottom of his cock as I took him deeper into my mouth.\n\nMy mind was fogged with lust as I said, almost to the point I felt completely out of control of my actions as I felt his soft silken yet hard cock slide delightfully along my nimble tongue. My tightly closed lips tingled with pleasure as well at feeling him slide through my lips.\n\nBut it was also a transcendent experience for me, I felt like I was where I belonged. Sucking cock, any cock, for money. Even then I knew that wasn't quite right, but it was part of it, whatever secret to my nature that I'd just uncovered and had overwhelmed me with need and overrode my fears, it had something to do with that. I could even see the money, the end of it partially off the table on the corner of my eye as I looked up into his, and it sent an illicit thrill through me again, and I moaned sensually, deeply, and wantonly at the renewed burst of thrilling shame and completeness I felt.\n\nWhen he hit the back of my throat, I just moaned a little louder, knowing it would send delicious vibrations down his cock and euphoria into his body, as I slathered the underside and continued those soft and slow twisting pulls of the base of his cock which milked him teasingly.\n\nOne of the most thrilling things that was a surprise was the intensity of looking up into his eyes. It was so intimate, and it filled me with a feeling of power as I held his pleasure on my lips, tongue, and against the back of my throat, as well as my hands. His moans of pleasure, and the gasps I'd gotten from his lips also turned me on, but the awe and pleasure in his eyes as I never broke that intense eye contact was powerful. He looked down at me like I was a goddess on my knees, and I could feel a real connection to him.\n\nI rose up just as slowly, teasing him with my nimble tongue, milking his sensitive shaft and skin with my tight sucking lips, and moaning in enjoyment at the taste of his precum. \n\nHis whole body twitched with pleasure, when I rose up high enough to once again swirl his sensitive spongy tip, and I let out a delicious gasp of pleasure of my own, as it seemed to send a lightning bolt down to my sex that splintered apart into waves of euphoria that stormed through my body.\n\nHis eyes widened further, as he surely noticed how hot I was for him, how much pleasure I was taking in his, and my sweet moans had him twitching and surging in my mouth already.\n\nI did all of that again, a little faster, both dropping down until he hit the back of my throat, as I slowly jerked and twisted his base a little faster. Each slow and sensual bob of my head a little faster than the last, and the soft wanton moans muffled by his cock were just a bit wilder each time.\n\nAs was his, which was turning me on to no end. How much he was enjoying it and was awed by the pleasure I was giving him so wantonly and sensually. I felt pride in that, and I already knew despite this being my first blowjob just by the look on his face, that I was the best damned cocksucker to ever wrap their lips around his cock. I took satisfaction in that, and all the research and practice I'd done in preparation for this gloriously transcendent moment in my life.\n\nIt was obvious to me my magic had us connected by then. I'd Jilled myself to completion thousands of times, so I very much knew what a rise to ecstasy felt like, even though this one was far more intense than any that had come before. It was evident to me at that point, that I'd be cumming hard when he did, and that sent a thrill through me. So far the magic hadn't done anything but excite me, fill me with a fog of lust and need, and fill me with pleasure as I gave him pleasure. Also, made me a better cocksucker, which was a good thing, since he'd earned it.\n\nI almost creamed at that reminder, how he'd earned it with his forty bucks, making me a fucking whore. Damn, why did that excite me so much? As I said before, it wasn't exactly that, being a whore I mean, but something about the money for this pleasure I was providing with my body really did it for my magic. Made him almost irresistible to me, and I couldn't wait to feel him finish in my mouth.\n\nAt the same time, he'd earned a delicious buildup, and I was going to give him the best that I knew how.\n\nHe was close, and I was still going rather slowly, trying to make it last as long as possible, and give him what he'd paid for. The next time he hit the back of my throat I swallowed and kept going, slid my hand off his cock when my lips touched my thumb, until he was fully buried and my nose hit his stomach. Afterall, I had no trouble at all suppressing my gag reflex, not with my magic making it easy to do. It was something I'd noticed during my... practice.\n\nDeep throating was very visual. A hot thing guys loved from my research, and I found I was enjoying it as well. The feeling of his hard cock stretching my throat. But ironically, it was really less pleasure than hand and mouth working in tandem on bottom and top respectively, and I was doing it to thrill him, blow his mind, and cool him off a little bit as I rhythmically swallowed a few times making it tight and stimulating him further, as my tongue slipped out and licked his balls.\n\nHe gasped, \"Holy shit, Lexi,\" and I smiled up at him through my eyes, obviously my mouth was busy in that moment, but I still hadn't broken my intense gaze up into his eyes.\n\nAfter slowly rising up, as if I was reluctant and in no hurry to have him out of my mouth, I winked and went back to the more intense pleasures of working him with swirls, sucking bobs and teasing tongue, all while jerking and twisting his base. I kind of wanted it to last forever, literally never wanted to stop sucking my first cock. That it was attached to the hot and popular Jason Kirkwall was only a tiny bit of the excitement for me, and that part had nothing at all to do with the magic.\n\nThat part was just me, the young woman Alexis, that was thrilled to be giving the high school quarterback the best blowjob he'd ever gotten.\n\nPoint being, before I got a little sidetracked, was I hadn't forgotten my dad was doing the lawn and could be back any minute, or that my mom was on the way home from the mall. Most importantly, if kind of weird to my head. He'd paid forty for relaxation but he'd also paid for two hours of tutoring. I felt the need to get back to that too, so couldn't just suck him off the whole two hours, or the hour and fifteen minutes that were left.\n\nI worked him devotedly, and with every trick I knew and had read up on to make it good for my partner. I knew what worked intimately and immediately, not just from his emotions, or the moans, or the way his cock twitched, but because the assault of pleasure on my own center. Instant feedback, which let me focus on the techniques he enjoyed most.\n\nThen the moment came, and he grunted deeply.\n\nI moaned, and then trembled, then gasped sharply around his cock. I came so hard I felt dizzy from the staggering pleasure that rolled through my body and made me tremble like a leaf in the wind, yet somehow my body knew what to do. I rhythmically milked his cock with my hand to extend and intensify his pleasure, even as my lips locked around his shaft just past the sensitive head, and I sucked him hard and swallowed, in the same exact rhythm of my jerking and twisting hand which matched his pulses. That way it wouldn't get overwhelming, and I wouldn't waste a delicious drop.\n\nThe thrill of it, as I rode the heights of pleasure with him, staring up into his eyes was wild. If that had been it, I still would've loved it. I'd have taken pride in what an amazing cocksucker I was, and how much pleasure I gave to both of us because of what I gave to him.\n\nBut the usual amazing pleasures of the flesh wasn't the only result of his orgasmic bliss.\n\nThere was also another thrilling rush, an incredible high and feeling of invincibility as a staggering rush of transcendent joy and euphoric power flowed into my body, seeming to ignite all my senses and heighten the sensitivity of my body. Both increasing the pleasure of our shared ecstasy, but also filling me with power.\n\nI sensed through my magic and his emotions it was the opposite for him, but just as profound and enhancing to his pleasure. An intense draining feeling as I swallowed his lustful desire, his stress, and his tension along with his pulsing ropes of seed.\n\nIt felt right, and I knew instinctively this wasn't an evil thing. It wasn't darkness, and I wasn't hurting him, or eating his soul, or any number of other worries I'd had about my nature.\n\nI also sensed I could. I could send my magic up that link we shared and pull more. I could take what I hadn't earned, I could absorb even more power and strength that would be permanently added to my own.\n\nBut at the same time, I was content. My magic was more than sated with the offering it had already received, and the idea of taking what I hadn't earned was... as horrifying and unthinkable to me as the idea of delivering him pleasure for the forty dollars had seemed right and fulfilling to me.\n\nThat was the dark side of my magic, taking what I didn't earn, and stealing a whole life. It was a relief how easy it was to resist. No, not easy to resist, unthinkable and horrific to the point the idea made me cringe away.\n\nBut... nothing about magic was that easy, and I suspected my flinching away from that magic had more to do with the circumstances than anything else. But I couldn't really define it, I just wished there was someone I could talk to about my magic, otherwise I'd have to figure it out as I went.\n\nHe said, \"Damn, Lexi. That was... amazing. Did you just... cum with me?\"\n\nI bit my lip, and said sultrily, \"I did, and you were delicious,\" shamelessly saying the first thing that came to my mind. What was the point in editing my thoughts and speech at that point? Once a man had his dick buried in your whore throat, what would be the purpose in pretending to be coy?\n\nAnd I really had, I'd creamed harder than I ever had before, and I knew my panties must've been soaked through. I winked at him, as I took him back in to suck him clean of saliva and any leftover cum that had leaked as his cock flagged, and then I packed him away with a wickedly wistful look that he seemed to enjoy and that no doubt patted his ego.\n\nWhich was partially the point of that look, but it wasn't entirely artful. I'd really enjoyed it, and I was sorry it was done with. Not just my... succubus side? I wasn't sure if that was what I was, but it seemed pretty damned likely at that point. I'd even fed on him during orgasm, though not in a way that would harm him. It would do as a label, until or unless I found out differently. \n\nPoint being, it was also the woman in me that had enjoyed it. Women liked to do things they were good at, and they liked approval, and I was no different that way. I'd enjoyed being the center of his attention, and his pleasure-addled awe and wonder had been a pat to my ego.\n\nAs to my mutual orgasm, hopefully he'd assume I'd been Jilling myself with my left hand, but in truth all it'd been was his pleasure echoed in me, a sympathetic component to my magic. It also meant I wasn't in any hurry to lose my virginity, if I came that hard every time that I blew a guy I'd be in heaven.\n\n\"Excuse me for a minute,\" I said as I looked up into his eyes.\n\nHe nodded, \"That was amazing.\"\n\nI winked, \"You said that already, but I'm glad to hear it,\" and I grabbed the four twenties off the table as I walked out of the room to change my panties, and not as he'd probably assumed to wash out my mouth. On the contrary, I was enjoying the lingering taste of his cock and seed on my tongue and sensitive lips.\n\n\u2003\n\nChapter Three -- Enthrallment\n\n\"Fucking whore.\"\n\nI frowned at Dennis.\n\nGale said, \"Shut up, Dennis,\" then turned to me, \"You didn't even use enthrallment, at all. Much less a permanent kind.\"\n\nI shook my head, \"I don't discover that power or hellfire for a bit. Not until I needed it. Hellfire is more quiescent in my specific kind, and only comes out in anger and need. Enthrallment... same thing. I only ever used it to cover things up, or... well, you'll see. You sure you don't want to just ask me questions, those are free.\"\n\nDennis snorted, \"You have no choice.\"\n\nI sighed.\n\nGale asked, \"What was that about, anyway. Succubae are seducing killers, not whores who keep their clients happy.\"\n\nI snorted, \"Says you. It's about nature, and balance. Dept, payment, and even Karma. Money is just one form of payment. Love or even simple affection and friendship is another. My magic strives for a balance. Something for something, a balanced relationship. Those that enrich my life, through whatever means including cold hard cash, deserve all the pleasure I can deliver. In consent, of course. I also get power out of it, but not to the detriment of my partner.\"\n\nThere was more to that, a flip side, but I wasn't going to share it. Not yet anyway.\n\nGale shook her head, \"Karma?\"\n\nI nodded, \"Instant Karma. Of course, like a witch that magic can be twisted. Like you can take the left-hand path, I can take what isn't owed. I'm sure you felt that discovery in me, that I could drain someone, I'm also sure you felt how very repulsed I was by the idea down to the bottom of my soul. I've already told you that, I've never taken what wasn't freely given, never consumed a soul. It's very similar to a witch's dark magic too. It's a selfish path, and an increase in power by sacrificing another. That's not all my magic is, and it isn't its natural use either. Just for the corrupt, there are two sides to every magic.\"\n\nDennis said, \"Bullshit, you're an evil demon.\"\n\nI shrugged, \"And shifters that don't control their magic, and let out their dark side? Is a shifter that hunts and eats humans not evil? It's not any different, good and evil are in our actions, not in our magic or nature. But never mind, I know you idiots believe your own press, that I was born wrong. Well, I challenge you to feel that way after you're done raping my mind. Who's evil now? Assholes.\"\n\nApparently, I'd gone too far on that one, because I got slapped hard again.\n\nI glared at him as my head rung with pain.\n\nGale said, \"Enough. We'll be back in the morning to continue this. Get up.\"\n\nI stood slowly, and they led me to a cell. It was a miserable night, but at least I was still alive. I also found out my companions were still alive, and the outpour of tears at that news shocked me. It only occurred to me later on that they must suspect I had a permanent enthrallment on them too, and if that turned out to be true then they could be experimented on like they'd experiment on me. I couldn't think of any other reason why the heartless council wouldn't have put them down already.\n\nThe next morning, I didn't even fight as they poured another memory potion down my throat. There was no point in resisting, when they'd just overpower me and force it down my gullet anyway. Then Gale cast the same witch spell to view the memory as it passed through my mind...\n\nThree years ago\n\nThe last couple of weeks of April that year got a little crazy, although in a good way from my point of view. It was both a bit nostalgic and amusing to watch myself in those early days again, so na\u00efve and joyful in what happened next, but also more than a little insecure, worried, and nervous.\n\nFor those next two weeks things escalated, and I watched along with the council investigators as my life skipped from one sexual affair to the next. Jason had really liked my sweet and talented mouth, so much so that he'd met me several times in an out of the way room at school during lunch for another blowjob. The room for the school paper was always empty during the day, and only used after school for the club, which meant it very unlikely we'd be caught. It also had a couch, which made it very comfortable for my partner. Not to mention an internal dead bolt.\n\nMore than that, which made me even more nervous back then, was he got a handful of his friends in on it. Jackson, Diego, Greg, Marshall, and Pete to be specific. A lot of the worry there was one of them would talk to the wrong person, brag about what a great cocksucker I was as young callow men are wont to do, and it would all get out.\n\nIt also sent my mind spinning with lust, that I had a quarter of the football team hunks paying me for fellatio.\n\nThe thrill of giving out blowjobs to six guys those two weeks, more than once, at forty bucks a pop, which both excited and shamed me. It excited me because of the pleasure and thrill of it. The idea I might be caught, even expelled less than a month before my high school career ended, never mind earning valedictorian and speaking to the class at graduation.\n\nIt could very well ruin my life.\n\nThe shame was two edged over those two weeks. While I was being a good little cock-sucking whore on my knees it added to the thrill of it. The pleasure of it, and the lust itself was enhanced by that shame at what I had so wantonly become. The delicious sensations of naughtiness as I gave those six young men a series of the best blowjobs they'd probably get in their whole lives. But between that, when I was lying in bed at night, or staring out a window in class, it was a negative. The shaming of society's standards, I hadn't yet brushed those away from my life.\n\nIt made me feel dirty, and empty. Don't get me wrong though, even in those moments I didn't want a boyfriend, or a real relationship. High school was all but over, and I needed money for college. Even in my shame all I wanted to do was suck cock for college money, and that turned me on besides, which of course was why I felt shame in the first place.\n\nThen there was the matter of getting caught, which added another illicit thrill to the whole thing. I think a part of me wanted to get caught, and I suspected even back then I had a slutty exhibitionist in me as well. To show others what joys and pleasure I could bring them too... for a price.\n\nOf course, that was just a small part of me. Mostly I was terrified I'd be caught. I didn't want my parents to find out I was a shameless whore. Ironically perhaps, my magic was the one thing I wasn't worried about at all. I thought I understood it at that point, and it seemed harmless enough, and all it did was make me cum harder than a freight train and also increased my client's pleasure.\n\nIt also fed on them, and each time it did it increased my permanent power, the amount I could regenerate and hold in me, became a little more. That part was interesting, and I knew it'd take something like several hundred blow jobs merely to double my current power. It was like a full glass of water that I was adding a small droplet to every single time a client exploded in my mouth. Once that happened, it would take twice as many to double my potential power again.",
        "I instinctively knew I could speed that up significantly by taking more than what was owed, by skewing the balance between us on purpose and feeding on their energy. But I wasn't really interested in that. It felt good to maintain a balance with my clients for one. Secondly, I knew it would be an abomination and it would twist my own soul to take what wasn't owed or offered, and my mind flinched from it. Thirdly, if I fed more, then I would harm them, what I was taking now didn't permanently harm them at all. Lastly, I had no need of more power, I was already powerful enough from what I could figure.\n\nMy ambitions lied in controlling that magic, and using it with integrity, not in gaining more of it. It wasn't even tempting at all, after all back then I'd had no enemies I knew of.\n\nRegardless, it was after those two weeks when things took a turn.\n\nI'd just gotten on the line to pick up lunch, when my phone went off in my pocket. We weren't allowed to use it in class, but they didn't care about lunchtime or between classes, even if it was technically against the rules. So I pulled out my phone and opened up the text, and immediately felt a flush of shame, shock, and fear as I saw it was picture.\n\nA picture of me on my knees, in a perfect profile view, my moistened lips sliding down Diego's extremely fat but relatively short and delicious cock. There could be no doubt it was me, and I looked like nasty slut looking up at him, and I felt a surge of heat through my body that made me wet even as a shock of terror at what this meant went down my spine.\n\nI closed the phone quick and looked behind me, and relaxed. No one had been behind me yet, so no one could've seen the text. There'd also been a message, come to the newspaper club room now. I was frozen in indecision for a long moment, then I straightened back and left the line and headed for the door.\n\nMy eyes found Jenna, my best friend, and I gave her an apologetic look as I shrugged helplessly with a tinge of annoyance.\n\nJenna just rolled her eyes and waved my way. Clearly annoyed I wasn't even going to eat lunch with her first that day, before I disappeared on her. She thought the last two weeks I'd been working on a special project the last half of lunch. I loved her as a friend, but it didn't seem prudent to tell her I'd become a whore for college money.\n\nThe adrenaline hit my blood about then, and my heart started to pound in my chest. There'd been no pictures, I'd made sure of that, and the guys had all promised not to tell anyone. My mind was spinning with lust and fear, and even as my heart pounded and I felt scared my life was about to explode, there was also a thrill to it. Not only did someone else know, they'd probably seen it.\n\nYup, definitely an exhibitionist.\n\nI took a deep breath and blushed at my own actions when I knocked lightly on the door before pushing it open. As if I didn't want to invade their privacy before barging in. Those manners seemed completely backwards in that moment as I walked into the room and closed the door.\n\nThere were three people in the room, two guys sitting on the couch and another young woman over at the computer desk. All of them seniors on the school paper, and I recognized them all of course, with less than fifty in my graduating class. It was a small town, everyone knew everyone. But I didn't really know them, we moved in different circles.\n\nRyan was a bit short, just five foot nine, with short brown hair and brown eyes. He had a slim carriage, but his face wasn't hard to look at in the least. He looked up at me in shock, with wide eyes, and I could feel his lust as he stared at me, and not a small bit of fear and worry.\n\nNot a small point, most of the guys in school wanted to fuck me, so the lust wasn't really a surprise. I was hot after all, sweet beautiful face of an angelic model, and a body built for fucking. \n\nThe other guy was Danny. He was six foot one with a medium build. Quite a nice body actually, but unfortunately, he had a bad complexion issue still, despite being eighteen and a senior. He wasn't ugly though, I had a feeling in two years he'd be a complete panty dropper and stud, but... not yet, and he certainly lacked the confidence to catch a woman's eye because of it. I felt the same lust, insecurity, and fear in him.\n\nThe young woman on the school paper was Bobbi. Bobbi was cute and petite at five foot one, with dark brown flowing hair, dark brown chocolate eyes, and a somewhat curvy body in proportion to her height. She had lovely B cups, and I knew from the girl's locker room they were rounded and pert, and she had a tight heart shaped ass. Her skin was a lovely light golden brown.\n\nShe'd also done videos as well as yearbook from what I knew. From her I sensed confidence, and also more than a little lust. It was her that spoke in a firm tone, obviously taking the lead among the three.\n\n\"Alexis, come on over here and see this.\"\n\nI took a deep breath and hid my fear, and my anger, as I walked over.\n\nShe pointed at the screen, where a video of me sucking off Marshal was playing.\n\nI glared at her.\n\nShe said, \"That's not the best part, or the most interesting. Here it comes. You look so hot cumming while he sprays the back of your throat. Still not the best part...\"\n\nDespite myself, I was getting warm, and more than a little wet as the memory of that encounter filled my mind, not to mention the shame and thrill at knowing someone else was watching it. I was also terrified, which was a wicked combination, and it had my head in a fog of lust and anger both.\n\nThen she paused it, just after I cleaned it up and packed it away, while he was handing me forty bucks. Shit, shit, shit, repeated in my head several times.\n\nI sighed, \"What do you want?\"\n\nBobbi looked up at my face, and her eyes widened.\n\n\"Don't worry, this isn't blackmail... exactly.\"\n\nI laughed shortly, without humor, \"Then what is it?\"\n\nBobbi blushed.\n\n\"Alexis, I've had a major crush on you since the ninth grade. Do you know how hard it is to be the only lesbian in our postage stamp town? Wait, let me back up, so this makes sense. We noticed the middle of last week when we came in the room after classes that it smelled different. We didn't recognize the scent right away, because of course it had faded quite a lot between lunch and after hours. We knew someone had been in there, among our stuff, though nothing was taken. We picked up the same scent again on Thursday, but it was a lot stronger and I recognized it as the smell of sex that time.\"\n\nThat made sense, I'd blown three of them that day in quick succession, and I had creamed in my panties hard three times as a result. That had made the room smell like a damned bordello.\n\nBobbi continued, \"So, I set up a webcam on the computer, and set it up to only record on motion, to find out what was going on. You... fuck, Alexis. You're the smartest girl in school, the most beautiful too, with the hottest body. The fact your blowing guys for forty bucks, on the football team, and no one was talking was a shocking surprise. You know you have a reputation as being unconquerable, half the guys in school have been trying to fuck you their whole high school career.\"\n\nI relaxed slightly and gained a little confidence, at the surge of lust I felt from her as she looked up into my eyes, not to mention her words. I also felt the chemical romance, empty chemical affection but true affection nonetheless, and I realized that Bobbi hadn't been lying. She had a major thing for me. Not just lust at my appearance, but a crush which included not a slight bit of adoring heroine worship.\n\nI chuckled a bit sultrily, while the fear drained out of me at that realization, the fog of lust had almost completely taken over, \"I see. So, what is this about then, if not blackmail, sort of?\"\n\nBobbi blushed, \"Well, I was wondering if you wouldn't mind a similar donation from us, for a similar transaction. I'm serious, Alexis. I've dreamed of seeing your face and beautiful violet eyes between my legs more than once when rubbing one out. If you say no, then that'll be the end of it, we just used the picture to get you here and so you'd know we knew what was going on.\"\n\nShe turned scarlet at that point, which was understandable. She'd just put herself out there in a way that was as revealing as the video we'd just watched. Maybe more so, because the video was just lust and fellatio, she'd showed me her feelings and desires for me.\n\nI also relaxed further at that, they wanted to be more clients? I'd never given head to a woman before, but the idea wasn't unappealing, and Bobbi was petite, sexy, and very attractive in my opinion. It also softened me the rest of the way toward her, and I decided to offer her what I only offered my friends and family.\n\n\"Call me Lexi. The guys?\" I asked as I turned my head around to look. They both felt that lust, a surge of impossible hope, and fear of rejection.\n\nShe waved at Danny, \"Yes, them too. Danny is a virgin, and Ryan's only experience was a horror show from what he told us. They're my best friends, so we talk about everything. Umm...\"\n\nI raised an eyebrow, \"What?\"\n\nShe looked at Danny pointedly.\n\nDanny cleared his throat, \"Do you... would you, consider an upgrade package, of sorts.\"\n\nA thrill shot down my spine at the idea of taking his virginity, of giving him the memory of the hottest girl in school taking that innocence and rocking his world. Although it wasn't lost on me that I'd also be giving him mine, but he didn't have to know that. It wasn't like I still had a barrier, and I'd practiced fucking with vegetables as much as I'd practiced sucking and deep throating. My floor muscles were quite... not normal from what I could figure. They were independent somehow, and quite strong, I could ripple my pussy lengthwise, a wave of contracting squeezing, instead of all or nothing.\n\nThey were also a lot more powerful than a human woman's.\n\nPoint being, I'd done just as much research there, and though I'd never done it yet I was sure I knew exactly how to pleasure a man with my pussy. There was also the matter of the instant feedback, the magic would make his pleasure mine in addition to my own, so I'd know when I was rocking his world.\n\nMy only real concern was pregnancy, as far as I knew I was no more immune to getting knocked up than the next girl. Disease was also a thought, but I'd never been sick in my life. Not even once, so even back then in the beginning I was fairly sure I was immune to that sort of thing, even if my partner wasn't clean that I'd always stay that way. I'd learn in the future that for a succubus neither was an issue, that I could only get pregnant if I wanted to courtesy of my magic which worked similarly to a contraceptive potion, but at that point I wasn't making those assumptions at all.\n\n\"Twice the cost of a blowjob, and you'll have to wear a condom,\" I said with heated promise in my voice.\n\nI chuckled sultrily, I'd never seen someone get so hard so fast, and I was quite pleased with the size of the bulge in his jeans. Danny's face might not have been something to write home about yet, but his body was delicious, including his cock size apparently. The high side of average, maybe a little bigger than Jason.\n\nI was also soaked at that point.\n\nBobbi asked, \"So, will you?\"\n\nI sensed her fear of rejection, and I realized despite my seeming willingness to take Danny's virginity for eighty bucks she wasn't making assumptions about my willingness to lick her out.\n\nI smiled down at her, \"Yes, so how do we do this?\"\n\nA part of me hoped right there and right now, and that they'd all stay to watch the other two. The thought sent a naughty thrill down my spine, I was definitely an exhibitionist. But they weren't magical sluts who got off on being whores, so I figured chances were that they wouldn't want me performing on them in front of the others.\n\nShe said, \"After school, at my house. My parents both work and we can take turns using my room. I... it will be more comfortable in a bed, and I want to see your body.\"\n\nI flushed with pleasure at that, and said, \"Just text me the address, you already have my number.\"\n\nShe blushed. She really was attractive, and I liked her hot little body, even if it couldn't compare to my sumptuously ripe curves. I knew that tastes abounded, and apparently mine included all body types. It was also a new thing for me, I'd never even considered being a with a woman before then, being cock obsessed the last two years. The idea appealed to me and excited me far more than I'd expected it to, when I started considering it.\n\nI was also a little disappointed, the next two and a half hours of school was going to be hell. My body tingled, was flushed with heated need, and I was soaked below. I was ready to fuck and suck now, not later. My pussy was quivering at the idea of finally taking in a cock.\n\nOn the other hand, from sixteen to eighteen I'd learned iron control over my crazy libido through abstinence until just two weeks ago, and it wasn't that hard to push it down. I didn't want to come across as a desperate whore, it was bad enough I was a wanton whore during the act itself.\n\n\"The videos, delete them please.\"\n\nBobbi nodded and turned toward the computer.\n\nRyan grimaced, and said, \"Wait, what if she goes back on our deal? Plus, the videos are hot.\"\n\nA surge of anger went through me. I was an honest whore after all, and I gave what my clients had earned. Plus, the tone in his voice scared me, as if maybe he wasn't quite on the same page as Bobbi was as far as the possibilities of blackmail. That anger and fear stormed in my chest and mixed into something like rage, even as I was shocked by that response.\n\nApparently, I was very proud of my whorish behavior, and to say I didn't appreciate my integrity being questioned on the matter would be a major understatement. I felt insulted, threatened, and full of rage, and in that moment my magic rose up in me. Not to share or engender pleasure in balance, nor to feed, but protectively on my behalf in a way that I'd never felt before.\n\nThe magic silently and invisibly reached out, through my receptive empathy I think, it felt like it was tracing the flows of his emotions like swimming upriver. His body the source of the river, mine the mouth, and his emotions the water.\n\nI glared at him, \"I will be there this afternoon. The videos have to go, and you will not speak of our deal to anyone, or even breath a word that I'm trading sex for money, or that we even had sex. Fuck, don't even tell anyone outside this room that you've ever talked to me, do you understand?\"\n\nHis eyes went wide and his body slack, \"I understand, and I'm sorry.\"\n\nNeither Bobbi nor Danny seemed to recognize their friend had gone unnaturally relaxed in that moment, and both of them were looking at him in disgust for what he'd said. No doubt worried that he'd just ruined their chances to feel my tongue, lips, and pussy giving them pleasure.\n\nI kind of got that, Danny's virginity was on the line and guys could be fired up on that subject, as well as Bobbi's first chance to satisfy her own lesbian needs and with the girl she'd been crushing on for years. I felt their fear at that possible loss, so the slightly unfocused eyes and the way Ryan had melted back onto the couch didn't register as odd to them in the least.\n\nI'd know if it had, receptive empathy would've picked up their shock and confusion.\n\nPoint being, there was no reason to do the same to the other two, as I felt my power recede from Ryan's body and return to my own as that magical connection was removed. Even more than that, I felt their disgust at the idea of trying to ruin my life or holding that over my head. They wouldn't betray me, no more than the six football players I'd been blowing for two weeks.\n\nI also instinctively knew he'd follow that one order until the day he died, and I also knew he'd remember it and that his inability to talk about me would probably confuse him. That instant and lasting obedience to my words without quite understanding why. But it was what it was, and it was the first time I'd used my enthrallment.\n\nIt also explained why this scene had played out in my mind, without actual sex in it, and the magic not skipping straight to the main event at Bobbi's house. Clearly, the magic was making me relive all my sexual conquests as well as all the times I'd used enthrallment. They were probably hoping for some clue or greater understanding on how that power worked and acted, so they'd be able to more easily identify any uses of the so-called permanent enthrallment power.\n\nRidiculous.\n\n\u2003\n\nChapter Four -- A Bunch of Firsts\n\nOn the way to Bobbi's house, I was mentally planning out a future that would never happen, a least not in whole. It'd occurred to me that high-class call-girls or escorts could make a couple of thousand a night. I was a fantastic fuck, beautiful, and sexy, more than a match for most models. \n\nI was also eighteen, and I had no idea how long I'd look that old at the time but that wasn't even on my radar at the time. Point being, once I got out of my town, I imagined I could more than pay for college as an escort. So much so, I suspected I not only wouldn't I have education bills to pay, but I'd have enough money to retire. Not that I would.\n\nMy empathy would also leverage that, I wasn't just a good fuck with a body built for sin with the face of an angel. I could be an incredibly successful seductress using that projective empathy. Reading others made for very easy friendships, it was more than simple to find those hot buttons in others and avoid them. It also allowed me to detect interest, and abandon subjects they didn't care about, or pursue ones they were passionate about.\n\nIt appealed to me, a couple of grand not just for sex, but for a whole date and showing a man a good time, good conversation, and the rest of it. Even to be arm candy for a night, turned me on a whole lot with the usual flush of shame that somehow made it even more delicious of a concept.\n\nThat made the forty and eighty dollars for sucking and fucking that I'd set seem cheap. I was worth more than that, and I knew it. On the other hand, I had no inclination to stop, and there was a reality bar to the whole thing that truly counted. Forty bucks was all a senior in high school could afford to drop once, twice, or for a couple of the football players three times a week, working a part time job.\n\nRich clients weren't an option yet at that time in my life, and I wasn't willing to give up the thrill of it. Plus, forty wasn't all that bad, when all I was giving them was ten to fifteen minutes of my time and a whole lot of pleasure that I shared in. I didn't want to stop, and I wasn't arrogant or stupid enough to demand more. That added up to something like a hundred and sixty an hour, of actual sexual effort I mean, so nothing to sneeze at either.\n\nNo, the richer payoffs for being a call girl instead of a common whore would come later. The idea warmed my whole body, doing that to work my way through college, and perhaps even beyond. I was more than a little wet and ready to go from planning that all out in my head, and in figuring out the research I'd have to do to get it done later.\n\nI wasn't too worried about needing protection, given my discovery of enthrallment. I knew if any of my clients got abusive or refused to pay, that I was more than capable of handling a human male on my own.\n\nBobbi's house was upper middle class, no doubt her parents both had good jobs. The tradeoff was I imagined Bobbi's parents weren't around much, if she was offering up her house for my use as a bordello, at least when it came to her, Danny, and Ryan.\n\nThe bottom level of the house was brick outside, and the top a light brownish red siding just a few shades darker and more subdued than the bright red bricks. It was a split-level ranch with four levels and quite large, from what I could see from the outside, and the lawn was pristine.",
        "Bobbi must've been watching for me, because the petite and sexy dark-haired brunette opened the door before I could knock, with a nervous excitement coming off of her, as well as a shy smile on her face. My mouth watered at the idea of pleasuring her. She also had on a pair of cute shorts and a loose red t-shirt.\n\nBobbi said, \"Come on in. The guys will be here soon.\"\n\nI winked playfully as I entered her house, \"You called dibs?\"\n\nShe giggled in shock, then laughed as I followed her up the stairs, \"Something like that, yes. They'll let themselves in and watch television downstairs, so when we're done, I'll send up Ryan. I'm really sorry about that by the way. He's not a bad guy. I think he just wanted the wanking material long term, and he was too shocked with disbelief that this was all happening. I'm kind of shocked myself, really. It's a little surreal, you know.\"\n\nI nodded, and didn't argue, though the flavor of his emotions had been a bit darker than that, there was no point in causing waves. I'd handled it, and it would stay handled. There was even a perverse thrill and shame in the idea of sucking him off for money, despite his misstep, or perhaps because of it.\n\nPeople were flawed, and he'd be far from the last asshole I'd give the pleasures of my body to for money or trade. As long as the magic was satisfied with the balance between him and I, then I would be too.\n\nI bit my lip alluringly as I took in her room. It was a warm space, light reddish pink comforter, on a queen-sized bed with a gold metal frame headboard and footboard. She also had a pearl white dresser with gold accents on the edges, and designs on the front of each drawer. There were also pictures of her family and her friends, including Ryan and Danny, on the mirror over the dresser as well as on the walls. There were also a lot of throw pillows and stuffed animals. \n\n\"Love the room,\" I smiled and looked into her eyes.\n\nShe looked nervous, and she nodded at the dresser where there was forty dollars.\n\nI felt a surge of distaste at the idea of taking it. So much so that it took me off guard, and it took me a minute to figure out why my magic acted in such a way. It was because of her, she didn't have to give me her money for pleasure, to maintain a balance between us. Her affection and the crush were more than enough to maintain that balance, for the pleasures of my body.\n\nIt changed nothing, yet at the same time it changed everything for me as that insight gave me a much better understanding of my power.\n\nI closed the distance between us and looked down into her wide eyes, as I caressed her face softly. It was new for me, and a surge of excitement heated my body further at the warm emotions I could feel from her. Heat, affection, shock, and surprise at my tender actions.\n\n\"You're lovely, Bobbi.\"\n\nShe was shocked and frozen as I leaned down for a kiss, but I didn't miss her lust, desire, and the flush of warmth that went through her body, echoed in mine, as I kissed her soft silken lips for the first time. She let out a breathy shocked whimper of desire, as I softly caressed her face and sides, and explored her lips with my own.\n\nThat was a first for me too. Not just kissing a girl but kissing anyone with the intention of going a lot farther. The heat went through me like a drowning wave, and my mind fogged with lust as I licked across her bottom lip, and she breathily parted it and our tongues played. I was out of breath myself with desire, and she looked a lot more relaxed when the kiss ended than when it had started.\n\nIt'd been sweet, lingering, and more than a little heated as both our hearts beat faster. I continued to hold her in my arms, and hers were around mine, with our eyes just inches apart.\n\nHer eyes were wide, \"You didn't kiss the others?\" she asked in breathy confusion.\n\nI nodded, \"No. This is going to sound weird, but I can't take your money.\"\n\nShe looked confused, and then worried again that I'd changed my mind.\n\nI leaned down and nipped her lip, then kissed her a bit more aggressively but also teasingly, and she gave out a little gasp of pleasure as I softly caressed the sides of her breasts which were crushed into mine. I felt the shock of it, the intense pleasure she felt at being touched there for the first time by her crush, which also sent a spark of pleasure down my own spine which exploded into a gentle wave of euphoria through my body that echoed hers.\n\nI stepped back, and I started to slowly and sensually take off my clothes, which she belatedly followed even as she stared. Another first, I'd never even showed the others more than half my cleavage, never mind my whole body, my nipples and sex. The idea of Bobbi seeing it thrilled me, but I could still see the confusion in her eyes.\n\n\"That's all there is between me and the jocks I've been blowing, and between me and the boys coming here soon. The money and the pleasure I give them. I know that sounds odd to you, but there is more between us. More than that, I have no idea how to give pleasure to a woman, so you'll be helping me learn that the first time we lie together. There's also your affection, so the intimacy of kissing seemed... natural, where with them it would just cloud the issue. All of that... changes things for me, in a way I'm not sure I could explain so you'd understand.\"\n\nShe shook her head, \"So instead of paying you with money, I'm giving you enough experience to make you comfortable in charging the next woman you sleep with?\"\n\nI shrugged, \"Something like that, but it's more than that too. Guys don't need intimacy like we do, and kissing you felt right to me, and I really enjoyed it. That's separate from that other part.\"\n\nShe bit her lip, \"I wish I'd have gotten the guts to talk to you sooner, maybe we could've been friends. All those lonely nights, and you've been bi this whole time,\" she said rather wistfully, no doubt for all the hot sex we could've been sharing together in the past.\n\nI didn't enlighten her that I'd have resisted it extremely hard before two weeks ago. Besides ruining her fantasy about missed opportunities, it'd also confuse her. Since I could hardly explain to her that I'd been afraid of what my magic might do to my partners before then.\n\nI smiled, \"Maybe we can be, now,\" and I looked her over as she blushed for me. She really was sexy, her tight petite body had lovely curves, and her breasts were average in size but fantastically so, with large dark brown nipples and flawlessly creamy golden-brown skin. Her sex was meaty, on a sexy little mound, and shaved bare.\n\nShe said softly, \"Your body is better than I imagined,\" as she walked against me, pressing our naked bodies together for the first time which sent tingling waves of gentle euphoria through my body and hers. It was intense.\n\nI'd never really thought it through before then, feeling my lover's pleasure was an amazing thing, that had sent me to orgasm with them. But feeling their pleasure plus my own was mindboggling, as my lust was further fogged by desire for her touch and the pleasure that would engender. I'd felt some pleasure before of course, the sweet tingling sensations on my lips as they slid sensually along a hard cock, and across my tongue. Those things had felt good to me as well as delightfully sensual and wicked, but her naked body and tits pressing into mine was a whole new level of shocking pleasure I'd never felt before.\n\nI mean from another, obviously. I had felt more pleasure while Jilling myself off, but it was a shocking contrast and so much more potent with a partner.\n\nWe kissed and caressed each other tentatively at first, my own deep moans of sensual approval and pleasure encouraged her to touch me as freely as I was touching her. The lustful affection and headiness at touching my body and being touched by me so tenderly rolled off her in waves, which increased my own excitement. We were both soaked, by the time I got her over to the bed and onto her back.\n\nAnother thing that women needed more than men, foreplay, and our kissing and body stroking session had been more than enough to get her going.\n\nI took my time, kissing down onto her neck, and slowly kissing down her body. It was shockingly intimate, far different than just whipping out a cock and kissing that and a man's balls. I was also learning a lot about pleasuring another woman, outside of the basics I knew from pleasuring my own body of course. I was gentle and teasing on her breasts, just the gentlest roll of my fingertips, or nibble of my teeth had her panting in excitement, and it had her tight petite sexpot body writhing under me in pleasure.\n\nI started to play with her sex with my fingertips, her clit was also more sensitive than mine, sending incredibly powerful shocks of pleasure through her body from a mere slight pressure and circling motion which caused a rubbing and swirling sensation around it underneath the hood of her folds. My direct connection to her libido, meant that delicious pleasure echoed in my own body, and her emotions echoed in my own mind. That all together made it child's play to give her the most pleasure she'd probably ever felt in her life.\n\nThe learning curve was ridiculously short for pleasing a woman partner, for what I was. Which told me my power didn't want me to take the money because of her affection, her crush on me. That was her gift to me, along with the pleasure she was sharing and the feeding I would receive for her cumming for me. That was the balance, and what earned her the right to feel my pleasure, just her affection, open heart, and deep desire for friendship.\n\nIt wasn't about me not knowing how to pleasure a woman yet at all, because it turned out I did know how. It was as natural and easy as breathing.\n\nHer whole body bucked under me, and I backed off, keeping her on that edge, and I let her cool off slightly as I took my hand away and slowly and sensually started to kiss my way down her body. Partly to extend her pleasure, but partly because I knew one orgasm feeding every day or so was all I could risk. If I fed from her more than once in a single day, it would hurt her.\n\nAnd I wanted to taste her badly. My fingers were soaked, she was so wet for me, and her breathy pants in anticipation and a low-level pleasure as she cooled just slightly backing off from that ledge, was just as delicious to me as the feelings that she was sending me in that moment. Deep affection, wild joy and wanton abandon at surrendering her body to me, and more.\n\nJust like I did for the guys, I moaned deeply in pleasure and enjoyment the first time my tongue licked up her slit, and I couldn't help but suck on her meaty folds playfully and lightly scrape my teeth as my tongue quickly swirled her clit. She was delicious.\n\nHer whole body bowed tightly, as she grabbed my hair and ground up into my face.\n\nI moaned in pleasure, and started to lick her folds, ignoring her clit for the most part, and only used single quick and light swirls of my tongue on the rare instances that I did give that sensitive nub some attention. I also slid two fingers into her very tight yet slick sex, and I started to work her in tandem with lips and fingertips, finding all her spots and what she liked best through my instincts and the feedback of emotions and pleasure in my own body and mind from hers.\n\nThe intimate eye-contact was also intense and not to be discounted. The mental pleasure was just as intense for me as when giving a man a blowjob, and I looked up at her with lust and enjoyment in my eyes, as she looked down in mine in wonder, affection, and a building pleasure.\n\nOther thoughts intruded on my mind-bending bliss, pleasure, and lust as I licked out a woman for the first time. Thoughts that stemmed from my earlier reluctance to let her cum on my fingertips, before I'd tasted her. What if I did have lovers one day, a serious relationship? Could I really only give them one orgasm a day? I couldn't imagine that, because I was capable of multiples, and guys never lasted long on the first round of the day from the research I'd done. Plus, if I was with another woman as a lover, and if she was capable of multiples as well, then I could never give that to her.\n\nThat seemed... depressing, even though in the moment I had no real desire for a long-term dating relationship. Bobbi was a pleasant surprise that had been interjected into my sucking and fucking for college money focus. Not enough to make me want her as my girlfriend, not out of any lack in her, but simply because high school was almost over, and we were all about to go our separate ways in three months. But... the idea of Bobbi and I being friends with benefits for the last month of school and then over the summer before we all went off to college did appeal to me.\n\nAlthough, I wasn't sure she could handle that, without falling in love with me. But with my empathy I'd be able to cut it off before it went that far if I had to.\n\nIt was more than just the wonder at the pleasure I was giving her, or just the pleasure we shared. Her affection was a heady thing as well, and my magic seemed to think that earned her all the pleasures I could give her. There was also personal taste of course, my thoughts as a woman, since I wasn't a slave to the magic. But as far as I could tell, Bobbi was a good person, and one I'd enjoy spending time with, not just for hot sex either.\n\nHer panting grew wilder, and she seemed incapable of holding her body still, as she writhed wildly under me right on the edge of pleasure. Her moans, gasps, and sighs of needy pleasure were all heady, and now she was writhing and whimpering in blissful pleasure right on the edge.\n\nHer eyes were wide with shock too, and I knew she'd never experienced such dizzying heights before.\n\nAs I pushed her over, by fingering her a little harder while I sucked in her folds and circled her clit one last time, it was also another first when I held back my power. It reached for her, and I denied it with a powerful surge of focus, despite the fact I'd been thrown over into a potent and sympathetic orgasm.\n\nThe power obeyed me without all that much trouble, as I rhythmically licked her through both our orgasms. I suspected that would not always be so, but with a lover that had earned my pleasure with giving emotions and affection would keep my semi-sentient magic quiescent enough to manage even in the throes of bliss myself.\n\nEven I didn't have perfect control over my body while lost in the throes of bliss, but the simple repeatable action of licking up her folds in harmony with the explosive waves of bliss inundating my body was more than possible, no more difficult than jacking a guy's base while sucking hard and swallowing anyway. Ironically perhaps, it wasn't an entirely selfless act for me, because the pleasure that action caused her also extended and intensified my own orgasm.\n\nWhen I was sure that the magic was mine to control, even in the midst of orgasm, I let it go. I let it feed and the power exchange as I fed from her rolled us both into a higher and more potent orgasm, and at that point I just held on tight as we were both swept away powerfully by blissful rapture.\n\nIt was a practical choice, to release my magic in that moment. I didn't know if she was multi-orgasmic yet, for all I knew she'd be way too sensitive to have sex again for an hour, or even longer. So it made sense to me, always feed off that first orgasm, and if I wanted to give out more pleasure, then I could suppress the power for the additional ones that day.\n\nThat discovery made me feel a whole lot better. It was also two new firsts in that moment, not one, because It was the first time I'd held back my power and also the first time I'd shattered a woman with pleasure and felt her body tremble on my tongue while her sex quivered around my fingertips.\n\nWhen she came down, I kissed her sex gently which made her body flinch in a powerful aftershock, then I sensually and slowly kissed my way back up her body.\n\nShe looked down at me in awe, her eyes locked on mine, as I made my way back up. She bit her lip in confused awe, as I cuddled with her and caressed her body softly, only teasingly touching the sides of her breasts. My smile and little sigh at her playing with my body and breasts seemed to embolden her, and she claimed a soft lingering kiss with a breathy and sexy sigh of her own at the end of it, while she wickedly twisted my nipple, drawing a panting gasp from my lips.\n\nShe asked in breathy confusion, \"What... what does this mean?\"\n\nI said softly, \"I don't know, this is new for me too. I had no idea I was bi until today. I'm not going to stop blowing the guys for money, nor will Danny be the only one to fuck me if the others come up with eighty bucks. I'm not looking for romance either, in three months we'll all be getting out of here and going to different colleges. But if you can handle it, I think I'd really enjoy your friendship over the next three months before that happens.\"\n\nShe bit her lip doubtfully, but there was hope in her eyes, \"Friendship?\"\n\n\"Talk, text, hang out, give each other incredible orgasms.\"\n\nShe giggled at that last since I'd sounded more than a bit tentative myself, and I let out a sultry naughty giggle of my own.\n\nIt was new ground for me, and casual or not it was a sexual relationship, and she would be the first. My first long-term lover. I already knew it wasn't an option for the guys, they'd either use me for free sex or they'd get attached like puppy dogs, neither of which would I nor my magic allow. Not all men probably, but the ones I was blowing in that moment. Better to keep them at an arm's length business relationship, money and pleasure made up a simple and a clear-cut boundary.\n\nBut Bobbi's warmth and affection, and even her neediness for intimacy with a woman had an effect on me. Plus, she was a good person, that kind of thing was easy to tell with receptive empathy, plus there was the fact she hadn't tried to blackmail me for sex.\n\nShe kissed me softly, \"I don't know. I'd really like that, but it's odd. I've never met anyone like you before, and you seem shockingly blas\u00e9 about sex. You know I have a thing for you, and I understand and can deal with that not being... exclusive. From my end it seems like a great deal, I get to get to know you, be friends, and share pleasure in a way I've been longing to with the one I had a crush on for the longest time.\"\n\n\"But?\"\n\nShe shrugged, \"I'm having trouble figuring out what's in it for you. You surprised me, by refusing to take the money. It all feels strangely surreal to me.\"\n\n\"I have an extremely high libido. Like, drunk guy level high.\"\n\nShe giggled.\n\nI shrugged, \"It's true, it's why I didn't date and part of the reason I didn't have sex until now. It wouldn't be wrong to call me a nymphomaniac, except I do have control over it. I also need money, and I get a thrill out of giving guys pleasure, so it seemed like a good thing to me. As long as it doesn't get out that is.\n\n\"But, to answer your question, what's in it for me? I enjoy your presence, I find you attractive, and I love sex. It seems like a no-brainer to me, to want to be friends with benefits and get to know you. At the same time, the last thing I want to do is hurt you. If you can't handle a friendship and casual sex, then I'll leave you with this lovely memory of today and back off.\"\n\nShe asked doubtfully, \"I'm attractive?\"\n\nI nodded, \"Very. And sexy as hell. Passionate too, and as I said I like your presence, you're a lovely woman, Bobbi.\"\n\nI could feel she wanted to say yes, but there was also a level of shocked disbelief. She just really couldn't see it, that her crush and the hottest girl in school was thinking she was attractive, sexy, and a pleasure to be around. It was a fast judgement, but it was also a sure one and not just based on the pleasure we'd shared. With my receptive empathy the assholes and drama queens couldn't hide from me behind false sweet faces and actions, and Bobbi was the real deal.",
        "But besides the disbelief that she held along with a too good to be true feeling in her, I also felt delicious hope and not a little bit of lust at the idea of me being her hot sex toy.\n\nShe kissed me lingeringly again, and said, \"We can try it, I'd really like that. The guys can wait a little longer. Your head between my legs wasn't the only thing I've been fantasizing about the last few years.\"\n\nThe surge of lust, and the way she pushed me onto my back and kissed down to my breasts left no doubt in my mind she'd been fantasizing about eating me out and pleasuring me as well. The surge of lust and enjoyment as she nibbled, kissed, licked, and massaged my breasts was just further proof of that.\n\nShe was truly blissed out and lost in a sensual haze of lust, at exploring my ripe and lushly sexual body.\n\nWhat followed was another first. Not just the first time a woman had pleasured me, but the first time anyone had pleasured me and brought me to orgasm. She was eager and more than full of lust and joy at playing with my body, and my gasps, squirms, and panting moans turned her on and thrilled her as much as hers had thrilled me.\n\nShe was inexperienced, but more than eager to take my moaning words to heart, as I told her to be rougher or softer in various places, and I encouraged her to keep doing something when she'd found a sweet spot that sent powerful waves of euphoria flooding through my body.\n\nIt was a hell of a thing, cumming on her fingertips and tongue was so intense as I pinched, pulled, and rolled my own nipples. I creamed all over her lips and chin, to the point it was dripping down her neck. It was a hell of a moment in my life, and I'd never forget it.\n\nMy magic didn't react at all either, apparently it only fed when my partners were cumming. I'd known that instinctively already, but that was the first proof I'd had of it, because every time before that I'd been coming hard in sympathy to my partner's orgasm.\n\nMaybe the magic required that sympathetic connection as we'd orgasmed as one.\n\nShe looked smugly joyous, and of course quite affectionate, as she kissed me with my own taste on her lips and tongue.\n\nI couldn't help but return some of her affection at that point. But that didn't change my mind on any of it, or how I saw it. Unlike most women, I could divorce sex, pleasure, and even affection from my decision making. Sure, I would miss her if I never saw her again, but my libido would never compromise me and make me do something stupid.\n\nThat didn't mean my heart couldn't break.\n\nShe was almost regretful as she got dressed, and she put her money away before sending up Ryan. That was mixed up with her doubts that I'd meant what I said, the regret it was over I mean. But I had meant it, and over the next two weeks we'd be chatting, texting, and hooking up often.\n\nRyan also gave me a first, in that he was the first to be blown for forty bucks, while also seeing me buck naked. I also let him play with my hanging and swinging tits as my body was kneeling on the bed perpendicular to his. It was also a nice surprise, because he had the biggest cock I'd seen to date, at least in real life. He was a hung nine inches, and fat around.\n\nMy mouth was in heaven, as I licked, sucked, and kissed that cock.\n\nIt was a wicked delight to fully take him in, and I imagined my neck was stretched out lewdly as I swallowed around that fucking monster. I almost gave him my virginity, just to feel that long and fat cock stretch me out so deliciously.\n\nBut the bastard didn't deserve my pussy. He was a selfish asshole no matter what Bobbi thought, and he'd only paid forty bucks. So, I gave him what he'd earned, and I swallowed his load down my slutty throat as I came in sympathy, and then sent him on his way. I slipped the forty bucks into my jeans pocket, before Danny got up there.\n\nDanny was nervous as hell, and while his dick wasn't near Ryan's size, it was hardly small and above average at seven inches and delightfully thick.\n\nI made him take me doggie style, so kissing wouldn't even come up, and there'd be no intimacy even in eye contact. Regardless, I worked him hard, pulsed, fluttered, squeezed, and milked him with rolling squeezes and grinds along his cock. \n\nIt was also a hell of a lot of pleasure for me, as I was stretched tautly around a real cock for the first time. Every time that I squeezed, ground, and milked him he let out a gasp of pleasure that drove me to greater efforts. I rocked my body back into his, meeting his thrusts, and I rolled my hips to milk him and make it better for both of us as he slammed home into my sex time and time again.\n\nI'd said it before, but it was worth saying again, the act of fucking was double the pleasure, as I was drowning in the feelings of his sensitive cock sliding in and out and being hugged by my sex, while I also felt the pleasures his cock was having naturally on my slutty body. It was... incredible, and I fucked him with a wanton abandon.\n\nI suspected he must have blown at least two loads that day with his hands, to get his money's worth and so he wouldn't be premature. It wasn't quite a marathon, but for a virgin he still managed to pound my pussy for a good fifteen minutes before I'd extracted his cum. When the moment came, I squeezed around him as tightly as I could, and shook my lower body, giving him an intense and fast short milking action on his cock to extend his pleasure, and not so incidentally mine.\n\nThough even without that part, I'd have done it anyway, I thrilled in delivering pleasure to the men and women that had earned it from me.\n\nPlus, he'd made me cum twice, it'd been my third time drowning in heavenly bliss when he'd taken his pleasure.\n\nIt was another first that day, the only hole left on my body that was still virgin was my ass. Though, I hadn't let anyone fuck my rounded and proudly supple D cups yet either. Mostly because they hadn't asked.\n\nHis awed wonder as he got dressed at how wanton and slutty that I'd been for him, filled me with both delicious and embarrassing shame, but I just gave him a salacious wink, and patted his ego and made him feel like a fantastic lover even his first time. It was my nature, despite the surrealness of it and shame from society's standards that still had a hold on me.\n\nHe had no doubts if he got another eighty dollars together that the hottest girl in school would eagerly spread her legs for him and cum wildly on his pounding cock. And he wasn't wrong, because I totally would have.\n\nThough, that shame was lessened after two weeks of it. I kind of enjoyed it, shamelessly if I could say that. Shamelessly enjoyed the shame? It was thing. I supposed what I mean is I enjoyed the shameful feeling, and didn't feel more shame at taking enjoyment in it? If that makes sense.\n\nBobbi was surprised when she came back up after the boys left and found me still naked in bed. That didn't stop her from smiling shyly and stripping down as she rejoined me. The rest of our afternoon was debauched, as we pleasured each other until almost six at night between rounds of talking and getting to know each other. \n\nAt that point, the vision skipped forward, but I remembered that night fondly, as I shared dinner with her and her parents, and we spent even more time hanging out afterwards without sex at all. In a lot of ways, Bobbi was my first true lover, and I'd always remember her with fondness, though... our affair had been a lot shorter than I'd hoped it would be.\n\nThe next two weeks went by in similar visions. I had eight men as clients now, and only two more of them fucked me once, but they all enjoyed quite few more blow jobs those fourteen days. I'd earned two and a half thousand dollars so far, just from blowing those eight guys an average of twice a week for a month, though some more than others, and some less, it averaged out.\n\nI'd also hooked up with Bobbi five more times, for marathon sessions after school, as well as just spending time together, but the visions didn't show the soft stuff. All my jailors cared about was enthrallment and sex, and the circumstances and lead-ups to them.\n\nLastly, I slowly stopped feeling shame at all over those two weeks. It was just natural, and my nature, and I grew to accept it despite my upbringing and society. I was beyond that after a month. It was still a thrill, every single time I took a cock into my mouth it felt like coming home, and like it was what I was made for. Giving pleasure with my body, and in gaining something in return for that pleasure. The idea of getting caught scared me, and I loved sex. Despite how many blow jobs I was giving out for cash, and my tryst with Bobbi, I was still Jilling myself off several times a day. Of course, they didn't see that either, since they didn't care about self sex.\n\nI truly was a nymphomaniac, just a very disciplined one. I edited my thoughts and speech throughout the day. No one but my customers and Bobbi knew what a sex-obsessed whore I was, or that I always suppressed the innuendo, sultriness, and wicked words that found their way to my tongue but never fell off of it outside of my trysts.\n\nLastly, I was feeling very confident I wouldn't get caught. The idea still scared me, but I really didn't believe it would happen at that point. I was confident. The eight guys and Bobbi were surprisingly discrete and dependable. There was also just one more week left in the school year, our last day in the third week into May before I graduated. It seemed unthinkable that I could be caught, or that my whole life would be blown up. Just one more week to go.\n\nBut I was wrong.\n\nIt was a week that would change my life forever, and it'd blow up all my life plans.\n\n\u2003\n\nChapter Five -- Nightmares\n\nPresent\n\nInvestigators Dennis Franken and Gale Francis both looked at me in disbelief as the visions stopped. It was later early evening that day, and there was a big dinner laid out on the table in front of us. We'd skipped lunch. It'd literally taken all day long to cover all the visions and sex I'd had that month.\n\nAnd that's only because things happened faster in the mind, otherwise it'd taken longer.\n\nI frowned, \"What?\" as my cuff chains scraped across the table as I scarfed up roast beef sandwich and a bottle of water.\n\nDennis growled, \"You're evil.\"\n\nI felt a nagging doubt in his stubborn certainty, and I assumed they were referring to all the recent emotions and realizations I'd had, including my warm nascent affection for Bobbi that was undeniable. There was no way to fake that, even if I could lie to a shifter which I couldn't, I couldn't change my memories.\n\nI snorted, \"Keep thinking that, and lying to yourselves that us half-demons are born wrong and damned. Who knows, maybe I'll become evil later so you can feel better about yourselves. After all, we still have over three years' worth of sex to get through. Maybe my power will corrupt me,\" I winked playfully, then took a bite of the sandwich.\n\nGale said, \"I expect we will, everyone is the hero of their own tale. I have no doubt you are corrupted, and you're just self-deluded. All half-demons go bad and try to start the apocalypse.\"\n\nI shrugged, \"Except I can't open gateways, that's not a skill a succubus has, just like the normal warrior demons that can do that don't have receptive empathy, enthrallment, or the ability to feed through sex. So, how am I supposed to end the world, exactly?\"\n\nI frowned, as I realized I could. Though I never would. It'd be easy to enthrall my way into the White House and start world war three with a nuclear launch. Of course, any vampire or witch could do the same with compulsion and mind spells respectively, so that didn't prove a thing.\n\nGale narrowed her eyes, and it looked like Dennis wanted to slap me again, so I finished my sandwich and the next one without opening my mouth again. I was starving. Plus, I already had a headache, from not eating all day plus the memory recall potion probably had side effects.\n\nI could feel their doubts, but also their certainty and brainwashing from childhood that all half-demons were evil. The truth was that we weren't, we were mortal, just like every other race. God hadn't judged us either way yet. Only the angels and the fallen ones were already judged and had earned heaven or damnation. I was no more born evil, than the corrupt and powerful Nephilim were born good.\n\nBut there was no way to prove that. Outside of the fact I could bear the touch of holy ground and holy water, when fallen angels and demons could not.\n\nThat said, I was far from sweet and light. My life had gotten hard after high school and that whole disaster at the end of my scholastic career. But I'd never used my magic to steal power, or to sacrifice or kill others for more power. Still, I'd done a few things I wasn't proud of, in the name of survival and even to flourish in my dangerous supernatural world.\n\nBut even that benefited the humans to an extent. The potions I made for the black market were as good as the ones rubber stamped by the FDA, and they worked as advertised. I had integrity, and even outside of sex my magic urged for a balance in relationships. My customers got what they paid for, always, sex or healing potions, corrective vision, healing blindness, removing cancers, performance enhancers like the blue pill, and many others that were less... restricted, but still illegal for me to sell because I didn't have a council's green light and approval to sell them.\n\nGale sighed, \"I'm not happy about another few weeks of this either. It'll take at least that long to catch her sex life up to present, but we have no choice.\"\n\nI bit my lip, \"You could always just take my word for it.\"\n\nDennis snorted violent, \"No we can't, but stop tempting me.\"\n\nI rolled my eyes. Of course they couldn't, they were under orders from the council to see this through.\n\nAfter dinner they took my back to my cell. I missed my lovers, though I was close enough to feel their despair and other emotions, I couldn't see them in the other cells around me. They were reinforced steel walls, with a heavy steel door keeping me in. Which was a waste, I had no access to power here.\n\nI was also tired after reliving all those memories of my first month as a whore, and it wasn't long before I fell off into sleep, and a nightmare of the afternoon I'd been taken came upon me.\n\nTwo days ago...\n\nThe magical exhaustion made me sway slightly on my feet as I looked with a certain satisfaction at the potions on the table. There were five hundred vials of healing potion, at a thousand a pop that was a cool half million, for thirty-six hours of grueling work. It wasn't something I did often, I hated feeling helpless in our dangerous world, but the deal had been too good to pass up and I'd had to have them ready by that night or the deal would've fallen through.\n\nIt was also temporary, I'd regenerate my magic in mere hours, and even faster if I laid with one of my lovers. I was the leader of our little four-person supernatural group, but no one else in supernatural society or human society knew that. Half-demons were dangerous, and while I could pass for half fae and disguise my demon side I'd decided to make Gabby the face of our little group, and deal with our supernatural clients.\n\nThat also freed me up to pursue other things. Gabby dealt with setting up sales, meets, and I was just her alchemist, as far as everyone else was aware. It kept me free to act, and out from under the microscope. This order was unique, in that I usually only brewed less than two hours a day, which left plenty of time to burn watching out for my group, and other things.\n\nUnrelated to the supernatural world, I was also one of the highest priced call girls in Reno, and more than that, ever since the humans had become aware of the supernatural two years ago, I'd stopped hiding my fae ancestry. The humans really got off on the exotic ears, and it'd made my price even higher. I had three steady lovers, the only three beings on the planet I trusted with my life and the truth of my half-demon ancestry, but I had a long list of regular clients as well.\n\nJust from being a call-girl, I almost cleared two million a year, after taxes. At five thousand a night, I only earned about a quarter of that for the hundred nights or so a year I worked. One out of every three nights, two sometimes three times a week. The other seventy five percent came from outrageous tips and gifts from the very rich men I was arm candy for.\n\nI could easily do just that and survive on my own, but surviving wasn't enough. I loved my three lovers, and they also needed to feel useful in this life past cooling my libido the rest of the time. So we worked in the black market, and hid from the councils and authority.\n\nThe supernatural world was split into upper, middle, and outsider classes. The upper class had their heads so far up the ruling council's collective asses that they couldn't sneeze without permission. But they were also afforded the rich contracts and advantages, not to mention borrowed authority over the rest of the supernatural world.\n\nThe Nephilim ruled with an iron fist. The upper class was segregated, with the exception of that joint council at the very top in each city that was run by the Nephilim. The vampires and witches lived in covens in the cities, and all had clearly delineated territories. The shifters lived in packs outside the cities, as did the fae in mounds. There were no half breeds or rogues accepted into those upper-class groups.\n\nThe middle class was very similar, they just had slightly more autonomy and less authority, as long as they didn't cross the council or upper class they were left alone. And by cross I didn't mean just break the law. I meant being competition for customers, monetarily, socially, and even simply saying a bad word about them.\n\nThe outsiders were half breeds, or disgraced witches born on the wrong side of the sheets, or those that wanted nothing to do with the council and went their own way that didn't violate it. People that weren't welcome anywhere else.\n\nIronically perhaps, like the head council on the top, the outsider groups on the bottom did intermingle the races as well. It wasn't odd for a group of supernaturals to band together. Witches, vampires, fae, and shifters, all living together in protection. Those groups however had limited opportunities, on selling the less lucrative potions that weren't heavily controlled and only approved for sale by the upper-class assholes. \n\nIn short, it wasn't odd for one outsider group to wipe out another, to preserve their business and opportunities.\n\nThat wasn't something I countenanced aggressively, though my group had destroyed three others in self-defense the last few years.\n\nIn short, despite all the money I was making for me and for our group, the world was very hard and dangerous. We had to worry about outsider groups wanting to kill us and steal what was ours, and we had to worry about gaining the notice of the councils, who would kill a group with a hunting team for almost any reason or justification they could think of.\n\nIt wasn't out of a sense of justice either, the councils were all about reputation and perception. They really didn't want the humans to know just how violent we were, so they were more than happy to kill at the slightest violation of their many rules.\n\nFor instance, if we defended ourselves from another outsider group, and killed them and got rid of the evidence. A council team would clear us after investigating. But if we did that same exact thing even in self defense, but a human saw it, or it somehow made it into the press, we'd be killed out of hand. For making them look bad.\n\nThe supernatural world was complicated, hypocritical, and extremely violent.\n\nOf course, being in the black market, we had to completely fly under their radar in that part of our lives. If we're caught, we either flee or we die, and I really didn't want to have to flee. We'd have to start all over in another city if we did, and it'd taken time to develop my reputation and client list as a call-girl, not to mention the contacts Gabby had groomed for selling our illegal wares."
    ],
    "authorname": "Magicwrtr",
    "tags": [
        "compulsion",
        "enthrall",
        "magic",
        "power",
        "slut",
        "succubus",
        "whore"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/succubus-awakens"
}