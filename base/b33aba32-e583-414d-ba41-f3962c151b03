{
    "title": "Endangered Ch. 10",
    "pages": [
        "Editor's note: this story contains scenes of incest or incest content.\n\n*****\n\nThanks to Lunarlilith, GCMIVB4, CaptObvious, and Truehearts for editing assistance. \n\nFair warning, this story contains themes of pseudo-incest. \n\nEnjoy. \n\n*** \n\nCool, clear water lapped around his ears as he floated, basking in tropical sunshine. He could feel it, hot on his shuttered eyelids, perfectly warm on his pleasantly full tummy. He breathed deep of the humid air, relaxing as the ripples from Kat's swimming bobbed him listlessly around the huge pool. The inflatable lounge beneath him struggled to keep his bulk afloat as he half dozed, a lazy lizard to his core. \n\nAs it turned out, Colonel Otero's family was incredibly wealthy. Their team was now enjoying their second, and last day of his hospitality in what Chris could only describe as a mansion. \n\nAfter the scare he'd had at the village, his encounter with the supernatural, the Colonel would not take no for an answer when he insisted that they stay for at least a few days while they recovered. His aging mother was the head of the house, but she was pleased enough to host her son's guests. Even if they were foreigners, her son had impressed their importance upon her, and the matriarch only seemed to emerge at dinner anyway. \n\nThe Colonel was in awe of Chris and showed a keen interest in learning more about the concealed magical world. His own government had told him only the barest details before their arrival. After witnessing the dragon in action, he lamented the poor state of relations between his own country and its Beings, expressing a desire to do something about it. Therefore, while they were his guests, he plied them for every scrap of knowledge they could, in good conscience, reveal. \n\nAnd what a place to be a guest. Secluded in the forest on a small rise above Manaus, the eighteen bedroom mini-palace was as ostentatious as they came. Complete with manicured gardens, a stable, a gigantic pool, sprawling greens, and a full staff of over twenty servants, it boggled the farm-raised young man. Actual servants, wearing black and white uniforms, deferential, and attentive. \n\nMichelle had had to stop him from confronting Otero about it, explaining that while it might offend his sensibilities, such things were still considered normal in this country. Chris didn't believe it at first, but the family had been with the Oteros for several generations. She also assured him that from what she'd seen, the servants were treated very well. Chris had to admit that they seemed happy enough, laughing and joking in Portuguese as they went about their duties. They even had their own complex of cute houses at the rear of the estate. \n\nIt was just such a culture shock to be bustled politely but insistently away from the kitchen when all he'd wanted was a glass of water. Said glass was, of course, delivered a few minutes later by a fetching young woman. It was accompanied by a pitcher of iced lemon water, a selection of pastry goodies, and an exquisite sample of diced tropical fruit. \n\nChris lounged in the midday sun, so relaxed that his beer slipped from his loose fingers and upended in the water. Instinctively, his body lunged after it. Too late, he realised his mistake as the protesting inflatable made its escape, skittering out across the water to freedom as he was dumped unceremoniously under the surface. He spluttered to the top, beer bottle in hand, but the beverage ruined. \n\nKat laughed at his predicament, bobbing past him as her lithe, dark body cut through the water with a powerful breaststroke. \n\n\"Get me one as well, would ya?\" she asked. \"I'm almost done here.\" \n\n\"Sure.\" Chris watched her glide away, distorted by the rippling liquid. The yellow of her boyshort-bikini looked fantastic against her dark skin. The soldier was in phenomenal shape. \n\nHe rose dripping up onto the ochre-dyed concrete, surrounded by lush, potted growth. Fragrant, varicoloured flowers, ornate bushes, and well-groomed trees bordered the large, curved pool all the way around. It created a relaxing sense of seclusion without hindering the sunlight. \n\nShaped sort of like a boomerang, the pool wrapped around the back quarter of the enormous house. He now walked around the inside curve, headed for the kitchen. Otero said it was built that way so that his mother and father could each have their end and not need to see each other. \n\nPamela rested on a padded deck chair, her crutches beside her as she read a book and sipped a fresh-squeezed melon juice. He passed her with a friendly nod, and she graced him with a small smile in return. It turned out she had a penchant for tropical fruit, and the catering staff were more than happy to oblige her every fancy. Chris had to agree that she had the right idea, the acai smoothie he'd had with breakfast that morning was out of this world. \n\nFurther around the pool, his olive-skinned Familiar lay sprawled on a thick towel. Her black bikini was a lot smaller than he would have ever imagined her wearing, riding high into the valley of her modest, muscular looking ass as she basked face down, head cradled in her arms. She hadn't moved in a while, and he suspected she'd fallen asleep. Her short black hair was moist and messy from her earlier swim; lips pursed cutely as she breathed restfully. Trying not to disturb her, he snuck past and down the tiled pathway toward the back of the vast, Spanish style mansion. \n\nA smiling maid noticed his approach and bustled out of the kitchen to meet him, her eyes running appreciatively over his pale physique. He didn't mind, having dosed the entire household with strategic droplets of pheromone cancellation potion on their first night. The young woman could ogle his mass and definition all she wanted without danger of becoming too dragon-struck. \n\nShe snatched the bottle right from his hand with a bobbing little bow. \n\n\"Mais uma?\" she smiled sweetly, her dark eyes twinkling. \n\n\"Two, please,\" he held up two fingers. \n\n\"Dois, sim,\" she made a gentle banishing motion which he'd understand meant she would bring it to him. \n\n\"Ob... obrigado,\" he said haltingly. Using about the only Portuguese he'd picked up to thank her as she trotted back into the kitchen. \n\nIt was oppressively hot. The water had been keeping him nice and fresh, but he wasn't sure if he wanted to go back in just yet. The decision was taken away from him when he heard quiet footsteps padding up behind him. \n\nHe turned, finding Michelle looking up at him meaningfully. Her skin glistened with a few beads of sweat brought on by the sweltering heat. She looked lovely. \n\nNot nearly as asleep as he'd assumed then. Without a word, she stepped into his space and ran her fingers down the muscles of his abdomen very boldly. His cock twitched in his wet trunks. \n\n\"Michelle...\" \n\n\"Come on,\" she took his hand and led him away toward their ground floor guest rooms. He followed in a state of confusion. While his body knew exactly what was about to happen, his mind didn't believe she was really seducing him. Not logical, self-controlled, organised Michelle. Not right here, not now. \n\nAs the hardwood door of her suite clicked shut behind him, any doubt of her intention evaporated. She had this funny little look on her face as she led him to the king bed and pulled him down on top of her. They just stared for a while, motionless as they weighed what was about to happen. \n\n\"Kiss me,\" she finally breathed. Raising her head off the sheets to meet him with her delicate lips. \n\nThat first kiss awoke something inside both of them. Their bodies quickly entwined, releasing subconscious tensions that had been building for months in a few moments of passionate, tongue duelling, kiss. \n\nHer fingers found his damp hair, twining, pulling him closer until they almost bruised each other. \n\nThey broke apart, breathing heavily, their mouths only inches away as the huge young man loomed over her. He was rock hard, his enormous shaft sticking up rudely out of his waistband to rub against her cool skin. \n\n\"Fuck,\" she murmured, looking down between their already half naked bodies to his manhood. \n\n\"Michelle!\" he bleated as she reached between them for his cock. \"Jesus, what's brought this on?\" \n\nShe paused, just her fingertips daintily brushing against his throbbing, vein mottled member. \n\n\"I... I want sex,\" she started, hesitant to admit it even to herself. \"I've been off the pheromone cancellation potion for days now, and it's been driving me crazy. You said we could... if I wanted to.\" \n\n\"Yeah, but... Are you sure?\" \n\n\"Yes! I need you,\" she moaned, bucking her hips up at him as she pulled his penis down onto her tummy. Her soft eyes pleaded him to provide the answers her body needed. \"I don't know what this is between us, Chris. I'm terrible at relationships. I just want you right now. I want to feel you in me.\" \n\n\"Oh damn, you've got it bad.\" He dropped his weight onto her, reclaiming her lips in a softer, searching kiss. He cradled her face with one hand as the other stroked her slim flank, across her hip and up to caress the side of her modest breast through her swimsuit. She sobbed into his mouth, writhing beneath his measured touch. \n\nHis erection, very neglected for the past two days, spurted a long stream of warm, slippery pre-cum across her tummy and sternum. \n\n\"Are you cumming?\" she whispered, her dilated pupils making her look awestruck. \n\n\"No, thankfully,\" he smiled, rubbing himself on her skin with hunching thrusts. \"He just likes you.\" \n\nHe reached between them, running his big thumb through the slimy, pungent stuff to collect some. Up to her mouth, he brought it. She frowned, nostrils flaring and turned her head away. \n\n\"Chris that's gross... mmrmmpphh!\" she protested only for a second as he smeared it across her kiss-swollen lips. It hit her pink, inquisitive tongue, and her entire body gave a little shudder. \"It's sweet? Cinnamon and...mmmmh salty.\" \n\nHe kissed her tenderly, sharing his flavour on her lips. She was dragon-struck alright. \n\nThat presented a problem, however. Michelle's needy body wasn't going to be satisfied with smooching and petting. She was going to need sex, and she was going to demand his cum deep inside her. \n\nAs he worried her bottom lip between his own, he snaked his hand back down her body, inching toward the warmth of her sex. She didn't protest. In fact, she mewled excitement as his hand slipped under her bottoms and into the warm nest of short-trimmed dark curls beneath. Moisture, warmth, and slick, plump flesh greeting his gentle, probing touch. He ran his finger around her engorged labia, spreading her already leaking juices even as he moved to suck and nibble her soft neck. \n\nHer nails bit into the bare skin of his broad shoulders as he rubbed up and down her slit, parting large, petal-like inner lips to test the tepid waters. Damn, she was snug. She was snug, and she was completely human. \n\n\"Michelle, I'm sorry we can't,\" he stroked a little of her stray dark hair behind her ear. \"I'm too big. It won't work.\" \n\n\"No, please! Use an enchantment, like you did with Susan. I want this, Chris. I don't know if I can work up the courage a second time. Please just do it.\" There was so much desire in her needy tone. \n\n\"I can only do so much right now with a spell,\" he tried to explain as she ground herself onto his probing finger. \"It takes time to work. Michelle, this is a stupid idea. I'd love to go down on you but let's wait a while for the sex.\" \n\n\"Now,\" she begged quietly. \"A little pain is okay. I've been sore after sex before.\" \n\nHe shook his head, not believing what he was about to do. \n\nThe magic flowed up out of his core anyway, eager to embrace a new brood member, to have her. Sitting back on his haunches, he pushed his fat prick to the side as she stared lustily up at him. The string ties at the sides of her suit-bottoms quickly vanished, and the skimpy garment discarded as he focused his mind on performing the spell. \n\nOne big hand moved to cover her slippery mound. The other rested low on her toned belly. It was a delicate process, but he'd had practice now. Given the urgency, Chris felt confident enough to push a little more power into the spell this time. \n\nHe let his magic flow down into her womanhood, opening her, readying her. It raced to its tasks, increasing her elasticity and muscle tone, promoting elongation of her vagina. He found her Bartholin's glands and zapped them into overdrive. Her cervix was magically reinforced and strengthened to grow new, spongy pleasure centres at its head. In addition, he created the basis for a magical feedback loop between arousal and the production of her tacky, cervical mucus. He'd done his damn research with Susan, and it paid off for them now. \n\nMichelle squirmed, her entire nether region heating, twitching, and shuddering under his magical reworking. Her clitoris was screaming for attention, and it was like he somehow sensed her need. His hands took the back of her thighs and pushed them high as he shuffled backwards and began lapping his warm tongue over her pussy. \n\n\"Oh fuck! Yes! Oh, yes!\" she moaned in ecstasy as he wasted no time slipping two thick fingers into her little pink hole. \n\nChris couldn't help smiling as he sucked gently on her labia and tried to coax her eager, juicy quim to accept a third finger. Stupid as this might be, it was going to be fun. As she loosened to admit it, he pushed the flat of his tongue onto her erect little button and shook his head back and forth remorselessly. After only a few seconds, she let out a hoarse scream, a powerful climax bursting inside her. \n\nMichelle's whole body arched, locking in perfect agony. Chris had never seen anything quite so... exorcism-like? She froze, making husky little grunts in the back of her throat as her legs and tummy twitched. It felt like her vagina heated, becoming slicker around his slowly probing fingers as she came. Her unusual reaction went on for half a minute until he got concerned that she wasn't breathing and let up on her clit. It appeared he'd damaged the usually restrained woman. \n\nWith a shuddering gasp, she came back to life, quivering all over as she pulled him up to her eager lips. She veritably attacked him, forgetting to breathe, and wrapping leanly muscled arms around his torso. \n\n\"I didn't know... it could be... like that,\" she finally wheezed. \n\n\"I have to give most of the credit to magic, unfortunately. You're primed like a little volcano, ready to erupt.\" Feeling very full of himself, he grinned and kissed her nose. \"I suppose it's my magic though.\" \n\n\"I don't care what it is. Give me a second to get this damn top off,\" Michelle began squirming to get at the black strings. \"Then I need you to fuck me.\" \n\nChris didn't need to be told twice. As Kat got out of the pool, wondering where the hell he'd gone and why she now had two beers, he shucked his swim trunks, entirely freeing his mammoth rod from its cruel confines. \n\n\"Getting second thoughts?\" he asked, noting her wide-eyed gaze riveted to his angry, pulsing crown as it splashed more excitement across her skin. \"We don't have to. The enchantment won't be fully ready for almost a week.\" \n\n\"No,\" she smiled softly, looking up into his tender expression as she pulled the loose bikini away from her breasts. She was aching with need. \"Now, please.\" \n\n\"Have I told you how beautiful you are?\" \n\nHer breasts captured his attention completely, paler than rest of her torso but still possessing the lovely tone gifted by her Mediterranean heritage. They were perfectly proportioned to her athletic body, small handfuls of soft, tan-lined perfection. He leaned forward to examine her small brown areola and discovered what had caught his attention. Her nipples were inverted, hiding from him. That would undoubtedly require further investigation. \n\n\"I don't believe so.\" Michelle squirmed under his avid scrutiny, hands self consciously twisting over her tummy as he looked her over. It was so silly to feel embarrassment at a time like this, but she couldn't help it, she felt like hiding herself. \n\n\"Well, you are.\" He leaned in to kiss and suck at her collarbone, down onto the swell of her right tit. \"You're perfect.\" \n\n\"How can you say that?\" she asked, cocking her head to watch him snuffle and suckle her at her breasts. \"I live with you. I know the other women you sleep with are prettier. Hell, Lillian is...\" \n\n\"Lillian isn't Michelle,\" he interrupted her a little sternly, a hint of the dragon in his voice. \"Michelle is Michelle, and she's perfect in her own way.\" \n\nHer little smile told him she understood what he meant. The way she pushed his hips backwards and reached to guide his massive head to her weeping slit told him what she wanted. \n\nMoisture and warmth greeted him, but he made sure to rub up and down across her glistening labia to get them both ready. Her hand was next to his on his shaft, guiding, exploring. He twitched, adding his own slippery lubrication to the mix as he tapped his heavy member against her erect, eager clitoris. \n\n\"Enough.\" She pulled him into her slot. \"Be gentle, but don't you dare stop.\" \n\nWordlessly, he nudged forward. Michelle winced at the stinging stretch, her lips struggling to envelop even his thick crown. Then in a slick rush, he was inside her heat. \n\n\"Owww! Fuck, you're too big!\" Her hands scrabbled at his hips, holding him at bay as her entrance throbbed painfully around his girth. \n\n\"I'm sorry, we'll stop,\" he began to gingerly pull away, but her nails dug into his thighs. \n\n\"I said don't you dare stop,\" she breathed through the discomfort as she adjusted to his size. \"Okay, a little more. God, it's got a fearful girth about it.\" \n\nIt was exquisite torture being inside Michelle. She was hot and wet and almost unbearably tight for him, but he couldn't move other than little rocking thrusts. Sometimes he gained ground, sometimes he didn't. She felt incredible wrapped around him either way, but he wanted to fuck, to feel her coming apart beneath him. \n\nHaving not died yet and with the initial pain fading, Michelle consciously tried to relax. It made a big difference to them both, and he slipped through a few extra inches of warm snugness, finally nudging her limit. Pre-cum gushed from his fat tip as he flexed his love-muscle, splattering hotly against her cervix. \n\n\"Oh wow, okay that's deep.\" She looked between their bodies, a little dismayed to see much of his member still outside her. \"Fuck me, Chris. I can handle it.\" \n\n\"Okay. You feel great, Michelle, so hot,\" he whispered encouragement in her ear as he began a slow, gentle pumping. \n\n\"Ghaaah!\" she cried, coming alive to the wonderful sensations inside her as he lovingly pulled out and impaled her again. \"Oh! Oh, ahhh... Oh! I'm so full, Chris! Fucking... God! Fuuuuck!\" \n\nHe smiled from ear to ear as she cried out to him, revelling in the intense friction as he slid home into her tight pussy. She was huffing and puffing and loving every second of his lovemaking. Her long legs wrapped up around his back, urging him on. Damn, she was a firecracker. He wasn't going to last if she kept looking up at him pleadingly with those huge brown eyes either. \n\n\"Yes! Like that, just like that! Chrisssss...\" She squirmed beneath him, reaching to hold his face and kiss him as he filled her completely. He loomed so large above her, so powerful. Such a tender, sweet young man who'd supported her in every endeavour and was there at the end of the day to share her frustration and rub her tired shoulders and... Oooohhh, he was an incredible lover. Never in her life had she experienced anything on this level of carnal satisfaction. She couldn't wait to feel his seed shooting hot within her, to receive his magic and satisfy the burning need in her core. ",
        "\"We should have done this months ago,\" he grunted in pleasure as his knob dragged back and forth through her sensitive pink folds, his thick head pressing incessantly across her g-spot. \n\n\"We'll... make... oh fuck! ... up for it.\" She felt out his defined chest, caressed his heaving abdominals as he fucked her so carefully, so gently. Looking up into his intense eyes, she begged for what she needed most at that moment. \"Give it to me, Chris. I want it, please!\" \n\n\"Fuck!\" he growled. It was as if Michelle's plea had a direct line to his cock, swelling him to utmost hardness. There was no point in holding back. She was so tight, and her avid cries of passion were incredibly arousing. Never in his life would he have thought she'd be such a vocal, enthusiastic lover. His abdomen began to shudder and tense as he drew in magic, his balls tightening for the climax she was eagerly milking from him. \n\n\"Mmmmmhhh... More! Please more... Fuck yes!\" She began shaking, her womanhood squelching obscenely as she squeezed hot around his huge cock. \"Chris! OOHHH! I'm going to cum! Go with me...AAAHHH!\" \n\n\"Jesus, Michelle!\" he groaned as she clamped down on him like a velvet vice, almost forcing him out of her spasming pussy along with the little trickle of her slippery cum. Her heels beat a giddy tattoo of pleasure on his firm butt. He squeezed his eyes shut tight as he teetered on that beautiful precipice of climax. Then the first shudder of blissful release raced through his entire body as an enormous pulse of hot semen raced upward to burst forth from his throbbing tip. \n\nMichelle arched violently again, it couldn't be helped. So vocal before, she was suddenly silent, her body rigid as pleasure exploded deep within. He held on, hunching deeper to find the perfect angle. \n\nShe felt him surge, felt him splash hot against her cervix. It was the most incredible, intimate feeling but she barely had time to enjoy it. An alien, heady rush swept through her. It grew and grew as he spurted, rushing through her nerves, setting off an unstoppable cascade of pleasure. What strength she had left was lost as it roared loud in her ears, through her body, seeping into her very bones. It made her tingle all over and almost want to wriggle away it was so intense. So this was what all the fuss was about? \n\nThen he did something, shifted somehow, and his heat bloomed deeper, into a part of her she'd only ever felt during the cramp of her period. A rich, intoxicating satisfaction blossomed deep in her core. This was precisely what she'd needed all along. Desperately, she tried to cry out, but her body would not respond, swept up in the maelstrom of his magic and her own catatonic tendencies. \n\n\"Uhnnnggg!\" Michelle finally gurgled beneath him as he pinned her hips and shot heavy, satisfying pulses against her dilated cervix. It was incredible, and she tried to tell him so. \"Chris... oh, my... hmmm...\" \n\nHe sighed in complete satisfaction, throbbing his sticky, magic-rich spend deep into her womb. It squelched and seeped around their coupling, too much for her to reasonably contain. It didn't matter, Immi wasn't here to police the situation. Only their pleasure, their bond, their magical link mattered in that perfect moment. \n\nRight up until Kat barged in. \n\n\"Michelle, have you seen Chris? I... Chris?!\" \n\n\"What the fuck! Knock!\" He lurched backwards, startled and embarrassed by their sudden audience. \n\nIt would have been better if he'd stayed on top of Michelle because his enormous, still lazily spitting erection wrenched free of Michelle's inflamed vulva. Everyone saw as it unleashed three more thick white ropes across her mound, thighs, and tummy. One courageous line of white made it all the way to her cheek and into her dark hair, making her twitch away for fear her eye was next. \n\n\"Jesus!\" Kat yelped in shock, gaping at the huge pool of semen between her boss's legs. Her expression went through a comic dance from surprise to offence to downright astonishment. \"You're bigger than fucking Billy-the-bull-cock-Rodriguez.\" \n\n\"What?!\" He blinked at her, dumbfounded by a combination of outrage and pleasure. \n\n\"Kat! Get out!\" Michelle shouted as she capped the end of his throbbing penis with her palm. \n\n\"Oh... sorry ahh. Your beer's waiting, Chris. Have fun.\" She backed out slowly, clearly glancing between the two of them. \n\nWhen the door shut, Chris put his forearm over his eyes and groaned, still catching his breath as his cock throbbed with post orgasm sensitivity. \n\nBelow him, Michelle's sides began to shake until a peal of laughter broke free. It was contagious, and his rumbling boom joined her as he fell back on top of her slim, cum-splattered body to kiss her. \n\n\"Did you see the look on her face?\" Michelle finally managed as she swiped his spilt seed with her hungry tongue. \n\n\"Which one?\" he wheezed, rolling them the side. \n\n\"Mmm... Damn. I can't believe we just did that,\" she kissed his chest as they settled into a loose hug in the air-conditioned room. \"I'm a cradle snatching, cliche boss taking advantage of her young employee.\" \n\n\"Take all you want,\" he teased. \"You were quite demanding there for a bit, I like it. All our little talks made me think you were going to be a dead fish or something.\" \n\n\"Shut up! No, you didn't!\" she slapped his brawny arm playfully. Wriggling up the bed a little so they were face to face, she took his hand and clasped it to her chest. \"Sorry, Chris, this whole thing wasn't very well planned. It was rash, I shouldn't have just stopped taking the potion like that I...\" \n\n\"Hush,\" he put a finger to her lips. \"It's okay.\" \n\n\"I feel great, but I'm going to be really sore tomorrow, aren't I?\" she groaned. \n\n\"I'm no expert on such womanly matters, but yeah, I'd say so. Sorry.\" \n\n\"But we did it,\" she nuzzled under his chin, breathing deep of his pheromones as his potent magic pooled hot in her womb, a volcanic lake of magic and teeming gametes. \"We really did it. Better not let people sneak up on us like that again though, it could be dangerous.\" \n\n\"Typical Michelle,\" he chuckled. \"But point taken. I was a bit distracted.\" \n\n\"Mmmh, no excuses. I've never felt so good like this afterwards,\" she yawned, entwining her legs with his. \"It's delicious, thank you.\" \n\n\"Then just lie with me and enjoy it for a while. You deserve to relax, Michelle.\" Tenderly, he drew her close and reached to pull a sheet over them, knowing they would soon be drowsy. They could give in to a few hours post-coital cuddling. \n\nNice as their stay had been, they had to leave their host, and the indulgences of his tropical mansion behind. His strength had well and truly recovered now, and Denver beckoned them home. \n\n*** \n\nChris awoke to the rustle of bedding and quiet murmuring. Annabel and Immi slipped out of his arms. He heard them fossicking for clothing in drawers, or in Immi's case, rustling through the garments she'd strewn on the floor. \n\nSnuggling deeper into his pillow with a tired groan, he enjoyed those last precious moments of rest. It felt like he'd barely closed his eyes since they'd all arrived back. Jumping halfway up the continent with five hitchhiking angels was no mean feat. \n\nThe flapping of the ever-growing sprite's wings signalled the doom of his wonderful dosing. Immi dropped on him like a small sack of potatoes, crawling up to nuzzle her way under the covers he'd pulled over his head. \n\n\"Get up, sleepy,\" she coaxed with a dainty nibbling of his chin. \"You promised you'd practice with us today.\" \n\n\"Does today have to start so early?\" he complained, rolling onto his back. He rubbed his scratchy eyes and flexed his legs, stretching himself awake. \n\n\"You're the one with the strict schedule, Babe,\" Annabel flopped down on the bed beside them, dressed in form-fitting workout clothes. \"We're getting up early just for you.\" \n\n\"Would it hurt if you didn't fill crystals with Petra for one more day?\" Immi teased. \"I'm sure the magical economy would survive.\" \n\n\"Petra might not,\" Annabel giggled. Leaning forward, she employed a technique she'd learned long ago and blew maddeningly in his ear. \n\n\"Arghh! I'm up. I'm up!\" he protested, rolling off the other side of the bed with Immi clutched to his chest. The sprite was actually wearing clothes, a tiny set of black spandex shorts and one of Annabel's ratty old pink t-shirts modified to fit her wings. \"Dammit woman, I was just shot in the ear.\" \n\n\"Baby,\" Immi tittered. \n\n\"We all know it's healed perfectly.\" Annabel rose off the bed and came to stand before him. \"We're doing this so you don't get shot again, okay? If that bullet had been... No. I don't want to even think about it. That absolutely cannot happen, Chris.\" \n\n\"I'm sorry, Dee.\" He opened his arms and scooped her up too, a three-way dragon hug. They squeezed each other close, reinforcing their love. \n\n\"I can't lose you, Master. We're going to train every chance we get,\" Immi sniffed, on the verge of breaking into tears. \n\n\"Thank you, both.\" Freeing a hand, he stroked the sprite's midnight-blue hair tenderly. \"I promise I'm working on some more defensive abilities. It was a scary experience, and I'm going to learn whatever you can teach me.\" \n\n\"Good.\" Annabel stood on the toes of her sneakers to kiss him, encouraged that he was taking their concern seriously. \"Let's go.\" \n\nHe hoisted his beloved sprite princess higher in his arms to kiss her too, setting her azure wings trembling. \n\nIt didn't take him long to get dressed once Immi could be persuaded to let him go. He would likely go to the gym for his usual schedule after they were done with whatever mysterious lesson the two beauties had concocted. \n\nThe duelling chamber was one of the deepest structures of the Compound, situated next to the extremely well guarded and magically defended nexus. The nexus was apparently the magical heart of the Compound, whatever was inside held most of the magical structure's spells. Neither Annabel or Immi could tell him what that might involve though, Reyla was the only person allowed inside. \n\nThey passed three separate checkpoints on their way down, each guarded by a member of night shift security who operated the various impassable or simply deadly magical barricades. \n\nTimothy Garril's office even had to be negotiated on the final corridor, the elemental stuck his head out the door as he saw them approach and wished them a cheery good morning. \n\nThe various guards welcomed Annabel and Immi back like old friends. They made respectful, if surprised comment on Chris' appearance though. Not many used the chamber, but apparently his First and her small lover had become regulars, and the guards were happy to have even a single visitor on such a boring shift. \n\n\"The entire room is coated in a foot of enchanted copper,\" Annabel explained what she'd been told as best she could as they approached the last checkpoint. \"It absorbs stray magic, spells, whatever touches it really. They get channelled into some sort of magical scrapping spell and passed through into the nexus to help power it. At least, that's how Reyla 'explains it to five-year-olds'.\" \n\n\"Not many Beings can afford to practice their magic at full intensity, so it doesn't see much use these days,\" Immi added. \"It's always been abandoned when we came to practice. No one's fought a real duel here for almost sixty years.\" \n\nThey turned right just before the final portal to the nexus, encountering a heavy metal door. It was old, a swirling, motley mix of brown, red, and blue-green copper, languishing in various states of corrosion. The handle was a wooden wheel which Annabel began unwinding. \n\n\"Try not to touch the metal,\" she warned as it swung inward. \"It pulls energy away pretty quickly.\" \n\n\"So this is how you've been spending my magic,\" he mused as one by one, they stepped across the threshold onto a scarred wooden floor. \"I wonder why Arvil never brought me down here?\" \n\nThe room was a vast dome, easily twenty-five meters across and half as high. A single, massive light globe spluttered to life as unknown mechanisms detected their presence. The only other feature was a white ring of what looked like sand or tiny stones surrounding the centre of the chamber. Chris assumed it marked the boundary of the duelling circle, it was large enough so that there were only a few meters between it and the sloped walls. \n\n\"Despite his expertise in Ether theory, that chocolate elf is not an accomplished combatant,\" Immi scowled. \"I've told him before that you need a broader, practical education and a quick magical repertoire. He's so infatuated with your natural control over the Ether that he gets distracted.\" \n\n\"Oh.\" Chris looked around at the pocked, gouged, and scratched metal walls. The copper must have seen some things in its time. \"Hey, I've been practising a little magic though. I can summon fire, and I once froze a bucket of water. I've been reading about other spells, too.\" \n\n\"But you haven't been throwing your entire essence into that magic have you?\" Immi raised a finger like a learned sage. \"You haven't unleashed with all your might?\" \n\n\"No, that's dangerous,\" he protested. \n\n\"Not in here,\" Annabel took his hand and drew him over to the edge of the ring. \"Watch us.\" \n\nHis beautiful mates stepped confidently over the threshold, the fingers of one hand interlaced with the other. The top of the growing sprite's head almost came up to his First's hip now. He knew it wouldn't be too long before he awoke in the middle of the night with the little princess trying to mount him. \n\nAs one, they glanced back to make sure he was watching before Immi muttered something under her breath. \n\nA white shimmering raced down her free arm. It shot from the sprite's outstretched fingertip as a brilliant cascade of web lightning. The magic branched through the air instantly, grounding against the far side of the chamber in multiple, resounding strikes. \n\nHe took a hurried step backward, shocked at the intensity of the magic she'd just unleashed. A livid afterimage of those powerful tendrils burnt into his retina. Such a spell could have easily fried a small pitchfork-bearing mob, very handy. Yet, the sprite had just let loose, and the duelling chamber took it stoically. \n\nA wide jet of unnaturally purple-edged flames blossomed across the room as he recovered. His hand automatically moved to shield his eyes this time, but it wasn't necessary. Annabel stood tall, hand in hand with her friend as her outstretched arm unleashed the torrent of scintillating fire. \n\nOn her slim forearm, Bartholomew dug his claws in and roared, spurting flames across her skin that flowed harmlessly over her and leapt into existence from her outstretched palm. His First raked the magical flamethrower back and forth across the wall, darkening it momentarily before it faded back to its sickly blend of pock-marked green and red. Above them all, the colossal light orb flared and sputtered in sympathy before returning to normal as the flames died. \n\n\"Immi has been teaching me defensive shields, too.\" Annabel turned to her shocked fianc\u00e9 with a satisfied smile. \"It's a little tricky, but we've worked out a couple of methods to practice in reasonable safety.\" \n\n\"I noticed at the nightclub,\" he approved, stepping into the circle to sweep them both up off their feet. \"This is incredible Annabel, I didn't realise how accomplished you're becoming. That fire... there was a lot of magic behind it.\" \n\n\"I said I would become strong for you,\" she nudged him playfully. \"Though to be fair, Bartholomew is doing the work. I'm just the evil mastermind with an irresistible vagina.\" \n\n\"And I'm the plucky sidekick who teaches them magic,\" Immi chirped proudly as his brawny arm squeezed against her waist. \"It's like a fairyta... No! No fairies. \" \n\n\"You are far from a sidekick, my wise little sexpot. What else have you been practising?\" he asked. \n\n\"All sorts of things,\" Immi practically radiated under his praise and began counting off on her little blue fingers. \"Lots of different barriers, a little basic dispelling, simple runes, some enchanting, and a few offensive spells.\" \n\n\"Bartholomew does best with fire,\" Annabel explained. \n\n\"I like lighting, it's fast and crackly!\" \n\n\"She got excited and zapped me through my shield spell the other day, now it's her favourite.\" \n\n\"It's always been my favourite!\" the sprite protested. \n\nChris looked between them, his pride overflowing. He'd been so busy, so distracted over the last few months, but they'd forged ahead. Annabel was becoming a magic user, just like she'd wished. His emotions were a little conflicted, he was very happy for her, but it was tinted with disappointment that he'd missed all the practice sessions they'd obviously shared. No wonder they'd grown inseparable. \n\n\"Show me what to do,\" he said, freeing his magic to rush eagerly through his body. \n\nImmi's eyes fluttered for a moment as she basked in his upwelling of clean, tasty magic. \n\n\"Have you managed to make a kinetic shield before?\" She blinked up at him, taking his hand and leading to the very centre of the room. \"I know you've read some theory. Try it.\" \n\nChris did try. He tried very hard. The problem for him was maintaining the necessary concentration. His brand of magic was based on feeding energy to focused intentions. That was all very well when you wanted to do something emotionally charged, something fast and powerful, something the mind could easily comprehend. Scorch that enemy, sure. Heal someone you cared for, okay. Teleport to that place right over there, no problem. Even blessing a small child with luck and fortune was not too far of a stretch, so long as the thoughts were simple and didn't have to be held. \n\nTrying to keep his mind focused as he willed a sphere of protective magic around himself was a problem. Forming it was okay, not great, but manageable. But then the spell had to be maintained, the intention focused, logical, and controlled continuously. A stray thought could ruin him, and he hadn't even had anything fired at him yet. \n\nAs Immi and Annabel watched him struggle, he tried adding extra magic. It worked to begin with, but as soon as his mind wondered, it was even more likely to slip away from him. Next, he tried channelling his anger and frustration. That usually produced excellent results when he fought, but instead of a shield, he created a nova of kinetic force. His audience of two was thrown to the wooden floor in a tangle, a blue wing snarling in Annabel's long, braided hair. That trick might have come in handy against those animated corpses. \n\n\"Stop this at once!\" Reyla burst into the room, breathing heavily. \n\n\"Reyla?\" He was genuinely confused. \n\n\"Get out, dragon! You're going to break my nexus!\" Behind her in the hallway, a few Beings in black security uniform vied for a better look. \n\n\"What? I...\" \n\n\"Now, please!\" she entreated, rushing forward to grab his hand. The dark-skinned elf began pulling him urgently toward the door, ignoring Immi and Annabel as they gingerly took apart the brunette's plat. \n\nChris went along with her, quickly led from the duelling chamber and down the hallway a way before she rounded on him, relief clear on her beautifully regal face. \n\n\"What did I do?\" He frowned, noting how dishevelled her usually perfect white hair was. Damn, she was in her nightgown again, her tall, slim figure shrouded only in sleek, dark cloth. He must have rousted her out of bed. \n\n\"Do! What were you thinking!? I...\" Her pointed ears drooped minutely as she exhaled, trying to let go of her temper. It was the dragon she was speaking to, not some scuttling underling. \"I'm sorry, Chris. There is no real harm done, I think. A close thing though.\" \n\n\"What happened?\" Annabel burst out of the chamber behind them, Immi peeking over her shoulder from piggyback. ",
        "\"He was rapidly overloading the enchantments protecting the Compound,\" the territory leader rounded on the culprits. \"You and your royal strumpet are one thing, I suppose I should thank you for the energy you've donated this last month. But he, he cannot throw around his magic like that, not around my delicate arcane mechanisms!\" \n\n\"Reyla, I'm sorry. We didn't know,\" Annabel apologised, genuine remorse clear in her expression. \"We were just trying to make Chris practice some practical defensive magic.\" \n\n\"And how did that go?\" the elf inquired, her perfect snowy eyebrow rising. \"Not well, I think.\" \n\n\"No,\" Chris sighed. \"I don't understand, you saw my Ether orb magic. Why can't I hold a simple barrier?\" \n\n\"So, you finally confront the limitations of your magic,\" Reyla nodded thoughtfully. \"Your mastery of the Ether is not in question, but intention has never been a good match for such spells, the untrained mind is much too fickle. Runes are the best for shields, enchanted items second.\" \n\n\"I taught Bartholomew the runes for shielding,\" Immi admitted a little sheepishly. \n\n\"Ah, so you do have some sense in that head of yours. Then use it, sprite. You should have anticipated he would not easily make a barrier spell. Only the most disciplined learn to split their mind...But, I did not rush down here to give a lecture. Once again you've ruined my sleep, dragon. I'm going back to bed.\" \n\n\"But... split the mind?\" he puzzled. \"What does that even mean?\" \n\nThe elf smiled ruefully at the large young man, her ears flicking in amusement. \n\n\"Ask me again in a thousand years, you might be ready to start learning then. For now, if you want defensive spells, make a few trinkets, some enchanted armour. If you're industrious, you could consider protecting your new human friends, too.\" \n\n\"I hadn't even thought about that option,\" he admitted, brightening as his brain raced to new possibilities. \"Thank you, Reyla.\" \n\n\"You're welcome, dragon. But, I ban you from this level. Your mates may continue to practice here, but you must find somewhere suitably desolate for one such as yourself.\" She cocked her head meaningfully on the last words, managing to look decidedly avian. \n\n\"I... Yes.\" \n\n\"Thank you, Reyla,\" Annabel added. \"We're sorry.\" \n\n\"All is well, disaster averted. Chris, I will see you later this morning, no? Good day.\" \n\nWith a grace practised over thousands of years, she swivelled and glided away. \n\n\"Well that didn't go as planned,\" huffed Immi as they moved aside to let the security crew out. \"Now he's banned.\" \n\n\"It's okay. I learned something valuable, and Reyla gave me a great idea,\" he said. \"Why don't we go up to the gym for a while?\" \n\n\"Squats?\" Immi asked over Annabel's shoulder. \n\n\"Squats and cardio,\" his First agreed, hitching her blue, winged limpet higher on her back as she led the way up the corridor. \"Every day is an ass day, isn't that right, Immi?\" \n\n\"Yeah!\" \n\nChris shook his head, ogling their exquisitely proportioned rumps stacked one on top of each other in the clingy fabric of workout pants. That specific arrangement set his imagination wandering and his cock hardening. \n\nIt was still very early, so they snuck in forty minutes of workout before Chris had to leave for his appointment with Petra. Michelle showed up halfway through but was strangely taciturn, managing to stay on the opposite side of the massive facility to him with uncanny accuracy. It was like she was trying to ignore that they'd made love. To be honest, it hurt him a little. \n\nHe didn't bother showering when he was done. The mature dragoness loved it when he came to her streaked with sweat and extra musky. As he pinned her to the wall and lovingly ravaged her, Immi and Annabel showered and prepared for their day at the culinary academy. \n\nThe budding chef consulted her diary for her meal plan. She began ordering ingredients on the benchtop and assembled the top of the line food processor Chris had given her as a gift three weeks ago. It was her pride and joy, along with her Japanese knives. \n\nInto the blender went onion, tomato, fresh coriander, garlic, and chilli. Immi showed up and was put to work making fresh tortillas. Susan emerged and showered as she began heating the fragrant puree and opening a can of refried beans. That turned into two cans, better safe than sorry with Chris. \n\nThe fresh tortillas smelled delicious as they browned in a skillet under the sprite's vigilant watch. The aroma of frying chorizo and egg soon joined them. It was all coming to a frenzied climax of activity, a rush to have the components of her carefully planned meal prepared on time. \n\nAs Annabel worked to bring everything together to a perfect moment, Chris did the same. Petra groaned in bliss, her loose platinum hair sweaty and clinging to her heaving breasts as he spurted deep within her. With arms wrapped up around his neck, she gripped an empty quartz crystal in each hand, doing her best to relax and let his magic flow through her. She was his vessel, the chalice for his magic, and she loved it. With a smile of pure joy, she thumped her head back into the wall and keened. He roared with her, seeding her over-filled loins again and again. \n\n\"That's the five-minute mark.\" Annabel's head cocked to the sound of the dragons' passion. \"Start grating that cheese please, Immi.\" \n\n\"Okay, Mistress,\" the sprite chirped happily. \n\nAs the busy pair began plating out breakfast into shallow bowls, the dragon's brood assembled. Susan skirted around them to put on a large pot of coffee. Slipping a little stiffly into a chair at the dining room table, Michelle began catching up on the emails she'd ignored whilst in Brazil. Lillian was absent, her meeting on the west coast was keeping her longer than expected. The messages she'd sent Chris on Maginet suggested that their reunion this evening was something to look forward to. \n\nFinally, Chris and Petra arrived, rosy-cheeked and still damp from their brief shared shower. Claire and all her red-haired beauty brought up the rear. \n\n\"It's like they're running on clockwork,\" Annabel smiled. \n\n\"More like cock-work,\" Immi giggled as she ran across the benchtop, sprinkling cheese, avocado, and a dollop of sour cream into each bowl. \n\n\"I'll show you cock-work, you little minx.\" He strode into the kitchen and swept his miniature mate into a heated kiss. Standing on the kitchen bench in her tiny apron, Immi was just the perfect height for it. \n\n\"That's exactly what she wants, you big dummy. Now, unhand my assistant,\" Annabel laughed at their antics. \n\n\"What do you have for me to devour this morning, Dee? It smells amazing.\" \n\n\"It's huevos rancheros,\" Immi supplied. \"Could you please take that big stack of tortillas to the table, Master?\" \n\n\"The coffee, too, please honey-bun,\" Susan piped from the dining room. \n\nChris was more than happy to help in any way he could and carefully brought the desired items to the table before returning to help with the warm bowls of spicy goodness. It amazed him every time he saw Annabel at work, and he loved to support her passion for cooking in any way he could. It wasn't just for the fulfilment of his bottomless tummy either. \n\nHis First took genuine enjoyment from making an excellent meal and learning new dishes, new ways to cook. Annabel was simply incredible, and he lavished her passion with praise, appliances, and extravagant ingredients. He didn't care that half his paycheck from the BIA seemed to disappear into their stomachs, it was absolutely worth it. \n\nAs the plates arrived, they didn't stand on ceremony. They knew Annabel would join them as soon as she was ready and she didn't want them waiting for her while things got cold. \n\n\"Mmhhhmm!\" he groaned as he scooped his first piece of soft, warm flatbread into the hot soup-salsa and dug in. \"Oh, my God. Annabel, I think this is my new favourite breakfast. Heck, you could have this for lunch and dinner, too.\" \n\n\"Thank you, Annabel, this is amazing,\" Claire agreed as she combined egg, salsa, chorizo, and sour cream in a dainty forkful. \n\nA chorus of agreement and praise ran around the table. The chef took a happy bow, and her blue assistant did a little jig before they high-fived and sat down with the others. \n\n\"Tell us all about your trip, Michelle,\" Susan prompted. \"Was it terrifying? I think I would have fainted if I'd seen one of those bodies let alone if it got up and tried to kill me!\" \n\n*** \n\nChris rose from his desk as the elevator chimed, his magical senses releasing an answering ping off her presence. Reyla swept out, her human guise in place. Keen eyes brushed over the faces that turned to note her appearance on the top floor of the BIA office. Her grey gaze found him with raptor-like efficiency. She honed in, flanked by two burly shifters. \n\nHer elegance never ceased to amaze him, and the dark overcoat she wore over her refined blue gown did nothing to hide it. With perfect dark brown skin, flowing silvery white hair, and her patented elfin glide, she was a creature of beauty obviously out of place in the pack of humanity. This facade belonged on a catwalk and just seemed unsuitable anywhere else. \n\nA few of the newer BIA recruits looked around nervously, seeking reassurances from the more experienced members that the presence of the somewhat legendary Lady Narlakis was anticipated, or at least didn't herald their imminent doom. \n\n\"So this is where you work?\" she drawled, clearly unimpressed with his spartan little cubicle. \"A bit beneath your station, don't you think?\" \n\nHer bodyguards waited patiently in the background, giving the elf and dragon a little space. \n\n\"It's okay,\" he shrugged. \"I don't really do that much here. If there's no work to do, I'll go train or just hide in the Ether, pretending to be busy.\" \n\n\"I see. And what's this?\" The elf snatched up the sheet of paper he'd been scribbling on. \"Interesting. Yes, it might work if you knew anything at all about runecraft. A promising start though.\" \n\n\"You wouldn't be interested in helping me, would you?\" he asked. \"I'm thinking I'll have to make at least twenty, one could be yours, if you helped?\" \n\n\"I could be persuaded,\" she smiled, giving him back the sketch. It depicted a series of gems inlaid in narrow bands of rune etched metal. The fixtures holding each individual stone had small loops on each side, through which a chain ran. Five such gemstones were attached to the chains, one on top of the other to create a spell. He'd gotten the idea from the incredible mythril curtain the goblins had installed to protect his mate's grotto. \"I hope you know an amenable dwarf, such fine metalwork will not be easy. I'm not sure how the clan-smiths would like working for a dragon.\" \n\n\"That again. I don't get it,\" Chris confessed. \n\n\"Beings have very long memories, that is all. Dark and light elves still don't get along almost three thousand years later, not that we were ever particularly friendly. Sprites and fairies, werewolves and centaurs, everyone holds a grudge of some sort.\" \n\n\"Wait, there are centaurs?\" \n\n\"Not any more, they were wiped out,\" she explained with a flourish of her long-fingered hands. \"When does this meeting begin? I have to adjudicate a dispute over the bulk purchase of some of the crystals you've flooded the market with.\" \n\n\"Oh.\" He didn't know what to say about that. The energy crystals were flying out the door of Eddard's Apothecary and fetching a decent price while doing so. Previously, Reyla had mentioned that it was promoting magic and trade in the territory, he hadn't given thought to possible downsides. \n\n\"Reyla, Chris, everyone,\" Michelle said as she stuck her head out of her corner office. \"Please come into the briefing room, we're all set up.\" \n\nThey navigated the cubicles side by side, the graceful elf and the enormous dragon. Michelle's team formed up behind as they passed, Pamela bringing up the rear on her crutches. \n\nHer wound was healing well. Susan had taken a few drops of his blood that morning and used it to make a potent restorative draught for her as soon as she'd gotten to work. Combined with his multiple treatments of saliva during their luxurious days at the Otero family mansion, she hadn't even needed a cast. Chris was amazed, her leg had been ruined. Another week or so and she'd be back to her usual capable, prickly self, according to Dr Chang. \n\nThe large briefing room was once again underutilised, only eight chairs taken once the head of the surveillance department, Carlos Rameca, joined them. \n\nFinally, the big video conference screen flickered on, and the President himself looked out at them. \n\n\"Well then, let's get this underway,\" Robert Falconer began. \"Thank you all for your hard work, especially the team that went down to that hell hole and took care of it for us. You've earned us a lot of points back with the Brazilians. I'd also like to personally thank you, Lady Narlakis. This office is the first in the country to be established and operational thanks to your stewardship.\" \n\n\"You're welcome.\" Reyla inclined her head. \n\n\"On to business then,\" Michelle nudged. \"Mr President, you've read the action report I sent you. Did you get a chance to view some of the footage?\" \n\n\"I did, Agent Hamund, it's sobering stuff. I wouldn't like to think about that sort of thing happening in a major population centre. Good thing you brought young Christopher along with you.\" \n\n\"Yes, we are fortunate to have him on our side, but what do you think of my proposal? The extra manpower and assets could be vital if we're going to be policing more than just our own country.\" \n\nChris wondered what Michelle had hatched. He glanced at Lisa and Kat, seated stiffly across the table. He got a little shrug from Lisa, this was new to her too apparently. Kat, on the other hand, didn't meet his eyes at all, glancing pointedly at the stark white of the drop-ceiling. Uh oh. \n\n\"The Joint Chiefs are already ahead of you on that. They've had their special forces teams upskilling to deal with Beings for months. I agree though, your input on their projects could be valuable. They might not like you stepping on their toes, but they're big boys. I'll see that you get a seat at the table.\" \n\n\"And the other thing? I've got good intel that we are leaking like a sieve. Certain individuals and corporations are risking this entire thing. For what? A quick dollar? If this gets to the public, we lose the narrative and all the credibility that goes with it. We have to at least try to push the Revelation forward.\" \n\n\"I agree.\" Reyla startled Chris when she spoke in Michelle's support, as if he hadn't already been surprised enough by her bold suggestion. \"Not only are you risking your ability to manage your own population, but you'll also make it clear to Beings everywhere that you can't or don't intend to hold your own people accountable. I personally, find it offensive that so little was done to punish Riker Pharmaceutical for their blatantly criminal behaviour. If there are more such incidents, the Being population will find out. They will call for war.\" \n\nChris looked straight ahead, his pulse rising rapidly. He was in a room with trained spies, soldiers, and law enforcement and he had a dirty little Mediterranean secret to keep. He dared not even glance at Michelle. \n\n\"I wish it were as simple as just bringing the date forward, ladies, I really do.\" The president took off his reading glasses and rocked back in his chair. \"But we all know that wouldn't magically solve our problems. Sorry, no pun intended. Huh, my daughter would fine me for that one. What I meant is that we simply aren't ready, and our allies around the world are dragging the chain. I can raise the issue at the upcoming summit at the United Nations, but it won't get traction. Half of my own government will oppose it anyway.\" \n\n\"Then you must loosen our leashes, Mr President,\" Reyla advised with a sly little smile. \"Beings are no use to you hamstrung as we are now. We could help take care of all sorts of little problems for you, if you let us.\" \n\n\"It would reflect very poorly if I unleashed Beings on anyone who gets in the way,\" he contemplated carefully. \"I certainly won't give you licence to use the memory charm.\" \n\n\"Ung,\" Reyla let out a little grunt of disgust. \"A pity you have such an irrational dislike for such a useful spell. You spend huge sums on incarcerating criminals that could easily be reconditioned to a docile, skilled workforce. But, that is beside the point. We have other, less distasteful cards we can play. Our young dragon here can devour entire buildings and launch them out of orbit. I'm sure there are more subtle ways we can come up with to discourage your privateering corporate wrongdoers.\" \n\nChris was really starting to suspect the two women were colluding now. Clever girls. \n\n\"I agree,\" Michelle said, adding her support before the President could think to object. \"It amounts to intimidation, but there are plenty of ways we could magically convey the message to back off. Who's going to say boo, they'll sound crazy if they try to convince people they're being harassed by a dragon or a vampire.\" \n\n\"Alright, you've convinced me,\" the President surrendered. \"I get it. If they don't play by the rules, we won't either. I don't want to know any further details, but please be circumspect about it. What do we know about the cause of the incident in Brazil?\" \n\n\"Chris?\" Michelle prompted, starting him from imagined ways to terrorise greedy executives for approving kidnapping and murder. A perfect sphere missing from the engine block in their cars was his best idea so far. \n\n\"Well, it was Radek,\" he recovered. \"I thought that was obvious.\" \n\n\"According to agent Hamund's report, you somehow 'smelled or tasted his corrupt magic,' is that correct?\" the President asked, a slightly salted eyebrow rising. \"No one saw the man on the scene, and evidence suggests that the handprint wasn't human at all. How do we really know he was responsible?\" \n\n\"He was there,\" Chris rumbled, doing his best to remain respectful. \"I did smell him, or his magic at least.\" \n\n\"I'm not trying to insinuate you're wrong, Christopher.\" Robert's expression softened. \"Just that we need to be sure. You'll forgive me if sense of smell isn't what I usually get presented with as evidence of wrongdoing.\" \n\nSam shifted nervously beside him, she knew the leader of the nation's scrutiny was not aimed at her but the young man beside her. It was intimidating nonetheless. \n\n\"I would trust the dragon on this,\" Reyla spoke in his support. \"Chris has faced Radek before, and a dragon's senses are very keen. I have reviewed the footage also, and I believe we may be dealing with some sort of very ancient... entity. The magic was truly heinous, I have never seen its like.\" \n\nChris' eyes narrowed, she definitely knew something. He'd suspected for a while, but the way she walked on eggshells around the issue now just confirmed it. The elf must have sensed his ire because her long, ears gave a telling little twitch and her grey eyes shot to him guiltily for a microsecond. \n\n\"Well, that's not what I wanted to hear,\" the President sighed. \n\n\"I don't think this was an isolated occurrence either,\" Michelle said. \"I've reanalysed some of the incidents that our systems picked up in Central America. There have been several cases of multiple murders or disappearances of entire households or farmsteads. In all cases, the bodies were found in an advanced state of decay or burned. At the time, they looked mundane, but after what I saw in Brazil, I now suspect they could be Radek's work, simply allowed to run its course for a few more days before they were discovered.\" \n\n\"Shit, he's working his way down the continent,\" Robert said. \n\n\"Exactly.\" \n\n\"Why?\" \n\nThere was a pause, people began glancing at each other until more and more pairs of eyes settled on Chris. ",
        "\"Well, I don't know.\" He shot a reproachful look at the elf who had apparently abandoned him on the subject. They would have to have another little chat about honesty soon, and they'd been making such good progress. \"Whatever it is he's up to, we have to stop him. It can't be good.\" \n\n\"The Brazilians have set up border checkpoints, but I'm not confident they'll do any good,\" Michelle moved them along. \"All we have to distribute is his description and that he's extremely dangerous. Our best case in that scenario is that he's recognised and causes enough damage in his attempt to escape that it puts him back on our radar. Though what happens then is anyone's guess.\" \n\n\"The Synod has their own ongoing investigation,\" Relya addressed the President. \"That may be our best chance to stop him, but they have their own problems to deal with. He hasn't been their top priority since he disappeared after the incident in Harrisburg.\" \n\n\"He hasn't been ours either,\" the President admitted. \"We've been distracted trying to prepare for the Revelation.\" \n\n\"Which was his plan all along,\" Lisa spoke unexpectedly, sitting straighter in her chair. \"I've read the files. Whatever he's planning, he engineered this whole situation to distract us from whatever he's doing now.\" \n\n\"I agree, Lisa,\" Chris nodded approvingly to the brunette. \n\n\"We need to devote more resources to this, Michelle,\" Robert Falconer agreed. \"Put some people on it if you can spare them. Anything you can do to help, Lady Reyla, would be greatly appreciated.\" \n\n\"Of course,\" the dark elf inclined her graceful neck. \n\n\"Okay, I've got to get going in a minute,\" the President wrapped up, looking at his watch. \"One final thing, I'd like Chris at the upcoming UN summit. It's a secret, but key leaders will be ratifying the draft terms of the Revelation. I know the Synod delegation will be there but to be frank, I'd like someone I can trust nearby. It's too delicate not to take precautions against trouble. Bring whoever you like, it will be a good chance to meet in person. What do you say, Chris?\" \n\n\"Oh... Yes, of course, Sir. Are you sure it's not a little too public?\" he asked. The logic of having him there was sound, but he was nervous about the publicity of such a high-profile meeting. There was bound to be a lot of press coverage. \n\n\"It's the perfect chance to foreshadow your appearance in the media,\" Michelle assured him. \"It will be fine.\" \n\n\"Folks, I've got to go,\" the President glanced up off-camera as someone gestured for his attention. \"Thank you for your time and especially your hard work and bravery. Keep me updated.\" \n\nA curious mix of goodbyes, salutes, and nods bid the man farewell before the connection cut off. \n\n\"Very well,\" Michelle collected a few documents she'd put out on the desk and began packing them into her laptop case. \"Back to it, people. I'll update your assignments over the next few hours.\" \n\nEveryone else rose and began filling slowly out of the room, conscious of the tension between the dragon and the elf. \n\n\"Reyla,\" Chris finally spoke, controlling any trace of emotion. \"I wouldn't mind a chance to discuss the events in Brazil, there must be something you can add to my understanding of the magic involved. Anything at all you can shed light on would be... appreciated. When you have time, of course.\" \n\n\"Yes. Yes, of course, dragon, I'll check my schedule. Good day.\" The elf beat a dignified, if slightly hasty retreat. The dragon was onto her, and this was not the place for that particular discussion. \n\nChris let out a little growl of frustration as she slid away. He moved to leave as well when Michelle stopped him. \n\n\"Chris, please come see me in my office for lunch.\" \n\n*** \n\nKat looked up from her screen as Chris hulked his way past her desk. She couldn't look at him the same way after what she'd seen. After... she shivered. His enormous, glistening cock wrenching free of Michelle, bucking, firing a pearly salvo to arc and splatter and... enough. \n\nHis butt looked damn fine in that pair of jeans as he walked to the door of Michelle's corner office and knocked. It had looked even better naked and working. \n\n\"Come in, Chris.\" Michelle opened the door and ushered him inside with a smile. \n\nHe smiled back, noting her demeanour seemed less aloof. The soft click as she quietly locked the door widened his grin. \n\n\"Have a seat,\" she said without turning, her attention on rolling the blinds down across the window that looked out over her pen of investigators, data miners, hackers, and soldiers. \n\nInstead, he took three silent steps so he stood directly behind her. She was too busy trying to peep through a tiny gap to see if anyone had noticed her unusual behaviour. \n\n\"You've been avoiding me,\" he whispered warm against her neck, delighting in his predatory nature. \n\nTo her credit, she didn't jump or squeal or even turn her head. She quivered, like a hare in hiding, ready to leap away if the hounds came too close. He leaned closer, running his nose into her short black hair, scenting her. His large hands settled gently on her hips over her snug fitting suit pants. \n\n\"Chris I...eek!\" \n\nHe spun her, sweeping her up into a hug without warning, easily lifting her into his arms. She looked slightly down at him now as he carefully squeezed her, unable to help the tenderness that grew in her expressive brown eyes. Her hands automatically fell on his neck, caressing as they communicated with just their looks and touches. \n\n\"Why the cold shoulder?\" he finally asked, raising the question that had been bothering him ever since Brazil. \n\n\"I... Chris,\" she paused, tracing a finger over the shell of his ear. \"We need to be professional. I can't have a public relationship with you.\" \n\n\"I see.\" \n\nHe didn't, of course. One incredible, steamy encounter and it was like they'd gone back to square one with their friendship. He slowly set Michelle down on her feet. \n\n\"No, you don't,\" she smiled sadly, laying her head on his deliciously muscled chest instead of stepping out of his loosening embrace. Her arms attempted to encircle him in return and failed as she breathed in his spicy musk. \"I can't jeopardise all I've worked toward here for the sake of a little PDA. I can't kiss you, hug you, or even glance at you funny around my colleagues, Chris, even if I might want to. It's bad enough that Kat knows what we're up to. She said she'd keep her mouth shut, but if it got out, it could be grounds to transfer me or bust me down a few levels. I need to be the one holding the reins on this agency.\" \n\n\"They would seriously bust your ass over us?\" he frowned. Humans were fucking crazy. With a start, he realised his unconscious change in perspective. The dragon was winning out. \n\n\"Maybe,\" she sighed. \"Someone ambitious might call my leadership into question over it, certainly. It is unprofessional. I'm technically your direct superior.\" \n\n\"Questionable,\" he chuckled down at her. \n\n\"You know what I mean,\" she bumped her chin into his pectoral as a beautiful smile finally settled on her lips. \n\nHe wanted to kiss her, but his stomach gurgled in protest, sounding like some caged abyssal horror. It was feeding time. \n\nMichelle actually started in fright, feeling the rumble through their embrace. \n\n\"Come on, let's go get something to eat before I'm devoured from the inside.\" \n\n\"Kiss me first,\" she leaned up on her toes, needing to reassure him. \n\n\"But I thought...\" \n\n\"Are we in public?\" \n\nSoft, warm, and breathy, her lips met his eagerly. They moulded perfectly, drawing a rumbling purr from his chest as she teased him with a pulling nip of her teeth. His hands roamed up her back against the cotton of her shirt as their tongues finally met in slippery passion. He watched her eyelids flutter, an avid little noise rising in her throat. \n\nWhen they finally parted, both were grinning stupidly. \n\nThey emerged from her office spaced appropriately apart and took the elevator down to the street. It was cool, but the sun was out. It wasn't too windy, all in all, not a bad late autumn day. \n\n\"Look at them all,\" he gestured to the oblivious pedestrians they passed, intent on their destinations, their phones, or their walking partners. Mostly their phones. \"It's all going to come crashing down around them in a few more months.\" \n\n\"It needs to be sooner,\" she replied. \"Some of them could use a shakeup. But it shouldn't be as bad as all that. There are so few Beings compared to humans, most people will never even meet one.\" \n\n\"That's a disturbing thought,\" Chris admitted, pausing to let a group of students pass unhindered by his broad shoulders. \"We need to make a good impression then. It'll be too easy to dehumanise us.\" \n\n\"You'll be fine,\" she teased, poking his side. \"You make a good impression on everyone. Even the President loves you.\" \n\n\"Huh, and look where that's landed me,\" he grumbled. \"Stuck in a government job with a terrible boss who's always taking advantage of me.\" \n\n\"You're lucky we're in public.\" \n\nHe smiled. \n\n\"So how exactly is this going to work, Michelle?\" \n\n\"It's simple, anything outside the house is completely professional. But when I get home, we're... fuck-buddies?\" \n\n\"Fuck buddies?\" he laughed heartily, causing a few heads to turn his way in disapproval. \"And what about what just happened up in your office?\" \n\n\"Momentary lapse in judgement,\" she replied with mock contrition. \"Won't happen again.\" \n\n\"Is that so?\" he challenged as they arrived at their destination. \n\n\"Yup. But when I get home tonight, I'm going to ride your face until you've got carpet burn. You owe me after the number that monster of yours pulled on me.\" \n\n\"Michelle, I...\" \n\n\"Shut up, I loved every minute of it,\" she shot back. \n\nHe held the door open for her, his grin wide and lecherous. A delicious warm smell wafted out onto the street. The dragon's stomach protested the tantalising odours of the Japanese kitchen loudly, hurrying them both inside. \n\nChris had been there before and fallen in love with their crumbed pork cutlet. He asked the waiter if they could have a booth at the back and were soon perusing the menu. \n\n\"Hailey and I have been scheming up some ideas,\" he said as the server left with their order. \n\n\"Lisa told me about your quarry incident. Be careful, please.\" \n\n\"I will,\" he paused to take a sip of water. \"I just wanted to let you know in case someone notices when I start playing around.\" \n\n\"Nothing too dramatic, I hope,\" she frowned across the booth. \"There's a lot at risk.\" \n\n\"I know, but I feel like I need to make a start. There's a lot that needs fixing. Speaking of which, do you have anyone on your naughty list yet? That was quite the crafty little play you organised with Reyla. I almost feel sorry for Robert with you two ganging up like that.\" \n\n\"It's just politics,\" she shrugged, that impishly smile on her enticing lips. \"If I'm going to play, I'll play smart. The President might seem all full of confidence, but I think the footage of Brazil gave him a bit of a wake-up call. If he won't try to move up the Revelation, I'll capitalise on his fears to get us more slack. We need more leeway for using magic, and if I don't get firmly inside the military's pants now, they'll start competing with us.\" \n\n\"You're incredible you know?\" He rested his chin in his hands, staring puppy-like into her eyes. \n\n\"Stop that. Now, I've been searching through the data I collected from you-know-who's computers. A couple of his acquaintances could use a lump of coal and a switching if you get my drift.\" \n\n\"I think I do,\" he agreed. \"A visit from dragon-santa then. Can I wear a costume?\" \n\n\"Oh god!\" Michelle laughed. \"Please don't.\" \n\n\"What? It could be a good disguise.\" \n\n\"I don't think I'd be able to look at a Santa again after seeing one with big cream and purple wings, talons, and a dragonified face. You'd look like a jolly devil.\" \n\n\"See, perfect for what we've got planned. There's a bigger problem though. I think I need to start travelling to different spots around the globe in order to build a library of places I can jump to. It's a serious limitation if we have to keep relying on the jet to go places, even if I do love the thing.\" \n\n\"You're right, that would be very useful.\" She reached across the dark wood of the table to squeeze his hand. \"But please, Chris, don't take on too much.\" \n\n\"I'll be fine,\" he winked back at her, full of burgeoning love and anticipation for the delights of her eager athleticism. He was wondering if they might get away with leaning across to share a kiss when their food arrived. \n\nSaid arrival spelled the death of their conversation, for the ravenous dragon attacked dish after dish until nothing was left. Michelle couldn't help wondering if it was his prodigious appetite that kept him overflowing with magic, all that food had to be going somewhere. \n\n*** \n\nIn the Ether, the depths of the Compound were one of the liveliest natural environments he'd encountered yet. Maybe not so much with the scuttling, hovering, or lurking critters he was beginning to recognise elsewhere, but with magic. \n\nEvery corridor, wall, and door was touched by arcane energy. Complex chains of runic symbols for strength and integrity graced the ceiling with almost mathematical precision every forty or so paces. Unknown spells surrounded door frames with elegant script, whether as simple magical locking mechanisms or to incinerate intruders, he couldn't guess. Anything in between seemed possible. A few plantlike denizens clung to the walls or found purchase in corners here and there, but overall, the Ether environment was very well tended. \n\nHe stalked his prey through the crowded corridors at the end of the working day, the drow who was still keeping secrets. The evidence of magic all around him drove home the elf's hard work and dedication to building her underground empire. He paused his hunt, leaning against a ghostly wall as two witches passed obliviously in the other direction, their heads bent together in hushed whispering. There was no real need to step out of the way, but it seemed a little rude to pass directly through the shadow of another Being when there was no pressing reason. \n\nReyla was an enigma to him. When it came down to it, he knew almost nothing about her history. Sure, she was nearly two thousand years old, everyone knew that. But where had she grown up? What magic did she favour? Did she have a family? How long had she been Lady of the Midwest? These and many other meaningful questions had never come up before. The realisation spread a thoughtful frown across his brow. \n\nWhat had he learned so far? She was undoubtedly cold, calculating, and a skilled navigator of politics and psychology. Her ruthlessness and temper were legendary, and it was known that she 'collected' useful Beings to surround herself. Her relationship with Lillian showed that her scruples were somewhat lacking once someone was under her control or in her debt. Was he falling into her web? No, he thought not. If anything, their power dynamic was shifting in his favour. He thought he'd been making good progress cracking the shell of her defences. Beneath, he suspected he would find a very lonely, unfulfilled woman despite all her collected wealth and power. \n\nThe anger he'd worked up over the afternoon scribbling at his desk and writing up his after action report slowly drained. He would not pounce on Reyla from the Ether, demanding answers. She deserved a chance to explain her deceit in this matter, he owed her more respect after the hospitality she'd shown him. \n\nHe merged back into the Norm with a quiet pop, causing the conspiring witches to turn, delivering their best affronted glares. He ignored them, retracing his steps. Whatever she was up to down here in the lower levels was her business. He would wait rather than interrupt her. Not somewhere he could be ignored or put off though, he needed answers now. \n\nThe corridor leading to her study was a dead end as far as he knew, branching from a busier passageway that led to the offices of a few of her administrators. So, he took a post at the junction and waited. After perhaps ten minutes, he sat, finding a comfortable position with his back against the cold stone wall. \n\nA state of restful alertness slowly enveloped him. His eyes closed and his mind slowed. He didn't sleep, his senses were still alert to the occasional passerby. Several paused, startled by the strange sight and the need to navigate the draconian obstruction to be about their business. It amused him to imagine how they gathered courage before scampering by like there was any real possibility that he might lash out. Some just turned and went back the way they come, as if his very presence was an impassable barrier. How absurd. \n\nHumour got the better of him eventually, to the detriment of one unfortunate member of the custodial staff. A young feline shifter by the smell of her. It had taken minutes of shuffling nervously from foot to foot to finally work herself up to get around him with her cart of supplies. \n\n\"Boo,\" he said quietly just as she got by. Her resulting shriek and headlong flight brought him entirely too much simple joy. Had she really convinced herself that he was asleep? \n\nHe suspected word of his vigil would spread around the Compound soon enough. \n\nAt some point, Arvil slipped out of the nearby study. \n\n\"So, that explains the absence of my sweet briarthorn tea,\" the elf observed with a dry chuckle. \"Must you block half the corridor like some overbearing gargoyle?\" \n\n\"I'm afraid so,\" Chris opened one eye and grinned up at the brown-skinned elf. \"Your cousin has been keeping something from me, and I intend to have some answers. Plus, I'm having too much fun to stop now. Unless, of course, you'd like to tell me what you've discovered about Radek?\" \n\n\"Ahh, I see. No, I think I'll let her deal with this,\" he said warily, edging around the dragon just like the others. \n\n\"What's the matter, Arvil?\" \n\n\"Nothing, nothing my boy,\" he laughed shakily. The elf actually seemed nervous. \"Must be off to the kitchens for my tea though, helps with my headaches you know. Too much reading. As you were, I'm sure my cousin will arrive shortly.\" \n\n\"Sure,\" Chris smiled, playing his part perfectly. \"I'm not going anywhere.\" \n\nAlmost silent footsteps on the lush carpet heralded Reyla's arrival when she did eventually appear. A quiet sigh of exasperation confirmed her identity. He stood to face her. \n\n\"Did you really need to terrorise my staff, dragon?\" she tutted her mild annoyance, one hand on her slim hip. She was still wearing the lovely flowing gown he'd seen her in that morning, the blue fabric moulding to her tall figure wonderfully. \n\n\"Did you really need to lie to me?\" he countered. \"You've known something about Radek this whole time, I'm sure of it.\" \n\n\"I didn't lie,\" her chin rose defiantly, and she took on a practised, haughty air as she began walking toward him. \n\nHe shook his head at her antics. It was almost as if she was the one offended by his accusation. \n\n\"Enough!\" he barked, drawing her up a few meters away from him. They squared off in the corridor as he moved to block her path. \"No more games, Reyla. Lying by omission is still lying, no matter how you justify it. I thought we were making progress on trusting each other, but you have been holding back your cards this whole time. Tell me everything, explain it to me like I'm a child if you have to. What do you know about Radek and why have you kept me in the dark?\" \n\n\"Chris, it's not that easy...\" \n\n\"Stop,\" he closed his eyes, breathing deep to stem his growing frustration. \"If you value our relationship, stop. This is your last chance. Come clean about Radek, about anything else you think might concern me or mine. I am a simple man, I won't deal in lies or deceits or with anyone who tries to sell them to me.\" ",
        "She studied his face, finding something akin to sadness there. Disappointment? Her reasons for keeping her suspicions to herself seemed almost petty now, if she'd lost the trust of this dragon, this... Devine. Despite her best intentions, perhaps she had erred. \n\n\"Very well, come with me.\" She brushed past him, a slender black-padded finger tracing lightly across his strapping forearm. \n\nHe turned to follow, surprised that she breezed straight past her study and down the corridor. Her gently swaying hips were naturally enticing to his eyes, but he tried to keep his mind focused, he needed all his mental fortitude to wrangle with this eel of a woman. \n\nAround a sharp bend, the passageway ended abruptly in a rough-hewn wooden door. Conspicuous runes were charred into the thick planks of cedar, contrastingly dark against the beautiful reddish grain full of knots and imperfections. There was no door handle to admit them, but Reyla placed her palm on the wood and caressed downward. It shivered under her almost sensual touch, swinging open without so much as a push. \n\nChris paused on the threshold as she walked confidently into a small, intimate room that was apparently her personal quarters. He hadn't expected this. \n\n\"Come in,\" she turned, beckoning him past a fireplace that began to crackle with renewed life, perhaps sensing the presence of its mistress. \"Have a seat. I'm going to change into something more comfortable, my feet are sore.\" \n\nApparently nonchalant about leaving him in her little living room, she opened another door and disappeared. Whether on purpose or not, that door stayed open even as the one behind him swung silently shut. Beyond, he caught a glimpse of a huge four poster bed, draped with thick blinds. She disappeared behind an ornate changing screen, and he looked away in embarrassment. \n\nThe little living room was a curious window into her private life. It was not at all what he'd expected. What had he expected? Certainly not tiny, efficient, dark, warm, and... homely? A well-worn leather armchair sat next to the open fire, a soft blue blanket draped across its seat and backrest. Beside the chair, a box of cut wood waited ready for the fireplace. \n\nOf course, a bookshelf dominated the entire room and was filled to overflowing with what he assumed were her most treasured texts. So great was her love for the tomes that they were crammed into every available space, stacked almost perilously on the mantelpiece, and even stockpiled on the floor. The small table in the middle of the room was half covered with them as well. They teetered precariously in huge mottled piles, rising like uneven skyscrapers, towering over dark alleys below. It was a wonder the thing hadn't collapsed under the weight. The other end of the table was clearly her workspace, several books stood propped open or positioned on reading stands where she'd left them. \n\nA solitary light orb glowed softly in the low, domed ceiling. Its light could be supplemented by various unlit candles placed haphazardly around the room. \n\nThere was just one of everything, he realised. One armchair, one seat at the table, one set of utensils laid neatly beside the tiny sink in the far corner. \n\nCuriosity forced him to move over and examine the little kitchenette. He frowned, it could barely be called that. Just a sink, an earthen mug, a kettle for the fire, and a few shelves of dried herbs jars of sweets. What a solitary existence she led. \n\nThere was another narrow doorway beside against the wall here, with a handle this time. Internally, the debate only raged for a few moments. Curiosity got the better of him again, and he reached for it. \n\n\"It's mostly just books,\" Reyla said from behind him. \n\nHe whirled, red embarrassment rising in his cheeks. \n\n\"Sorry, I was... This isn't at all what I imagined.\" \n\nShe was barefoot, in her loose silken nightclothes once again. \n\n\"No matter. Excuse the mess.\" She motioned to the books on the table. \"I'm going to prepare a warm drink, would you like one? I have... oh. I have only one cup, sorry.\" \n\n\"No, it's fine. I came for answers, not beverages.\" \n\n\"Very well,\" she said, brushing past him in the confined space. \n\nHe stepped back, almost tripping himself with the wooden chair positioned by her table reading station. The brass kettle was soon filled with water, and she turned back to the fire, hooking it over a sooty rod, so it was suspended over the dancing flames. \n\n\"You don't have electricity down here,\" he noted aloud, thinking more to himself than meaning to speak the words. \n\n\"Appliances are too loud,\" she replied, running a finger disapprovingly through the thin layer of dust encroaching on the wooden mantlepiece. \"They disturb me when I'm reading or trying to sleep. My quarters are actually modelled after the rooms I grew up with in my house's Keep. Their familiarity is comforting.\" \n\n\"Your Keep? I would like to see how the Drow live one day.\" \n\n\"Ha! I don't think you'll be invited to any elven strongholds after the way you dealt with House Lefayd. Although,\" she considered him across the table piled with books. \"My Matriarch might consider you a hero for putting them in their place.\" \n\nChris winced. \n\n\"I may have gotten a little carried away. Is there likely to be any backlash against me? Susan has prepared a restorative potion with some of my own blood, I was wondering if you could arrange some to be delivered to the elf who's tongue I... liberated.\" \n\n\"Have a seat, dragon. We may be here a while,\" she gestured to the small chair even as she took the much more comfortable armchair for herself. It was her room after all. \"Hmm, I could arrange for the delivery of the potion, your reptilian nature would indeed be excellent for growing things back. I warn you though, it might not be accepted. I have heard that House Lefayd is furious, partly with you, mostly with themselves I think. They are ruined politically. The Synod has turned on Eramir at the behest of the vampires, he is in custody awaiting trial. They voted yesterday to administer truth syrup. I think he will find himself in Atlantis Prison for at least fifty years but who knows what else they'll discover during questioning. It remains to be seen if you will be shackled with reparations for the damages to Lefayd's property. I doubt it, seeing as you didn't kill anyone with that explosion. That was lucky, you have quite the temper. We share that at least.\" \n\n\"Indeed we do,\" he nodded. \"Well, I'll count myself lucky if things work out as you've said.\" \n\n\"I would watch my back if I were you,\" she warned. \"We talked about long memories this morning. Elves have some of the longest. Do not be surprised if you find a dagger protruding from your back in a thousand years and a Lefayd assassin whispering their regards in your ear.\" \n\nChris growled, his anger rising at the very notion. \n\n\"Peace, I am simply warning you to be vigilant. Now, you put on that performance out there because you want the truth about Radek?\" \n\n\"Yes,\" he calmed himself. \n\n\"I don't have truth for you, dragon,\" she sighed, glancing away from his intense gaze. How was he going to react? He was touched by the Old Gods after all. \n\n\"What?\" \n\n\"I have only a suspicion, though it grows closer to a certainty with every scrap of information we gather.\" \n\n\"A suspicion?!\" he asked incredulously, running a frustrated hand through his hair. \"I find that hard to believe. You've been holding something back on the subject for a while. The Synod has been too reserved about the root of their problems, too. Tell me, Reyla.\" \n\n\"He may be a demon,\" she said quietly, shrugging her slender shoulders. \n\n\"A demon? May be?\" His disappointment at the elf's elusiveness drained away. \"What do you mean a suspicion, is he or isn't he?\" \n\n\"Do you need a dictionary, dragon?\" A little of her own temper flared. \"One does not simply cry demon without proof. The last confirmed presence of one was over four centuries ago, a minor entity at that. Nor has the Synod been inactive. Some of their best are trying to hunt him, the only one who found his trail so far died horribly. You are the only Being who has survived an encounter with Radek. Others seem to die or simply fall under his thrall. At this stage, he is either an incredibly gifted, ancient, and psychotic mage or... a demon.\" \n\n\"Oh.\" \n\n\"Yes, oh. Given what I know of your involvement with higher powers and that hideous magic I saw in the footage from Brazil, I lean ever more heavily toward demon. Too many coincidences.\" \n\n\"Then why did you keep it a secret from me?\" he asked, disturbed and exasperated at the same time. \n\n\"Because before a few days ago, I was convincing myself that it couldn't be true,\" she answered in a short tone. \"You do not even understand the significance of a demonic presence, do you? What exactly would you have done with this unverified, potentially explosive information, hmm?\" \n\n\"I don't know,\" he said honestly. \n\n\"And how do you think Beings would react if they found out the Revelation was orchestrated, being forced on us by a bloody-damned demon?!\" \n\n\"Not well, I assume.\" \n\nThe kettle bubbled up with a hiss, water overflowing the spout to douse the rosy embers below with a hiss. The distraction took the steam out of the elf's own boiler. For a few minutes, they were both silent. Chris battled a mounting sense of panic, foreboding, and helplessness as he began connecting the dots. \n\nReyla took the hot kettle carefully back to the sink, setting it aside for a moment as she spooned a calming mix of dried herbs into her small teapot. A spoonful of honey followed before she poured the hot water over the top, releasing the pleasant scent of jasmine into the room. \n\n\"It would be an unmitigated disaster,\" she turned, finding him with his head in his hands, brought low by yet another burden it seemed. \n\n\"Arrrrgg! What does it mean?\" he croaked, his voice thick with pent-up emotion. \"Why me? What am I supposed to do?\" \n\n\"Oh, dragon...\" she took the few steps to close the distance between them, pulling his head into her tummy, holding him. She hadn't meant for him to suffer from this. For a few moments, she just enjoyed touching him for the first time, running her fingers over his thick neck, through his short, messy hair. Finally, as his breathing became steady once more, she tugged lightly on his ears until he raised his face to look up at her. \"If he is a demon, we will find the creature and kill it, of course.\" \n\n\"As simple as that?\" he chuckled wryly, his chin still resting on the thin silk covering her sylphlike lower abdomen. \n\n\"The simple plans are always the best,\" she said, patting his head almost maternally. Catching herself, she stepped away before they fell any further down the slippery mountainside of intimacy. Her tea was nearly ready. \n\nThe moment was not lost on Chris. Reyla could be gentle it seemed, and he had needed the comfort. The scent of her body and the lilac infused soap she'd used that morning still tingled in his nostrils. \n\n\"Thank you, Reyla. It's overwhelming to think that I must be connected to this somehow, that it's my responsibility to deal with Radek. I suppose in some ways I've felt it but... I just wish I knew what I was doing. Is that too much to ask from whatever chose to change me, to give me this power?\" \n\nThey regarded each other in cautious silence for a few heartbeats until she flicked an errant strand of white hair over her long ear and turned to pour herself a steaming, fragrant cup. With her back turned, she voiced her thoughts. \n\n\"If there's anything I have learned for certain about the Devine, it is that they are just as fallible as the rest of us, Chris,\" she spoke softly, pouring into her lone, fired-clay mug. \"Though their power outstripped our understanding, they still fought a war, still killed and died, still made mistakes, still had stupid laws which lead to the meaningless deaths of thousands of us. And it would appear their great Barrier still lets terrible things slip through every now and then. We might have worshipped them in the zealous youth of our time on this planet, but they were never omnipotent. You have a wonderful power, a rare gift to be sure, but dealing with a demon loose in our world is not your responsibility alone. I will help you and others will too.\" \n\n\"Thank you. That is at least a little reassuring,\" he breathed, some of the weight of responsibility lifting, if only for a few moments. \"Not the part about Devines being fallible though. What were they fighting over? What even are demons?\" \n\nShe put the mug to her dark lips and took a careful sip, considering her answer. \n\n\"I am almost certain the few demons to find a way through the Barrier over the last few thousand years have been lowly creatures. Though powerful by our standards, they must pale in comparison to the entities that battled with the Old Gods. I cannot say why they fought, I had hoped you might shed some light there, but alas, it seems that is not to be. Whatever demons are, they obsess with growing, with gaining power by consuming all around them, including each other. I have read that on the battlefield, it was not uncommon for a demon general to devour an officer who couldn't complete his tasks. They disposed of their wounded in a similarly inhumane way. But, there is the heart of what makes a demon. They consume energy, especially life and the concentration of magic associated with such high complexity. I have been told that sentients are especially nutritious.\" \n\n\"The village...\" he murmured. \n\n\"Yes, indeed. That is why I am now almost certain that Radek is a demon, I think they were reaped... like a crop of ripe grain.\" Reyla shuddered at the thought, blowing on the surface of her tea. \n\n\"Well? What do we do about it?\" he asked, almost accidentally knocking one of her books off the table with a frustrated swipe of his hand. \n\n\"Ahh, there lies a non-trivial problem. All investigations pertaining to demonic activity are the strict purview of the Synod. More specifically, that fairy bitch, Queen Magdalen. Strictly speaking, what you did down there was interfering with her investigation. Nothing will come of it because you didn't go down there to hunt him, but I'm required to pass on all the information you gathered.\" \n\n\"You've got to be kidding me. So what? Now we sit back and do nothing?\" \n\n\"I didn't say that,\" the elf grinned wickedly, her ears twitching. \"But we must be cautious with our plan. For a start, we will use your Familiar to hunt him. The humans have some impressive technology, I think they might surprise us. Magdalen cannot reasonably stop them without revealing that they suspect he is a demon. Who knows what trouble that would cause.\" \n\n\"I don't even want to think about it,\" Chris rubbed at his temples. \"The word is too religiously charged, we're already going to be branded as devil-spawn by half the world as it is.\" \n\n\"Exactly. The reaction amongst the Being population would be no less disastrous. In the past, the lower classes have been known to band together and openly run down demons out of fear, regardless of human collateral damage or the Synod's orders.\"  \n\n\"Shit, do we have options?\" \n\n\"I have another, less diplomatic, avenue we might explore. I would need your help to break into certain vaults to obtain rare texts that might contain spells to locate demons, amongst other things. That would be our last resort though, the consequences would be dire. There is still a good chance that the Synod can handle him themselves, though it doesn't help that they're so distracted of late. You haven't helped either. Magdalen was one of Eramir's firmest allies, and now she is busy maneuvering to keep her seat.\" \n\n\"What a mess.\" He slowly stood, his head coming close to the slightly domed ceiling. Suddenly the desire to get home was strong inside him, to seek reassurance and normalcy in the love of his brood. \"You've given me a lot to think about.\" \n\n\"Think nothing of it,\" Reyla almost purred, taking another languid sip from her comfortable seat as he moved toward the door. \"You see why I have been discrete, then? Our suspicions about his nature mustn't become common knowledge.\" \n\n\"Yes, I understand. You need to consider telling Michelle though, she'll be much more effective if she knows what she's looking for.\" \n\n\"I have considered it, but wouldn't she be obliged to report this to her superiors?\" Reyla asked. \n\n\"Maybe,\" he sighed resignedly. \"She certainly wouldn't appreciate being put in that position. She'll be furious if she's lied to though. I was.\" \n\n\"I'm sorry.\" Her head bowed in contrition, fine white hair flowing down from behind her ears to partially obscure her elegant face. Yet another gesture of deference which was probably rare for her, he thought. \"When I first decided to conceal my thoughts on the matter, I considered them hardly more than a fearful fancy. It seemed so improbable, the arrival of any demon through the Barrier is easily detected. The Synod's hunters converge and a short, sometimes bloody struggle ensues before the demon is dispatched. I still have no idea how Radek slipped past our detection.\" \n\n\"I guess we'll have to ask him one day.\" \n\n\"Be serious, Chris. What will you do, now that you have the burden of this knowledge?\" \n\n\"I truly don't know, probably nothing. Though the idea of marshalling an army of Beings and sweeping down the continent until we've flushed him into the sea does seem appealing. For now, I think I'll go home and find a way to distract myself.\" \n\n\"A dragon through and through,\" Reyla smiled, it might be nice to entertain him a while longer and move to other topics, but he was ready to leave. A flick of her wrist opened the thick door to the corridor outside. \"You have done all that could possibly be expected of you so far. Be at peace, Chris. Simply continue to gather knowledge and strength so that you may act if the opportunity presents itself.\" \n\n\"Thank you,\" he turned in the portal. \"Sorry about the drama before, I didn't... Still friends?\" \n\n\"Of course.\" \n\n*** \n\nHe did not return to the domestic bliss he so desperately sought after the frustrating conversation with Reyla. Raised voices in the apartment put him on alert as soon as he phased into his bedroom. Though muffled, a heated argument appeared to be underway in the borrowed hotel suite. \n\nHe knew that he shouldn't, but it didn't stop him creeping silently to the door, listening all the while. \n\n\"It's not that big a deal,\" Susan said, clearly trying to calm the situation. \"I'll just miss out this cycle, no one else will get put out.\" \n\n\"No!\" Annabel growled, followed by a dull thump that Chris would swear was her foot stomping the floor in outrage. So Annabel was adorably angry then, that couldn't be good. \"Lillian you're throwing your weight around again. This will be the third time you've broken the schedule, it's just not fair for everyone.\" \n\n\"Mother and I agree,\" Claire spoke firmly in his First's defence. \n\n\"You don't understand, Annabel. I need this, I need him,\" the vampire growled, her voice containing much more darkness than Chris expected. \"I will have him tonight. You will have to stop me by force.\" \n\n\"Here we go,\" he muttered, turning the door handle to step quickly inside before things soured any further. \n\nAll eyes turned to him, so many pretty faces set in relief, worry, love, concern, mischief, longing, and finally, feral hunger. \n\nLillian practically launched herself across the table at him, eyes black and full of promised death. It took all his mental fortitude to stand firm, bracing himself to receive the jarring impact that came half a second later. She coiled around him like a python, her pencil skirt ripping up the seams as her lush thighs encircled his waist. The fabric was no match for her undead strength, and he didn't bother resisting her lest he meet the same fate. ",
        "Her warm lips found his neck, followed by her fangs. Strong arms slipping around his shoulders, the vampire squeezed him like an almost empty tube of toothpaste. She moaned in satisfaction as he splashed hot and nourishing across her tongue. \n\n\"Miss me, beautiful?\" he teased, kissing into the chestnut hair flowing over her neck as she fed. Chris chuckled when she didn't respond, putting his hands under her large thighs for support as he finally spared a glance around at the other women in the room, realising that both Hailey and Michelle were witness to the spectacle. \n\n\"Well, thank goodness you arrived. She was becoming downright scary,\" Claire sounded both relieved, and a little humorous. \n\n\"She's done this before?\" Chris asked, rubbing a hand up and down his thirsty vampire's spine as she fed slowly, contentedly. At least she was learning constraint there. The strange experience was much more pleasant when she didn't latch on like an industrial vacuum cleaner. \"I heard some of the argument, you guys were pretty loud.\" \n\n\"Yeah, she's jumped the queue a few times,\" Annabel moved closer to the pair cautiously. \"I've never seen her as bad as that though, her eyes were almost black.\" \n\n\"She must be quite hungry,\" Petra agreed, looking stunning as ever as she sat at the kitchen bar in a dark blue dress that couldn't make up its mind if it wanted to be a negligee or not. \n\n\"You should have just agreed with her,\" Susan tutted from the kitchen. \"It's not worth the risk. Vampires can go a little crazy when they're starving.\" \n\n\"She's probably right, Annabel,\" Chris agreed, even as said vampire harrumphed quietly against his skin, showing she was at least still attending the conversation. \"Lillian's need is almost medical when she's truly hungry, she does require some special access at times.\" \n\n\"Okay, I understand that, but I'm just worried that we are beginning to form a pattern of her bullying her way into extra nights with you.\" \n\n\"That's also a valid point,\" he admitted. \"And we're going to have to find a solution somehow. I can't have my vampire challenging my First.\" \n\n\"I think I should be in charge of punishment!\" Immi cackled from a bar stool, her slender blue legs coming nowhere near the floor. \n\n\"Who said anything about punishment?\" Chris wondered to himself. \n\n\"You know what?\" Annabel grinned wickedly. \"I think I like that idea. You can crack the proverbial whip for me, Immi.\" \n\n\"There's not going to be anything proverbial about it,\" Immi grinned wickedly as she eyed the greedy vampire. \n\n\"Oh, God,\" Claire laughed. \"You're screwed, Lillian.\" \n\n\"I'd better be soon if this dragon knows what's good for him,\" she finally spoke up, nibbling rather firmly at the bulge of his trapezius, the muscle tense as he supported her weight. \n\n\"Ouch! Okay, okay,\" he set her down and pointed toward the waiting darkness of his bedroom. \"Go. I'll be there in a minute.\" \n\nShe didn't go quickly, making a show of clinging to him before finally allowing him to peel away. The strut she employed in her seemingly reluctant departure was beyond ridiculous, but it still captured his attention like a moth to a flame. The smouldering look she shot over her shoulder as she disappeared set his cock throbbing, pleading to chase after the lusty goddess without delay. \n\nHe looked guiltily back to the other ladies, they'd all seen his eyes follow the vampire. \n\n\"Ahh... No punishments just yet. Sorry, Immi,\" he recovered. \"Did anyone find out how her trip went?\" \n\n\"She had to kill someone, but she managed to reign in the hotheads,\" Michelle spoke up from the living room. \"So, that's about as well as expected.\" \n\n\"You'd better hurry, dinner is almost ready,\" Annabel sighed, still a little testy about Lillian's disrespect. \"I suppose I should just keep yours in the oven?\" \n\n\"You're the best. Sorry, Dee,\" he took her in his arms and kissed her forehead. \"Duty calls.\" \n\n\"More like booty calls,\" she countered sarcastically. \n\nClaire's beautiful laughter seemed to melt the darker mood that hung over the women after the confrontation. She joined their embrace, hugging both he and Annabel from the side. Emerald eyes glittered delightedly as her hand expertly found his cloth-trapped erection. \n\n\"Let's not pretend you don't love pounding the shit out of that fat-assed vampire.\" \n\nChin raised, she met his startled look and reached down to his tumescence provocatively. \n\n\"Guilty,\" he gasped, trying to focus on anything but her teasing. \n\n\"Then don't let her fuck up your pussy ecosystem.\" \n\n\"My...ec... ecosystem?\" he stuttered. \n\n\"Yes.\" She abandoned his throbbing member and turned to his First. \"Annabel, I love you like a... a sister? A great friend? I don't know, we're brood-buddies, right?\" \n\n\"Absolutely!\" \n\n\"I don't... Lillian's not the same,\" the young dragoness shrugged, looking back up to Chris to see if he understood. It was tricky to explain. She slipped out of their arms, moving to stand with her mother and stealing a sip of the fresh-squeezed juice she was drinking before continuing. \"I don't get the same good vibes from her, and I certainly wouldn't want our kids around when she has a vamp-tantrum.\" \n\nShe wondered what her mate had to say about that. At least he appeared to be taking a thoughtful moment or two to consider his response. \n\nHis brow furrowed as he finally elevated his gaze to meet both dragoness' concerned looks. The approaching meteoric impact of fatherhood weighed heavily on him, a responsibility from which there was no hiding. \n\n\"I think you'd be surprised, she's very protective. I'll talk to her though, she was out of line today. But you also need to cut her some slack, she's going through a lot.\" \n\n\"We know, and it's not too bad,\" Annabel consoled, watching the emotions play across his handsome features. \"We're all new at this, Lillian especially.\" \n\n\"She deserves our patience and support,\" Petra agreed, nudging her daughter playfully. \"It wasn't so long ago that you were the one causing a stir, remember, dear?\" \n\n\"It's true,\" the redhead admitted, her hand resting peacefully on her slightly rounded tummy as her mind raced back to that first glorious afternoon when they'd coupled for hours on end. \n\n\"Bridges?\" Annabel asked almost teasingly. \n\n\"Fucking bridges,\" he smiled ruefully, the upwelling of love he felt for these women making his eyes water for a happy moment. \n\n\"Try giving Lillian a good spanking,\" Susan tittered, completely shattering his lovestruck musing. \"Your father used to do things to his vampire lover that would've had me avoiding chairs for weeks, but the woman seemed to love every second of it if her screams were any way to judge.\" \n\n\"A spanking, aye?\" Chris recovered, catching Annabel around the waist without warning and lifting her off the ground. She shrieked happily as he swept her into the kitchen. \"A spanking might work on a good, God-fearing, Laramie girl...\" \n\n\"Ahh! Haha, no, don't... stop!\" His First half protested, half giggled, slapping at his chest as he manhandled her threateningly. He was all bark though, and she landed breathlessly on her feet only moments later. She sniffed, the first scents of caramelisation drew her focus to the fragrant pots bubbling on her stovetop, and she moved to stir them. \n\n\"My point, is that I hardly think a good spanking is going to resolve the behavioural problems of a five-hundred-year-old vampire courtesan.\" He flashed a knowing look at Petra, meeting her twinkling green eyes. \"So far my experience indicates that she finds it quite pleasurable, so it's just as likely to reinforce bad behaviour.\" \n\n\"It's all about application,\" Petra devouring him with her gaze. \"Some women respond well to a firm hand and a short leash in the bedroom, even finding it brings a certain peace of mind for the rest of the day. If you know what I mean, lover?\" \n\nThe corners of her eyes were so beautiful when she smiled like that, worrying her plump lower lip between white teeth. \n\n\"I think I know exactly what you mean, minx. Don't forget to remind me next time the opportunity presents itself.\" \n\n\"Mmhh, I can't wait,\" the blonde dragoness shifted restlessly in her seat. \n\n\"Would anyone else like to volunteer?\" he asked cheekily, meeting each woman's eyes in turn. Susan demurred, blushing furiously and Annabel just shook her ass at him and waggled a disapproving finger over her shoulder as she tended to dinner. \n\n\"Me! Me, me, me, me!\" Immi almost launched herself into the ceiling with her frantic flapping. \n\n\"Of course you, little one,\" he laughed. \"That was assumed.\" \n\n\"I'd like to try,\" Claire admitted \"So long as you're not too rough. Hey, you should try giving Lillian some itch, it always makes me all warm and cuddly inside for days.\" \n\n\"I agree. It's a delightful sensation, for a dragoness at least.\" A frustrated shriek of impatience echoed through the wall, and Petra laughed. \"I think you'd better go see to your vampire before she tears your bedroom apart.\" \n\nHe decided to sally forth before the lusty creature burst free, and he was forced to suffer the indignity of his brood's instruction as she took him on the kitchen floor. \n\n\"Have fun, babe,\" Annabel called after him. \"But please try to make it quick, we were all going to watch a movie after dinner.\" \n\nChris was almost at the bedroom door when he remembered the two other women. It was only fair that he go check on them too, especially Hailey, who'd only just begun to hang around the suite in the evenings. \n\n\"Hailey, Michelle, sorry about all this. Are you okay?\" he asked as he walked back into the living room. \n\n\"I'm fine,\" Michelle looked up from her tablet, brushing an errant lock of dark hair behind her ear. \"That was moderately entertaining, but I guess we'll have to find some other time for that... activity we discussed earlier.\" \n\n\"I look forward to it,\" he smiled, turning to the petite blonde and her stack of research papers. \"Hailey?\" \n\n\"A little shaken,\" she admitted, a finger holding her place in the additional figures section of an article about the availability of water on Mars. \"I swear Lillian's eyes could have sucked the blood right out of me. I don't think it's wise for you two to be away from each other for more than a few days if that's the result.\" \n\n\"You're absolutely correct. We should have thought about what might happen if either of us was delayed. At the very least, Lillian should have a small bank of my blood put away for emergencies. What are you reading about there?\" \n\n\"Oh, it's nothing much,\" Hailey put the article down entirely to beam up at him. \"Just a new study. Nerdy space stuff, you know me. You'd better go see to Lillian. She doesn't strike me as the patient sort.\" \n\n\"You're right about that too, beautiful,\" he leaned in and kissed her forehead affectionately. \n\n*** \n\nLillian was a vision, waiting naked for him on the bed, pale skin glowing in the light coming through from the bathroom. Powerful, lithe, and possessing a seemingly bottomless well of sensual confidence, she reminded him of a lazy, big cat waiting to pounce. \n\nYet, a darker thing still dwelt in her core. It was there, right behind her laser-focused eyes. The lovely warm hazel colour might have returned with her light feeding, but he knew her inner beast lay close to the surface. Good. \n\nPounce she did, as soon as he abandoned his clothes. She practically threw him onto the bed with her telekinetic power. \n\nThe warmth of her smooth thigh on his skin as she straddled him was delightful, making his cock throb and leak. Alabaster curves jiggled delightfully as she settled slowly, purposefully into his lap. Chris watched in awe as her engorged, dewy womanhood spread open with her powerful legs. Finally, the heat of her sex settled onto the thick root of his erection, bathing his weighty balls in the first slippery moisture she dripped. \n\nHe propped himself up and they kissed a little, but he couldn't resist pushing her backward in his lap to worship her bounteous breasts. The large, pebbled areola that topped those pale mountains of soft perfection deserved extra attention. And so, he lapped, sucked, and even grated his teeth gently against her sensitive flesh until her light brown nipples were swollen and she moaned his name in protest. His calloused hands roamed the sexy curves of her lower back, running up her flanks so his thumbs could tease the bulging side-slopes of snowy tit. \n\nAll the while, her smooth, ripe womanhood squirmed up and down along the underside of his throbbing cock, her hips hunching languidly. She looked him straight in the eyes, a fang-filled exhalation of excitement on her lips. \n\nThey both gasped in delight when, with a helping hand, his angry red cockhead finally slipped into her clinging, buttery furrow. With practised ease, she hitched her hips, sitting deeper into his lap as he slid home. Barely half of him was inside when her womanhood seemed to boil over with pleasure. \n\n\"Fuck yessss,\" she hissed quietly, eyelids fluttering as the sudden climax began to roll over her. \n\nChris watched in awe as her thighs quivered, her powerful muscles tensing and spasming as she cried out wordlessly. His throbbing cock was in heaven as she came, awash in her hot nectar. Her inner muscles squeezed him, seeming to urge him deeper. With a grunt, he wrapped his arms around her hourglass waist and forced her downward until her fluttering quim swallowed him completely. It earned him a few scratches across his shoulders, but the weight of her pliant, warm ass finally settled in his lap more than made up for it. \n\nEye to eye, Chris leaned forward across her pillowed breasts to kiss her again. His beautiful, pregnant vampire. But the hungry fiend had other, tastier things to wrap her lips around. As they began to fuck, slowly at first, she latched onto the strong, excited pulse of his jugular once more. \n\nThey rocked together, his iron hard cock locked in her slippery, steaming embrace. She surrounded him, sucking him deeper with every caress of hot, pink flesh. They were the perfect sexual match, made for each other, and she cried out as he filled her to the brim. \n\nWhen she threw her head back and began an almost guttural keening, he knew her second orgasm was a monster. He held still as she thrashed above him, pulling his head into her cleavage in a credible attempt to drown him in soft, sweaty jiggling. \n\nHe grinned up at her as a gush of warmth spread over his churning testicles and into his lap. Locked in a death grip by her strong arms and rippling womanhood, he let his own fangs grow and carefully sank the very tips into the pale skin just above her pebbled areola. His itch rushed into her bloodstream, its fey magic seeming to extend her climax almost torturously until she pushed him away and rolled to the side. \n\nHis raging cock was rudely abandoned with an audible squelch, glistening and streaked with her fluids. She curled into a ball beside him and shook, overstimulated as enormous aftershocks of pleasure raced through her inundated nerves. \n\nChris wasn't anywhere near done with her though, and his throbbing penis demanded its immediate return to her molten embrace. She offered no resistance when he stood and dragged her across the sheets to the corner of the bed. Covering her body with his own, he kissed and nuzzled at her flushed breasts and soft neck as she recovered. \n\n\"Let her out, Lillian,\" he whispered when her brown eyes finally regained focus. Smoothing back her long, flowing hair, he took her face in his hands and pressed their noses together. \"For the rest of the night, I want you to release her. Let go, and let me take care of you.\" \n\n\"Chris, I...\" \n\n\"It's okay, my love,\" he soothed, thumb brushing across her flushed cheek. \"It's part of who you are, and I love every bit. Let her out, please.\" \n\nHe watched as she hesitantly accepted his request, her beautiful eyes darkening. There seemed to be an internal struggle going on because she twitched beneath him, tensing momentarily before a shudder ran through her lush frame and the beast was back. \n\n\"Hello, beautiful,\" he smiled down at the vampiress, expressive eyes replaced with bottomless black once again. \n\n\"Thank you, young one,\" she nudged up into his face like an affectionate feline, her wicked black claws tracing carefully across his back. \"It's nice to come out and play.\" \n\n\"Well,\" he chuckled, spreading her legs and raising his hips to slot the huge tip of his manhood back into the frilly wet of her coral-flushed inner labia. He didn't sink deeper despite the inviting wiggle of her hips, just thrust minutely back and forth between her puffy, stretched lips. \"We can play. But when we're done, you're going to stay with me, and we're going back out there to watch a movie with the girls. And you're going to play nice.\" \n\nOne of her eyebrows cocked upward as he spoke, a challenging smirk growing on her lips. \n\n\"Is that so, little dragon? Well, I don't... Fuuuuuuck!\" \n\nHe thrust into her savagely, spearing her to the bed and mashing downward to grind his spongy helmet against her cervix. \n\n\"You will do this for me!\" he growled, circling his hips, stirring his throbbing cock inside her. \"You will respect my mates.\" \n\n\"Yes,\" she croaked, her sneer melting into a lidded expression, exultant and loving. \n\nSquirming beneath him, she raised her long legs until her knees almost touched her shoulders. He couldn't help flexing his pulsing erection inside her as she aligned their hips. He was saddled to do some serious deep trenching, and it appeared that was exactly what she wanted. \n\nWith only token resistance, he gathered her taloned hands above her head and held them there as he reared back and sank slowly but undeniably back to her core. \n\n\"Unngg... dah! Feed me that big dick, that's just what I need. Hold me down and take me!\" \n\nHis member slid against every sensitive fold, stretching her delightfully. Those deep blue eyes of his, so intense and loving, seemed to fill her wicked, vampiric soul just as thoroughly as the pillar of male godhood dominating her greedy, juicy cunt. \n\nHer breath rushed out of her heaving, swaying chest as he began to rut. Leisurely, powerful thrusts at first, building quickly to use every ounce of his inhuman strength. His heavy scrotum slapped wetly against her upturned ass, the room filling with the heady fug of messy, unrestrained sex. \n\nGone was the vampire's smirk of superiority. The ancient courtesan's cheeks were rosy, flushed as she moaned out her approval of his lusty efforts. He was beginning to breathe heavily under the pleasurable assault of ploughing his beefy cock in and out of her soft heat. He savoured sinking to the root, mashing her swollen little pleasure bean at the base of his cock. He loved when their smooth pubic mounds collided as he plumbed her depths. She seemed to like that too, squirming and hunching her hips to meet his every lunge. \n\nWith, savage, pounding thrusts, he fucked Lillian hard and fast. It made her enormous breasts ripple and sway hypnotically, her nipples grazing his skin whenever he wasn't trying to capture them between his lips. Their bodies slapped together loudly, drowning out all but the vampire's loudest screams of approval. He was rough in ways he would never be with his other women, abusing her undead strength and resilience as he gripped her hips and thighs for purchase. His cock was in heaven, racing to orgasm as he ploughed through his mate's velvet furrow like a prize stallion. \n\n\"Shiiit, I'm cuummming again!\" Lillian squealed, legs kicking uncontrollably, and toes curling as her powerful body tried to throw him off. She was drowning in pleasure, but he was not to be denied his own release. \n\n\"That's it,\" he coaxed hotly in her ear as she flooded around his cock. \"Let it all out. I'm going to come soon. Tell me you want it, my dirty little piglet.\" "
    ],
    "authorname": "ltpc",
    "tags": [
        "fantasy",
        "non-human",
        "dragon",
        "magic",
        "romance",
        "incest",
        "harom",
        "vampire",
        "elf"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/endangered-ch-10"
}