{
    "title": "Lost Girl: Julie's Story Ch. 03 Pt. 01",
    "pages": [
        "This is the cross-over piece between 'Lost Girl' and 'Big Girls Don't Cry', and it's really two chapters in one, which is why I've had to split it, otherwise it would be far too long to read and take in. Hopefully this will finally link and draw a line under both stories for all those readers who asked that the two original stories be combined to make one narrative.\n\nThank you for your patience and forbearance, and I hope you enjoy this as much as I enjoyed writing it.\n\nBB1958\n\n***********\n\nJULIE:\n\nMark came back from his monthly two-day visit to the Bristol office today looking more tired than usual, so for once, instead of leaping frenziedly on him, as is my usual ploy whenever we've been apart more than 12 hours, I kept Markie and baby Nia quiet, allowing their poor daddy a few hours rest before fatherhood and family once more became a part of his life. \n\nMark had to go and see his team members in Clifton every month; with promotion had come responsibilities, but the trip always tired him, as all the problems that had no pleasing, easy solution were obligingly piled on his desk; all the nice, easy issues with easy solutions were sorted out lower down the tree, leaving him to try and organise his team, motivate them to meet their targets, write appraisals, and formulate solutions for problems that had no solutions; all the 'buck-stops-here' problems, in fact. It's a wonder he still had all that lovely bright gold hair of his... \n\nWhen he came in, though, tired as he was, he'd kissed me gently, looked around to make sure Markie wasn't in the room or anywhere in sight, and pulled me close for a long, hot kiss. The growing bulge in his trousers rubbed deliberately, pleasurably, across my slit, making me gasp, and his hands found their way under my skirt and into my panties, cupping and squeezing my bum-cheeks while a finger somehow managed to snake its way into my tight bum-hole. That alone left me in no doubt what he'd been thinking about on that tedious train journey back from Bristol, then all the way across London from Paddington! \n\nI giggled into his mouth at that, squirming delightedly against him; my Mark knew exactly how to heat me up in the shortest possible time, and he'd just hit the jackpot; if the girls had been with Mummy-Anh, I'd have yanked his pants off there and then and climbed on that big cock of his without a moment's hesitation; he wasn't the only one missing a little one-on-one! Mark kissed me one last time and, still holding me by my bum, pulled back a little to look into my eyes.\n\n\"God, I missed you, Tink,\" he grinned, \"and I missed these as well!\" he whispered, his hands squeezing me again as he spoke, and I knew just from the movements of his hands inside my panties as he squeezed my cheeks that what he wanted to be doing right now was pounding me through the mattress. I grinned and clenched my bum-cheeks, letting him know I knew what was going through his mind, but not making a move to drag him into the bedroom and de-bag him, as I would normally have done by now; I could see the exhaustion in his eyes, and for what I planned on getting from him, I needed him wide awake and raring to go.\n\n\"Get some sleep, Peter Pan,\" I smiled, \"You look like you've had a bad night on the varnish. Get a couple of hours rest. I'll call you for dinner, and then, when the girls are asleep, I have plans for you! If all goes according to plan, I'll be waking up in the morning bow-legged and rubbed-raw; how does that sound?\"\n\nFor answer, he pulled me close again, grinding his crotch against mine, letting me know just how much he wanted me. After more than two years, my Lost Boy still needed to touch and hold me as much as the first night we ever got together; believe me, the feeling was entirely mutual; whenever he went away, I felt a peculiar, ragged sense of loss, an emptiness and almost physical pain that didn't go away until I was running my hands through his soft, golden hair once more, congratulating myself again and again on hooking and landing such a beautiful, sexy, truly wonderful man. \n\nMark had been forced to reject me by our lunatic mother, her price for not destroying me; she'd driven him to the brink of suicide, she'd made his life a living hell, and yet he'd kept me safe the whole time; he'd taken a beating to ensure I never had to, and I owed him for that. It was a debt I was glad to repay, with every breath of my body, every beat of my heart, and every stroke of his thick cock deep inside me. \n\nMark, too, hated to go anywhere without me; I think he felt the same separation anxiety I felt when he had to go away, and I didn't blame him, not after what he'd been through. That loony bitch kept the threat she'd crush me with the law if he didn't toe the line constantly dangling in front of him, and so she'd kept him dancing on a short leash, sick with fear, for almost three years while she went slowly ga-ga.\n\nNow that mad bitch is dead; she died alone, almost two years ago now, a victim of her own fondness for the booze, unwanted and ignored, and if there's a hell somewhere, she's probably burning in it. I have my Lost Boy back; I will always be his 'Tinkerbell'; we found our own Never-Never Land, and we love each other even more strongly now, because of what we had to endure to win through. \n\nAnd we even have a new mum! My best girl Nia, (who I think is possibly the most beautiful girl I've ever seen) has the loveliest, smartest, most loving mum in the world, and now she's mine as well; before Mark ever came back to me, Mummy-Anh became for real the mum to me that she'd always been in every way that counted; I can't even remember when she stopped being 'Mrs. M' and became just 'Mum', and it doesn't matter; she's there, that's all I need to know.\n\nWhen I was a little girl, it was Nia's mum who made sure from the earliest days that I was always treated like one of the family, someone who belonged there; it was she who tended me and kept me safe when my crazy, drunken bitch of a mother assaulted me, and it was she who taught me what growing up, love, compassion and family was all about. I owe my family to Mummy-Anh, Nia's mum, my mum. When Mark finally came back, she took him into her heart too, and made him hers as surely as she had done for me, showing him what a real mother was, and giving him all the love and care a mother showers on her son. \n\nMark feels about her the same way; growing up he was shamefully neglected by our mother, who spent all her time drinking and never had any time left over for him. He never got to be a little boy because he had to be the grown up and raise me, when he was just a little boy himself. \n\nMummy-Anh understands this, which is why she makes an especially big fuss over him, constantly letting him know in a million small ways that there's a place he belongs, and a family who cares about him. We named our second daughter 'Nia', to honour my best friend, but also to honour Mummy and link them together in a special way; when we told her, it was the first time I'd ever seen Mummy cry. \n\n(There's a special bond between my babies and Mummy, a genuine grandmother and granddaughter connection, as deep and loving as the bond between her and little Jamie and Laura, and Bethany's two, Ryan and Jodie, who looks so much like Nia it's uncanny. My own little Nia knows when she's going to Mummy-Anh's house; she won't settle-down until she's cradled in the hollow of her nana's neck, or perched on her hip, and once she's with Mummy-Anh, she'll sleep the day away; she knows she's safe and with family.)\n\nI herded Mark into the bedroom (without too much resistance, I have to say; poor boy really was exhausted...) and watched him shed his clothes and climb gratefully between the sheets.\n\n\"You'll wake me for dinner, promise?\" he asked, and I nodded. I had already cooked dinner; it was keeping warm in the oven, so he could snooze as long as he wanted, which should take the edge off that exhaustion I could see in his eyes. I kissed him and watched him slide under the covers with a grateful sigh; 10 seconds later he was out like a light. \n\nThe girls were in their room, supposedly having a nap, but after a while I got to wondering why one of them hadn't come wandering out looking for something or other; my two little girls seem to thrive on a night of broken sleep; it seems like every hour they're waking me up for something, but I hadn't seen hide nor hair of them for nearly an hour now, and when I looked in, their cots were empty. \n\nI immediately checked our room, and there they were, fast asleep, Markie cuddled up against her daddy, lying on her tummy with her little bottom stuck in the air, and Nia lying in the crook of his arm, with their daddy's arm wrapped protectively around both of them. I paused to wonder how, at only 13 months, Nia had managed to climb up there as well, but when it came to snuggling with her daddy, no barrier was too high.\n\nI smiled, and, I'll admit it, my eyes welled-up at the sight of my perfect family; three bright golden heads in a row, all sweetly asleep. We took the long way round, and we both took a lot of hurt, but we got here eventually. I went back down to the kitchen and turned off the oven; Mark was so deeply asleep it would be cruel to wake him, and the girls had their daddy, so they'd stay quiet all night. I grinned wistfully at the lost opportunity and got a duvet from the airing cupboard; it looked like a night in the spare bedroom for me... \n\nA finger gently tracing the outline of my nipple woke me up, and there was Mark, looking young, tousled, delicious, and wide-awake, with that beautiful, sexy grin of his, the one that used to make all my work colleagues go weak at the knees, that bang of golden hair falling down over his eye, and that light in his eyes.\n\n\"Hello, my golden-haired little sex-elf!\" he whispered, running his finger down my abdomen and back up between my breasts to scratch my chin. I smiled at his private nickname for me, and he knelt down by the bed to kiss me.\n\n\"I put the girls back in Markie's bed; they're both sound asleep; so, Tink, you wanna play?\" he whispered in my ear, his hot breath sending shivers up and down my spine. Did I? What a stupid question!\n\nHe saw the answer in my eyes, so picked me up like I weighed nothing and carried me into our room, where he laid me down on our bed, at the same time sliding off my panties as I tugged off the T-shirt of his I was wearing. I smiled happily at the sight of his shapely, muscular body, all the weight he'd lost from his ordeal with our crazy mother now back on him, and he looked fit, tanned and gorgeous. He went to slip off his shorts but I batted his hands away; this was my job!\n\nI slid his shorts down, and his thick cock sprang out, thicker than I could get my whole hand around, nearly eight inches of solid, meaty goodness, all ready to take me to the best places in the world. I felt my pussy twitch in anticipation, a sense of warmth pervading that whole area, and I knew my labia were swelling and engorging, ready for him to shove that big thing of his into me!\n\nFirst things first, though. Mark pulled me up to kiss me again, then gently pushed me back down, slipping his hands under my thighs to urge them open and then squeeze my bum-cheeks as he lowered his head to kiss and lap at my seeping slit. I writhed and sighed as his probing tongue licked me from my bum-hole to my clitoris, still hooded but I could feel it stiffening as he sexed me up, and when he slipped his finger into me while licking my clit, I nearly passed-out with the sensation. Mark knows exactly what to do to turn me into a sexed-up, quivering mass of jelly, and he proceeded to do just that. \n\nHis fingers and tongue probed and rubbed, licked and kissed, while I literally saw stars as waves of pleasure raced and crashed through me, each one bigger than the last, battering me with increasing pleasure, until at last, the tension building inside me couldn't contain itself, and when he pushed his tongue between my labia and simultaneously rammed his middle finger up into my bum, I came in a supernova of pleasure, pulling a pillow over my face to muffle my shriek as Mark once more took me to the heights, his tongue and talented fingers doing things to me that I could never describe, only ever crave.\n\nThe thunder of blood in my ears finally died away and I relaxed my death-grip on the pillow, allowing Mark to pull it away and pull my naked body against his.\n\n\"Jeez Tink, you must have really needed that!\" he grinned, bending forward to kiss me, his tongue twining with mine as we kissed hard enough to leave bruises. Making love to Mark is, for me, the pinnacle of achievement, my reward to myself for having lost him for so long. The only man for me, the only one who could ever be for me, is my big brother, my darling Mark.\n\nAs we kissed, I could feel his hardness bumping me, so I nipped his lip while grabbing that thing, squeezing him to watch the expression on his face, the look in his eyes.\n\n\"What are you planning on doing with this thing, then?\" I taunted him, knowing full well what I wanted to do, and Mark, playing along with that beautiful grin on his face, straddled me, shuffling up along me until his cock-head was level with my face.\n\n\"You know what we both want, Tinkerbell, don't leave me hanging!\" he grinned, so I grinned back and slowly, lingeringly licked the slick, glossy tip a couple of times, enjoying his soft gasp, then sucked the bulbous head into my mouth, savouring as always the saltiness, the musky tang, and the faint background sweetness that was so much a part of my man. As I sucked him, his smell wafted over me, that scent-complex unique to him, not sweat, or soap, or cologne, but the clean smell of his skin, the warm freshness of his own bodily oils and secretions, and the faint, salty, ozone tang of the lubricant pouring from the tip of his cock. Mark always smelled fresh to me, like a gentle sea-breeze, and I was addicted to that scent.\n\nAs I sucked, I could feel his body tensing and relaxing as he fought the urge to ram that thing in my mouth, to face-fuck me; Mark wouldn't do that to me, which is why I loved giving pleasure to him. While I suckled on him, my hands alternated between squeezing and fisting that gorgeous cock of his, and gently squeezing and stroking his scrotum, urging him to give me what I wanted now. I could hear his breath shortening, and his pulse, drumming in that wand of flesh in my mouth, was rising as his own climax approached, so I sucked harder, wanting the finish, wanting my man to have what he'd just given me.\n\nHis breathing was becoming louder, and beginning to hitch as he struggled to hold himself back, prolonging the pleasure I was giving him, and as I squeezed his scrotum I could feel the change as it went from loose bag of skin to tight, ridged saddle under the base of his cock. One more suck and a healthy squeeze of his shaft as I pumped him, and he gasped explosively as his fat cock jumped and twitched in my mouth. \n\nThis was what I'd been waiting for. I clamped my lips around him as a stream of thick creamy spunk jetted out of him and hit the roof of my mouth, then another, then another, filling my mouth and barely giving me time to swallow before I was filled again. Mark's spunk tasted, as always, salty and creamy, with a delightful background tangy sweetness, delicious and wholesome, and though I'd only ever had one other sample for comparison, when I'd thought he was gone forever, I knew this was the taste for me, this was what my man had for me, and it was what I wanted from him, and only him.\n\nThe jets of sperm stopped, until only a trickle ran from the end of his cock, but I sucked every last drop out of him and polished the head with my tongue before grinning and sticking my tongue out to show him I was finished. Mark, as always, grinned when I did that.\n\n\"You dirty girl!\" he smiled, climbing off me to slump down next to me and once more curl his hands around my bum, pulling me closer so our bellies were touching, his still-erect cock sandwiched solidly between us. I raised an eyebrow and grinned at him.\n\n\"You love it, Mark Jameson, don't you come it with me!\" I retorted, leering at him as I rubbed myself against him, rolling his cock between us and making him gasp. Mark leaned down and kissed me.\n\n\"Every time I go away from you and the babies it feels like I'm in free-fall, I feel so lonely and lost, and it doesn't go away until I walk back in the door; coming home always feels like Christmas; promise me it'll always be like this, Tinkerbell!\"\n\nI swallowed the suddenly enormous lump in my throat, love for this beautiful boy-man flaring huge and possessive inside me.\n\n\"I promise you, Lost Boy, it will, oh it will!\"\n\nI couldn't help the tears that spilled down my cheeks as once again the little boy who needed to be held and loved re-surfaced, all the lost days of his stolen childhood showing in his eyes. I'd nearly lost him once; he'd nearly been taken from me forever; he'd even thought the unthinkable, and that fear for him still lurked deep inside me.\n\n\"I love you Tinkerbell!\" he murmured, wiping my tears away with his thumbs, then pulling me close to kiss me long and tenderly, showing me with his lips what his heart was feeling.\n\nI eventually surfaced for air, my body tingling with the impact of that kiss, aware, too, of the hardness trapped between us. I grinned and reached down to give it an experimental squeeze, seeing the laughter in his eyes as I did.\n\n\"What shall we do with this, Peter Pan?\" I grinned, the need to have my husband inside me, locked away deep in my body, suddenly rearing up inside me. \n\n\"Are you ready to take me back to Never-Never land, Peter?\" I asked him softly, seeing the smile spread across his face, like a new dawn rising.\n\n\"Always and always, Tinkerbell!\" he breathed, kissing me again as he rolled me onto my back and reared above me, his cock prodding and nudging at my swollen labia, teasing me, torturing me even as I squeezed and fondled him, massaging his balls and making his cock rear up even stiffer, harder, and more angrily engorged. Every time I tried to guide him into me, he grinned and pulled back, instead sawing the ridged underside of his penis against my sensitive, swollen labia, torturing me even more.\n\n\"Mark!\" I hissed, and once again that smile flowered as he slowly pushed forward, once more stretching me as he slid into me, filling me as only he could, lights flickering in my peripheral vision even as he began fucking me, prelude to the orgasm I knew he'd give me. I began to move against him, meeting him as he thrust into me, those lights flickering brighter now as wonderful feelings uncurled and spread through me, taking me with him as he sped up, pounding into me as I humped madly back up at him, until, with a searing, soundless explosion inside the very centre of me, my orgasm flared through every fibre of my body, all my senses fleeing as the pleasure overtook me. \n\nDimly I heard his groan as I tightened around him, but the sensation of his cock swelling inside me and pumping me full of his own special tribute was real, and present, the feel of his body-heat pouring into me cutting through all and telling me that my man was here, with me, making love to me, because he loved me. That knowledge alone was enough to send me off again, Mark groaning as I tightened around him again and again, milking him of every drop of his male essence, wringing him dry.\n\nWe lay in the afterglow, Mark next to me, holding me close against him, while I rested my head on his chest, rejoicing in the nearness of him, the warmth of him against me and the sound of his heart beating, the realisation of the dream I'd once thought gone forever. I was drifting away, warm and comfortable, when Mark stirred restlessly. I know his moods and manners intimately, so I knew he had something to say, maybe not important, but it was bugging him, so I rolled onto my side so I could look into his lovely, dove-grey eyes and maybe get him to share.",
        "\"What's up, Lost Boy, bad day at the office?\" I opened, giving him a chance to tell me what was on his mind.\n\nHe looked pensive for a moment, then his eyes focussed back on me.\n\n\"It's nothing, Tink, really, just...odd.\" \n\nI quirked an eyebrow at him, indicating he should go on, so he did.\n\n\"It's just something strange that happened in the pub at lunchtime. I walked over to 'The Colston Arms' pub near the Bristol Royal Infirmary to get a pub lunch, and I was just about to bite into my sandwich when this guy slapped me on the back, calling me 'Darryl', and asking how someone called 'Lena' was, then he took a good look at me and went all red and embarrassed and apologised profusely; obviously he'd mistaken me for someone else, but it got me thinking.\"\n\nI waited, as he was still ravelling a thread, but I didn't see what he was so disturbed about. He put his arm around me and held me closer, chewing his lip distractedly while staring at nothing.\n\n\"And...\" I prompted, breaking him out of his reverie.\n\n\"This is not the first time, either; I usually eat in one or other of the pubs around the Bristol Royal Infirmary, because the office is on St. Michael's Street, just behind the hospital, and this has happened at least half a dozen times over the last couple of years; it's not just people doing a double-take or something, either; they've been literally nose to nose before they realise I'm not this 'Darryl' person.\" \n\nHe shivered, and I pulled myself closer to him.\n\n\"It's weird, Tink, and it's starting to freak me out; there's someone wandering around Clifton with my face, and it's an eerie feeling. Supposing I turn a corner and walk right into this guy; aren't you supposed to die when you meet your doppelganger? What do they call it? Your 'Fetch' that was it; it was a story I read in a book of folklore when I was a kid, and it scared the shit out of me, it still does. What if it's true?\" \n\nI stared at him, but bit back the sarcastic comment; he was really freaked by this, so instead I grinned and bit his ear.\n\n\"You better hope there isn't another one of you out there; otherwise I might be tempted to look him up, just to see if he got the same bits you did!\" As I said that, I tweaked his cock, making him jump and grin, and bore in, that light in his eyes that told me he was going to tickle me.\n\nHe did, for a while, but then he discovered something even more interesting to do, and tired me out in the best possible way. Funny thing, though, as he was ramming that lovely thick cock of his deep into me, I had a momentary image, or vision, of him sitting in a waiting room or office with his double, both of them talking animatedly, then both of them looking at me, but his double was older than him, with green eyes; it was only a momentary flash, but it put me off my stride for a second; why had I imagined Mark's double with my eyes? Mark noticed my distraction and chose to concentrate me by slipping a finger into my bum and frigging it, something guaranteed to get my attention!\n\nI slept late the next morning, not even stirring when Mark took the girls over to Mummy-Anh's house so she and Dada Morrison could spoil them for a while, and to give Mark and me some time to play as well.\n\n*\n\nDARRYL:\n\nI was almost late for work this morning; I suppose I could have made an extra-special effort, but when you have a wife like Lena needing \"just one more hug, baby, pleeaase!\" who can really blame me? I didn't blame her at all for clinging a little; we were two surgeons down on the board, with another due to retire, so everyone was backing and filling to try and prevent an unacceptable backlog building up. \n\nThese days all we ever had were lectures from the Hospital Trust about 'Cumulative Targets', costs per patient unit, Clinical Excellence, Core Competencies, Priority Categories, and care at the Point of Need, but no mention of getting in additional surgical staff to relieve the stress the Trust was putting the remaining staff under to try and offset government targets on waiting times. So we worked longer hours, and added more and more cases to each of our boards, and tried to work our way through, while still trying to have some semblance of family life.\n\nLena knew I was tired, that there were days I was so dog-tired and dispirited I really just considered packing it all in and applying for a post at a local General Practice surgery; sometimes the thought of handing out prescriptions for ointment to haemorrhoidal old women seemed infinitely more attractive than standing in the Operating Theatre for fourteen hours a day, with more of the same the following day, and no end in sight. \n\nThen I remembered why I was doing this; it was for Lena, like everything I did, because she'd believed in me, and loved me enough to put up with it, and for our children, our little boy, David, and our baby daughter, Maureen, little Mo-Mo, an adorable miniature of Lena as I remember her when she was tiny, only with white-blonde hair, not chestnut, and green eyes, not blue, genetic traits from my side of the family. \n\nAnd how do I remember Lena when she was tiny, you may well ask? Because I grew up with her, that's why; we grew up together thinking she was my little sister; in actuality she was my aunt, but now she's my wife, pure and simple, nothing else, the love of my life, and the most beautiful woman I've ever seen. \n\nSo I slogged on, on my feet most of that long, long day, but when I walked into the Operating Theatre, and the next patient was rolled in for the team, prepped and ready, the weariness and disillusionment fell away, and the training kicked-in. \n\nOnce I escaped from the scrub room, though, the weariness dropped onto me; me and everyone else there, from the scrub-nurses to the Anaesthetist, to the closing team; we were all under pressure, and there seemed no respite, and we bitched and moaned, but we'd still come back tomorrow and do it all over again. But not me; I had a whole two days off, oh bliss!\n\nIt was long past dark when I got home. Lena was waiting for me, wearing her favourite robe, a light, diaphanous confection, but the house seemed unusually quiet; no sounds of children, no sense of their presence, no mum, no TV burbling in the background, just Lena. I looked quizzically at her, and she smiled that triumphant little cat-smile she gets when she's pulled one over on me.\n\n\"Mum took them to Lizzie's place; she thinks we need some time together, so tonight, Doctor Darryl, it's just me...\"\n\nShe stood up and let her robe slip to the floor; she was naked, her pale skin flamed to golden by the warm light from the single table lamp illuminating the room and making her chestnut hair glow a deep and intense russet brown. Seeing my lovely wife like that shrugged the weariness off me in a heartbeat; now I wanted her, like I'd never wanted her before. \n\nLena is unchanged by four years of marriage and motherhood; she still looks exactly like the slim girl I married, the girl who ran away from home with me one fateful night four years ago, her skin still taut and clear, more like a young girl than a mother of two. Her blue eyes were dazzlingly bright and alluring, her round breasts still firm and jutting, crowned with perfect, coral-pink nipples for me to fondle, squeeze and suckle, her crimson lips still beckoned me with promises of kisses and more.\n\n\"You've been working far too hard, baby,\" she murmured, \"so I thought you needed a little playtime. Are you ready to play with me, Darryl? We can play 'doctors and nurses'; you can examine me, and I'll take care of any swelling, how's that?\"\n\nMy cock was like an iron bar as she finished, that secret little smile of hers all I needed to tell me she knew exactly what she was doing to me. I opened my mouth to frame a suitably lewd reply, and suddenly she was in my arms, her arms around my neck as she kissed me, her body warm and lithe, soft and firm in my grasp, the scent of her hair and the taste of her lips beyond anything I can think of to compare them with. Being kissed by Lena is a production number, and right now she was putting all her effort into it, and it was working, to judge by the truly astonishing erection I had suddenly grown, something she was quick to notice.\n\nLena smiled minxily as her hand slipped down to brush against my straining erection.\n\n\"Oh look, Doctor, you're far too tense, would you like a special massage to relieve the swelling?\" she cooed, her eyes hooded as she made a moue, her lips pursed in mock disapproval, but all I could think of was how heavenly it would be to kiss those lips, to run my hands over that clear skin, to hold those breasts in my hands and squeeze the nipples gently, to squeeze and hold those firm, rippling bum-cheeks apart as I held her and pounded into her, equal parts lust, desire and love churning in me as my gorgeous wife tempted me.\n\nI managed to nod, and Lena slipped out of my grasp, leaving behind the merest hint of a kiss as she dodged me, instead sliding to her knees and fumbling with my belt buckle. I attempted to help her, but she slapped me gently on the hand.\n\n\"Ah-ah, naughty-naughty, Doctor Darryl. This is Nurse Lena's job!\"\n\nI grinned happily.\n\n\"What a wonderful wife I have; who knew she'd be so talented!\"\n\nLena drew back and looked up at me, her eyes large and luminous in the soft golden light, and her expression sly and wanton, even as she unzipped me and reached into my shorts to squeeze and fondle me.\n\n\"Tonight you have no wife, Dar; tonight all you have is your dirty, slutty little sister! I told you once, a long time ago, that I would never let my big brother go, that I'd keep him safe and locked away inside me until I needed him; well guess what? Tonight that's who I need, so that's all you are, and one way or another, my big brother Darryl's going to fuck hell out of his naughty, dirty, slutty baby sister, and enjoy every sleazy, sordid, filthy second of it! Am I getting through to you?\"\n\nShe gave my already throbbing cock an extra squeeze to emphasize her point, but she needn't have bothered; she'd gotten through to me alright. Long ago, I'd given her an ultimatum, a selfish and self-centered choice that eased my mind over what we were doing; be my sister, and walk away, or be my wife, and forget she was my sister. Lena had chosen to deny the 'sister' part of herself, because she wanted me, and because that was what I wanted. \n\nNow I finally understood how wrong that was, what I'd forced her to give up; Lena was my sister, she always had been, as well as my wife, and more, and I'd been wrong to not even try and see her that way. \n\nNow, as I let that go, my cock was like an iron bar at the thought of finally fucking my little sister, all the inhibitions and conditions I'd made when we first embarked on our life together completely forgotten; now Lena was my beautiful, desirable baby sister, she was on her knees in front of me in all her naked splendour, and all I wanted to do was shove my cock in her mouth, fuck her face, then use all her other holes and punish her with pleasure for being such a naughty, dirty, slutty little girl!\n\nLena grinned as she caught the change in me, her dream from all those years ago finally becoming reality; now she could finally live her fondest dream, to be fucked, hard, by her big brother, the one thing she'd always wanted, and the one thing I'd always been unable to let her have, because my head didn't work that way. \n\nNow that had all changed; my head had suddenly changed, and when I looked at her, it was like the old trick drawing; was it a vase or two faces in profile? Suddenly I was seeing both aspects of her, and with that the separate images of sister and wife finally came together and into focus, and they were both Lena; desirable, enthralling, beautiful far beyond what I deserved, and both mine for the taking.\n\nBut not tonight; tonight my wife was 'somewhere else', and she'd left my naughty little sister in her place to pleasure me...\n\nLena grinned as she tugged my trousers down, making sure she rubbed and squeezed me through the material of my shorts, keeping me focussed as I tugged off my shirt and dropped it on the floor. Lena helped me out of my trousers, and now I was standing in only my shorts, toeing-off my shoes as she squeezed and groped the obscene tent in the front of my shorts.\n\n\"Ooohh look, is that all for me?\" she cooed, knowing full well what her voice and hands were doing to me.\n\nBy now I was almost bursting with the need to do something, anything, to her; I wanted her to suck me, squeeze me, toss me off, anything to relieve the pressure building inside me. Lena obviously sensed the need raging in me, her sensitive fingers picking up the ripples and tremors of my straining muscles. The smile on her face as she slid my shorts down was triumphant; she had me where she wanted me, and she knew I knew it too. \n\nOnce she'd tugged my shorts all the way down, she smiled up at me, that slow, delicious smile of hers, full of love and mischief, then slowly licked my straining cockhead, just the merest touch with her little pink tongue-tip, but enough to send a thrilling shock through me. She did it again, feeling me responding to her, and when her lips finally encircled the head of my cock as she sucked me into her mouth, I nearly went-off there and then. Lena sensed my excitement, and scraped my perineum with her fingernail, not enough to hurt, but enough to back me off a little.\n\n\"Calm down, big brother of mine, we have all evening!\" she husked, looking up at me with those stunning blue eyes of hers. When she had my full attention, she smiled a slow, naughty smile, and once more slid her crimson lips over the head of my straining cock.\n\nNow she began to suck in earnest, the heat of her mouth a treat and a curse all at once; it was too much pleasure, especially combined with the delightful suction as she sucked my cock, once again almost making me blow my load. I knew she had more to offer, so I gritted my teeth and tried to ignore the wonderful sensations as she sucked me, her teeth barely grazing me as she worked me in and out of her mouth, until she was bobbing rapidly, sucking as she did, and it was making my brain melt; all I wanted to do right there and then was let go and keep shooting until I collapsed; all thoughts of anything else had fled by now, and there was only her, and the hot, insistent suction, and my building climax.\n\nLena must have known she'd taken me right to the brink, because she stopped, looking up at me once more with that mysterious, almost cat-like smile on her lips.\n\n\"Are you ready now, big brother?\" she murmured, and I nodded in agreement, still too ramped-up to speak coherently. She grinned again, once more that slow, liquid smile that melted my resolve and turned my spine into hot jelly whenever she used it on me\n\n\"Good. Come here, baby, Nurse Lena has something for you!\" \n\nWith that I helped her to her feet and she led me to the big couch. I noticed in passing that it was piled with pillows and quilts, but Lena was still occupying all my attention; the view of her walking away from me was almost unbearably arousing, her perfect bottom calling out to me to do all kinds of naughty things to her. \n\nLena plumped up some of the pillows, then lay down on the couch, reclining with her head in her hand, and looked up at me, her eyes huge and luminous, the most beautiful thing I'd ever seen.\n\n\"Darryl, I've loved you every day of my life, in every way it's possible to love someone. I love my big brother, now come here and love me the way I want; be my brother again, make love to me and make me your little sister once more!\"\n\nI'd thought my cock was erect before, but that was nothing compared to the aching rigidity now as my need for her flamed up higher and hotter than ever. I slid onto the couch next to her, my hands once more sliding over her satin-smooth skin, once more feeling the warm vitality of my girl under my probing, stroking hands. Lena pulled me closer, my need now apparent in her eyes too, recognition that we both wanted the same thing, and as I slid over her, our lips met, sealing us together as our tongues fenced and swirled. I broke our kiss to look at her, bathed in the golden light, drinking in the sight of this beautiful girl, my wife, my sister, and as I dipped down to kiss her again, I slipped into her wet heat, sliding into her until our pubic bones bumped together, filling her with myself.\n\nLena gasped against me as I pushed my way into her, her smooth thighs lifting to clasp and hold me as I mounted her, her hips lifting to meet me, and as I withdrew, so she dropped away, to meet me again, and again, as we made love silently, our lips sealed together as our hips clashed and drew apart again and again. Her pussy rippled along the length of my cock, tightening and squeezing rhythmically as she orgasmed continuously, the taboo act we'd finally allowed ourselves to admit increasing the erotic charge sparking between us. \n\nLena's breath was coming in sharp gasps now, and her heart was drumming against my chest as I rammed myself into her, her climax close. Mine was also close, so close, all it would take would be just one more thing and I would be over that edge with her. And then suddenly we were both there. Lena's eyes squeezed tightly shut as she screamed piercingly, her pussy convulsing and clamping around my pumping cock, stopping me in my tracks, the constriction finally tipping me over the edge as I came like I had never done before.\n\nMy body went rigid, sweet painless agony pulsing and throbbing through me as I shot bolt after bolt of hot sperm deep inside her. Never before had I come so hard or so much, or so it seemed as I poured into her, all my senses muted as the feeling of joining with her took over my body, until, at last, I slumped down next to her. My heart was racing, hammering in my chest, and I gasped and shuddered, finally understanding the connection so many writers had made between orgasm and death.\n\nLena turned to me, her soft lips nibbling my neck as she rubbed my chest, soothing me, calming me after my storm, until I was finally able to draw a normal, if somewhat shaky breath.\n\n\"Christ Almighty, that was amazing, baby, what did you do to me?\" I grinned. \n\nLena leaned over and kissed me, then grinned her usual, impish grin.\n\n\"You bedded your baby sister, that's what it was, you nasty man; you finally let yourself go and pumped all your nasty stuff into your dirty, slutty, sordid little sister, and you loved it! Just think, you came so hard inside her, you may even have given her a baby!\"\n\nI looked up at her, at her smile, and realised she wasn't joking.\n\n\"Is that what you want, Princess, another baby?\" I asked her, and smiled at her slow nod.\n\n\"So that's what all this seduction was about! You didn't need to, you know; you know I love making babies with you, Lena; look how well we've done so far! You didn't have to ambush me, Princess; nice as it was, a vague hint would have done the job; you know how I feel about you every second of the day!\"\n\nLena grinned, again that impish, impudent grin she has when she's happy.\n\n\"I know, but it was so much fun this way, plus I got to play with my big brother again!\" \n\nHer eyes became wistful, far-away for a moment, and I realised what this evening had meant to her. I pulled her close and nibbled her ear, something she loves, while finally accepting that I'd turned a corner in my head, and the pledge I'd made her take so long ago about who and what we were was finally gone and forgotten.\n\n\"Tell you what,\" I whispered, \"anytime you need your big brother back, you just come and see me, I'll go get him, okay?\"\n\nLena looked at me, her eyes big.\n\n\"\"You'd do that for me, Dar? Really? Thank you baby, thank you!\"\"\n\nI kissed her on the tip of her nose.",
        "\"No, thank you, Lena. I finally worked out who I really am; I'm your husband, I'm David and Mo-Mo's daddy, and, when you need him, I'm your big brother too. I almost lost you once, Lena, because I was too stupid and immature to listen to what you were trying to tell me. I'll never let anything come between us again, and so, when you need your big brother to scare away the monsters, or to be your best friend again, or to fuck you rigid, he'll be there, I promise.\"\n\nLena's eyes filled, two big tears running down her cheeks even as she smiled happily at me.\n\n\"Even if you are my big brother, I'm so glad I married you!\" she chuckled, laying her head on my chest as I hugged her to me.\n\nIt was wonderful to just lie there, naked, uninhibited, no chance of the children wandering in and seeing us 'au naturelle', no getting up to sort out feeds, drinks of water, lost teddy-bears, or any one of the hundred and one things that made up the rattle and hum of our daily lives; tonight it was my darling girl and me, alone and at peace, basking in each others' full attention. \n\nI was just beginning to doze when Lena's fingers drummed on my chest.\n\n\"Dar, I almost forgot, there was something I wanted to tell you; Emma dropped-by this morning. She had a day off, so we took the kids for a stroll through The Birdcage, had a coffee, you know, the usual. Anyway, when we got back, I started lunch while she put the kids down for their naps, and I came in to ask her something, and she had Mo-Mo and she was staring at her; poor thing, she was crying. Of course I asked her what was wrong, and at first she was all dismissive, she wouldn't say anything, then it all came out in a rush; she was remembering holding your cousin Julie just like that; apparently Mo-Mo looks like Julie at that age, the last time she saw her, the same smile, everything, and it brought it all back for her; how she thinks she didn't do enough to get Julie and Mark away from your aunt Sandra, and how worried she was that something had happened to both those kids, and if it had, it would all be her fault for not trying hard enough to get them somewhere safe.\"\n\nLena paused, her eyes far away as she gathered her thoughts.\n\n\"Of course I told her it was all nonsense, that I knew she would have done her best to help them, but she wouldn't have it. Dar, you promised her one day you'd try and find out what happened to Julie and Mark. They're your family; maybe they need help, or maybe they're beyond help now, God forbid. Either way, Emma needs to know; they're her family too, and she's carried this around for over twenty years now, and it's too much guilt for her to carry around; she tried; now I think it's time we started trying, too. We need to start making some enquiries, some sort of effort to find those kids; Emma's done so much for us, for you; this is the least we can do for her.\" \n\nI find it impossible to refuse Lena anything; she knows this, so makes a point of never asking me to do things for her; for her to ask me this showed just how concerned she was for Emma, bless her, so of course what could I do but agree? Besides, she was right; I owed Emma that much, at least; apart from my other aunt all the way over in Sydney, Australia, Emma was the only family I had on my father's side, my biological father's younger sister, and an important part of my family. \n\nI smiled at Lena, and kissed her once more for being so thoughtful.\n\n\"I'll give Georgie Patterson a ring in the morning. You remember her, don't you? She studied for the Intercollegiate with me. She's the Paediatric Registrar over at St George's now, which is the last place we know for certain Julie was; Georgie's mum is Custodian of Patient Records there, too, and Georgie's a good friend, I know she'll help if I ask her. She'll have to work on her mum for me, though, because I hope you're aware, young lady, patient records are confidential and sealed under the Data Protection Act. Maybe she can 'accidentally' dig-out an address, somewhere to jump-off from. It's all I can think of right now, but I don't know where else to begin.\"\n\nLena slid herself on top of me, holding my face between both hands so she could kiss me.\n\n\"Thank you Dar, this will mean so much to Emma!\" she breathed, wriggling on top of me in a way that started all kinds of other interesting things happening. My hands found themselves clutching her deliciously firm, jiggly little bottom, their favourite resting-place, and Lena's wriggling became more concerted, our sexes rubbing together and becoming excited again. Lena lifted her head to look me in the eyes, the look in her own eyes mysterious and sultry.\n\n\"Dar, I wasn't joking about a baby, you know...\" she murmured, gently grinding and rubbing against me.\n\nI grinned back at her as I pulled her even tighter against me, Lena gasping as my now fully erect cock pressed against her still-swollen pussy.\n\n\"I know, baby sister, I know...and, just for the record, neither was I...\" I murmured as I slowly pushed into her once again, taking full advantage of the opportunity to fuck my little sister all over again.\n\n*\n\nJULIE:\n\nMark seemed to have forgotten about his unsettling encounter the following morning; when he arrived back from Mummy-Anh's house, he found me freshly-showered and cooking breakfast, which he ate with gusto, while completely neglecting to tell me he'd already had breakfast at Mummy-Anh's house; she believes that food is a sacrament, and sharing is a duty, so anyone who walks into her house invariably gets a loaded plate thrust at them and an injunction to \"eat, eat, it is good for you, you are so thin, please to eat, now!\" Dada Morrison had gotten used to seeing the postman, the milkman, the newspaper boy, and, on one memorable occasion, some bloke whose parrot had escaped and flown into their back-garden, sitting at the kitchen table and stuffing Mummy-Anh's wonderful cooking into their faces.\n\nMark, of course, like that other walking stomach, Jamie, never says no to a plate of grub, and, as he'd skipped dinner the night before, I let him off the hook this time, but with a stern injunction not to go scrounging at Mummy-Anh's, which he'll ignore, of course. But for now, he was stuffed, the kids were with their grandparents, and I had my golden-haired hunk to myself for the next few hours, while Mummy-Anh walked around with Nia on her hip, both of them yakking away in Vietnamese, while Markie and little Jamie and Laura, Nia's twins, used Dada Morrison as an impromptu climbing-frame, hobby-horse, bouncy-castle, and occasional garden-swing.\n\nMark waited for me to finish my breakfast, but he had that look in his eye, the one that told me he needed a little time with me, so I made haste; Mark isn't normally demanding or possessive of my time; as long as I'm nearby, within earshot or touching distance he's at ease and calm in himself; he knows I have a house to mind and two little ones to care for, but occasionally I pick up on his need for a little cuddling time too, especially after he's had to spend time away from us at the Bristol office, and now was one of those times.\n\n\"Do you want to go somewhere more comfortable, Lost Boy?\" I asked him softly, and he nodded gratefully, so I took his hand and led him back up to the bedroom; if we were going to pillow-talk, I damn well wanted some pillows to do it on.\n\nOnce we were stripped-off, I climbed into bed and beckoned him over, Mark grinning as he slid in next to me so I could run my hands over him, to once again feel and stroke and luxuriate in the nearness of him and lose myself in his alluring scent complex. (All through both my pregnancies I had to cover my pillows with his shirts so I could smell him while I slept, something that amused him no end, as he could smell nothing, but I could have tracked him on a pitch-black, windy night by that scent; I still can; I love how my man smells.)\n\nMark seemed to feel the same way I did, spooning me close, his warm hands roaming gently over my flanks, my tummy, cupping my breasts and gently brushing my nipples, then slipping down to cup my pussy and stroke my inner thighs, while his lips nuzzled gently at my neck, not to excite or arouse me, just keeping contact, maintaining that closeness that was so much a part of who we were.\n\nAs we lay there we talked, about the children, his work, our plans, some of the good memories of our childhood (and we did have those, too, despite what our mother had been like; mine all revolved around Mark, who'd done his level best to bring me up despite being just a little boy himself, my teenage crush on Jamie Morrison, the day I realised what I was feeling for Jamie was nothing compared to what I felt for my brother, all those things we'd done together...) \n\nWhile we talked, the memory rose up again of his face when he'd told me about his double, the flash of real fear I'd seen there, the memories of the little boy suddenly gripping the man, and a sudden thought struck me, literally an idea out of nowhere.\n\n\"Mark, about what you told me last night; you've been mistaken for this other bloke in Bristol, this 'Darryl' person, time and again, yes?\"\n\nMark grunted assent, not really wanting to talk about it, I knew.\n\n\"Supposing he looks so much like you because he's some kind of relative? What if we have a relative wandering around Bristol? After all, we don't know where mum came from, or if she had any family, nothing about her at all; all we know is she was born in somewhere called 'South Mead'; what if this 'Darryl' is one of her relatives?\"\n\nI was guessing this bloke might be mum's relative; much as it pained me to admit it, Mark and I looked a hell of a lot like her. I even had her green eyes, so it was unlikely he was some relation of Mark's father (or mine, I suppose...), not if people were mistaking Mark for him.\n\nMark sighed softly.\n\n\"Then I don't want to know; she's dead and gone, and her past is gone with her, and that's just fine by me; where were they when we were young and really needed them, how come we never saw hide nor hair of them? We have Mum and Dad Morrison, Jamie and Nia, Shelagh, Bethany and Corey; they're our family, they're the ones we turn to, and they're the only ones I care about!\"\n\nI wasn't done, though; the whole idea intrigued the hell out of me.\n\n\"Mark, what if this 'Darryl' guy is our relative but he doesn't know it, what then?\"\n\nMark pulled me closer, and when he spoke I could hear the finality in his voice.\n\n\"Then it doesn't matter, Tink; let sleeping dogs lie, it's better this way. We have our family. They're the ones that matter; they're the ones we love and keep close. That's enough for me, and it should be enough for you, too. Let it go, Tink, please!\"\n\nI knew him better than to try and pursue this conversation any further; besides, he was right; we lived in the middle of a warm and loving family circle, we didn't need 'what if' to make our lives complete. Still... \n\n*\n\nDARRYL:\n\nWork over the next few weeks kept my nose more or less to the grindstone, with only the knowledge that Lena, David and Mo-Mo were waiting for me at the end of each day keeping me going. I was really starting to flag; the relentless workload was beginning to tell on all of us; then suddenly the Trust reversed its position and started cutting elective surgery patients off the waiting lists, only allowing medically sanctioned surgery to be carried out. Suddenly I was working a 40-hour week again, the vacant posts in the surgical team were being advertised, and I had time to spend my weekends with my beautiful wife and kids again.\n\nThe weekend after I'd worked my first normal week in God knows how long, I woke with a sense of happy well-being at the thought of no work for two whole days, and an even more pleasurable feeling lower down; Lena had me in her mouth, and the warm wetness was what had woken me. As I opened my eyes, she looked up at me, her brilliant blue eyes wide and innocent, and completely at odds with her devilish grin as she suckled on me.\n\n\"Hi sweetheart, can I help you?\" I grinned, with Lena grinning back at me as she slid her lips off my swollen cock.\n\n\"Now you're awake, Dar, I want you to do something for me!\" she smiled, that slow, dirty smile she does so well, and I felt my spine prickling with anticipation.\n\n\"Anything for you, Princess, you know that!\" I replied.\n\nLena slid up and on top of me, her lips a fraction of an inch from mine.\n\n\"I want my big brother to fuck me really hard!\" she murmured, a wicked grin on her lips. \"I want you to shove your big cock inside me and make babies in me, in your naughty, slutty little sister!\"\n\nAs she spoke, she squeezed and rubbed me, turning my already respectable erection into a throbbing, blue-steel hard-on; Lena has that effect on me. I pulled her closer by the simple expedient of clenching her taut buttocks and pulling her up to me, our lips meeting in a most enjoyable kiss, while she rolled her stomach against mine, squeezing my trapped erection between us.\n\n\"Lift up, baby\", I instructed, but she shook her head.\n\n\"No Dar, I want to do it this way...\"\n\nSo saying, she slipped off me and knelt-up on the bed, holding the headboard as she stuck her round and juicy little rump out. I needed no second prompting, and quickly got into position behind her, kissing and nibbling her neck while my hands squeezed her breasts and rubbed her nipples, before drifting down to lightly rub at her hooded clitoris, making her gasp and press back against me.\n\nI was enjoying myself, my cock wedged between her plush bum cheeks while I squeezed and manhandled her delightfully firm tits, Lena making little mewing sounds as I did something she especially liked, until finally she'd had enough.\n\n\"Now Dar, do it now...\" she moaned, taking hold of me. I needed no further prompting, pushing forward as she aimed me, and we both groaned as I slid into her up to the hilt, my senses reeling at the feeling of my cock buried in her hot, lush succulence. I pulled back and slid in again, listening to her muttering and gasping as we fucked.\n\n\"Yess, like that, oh God, like that, yess, yesss!\" she muttered constantly, her round buttocks bouncing against me as I rammed into her as hard as I could, holding and squeezing her breasts as I pummeled her. I could feel her hand as she rubbed herself while I pumped her. For some reason the thought of her and what she was doing made me even hotter, but when she started talking to me was when I lost it.\n\n\"Oh yes, Dar, that's it, fill me up, put your baby in me, you know you want to, fill me up, lover, shove that big-brother cock into me, make your sister pregnant, you know you want to..!\" \n\nI lost all control over what I was doing. All I wanted to do was to fill her with myself, to pump my seed into her and fill her with my baby. I think she sensed what she was doing to me, and that's what tipped her over the edge; I felt her body stiffen, and her pussy clamp down tight around me as she gave a loud, gasping groan. As her pussy tightened around me, holding me in place, I lost all restraint, my own orgasm blazing through me, blurring my vision and dulling my hearing with the intensity of it. \n\nI groaned out loud as jet after jet of semen pulsed out of me, spraying deep into her, filling her to the brim with my seed. Lena pressed back against me as her pussy convulsed, each contraction milking more sperm from me, until I had no more to give.\n\nI pulled her back to lean against me, my hands still clamped on her breasts, our hearts hammering together from the force of our release. At some point I let go of her so I could lie down; I was absolutely bushed, and an almost overwhelming need to sleep was on me. Lena also lay down, but with her feet up on the headboard. I grinned at her, and asked her what she was doing. She grinned cheekily back at me.\n\n\"I don't want any of you leaking out of me, babe, so this is the best way to keep it all inside me; I really want this baby!\"\n\nI had to smile, even in my exhausted state, closed my eyes, and that was all she wrote.\n\nI came half-awake with the sound of my phone ringing and Lena answering it; I heard some muffled conversation, then she was nudging me.\n\n\"Dar, Dar, wake up, Dar, it's Georgie Patterson, she wants to talk to you. Dar!\"\n\nStill fuddled by sleep, I couldn't work out who the hell Georgie Patterson was, or why she was calling me, then it suddenly fell into place, jolting me into full wakefulness; I'd asked her to do some digging for me in the Patient's Records library, maybe she'd found something...\n\n\"Georgie, hi, what are you doing calling at such an ungodly hour?\" I grinned, expecting a verbal raspberry back.\n\n\"Darryl, good morning!\" she sang in my ear. \"Was that the delicious Lena answering the phone? She must be sick of you by now; when's she going to realise the truth and come see me for some real loving?\"\n\nGeorgie is a beautiful girl, tall and willowy, with huge, melting, Bambi eyes, long, golden-brown hair, and bee-stung lips, the cause of many an unrelieved erection in the lecture halls, and a completely committed, very definite lesbian, not so much predatory as eternally hopeful ever since she'd first clapped eyes on Lena.\n\nI just grinned; we'd played this game for years, and she knew the rules.\n\n\"Down, girl, behave yourself, no touchy-touchy, remember? Behave!\"\n\nI could hear her pout over the phone.\n\n\"You know what, Dar? One day you'll take your shifty little eyes off that gorgeous little poppet, and poofff! She'll be mine, go on, admit it, you know it's true; be afraid, Dar, be very afraid!\"\n\nI had to give her 8 out of 10 for persistence and optimism, but we both knew it would never happen; Lena was mine, and I was hers, and we both knew it.\n\n\"Okay Georgie, fun's over, why don't you pull your knickers back up and tell me why you called?\"\n\nGeorgie laughed, that lovely tinkle that had once had half the student body (and most of the lecturers) drooling over her, alas to no avail.\n\n\"I had a word with mum about your request, so she went and did a little out-of-hours snooping; I'm sorry, Dar, she couldn't turn up anything, but not to worry, she'll keep on digging; a lot of the records libraries across the Trust are still being consolidated and transferred to disk, so her records may yet turn up. Sorry I couldn't do anything further, Dar, really, I know this means a lot to you.\"\n\nWe bantered a little more, then Georgie had to go, and I started to climb out of bed, anxious to grab a shower and then call Emma to let her know we'd fallen at the first fence, but we weren't done yet, when I felt Lena's hand on my shoulder.\n\n\"Where do you think you're going, Mister?\" she asked in a stern voice.\n\n\"I'm getting a shower, then I'm...\" I trailed off as she slowly shook her head.\n\n\"The kids are fast asleep, it's a beautiful morning, and I'm full of the joys of spring; all I need now to make it a perfect morning is for you to fill me up with other things. Are you ready, Dar? First things first, baby!\"\n\nHow could I resist her when she put it like that? I did have all day, after all, and she was definitely right about one thing; first things first...\n\n*\n\nOver the course of the summer false hope after false hope surfaced, only to be dashed; each girl we found was too young, too old, wrong ethnicity, had no siblings, or too many siblings, wrong hair/eye colour, a long trail of dead-ends and missing links. Emma took it all well; poor girl, she was just happy that someone was helping her at last. \n\nShe felt she had a lot to atone for, no matter what Lizzie, Lena, her own kids, or I told her; she'd got it into her head she'd abandoned Mark and Julie when they'd needed her, and our 'one-step forward, two steps back' lack of progress was slowly wearing her down. We'd even recruited Aunt Doreen, and at the weekends she and Allie, almost 17 now, the spitting image of Lena, and a real head-turner, would scour the internet looking for clues, all to no avail.",
        "My relationship with Allie had blossomed over the years; because I was her big brother, she'd come to me with the things she couldn't or wouldn't tell her dad, and leave me to work it out for her, while she and Lena huddled together and watched hormone movies and cried a lot. \n\nLizzie was bemused by it all, but glad that Allie was hanging with us and getting some positive mature-male influence; Allie's dad lived too far away for her to see him more than a few times a year, and his new family occupied much of his time. Still, we must have been doing her good, as she was doing well at school, heading for straight 'A's across the board. \n\nAs had become her routine since she was a little girl, Allie still spent most of her weekends with us, playing with the children and going shopping with Lena, she and Lena looking more like sisters than aunt and niece, and working on Lena to ask me for a recommendation to endorse her application to study medicine, which I would have given in a heartbeat. Yes, my kid sister wanted to follow her hero, me, which flattered me inordinately until Lena observed that she was a lot smarter than I was, and medical school should be a breeze for her, not the hard slog it had been for me. Sometimes I wonder about my wife...\n\nEventually, I resigned myself to having that conversation with Emma, one I really didn't want to have but had been dreading all along; perhaps it was time to start searching through the Registers of Births, Marriages and Deaths, emphasis on the 'Deaths'. I didn't want to bring it up, but we were getting nowhere, and it was looking more and more likely that those two kids had disappeared years ago.\n\n*\n\nJULIE:\n\nAs the summer progressed, work and family life once more took up our time, filling our days and occupying our nights, but my mind kept going back to that conversation I'd had with Mark, about the possibility we had an unknown relative, and the almost-argument it had sparked off. While I knew it was probably just wishful thinking, I couldn't let go of that thought, that perhaps we still had family out there somewhere, family we didn't know, and who didn't know about us. \n\nMark almost certainly had family, half-siblings (like me!) somewhere; his father had still been a young man when he and mum split-up, and from the pictures of him we'd found in mum's things, he was a bit of a looker, too; he'd have had no problem starting over again. Mark wasn't interested in finding out, though; he'd abandoned him, left us both at the mercy of that mad bitch, and as far as Mark was concerned, Lawrence Jameson was dead, buried and forgotten. I knew my biological father had died before I was born, but we'd never been able to find out anything about him, other than he was Lawrence's younger brother and he'd had an affair with mum, which is where I came from.\n\nI spent a lot of time that summer wondering about our past; I didn't know where mum and her family were from; I didn't even know what mum's maiden name had been; there were no papers or anything that were of any use to us that we had found when we cleared mum's house; in the last extremities of her dementia, before she was finally put away, she'd thrown away so much; photograph albums, her marriage certificate, divorce Decree Absolute, all sorts of records, Mark and my birth certificates, stuff that would have been priceless should we ever have wanted to find out who we really were; all were irretrievably lost. \n\nWith that avenue closed, all I knew was this mysterious 'South Mead' place mum was born. Eventually, it occurred to me to look it up on the internet, and that was where I struck gold; there was no such place, but one reference that kept jumping out at me was 'Southmead Hospital', in Bristol. I sat back in shock; mum was born in Southmead, not 'South Mead', in Bristol. Mark kept getting mistaken for someone called 'Darryl' again in Bristol, where he travelled frequently; apparently this 'Darryl' looked just like Mark, so the question occupying me was: did we have a relative in Bristol, the place where mum was born? The odds were stacking-up in favour of just that. \n\nMaybe I needed to travel down with Mark the next time and have a snoop myself. I knew mum's date of birth only because her driving license was returned to us after she was committed to the Care Home, but perhaps that was enough to trawl through the records in Bristol; with her date of birth at Southmead Hospital, maybe I could find a birth record giving her family name. It was a long-shot, but it was worth taking, I felt.\n\nMark came in soon after that, to find me cooking dinner, but no children. I grinned at his quizzical look.\n\n\"Jamie and Nia took them to the 'It's A Kid's Thing' play-centre over by Garrett Lane this afternoon and tired them out, and I didn't have the heart to wake them up and bring them home, so Mummy's looking after them tonight; that means we have the house to ourselves. Fancy fooling around a little?\"\n\nHis eyes lit up, but kept straying to the oven; I'd made him a lasagna, one of the things he'll fight werewolves barehanded for, and I had to suppress a grin at the conflict in him; me or lasagna. Poor Mark had grown up eating out of tins, or sandwiches; proper hot meals had been a rarity in our house; now I loved cooking for him, and watching him eat. \n\nEventually lasagna won out. I've said it before; like Jamie, he's a walking stomach. When Jamie and Nia come over I have to make three, one for each of those bottomless pits, and another one so Nia, the kids, and I actually get to eat something.\n\nWhile he washed-up, I went and changed; I wanted him on edge all through dinner, so I made a special effort, and when I brought in the food, his eyes popped out. I was wearing one of my old school shirts, which barely fitted, and was tight in all the right places, with a black, lacy push-up bra underneath; after having had two children, my once barely noticeable 'bee-sting' boobs were now a respectable handful each, and wearing an 'Agent Provocateur' bra turned them from nice handfuls into a pair of jutting tits to make an underwear model proud. I'd bought an extremely short plaid skirt, and together with knee-socks, slutty black platform shoes, and my hair in bunches, I looked like his own personal school-slut, if the sudden bulge in his slacks was anything to go by.\n\n\"Jesus, Tink, you look...incredible!\" he gulped out as I sat opposite him, sticking out the 'girls' as I smiled seductively (I hoped!).\n\n\"What, these old things?\" I preened, modestly, falsely, turning slightly to show them in profile, watching his eyes track my tits.\n\n\"Eat your dinner, Lost Boy,\" I grinned, then winked at him, \"dessert's not far behind!\"\n\nMark was appropriately dazed and bedazzled, eating rapidly, mechanically, while I kept my eyes on my plate. Every so often I looked up to smile at him as he stared at my cleavage as though he'd never seen it before (although, to be fair, it was a new bra, designed to do special things to the whole boob region, so he'd never seen the girls looking so...well presented).\n\nAt last, his knife and fork tinkled on the plate, then his plate and mine clattered as he swiped them all together and charged into the kitchen, where he dropped them all into the sink with a clang, then came back almost at a dead run, to yank me upright and grab my bum while he crushed his lips to mine. When I finally broke for air, I smiled at him again as I deliberately ground my crotch against his.\n\n\"What's the rush, Peter Pan, don't you want some dessert?\" I simpered, watching his eyes slowly cross as I ground against him some more.\n\n\"Holy Christ, Tink, I don't know where this get-up came from, but right now all I want for dessert is you! I want to fuck you so hard...!\"\n\nThat was what I wanted to hear, so I slid my arms back around his neck and spit-sealed my lips to his, while his hands explored my bum, squeezing and clenching the cheeks through the too-tight white cotton schoolgirl panties I was wearing, feeling him groan in my mouth as he worked out what I was wearing, and why. He broke our kiss, still squeezing and clutching my bum, to mutter \"bedroom...now\", before taking my hand and literally dragging me upstairs.\n\nOnce in the bedroom, Mark wasted no time in yanking off my skirt and shirt, leaving me in just my panties, bra, and knee-high white socks. I wanted to look virginal, yet slutty and gagging for a shagging, and judging by the bulge in his shorts I'd succeeded. Mark stripped-off in double quick time and pulled me close, that lovely thick cock of his trapped upright between us as he once more slid his hands down the back of my panties, squeezing my bum-cheeks and running his fingers between the puffy lips of my slit and up my bum-crack to tickle and probe at my tight hole. As we kissed he worked my panties down past my hips, finally tugging them off completely, leaving me in just my bra and socks, making him grin.\n\n\"Are you ready for a good fucking, little girl?\" he leered, squeezing and pulling my bum cheeks apart, making me gasp and giggle as he groped and plundered my bum.\n\n\"Ready as I'll ever be, Blondie!\" I retorted, seeing that glint in his eye once again. \n\nHe picked me up and kissed me, my legs wrapping themselves around his waist as I clung to his neck, and he held me up against him by the cheeks of my bum. I love kissing him, there's such a gentle, almost childlike innocence still in him; he's never forgotten how he was neglected, but he's also never forgotten how much I needed him, and how I depended on him when I had no-one else. We have a closeness that no-one can ever break, and when he kisses me, it shows.\n\nAs I hung on him, kissing him madly, I could feel that great big prong of his nudging my bum, and so I reluctantly left off with the kissing to get down to the serious business of getting my big brother to fuck the living daylights out of me. \n\nLuckily we were both singing off the same hymn-sheet here, so as he laid me down on the bed, our lips met in another passionate kiss, and as we kissed, he slid that oversized cock of his deep into me in one, fluid motion, making me gasp out loud as his thick cock-head forced my swollen, tender lips apart, filling and stretching me once again; no matter how many times we do this, it always feels like the first time, with the added bonus that it doesn't hurt now, just sends bursts of toe-curling pleasure flooding through me.\n\nAs we fucked, I felt his lips curve against mine into that smile of his, and I knew what he was thinking. As I thought of it, I knew I wanted it too, so I urged him off me so I could turn around. Mark slid out of me, and as I turned to lie on my tummy, he grabbed my hips and pulled me back against him, his hands gently pulling my cheeks apart so he could see all my most secret places. I felt his hot breath on me, and then suddenly his tongue was lapping at me, licking and rubbing my sensitive pussy, making me gasp and giggle as he probed me with a stiff tongue-tip, then he slowly kissed and lapped at my rosebud, his tongue-tip making little stabbing motions into the centre of my crinkle, teasing me.\n\nI relaxed and slumped forward, with Mark following me down to keep his face firmly between my cheeks as his insistent tongue probed further and deeper, until I felt him push his tongue inside me as far as he could, stretching me open and sending a sudden zing and zip of pleasure as he rimmed me.\n\nI was writhing and gasping now as I floated away, the feel of my man's tongue deep inside me giving me pleasurable sensations, stretching and relaxing me, until he withdrew, making me mew with loss, even though I knew what was coming next. I gasped and giggled at the feel of the cold gel as he slowly pushed it into me, spreading it around, pushing his finger deep inside me, then another one, while I rubbed and petted my pussy, readying myself for him. \n\nMark took one last glob of gel and spread it around my relaxed hole, then leaned over me to kiss the back of my neck.\n\n\"Ready, Tink?\" he whispered, and I nodded, sticking my bottom out and pulling my cheeks open, showing him exactly what I wanted. \n\nI felt him rear up over me, then his velvety cock head prodding at my hole, softness cloaking a stiff rigidity that I wanted deep inside me. I reached back and held him, guiding him as he slowly pressed forward, slowly slipping himself into me. Every time we do this it feels like the first time; I wanted it so much then, and I wanted it now. While there was a little pain, the pleasure zipping around inside me as my beautiful brother-husband slowly invaded my body in such a raw, primitive way was doing things to me, good things, things I didn't want to stop.\n\nMark slipped his hands around me to cup my fettered, outthrust breasts, his thumbs brushing my rigid nipples through the black lacy material, sending more pulses of pleasure through me, sharp little jolts that seemed to be grounding in my pussy, giving me an almost unbearable urge to touch myself and rub my button as my man sodomised me. \n\nAs I tweaked and rubbed my clitoris, Mark finally slid all the way into me, to begin sliding out again, making my whole body jump and tingle with the sensations that caused inside me. Back in he slid, making me gasp as all the air was forced from my lungs, then out, then in, while I rubbed and squeezed my swollen clitoris.\n\nI was floating in a golden haze of pleasure, my pussy pulsing as I neared orgasm, feeling every stroke of his thick cock as it pounded into me, and finally, when he gently pinched and tugged on my nipples, that finally tipped me over, waves of pleasure rising up and crashing through me, my cunt, my nipples, and especially my bum-hole throbbing and convulsing as a hot blast of pure, shuddering delight swept through me. \n\nI screamed as it surged through me, and my anus contracted sharply, clamping down on him as my pussy quivered. Mark groaned loudly as he swelled and jammed inside me, throbbing inside me even as the feel of his spunk filled me, bathing my insides with his warmth, spurt after spurt, sent me off into another white-hot whirl of pleasure, my anus milking him of every drop as it expanded and contracted around him, pulsing in time with my pussy.\n\nEventually, the flashing lights winked out, and my heartbeat slowed as Mark slowly pulled out of me, micro-orgasms uncurling inside me and making me gasp and quiver as he did, to lie next to me and pull me into him. I felt completely wrung-out from the intense pleasure he'd given me, and all I wanted to do was lie there in the warmth of his body, feeling him curled around me, secure and at peace. \n\nWe lay there in that beautiful afterglow, the memory of pleasure given and taken still rolling around inside us, until Mark finally stirred.\n\n\"Okay Tinkerbell, what's the reason?\" he murmured, his lips brushing my hair as he slowly stroked my back and fondled my bum.\n\n\"Reason for what, Mark?\" I answered, trying to sound innocent and not really succeeding, judging by the thousand little 'tells' he had that told me he was grinning.\n\n\"For the whole 'Naughty School-Girl' seduction routine. If you want me to do something, Tink, all you have to do is ask, you know that, baby-girl!\"\n\nOK, so I was busted; perhaps it took more than just devastating good looks to be a successful Securities Trader in the City of London; he'd worked out I wanted something pretty quick, after all; time to try some wheedling...\n\n\"I knew that, Lost Boy, but it was fun to vamp you a little! You want to know why? Next time you go to Clifton...I want to come with you.\" I sensed him about to refuse, so plunged on, not giving him a chance to interrupt.\n\n\"Don't worry about the kids, Mummy will happily have them, and besides, it'll only be for a couple of nights, oh please, Mark, I really want to go to Bristol with you!\"\n\nMark held me away from him a little so he could look in my eyes.\n\n\"Of course you can come, Tink, all you had to do was say so, although I can't think why; I don't go there because I want to, you know; the office has a strict 'No Visitors' policy, which means you can't stay with me in my office, so why would you want to spend two days pretty much alone in Bristol? What's going on, baby-girl?\"\n\nThis was it.\n\n\"Mark, you remember that conversation we had about that crazy bitch and her family, about where she was from?\"\n\nMark looked sideways at me.\n\n\"Ye-es, sort of, and as I remember, I said I didn't want to know. What are you up to now, Wee Wendy?\"\n\nI had to grin; he hadn't called me that since I was five or six. I gathered my thoughts, because I really wanted him to help me with this.\n\n\"Mark, I found out that mum was most likely born in Bristol; 'Southmead' is a big hospital on the outskirts of Bristol, no, no, wait, please..! \" I trailed off as he rolled his eyes and sighed, his lips compressing. We locked eyes, then he did what he always does; he relaxed, smiled and nodded for me to continue.\n\n\"I want to come with you so I can go there and check if mum was actually born there; if I can find her records, I'll have her birth name, then I can look up her family; it's got to be worth a try, Mark, please, do this for me!\"\n\nMark held me close, his hand absently stroking my hair, something that had always fascinated him, its texture and colour so different from his. I could almost hear the wheels turning as he mulled over what I'd said.\n\n\"Sure, why not; I can see you won't let this go until you've ploughed through it, so yeah, why not. I'll book a proper hotel instead of a B&B, and maybe we can stay an extra day and do a little sightseeing while we're there, you know, sort of soak up some of the ambience of the tourist mecca that is Bristol!\"\n\nI punched him on the arm for that, and he grabbed me and started tickling me in retaliation, which was not fair, he was so much bigger than me, but we eventually worked out a compromise and did something a lot stickier and more satisfying than tickling... \n\n*\n\nDARRYL:\n\nProgress on our search had stalled, come to a dead-stop as the meagre information we'd managed to collect just failed to pan-out. I'd already decided that the hunt was over, they were gone, when fate decided to take a hand. It was a Friday evening, my first weekend off-roster in a while. We'd just finished putting the kids to bed and were looking forward to an evening with a nice DVD and maybe a couple of glasses of good wine, when the phone rang. Lena and answered it, then grinned and passed it over to me. \n\n\"It's Georgie the Hottie!\" she stage-whispered, weaving the phone just out of reach and grinning. I eventually managed to snag it and talk to Georgie.\n\n\"Darryl, how are you, darling, how's that delectable little wife of yours, still convinced she's straight? Send her over, I'll soon teach her the errors of her ways!\"\n\nI had to grin; that was such a Georgie thing to say.\n\n\"Down girl; I told you before, my pie, go find a pie of your own! To what do I owe the pleasure of this call anyway, any news, or did you just call up to proposition my darling wife, again, and attempt to lure her into your web of sluttish rug-munching?\" \n\nI could hear her grinning even down the telephone line.\n\n\"Darling Boy, I'm shocked at such a suggestion! If your mummy had only taught you to share when you were little, we wouldn't be having this discussion about the lovely little Lena, you mean, selfish, greedy little piggy!\"\n\nI decided to cut the bantering short; Georgie had rung for a reason, and I was curious as to what it was.\n\n\"So Georgie, why did you call, do you have anything for me?\"\n\nGeorgie's voice lost that bantering tone, became more serious.\n\n\"Yes, Daryl. We've finally got something solid. Mum went digging in the old Bolingbroke Hospital record archive on a hunch, and she found everything you were looking for. The girl you're looking for was treated for a left zygomatic fracture and periorbital haematoma, together with a concussion, allegedly caused by a head-clash during a game of volleyball, although the attending noted suspicions that it may have been a deliberate injury; he thought someone took a swing at her. She was released after an MRI scan found no trace of vascular trauma, and referred back to a GP in Clapham Old Town. There was a contact address, also in Clapham Old Town, whether or not it's still valid is something you'll have to find out for yourself; I'll text it to you. Her records were transferred there as there'd been no need to access them for over five years, so they were archived.\" ",
        "She paused for a second.\n\n\"She also found a request from Croydon University Hospital for her records. They were requested by the Ante-Natal unit there, so I'm guessing your girl probably had a baby there, the ages are about right; she was thirteen when she was treated at George's, and almost 21 when her records were requested, so she'd be 23 or so now. Does that sound right?\"\n\nI thanked Georgie for her help, but she passed it off as nothing.\n\n\"If that doesn't pan-out, call Teddi Akonwande at Croydon Univ Hospital and give her my name; she's the Paediatric Registrar there, and she's a nice girl, a very nice girl, she should be able to dig something up on the QT.\"\n\nI couldn't resist it.\n\n\"So Georgie, were you and this Teddi ever...?\"\n\nI could hear the grin in her voice.\n\n\"Many, many times, Dar, as you well know, you grubby little voyeur; I like to keep my bow well-strung, and she knows which bits to pluck...\"\n\nI feigned shock.\n\n\"You are such a dirty girl! There are places for people like you! Thanks for the assist, Georgie, I knew you'd come through for me.\"\n\n\"Glad to help, Dar, you and that yummy little wife of yours! If you really want to thank someone, send mum a box of cherry liqueurs and a bottle of Tokay, she did all the work, or you could send Lena over...?\" she finished hopefully.\n\nI laughed and rang-off, and a few seconds later my phone beeped as a text arrived. When I opened it, it listed the address Mrs. Patterson had found, which came as a slight shock; I knew that road, I knew it well; it was only a short drive from Tooting Broadway, where I'd lived as a medical student; I used to park on that road when I went to 'The Windmill' pub at Clapham Common some evenings! To think, I might even have walked past Julie, or her brother, once, or maybe dozens of times. I was almost humming with excitement; all I could think was that we might have just made a breakthrough...\n\nIt was late the following afternoon before I had a chance to call Emma and ask her to come over, what with kids, meals, hunting for lost pacifiers, and generally trying to restore order to the turmoil and chaos that results when a three year-old boy and a toddler live with you, and require you have three pairs of eyes and reserve 500% of your time free solely for them; having mum there was a Godsend; the kids love their nana, so they mob her instead, leaving Lena time to shop, clear-up, clean, cook, do laundry, and try and have a rest in the midst of it all.\n\nEmma lives in a place called Sea Mills, on the outskirts of Bristol, so it took her an hour or so in the Saturday traffic to get to us, but when I told her what Georgie had told me, and showed her the address she'd sent me, she was almost jumping with excitement; the last time she'd gone to London to try and find Julie and Mark, she'd gone to their old address in Acton; the address I now had was in Streatham, miles from there, in another part of London altogether. \n\nShe was all for charging off there immediately, but I had to decline; I wanted to spend my first free weekend in several weeks with Lena and the kids, so we compromised; the next free weekend I had, which would hopefully only be a couple of weeks away, we'd go together and knock on the door. Emma agreed, happy that we were finally following a real lead. Even if it came to nothing, at least we'd tried.\n\n*\n\nIt took another two weeks before my conscience finally got the better of me; not that I was trying to dodge this or anything, it was just that we were still short-handed on the Surgical team, and I hadn't exactly objected too loudly when I was rostered-on to do additional shifts with the promise of time-off in lie. It was late June before I was able to take that accumulated time-off, make some hotel reservations, and collect Emma for our fishing-trip to London, to see if the address I had from Georgie was still valid. Lena declined the trip; Mo-Mo was teething, and Lena wanted to be close to her, so it was just Emma and me who made the journey.\n\nWhen I parked-up I looked around in wonder; I hadn't been here for over four years, but nothing had changed: same hedges and gates, same massive old London Plane trees lining the pavement, same huge red double-decker buses; it was like I'd never been away, and for a second, a wave of homesickness for London swept over me as the place that had been my home for almost seven years unfolded in my mind again.\n\nWe found the house easily enough, a large red-brick Victorian detached town-house, four storeys high, a sign of the affluence in days gone by of this part of London. At first I was reluctant to knock on the door, but common sense prevailed; wasn't this what we were here for? So I rapped on the door, and stood back, conscious that in a few seconds we'd find Julie, or discover we'd made the journey for nothing.\n\nAfter a few seconds, the door opened, and there was a beautiful Eurasian girl, almost as tall as Lena, and a few years younger, pale-skinned and with long, curly, blue-black hair, and the most vividly blue eyes I'd ever seen, even more striking than my Lena's.\n\n\"Can I help you?\" she asked, looking quizzically at Emma, then, as her gaze fell on me, her eyes widened.\n\nThis was it, show time.\n\n\"I wonder if you can help me,\" I began. \"I'm trying to locate a Julie Jameson; the last thing I know about her was that this was her address, but that was over ten years ago now; do you know of her, or perhaps have a forwarding address, anything like that?\"\n\nThe girl looked me up and down, seemingly fascinated with me, and seemed to come to a decision.\n\n\"Please, come in and take a seat.\"\n\nWe filed in after her, and sat in the comfortable sitting room in the chairs she indicated. \n\n\"I'll need to get my mother; I'll only be a moment,\" she said, once more looking strangely at me. She was only gone for a few minutes, before she came back with a tiny Asian lady, Thai or Vietnamese, obviously her mother. She was carrying a tray with teapot, cups and saucers, and a plate piled high with warm brioche fingers. She smiled at us and sat down on an easy chair, perched on the edge as she looked intently at us.\n\n\"Please to have tea, drink, please, be careful, it hot. Eat, too, fresh brioche, I make just now, you have some, please!\"\n\nAfter the pouring of tea and a nibble of the really quite exquisite sweet brioche fingers, the Asian lady spoke to us again. \n\n\"My daughter tell me you looking for someone called Julie Jameson?\" she ventured. \"Why you come looking here? She not live here.\"\n\nEmma and I exchanged glances, my expression probably as disappointed as that on Emma's face. I didn't know how much to say; I didn't want to go spilling stuff that had no relevance if Julie didn't live here, but at the same time, I was picking up an odd undercurrent in the room. I got the distinct feeling these people knew Julie, and there was definitely something going on here. Once more I exchanged glances with Emma, who nodded slightly, so I began talking.\n\n\"My name is Darryl Morgan; Julie and her brother, Mark, are my cousins; their mother is the younger sister of my father, Robert Fraser. She moved away from Bristol, from the family home, and the family lost touch with her soon after Julie was born. Emma?\" \n\nEmma took up the story.\n\n\"Sandra, or Lois, as we called her, is my younger sister. She disappeared with her children after her marriage broke down. I came looking for her several times, but the place she lived in had been redeveloped, and there was no trace of her. Darryl here finally heard from one of his colleagues that a girl called Julie Jameson had once been treated for a concussion at the local hospital, and this was the contact address given. We were hoping it was my niece; the age is correct, and the next of kin was listed as Mark Jameson, so we put those together and came here to ask if you knew anything about her whereabouts. Can you help us at all please?\"\n\nAll the time Emma was speaking, the Asian lady was looking intently at me, studying my features. When Emma had finished speaking, she spoke directly to me.\n\n\"If you find cousin, if you find...Julie, what you say to her? If she not know about family, like you say, why you want to maybe turn her life upside down? Maybe she happy, maybe she not want to know about family?\"\n\nEmma chose to answer her.\n\n\"We just want to know that she and Mark are OK, nothing more; a long time ago, I tried to persuade Sandra to let me take the two of them home with me, I was afraid of what might happen to them; I couldn't get her to give them up, and I've been haunted ever since by the possibility that she'd somehow hurt them; she was capable of doing it, too, and I've always believed I didn't do enough to safeguard those two little children!\"\n\nShe took a handkerchief from her pocket and dabbed at her eyes; the Asian lady's eyes seemed to soften, and she smiled at Emma.\n\n\"Maybe they OK, maybe they have family now who take care of them, maybe you have nothing to worry about?\"\n\nMy ears pricked up; this lady knew Julie, she knew her and she was protecting her! Emma seemed to have picked up on that as well; her eyes narrowed as she studied this tiny little woman in front of us. She swiped at her eyes once more and smiled wanly.\n\n\"I hope so, really; I just wish I knew for sure. Julie was such a lovely little baby, she had the most beautiful green eyes, and Mark, he was such a serious, sweet little boy, he loved his sister so much; even though she was my sister, and I loved her dearly, neither of them deserved to have Sandra for a mother, she had no time or love for either of them. She was so vindictive, and so angry with them for what their fathers did; that's why I tried to take them away. Perhaps if I'd tried harder we wouldn't have lost them so long ago!\"\n\nThe Asian lady and her daughter both stood up, looking at Emma sympathetically.\n\n\"We not know this Julie Jameson, but we ask around; if you say this her address once, perhaps other neighbours know; we ask them. You leave number with my daughter. If we hear anything, she or her husband call you; you not worry, I very sure you find her, it just take time! You look like kind people, so my daughter and me we do whatever we can to help you!\"\n\nThey showed us to the door, and as we were leaving the Asian lady took my elbow and drew me away a little.\n\n\"You not worry; I think Julie fine, I think she happy, and maybe...maybe she look for you too; if I hear anything I let you know, I promise!\"\n\nI looked at her, at the twinkle in her eye, and once again I got the feeling she knew more than she was telling me, but was holding back for reasons of her own.\n\n\"How do you know...?\" I whispered, and she smiled at me, no she twinkled at me, suddenly looking no older than her daughter.\n\n\"I not know, just guessing, but you know what? I am very good guesser!\"\n\nWith that we made to leave, then I remembered something.\n\n\"I'm sorry, I didn't even ask your name...\"\n\nShe smiled at me, and linked arms with her daughter.\n\n\"My name Anh; Anh Morrison, this my daughter Nia; do not worry, when we hear something, we let you know. I think everything be OK!\"\n\n*\n\nJULIE:\n\nWell, my trip to Bristol was a bust; while Mark worked, I wearily trudged the streets in the rain and snow...actually, it was mid-summer and I went everywhere by cab, but the net result was 'almost'; that was as good as it got; 'almost'.\n\nThe people at Southmead Hospital had been very helpful; once I'd proven to them that the person I was trying to track, given names Sandra Lois *unknown*, was in fact dead, and I had a copy of the Death Certificate to back up my claim, they'd gone and had a rummage through their records archive and found the record; same first names, same date of birth, it all matched. Mum was born Sandra Lois Fraser, and the family had lived in Clifton; there was even an address. \n\nArmed with that, I went back to the council offices, and had a look through the Census returns for the Fraser family at that address, and that's where I finally struck gold; mum had been one of four children; she had an older brother, Robert, an older sister, Emma, and a younger sister, Ellen.\n\nI found the address in Clifton; of course, it had to be around the corner from the hotel where we were staying, and two minute's walk from Mark's office; I'd gone chasing off into the furthest, remotest reaches of Bristol, and all the time the place I wanted was spitting distance from my hotel room; it's the story of my life, really...\n\nI'd gone to the address, a large, elegant Georgian townhouse in the middle of a long terrace in the Regency part of Clifton. The lady who answered was very nice, but wasn't a family member; all she knew was that her parents had bought the house from the Fraser family after the death of the parents, she didn't have any forwarding addresses for the children; her parents might have done, but they'd passed on several years before. \n\nShe'd suggested the family a few doors down might know, they'd been there donkey's years, so I tried there, but there was no answer. I peered in the window, into a rather elegant sitting room; clearly a family with young children lived there; baby toys were scattered on the chairs and on the carpet, and a baby-bouncer was tucked in the corner. The name on the doorbell was 'Morgan', but repeated ringing brought no response.\n\nSo that avenue was a dead-end. I went down to the Council House on College Green and requested the Electoral Roll, hoping I might spot a Fraser family member, but that was a forlorn hope; the sisters would most likely have married, and with the best will in the world I couldn't possible divine their married names. \n\nThere were several dozen Frasers, including a few Robert Fraser's listed, but all the wrong age entirely, scattered all over Bristol, and I had neither the time, resources, or patience to go knocking on all their doors in the hope I might strike it lucky. \n\nThere was one odd incident, however; I was walking back to the hotel, and decided on a whim to go and have a wander through the lovely medieval cathedral on the South side of College Green, so cut across the Green and walked past the Marriott Hotel, which was next to the cathedral. A man in a chef's whites was talking with a delivery van driver on the pavement. As I passed him, our eyes met. He stared at me like he'd seen a ghost, and I distinctly heard him breathe \"Emma!\", then I lost sight of him as a crowd of Cathedral Choir School boys surged past me, all of them much taller than me, completely blocking my view of the chef as they hurried back into the school precincts before the end of their lunch break. \n\nI darted back to the front of the hotel, sure I'd almost caught a break, but he was gone; he'd called me 'Emma', and I knew that name; Emma Fraser, my mother's older sister, my aunt...\n\nI gave up in disgust; I'd tried; Lord knows, I'd given it the old college try, and come up zero, except for an 'almost'; perhaps there really was nothing here. Wherever mum's family had lived, they weren't there now, and no-one knew of their whereabouts, so time to call it a day and quit bending Mark's ear about it. \n\nIt was sad and deflating; I'd built up quite the fantasy, of a family who knew nothing about us, but welcomed their long-lost relatives with open arms; letting that go was a wrench, but it was nothing but fantasy, after all, just me trying to make a passing fancy real.\n\nWhen we got back home, Mark was especially solicitous; he knew I'd built this up in my head into the grand family reunion, and now it wasn't going to happen, so for the next few days he spent every spare moment hugging me and nibbling my ears and neck, something he knows I love, as I worked my way through the disappointment, although I was puzzled why I felt so let-down; as Mark had pointed out, we had a place we belonged, with family who loved and cared about us. \n\nI suppose ultimately I needed to know there was someone else out there who shared actual kinship with us, that we weren't the only members of our entire family, whoever they might be.\n\nBut I had to let it go; mum's family, whoever and wherever they were, were untraceable, probably long gone, and we were the last of the Fraser clan left for all I knew. So I let it go, and consoled myself with the thought that Mark was right; we had family enough right here, people we loved, and who loved us right back, and that, apart from that tiny nugget of disappointment inside me, was enough for me; it had to be.\n\nAnd then things started to happen...\n\nA few days after my Bristol trip, Mummy-Anh came to see me, to take the children out for a walk, then back to her place for some quality time with her and Dada Morrison, or so she claimed, but I could tell she had something on her mind, and after cooing and cuddling Nia, and tickling and kissing Markie soundly, she put them down and rubbed their tummies and murmured softly to them until they both fell asleep, which I thought was odd, if she was going to take them out. \n\nOnce the kids were asleep, she beckoned me into the dining room, leaving the door open so she could see the babies asleep on the couch, and sat me down at the table.\n\n\"Julie, what you know about family, your family, not \u00e1c ngu ngoc me, not stupid, evil mother, what you know about rest of family?\"\n\nI looked at her in surprise, wondering where this had come from. She knew I'd tried to find them in Bristol, that there was nothing to find, so why the questions? I told her what I knew, that mum had three siblings, an older brother and sister, and a younger sister, but there was nothing else, no clue where they were.\n\nMum looked thoughtful, her fingertips drumming softly on the table, her one sign of agitation, then she came to some kind of decision, her face carefully expressionless.\n\n\"Julie, you know I love you, yes? I love you, and Mark, you are my children, just like Jamie and Nia, your family my family, your children my babies too, and all I want is for you be happy. While you away, man come and see me; he tell me some things, and lady with him tell me more. He ask about you. He tell me his father name is Robert, and lady with him Emma; they say they your family; this mean anything to you?\"\n\nMy heart slammed in my chest at hearing that; Robert and Emma, mum's brother and sister, Emma Fraser, she'd been here, oh my God, she'd been here! Questions bubbled up inside me, foremost being why she'd waited to tell me. I managed to ask her, and she looked sad, but resolute.\n\n\"I want to call you, tell you, but Nia say no; Nia tell me you family hurt you so much, we not know if they hurt you more, so Nia say we wait until we know more. I cannot do that; Nia your sister, she love you like sister, and she protect you, like sister should, but she wrong, this not her decision, so I tell you, let you make up mind for self. I have telephone number, have name, if you want, I give them to you, and when you decide, I be there with you; you my daughter, I will not let you be alone now!\"\n\nMy head was spinning; my family had come looking for me? Who were these people, and why now, after all these years? Mummy-Anh slid closer and hugged me.\n\n\"Lady who come, she tell me she has been looking for you for many year; you were baby last time she see you; she try and take you away from you mother, she know what mother like, she try and take you and Mark, but not succeed; next time she come back, sister gone, you gone, all gone, she cannot find you, not know where family gone, she not know where to look; London big place, maybe you not even here. She look like you mother, but nice, have good smile, and your eyes; man with her, he have your eyes too, he look so much like Mark I know he your family. He have friends at hospital, follow trail after you mother hurt you. I have good feeling about them; I think they look for you because you their family, not because they want hurt you, so I come here today to tell you!\"",
        "The irony of the situation wasn't lost on me; even as I mentally floundered, a part of me found time to marvel that my aunt had been sitting and talking to Mummy-Anh even as I was discovering her 150 miles away in another city. I pulled myself together.\n\n\"Mummy, this man...the man with...Emma, what's his name, please, what does he look like?\"\n\nMummy smiled at the question.\n\n\"He look so much like Mark it like he is your brother too; he have same eyes as you, same hair like Mark, same face, but he older. He say his name is Darryl Morgan.\"\n\nMy head spun like a top when she said that; Darryl! The man people had been mistaking Mark for all over Clifton. I was right, I'd been right all along, he was family! Then it struck me; the house I'd tried, where I got no answer; the nameplate on the doorbell was 'Morgan'! I'd been in the right place all along, just the wrong time. While I'd been knocking on his door, he'd been here, 150 miles away, talking to Mummy-Anh...\n\nI realised I was shaking. I was so near, so very near, but even with all this, what would Mark say, would he even want to follow this through? He'd been as badly hurt as I had been, maybe more. Would he want to risk what we had just to try and connect with a bunch of strangers? \n\nMummy-Anh hugged me closer, stroking my hair as I trembled, all of this racing around in my head, but uppermost was one thought: what's Mark going to say? She seemed to pluck the thought right out of my mind, or maybe she knew me so well she could follow the way I was thinking.\n\n\"You not worry, Julie, Mark do this for you; you ask, he do anything for you, you not know this yet? He still not forgive himself for leaving you behind, he still think you hurt deep inside, so not yet forgive him for going away, he think every day he need to prove how much he love you. You mother thoughtless, and cruel, and evil, and she hurt you, put you in hospital, but she hurt Mark even more; long ago she close a door in his heart, and piece of him still lock away in there. She stop him believe in himself, she nearly drive him mad, and he still cannot believe he deserve good things. So every day, he try to deserve you, and he still not know if he do it right.\"\n\nShe paused to look into my eyes, her own eyes shining with unshed tears for poor, injured Mark. \n\n\"Mark my son now, I love him like all my other children, maybe more, because his heart still broken; he so tall, so handsome, so smart, but still not know how to make pain go away; she make him grow up too soon, he not have chance to learn how to be little boy, to learn how to make hurt go away before it hurt too much, so it stay inside him. All men little boy once, need to be boy before can be man, but not Mark; she take that from him, and I do not know how to give it back to him.\"\n\nShe paused to wipe her eyes, then once more pinned me with her gaze.\n\n\"I cannot help him, do not know how, so I love him little bit more instead, because so much taken from him, because he still hurt. But you, my daughter, you are mending his heart for him; every day, you mend it little bit more; one day soon you will learn how to open door and let little boy out again. I tell you this now. If this what you want, ask, and Mark will give it to you, because he love you, and he need you to be always happy. He is a good boy.\"\n\nMummy held me and soothed me as I cried for my sweet brother, for not seeing how injured he was, just ambling along, basking in my own happiness that he was back with me and never once stopping to consider how traumatised he was, just being happy he was back with me. Mark had looked after me, but no-one had looked after him; all he'd ever had was a lifetime of neglect and mental torture from that hell-bitch. Now I finally understood what he really needed, maybe I could find a way to put us back together properly. \n\nOnce I'd calmed down a little, she gave me a folded slip of paper with a telephone number on it.\n\n\"When you and Mark ready to call family, call me, and I be here with you, if that what you want, okay?\"\n\nI nodded, not really trusting myself to speak, so Mummy kissed me, then stood up.\n\n\"Good, now I go wake children; they sleep too much now, not sleep tonight. Come, we go for walk, it nice warm day, we take children to boating lake on Common, let them watch toy boats in water!\"\n\nI don't know what I did to deserve someone as wise as Mummy-Anh; I just hope I keep on doing it."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother",
        "sister",
        "incest",
        "sex",
        "oral",
        "anal",
        "darryl & lena",
        "love",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lost-girl-julies-story-ch-03-pt-01"
}