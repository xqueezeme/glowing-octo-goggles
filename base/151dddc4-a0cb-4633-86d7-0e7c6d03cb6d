{
    "title": "Flyover Country Ch. 03",
    "pages": [
        "Author's note: This is a long story, some 68,000 words in total. If you don't like lengthy stories, please pass this one by because you will not enjoy it. The story is being posted in 4 Parts submitted one day apart.\n\nThanks to Blackrandl1958 for her editing skills. I would also like thank Harddaysknight for taking a lot of time and energy to beta-read this tome and show me where to improve it. Both have helped me immensely and any errors that still exist below will be there because of mistakes I alone have made. I sincerely appreciate the sacrifices the two of them have made to help me get back in the game\u2014after all, it's only been twelve years since I last posted a cheating wife story.\n\nThe following is not a stand-alone story. You will have to read Parts 1 and 2 for this Part to make any sense.\n\n* * *\n\nFlyover Country, Part 3 (of 4)\n\nBy Longhorn__07\n\nCHAPTER SIX\n\nAfter leaving Mom and Dad at Yosemite, I made my way out to Interstate 5 and turned north. I crossed the Canadian/U.S. border north of Seattle and drove into British Columbia en route to Alaska. Dad and I had discussed the opportunities for operating a small flying business back in Texas and elsewhere. I could have found a niche somewhere in Texas for something like that, but the major carriers had plenty of feeder airlines funneling passengers and cargo from rural areas into the major hubs. It would have been tough.\n\nI had no interest in becoming a commercial airline pilot. I\u2014very unkindly and unfairly\u2014considered airline pilots as little more than bus drivers in the air. I wanted to fly small aircraft into places where almost no one traveled, but I wanted to make money on the deal too. Alaska seemed the best bet for that.\n\n* * *\n\nIn Alaska, I got a job almost immediately. I had to; everything cost an arm and a leg there. I wound up flying small planes for a little operation based in Anchorage. Frederick Simpson had a fleet of six Otters he used for trips to remote villages carrying small groups of passengers back and forth, plus odds and ends such as small shipments of perishable goods. A job flying for Mr. Simpson was right up my alley; I was gaining experience in flying and small business management too.\n\nI don't know if time heals all wounds like they say, but it will surely paste a big ol' band aid over them. The last couple of years had been\u2014interesting. I'd caught my wife having sex with her boss and his wife, and though I'd given up all the anger and resentment, the way our marriage ended couldn't help but affect me.\n\nI also had tons of \"what might have been\" questions about Mercedes and me\u2014and to a lesser extent about Stephanie and me\u2014but time was helping me put those issues aside. A lot of the memories still hurt, but I was managing to accept things as they were.\n\n* * *\n\nAlmost a year after I arrived in Alaska, another birthday had rolled around and I had settled into a routine of flying almost daily. I was officially thirty-one years old. In my Dad's words, I was old enough to know better\u2014but young enough to do it anyway. I didn't exactly know what \"it\" was, but the sentiment seemed appropriate.\n\nI flew an old, but still rugged, DeHavilland single-engine Otter up to a new \"destination\" on the north slope of Alaska, carrying nine sightseers north to a little hole-in-the-wall village called \"Barren.\" Someone had divined there should be a place for people to come see giant caribou herds, a coastline choked with ice floes three hundred and sixty-five days a year, and the oil drilling off to the northeast. I had NO idea why people would pay good money for that, but they apparently did. Perhaps it was simply the novelty of it.\n\n* * *\n\nThis destination/resort/town/whatever had a restaurant that offered sandwiches and soup for lunch. The furnishings were brand new and serviceable, but the food was a little suspect. On the other hand, since they had a total monopoly on cafes and restaurants in this thoroughly \"company town,\" I patronized the place.\n\nI was munching on what was purported to be a chicken salad sandwich. I wasn't all that convinced it actually was chicken. I hoped the onion soup cooling in the bowl beside my plate would taste more like what it was named for.\n\n\"May I sit with you, please? All the other seats are...\"\n\nI looked up, glad for the interruption. It was a young woman I'd brought up to Barren a few days ago.\n\n\"Certainly, Ms. Kincaid, please do!\" I replied. I stood up until she was seated. Company always made for a better lunch.\n\nSharon Kincaid seemed to be several years younger than I was; maybe twenty-seven or twenty-eight. She was ordinary looking\u2014not terribly pretty, but not plain by any means. She might have been fairly attractive if she would try wearing a little makeup. She was about 5'5\" or so, and from hints I got watching her move around, I was pretty sure she had a nice figure beneath those rather unflattering garments she wore.\n\nSome of the outer coverings she had to wear were dictated by the icy (even in summer) winds outside, but it seemed to also be a personal choice to wear baggy, almost shapeless, clothing. I wished she would make better choices for her clothing. Her legs seemed to be awfully long. I liked leggy women.\n\n\"Sharon,\" she said as she made herself comfortable on the straight-backed chair across the table from me.\n\n\"Sharon, it is, then,\" I replied. \"And...\" I half stood again and looked over her head and all around the room as if looking for eavesdroppers. \"Okay ... no one's listening,\" I hissed. \"You can call me ... Matt!\" I told her facetiously. I grinned to make sure she knew I was kidding.\n\n\"Smartass!\" Miss Kincaid\u2014Sharon\u2014remarked sagely, examining her sandwich for clues as to the meat's origin.\n\n\"Wow,\" I said, \"...we only had a few hours together on the flight up here, and now these few minutes and ... my God ... the lady doth know my soul!\"\n\nShe shook her head and rolled her eyes at my silliness. But there was the faintest suggestion of a smile on her lips. That was nice; it lit up her face and relieved a lot of the stress I saw in her features. I liked what I was seeing.\n\nWe talked; at first just about the sandwiches and mystery soup, but then we tackled other topics at random. She had nice eyes that warmed as she relaxed. Hazel, they were ... first woman I ever met who had that shade. Very nice. She had nice hands too\u2014well shaped and delicate.\n\nAfter lunch, since neither of us had anywhere we needed to be and nothing special to do once we got there\u2014so we took a long walk around the site, finally returning to the dining facility in time for dinner. All in all, the day was very pleasant, at least for me; and I think for her too. I hadn't detected any attempt to ditch me over the space of several hours. We seemed to have connected well enough.\n\nIt surely felt good to me. I'd dated a few times after Mercedes and Stephanie went back to their dance troupe based in Philadelphia, but there hadn't been anything \"there\" to explore.\n\n* * *\n\nBy design, Ms. Sharon Kincaid and I met for breakfast the next morning and spent most of the day talking and strolling around, thoroughly investigating this little patch of the North Slope of Alaska. It was all very pleasant; I enjoyed getting to know her better. Her eyes sparkled as she talked and her cute grin was really nice to see.\n\nIn the evening, since it was Saturday, there was a dance sponsored by the resort in the restaurant. Most of the tables and chairs in the dining facility were removed and stored elsewhere, except for a number of smaller tables scattered around the wall. The center of the big room was now a dance floor. The music was provided by a DJ and a mediocre sound system.\n\nI was late to the dance. I was flying the DeHavilland out the next morning and I'd spent several hours inspecting all the systems, making sure the navigation maps were close to hand where I wanted them. There were a zillion details to check, and good pilots do all of them before strapping on a machine and coaxing it into the air.\n\nWhen I got there, I was surprised to see Sharon at one of the side tables, sitting alone and apparently not dancing. I didn't have a clue why that would be. Women, particularly reasonably attractive women, were at a premium here on the North Slope and Sharon's time should have been monopolized by someone\u2014or a lot of someones\u2014from the crowd of unattached males restlessly circling the room. Curious...\n\n\"Hi, Sharon ... may I sit down?\" I asked. I sort of knew the answer because of the way her face lit up and how she'd smiled at me when she saw me approaching. She sat up in her chair and gestured toward the empty chair gracefully.\n\nI liked her smile; she should do that more often\u2014smile, that is. It made her eyes sparkle.\n\nShe really, really looked great. She had a blouse and slacks on\u2014skirts were nonexistent up here, of course. Her long, slender legs were covered by the slacks but she was finally wearing shoes instead of boots. I caught a glimpse of a delicate ankle attached to those hidden legs I'd been admiring. She looked scrumptious.\n\nI ordered a diet Coke instead of a beer. I was flying the next morning and didn't need even the slightest trace of alcohol in my system. Sharon and I wound up dancing most of the evening, only taking short rests during which we talked while sitting at the table.\n\nMercedes and Stephanie were professional dancers and, in our time together, they'd schooled me pretty well in several basic dance steps. During the few weeks we spent together, I became reasonably good\u2014at least good enough to hold a vibrant woman in my arms while she danced.\n\nSharon and I did well together. I felt good out on the floor with her. It was great just being with her, so when the DJ announced the end of the evening, I was profoundly shocked at how quickly the time had flown by. I could feel the chagrin on my face and I know she saw it. She looked pleased that I was sorry the evening was coming to a close.\n\nHolding hands, we strolled back to the little cabin where she stayed and after she unlocked the door, she turned and I took her in my arms as naturally as if we'd been doing it for years. She lifted her face and we had our first kiss; it wasn't a peck on the lips, and it wasn't a deep lover's kiss, but it was nice.\n\nHer lips were soft and they were awfully, awfully kissable. So I did. Sharon, hesitantly at first\u2014then more enthusiastically\u2014put her arms around my neck and returned the kiss, with interest.\n\nWhen we broke the second kiss, she looked up at me with a tentative, defensive cloud in her eyes. \"You know they call me the 'Ice Bitch Princess', right?\" It was clear she didn't think it was an affectionate nickname.\n\nI did not, in fact, know that, and I couldn't imagine why anyone would call her that. I held her close, my hands at her waist over the points of her hips. I searched her eyes\u2014for what I didn't know. I saw a deep warmth there, perhaps a lingering sadness\u2014and loneliness. I could recognize that; I felt the same way.\n\n\"Well...,\" I said softly, \"no one who ever called you that ever really knew you, did they...?\" I kissed her again\u2014this one lasted longer, and so did the next one. I finally broke away because if I hadn't, steam was going to come whistling out of my ears, and I didn't want to push her into anything she wasn't ready for.\n\n\"I have to go, honey,\" I said, at length. \"I have to get my rest; we're flying tomorrow.\"\n\nShe nodded her understanding and gave me another quick kiss and unwrapped her arms from around my neck. I smiled and turned away. I didn't hear her door close. I wondered if that meant she was watching me. I couldn't turn to look, of course.\n\nAs I walked down to the hanger where I'd been assigned a small room, I was pretty sure I could have talked my way into Sharon's bed had I not left. I thought I could have, but I was also pretty sure I didn't want to talk my way into her bed. I didn't want to push her beyond a limit with which she was comfortable. I was learning I liked her way too much to chance wrecking the beginning we'd made.\n\nI was almost asleep when I realized I'd called her \"honey\" and she hadn't objected.\n\n* * *\n\nWe were airborne at 9:18 the next day on our way to Fairbanks, a flight of around four hundred miles. The Otter I was flying had a range of a little more than five hundred and fifty miles fully loaded, so we were good to go. There were ten souls on board, including me.\n\nThe DeHavilland I was flying was configured as a float plane. Wheels extended below the bottom of each float, so we could use an actual landing strip like the one here at Barren, or we could use water for takeoffs and landings. I hadn't been certified very long in float planes; Mr. Simpson had tried to hire an experienced pilot for that specialized aircraft but he'd had to settle for me. On the other hand, he wasn't too terribly disappointed in me. I actually liked landing on water, not that it was any more forgiving than concrete if the landing went wrong.\n\nSharon Kincaid was in the co-pilot's seat for the trip home. I'd made the invitation as she boarded, hoping she wasn't irritated at me for walking away last night, or because I'd presumed to kiss her, or\u2014whatever. Apparently she was not. She gave me a happy grin and climbed into the co-pilot's seat more gracefully than I could have managed. She looked all around the cockpit interestedly, her face animated. She looked wonderful. I wondered how I'd missed that the first few times I was around her. I could get lost in those flashing hazel eyes.\n\nAfter I got the obligatory captain-to-passengers remarks out of the way, Sharon and I talked on the intercom for quite a while. The rest of the group didn't have headsets on so they couldn't eavesdrop. Sharon and I were getting good at this\u2014communicating easily and naturally. We were getting to know each other on any number of levels. It felt good; it was something I'd been missing in my life since Mercedes and Stephanie left me behind.\n\n* * *\n\nWe were flying VFR, Visual Flight Reference, meaning I could see the horizon and could figure out whether we were upside down, in a bank, or flying straight and level. A thick cloud cover was way above our heads, totally obscuring the sun and the real estate passing under the nose looked identical to every other patch of untamed wilderness in Alaska.\n\nShortly after noon, I began to be uneasy. Fairbanks is just a few ticks off due south from the Prudhoe Bay/Barren area and we'd flown long enough in that direction that we should have been getting close to the second largest city in Alaska. But we weren't seeing any signs of it.\n\nMy anxiety ramped up a couple of notches. We should have been hearing radio calls and perhaps even seeing air traffic in and outbound from Fairbanks, but there hadn't been even a hint of anything on the guard channel. Visibility was poor, so I wasn't that concerned we hadn't seen anything in the air, but still\u2014very strange.\n\n\"Fairbanks ... November Yankee one-niner-zero-five...\" I was calling the Fairbanks controller ... just because I wanted to get in touch with someone. There was no answer. I called twice more before I gave up. I slid my seat closer to the control column and studied the instruments. Sharon put her hand on my forearm when she saw I was concerned about something but she didn't speak.\n\nI took her hand and squeezed lightly. I didn't let go and she didn't try to take her hand back. She didn't interrupt my concentration by asking questions I didn't have an answer for yet. One more thing to like about her.\n\nSomething flickered\u2014one of the instruments had done something. It had been too quick and I'd only caught a flash from the corner of my eye. I bent closer to the panel and, just for the heck of it, I tapped the cover of the attitude indicator. To my surprise, the stylized little aircraft in the display spun around crazily for a few seconds before it steadied up again. I swallowed hard. My inner ear, and a glance outside the cockpit, told me we had NOT just done a hard roll to the left until we were inverted and then rolled all the way back up to straight and level, but that's what the instrument had shown.\n\nI tapped the GPS compass ... and the display whirled around crazily. Outstanding! My instruments were lying to me\u2014at least, some of them were, and I had no idea which ones could be believed, if any. The engine was roaring steadily\u2014that was a very good thing and the control surfaces responded to inputs from the rudder pedals and the control column, but they were purely mechanical, no electronic interface in this old beast.\n\nI checked the circuit breakers\u2014there didn't seem to be a problem, but who knew? I was tempted to cycle the breakers, switching them to the off position and then back on, but in my experience I'd learned, sometimes if you turn something off that is performing marginally, when you turn it back on, you might get nothing at all. I sat back in my seat. I didn't know what was going on, but something was clearly out of whack.\n\n\"Sharon...,\" I said over the intercom, squeezing her hand at the same time, \"we're in trouble. See if you can get everyone's attention back there, will you?\"\n\nTo her credit, she did exactly what I'd asked for without asking senseless questions, twisting around in her seat and waving at the other eight passengers and yelling. When some of them didn't seem to notice, she screamed at them to wake up and listen, or suffer unexplained consequences. The girl had a set of lungs on her; I was glad I had a radio headset on. It may just have saved the hearing in my right ear.\n\nI retarded the throttle until I felt if eased it back any more, we'd be in a slow, very shallow dive, not that the altimeter was functioning well enough to tell me that. Throttling back also reduced the noise level enough so I could be heard in the rearmost seats. I swiveled around in my seat as far as I could, which wasn't all that much, what with the control column, rudder pedals, and instrument panel all in the way.\n\n\"WE ... ARE ... IN ... TROUBLE!\" I yelled, spacing the works out so no one would misunderstand. I got their attention immediately. The atmosphere was instantly electrically charged.\n\n\"MY INSTRUMENTS HAVE DIED ... I CAN'T TELL WHAT DIRECTION WE ARE GOING, WHETHER WE ARE GOING DOWN OR UP, WHAT OUR GROUND SPEED IS\u2014NOTHING! THAT MEANS I DON'T KNOW WHERE WE ARE\u2014\"\n\nAbruptly, we could see sunshine again. I twisted back around. We'd come out of the shadow from that huge bank of clouds and it was no longer hiding the far horizon.\n\nWe were flying directly into the sun. SHIT! At this time of day, that meant we were flying on a roughly easterly course! Not only that, a mammoth range of tall mountains was just coming over the horizon in our path.\n\nI banked right without thinking about it and steadied up on what should be something approximating southwest. The sun doesn't generally rise at 90 degrees east, particularly at these latitudes, and it doesn't set exactly west either, but seeing the sun gave me a vague idea which way we were heading. Making even an immediate and very rough course correction was a lot better than staying on the line we'd been on.\n\n\"OKAY ... WE JUST FOUND OUT WE'VE BEEN GOING DUE EAST, AND WE SHOULD HAVE BEEN GOING SOUTH!\" I yelled at my passengers. \"I STILL DON'T KNOW WHERE WE ARE, BUT NOW I'VE GOT THE OLD GIRL HEADING IN THE DIRECTION WHERE ALL THE CITIES AND TOWNS ARE, SO WE'RE FIXING OUR PROBLEMS AS WE GO!\"\n\nAnd we actually were doing that\u2014sorta. Alaska doesn't have a very high a population density and the state as a whole just isn't well settled. Once, an Air Force KC-135 from Eielson Air Force Base, near our destination at Fairbanks, crashed seven miles from the end of the runway. As far as anyone could tell, no one had ever set foot in the nearly inaccessible valley where the plane went down. That was only a few miles from Alaska's second largest city.",
        "Heading southwest from\u2014well, from wherever we were\u2014was much, much better than heading east into the frozen waste of northern Canada\u2014but it still didn't get us to a nice room in a Fairbanks hotel anytime soon. Even with the throttle set way back, we were going to run out of fuel relatively soon, which meant I needed to set this old DeHavilland down somewhere, preferably before the engine quit. I much preferred controlled landings as opposed to crashes.\n\nI snapped my microphone boom back into position. \"Sharon?\" I said to get her attention.\n\n\"Yes?\" she responded instantly, looking at me from my right side. I glanced at her. Her eyes were level and not panicked.\n\n\"Can you take what I say for the next little bit and relay it to the folks back there, 'stead of me turning my head around and not paying attention to flying?\" I asked.\n\n\"Certainly,\" she replied briskly. \"Go ahead...\"\n\n\"Okay ... tell them we're going to be running out of fuel in another hour or so ... make sure they understand it's not right now ... we've got a little time. Then, ask everyone to start looking out the windows\u2014what we're looking for is a nice paved runway ... but I don't think we're going to find any. So, failing that, look for a lake ... somewhere with reasonably still water that I can put this bird down on, okay, honey?\"\n\nShe didn't answer immediately. I belatedly realized I'd phrased that a little affectionately. I guessed she hadn't really cared for me doing that. Crap! I'd probably overstepped a boundary.\n\n\"OKAY...,\" she yelled into the back of the plane, \"MATT SAYS WE DON'T HAVE ENOUGH FUEL TO GET WHERE WE'RE GOING, SO EVERYBODY NEEDS TO LOOK FOR SOMEWHERE TO LAND ... EITHER ON SOME PAVEMENT OR ON A LAKE SOMEWHERE. ALL A' YOU GUYS BE LOOKING FOR A GOOD PLACE, OKAY?\"\n\nIt was a reasonable interpretation of what I'd said, and quite possibly delivered in language they'd understand better. I reached out and caught her hand; she was reaching too. We held hands for a long moment. In spite of everything bad happening, touching her gave me a warm feeling.\n\n* * *\n\nThe engine droned on powerfully, never faltering. It had dragged us some distance to the southwest, but I didn't know how far. An hour after we discovered we were in trouble, I was beginning to worry even more. Concern about where we were, began to take a backseat to a dread we were going to run out of fuel\u2014and very quickly too.\n\nI'd been doing a series of rough guestimates, judging how long we'd been flying on a faulty course, what our fuel consumption was, and a bunch of other things, mostly unknowns. The gauge said the fuel was awfully, awfully low, but who knew if it was accurate? It could be failing along with the other instruments.\n\nWhat I came up with was a conclusion that we were absolutely going to go down before too much longer; the only question was whether we were going to go down hard, or relatively softly. I throttled back a little more, accepting a lower speed to save fuel. We began descending in a shallow glide.\n\n* * *\n\n\"THERE ... OVER THERE!\" someone, a guy, yelled at the top of his lungs. I heard him easily over the engine noise, but I didn't know who it was.\n\n\"Where is THERE? What direction?\" I snapped. Sharon relayed my questions to the passenger cabin where someone was sounding the alert.\n\n\"Left,\" she told me, \"...little bit behind us ... ahhh ... like at seven o'clock? ... know what I mean?\"\n\n\"Gotcha!\" I replied. \"Good way to say it!\" It was, and it showed she was keeping her head. A woman to walk with a man, not behind him. I was very glad Sharon Kincaid was there with me.\n\nI took the old Otter in a wide-sweeping left bank; I was loathe to maneuver too radically, considering the low speed at which we were flying. A small body of water came slowly into view as we turned, steadying up directly in front of us. It was seven or eight miles off the nose of the aircraft, but hadn't been in view before; a range of mountains had hidden it until we reached where we were.\n\n\"Thank whoever it was spotted it ... really good job of staying alert!\" I told Sharon. She relayed the thanks and the compliment.\n\nWe flew over the lake; I had to advance the throttle and make a hard turn to the right to avoid flying too close to a mountain that had hidden the water from us before, then I throttled back again and did a slow flyby.\n\nIt looked good, damned good. A highland lake, pristine from this height, surrounded by a forest of pines, or maybe firs\u2014hell, I didn't know what they were\u2014but it was a virgin forest around a beautiful little lozenge-shaped lake. I couldn't see any sort of underwater objects in the crystal clear water. That was a really good sign\u2014nothing to rip out the undersides of the floats when they touched the water! I made my decision quickly. It was the way I did things.\n\n\"Okay, Sharon ... tell them we're going to set down on that lake down there ... everybody needs to pull their seatbelts tight and brace themselves, okay?\" I could see her nodding from the corner of my right eye.\n\n\"OKAY, EVERYBODY,\" she yelled over the engine noise. \"THE CAPTAIN HAS TURNED ON THE FASTEN SEATBELT SIGN ... PLEASE RETURN YOUR SEATS TO THE FULL UPRIGHT POSITION AND MAKE SURE YOUR SEATBELT IS SECURELY FASTENED. WE'RE GOING TO LAND RIGHT DOWN THERE! HANG ON TIGHT, KIDDOS ... GONNA BE A WILD RIDE!\"\n\nI couldn't help but grin in spite of everything. Sharon was one hell of a woman, and I loved being around her\u2014even in a plane that wasn't going to be flying much longer. I shot her a quick glance, still smiling and took a second to pat her hand affectionately. She captured my hand and kissed the back of it, then released it quickly so I could put it back on the throttle.\n\nI revved the engine and made another steep bank, coming out of it aligned with the long axis of the lake. I slapped the flaps down to fifteen percent, leveling out high enough to clear the tree tops but not much more. I was about thirty-five feet over the thick forest.\n\nI reduced the throttle way back and let the plane drop, dropped the flaps to 40% and pulled back on the yoke to rub off a little more speed. I lowered the nose again as we passed over the last of the tall trees. The glide path was pretty darn good; we passed over the shoreline at about twenty feet and we were settling fast. I flared, lifting the nose one last time, just enough to raise the front edges of the floats, and chopped the throttle.\n\nWe kissed the water almost gently, then with greater force as the weight of the plane forced the floats deeper. Reaching down to the floorboard beside me, I engaged the rudders on the back of the floats and abruptly, we were in a DeHavilland boat instead of a plane. I think it was the best water landing I ever made.\n\nWe slowed rapidly. I looked around as well as I could outside my left-side window and forward, but I couldn't see anything that hinted we were in any immediate danger. When I asked Sharon to look out her side, she couldn't see any problems either.\n\nThere was a lot of cheering and high-fiving going on behind me and Sharon twisted around in her seat to take a bunch of high fives herself. She passed them on to me. We were all ecstatic to be down and safe. We weren't going to crash now, assuming I missed the random floating tree trunks here and there.\n\nI let the engine rumble in idle, deliberately slowing our taxiing speed so I could better see what was around us. Finally, I found a little inlet off to my left. It led to what looked like a pebbly beach about half-way up the cove. Moving slowly, we taxied up the comparatively narrow waterway and a few seconds later, the front of the floats ground noisily a few inches up a mostly gravel slope\u2014we were at rest.\n\nI turned off the ignition, turned in my seat to grab Sharon in my arms. I kissed her soundly. She returned the kiss enthusiastically, so I kissed her again, more slowly and deliberately. She returned that too.\n\n* * *\n\nI reluctantly stopped kissing Sharon. I didn't want to stop, but there were things that needed doing. Opening my cockpit door, I stepped down on the left float and retrieved a short braided nylon rope with an anchor attached out of a storage bin in the float. I clipped the line to one of the landing gear supports, and walked up to the front of the float, avoiding the super-hot engine exhaust pipes.\n\nFrom there, it was a short drop onto the gravely shore. The pebbles were damp\u2014probably the floats had pushed a little wave a short distance up the slope\u2014but the ground was dry a couple of yards inland. Pulling the rope taut, I slammed one of flukes down into the pebbly soil, and stepped on the shank, driving it a little deeper. The old DeHavilland was secure enough for now; we'd do a more permanent job later.\n\nLooking back, I saw the passenger entry hatch was open and a guy was easing himself down onto the left float. \"Yeah ... hey!\" I called, \"Ya'll come on out and get on dry land. Do everything you can not to get your footwear wet, though...\"\n\n* * *\n\nIn twenty minutes, all nine passengers were on dry land with me and trying to massage or walk the cramps out of their legs. They'd brought their tiny amounts of carry-on belongings out with them. We'd pull their luggage out of that compartment in a little while. While everyone else was dealing with tight muscles and working the kinks out of their backs, I climbed back up and hauled myself up on the wing with a dry stick in my hands. I opened the refuel valve and stuck the stick inside the fuel cell. I sighed to myself, closed the cover and made my way down off the wing and onto the left-side pontoon. The aviation fuel had barely wet the end of the stick.\n\n\"OKAY...!\" I yelled, just to get everybody's attention. It probably wasn't necessary\u2014they'd been watching me anyway.\n\n\"Okay ... are any of y'all ex Navy SEALs...?\" It got a light chuckle from a couple of the men. \"...Army Rangers? Marine Recon?\" There were a few half grins as they saw what I was doing.\n\n\"Anyone have an uncle by the name of MacGyver?\" Not even a snicker for that lame attempt at humor. I shrugged. Tough crowd!\n\n\"All right, then ... let's get some things out of the way.\" I looked them over, trying to make eye contact with each person.\n\n\"The bad news is that my instruments failed, but I don't know when they failed. That means I don't have any idea where we are, or in what direction the nearest bit of civilization lies. The batteries in the plane are at 100%, but the radio is also shot and I can't fix it. Are any of you electronic wizards, by any chance...?\" No one raised a hand. \"Okay ... anyone have a satellite phone?\"\n\nNope! Nothing was going to be easy.\n\n\"Okay ... that's the bad news. The good news is that we are still very much alive and not one of us even has a scratch.\n\n\"Second, all bush planes have a survival kit in their tail compartment ... and I made sure I have all the standard gear, plus some extras that will make things a lot easier for us,\" I told them.\n\n\"We've got flares, a little bit of freeze-dried food, and some survival gear\u2014like snares for small game, and gill nets for fishing. And ... I always carry a .357 revolver out here. I've got a rifle too. So we can live off the land and get along pretty darn well all by ourselves while we wait for the rescue teams to find us.\"\n\nEveryone mulled that over for a moment. I didn't tell them the chance of a rescue team finding us were somewhere between nada and nil. The hours of flying over featureless arctic landscape, and seeing nothing but the same kind of desolate country in front of us after I'd made the course correction told me we were well off track.\n\nAnyone searching for us would begin by looking along our projected route and a certain distance either side of that line. They'd have to move slow. Hunting for a tiny human being, or even something the size of the aircraft, from any altitude or moving at speed made it virtually impossible to see anything.\n\nI was pretty sure we were truly lost\u2014as in, off the edge of the map, lost. I was going to let them acclimate themselves to the wilderness for a couple of days, then introduce them to the idea we'd have to walk out and save ourselves.\n\n* * *\n\nWe kept busy. Setting two anchor lines, emptying the aircraft of anything useful, and scouting around took up most of the afternoon. Evening was on top of us before we knew it. One of the guys had explored some of the forest surrounding our little inlet and found a nice little clearing about fifty yards inland where we could set up housekeeping for as long as we stayed here. We left the old Otter sitting where it was. It would be fine.\n\nAt our new campsite, there was a small, slow-flowing spring within walking distance and it had a basin filled with bone-chillingly cold water. In a little hollow downhill from the camp, we established our bathroom\u2014some holes dug in the ground. I sent everyone except Sharon out looking for downed branches and limbs for firewood. Sharon and I spent our time cleaning a section of forest floor until it was free of dried pine needles and other vegetation. Then we carried rocks up from the lake shore to build a secure fire pit.\n\nIn my survival gear, I had a steel and flint fire starter, plus a blister pack of six plastic cigarette lighters in various colors and a two-pack of slightly larger lighters with a camouflage motif on the outside. I broke open the blister packs and passed the lighters out, cautioning those who took one to keep them in some deep, zipped-up pocket because being able to start a fire on demand would give us a tremendous advantage out here. I used the camouflage-pattern lighter I kept for myself to start our first fire. We had two, fairly small, collapsible, aluminum pots for boiling water and enough freeze-dried meals to last several days.\n\nWhen the sun set, it got really, really dark. There were no street lights, no glow of a city just over the horizon, no nothing. We were clearly a gazillion miles from anywhere. The fire helped, though. It pushed the darkness back, leaving us a nice, cozy circle of light. We gathered around it to socialize and connect with our fellow survivors, which is what we were slowly becoming. We weren't travelers in an aircraft any longer. We were people working together to stay alive.\n\nI started it off. \"Okay ... if y'all don't mind, I think we should kind of introduce ourselves to each other and tell us a little bit about yourselves. I only know you as just random names on the passenger manifest, and you know me only as that weird pilot guy wearing a cowboy hat.\" I grinned, doffing my Stetson. \"So let me start off.\n\n\"I'm Matthew Singletary, call me Matt, if you would, please. I'm a Texan, born and raised. I've been flying since I was a young teenager\u2014my uncle taught me to fly\u2014and I came to Alaska specifically for the light planes that fly the bush. I was a businessman in a previous life\u2014before coming to Alaska\u2014but I left it behind and haven't missed it a darn bit.\"\n\nI pointed to one of them randomly.\n\n\"Hi, I'm Parker Anderson,\" he said quietly, \"I'm a Baptist minister in Omaha, Nebraska,\" he continued, then stopped as if that was all there was to be said. I guess it was, actually.\n\n\"And I'm Michelle Anderson,\" the short brunette with the attractive, composed features sitting next to our minister explained. \"I'm in charge of everything that goes on in Parker's ministry except the sermons!\"\n\nThat got a little chuckle. It was cute, and both Michelle and Parker grinned. It was apparently a joke the two of them shared.\n\nThe others introduced themselves:\n\nApril and Ryan Delaney were from Waycross, Georgia where Ryan had a small business catering to the logging industry down there. April worked as hostess in an upscale restaurant.\n\nLyle and Penny Martin were from Albuquerque, New Mexico. They both worked in the banking industry. They'd met at a bank where Penny was a cashier and Lyle was a loan officer.\n\nSpencer and Wendy Carlyle jointly owned a successful river-rafting business in Colorado.\n\n\"I'm Sharon Kincaid,\" she announced when it was her turn, \"...and I live in Anchorage. I only do work for charities here and there,\" she avowed. \"People say I'm the 'Ice Bitch Princess,' but I'm really not ... I'm just real picky who I choose to spend time with.\" She looked all around the circle. \"I think I'm gonna like everyone here ... no stupes at all!\" She said it with a grin, but there wasn't much amusement in her eyes. She said a few more things, then fell silent.\n\nI looked around the circle, then glanced up at the sky. The stars were out, tiny diamonds shining in the inky blackness. \"Okay, let's figure out which way is North...,\" I said musingly. \"There's the Big Dipper ... there's the little one ... and that star right there at the end of the handle is ... the North Star. We need to mark\u2014\"\n\nSharon was in the process of dragging up a long, reasonably straight branch which she laid down near the campfire. I used a shorter stick to plow out smaller lengths of gouged earth at right angles to the branch, marking east and west. In the morning, we'd know, vaguely, in what direction salvation lay, or should.\n\n* * *\n\nAfter we talked for a while, I gathered a bunch of small branches into a nice pile in preparation to spreading my sleeping bag. Sharon came sauntering back into the fire-lit circle and stood watching me where I'd set my gear up, a couple of yards away from her tent. I had a sleeping bag rated for sub-arctic conditions in my survival kit, but didn't have a tent. Everyone else\u2014every couple, plus Sharon\u2014had sleeping bags and a lightweight tent from their expedition out to watch the caribou herds. The lack of a tent didn't concern me much. The tall trees around us would dilute any rain that fell overnight.\n\n\"What're you doing?\" Sharon asked me in a slightly amused tone.\n\n\"Oh ... well, the branches and leaves will keep me off the ground and they'll be a little softer than bare earth, too,\" I said.\n\n\"I know that...!\" Sharon replied testily. \"I have some under my sleeping bag too,\" she told me, \"which is inside a tent!\" she finished. \"Don't be an idiot, get in the tent where you'll be dry and be able to get some sleep...\"\n\n\"Oh, I'll be fine,\" I remarked, \"the trees will block most of any rain we get and\u2014\"\n\n\"There won't be ANY rain inside my tent,\" Sharon replied smoothly.\n\nHer face was animated and even in the faint firelight, I could see she was flushed. Her eyes were wide as she dealt with one of the \"stupes\" she'd implied earlier she didn't like. With her soft hair blowing in the gentle breeze that'd come up, she was a vision come to life.\n\n\"Yes, dear,\" I replied with a grin.\n\nShe snorted softly, but it didn't sound too derisive, and there was a half-grin on her lips.\n\nI gathered up my sleeping bag, walked to her tent and thrust it inside. It was going to be a tight fit in there, but we'd manage. I sat on a fallen tree limb to pull off my boots. Sharon already had her boots off and she crawled inside. As I started through the opening, my sleeping bag came flying out.\n\n\"Hey!\" I said. It wasn't that intelligent of a thing to say, but it was all I could come up with.\n\n\"Don't need it!\" Sharon replied briskly. \"We'll be warmer sharing body heat!\" she said in a no-nonsense tone.\n\nWhat she said was very true, except that it wasn't going to be cold enough in early May Alaska for sharing body heat to be a critical issue.\n\n\"And there's no room to put your sleeping bag in here,\" she added.\n\nPeeping inside, I saw that was also true and irrefutable. \"Yes, dear...,\" I muttered again.\n\n\"I heard that!\" she quipped.\n\n\"I know,\" I murmured resignedly, but I was smiling, and so was she.\n\nI crawled in to find her double-size sleeping bag covering the whole floor of the tent. I blinked. She was holding out the pants and top she'd worn all day.\n\n\"Would you please hang these on a branch or something, please?\" she asked politely, not even cracking a smile at my rather obvious amazement. I had to winch my jaw back up.",
        "I took them without a word and draped them over a low hanging limb. They were still warm from her body.\n\n\"And, Matt?\" she called just as I was about to climb back inside.\n\n\"Mmmmmm?\"\n\n\"You should hang your jeans and that scratchy shirt out there too. Everything works best if you're sharing body heat, skin on skin, you know?\" she asked in a low, melodic voice.\n\nWell, I did know mylar blankets worked best that way\u2014in direct contact with the skin. I didn't have a clue whether that applied to skin on skin in a sleeping bag or not. It did sound like a good idea though.\n\nI doffed my blue jeans and wool shirt and stood for a moment in the darkness in only my boxers and socks. It got chilly quickly, so I slipped inside Sharon's tent. Then I took my socks off, and deposited them outside before zipping the entrance way shut behind me.\n\nI twisted around on my knees to find Sharon on her back wearing her panties and ... well, heck! \"Ahhhh ... shouldn't you keep your...?\"\n\n\"Have you ever worn a bra all night long?\" she wondered.\n\n\"Well ... no,\" I replied quietly. The woman was hot. Her breasts were bigger than they'd looked like with her shirt and cold weather gear on. They were beautiful, round globes perched high on her chest. Her nipples were already hard from the cool night air. Lying there, flat on her back, exposed the generous flare of her hips and that barely panty-clad secret place between her thighs. I was probably drooling a little bit.\n\n\"Come to bed, Matt,\" Sharon told me matter-of-factly.\n\nI did, sliding deep into the sleeping bag. Sharon drew the open edge of the top over herself and me as she turned on her right side and into me. She cuddled into me, her nipples burning twin holes in my chest. She reached behind my shoulder and tugged the top of the sleeping bag into place.\n\nI was on my left side facing her, she was on her right side, and we were snuggled up to each other as naturally as if we'd done it for years. Her arms went around my neck comfortably.\n\nWe spent the next few minutes kissing, soft gentle kisses that had some heat, but weren't terribly demanding. My left arm was under her neck and my right around her shoulders.\n\n\"You know...,\" she murmured softly, \"...you could have been in my ... sleeping bag ... last night, if you'd said the right words\u2014like, 'you wanta do something naughty?'\u2014or something like that.\"\n\nI didn't know what she wanted to hear from me, so I went with the truth.\n\n\"I want our first time to be something we both decide to do and when we both know it's time, we probably won't need any \"right\" words,\" I answered quietly.\n\nSharon levered herself up on her right elbow and in the light of the rising moon, looked me dead in the eyes. I guess she found what she was searching for because she kissed me gently, lay back on her side and sighed contentedly. We slept the whole night in each other's arms and woke in the same position. I got more kisses then.\n\n* * *\n\n\"Hey, Matt! Whaddya want me to do with this big box?\" Spence yelled. He, Spencer, had told everyone he preferred the short version of his first name. He was in the rear of the Otter, helping to salvage anything that even MIGHT be useful from the interior of the aircraft.\n\nAt first, I didn't know what he was talking about. Then I saw him lifting a large package from the last seat in the passenger cabin and hold it up. It appeared to be moderately heavy.\n\nI adjusted the heavy pistol on my hip. A lot of people in Alaska openly carry weapons, but I wasn't quite used to it yet. \"Darned if I know...,\" I called to Spence, \"Bring it on out and let's see what it is.\"\n\nI remembered when I saw it laying on the ground in front of me. The boss had entrusted a package to me for delivery to an old friend working in a drilling company in the Anwar oil reserve. When I'd tried to contact him from the resort, it turned out he'd gone home three days before I'd flown up. I was carrying the box back to Anchorage, but it would never get there now.\n\nTurned out the package was full of white bars of soap and toothpaste. We divided all of the box's contents and put our shares in our backpacks.\n\n* * *\n\nWe spent the whole second day getting more comfortable with our little patch of wilderness. Reverend Anderson, he asked us all to call him Parker, proved to be a zealot for fishing. He took charge of the gill nets that were in my survival gear and caught us plenty of fish for dinner. In fact, what he'd caught would have fed a crew twice our size, so we didn't have to use any of our precious freeze-dried meals that night and we were all comfortably full.\n\nSharon and I shared her sleeping bag and tent again that night. None of the married couples seemed to notice the two single members of the group were bonding quite nicely. It was a comfortable arrangement for me, and I think Sharon, too.\n\n* * *\n\nThe next day was our third as survivors in the remoteness of somewhere in Alaska, or maybe we were in northwestern Canada. It started out as had our second day, except everyone was getting restless. At lunch, which was more fish broiled on flat rocks placed in the hot coals of our fire, I brought up the subject I'd been avoiding for the last two days.\n\nWe weren't going to be rescued, I told them, because we were too far away from any reasonable search area. Then I broached the idea that we were going to have to save ourselves; we were going to have to hike out of the mountains to civilization.\n\nIt went over well. They were all intelligent adults and the facts of our situation were self-evident. Actually, things went so well, I didn't have to convince anyone. We began splitting up gear and putting it in our backpacks as a test to see just what we could carry on a long distance trek.\n\nI had the only big backpack; everyone else had little more than daypacks they'd used in their expedition to view the caribou herds and such. I would be carrying more than \"my\" share of the community belongings. On the other hand, my backpack's carrying harness was designed to distribute the load and it was probably as comfortable to carry fifty or sixty pounds of gear inside it as it was to carry twenty-five pounds in their daypacks.\n\nI was hefting my backpack, getting ready to sling it on my back when I heard an earsplitting scream from the camp behind me. \"AAAAAAAAAIIIIIIIIIIIIIIIEEEEEEEEEEEEEEEEEEEEEEEEEEE!\"\n\nI whirled around as fast as I could, shrugging my arms out of the backpack's shoulder straps. That scream was one of unadulterated terror\u2014you can't mistake it. I let the pack fall behind me, undid the leather strap holding my .357 revolver in the holster and drew it as fast as I could. I wasn't Marshal Dillon, but I think I got it out pretty darn quick.\n\nThere was a bear just the other side of the camp, not one of those cute little black bears that only weigh a two or three hundred pounds. This was a grizzly\u2014big fella\u2014eight feet tall when standing on his hind legs and maybe eight or nine hundred pounds. He was coming into camp between Sharon's tent and the Delaney's brightly colored one, just ambling through\u2014until the scream. Then he got a little upset. Standing straight up, he tested the air with his nose and apparently didn't like what he smelled. From his reaction, we were invading his territory and he didn't like it.\n\nEveryone on that side of the campfire was busting ass getting to this side. Mr. Bear didn't like the fire one bit, and shied away from it. Avoiding the fire pit put him on a collision course with me, and I didn't like that.\n\nUsing a two-handed grip, the way I was taught, I began firing, trying to hit the monster in the head. Anywhere else, he'd just absorb the bullets and keep coming. Shooting at his head wasn't much better; it was like rifle rounds glancing off a main line of battle tank and it only served to piss him off even more. He opened his cavernous maw and began roaring\u2014and that gave me my only chance. I'd heard of grizzlies being killed with tiny .22 rounds if the rounds went in an eye and rattled around in the beast's skull, thoroughly scrambling its brain.\n\nI was trying to duplicate that, using the much bigger target of his open mouth. I wanted to chip a front tooth with a .357 round that would smash right on through to his brain pan and put him down for the count. His head was moving, though. Even at a range of less than thirty feet, it wasn't easy to put a bullet where I wanted it. He took all six rounds from my pistol and I scrambled backward, opening the cylinder and trying to find the loose cartridges I'd dumped in my jacket pocket.\n\nAbruptly, the rifle I'd included with my survival gear was thrust in front of me. I grabbed it from Sharon, who relieved me of my pistol at the same time. Her hand was digging in my pocket as I was turning around with the rifle.\n\nThe Remington 700 is a bolt action rifle so I couldn't fire it as fast as I'd sent .357 rounds downrange. On the other hand, when a 300 magnum bullet hits something, it does major league damage\u2014even to eight-foot tall grizzlies.\n\nMr. Grizzly didn't like the first shot which careened off the top of his skull, or the second one either which chipped a piece of bone off his left forehead. The magazine only held three rounds so, giving up trying to hit his mouth, I put the third one in this magazine right on his sternum. It rocked him badly.\n\nHe staggered, pawed at the wound a bit, then kept coming. I dropped the magazine out. I didn't have another one ready\u2014there was a spare in my backpack, but I doubted we had time to find it. I'd would have to load some rounds in the magazine I had now, and just hope the grizzly would back off while I did that.\n\nSharon pushed my revolver back in my hands and took the rifle. I had to close the distance so I stepped forward a few paces. Mr. Griz noticed that and shuffled his bulk around to face me. I wanted the bullets moving on an upward trajectory so I knelt on the forest floor. Out of the corner of my eye, I saw Sharon at my side, holding the rifle at the ready. She must've somehow found the spare magazine in my pack and reloaded.\n\nI had to fire slowly, taking care to aim and exercising good trigger discipline. Squeeze the round off\u2014that's what they always say. I was doing my best as the big brown bear shuffled painfully forward. I was willing to bet the bullet over his heart was going to kill him; it just wouldn't kill him fast enough. \n\nMy third shot went in right at the upper gum line. Angling upward as it tumbled, the bullet did what I needed it to do. The grizzly was instantly dead on his feet, his brain destroyed. The beast collapsed like a puppet with its strings cut, no more than twelve feet from where I was kneeling.\n\n* * *\n\nAn hour later, we made a decision to leave this campsite behind and not come back. I suggested that option as something to be discussed, but it was treated as a parliamentary motion made and carried. Everyone began implementing it by breaking camp immediately.\n\nThe bear had been bleeding for a while. While my earlier pistol rounds hadn't killed him, he'd immediately begun spraying blood all over the place. Now there was blood pooling under him from the rifle rounds and lots of brain matter and blood from the head wounds splashed all around. It was a mess. My thought was that predators and scavengers were going to be coming from miles around to join in the feast. That image took root and flourished in all our minds.\n\nWe disassembled all the tents and stowed them as we'd practiced doing before the grizzly came upon us, lashing them to the top of our backpacks. All our other gear went in the backpacks themselves, our pockets or tied to the outside of the packs. Without pausing to look back, we got moving in a vaguely southwest direction, aiming at an easily identifiably peak on the horizon.\n\n* * *\n\nWe kept moving until the sun made a dive for the western horizon. We paused for an hour, built a fire and boiled water from a creek in our aluminum buckets and mixed it into our freeze-dried meal pouches. After we ate, we put the fire out and trekked on for another hour until the deepening twilight began causing problems seeing our footing and keeping to a direction of travel. We washed up in the creek as best we could; the soap we'd scrounged from the box in the plane helped immensely by improving our punctured confidence and morale.\n\nThere was a bald knoll a short distance from our intended path and we climbed to the top of it to set up our tents. None of us wanted to give any critter any cover to get closer to us than absolutely necessary tonight. We gathered enough firewood to last a while and built a big fire. We didn't especially need the warmth; we just wanted a well-lit, albeit small, space in the wilderness around us.\n\n* * *\n\nWhen I crawled in the tent, Sharon was lying flat on her sleeping bag unabashedly naked and with her thighs spread wide. She didn't say a word, and neither did I. I was out of my boxers in an instant and lying next to her in the next.\n\nShe didn't want any soft kissing or caressing strokes. \"No...,\" she whispered when I tried to touch her mons and begin to make love to her. \"Put it in me, Matt ... I need you right now...\" So I did what she wanted. She was definitely wet enough. Sharon grabbed my cock and deftly slid it in through her pussy lips and into her vagina. I plowed deep with one smooth thrust.\n\n\"Uuuuunnnnnnnggggghhhhhhhh!\" she moaned in a strangled voice. \"Oh, God ... deeper, Matt ... more...\" The deeper I plunged, the higher her knees rose in the air. She locked her ankles behind my kidneys and used her legs to power me deeper inside.\n\nThere wasn't any art to what we were doing; we weren't making love. We were two human beings celebrating our survival with the oldest ritual in the book, reaffirming with each other we were still alive when we might not should have been.\n\nSharon came hard, groaning into a corner of her sleeping bag she'd stuffed in her mouth to muffle her screams. When I felt her pussy beginning to clamp down on me, I came too, pumping a torrent of cum inside her every time her vagina fluttered.\n\nI slowed down, all my weight back on my haunches, but I didn't stop. Sharon planted her feet firmly on the sleeping bag-covered floor of the tent. I drove into her firmly, but not harshly. As soon as she recovered from her first climax, she began working for another one.\n\nI sped up a little, powering my cock deep inside with more abandon and she responded by slinging her cunt up at me to engulf more and more of my hard-on. In a few more minutes, we were pounding each other again, scaling the heights for another climax.\n\nWhen we finished, Sharon wearily pulled the upper corner of her sleeping back over the two of us and we nestled against each other, her breath warm on my chest and me breathing in the scent of her hair. \n\nToward dawn, Sharon woke me up riding atop me and whimpering softly as she did her best to keep quiet. When we both came, she folded forward on my body and that's the way we went back to sleep.\n\nCHAPTER SEVEN\n\n\"We're going to have to sleep in your sleeping bag tonight while mine airs out some,\" Sharon told me with a mischievous grin the next morning.\n\n\"But mine's just a little bigger than a regular single bag ... it isn't a big double, like yours,\" I objected.\n\n\"So...?\" she replied with a little giggle. I got it; it wasn't like we spent our nights squirming around, trying to get away from each other as we slept. And if I could avoid it, I didn't want to lie in a big wet spot either. Her bag did need airing out\u2014it really, really did.\n\nIt wasn't the only sleeping bag in camp that required airing that morning. Sharon and I hadn't noticed, but apparently all of the other couples in camp had done a lot of reaffirming their humanity and continued existence in the face of deadly peril also. We were all a little tired, but we were feeling just fine. Everyone grinned at each other.\n\nWe heated creek water in our two aluminum buckets\u2014they didn't hold but about a gallon each\u2014mixed the boiling water with cool water and then did what we could to wash off last night's activities. That began a practice we kept in place for all the days ahead, that of keeping as clean as we could in the circumstances in which we found ourselves. The soap we'd found in the package loaded on the rear seat in the plane helped enormously. Cleaning up cost us a couple of hours, but it was worth it.\n\nWashing ourselves off began another custom too. We paid no attention to the normal rules of modesty. For one thing, living so closely, being modest was a losing proposition, anyway. Second, we weren't over the bear attack, and had no intention of ever getting over it. We dug holes for our waste products and whenever someone had to use the \"facilities\" someone else had to stand guard. At least, we thought it was necessary\u2014and we didn't see any need of discussing the issue.\n\nModesty took another blow when it became apparent that we were going to be stripping down every night in preparation for sleep. No one wanted to sleep in the same clothes we'd sweated in all day long, if we could avoid it. Getting nude every night meant we would get up the next morning sans clothing, and then we'd don \"fresh\" shirts and pants in the daylight, outside the tents.\n\nAll of the tents were low-silhouette, lightweight hiking tents and barely had enough room for two people lying down\u2014there was no head room to change inside\u2014so we changed our clothes in public. We all had some changes of clothing with us and we rinsed soiled garments in the river, but that only went so far.\n\nWe never heard a word of protest from the Reverend Parker Anderson, our twenty-seven-year-old resident theologian. In fact, he and his wife, Michelle, were doing the same thing the rest of us were. I liked Parker. He never seemed to get down on himself or our situation and was always ready to talk to anyone who was dispirited.\n\nI asked him if I could call him \"Padre\" because I'd read somewhere or other, the chaplain aboard Navy ships in WWII, regardless of their religious order, were normally addressed by that title. Parker didn't mind a bit and the salutation, Padre, caught on in the group right from the start. It just felt right.\n\n* * *\n\nThe day after the bear attack was our first full day on the trail, hiking from we-didn't-know-where in a vague direction toward civilization and safety. We'd rushed all yesterday afternoon, trying to put as much distance between us and the dead bear as we could. We succeeded, but there were a lot of sore legs and achy backs that first morning on the trail. We probably didn't make ten miles that first full day of hiking, though we were on the move for twelve hours. It was comparatively easy, walking near (but not beside) a river for most of the way. That was good. We needed easy going for a while until we worked ourselves into good condition.\n\nWe were lucky in that we were all pretty fit, for a normal group of men and women, but our daily lives before this adventure had not included long distance hiking. It took our bodies a couple of weeks to adjust to the physical stress of always being on the move in the daylight, climbing or descending ridges, and scrambling over boulders when our path forced us to negotiate the river's shoreline. Three weeks after we started out, though, we had all settled into a routine and no longer had to fight tired, tender muscles every morning.\n\nIndividual traits began to surface. Penny Martin, who worked in banking, as did her husband, had competed in track and field in high school, and she'd kept running as an adult. She found it easy to acclimate herself to hiking all day long and she could probably have put all of us under the horizon every day if she'd exerted herself.\n\nHer husband, Lyle, was another avid fisherman and he took his turn with the gill nets. Between him and the Padre, anytime we were near a creek or river, we had fish to eat, courtesy of their expertise.",
        "Ryan Delaney proved to be the best cook in the group and he took over that task on a permanent basis, broiling whatever Lyle and the Padre brought in from the river or game anyone else brought in. As we walked, we gathered berries from bushes near our path, wild onions or whatever, to add to the community pot Ryan was in charge of.\n\nI was the designated hunter. I'd take the Remington rifle and move away from the line of march and try to down a deer\u2014sometimes a reindeer\u2014or a moose, or whatever. I only had thirty rounds for the rifle at the beginning and I'd fired three into the grizzly. I husbanded the remaining very, very carefully and made every round count by getting as close to the target as I could.\n\nSharon became the camp guard, generally carrying my .357 magnum to escort one or two people to and from the latrine trenches we dug, guard parties gathering berries, or generally keep watch over anyone who needed to go somewhere. Everyone found a way to contribute to the overall goal.\n\n* * *\n\nA month into our journey, I was out in front with the rifle, hoping to find a deer or moose we could have for dinner. We wanted to try smoking whatever was left of the meat to carry along with us, so I was also looking for a place with lots of firewood.\n\nI was following one of the multitude of game trails that seemed to lead everywhere and nowhere at the same time. Drifting down a ridge, I saw two good-sized deer apparently licking at a rock about a hundred yards away downslope. I'd been moving against the wind, so I was already downwind of them, staying close to the ground and moving slow. They had no idea an intruder was anywhere near. The larger of the two raised his head to look all around and I froze, concerned I'd done something to spook him.\n\nCrouching over a small boulder, I could see him clearly through the four power scope and I knew precisely where the bullet would strike. The big male took a couple steps in my direction and tossed his head. Taking my time, I took a deep breath, let some of it out, then touched the trigger and squeezed. The loud crack of the rifle echoed around the mountains for a long while. The big buck dropped, dead before he hit the rocks he'd been stepping over. The smaller one took off running across the slope. I probably could have gotten him too, but it would have been chancy, and we didn't really need the meat. With a severely limited amount of ammunition, I didn't want to waste anything, so I didn't fire.\n\nI walked down the slope to the dead deer and studied the scene. The rock they'd been licking was a few yards away, undisturbed by the blood and brain matter from the deer's death. Then it came to me. Something bubbled up from a long-ago TV reality show. Wild animals need salt, just like human beings, but there aren't any convenient one-pound canisters of iodized salt out in the wild. Animals had to lick necessary minerals and salt from deposits nature provided.\n\nWe wound up shaving licked portions of the deposit off with our knives, and using a hatchet to chip off large chunks. We could see there was a lot of mineral residue in the surrounding soil, but we left it where it lay. We had enough chopped up and ground up mineral to give everyone a pound and a half or two pounds to carry along. We had no idea how much we'd actually need, but it seemed prudent to carry too much rather than run out. It made everything our chief cook, Ryan Delaney, prepared taste just that much better.\n\n* * *\n\nThe salt added to everyone's load, but we accepted the penalty weight because of the benefits. For quite a while, we'd been trying to do just the opposite\u2014shed weight. Sharon and I were sleeping under the rain fly that had been over her tent. That saved us from having to carry the weight of the tent and the rain fly.\n\nWe'd tossed my sleeping bag away, and just carried her double-sized one to save even more weight. Everyone else was doing the same. We kept all of the ammunition for my two guns, one or two changes of clothing, and now the salt, but most everything else was strictly optional. We were shaking down into a lean, tight-knit group of hikers moving cross-country through the wilderness.\n\n* * *\n\n\"Do you have something to say to me, Matt?\" Sharon asked softly as we cuddled in the coolness of the partial darkness one night. \"...Three little words, perhaps?\" she teased.\n\nShe and I had been steadily getting closer. We'd been intimate already, so we were working at things backwards\u2014learning about each other. We talked almost constantly, sometimes forgetting the other survivors were there, and almost always spent an hour or so each night whispering to each other in our sleeping bag.\n\n\"Well...,\" I mused. \"Oh, I know ... 'It's going to rain'? Oh, no ... that's four words.\" I glanced out at the twilight visible under the rain fly. \"Oh, I know ... 'It is raining!' ... yeah, that's three.\" I told her teasingly.\n\nWe were snuggling together; I was spooning into her back with my right hand casually cupping her right breast. Her right elbow came whistling around and snapped into my upper ribcage.\n\n\"Try again,\" she suggested.\n\n\"Oh ... I just don't know,\" I returned wishing I had some football pads to wear to bed with my lady. I rubbed the impact point just above my third rib. \"Well ... there is ... ahhhh ... no, I couldn't say that!\"\n\n\"What?\" she demanded impatiently.\n\n\"I was just thinking ... I could say 'I love you', but heck, you already know that ... it wouldn't be anything you'd want to hear...\"\n\nI have no idea how she rotated her body around to face me, but she did ... and in only a split second, too.\n\n\"Say it again!\" she insisted softly after a quick kiss.\n\n\"I love you, Sharon Kincaid,\" I told her. This time the kiss was longer and very gentle. No tongue, but very tender and heartfelt.\n\n\"I love you,\" I said again. I liked these kisses\u2014I could probably live on them alone without any deer meat or fish at all.\n\n\"Why didn't you say that ever before?\" she asked.\n\n\"Why didn't you?\" I replied, tossing the ball back into her court.\n\nShe kissed my nipples, gently nipping at them before she tilted her face up to mine for another hot kiss. \" 'Cause the boy has to say it first,\" she told me, giggling.\n\n\"Hey! Here we are in the twenty-first century, with women's lib taking over the whole world ... and you can't say 'I love you' first?\" I asked unbelievingly.\n\n\"Nope!\" she said adamantly, shaking her head. \"...Has to be the boy!\"\n\n\"Well, I said it now,\" I pointed out, \"...and you haven't said it to me at all.\"\n\nShe touched my lips with hers and climbed atop me, winding her arms around my neck. \"I love you, Matthew James Singletary!\" she told me softly and kissed me again. \"I love you so much!\"\n\nWe didn't say too very much for the longest time, but we communicated our feelings very, very well. Eventually, she was beside me again, facing me and cuddling into my chest. Her legs were intertwined with mine and her hands were doing things to my member that were excruciatingly wonderful.\n\n\"I have four more words,\" I offered gently. \"They go right after those three...\"\n\n\"What?\" she asked tenderly.\n\n\"Well, let's see ... how about, 'I love you ... and then four more words like, 'Will you marry me?\"\n\nSharon was a strong woman, and these past few weeks on the trail with all the strenuous activity just made her stronger. About the time I got the last word out, my woman was scrambling on top of me, arms around my neck like a steel trap, and she was mashing her lips to mine again while bawling her eyes out.\n\nAfter a few minutes, I had to take a timeout to breathe.\n\n\"You could just say 'yes', you know...,\" I suggested.\n\n\"Yes, honey,\" she whispered, \"...yes now and forever!\"\n\n\"Would you marry me tomorrow ... if we could?\" I asked.\n\n\"Yes,\" she murmured in my ear.\n\nI turned my head as far as I could to the right; I didn't want to yell in her ear. \"HEY, PADRE!\" I called out.\n\n\"Yes, Matt?\"\n\n\"Can you marry somebody without a marriage license?\" I asked.\n\nHe paused for an instant. \"Well ... I guess so, and I think you'd be married in the sight of God, but the state of Alaska probably has a strange idea they should be able to charge a fee for the privilege...\"\n\n\"How 'bout you marrying Sharon and me in the morning ... an' I'll pay the fee when we get to the next town, how 'bout that?\"\n\n\"Okay!\" Padre agreed.\n\n\"Right after breakfast!\" I told him. I was sure he could hear the smile in my voice.\n\n\"About damn time!\" someone remarked; I think it was Spence Carlyle. There was a faint slap. His wife, Wendy was a spunky woman who didn't mind correcting Spence's manners from time to time.\n\n* * *\n\nEarly the next morning, after a breakfast of left-over deer from the night before, the Padre officiated at a little ceremony, uniting Sharon and me in the bounds of matrimony. We were high on a ridge, looking out over a river valley with snow-capped mountains in the background; truly God's cathedral.\n\nI presented Sharon with a \"wedding ring\" I'd hollowed out with my pocket knife from a small chunk of pine. It wasn't much of anything; just a symbol. She seemed to appreciate the thought, though. I presume that's what all the crying meant. She didn't slap me for being impertinent; that was always a good thing.\n\n* * *\n\nWe trudged on, still holding to vaguely southwest line. We checked the position of the North Star every night and selected a course toward a major landmark the next morning. Days drifted into weeks, and weeks into a month\u2014then two months and more. Still we marched. I don't know how many linear miles we trekked. It was impossible to know because we were forever having to walk around a sheer rock face we couldn't scale, or take a route around a mountain slope we couldn't descend safely, or find a ford over a river we couldn't wade\u2014it was always something.\n\n* * *\n\nIt was the middle of August\u2014our plane had been forced down in early May\u2014when we came to another wide river. It was too deep to wade, so we would have to build a raft and paddle, or pole, ourselves across. We'd already done that twice, so we were experienced in what we needed to do. We'd be able to make short work of it if we could just find the logs we needed.\n\nLogs are heavy. Carrying them is hard work. We needed to find a place where the forest came nearly to the water's edge so the carry would be as short as possible.\n\nI turned my back on the river to scan the trees behind us. I'd almost decided our present position wasn't favorable and we'd have to move up or downstream to find the place we needed when Sharon gasped out loud. She scurried around behind me and began doing something in a pocket on the rear of my backpack.\n\n\"Whatcha doin', honey?\" I wondered. She didn't reply.\n\nShe got the zipper undone, yanked something out and raced away from me toward the riverbank. I swung around to see what the heck she was doing.\n\nThere, out on the river and not fifty yards away was a skiff, twenty feet long or so, with its wheelhouse painted the brilliant blue and gold of the Alaska State Troopers. The individual conning the boat along had probably already seen us\u2014we were standing in plain sight on the bank\u2014but I made sure. I pulled out my .357 and fired three quick rounds into the air behind us. I was sure the three ear-splitting cracks would attract the guy's attention.\n\nSharon made doubly sure of that. She'd dug out the flare gun I'd been hauling around since we'd left the float plane bobbing in that faraway lake. She aimed the gun in the direction of the no-so-distant patrol boat and then fired\u2014almost horizontally.\n\nThe bright red flare whooshed out, very much on-line with the skiff. The guy piloting the craft saw us, and the flare, quite clearly. The gunfire doubly alerted him to our presence, and the red ball of the flare marked our position clearly. He waved and hauled the wheel around to point the nose at the bank were we were anxiously waiting.\n\nThen he saw the flare wasn't gaining any altitude and he apparently also noticed it was dead on target for his patrol craft. He watched as the flare zoomed closer and closer. At the last second, he dove for the bottom of the wheelhouse to avoid being struck. The flare cleared the boat house by several feet, but he couldn't have known he had that clearance when it was decision time.\n\n\"HEY! CUT THAT OUT!\" he yelled when he popped back up. \"I SEE YA! GIVE ME A MINUTE TO GET OVER THERE, DANG IT!\"\n\nAll of us standing there on the river bank laughed. It was great, being able to laugh at something good happening to us after so long. I grabbed Sharon and held her tight, kissing her again and again.\n\n* * *\n\nThe Alaska Wildlife Trooper, that was his actual title, made a long call to his supervisor, using his satellite phone. (I made another note to myself to get one of those, and never, never go outside the city limits without it.) Trooper Adams relayed all our names to his base, and explained everything to his watch commander in general terms as I coached him. He got the headquarters to send a big helicopter to ferry us all back to Fairbanks.\n\nIt turned out, our navigation from (wherever we were out in the wilds) to civilization wasn't all that bad. Even if we hadn't been found by the Wildlife Trooper when we had, we'd have begun to run into roads we could follow to small towns. Those roads weren't more than a few more day's march across the river. That felt good. We were just a group of thoroughly average men and women, but we'd done the unbelievable\u2014we'd saved ourselves.\n\n* * *\n\nSharon told me once on our trek her father had money, but she hadn't made it clear how much he had. I hadn't asked. It didn't matter to me, or her either.\n\nApparently her father had BIG money and her daddy's property holdings came in handy immediately. For instance, he owned a really big, really nice, really expensive hotel just outside the Fairbanks city limits. After the State Troopers were satisfied with a preliminary report of how my plane was forced down and how we reacted, we bummed a ride from a motherly secretary in the office who lived vaguely out in the direction of that hotel.\n\nWe walked into the lobby and instantly became aware we didn't fit in. Our rough and ready clothing was worn, even a bit tattered, and we SMELLED! It hadn't been a big deal out on the trail because everyone else had a pretty ripe odor too but here in this fancy hotel lobby, we really stood out. I mean we really stood out!\n\nWe stood around for a moment, wondering how Sharon could connect with someone in her father's business empire. It was the second day of September and we'd been \"missing, presumed dead\" for almost four months. We didn't quite know how to announce we were risen from the dead and ready to start living again.\n\nSharon resolved that problem quickly. She caught sight of a tall woman in a dark grey business pants suit and white blouse striding from a bank of elevators off to our left, followed by an entourage of business attired women and men.\n\n\"TERESA!\" Sharon bellowed at the top of her lungs. \"TERESA! OVER HERE!\"\n\n\"Teresa\" didn't even glance in our direction. She heard Sharon\u2014I saw a few heads in her group turn toward us\u2014but the boss lady didn't react. That upset my Sharon.\n\n\"TERESA CUNNINGHAM, YOU HUSSY! YOU BETTER PAY ATTENTION TO ME, DAMMIT!\" she yelled.\n\nThat got a reaction.\n\nStartled, the woman in the pant suit looked around and eventually found a thoroughly incensed Sharon. The woman's jaw dropped and a stunned expression came over her features. She held out her phone blindly to a guy behind her, clearly expecting him to take it because she let go of it immediately. He did manage to catch it. In fact, he caught it three times. He batted it back into the air twice before finally capturing it a couple of feet above the floor\n\n\"Teresa\" trotted in our direction and Sharon met her halfway across the lobby where they came together in a wild hug. I followed more sedately.\n\nThe two women were in tears and Sharon was trying to explain our whole nearly four-month's trek back to civilization in words diluted by a lot of water-works. It wasn't going that well. I touched Sharon's arm and she quickly turned to me.\n\n\"Honey, Teresa's always been a really good friend to me,\" she said warmly, then turned to Teresa. \"Terry ... I'd like you to meet my husband. Terry\u2014Matt ... Matt\u2014Terry!\n\nI held out my hand. \"Nice to meet you Ms. Cunningham,\" I told her, remembering Sharon had called her that a minute ago.\n\nThe woman was a little off her game. She looked from Sharon to me and back again three times. \"Sharon ... husband? ... oh Jesus! When ... how ... I mean, where did...?\"\n\nSharon finally took pity on the woman. \"Terry, we have a lot to catch up on ... but for now, do you think you could get us a room? We're tired and we really, really ... really need a shower!\"\n\n\"...Or two!\" I contributed.\n\nSharon took my hand and smiled up at me. \"...Or more!\" she remarked.\n\n\"Oh, God, yes,\" Teresa answered. I wasn't sure if she was reacting to how ripe Sharon and I smelled or whether she was just responding to Sharon's question.\n\n\"SIMON!\" she yelled back to the group that'd been marching along behind her across the lobby. \"PUT SHARON KINCAID ... I MEAN ... PUT MR. KINCAID'S DAUGHTER AND HER HUSBAND IN THE PENTHOUSE ... NOW!\"\n\n\"Simon\" must have been the hotel manager, or he held some such position, because he was walking toward the check-in desk about half a heartbeat later, gesturing and talking urgently to the hostess there while he was still walking. Seconds later, he brought a key card back to our little group. He gathered all three of us up and escorted us into what was evidently the VIP elevator because he had to swipe the card in a device mounted on the wall beside it before the door would open.\n\nThe elevator stopped on the fifteenth floor and Simon ushered us to a set of tall double doors which opened into a mammoth suite. Inside, Sharon and I sat on one of the three sofas in a sitting area, one reached by descending four shallow steps. Ms. Cunningham sat on another one facing vaguely in our direction. I found myself a little uncomfortable because I'd been sitting on hard tree stumps, or the ground, for most of four months. I made myself a promise to get comfortable with comfort again.\n\n\" 'Resa,\" Sharon began.\n\nApparently she and Ms. Teresa Cunningham had been close before all the recent drama.\n\n\" 'Resa, we ... Matt and me ... we tried all our credit cards and they've all been canceled ... and I think Matt has a few twenties that have been soaked in the river, but I don't have any cash money at all. Could you check with Uncle Cal and see if we could get a couple a' corporate cards until we can get our\u2014\" she checked herself and giggled, \"...well, until we can get our lives back together?\"\n\n\"Oh,\" Sharon continued, \"and I need to call Mom and Dad and let them know the prodigal daughter has returned.\"\n\nTeresa turned a bright crimson. \"Of course, honey!\" she shot back hurriedly. \"I'm sorry ... I've just been so shocked, I can't think straight.\" She appeared embarrassed she hadn't already thought of those things.\n\n\"Here, honey...,\" she told Sharon, \"...here's my cell\u2014it's not locked\u2014your parents' numbers are in the contact list. While you talk to them, I'll call Cal and get things moving, all right?\"\n\nSharon took Teresa's phone and scrolled through the contacts until she found the one she wanted to call. That left me and Ms. Cunningham at loose ends.\n\nWe looked each other over for a moment. Teresa Cunningham was an attractive woman; I guessed she was in her early forties. She was tall, dark-eyed, and with calm, almost serene features. Raven-black hair worn almost shoulder-length, framed an attractive face. She was a senior executive, I was sure of that. Her confidence and the manner in which people around her reacted to her said so.",
        "I leaned toward her while Sharon was trying to get through to her mother. \"Ms. Cunningham...?\" I began.\n\n\"Please ... I'm Teresa,\" she returned. She had a nice smile too.\n\n\"Then, I'm Matt\u2014Matthew James, to be precise\u2014Singletary,\" I told her and smiled. \"If I may ... could we ... Sharon and I ... somehow get a line of credit or something with the shops down on the lower level? We'll be glad to repay it as soon as we can. Both of us are pretty rank and we desperately need something to wear. We're beginning to offend ourselves, in addition to everyone else we come into contact with.\"\n\n\"I'm sorry ... Matt ... crap! I'm better than this ... just so shocked!\" She stood and walked to a small table near the door and picked up the handset on a house phone. \"This is Ms. Cunningham!\" she said into the mouthpiece when the front desk answered. \"Do you know me?\"\n\n\"Good, do I need to ask for Simon Humphrey, or can you make things happen?\"\n\n\"Excellent! Please find Mr. Charles and Ms. Reardon ... have them come up to the Penthouse immediately, please. Then ... if you'll arrange to have lunch sent up for three, please ... something substantial\u2014big ... huge servings, okay?\" She glanced at me inquiringly.\n\n\"Huge servings ... for at least two confirmed carnivores!\" I quipped with a grin. \"And lots of things to drink ... except water ... we've had all the plain water we'll need for a lifetime!\"\n\nShe smiled at that and visibly began to loosen up. She relayed the last instructions to whoever she was talking to. \"Yes, that'll be all for the moment, thank you,\" she said, ending her phone conversation. She depressed the switch hook and released it, listened for a second, and then began punching her forefinger at the key pad.\n\n\"Donna!\" she said shortly when a connection was made. \"...Is Cal in?\n\n\"Yes, break in on the meeting, please, this is extraordinarily important ... yes, I'll wait.\" It was only a couple of seconds.\n\n\"Yeah ... Cal. If you're not sitting down, SIT! You're not going to believe this\u2014Sharon Kincaid is alive!\" she said to the mysterious \"Cal\" at the other end of the line.\n\n\"Absolutely!\" Ms. Cunningham said emphatically. \"I'm here in Fairbanks, in the Penthouse suite with her ... and her husband, right now! Yes ... husband...\" She repeated, flicking her eyes at me and grinning tightly. \"I don't know, Cal ... there are a ton of things I don't know about what's happened right now...\" She glanced at me again.\n\n\"Temporary credit cards ... maybe a cash advance...?\" I whispered in her direction.\" She nodded.\n\n\"Cal ... listen, can you get someone to set up a couple of corporate cards for Sharon and her husband Matt Singletary for them to use 'til they get their personal cards reactivated...? Yeah, Singletary ... Matthew Singletary ... great ... and have them brought to them by courier...? That'll take care of it. Oh ... Cal, can you call Mr. Kincaid and give him the news? Great!\"\n\n\"No ... I think that'll do it for now, thanks a bunch, Cal ... bye!\"\n\n\"Hi ... Mom?\" Sharon asked into Teresa's phone microphone. There was a pregnant pause. \"Mom...?\" Sharon waited another moment, then held the phone away from her ear. She looked at the display suspiciously. \"Mom...?\" she asked again, then sighed expressively. \"Hello?\"\n\nShe looked up at me, thoroughly perplexed. \"She answered,\" Sharon explained, \"and then ... just ... nothing\u2014HELLO? Yes, Jenny ... it's Sharon ... yeah ... yes, it's me ... we all just walked out of the mountains after the plane crash...\"\n\n\"She fainted! Mom fainted,\" Sharon told us in an aside while she listened to the far-away voice.\n\nWhen I would have said something about her remark, she showed me the palm of her hand as she waved at me and stuck out her tongue with a grin. In just the short time we'd been back in civilization, I'd been getting progressively more peeved when folks described what had happened as a \"crash,\" because that most certainly had not happened. And Sharon knew full well it was beginning to get to me.\n\nI turned my attention back to Teresa Cunningham ... who was studying me right back.\n\n\"So, Ms. Cunnin\u2014Teresa...,\" I corrected myself. \"What is it you do for Mr. Kincaid?\"\n\n\"I'm a ... well, I am a consultant of sorts ... I travel to Mr. Kincaid's various holdings and offer ... management assistance to that activity,\" she told me. It struck a chord.\n\nI nodded my understanding. \"Sounds remarkably like a thing I used to do in another lifetime,\" I remarked. \"My boss referred to me as his 'Paladin', his hired gunslinger sent out to root out the bad guys, and find out who was robbing the till an' ... well, stuff like that.\" I grinned.\n\n\"Indeed?\" Teresa said politely. \"We'll have to sit down and swap stories some time,\" she joked. She'd clearly accepted me at face value and was seeing me as a kindred soul. That was good; I'd been wondering how I'd fit in with Sharon's crowd. On the other hand, Teresa might still be jittery after the shock of seeing Sharon rise from the dead, and hadn't yet regained control of her emotions. She might still turn out to be a stone cold businesswoman.\n\n* * *\n\n\"MOM!\" Sharon shouted. \"Yeah, it's me ... no, I'm fine, Mom, really ... I ... WE are here in Fairbanks ... at Daddy's hotel ... yeah, they're taking real good care of us.\" She was becoming irritated, then she brightened. \"Yes ... I DO have someone I need to introduce you to...\" She grinned. \"When you get here, Mom ... you'll like him.\" she told her mother.\n\nThey chatted a while longer before Sharon hung up. She looked around happily.\n\n\"Mom's gonna find a flight up here ... she's in Florida ... and she doesn't know when Dad'll get back. What the heck is Dad doing in Tierra del Fuego, 'Resa?\" she asked, perplexed.\n\n\"Honey, I don't have a clue!\" Teresa admitted. \"...Just have to ask him when he gets here, I guess, she added.\n\n* * *\n\nThe two of them settled in for a long chat, renewing whatever friendship they'd had before Sharon set out on an adventure on the North Slope. I listened for a while.\n\n\"Okay!\" I announced at length. \"I don't know about y'all, but I feel a nice, hot, soapy shower calling me ... and I'm not going to resist any longer, by golly!\" I smiled, getting to my feet.\n\n\"Oooohh,\" Sharon crooned happily. \"Me, too ... wait for me, babe,\" she exclaimed. \"Teresa...?\" she said, addressing Ms. Cunningham. \"My husband and I are going to go clean off a few months of grit and grim ... and it's going to take a while, okay?\"\n\nShe eyed me for a moment before turning back to Teresa. \"...And if we find something we like 'neath all those layers of mud, we might even be a little longer, okay?\" she said, inviting Teresa to understand things left unsaid.\n\n\"I'll call and have lunch delivered in...,\" Teresa replied, looking at her watch, \"how 'bout twelve noon exactly ... that'll give you almost two hours to ... wash off all the dirt and grime a couple of times, how would that be?\"\n\nI checked the wall clock and threw an understanding Teresa a quick thumbs up. I was already scrambling to catch up to my wife who was making tracks for the big bathroom. I caught up in time to help stuff clothing we'd never wear again into plastic bags we found in the closet. We'd find a bonfire for them later.\n\n* * *\n\nIt was a few minutes past noon when Sharon and I emerged from the bathroom wearing fluffy white robes. We found two enormous trays of food and drink on the table near the balcony door. There were a couple of young interns Ms. Cunningham had summoned standing by.\n\nSharon and I invited Charles Mallory and Samantha Reardon to join us and in short order, the five of us, including Teresa, were chomping down on thick sandwiches and guzzling down big bottles of soda ... things Sharon and I had only been able to dream about on the trek out of the mountains. Charles and Samantha were interns, not paid any better than any other pair of interns, and they may well have also fantasized about a spread like the one in front of us.\n\nTeresa detailed Charles and Samantha to be our personal assistants, and they did a superb job, in my estimation. In short order, they were able to find out where my parents were, and what their phone number was\u2014because I didn't know it.\n\n\"Mom and Dad\" was an entry in my old contacts list and all I had to do was tap the little green phone handset icon to get through to them on my now-deactivated phone. Sharon and I\u2014along with all the others in our group of survivors\u2014were dead as far as officialdom was concerned. Once the bureaucracy pronounced us deceased, it was like pulling teeth to be returned to bureaucratic life.\n\nI got to talk to my astounded parents and arranged for them to come up to Anchorage. They had to find a storage facility for their big RV and then they'd be on their way. Teresa Cunningham had their tickets upgraded to first class without me knowing.\n\nTeresa appointed herself Sharon's and my guardian, doing little things like the ticket upgrade for my Mom and Dad. In general, anything Charles and Samantha didn't have the firepower to make happen, Teresa did. She steamrollered many a mid-level manager inside the Kincaid business organization, taking no prisoners. She had a trio of lawyers from the Kincaid headquarters working on getting annotations of all our group's deaths reversed in the system\u2014in whatever system needed to be corrected.\n\nIn a day and a half, I had a new phone with all my contacts reloaded from the cloud, I was a pilot in good standing with the Federal government again, my Alaska drivers license was renewed, my bank accounts and credit cards had been reactivated. I was all good to go.\n\nThey arranged for tailors to come to the suite and take measurements for a full set of clothing. I grumbled a little. First off, I could pay for what we needed. Second, even if I wasn't allowed to buy things, I just didn't see much use for tailored blue jeans and shirts. Besides, Sharon and I were both going to start putting back on a few pounds, now that we weren't burning up a ton of calories every day hiking up one side of a mountain and down the other. No one paid me any particular attention, but they didn't pay me any attention very politely.\n\nTeresa even arranged for the whole group of survivors to have a complete\u2014underscore the word \"complete\"\u2014physical exam. We spent all of our second day in civilization in a hospital getting every part of our bodies poked at, measured, classified, examined and analyzed. At the end of the day, we were pronounced extremely fit and healthy, which we kind of already knew. That was the last time our group was together. From there, all everyone else went home to return to their normal lives. I went home with Sharon.\n\n* * *\n\nSharon and I were waiting in two of those hard-shell plastic airport seats holding hands, talking quietly, and rubbing shoulders comfortably. I'm sure no one could tell we were in love\u2014okay, maybe it was a little obvious. On the other hand, we seriously did not care what anyone else thought.\n\nWe were in the Anchorage International Airport, having taken a chartered flight there from Fairbanks, and we were waiting for Sharon's mother to arrive. Judith Kincaid had had a horrible time getting to Anchorage. Her husband's corporate jet was loaned out to a European businessman; it was therefore unavailable, and every danged flight in this direction had been booked solid.\n\nShe finally procured a standby ticket in Miami and had gone to everyone in the waiting area with a confirmed ticket for a flight to Seattle, offering ten thousand dollars plus tickets to anywhere in the world to anyone who would exchange tickets with her. A family of six from Galveston took her up on her offer and, after a short family conference, were booked on a plane for California and Disneyland instead of Seattle, en route to Alaska. Good choice, in my opinion.\n\n* * *\n\nMy new mother-in-law's plane was here, out on the tarmac, at least. The arrival was documented on the overhead bank of monitors showing flight numbers and gate assignments. I couldn't wait\u2014this was going to be so joyful. I was trying hard not to be nauseous.\n\nSharon was busy, whispering in my ear how I was going to love her mom, and her sisters and her brother too. I saw a tall, attractive woman with gray hair descending the escalator and looking all around. She was looking all around, searching. I watched as her eyes fastened on Sharon\u2014and me.\n\nI gave Sharon a quick peck on the cheek, just to get her attention, and nodded in the direction of the woman nearing the ground floor. Sharon looked and erupted from her seat, racing quickly across the airport arrival lobby. She threw her arms around the woman who I could see favored Sharon quite a bit.\n\nI followed slowly, giving them time to get reacquainted. Judith Kincaid watched me, every step of the way, over her daughter's shoulder. Sharon had already told her mother on the phone she had a husband so it wasn't a complete surprise, but this was our first meeting.\n\nI put my hand gently in the small of Sharon's back and she slipped out of her mother's embrace. She half-turned so she was between me and her mom as Judith and I faced each other. \"Mom ... this is my husband, Matt ... Matt, this is my Mom, Judith ... she likes to be called Judy.\"\n\n\"Mrs. Kincaid,\" I said in what I hoped was a friendly, sincere voice. I was sure she had several\u2014well, several million\u2014questions as to how and why her daughter came home with a thoroughly unknown husband.\n\n\"Judy! Please,\" she corrected me with a nice smile. I was grateful for that smile\u2014at least she wasn't scowling and grumbling.\n\n\"I'm gonna keep him around, Mom,\" Sharon explained, \"...I might run into another one of those and need someone to kill it for me!\" She pointed at the enormous stuffed and mounted polar bear in the center of the lobby. Technically, a polar bear isn't a grizzly, but I thought Sharon could be forgiven for babbling just a bit. The introduction of a surprise husband to her mother was stressful for her too.\n\nJudy glanced at the huge bear and then back at her daughter questioningly. She relaxed. \"I'm guessing there's a story in there somewhere?\" she asked. Then she held up her hand. \"There's our ride,\" she remarked as a uniformed driver walked up. \"Can we continue this at home?\" She slipped past Sharon and gave me a kiss on the cheek.\n\nScore one for my side! Mom-in-law was not hostile. I really appreciated that.\n\n* * *\n\n\"...So I gather Matt is the greatest knight in shining armor in history, and he killed the dragon and saved you from being eaten and everything?\" Judy asked her daughter. We were sitting in the biggest family room I could ever have imagined, if I was given to imagining such things, that is.\n\nSharon and I were together on a sofa and \"Mom\" Kincaid had her feet tucked up under her on another one nearby. Judy was enthralled by the story Sharon and I were telling. I think I even scored another point or two when I accepted tea instead of coffee. Of course, I wanted it in a big \"manly mug\" instead of a dainty cup, but Judy even liked that.\n\n\"He IS my knight in shining armor and he did kill the monster!\" Sharon replied happily, clutching my arm at the elbow and holding it tight against her body. We were sitting comfortably with some music playing softly in the background and having a great conversation.\n\n\"Whoa, there!\" I interjected. \"Judy ... you need to know your lovely daughter was standing right there beside me while that darn bear was coming at us. I was plinking away at him with my revolver, Sharon found the rifle and she brought it to me ... walking straight at the bear. And when I fired all six rounds in my gun, she gave me the rifle and started to work reloading, the pistol.\n\n\"By the time I used up all the ammunition in the rifle, she had the revolver reloaded. She gave it back to me and slapped another magazine in the rifle. I put three more rounds into the bear, and your wonderful daughter was standing there, aiming the rifle at that son of a gun when he finally consented to die\u2014so, if there was a bumbling knight in this story, then there surely was a warrior princess there, also!\"\n\nSharon brought her left hand up to my right cheek and turned my face to hers and gave me a long kiss. She turned back to her mother with a contented look. \"My husband!\" Sharon told her mother in an utterly satisfied tone. She patted my left thigh affectionately.\n\nWe talked for hours, telling Judy about the trek\u2014how many mountain slopes we'd climbed\u2014how many rivers we'd crossed on rafts or waded across if they were shallow enough\u2014and how we were married early one beautiful morning while the wilderness woke up around us.\n\nJudy had to blot tears from her eyes when Sharon told her that. She had to come to our sofa and throw her arms around her daughter. Both of them had a good cry.\n\n\"Thank you ... son,\" Judy said at length. \"Thank you so much!\" Then she worked her way around Sharon and took me in her arms and hugged me tightly. \"Thank you for bringing my daughter home, Matt.\"\n\n\"Well ... we kinda brought each other home,\" I said gruffly.\n\nJudy patted my hand. \"I see .. I know ... you two are a team ... and you fit so darned well together. You obviously love each other and no one in the world will ever mistake what you feel for each other.\"\n\n\"I do ... I love him, mother ... I love him so much!\" Sharon was bawling and that set her mother off again.\n\n\"Well ... hell!\" I protested, as the mist in my eyes began to flow all over the place. \"You guys know if you ever tell anyone about me blubbering like this, you're going to ruin my reputation as a dragon slayer all over this town, right?\" I asked, hoping to throw a little humor into the mix so we could back down from all this.\n\nSharon and Judy laughed a little and we began to unwind from our three way embrace, so I guess I was successful.\n\n\"I hope you two know everyone I know is going to hear about your romantic trip ... and about you killing that horrible bear ... and how you two love each other. The whole state is gonna know about it, before I'm done talking!\" Judy vowed.\n\n\"Awwwww, Judy...,\" I began.\n\n\"Mom!\" she interrupted with a beautiful smile on her lips.\n\n\"Awwwww, Mom...,\" I said. I stopped.\n\nBoth women looked at me expectantly.\n\nI had to shrug. \"I have no idea what I was going to say,\" I admitted, sighing. \"...Lost my train of thought entirely.\"\n\nThey laughed at me. I was only a man, after all. We hugged again, then settled down for more tea and stories from our journey.\n\n* * *\n\nMy mom and dad arrived the next afternoon and Mr. Kincaid was due shortly. Sharon, I, and Judy met them at the airport and brought them back to the Kincaid home/mansion/castle and settled my parents in one of the Kincaid's guest rooms. Sharon and I were staying in what had been her bedroom before she left home.\n\nWe spent about an hour, getting comfortable with each other and sharing a couple of stories. Judy couldn't wait to tell of the grizzly encounter and she had the room rocking as she told it. I had to interrupt a couple of times when Judy embellished the facts just a little too much\u2014but she told the story a lot better than Sharon or I could, so we let her ramble on. Judy and my mom, Lea, bonded immediately and Sharon had my Dad charmed out of his socks within seconds.\n\nMom shot a glance my way when she was first introduced to Sharon and I knew what she was thinking. The last she knew, I was breaking up with a woman named Mercedes\u2014and this clearly wasn't her. I was sure I'd have to clear that up later.\n\n* * *\n\nWhen Bruce Kincaid came into the room where we were all sitting, I half-expected to hear the sound of trumpets playing ruffles and flourishes. I could practically hear the 21-gun salute being fired in their ten-acre backyard.\n\nMr. Kincaid sent all his gofers away on errands and shed his coat before looking me in the eye. He shook my hand, then did the same with my parents and hugged Sharon tightly. It was only then that he even came close to a smile. So at least he did love her. I'd been wondering.",
        "After all the introductions and a certain amount of general discussion had taken place, Sharon's dad invited\u2014ordered\u2014me to accompany him to his study, which opened off a short hallway from the living room. Sharon and I had talked about this and how we were going to do about it.\n\n* * *\n\nWhen we came out, I was a bit shaken by the sheer arrogance of the man, and his assurance only he could determine what would and would not make his daughter happy in life. He was quite certain a cowboy bush pilot should not even think of applying for the job of husband.\n\nI sat back down beside a waiting Sharon and smiled at her. She returned my smile with one of her own brilliant grins. I nodded. Things had gone pretty much as she'd warned me they would.\n\nMr. Kincaid went to a sideboard and poured himself a liberal amount of brandy in a snifter and then ensconced himself in a leather upholstered swivel rocker by the fireplace.\n\n\"So ... how'd it go?\" Sharon asked loudly.\n\n\"...Offered me two hundred and fifty thousand to leave Anchorage on the next plane and never come back,\" I reported.\n\nKincaid looked up in amazement. I wasn't supposed to say that.\n\n\"DAAAADIEEEEEEEEEEEEEEE!\" Sharon wailed. \"You only offered him that much?\" She covered her eyes with her hands, apparently crying in disbelief.\n\n\"I'm offended ... are you offended?\" she continued, turning to face me directly. She dropped the weeping as it it'd never been.\n\n\"I am!\" I replied solemnly, nodding emphatically.\n\n\"DADDY!\" she complained bitterly, turning back to her father. \"How could you! A measly two hundred and fifty thousand? Don't you love me, Daddy?\" She put on a pouting expression. \"I'm worth a lot more than that ... Daddy, you need to offer Matt ... at least ten million ... twenty million! What were you thinking?\"\n\nKincaid's jaw had dropped to his chest with her first words. He tried to recover.\n\nSharon wouldn't let him find a way to regain the offensive. She stood and stalked over to him. Her facial expression told him she wasn't kidding now.\n\n\"Daddy, dear,\" she said brittlely, \"let's be clear about this. You can accept I'm going to be with my husband for the rest of our lives ... or, Daddy, you can have the Ice Bitch Princess back, making your life and the lives of all your friends and partners a bloody hell,\" she said viciously, punching her finger accusingly into her father's chest.\n\n\"What's it gonna be ... Daddy?\" she asked menacingly.\n\nMr. Kincaid looked us all over. He was more than intelligent. He saw his daughter had set up the whole embarrassing scene and he now knew she had no intention of letting me go. He was aware I'd been playing him in the study by listening to his proposal. Out maneuvered on his own turf, he capitulated.\n\n\"Welcome to the family, Matt,\" he remarked, lifting his brandy snifter in salute in my direction. \"... And good luck!\" he added, but he was relaxing and even smiled a little.\n\nSharon came back to sit beside me and I kissed her on the lips.\n\n\"What...?\" she asked, confused. Sharon and I had a pact. She was concerned about her temper, thinking she let it get away from her far too often. To work on it, I gave her a kiss every time she stifled a smartass remark or tamped down a response to something she didn't like. She'd just unloaded on her father and a kiss wasn't supposed to be a reward for that.\n\n\"You were provoked ... badly,\" I whispered. \"And you didn't physically hurt anybody!\" I added, then kissed her twice more. We smiled into each other's face.\n\n\"Besides, Daddy,\" Sharon said, speaking to her father again. \"You're going to want Matt here with me ... and your newest grandchild...!\"\n\nThe room was silent for a long moment.\n\nI turned to her, amazed. \"You mean ... you're...?\"\n\nShe nodded, smiling serenely. \"We got the test results back from our exams this morning, 'member?\"\n\nI nodded.\n\n\"Well, mine had a couple pages yours didn't,\" she explained. \"I'm three weeks pregnant.\"\n\n\"Oh my God,\" I breathed. Then I crushed her to me and did my best to smother her in kisses.\n\n\"Why didn't you tell me?\" I whispered.\n\n\"Had it in my back pocket,\" Sharon murmured back, \"just in case I needed it, like if Daddy was a bigger shit than he usually is,\" she explained.\n\nI kissed her again.\n\n\"Hmmmmm?\" she inquired.\n\n\"Nothing but kisses for you today,\" I told her, \"...you were defending me and our marriage ... and you're having our baby ... you can't do anything wrong today, love.\"\n\nThen Sharon was pulled away by her mother and mine to be hugged, kissed, and congratulated. I got handshakes and congrats from my Dad and Bruce Kincaid, but no kisses from them. When the grandmothers-to-be were finished with Sharon, I wrapped my arms around her and did my best to bruise her lips with mine. She wound her arms around my neck and bruised me right back.\n\nWhen they were done, Judy retreated to sit on Bruce's chair arm. \"They remind you of anyone ... you and me, maybe?\" Judy asked her husband after watching Sharon and me for a long moment.\n\nBruce studied us a moment, then shrugged. \"No, can't say as they do,\" he opined.\n\nHe got an elbow in the short ribs for that. He winced, putting more than a little drama into it.\n\n\"AH HAH!\" I chortled dramatically. \"THAT'S where she gets it!\"\n\nEveryone looked at me with question marks in their eyes.\n\n\"I am forever getting elbowed in the ribcage, or pinched, or something,\" I explained. \"Now I see she comes by it naturally\u2014from her mother!\" I explained accusingly.\n\nIt got a little laugh. Tensions were easing off quite nicely after a rocky start.\n\n\"So ... just asking for a little advice, Bruce,\" I continued, \"any chance a little spanking every now and then would help with that tendency to use elbows to the ribs as a conversation gambit?\"\n\nHe considered the question. \"I'll have to let you know,\" he told me, taking the easy way out. It earned him another rib buster, but he grinned broadly. I was beginning to like my new father-in-law, and I thought he was starting to like me, in spite of himself.\n\nMy Dad had been standing by the balcony door, examining the view outside. As he strolled back to his seat, I asked him. \"Hey Dad ... think a spanking would work with Mom? Would it help with some of her more ... uh ... aggressive little pats and pinches, and ... stuff?\"\n\nDad didn't respond beyond an arching of his eyebrows as he sat down. He tightened his lips rather than reply. He shook his head.\n\n\"Why not?\" I asked with a grin.\n\nMom had been studying a painting ... an original by someone, I guessed ... and she was on her way back to her chair beside Dad. As she passed she patted me on the arm. \"...Wouldn't work at all, honey,\" she said quietly, \"I like it too much,\" she explained and continued past to sit demurely beside my Dad. Dad shrugged his shoulders expressively and did his imitation of a cat that swallowed a canary.\n\nJudy exploded with a loud hoot of laughter. She tried to smother her guffaws with both hands across her mouth, but she couldn't. \"...She likes it too much...!\" Judy wailed helplessly. She collapsed onto her husband and tried to stuff the shirt on his back into her mouth.\n\nI could feel my eyes getting rounder and wider. I looked at Sharon.\n\n\"Don't even think about it, Buster,\" she advised with one of THOSE looks. She leaned close to my ear. \"I'm pregnant right now, you know,\" she whispered softly. Her eyes were dancing.\n\n* * *\n\nOur marriage in the woods was valid, but not legal in the sense that neither Alaska nor any other of the United States would recognize it. To rectify that, we had a civil ceremony with a duly paid-for marriage license a week later.\n\nNeither Sharon nor I wanted a big, gaudy ceremony with a zillion guests and tons of stress, but we weren't entirely successful in communicating that idea. So a month after the civil ceremony, we stood up before the preacher in the church the Kincaids usually patronized and gave each other the same vows we'd exchanged before our fellow survivors and our presiding Baptist minister in the wilderness. Mother Kincaid had only invited two hundred and sixteen guests.\n\nSharon's father gave us a wedding present of a voucher for unlimited travel on one of the biggest of the world's airlines and we used it\u2014a lot. Our only requirements were that the destination be warm, that we wouldn't have to wear heavy clothing or boots, and the hotel had to have lots and lots of hot water for showers, hot tubes, and jacuzzis. We couldn't get enough of all that wonderful hot water. After trekking for months with very few chances to get really clean, we were of a mind to indulge ourselves. \n\nThomas Bruce Singletary was born just short of eight and a half months after we first learned he was on the way and his sister Judith Lea was born fourteen months later. They both had me wrapped around their tiny little fingers from the very beginning of their lives, and they knew it. We decided to hold off on any more children for a while, to allow our first two to get a little older.\n\n* * *\n\nI was certain Sharon loved me as no woman ever loved a man before, and I was sure we were supremely happy. We were, until I found out nothing involving a man and a woman is guaranteed to be perfect forever.\n\nEnd, Part 3 (of 4)"
    ],
    "authorname": "Longhorn__07",
    "tags": [
        "loving wife",
        "romance",
        "cheating wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/flyover-country-ch-03"
}