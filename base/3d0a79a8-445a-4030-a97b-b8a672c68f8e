{
    "title": "Premonitions: Senior Year Ch. 03",
    "pages": [
        "Disclaimer: All characters mentioned are at least 18 years of age despite the story taking place in high school.\n\nAuthor's Note: This is an ongoing anthology. I highly that you read the previous chapters to fully enjoy this one as it would help establish context, but if you insist on starting with this chapter here are some key points:\n\nEarly in his senior year, Scott discovered that he can foresee sexual encounters through premonitions that come with close proximity to his potential partners.\n\nEnjoy!\n\nCh. 3 - Unexpected Twists\n\nHonestly, I had expected Malory to respond positively to my desire to fuck her in the ass. This was not simply blind hope, it was based on the fact that she had yet to refuse any sexual request that I had made of her. Not only that, but she had actively and repeatedly urged me to ask for what I had wanted.\n\nIn prompting me to ask, Malory had insinuated that I could somehow control what I got from my encounters with women. She was still being coy about the details, but given my experiences with her over the last few days, I was starting to be able to read between the lines.\n\nThis request, however, was the first time that I had tested out my powers of persuasion without prompting. Up until now, I had simply been riding the tracks that Malory had laid out in front of me. After I first experienced my premonitions with her and subsequently with Alevia all that was required to get what I wanted was to go with the flow.\n\nThis time, however, Malory did not simply roll over and present her ass to me for a good hard pounding. Instead, she continued to play with her clit as my cum was slowly leaking from her cunt simply giving me a subtle shake of the head \"no\" accompanied by a friendly smile and shoulder shrug.\n\n\"Why not? You said for me to ask for what I want, and I want to bury my dick in your ass so deep my balls bounce off your cunt. Is this not how it works? Do I not get everything that I ask for?\"\n\nI sounded petulant, but I was once again horny and ready to release my load once again as only a teenager could be after the day I had had. It took me a moment to realize what I had said.\n\n\"Sorry, I did not mean it like that. I just . . . until now you had given me everything I had asked for. Right now I can't get the thought of anal out of my mind.\"\n\n\"It is okay, but you need to realize that our powers are not about strictly controlling others. It is about facilitating a shared experience.\"\n\n\"What do you mean?\"\n\n\"When you have a premonition about a future hook up it is in part based on what you want to do with that person, but it is also based on what they want to do with you.\"\n\n\"So, I am reading their mind?\"\n\n\"Yes, in a way, although right now you are only doing it subconsciously. Your mind is combining what it knows about your desires and what it learns about your partner into the most likely scenario to play out. It is eerie how often it instinctually gets it one hundred percent correct.\"\n\n\"I guess that makes sense, besides the whole mind-reading thing. I mean, when we hooked up it was exactly what I had seen down to what you were wearing.\"\n\n\"Because it was the same day it was easy to get the clothes right. But I assume that your premonition about Alevia earlier had her wearing the clothes she was today.\"\n\n\"Right --\"\n\n\"But it looks like it will not be fulfilled until Friday, so most likely she will be wearing something else. Honestly, though, those details don't matter too much. What matters is that you know where to start and can build a better experience with what you already know.\"\n\n\"Okay, sure, but -- \"\n\n\"Don't overthink it, Scott. This is why I wanted you to figure it out yourself. For now, just practice what comes instinctually to you. It will start to make more sense soon enough.\"\n\n\"Then why are you telling me now?\"\n\n\"Well, I realized that the rest of the year will be a lot more fun for me if you figure it out a bit faster, but that is all I am going to say about that.\"\n\n\"Fair enough. Can I ask you something about my vision of Alevia?\"\n\n\"Go for it.\"\n\n\"I saw that I had her tied up and gagged. Does that mean that she is okay with that? I am not doing anything that she is not comfortable with then?\"\n\n\"Correct. Think of it this way. You get a preview of what she's into. For me, it is that I love giving blow jobs and with Alevia it is that she is submissive and into bondage, at least to a certain extent. How far that extends you will find out.\"\n\n\"That makes me feel better. It turned me on seeing it, but I do not want to make anyone do anything that they don't want to.\"\n\n\"You are a good guy Scott, but I think that you will find that as long as you are open with people they will seldom do anything they are not a little curious about. As I said, don't overthink it though. It will just get you in trouble, especially if you are worried about morals.\"\n\n\"Another question. You seemed to insinuate that I could do more than subconsciously read their minds?\"\n\n\"Yes. With practice, you can learn to actively see their sexual desires. This is how I knew your premonition was about Alevia earlier today. It is also how I know that you can't stop thinking about shoving your cock in her ass, which she will love by the way.\" Malory smiled at me, giving me hope that I would get my wish soon enough.\n\n\"That's amazing. I don't think I am anywhere near there yet.\"\n\n\"It takes time, but I will help you. After all, what else are we going to do? Homework?\"\n\n\"Well, I will be doing Alevia on Friday.\" As I said this I could not help but burst out laughing at how ridiculous this conversation must sound. To my delight Malory joined me, only stopping when she rolled over and put her head on my chest, her hand tracing along my stomach and upper thighs, teasing my cock back to attention.\n\n\"I will give you one last piece of advice, and then I want you to eat me to another orgasm before you leave.\"\n\nBefore she had joked about it a few minutes ago I had never thought about eating my own cum, even if it was buried in the folds of a delicious cunt. Now, however, it was definitely something that I wanted to try. I did not know if I was going to like it, but that was soon to be answered. Was this what Malory was alluding to when she said people would seldom do anything they were not curious about? Was she influencing me into eating her out right now? Honestly, I couldn't care less one way or another.\n\n\"Deal,\" I said happily.\n\nSeemingly before I had even responded Malory rolled back and spread her legs, inviting me to move between them. As I crawled nearer to her cunt I looked at it with nervousness and questioning. I was not sure about this, but I thought that it was worth a shot. Who knows, maybe I will love it?\n\nNot wanting to waste any time Malory put her hands on the back of my head and guided me towards her pussy. As I grew near I reached out my tongue and ran it along the length of her slit. The taste was not bad. Mostly it tasted like Malory, but it was a bit saltier and had a strong hint of coffee. Probably the three cups I had had over the course of the day.\n\nAs I dove in with more vigor Malory began to give me her last bit of advice, her hands still pressing me into her cunt.\n\n\"As I told you before, ask for what you want, even if you are not sure she is into it. She can only say -- \" Malory moaned in pleasure as she paused to adjust my positioning slightly, \"Yes, right there.\"\n\nMy tongue darted in and out, the taste of my semen had vanished and I was fully focused on eating her out as best I could. My fingers had found her clit, forcefully rubbing it in circles as my tongue focused on her hole. As I did this my cock was leaking pre-cum all over her sheets. I wanted to make her cum, but I also wanted another orgasm myself before I headed home for the night.\n\n\"As you gain experience you will -- oh yes, right there -- learn to read what they want better, but for now just know that it is hard for us to offend others for some reason, at least when it is about sex. If she is not interested she will let you know like I just did with anal -- fuck, your tongue is so nice inside me, but I want you to suck on my clit.\"\n\nI did as she requested and she immediately erupted into another orgasm, although this one was not as intense as earlier, it seemed to last longer. As she continued to shake and jerk beneath my mouth I slid two fingers into her cunt as she reached up and twisted her own nipples.\n\n\"Fuuuuuuck. That is perfect, keep doing that, oh yes, oh yes, fuck me with your face.\"\n\nMalory finally calmed down, her body dripping with sweat as she relaxed back into the pillows of her bed. One hand reached down and stroked my hair as my head fell to the side, resting on her inner thigh.\n\n\"Do you need me to repay the favor?\" She asked as I could feel my cock strain underneath my body.\n\n\"Fuck yes I do,\" I said as I rolled over onto my back. Malory climbed off the bed and knelt on the floor between my legs, replicating the view I had first seen of her only the day before.\n\nAs she started to stroke my cock slowly with one hand I realized that I had one final question for her, \"What if I want someone to do something they are not comfortable with?\"\n\nMalory looked at me with a serious face, \"Why would you want that? Don't you think everyone should have a say in what they do?\"\n\n\"Well yes, I am not talking about rape or anything like that. I just . . . I mean, I was just thinking hypothetically, could I convince someone to do something they previously did not want to do?\"\n\n\"I see,\" Malory contemplated as she continued to work on my cock, briefly lowering her head to lick the tip only to pop back up with a smile. \"It is perfectly normal to want that. After all, I wanted you to go down on me after you came inside me, and that is something that you would not have done before I suggested it.\"\n\n\"I guess, but really I had never thought about it.\"\n\n\"That's my point. Most things that people are afraid to try are because they had never thought about it. If I had just asked you to go down on me you would have said 'no.' Instead I put the idea in your head first by suggesting that you bring Alevia over to do it for you. This got you thinking about it, so when I actually asked you were open to the idea.\"\n\n\"Got it, but can I do that without talking about it to the person?\"\n\n\"Sure, you can implant suggestions into someone's subconscious through your visions, they are actually two-way connections. We have the power to experience them consciously, while most people only sense them as intuition or write them off as pheromones or something like that.\"\n\n\"So I would need to learn to control my premonitions then?\"\n\n\"Yes, that is the easiest way. Once you already have a strong sexual connection, you can easily suggest certain acts. However, if you talking about getting someone to have sex with you that you have not had a premonition about, then that is a bit more complicated.\"\n\n\"But is it possible?\"\n\n\"Who do you have in mind? Is it someone I know?\"\n\n\"Ummm, yeah, you know her. But I am embarrassed to say.\"\n\n\"Don't worry, there is no judgment from me. You would be shocked at some of the people I have slept with.\"\n\n\"Anyone that compares to Mrs. Franklin?\"\n\n\"Haha, well, no one quite compares to her. She is definitely the hottest teacher I have ever had.\"\n\nThe smile that lit up Malory's face let me know that she was not joking about me inviting Alevia over for a threesome. I would have to work on my inception skills with Alevia and see if I can convince her to go down on Malory. Then again, maybe she already wanted to.\n\n\"One truly final thing,\" Malory said looking me straight in the eyes, \"You have to be aware that other people with our abilities learn to sense others like us. That is how I knew about you and was so open to sleeping with you so quickly. We tend to find comfort in each other. I won't say that we are more sexually compatible, but we definitely share a common understanding. The more you practice and the more you have sex the more that you will figure out. I will guide you for the first part of your journey, but you will have to figure out a lot on your own. Mrs. Franklin will be a challenge because you will have to convince her that sleeping with a student is something she is okay with.\"\n\n\"Yeah, that seems like a big hurdle,\" I said with a bit of dejection in my voice.\n\n\"Don't give up hope. I have already tested the waters with her -- \"\n\n\"You have?\"\n\n\"Yes, as I said, she is super sexy. Anyway, I did not get very far, obviously, but I did sense that she finds students to be attractive, but she seems to have it locked off from her main sexual fantasies.\"\n\n\"So, you're telling me there's a chance?\" I said with a smile, hoping that she would get the reference.\n\nMalory just rolled her eyes and lowered her mouth to my dick. As her teeth passed over the head of my cock and her tongue followed, teasing me the whole way, I realized that while I did not need anything more than this, I wanted to experience everything that I could.\n\nIt did not have to be tonight, but I wanted to be in full control of my abilities, and there were plenty of girls, and even a few women, at my school that I wanted to get to know better.\n\nI had something good going with Malory, but she did not seem opposed to my desire to explore, and even seemed eager to join me in some of it. Alevia had also pursued me despite knowing I had something, although she was not sure what, with Malory, so I could probably count on her being a good sport. Friday would be the test though.\n\nI could only dream of what the rest of the year would bring.\n\n***\n\nThe next two days gave me time to adjust to my new normal. I was busy with homework and could not meet up with Malory after school, but we made a habit of meeting at my car for a quickie during lunch.\n\nMalory seemed content with this arrangement, but I had not talked to her about anything else she might be getting when I was not with her. I figured that she was finding out what the other guys in the school had to offer, but I was not ready to talk to her about it. She might be cool with me hooking up with Alevia, but I was still wrapping my head around everything, and knowing who else she was fucking would have been too much.\n\nWe did find some time to chat on the phone, which gave Malory time to further guide me on the abilities that come along with the premonitions and how to focus them. I was not sure I was making any progress, but she assured me that I was.\n\nI was still not entirely clear where the limits of my powers lay, but I was promised that I would find out within the next six months or so. For now, I would have to be content with receiving the premonitions and learning to control them. Malory said that was key to being able to consciously gauge other people's desires and subconsciously implant ideas into their fantasies.\n\nI had not experienced another premonition, but that was fine with me as I was already preoccupied with the sex I was having with Malory and the thought of what lay in front of me come Friday. Which I was just realizing was tomorrow.\n\nAfter finishing up my homework I had just managed to get into bed when my phone dinged alerting me of a new text message. It was from Alevia and before I had a chance to look at it I knew that it was about tomorrow. This did not take any powers, however, only the constant horniness of a teenager to assume that it was about sex.\n\nAlevia: Scott. I want to chat about tomorrow a little. I know this might be weird, but I want to make sure that we are on the same page going into this.\n\nScott: Sure. What exactly do you want to discuss?\n\nAlevia: Well, I will just come out and say it. I have been fantasizing about BDSM lately and I would love to try it out for real.\n\nScott: Ummm, okay sure. I don't know much about it, but I am game. Unless you want to humiliate me or something like that.\n\nAlevia: No, nothing like that. In fact, I want you to do things to me. I am always in control in my life, so I want to give you control when we are together. I am new to this too, so maybe we can just start with you telling me what to do and maybe tying me up?\n\nThis was playing right into what I had seen in my premonition. I am not sure if I had any influence over Alevia coming to this decision, but either way, I was excited to see where it would take us.\n\nScott: Yeah, that sounds like fun. For me at least ;)\n\nAlevia: Don't worry, I will have fun as well. Just don't take it too far.\n\nScott: I think that I can manage that. Do you mind if we kinda start now?\n\nAlevia: How so?\n\nScott: I just want to tell you to wear a short skirt tomorrow. The shorter the better ;)\n\nAlevia: Done. What about underwear?\n\nScott: A lacy see-through bra and no panties if you dare. How about a crop top as well?\n\nAlevia: I think that I can manage that, although I might have to wipe off my seat after each class because I am going to be wet all day thinking about you tying me up. In fact, I think that I need to go take care of myself before I fall asleep ;)\n\nScott: Well, don't let me stop you, just send me a photo, or even better a video.\n\nWhen Alevia did not immediately respond I figured that I had pushed my luck too far and she was ignoring me. I momentarily feared that she might cancel on me for the next day, but again deep down I knew that she wouldn't. I knew that she was going to be eager to please me and would come through, both tomorrow and with the photos tonight. Hopefully.\n\nI did not have to wait long before I got my answer. My phone dinged with a new message. When I opened it I saw a photo of what appeared to be Alevia's hand disappearing into her light blue panties. While it was not explicit, it did appear that she had two fingers buried into the folds of her pussy.\n\nThat was all I needed for my dick to come to attention. Reaching into my boxers I began to stroke myself to the photo and the ideas of what I would do to Alevia tomorrow afternoon. I did not need any more stimulation, but more came anyway.\n\nA video from Alevia popped up on my phone. This time it was taken with a wider angle and showed me her whole body. She was laying completely naked in her bed with the covers pulled to one side. Her breasts looked perfect as their weight caused them to form almost perfect domes on her chest, falling just slightly to the sides. Her nipples arrest and poking straight up. Her hand was holding a pink vibrator which was buried in her cunt.\n\nAs I pressed play I could hear the buzz of the vibrator as she forcefully pushed it deep inside her only to quickly pull it almost all the way out. As she repeated this motion over and over her breasts bounced and jiggled with the movement of her body. She was truly giving herself a good fucking.\n\nThe video kept going as her breathing became noticeably labored and she started to arch her back. I could tell that she wanted to scream out in pleasure but seemed to be holding it in. This was probably because she shared a wall with her parents and did not want them to hear.\n\nAs she kept going I saw her face contort and she pulled the vibrator out of her cunt and placed it firmly on her clit. This sent her over the edge as she quietly writhed on her bed, her body wracked in orgasm. As I watched this I could not contain my own climax as I shot my load all over my sheets.\n\nAs I came down I was initially annoyed that I had not thought ahead to grab a tissue, but this was quickly replaced by the fact that Alevia had sent me a video of her masturbating without any hesitation. Either she was unashamed or I was actually able to influence her. Only time would tell.\n\nI awoke with a raging hard-on in anticipation of my afternoon rendezvous with Alevia. Or maybe it was just because I was 18. Unfortunately, I did not have time to do anything about it as I was once again running late for school. Hurrying out the door I realized that my sheets were still covered in my cum, and that I should probably have showered. I did not want to leave a bad taste in Alevia's mouth later.",
        "The first few periods were slow as usual. I am not sure if my eagerness to end the day made them drag on longer, but I definitely found it hard to concentrate. By the time I met up with Malory in history, my boxer briefs were already soaked with pre-cum from my constant daydreaming.\n\n\"Hey, I know you are giving Alevia a ride home today, so I wanted to ask you about our usual lunch plans. Are we still on?\" Malory asked, sitting down next to me.\n\n\"Ummm, I mean, I don't think that Alevia cares honestly.\"\n\nI hadn't even thought about it until then, but it was true that Alevia seemed well aware of what was happening between myself and Malory.\n\n\"Good, because the idea of her licking the remnants of my juices off your cock is a real turn-on for me.\"\n\nI was about to respond when the now-familiar sensation of a premonition started to come over me. It took me by surprise as there was no one even on my radar in this class except for Mrs. Franklin, but I never imagined that would happen so soon. Malory and I had just talked about how difficult it would be to convince her to do anything with a student. It was a long-term goal at best.\n\nAs I faded into my premonition I quickly realized that I was not being transported to another place as I had been with my previous experiences. Instead, I remained in the exact seat that I was currently sitting in. The only thing that was different was that I was the only witness to what appeared to be a private sex show.\n\nAt first, I could not believe what I saw, despite my past experiences telling me that I should be prepared to enjoy it for real in the future. It was harder to believe because it did not involve me, at least not as more than an observer.\n\nUnlike my previous premonitions, this one depicted two other people, namely Malory and Mrs. Franklin. Malory was bent over Mrs. Franklin's desk, her short plaid skirt rode up exposing her bare ass to me. I could distinctly see her soaking wet cunt glistening between her legs.\n\nMalory's legs seemed elongated as they stretched towards the floor, only her toes making contact with the ground despite the 3-inch heels that she was wearing. Her white panties hung around her ankles as if they had been hastily pulled down.\n\nMalory's upper body was draped over Mrs. Franklin's desk, but it appeared that her white button-down blouse was open and her bra-covered breasts were smashed against the grading that awaited Mrs. Franklin after whatever was happening concluded.\n\nNot to be outdone, Mrs. Franklin was wearing a similar blouse to Malory's, but instead of a skirt, she had on a pair of slacks that left nothing to the imagination. They were skin-tight on her ass, making it clear that she was wearing nothing at all underneath them.\n\nAs I sat there admiring both Malory and Mrs. Franklin, I realized that Malory had a bright red handprint on her right ass cheek. Immediately after noticing this, I saw Mrs. Franklin bring a hand down and squarely smack Malory on the same cheek. This was much harder than I would have imagined.\n\n\"You like that don't you, you little slut?\" Mrs. Franklin asked rhetorically.\n\n\"Yes Mrs. Franklin, punish me. Punish my ass,\" Malory gasped in response.\n\nI knew that my time with this vision was coming to a close as the world around me started to turn black. This disappointed me as I wanted to see where this was headed. I did not want to have to wait, even if that meant being there for real.\n\nMy wishes were not granted, however, and I came to with Mrs. Franklin standing in front of the class ready to begin her lecture. I leaned over towards Malory, curious as to whether or not she experienced the same premonition.\n\n\"Did you see what I just did?\"\n\n\"Oh boy, it is going to be fun whenever that happens. Although, I hope that you get to do more than just watch.\" Malory winked at me and turned her attention towards Mrs. Franklin. I thought that I caught a glimmer of excitement in her eyes as she focused on the lecture.\n\nI was still a bit dumbfounded and could only sit there and keep from drooling the rest of the period. My attempts, while they kept my face dry, did not stop my cock from continuing to leak a steady stream of pre-cum. It was an experience that I was willing to wait for, even if I did not want to.\n\nAfter history, Malory and I headed to meet up with the rest of the gang for lunch. We took a seat on the grass and dove into our lunches. After a few minutes, Alevia showed up looking like a walking wet dream.\n\nIt seemed that Alevia had taken my wardrobe requests to heart. She was sporting an astonishingly short skirt. It was pale green and pleated with a thick waistband extended up to just below her exposed navel. The hem of the skirt did not cover her ass-cheeks from the low angle that I was sitting at.\n\nI could see the bottom of her fantastic butt popping out just enough to make out her crack disappearing between her legs as she turned around to sit beside me. I could not see her cunt, but I assumed that it was as soaking wet as she had promised me it would be.\n\nIt appeared that she had kept her promise to go sans panties, so I dreamed that she had been leaving a mark on each of her desk chairs during the day, which was a surprising turn-on. I wanted to be able to see her pussy, but I knew that if her skirt was any shorter even our lax dress code enforcement would become a problem for her.\n\nAs she sat on the other side of me from Malory, Alevia leaned over and whispered in my ear, \"The grass feels fantastic on my ass and cunt, but not as good as your cock is going to feel later.\"\n\nI did not bother to respond and instead continued to eat my lunch. The three of us made some idle chit-chat for the next 5 to 10 minutes. There was surprisingly little tension, besides the obvious sexual suspense.\n\nAs both Malory and I finished our lunch Alevia was still halfway through hers. Part of me wanted to stay where we were so I could enjoy the company of both of these gorgeous girls, but my cock had other plans.\n\nAs Malory and I started to get up Alevia reached up and pulled me down to once again whisper in my ear, \"Don't clean your cock off. I want to taste her later.\"\n\nWithout thinking about it I turned and gave her a quick peck on the lips, \"As you wish.\"\n\nNo one seemed to react, but I am sure that most of my friends were internally perplexed about what was going on. I am sure most of them had assumed that Malory and I were dating, but what would they make of me kissing Alevia. Especially right before disappearing with Malory once again.\n\nAs I thought about this I realized that I did not care much. After all, I enjoyed leaving them with the impression that I was somehow involved with both Malory and Alevia. It made me feel special. Then again, it was pretty special just to be with one of them, much less both.\n\nAlevia's comments had made me ready to blow, so I was in a hurry as soon as Malory and I got to my car. Malory was wearing a pair of bright red shorts that just barely covered her ass. I was quick to spin her around and without much ceremony, I unfastened her shorts and pulled them and her thong down to her ankles. I briefly took a step back to admire the similarities to the premonition that I shared with her earlier in the day.\n\nI playfully spanked her ass. Not as hard as it appeared Mrs. Franklin would, but hard enough for her to get the message.\n\n\"Mmmm. No time for that Scott, just fuck me already. I have been horny as shit since history.\"\n\nI hurriedly dropped my own shorts as my cock popped out already hard and dripping from the tip. I could see that Malory was not lying and that she was indeed ready to be fucked as her body's lubricant was smeared over her thighs and her pussy lips were shining with wetness. I placed my cock at her entrance and firmly pushed forward.\n\nDespite the week I had already had, I could not get over how good it felt to have her cunt engulf my dick. As my cock bottomed out in her cunt I reached my hand up under her shirt. Sliding up her firm back I found her bra strap and quickly unclasped it. I could feel the straps pull apart as the weight of her breasts pulled them outwards.\n\nAs I pumped my cock harder and faster into Malory I could tell that her breathing was already becoming labored. While I always wanted our sessions to last as long as they could I was happy that she was getting close to orgasm so quickly as I was not far behind her.\n\nLeaving my one hand on her back to stabilize myself I reached my other hand under her, this time sliding up her stomach until I felt her loose bra hanging just below her ample breasts. My fingers found their way under the bra and slowly massaged their way around her breasts, moving from one to the other before settling on a nipple.\n\nFocusing my attention on the nipple I tweaked it, pinched it, and in general teased it as I felt my cum building in my balls as they repeatedly slammed into Malory's clit. As I trusted my cock into her once again I felt that she had reached down between her legs to play with her own clit.\n\nI was caught off guard, however, when I felt the vibrations of a tiny vibrator when Malory turned it on to help her get over the edge. With each thrust, my balls were tickled by the vibrator. I enjoyed the feeling, but I could tell it was doing much more for Malory as she started to spasm under me. Her ass curled forward making it hard for me to stay inside her as her cunt clenched down hard on my dick.\n\n\"Yes, oh yes, fuck me, keep fucking me, Scott. Make me cum.\"\n\nI could not believe how loud Malory was being given that we were fucking in a usually quiet cul de sac. We knew no one was home, but I still looked around for a second to make sure. Like our first lunchtime encounter, I thought that I noticed something in the window of my friend Devin's house. I once again played it off as the cat.\n\nNo matter who or what it was I did not have time to concern myself with whether or not we were being watched. My cock started to spasm and my load filled Malory's waiting cunt as she was finishing her own orgasm.\n\n\"God Scott, your cum feels so good inside me. I wish I could make Alevia lick it out of me just like she is going to clean me off your cock later.\"\n\n\"Fuck, that would be hot.\" I agreed as I pumped my last few drops inside her.\n\n\"What do you think Scott? Think that you could convince Alevia to let me join?\"\n\nMy cock was still inside her, slowly starting to soften. \"Today? I don't know about that? But I have an idea of what I can do.\"\n\nAs I thought about how to go about making my idea happen I slowly removed my cock from Malory's cunt making sure to leave as much residue as possible for Alevia later. Pulling up my shorts I pulled out my phone. A few seconds later the ding notifying Malory of a new text came through on her phone.\n\n\"Something for you if I cannot make my plan happen later. Don't let anyone else see it though.\"\n\nAs we made our way back to class we ran into Alevia. She wandered up to us with a knowing smile, \"Have fun you two? I hope you have enough left for me later.\"\n\nBefore I could respond I saw Malory dip her hand into the front of her shorts. Bringing her hand up she offered it to Alevia, \"Don't worry, he has plenty left for you, but here is a little sample to get you through your last class.\"\n\nAs Malory finished saying this Alevia bent down and took Malory's middle and ring finger into her mouth licking it clean of my cum and Malory's juices, \"Mmmm, I cannot wait for the main show.\"\n\nI just kept walking to my class as my cock responded in my pants. I could not believe what was going on around me today. This seemed crazy even by the high standards set in only the first week of my senior year.\n\nThe final period flew by. This was not because of the riveting lecture on igneous versus metamorphic rocks, but because my imagination was running wild. I already had a baseline for what I could do with Alevia, but what I was trying to figure out was what I wanted to do. I oddly found this difficult as all my ideas seemed guided by porn that I had viewed. Were those activities what I wanted, or just what I was told that I should want?\n\nThe last several days had given me the indication that Alevia would be open to most anything that I suggested to her, which was overwhelming me and causing me to fail to focus on anything specific. My mind kept jumping from one idea to the next. Hopefully, I would find clarity when the time came. Or maybe my cock would be the guide.\n\nIn each iteration that I thought through I would start by focusing on the bondage that I had seen in my premonition. I wanted to explore that more, and I had found all sorts of BDSM a turn-on in my porn watching, but I really did not know much about it. Before I could contemplate how far I truly wanted to take that angle I would drift to thinking about Alevia's amazing ass.\n\nI knew that I wanted to fuck Alevia's ass, and I was not about to pass up the opportunity to burst my anal cherry. However, I wanted to do more than that. Do I start with the ass? Do I save the butt for last? How many rounds was I going to be able to go? There were too many variables and it was starting to give me anxiety.\n\nI did not have the answers to any of these questions that I was presenting myself. All I knew was that I could not wait to see Alevia face down on her bed with her ass and pussy exposed under that incredibly short skirt that she was wearing today. What actually happened after that was going to be as much a surprise to me as it will be to her.\n\nThere was another matter that I needed to figure out as well. Malory had wanted me to convince Alevia to allow her to join the two of us this afternoon, but I had suggested something else to satisfy her. I had done this not because I did not think Alevia would be easy to convince, but because I was honestly overwhelmed by the idea of a threesome only days after I lost my virginity. Plus I wanted to test my control of Alevia in a way that I could benefit from moving forward.\n\nI had told Malory that I would convince Alevia to allow me to live stream our encounter so that Malory could watch us from home. I had been inspired by the video that Alevia had sent me the previous night, and my desire to see more of her whenever I wanted.\n\nI was hoping that moving forward I could get Alevia to either set up a permanent webcam for me or at least send me a video of any sexual activity that she got up to for my personal viewing pleasure. I had a feeling that she would be game.\n\nWhen the final bell rang I was already packed and ready to leave in eager anticipation of what was to come. Alevia was already waiting for me at our lunch spot when I arrived. My anticipation made her look even sexier than she did at lunch.\n\nAlevia had an emotionless look on her face, but I could see in her eyes that she appeared to be simultaneously excited and nervous. The idea that she would be nervous caught me off guard given how forward she had been with me earlier in the week.\n\nIt appeared that Alevia had somehow pulled her skirt up even more than it had been at lunch. Her crop top seemed shorter as well, hanging loose from the bottom of her breasts. As I approached I could just barely make out the bottom of her bra below the hem.\n\nI caught myself wishing that I would have asked her to go braless as well. I now felt that I had only asked for the bra because that was what I had seen in my premonition of Alevia on her bed.\n\nThe regret made me remember that Malory had told me that my premonitions were just rough ideas of what I could get up to. More specifically of what my partner was willing to do. Which reminded me that if Alevia was not wearing any panties then what was I going to gag her with? A clean pair was just not as sexy.\n\n\"Damn girl, you look sexy as fuck. You are going to give me the wrong impression.\" I said with a grin so big that my cheeks started hurting.\n\n\"And what might that be? That I want you to take me to my house and have your way with me?\"\n\n\"Well, pretty much.\"\n\nAs I reached Alevia she turned and started walking next to me. I took this opportunity to place my arm on her exposed lower back. Just below her backpack and right above the waist of her skirt.\n\n\"So, did you manage to make it through the day without panties?\"\n\n\"Why don't you check?\" Alevia suggested as she stopped and bent forward slightly sticking her ass out behind her. Her bare ass cheeks came into view followed by a thin strip of fabric making its way through her crack.\n\n\"Hmmm, I guess I will accept a thong, but you are going to have to be punished for disobeying me.\" I meant this as a joke, but Alevia's response caught me off guard.\n\n\"Yes sir, whatever you deem appropriate.\"\n\nI realized that gave me an opening for my plan with Malory, but I would not push my luck until we arrived at Alevia's house. For now, I simply reached down and grabbed her ass for the first time. Pausing to squeeze and appreciate it as best I could with other students still leaving school all around us.\n\n\"Scott, I want you to know that I did do as you said. I had no panties on through lunch, but Mrs. Franklin noticed that I did not have any underwear on.\"\n\n\"How exactly did that happen?\"\n\n\"Well, I maybe, somewhat intentionally, flashed her,\" Alevia said with a bit of a grimace.\n\nJesus, did everyone have a crush on Mrs. Franklin? I thought to myself.\n\n\"Haha, well, I can't blame you for that . . . although I do have a perfect idea for how you can make it up to me. By the way, where did you get the thong from?\"\n\n\"Well, oddly enough they are Mrs. Franklin's. She said that she had an emergency pair in her desk and that I needed to wear them for the rest of the day.\"\n\nBy this time we had reached the relative secludedness of the bike path that connected campus to my parking spot. I stopped Alevia and removed her backpack for her.\n\n\"The school day is over, so I think that you can take these off now,\" I said as I slid my hands under her skirt and grabbed the bands on her underwear, and pulled them down to her ankles. She gently stepped out of them. Standing back up I shoved the panties in my back pocket to make sure I knew where they were later.\n\n\"I think that you can also lose the bra. I bet your breasts will look super sexy with a bit of under boob hanging below your shirt.\"\n\nWithout hesitation, Alevia followed my direction. First unfastening her bra and then pulling the shoulder straps off by feeding them through her armholes.\n\n\"Would you like to hang onto this as well?\" She asked with a quizzical look.\n\nI simply shook my head \"no\" and picked up her backpack making my way to my car. Alevia was quick to follow. As I glanced over my shoulder I could see the bottoms of her breasts peeking out below her crop top. As they bounced, now unrestrained, with each step I could make out her areolae and a hint of nipple before they vanished back under her shirt.\n\nWith my cock getting harder in my shorts I watched as she caught up to me. As I walked around my car I glanced over at my friend Devin's house. This time there was no mistaking it, his mom was standing in the window watching. I thought that I could make out a smile on her face as she closed the curtains and disappeared once again.\n\nHad she lost her job? Was she working from home? Either way, I knew that my lunchtime activities were no longer a secret. She had not called the cops or my parents, so hopefully she would stay quiet, but I should probably find time to talk to her about it just in case.\n\nI should probably point out that Devin's mom, Megan, was not the average parent in our community. She had gotten pregnant with Devin when she was 15, making her only 33 now. If that was not enough she was still super hot, a fact that made Devin increasingly uncomfortable the older we got.\n\nAs I drove towards Alevia's house I had an idea to keep her occupied during the 15-minute drive.",
        "\"Lean the seatback, lift up your skirt with one hand and your top with the other.\"\n\nOnce again Alevia did exactly as told, exposing both her breasts and her shaved cunt to me. I could tell that she was getting wet already and that both her nipples were erect from the AC blowing directly on them.\n\n\"Now play with yourself. The windows are tinted and you are low enough that no one can see in from the front. Don't let yourself cum though. I want you to save that for later.\"\n\n\"Yes sir!\" Alevia eagerly said and she slid two fingers inside herself with ease. Her other hand grabbing a breast, which spilled out around her hand as she squeezed it.\n\nFor the rest of the drive, I had a hard time focusing on the road as I stole glances when I could. Every once in a while Alevia would start to moan as she approached orgasm, but she would obediently back off leaving herself unsatisfied when we arrived at her house.\n\nI pulled up in front of Alevia's house and wasted no time jumping out of the car. Alevia was even quicker, her skirt and top falling back into place as she raced up the stairs to her front door. I quickly caught up to her as she fumbled with her keys.\n\nI let my hand slip under the hem of her skirt and I quickly found the back of her thigh just below her perfect ass. I gave it a gentle squeeze before slowly running my hand upwards. First I cupped her ass cheek, but I quickly let my fingers slide deeper between her legs.\n\nMy fingers found her sopping wet pussy and just a slight push spread her lips for me. Slipping inside her with my index and middle finger I heard Alevia gasp as she briefly paused in her attempt to open the door.\n\nRealizing that she was standing in front of her house with her ass now exposed and a boy's fingers inside her for the whole street to see Alevia managed to open the door and step inside.\n\nBefore the door was even closed I once again had my hand under her skirt, this time from the front, while my other hand made its way up her stomach towards her waiting breasts. I grabbed one then the other as I massaged her average-sized but perfectly shaped breasts before focusing my attention on her nipples.\n\nWhile this was going on I leaned in and passionately kissed Alevia, pressing my mouth to hers as our tongues danced with each other's. As I was doing this she reached down and started to unfasten my shorts, letting them drop to the floor. She reached out and grabbed my hard cock through my boxer briefs, causing my cock to reposition so that it stood straight up, the tip poking out past the waistband.\n\nAs much as I wanted us to both strip down right there I figured that we should probably make our way to her room. I reluctantly broke our embrace causing Alevia to sigh in disappointment as I pulled away from her. I took the opportunity to strip off my shirt and grabbed my already discarded shorts as I led her towards her room.\n\n\"Sit on your bed,\" I instructed as I pulled my phone from my shorts.\n\n\"Yes sir, are you going to take my photo? Because that would be hot.\"\n\n\"Not exactly, but I would like to come back to that idea sometime soon. I got a new mirrorless camera for my birthday and want to try it out.\"\n\n\"That sounds like a plan,\" Alevia said with a wink, \"but what do you have in mind today?\"\n\n\"Well, Malory asked me a favor and I told her that I would see what I could do. Do you mind if I FaceTime her so that she can watch us?\"\n\n\"Is it just Malory\"\n\n\"Yes, only her.\"\n\n\"Well, that is too bad . . . but I am sure that she will love what you have in store for me, so go ahead.\"\n\nI had already sent the request to Malory and she was picking up her phone as Alevia gave me permission.\n\n\"Hey, Scott. Hi Alevia. Thank you so much for this, I am super excited. Of all the things I have done I have never watched people have sex like this.\"\n\n\"Well, sit back and relax, or whatever you are going to get up to,\" I responded as I turned the camera on Alevia, who eagerly smiled and waved.\n\nI moved the camera low and close to the ground, slowly moving it up Alevia's leg. As I passed her knee I moved between her legs, easing them apart as I did so. Her skirt fell to cover her womanhood as I moved closer.\n\nI reached up with my free hand and pushed her back so that she was laying down on the bed with her knees bent, her lower legs hanging off the edge. I returned my focus to my phone as it inched closer to the hem of her skirt.\n\nAs I neared the darkness that awaited my phone I reached out and lifted up her skirt, pushing it back and letting it fall on her lap exposing her shaved crotch to both me and Malory watching at home.\n\nI held the phone in place as I reached out and ran my thumb up through Alevia's pussy lips, stopping at her clit. I took my time to rub her clit with my thumb. I could hear her breathing quicken as I increased the pace, she was already worked up from the anticipation and the car ride home. I backed off as I did not want to let her cum just yet. I dipped my thumb deep inside her cunt briefly before moving it towards my mouth. I filmed myself sucking Alevia's juices off my thumb for Malory to watch.\n\n\"No fair, I want to taste.\" I could hear Malory complain on the other end as I turned the camera back to Alevia's body.\n\n\"Next time,\" Alevia moaned in response.\n\nAs I resumed my video tour of Alevia's body I moved past her bunched-up skirt, skimming over her belly button approaching her crop-top-covered breasts. From this angle, we could see the bottoms of her breasts slightly flattened by their own weight. They arched up into the darkness, with only the nipples truly hidden beneath the fabric.\n\nBefore the camera reached Alevia's breasts I reached up and ceremoniously grabbed one under her shirt. Firmly squeezing it I ran my hand up the sides approaching her nipple. As my hand reached her nipple the fabric on her top was pushed away allowing Malory to see me pinch and tweak, pushing Alevia almost past the edge of pleasure.\n\nI slid my hand over to Alevia's other breast and repeated the experience. I could hear Malory moan through the phone and I quickly broke my gaze from Alevia to Malory. I saw Malory holding the phone away from her body, giving me the view of her shirt pulled above her breasts and her hand down her panties, her shorts, and bras discarded somewhere unseen.\n\n\"Take off your shirt,\" I said to Alevia, but both she and Malory obeyed me.\n\n\"Rollover.\" This time only Alevia did as she was told.\n\nWith Alevia now on her stomach I started to move the phone back down her body. Taking my time to allow Malory to appreciate Alevia's toned back before once again passing over her skirt. As I made my way to Alevia's ass I could hear Malory moan in appreciation of it.\n\nOnce Alevia's cheeks were in full view to Malory I paused the movement of the camera and took time to reach out and fondle her. I lingered there, making sure that Malory got a good idea of how firm they were before I once again slid my hand between Alevia's crevice.\n\nMy hand grazed over her asshole and I felt her tense at first, but she quickly relaxed. My fingers found their destination inside Alevia's waiting lips, sliding in easily. I took some time to ease in and out of her as the side of my hand rubbed against her anus. Alevia was obviously enjoying the sensations, and Malory the view.\n\n\"I want to see her asshole. Is it shaved too?\" Malory pleaded between moans on her end.\n\nAs I moved the phone into position I reached out and spread Alevia's ass cheeks as far as I could with one hand. It was just enough to give Malory the information that Alevia was in fact smooth everywhere.\n\n\"Actually, I wax, but you get the idea. Here, let me help,\" Alevia piped up as she reached back with both hands and grabbed her own ass, pulling her cheeks wider than I could with my one free hand.\n\n\"Oh fuck yes, that is a sexy view,\" Malory commented as she could now see everything in full detail. \"Scott, your cock is going to look good in both of those holes.\"\n\n\"I better get to it then,\" I said with a wicked smile. There was something that I wanted to do first though, \"Alevia, do you have anything that I can tie you up with?\"\n\nWithout saying a word Alevia jumped out of bed and quickly bounced towards her parents' room. I could not help but admire her ass as it peaked out from below her skirt. By the sound of it, Malory appreciated the view as well.\n\nAs Alevia came bounding back into her bedroom, holding onto several of her dad's neckties, Malory and I were greeted to a similar sight as to when she left. This time, however, it was her breasts bouncing in unison that got us salivating. Alevia stopped in front of me and presented the ties with a smile on her face. I took them eagerly, setting the phone down in a way that allowed Malory to continue to watch.\n\nI sat in front of Alevia with my eyes directly in front of her breasts. They sat high on her chest with almost no sign of sag. They were not as large as Malory's, but their shape and uniformity were unmatched as far as I was concerned.\n\nI could not resist reaching out and cupping each breast, playfully tweaking each nipple to make sure that they were fully erect, just like my cock was becoming. After teasing Alevia briefly I took her hands in mine and started to wrap her wrists with one of the ties. I was not sure of the best way, so I just sort of wrapped one end around her several times one way and then wrapped the other end in the opposite direction. After tying the ends together it did not look pretty, but it seemed like it would hold her wrists together. At least if she did not struggle too much.\n\nI pushed Alevia back onto her bed, positioning her so that she was on her back with her head slightly hanging off the side of the mattress. I quickly pulled my shirt off, tossing it aside. My shorts and boxer briefs were soon piled on top of my shirt.\n\nMy hard cock stood out from my body, curving upwards as precum ran from the tip. You could still see some dried remnants from my lunchtime rendezvous with Malory, but there was not as much left as I was hoping for.\n\nPicking up my phone I focused it on Alevia's face as I stepped forward, my cock dangling just above her. I positioned my balls above her mouth, and without any prompting, she stuck out her tongue and started to lick them.\n\nI spread my legs slightly and lowered my balls, Alevia responded by sucking them into her mouth with vigor. I reached out and stabilized myself by placing my free hand on her breasts. This was half to brace myself and half because I wanted another feel.\n\nAlevia continued to suck on one ball and then the other as I played with her nipples and pressed my weight into her chest. As I was filming for Malory I noticed that despite Alevia's hands being tied she was still playing with herself.\n\nI could tell that Alevia was getting excited and working her way towards an orgasm. I still did not want her to cum yet so I moved my hand from her breasts and pulled her hands away from her cunt.\n\n\"Not yet, you will get your chance, but not until I tell you to.\"\n\nAlevia nodded in understanding as she placed her hands on her stomach. I took the opportunity to pull my balls from her mouth letting the length of my cock run along her lips.\n\n\"Are you ready to taste where my cock was during lunch?\"\n\nIt was less of a question and more of a statement as I did not bother to wait for her response. I already knew what she wanted as she opened her mouth and leaned her head back, giving way for me to push my dick past her lips.\n\nI could feel her tongue run along the top of my cock as it slid all the way until I felt the resistance of the back of her mouth. I pushed a little harder as I felt Alevia relax her jaw and my cock slid deeper, my head entering the upper portion of her throat. This angle gave me a new appreciation for blowjobs. I had never realized how deep my cock went.\n\nI continued to push into Alevia's mouth and throat until my balls were resting on her nose. I paused there for a minute, appreciating the sight and feeling of her throat around the head of my cock. I reminded myself that I needed to take time to appreciate moments like this, especially if my senior year was going to be anything like this week. I could easily get lost in the hustle and forget to fully enjoy myself.\n\nWith my balls covering her nostrils and my cock filling her mouth Alevia found it hard to breathe. Choking on my cock she coughed. The resulting contractions of her throat felt amazing on my head. I was figuring out why guys always tried to make women choke on their cocks in porn. It felt amazing.\n\nI was not confident in knowing where the line lay for Alevia, especially with her bound at the wrists, so I pulled my dick from her throat to let her catch her breath before pushing inside again. I did not go quite as deep, but I could still feel my head squeezed in the most pleasurable way.\n\nI slowly picked up the pace and continued to pump my cock into Alevia's throat as I felt my orgasm build inside my balls. The feeling being magnified every time they bounced off her face.\n\nAs I felt my cock unleash its first spurt I pushed as deep as I could, trading my long deep thrusts for quick shallow ones that kept my cock at the back of Alevia's mouth, my cum trying to force its way down her throat.\n\nThis was too much for Alevia. As she once again gagged I pulled my cock from her mouth and used my free hand to pump the last few spurts onto her lips and face. My cum mixed with her saliva flowing from her mouth and down towards her eyes as she struggled to swallow.\n\nBefore my cum reached her eyes Alevia scooted onto the bed, allowing her head to be fully supported as she caught her breath. Streaks of cum were left on her cheeks as she cleaned what she could with her tongue.\n\nAlevia started to lift her hands to wipe her face clean, but I figured that I would leave my cum there for a while, I grabbed her hands and pulled them over her head. Selecting one of the other ties I wrapped it between her wrists and tied it around a corner bedpost.\n\nThe sight of Alevia lying on her back, hands tied above her head, her skirt still around her waist but doing little to hide her glistening cunt, was almost too much to handle. I made sure that Malory got a good view of everything this view had to offer.\n\nI stole a glance at my phone for the first time in a while and found that Malory was completely naked and had propped her phone next to her. I could see her massaging her own breast with one hand and was using a vibrator on her clit with the other. It sounded like it was on a low setting, indicating that she was taking her time to enjoy this with me and Alevia.\n\nI noticed Malory's panties bunched up next to her and remembered that I had Alevia's, or should I say Mrs. Franklin's, panties in my pocket. I fished them out and examined them. Not only were they a thong, but they were mostly mesh in the front, only slightly covering enough that the wearer's pussy was not showing through. They would not have done anything to hide Alevia's pubic hair if she had had any.\n\nI started to wonder why Mrs. Franklin had a \"reserve\" pair of panties in her office that were so sexy. I had heard of women carrying extra underwear during their period, but it did not make sense for them to look like this. If my earlier premonition came true then I would have to ask her about this. Or maybe even before that if I got the chance. After all, someone had to return these to her.\n\nI could not help but smile as I thought this over silently to myself. I wanted to let Malory in on the story so I laid them flat next to Alevia and focused the camera on them.\n\n\"Oh, those are sexy,\" Malory said.\n\n\"You don't know the half of it. I will fill you in later, but for now, just know that they are Mrs. Franklin's. She gave them to Alevia during school today. I guess she felt her skirt was too short to be going commando.\"\n\n\"I don't want you to ruin them, but have you thought about using them as a gag?\" Malory suggested as I heard her turn up her vibrator.\n\n\"Great minds truly do think alike.\"\n\n\"Well, at least horny ones do,\" Malory responded back.\n\nPicking up the panties I started to ball them up to shove into Alevia's mouth, but as I reached out to do so I had a better idea. As much as I wanted to leave the remnants of my drying cum on her face a new idea made my softening cock twitch back to life.\n\nI unwrapped the panties and used them to wipe my cum off of Alevia's face. Once her face was reasonably clean I returned the underwear to a tight ball. Holding Alevia's face she obediently opened her mouth as I shoved them inside, tucking the last few bits firmly in. If she had wanted to Alevia probably could have spit them out, but she showed no sign of resisting their presence.\n\nI am not sure that the panties being soaked in my cum changed the experience for Alevia, but the idea of them being returned unwashed to Mrs. Franklin continued to cause a stirring in my cock.\n\nSince I had not fully regained my hardness I decided to continue to tease Alevia. I positioned myself on the bed between her legs. I grabbed her on the underside of the thighs and lifted her legs apart so that I had a full view of her soaked cunt.\n\nFinding a resting place for my phone I allowed Malory to continue to watch as I lowered my face between Alevia's legs. I could smell her sex as I got closer. It was much more pungent than Malory's but was still a turn-on for me.\n\nAs I settled into place I slowly licked my way from the bottom of her pussy up to her clit, briefly teasing her button with a quick flick or two. I focused my attention on her vagina for the next few minutes, darting my tongue as deep as it would go before pulling it out and teasing the outside for a while before diving back inside.\n\nI could tell that her excitement was quickly rising as she began to move below me. Taking note of this I moved my attention to her clit. At first, I simply licked and flicked it with my tongue, but soon I was sucking it into my mouth and even gently using my teeth on it.\n\nAs Alevia's pleasure continued to climb I managed to ease two fingers into her cunt as I continued to suck her clit. I could feel her push her pelvis up against my mouth as I brought her closer to her first orgasm of the afternoon.\n\nOnce again I knew that I did not want to let her cum, at least not yet. I backed off, first pulling my face away from her yearning clit and then removing my fingers which were now drenched in Alevia's juices.\n\nI wiped first my face and then my fingers on Alevia's inner thigh as I sat back on my knees admiring the sight of Alevia splayed out in front of me. My cock was now recovered and once again aching for release as it stood out from me, pointing directly at its desired destination between Alevia's legs.\n\nI realized that I had a choice to make. I wanted to fuck Alevia's waiting cunt, but I had been dreaming about her ass for the last several days. I could easily start in her pussy and finish inside that sweet ass, but I was not sure that I would be able to last long enough to truly experience what both had to offer.\n\nI also had a craving to fuck Alevia's ass while my cum was dripping from her cunt, but since I had already cum once this afternoon and again earlier at lunch I was not sure how long it would take for me to get it up again to complete such a trifecta.\n\nAs if she could sense my contemplation Malory piped up on the other end of the video stream, \"I want to see you dripping from that cunt Scott.\"\n\nI did not need any more encouragement as I quickly scooted forward. Staying upright on my knees I positioned the tip of my dick so that it was poking just into the outer folds of Alevia. Since she was already more than adequately wet and my head was covered in my own lubricants I wasted no time and hurriedly pushed inside her.",
        "Continuing my urgency I buried myself deep inside of Alevia. Her cunt gripped my cock firmly, but with a softness that left me briefly weak at the knees. As I reached my full depth I could feel my balls momentarily stick to her ass as my sack met with her drying juices. This was only a temporary situation as I instantly started to thrust into her while remaining in a kneeling position, my hands pushing her legs back towards her chest.\n\nAs I increased my pace I knew that I was not going to last long. Despite how many times that I had cum that week the novelty of seeing my cock buried deep inside my hot friend was making sure that I did not waste any time approaching orgasm.\n\nI thought about backing off and making sure that Alevia enjoyed herself as well. I did not want to disappoint her by cumming too soon, but I quickly remembered that I was still not wanting her to reach orgasm yet.\n\nAs I pushed my weight into the underside of her legs I fucked her as hard and deep as I could; not worrying about losing control. Alevia's breasts bounced with each thrust and her body was forced up towards the head of her bed. I was lost in watching her tits bounce and sway with my thrusts and almost did not realize that I was starting to shoot my second load into her this afternoon.\n\nI orgasmed in silence, or as much as one can. I am not sure if it was because I was self-conscious about being watched by Malory, or because Alevia was mostly silent herself with Mrs. Franklin's panties shoved in her mouth. Either way, I steadily convulsed in silence finishing the last few spasms with just the tip of my cock still inside Alevia.\n\nAs I pulled out from Alevia my cum was already visible and starting to drip from her cunt. I quickly grabbed the camera and gave Malory a close-up of the erotic scene. I could hear Malory moan as she started her own orgasm. I looked on as Malory came while she watched my sperm ooze from Alevia.\n\nMalory sounded and looked like she was having quite the orgasm as she pumped herself with her vibrator before pulling it out to focus on her clit. I was hoping that this would be enough to get me hard again, but after already experiencing three orgasms today, and two in the last hour, I was down for the count.\n\nAs Malory came down from her orgasm I decided to take a moment for myself. I put the phone down so Malory could keep an eye on Alevia and made my way to the bathroom to take a leak. I smiled a little as I realized that Alevia was getting much the same view of me as she had teased me with earlier in the week.\n\nAfter relieving myself and cleaning up a bit I realized that I was craving something to drink and made my way out of the bedroom in search of the kitchen. I had assumed that no one was home so I did not bother even throwing on my underwear.\n\nAs I was digging around in the cabinets looking for a glass I heard a voice behind me. It sounded a lot like Alevia except with a little more rasp.\n\n\"Can I help you find anything?\"\n\nMomentarily forgetting that I was buck naked I spun around to see who had snuck up on me. My no longer erect but still slightly engorged cock flopping in the wind for them to see. As I stared in disbelief at the young woman that stood in front of me I realized that she must be Alevia's sister.\n\nUp until that moment, I hadn't known that Alevia even had a sibling. To be honest, my introduction to her could have gone better. As I continued to stare and not say anything in response I forgot that I should try and cover-up.\n\n\"I was just looking for some water,\" I finally managed to blurt out.\n\nI noticed the young woman step towards me. She looked quite a bit like Alevia except a few inches taller, almost as tall as I was, and with breasts that were at least a full cup size bigger as well. The main difference, however, was that she had a short pixie style haircut, which could have made her look a bit tomboyish combined with her toned body, but instead made her look sexy as hell standing in the middle of the kitchen.\n\nThis technically still unknown woman looked like she had just woken up, wearing a tank top with no bra on underneath. I could clearly see her nipples poking through and the darkness of her areolae through the thin white material. Below she had on a pair of boys boxers, rolled down at the waist so they sat below her hip bones but were still pulled tight against her crotch.\n\nShe stepped towards me as she stared at my cock, which I still had failed to cover up, moving with purpose until she was almost touching me. Reach out she moved her hand past my head and grabbed a glass out of the cabinet behind me.\n\nAs she did this she leaned in and whispered in my ear, \"Have you been fucking my sister with that nice cock?\"\n\nHanding me the glass she waited for my response, but instead, she just got a blank stare. I did not know what to say. Of course, I had been fucking Alevia, in fact, I was basically still fucking her as she was tied up in her bed right now.\n\n\"Or are you just some pervert that broke into our house? After all, if Alevia was here, wouldn't she be helping you find what you are looking for? Do I need to call the cops?\"\n\nI figured that she was teasing me, but I was not about to take any chances. After all, it would not look good if the cops showed up before I was able to explain myself.\n\n\"No, I'm definitely not some perv. Alevia is tied up in her bed.\" As soon as I said that I realized how it sounded. \"No, she wanted to be tied up, I swear, we are just messing around, she invited me over, I promise.'\n\nLooking me dead in the eyes Alevia's sister reached down and grabbed me by my balls, \"If you are lying to me I am going to cut these off,\" she said, giving them an unnecessarily hard squeeze. \"If you are telling the truth, however, then I have underestimated my sister's taste in men.\"\n\nLetting go she turned and headed towards her sister's room. I half expected her to barge in and immediately free Alevia, but instead, she took her time and calmly sat in the desk chair. Looking over her sister's body and the situation she seemed satisfied, but asked a few questions just in case.\n\n\"Alevia, just nod if this is true. Do you know this boy?\" Alevia nodded in agreement.\n\n\"Did you consent to having this done to you?\"\n\nAlevia nodded again.\n\n\"Are you going to let him fuck you in that fine ass of yours?\"\n\nThis caught me off guard causing me to almost do a real live spit take. Barely holding back the water I looked up as Alevia once again nodded her approval.\n\n\"Good. I see you are filming this, do you want me to act as a camerawoman for you two?\"\n\nI was not sure if she was still talking to Alevia or had switched to me, but I was not about to answer. It seemed like a trap to me. I did not have to worry long, however, as Alevia nodded yes for the final time, arching her back to present her ass to both me and her sister at the same time.\n\n\"Well, you heard the lady, get to fucking that ass . . . By the way, what is your name?\"\n\n\"Scott. And yours?\" I could feel my cock grow in anticipation as I asked, but I was still not hard enough, probably due to the stress of the situation.\n\n\"Brooke. Nice to meet you, Scott.\"\n\nInstead of reaching out her hand to shake mine in a conventional greeting, she dropped to her knees in front of me.\n\n\"Here let me help you get hard,\" Brooke said as she took my half-mast cock in her hand, briefly stroking it before sliding it expertly into her mouth.\n\nI could not believe what was happening, nor did I know why I had not received a warning via premonition. I would have to ask Malory about that later, but in the meantime my cock was springing to life inside Alevia's sister's mouth.\n\nI moaned in pleasure as I looked over and saw a wide-eyed Alevia stare at her own sister blowing me in the middle of our fuck session. I would have asked her how she felt about it, but I figured it would be a wasted opportunity. Plus, Alevia still had Mrs. Franklin's panties in her mouth.\n\nI was not the only one in disbelief as I heard Malory over the phone, \"What the fuck is happening? Scott, did you see this coming?\"\n\nAll I could do was shake my head no.\n\nBrooke did not keep my cock in her mouth for long. Pulling me out she gave my head one last lick before she stood up. Grabbing the phone she moved around the bed to get the best angle of me defiling her sister's ass.\n\n\"God you taste good sis,\" Brooke complimented Alevia as she focused the camera up her long legs towards her waiting pleasure center. \"Get to work Scott.\"\n\nIt was not necessary, but I wanted to recreate as much of my premonition as I could. Taking the remaining necktie I grabbed Alevia and rolled her to her stomach. Facedown her ass stuck out from beneath her skirt. I could see where my cum had run down into her asscrack. Using the tie I quickly bound her feet together. She would not need to spread her legs for this.\n\nAs I climbed onto the bed, straddling Alevia's bound legs I moved up towards her ass. I was so lost in the craziness of the moment, and the whole week in general, that I completely forgot about lube. I found myself sitting on my knees, my cock in my hand, aiming my tip towards her presumably tight, but a definitely dry ass. As much pre-cum as was leaking out of me there was no way that my cock was going to enter her without causing excruciating pain.\n\nWhile I may not have been in a state of mind to realize this Brooke definitely was. Without missing a beat filming she reached into Alevia's bedside drawer and pulled out a bottle of lube. Tossing it to me she simply winked and went about filming like a pro.\n\nPouring some onto my hand I rubbed it on my cock until it was slick enough to fuck anything that I was daring enough to stick my dick into. Yet still, I poured some directly onto Alevia's asshole. I was not going to mess around and hurt her the first time I got to fuck a girl in the ass.\n\nI lowered my cock between her cheeks and slowly worked it around her rear opening, making sure that the lube was well distributed and she was ready for my member to enter her once again today. I could hardly believe that I was about to fuck, and hopefully cum, in all three of Alevia's holes today. The only thing that I was missing was a good titty fucking, but I figured that could wait for another day, and possibly another girl.\n\nRegaining my focus I aligned my head and tried to gently push into Alevia. As I quickly figured out, gently not going to cut it as I failed to enter her despite the ample lubrication. Looking up at Brook and my phone I gave a slight shrug and pushed again. This time I had significantly more force behind me and I popped my head past Alevia's exceedingly tight sphincter.\n\nUnfortunately for Alevia, I was not anticipating the cessation of resistance once I pushed past the first hurdle and I ended up burying my cock all the way to the balls in one swift movement. We could all hear Alevia's attempt to scream out through her gag and I held my breath for a second hoping that she was okay.\n\nWhen I felt Alevia start to push her ass back into me I figured that she was not only okay but ready for more. I started to pump into her, again starting slow and gradually building up my speed as my confidence grew.\n\nI had not known what I expected Alevia's ass to feel like. I guess I had just assumed that it would be similar to her cunt. My desire to try anal was not for a new sensation, but for a new mental stimulation. In retrospect, I should have known better. Blowjobs do not feel the same as vaginal sex, so why should anal?\n\nAfter the initial tightness of her sphincter, her actual ass was looser on the head of my cock than her pussy was. However, that tight ring that I pushed through did not loosen up. It maintained a firm grip on whatever it currently lay around. This meant that with each thrust my cock got a massage of pleasure, but the tip was left to the more subtle stimulations of the surprisingly soft colon.\n\nI had been expecting to last for a while but I quickly realized that was not going to be possible as the titillations of the moment were just too much. It was one thing to be fucking my longtime friend and secret crush in the ass, but to have her equally attractive sister filming it while my new friend and fuck buddy watched was more than my teenage mind could handle. I could already feel the orgasm building inside me as I tried to focus my attention elsewhere to keep from cumming too soon.\n\nBrooke seemed to realize this and also instinctively knew that her sister needed to cum. Once again she reached into the bedside drawer, this time pulling out a crescent-shaped vibrator. Moving behind me I felt my balls graze against her hand as she pushed one end of the purple sex toy into her sister. The other end curled around and found its resting place on Alevia's clit.\n\nAs Brooke turned on the vibrator I could feel the rhythmic pulses through the thin wall separating Alevia's cunt from her anus. It was all I could do to keep from filling her ass right then and there. I managed to slow slightly and gain control, I held out for a little longer, at least until Alevia was finally allowed to orgasm for the first time today.\n\nAlevia had obviously been waiting a long time to get the relief that she so desperately wanted, and quite frankly deserved. She quickly exploded into orgasm as the vibrator did its duty both on her G-spot and clit. Her body shook and rocked beneath me as she instinctively arched her back pushing my cock deeper into her rear.\n\nWe could hear her scream out in pleasure through the panties that were still shoved in her mouth. It was probably a good thing that she was gagged as she would have disturbed the neighbors otherwise. It was the most intense orgasm that I had witnessed, either in person or on video, and it seemed to go on and on. My cock experiencing it on the front line.\n\nThe vibrator was not just working on Alevia, however, it also put me over the edge. The sensation of it pulsing through her cunt stimulated the head of my cock in a way that I had yet to experience. There was no hope for me to hold out, but I was not worried about that any longer as Alevia was finally getting the reward that she deserved after fully lending her body to me for the afternoon.\n\nI did not think that I was going to have a massive orgasm because of my earlier activities, but everything about the situation dictated otherwise. I came longer and harder than I had previously that day, or maybe even ever. It was hard to tell how much semen I actually pumped out, but the sensation was all that mattered to me.\n\nI gave it all I had and finally collapsed on top of Alevia as my energy was sucked out of me along with any remaining cum by her ass. She was still experiencing ongoing but subtle aftershock mini-orgasms as I pressed my body into hers. These lasted for another minute or two, and while they were not nearly as powerful as her initial climax she showed no sign of wanting them to stop.\n\nAs my cock shrank I could feel the tightness of her ass pushing me out. I shifted my hips and let the rest of me fall out. A small stream of my cum followed as there was a slight delay of her asshole closing after being stretched for so long. My cum ran down towards her pussy, and I felt Brooke reach down and lift up my balls so that she could get a good shot for Malory.\n\nAs Alevia finally fully calmed down I rolled off of her, our skin pulling at each other as we were stuck together via sweat and other fluids. Lying on my back next to her I was still having a hard time wrapping my head around what had happened when Brooke appeared above me.\n\nBending over Brooke planted a kiss firmly on my lips, which parted to let her tongue inside. We did not make out for long, but it was a good sampling of something that I hoped I could get more of later.\n\nAs she stood up I realized that I could see down Brooke's tank top. Her braless breasts hung free and now fully visible to me. They were even more spectacular from this angle. The weird thing was that her naked sister was lying next to me, bound, gagged, and with my cum dripping from her ass, and yet sneaking a peek at Brooke's tits still excited me. Not enough to raise my cock from the dead, but enough to give me future hopes and dreams.\n\nBrooke set my phone down on the nightstand and walked out of the room without saying a word. I continued to lie there next to Alevia, who did not seem to be in a hurry to be freed, which was good, because I needed a minute to regain my composure, as much as I could.\n\nAfter a few minutes, I got up, untied Alevia's arms and legs, and finally pulled Mrs. Franklin's panties from her mouth. She moved her jaw around to loosen it up after having it forced open for so long but was quick to recover.\n\nI used Mrs. Franklin's now soggy underwear to clean up the cum that was still leaking from Alevia's pussy and ass, further adding to the sexual concoction that would someday be returned to our history teacher.\n\nAs I was finishing up Alevia turned to me and smiled, \"I see you met my sister.\""
    ],
    "authorname": "scbolder",
    "tags": [
        "anal",
        "bdsm",
        "bondage",
        "cream pie eating",
        "exhibitionism",
        "gagged",
        "siblings",
        "sisters",
        "video",
        "voyerism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/premonitions-senior-year-ch-03"
}