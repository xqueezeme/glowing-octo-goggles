{
    "title": "The Priest and the Love Doctor",
    "pages": [
        "The story is a bit on the light side and not to be taken seriously although some little bits are drawn from my past. Mike K was kind enough to edit out the worst of my bad grammar and spelling. I owe him a debt here. The story is not perfect but it is free. As always tell me what you think. \n\n*****\n\nFather Dominic entered the dimly lit Newman Center Chapel. He expected more light because it was Thursday, and the Altar Society cleaned and prepared the church for weekly services on Thursday evenings. The Society was made up of a dozen young women volunteers from the University, but tonight they were not in the Chapel. That surprised him. Mary McCarty, the group's chairwoman, was normally a most capable and dependable young woman. There were no males in the Altar Society. Young men rarely even attended services in these increasingly secular times. Father Dominic could only pray for their threatened souls. \n\nBeing the Chaplin of the State University's Newman Center was not a particularly rewarding position. Father Dominic would have preferred real parish work, but it was not his option to choose. He had been assigned to minister to the university community, and he tried his best to be a good advocate for the teachings of the Catholic faith. It was a difficult community to serve, particularly in these times.\n\nYoung people today had very loose morals. Sex was always an important factor when ministering to college students. Nothing had prepared the priest for the modern \"hookup culture.\" Young people no longer dated, they hooked up instead. A hookup could mean anything from sharing coffee to sexual intercourse. It was, unfortunately, most often the latter. The priest was convinced that the unrestrained physical urges of young men were principally to be blamed for this development\n\nYoung men no longer felt responsible for anything. There were fewer of them in college, and, in fact, they were the minority. Young men were all about only one thing. Young women were no longer courted. A girl today would find her man at some event or social occasion without the benefit of prior arrangement. Sex had become no more than a casual event. Each Sunday Dominic preached against the hookup culture with only modest success. \n\nHis congregation was small and almost exclusively female. Still there were bright spots. Mary McCarthy was one of those lights. She was a teacher in training. She had completed her BA, her student teaching, and was almost finished with her MA in education for her permanent certification. She was a beautiful young woman with a very curvaceous figure. Not some skinny little thing, but a tall young lady with black hair and pretty green eyes. The unkind might label her as a bit overweight, but she looked like what Father Dominic would call a real woman. Added to these attributes like a shining jewel was her deep Catholic faith and commitment to the church. She had but one deficiency, and Dominic hoped she would soon rid herself of it or rather him.\n\nFather walked through the chapel into the church hall. It was a long somewhat narrow room at the back of the church building that was lined along one wall with tables and chairs for social and educational functions. As he entered, he saw a group of young women at the far end, the missing Altar Society . The girls were gathered together and clearly excited about something. \n\nAs Dominic approached one of the girls called out, \"Oh Father come and see. Mary's engaged.\"\n\nThey were gathered around Mary, who was sporting a substantial diamond ring. Father dreaded the answer as he asked the question.\n\n\"Who is the lucky young man?\"\n\n\"Oh, Father don't be silly, it's Stil,\" a number of young women informed the priest.\n\nIt was all he could do to keep a smile on his face. In a University filled with oversexed, immature men, Robert Simons might be considered an exception. He was painfully shy and awkward. He was very studious in his quiet way and maybe even somewhat likable. But that was the extent of his good qualities.\n\nRobert was an atheist by personal inclination and a Protestant by birth. He was commonly referred to by the nickname Stil for reasons never explained. He seemed to be known to every young woman on campus who uniformly treated him with an uncommon familiarity. Every girl on campus seemed to regard him with amusement and hide a knowing smirk when his name was mentioned. Father feared the worst and had been disappointed the first time Mary had dragged Stil to Saturday evening Mass.\n\nMary had been seeing Stil, whom she studiously referred to as Robert, for a good eighteen months since the last half of the proceeding academic year. Stil was a good three years younger than Mary, a junior to her graduate student. He was in Father's opinion in no way her equal. She led him around like a pet. Father could see that she ruled the relationship. He never directly stood up to her. Stil or Robert did not seem the type to be so submissive. The young man was firm in his religious views and adamant in his convictions. He was also tall and well built. A member of the varsity wrestling team he was also a bouncer at the \"Factory\", the worst of the college bars. But it was clear that he was so utterly infatuated with Mary that her quietest wish was a loud command to him.\n\n\"Father can I speak to you in private,\" Mary whispered in his ear.\n\n\"Of course\u2014later when the others have gone,\" he whispered back. \n\nHe was hoping that she had some doubts about her engagement that he might used to show her how inappropriate a marriage outside her faith would be. \n\n______________________________________\n\n\"Father.\" Mary took a seat in the small office the priest used at the back of the church hall, \"Everything I say, it's like confession?\"\n\n\"Of course my child, but I hope it is nothing bad,\" he said.\n\n\"No\u2014well maybe, you see it's Sti\u2014Robert and sex,\" she said.\n\n\"Has he been pressuring you for sex?\"\n\nA tear dropped across Mary's face as she shook her head no.\n\n\"That's just it Father. As you know, I am a virgin and very inexperienced, but surely a boy should well want to at least...,\" her voice fell off to a whisper.\n\n\"Mary I don't understand what are you trying to say.\"\n\n\"Well, he won't let me touch him\u2014you know down there.\"\n\n\"I'm still confused. Stil doesn't want sex?\"\n\n\"Well, not exactly\u2014I mean I wouldn't be with a boy who did not satisfy me. I don't think any girl would put up with that. When you can go just anywhere and hook up, but Robert will not let me return the favor.\"\n\nNow Father was entirely lost in territory beyond his experience and expertise. Why was it that people expected a man who had taken a vow of celibacy to give sexual advice. \n\n\"I am clearly missing something here. You need to give me more explanation.\"\n\nMary pondered apparently both concerned and embarrassed, but the concern won out.\n\n\"We do a lot of oral. I just love it. I never even contemplated it before I met Stil, ah I mean Robert. He is splendid at that, at least I think so, and he can really use his fingers. But that tongue of his is fantastic, and how he uses his mouth is just so right. He will do it all night if you ask. But he will not let me touch his male parts. They are strictly off limits. It's a no go,\" She looked every bit as embarrassed as the now shocked priest . \n\nFather Dominic was totally adrift. He would never have contemplated such a confession from the chairwoman of his Altar Society. The pretty young virgin who until moments ago he believed to be the epitome of chaste Catholic womanhood had undergone a transformation. More to the point, he knew she had never confessed any sexual indiscretion to him, and her attitude seemed to indicate that she saw nothing wrong in her actions. Evidently she believed, like a former American president, that only intercourse was sex.\n\n\"Perhaps Robert is reluctant to engage in premarital sexual activities. Maybe he sees pleasing you as acceptable, but doesn't think he could contain himself if aroused,\" Father Dominic ventured ,wondering if perhaps Stil was a better man than he had contemplated.\n\n\"Oh, Father if only that were true. That thing of his is rarely at rest. He seems to have a perpetual hard-on. But he won't let me touch it, and I believe there is only one reason,\" Mary said, tears now flowing freely. \n\n\"Mary, you have me at a total loss,\" Father Dominic confessed.\n\n\"Oh, Father can't you see he must be \u2014QUICK\u2014a premature ejaculator.\" She broke down entirely.\n\nFather Dominic knew not what to say. He tried to understand what he was being told but it somehow failed to register.\n\nFinally, he said, \"Mary is that such a bad thing? Sex is only part of marriage and a small part at that.\"\n\nMary looked up and frowned, \"I don't think I am being unreasonable Father. I love Robert with all my heart and soul. BUT, I am a modern woman, and I know what I have a right to expect. A man needs to perform in the bedroom. That's his principle function. Robert is no Alpha Male. He is a shy, quiet person. He is big, and I am told rather strong in some male ways. But let's face it. He is, as the saying, goes pussy whipped. I know I will always wear the pants in our relationship, so to speak. That's fine, I like it, but I still want to be satisfied in bed.\"\n\nFather was totally taken aback by the sentiments expressed by his devout protegee. What could he say in response? It was at that moment he remembered. He reached into the pile of correspondence on his desk and pulled out a stack of fliers he had received and dismissed with little attention to a few days before. They announced the Newman Society sponsorship of a lecture by a noted psychologist who styled himself the LOVE DOCTOR. He was to talk about 'Love, Sex, and the Modern Christian Marriage.' The idea was to encourage young people to defer sex until after marriage, but what now had caught Father's attention was the promise that the talk would cover sexual compatibility and sexual dysfunction. \n\n\"This might be the solution, Mary,\" Father suggested handing her one of the fliers.\n\n\"Do you think Father?\" she asked rather skeptically.\n\n\"Well, he is a professional, and it says here he will be speaking on sexual dysfunctions.\"\n\n\"Yes, you are right,\" Mary said examining the notice \" If I take Robert to this lecture at least it may bring his problem out into the open.\"\n\n\"Good\u2014good and maybe you may learn something Mary that will put things in perspective. I mean, about, the true function and purpose of sex,\" Father concluded grateful to end this unpleasant conversation.\n\n\"Thank you, Father, I knew I was right to ask you,\" she said planting a brief kiss on his cheek.\n\nThree weeks later Mary dragged Stil to the lecture hall where the Love Doctor was to speak. It had not been easy for her. He was not anxious to attend non-compulsory lectures of any sort, but those discussing the issues to be presented that evening were clearly at the bottom of his priority list. He tried every evasive ploy including sudden sickness to no avail. Mary was insistent. She was bound and determined to settle what she now saw as her problem one way or the other. Her fiance was not in her opinion the most manly of men, but he was hers. As with many females, she discounted those attributes that men respect in each other including quiet strength and physical courage. However, to be fair, she did not see these qualities in Robert; only how compliant he was in their relationship.\n\nAs they entered, the room Mary tugged Robert toward the front while he pulled back. They settled in the middle on the left toward the end of the aisle with Mary on the outside boxing Robert in. As they seated themselves Robert look around warily, seeing several former girlfriends.\n\n\"Please God not her,\" he prayed. \n\nHis prayers were either not answered or the answer was 'no.'The tall blond girl from the 'road trip' was sitting front row center. Robert slumped down into the seat and tried to become invisible.\n\n\"Sit up,\" Mary commanded, but there was no way he would, not when the blond girl there. \n\n____________________________\n\nIt was in the early fall of Robert's freshman year. \n\nLarry was a sophomore and rather full of himself. The weather promised a warm Indian summer just perfect for a road trip. He had been chatting up this girl Betty, who was a junior and had a bit of a reputation. To cut straight to it, she had two girlfriends, and they were up for a bit of a break over the Columbus Day weekend. \n\nLarry knew that good old Fred was in, but he had a problem choosing the third male. The problem was the old Econoline van. When Larry's brother joined the Air Force, he left his old merrymaking wagon behind. It was tricked out pretty good as a party van, but it was an old style big commercial Ford Econoline with the horizontal steering wheel and lack of power steering. It drove like what it was- a work truck, and you needed to steer right to go straight. The thing swerved back and forth across the road whenever he or Fred was at the wheel.\n\nThe steering problem on the van was compounded by the fact that Larry had stocked up on plenty of party supplies including beer, and marijuana. The girls were sure to be ready for some real fun, but not for getting stopped by the cops. He needed a driver who could handle that damn van. Looking around the dorm, he could not find a suitable candidate until someone remembered that frosh kid. The big shy one who was trying out for the wrestling team had said he drove a utility company van all summer to get his spending money for the school year. The guy was poor as a church mouse and did not look like the type to be good with girls, but when they put him behind the wheel of that van, he handled her like his long lost love.\n\n\"She's real sweet,\" he said of the E-van, \"She handles just like a small meter truck,\" he said referring to the utility company's vans he drove to install gas meters.\n\n\"Good, so you can handle it.\" Larry was thinking that the girls might be a bit disappointed with the shy freshman, but the smoke and drink would more than make up for that on the drive.\n\nFriday afternoon was sunny and mild. The guys were ready shortly after noon, but the girls were late. It was after three when Betty showed with a girl called Fitzy because her last name was an unpronounceable Polish name and a tall blond girl. Larry had met Fitzy with Betty before. Both girls were big pretty young women, perhaps a bit overweight, but sexy and notably easy as the saying goes. \n\nThe tall blond girl was thinner than her friends, but that was deceptive. She was somewhat taller than the other girls, and she was wearing wedge heel sandals that made her look even taller. Her height detracted a bit from her womanly curves. She was well dressed but seemed to be a bit standoffish with a smile that contained a bit of a self-absorbed smirk. Nonetheless of the three girls, the blond was certainly the prettiest.\n\nAs things broke the blond ended up sitting in the front with the new kid. She did not seem happy about that,but, in fact, no one could blame her. Rob, as they decided to call him looked a bit like a scarecrow. To wrestle that week on the varsity team he had filled in for the man who was in the 184 weight class, a good thirteen pound lighter than his normal 197 weight. He was a handsome young man, but the abrupt weight loss did not enhance his appearance. When added to his status as a shy freshman it made him a clear third choice among the boys. \n\nRob and the blond rode in virtual silence. After about ten minutes the first joint was lit and passed around. Fitzy made sure the blond got her share, and the van occupants got happy. The blond offered the joint to Rob, who begged off while he was driving. In fact, he had never even smelled pot before. They stopped for dinner at a roadside diner. Eating took way too long due to the laid back feelings of the group. They pressed on arriving about 9 p.m. at the first day's stop, a youth hostel out on old Route 5 West. Rob handled the check in after pulling the van off to the side and rear of the property, an old Victorian house with two out buildings. A thirties something couple received the ten dollars a head fee and explained that because of the holiday weekend they were almost full, but still had space in the truck barn. It turned out to be a kind of garage with work vehicles in the front and a tool and storage room in the back. The girls were set with their sleeping bags in the back room while the boys bedded down in the front. The couple who ran the place, saw everyone settled in for the night. The woman showed the girls how to throw the latch on the door locking the boys away from the back part of the building.\n\nNo sooner had the man and his wife returned to the main house then a loud click followed by a squeak announced the back room door being opened. The invitation was clear, and Larry was the first to move followed by Fred. Rob was well in the rear. When they reached the backroom, it was pitch black. A hand reached up and pulled Rob down. The flap on the girl's sleeping bag was pulled open, and the body within was warm. She soon had Rob out of his clothing, and the touch of her skin to his was electric.\n\nHe had never had so much as a makeout session with a female before and now he was bare chest to bare chest with a real live girl. She was kissing him so hard that she seemed to want to pull out his tonsils. Should he tell her, they had already been removed? It struck him as odd that on touching her breasts, he could feel the hard nubs of her nipples. He had not expected that. He was soon sucking them with a tender ferocity as she moaned out her pleasure. He decided she was a wonderous creature as he explored her body with his hands and mouth.\n\nHis touch was like feathers on her skin. It tickled making her laugh and enticed her arousal. Around them, she could hear the sound of the other in the throes of their passions. It made her all the more excited to know what was going on about them. Rob, however, was too fascinated with her body to notice what was happening elsewhere it the room. When his hand reached the slit between her legs, she let out a loud satisfied moan that produced giggles in the darkness from her friends. She reached down between his legs finding him hard and his erection hot enough to burn her fingers. She backed off, not wanting to end things too soon. When she knew, she was ready, \n\nshe whispered, \"Put it in.\" \n\nHe did not understand for a moment as he was lost in the fascination of what was between her legs, a new unknown territory. \n\n\"Please put it in,\" she said firmly pulling on his organ.\n\nRealizing her desire he awkwardly tried to enter her. He missed the target by a wide margin, so she had to help get him on the right track. As he thrust into her, she let out a scream that sparked renewed giggles. A moan escaped his lips as the heat and tightness of her vagina enveloped him. He could hardly breathe as his heart pounded in his chest. He moved back and forth, the sensation more incredible than he would have believed possible. She twisted and turned beneath him in the throes of a powerful arousal. Then she shuddered gave a little cry and went limp. Her vagina lost its tightness, and he stopped fearing the worst that somehow he had hurt her.\n\n\"Don't stop love-keep going\u2014you can come in me-had my pill I'm safe,\" she pleaded.\n\nIt was only then in that frightening second he realized he was expected to cum. He picked up his efforts pushing hard and fast. The room around them was quiet now; the others had finished some time before. He pumped her hard, and she tightened again. As he started to feel it she screamed and once more went limp. Again he dropped back and started over. Once again, he got her going only to have her shudder before he was ready. He was very nervous now fearing an imminent failure to perform. ",
        "\"What's wrong,\" she whispered, \"don't you like me?\"\n\nWhat could he say? \"It just takes me a while.\"\n\nAs he started again, a loud car horn sounded. Some other travelers were seeking admittance. \n\n\"Jesus, time to go,\" someone said in the dark and Rob scrambled for his clothing. They made it back to the front as the door opened to admit the new guests that ended the night's fun. In the morning, Larry was dressed and out front early as Fred returned from his turn at the showers.\n\n\"So who were you with last night?\" Larry asked Fred.\n\nFred shrugged \"Don't know. It was awful dark, and we didn't talk.\"\n\n\"Shit, I was hoping you knew so I could eliminate someone.\"\n\n\"You don't know?\"\n\n\"Of course not. It was darker than a witch's heart.\"\n\nJust then, Rob appeared, and they confronted him about who he was with the night before. Determining that like them he did not know, Larry thought and then had an idea.\n\n\"Look we play it cool, and when the girls come out to get in the truck, we see who they link up with. We don't let on we don't know. Let them tell us that way so they can't get mad.\" Larry was always the one working the angles.\n\nA problem immediately arose when the girls stayed close together and did not look at the boys. They hustled themselves into the back of the truck without so much as a good morning. As the group drove out to find a breakfast place, things were pretty tense in the van.\n\nThey reached a small diner right before the interstate and stopped to eat. The girls were first out of the truck staying firmly in a group. As they hustled themselves into the diner, the boys followed in total perplexity. Then Larry began to laugh.\n\n\"What's so funny?\" Fred asked.\n\n\"Don't you get it?\" Larry asked.\n\n\"No,\" Fred replied.\n\n\"They have no idea either. They don't know who they were with any more than we do,\" Larry said as he and Fred began to laugh at the odd predicament. \n\nRob was not laughing. He was breathing a sigh of relief. If the girls did not know who had been their partner his abject failure to perform would remain unknown. He only had to perform better next time. 'Think positive' he told himself 'you can do it.'\n\nThings loosened up after breakfast when the girls adjourned to the restroom. They were gone a very long time, but when they came back, they chose partners as they headed back to the truck. The blond girl was once again with Rob but seemed even less happy about it than yesterday. They soon hit the Six Flags amusement park to spend the day. They would spend that evening in a motel and go camping at the State Park the next day. The group would head back to campus the following day in the afternoon.\n\nThey were rather tired when they reached the motel after a day at the amusement park. They had two rooms, ostensibly one for the guys and one for the gals, but, in fact, one couple each in the rooms and the third in the van. As luck would have it, the blond drew the second room and with a sigh dragged Rob off to it.\n\nAs they entered the motel room, Rob could feel his anxiety level increasing.\n\nThe tall blond girl said, \"I need a shower,\" heading toward the bathroom.\n\n\"Well, are you coming?\" she asked.\n\nIn the bathroom, she began undressing before noticing his hesitation. She gave a sigh and began undressing him.\n\n\"I can do that,\" he said.\n\n\"Well, do it then.\"\n\nShe started the shower and dragged him in. He was hard the instant she touched him, and she sighed again; \"You are quick\u2014aren't you?\"\n\nWhen they had showered and dried off, she took him to bed.\n\n\"NOW,\" she said, \"we don't want a repeat of last night\u2014so I am going to teach you to please a girl with your mouth,\" she said laying back.\n\n\"Now get down between my legs,\" she said spreading her knees wide exposing her vulva to his view.\n\nRob was transfixed. The evening before he had been down there in the dark, but now the room lights were on and he \"could see everything.\"\n\n\"Wow, you are fascinating,\" he said\n\n\"What-\u2014\"\n\nThe blond girl's words were cut off. Rob had begun licking from her right knee to the point where her legs intersected until his mouth covered her sex in a soft kiss.\n\n\"OOOH...\" she moaned.\n\nHis tongue fluttered like the wing of a butterfly. He explored her with the lightest of touches so as not to hurt what he perceived as her delicate bud. But he could not hold himself back from tasting her. His tongue took on a life of its own, running the length of her lower lips exploring every crevice until with a gentle flick he stroked her clit now a hot red appendage. \n\nShe grabbed his head forced him hard into her. His lips encased the little bloom of her sex and began to suck. She screamed, bucked like a bronco, and collapsed.\n\n\"You bastard, you've done that before,\" she said.\n\n\"Done what?\" he said.\n\n\"Given head of a course\u2014I think you ruined me, I won't believe that is new to you, My God you have an erotic mouth.\" \n\nIn a moment, she reached down and finding him hard said, \"Ok your turn.\"\n\nReceiving only a perplexed look in response, she pulled him over on top of her.\n\n\"Come on fuck me, do it hard go as long as you can; it's your turn,\" she said.\n\nWith a little help, he entered her she could feel how hard he was. She was loose,shattered by her mind-blowing orgasm. He began to push in and out with abandon. He was feeling sensations that until the night before he could only imagine. He could feel her begin to tighten around him as her arousal increased. Soon she was gripping him like a vice sending pleasure pulsing through his body.\n\nIn the back of his brain a nagging voice kept saying \"relax let it go, you can do this,\" which was, of course, why he could not.\n\nThe blond girl began to scream, \"Oh yes FUCK ME, FUCK ME!\"\n\nToo late he realized that she was there again. He had a suddenly limp female body beneath his. Her blue eyes stared up at him, her look one of perplexity. \n\n\"You are not the boy I was with last night,\" she said shifting up onto her elbows, \"You're the one who did not cum.\"\n\nHe began to pull away, but she grabbed him. \n\n\"Oh no, you don't, I have a reputation to protect. I don't leave guys unsatisfied.\" \n\nThen she eased him onto his back and began a slow, deliberate assault on his manhood. She began with her mouth and tongue licking his cock like a Popsicle before swallowing it. All the while maintaining eye contact and making the appropriate slurping and suggestive sounds. \n\nWith a smugly confident smile she mounted his erection brought his hands to her breasts and said:\n\n\"Now I'm going to fuck you inside out.\"\n\nForty minutes and three of her orgasms later he had still not cum. \n\n\"Does it always take this long?\" she asked.\n\nHe shrugged a reply, \"Don't know. Last night was my first time.\"\n\n\"Oh my god, you're a virgin. I feel a proper cow,\" she said.\n\nThen laughing \"Betty will be so mad I stole her virgin, and he is this incredible fuck, I wonder if she got Mr. Quick.\"\n\n\"What?\"\n\n\"The guy I was with last night was fast\u2014you know quick premature,\" she said but could see a total lack of comprehension in her innocent bed mate, \n\n\"He came too fast for a girl to get off. We thought it was you. Betty wanted the guy she was with the night before because he went a long time. Get it?\" \n\nRob only partly followed. He was trying real hard to ejaculate, but it was not happening. \n\n\"So when you masturbate how long does it take? You do masturbate right?\" \n\n\"I don't know -maybe an hour.\"\n\n\"My god, Betty is going to be so mad.\"\n\nThey fell asleep that night locked in a passionate embrace still coupled. In the morning, she was back at it determined to bring him off. They were interrupted by the pounding and Betty shouting at the door. \n\n\"Go take a shower,\" she said.\n\nWhen he was in the bathroom, she put on her robe and answered the door. Betty briskly entered followed by Fitzy.\n\n\"What have you done with him?\" Betty demanded.\n\n\"If you are referring to Rob, he is in the shower.\"\n\nBetty walked over to the unmade bed looked down to the big wet spot at its center.\n\n\"Did you fuck all night?\" Betty asked.\n\n\"Pretty much,\" the blond girl said sitting on the corner of the bed. \n\n\"Well, how was it?\" Betty asked.\n\n\"Interesting.\"\n\n\"What does that mean?\"\n\n\"Different, kind of special, You were his first you know.\"\n\n\"What?\"\n\n\"He's pretty much a virgin or was.\"\n\n\"Well, I'll be, you guys took his cherry,\" Fitzy said.\n\n\"Did the earth move when he came?\" Betty asked.\n\nSilence.\n\n\"Well, we're waiting.\"\n\n\"Well, he didn't exactly cum.\"\n\n\"What does that mean?\"\n\n\"He's a bit slow.\"\n\n\"Slow?\"\n\n\"Glacial, but his mouth is a national treasure.\"\n\n\"Tha'ws it we're swapping, After all, I had him first.\"\n\n\"No way, you insisted on the pairing. There is no way I am giving up the perpetual cock for a half minute man,\" the blond said, \"And now if you will excuse me I have a shower to take.\"\n\n_______________________\n\nAround ten a.m they arrived at the campground, pulling into a parking area, they walked up a trail until they reached a small campsite. They had two tents and a canvas lean-to. The blond girl grabbed the lean-to and Rob before continuing up the trail to a little clearing overlooking a small pond. There between two trees, they spread the lean-to and put the sleeping bags beneath it.\n\nShe wasted no time undressing and pushing Rob down on the sleeping bags. \n\n\"We are going to resolve this,\" she said pulling his erection into her vagina.\n\nAbout an hour later she was aggressively riding his cock when a twig snapped behind them, and Betty and Fitz arrived in their bathing suits. \n\n\"What do you want?\" the blond asked.\n\n\"Our turn,\" Betty announced. \n\n\"Where are Fred and Mr. Quick?\" Blonde asked.\n\n\"We fucked them and then sent them to look for some wine. We said we were tired of beer.\" \n\n\"Where will they find wine around here?\" the blond asked.\n\n\"Hopefully a long way away. Now get off and give someone else a turn,\" Betty said giving the blond girl a shove.\n\nWith that, they switched places. The rotation began as each girl took a turn at bringing off Rob's cock which remained stubbornly hard and arid while the slots it filled became wetter, tighter, and determined. \n\nIt was a contest the boy could only win by losing and with three such experienced young ladies in the saddle the inevitable happened. As the tall blond seated herself for her third ride of the day, she gripped down hard on his nipples and shoved her tits in his face. She rode him hard and was rewarded with an orgasm as his body gave up the fluid it had been so assiduously holding back. \n\n\"Now that was good wasn't it.\" The tall blond said looking down into his frightened blue eyes. \n\nThe van horn blared as Larry and Fred returned having managed to find a jug of Catawba wine\n\nBetty and Fitzy wearily rejoined their partners. The blond suggested a dip in the pond and as they splashed into the water she noticed Rob was still as hard as ever.\n\n\"My god, you are still ready to go,\" she said shaking her head in amazement.\n\nRob could only blush and stammer that,\" he took a while to go down.\"\n\n\"Well, that's why we will call you STIL for still hard,\" she said.\n\n____________________________________________________\n\nThe name Stil stuck, and the story grew as these things do. In another age, it might have remained just a story. But times and the relationship between the sexes had changed. Stil represented a challenge that the University's co-eds felt must be met. There were those who claimed they could scale Everest alone and those who brought assistance. But try they all did except the most timid until Rob, now known universally as Stil, sought refuge in the darkest corners and most obscure locations the University had to offer. \n\nIt was in one of these obscure and lonely places that Mary found him. She vaguely recognized him as one of those oversized young men who policed the most disreputable of the college bars. But then she stumbled on him by the lake on a quiet bench reading. He was big and attractive with the kind of sweet face that said despite his size he was more teddy than bear.\n\nSitting down on his isolated bench, Mary soon discovered that he was shy and frightened of girls. Mary had been away student teaching the last semester and had no close friends on campus at the moment. She was entirely ignorant of the stories about Stil or Rob as he called himself. Mary took it very slow at first without success.\n\nMary was a virgin, but no novice to the game. Rather she played it very well while keeping her legs closed waiting for Mr. Right. Early on she discovered Robert, as she called him, was a bit obtuse. She indicated where she could be found on an evening only to arrive at the location to find no Robert to hook up with. When she asked his plans, he never had any. Mary was not a girl to be thwarted, and the answer was simple. She told Robert where to go so she could pick him up.\n\nThe first time they had sex or rather Stil performed sex on her she had expected inexperience. What she got was a lover with oral skills equal parts talent and training. Mary had the benefit of Robert's University training and his natural ability. Most surprising was the fact there was no post cunnilingus argument about what she was expected to do in return. Rob pleased her and she was satisfied at first that this seemed ideal and then too good to be true. \n\n_______________________________\n\nMary shifted in her seat. The Love Doctor was droning on about the need to defer sex until marriage and that the reason for sex must be primarily procreation. \"When was he getting to the good stuff?\"\n\n\"Sit up,\" she said to Rob for the tenth time as the Doctor reached the sexual incompatibility part of his talk.\n\nThe Love Doctor spoke briefly about the fallacy of individuals being sexually incompatible.\n\n\"You don't need a sexual trial. Marriage is for the long term you will have all the time you need after the wedding to work out the differences.\" \n\n\"If he's too quick at first, this may resolve itself naturally and if not there are techniques that you both can use. Oh and by the way there are men who are a bit slow too, but I haven't heard any complaints about that.\"\n\nThe Love Doctor was ready to pass on in his lecture to another topic \"Venereal disease. However, before he could get there, Mary had some questions. Before the brunette could rise to interrupt the speaker, a tall blond girl was up.\n\n\"But what if he is really slow?\" she said.\n\n\"What?\" the Doctor said\n\n\"I asked what if the guy is so slow he can wear out three girls and STILL be hard?\" the tall blond said at which some low giggles could be heard from the audience.\n\n\"Well, that slow would be unheard of...\" the Doctor replied.\n\n\"Still if the boy is that way! you would agree that a girl, particularly one of limited experience, would not want to find this out on her wedding night,\" the tall blond said turning to look into the audience.\n\n\"Now I think that concern is nothing any here need worry about.\"\n\n\"I still think that it is a concern. I mean it is damn frustrating to be done and have him STILL up and ready. A girl could come to doubt herself if she didn't know,\" the tall blond said as the laughter began to ripple along with a murmur that sounded like \"Stil\" passing through the audience.\n\nThe Love Doctor sensed he was losing the audience and tried to recover.\n\n\"I am firmly of the opinion that in marriage these problems can be resolved by love and understanding between the partners.\"\n\n\"Oh, BUT STIL would you not want to know first,\" she said.\n\n\"Well yes, I suppose if there was a real problem,\" the Doctor responded.\n\n\"Well, S T I L it is a problem that you need to know.\"\n\nNow everyone was looking to where Mary sat next to the boy they called Stil who was as low in his seat as he could get. Her big brown eyes grew wider as she looked down at her fiance. At that moment, she understood what was being said. Mary rose to her feet.\n\nThe Love Doctor, realizing that he had completely lost his audience to some hidden discourse, jumped to call upon the pretty dark haired girl. \n\nMary cleared her throat, \" I believe that if you love someone, you can work out any problem. BUT only if that person is honest with you,\" as she said the last statement Mary reached down and took Stil's hand pulling him upright in his seat for the first time that evening.\n\nGeneral applause broke out. Some did not even know what they were applauding. The tall blond girl sat down, and order was restored. The good Doctor finished his lecture and hurriedly departed for his next venue.\n\n_____________________________________________________\n\nThe Newman Center put on a bit of refreshment after the lecture. It was decidedly modest, just cookies and punch, but a good size crowd did attend. When Father Dominic saw Mary with her arm firmly entwined with her fiance Robert's. the priest immediately made his way toward the happy couple.\n\n\"Well, Mary did the lecture solve your problem?\" Father asked.\n\n\"Well, it certainly identified it, and Stil and I will be working out the solution starting tonight.\" she said.\n\n\"But Mary I hope that does not mean you would be engaging in pre-marital sex.\"\n\n\"Of course, it does, I have no intention of going to my wedding night with my questions unresolved.\"\n\n\"But what about what the Love Doctor said?\"\n\n\"Well, just what I told you. A girl need to work these things out,\" she said with a smile and a wink as she pulled an embarrassed looking Stil toward the exit.\n\nFather Dominic watched the couple go and as he did his eyes met those of a tall blond girl, who smirked at him. The priest realized at that moment that perhaps he needed to review his opinion of the male student body. Perhaps he had been preaching to the wrong sex."
    ],
    "authorname": "RichardGerald",
    "tags": [
        "sexual inadequacy",
        "confusion",
        "virginity",
        "religion",
        "doubt",
        "growing up"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-priest-and-the-love-doctor"
}