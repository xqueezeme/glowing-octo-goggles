{
    "title": "When Love Takes Over Ch. 08",
    "pages": [
        "The next couple of months flowed on smoothly enough. In addition to the items I brought back from New Orleans, I bought and scavenged enough other things to fully furnish the house. I had planned to keep everything minimal, but Chance insisted that I had to at least get a tv and a sofa for the living area. We had discovered a shared passion for Game of Thrones, and Miss Pauline refused to \"have that trash playing in my house,\" so we had started getting together regularly to watch DVDs of the past seasons.\n\nI caved, though I knew I would miss watching tv on my laptop with the two of us piled on my bed, and bought a large comfortable linen slipcovered sofa, the kind you lounge in instead of sit, with a large matching ottoman to use as a coffee table. To tie them into the two leather chairs that completed the seating area, I ordered a couple of brown and white cowhide rugs. \n\nAs much as Chance enjoyed the new sofa, he did have to pay for it, a bit. I had the large flat screen mounted on the wall, but wanted a piece of furniture to go under it. The perfect piece was a really large rustic work bench I found in one of Dad's sheds. After I realized it wasn't built in, I insisted on moving that into the living room. It was big and heavy, and a massive bitch to move. In fact moving it was such a pain, that the normally unflappable Chance complained every step of the way, though that was partly due to the large splinter he managed to immediately get embedded in his palm, swiftly followed by two more. Though, once everything was in place, and I had nursed his hand, he sulkily admitted that the room look nice.\n\nI also gathered an assortment of mismatched chairs from various thrift, consignment, and antique stores to put around my long table. Painting them all a glossy tobacco brown united them . And even though I couldn't imagine who would be using the guest room, I bought a mattress for my upholstered bed along with a couple of simple nightstands.\n\nIn addition to my purchases, I slowly made simple window treatments for all the room out of the same unbleached cotton as the ones in my bedroom. I was also painting a lot pictures; Donna was still selling the pieces I shipped to her regularly at the boutique on Magazine Street, and I had the empty walls of the house to filll. I enjoyed painting, it's true, and especially enjoyed having the time to devote to it. \n\nMy passion was still interior design, though, and now that my own retreat was finished, I started to look for a way to feed that passion. Luckily, through the years I had stayed on very good terms with the decorator in Russville who had been my first boss. Her business had grown since I left, and she was swamped. When she learned I was still in town and had nothing to do, she happily hired me on a consulting basis to deal with various small projects that were overloading her current staff.\n\nSo my weeks passed with trips to church and Sunday lunch with the Bruces, watching Game of Thrones with Chance, painting in my studio, and driving into Russville a couple of days a week to do design work. I also found myself drawn into the happenings of my own little country community. As the spring wore on, there were special Easter services at the church, banquets at the school that I was asked to play for, the senior play at the high school to attend. It felt nice being part of a small town community again, that whole idea of everybody knowing your name.\n\nAnd in my spare time, I spent a lot of time with Chance, helping him on the farm. He had plans to eventually do large scale organic farming, including raising livestock. So we had a large task ahead in repairing the fence rows and the various outbuildings and sheds that had been neglected since his father's death 10 years before. But more than just growing food, some of which he hoped to sell to restaurants in Monroe and Shreveport, he planned to eventually launch a catering company specializing in organic, locally grown food. \n\n\"It's too bad Dad only built these open sheds,\" he said one day as we were sitting around drinking a hard earned beer after a day of labor. \"There's none I can easily turn into a catering kitchen. I'm going to have to start from scratch. Something like your father's shop wouldn't be that big of a deal to convert. It's got a concrete floor, it's completely enclosed in good shape, already electrified--It wouldn't be a big deal to insulate, finish the inside. And since it doesn't matter what it looks like, running the water wouldn't be a big deal, either.\"\n\n\"I know I've enjoyed using it as painting studio.\"\n\n\"How's the painting going?\"\n\n\"Fine. The funny thing is, I always thought what I really wanted to be was an artist, but now that I have so much time I could use to paint, I don't really. I guess, even though I'm lucky enough to sell some of my work, it's more of a hobby than a great passion.\"\n\n\"Well, I think most people aren't very good at deciding what they really want and what makes them happy. But, for what it's worth, I think you're really good. That big one you brought back from New Orleans...that is really beautiful.\"\n\n\"Stop,\" I said, \"you'll make me blush.\"\n\nLive continued on that way, small design jobs here and there, a bit of painting, hanging out with Chance. Entreaties from Ben to come back to New Orleans and work for his firm. Calls from Patrick checking up on me and telling me tales about his life in New York. Trips to the library and to the Piggly Wiggly. Every now and then phone calls from Reed. Walks in the woods and work out with Chance. I was enjoying life and felt, well, I guess \"healed\" is the best word I could use. But I still had a sense of pressure, of dread. My self-imposed deadline of making a decision about my future by fall was coming, and I was still uncertain of what I wanted to do.\n\nMy trip to New Orleans had been a reminder of how much I loved that city, and I knew I could easily slip back into a life there. But what kind? Being single in sin city didn't really appeal to me, and I wasn't ready for my old life with Reed. Patrick kept offering help to find me a job in New York, but I was hesitant. I loved visiting New York, but wasn't sure I could live there. Dallas and Atlanta were other options, but neither city excited me. I toyed with some time in Europe (assuming the buyout was a lucrative as it seemed it could be), but couldn't convince myself that it was practical.\n\nI actually was having a very pleasant time here in Terry, living in the country, puttering around, but I was afraid that I was wasting my time; that I was coasting. And as a gay man nearing 40, the thought of wasting time terrified me. Days were good, and I could fill them with activity, but at night, I lay awake and these thoughts kept circling.\n\nOne night toward the end of May, Chance and I sat outside my house in a couple of Adirondack chairs sipping beer and enjoying the warm evening. The jasmine was blooming, and the gentle wind kept bringing the sweet fragrance to us. We had watched a movie, and Chance and I had cooked fish tacos with some fresh fish he had caught earlier that morning. That was one cooking skill I was able to teach the master; I could make fresh tortillas with the best of them.\n\nNow, replete, we sat around shooting the breeze. I knew he had passed through town earlier, so I pressed him for the gossip.\n\n\"So what's the big scoop in Terry?\"\n\n\"Well, I guess the only real news is that the high school is going to cancel prom this year.\"\n\n\"Shit,\" I said. \"That's a shame. Why?\"\n\n\"Apparently they were doing some repair work in the gym, and they found black mold. They have to do some major work before they can use it again, and nobody, including the students, really wants to do a banquet in the cafeteria instead.\"\n\n\"There's no place else?\"\n\n\"The only place in town that's big enough is the Baptist rec center, and you know how Baptist's feel about dancing. And what's a prom without dancing?\"\n\n\"True. What about Russville? It's only 30 minutes away. Surely they have a place.\"\n\n\"Not enough money to rent.\"\n\n\"That is a shame,\" I said. \"I loved prom, especially junior year.\"\n\n\"Really?\"\n\n\"It was amazing. Too bad you had already graduated. I was president of the junior class, and I cracked a whip over those people. Every student had to raise at least $5 per week selling Rice Krispy treats at recess. We raised thousands. We even hired a D.J. from a Monroe radio station.\"\n\n\"Wow. I didn't go to senior prom, but our junior one was lame.\"\n\nI was so wrapped up in my memories, that I barely registered Chance. \"It was beautiful. I only have two regrets.\"\n\nAfter he waited a minute, and I didn't continue, being so wrapped up in remembering that night, Chance prompted, \"And your regrets are?\"\n\n\"One, I'm jealous of those kids who can take who they want to prom. I mean I liked my date, and we had fun, but I regret I didn't get to take a cute boy and dance with him and maybe, just maybe, kiss him.\" I sighed. I was happy for today's teens, but I was sometimes jealous of their openness and opportunities.\n\n\"What's the other one?\"\n\n\"It's stupid.\"\n\n\"Come on,\" he said impatiently.\n\n\"Remember Footloose?\"\n\n\"Of course.\"\n\n\"Well, I wanted to make a splash like Kevin Bacon, so I practised for months sliding on my knees across the floor. At the right moment, I was going to take a running start and slide from one end of the gym to the other.\"\n\n\"What happened? Did you choke?\"\n\n\"No, actually. In fact, it was pretty amazing and I made a real impression. The problem is that I didn't consider the impact of friction on polyester pants, and I burned a hole through the knees on both legs. I had to pay for the pants and try to explain to my father what happened.\"\n\nChance was laughing so hard he could barely get his next question out. \"What did you tell him?\"\n\n\"That I fell in the parking lot.\"\n\n\"Did he believe you?\"\n\n\"I'm not sure a purist would describe what he felt as belief, but he didn't push it.\"\n\nAfter a minute, I said, \"Too bad we don't have a mill around here.\"\n\n\"A mill?\"\n\n\"Yeah. Remember in Footloose, when the school won't let them have a prom, the mill owner lets them have it there. They hang the lights and the stars from the ceiling, and it's all very urban cowboy chic.\"\n\nSuddenly, Chance sat upright, a look on intense thought on his face. He got up and headed toward the large shed, the one that used to house most of dad's equipment. It was big, and almost empty now except for the one small tractor I had kept and the other mowing equipment. The floor was dirt, but packed hard from years of use. I followed him, curious.\n\n\"What about here?\" he said, turning toward me, excited.\n\n\"What are you talking about?\"\n\n\"Why not have the dance here? This shed is huge, there's only about 60 students in the two classes; even with dates from other schools, there's plenty of room. It could be like a barn dance. You know,\" he said, parroting my words, \"'very urban cowboy chic.'\"\n\nI opened my mouth to protest, but thought better of it. Why not? I did love a party and a challenge, and my mind was immediately swirling with ways to make this happen. Nothing like a project to take my mind off its troubles, and I did sincerely feel bad for students deprived of a prom night.\n\n\"I can see it. We can run white christmas lights from the shed to the shop. I can order those large battery operated white Chinese paper lanterns and hang them all over from the ceiling. We can clear out the carport and set the food up there, And we can put tables out in front of the shed.\" And, I added, \"Pray it doesn't rain that night.\"\n\n\"I'll put Mom and Miss Lenora on the prayer detail,\" Chance said. \n\nOf course everything is always easier said than done, and it took a lot of coordination to make it happen. We had to get permission from the principal and the parish school board to hold a prom off-campus, though neither meeting was quite as daunting as having to formally meet with the presidents of the junior and senior classes of Terry high, who also happened to be the co-captains of the cheerleading team. They were approximately 5 feet tall, blonde, and completely terrifying. They took their responsibilities seriously, and after the meeting where they both asked questions that I had never considered, I felt drained and Chance was visibly shaken. But in the end, it all worked out, and we were granted permission to host the prom.\n\nAfter having my decoration ideas approved by the class presidents and the prom committee, they turned over the money earmarked for decorations. It was a paltry amount, and I felt a bit defeated for a moment. But then I remembered Reed had made a point of our business donating to worthy causes, and I decided to see if there was still money available to be allocated to Terry High. After his initial amusement at the idea of me hosting a prom in a barn ala Footloose, he assured me that he would be happy for the company to donate. \"Will $3,500 be okay?\" he asked. Considering that was $3,000 more than the current budget, I assured him that would be okay. In fact, I knew that I would only need a portion of that and would make sure the remainder would be allocated toward something else the high school needed.\n\nAfter that, everything fell into place. To eliminate parking issues and to maintain some control over the students' coming and going, the school decided to shuttle them from the campus to the party in school buses and to set the hours from 8 to 11:30.\n\nThe community jumped in to volunteer, and I lead groups of women in stripping magnolia trees of their leaves and weaving large garlands I planned to wrap the shed supports and to frame the carport opening. After they were in place, we threaded them through with white lights as well as grapevine sprayed white to stand out against the glossy leaves. A local farmer loaned us small square hay bales for seating that we arranged around the perimeter of the shed; to protect the girls' party dresses, the community ladies and I sewed covers made out of drop cloths, gathered at the ends with burlap ribbons and greenery.\n\nThe day of the prom was insanity. The seniors had been given that Friday off to work on decorations, and and what seemed like dozens of them swarmed the place, hanging the paper lanterns in the sheds and trees, filling the white paper bags with sand and battery operated candles that would line the path from the carport to the shed, hanging the Christmas lights and garland.\n\nWhile that was happening, volunteers were setting up tables and folding chairs in the space between the shed and shop. I had tons of pea gravel delivered to create a smooth surface there and down the driveway. I had planned on doing this for awhile and considered it my contribution to the prom. While this was going on, the garden club began arriving with buckets of flowers and greenery cut from lawns and gardens all over the country side. Meanwhile, Chance was co-ordinating the cooking efforts, having commandeered my kitchen, and covered dishes, cakes, and casseroles kept arriving at an astonishing rate. All the while, we kept glancing anxiously up at the sky, but it kept on clear and blue, and the temperature was remarkably cool for May.\n\nThere were times I thought we would never make it, but by 6 pm, when the last of the students and volunteers had left, everything looked amazing. The chaperones and parents who had volunteered to help would be back by 7 or so to start putting the food out, and the d.j. was due about the same time, but now I had the chance to walk around admiring the results of everybody's hard work before I got dressed. \n\nEven with the sun still up, the white Chinese lanterns glowed as they bobbed gently in the breeze, and the smell of the many bouquets filled the air. The shed really did look like a Hollywood set with the covered hay bales, the stars and lanterns hanging from the ceiling, and the magnolia garland. I was standing admiring it all, when a car turned in. Surprised I walked toward it. I was even more surprised when I noticed it was from the local florist.\n\n\"Mr. Watson?\" the driver asked, getting out with a small box.\n\n\"Yes.\"\n\n\"This is for you. Thanks,\" he said, pocketing the tip I managed to give him through my confusion.\n\nIt was a clear plastic box with an fuschia orchid boutonniere. \"To my favorite prom queen. Love, Reed\" read the card. Smiling I went inside to dress. I had thought about wearing a tux, but mine was buried in a warehouse, and I hadn't wanted it enough to ask Reed to dig it out and mail it to me, and I didn't want to rent one. I had, when cleaning out Dad's closet, kept a few of his older clothes, like the gray flannel suit he had been married in and his navy leather and suede jacket that I always remembered him wearing on special occasions. My father had been, in his youth, something of a dandy. His taste, though, was questionable, and in addition to his gray suit and navy jacket, his wardrobe had included such gems as a white polyester three piece suit straight off the set of Saturday Night Fever. \n\nIt was in perfect condition; in fact, I don't ever remember him wearing it, and am pretty sure my mother had probably refused to be seen in public with him if he wore it. It was too fantastic to get rid of, though, and since my weight loss, it fit perfectly. I decided to wear that, finishing it off with a navy satin shirt and matching tie I found online. Actually, I had to admit looking in the mirror, I didn't look bad. With the longer hair, beard, and white suit, I kind of looked like an Allman brother going to the Grammies in the 1970s. While I was still admiring myself, the bell rang.\n\nI opened it; it was Chance, as I expected it to be. What I didn't expect to see was the hottest man in the parish standing there in his Navy whites. I'm pretty sure I whimpered. I hadn't really thought about what he would be wearing, but I wasn't expecting this.\n\n\"Nice suit,\" he said as I stood there silently. \"Can I come in?\"\n\nThe spell broke, and instead of a god, it was just my friend Chance again. \"Of course,\" I said opening the door and moving out his way.\n\n\"Since you're kind of my date,\" he said shyly, \"This is for you.\" He held out a plastic box, which contained a red rose boutonniere.\n\nI was shocked, and suddenly my friend was gone, and again I was in the presence of someone I didn't recognize. I stood there silently as he pinned it to my lapel, and then stepped back and smiled. I hadn't expected this, and I felt awful for not getting him one, and then inspiration struck. \n\n\"Just a minute,' I said, and ran to grab the orchid from the fridge. Luckily I had already removed the card; I did feel awful for a moment giving away such a thoughtful gift, but when I saw Chance's face light up when he saw the box, I squashed those thoughts. If I could do anything to make him look like that, I would. He kept looking down at my with a smile as I pinned it to his jacket, and I felt as nervous as a kid on my first date. I hadn't expected anything like this, and didn't know how to respond. I was actually relieved when the doorbell rang just as I was finishing.\n\nAfter that, the night was a blur. There were the sorts of party duties hosts always have; in addition, I had so many people, students, teachers, and volunteers thanking me, that I began to regret my decision to help. But in all honesty, I was thrilled. It was a perfect night, the weather temperate with a gentle breeze. As the night fell, the lights glowed, and the kids looked so happy. And being so far from other houses, the music could be as loud as possible. I didn't see any same sex couples on the floor, not that I expected to, but I did see a couple of boys emerge from the darkness behind the shed looking a bit disheveled and very happy and glanced over at Chance to see that they had also caught his eye. He smiled at me and briefly grabbed my hand and squeezed it.",
        "The last students climbed into the bus promptly at 11:30, and by midnight, the volunteers had cleaned up as much as possible and left. The christmas lights were unplugged, but we left on the Chinese lanterns, deeming it too late to be climbing up ladders to turn them off. They could burn until morning when the next phase of cleanup was planned. Chance and I sat in the shed; by then he had removed his jacket, but he had insisted on transferring his orchid to his wife beater. He had also lost the shoes and was barefoot. I had lost my shoes, vest, jacket, tie, and my sleeves were rolled up and several buttons were undone.\n\nChance had brought out his stash, two chilled bottles of Boone's Farm Strawberry Hill. \"It's not prom night without Strawberry Hill,\" he had said, pulling out the bottles. \"If memory serves me correctly, that was your high school drink of choice.\"\n\n\"You are correct, sir,\" I said unscrewing the bottle. Taking a tentative sip, I wondered how I had managed to drink the stuff. Surprisingly after a few more sips, it wasn't that bad, and was soon going down easily.\n\nWe had been listening to music as we cleaned up, and now, Chance went over and fiddled with his ipad. Suddenly the music switched, and the opening notes of David Guetta's \"When Love Takes Over\" filled the shed.\n\n\"I love that song,\" I said as he walked over.\n\n\"So do I.\" He held out his hand. \"All the cute boys are gone, but if you don't mind an old sailor, you can still have a dance.\"\n\nHe pulled me up, and we started dancing. He was good, spinning and twirling me, but at one point, after he had spun me back to him, he pulled me close, and his arms wrapped around me. He was just enough taller than me that my head fit naturally on his shoulder, and we stood there, with our arms around each swaying to the music.\n\nI'm not sure how long we danced or to how many songs, but eventually I realized Adele was singing and he was singing along with her, off-key, the chorus to \"Make You Feel My Love.\" I pulled back a bit and looked up. Something passed through those amazing aqua eyes, and he was leaning down and kissing me.\n\nIt was a soft kiss, a sweet kiss, an innocent kiss. The kind of kiss a gay boy dreams about his first kiss being like. And I responded. Soon though, the kisses had deepened, and I opened my mouth to him, tasting the sweetness of the wine and his warmth. \n\nEventually, he pulled away, and said, \"I should go.\"\n\nI didn't want this to end, but knew he was right. I helped him gather his things and walked with him to his truck. Before he got in he turned to me.\n\n\"You know why I didn't go to my senior prom?\"\n\n\"No.\"\n\n\"I couldn't take the person I wanted, so there didn't seem to be any reason to go.\"\n\nI knew the answer, but asked anyway. \"Who did you want to take?\"\n\n\"You.\" \n\nI stood there thinking about what might have been. I didn't believe that things would have gone well if two boys had decided to go to the prom together in Terry in the early 1990s. There would have been controversy and fighting and pain. And I knew that I had been a coward in my youth (in many ways I still was) and had almost always sought the path of least resistance. Yet, when I replied to him, I knew that my answer was true.\n\n\"If you had asked me, I would have said 'yes'.\"\n\nHe smiled, reached out and stroked my cheek, and then climbed into his truck and drove away."
    ],
    "authorname": "fuzzyNOLA",
    "tags": [
        "gay romance",
        "mature adults",
        "prom"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/when-love-takes-over-ch-08"
}