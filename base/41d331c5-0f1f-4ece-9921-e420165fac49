{
    "title": "The Hangman Cometh: Tyler Rawlings",
    "pages": [
        "After I wrote the original story, I received some comments and several emails that asked or suggested that I continue the adventures of Tyler Rawlings, his younger brother John and John's wife Molly. \n\nI just reread my tale and have decided that maybe those characters haven't completed their story. Because of the suggestions and because I wanted to write another western, I've decided to add a bit more about the lives of my friends and characters. \n\nI've had a difficult time getting this chapter of the Rawlings clan posted. Too many problems to go into here and I hope they have been solved. \n\nI recommend that you read the first installment of The Hangman Cometh; it will introduce you to the characters and events that flow to the conclusion of that story and will help you better enjoy this story. \n\nAs usual, constructive comments, critiques, and emails are very welcome and much appreciated. I hope you enjoy the story. \n\n******************** \n\nJohn Rawlings sat on his horse on a high rise overlooking his ranch house and out buildings with his left leg thrown over his saddle horn. It was late spring and the morning sun was burning off the mist rising from the stream that ran past the place. With a practiced glance he looked at the sky and knew the weather coming over the mountains several miles to the east would boil down into the valley in late afternoon. \n\n\"It's been a good four years Buck,\" he said to his horse. John and his wife Molly had bought their ranch a half day's ride east of Santa Maria, California in 1877 in the foothills of the San Rafael Mountains. \n\nThey had fled Uvalde, Texas in 1875 where John had been accused of gunning down a man; he had shot the man but it was in self-defense. Molly worked as a waitress in her uncle's saloon and John had been talking to her. Bob Talbert was sweet on Molly and became enraged when he saw John and Molly together. \n\nBob kicked John's chair over and while John was on his back, pulled his gun and tried to kill him; drunkenly he missed. John pulled his own pistol and returned fire and his shot was true. Bob Talbert was killed instantly. Talbert was a cousin of Jack Malone, the big he bull rancher in the area and Malone wanted John executed. John had been scheduled to hang when his brother, Tyler Rawlings, had rescued him. \n\nA professional hangman named Josiah Reading had been hired to execute John but Tyler took Reading's place and freed his younger brother while he was standing on the gallows. Then Tyler held the Sheriff, his deputies, and all of the people that had come to watch the hanging at gun point while John and Molly rode away. \n\nTyler Rawlings was a pistolero; well known in Texas, New Mexico and parts of Louisiana. Some said he was as fast, mean and unforgiving as John Wesley Hardin or Clay Allison; not many men wanted to face an almost certain death going up against Tyler Rawlings. \n\nThe young couple struck out across the arid land west of Uvalde toward California. The first night on the trail, in his saddle bag, John found $1000 in gold Double Eagles and paper currency along with a note from Tyler. The note read: Malone paid a thousand dollars to hang you. Only fittin that you and Molly use it to get a start in California. Take care of yourself Johnny and stay out of trouble. \n\nThey made a point of staying off the main trails and avoided any towns that had telegraph wires leading into them. In a little Mexican village just north of El Paso, John and Molly were married by an old priest. \"Lot of ways to get to California Molly and even if that Sheriff telegraphs ahead they won't find us this way.\" \n\nBy horseback, stage coach, and train the young couple made their way to California. They moved around for two years, not settling on the banks of the Sisquoc River near the small community of Santa Maria until they were sure no one was following them. After exploring the area for a month, John paid $700 dollars for 600 deeded acres of prime grazing property. \n\nThat was the beginning of the ranch. John and Molly called the place the Double B Ranch which stood for big brother, in honor of Tyler, and they branded their stock with the upper case letters BB. The owners on the deed were listed as John, Molly and T Rawlings; they didn't dare list Tyler's full name because of his reputation as a gun fighter. They had been able to add another 300 acres to the ranch in the last four years of its existence. \n\nJohn had to smile as he watched his wife Molly trying to saddle the big buckskin horse she had adopted. The animal was almost 17 hands at the shoulder and the small young woman had trouble getting the saddle onto the horses back. \n\nSeveral weeks ago they were returning from a supply run into Santa Maria, which was ten miles or so from the ranch, and had come across the animal tied to a tree with his apparent owner lying in his bedroll nearby; the man had been dead for several days. If they hadn't taken a different way home they wouldn't have come across the bad scene. \n\nThe animal had a rope noose holding him to the tree and he had chaffed his neck badly trying to get loose and get to the water of the stream that flowed about thirty feet away. When John and Molly found the buckskin he stood with his head down and looking as if he would die at any minute. \n\nMolly jumped out of the wagon, untied the horse and led him to the creek. \"Be carefully Molly,\" John warned. \"Don't let him drink too much at one time.\" \n\n\"I know how to take care of a horse John Rawlings,' she replied. \"You tend to the man.\" \n\nThere wasn't any type of identification on the dead man except a letter addressed to a Sarah Young in Chicago telling of his dissatisfaction with his nomadic ways and a promise to come home; the letter was simply signed Thomas. John buried the man off to the side of the trail and later took the letter to the Sheriff of Santa Maria. They never heard from the woman in Chicago. \n\nJohn had just pulled his leg down and put his boot back into his stirrup when he saw a rider stop his horse at the pump and watering trough in front of the ranch house. There hadn't been any trouble in the last week or so but John wasn't too fond of strangers. \n\nMolly turned as the man rode in but the sun was behind the stranger's back and she couldn't see his face. She tied off the buckskin to the top rail of the corral, picked up a Winchester rifle and walked to meet the rider. Molly could see that the man was leaning over to one side and as she got closer she could see the blood on the man's left side. \n\n\"Hello Molly,\" the man said. \"Don't think you'll need that Winchester.\" \n\n\"Tyler,\" she almost yelled as she recognized John's brother and their savior. Then in a worried voice asked, \"What happened to you?\" \n\n\"Never you mind girl; it's just a scratch. I want to get some water for my horse and maybe for me as well if I'm allowed.\" \n\n\"Well I do mind sir,\" Molly answered in a stern voice. She was going to help her family and wouldn't be put off. \"Y'all can't just ride in here after four years and then ride out again. John will want to see you and I aim to tend to that 'scratch' as you call it.\" \n\n\"Best I don't stop Molly. I got men on my trail and they don't need to find me here.\" \n\n\"You can't ride like that Tyler. Please let us help you.\" \n\nFrom up on the rise John saw Molly place her hands on her hips and spread her legs to shoulder width. \"She only does that when she is upset or as mad as a hornet,\" John told his horse. \"Reckon we better get down there Buck.\" He kicked his horse into an easy lope back down the rise toward the ranch house. As he hit the flats, he pushed his horse into a gallop. \n\nBefore Tyler could argue with Molly, he heard a rider coming at them at a gallop. Turning in the saddle, as much as his wound would let him, he saw John riding hard. His brother pulled his horse to a stop and a small cloud of dust rose from his horse's hoofs. When John saw who the rider was he jumped off his horse. \n\n\"Tyler. Damn it's good to see you.\" \n\n\"Hello little brother. I was just askin Molly if I could get some water.\" \n\n\"John, make him stay,\" Molly pleaded. \"He's been shot.\" \n\n\"Might as well give in Tyler,\" John said with a smile. \"Nobody bests Molly once she gets her mind set.\" \n\n\"Really can't stay John; sorry Molly. Like I told Molly, there are men on my trail that y'all don't need or want to get to know. Let me water my horse and I'll ride on.\" \n\nJohn knew his wife could be stubborn at times but he also knew that his big brother Tyler could give lessons to a Missouri mule. He took Tyler's horse by the bridle and led the horse to the watering trough. \"Give me your canteen and I'll put fresh water in it.\" \n\nAs Tyler leaned down to hand his canteen to John, his face went slack and he continued in a slide out of the saddle. John caught him and eased him to the ground. \"Looks like you won out Molly. I don't think Tyler is going to be riding out any time soon. Go get the front bedroom ready and we'll do what we can for him.\" \n\nJohn's face showed his worry for his big brother. He picked Tyler up and held him in his arms like you would a child. At 6'1 John was 2 inches shorter than Tyler but he had filled out to 200 pounds. Tyler was still whipcord thin and having been on the trail for a spell couldn't have weighed more than 175. It wasn't an easy job but John got the injured man into the house and onto the bed. \n\nMolly came into the room with cloths and a wash basin of hot water. \"Get his shirt off so I can look at his wound,\" she ordered. After cleaning the area with the hot water, Molly felt around and decided that the bullet had passed through Tyler's side no more than a couple of inches into the muscle. From the position of the wound she was sure that it hadn't hit anything vital. Tyler had collapsed due to blood loss. \n\n\"Hold him up while I get a bandage around him,\" Molly ordered. With John holding Tyler in a sitting position, Molly put a compress dampened with coal oil over the hole both front and back. Then she wrapped a long bandage around Tyler's body to hold the two pieces of cloth in place. \n\n\"John, get him shuck of those britches so I can clean him up a mite. You need to peel him out of those long johns too. He ain't had a bath in a spell and we don't want him to get infected.\" \n\nAs she finished she said, \"There's no doubt you're brothers. Got the same features, same dark hair and the same piercing blue eyes. Nope, anybody can tell y'all are brothers.\" \n\nEarly the next morning Molly came into the kitchen to begin her day. She found Tyler sitting at the large table with a cup in his hand. He pointed at the big wood stove where the coffee pot sat on the side of the cooking area to keep warm. \n\n\"I made some coffee little girl,\" Tyler said and smiled. \"Might be a bit strong for you and John though.\" \n\n\"You shouldn't be out of bed,\" Molly replied. She blushed a little thinking of the sponge bath she'd given him last night. \n\n\"Had to get up to saddle my horse. I'm pullin out right after breakfast. Course that's if y'all will feed me.\" \n\nTyler grinned at the young woman; amused at her embarrassment. \"Where are my saddle bags; I like to at least put on a shirt that ain't stained red.\" \n\n\"You might as well eat cause you ain't goin nowhere,\" John said. \"I turned your horse out in the meadow to rest up and graze a bit. He was damn near done in. Your bags are in your room, if you want to change.\" Tyler sat back with a troubled look on his face. \n\n\"I've never know you to run from nobody. Who's on your trail Tyler?\" \n\n\"I was on my way to see you two and made a stop in a place called Bakersfield; it's a pretty big town east of here on the Kern River.\" John nodded to show he knew of Bakersfield. \"Anyway there was a youngster who decided he wanted to be famous. He wanted to be the one that bested Tyler Rawlins. I heard later his name was Jacob Bedford.\" With a grim smile Tyler added, \"He didn't get the job done. It's a sad thing when you don't even know the name of the men you kill.\" \n\n\"Is he the one that shot you?\" Molly asked. \n\n\"No, it was his brother. Jacob wouldn't let me be, drew first and I killed him. His brother didn't care that the boy drew first so he shot me when I was lookin down at the boy on the ground. I had to kill him too.\" \n\nJohn looked puzzled. \"If you got both brothers why are you running?\" \n\n\"There are two more brothers, their father and an uncle; all of them were a mite unhappy with me. They got on my trail a day after I left Bakersfield.\" Tyler waited until Molly refilled his coffee cup and continued. \"I usually don't run. I stand and take care of the problem. This time was different.\" \n\n\"Because there are four of them,\" Molly said. \n\n\"No, four don't bother me much; they're just cowhands and such.\" Tyler took a long sip of his coffee looked out the door leading to the back of the ranch house. The sun was rising over the San Rafael Mountains to the east, driving away the cool morning spring weather. The feeling of family, being cared about and having someone to care about ate at him with regret. \n\n\"I'm tired of killin. That's why I was on my way to visit y'all. Figured maybe I could sign on as a hired hand and put up my gun. Then I saw em on my trail a few days back but I laid a false trail and lost em outside of a little Mexican village two days ago. I'm pretty sure they'll back track and pick me up again so I can't stay.\" \n\n\"You're a full partner Tyler,\" John said. \"Deed says you're one of the owners, so I don't want to hear about no hired hand.\" He glanced at Molly and saw her nod. \"As far as them coming here, they'll find there are three of us to greet them.\" \n\nTyler shook his head. \"I can't drag y'all into this. No, I'll head out in the morning; Arizona maybe.\" \n\n\"Stay,\" Molly pleaded. \"You're are our family and we care about you. Stay, at least until your side is better. Please?\" \n\nShaking his head, Tyler smiled. \"Never could refuse a pretty girl...Okay, I'll stay a spell; at least until my side is good enough to travel.\" \n\nAfter breakfast John and Tyler walked out to the barn and the corral. John had brought Tyler's horse in from the meadow and Tyler looked him over. \"He needs a rest even if I don't.\" Tyler said. \"Reckon it's a good idea to hunker down a bit.\" \n\nThat evening after supper John, Molly and Tyler were on the front porch just enjoying the cool late spring night. \"Nice night,\" Tyler offered. \n\n\"Yep, this time of the year is nice,\" John answered. \"Days are warm, usually sunny but it don't get too hot and the evenings cool right down.\" He chuckled and added, \"But y'all wait for a month or so; it'll be hot during the day and we get the summer rains and thunderstorms at night.\" \n\nJohn went into the house and brought back a clay jug with a thumb ring on the neck. \"Apple jack,\" he answered Tyler's questioning look. \"Made it myself last fall.\" He handed Tyler the jug and then took his own deep drink after the jug was returned to him. \n\n\"Don't you men forget about me,\" Molly protested and took the jug out of John's hands. After taking a small drink she sat it down on the porch by her rocker. \n\n\"If you don't mind telling about it, how did you become a gun fighter?\" Molly asked. \n\nTyler shook his head and smiled at her. \"I reckon you got a right to know about the family you married into.\" He hesitated and said, \"Give me another from that jug of Who Hit John and I'll tell you the story.\" \n\n\"Who Hit John?\" Molly said with a grin. \"I've never heard it called that before.\" She handed him the jug, he took a long pull on it and sat back in his chair. \n\n\"It all started in late '65, right after the war. John you were too young to get into that damn war and it's a damn good thing. I was at Appomattox with Mosby's Raiders when Lee came in to surrender. Didn't hang around; we didn't like surrendering our weapons and such. Sides we wasn't beat just cause the army was so I headed out. The boys I rode with didn't surrender either but the Raiders were disbanded a couple of weeks later. I didn't know where I was headed but I took the road west.\" \n\nMolly held up a finger and went into the house returning with a shawl against the cool night air. She nodded and said, \"Please go on.\" \n\n\"Mosby's Raiders were part of the 43rd Battalion Virginia Cavalry and we did just what the name said. We raided Union troops, supply trains and generally just gave the Yanks hell. We'd hit and run, advance and retreat; what the books call guerilla tactics. I was a scout for the Raiders and many was the time my life depended on how fast I could get a gun into my hands and how quick I could shoot. I learned to be fast and deadly. \n\n\"Was over to Nashville three months after Lee gave up and I ran into a couple of boys that knew I rode with Mosby. Guess they figured with the raids I was on with Mosby I had more money than them. They tried to bushwhack me and steal my horse; I had to kill them both. That was the start of it.\" Tyler looked over the valley toward the rising moon for a minute and listened to a whippoorwill's lonely call. John and Molly didn't interrupt him. \n\n\"Made it to Jonesboro and a drunk braced me at a saloon over a girl that worked there.\" Tyler looked at Molly. \"Sorry Molly, but the girl worked the saloon; getting them to buy drinks and sometimes she took them up to her room.\" \n\nMolly had to smile at how embarrassed Tyler was and said, \"She was a soiled dove, a whore to be crude. Most likely just a girl trying to survive and no other way to do it.\" \n\n\"Yes em, but I didn't hold it against her. Name was Sarah and she was bright and pretty and full of life. She didn't care what other people thought as long as she was happy with her life. Anyway there was a drunk that wanted her and didn't want to wait until she was done talkin with me. He yelled 'draw' and went for the hog leg on his hip; I got to my pistol first.\" \n\nTyler took another pull on the jug. \"That was the third man I had to kill. Then I traveled around for a spell, wranglin cattle, workin as a ranch hand and even as a deputy town marshal in Fort Smith.\" \n\n\"I heard they called Fort Smith 'Hell on the Border',\" John said. \n\n\"They did and it was, at least in '68. The town was full of boys who had fought for the South. Hell, there was a lot of Yankees there too. Most were good people just tryin to make a livin and get on with their life after that damn war. But there were plenty that took the easy way and turned to robbin, rustlin and killin. It calmed down a bit after Judge Parker took over the Western District Court.\" \n\n\"Parker's the one they call the Hanging Judge isn't he?\" John asked. \n\n\"Yes sir. He put together a group of Deputy U. S. Marshals and they had a lot to do with cleanin up the territory.\" \n\n\"Did you work for him?\" This time it was Molly asking. \n\n\"No, I was gone by '75 when the government appointed Parker. I worked for the Town Marshal. Sort of funny how that came about.\" \n\nTyler started to reach for the jug again but stopped. Instead he stood went into the house, returning with three cups and the big coffee pot that was always kept hot on the stove. He filled the cups and handed Molly and John one. Then he sat back down. \n\n\"Don't need to hit that jug too much,\" Tyler said with a grin. \"Like I said, I wandered into Fort Smith. By that time I'd gotten a reputation as a gun hand. The marshal there asked if I wanted a job. Said he wanted someone that could stand up to the rustlers, robbers, and wild cowhands and figured if I worked for him I wouldn't be causin him problems. I figured I might as well get paid for usin my gun, so I took his offer.\" \n\nTyler paused for some coffee. \"Things got so bad in Fort Smith that I had to use my gun most every month; sometimes every week. People started talkin about how fast I was and such; I got a reputation. Then I started gettin men wantin to make a name for themselves by killin Tyler Rawlings. After the sixth man I had to put down, I quit the marshal's job and moved on down to Texas.\" ",
        "John stood, walked over to the jug, picked it up and shook it. He smiled but Tyler wasn't sure if he was smiling at what was left or at the amount they had drank that night. \"Reckon its bed time for Molly and me,\" John said. \"I've got to head up to Arroyo Grande in the morning to look at a breeding bull and a couple of horses.\" Molly took her husband's hand and led him into the house. \n\nTyler met John at the corral at first light. \"I can go with you little brother, I know how to tend and drive stock.\" \n\nJohn knew Tyler wasn't up to the better than fifty mile round trip. \"Tyler, I wished you'd stay and watch over Molly and the ranch. There have been raids made on outlaying ranches just north of here. People are saying it's the Chumash Indians.\" \n\n\"Tryin to make me take it easy are you,\" Tyler replied with a grin. \n\n\"Maybe so but that don't change the fact that some ranches were burned out. I'd feel better if you were here just in case.\" \n\nTyler pulled the bridle over the horse's ears and set the bit. \"Rest easy John; I'll take care of Molly.\" \n\n\"Thanks big brother. It's a bit over fifty miles round trip to Arroyo Grande. I'll push a little today and get there late afternoon. Coming back it will be slow if I buy the bull. It's starting to get hot during the day so I'll take it easy on the animals on the way back. I may be gone two and half or three days.\" John slid a Winchester into the saddle scabbard, mounted and put his horse on the trail. \n\nTyler spent the day doing chores around the ranch house and barn under the watchful eye of Molly. Two or three times she called out to him to leave what he was doing alone because she didn't think he was up to it. \n\nHe never gave her an argument and just smiled. \"Yes em,\" he said and went on to another chore. That evening after supper, Molly brought a cup of coffee out to where Tyler was sitting on the front porch. The weather had cooled down as it usually did that time of the year and she wore a shawl. He had his back to the front wall and had tipped his chair up against it. Molly handed him the coffee and he leaned forward so the chair came back to the floor. \n\n\"Always sit with a wall at your back,\" Tyler said. \"Old habits are hard to get rid of.\" \n\n\"Would you continue your story?\" Molly asked as she sat in her rocking chair. Tyler looked a little surprised and she grinned as she added, \"You did say I had a right to know what kind of family I married into.\" \n\nTyler nodded, took a drink of coffee and leaned back in his chair again. \"Where was I, oh yeah, I left Fort Smith and headed down to Texas. Ran into a man named Creed Taylor, in Clinton, Texas. He was in the middle of a tussle with a bunch of boys from the North headed by a man named Sutton. I hired on for a spell as a cowhand but had to defend myself with my gun three times in as many months. Just the fact that I worked for Taylor was enough for the Sutton crew to come at me. The killin got to be too much for me again so left DeWitt County and I moved on. That was in late '70 or early '71. \n\nPulling a cigar out of his vest, Tyler held it up to Molly; getting permission before lighting it. After he got it lit and drawing to his satisfaction he continued, \"Met a real interestin gent while I worked for Creed. Man called John Wesley Hardin.\" \n\nMolly nodded and said, \"I've heard of him. He's a famous gun fighter, like you.\" \n\n\"Well I hope I have a better name than Hardin. Anyway he wasn't famous yet when we met in Texas; he was only 18 or 19. Creed was havin a party and someone told Hardin I was as fast as him. He came over to me to challenge me to a shootin contest. We set some targets up, stood side by side, someone yelled go and we both pulled our pistols.\" \n\n\"Did you beat him?\" \n\nTyler smiled for a few seconds before he answered. \"I'm gonna tell you something I never told anyone before little girl. If Hardin and me had been fightin for real, I might have been a dead man. He said I think I got you and I said it was close. I told him I'd hate to have to live on the difference. Hardin smiled at me and said we'll have to see some time. He had a strange look in his eyes.\" \n\n\"Why didn't you admit Hardin won?\" \n\n\"A man that lives by his gun has to believe he is the fastest. A man that only thinks he is the best is a dead man. You got to have that edge or you'll be killed for sure. A gun hand has to make everyone believe it too.\" \n\nMolly went into the house and brought out the big ever present coffee pot. She refilled Tyler's cup and sat back in her rocker. \"What did you do then?\" \n\n\"It was time for me to move on so I just drifted around; hirin out my gun. I worked as a payroll guard, rode shotgun on the stage for a spell, even tried bounty huntin a couple of times; didn't like that much. A few times I hired out as nothin but a gun hand; always gave whoever I face an even chance, but it was killin for pay just the same. All the jobs had me usin my gun.\" \n\nTyler stared up at the full moon for more than a minute with a somber look on his face and then he smiled. \"I was in a saloon in San Antonio and a man standin next to me got a telegram. He couldn't read so the bartender read the wire to him. That's when I heard he was Josiah Reading, a hangman. I also heard he was goin to Uvalde and who he was supposed to hang.\" Tyler chuckled, \"y'all know the rest.\" \n\n\"Where did you go after Uvalde?\" \n\n\"Well...I tagged along behind y'all for a spell to make sure no one was on your back trail; followed you until you got on that stage. By then I figured people didn't want to come under my guns again and y'all were safe. I drifted around for about a year and a half and then got the bright idea to come visit you and John.\" \n\nTyler shook his head. \"I was able to avoid any more problems until I got to Bakersfield. Y'all know how that worked out,\" he said pointing to his side and giving Molly another grim smile. \n\n******************** \n\nTime to head back to the house, Tyler thought. He was at the back of the barn repairing a section of the wall that an over excited horse had kicked in. His own horse and the guilty party were looking over the top rail of the corral. \"Reckon Molly will have food ready,\" he told the horses. \n\nAs he rounded the barn he saw Molly on the front porch facing three mounted men. She looked angry and was talking at one of the men in what was an obvious heated manner. Tyler reached inside the barn door, took his pistol belt off of a peg and buckled on his weapon. He slowly walked to the end of the porch. The men hadn't noticed him...yet. \n\n\"I told you we'd give you a good price for your ranch young lady.\" The man speaking looked to be about 40, sat his horse heavy due to his protruding belly. His right hand was on his thigh near his gun. \"Be smart and take the money.\" \n\n\"And I told you, the Double B is not for sale. My husband will tell you the same thing when he comes home.\" \n\n\"Don't know that we want to wait until your man gets back.\" The other two leered and looked at Molly as if they were more interested in her than the land deal. \n\n\"Can we buy her too Billy?\" The one closest to Tyler asked. \"She sure am pretty.\" \n\n\"Shut up Tom,\" Billy answered. \"You and Charlie keep your mind on business.\" \n\nBilly turned back to Molly. \"This is how it's gonna be Missy. You can gather your things and leave on your own or ...\" \n\n\"Or what?\" Tyler asked and joined Molly. \n\n\"Don't deal yourself into this Mister,\" Billy warned. \"This ain't none of your affair.\" \n\n\"That's where you're wrong Billy,\" Tyler replied. The name Billy was said with the same tone you would use to talk about a rattlesnake. \"Molly is my sister in law and I'll not stand by and let her or my brother be run off their ranch.\" \n\n\"And who might you be to talk so big,\" Billy replied. \"There am three of us Mister.\" \n\n\"My name is Tyler Rawlings.\" \n\nBilly's face and those of his companions turned a sickly shade of gray. \"The gunfighter?\" Tom asked. \"From Dewitt County in Texas?\" Tyler nodded, his smile made him look like a big cat on the prowl and about to pounce. \n\n\"You're the one that faced down John Wesley Hardin,\" Charlie said with a bit of awe in his voice. \n\nTyler nodded again and let his hand hang down near the butt of his Colt. \"I think you boys are about done here; ride on,\" he ordered. \n\n\"You can't get all three of us,' Billy blustered. \n\n\"Yes I can,\" Tyler said in a hard voice. \n\n\"Ifin we draw on Tyler Rawlings Billy, he'll kill us,\" Tom said with a lot of fear in his voice. \n\nBilly hesitated and Tyler asked, \"Who do you work for?\" \n\n\"Mr. Logan,\" Charlie answered. \"He told us buy the ranch or run the lady and her husband off.\" \n\n\"Go back to Mr. Logan and tell him to leave my brother and Molly alone. If he doesn't I'll come into town for a chat,\" Tyler said. \"And I don't think he'll like what we talk about.\" He stared at the men for a few seconds and added, \"Now get while you can.\" \n\nBilly, Tom and Charlie, turned their horses, bumping into each other in their hurry to get gone, and spurred their mounts to escape the deadly guns of Tyler Rawlings. \n\nMolly and Tyler watched as the men rode away at a high gallop. Tyler put his hand on Molly's shoulder. \"Why would this Logan want the Double B bad enough to send those men out here?\" \n\n\"I don't know. We've got some good grazing land and pretty good water but nothing special. There are a couple of ranches in the next valley that have better. He did make John an offer for the ranch a month or so past but John just laughed in his face and left Logan standing there on the boardwalk in front of the bank.\" \n\n\"I think I'll saddle up and follow those boys for a spell,\" Tyler said. \"Just to make sure they're really headed to town.\" \n\n\"Tyler...you're not going to kill them are you?\" Molly asked. Her voice was hesitant and sorrowful and afraid at the possibility that her brother in law would do just that. One of the things that bothered her was that Tyler was trying to end his days of killing. \n\n\"No Molly, I won't kill them; at least without good reason. As long as they leave the ranch they're free to go.\" Tyler walked down to the corral to saddle his horse. As he got the animal ready for the trail he thought, No need to tell Molly but if those men double back I'll bury them. \n\nMolly was still on the porch as Tyler pulled his horse to a stop. \"Probably be gone for two or three hours or more so don't worry. Be best if you stayed around the house and carried a Winchester with you until I get back.\" \n\n\"Be careful Tyler; you're not completely healed up yet.\" \n\nTyler smiled at Molly and rode off in the direction the three men had taken. It didn't take him long to know that Billy and his boys weren't going to double back or circle around and come at the ranch house from a different direction. From the spacing of the hoof prints, they had their horses at a high gallop. Their trail led almost due west and Tyler knew Santa Maria was about two hours in that direction. \n\n\"Might as well go into town and see this Mr. Logan,\" Tyler said to his horse and put the animal into a ground covering lope. \"Molly might be a mite upset but I'm healed enough to put a stop to this Logan.\" \n\nSanta Maria on this Tuesday had few people walking around in the sun of this hot late spring day. Tyler rode down the main and only street of the town, past the normal buildings and businesses you would expect from community that lived by the farms and ranches nearby. It was just after the spring rainy season so his horse kicked up dust from the street. He passed a Mexican cantina that except for the vaquero tying up his horse at the rail looked to be closed. \n\nThere was a general mercantile that had a man sweeping the wooden boardwalk in front of the store. Next in line was a barber shop with an open door that had two or three men sitting inside in the shade talking. Across the dusty street was a freight office and next door a millinery shop with a display in the window showing three or four pretty dresses. \n\nNext to the shop was a big building that held the bank. At the end of the street was Dooley's, the only saloon in Santa Maria. Tyler pulled his horse to a stop in front of the saloon, tied up at the hitching rail and pushed through the swinging doors. Saloons were always a good place to get information and Tyler wanted information about this Logan. Out of habit, he stepped to the side of the entrance so he wouldn't be back lit to anyone in the big, dark room. \n\nDooley's was like hundreds of other saloons that Tyler had been in; a big room with a few tables and chairs between the entrance and the bar which ran most of the length of the rear wall. Two spigot handle's which would draw beers for the customers rose above the bar. On the back wall facing the bar was a very large gilded mirror and a few bottles; mostly whiskey but gin and brandy were there as well. \n\nThere were four men in Dooley's. The man behind the bar was pouring a whiskey for them; it didn't look like the men's first glass; Tyler knew three of the men. Billy, Tom, and Charley, the men Tyler had run off the ranch knocked back their drinks and signaled for another. Guess they haven't been here long, Tyler thought. \n\nThe bar had a section that turned and ended against the back wall. Tyler stepped to the end of bar and stood with his back against the wall. Old habits, he thought with a grin at himself. \n\nThe bartender poured drinks for the three shaken men and then walked over to Tyler. \"Welcome stranger, I'm Eddy Dooley; I own the place. First drink is on the house. What'da have?\" \n\n\"A beer will be fine Mr. Dooley. Thank you.\" \n\nAt the sound of his voice, Billy and his two companions looked over to see the stranger. Their faces got white and they turned back to the fourth man. \"That's him,\" Billy whispered. \"That's the hombre that ran us off.\" \n\nThe fourth man stepped around Billy and faced Tyler. \"Understand you had words with these men today,\" he said. \n\nTyler saw a man that made his living with his gun. He was about 5'6 and stocky. He was dressed in whip cord pants with the legs stuffed down into a pair of ornate boots. His shirt had a button on collar and he wore a string tie held with a silver Concho. The man looked like a dude but the pistol belt hung low on his waist, the way he stood at the ready and the look in his eyes told Tyler this was a man that had used his gun before and would again. \n\n\"You could say that; I told them to get off the Double B or I'd kill em. Why do you ask?\" \n\n\"They're my men. I sent them out there to do a job and I don't appreciate you interfering. We want that ranch and we mean to have it.\" \n\n\"You work for Logan?\" Tyler asked and the man nodded. \n\n\"I'm Dixon Samuel. Maybe you've heard of me.\" \n\nTyler nodded. \"From over Las Cruces way.\" It was a statement, not a question. \n\n\"Las Cruces recently, other places before.\" \n\n\"Yeah, I've heard of you,\" Tyler said. \n\nSamuel's hand hovered near his pistol butt and he smiled. \"What did you hear Mister? You hear how fast I am?\" \n\nDooley moved down the bar and if he had been out front of it he would have been between the two men. \"Gentleman, let me buy y'all a drink; there's no need for trouble.\" \n\n\"Stay out of this bartender,\" Samuels replied. His eyes never left Tyler. \"So what did you hear Mister?\" \n\nTyler sighed and his lips stretched back into a grim smile as his own hand moved closer to his pistol. He knew he would have to kill this man before long. \n\n\"So what did you hear?\" Samuel prompted. \n\n\"I heard you were a back shootin son of a bitch.\" Tyler saw the man tense. \n\n\"You talk like a man wantin to die,' Samuel said. \"Who might you be? I like to know the name of the men I kill.\" \n\n\"Name's Tyler Rawlings.\" Tyler could see the change in Samuel's eyes at hearing the name. \n\n\"We didn't get to that part yet Dixon,\" Billy whined. \"That's Tyler Rawlings, the famous gunfighter, he's the one run us off.\" \n\n\"I'll tell you the same thing I told your men; leave my brother alone or I'll kill you. I won't brace you or call you out; I'll just shoot you and put you in a grave.\" Tyler saw Samuel straighten from the crouch he'd been in and sort of stand back on his heels. Some of the bravado went out of him. \n\n\"Going to see Logan now,\" Tyler said and turned to leave the saloon. About half way to the door, he heard Samuel call out. \n\n\"Rawlings,\" then again when Tyler didn't stop walking. \"Rawlings, I won't say it again.\" \n\nTyler spun around, pulling his gun. Samuel had his pistol almost out of his holster and froze at the sight of the big, nickel finished Colt pointed at him. \n\n\"You're a lucky man Samuel,\" Tyler said. \"Unbuckle your gun belt and kick it away.\" He motioned at Billy and the others and added, \"You too.\" \n\nThe men did as ordered and when they were unarmed, Tyler spoke in a hard voice. \"I'm gonna give you boys a chance you don't deserve. Leave Santa Maria and don't look back. Next time I see you I'll kill you.\" \n\n\"You don't have to tell us twice Mr. Rawlings,\" Billy said. Tom and Charley nodded their agreement. \"We'll leave at first light. Goin back to Las Cruces where we belong.\" \n\n\"Do it now,\" Tyler ordered. \"You too Samuel; hit the trail and don't come back.\" \n\nSamuel bent down to pick up his gun belt but Tyler interrupted. \"Leave the gun,\" he ordered. Samuel looked at Tyler with hate but left the saloon without his pistol. \n\nTyler followed the men out of the saloon, watched as they mounted and rode out of town on the trail east to New Mexico. He turned and walked to the bank. A sign was mounted on the side of the building that said Arthur Logan's office was above the bank. Climbing the wooden stairs, Tyler didn't bother knocking on the door; he threw the door open and entered the office. \n\nThe space was one big room with a fireplace and a desk opposite the door. A big man sat behind the desk. He was almost as wide as he was tall. His thinning hair was slicked down and combed to the side. When the door flew open, he look up with deep set eyes that reminded Tyler of a weasel or a rat. He sure ain't missed many meals, Tyler thought. \n\n\"You be Logan?\" Tyler asked. \"The one that wants the Rawlings ranch?\" \n\n\"What business is it of yours?\" \n\nTyler didn't answer the question but said, \"I just dealt with the men you sent to run those folks off.\" \n\n\"All of them?\" Logan asked. Tyler nodded and his smile was a lot like the grimace that a mountain lion had just before he attacked his prey. \"Dixon Samuel too?\" Tyler nodded again. \n\n\"I didn't kill them, although they deserved it. They decided to go back to Las Cruces. Guess they figured the climate was better there.\" Tyler stared at Logan for a few seconds. \"John Rawlings is my brother and my name is Tyler Rawlings. If you or any more of your men bother him, I'll come back here and deal with you myself.\" \n\nLogan's face got flushed and red and then turned pale in fear. He knew he had just met a man that wouldn't hesitate to follow up on his threat. \"I won't bother them again Mr. Rawlings.\" \n\nTyler nodded, turned and left the office. Reckon I better get back fore Molly gets worried, he thought. He walked back to the saloon, mounted his horse and rode back to the Double B. \n\n******************** \n\nJohn and Tyler were riding around the ranch. It was going on to early summer; with the good spring rains the trees and grass were doing their best to see which one could put more green into the world. Tyler hadn't had a chance to see much except the ranch house, barn, and corrals because of his wound. He figured if he could ride into and back from Santa Maria he was healed enough to explore the Double B. It had been a week since Tyler had ran off Dixon Samuel, his three men, and the threat to Logan. \n\n\"Looks like Logan took your little talk to heart,\" John said. \"Seems he pulled up stakes and lit out; heard he moved down to Santa Ana. There is talk about the railroad coming into that area.\" ",
        "\"Glad I didn't have to kill him,\" Tyler said and then smiled. \"Even if he did deserve it.\" \n\nThe brothers heard the bawl of a steer in trouble. They rode around a rise and saw the animal stuck in a black pool of thick liquid; the smell of sulfur hung heavy in the air. The steer looked tired and had been fighting to get free for a long time. \n\nJohn rode close to the pool as he shook out his rope. He tossed the noose over the horns of the big steer and Tyler threw a loop over the animal as well. They took a turn with the ropes around their saddle horns and together they backed their horses; slowly pulling the animal free. \n\nOnce the steer was back on solid land, Tyler stepped down from his horse and flipped the ropes off the animal. The steer took a halfhearted swipe at Tyler with his horns and then trotted off toward some other cattle that were grazing nearby. As the animal joined the others, it snorted and bawled describing its ordeal to the rest of the herd. \n\n\"That damn stuff cost me three or four head every year,\" John complained. \"They get caught up in it and can't get free.\" He pointed at the bones of a steer. \"That one died about six months ago.\" \n\nTyler smiled as he coiled John's rope and then his own. \n\n\"What's so blamed funny,\" John asked. \"I don't see the humor is the Double B losing more than a hundred dollars a year.\" \n\n\"Now I know why Logan was so eager to get his hands on your ranch.\" He finished coiling the ropes, tossed one to John and tied off his to his saddle. \n\n\"Well are gonna tell me?\" John ask impatiently. \n\n\"This 'damn' stuff is oil; black gold or petroleum they call it.\" John looked puzzled. \"It's what they use to make the coal oil for your lamps and lanterns. Back east they light the streets with coal oil lamps. Men drill for it and it makes the owners of the land rich.\" Tyler held up his finger and added, \"Not well to do mind you, but rich. Men back in Ohio and Pennsylvania made so much money they have to hire people just to count it.\" \n\n\"That stuff is worth money?\" John said. \n\n\"More money than you could make in a life time of ranching,\" Tyler replied. \n\n\"Well come on,\" John ordered. \"Let's go tell Molly.\" \n\nA rifle shot rang out kicking up dirt about a foot from Tyler. He slapped John's horse on the rump and yelled, \"Go take care of Molly.\" John hesitated. \"They could have someone at the house too; now go.\" \n\nJohn turned his horse and rode off as a second shot sounded; he didn't see Tyler fall to the ground. Tyler wasn't hit but he knew he was outgunned so he played dead. The shooter was using a rifle and was out of range of Tyler's Colt. Maybe he'll come to me, Tyler thought as he played 'possum'. It was a dangerous play but it was the only way to get closer to or away from the shooter. \n\nTyler's horse stood nearby nervous and skittish, wanting to leave but following the ground tie training that taught him stay put. The animal would take a few steps away from Tyler and then move back; a dance of fear versus training. Tyler was face down in the dirt, facing the direction the shots came from. He had his left arm stretched out over his head and he watched under that arm through eyes barely open. \n\nIn the distance but getting closer he saw a horse and rider slowly coming toward him. Tyler's horse snorted when he saw the other animal but stood still due to his training. The sound of the hoof s came closer and stopped. Tyler tried not to tense up but he was at the ready to make a move. \n\n\"Guess you're not so high and mighty now, are you gunfighter?\" Tyler recognized the voice of Dixon Samuel. \"I'm gonna take that shiny hog leg of yourn and wear it. Then I'll tell everybody where I got it. I'll tell them I killed the famous Tyler Rawlings.\" \n\nSamuel stepped down from his horse and walked over to victim. He used the barrel of his rifle to roll Tyler over onto his back. As he let himself be rolled over, Tyler grabbed the rifle barrel and twisted it out of Samuel's hands. Surprised, Samuel was still able to pull his pistol and start to bring it up. \n\nTyler had continued the roll and as he came to his feet he drew his Colt. The shot from Tyler's .45 caught Samuel in the stomach and knocked him off his feet; his pistol went sailing away. Samuel managed to sit up and looked down at the blood oozing through his shirt. \n\n\"I killed you,\" he said. His voice was puzzled as he watched Tyler holster his gun and reach down and pick up his Stetson. \n\n\"Not likely Samuel.\" Tyler fingered the bullet hole in the crown of the hat. \"But you came close.\" \n\nDixon Samuel sat for a few seconds looking up at Tyler. \"I ain't gonna see Las Cruces again,\" he said and fell over onto his side. \n\n\"Reckon not,\" Tyler said. He gathered up his horse's reins, vaulted into the saddle and put the animal into a hard gallop back to the ranch house. His horse skidded to a stop in front of the porch and Tyler dismounted before it came to a complete halt, pulling his Colt as he hit the ground. John and Molly came out of the house and stood close together in each other's arms. \n\n\"We're fine Tyler,\" John said. \"Molly said she hadn't seen or heard anyone. She didn't know why I came up riding like a banshee. \" \n\nTyler holstered his pistol. He put a hand on John and Molly's shoulders. \"I figured there was only the one man but I couldn't be sure. It was Dixon Samuel.\" \n\n\"You said was,\" Molly asked. \n\n\"He won't bother me again,\" Tyler replied. \"Now that I know you two are alright I'll go back and bury em.\" \n\nTyler and John got a pick and shovel from the barn and rode back to the meadow. As they rode up to Samuel's body, several vultures flew away squawking in protest at being drive away from their meal. At the edge of the meadow, close to the tree line, Dixon Samuel was put to rest in a shallow grave; large rocks were brought from a hillside and covered the grave. \n\n\"I know he deserved killin,\" Tyler said as he and John rode up to the corral. Tyler got off his horse and turned to John. \"But I hope that's the last man I have to kill because I'm Tyler Rawlings.\" \n\n******************** \n\nTyler dismounted at the Double B corral, put his hands on his hips and bend backwards stretching his back. John and Moll were doing the same thing. The Rawlings has just returned home after a weeklong cattle drive. For three days enduring the clouds of dust kicked up by the herd, they pushed the cattle over the nearly 40 miles toward the market at the railhead in San Luis Obispo. At least the cool fall weather gave us a break, John thought. \n\nIt was a good year for the Double B as there were about fifty head of cattle to be sold. After agreeing to a price with a buyer from back east and receiving a bank draft for a little over $1200, the crew of the Double B decided to stay overnight in a fine hotel in San Luis Obispo. Tyler, John and Molly took a vote and decided they deserved at least one night up pampering before hitting the trail back to the ranch. The next morning they started back but their horses were tired from the drive so they took two full days to get back to the ranch. \n\n\"Too many years of livin in hotels and boarding houses makes a man soft,\" Tyler complained with a grin. \"I forgot how much hard work it was herding cattle.\" \n\n\"Well you can take the night off big brother,\" John said. \"Then early in the morning we can start again.\" \n\n\"Start again?\" Tyler asked. \n\n\"Yep, we have to get started on next fall's drive. Can't sit around and wait till the last minute.\" \n\n\"Quit teasing him John,\" Molly said. Turning to Tyler she added, \"We can take a day or two off before we get back to it.\" She grinned at the look on Tyler's face. \"You boys take care of the horses and I'll have supper ready soon.\" \n\n******************** \n\n\"Think I'll saddle up and take another look at that oil seep,\" John said as he finished his breakfast coffee the next morning. \"See if we've got another cow stuck in it.\" \n\n\"Saddle my horse and I'll go with you as soon as I help Molly with the dishes,\" Tyler said. He grinned at Molly and continued, \"Anyone that can cook good as you young lady deserves help with the cleanin up.\" \n\nJohn went to the corral and roped his horse. As he finished saddling his mount, four riders came to a halt in front of the house. John pulled his Winchester from the saddle scabbard and walked up behind them. \n\n\"Hello the house,\" the oldest man called. \n\n\"Hello yourself Mister,\" John replied. \"What can I do for you?\" \n\nThe man turned his horse toward John; the other three followed suit. \"I'm Joe Bedford.\" He motioned at the others. \"The two youngins are my sons and that's my brother Saul. We're lookin for a man might have passed through here a while back.\" \n\nSaul Bedford looked over John's shoulder and pointed to the horse in the corral. \"That be his animal, Joe. I followed its rump for long enough to recognize it.\" \n\n\"Who does the horse belong to?\" Joe asked. \n\n\"What's the name of the man you're lookin for?\" John replied without answering the question about the horse. \n\n\"Tyler Rawlings.\" \n\n\"The gunfighter?\" Joe nodded. John looked thoughtful for a few seconds. \"Don't know his name but a man passed by here a month or so past. He asked to water his horse and fill his canteen. I noticed he had a lot of blood on his shirt but he didn't want my wife to tend to him. The stranger thanked me for the water and rode out.\" \n\n\"What did he look like?\" Saul asked. \n\n\"Why are you lookin for him?\" John asked. \n\n\"Rawlings killed my other two sons, just gunned them down he did,\" Joe answered. \"Now what did the man that stopped here look like?\" \n\n\"Tall, hard lookin and whip cord thin. Dark hair, wore black with a nickel finished pistol tied down low. Looked about done in what with the blood and all.\" \n\n\"That's him,\" Joe said. \"Where did he go?\" \n\n\"He rode east...but he didn't get far,\" John replied. \n\n\"How's that?\" Saul put in. \n\n\"I went to check on some cattle in my east meadow, over at the base of the foothills. Found the man that stopped for water, lying dead with some vultures getting acquainted with him. That horse of his was standing close by; he hadn't moved far from the body.\" \n\n\"I told you I winged him Pa,\" one of the boys bragged. \n\nJohn could see the front door of the house and saw Tyler standing just inside of the opening with his pistol in his hand. Turning and walking back toward the corral forced the men to turn so the house was at their back. John sort of waved a signal for Tyler to stay put; it looked like he was swatting at a horsefly. \n\n\"Chased the vultures away; by that time he weren't a pretty sight. I buried him and covered the grave with rocks to keep anymore varmints from getting at it. If you like I can show you the grave Bedford,\" John offered. \"It'll take us about an hour or so to get to the meadow.\" \n\n\"I would appreciate that. If we water our horses we'll follow you to this grave.\" \n\nJohn nodded toward the horse trough. \"Help yourself. I'll just let my Mrs. know I'm goin.\" He took his horse's reins and walked to the ranch house. \n\n\"Tyler you keep out of sight, you hear.\" John ordered as he stepped into the house. I got these men thinking Samuel's grave is yours. You stay put and we'll be rid of them quick enough.\" He kissed Molly, patted her on the shoulder and went back to his horse. \n\nJohn mounted his horse and led the way to the far meadow with Joe Bedford riding beside him. As they rode, Bedford talked about how bad Tyler Rawlings was. If there was an insult Bedford didn't use John couldn't think of one. \n\n\"So this Rawlings just shot you sons in cold blood; without warning?\" John asked. Before Bedford could answer John said, \"From what I heard about this Rawlings he is a killer but he never draws on a man lessen he has a reason.\" \n\nJoe stared at John and shrugged. \"Well...Jacob may have prodded him a mite and drew down on Rawlings; but Rawlings is a man grown and he should have let my boy be.\" \n\n\"You said he killed both your sons?\" \n\n\"Yep, Jethro shot at Rawlings when Jacob went down. Rawlings shot him too. He was another youngster that Rawlings should have walked away from.\" \n\n\"How old were your sons Mr. Bedford?\" \n\n\"They was twins; would'a been twenty five next month.\" \n\nJohn shook his head at what he had heard. \"No disrespect Mr. Bedford, but it sounds like boys were full grown and Rawlings just defended himself.\" \n\n\"Maybe so, but I aim to avenge my sons.\" Bedford took a deep breath. \"I aim to see he pays for what he did.\" \n\nJohn pulled his horse to a stop. \"I reckon he did Mr. Bedford,\" he said pointing ahead to the rock covered grave. \n\nBedford trotted his horse closer and dismounted. He kicked at one of the large rocks and turned toward John. \"You sure this is Rawlings?\" \n\n\"I don't know Mr. Bedford. A man that fit the description of Rawlings you gave me stopped at my place for water. A few days later I found the same man dead man just about where you're standin and I buried him. If it helps, the man I buried was wearing a nickel plated revolver. I've got it up to the house if you care to have it.\" \n\nJohn watched Bedford for a minute or two as he stomped around the grave site. Bedford looked up at his kin who was still mounted and asked, \"Well?\" The other three Bedfords shrugged their shoulders. \n\n\"You're welcome to dig him up if you want Mr. Bedford. But be sure and cover him again; I don't need no extra varmints like coyotes and such hanging around my cattle.\" John paused for a few seconds. \"I need to get back to the house.\" \n\nAs John turned his horse he saw a rider silhouetted against the skyline of the hill on the other side of the grave. He rode around the base of another small hill and watched the Bedfords. The four men talked back and forth for several minutes and then Joe Bedford mounted his horse. He said something to the men, pointed east and they rode toward Bakersfield. \n\nJohn watched as the silhouette followed the Bedfords until he disappeared over the hill. Tyler's up to his old tricks, John thought. Hope he lets them be. \n\nIt was nearing supper time when Tyler rode up to the corral and dismounted. He unsaddled his horse, brushed the animal and made sure it had feed and water before he turned it into the corral. As he walked toward the house he saw Molly come out onto the porch followed by John. \n\nMolly waited until Tyler got the porch and said, \"Come in to supper and I don't want to hear a word about what you've been doing.\" \n\nTyler stepped up onto the porch. He looked at Molly and John. \"I didn't do anythin little girl but make sure those men kept riding east. Followed em for ten miles or more; don't think they will be coming back.\" He took Molly's hand. \"I told you I was done with killin if I could keep from it.\" \n\n\"Enough of this jawing,\" John interrupted. \"Let's eat.\" \n\nMolly smiled and bustled into the kitchen. John followed her with Tyler right behind him. Tyler stopped just inside the door and unbuckled his gun belt. He hung it on a peg next to the door jamb. Turning back into the big open room he saw Molly and John watching him. \n\n\"Reckon it's time to hang up my gun\" \n\nThe End?"
    ],
    "authorname": "woodmanone",
    "tags": [
        "western",
        "drama",
        "action/adventure",
        "historical fiction"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-hangman-cometh-tyler-rawlings-1"
}