{
    "title": "Senior Year Memories Ch. 36",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand the ongoing plots.)\n\n(Author's Note: First and foremost, I'd like to apologize for some of the more direct similarities between the striptease/lap dance scenes between Chapters 27 and 35, including lines I accidentally stole from myself when writing Chapter 35. Whoops, this is what happens when you write two chapters more than a year apart and have some similar interests come through in both. Anyway, as always, I want to give special thanks to fellow Literotica author Lil_kitty for her excellent work as my editor and acting as a second set of eyes on this chapter, and for letting me know what did and didn't work; if you get a chance, please check out her work and drop some stars if you enjoyed, she writes some very hot and fun stories. And of course, I also want to thank my wonderful patrons; your support and input really help make this possible, as did your votes ensuring the appearances of Rose, Fatima and Izzy in this chapter.\n\nAnd, as ever, apologies for my limited Spanish, and any errors that may have come into play thanks to Google Translate.)\n\nPreviously, on Senior Year Memories: In the month of lust and love, 18-year-old Ryan Collins keeps himself busy, helping his new \"apprentice\" Jennifer Cage make new friends by introducing her to football player Peter Nixon and cheerleader Sasha Pearl, while sneaking a Valentine's invitation to busty beauty Brianna Roth. After a quick encounter with Kaitlyn Pruitt, Ryan makes good on a promise to his friend, Sarah, to seduce her mother, Viola Kent. Viola is stunningly gorgeous, and an ex-stripper, and after working his magic with the beautiful MILF, the two of them have some properly wild sex. Exhausted after such a serious fuck, Ryan returns home to girlfriend Brooke King, who helps him relax while he mentally prepares for one of his greatest challenges of the year: Valentine's Day.\n\n***\n\nUntil senior year, Valentine's Day had to be one of my least favorite days on the calendar. When you've never had a date in your life, let alone a partner, the perception that everyone else is dating *but* you can be challenging to handle. Valentine's Day only magnified that, to every possible extreme. It seemed like everyone else had people they loved, places to be, and there I was, sitting alone at home and munching on whatever mandatory candy was given out at school to every student so nobody would feel left out. It was one of those things the part of me that was convinced I was intellectual found insulting, but, hey, free candy was free candy.\n\nThe one good thing I had on those previous days was my oldest and best friend in the world, Tori McNeil. The two of us would enjoy our sarcastic bitterness together on Valentine's, eating takeout, watching action movie DVDs and sneaking some liquor from her big sister, Rachel's, private stash. Those days when it was just us against the world, well, they made Valentine's feel a little less lonely, and even if things didn't work out the way I wanted to between the two of us, I still looked back on those days fondly.\n\nThere were times these days when I found myself wishing that things had gone differently, that I hadn't had sex with Tori and her mom, Lauren, *and* her sister, Rachel. Things might have been different, a little more like they used to be with my oldest friend still in my life. Maybe even, in all of this, that I could still be watching cheesy action movies with Tori on Valentine's Day...\n\nI still found myself wishing this sometimes... but every day I found myself wishing with less strength. Rachel McNeil had become one of my best friends, and even though we lived states apart, I still considered her one of my closest confidantes and my go-to person for advice in all matters of life, love and beyond. I wouldn't trade the friendship we'd developed since November for anything.\n\nAnd Lauren... well, she was just a lot of fun on those rare occasions she and I would see each other.\n\nNo, for everything that had happened, there was no going back now, and I was generally happier for it. Things with Tori may have been in a strange limbo right now, but without question, everything else in my life was immeasurably better. I had more friends than I'd ever had in my life, was having crazy amounts of sex all the fucking time, and had two girlfriends who I loved more than anything else in the world.\n\nLife was good.\n\nLife was *great*.\n\nAnd I was going to kick this Valentine's Day's ass.\n\nYou see, ever since I helped Leah Sartori cast her lust spell, a February I'd had few plans for had come into a clear, and very horny, focus. I knew what I had to do to spread around a little bit of love and a whole lot of lust to those who could use it, and the most ambitious day of my plan was handily Valentine's Day.\n\nIt was going to be hard, and it would require a lot of strength of both will and body... but I knew I could do it.\n\nI woke up drowsily and slowly on Valentine's Day, but managed to turn off my alarm before it went off. As I cleared my eyes, I looked around my room with excitement and anticipation. I had everything in order, the bundles of flowers, the boxes of chocolates...\n\n\"Good morning, Ryan,\" the girl said from beside me in bed.\n\nI turned, smiling, to look at curvy brunette Jennifer Cage, keeping herself thoroughly wrapped up in my blanket and looking very comfortable as she reached beside the bed and pulled on her glasses. The sweet, pale girl wasn't wearing much more than her glasses and a pair of panties, but, tempting as it would have been to climb on top of her and get a nice fuck in to start the day, I knew better.\n\nI had to know better today.\n\n\"And good morning to you, Jennifer,\" I said, leaning down to kiss her before I got out of bed and started getting dressed. Pulling on my glasses from the nearby bedside table was an excellent first start, allowing me to get a better look at the beautiful woman in my bed.\n\nBundling herself up comfortably in the blankets, the better to deal with the surprisingly cool day, she said, \"You're up awfully early for a Saturday, aren't you?\"\n\n\"I got a busy day planned...\" I said, pulling on my jeans.\n\n\"Ah, that's right... Valentine's Day,\" Jennifer said, amused.\n\n\"That a problem?\" I asked, smiling down at her.\n\n\"Not in the slightest, I just forgot myself for a moment,\" she said.\n\n\"It's all good,\" I said, sitting back down on the bed to pull on my socks and debate just what I had to do in what order. \"I'm sorry I have to leave in such a hurry.\"\n\n\"It's alright, I've got plans of my own today, anyway,\" Jennifer said, smiling mischievously.\n\n\"Oh?\" I asked, definitely needing to hear this.\n\n\"Yeah. I'm trying to put myself out there more, like you're encouraging, and I was thinking I might just head to the mall. Maybe catch a movie, maybe see what kind of trouble I can find. Sasha told me she knew of some hot guys heading there tonight that she might be able to introduce me to, so... there's hope, if I play my cards right,\" Jennifer said.\n\n\"You'll play your cards right,\" I said, confident.\n\n\"I know. It's still a little nerve-wracking, but it's going to happen,\" Jennifer said, smiling.\n\n\"Good. I want to hear all about it,\" I said.\n\n\"You will... I'm just going to enjoy my nest of blankets here for a little while longer, anyway,\" Jennifer said. Luxuriantly, she closed her eyes for a moment, before quickly opening them. \"That won't be a problem with your father, will it?\"\n\nI laughed. \"Nah, he's out today; the roller derby team he co-owns is in a pretty violent dispute with their longstanding blood rivals again, and he's the only one both teams trust to resolve it, so, he'll be gone for a while.\"\n\n\"Again?\" Jennifer repeated.\n\n\"Oh, yeah,\" I answered. \"Things like this happen all the time.\"\n\n\"Interesting...\" she said, stretching out. \"Don't worry, I'll be out before you have to worry about date night with your girlfriends.\"\n\n\"Actually, I'm meeting Brooke and Josie at the Stargazer Motel on the other side of town; they got a room for their big surprise,\" I clarified, quickly finding my wallet in my jeans and opening it up to check that the room key they'd provided was still there.\n\n\"Right,\" Jennifer said, shaking her head. \"But you're having dinner here first, with...?\"\n\n\"Brianna Roth,\" I said. Kaitlyn's beautiful friend had thankfully accepted my Valentine's invitation, and considering how long our flirtation had gone over the course of these past months, it was about time the two of us finally did something about that. Well, something more than me eating her pussy in an abandoned classroom, anyway.\n\n\"Nice,\" Jennifer admitted, nodding. \"And this is after you go running around like a pornographic Santa Claus handing out orgasms to some lucky girls who really need them?\"\n\nI shuddered. \"While I'd rather purge the image of a pornographic Santa Claus from my mind... yes, that is the general point.\"\n\n\"Sounds like you're going to need a lot of cum in the tank,\" Jennifer said.\n\nAh, that was going to be the challenge, wasn't it?\n\n\"Not exactly,\" I said, finding it almost as uncomfortable to discuss the plan as it was to think about.\n\n\"What's that mean?\" she asked.\n\nI explained, \"I need to be prepared for everything that's planned tonight, which should be pretty fucking intense with the cast of characters involved, so... I'm actually not going to be cumming until the main event. For today, I'm just using my mouth and hands, and keeping anything and everything I have to away from my below the belt areas.\"\n\n\"Ouch,\" Jennifer replied. \"I mean, for them, that's awesome because, well, it's your mouth and hands, but for you, that'll be rough. And you're going to be riding your bike around the whole time?\"\n\n\"More or less. I'm going to try to catch some rides when I can, but, yeah, that's still a lot of time on the bike,\" I replied, not wanting to think about how that was going to treat a very full, very ready pair of balls.\n\n\"Ouch,\" she repeated. \"I was going to show you my tits to, you know, motivate you on the way out, but I think the less time you're hard, the better, so, I don't think I'm going to do that.\"\n\nFeeling the erection already growing in my pants, I said, \"Too late.\"\n\n\"Oh. In that case,\" Jennifer said, briefly pulling back the blanket and flashing me her soft, luscious, DDD-cup tits. The flash was brief, enough to let me see her soft curves and suckable nipples, before she pulled the blanket back over her chest and smiled mischievously.\n\nWalking toward my desk to grab the first flower and small box of chocolates, I jokingly said, \"Tease.\"\n\n\"I'm learning,\" Jennifer said.\n\n\"I noticed,\" I replied, climbing over her to give her a quick kiss. \"Happy Valentine's Day, Jennifer.\"\n\n\"Happy Valentine's Day, Ryan,\" she responded, smiling brightly. \"You know, I never thought I'd be in a place where I could say that and mean it, but... I'm happy it's Valentine's Day.\"\n\nKnowing exactly where she was coming from, it made me swell with pride to be able to bring this out of her as well.\n\n\"Good,\" I replied, standing up. \"I'm happy to hear it.\"\n\nI made my way for the door. \"I'm gonna go be your porno Valentine's Santa now.\"\n\n\"Good luck!\" Jennifer called after me.\n\nSmiling and shaking my head, I quietly thanked Jennifer for the luck.\n\nIt seemed like I was going to need at least a little of it if I was going to survive the day.\n\n***\n\nNow, while a lot of today's itinerary had me running around the town of Regan Hills like a madman, that the first stop was close by made my life quite easy, even if I had to get there pretty early if I wanted to catch her before she went on her run.\n\nWith a flower in one hand and a small box of chocolates in the other, I exited the house with plans to walk next door. This was interrupted, however briefly, by the discovery of a tray of cookies with a small note attached to it, another attempt at a peace offering from Karen Bowman, mother of my former bully who was no doubt working some angle. I pushed the cookie tray indoors, and focused on ignoring it.\n\nNothing was going to get in my way today.\n\nSteeling myself for the day ahead, I walked over to the house next door, up to the front porch, and rang the doorbell. I hoped I hadn't missed her, but knew that was a fair possibility. Maybe she'd already gone on her run, or maybe she'd gone out with her mom; the car was absent after all. Or maybe-\n\nThe door unlocked, and before me stood the beautiful Alice Talbot.\n\n\"Ryan!\" she exclaimed in her lightly Australian-accented voice. \"What are you doing here so early?\"\n\nThe athletic beauty stood in a matching dark blue tank top and yoga pants, showing off much of her toned body, tight curves and dark skin. Her hair, beautiful dark curls she usually let free in an impressively loose afro, were tied back for running. While her face was as pretty as it ever was, when she saw me, she positively lit up with a look that made her even more beautiful, if that was possible.\n\n\"Happy Valentine's Day!\" I said, handing her the flower and chocolates. \"Can I come in?\"\n\n\"Certainly!\" she said, ushering me inside. \"Mum's off at work today... but shouldn't you be with Josie and Brooke?\"\n\n\"By most romcom plans, I should, but things are going to be a bit unconventional today. We do have plans to meet up later, but I've got other ideas, first,\" I explained.\n\n\"Really?\" Alice asked, arching an eyebrow.\n\n\"Yeah,\" I said. \"I can't stay long, but I did want to drop off the flower and the chocolate-\"\n\n\"Which you did,\" she interrupted.\n\nWithout breaking stride, I continued, \"-and see if you, I dunno, would like it if I ate your pussy? Or fingered you? Or both? Whatever it takes to give you a mind-blowing orgasm or two? Something a little more special than your usual Valentine's chocolates and flowers?\"\n\nAlice looked at me at first, disbelieving, before laughing. I stood my ground, and when she saw I was serious, I could see her chest rising and falling with anticipatory breaths.\n\n\"Oh, that wasn't a joke,\" she said, lightly licking her lips.\n\n\"No,\" I answered. \"You told me that you didn't have any date for Valentine's, and if I didn't have any other plans, I would be here for you fucking you with all I had all day. Unfortunately, I need to do a lot of running around today, but if you'd like a couple of mind-blowing orgasms before I do, I am offering.\"\n\nAlice looked at me with only the briefest consideration and said, \"I think you know the answer to that.\"\n\n***\n\n\"YES! YES! FUCK YES!\" Alice moaned, leaning back into her bed as she ran her hands through my hair. With her top pulled up over her beautiful, bare C-cup tits and her pants and underwear a long-forgotten issue, I feasted on Alice Talbot's beautiful, shaved pussy as if it were my last meal.\n\n\"Yes, god, yes, fuck... right there, right there, you know what to do... you know how to treat a girl right...\" she moaned, her eyes rolling back as the pleasure flowed through her.\n\nI could have made a choice response or two to this, but with a mouth full of pussy, I would have to keep my quips to a minimum. With two fingers buried deep in her cunt, massaging her g-spot, my lips and tongue were primed to tease her lips, running over them oh so lightly before running more firmly over her clit. I had been with Alice a handful of times already and found her to be very responsive, but even if I knew how to make her cum quickly, I was going to draw this out.\n\nIt was Valentine's Day, after all... I had to make it memorable, right?\n\nSo, I teased her. I pleased her. I brought her to the edge, and then took her back, and then pushed her close to the edge once more. I made her a needy, whining, sex-driven beast, rocking her hips against my face and forcing my head between her legs with her hands, but I still kept rocking her back and forth.\n\nFor her part, Alice seemed to be having a pretty good time.\n\n\"Bloody hell... fuck me... fuck me with your mouth, Ryan, like that, please, make me cum, make me cum... god... fuck...\" Alice groaned, squeezing her thighs tightly around my head. \"You're gonna make me cum, do it, please, please make me cum...\"\n\nHer body had fallen into a state of tense, shaky, pleasurable readiness, and I didn't think backing off any more would have the desired effect. And so, I didn't back off next time. I massaged her G-spot more intensely, my tongue circling vigorously over her clit.\n\nAt this point, yeah, it didn't take too much for her to cum.\n\n\"HOLY FUUUUUUUUUUUCK!!!\" Alice cried out, her thighs clamping down around my face as her juices flooded my mouth. I kept suckling away at her pussy, prolonging her orgasm for a few moments more, before easing up to let her come down.\n\nOnce she let go of my face, I propped myself up on my elbows to get a better look at her, and of course to give her a better look at me licking my lips.\n\n\"Why are you looking so smug there?\" Alice teased.\n\n\"I think you know why,\" I replied.\n\n\"Oh, right, that,\" she laughed.\n\nI crawled over her, leaning down to give her a long, lingering kiss, enjoying how eagerly she licked her juices from my face.\n\nFeeling my erection against the side of her leg, Alice asked, \"Would you like me to return the favor?\"\n\nI grinned, kissing her again. \"Would I like to? Yes. Can I? Not today.\"\n\n\"Poor baby,\" she replied, a little teasing. \"Needing to save up for later.\"\n\nPlaying back, I squeezed one of her nipples, hard. Alice winced, but then grinned back.\n\n\"Do you want another cum, or don't you?\" I asked.\n\n\"I do,\" she replied.\n\n\"Then I'd play nice, if I were you,\" I said back, playful yet commanding.\n\nAlice licked her lips. \"Oh, I like this side...\"\n\nClimbing back down between her legs, I said, \"I think you'll like this even more...\"\n\nThough she looked like she had something to say about this, Alice's words soon caught in her throat as I licked her clit again, and set about giving her an even better orgasm than the first.\n\nSince I later succeeded in that, I considered this first stop to be a success. I only hoped the rest would work out so well...\n\n***\n\n\"Mmm, yes... Ryan Collins, your tongue has true talent... yes, this would make for a happy Valentine's Day...\" Rose Ferris purred. We were in her bedroom, an eclectic chamber of books, art supplies and mismatched used furniture that gave it a particularly bohemian style. I could have spent some true time studying all of her assorted treasures and rare books on nearly any other day, but when I was knelt behind her with my tongue buried in her ass and three fingers fucking in and out of her pussy, a more in-depth analysis would have to wait for another time.\n\nThe 5'8\", lightly tanned hipster stood over me, her hands braced against the wall with her legs spread wide as I buried my face between her ass cheeks. Rose was, quite gloriously, naked, and while I couldn't fully appreciate her beautiful C-cups and shaved pussy, I was quite fine right where I was. A former cheerleader, Rose Ferris' ass was a true work of art, and I was in a prime position to appreciate it. I lavished her asshole with my tongue, running tight circles over it and pressing inside whenever I wanted to drive her truly wild. Though she was quite good at keeping up mellow appearances, I could tell she really enjoyed the impromptu DP I was giving her.\n\n\"Like that, right there,\" Rose said, turning just enough to look down at me. As ever, she still kept on her fedora and slightly oversized and never too dark sunglasses, looking down at me with that easy, relaxed smile that could make my heart beat faster with minimal effort.",
        "\"Keep fucking me, keep fucking me like that, Ryan Collins... god... I don't understand why your girlfriends ever let you out of their sight with a tongue like that, but I'll have to thank them... so good, so fucking good...\" Rose moaned, pinching one of her nipples.\n\nI took my mouth from her ass for a moment, but didn't let up with my fingers as I kept fucking into her.\n\n\"They encouraged this, actually,\" I explained, smirking up at Rose before I went back to worshipping her asshole.\n\nShe squealed, briefly, and then moaned a long, low sound of pure, unadulterated pleasure. \"God, I'm *really* going to have to thank them now, this is amazing, fucking amazing... you're gonna make me cum, Ryan Collins... you're gonna make me cum soon, keep going, like that, keep eating my slutty fucking ass, eat my slutty asshole and make me cum with your fingers, like that, like that, right there, do it, Ryan, do it, make me cum, make me fucking cum, like that, FUCKING HELL! RIGHT THERE! I'M CUMMING! I'M CUMMING! FUUUUUUUUUUUUCK!\"\n\nRose came so hard she nearly fell, but thankfully I was there to catch her. I held onto her with my free arm, steadying her so my fingers and tongue could continue to please her as she rode through her messy orgasm.\n\nWhen she had finally finished, I pulled my fingers from her cunt and my face from her ass, allowing her to collapse to her knees in front of me, breathing heavily. With my hands now wrapped around her chest, gently massaging her breasts as I buried my head in her wavy blonde hair, she laughed.\n\n\"Ryan Collins... today you might just be a saint...\" Rose purred, pulling my hand free from her tit and gently licking her juices from it.\n\n\"I heard I was more of a pornographic Santa Claus,\" I said.\n\nRose chuckled. \"Well, if the shoe fits...\"\n\nTurning her head, she kissed me deeply, then grinned. \"Now keep doing your good, hard work on this lovely Valentine's Day.\"\n\nI kissed her back, returning the smile. \"It's not all that hard.\"\n\nRose chuckled. \"Not yet, anyway.\"\n\n***\n\nI thought the hardest thing I would have to deal with was fighting my erection and riding my bike all around town today, but I hadn't accounted for what all the girls would be capable of.\n\nI probably should have, considering that Jess Garza was on my list.\n\n\"L\u00e1meme co\u00f1o!\" Jess squealed as she rode my face vigorously. \"Right there, god, yes... chingame con tu boca!\"\n\nCompletely naked and straddling my head in reverse cowgirl, the stacked Latina skater rode my face with everything she had, crying out and laughing as she enjoyed my tongue's attentions, fucking down onto me with enough force to send her van rocking from side to side. By this point, I was quite familiar with the mattress in the back of Jess's van, with the old Christmas lights strung across the ceiling casting the room in an eerie glow, the odds and ends tools she had scattered about, and the unusually clean, sheeted mattress she had in the back for such occasions. Reaching up to the straps she had bolted to the ceiling gave her great leverage to ride me.\n\nI knew from experience it was one hell of a show, as Jess's DD-cup tits and amazing ass both verged on epic territory, making her unexpectedly among the hotter girls in school.\n\nI would have enjoyed this show, if it weren't for the fact that all I could really see at best were inner thighs with their matching calaveras tattoos, and occasionally the inside of her ass cheeks and her tight, eager asshole in those moments she wasn't fully sitting on my head. But, missing out on such a show was a sacrifice I'd willingly take if it meant I got to lick her positively gushing and oh so sweet cunt.\n\n\"So good... fuck, I love it...\" Jess said, taking her weight off of me just enough to let me breathe. \"You sure you don't wanna make this a 69? All I gotta do is bend over...\"\n\n\"Quite sure,\" I said, even though the idea sounded positively amazing. I was holding to the plan, however ill thought out it was suddenly feeling, and I was going to make sure I stayed good.\n\n\"Your loss,\" Jess shrugged, putting her weight back down on my face.\n\nI spanked her magnificently round ass at that, causing her to squeal and shout something in Spanish I couldn't quite make out, but I took it for a good thing. When I saw her asshole above my eyes once again, I did the only sensible thing and slowly pushed my middle finger into her.\n\n\"Oh yeah, chingame, chingame, chingame... fuckfuckfuckfuckMOTHERFUCKER, CHINGAME!\" Jess yelled, settling her weight down on my head as the orgasm slammed through her body. I had almost forgotten how much Jess gushed, but thankfully I was up to the challenge of licking up what she had to give me. I drank up her juices, lavishing her pussy with attention as she rolled through her orgasm, and even after she slowed and fell off of me, rolling onto her back as a panting, heaving mess.\n\n\"Best! Valentine's! Ever!\" she gasped, reaching over to playfully squeeze my cock.\n\n\"Glad to help,\" I said, finding a nearby roll of paper towels and using them to wipe my face.\n\n\"Seriously,\" Jess said, sitting up on the mattress and looking down at me. \"I never got a flower for Valentine's Day from a guy or girl, and after I go home and light up and eat all these candies when the munchies kick in... it's gonna be the best Valentine's Day I ever had. Thanks, Ryan, I never knew I needed that, but, now that I got it, I like it.\"\n\nJess crawled over me, her big, beautiful tits hanging down invitingly as she leaned down to kiss me.\n\n\"You sure I can't help you with that bigass boner?\" she offered, eyes darting down to the tenting of my pants.\n\n\"I'm sure, but thank you,\" I said, leaning up to kiss her again.\n\n\"Ah well, can't blame me for trying,\" Jess said, pulling her clothes together. \"We should probably get out of this parking lot before security finds us. Want me to drop you off anywhere?\"\n\nI grinned. \"You know where Mallory Dourif lives?\"\n\n***\n\nThough initially I wanted to surprise all the girls on my Valentine's list, realistically I knew the courteous and practical thing to do would be to let them know when I planned on coming over so they would be there and ready for me. While mostly this just meant they were ready to jump me the moment I came through their door, for Mallory Dourif it meant she had time to set a scene.\n\nAnd oh did she set a scene.\n\nWhen I knocked at her door, and she gave a beckoning call for me, I stepped inside to see what she'd been up to. Her above garage apartment/lair had been redecorated with fake vines and flowers leading to her bed, which looked like an explosion had happened at a garden store. The single rose I carried with me looked positively lonely compared to the flowers she'd arranged around the head of her bed.\n\nNot that this held my attention.\n\nNot when Mallory Dourif had dressed herself up as a tantalizing pin-up Poison Ivy for the occasion.\n\nAt a pale, 5'10\", the willowy cosplayer wore the green bikini decorated with fake leaves very well, her A-cup tits looking every bit as delightful as every square inch of her toned frame. With a bright red wig covering her buzzed hair and her soulful blue eyes accented with dark eyeliner and shades of green eyeshadow, her lips curled into a green lipstick colored grin, she looked unbelievably alluring. Kneeling on her bed, she beckoned me with one finger.\n\nPractically purring, Mallory said through dark green painted lips, \"Well, what are you waiting for?\"\n\nAnd, yeah, that's how we ended up on her bed, my fingers buried underneath her bikini bottom, furiously fingering her clit. She'd pulled down the top enough to free her perky, A-cup tits, allowing me to squeeze and tease them while the two of us made out.\n\nThings with Mallory had always been slower and sweeter when we hooked up, and today was no exception. While she may have looked the ultimate comic book seductress, when we lay next to each other, touching and kissing, she was the girl I'd come to know and like quite a bit since October. As my fingers rolled over her clit and explored her steamy folds, she moaned and rocked against me, her eyes looking at me with a loving gratitude. Her kisses were soft and sweet, lingering well as she moaned into me.\n\n\"More, more, please,\" Mallory begged as I ran my fingers in tight circles around her clit.\n\n\"Yeah?\" I asked. I looked deeply into her eyes, watching as her body responded to me.\n\n\"God, yes, right there...\" she whimpered, her voice soft and her need great. She kissed me again, grabbing one of my hands and placing it over one of her breasts. I took my cue well, massaging and squeezing it as appropriate, my thumb fondling her nipple as I continued to finger her at this just so perfect pace.\n\nMallory's breathing soon quickened, and she stared up at me with her soft blue eyes with such intense want. I knew she was close. Taking her over the edge... well, at this point, that was just my privilege. I swiftened my pace slightly, applying just enough extra pressure to make that last push over the edge all the more intense.\n\n\"Oh god!\" Mallory exclaimed, holding onto me as the orgasm hit her. She moaned, quite loudly, her body shuddering intensely as she held onto me. I eased off on her, slightly, wanting to roll her through a pleasant, intense orgasm. I kept her cumming long enough until she pressed against me, silently asking for me to stop, at which point I did.\n\n\"Wow... thank you,\" she murmured, kissing me again and smiling up at me dreamily. \"I've never been with someone for Valentine's Day, and even if you've got to get on your way soon, this made it really special. Thank you.\"\n\nI grinned. \"It's my pleasure.\"\n\nLooking at me, Mallory bit her lip. \"Do you have to get going really soon?\"\n\n\"Not right away,\" I said. \"Why, you want another?\"\n\nShe giggled. \"Maybe in a little bit, just, for now, I was thinking... could you just hold me? Cuddle with me for a while? It would feel nice to have someone a little longer, you know?\"\n\nWrapping my arms around her, I held Mallory tightly. \"I'm in no hurry.\"\n\nSnuggling up to me, Mallory buried her head next to mine and said, \"Thanks.\"\n\n***\n\nShould I have spent less time with Mallory? Maybe, but there was no way I was going to turn her down when she could clearly use some company. If it made me have to ride like hell to make my next stops, so be it.\n\nThankfully, Josie's house wasn't very far off.\n\nAnd yes, I know I said I was waiting until tonight for Josie; I wasn't going to her house to see her, strangely enough. Josie and her family were all out of the house today, leaving it the ideal location to meet up with one Fatima Hassan. The gorgeous Middle Eastern track star had an arrangement with our mutual friend Josie, to hide some of her more \"personal\" effects in Josie's room so they wouldn't be discovered by her nosy siblings. And with Josie's house conveniently empty for the day, well... it allowed an ideal opportunity for some consequence free sex, as Fatima would put it.\n\nWhen I biked over to Josie's house and let myself inside, I knew that Fatima would be there waiting for me.\n\nWhat I hadn't expected, though, was that I would find her waiting for me.\n\n\"Hey, Ryan,\" Fatima said, leaning casually against the wall of Josie's bedroom wearing not much more than a skimpy, pale blue thong bikini. A goddess with a tall, tight, athletic body and gorgeous face, from her long, lean legs to her silky black hair, currently tied back, every square inch of her soft brown skin was utterly delectable. The swimsuit itself carried her firm B-cup tits well, while the bottom... god, did it hug every inch of her tight ass well.\n\n\"I take it from your slack-jawed appearance that I chose the correct swimsuit?\" Fatima asked.\n\nDumbfounded, all I could do was nod.\n\n\"Thanks. It was a bit of a debate, but, you know the options I have to choose from, so you can understand how it would be a bit of a problem for me,\" Fatima said, pushing off of the wall so she could saunter towards me.\n\nFatima was a woman who knew how to use her body well, unsurprising for how well she had to take care of herself, and as she approached me, I was held in awe of her beauty and confidence.\n\n\"Of course, I understand if you think it might look better like this,\" Fatima said, pulling her top off and dropping it on the ground, exposing her pert tits to me. Her small, dark, and very hard nipples stood out to me, begging to be squeezed, played with and suckled upon.\n\n\"You'd look gorgeous in anything,\" I fired back, setting my backpack with its remaining flowers and chocolates on the ground. \"Or nothing.\"\n\n\"A fair point,\" she answered, removing the bikini's bottom and dropping it to the floor. Her exposed pussy was ready and eager, still perfectly shaved and with full, engorged lips and a fair bit of moisture already gathered.\n\n\"What do you think, now?\" Fatima asked me, smiling softly.\n\nI didn't answer her with words. Instead, I just approached her, wrapping my arms around her to pull her in close so we could kiss, deeply. Fatima liked it slow and easy, and after all the stops I'd had so far today, this was one I was happy to take slow and easy.\n\nI guided Fatima Hassan over to Josie's bed, laying her down and parting her legs.\n\nShe sighed welcomingly, stretching out pleasurably and opening her legs more invitingly.\n\n\"Would you please eat my pussy, Ryan?\" Fatima asked, smiling at me with a certain satisfaction.\n\n\"Gladly,\" I answered, climbing between her legs. \"After all, what else is Valentine's for?\"\n\n\"My thoughts ex-ACTLY!\" Fatima moaned as I leaned in and began licking her pussy. She groaned a low sound of pure pleasure, her hands running through my hair as I enthusiastically, but slowly, ate her out. As it went, with all I had done, and all I had to do still in front of me, slow and tender was definitely welcome in this case.\n\n***\n\nI would not find slow, tender sex at my next stop.\n\nIn fact, I highly doubted Izzy Barnes ever did anything slow.\n\nI stood behind her in only my underwear, while she wore absolutely nothing. The 5'2\", pale gamer girl with the shockingly bright blue hair was taking three of my fingers in her pussy hard from behind, while she had her hands braced against the wall of her bedroom.\n\nAnd, being Izzy, she was talking a mile a fucking minute.\n\n\"Holy shit, yes, fuckmefuckmefuckme, I love it, it's so good right there, yeah, you've missed this, haven't you? Of course you have, what's not to miss? I know I'm a lot and I can be annoying to some people but not to you, Ryan, no, you speak the language of fuck, which I'm completely fucking fluent in, almost as good as I am with my games, and, goddamn keep fucking me like that and I'll do pretty much whatever you'd ever want, goddamn, fuck, like that, come on, harder, harder, fuck me fucking harder, I can take another finger, FUCKING DO IT!\" Izzy squealed, looking back at me challengingly.\n\nShe was cute in a very different, distinct way, with dancing eyes and tight lips brought in a big grin, with a lipstick shade that perfectly matched her short, choppy hair and the frames of her glasses. With multiple piercings in her ears, a stud in her nose and a pierced belly button, she normally looked a pretty mellow girl, but get her talking for even a few seconds and you'd know she had enough energy that, if harnessed, she could probably power the entire west coast.\n\nAlthough her pussy already felt stretched to the max with my three fingers, I obliged her, angling my hand to force my pinky inside with the rest as I continued to roughly fuck her.\n\nIzzy squealed. \"Thank you, thank you, thank you! Fuck! I never put a lot of stock into Valentine's Day, even if I know it's a lot of fun and there's lots of guys and girls I could have fun with it, but none like you, no sirree, none like you, Ryan, no, you know how to romance a lady, get her candies and flowers and say all the right nice things, make her cum hard, and then fuck her as hard as a bitch like her deserves, and I'm one of those bitches who needs to be fucked nice and hard. Hahahaha, oh fuck... goddamn you can really fuck a girl hard with those fingers, can't you, motherfucker, four's a bunch, maybe too much, but you've got me so horny right now I could probably take your fist if you made me. You gonna make me take your fist, Ryan?\"\n\nI knew Izzy to be a kinky as fuck little slut, but this was a new one to hear. I wasn't sure if she was serious, but the way she looked at me with that big, broad smile, I knew she meant every word.\n\nI said, \"Maybe another time.\"\n\n\"Right, right, right, you've got a schedule to keep, I've got a schedule to keep, we've all got schedules to keep. Well, I've really got one to keep too, a Lonely-Hearts sort of raid for a bunch of sad sack gamers who don't have dates and will bitch about it the entire time; I'm gonna get the drop on them and get some hella sweet loot, so, fuck me like that, a little harder, a little longer, yesyesyes, do it, motherfucker, do it, fuck me harder, fuck me harder, fuck me harder... YES, MOTHERFUCKER, RIGHT THERE! RIGHT THERE! FUCK MEEEEEEEEEEEEEEEEEEEEE!\"\n\nIzzy's juices gushed all over my hand as she cried out in orgasm, her legs shaking so hard that I had to grab onto her with my free arm to steady her. She was squealing and laughing as she came, her eyes rolling back as she stuck out her tongue. I may not have spent as much time with Izzy Barnes as I'd have liked, but I knew her to be an animated and fun lover, even if she could probably wear out someone as unstoppable as the Juggernaut.\n\n\"Okay, okay, okay, that's good, you can stop fucking me whenever,\" Izzy said, laughing and pressing back against me with her hands. I stepped back, pulling my fingers from her clutching cunt and watching her as she gained a wobbly footing.\n\n\"Wow, that was so cool,\" she said, turning around to face me and pulling me in so she could kiss me deeply. \"You're completely and utterly positive I can't do anything for you, cuz you got one hell of a dick there and it feels like you need to cum in the worst way, and if it's cuz you're on a schedule, I can make it super-fast.\"\n\n\"I'm fine,\" I said, pushing her away respectfully. \"But I'd love to use your bathroom to wash up, if I could?\"\n\n\"Sure,\" Izzy replied, pointing me toward her restroom.\n\nWalking to her sink, I washed my hands of her juices, then looked up in the mirror to see Izzy standing behind me, still very much naked.\n\n\"I've got a question for you, I know it's a long way ahead to think, but, one I thought I'd ask, did you have any plans for Spring Break?\" Izzy asked.\n\n\"Not really,\" I said. Spring Break was going to be in early April this year, and with everything on my plate, that was far off in my mind.\n\nShe spoke even more rapidly, almost as if she were nervous about sharing the next part. \"Well, I have thought about Spring Break, haven't had a choice really. My parents, they don't think I have enough friends, and they could be right, they might not be, and I mean yeah I don't have a whole super big pile of them irl other than Jess, but that's neither here nor there. My 'rents and me usually do something together for Spring Break, but this year they decided they'd not make any plans, and instead make their family beach house available to me if I wanted to go there with any friends for Spring Break. It's not, like, the biggest fucking place in the world, but it's nice, and it can be fun, and I know you have some good friends, Josie's cool, and I like Brooke a lot because she's not all stuck up, and if they're your friends, you've got good taste in friends, so, if you don't have any plans, and if you guys wanna spend a week at the beach, you can come. Them and anyone else you think might be fun, if you want, if you did this it'd get my parents off my back about the kinds of people I have for friends. And, btw, thankyoufortheflower, nobody's ever gotten me one of those.\"",
        "Izzy blushed heavily at this, I'm not sure if it was more at the admission of the flower or the question about Spring Break. It was a lot to take in at once, but I had to admit, it was an intriguing idea.\n\n\"I gotta ask a lot of people... but it does sound like an interesting idea. Let me get through today alive, and then I'll get back to you?\" I said.\n\n\"Yay! Thank you!\" Izzy exclaimed, bouncing over to me and kissing me. I held the tiny gamer to me closely and kissed her back.\n\nQuietly, she whispered with her same enthusiastic grin, \"I really wanna fuck you.\"\n\nI laughed, \"I know.\"\n\n***\n\nBy the time I reached my last stop of the day, I was looking forward to getting home. The cool day was becoming a cold and cloudy day that threatened to rain. On top of that, with how my day had gone, I had been rock hard just about as often as I wasn't, and with no relief so far. I mean, I knew what I was getting into when I started, but I probably hadn't properly considered what hours of an erection and swollen balls would mean with the sheer amount of bike riding I had planned.\n\nI'd managed to avoid a lot of serious pain, especially thanks to the number of girls who'd given me rides, but if I didn't stop this soon, I'd have a pretty epic case of blue balls.\n\nThankfully, it wasn't a long ride to my next stop, and an even shorter one back home.\n\nAnd, of course, if I handled things well, this one would be fairly hit and run.\n\nTrue to the intel I'd gathered, the McNeil house was empty when I showed up and parked my bike out front. Walking up to the front door, I pulled out the most substantial care package from my bag. While this one contained the last of my flowers and small boxes of chocolates, it also contained a few additions, like a Blu-ray set of the first three John Wick movies, a bag of microwave popcorn, and a Valentine's card I'd made out to Tori. I'd made sure to find the cheesiest, least tasteful Valentine I could find to make sure it had not even the slightest potential connotation of it being romantic, and put in as friendly a message I could about hoping she might enjoy a movie night.\n\nThe last detail, beneath my signature, was the trickiest, and one I hoped that wouldn't seem too corny. Beneath my name, I drew a simple sketch of an olive branch. Call it foolish hope, but while things had been more cordial between Tori and I ever since our blowout on Thanksgiving, I was hoping that we might be able to return things to being actual friends again. While I completely understood that it would never be the same after what had happened, and that both of us were now dating girls who would take up a lot of the time Tori and I would have normally spent hanging out, I wanted my friend back.\n\nI was just hoping that she wanted the same.\n\nMaking sure the care package was clear to whoever got home first, I hopped on my bike and started to head home just as the first drops of drizzle began to come down. I was going to have to make this ride pretty quick if I wanted to beat the proper rain, but I thought I could, with a little luck.\n\n\"Ryan? Is that you?\"\n\nThe voice called to me from a familiar car. I ducked down to look inside, waving towards the window she had rolled down.\n\n\"Hi, Lauren!\" I said, shielding my eyes with one hand as the rain drops became heavier. \"I was just dropping off something for Tori.\"\n\n\"Oh, wonderful! Are you two patching things up?\" Lauren McNeil replied. Tori's mother looked as gorgeous as ever, even if the blouse and skirt she wore were quite professional and not the most flattering for her. Nonetheless, nothing could hide her beautiful face, stunning red hair, and her utterly massive tits.\n\n\"Maybe. I hope so. It's worth a try, anyway,\" I admitted. \"But if it's alright, I need to run back home before this gets worse!\"\n\n\"Need a ride?\" she asked me. \"The trunk's empty, you can stuff your bike in the back if you'd like.\"\n\nThis wasn't an offer I needed to think on for long. \"Sure!\"\n\nLauren popped the trunk, and I trundled both my bike and backpack inside of it before hopping into the passenger seat next to her. The rain started to kick in properly, so it seemed my timing was pretty perfect.\n\n\"Thanks for the ride,\" I said.\n\n\"Anytime,\" Lauren said, pulling back onto the road. \"I was just heading home, but I wouldn't mind a bit of a detour.\"\n\n\"From the office?\" I said, looking her attire up and down.\n\n\"You know it,\" she replied, brushing some of her red hair over her ear. \"Client called in at the last moment wanting to go over some proposals and... it was just a clusterfuck. A slow-moving clusterfuck, at that. Whatever, it's done, now.\"\n\n\"Well, good,\" I answered.\n\n\"Please tell me you're having a better Valentine's Day than I am,\" Lauren said, looking at me and smiling, amused.\n\n\"It's that obvious?\" I asked.\n\n\"Very,\" she replied.\n\n\"Yeah. I'm having a pretty good one. Busy, and a little crazy, but good,\" I said, thinking about what she had said. \"Sorry that things aren't going as well for you.\"\n\nLauren shook her head slightly, laughing miserably. \"Don't worry about it. I knew what I was getting into when I married a high-class chef, and that Valentine's Day would always be a work day for him. Still, doesn't mean a girl doesn't want to be romanced even a little on the day, you know?\"\n\nNow, I don't think that she was hitting on me then, since it seemed more like she was letting off steam. Nonetheless, Leah's spell and my vow for the month came to mind as I looked Lauren McNeil over. I remembered her luscious body, and the time we had spent together. It was in that spirit that I made a move I wouldn't have expected.\n\n\"Well, I can't promise you romance, exactly, but I can do something else for you...\" I said.\n\nLauren laughed, a high, pleasant sound. \"Is it better than that cheesy line?\"\n\n\"Much,\" I answered, dropping my voice low.\n\nBriefly, Lauren turned to look at me, her lips parting briefly as she took in a breath. \"Oh.\"\n\n***\n\nLauren McNeil's car was pulled into my house's empty garage. Not only did this keep the rain from pounding down on top of her vehicle, but it certainly helped keep prying eyes away as we set the car rocking.\n\n\"Oh, fuck, Ryan! Fuck!\" Lauren exclaimed, her eyes rolling back in ecstasy as I fingered her in the backseat of her car.\n\nI would have said something, but my mouth was busy. With her blouse unbuttoned, she had pulled her tits over her bra and let me feast upon them as if I were a starving man. With her immaculate DDD's in my face and my mouth full of bright pink nipple, I had quite a bit of fun pleasing her with my lips and tongue alone, while my hand was quite busy down below. With her skirt hiked up around her waist and her panties pulled to the side, I had perfect access to her hot, sweet pussy, fingering her clit vigorously with my thumb while thrusting my fingers in and out of her cunt.\n\n\"Oh, fuck, goddamn it, Ryan, why don't we do this more, why don't we... fuck... keep it going, remember this, remember me, remember how fucking hot I am... you may keep Valentine's for all these high school girls, but at the end of the day you'll never forget meeEEEEEEEEEEEEEEEEE!!!\" she cried out in release as her orgasm powered through her. She shook and shuddered, her pussy clamping down on my fingers while I kept my hand and mouth busy. I looked into her eyes as she came, pushing her through wave after wave of pleasure as I continued to finger her perfect pussy.\n\nWhen she finally came down, I pulled my fingers from her cunt, and she greedily pulled my hand to her mouth and suckled on them. It was an intensely erotic sight, and one I would have loved to do more with.\n\n\"I...\"\n\nFuck, this next part was hard to say.\n\n\"...I really need to get inside and get ready for my date.\"\n\nLauren sighed. \"I know, but, thanks for that. It seems I really needed a good cum.\"\n\n\"Well,\" I said with a grin. \"You know where to find me.\"\n\nShe smirked. \"I'm going to remember that.\"\n\nLooking at the hot-bodied redheaded MILF in front of me, I said, \"You're welcome anytime.\"\n\n***\n\nI stood beneath my showerhead for a long while, washing a day's worth of sweat and exertions off of me and loosening up sore muscles under the hot water. It had been a long day, and if it had ended here, I could probably have been a happy man. It wasn't the longest day of my life, to be sure, and not the longest day even this year; that probably had to go to the orgy I went to on New Year's. Even so, between the bike riding and all the women I'd pleased today, I was in need of a moment of downtime to relax, to cool down (so to speak, anyway, under this hot a shower) and reassess.\n\nI had done the crazy part of today. Now it was time for me to get ready for the real intense part.\n\nBrianna Roth.\n\nIn the days immediately after I'd lost my virginity, a number of Kaitlyn's friends started eying me, among them, Brianna Roth. Known as one of the biggest flirts in school, that I had her attention then was a little, well, intimidating. It was hard not to be intimidated by her, really, on sight alone.\n\nThough a fairly fit 5'4\", 18-year-old Brianna was utterly stacked. With a pair of very full F-cup tits that managed to strain the seams of any top she wore, and an equally epic ass, her body was thoroughly impressive at a glance. She carried a healthy, light tan that went well with her shoulder-length dirty blonde hair. Her face was an equal mix of sweet and sultry, with some of the most mouth-wateringly full lips that were often curled in a smile, and some of the biggest, softest brown eyes you were bound to see. Considering that she kept company with Kaitlyn Pruitt and other cheerleaders and tended to date some of the biggest guys in school, and you can understand why back when I was a background extra at school, that she seemed a few steps past untouchable, as well as highly intimidating.\n\nIt took the experiences of this year for me to understand that she was a surprisingly kind girl who was frustrated by the ways that a lot of the more popular guys in school viewed her. Our contact had been limited so far, a brief conversation here, me going down on her there, but I had known for a while now that I wanted to spend some real time with her, to get to know her and to, well... do I really have to spell it out at this point in the story? I knew she was a sweet girl with a positively nasty side hiding beneath that surface, and I was looking forward to seeing what the two of us could get up to away from school.\n\nIf you'd told me a year ago that I'd be having dinner on Valentine's Day with one of the most popular flirts in school, well... actually, honestly, I wouldn't have believed anything you'd told me about this year, so, I should probably get on with things.\n\nIt took a while before I finally felt fully clean and relaxed enough to step out of the shower and dry off. I hadn't considered how long I had taken, nor how long I took with Lauren McNeil, but when I heard the doorbell ringing, I quickly realized that I should have probably looked at the clock once or twice while I was showering.\n\n\"Shit!\" I exclaimed, tying the towel around my waist and running for the front door. I'd lost track of time, and I ran through what needed to happen. Yes, I'd cleaned up, and I'd turned the heat on, and I'd showered, but weren't there still so many things to do? I couldn't think about that now. I could hear the rain outside and didn't want her to get soaked, I just hoped that I got there in time.\n\nQuickly looking through the peephole to make sure I wasn't about to royally screw up, I then opened the door to see Brianna Roth standing outside in the darkness of early evening.\n\n\"It's really coming down out there!\" she exclaimed, closing a large umbrella and shaking it out underneath our front door awning. Brianna had come for the occasion dressed in a fairly nice, dark, long coat that nearly reached the ground and managed to close impressively over her curves. As she stepped inside where it was drier, I saw her give my current, nearly naked state an appreciative glance and a grin.\n\n\"I'm sorry! I just got out of the shower and kind of lost track of time. You didn't get too soaked, I hope?\" I asked.\n\n\"Ah, that explains your 'formal wear',\" Brianna joked, giving me another glowing grin. \"And, no, I managed to stay quite dry, actually; thankfully I've got a good umbrella. Where can I leave it to dry?\"\n\n\"Oh, by the door. Your shoes too, if you please,\" I said.\n\n\"Sure, thanks,\" Brianna said, setting first her umbrella, then with some consideration, she also took off the bag she had slung over her shoulder and added it as well before setting to her shoes.\n\nBent away from me, I got to see how well her long coat hugged her amazing, round ass, and had to tame my cock before it would rip a hole in the front of my towel.\n\n\"So,\" I said, hoping to change the subject for the sake of a little conversation before we got down to anything. \"How's your Valentine's Day going?\"\n\nBrianna laughed. \"Same old, same old. Up early for temple with the folks, getting home in time to have another screaming match with Mia before we made up and watched some stupid Hallmark movie we spent the whole time talking shit during, texted some with Kaitlyn, did homework, mostly just killed a lot of time before tonight. Like I said, same old, same old.\"\n\nI laughed. Brianna's fraternal twin sister, Mia, was one of Josie's friends, and I had gotten rather well acquainted with the pink haired, tattooed musician back in December. She was as passionate and protective of all she held dear as she was bitchy and prone to fights, but fuck was she hotter than hell. The sex we had was rough and memorable, and suddenly I found myself wishing it hadn't just been a one-time thing.\n\nI said, \"Sounds like Mia.\"\n\n\"Yeah. She met this college guy at some hipster record store and wanted me to cover for her so she could do whatever she does with guys tonight on her own time. I told her I wouldn't cover for her, that she's eighteen and she can fight her own battles with our parents and that I got my own plans and... yeah, that didn't go over so great,\" Brianna explained.\n\n\"Ouch,\" I said, sympathetic and suddenly quite glad to be an only child.\n\n\"You couldn't have fucked a little more sense into her? Tamed the bitch in her a little?\" she suggested, joking.\n\n\"Hey, her life is her life, I'm not going to tell her how to live it,\" I said.\n\n\"I know, I'm just blowing off steam. And I agree with you. Don't get me wrong, I know I talk a lot of shit about her, but I love my sister, really,\" Brianna said with a sigh, straightening up. \"But if there's something that can be fought about, we'll find a way to fight about it. But, enough of that, today. I'm not here to talk about Mia. Are you here to talk about Mia?\"\n\n\"No,\" I said.\n\n\"Then we're not going to talk about Mia,\" Brianna said in her sweet, innocent voice, approaching me. She pulled me in for a kiss, one I gratefully took. Her lips were every bit as soft as I remembered, and yet still somehow... more. More enticing, more delicious, more enthusiastic. Our tongues tentatively touched in the middle as we kept the kiss going on for a moment.\n\nParting was one of the most difficult things I had ever done, but somehow I managed. \"I haven't ordered any food yet, because I didn't know what you wanted, but I was going to get dressed for the occasion, and if you let me find my clothes, I can-\"\n\n\"I like you like this just fine,\" she replied, smiling cutely. \"If you're good like this.\"\n\n\"Oh, I'm very comfortable like this,\" I said, enjoying a good surge of confidence.\n\n\"Good,\" Brianna replied. \"And dinner can wait if that's alright? I think I'd like to talk a little, first.\"\n\n\"That's perfectly fine,\" I said. \"The living room's right over-\"\n\n\"Your room will be fine,\" Brianna said, stepping down the hall in front of me with a sway to her hips. I was enjoying seeing this side of her. While I knew her to be mostly kind and sweet, she had also told me not long after I ate her out that she could be a needy little bitch when she was in the mood. Seeing it here... well, it boded well for the evening.\n\n\"I guess it will be,\" I said, smirking as I led the way into my bedroom. I sat down on my bed, and though it was clear my erection was tenting the front of my towel, Brianna didn't seem to mind as she sat down next to me.\n\n\"So, this is your room?\" she said, taking in my horror movie posters and video games, my vinyl figures and assorted other collectibles. It no doubt was quite different from her own bedroom, but if it bothered her, she didn't let me know. Pushing her hands into my bed, Brianna seemed to be quite pleased that it appeared sturdy.\n\n\"Yeah,\" I said.\n\n\"It... suits you,\" Brianna said, smiling and trying to find her best words. \"I'm sorry, it's been a long time since I've been inside a guy's bedroom that wasn't full of dumbbells, car posters and the smell of AXE Body Spray. This is kind of new to me.\"\n\n\"Not a bad kind of new?\" I said, hopeful.\n\n\"Oh, no, very good. It's different, and I always like to try new experiences. I can get used to this, honestly. Your bedroom doesn't smell at all, you clearly take very good care of it. You probably take better care of yours than I do mine,\" she said.\n\nWith the amount of sex I'd had in this room with a wide variety of girls, I'd come to a fair understanding of how to keep things manageably clean, and not constantly smelling of various bodily fluids.\n\n\"It's a gift,\" I said.\n\n\"And you're a gifted guy, huh?\" Brianna teased.\n\nI shrugged. \"I guess you'll have to find out.\"\n\nShe smiled again, then quickly kissed me before sitting back a little nervous. Her eyes danced around from me to the rest of my room, a little nervous, maybe even a little skeptical.\n\n\"Are you alright?\" I asked.\n\nShe sighed.\n\n\"I don't want you to take this the wrong way, but I just need to say it so we can get it out in the air, but, it wasn't long ago that I never would've fucking imagined I'd be here, doing this. I mean, I wasn't a full bitch about it, not like Kaitlyn used to be or anything, it's just never something that came to mind. This all feels so unlikely,\" Brianna said, a little nervous.\n\n\"Funny, I was thinking something similar not long ago,\" I said.\n\nLooking a little embarrassed, she continued, \"You probably weren't thinking it like I was, though. I was... I would've been less nice about it, because even if I wasn't a full bitch, I was still bitchy. As soon as I filled in and got all *this* and I knew what kind of power came with my body, I might have been a bit bitchy and shallow and how I chose what guys I'd hook up with. Being friends with Kaitlyn and Haley and... well, they weren't really the kinds of girls then who could help me be a better person. They made it seem like if a guy was hot, that's all that mattered, and the cycle of shit and breakups was all normal. I spent a lot of Valentine's Days crying because of shit that fell apart with guys who weren't worth shedding tears over, and I told myself that this year, I wasn't gonna cry.\"\n\n\"I don't want you to cry, either,\" I said.\n\n\"I know, 'cause you're a nice guy. And not one of those evil fucking nice guys who tells everyone he's a nice guy and then goes around calling girls bitches when they don't put out for him, you're like, actually nice. Everyone tells me that's really who you are and what you're all about, and I don't know if it's because you're getting laid all the time or because that's actually who you always were, but today it's something I really need. I think I've needed some nice for a while,\" Brianna said, lowering her eyes.\n\n\"I was hoping you'd ask to be my Valentine. I know, it's sappy, and it's stupid and girly, but I *like* girly. I'm not stupid, but I like a little *girly* in my life, and this was one I was hopeful for. I know I had no reason to be, not when you've got your girlfriends and everything, but... I wanted to say that so you'd understand, I'm grateful that you wanted me here tonight. For all the mistakes I've made, I don't deserve it, but I'm really happy to be here, and I'm hoping you're happy I'm here too. I don't want this to be a pity thing, and I know you're too decent for it to be a pity thing, but it's hard not to overthink this a little,\" she finished, finally letting out one big, conclusive breath.",
        "That was a lot to share, but I was happy she had. I could understand a lot of where she was coming from, and I wanted to make this right for her before we went any further. Wrapping an arm around her shoulders, I pulled her in close.\n\nI said, \"I'll be honest when I say, I never thought you'd be here before, either. I had my uncharitable thoughts about you in the past, like you probably did me, because we all have to deal with all this stupid programming shit our friends and movies and TV has taught us about who everyone is in school like this. Nerds and popular girls don't mix, and all that. I think, when it comes down to it, a lot of the time we just gotta get to know people, see what they do as well as what they say, and make our judgments from there. Like, you've judged me to be nice, and for that I thank you. I try. I screw up sometimes, but I try.\"\n\n\"And you?\" Brianna asked.\n\n\"What about me?\" I said.\n\n\"How have you judged me?\" she asked.\n\nI could tell she was nervous when she asked, but I wanted to nip that in the bud right away.\n\n\"Like I said, back before we talked, I had a different image of you, but now... honestly, I think you're a sweet, nice girl who's made some mistakes but also knows what she wants to do about that, and that that is really cool. Most of us have no idea about what we're doing, so, you're ahead of the game for being able to admit that, and to me, that's cool. I like you, and I'd like to get to know you better, because I know I'd like you even more, then,\" I said.\n\nBrianna smiled, leaning her head against my shoulder. \"I like you too, Ryan. And I want to get to know you more, too. More than what Kaitlyn and Haley and the others have told me, I want to get to know you and...\"\n\nShe looked down at the front of my towel and smiled a little devilishly.\n\n\"Cool,\" I said, waiting what felt like an appropriate moment before adding, \"And you have an amazing pussy.\"\n\nShe laughed, loud and free. \"I'm glad to hear it. Even gladder that you know what to do with it. I haven't met more than one or two guys at Regan Hills High who know what to do down there.\"\n\n\"Practice,\" I said.\n\n\"So I've heard. Lots and *lots* of practice,\" Brianna said, licking her lips. \"I could tell.\"\n\n\"You could?\" I asked.\n\n\"Yeah,\" she replied, blushing slightly. \"That was a really, really good orgasm you gave me. It's kind of hard to forget. And actually... I've been thinking about it a lot since.\"\n\nI liked where she was going with this. \"Yeah?\"\n\n\"Yeah,\" Brianna repeated. \"It was hot, and by hot I mean really, really fucking hot, and... when I've needed to get off lately, I thought about what we did. I'd think about it and touch myself and cum really, really hard again like I'm right back in that classroom again. Like I said, it was really, really, *really* frickin' good.\"\n\n\"Well, thank you,\" I said, grinning. \"Always love to hear a good review.\"\n\n\"I could give you a few million reviews for the one cum,\" she said, dropping her voice lower. \"But I want more than that, honestly.\"\n\n\"Oh?\" I asked, raising an eyebrow.\n\nBrianna licked her full lips tantalizingly. \"Do you remember what I told you in that art room after you made me cum?\"\n\nDropping my own voice now, I said, \"You said a lot of things. Made a lot of promises.\"\n\nBrianna nodded, smiling at me seductively. \"Oh, I did, and I mean to make good on all of them.\"\n\nShe stood up from my bed, looking down at me as she toyed with the buttons and belt of her coat. With a sweet, innocent voice, she said, \"I want to feel that cock all my friends have told me about. I want to touch it, and I want to feel it destroy my cute, tight little holes. I want to taste it. I want to do *everything* with it to make you, and me, feel very, very good.\"\n\nShe undid a couple of the large buttons toward the top, revealing the expanse of her epic cleavage to me.\n\n\"You spent all day spreading pleasure around, the same kind of pleasure that you gave me so amazingly back at school, so on behalf of all the girls at school whose Valentine's you improved, I want to thank you. And... yeah, when I said this wasn't over, I meant it. In fact...\" she said, fully undoing her belt and pulling her coat open.\n\nWhile I might have suspected she was naked underneath her coat, it's a different thing entirely to have it confirmed. To see those amazing, full F-cup tits, her thick, soft brown nipples with the wide areolas, and her beautiful shaved pussy already moist and ready for me. From this distance even, I could smell her arousal, and knew I was in for something good.\n\n\"...we've only just begun,\" Brianna finished, dropping her coat to the floor and leaving her completely naked. She twirled around quickly, giggling and giving me a view of her beautiful ass, before looking at me and smiling like the cat that ate the canary.\n\nRunning her hands over her body, with one playing with her pussy while another squeezed a tit, she said, \"So, Ryan... what do you think?\"\n\nRather than say anything smart, I simply undid my towel and finally let my ten inches of achingly thick cock spring free. My balls were extra full and ready after a day of enforced abstinence, and with this in play, it felt like I might have had a little extra length to my cock. Precum already oozed from the top of the throbbing head, ready and waiting for whatever Brianna had in mind.\n\nThe busty blonde's mouth dropped open in shock as her eyes went wide. She dropped to her knees and crawled toward me eagerly, looking up at me with lusty intensity.\n\n\"Is that all for little old me?\" Brianna said, her voice leaning into her cute innocence again, a sound that made my cock twitch for how little it fit her epically sinful body.\n\n\"Yeah,\" I said.\n\nPlacing her hands on my thighs, Brianna parted my legs and crawled up until her face was inches away from my cock. Eagerly, she said, \"Goodie.\"\n\nShe knelt there for what felt like a while, simply staring at my cock and taking in every inch of it with her awe increasing by the moment.\n\n\"This is... epic... amazing... I've never seen anything like it, and I've seen so many cocks like, you couldn't imagine... I knew that Kaitlyn was telling the truth, but this is something else, something, beyond truth... I know absolutely everything I want to do with it, but couldn't even begin to know where to start,\" Brianna mused, now almost as intimidated by my cock as I once was of her.\n\n\"I'm sure you'll think of something,\" I said, twitching my cock so it almost bumped the side of her face. Brianna giggled cutely. Tentatively she reached her hand out and grasped the base, unable to fully close her fingers around it.\n\n\"What do *you* want me to do with it?\" Brianna asked, keeping her voice innocent as she looked up at me with her big, beautiful brown eyes. Slowly, she ran her hand up to the tip of my cock, running her palm over the head and spreading the precum around. I hissed at the contact, overstimulated and in terrible need for any contact after waiting all day for this moment. Her lips parted in an enticing O shape as I saw her silently say 'wow' upon grasping the head, and I watched her chest heave as her breathing became more ragged.\n\nSeeing her lick her lips made the answer very, very simple.\n\n\"Suck my cock,\" I commanded in a low, eager voice.\n\nBrianna's lips curled in a wicked smile, as she silently nodded.\n\n\"You got it,\" she said, planting a big, wet kiss on the throbbing head of my cock. I groaned at this initial contact, enraptured at the sight as she leaned away briefly and of the string of precum that still connected her lips to my cock. Brianna ran her tongue over her lips, savoring the taste and moaning before kissing my cockhead yet again.\n\nOf course, this time she didn't stop at just a kiss, parting her lips and bringing the massive head into her mouth. Those beautiful full lips of hers looked stretched to the max as she took in my cockhead, but the way her tongue danced over it made me moan so much I couldn't have cared if I wanted to. Her tongue was eager and sweet, rubbing over every last sensitive spot on the head, even paying special attention to the hole at the tip.\n\nI hissed again with pleasure, running a hand through her beautiful, dirty blonde hair.\n\nBrianna let my cockhead go, then smiled up at me. \"If you think that's impressive, you haven't seen *anything* yet.\"\n\nAnd with that, she proved her point by inhaling my cock down to the root in one simple thrust.\n\n\"Holy shit!\" I exclaimed as I felt her mouth and throat envelop my cock all at once. She held it like this for a moment, looking up at me to see if I was as thoroughly impressed as she wanted me to be. Given what she had done, it was hard not to be, as my wide eyes and slack-jawed mouth could attest. While it was hard to read her expression, the way her eyes danced with mischief, I could tell that she was pleased with herself.\n\nThat, and how she reached between her legs and began to touch herself. She writhed on her knees, riding her fingers with my cock still buried in her throat, and as she touched herself, she moaned, sending vibrations around my cock.\n\n\"Oh god... fuck, that's good...\" I moaned, continuing to run my hands through her hair.\n\nPulling off of my cock, gasping and trailing strings of drool between her mouth and my cock, Brianna smiled up at me proudly. \"Yeah? Because, I don't know if you know this, but I got a reputation for being, like, one of the best fucking cocksuckers in school.\"\n\n\"Yeah?\" I asked, watching as the strands connecting my cock to her mouth broke and splattered against her tits messily, groaning softly as she slowly jerked my cock.\n\n\"Oh, yeah. Kaitlyn and I had this thing going for a while, kind of fighting each other to see who could give the best BJs in school. The guys on the football team voted for her, but the basketball team... they were all me. They've got good taste, after all. Probably going to have to work our way through the soccer team to see who the real winner is,\" Brianna said, cocky and continuing to jerk my cock.\n\nBefore I could answer her, she took my cock into her mouth again with one conclusive thrust, this time sucking and fucking my cock with her mouth. I couldn't compare her to any of the other girls I'd been with this year, not when my mind was in this crazed and horny a state, but fuck, she gave amazing blowjobs. She was enthusiastic and considerate, sucking my cock with such devotion that I felt like a fucking king. Of course, she was also thoroughly a mess whenever she came up to breathe as her massive tits caught all her drool and stray precum. She was a beautiful mess as she fucked my cock with her mouth, and if I didn't know any better, I would have thought it a wild, unrestrained act of pure lust.\n\nHowever, it wasn't *that* simple, either. Brianna was right, she was good at this, but she was much better than she let on. As horny as I was from the day I had, it wouldn't have taken a lot for me to pop off at this point and fill her mouth until it overflowed with cum onto her tits, but she knew this. She would go quickly for a few moments, and then slow down, edging me until I was nearly a wild animal driven by one thing and one thing only.\n\nI couldn't tell you how long this went on, but after the fifth or sixth time she denied me anything resembling release, I grabbed a handful of her hair and pulled her mouth from my cock. Brianna winced slightly from the sudden pain, but she looked up at me with a sweet, mischievous smile that told me this was exactly what she wanted.\n\n\"Is something wrong?\" Brianna asked cutely, blinking up at me innocently but still keeping her grin playful and teasing. I got the impression she liked playing the sweet, innocent little angel to get a guy to go rougher and harder. Well, if that was how she liked it...\n\nGrowling, I commanded, \"Get on the fucking bed.\"\n\nBrianna squealed as I grabbed her by the shoulders, pulled her to her feet and tossed her onto the bed. She giggled as she landed face down, pushing herself up on her knees before she could get her hands under her. It was a beautiful face down, ass up position, one where it seemed she might actually have accidentally shoved her ass in my face.\n\nHer beautiful, round, very full ass. The cheeks were parted, giving me a beautiful look at her tight, pink asshole, while her pussy... fuck, I'd seen it before close up. I'd eaten her out in that art room, but without the thrill of potentially getting caught, I could swear it looked even juicier, even tastier now. Brianna's pussy dripped with her lust, her intoxicating aroma filling my nostrils and driving me wild. I knew that she wanted to make this about me, but there was no way I couldn't feast when such a buffet of depravity was that close to my face.\n\nAnd so, I pushed my face in, and I feasted.\n\n\"Ryan!\" Brianna exclaimed, legitimately surprised. \"Oh, fuck! Oh my... so good!\"\n\nI licked her pussy up and down, running my tongue over her clit energetically before exploring the rest of her folds. I had eaten her out before, and I knew what she liked, but this was as much for me as it was for her at this point. I needed her flavor, I needed to make her squeal and cry out with pleasure.\n\nAnd most of all, I needed to do to her what she'd done to me. I pushed her to that edge without driving her over, I made her quiver and shudder in anticipation of an orgasm before denying her. She moaned and mewled, disgruntled at this kind of treatment, but at this point I was certain that turnabout was fair play.\n\n\"Ryan... you're being mean...\" Brianna teased, groaning and writhing against my face.\n\n\"Yeah, maybe I am,\" I said, giving her pussy one last, long lick. \"But you're loving it, aren't you?\"\n\nI looked around to see her face, and caught her blushing. She said, \"Maybe.\"\n\n\"Well, we can do better than that,\" I said, leaning in and licking her tight asshole. Brianna squealed in surprise at my efforts as I vigorously rimmed her asshole, quaking and pushing back onto my face as I worshipped her tightest, most forbidden hole. I could have done a lot with her then and there, but where was the fun in that when I had such a willing, hot-bodied slut just begging to be fucked.\n\nAnd so, after one playful stab of my tongue just barely into her asshole, I leaned back, flipping her onto her back on the bed and parting her legs.\n\nBrianna looked up at me now, considerably less playful as it was understood what was coming next. She looked from my cock, up to me, and then back down to my cock as the gravity of what she was in for hit her.\n\n\"Wow...\" Brianna murmured breathily, licking her lips with anticipation. \"Please... Ryan, I need it so bad... I need your cock in me... this slut needs to be fucked so hard... won't you be my Valentine and fuck me the way I deserve?\"\n\nShe was clear in what she wanted, and I was happy to oblige. This was a culmination of something that had been waiting between Brianna and me for quite some time, and I could not wait to see it through.\n\nI leaned down over Brianna Roth, enjoying a moment to feast on her tits, suckling at her perfect nipples and making her cry out with pleasure, before I climbed up to be face to face with her. I kissed her, deeply and passionately, and she was more than happy to return the energy. She kissed me over and over, suckling gently on my tongue as if it hadn't nearly been up her ass just a moment ago.\n\nI felt her reach down and grab my cock, jerking it enthusiastically as she guided it toward her pussy.\n\n\"You like to play the nice, sweet, innocent girl, but you're really a nasty little slut, aren't you?\" I asked her.\n\nBrianna smiled at me devilishly. \"Actually, I'm both. I am good, and sweet... but I'm not really innocent, and, yeah, I am a total fucking slut... but now, I want to be a slut for the right kind of guy.\"\n\n\"Yeah?\" I said, enjoying the feel as she started to rub the head of my cock against her achingly hot cunt. Slowly, I pushed forward, spreading her outer lips without fully pushing inside.\n\n\"Yeah...\" she whimpered, her voice suddenly very soft, and nearly silent. \"I don't know if you're going to fit, you're so big and I'm so tight...\"\n\nBrianna grinned up at me, looking both eager and actually nervous.\n\nI smiled down at her, kissing her, then said, \"Let's find out.\"\n\nBiting her lip, Brianna quickly nodded, looking down her cleavage as I started to press into her. I groaned as her tightness accepted me, while she held back loud cries of agony and ecstasy through her bit lip. Her pussy opened for me slowly, first parting for the head, then embracing me tightly as the head finally pushed inside of her.\n\n\"Holy shit!\" she exclaimed, her eyes rolling back as her cunt muscles grasped me tightly. \"That's the biggest fucking thing I've ever had inside me, I mean... fucking hell...\"\n\nThough I was held in place by the pure pleasure of Brianna Roth's pussy, I laughed, slightly. \"And that's just the head.\"\n\nBrianna's eyes went wide. \"You're fucking with me, that can't be just the head.\"\n\nShe looked down, her mouth dropping open. \"Holy fuck, it is just the head.\"\n\nI thrust forward, burying another couple of inches into her hot, wet cunt. I grunted, \"A little more than the head now.\"\n\n\"I can tell!\" Brianna gasped, laughing as I forced another several inches inside of her. \"Holy shit, go easy, go slow... yes, like that, keep going, keep going...\"\n\nInch by inch I pushed my cock inside of her, and though it felt like I was at risk of having my cock squeezed straight off by her intensely tight pussy, it wasn't long before I was buried fully inside of her.\n\n\"Oh fuck... oh fuuuuuuuuuuuuck...\" she moaned, kissing me. \"I've never... never had anything... fuuuuck...\"\n\n\"I'm going to take that as a compliment,\" I said, twitching my cock inside of her, the action sending pleasure coursing through both of our bodies.\n\n\"You should,\" Brianna replied. \"Holy shit, that's ten inches of cock inside of me. That's ten fucking inches of cock...\"\n\n\"You had it down your throat just fine,\" I said.\n\n\"Big difference,\" she said, looking down again with wide-eyed wonder. \"But I'm not complaining! Fuck, I love it! Feels so fucking good in my little pussy... though it's probably not so little anymore, is it?\"\n\n\"I'm glad you're enjoying yourself. Because you said you wanted to get fucked, and I intend to deliver on that,\" I smirked, pulling halfway out and driving home.\n\n\"Yeah?\" Brianna whimpered, her voice rising into that sweet, innocent tone that did terrible things to me again. I did this to her again, making her moan. We were both so sensitive at this point, that I doubted it would take a whole lot for either of us to cum.\n\nAll the more reason to savor every second of this.\n\nI kissed her again, deeply, slowly. Brianna moaned against my lips, kissing me back and enjoying the feeling of our bodies pressed against one another.\n\n\"I've wanted to do this for a long time,\" I admitted.\n\n\"Me too,\" she admitted softly, looking up at me and blinking her big brown eyes at me.\n\n\"You were always so hot, but you were so out of my league,\" I said, pulling almost all the way out and thrusting into her fully. \"But not anymore...\"\n\n\"Not anymore...\" Brianna groaned, her eyes rolling back as my cock filled her. \"Fuck... fuck me, Ryan... fuck me with that huge fucking nerd cock... fuck... I need it... I need it so fucking bad... fuck me hard, make me cum, make me scream, make me... FUUUUUUCK!\"\n\nI drove in and out of her fiercely, fucking her in long, fast strokes that seemed to strike her deep in her core. Brianna's moans and wails only increased as I fucked her, her cunt clutching and squeezing my cock, demanding my own pleasure on top of her own as I fucked her. Looking down at her as her epic tits bounced with every thrust, I was in fucking heaven. I'd had so many fantasies about Brianna Roth back before this year, but because she was always such hot shit and popular like Kaitlyn, I never even dreamed of anything like this happening.",
        "And here I was, on top of her, buried ten inches deep in her pussy, making her scream and scream loud, for now that we weren't at school, Brianna was truly a noisy fuck. Looking down at her, watching as her face was screwed up in a look of pure lust, I don't think I'd ever seen her looking more beautiful.\n\nUntil she said, \"I want to ride you... can I ride you... pleeeeeeeeeeease?\"\n\n\"Sure,\" I said, rolling over while she was still impaled on my cock. Watching her sit up on top of me with my cock buried inside of her... her running her hands up her body, squeezing her tits before tracing her fingers through her hair... okay, that might be Brianna at the most beautiful I'd ever seen her.\n\n\"This feels so fucking perfect...\" she said, bouncing on my cock energetically, smiling and laughing. I grabbed onto her epic ass, holding and squeezing her soft but firm flesh and enjoying the ride.\n\nAnd what a ride it was. Looking up at her pretty face as she smiled and laughed and rode my cock was one thing, but seeing this while her simply awe-inspiring tits bounced above me was something else entirely. She rode my cock the way an artist works in their chosen medium, creating perfection from the simplest elements. I looked down to where my cock pistoned in and out of her stretched-to-the-max cunt, feeling her milking me with every bounce and knowing that it wasn't long before she would soon achieve her goal.\n\n\"I'm gonna cum...\" I warned her.\n\n\"Just a little longer, hold on a little longer, pleeeeease, Ryan? I'm so close, so fucking close,\" she said, leaning down and placing her hands on either side of my head so she could ride me harder. Considering that this shoved her tits in my face, and one of her nipples straight into my waiting mouth, I was pretty sure by this point she could keep me distracted as long as she needed to force her own orgasm.\n\nSo, I suckled at her breasts, kissing and licking and pleasuring every inch I could get my mouth on as she rode me with all she had, and oh did Brianna have a lot.\n\nShe rode me like a woman possessed, her ass slamming up and down with an expertise that took almost the entire length of my cock out of, then into her pussy with every bounce. I was distracted by her tits, but only so much could be done at this point. Cum had been boiling in my balls all day, and the dam could only hold things back so much longer.\n\n\"YEEEEEEEEEEEEEEEEEEEEEESSSSSSSSS!!!! FUUUUUUUUUUUUCK!!!!!\" Brianna cried out, riding me hard as she came. Her cunt squeezed me hard as she bounced, forcing my own orgasm to tear through my body. I grunted loudly as the cord holding back pleasure within me snapped, and all at once it utterly consumed me. I came inside of her pussy hard, filling her with shot after shot of cum as my balls flexed with nearly painful relief. I understood now that I was holding back today for this very moment, to fill her as she needed to be filled while she came around me.\n\n\"I can feel it,\" Brianna moaned, sitting up on me and squeezing her tits. My cock still impaled within her, she rocked her hips slightly, savoring. \"I can feel it all... so much cum... you really were backed up today.\"\n\n\"I had a busy day,\" I admitted.\n\n\"I can tell,\" she replied, opening her eyes and looking down at me with that beautiful face that comes only from the afterglow of amazing sex. Leaning down, Brianna kissed me, her tits pressed into my chest feeling nearly as good as her mouth on mine.\n\n\"Thank you. So much,\" Brianna purred after a kiss.\n\n\"It's my pleasure,\" I said.\n\n\"It sure was; I think I'm gonna be dripping cum for a week after this,\" she said. It was interesting to hear her now, her voice no longer that mix of sexpot and innocence. It almost sounded like she was at school, her normal self, I wagered, but obviously wearing a lot less clothing.\n\nAnd, you know, still impaled on my cock.\n\nBrianna clung to me for a moment, clearly not wanting to leave, but I felt her shudder against me a little.\n\n\"Are you alright?\" I asked.\n\n\"Oh, I'm very good... just... can we get under the covers? It's a bit chilly, and when we're not all hot and bothered...\" she explained.\n\n\"Sure,\" I replied, helping her get off of my cock (as much as I would have loved to stay within her), and pulling back the comforter so we could both crawl underneath.\n\n\"Thanks,\" Brianna said, rolling onto her side so her back was to me. Taking the cue, I rolled onto my side as well, spooning her and holding her close, my hands resting on her immense breasts.\n\n\"Aaaahhhhhhhhhh...\" she said, sounding very satisfied as we cuddled up against one another. \"Perfection.\"\n\n\"That was pretty amazing,\" I said. \"You've got a way with dirty talk.\"\n\n\"Thank you; I do try,\" Brianna answered, rubbing her ass up against my semi-deflated cock. \"Kaitlyn's always told me I'm good at the demure little princess and turbo slut voices, so I like to mix and match depending on the guy or girl I'm with. They both seemed to work for you pretty well.\"\n\nI squeezed one of her nipples hard, making her hiss and push back against me. I said, \"You don't know the half of it.\"\n\n\"Maybe I don't, but I liked what I got out of you, making you all growly and in charge... it was a lot of fun. Definitely made for the best Valentine's Day,\" she said.\n\nI pressed my face into the back of her hair, taking a lingering smell of her scent and simply enjoying the feel of her body against mine. My erection came back in force, pressing against her ass in a way that Brianna seemed to enjoy. She pushed back against me, squeezing my cock with her ass cheeks as we settled into this position.\n\nBrianna sighed pleasurably. \"I know there's a lot of girls you could have shared your bed with tonight, a lot of really, *really* hot girls out there, and if I were more like Kaitlyn, I probably would be spending this time here telling you why I was secretly better than all of them and why you made the right choice.\"\n\n\"But you're not like Kaitlyn,\" I said.\n\nShe shook her head. \"I'm not. Don't get me wrong, I love her-\"\n\n\"As do I,\" I interrupted, \"but she's...\"\n\n\"...Kaitlyn,\" Brianna finished. \"She's her own thing, like I'm my own thing. So I don't wanna take down all the other girls who you could've been sharing your bed with on Valentine's Day. I just want to say thank you for deciding to share this time with me, while it lasts. I really hope we get to do this again sometime.\"\n\n\"Me too,\" I said, rather enjoying snuggling up behind her. \"And maybe we'll finally throw together that threesome with Kaitlyn, too.\"\n\nI growled appreciatively at the thought of that, massaging Brianna's tits more enthusiastically.\n\n\"Oh, you really like that thought, don't you?\" she said, rubbing her ass against my cock.\n\n\"Uh huh,\" I said. \"Kaitlyn... she excels at threesomes. And foursomes. And orgies...\"\n\n\"She's really fucking good at sex...\" Brianna said, before her voice took on that sweet, high, slutty tone again. \"...but I could be better, I think...\"\n\n\"Yeah?\" I asked, taking the opportunity to play along.\n\n\"Uh huh. Want me to show you?\" she asked.\n\nI liked where this was going. \"Yes, please.\"\n\n\"Goodie,\" Brianna purred, reaching back and taking my cock in her hand. Jacking it gently, she coaxed out some more precum and began to run it over the head of my cock. Then, grasping me in her hand, she slid my cockhead between her ass cheeks and began to rub it against her tight hole.\n\n\"Oh, so it's like that, then,\" I said, continuing to massage her tits.\n\n\"Uh huh...\" she said, teasingly running my cockhead over her asshole without actually pressing it inside. \"I've got a really tight ass that all the boys seem to want, but few of them ever actually get because I'm picky... but even though it scares me a little, I know I want your cock in my tight little ass. Will you do that for me, Ryan? Will you fuck my slutty little ass?\"\n\nIf a question with a more obvious answer had ever been asked, I don't want to know what it was.\n\n\"I will...\" I grunted, wanting to take her now but knowing that if we wanted this to be fun, we had to play it carefully. \"...but we're gonna need some lube, first.\"\n\n\"Oh, yeah,\" Brianna said, dropping her playfully sweet voice and suddenly sounding very practical. \"That would be way better. Where do you keep yours stashed?\"\n\n\"All over the place,\" I laughed, \"but in that bedside table in front of you, should be some within arm's reach in the top drawer.\"\n\nWithout pulling away from me, Brianna reached for the drawer and pulled out the bottle of KY. \"Score!\"\n\nShe handed it back to me, and soon I coated my cock and tossed the bottle aside.\n\n\"You've done this before?\" I asked, sliding my cock between her cheeks and rubbing it against her hole experimentally.\n\n\"Mmm, a little... sometimes with a toy, a couple times with guys... none of them this big, of course,\" Brianna admitted.\n\n\"Of course,\" I said, grabbing hold of my cock and rubbing it up against her hole. \"I'll go slow.\"\n\nShe cooed at the contact. \"Only while I'm getting used to you... once I have that monster up my ass, you better go to town on me. I haven't been seriously ass-fucked in a while, and I always cum so fucking hard with it.\"\n\n\"Happy to hear it,\" I said, holding tight and beginning to press against her resistant asshole. \"Now, remember how you said you wanted me to make you scream?\"\n\n\"Uh huh...\" Brianna whimpered as I started to apply more and more pressure. Even with her relaxing and willing me to fuck her, Brianna's ass was fairly unyielding. This was going to be a very fun challenge.\n\n\"Good,\" I said, pushing until I felt some give. \"Because I think you'll be doing a lot of that very, very soon.\"\n\n\"Okay-HOLY FUUUUUUUUUUUUUUUCK!!!!\" she cried out, pounding the bed with her hands.\n\nYeah, you can say I'd broken through. My cockhead popped inside of her tight little hole, and if I hadn't just cum a little while ago, I certainly would have in this position. Brianna's ass was incredibly tight, and her mewling cries as she writhed and struggled and pounded the bed in front of me threatened to push me out of her. Still, following her demands, I held onto her tightly, waiting for this initial wave of resistance to pass before I started filling her further.\n\nWhen she started to calm somewhat, I asked, \"Are you alright?\"\n\n\"I've got your cock partway up my ass,\" Brianna answered, squeezing my cock with her ass cheeks. \"I'm not sure that's what a lot of people would call alright, and it hurts like hell, but it also feels so fucking good... more, please, Ryan... I want more... just take it slow... for now...\"\n\nI could do that just fine. Now that I no longer needed to line myself up with my hand, I reached around her, playing with one of her nipples with one hand while fingering her clit with my other as I slowly pushed into her ass. Brianna squealed and moaned as I fed more and more of my length into her, but she never once complained. She never said anything, really, having lost much of her talkativeness as I pushed more and more into her. At the halfway point, she was simply breathing heavily and moaning, looking back at me and turning her head to kiss me as I gave it to her. With only a couple inches to go, she was grunting animalistically, looking back at me with a violent need.\n\nSensing this as my moment, I thrust the last couple inches into her forcefully, forcing her eyes wide.\n\n\"MOTHERFUCKER!\" Brianna cried out, screaming and thrashing against me as I held her close with my cock buried fully up her ass. \"Oh, you bastard... so fucking good... oh you bastard, you'll pay for that... fuuuuuuuuck.\"\n\n\"Admit it, you loved it,\" I said.\n\nDropping into her cutesy voice again, she replied, \"Maybe... you gonna fuck me hard now?\"\n\nI kissed her again, then said in a dark, warning, voice. \"Just remember... you asked for this...\"\n\nWith that, I pulled almost all the way out, and quickly slammed home. Brianna grunted and moaned, loudly, but she wasn't exactly to the point of screaming that she had demanded earlier. I was going to fix that, and if it meant fucking her exquisite ass hard and rough until she did, well, I was going to have to do that, then.\n\nAs it turned out, I was quite adept at making Brianna Roth scream. She wailed rather pleasurably as I fucked her ass, and while I was only able to get so much traction in the spooning position like this, I was able to still give it to her pretty damn hard. Her pussy was practically gushing against my hand as I fingered her, as this kind of treatment was clearly doing it for her.\n\n\"Fuck me, fuck me, fuck me, fuck that ass... yeah, you like that ass, don't you? You like that slutty fucking ass...\" Brianna groaned, pushing her ass back against me as I fucked her.\n\n\"It's amazing... so tight... so hot... fuck you're so goddamn hot...\" I grunted.\n\n\"You're gonna make me cum with your cock up my ass...\" she moaned. \"You know that, right? Gets you all... FUCK!... gets you all hot, doesn't it...\"\n\n\"The best... so fucking good...\" I moaned, holding her close and kissing her as I continued to fuck her ass.\n\n\"Make me cum... make me cum and I promise I'll get you a good picture... get you a great fucking picture... you want that, don't you...\" Brianna moaned, her body shuddering gently against me as another orgasm began to creep up on her.\n\n\"Fuck yeah...\" I groaned, looking forward to what she had in mind.\n\n\"Do it, do it, keep fucking me, keep fucking my slutty ass, yes, like that, right there, keep fucking my ass, fuck me, Ryan, fuck me but don't cum yet, I need that cum, fuck me fuck me fuck me fuck me fuckmefuckmeI'M CUMMING! I'M FUCKING CUMMING! YES, FUUUUUCK YEEEEEEEEEEEEEESSSSS!!!!\" Brianna screamed, her body wracked by another orgasm. I felt her pussy gushing against my hand as her ass clamped down hard on my cock, and if it hadn't been for my recent orgasm, I think I likely would have cum right then and there.\n\nBrianna was a delightfully sexed-up mess, laughing and shivering as she came down from the high of her orgasm. I slowed my fuck, holding her closely and making out with her as her body relaxed and she looked at me, grinning like the cat that ate the canary.\n\n\"Mmm, fantastic,\" she groaned, squeezing my cock with her ass and sending sharp blasts of pleasure through me. \"You want that awesome picture, right?\"\n\n\"Yeah,\" I replied, needing pretty much anything that would help with my release at this point.\n\n\"Good,\" she said, disentangling herself from me. She pulled my cock from her ass and threw back the covers, looking around the nearby bedside tables until she found my phone and passed it to me.\n\nI rolled onto my back and could only watch as, magnificent tits hanging beneath her, she leaned over me and took my cock straight back into her mouth. She went to town on my cock, sucking and fucking me with her mouth, her tongue going crazy as it worshipped my cock with her lips. I would never have taken Brianna as a girl who'd be into ass to mouth, but she took to it like it was her lifeblood. She sucked me furiously, looking up at me with those big brown eyes, wanting, *needing* to feed on my cum.\n\nThis would not prove a problem for me, as I could barely hold back any longer after having her tight ass. It only took a few minutes before I was cumming in her mouth, filling her with another heavily backed up load of semen. She slurped at it lustfully, consuming it as if it were her last meal, but even Brianna, master of blowjobs, couldn't take it all down. I could feel her mouth filling, see it dripping out from the edges by the time I was finished.\n\nBrianna kneeled up after this, showing her beautiful body and cummy pussy, then opened her mouth to show me the mouthful of cum she still held. She opened wide, showing off, letting some of it roll down her lips and onto her tits.\n\nYeah, Brianna was right about having a pretty great idea for a picture.\n\nI took a few shots of her like this before Brianna swallowed the mouthful.\n\n\"Fuck, that was a good Valentine's,\" she said, her voice sweet while her body looked positively far from sweet.\n\n\"Agreed,\" I said. \"So... weren't we supposed to have dinner at some point? I feel like I promised you dinner.\"\n\n\"Oh yeah,\" Brianna joked, rubbing another splatter of cum from her tits and sucking it from her fingers. \"I mean, I am kind of full after all that, but...\"\n\nLaughing, I threw a pillow at her.\n\n***\n\nIn the end, we actually did wind up ordering dinner. A promise was a promise after all, and I had promised a dinner in addition to some Valentine's fun. Anyway, a good meal would certainly help keep my energy up for whatever debauchery Josie and Brooke had in mind.\n\nAfter sharing a shower between us and getting dressed (Brianna had packed her bag with clothes for the occasion), we ordered some takeout and had a lovely dinner of delivery Chinese food and cookies from Karen Bowman's most recent tray in the kitchen. With sex past us, Brianna Roth proved to be an absolutely lovely dinner companion, fun and conversational and a genuinely kind presence. It was different, getting to talk with her with sex out of the way and just get a chance to know her for the genuinely kind person that she was.\n\nNot that I didn't want to recreate some of what we did earlier. Possibly with Kaitlyn present.\n\nI was happy when she ultimately offered me a ride to the Stargazer Motel, because after the sex we'd had, I doubted I'd be able to make the bike ride over there, even with the rain having finally let up some.\n\nI had dressed up reasonably nice for the occasion, I think, with a decent sweater, polo shirt and my cleanest pair of jeans. It was Valentine's Day, after all, and the first one I'd had with my girlfriends. I wanted to do it right, after all.\n\nSeeing the actual motel had me thinking I was overdressed for the occasion. The Stargazer Motel was an unremarkable building that looked like it was built sometime in the 70s and hadn't been updated since. It wasn't falling apart by any means, but looked like the kind of place you'd only go to if you couldn't find something recommended by AAA and had enough money to make sure you'd find a place you wouldn't be stabbed. It had a strange odor to it on the outside, but, I was hoping that was just because of the rain.\n\nLooking at the number on the metal key, I found my way to Room 217 on the second floor (overlooking a pool that didn't look like it had had a dead body in it anytime recently, which was something), unlocking it per Josie's instructions. I found myself strangely nervous for this without knowing why. Considering how well fucked I'd been, you'd think I would have been all sorts of mellow at this point, but here I was, hand shaking as I unlocked the door.\n\n\"Hello?\" I called into the darkened room. I could hear the TV going at first, but as soon as I made myself known, it went silent.\n\nI stepped inside, closing and locking the door behind me. \"Josie? Brooke?\"\n\nThere was no answer, and again, the nervousness hit me hard. I was a little scared, a little hesitant, not knowing what these two had planned for their surprise for me.\n\nStepping further into the room, I rounded the corner that hid the living area with its king-sized bed, and found myself quite surprised that there was only one woman in here with me, and it wasn't Josie *or* Brooke. No, it was a short, pale woman with glasses and short, choppy red hair. The matching pair of bra and panties she wore were small enough to barely cover anything, but present enough to make me want to see more. While the image in front of me seemed wholly unbelievable at first, soon it all made sense.\n\nThe gold nose ring.\n\nThe dark eye makeup and lipstick.\n\nThe tattoos that covered most of her chest, stomach and left arm like a tapestry of conflicting yet somehow complimentary art styles.\n\nMy heart beat almost machinegun fast as I gulped. \"Rachel?\"\n\n\"Surprise, Ryan,\" Rachel McNeil answered me. \"Long time, no see. Miss me?\"",
        "***\n\n(Author's Note 2: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews, shoot me some feedback or consider becoming a patron, as these really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!\n\nAnd after some recent crises and battles, I want to add one last note on a more practical concern. When it comes to mental health, I hope everyone out there is taking the time to take care of themselves. Mental health may seem like a never-ending battle, but it's a never-ending battle that is always worth fighting, and one that there are plenty of resources to be found to help with should you ever be struggling. Be good to yourselves, and to everyone else.)"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "18-year-old",
        "high school",
        "slut",
        "valentines day",
        "milf",
        "black girl",
        "anal",
        "oral",
        "creampie",
        "big tits"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-36"
}