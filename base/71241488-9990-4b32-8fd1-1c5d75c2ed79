{
    "title": "The Old Country",
    "pages": [
        "Phew, it's finally done. I teased this story some time ago on my profile page. It took a little longer to come to fruition than I expected, but it has been worth it.\n\nLiterotica member Middleson contacted me in early July, asking if a story could go missing from the site. It transpired that he was trying to find something he had read years before, with no luck. Like a prize eejit I offered to re-write it for him, based on his memories of the original.\n\nHe described a brother and sister with a larger age gap than I've seen before. That concerned me, but otherwise I was hooked on the premise that he laid out for me. He liked the set up in the original story, but felt that the characters lacked depth. So he asked if I could give them a bit of a build up, flesh them out so to speak. And boy, did I ever!\n\nI got wrapped up in their story, in their lives. The narrative reflects that, so if you've come here with your pants down around your ankles -- pull them up again. This is a love story, an homage to a treasured memory, not a spank and yank fuckfest. So please take that into account as you embark on this journey with Mateo and Francesca.\n\n[UPDATE -- Middleson actually tracked down the original story. It was called Fighting My Desire by MaggieSparrow and it has indeed been removed from the site. It is very different to this version, but nevertheless it was fascinating to read it after the fact. Spoiler alert -- Middleson's memory is hopeless \ud83d\ude09.]\n\nNo1Ukno has been through this with a fine tooth comb as always and left it spick and span. Any errors remain mine alone. Everyone involved in sexual activity is of course, over eighteen.\n\nThis has been a labour of love -- I hope you enjoy it. If not, feel free to tell me why. If you do like it please give Middleson a shout out or DM too, as it was all his idea.\n\nNobston -- August 2021\n\n++++\n\nJuly 1978\n\nJorge Martin let his gaze wander towards the distant horizon. The sea was the deepest azure blue that he could remember. The light onshore breeze was teasing up the pristine white caps. They in turn eased across the bay, only to disappear as they broke upon the golden sand of the beach below. His daughter Francesca stirred in his arms. It was a hot day, and she was getting restless. His son Mateo was at his side, scuffing the dry dirt with his shoe. The ten-year-old boy hadn't let go of his hand since they had left the house that morning. It was an unusual display of affection for his quiet, reserved son. But Jorge had welcomed the simple contact. He just wished that his beautiful Maria could have been here with them to enjoy the cooling breeze.\n\nBut she lay dead in the hard, dry ground at their feet.\n\nGone at thirty-one. The light of his life, and shade of his heart. Torn from their little family by a brutal, mystery illness. The doctors in Albufeira had been stumped. They had treated her for pneumonia, but her lungs had still filled up with fluid. They had raced her to a specialist unit in Lisbon, but even there, no answers were found.\n\nMaria, his whole world since he was a callow youth. She had passed away alone in choking agony, while he was stuck on a stinking bus in Coina. When he had finally arrived at the hospital, it was too late, she was gone. Their children had been left with his mother in the village of Punta del Arias, where Jorge had grown up. But she had no phone. So, it was dark before the broiling, rattling coach dumped him back in the village square. The four hours of crying and moaning he had endured as it chugged along, had felt like ten. And that hadn't begun to scratch the surface of his grief.\n\nAs he walked the final yards to their modest family home, he began to wonder. What would his life be like now? What did the future hold for him and his children?\n\nToday, in the small, public cemetery, he wondered the same thing. The intervening days had provided no answers, just more darkness, and pain. His mother, Nelinha was helping with the children because Jorge had to work. His boss had told him he could take a morning for the funeral, but that was it. So, he had no time to think or to deal with it. But his subconscious didn't know that. It had been inundated with a maelstrom of powerful emotions. And it was coping by throwing up an endless stream of agonising memories.\n\n++++\n\nJuly 1967\n\nHis job was difficult and dangerous. He was a crane operator. It was better than the physical exertion of laying bricks and digging foundations. But it took all his concentration, all the time. One slip could drop tons of equipment onto his friends and colleagues. One misjudgement could topple the whole thing, hurling him hundreds of feet to the ground.\n\nHe had never wanted to do it, hadn't looked for the role at all. He was a simple man, good with his hands and with no fear of heights. As a boy, he had climbed trees and scrambled on the rocks and bluffs outside the village. He had walked along the cliff tops to torture his mother. But he was always sure-footed, never anxious. And that one thing that set him apart? Had set his course for the rest of his life.\n\nThe hotel building boom of the late 1960s had changed both Jorge's life and that of his entire country forever. Before that, most of the buildings in that part of Portugal had been simple affairs. Brick walls, tiled roofs, easy. Jorge could build them in his sleep. He had earned a deserved reputation for his skill among the builders in his village. Which led to him becoming a foreman when the hotel chains had come seeking their labour.\n\nThey wanted concrete monstrosities. Coastal land was at a premium, so the sites were small and the buildings tall. They went up like a child's tower of wooden bricks. Fast was always better than good. If there was a corner, it would be cut if it saved money or time. His friend Jose had been the first to learn the tower crane. He had been taken to Madrid in Spain to be trained. To the men of Punta del Arias, it might as well have been Mars.\n\nWhen Jose had fallen, Jorge was the one who had climbed up to retrieve him. He had hit his head and was caught on the ladder, two hundred feet above the watching crowd. Jorge had taken some ropes and secured his friend's body, before lowering him to the ground. The onlookers had been stunned at how nimbly he had clambered around while he worked. Jorge had never even heard of a safety line.\n\nWord had got around of his exploits and the next thing he knew he was in Madrid, learning Jose's job. He had travelled there by train. His boss had arranged for him to get a passport. At nineteen, he hadn't even known what that was. He could remember little of the journey since he had been so nervous throughout. But while his papers had been inspected at each stop, he had made it in one piece. The training had lasted a week. Physically it was simple, the controls were responsive and easy to master. But the mathematics?\n\nJorge had left school at fourteen. His father had been a coal miner and died spewing up black blood when Jorge was a little boy. His mother needed him to work to support them. And he had, willingly. But he was not an educated man. Algebra was like Ancient Greek to him, calculus the same. But mechanics made sense. Angles, weights, and forces. These were the things he understood and figured instinctively on building sites. And now he discovered that they had names. And that he could appreciate them and manipulate them.\n\nThe other students toiled over calculations which Jorge performed without conscious thought. The safety limits of the cranes were clear in his mind. Factoring wind, load composition, weights, and distances, he could figure them out instantly. And always got them right, coming out top of his class. His mother would be so proud, he thought.\n\nHe was proud of himself too, as he boarded the train for home. He had never compared himself to other people before, had never needed to. But now he had a rare skill, which was valuable. As he found a seat, he was busy making plans for how he would change their lives when he got back to the village.\n\nAnd then his life was changed by someone else. An angel flew down from heaven and alighted beside him. She sat on the hard wooden seat of the Sevilla Express, barely acknowledging his presence. A cantankerous old biddy pushed past them muttering under her breath.\n\nHe returned his gaze to the girl sitting at his side. She was a slim woman, her chestnut hair tied in a severe bun. She had a rosary in her hand, nimble fingers flashing across it. He couldn't see her face, so intent was she on her prayers.\n\n\"Miss?\" Jorge said, the hesitation obvious in his voice. \"Are you alright?\"\n\nShe paused her dexterous ministrations before looking up at him. Her face awoke something deep within him. He had dated girls from the village. There were always church picnics and fruit picking expeditions when he was younger. Mixed affairs, where adults could chaperone, and teens could mingle. They were fun but frivolous. Jorge's life was about his work, money, and looking after his mother. Or so he had thought.\n\nBecause now, as of that instant, those things were no longer a priority for him. They no longer held any interest for Jorge Martin. Because Cupid's arrow had hit him right between the eyes.\n\nThe girl looked up at him and her lips twitched in a tentative smile. The sun rose in Jorge's heart, suffusing him with its warmth and wellbeing. His worries and fears melted away, his foolish peacock pride evaporating too. She was beautiful, and she spoke Portuguese.\n\n\"Yes, I am a little nervous,\" she said, her voice light and musical. \"I have not travelled by myself before. And Albufeira is very far away. I must change trains in Sevilla, but I'm not sure how to do it. My aunt gave me a piece of paper with the details. I was hoping that I would find someone to help me there.\"\n\nIndicating her beads he said, \"I think your prayers may have been answered. My name is Jorge, and I too am travelling to Albufeira. And my father was Spanish so I can speak enough to manage in Sevilla. Would you like to travel with me? It is a long way to talk only with... Jesus, yes?\"\n\n\"Yes,\" she laughed, a delicious, addictive tinkle that sent shivers down his spine. \"He is quiet today. I don't think he knows the station in Sevilla very well either.\"\n\nJorge guffawed. A loud barking laugh that shocked them both. He lowered his head in embarrassment as they both giggled behind their hands.\n\n\"Then may I be your saviour, just for today, Miss?\" Jorge continued, hoping that this angel had a name to match her beauty, her radiance.\n\nAnd of course, she did. \"I am Maria Ant\u00f3nia Monteiro, pleased to meet you. And you are?\"\n\n\"But a humble builder my lady,\" Jorge continued. \"Although I have recently acquired the ability to raise great burdens high into the sky. Jorge Ant\u00f3nio da Silva Martin, at your service. With our chance meeting today, I hope that we can share more than a name and a destination.\"\n\nMaria looked at him, with his strong, tanned face and earnest brown eyes. She had little experience with boys and none at all with men. But her instincts told her that this one could be relied upon. That she should trust him, so she did.\n\n\"I would like that, Jorge. I have been dreading this journey for a week and the Lord's silence this morning has not helped. But I should have known that he would guide me true and set me down beside a friend.\"\n\nJorge was not religious. He followed the traditions of his world and his family. Not because he believed, but because they did. He was a practical man who relied on his wits and his hands. He had never received outside help from anyone, perhaps because he had never asked for it. When he looked across at Maria, Jorge's heart swelled. He was willing to thank the saints, the mother, and the holy trinity themselves. And poor Jose of course. The friend whose untimely demise had led him to this storied place and time.\n\nThank you, my friend. As your life has ended, so mine has begun. And if you are up there, put in a good word for me. Help out an old friend in his hour of need. Please?\n\nAs the ancient steam train began to chuff and snort its way out of the Atocha station, he began to relax. She was still there, and she was talking to him. Miracle of miracles, she was even listening to him as well.\n\nThank you, Jose, I will be forever in your debt.\n\nThey talked and talked. Maria was from a tiny fishing village, a few miles south of the capital, Lisbon. She had been living with her aunt in Madrid while she was at school. But that was finished, and she was returning home, for the first time since she was a child.\n\nShe was fascinating to listen to. She had read books, seen plays and movies. There had even been a television in her aunt's home. She had a portable wireless and loved to listen to music. Songs from across the sea were her constant companions. The Beatles were her favourite, she said.\n\nJorge was astonished, trying to nod in agreement and mutual interest. There were radios which played music on the building sites where he worked. But he wouldn't know a beetle from a rolling bone. But he was swept away listening to her talk. She knew the history of the Algarve region. She told stories of ancient Spain and Portugal. She talked about wars and England. About the new giants of Russia and America. She told him how the Americans were planning to go to the moon.\n\nJorge felt so high that he thought he might beat them to it.\n\nShe treated him to lunch in the buffet car. For the journey to Madrid, his mother had prepared two bifana for him which he had eaten with a bottle of warm beer. He had never been to a restaurant before. The annual church picnic was the closest reference that he had.\n\nSomeone seemed to have placed the contents of the entire cutlery drawer on the table. Jorge began to panic when a waiter arrived and asked what they would like. He was staring at the menu, reading the words, unable to picture the dishes they described.\n\n\"Maria,\" he said, scrambling for an air of calm confidence. \"I shall treat you to lunch, in return for the wonderful education you have given me this morning. Perhaps I could ask you to order for me. I do not see my mother's Jardineira on here.\"\n\nHis fervent hope was that she would understand his predicament. That she might take pity on this hapless yokel, saving him from further embarrassment. And as she would until the day she died, Maria Ant\u00f3nia Monteiro read his mind. She smiled and ordered seafood paella for them to share. With a cheeky grin, she asked for a white Rioja, chilled if possible. The waiter nodded and strode away.\n\n\"Thank you,\" Jorge said. \"I was not confident that I would pick something I would like. If I am going to spend a week's wages, I would hate to make a mistake.\"\n\n\"My ticket includes our lunch, Jorge,\" she said. \"Do not worry about money, my aunt has given me plenty. What better use could there be for it than treating my new friend?\"\n\nThe food was indescribable. Jorge knew what all the ingredients were, simple things really. But they had been seared and tossed together and cooked with consummate skill. Jorge could not believe that this was food meant for the likes of him. His mother had always kept him fed. Every week she received his father's meagre pension from the coal mining union. Sometimes she might earn a few escudos darning their neighbours' socks and underclothes. More often than not it would be a bottle of wine or a few slices of ham.\n\nThe food she made was by necessity, simple. It filled him up and kept him healthy. But it didn't excite his taste buds like this. He was used to eating mechanically as if he was fuelling up a truck. But this? This was an adventure. Every bite held new mysteries and delights. He chewed slowly, luxuriantly. Wishing that every mouthful would last an hour.\n\nAnd then there was the wine. It was cold, like spring water in the winter. It nipped at his tongue and throat, before soothing his flesh and warming his soul. And throughout it all, he fell deeper and deeper in love with Maria Ant\u00f3nia Monteiro.\n\nAfterwards, they took the wine back to their seats. The waiter had put it in a bucket full of ice, in the summer! They had each sipped from the same glass since he had forgotten to bring his back from lunch. As he had risen to go back for it, Maria had held his arm, saying, \"No, we shall share.\"\n\nAnd thus, had begun their life together. Maria had come to live in the village that summer. She had taken a job teaching at the elementary school. She lived in the convent up on the hill, but she didn't take the nuns' lessons to heart. By Christmas, she was pregnant with Mateo. The day she told him, Jorge had proposed. His mother had given him her engagement ring. She said his father would have approved.\n\nThey were married only a few weeks later, on New Year's Day 1968.\n\n++++\n\nFebruary 1978\n\nJorge looked down at the headstone at his feet. It hardly seemed real to see her name and dates there. That was his Maria, from whom he had never been parted even for a day. Ever since that fateful moment on the Sevilla Express in the long, hot summer of 1967.\n\nBut now she was gone. She had left him bereft, despite the precious gift of their wonderful children. Francesca was too young to understand. Much like Jorge had been when his own father had passed. But for the boy, this horror was all too real. His Mama was gone, and she was never coming back from that wooden box in the cold, hard ground.\n\nHis father was still here though, with his tanned skin and rough hands. But he was not a real part of his life. Jorge left for work before dawn every morning. He rarely returned before the children were asleep. He would join them at church on Sunday but was always tired in the afternoon. When his boy yearned for but a moment of his father's time.\n\nI must change that, Maria. I must find a way to be there for them. Does your friend from the train have any advice? I don't know how to contact him.\n\nWith a short bitter laugh, Jorge Ant\u00f3nio da Silva Monteiro Martin turned on his heel. There were no answers here. He would continue to work and rely on his mother to look after his babes. It was all he could do, he knew nothing else. Cranes and lifts and concrete. What use were they to a lonely little boy and a crying angel? With a leaden heart, he led his son back towards town, humming to Francesca as she whimpered in his arms.\n\n++++\n\nJuly 1978\n\nWhen salvation came it wasn't from above, rather the exact opposite. Down under to be precise. Jorge's boss's boss needed a crane operator, for a big opportunity on the other side of the world. Someone to train other men to do what he did, faster, safer, and better than anyone else. They needed a teacher, and they wanted him.\n\nThere was a boomtown out there somewhere. A place where buildings couldn't be put up quickly enough. Where skills were valued more than history or personal baggage. A place where lives could be changed, and where dreams could come true.\n\nWhen Jorge had explained the offer to his mother, she had shaken her head. His heart sank, as his hopes and dreams of a better future for Mateo and Francesca went up in smoke. But she looked up into his crestfallen face she was chuckling.\n\n\"Jorge my boy,\" she said in her dry, gravelly voice. \"When you married that beautiful girl, who Jesus sent you on that train, I rejoiced. But nothing changed. When first Mateo and then Francesca came along, my heart soared again. Surely, I thought, this will be when it happens. But no, my wonderful son and his beautiful family stayed at my side. Stuck in the shithole that is Punta del Arias.\"",
        "Jorge gaped at her, but she waved away his protests with a hand and carried on,\n\n\"My Jorge, stuck in a dead-end job that he hates. Kept from his family by evil tyrants who care nothing for lonely little boys and their fathers. Businessmen who care nothing for our people or for Portugal. All to look after me, who will outlive the cockroaches anyway. This is my life my heart, not yours. Yours is in that bedroom, where your babies cry for their lost mama. An angel who was ripped so cruelly from our lives.\n\n\"Your future is out there, my son. Don't tie yourself to my apron strings. Spread your wings and take your precious children to a new world. A land of comfort and opportunity. Maria loved you so, my boy. How we would talk about your stoicism and your unbreakable spirit. But those are useless things now, Jorge. Your children need every ounce of love you can give them, every second you can spare.\n\n\"Go be a boss, it's just a job. Your life, your reason to be here, is in that room. Come home to them at five o'clock and play. Kick a ball, skip a rope, have a tea party. Just be with them, because they need you. I shall be alright. I have the church and the market. And there is always more piss-stained underwear for me to repair. Your father's money will pay my bills. And my handsome son might send me a little from across the sea... yes?\"\n\n\"You don't want to come with us, mother?\" Jorge asked as the tears began to flow. He had never heard her speak like this, with such passion and conviction. And he had certainly never heard her swear.\n\n\"What would I do in an upside-down land full of snakes and spiders, boy? No, I shall stay here and wait for the Lord to take me to your father. But I can still read. The postman knows where I live. I shall expect your letters, full of fun and laughter and love. Stories of children playing and learning and missing their old grandmother. And I shall expect you to have the life I have always wanted for you. Find a companion, my love. Maria will understand. A dried-up old woman like me needs no one. But I was young once, and I can still remember your father. When he would crawl between my legs and remind me of why I married the randy old goat in the first place.\n\nShe chuckled at the memory and Jorge couldn't help but join her.\n\n\"Promise me you will find someone to do that for you,\" she carried on. \"Not to replace your Maria, but to keep your fire alive until you see her again. Go, my darling, explore this new chapter of your life. Get away from here and don't look back. For me, and for her.\"\n\nJorge had laughed and cried with her that evening. For the first time since the bus ride back from the hospital. He cried for Maria and for his children. He cried for his father who had never got to meet them. He cried for his mother, who railed against his stoic pride when that was all that she herself had left. And he cried for himself, for his doubt, fear, and indecision.\n\nAnd his tears washed away the dirt and grime of his life. They showed him what lay beneath. He was surprised to discover that there was only more dirt and grime. It was time to leave this place, which had been his home for over thirty years. To leave and never look back. To leave and look forward to a shining city of gold, called Perth.\n\n++++\n\nLater in life, Mateo could not remember very much about Punta del Arias. Things like his school and the beach were clear in his mind. Church was a blur, as were the people. He could remember his grandma though. She was a fierce and scary she-wolf one moment and a cuddly puppy the next. She would chase him from her kitchen when her pies were cooling. But then she would come and find him later, with a secret slice for them to share. He had loved her dearly, as all boys did their grandmas. But it was his mother with whom the sun had risen and set for Mateo. Mama.\n\nShe was never cross or fierce. If he was naughty he would hide from Grandma, but Mama would always find him. And they would talk, about nothing at first. A bird they saw perhaps, or a seashell. But suddenly they would be talking about the thing that he had done before he even noticed. And while she listened and he confessed, he learned. She taught him how easy it was to hurt people, to lose their respect and trust. And she made him see how hard it was to win those things back.\n\nAt the end of their talks, he would feel ten feet tall, like S\u00e3o Martinho on his way back from France. Each time, he understood that Mama had done something, changed something in him. He could never quite pin down what it was, but he never did the naughty thing again.\n\nHis Papa confused him. He was like a thief in the night, appearing and disappearing when Mateo least expected. The brief moments that they spent together were the best of times. Even if they didn't talk or do anything. If Papa was there, then Mateo was safe, and the world was right. Sometimes they would kick a football or swim in the ocean. Those memories were so few and far between, that Mateo was not sure if they were even real.\n\nBut Papa loved him. He knew this because Mama had explained it to him. She had told him that his father's only thought in life was to look after them. He and Mama, and Frankie too once she came along. He had to work to keep them fed, to buy their clothes and keep them safe. Often that work kept him apart from his family, and that broke Papa's heart. But Mama was adamant that every night when he got home, the first thing Papa did was check on Mateo and Francesca. It would always be late, and they would be sleeping but Papa would always come, she said.\n\nWhen he was nine, Mateo decided he was going to find out if Mama's story was true. So, he tried to stay awake one night. He could tell the time now and he knew that he was usually in bed by eight o'clock. Francesca was still a baby and slept all the time, so he was able to get up and pace around their room.\n\nIt was like waiting up for Pai Natal on Christmas Eve, but even more exciting. He had drunk two large glasses of water at dinner, hoping that the need to pee would keep him awake.\n\nHe was hopping from foot to foot now, trying to do anything to keep it in. There was a chamber pot under his bed, but he didn't want to use it because his plan was working.\n\nEventually, after what he felt must have been about three days, Mateo heard the rattle of the front door. He leapt into bed and hid under the covers. He pretended to be asleep but realised he didn't know how to do that. Should he breathe fast or slow? Lie on his back or his side? Francesca slept on her front. Which was it?\n\nAfter a moment, his bedroom door opened and there was a soft flare of light. It was gone in a moment as the door was closed again. Cracking one eye he could see Papa whispering to Frankie, his head bowed low. Then he closed his eyes tight as Papa's shadow turned towards him. There was a creak and Mateo felt the mattress move as his father sat down on the edge of his bed.\n\n\"Mateo, my beautiful boy,\" he said in a low whisper. \"How I miss you every day at work. The lorry picks us up when it is still dark and takes us to the site. Today I was over a hundred meters in the air in my cab. I looked towards your school, but I couldn't see you. But I didn't need to because I can see you all the time. You're in my heart, little boy, you've made it your home. If I close my eyes for a moment, you are with me. Making me smile and laugh no matter how I feel.\n\n\"All I want to do each day is hurry home and hug you close. To tell you how much I love you. But I can't do that today, can I? Because my son, you're so full of pee that it's about to come out of your ears, isn't it? So, if I was to hug you it could be a bit risky, couldn't it? But what if I was to... tickle you?\"\n\nMateo's eyes shot open as his father's sandpaper hands grabbed and poked at his swollen belly. This was bad, he couldn't keep it in. He could barely hold it before and now Papa was tickling him. What could he do? He couldn't wet the bed, he had to stop him.\n\n\"Stop Papa, please,\" he hissed. Despite the urgency of the situation, he was beginning to laugh, Papa was such an amazing tickler. \"I'm bursting, Papa. I can't hold it in. I promise I'll go to sleep right after. Don't make me pee the bed, please.\"\n\nJorge swept back the blankets and lifted his son into a standing position. With a flourish, he handed him the bedpan, before walking to the door.\n\n\"When you are finished,\" he said, \"wash up and come downstairs. Mama and I would like to talk to you.\"\n\nHe didn't quite close the door behind him. This gave Mateo enough light to enjoy the single greatest pee in human history.\n\nWhen he went downstairs, Grandma must have been in bed. Mama was sitting on Papa's knee on the old couch and they were kissing. When they saw him, they stopped and moved apart. Mama patted the cushion between them, and Mateo walked over and sat down.\n\n\"How did you know?\" he asked them. \"That I was still awake, I mean?\"\n\n\"A little bird told me,\" Papa said. That had always been his father's source of secret information, but Mateo wasn't so sure nowadays.\n\n\"No, Jorge\" Mama had said. \"That's not fair. Mateo was very clever. He wanted to test out a theory, so he made a very grown-up plan and performed an experiment. And it almost worked, didn't it baby?\"\n\n\"You knew?\" he asked, incredulous.\n\n\"Yes honey, I knew. You never drink water like that, certainly not two full glasses. And remember where your bedroom is,\" Mama said, pointing straight up. \"I thought there was a herd of elephants up there.\"\n\n\"Am I in trouble?\" Mateo asked.\n\n\"For wanting to stay up and see your daddy? Never,\" Mama said emphatically. \"In fact, we think your bedtime should be changed to 9:30, instead of eight. That means you and Papa will have half an hour together each night. What do you think about that?\"\n\n\"That would be wonderful,\" he cried, crawling into his father's lap. Then he thought a little more, about something Mama had told him once before.\n\n\"Is there a price?\" he asked.\n\n\"Yes, Mateo,\" said his father. \"If you're old enough to stay up late, you're old enough to help Mama and Grandma in the kitchen. You will help with the washing up after dinner each night. Do you think that is fair?\"\n\nMateo would have agreed to just about anything. But he always thought about decisions, even small ones. After a moment of careful thought, he nodded and hugged his parents in agreement.\n\n\"Now,\" Mama said, \"what time is it?\"\n\nMateo looked at the old clock on the mantelpiece and thought for a second before replying.\n\n\"Nine fifteen.\"\n\n\"So that means you and Papa have fifteen minutes before bed,\" Mama said getting up. \"I'll make you a hot chocolate when it's time.\"\n\nAnd that was how Mateo and Jorge's night-time chats were born. They each made a point of maintaining the tradition, even as the boy became a man. No matter what else changed in their lives, they made time to talk to each other. As time wore on it was mostly about the trivialities of life. School, work, cars, and sports. But feelings sometimes impinged, and Papa always had sage advice for his son.\n\nIt was the one thing they did without Mama. She was always careful to leave them alone and let them talk. After she was gone, their nightly sojourns continued. Indeed, they became a source of great comfort and stability for both of them. For a time anyway.\n\n++++\n\nJanuary 1979\n\nIt was almost a year since Maria had passed away before Jorge and his family were ready to move to their new home. He had told Mateo at Christmas time. They had been talking, around mouthfuls of Grandma's Bolo Rainha. He had asked Mateo about school and his friends.\n\n\"School is alright, Papa,\" the boy had said. \"I don't care much about friends. All they want to do is fight and play football. I like the classes though. Well, most of them. I don't like history and art, but I enjoy math and languages. I go to a different class sometimes. There is a teacher called Mr Simms from London, who teaches us English. It's fun because I'm able to understand more things when he lets us listen to the radio now.\"\n\nJorge adored seeing his son's enthusiasm and passion. Like himself, Mateo's light had dimmed somewhat since Maria's death. This was the first time he had seen the boy's inner fire being rekindled.\n\n\"I know about Mr Simms, Mateo,\" Jorge said with a broad smile. \"I asked the headmaster to let you go to his class because I knew English would be fun for you.\"\n\n\"It is,\" Mateo replied, clearly enthused. \"I am saving up to buy a radio. Mr Simms says that the BBC can be picked up anywhere in the world. I can learn about England, and America, and all sorts of places.\"\n\n\"That's good, Mateo,\" Jorge said. \"I am so glad that you enjoy it. Those countries, can you find them on a map?\n\nMateo leapt up and ran to the bookcase. On the bottom shelf was Maria's old Atlas do Mundo. Opening it he showed his father where they lived and where the other countries he had mentioned were.\n\n\"What's this place down here, Mateo?\" Jorge asked, pointing to a particular spot on the\n\nmap.\n\n\"Aus-tra-lia,\" the boy read. \"Kangaroos,\" he cried, beaming up at his father. \"And boomerangs,\" he said mimicking a slinging throw. \"It's full of criminals too, I think. No wait, it was, long ago. They were sent there from England.\"\n\n\"That's right, Mateo,\" Jorge replied. \"Do you know what language they speak there?\"\n\nThe boy shook his head, before pausing. Mama had shown him that there was much more than maps in this book. Carefully, because it was hers and therefore precious, Mateo found the appropriate page.\n\n\"They speak English, Papa,\" he said in wonder, reading more about the strange land.\n\n\"That's right son,\" Jorge chuckled. \"You've done well so far but now I have a more difficult question. Do you know how to find a specific place in the atlas? If I tell you its name, could you find it?\"\n\n\"Papa, you're silly,\" Mateo giggled, a hand covering his mouth. \"The index shows every place. Test me, give me a real hard one.\"\n\n\"Hmm,\" Jorge said, scratching his chin as he appeared to think hard. \"OK, I've got one, but I don't think you will be able to find it.\"\n\n\"I will, I know I can. Mama showed me,\" Mateo replied breathlessly.\n\nJorge choked down a tear. Mateo's sparkling eyes and boyish excitement were things he had often seen him share with Maria. The boy was bright and so eager to learn. In that instant any lingering doubts that Jorge had about his decision evaporated.\n\n\"Alright, my boy. Here it comes. I shall spell it, but I don't think there's any point. You'll never find it. Here goes. F.R.E.M.A.N.T.L.E.\"\n\nDespite his excitement, Mateo still treated the old book with reverence. He turned the pages with exaggerated care.\n\n\"Oh, it's not here,\" he said eventually.\n\n\"Ha-ha, you're stumped. I knew you couldn't find it,\" teased Jorge.\n\n\"No, I mean it's not in the index,\" Mateo replied. \"But sometimes it tells you the nearest place that is on the map. It says see P.E.R.T.H.\" He had sounded out the letters, as his English teacher had taught him. \"Perth,\" he said pronouncing it perfectly. \"Page seventeen, B11.\"\n\nAgain, he didn't hurry, turning the pages slowly until he found it. Running his fingers over the paper to find the coordinates, Mateo looked to his father.\n\n\"There it is Papa,\" Mateo exulted. He had done it and his beaming, boyish grin threatened to split his face in two. \"Perth. It's in Australia. And there is Fremantle right beside it. I found it, I told you I could.\"\n\n\"My goodness, you're absolutely right, Mateo. That's amazing,\" Jorge said with a smile. Inside he was steeling himself for the next step now that the game was over.\n\n\"It's very far away from here isn't it, son?\" he said.\n\n\"Yes, Papa,\" said Mateo, turning to the world map. \"It's further away than England. Or America,\" he continued, his voice filled with wonder.\n\n\"Mateo, do you know anyone who lives in Fremantle?\" Jorge asked his son.\n\n\"No, Papa,\" he replied, thinking carefully as he always did. \"Beatriz in my class comes from Faro. I think that is the furthest away person that I know.\"\n\n\"Well, I know some people whose new home is in Fremantle,\" Jorge said. \"And you know them too.\"\n\n\"Do I?\" a wide-eyed Mateo asked, astonished.\n\n\"Yes,\" his father replied. \"Their names are Francesca, Jorge, and Mateo da Silva Monteiro Martin.\" This had been the best way he could think of to break the news. Slowly. Step by step, bit by bit, the way Maria would have done it.\n\nAs always, Mateo's head tilted to the side when he was thinking hard. His father's words made sense, he understood them perfectly. But their message, what they meant, was nonsense. Papa was joking, he decided.\n\n\"Ha-ha, Mr Martin, I am the doctor and I say that you have gone mad,\" he said, tapping his father on the forehead.\n\nJorge laughed. A hearty rumble that was a rare sound in their little house in those days. He hugged Mateo to his chest, squeezing his eyes shut to stem the tears.\n\n\"You are such a wonderful boy, Mateo,\" he crooned. \"How I love you and the way that you think. There is so much of your beautiful Mama in you.\n\n\"I am sorry, but I was playing a game with you. I had important news and I was afraid to just tell you. That was unfair on you, I treated you like a baby, and you are not. You are my big, clever boy, and I should have talked to you more like a man. I shall do that from now on.\n\n\"Mateo, my boss has offered me a new job. I would be paid more money so that we could have a nicer house, better clothes, and things. Perhaps even a car.\"\n\n\"Wow,\" said the boy, before tilting his head. After a short pause, he continued, \"But there is a price, isn't there Papa. For you to have a better job and us to have nicer things we have to live in...\" Mateo paused to look back at the atlas. \"Fre-man-tle.\"\n\n\"Yes, we have to leave Punta del Arias and travel to Australia. To live. Forever,\" Jorge finished, knowing that this was it. Mateo didn't pause to think this time.\n\n\"You didn't mention Grandma. Is she not coming with us?\"\n\n\"No, son. She wants to stay here, with her friends and the church,\" Jorge continued.\n\n\"We should get her a telephone, Papa,\" Mateo replied. \"Then we can speak to her and make sure that she doesn't get lonely.\"\n\nJorge said nothing.\n\nThat's it. He understands and accepts, and his first thought is for his grandmother. He does not complain or cry. Maria, my love I wish that you could see what a miracle we made with him. What a wonderful boy you raised. Please help me continue what you started.\n\n\"I think that is a marvellous idea, Mateo,\" he managed to say. \"We shall ask her in the morning. And what about you, son? What do you think about all this?\"\n\n\"I worry about Mama,\" he said, confusing his father. \"How will she know where we have gone?\"\n\nJorge began to cry for real now. Hot, fat tears ran down his cheeks and he was powerless to stop them. Opening his arms, he drew Mateo into an embrace. The boy clung to his father, willing his own strength into the man. For his son's sake, Jorge sniffed and took a deep breath, before speaking.\n\n\"Your Mama loved Jesus, Mateo,\" he said. \"She prayed to him and the angels to protect us and to guide our lives. She trusted the saints to look out for us and make sure that we were safe. She knew that when she died, she would be with them, watching over us until we joined her.\n\n\"I have never talked with you about this, Mateo,\" he said. \"Because those things, those beliefs are a very personal thing, my son. I do not believe in all of those things. I believe that we are here on this earth with the people who we love. And when they are gone, they live on in here.\" Jorge tapped his own chest and then Mateo's. The boy was listening intently, so his father carried on.",
        "\"So, your Mama lives on in our hearts and she will travel with us to Australia. For as long as we live and remember her, Mama is with us. Do you understand?\"\n\nLooking up he waited for Mateo's response. His thoughtful young son took his time, wrestling with the thorny problem. Finally, he began to speak.\n\n\"I agree with you, Papa. I would much rather have Mama here with me all the time than looking down from the sky. That way I can talk to her and ask her things any time I like. I guess that means that I pray to her as she prayed to Jesus. But I know that she lived and that she loved me. And that I loved her and miss her every day. And that is more important than Jesus, who is a stranger to me.\"\n\n\"So, it's settled then,\" Jorge said. \"Mama is coming to Australia with us?\"\n\n\"Yes, Papa. Do I have time to visit her grave one more time before we go?\" Mateo asked with the hint of a tear in his eye.\n\n\"Yes...\" was all that his father could say. Then Jorge wrapped him up in a hug and they cried together, remembering Mama. Their true angel.\n\n++++\n\nFebruary 1979\n\nJorge stood looking down towards the tiny harbour. It was early in the morning and the local fishermen were preparing for their day. Nets were being inspected and repaired, as fuel trucks were topping off diesel tanks. Ice sellers were racing to sell their rapidly diminishing wares. Jorge enjoyed their panicked shouts. He laughed as they battled to fill the boats' freezers and coolers before it was too late.\n\nAs he sipped his coffee, he thought how familiar it all looked. Men full of hope and expectation. With their tanned faces, stubby cigarettes, and bustling energy. It could have been Punto del Arias. But alongside the fishing fleet were the sleek, modern speedboats of Perth's elite. Looking down from his balcony he watched as legions of cars and trucks swept past. He saw more cars in one minute than might have driven through his hometown in a whole day.\n\nPerth, the big city, the land of milk and honey, and of hungry children. He turned, slipping back inside the cool, air-conditioned apartment. He had never needed an alarm clock and neither did his daughter. Thanks to her, neither did Mateo. Popping his head into their room he found them sitting on Mateo's bed. Francesca had a new picture book and was sitting in her brother's lap as he read to her.\n\nJorge enjoyed the scene for a moment. The little girl's chestnut hair was long and shiny. He was proud that she had allowed him to wash it for her the night before. His mother had given him a long list of instructions for looking after the children. The first page was for Mateo and the next ten for Frankie. There were more, unopened in envelopes for when she got older. But for now, in this tiny bubble of peace and serenity, his little family was perfect. Then he made the first mistake of the day.\n\n\"Bom dia meus queridos,\" he said. Two smiling faces beamed up at him and Francesca waggled her finger at him. \"English, Papa,\" she said with a smile. Her book forgotten she rolled off the bed and ran into his arms. \"Good morning, my darlings,\" Jorge repeated as he scooped her up.\n\nThey had agreed to always speak English between themselves. Fremantle had a thriving Portuguese community, based around the fishermen of the harbour. So, the local school was very accommodating of their situation. Mateo's teachers were comfortable with his abilities in math and science. So, he was spending half of his time at school in a small class learning the new language. At home, he was their teacher.\n\nJorge was trying hard. At work, several of his colleagues were bi-lingual. This meant that he could always make himself understood. Sometimes it was difficult to discipline someone when he had to speak in English. But using a translator also allowed time for his temper to cool. He wasn't a hot-headed man, but his work could be frustrating. He had never appreciated how good he was at his job. He found every aspect of it simple and could do it without thinking. Trying to explain it to other people was much more difficult.\n\nThere was a child-minding service in his office building. Francesca seemed to love it there. She was a garrulous child and made friends at will. Before he picked her up each day he liked to stand at the back of the room and listen to her pontificate. The timing of their move had been good for her. She had only begun to learn Portuguese so the switch to English had been barely noticeable. Her vocabulary was that of a typical three-year-old, but she spoke English like a native. She was also developing what he thought of as a cute Australian accent. But he insisted that she continue to learn her native tongue as well. At her age, it was simplicity itself, and by age five she would doubtless be bi-lingual.\n\n\"OK,\" he said. \"I and Frankie make breakfast. Mateo, you shower.\"\n\n\"Que?\" said his son, laughing whilst shrugging in faux confusion.\n\n\"Shower, or no breakfast,\" Jorge replied, chuckling to himself. He turned and made his way into the kitchen. Coffee had been a luxury at home, but here a little machine could make as much as he wanted. He deposited Frankie in her special chair, and she clapped her hands. He pottered around the kitchen, organizing her fruit and yogurt. Pouring cold juice and milk he wondered what his mother would have made of this life.\n\nMateo emerged from the shower in a t-shirt, shorts, and thongs. He organised his own breakfast of cereal and juice. He loved to drink coffee like his father, but Jorge kept it as a rare treat. Today was one of those days and he poured him half a cup. Mateo smiled with a mouthful of milky cereal as Francesca munched and clapped. As he often did, Jorge spoke to his wife.\n\nDon't laugh, this is much harder than I make it look. How I wish that I could have shared these moments with you back in Punta del Arias. And how I regret that you can't share them with us now. Watch over us, my love.\n\nThey had lived like this, in this new place for just over a month. Already the new rhythms and routines of their lives were set. He and Frankie were home by 4:30 every day. Mateo finished school at 3:00 but he went to a swimming club afterwards. The pool was nearby, and he often beat them home.\n\nIn the evenings they would splash and play in the apartment complex pool. There were barbecue pits where they cooked outside as they had back home. The difference here was the astonishing variety of foods that they could buy. There was a market like the one in Punta del Arias, but it was ten times the size. Then there was the supermarket which was bigger still. Together they learned about all sorts of new meats and vegetables. And then there were the bikkies and lollies. Francesca loved to look at them and knew their names by heart. Jorge was always careful, however, and rarely let her have the sugary treats.\n\nThen they would watch the little television to help with their English. There was laughter and teasing aplenty. Jorge played the fool, as he always had with Maria. And his children, the precocious boy, and the giggling girl worshipped him. They revelled in his presence, something that had been brutally rationed before.\n\nAnd when Frankie went to bed, Jorge and his son would enjoy their night-time talks. They would discuss what they had seen on TV and the things Mateo had learned at school. And they would make plans and discuss their dreams. Jorge did not have to work on Saturdays anymore, so he learned to enjoy the 'weekend.'\n\nThey went sailing and swimming in the ocean. They went to the glittering supermarket to be amazed at the things that they could buy. And they went to the movies, almost every weekend. Superman and James Bond. Pirates, princes, and villains. It became their thing, as it would remain for years to come.\n\nOn Sunday evenings Mateo would finish his homework and then write a letter to Grandma. She had never had a telephone installed, so this was how they communicated with her. She did not write back every week, but that made her letters all the more precious.\n\nMateo asked Frankie what she wanted to say, and he wrote it down for her. Papa would add his little bit and write out a cheque to send with it.\n\n++++\n\nJanuary 1981\n\nIn time Jorge's job role became more involved. The company expanded and his training roster deepened. That meant that the time he could spend at home diminished, but Mateo stepped up. Their school took children right through from year one to year twelve. So, when Francesca turned five, her big brother began taking her to and from school every day.\n\nOn Francesca's first day he held her hand as they walked to school. Papa had always insisted on this when they traversed the busy roads of rush hour Fremantle. At the gates some year eight boys from Mateo's class jeered at them.\n\n\"Nice girlfriend mate. Like 'em young do ya? Give 'er a kiss. Has she got a sista?\"\n\nFrankie tried to let go of his hand, but he gripped hers tighter. He stopped and bent down, pretending to check her shoelaces.\n\n\"Frankie,\" he said. \"Don't ever listen to stupid bullies like them. The louder they shout, the dumber they are. They're just jealous that they don't have a pretty sister to walk with. If they ever do it when I'm not here, you just walk away. Come find me or go to the office. There's a lady there called Mrs Price who I trust. I'll introduce you to her once we get inside.\n\n\"In a minute we are going to stand up, take each other's hands again and I'll show you where the office is. I can't come to your classroom with you, but Mrs Price is a nice lady, and she will look after you. OK?\"\n\n\"OK Mat,\" she said, absolute trust writ large on her face. As they stood up and walked inside, Mat raised his middle finger to the sneering bullies. He had plans for them. He blew her a kiss as the school administrator guided Frankie off to meet her teacher. But not before he had obtained a copy of her schedule.\n\nThat day he asked his teachers if he could skip out of class early each time there was a recess. For most of them he was their best student, so they readily agreed.\n\nEach time the bell rang he was waiting outside Francesca's classroom. She beamed with delight when she saw him and ran to his side. He led her around the property, showing her where everything was. The places that were safe and the ones to avoid. At lunchtime, they sat under a big tree by the footy pitch and watched the senior boys kick the ball back and forth.\n\n\"How's it going so far, Frankie?\" Mateo asked.\n\n\"It's fun, Mat,\" she replied. \"I sit beside Angela. She's nice. Her hair is pure white like a cloud. She says she would love a big brother to look after her at school. I think she is jealous.\" Then her voice dropped to a conspiratorial whisper. \"She thinks you are handsome,\" she said, her face colouring.\n\n\"Frankie,\" Mateo said in a serious tone. \"You must make sure that if any of your friends ever have problems at school, they must come to me. If silly boys frighten them or older girls try to pull their hair or steal their lunch? They come straight to me. Do you understand?\"\n\n\"Yes Mat,\" she said. \"But what if I need you too?\"\n\n\"You will always come first, Frankie,\" Mat said, taking her tiny hands in his. \"Remember that. No matter what. Never hesitate, not for a single second. Come to me, run if you have to. I'll make a copy of my schedule for you. Tonight, I'll show you how to understand it. Then you'll always know where I am at school if you need me. OK?\"\n\nFrankie nodded, a serious look on her face. Mateo smiled and carried on in a lighter tone.\n\n\"Now, let's eat, I'm hungry.\"\n\nAnd that's how school went for them. They walked there and home together every day, still hand in hand. Frankie waited for him in the library when her classes finished before his. The librarian, Ms Archer came to know her and made an effort to get her reading. Frankie loved it and looked forward to that quiet hour every day. She raced through the books aimed at her age group and was soon reading at a more advanced level.\n\nNo one bullied or teased her, not more than once anyway. Mateo made sure of it. The three boys that had catcalled them on the first day sported black eyes for the first week of school. The message was out, do not mess with Francesca Martin. Mateo's intense personality gave him a certain reputation amongst the boys in the school. 'Stay out of his way' was the gist of it.\n\nMateo understood the power and leverage that money could offer. He wasn't a fighter or a muscle-bound freak. He was an entrepreneur. He put deals together, linking disparate members of the community for mutual gain. He had used those skills to warn off the prospective bullies.\n\nThere was a gang of waster kids who hung out at an abandoned house in the eastern end of the suburb. They wore leather jackets and shaved their heads. Mat had paid the fishermen at the harbour to buy cigarettes for him. These he had offered to the gang, in return for them providing security for him and his sister. The deal was that they would put the word out that he and Francesca were under their protection. They would threaten anyone who stepped out of line. The fact that they had been a little over-zealous the first time had been a happy accident. The message was out, and Mateo and Frankie were safe.\n\nAs time went on, he used his harbour contacts to obtain all sorts of things for the teenage reprobates. And he always made a profit.\n\nFrancesca knew none of this of course. She just knew that her big brother was always there in the background. Mateo, her friend, confidant, and protector. She took to school particularly well and soon had a thriving social circle. Her friends often came to the apartment complex to splash around in the pool. Mateo supervised without having to be asked. He put band-aids on skinned knees and made flasks of hot chocolate for when they got out.\n\nOnce her friends had left, he would join Frankie in the pool and give her swimming lessons. She would start to learn at school in year two, but he wanted her to have a head start.\n\nFor her sixth birthday, Mateo did a series of deals and favours with his contacts around town. This resulted in him getting her a pretty, pink, Malvern Star bicycle. It wasn't new but he had spruced it up with the help of the metalwork teacher at school. He thought that he could teach her to ride and then they could get to and from school more quickly. There was a cycle path through the park that meant they would only have to cross two roads.\n\nAs a joke, he wrapped up a bicycle pump as her gift. When she opened it, he told her it was for blowing up his tyres, which would be her new job. He would always remember the moment when she smiled and asked him how to do it. She honestly thought that was her actual gift and she was more than happy about it. He hugged her, explaining his silly joke, before going into his room and coming back with her bicycle.\n\nIt had a basket on the front and stabilising wheels on the back. When he asked her if she would like to learn to ride, she squealed with delight.\n\nFor the next week, he had worked with her as she learned the basics of braking, pedalling, and turning. Frankie was nervous but determined. There were a few bumps and bruises along the way, but soon she was ready for the next step. Mat removed the extra balance wheels and would run behind her, holding the saddle. Whilst she remained nervous, he could see she was improving every day. One day he decided she was ready.\n\n\"Don't let go,\" she cried in near hysterics, as was her habit.\n\n\"I won't,\" panted Mat as he ran, before doing exactly that.\n\nAgain, she cried, \"Don't you dare let go, Mateo.\"\n\n\"Too late,\" he laughed, coming to a halt. She rode on oblivious for a few seconds before she realised. There was a wobble as Frankie tried to look back but in her inimitable style, she refocused and carried on. Making a wide turn she came back towards him. Her pretty smile melted his heart as it always had. She came to a steady stop and set the bike down. Then she ran to him and hugged him tightly.\n\n\"I never thought I could do it, Mat,\" she sobbed. \"Thank you for making me try, thank you for everything.\" As she cried and laughed and hiccupped in his arms, Mateo felt like the king of the world. The moment was seared into his brain forever.\n\nAs it was into hers...\n\n++++\n\nJune 1983\n\nIt never occurred to Francesca to wonder why Mateo rarely spent time away from her. He didn't visit friends after school or on the weekends. Nor did he play sports like every other boy at school. He would go out to the store and things sometimes, but that was normal. She was too excited to have him in her life to worry about anything else.\n\nFor Christmas when she was seven, Mateo had bought her a Polaroid camera. The film was awfully expensive, so she only used it on special occasions. One such became a family tradition. The Christmas picture for Grandma. Their neighbour, Barney took it with Frankie pretending to push her daddy into the pool.\n\nUntil then Grandma's letters had all been the same. She went to church, bought some fish, picked her tomatoes, and so on. But the photograph changed all that. Her next letter gushed about how her beautiful grandchildren were growing up. There were admonishments for Jorge though. Instructions for him to get out from behind his desk before he no longer could.\n\nThe children had often teased him about his 'Aussie Belly', but he seemed much more affected by his mother's words. That was the year when he bought himself a bicycle and began to ride to work. This grew into weekend rides with the children. Francesca loved the freedom of these trips but was always having to ride as fast as she could to keep up.\n\nJorge and Mateo still maintained their tradition of evening talks. As the boy had grown up their tone and timbre had changed. At fifteen, Mateo began to challenge his father, especially when it came to their finances.\n\n\"Father,\" he began one evening. \"We have lived in this cramped little apartment for years. I am bigger now and so is Frankie. We need more privacy, we need our own rooms.\n\n\"You make good money and I have some saved too. Why do we waste it on rent when we could be using it to buy our own home? You never spend any money anyway. Our TV is black and white, and we don't even have a car. We don't have a freezer either, so we have to go to the store every day. I bought Frankie her bicycle and my own. Why are you such a miser?\n\n\"I can't go surfing without a car. We've never even been to the WACA to see a match. I'm not complaining, but I sometimes wonder why.\"\n\nJorge did not answer immediately. Mateo had raised this topic several times in the preceding six months. His first reaction had been one of rage that the boy should display such impudence. But before his temper could explode, he had felt the touch of Maria's hand upon his shoulder, and in his heart. Between them, they had always asked Mateo to be honest. They had explained to him that honesty could never hurt anyone.\n\nIt could embarrass people and annoy them, but that was their fault, their problem. Maria had always insisted that if they were honest with each other, no problem was too big. Mateo was just being honest about his life and how he felt. The very least that he deserved was for his father to do the same.\n\nSo, Jorge did exactly that, once again realising that his son was more mature than he ever gave him credit for.\n\n\"Do you remember our house in Punta del Arias, Mateo? Where we lived with Mama and Grandma? It was smaller than this. It had those tiny windows, no view, no air conditioning. Do you remember the drafts around the doors? The endless layers of dust that coated everything? Do you remember the TV?",
        "\"No, because there wasn't one. Our family owned that house, Mateo. My father's parents built it. Stone by stone, tile by tile. We didn't have a car or a swimming pool or a supermarket nearby. Were you unhappy there? Did you feel deprived?\"\n\nMateo made to speak but Jorge held up a finger to hold him off.\n\n\"Are you hungry here? Too hot at night? Too cold during the day? Can you see the players on the TV when we watch the footy? Can you hear what Del Boy says when we watch Only Fools and Horses?\n\n\"I ask these questions my son because I already know the answers. Our lives are comfortable here. More comfortable than the richest man in Punta del Arias. Did your Mama's smile cost money? Does Francesca's laugh empty your wallet?\n\n\"After you have enough to be comfortable, money exists for only one thing. To make our lives better. What could I spend our money on that would make our life better? Not more comfortable, because there is no such thing. You are either comfortable or you are not. If we are the latter, then our money is there to overcome that struggle.\"\n\nMateo was reeling. His father had always been a listener, not a talker. This was the most that the boy could ever remember him saying in one go. He knew that Jorge was right, in the context of someone who had grown up and lived in Punta del Arias. But Mateo had grown up in Perth. He lived in the modern world where greed was everywhere. A world of excess, where more comfortable not only existed, but where it was almost obligatory.\n\n\"I worry about you, Papa,\" he said eventually. \"You work all the time, we see you less and less. The only reason for working that much is money, which you don't spend. You talk of family, of Francesca and me. But in a few years, I will no longer be here, I shall be off to university. Probably in Sydney or Melbourne.\n\n\"Frankie will be ten years old then. At the moment I am her father, her brother, her protector, and her mother. I help her with homework, I taught her to ride her bike and to swim. I take her to school every day and I bring her home, I make her breakfast and her tea. She sees you at the weekend, which is great. But like me in Punta del Arias, she rarely sees you during the week.\n\n\"She is too young to change her bedtime. Is your money, that you do not spend, worth more than Francesca's laugh in the morning? Does your bank manager pay you enough interest to make up for missing her smile when you come home? You missed those things with me in Punta del Arias. But I can tell you from experience that I missed them much more.\n\n\"My sainted mother, your beloved wife, died suddenly. She was ripped from our lives with no warning. All of the things we planned to do with her amanh\u00e3 are lost. Those plans for tomorrow are locked away in a safe that we can never reopen. Money won't open it, a million dollars can't bring her back. But it might have given us more time together. More mornings of fun and laughter as a family. More evenings cooking together and walking on the beach.\n\n\"I don't mean to blame you, Papa, you did what you thought was right. Your hard work has made us comfortable, but we lost Mama anyway. We don't know what will happen tomorrow, and money might make things easier in the future. Spending time with Frankie and me, having fun with us today, will make things better, forever.\"\n\nTheir custom of having late-night talks had made them both respectful debaters. Jorge listened carefully to his son, and more than ever before, he heard him. He heard the pain in Mateo's words when the boy spoke of his mother. He heard the worries that his son had when he thought about his sister's future. And he felt the love that he had for her and his father.\n\nJorge felt a wave of shame and revulsion sweep over him, like rancid oil. He regretted that his son had seen and understood the mistakes of his life before he had. And he resolved to do something about it. But first, he had to talk to the boy and discuss something that he had said earlier. Something that had surprised and delighted Jorge in equal measure.\n\n\"Mateo, my only son,\" he said. \"My perfect boy who has been more of a father to Francesca than I have. You are right, of course, I have failed to learn from my mistakes. I have repeated them, despite every intention to do no such thing.\n\n\"But being a father and acting like a father are two different things. In my mind, I was given three soap bubbles to carry around for the rest of my life. One has burst and now I have but two. Every moment of every day is spent thinking about them. How to move them around, how to look after them. I have made mistakes before but nothing I do will make any difference. My soap bubbles are so fragile, so utterly precious that I can't consider changing anything. All I can do is live in the moment and try to keep them safe.\n\n\"The fear of making a mistake is outweighed by the fear of losing one of you. I know the pain of losing your mother, we all do of course.\n\n\"Oh, Mateo. I don't know what I mean, I don't know what I'm saying. I'm just a simple man and I'm so dreadfully afraid.\"\n\n\"We are not soap bubbles, father,\" Mateo said. \"We are flesh and blood, your flesh, your blood. Our hearts beat because of you. The sun rises and sets for us through you, and you must forget this fear. It is you I think who is the soap bubble, or more correctly you are trapped inside one. But rather than protecting it, you are paralysed within it. So, burst it, pop it, obliterate it. We are here, Frankie and me. We will not disappear, whatever this invisible barrier is, let it be gone.\n\n\"We are not brittle eggs to be brooded upon, we are children without a mother. We have a father who we love, but who is absent from our lives. We just want him back, that's all we need. I started talking about money but that's a symptom, not a problem. We both know the problem, and the solution.\"\n\nWith that, he rose and pulled his father to his feet. The fifteen-year-old child embraced the man, as Jorge knew he should have embraced his son. There, in each other's arms, they each reached an epiphany. They understood each other and they understood themselves. No words were required. Jorge would change his ways. Somehow, he would be here for them, as they had always been there for him.\n\n++++\n\nAn hour later, Jorge was sipping a Licor Beir\u00e3o as he and Mateo talked further. His son had stunned him with the mention of university. Jorge had barely completed school at all, leaving at fifteen. It had never crossed his mind that his children might be smart, but he was learning that they were. Looking skyward he gave thanks for yet another precious gift from his angel, Maria.\n\n\"So, what would you study, my son?\" Jorge asked.\n\n\"I'm not sure, Papa,\" Mateo replied. \"I shall have to get some advice from the careers officer at school. It's funny, you mentioned Only Fools and Horses earlier. I am a bit like Del Boy, I think. Not as silly or as funny as him, but I can see opportunities like him. I can make connections that other people can't. I can connect individuals and groups who don't know each other and arrange deals between them. And I can make money doing it.\n\n\"I want to study something that will allow me to do that on a larger scale. I make a percentage on every deal I put together, so the bigger the deal, the more I can make. Companies do much bigger deals than people do. That is what I want to do, I want to be the Del Boy of companies. Or something like that. I don't know the technicalities of it, but I know it happens and I know that I will be good at it.\"\n\n\"I shall ask some of the managers at my work,\" Jorge replied. \"I have to discuss my contract with them anyway if I'm going to be home more often. They will know what you mean. Perhaps I can introduce you to them. I think they would have better business advice than a high school careers adviser.\"\n\nMateo agreed wholeheartedly, seeing the possibilities in his mind. Imagining the connections that he could make. Envisioning the secrets of the business world that he could uncover.\n\n\"University, eh?\" Jorge asked. \"Sydney? Or Melbourne you say? Why not Harvard? Or Oxford?\"\n\n\"Two reasons, Papa,\" Mateo replied. \"You and Francesca. I can't be that far away. Melbourne and Sydney are across the country, but you can get there by train in a day or two. Overseas is too difficult, I couldn't be away from you for that long without a visit or two every year.\n\n\"I guess there is another reason as well, money. I shall try to get a scholarship, but I will still need money. I have saved some and will keep trying, but it will be expensive for me.\"\n\n\"No, my boy, it will not,\" Jorge said with a grin. \"Finally, your father, the miser, has found a use for his useless money. You shall go to university, and I shall pay. I have not known why I was careful with money before, other than lifelong habit. But now I do. It is to give you and Frankie a chance to have a different life, a rewarding and fruitful life.\"\n\nMateo began to protest, but Jorge shushed him.\n\n\"No, Mateo, I have decided. I shall cover the costs of your education. Your Mama was an educated woman, a teacher. It will be most fitting that her children follow in her footsteps. If you have your own money to buy a car or date pretty girls, then that is great. But I will pay your bills, and then you can pay mine when you are rich and famous.\"\n\nThey both laughed at that idea, but Mateo nodded at the same time.\n\n\"As to your other points, I must make a confession,\" Jorge continued. \"I have already paid a deposit on a house for us. I did not mention it because we cannot move for three more months. I apologise for not discussing it with you before, and I am sorry that I did not consult you. I still think of you as my little Mateo, but you are not. You are a man now, certainly in this house. I shall not underestimate you again.\n\n\"But having heard your issues, I think you will be pleasantly surprised. It is a little further from school and work than here. Indeed, it is in the countryside east of the city, in a place called Bickley. If you and Frankie can get up early on Saturday, we could take the car and have a look round. Would you like that?\"\n\n\"Yes, that sounds grea... Wait, what? The car? What are you talking about Papa? You bought a car?\" Mateo's voice rose in pitch as he spoke, alongside his excitement.\n\n\"Yes, my boy,\" Jorge said. \"When I came home this evening, I was bursting to tell you, but you wanted to discuss my misery.\"\n\n\"It's your miserliness, Papa,\" Mateo replied. \"And anyway, I think you have been cured of that tonight. Can we go out and look at the car? Did you buy a Holden? Or a Ford? Wait... you didn't buy Japanese, did you? Oh Papa, how could you?\"\n\nJorge threw him the key, the famous blue oval glinting on the fob. \"Ford Falcon, my boy,\" he said laughing, \"the V8.\"\n\nMateo almost ran straight through the screen door in his excitement.\n\n++++\n\nSeptember 1983\n\nLife changed for the Martin family after the move out of the city. For Jorge, the small farming community of Bickley felt like home. Instead of fishing, there were sheep and cattle, but the pace of life was the same.\n\nHis employers had listened when he asked for a change to his schedule. They had nodded their heads sagely in sympathy and commiserated with his situation. But like a concerned parent, they laid out the simple truth of the situation. Overheads were soaring, markets were getting squeezed and profit margins were falling. He was a terrific asset of course but there was just no way to meet his expectations.\n\n\"After that, they will say there is just no way to meet your expectations, Papa,\" Mateo had told him. \"So that's when you hit them, hard. Right between the eyes.\"\n\n\"How much notice do you need?\" Jorge asked, working hard to keep the smirk off his face. The entire meeting had followed Mateo's predictions,\n\nalmost to the letter. Jorge had been sceptical of following his son's advice in the beginning. These men were sons, husbands, and fathers themselves. They would understand the importance of family he told himself, wouldn't they? Perhaps they did, he thought. But here in their glass-walled offices, they understood greed and avarice more. Power and success were their mistresses. Family became but a distant memory when they entered this place.\n\n\"Notice?\" Bob Stevens asked quizzically. \"Are you planning a vacation? It's a remarkably busy time of year Jorge, surely the summer would be a better time?\"\n\nJorge had always dealt with these people in an honest, straightforward manner. He assumed that that was how civilised men would conduct themselves. But Mateo had opened his eyes to the truth. These giants of industry and commerce were but frightened children. Jealous and narrow-minded, their greed blinded them to anything real.\n\nThe love of money is the root of all evil. I always misunderstood that saying before. Because the money itself is not the problem. As usual, it's the human element the messes everything up. Thank you, Mateo, for opening my eyes, for explaining that there is only one way to deal with people like this. We must beat them at their own game.\n\n\"No, no not a vacation, I know how you detest those, Bob. No, it's Hancock Prospecting, they want me to start at the end of the month,\" Jorge deadpanned. They wanted no such thing of course but Jorge had decided to follow his son's instincts. \"I told them I would have to work a notice period and just wanted to confirm how long you need. I think it is four weeks, is that correct?\"\n\n\"Now, wait a minute Jorge, steady on mate,\" Stevens blustered. \"Let's not be too hasty here. Hancock, you say? Their mines are way up north in the bush, aren't they? Not a very hospitable spot for a young family.\"\n\n\"I'll be working in the city, Bob, as Vice President of their mechanised division. It's closer to home than this place, plus I only need to work four days a week,\" Jorge replied. He reminded himself not to improvise too much.\n\nStick to the plan, Jorge. Stick to Mateo's plan.\n\n\"Jeez mate, how big a pay cut are you taking for that?\" Stevens demanded.\n\n\"Oh, they're doubling my salary, Bob, and they'll give me a new car and pay off my mortgage.\" Jorge pulled out his handkerchief and pretended to blow his nose. He was almost laughing now, watching his boss squirm across the desk.\n\n\"Fuck me, mate, that sounds amazing. Do they need a high-level strategist too? We make a great team, you and me,\" his boss continued. Jorge loved how the man's human side had begun to appear as soon as his corporate bullshit began to fail him.\n\n\"No Bob, they don't. They do need experienced plant and crane operators though. They're going to pull millions of tons of iron ore out of that desert. It's going to make this place look like a child's tea party. If I were you, I would be talking to Joe Mangal over at the union office. I'd have thought your main priority would be to lock his guys into better contracts, quick smart.\n\n\"Hancock is already putting the feelers out, I'm surprised you haven't heard. I thought it was common knowledge or I would have told you weeks ago. It might cost you a few quid, but it would be a hell of a lot worse to lose them and have to recruit more. Especially without an experienced training manager to get them up to speed.\"\n\nStevens was beyond squirming now. Genuine fear creased his features, a crimson flush spreading up from his collar.\n\n\"OK, Jorge, let's get real. You're a smart guy. You know I have to trot out this boardroom bullshit, but that's not me. I'm not going to lose you to those big-shot Hancock bastards. I'll give you the money you want and the four-day week. It's your choice if you go for that or the early finish Monday to Friday. I can't do both, but the raise, and the car I can manage. I can't do the mortgage thing at all, I just don't have the budget. But I will incentivise you to keep our guys here. I'll give you a thousand bucks for each one who signs a new contract today.\"\n\n\"You'll have to pay them to stay, Bob. Hancock has deep pockets, and they won't mess around. It's going to have to be a 25% raise at least and I think Joe will push for 30%.\" Jorge was enjoying this immensely. Mateo had coached him, told him how his boss would react, and pointed out his weak points. \"People are people, Papa,\" he had said. \"Whether it's a school bully or Kerry Packer, they're all the same. Find their weakness and go for it, it's easy.\"\n\n\"I'll authorise 27.5% right now if you go and see Mangal and do the deal today,\" Bob Stevens blurted. Even then, he was wondering how he could sell this to his superiors in Sydney. His bonus might take a hit this year but in the long run, the share options would dwarf that.\n\n\"Those retention bonuses are tax-free aren't they Bob? Give me that in writing and I'll do it right now, mate,\" Jorge said, standing up and holding out his hand. As he shook it, Bob Stevens began to wonder if there was more at play here than he realised. Something nagged at him, a concern that he was being played, or taken for a fool even. But no, he decided, there was no way that Jorge Martin could be capable of that. He might be able to run a crane like Jimi Hendrix could play guitar, but that was all, wasn't it? He was a hick from the sticks. He couldn't play the game like the great Bob Stevens, could he?\n\nJorge made a beeline for the CFME Union offices to meet his friend Joe. He had always tried to work closely with the union boss because so much of his job was about safety. The men that he trained had always appreciated that aspect of his work and respected him highly for it.\n\nThe night before, when he had told Joe of his plan, the bearded giant had laughed. \"If you can pull that off mate it will knock what the America's Cup boys are doing into a cocked hat,\" he had guffawed.\n\nBut today when Jorge handed him the memo from Bob Stevens he did not laugh. He got up from behind his desk and hugged his friend. \"You're a bloody hero mate, a bloody superhero. Holy shit, the boys are going to carry you around the city on a gold throne, Jorge.\"\n\n\"Don't worry about that, Joe,\" Jorge laughed. \"Maybe they could give a little more to charity this year, though. Have you seen the people sleeping on the streets downtown? I come from a humble place where people had nothing. But no one ever had to sleep outside on the ground though, it's shameful. We build skyscrapers to blot out the sun and human beings are becoming lost in the shadows beneath them. That needs to change.\"\n\n\"Consider it done, mate. You wanna get a pint after work? Celebrate a victory for the little guys?\" Joe asked.\n\n\"There are only two little guys who matter to me, Joe,\" Jorge replied with a smile. \"And I'm going home to see them right now. Can you get the guys' signatures up to Stevens by five o'clock?\"\n\n\"Try and stop me, Jorge,\" Joe grinned, shaking his friend's hand vigorously.\n\n++++\n\nSo that was how Francesca found herself being ferried to and from school. In the lap of air-conditioned German luxury. Jorge enjoyed driving the powerful Mercedes, but he would try a smaller car next time he thought. The house in Bickley was bigger than the old apartment with a yard and a pool. The lot was bordered by a stand of peppermint trees and red flowering gums. They gave great shade in the summer, but their pretty flowers were a pain when they fell in the water.\n\nWithin a year Mateo was driving on his own. The big old Ford Falcon was expensive to run but he didn't care, because it was cool. He paid for it by continuing his middleman role in Fremantle. His list of contacts was extensive and no matter what people needed he could source it for them. He began to act as a go-between for the Portuguese community and local businesses.",
        "He would accompany people to loan and mortgage meetings at their banks. If anyone had a dispute with the city or a utility company, Mateo was who they called first. He undertook negotiations on their behalf. Most of the time he was successful in obtaining concessions or discounts. When he was offered money in return, Mateo would refuse. If a business could provide him with flowers or toys for Frankie, he would accept. As he would if they could maintain or repair his old car. But mostly he followed his father's lead and asked them to donate his fee to charity.\n\nWhen people insisted, he would accept a nominal sum for his university fund. It was growing nicely but never quite quickly enough. He had settled on Monash University in Melbourne. They had a world-renowned business school, but it was expensive. He knew his father would help him, but he wanted to be as self-sufficient as possible.\n\nJorge worked from 9:30 to 3:30 each day. He eschewed a lunch break and found that he was easily as productive as before. The kids were waiting outside the school on the days Mateo didn't drive and they were all home by four. Cold beer, hot sun, and a cooling dip were the perfect antidote to the corporate rat race. Steaks on the barbie, a fresh salad, and a robust Yarra Valley red would top off a perfect day.\n\nMateo and Francesca loved it in Bickley. The lack of traffic meant cycling and hiking were much safer than in the city. Frankie was always exploring. Her sharp, inquisitive mind was eternally restless. Her brother continued to support and protect her as he always had. Her bedtime became later and later, although she learned the same lesson as Mateo had. There was always a price.\n\nThey had to pitch in with chores and errands. The big freezer allowed them to buy in bulk from the stores and markets in town. In the city, other people had painted walls, cut grass, and cleaned the pool for a fee. Out here it fell to them, but life was so joyous that they didn't care. Until the day that everything changed...\n\n++++\n\nFebruary 1987\n\nMateo had graduated from high school before Christmas and was packing for university. Francesca, at age ten, fully understood the import of the moment. She had known for a year that Mateo would be leaving. That he would be travelling to the other side of the country and staying there.\n\nShe had lived in his pocket for the last seven years, relying on him for everything. Papa had come back into her life since they moved to Bickley. But for her, the sun rose and set with Mateo. He had talked with her often as they rode their bikes and hiked in the hills above the town. He had explained that he was not leaving her, rather he was moving into his future. Change was the natural way of things he told her.\n\nAnd she knew that it was true, but that didn't mean she had to like it. School and life in general had always been so easy for her because of Mateo's constant presence. The nasty girls knew to leave her alone whilst her friends all giggled and blushed when he came to pick her up. Especially since he had grown so tall, and his shiny black hair had grown so long.\n\nBut now there was going to be a yawning void in her life. To top it off she had been accepted into high school a year early. There was nothing left for her to learn at primary school, so Papa had agreed that she should move up. So, she was losing all of her friends, moving to high school a year early, and losing the light of her life. Mateo, her rock, and protector.\n\nShe was understandably distraught.\n\n\"Please let me come with you, Mat\" she cried, curled up on his bed, crying.\n\nHer brother left his suitcase and sat down beside her.\n\n\"I wish I could, cumquat,\" he said. It was his habit to call her by different pet names, depending on her mood. This time he was hoping to elicit a smile, but for once it did not work.\n\n\"But you must stay here, with Papa,\" he continued. \"I know that you have got used to me being around. There was a time when you needed me, back when you were a baby. But you've just got used to me being there, you don't need me anymore. You're a big girl now, too big for Eaton Primary School even. You're so smart that the teachers there have nothing more to teach you. You've outgrown them, and you've outgrown me.\"\n\n\"I know, I'm just sad Mateo,\" she replied. \"I just think of the letters we get from Grandma. I don't remember what she looks like anymore. I can barely remember what Punta del Arias looks like either. I write to her and tell her stuff, but she doesn't answer for a month. I'm so afraid of that happening with you, Mateo. I don't want to forget you.\"\n\n\"Grandma doesn't have a phone, kiddo,\" Mateo replied. \"I'll be calling you all the time. The phone will ring, and you will say 'Oh no, it's bloody Mateo again.'\"\n\n\"I would never say that you beast,\" Frankie said with a sniffle, a hint of a smile appearing on her face. \"Well, not every time, anyway.\"\n\nMateo hugged her and she clung to him, burying her face in his neck.\n\n\"Sugarplum, I need to ask you for a big favour when I'm gone. I need you to look after Papa. He's going to be sad for a while. This house is going to seem very big and empty with just the two of you in it. You're going to make loads of new friends in high school. Bring them here, play in the pool, have them sleep over. Make him go cycling and walking with you like we used to. Remember when we went sailing when you were a kid? Maybe do that again or ask him to go surfing. You need to keep him busy for me. Do you think you can do that, Frankie?\"\n\nShe knew he was serious when he used her name like that. She thought about what he was asking and realised that she had been selfish. Her only thoughts had been about how Mateo's moving would affect her. She hadn't considered how exciting it would be for him. And she definitely hadn't thought about how it would affect her Papa.\n\nMateo was right, she had an important job to do. Her family needed her, and she wasn't a baby anymore. She and daddy would team up and look after each other. They would keep in touch with Mateo and welcome him home whenever he could come.\n\n\"OK, Mat. You're right,\" she said. \"You are going on a big adventure and I'm being a big downer. I'm sorry, I didn't mean to pee on your parade.\"\n\nHer face reddened at her rude comment, but Mateo thought it was cute and just laughed. \"Don't say that to Papa darling,\" he said, drawing her into another embrace. He was proud of how grown up and brave she was being and told her so.\n\nFrancesca didn't reply, she just held on tight. But inside, her tiny heart was breaking.\n\n++++\n\nThe next morning Mateo boarded the train to the rest of his life. At the door, he hugged his father and his sister tight. They were crying, but Mateo remained stoic. As he boarded, they followed him along the platform until he found his cabin. He got himself settled and made silly faces for his sister until the conductor blew his whistle. With that, the behemoth that was the Indian Pacific began to draw away. Frankie waved and blew kisses to her brother. She was a little jealous of his adventure, but she knew that a piece of her heart was leaving on that train. She would never be whole again until her brother came back to her.\n\nJorge held her hand and waved at the retreating train cars. This was the second great loss of his life. Maria had been the first and he knew that hers had been permanent. This one was not, but the pain was the same. He was responsible for Mateo, in a way that he hadn't been before, not even for his wife. And he was sending the boy out into the world, thousands of miles away, to heaven knew what. That responsibility hadn't ended when his son had turned eighteen and become a man. It would never end, he hoped.\n\nLooking down he smiled at Francesca. She had Maria's eyes and to a lesser degree her hair. But when she smiled, his beloved wife was back by his side. He gathered her up into his arms and they rubbed noses.\n\n\"It's just you and me now, kitten,\" he said. \"Wanna get some ice cream?\"\n\nIf he'd offered her a million dollars, he wouldn't have received a better reaction. Frankie gave him a big hug and a kiss on the cheek. She didn't even complain about his scratchy beard. He set her down and let her lead him towards the exit. Hand in hand they walked outside into the bright morning sunshine.\n\nLife goes on, Jorge. Mateo will be fine. He is a clever and resourceful boy. Your life is here now, with this little one. Dear God, ice cream at ten in the morning, what a way to start the day. Don't judge me, Maria.\n\n++++\n\nMay 1987\n\nTime passed and Mateo carved out a niche for himself in Melbourne. There was no campus housing near the Business School, so he rented a room in a private house. It was owned by an elderly couple, situated on a quiet, leafy side street. He cut their grass and cleaned the pool, much as he had at home. Mrs Roberts made him breakfast and dinner every day. She had five grown sons, so Mateo usually didn't need lunch.\n\nTwice a week he would ask to use the phone. He called the house in Bickley at 8 PM on Tuesday and Sunday and let it ring three times. Hanging up he knew he would hear Frankie's desperate voice within ten seconds when she called back.\n\nFor ten minutes he would listen, enthralled by tales of ballet classes, and piano lessons. There were swimming galas, camping trips, and myriad other items of headline news. It made him smile to hear the fun and enthusiasm in her voice. His father was making a tremendous effort to indulge Francesca without spoiling her. It was a delicate balancing act, but he seemed to be getting it right so far.\n\nMateo's news was never half as exciting. He was studying hard and working in a pizza parlour three nights a week. Mr and Mrs Roberts were lovely and wouldn't mind if he brought his car back with him next semester. Jorge had agreed that he and Francesca would share the drive, before taking the train home. Jorge often asked about his social life, but Mateo said he was too busy with school. It was true, in part, he was busy, but it was more to do with his extracurricular activities.\n\nMateo couldn't help himself looking for entrepreneurial opportunities. He was short of capital so the deals he made were small. Grass seed for a bowling club, refrigerators for a new restaurant. He organised storage space for a flooded art gallery. He scoured the newspapers and notice boards around the university's Caulfield campus. And he made connections between what people had on offer and what others needed.\n\nHe truly was Australia's answer to Del Boy.\n\n++++\n\nJuly 1987\n\nIn the winter he returned to Bickley for a week before all three of them began their epic road trip. It took a week to drive back, as they stopped several times along the way to stay overnight. Francesca thought of it as a grand adventure. The sights and sounds of the trip would manifest in her dreams for years.\n\nThe Roberts fell in love with her the moment they met. Mrs R. had almost adopted Mateo as a sixth son already, but the chance to dote on a little girl was priceless for her. Melbourne was a much bigger and busier city than Perth, so they had tons of stuff to do. Everything was packed in close, and it was cold. Perth was one of the sunniest cities on earth, while Melbourne was absolutely not.\n\nBut at least Jorge and Frankie got a proper feel for Mateo's life. They had faces to put to peoples' names and had been shown around the campus and the local area. When they parted at the station this time, Jorge felt relieved. His son had justified his faith in him and had a good life in the big city. And Francesca had a head full of stories and memories that would tide her over until the next time they all met up. Those four months would pass in no time and Mateo would be home once more.\n\nOr so they thought...\n\n++++\n\nNovember 1987\n\nMy business is taking off, Papa\" Mateo said down the crackly phone line. \"I have rented this office and I'm interviewing for a secretary. I have to stay here to make sure it gets off the ground. These early months are critical.\"\n\n\"I understand son,\" Jorge replied. He had dreaded the time when this would happen. When his son's life would become his own and his focus would move away from his family. He had hoped that if it wouldn't be until after university, but that point was moot now.\n\n\"However, I fear that your sister will not,\" he continued. \"She has been so excited for the last couple of weeks. Don't worry, I'll talk with her and explain what you are doing, but please try to call her more often. You must realise that you are a much bigger part of her life than she is of yours. Give her a few more moments of your time son, please.\"\n\n\"I'll try, Papa,\" Mateo replied. But Jorge could already hear the distracted tone of his voice. \"I have to go now father, the other line is ringing. I'll call as often as I can. Give my love to Frankie. Bye.\"\n\nJorge closed his eyes as the line went dead. He was proud of his son, of his work ethic, and his drive to succeed. But what use was that to an old man and a lonely sister?\n\nNone at all. Have I done wrong, Maria? Should I have held on tighter? Or would that have made him resent me more? I wish you were here. You were always so wise about things like this. Oh, meu amor, my love.\n\n++++\n\nApril 1989\n\nMateo didn't come home at Christmas either, or the following winter. His phone calls dwindled too, becoming a rare occurrence at best. A letter that Francesca sent was returned by Mrs Roberts. Mateo had moved out, but she didn't know where he had gone. Jorge tried calling his office number. It was answered by a girl called Janine, but Mateo was always in a meeting or out with a client.\n\nHe decided to write his son a letter. Jorge was paying for Mateo's tuition, so he felt that he had a right to know how it was progressing. The letter he got in reply was astonishing.\n\nIt was typewritten, although his son had at least signed it. Enclosed were three other things. A copy of Mateo's college transcript and two cheques. The former showed that he was in the top ten per cent of his class. The first cheque refunded every cent that Jorge had paid towards Mateo's education. The second was made out to Francesca Martin for five thousand dollars. The letter itself was curt and to the point.\n\n\"Father, thank you for the fantastic support that you have provided throughout my life. It has put me in this place of opportunities and possibilities. I shall be forever grateful for your wisdom and perseverance.\n\n\"I enclose a cheque reimbursing you for the fees and disbursements you have made on my behalf. I shall be responsible for my own expenses from now on.\n\n\"I hope that my transcript makes for good reading. Don't worry, I still understand the value of an education, but I also understand money. Of the two I think that the latter is more important.\n\n\"Please give my love to Frankie. I trust that you can arrange a savings bond or something for her. But also, let her spend a little of her money too. I no longer know what she would like, but I'm sure that she is old enough to decide for herself.\n\n\"Sincerely, Mateo.\"\n\nJorge thought about himself at that age. Living at home with his mother. No car, no phone, no TV. Was he jealous of Mateo? Of his success? Or was he regretful of what was happening between them. When Jorge had left his mother behind to come to Australia, she had all but disappeared from his life. Would that happen with him and Mateo? And Jorge hadn't had a sister. What would the effect of this be on Francesca? He did not know. But she was here, with him. And he was not going to abandon her as her brother had done.\n\n++++\n\nOctober 1989\n\nFrancesca was excelling at high school. Her tall, lithe frame did not set her apart and very few of her fellow pupils knew that she was a year younger. When puberty came along, they had a little rough patch, but Jorge's mother had prepared him. Her original letters had told him what to expect and how to cope. Buying underwear had been a challenge, but her close friends were helpful, being a year older.\n\nIn class, she was near the top in almost every subject. Mathematics was not her strong suit, but it was her only weakness. Outside of school, she was becoming a dedicated and gifted swimmer. There was a pool on the way to the school and four mornings a week they would leave early for an hour-long session. Jorge would watch, while Frankie would swim for three or four kilometres.\n\nJorge loved to watch her cut through the water. There wasn't an ounce of wasted effort. She looked to be barely moving, but she could swim faster than his maximum while keeping it up for hours.\n\nThe downside to these sessions was that Frankie was weary afterwards. They had always talked in the car but not now after her swims. On the way home, she would talk about simple things like classes and projects. But the personal element of their conversations was slipping away. The harder Jorge tried to begin those conversations, the more his daughter clammed up.\n\nShe had spent some of the money that Mateo had sent her on a silver bracelet. The band was made up of separate links, spelling out his name, writ large in her own handwriting. The craftsmanship was exquisite, Jorge had no idea how it could have been made. But she didn't wear it these days. He knew because she had always given it to him for safekeeping when she swam. But on their recent trips, this had not happened. In the car one afternoon he decided to ask her about it.\n\n\"Frankie, did you lose your bracelet?\" he asked. \"The one with Mateo's name on it?\"\n\n\"No, Papa,\" she said, sounding shocked. \"It is my most treasured possession. It is safe at home in Mama's jewellery box.\"\n\n\"Ah, so you don't wear it because it is important?\" Jorge asked.\n\n\"No, I don't wear it because I am no longer important. I have so many things to tell Mateo and things I want to ask. We used to share everything, Papa. We had secrets and stories and adventures that were just for us. I thought we always would, but now I am not so sure. I remember that first day when he left on the train. I was thinking that part of me, a piece of my heart was leaving with him. I knew he would bring it back to me, that we would be together again.\n\n\"That was three years ago father, but I don't think that piece of me is coming back. I think it has shrivelled up and died. I don't think Mateo even knows he had it. I'm not sure if he even remembers me.\"\n\nThe sounds that she made as her tears began to flow were heart-rending. Jorge pulled over and drew his daughter into his arms.\n\n\"Meu amor,\" he crooned. \"Francesca my love, my darling baby. Do not think those things. Mateo could never forget the tiniest part of you. He loves you as I do, with all my heart. He is a man now and he must make his way in the world. Sadly, he can't do that here with us, but that is no one's fault.\n\n\"The world is like this. Wishes count for naught, thoughts do nothing but rattle around in our heads. Actions are what matter, they show the world who and what we are. You must tell me when you think like this. I am old and stupid, and I cannot read your mind.\n\n\"So, we are going home to find your bracelet. You will put it on and wear it always. Then we shall call your brother. If he is too busy to come here, perhaps we can go there. What do you think, is that a good idea?\"\n\n\"Yes, Papa. Thank you,\" Frankie said, grinning through her tears. \"And you might be old, but you are not stupid. Just slow... and a bit tubby!\" She poked him lightly in the ribs and they both relaxed into familiar bonhomie.\n\nJorge berated himself for not broaching this subject sooner. Francesca was his sole reason for existing now. He had allowed himself to become complacent. His own life was easy, so he had assumed that hers was too. By luck, he had earned a second chance this time. He did not know how many more he would get and resolved right then never to need another one.",
        "That evening, as Jorge left yet another message for his son, he wondered if he had missed his second chance with him.\n\n++++\n\nMike Ritchie loved university careers fairs. He owned a small, boutique brokerage house in Sydney. But it was only small in terms of its current capital. He had big dreams and ambitions for it, he just needed the right people. People like himself who understood markets and businesses. But people who also understood the ineffable something that drives the human race. That invisible carrot that humans chased. The idea that something better was just out of reach, and that it could be obtained with just one more effort.\n\nHe knew that the type of people he sought could be found in casinos and at racecourses. But those people were inveterate gamblers. They had the instincts that he needed, but not the knowledge or understanding. And they couldn't be taught, that was the tragedy of their lives.\n\nSo, he approached his hiring strategy from the other direction. Strait-laced university recruitment fairs were his new favourite. Here he found nothing but earnest, able drones, their heads full of the knowledge he needed. That was fine, but almost every single one of them lacked the killer instinct he desired. But sometimes, like an old-school gold prospector he could find what he wanted, a nugget. A student from humble beginnings usually. One who had to fight and scrap for everything they had achieved. Who was driven to succeed, much like himself.\n\nUnfortunately, the class of 89 at Monash University Business School was a bust. No one even came close to what he was looking for. And that was bad. His expansion plans had already been on hold for six months. Without a new trader for his European desk that situation was set to continue. With a sigh, he got up and headed for the exit.\n\nHis flight back to Sydney wasn't until lunchtime the next day. On a whim, he stopped at the refreshment table and asked for a glass of red wine. The kid standing there poured him a mouthful and offered him the glass.\n\nVery professional. Hmm, that's pretty good. Ooh, strong finish too. Wow.\n\n\"Hey that's not bad,\" he said. \"What winery is that from?\"\n\nThe boy poured him a generous glass before answering.\n\n\"It's a new start-up from up north,\" he said. \"I've been catering these events all week. I'm introducing their product to prospective investors.\"\n\n\"How's that been going?\" Mike asked. The wine was excellent, astonishingly so, even.\n\n\"Very well,\" the young man said. \"Its quality speaks for itself, but most people see wine as a fad. If it was a brewery though. Wow, I'd be fighting them off with a stick. But they're all wrong, their thinking is muddled and old fashioned. We have the perfect climate here and the growers are learning every season. Now is the time to get on board. In two years, it will be too late, and the supply will have been consolidated.\"\n\n\"What's your cut, kid? For doing all this promo work,\" Mike asked, savouring the rich flavours on his tongue.\n\n\"I get a full share for every thousand dollars of investment I pull in. No point in getting paid once when I can get paid forever. Especially when I believe in the product so much.\"\n\n\"I'm Mike Ritchie and I'm intrigued...?\" he said, leaving the question hanging.\n\n\"Mateo Martin, Mr Ritchie,\" he replied. \"I saw your presentation, remarkably interesting. I graduate next year and plan to become your competition.\"\n\nRitchie returned Mateo's gaze levelly.\n\nCocky little bastard, isn't he? I like him already. Hmm...\n\n\"How much more investment are you looking for Mateo?\" he asked out loud.\n\n\"My advice?\" Mateo asked. \"Come up to the vineyard tomorrow and buy the whole damn thing. This stuff is liquid gold. There's going to be an export market in a few years. It's going to be worth millions. Imagine if we got it to market in England. The Poms would buy it just to piss the Frenchies off.\"\n\nMike laughed. This lad was extremely impressive, forthright, and confident. Selling to a salesman is the toughest gig in the world and he was a natural.\n\n\"Can you take me up there tomorrow?\" Mike asked.\n\n\"Where are you staying?\" Mateo asked.\n\nHe wrote down the details of the man's hotel, arranging to pick him up there in the morning. Mateo was unaware that he had just had the most important conversation of his life.\n\n++++\n\nDecember 1989\n\nIt was Christmas and Francesca was about to turn fourteen. When they arrived home after her last day of school, she and Jorge were feeling low. Mateo had not replied to Frankie's last two letters and there had been no answer to their recent phone calls. They had both hoped that he would come home for the holidays, but it seemed not.\n\nAs Jorge parked his car, Francesca checked the mailbox.\n\n\"Papa, Papa, there is a letter from Mateo,\" she shrieked as she raced up the path to the house. Jorge looked at the envelope when she handed it to him. The address was handwritten, not typed. And it was addressed to him, not Frankie. As he slipped his finger under the flap, he saw the postmark, Sydney.\n\n\"What does it say, Daddy?\" Francesca squealed. \"Is he coming home? Is he?\"\n\n\"No, my sweet he is not,\" Jorge said in a gentle voice as he read. His daughter's face fell, as yet another disappointment bit deep. \"But we are going to visit him.\"\n\nHe handed her the two aeroplane tickets as he continued to read. The letter was short but heartfelt.\n\n\"Father, forgive me, for I am ashamed.\n\n\"I have regretted every day of the last three years when I could not be with you and Frankie. But I was brought up at the hands of a stubborn old Portuguese goat. His love and support have given me unbreakable determination. And that has driven me to achieve what I now have.\n\n\"I have left Monash University, my degree complete. I decided not to stay another year to complete the honours program. I have achieved my goal, a job in a brokerage firm. It is called Ritchie Investments. Our office is here in Sydney, where I now live.\n\n\"I have sold the Melbourne business... to Francesca, for one dollar. The share certificate is enclosed. I hope I can collect the consideration from her if you come to visit at Christmas. I have a new apartment overlooking the harbour, with plenty of room for you both.\n\n\"I have much to make up for with you and her. I hope that this can be the first step on that journey. Please call me on the number below if you can come. Or even if you can't.\n\n\"Your ever-loving son,\n\n\"Mateo xxx\"\n\n\"Papa, why are you crying? What's wrong?\" Francesca sounded frantic.\n\n\"I am crying, my darling because this letter is from the old Mateo. Here, you read it,\" he said handing it to her.\n\nAfter a moment she spun and raced towards the house.\n\n\"Frankie, where are you going?\" Jorge called after her.\n\n\"To ring my stupid brother, Papa,\" was her laughing response.\n\n++++\n\nDecember 1989\n\nThe view was incredible. Mateo's apartment was on the twenty-seventh floor, looking out across Sydney Harbour. The famous opera house and bridge took centre stage. But the waterway itself was more fascinating because it was so incredibly busy. Francesca was pressed up against the floor-to-ceiling window, trying to soak it all in.\n\nMateo was blown away by the view too, but not of the harbour. It was but a dog turd in the presence of his sister. A little child no more, Francesca had bloomed into a coltish teen. Tall and toned, her figure was the match of an elite swimmer or athlete. Her pretty, childish features had matured and strengthened. There were signs of the acne that their father had fretted about, but it was not obvious.\n\nWhen he had opened the door that morning it was a stranger that had cannoned into him. Her shriek of joy had confirmed her identity, however. He had held her tight, revelling in the sounds and smells of her. Long repressed memories were triggered, recollections of pure fun and laughter. After a moment though she had pushed past him to explore his home.\n\nMateo's reunion with his father had been rather more poignant and meaningful.\n\n\"Father, welcome,\" he had said, gesturing for Jorge to enter.\n\n\"Fuck that son, come here,\" the older man had growled, wrapping his son in a bear hug. Mateo had allowed himself to be held and squeezed. He had missed them, he just hadn't known it.\n\nTheir conversations that week were a throwback to a better, long lamented time. Stories of the old apartment in Fremantle, of Bickley and of Mama. They toured the city in Mateo's Ford Falcon, now fully restored. They ate sushi and hamburgers. Mateo even took them to a Portuguese restaurant. Jorge had spent half the evening reminiscing with the owner who had grown up on the Algarve himself.\n\nBut as even the best of times will do, it ended. It barely seemed like a day before Mateo was waving them goodbye at the airport. Work willing, this would become a regular tradition he hoped.\n\nRitchie Investments however had other ideas.\n\n++++\n\nJorge felt re-energised by their Sydney trip. But for Francesca, it had been a life-changing moment.\n\nMateo held a vaunted place in her mind. The pedestal she had built for him reached up beyond the clouds, beyond even the stars. No matter how inattentive he was or how thoughtless, she loved him completely.\n\nLoved him, loved him, loved him.\n\nHe had protected her as a little girl, at the very point where her personality was beginning to develop. Without meaning to she had built her entire existence around him. In her childish way, she had assumed that their lives would carry on in the same vein forever.\n\nBut of course, they had not and that had been an excruciating lesson for her. While her girlish worldview had crumbled, Mateo's pedestal had not.\n\nShe had stopped wearing the bracelet with his name on it earlier that year. Not because of any perceived slight, but because she couldn't stop touching it. Touching it and thinking about Mateo. She tended to become distracted at school, drifting off in lessons and making a fool of herself. Removing the constant reminder of him had seemed the only solution.\n\nWhen her father had noticed she had made a supreme effort to put it back on and ignore it. It had worked, mostly. There were still moments when she would drift away and... wonder.\n\nWonder where he was and what he was doing. Goodness, she had often wondered what he would look like now. Her mental image of him didn't quite include a halo, but it wasn't far off.\n\nAnd now she knew for sure. She had been to his home, slept there, and learned about his life. She had found feminine shampoos and lotions in his bathroom. He hadn't mentioned a girlfriend, but Francesca was intrigued. What sort of woman would be worthy of her brother? Someone pretty special she thought.\n\nShe had never imagined him with such short hair either, but it was perfect. He was too pale though. Growing up in Perth they had always been nut-brown as children, and it had seemed normal. But the skin cancer advertisements on TV were much harder hitting these days. Perhaps Mateo was right to stay out of the sun. Frankie resolved to follow his example as she always had.\n\nShe had overdosed on Mateo in the last week, perhaps even enough to cover six months apart. But not three years, unfortunately.\n\n++++\n\nMay 1990\n\nRitchie Investments had a reputation. They were aggressive, taking risks that other brokers would not. They were willing to take positions that only lasted days, sometimes even hours. They dipped in and out of every market, like a bee searching for nectar. And more often than not they found the source of that sweet treat.\n\nTheir secret? Hard bloody work.\n\nIt was that simple. Mike and Mateo split the day into two twelve-hour shifts. Their office operated day and night. There was Mike's dayshift from 8 AM and Mateo's night shift from 8 PM. That worked perfectly for their main markets. Overnight Mateo focused on the Dow Jones in New York and the LSE in London. He had a team of four junior researchers in an office on Wall Street and the same on Tavistock Street in London.. They scoured the US news wires, papers, and TV stations, for business anecdotes and rumours.\n\nMateo only needed the vaguest hint of a story to make his trading decisions. He was decisive and ruthless. If he took an investment decision, he was all in, betting the farm. But he got out just as quick. Often, the market was only just beginning to digest his trades when he settled his positions and moved on.\n\nTheir volume wasn't close to that of the big players, but their profit margins were miles ahead. As their client base grew, so did their capital and their clout.\n\nMike concentrated on his traditional markets in Hong Kong and Tokyo. He spoke Japanese and like Mateo had his own team of people on site in other cities. He had supervised Mateo's early trades, before taking off his training wheels. It had not taken long, the boy was a genius. Sometimes when he checked the previous night's trading summary he had to look again. Mateo was making double the money that he was.\n\nAnd Mateo loved it. He had negotiated a profit share with Mike. His new boss has been delighted because he knew that it took years to become successful. Unless your name was Mateo Martin, then it took six weeks.\n\nMateo earned his first million dollars in six months, his second in three.\n\nHe was hooked, he had found his heroin, his purpose in life. All else was secondary. Food, health, relationships, even family. They were just background noise. At his desk, they faded into silence in his mind.\n\nYears passed. The millions piled up. And the world moved on.\n\n++++\n\nJanuary 1994\n\nFrancesca graduated from high school at the top of her class. She was still only seventeen, although her eighteenth birthday was mere days away. She had decided not to rush straight into college, but to take a year out beforehand.\n\nJorge was delighted. He would have a year with her before she left for college too. He was hoping that she would choose UWA and stay at home with him. But Frankie seemed set on following her brother's example. She was dead set on going to Monash Business School. It made no sense to him, she could have her pick of any school. She wasn't interested in finance, not in the way that Mateo was.\n\nBut she was Frankie, and she knew best. Discussion was not her forte, decisiveness and stubbornness were. But through the first week of January, she stayed at home with her father. Until she announced her latest stubborn decision.\n\n\"Papa, this gap year is boring. So, I'm going back to high school. Not full time, just for a couple of subjects. Things that will be useful for my degree. There's the new computer lab that I'm fascinated by. I want to learn about computer science before university. Mr McLaughlin says I can be a teaching assistant and earn some money too. Isn't that great?\"\n\nA fait accompli my dear, quelle surprise.\n\nBut in all honesty, Jorge couldn't see a flaw in her plan. He had been terrified that she would decide to jet off and travel the world. But here she was, continuing her education and earning money too. What a joy his daughter was, he thought, for a moment anyway.\n\n\"But first,\" Francesca continued. \"I am going to visit my brother. I need to clear the air with him and find out what we did to annoy him so. Do you know when his last letter was? My birthday, a year ago.\n\n\"When we visited him in Sydney that time, I thought everything was back to normal. But since then, it has been radio silence. Well, I'm going to get to the bottom of it.\"\n\n\"OK, honey,\" Jorge said. \"I'll call him and make plans. I'm sure he'll be delighted to see you. He will probably want to pay for your ticket.\"\n\n\"No, Papa,\" was her harsh response. \"It must be a complete surprise, an ambush. I want him to speak with me honestly. I want the truth, not some story that he has cooked up. Surprise is the only way to guarantee that that is what I get.\"\n\nAs always, she has thought things through, Jorge. Far better than you ever could, you silly old fart. Should I offer to go with her? No, she wants to do this alone. OK, she's eighteen in a week. I shall give her my blessing. Well, mostly...\n\n\"You are right of course, my darling,\" he replied. \"When do we leave?\"\n\n\"I would rather do this on my own, Papa,\" she replied. \"Do you mind? This rift with Mateo has weighed on me for a long time. I need to talk with him, a lot. If he doesn't mind, I plan to stay with him for weeks not just a few days.\"\n\nVoc\u00ea \u00e9 mais s\u00e1bia do que seu pai, garotinha.\n\nBut Francesca did not speak his mother tongue much anymore, so he continued out loud. \"You are wise my dear, and brave. I hope that you can reach your brother. I have tried but he lives in such a different world now. I fear that it might make things worse.\"\n\n\"How could it be any worse, Papa?\" was all that she needed to say to convince him.\n\n\"Great, now I just need to make some preparations. I'll fly there on my birthday,\" Frankie said with her trademark grin. \"That should get his attention.\"\n\nPlease Maria, for me. Don't let this blow up in her face.\n\n++++\n\nFrancesca alighted from the taxi outside Mateo's building. It had been a long trip, but she didn't feel tired. She was excited and not a little nervous. The taxi driver offered to carry her case inside, but it wasn't heavy, so she politely declined. Picking it up herself she headed to the concierge desk.\n\n\"Hi,\" she said to the man on duty. \"I'm here to visit Mateo Martin in 2711.\"\n\nThe doorman looked her up and down.\n\nThis fuckin' guy gets the hottest friggin' women in town. Every fuckin' night. How the hell does the bastard do it?\n\n\"Certainly, miss. Is he expecting you?\" he asked politely.\n\n\"No, not at all,\" Frankie giggled. \"It's going to be a big surprise.\"\n\nI fuckin' bet it will. Jesus, I wonder what he's paying her for tonight? $1,000? Probably more. Worth every cent I would think.\n\n\"I see,\" he replied, trying to remain professional. \"Well, we are supposed to call ahead for unscheduled guests. What name should I give?\"\n\n\"Oh, come on, please,\" Frankie wheedled. \"I'm his baby sister and it's my birthday. I've come all the way from Perth to see him. Can't I just go up and surprise him? Please?\"\n\nI just bet you are, luv. You'll be calling him brother before the night is over, probably daddy too.\n\n\"Erm, do you have any ID that might confirm that miss...?\" he asked.\n\n\"Francesca. Francesca da Silva Monteiro Martin,\" she replied, fishing in her bag. \"Here's my driving license.\"\n\nFuck me, it's true. I guess he will get a rest tonight after all. But that means she's fair game. Time to turn on the old charm, Robbie lad.\n\n\"Thank you, that's excellent,\" he said handing the license back. \"If you could just sign in here, I'll escort you to the lift.\"\n\n\"It's fine, I've been here before, thank you,\" Frankie said with a smile. With that, she spun on her heel and headed through the concourse.\n\nSmooth mate, very fuckin' smooth. Look at that fuckin' ass though. Sister or not I bet he's tempted. That lucky, lucky bastard.\n\nStanding at her brother's door, Frankie's excitement began to feel a lot more like nervousness. There was a pulsing, insistent pressure in her belly, an urgent, sensation of... something. Taking a deep breath, she decided to ignore it though. She had come all this way and she had a plan, she was confident.\n\nWell, I was confident until that creep downstairs ogled me like a sleazy stripper. Come on Frankie, it's Mat. He loves you. He's been a bit distracted... for the last three years but underneath all that he's still your bro. It's time. Fuck, it's well past time.\n\nBefore she could think about it anymore, her hand was knocking on the door. There were sounds from inside, grumbling she thought. Then she heard the rattling of several locks before the door was flung open. It was Mat, he was there."
    ],
    "authorname": "Nobston",
    "tags": [
        "life",
        "love story",
        "erotic coupling",
        "oral sex",
        "blowjob"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-old-country"
}