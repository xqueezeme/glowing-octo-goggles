{
    "title": "The Student Ch. 03",
    "pages": [
        "The double tap on the open office doorway caught my attention. Glancing up I found Mary Richards, American Literature professor and owner of a set of the finest natural C cup breasts that I'd ever had the privilege of playing with, standing in my doorway. \"How was the summer?\" she asked.\n\n\"Good,\" I answered automatically without thinking. \"Had a really good summer. You?\"\n\n\"Mmmm,\" she answered, raising her eyebrows as she did, \"I've got a lot to tell you. You up for Saturday?\"\n\nAnd there it was. It was the third week of school, two weeks later than I would have bet on, but there it was. The routine the previous year had been that we would get together on Saturdays two, sometimes three, times a month and go out to dinner, a party, a movie, or maybe the theatre, and then fuck each other to exhaustion. She'd been my date to the staff Christmas party last year, and although we weren't together all the time, many knew we'd seen each other multiple times.\n\nI hadn't seen Linda since she left, except in classes, and she hadn't said anything or stayed around long enough for me to say anything to her after the class. I'd see her again the next class but here we hadn't been separated by even a few weeks and the exact scenario that she'd hypothesized about had come up, \"What will you tell Mary Richard's when she wants to bump uglies?\"  I hadn't really thought about it at that time, I'd ignored that it would happen, but now here it was -- the elephant in the room, at least in my mind.\n\n\"I can't this week Mary, maybe next?\" I lied. I could, but the reality was I didn't want to.\n\n\"Ok, I'll hold you to it. Gotta run.\" And just like that, she was gone.\n\nLinda was being her normal perfectionist in class, even better than the previous semester, giving me no reason to talk with her about anything. She'd had her homework done and ready the first time and every time I called for homework to be turned in. She'd aced the quizzes that I'd given. She'd answered questions in class perfectly. She'd missed no classes, had made no calls to ask what the homework was, or used any other excuse to call me. I missed just hearing her voice.\n\nI'd called her the afternoon that she left, but she hadn't wanted to talk about it, just said that it was better and easier this way. She gave the same reason; we wouldn't have to hide our relationship from other professors; we wouldn't have to pretend in the company of other students that we didn't have anything except a student-teacher relationship. Somehow I had the feeling that I'd done something wrong, but going over and over in my mind, I couldn't see what. We'd started with some lustful infatuation, we'd hooked up and obviously had some mutual care and admiration going on, but somehow, something must have been missing - as just like that, it was over. \n\n~\n\nI opened the door; Mary stepped ahead of me into my living room. I slid my hand onto her back, just as I had so many times before, but instead of enjoying the attributes of her body I was realizing all the differences between her body and that of the last woman that had stepped through my front door with me, Linda. Linda's body was muscular, she worked out daily, Mary's back was softer, not as muscular, but still shapely. Mary's much larger bottom was where the difference really showed; soft, rounded, and sexy in a different way. \n\n\"So are you going to tell me about her?\" Mary asked an hour later, rolling onto her side and propping her head up on her arm. Her other hand was playing with the hair on my chest, lazily drawing figure eights with a finger. \n\n\"Who?\" I answered, unsuccessfully trying to make it seem that I didn't know what she was talking about.\n\n\"The woman that's been sharing your bed. The woman that's been leaving her touches around the house. The woman that seems to be on your mind more than the one you're with.\"\n\n\"I don't know, are you going to tell me about your lovers? Meet anyone interesting? Or should I say, hook up with anyone interesting?\" \n\n\"It's about time you asked,\" she giggled, dropping onto her side and snuggling up to me. Looking up to me with an impish look on her face, first she sucked her lower lip between her teeth and then said \"I had my first threesome.\" \n\n\"What?\" I exclaimed, knowing that she'd always professed that she'd try it if the opportunity arose. She proceeded to gleefully tell me all about her nearly three-month trip to Europe, starting in Turkey and then moving westward and north to the Scandinavian countries before ending with a week on the beaches of Spain. She'd met a Swedish couple, Soren and Annika, at the airport in Mykonos that were staying at the same resort that she was. They hit it off and ended up spending the day together and meeting up on the beach the following day. When Soren made a pass at her that evening after dinner she'd asked him \"What about your wife?\" He responded that Annika was hoping they could all play together. \"So we did. \"\n\n\"Hmmm.\" I said, realizing that my cock was responding faster than it had been. \"Was it all you thought it would be?\"\n\n\"Oh my God, yes. In Spades! I was a little unsure about whether I would like being with a woman, but -- O. M. G!\" She pronounced the three letters as if they were words, with emphasis. \"I don't know, I thought maybe Annika would be a bit jealous of me being with Soren, but it was just the opposite. She loved watching us and joining in. We'd wear Soren out, and then take care of each other until he recovered. Women are so soft, and warm and cuddly -- and a 69 with a woman is absolutely the best.\" She rambled on effusively for easily fifteen minutes, telling me all about nightclubs and sex, beaches and sex, siesta's and sex, and just plain sex before she ran out of steam. \"So what about you? I know you weren't a good little Monk all summer so who did you hook up with?\" \n\nDespite having had several weeks to come up with some kind of believable lie, I hadn't. I told her that I'd hooked up with a couple of women at different times; a woman in a bar, and then several weeks later a woman after a wedding, and that we'd spent most of the summer together, but it was over -- she'd moved on. \n\n\"Just like that? A summer fling and now she's gone? Did she live with you?\"\n\n\"Not really, she just spent a lot of time here. We called it off. She works nights; I work days -- the same problems as with my wife. She's got a daughter; all in all, we just knew it wouldn't work.\"\n\n\"Well then that's good for me, isn't it? I still get you on Saturday nights or whenever I need a nookie session?\"\n\nI laughed. \"Yes, I suppose so.\"\n\nDespite my laughter and assurance, I had my doubts. \n\nI got back into the routine fast enough, day after day getting up, going to class, and teaching the same thing, again and again. Twice a week I'd see her; sitting in her same spot, wearing her same oversized sweatshirt. She'd answer if I called on her, she'd volunteer just as she always had, but then she'd look away. The occasional flash of eye contact we'd had the semester before was gone as if she was studiously avoiding it. I'd see her watching me when everyone else was watching me, but it never had the magic feel of the previous semester. \n\nAnd it was agony for me. \n\nMary and I hooked up three consecutive weekends, attending a staff party at the halfway mark of the semester. As always, despite the desires to not talk business, work parties always come down to business. Secretaries and administrative assistants, always willing to tell the importance of what they're doing for the process, are the worst. Second worst are the pompous professors, too big for their britches, flush with their tenure and knowing that no one can test them. When it comes to the classroom, they are God. For junior, non-tenured professors like me, we just keep our mouths shut and listen to what others are saying.\n\n\"What I heard is that they're examining records, looking for anomalies with statistics. You know, low grades that suddenly change or get increases where they're not deserved. They've got some statistical consultant that used to work for NASA. Remember when the space shuttle rocket blew up years ago? It's the same guys that figured out what happened with that.\" I was getting a glass of wine, two actually -- one for Mary and one for me when I overheard this little tidbit. I moved my eyes, glancing over without turning my head. I didn't recognize either of the two young women that were talking while thinking they were out of ear-shot of others.\n\n\"Do you suppose they'll finally nail that scumbag professor?\"\n\n\"Makes you wonder, doesn't it? Why in the world would someone sleep with him anyway? And his wife's just as bad. And what about the ones we don't know about? Who else is trading grades for sex?\"\n\nI walked away, the conversation mulling through my mind. I knew there was an anomaly in my grades, but would they see it, would they question it? I set the grading standards, I applied the grading standards and even though I'd adjusted Linda's grade, I'd done it blanket -- I'd adjusted everyone's. Could that be reason to question me, a minor adjustment to grades that had made a difference for just four people, one of whom just happened to have spent much of the summer in my bed?\n\nWhen I found my glass of wine gone again, I'd had enough and was more than ready to go. \"What do you say we get out of here, Mary?\" I asked, taking her elbow when my glass was empty. She still had a swallow of wine left and just set it aside.\n\n\"Shall we head for home?\" She said, leaning over and planting a quick kiss on my earlobe.\n\n\"Your bed or mine?\" I whispered so that just she could hear. \n\n\"Umm, so you're finally beginning to feel a little feisty? I was wondering when the real you would show up.\"\n\n\"What did you mean by the real me?\" I asked twenty minutes later in the car as we were headed home. \n\n\"You know exactly what I mean. Where's the lover I had last year that was so much fun? The lover that was always trying to get into my pants or at least get me out of them? The one this year always seems to just be going through the motions.\" \n\n\"I don't know, I guess I've changed.\"\n\n\"What is it, that woman you hooked up with over the summer? Is that it?\"\n\n\"Nah, I don't think so,\" I lied. \"Hey, did you hear that they're doing an investigation of professors?\" I said, immediately deflecting the conversation away from Linda.\n\n\"What? No! What are you talking about?\n\n\"Oh, I just overheard two women talking at the party; they didn't know I could hear. Something about the hiring of a statistical consultant to examine grades? I heard them say something about maybe they'd nail that professor this time...\"\n\n\"Oh my god, I'd heard something about a consultant who would be examining grades - supposedly in an attempt to come up with some grade standardization -- but that certainly makes more sense.\" She giggled, \"You know who they were talking about, don't you?\"\n\n\"Umm, a certain professor that is, um, known to not fail pretty girls?\"\n\n\"The rumors been around for years but nobody has ever been able to prove anything. I can't see that a statistician would make any difference, just what could they prove?\"\n\n\"It all depends; how much evidence was left, particularly if all the grade work is recorded. Unless they've got a complaint it's probably just circumstantial. If they can see that someone has been going through the class and getting poor grades or worse, and then suddenly at the end of the semester something shows up that suddenly vaults a failing student to the head of the class -- that would be interesting. And if it happened again and again and every time it turned out they were pretty girls....\" I just let my thoughts trail off -- thinking about how I would structure a statistical examination -- and again about my own situation. I had almost 5 years now of records, always at exactly 90% for an A -- and then last semester, a minor change. Would anyone question why? Was anyone really looking?\n\n\"You ever think about it? With one of your students?\"\n\n\"Trading sex for a grade? Absolutely not.\"\n\n\"Not trading, just jumping one of those cute little co-eds bones one time.\" \n\n\"I don't think I've ever met a woman that it didn't eventually cross my mind,\" I answered truthfully avoiding a lie. \"Have you ever thought of doing it with one of your students?\"\n\n\"More than thought about it.\" My head instantly swiveled to see what she meant; her face saying she was absolutely serious.\n\n\"What? You've slept with a student?\"\n\n\"Not when they were a student. But afterward they're not students, they're former students.\"\n\n\"Oh.\" It dawned on me that we were now talking exactly about my situation, and this was too close for comfort. I turned into her driveway, none too soon. \n\n~\n\nI knew better than to just leave. It was 3 am but I was wide awake with the normally insatiable, the normally desirably sexy, Mary Roberts finally slumbering beside me. It was always this way with us; Saturday evening dinner, maybe a movie and then home to one of our houses for hours of sex. We would do it every which way we could and then fall asleep, only to wake up Sunday morning and do it again before one of us finally headed for home. Now here I was lying awake at 3 am trying to figure out how to break off our relationship.\n\nTruthfully it was \"just\" sex. Adventuresome sex most assuredly, but just sex. Although we went through the pleasantries of entertainment early in the evening every time, we knew that was just a prelude of getting each other onto the same wavelength before we crawled into bed. Occasionally she'd ask if I'd like to come over on a weekday for dinner -- which really meant that she was horny and wanted to get laid. To be honest, I'd also called her a time or two during the weeks. On those nights we'd fuck to exhaustion, but I'd always go home, or she'd go home, as we'd also have class the next day. \n\nNot that I hadn't enjoyed it this time; not that I had been unable to perform, I most certainly had. Physically we'd both cum multiple times, but mentally this wasn't what I wanted any longer. I rolled onto my side looking at Mary asleep beside me. The room was warm, the sheet just covering from her waist down. I would not have said she was overweight before I knew Linda, now I looked at her and every little rounded curve belied the extra weight she did carry. Nicely rounded breasts looked fat in comparison to Linda's perky B cups; I knew from personal experience how they were softer and squishier than Linda's firm tits. Mary's large silver dollar areolae and fat nipples, which only swelled to my direct caresses, conflicted with my vision of Linda's smaller nipples that often perked up just by Linda looking at me. Curves at Mary's waist now looked fat. Her bottom, that at one time I thought filled out a pair of designer jeans quite nicely, looked fat. I knew in my mind that it wasn't that she was terribly overweight, I used to think of her as pleasingly rounded -- it's just that everything about her I was comparing to the svelte tautness of Linda's body.\n\nMy mind shifted to Lori, the little bundle of energy that had latched onto me so easily for those six weeks of summer. Her constant badgering's of \"can we go to the park\", or \"can we have pancakes?\" \"Can you push me\" (on the swing set) -- and especially those evenings where she'd fallen asleep on the floor and I'd picked her up, her arms going around my neck as we carried her in, and put her to bed. I realized I missed Lori almost as much as I missed Linda. All of these thoughts twisted and turned, tormenting my thoughts until I finally fell asleep.\n\nMary's hands slithering across my body awoke me. Her fingers found and flicked my nipples, stroked my stomach and arms, finally reaching my growing erection. I was tired; I'd barely slept at all. \"Hey stud, you about ready for a Sunday Morn-er?\"\n\nDespite my cock having reacted to her caress, the words barely seemed to penetrate the fog of my brain. I really needed more sleep -- I'd been awake thinking most of the night. \"A Sunday mourner?\" I questioned, groggily. \"What's a Sunday Mourner? Did somebody die?\"\n\n\"No goofball,\" she answered, now openly stroking my cock to full hardness, \"a Sunday morner -- you know, just like a Sunday nooner -- only sooner!\" Her giggling lips followed her hands, kissing my nipples, kissing my belly, until her mouth engulfed my erection to make it suitable for what she wanted. Soon enough she relinquished her mouth music, pivoting her body up and over mine to sink my shaft into her, to fulfill her need. Without thinking, my hands found her breasts, tweaking her nipples, giving her what she needed unconsciously. In no hurry, we didn't rush; but neither was this extended lovemaking -- it was just sex. \n\nAfterwards I broke up with her.\n\nIt's never easy to break it off with someone even if there is nothing more to your relationship than sex. We were lying there with her snuggled up to my shoulder, and I decided it was best to just say it. \"Mary, I don't think I want this kind of relationship anymore.\"\n\nShe didn't flinch; she didn't even raise her head and look at me. It was for several moments that absolutely nothing was said, and I almost wondered if she'd heard or at least understood me. \"I've been expecting this,\" she said.\n\n\"You have?\"\n\n\"It hasn't been the same this year. I've felt it every time we're in bed, your mind is elsewhere. It's that girl from the summer, isn't it? The one you won't talk about?\"\n\n\"I don't know,\" I lied, knowing full well she couldn't have hit the nail any harder on the head.\n\n\"It's always a sign, if you won't talk about her, then she's something special.\" We lay there saying nothing for several minutes before she continued. \"Are you in love with her?\"\n\n\"I don't know. I think I might be.\" \n\n\"Does she love you?\"\n\n\"I don't know.\"\n\n\"You don't know much for wanting to break off a sure thing, do you? Why don't you go to her? Tell her how you feel and see if she has the same thoughts?\"\n\n\"I can't.\"\n\n\"Why not?\"\n\n\"It's complicated.\n\n\"It's not complicated, it's easy. It's the repercussions that are complicated. That's why I gave up on love a long time ago, it's much nicer and easier to just find a good lover and visit him occasionally.\"\n\n\"It's more complicated than that. It's not that easy.\"\n\n\"What's not that easy? All you have to do is....\" She stopped, I looked over at her.\n\n\"She's one of your students.\" Her eyes met mine, and there was no denying it, she knew and I couldn't hide it. \"I think you need to tell me all about it.\"\n\nI didn't tell about Linda being a stripper but told everything else. That she was on her way to Summa Cum Laude, that she had a daughter that was absolutely wonderful, that she'd gotten into what she had considered academic trouble. I told how I'd manipulated the scale, just slightly, but it had only affected a handful of students and that she'd broken if off with me when the school year was about to begin.\n\n\"So that's why you were so curious about a sex for grades investigation.\"\n\n\"Sort of. I mean, I didn't do anything wrong, but that's not what others may see.\"\n\n\"So, did she proposition you? \"\n\nI shook my head in the negative. \"No, not exactly. She begged for some leeway, and then said she'd do whatever she had to.\"\n\n\"Hmm. Might have been. What did you say?\"\n\n\"That if she got a perfect final paper, I'd have reason to take extenuating circumstances, such as being a single mother, working nights, and raising a daughter into account.\"\n\n\"So she got a perfect score, you adjusted the scale slightly, and she had sex with you as a thank you. What's wrong with that?\"\n\n\"NO!\" I really responded hard at her when she said that, but then realized as I saw her face, that she wasn't serious. \"It wasn't like that at all. It was about six weeks later, we were at this party -- I started to say \"Bachelor Party\" but caught myself just in time -- and I saw her. That was the first time I'd ever run across her outside of the university. She called two days later, the day after the wedding. I asked her to lunch, and well, it just happened.\"",
        "\"Hmm. So now you know about a sex for grades scandal brewing, you had an affair with a former student whom you just happened to adjust the grade for, and she wisely decided to call if off before school started so there weren't any questions about propriety. So what's the big deal? If she's a former student and you begin dating -- so what? \n\n\"And what if she's not a former student?\" Mary rose up onto one elbow in response.\n\n\"Oh, you bad boy! She's in your class again?\" I nodded.\n\n\"Well, that's easy. You just keep going out on Saturdays with me. Let Mary take care of your needs until the little tart graduates and then you can chase her down all you want,\" she said with a smile letting me know she was teasing again. \"I know, that's not what you want. Affairs of the heart are so complicated, aren't they?\"\n\n\"You're not upset?\" \n\n\"Oh no. A little inconvenienced is all. Now I've got to find someone that has as little baggage as you did. After this summer, maybe I'll try a woman this time. I hear Ms. Seymour over in the art department broke it off with her lover...\" We continued to lie there, her snuggling to my arm, me not knowing whether to get up and go -- or just stay a bit longer. \n\n\"What do you say, we get up, have breakfast -- and we have a real nooner before you go?\" I looked over at her, a smile on her face.\n\n\"You really are insatiable, aren't you?\"\n\n\"Oh no, you've sated me quite often for the last two years.\" \n\nThrowing the covers off, I smiled at her and sat up, swinging my legs over the side of the bed. \"Thank you, Mary. It has been fun, but I think it's time for me to go.\"\n\n\"My bed's always open for you. Come see me if it doesn't work out.\"\n\n~\n\nIt was a Saturday morning, four weeks to the day later, when the phone rang. At least the clock said \"SAT\" on it, but the time said it was 2:37 AM, which to me meant it was still Friday night. Regardless, a phone call any time before the sun comes up is not a good sign.\n\n\"Hello?\"\n\n\"Rick?\" My heart skipped a beat at her voice, any sleepiness immediately driven from my brain. \"It's Linda, I didn't know who else to call.\"\n\nIt didn't take long to know that her car had died, partway between work and home. I didn't hesitate, told her to stay in the car with the doors locked, and had my pants and shirt on and out the door in five minutes. It was 40 minutes later before I got to her, pulled over alongside the road, a Highway Patrol Cruiser parked behind with red lights flashing to warn cars. At 3:30 on a Saturday morning, there weren't many. \n\nI asked her what happened -- her description of \"just started banging and quit\" not sounding like good news. I took the keys and tried to start it, but the engine didn't turn over. The starter motor engaged -- but that was it. It didn't even take a calculation to know that her car had traveled its last mile; it was going to take a lot more to repair it than it was worth. The Highway Patrol called for a tow truck, I took Linda and headed for home. \n\n\"It's good to see you, Linda,\" I said, after we'd driven in silence for several minutes, \"I'm glad you called me.\" I looked over at her; she just nodded, not saying anything.\n\n\"I think your car's trash. It acts like the engine's seized and, if it is, I'll guarantee it'll cost more to replace than it's worth.\" Again she nodded. I felt her occasionally glancing at me; I glanced back, each time her face turned away. \"We're better off shopping for a new car than even worrying about that one. It won't take long and you'll have something better than what you did.\"\n\n\"Thank you.\" It was practically the first thing she'd said since she'd called. I waited, but she said nothing else. \n\n\"You'll need to stay with me for a couple of days until we can get you a new car.\" I glanced at her, her eyes meeting mine. \"You and Lori can stay in the guest bedroom, and although you can use my car to go to work, I'll still need it during the day. Either you stay with me or we're going to have to shuttle back and forth all the time which just isn't going to work.\" Glancing again at Linda, she nodded.\n\nWe put Lori into the bed; I got Linda a t-shirt to sleep in and pulled a new toothbrush out of the drawer. I got her a clean towel out of the towel cabinet; she headed into the guest bathroom to take a shower. I glanced at the clock as I climbed into bed -- 4:35 -- almost exactly two hours later from when the phone had rung. \n\nI had almost dozed off again when I heard her footsteps in the hall. Stopping at the door, I didn't move, just watching to see what she would do. She stepped forward toward my bed, unsure if I was awake or not. When she was standing beside the bed, I pulled the sheet back, giving her the opening if that's what she wanted. Knowing now that I was awake, she hesitated for just another instant, then pulled the t-shirt off and climbed in bed.\n\nOur lovemaking was just as magical as it always had been. Her body responded to mine and mine to hers, again and again. Her back arched in orgasm, her pussy writhed to my tongue and cock, my cock exploded filling several condoms, and yet we did it again. The sun came up -- but still we didn't stop. Linda was on her back, my lips on her breasts, and my fingers between her thighs when I heard tiny footsteps charging down the hallway. I'd barely rolled away from Linda when Lori pounced on the bed, not having a clue that she'd interrupted something. \"Rick! You have to get up and make me pancakes!\" she demanded, pulling at the sheets, not at all upset about finding she wasn't in her own bed or house. I grabbed the sheets to hold them in place over me and Linda casually pulled them a bit higher covering her bare breasts. Whether Lori realized we were both naked or not, it made no difference to her.\n\n\"Ok, we'll get up and make you pancakes,\" Linda answered. \"You go get dressed, your clothes are in your overnight bag and we'll be there in just a minute.\"\n\n\"Ok,\" Lori answered, perfectly happy with the answer, spinning to fly out of the room - a tiny bundle of kid energy. She ran back down the hall chanting \"Pancakes! Pancakes!\" \n\nI leaned over to Linda one more time, the sheet now folded between our otherwise naked bodies. I reached up and stroked her cheek with the back of my hand. \"You stay, get some sleep. I'll take care of Lori.\" I went into the shower for a quick rinse, when I came back out, Linda was already asleep. She slept all day.\n\n~\n\nI heard the door open quietly at 3 am, right on time, suddenly realizing that after she'd left I'd never asked for my spare key back. I listened to her climb into the master shower this time, arriving at my bedside a few moments later. Unlike the lust driven frenzy of lovemaking the night before, tonight was slow and sensual. \n\n\"I've missed you,\" I said, speaking so softly it was practically a whisper. Her hand squeezed my arm, confirming that she'd heard me. \n\n\"Me too,\" she whispered back, a few moments later.\n\n\"You been doing ok?\" A resigned sigh was her immediate answer.\n\n\"I'm sorry, Rick. I just couldn't handle another complication in my life.\"\n\n\"A complication,\" I repeated after thinking about her words. \"Is that what I am, a complication?\"\n\n\"Yes. You're a complication.\" I didn't say anything, what was there to say? Moments later she continued. \"I had a plan and nearly lost it. I had a boyfriend that I thought I was in love with, and I could live with that, but he left me with a daughter that I hadn't planned on and that's a complication. I've got a full-time job that pays well but I can't really tell anyone about it, I can't keep it forever, and that's a complication. My job requires me to be awake while my daughter is asleep, and that's a complication. I've got another full-time job going to school and studying, and that's a complication. I've got an apartment to keep clean and in order, and that's a complication. I've got a car that died, and that's a complication. I've just got two more semesters of school, and then I can graduate, quit my job, pay attention to my daughter and my future. I'm sorry Rick; there just isn't time in my life for another complication. Having to spend time with you, wanting to spend time with you, falling in love with you rather than studying or taking care of my daughter, or apartment, or future -- I couldn't take another complication. I've got things to do with my life, and I can't add anything else until I'm ready. I've come too far to throw it all away now.\" There was no heat in her words, just a matter of fact statement. \n\nI didn't say anything, just lying there sleepily thinking about what she'd said, especially those magic words \"falling in love with you.\" I understood completely, it wasn't that she was rejecting me; it's just that at the moment she had different priorities in her life. At least I could take solace in knowing that someday there was at least a possibility that there might be a place in her life for me.\n\nA call with the mechanic confirmed my suspicions and her old car was soon on its way to the junk yard. Her first day off was the following day, and a four-year-old Subaru with 36,000 miles and a fantastic price tag solved the car problem that afternoon. She opted for spending some of her savings rather than making payments which made perfect sense to me. With the car problem taken care of, I realized there was no other reason keeping her at my place. \"I guess you'll be moving back to your apartment now?\" I asked, standing beside the two cars after having changed Lori's car seat over to the Subaru. Her reluctant nod confirmed my thoughts.\n\n\"Well, is your babysitter available for a few hours this evening?\"\n\nShe nodded. \"Probably. What have you got in mind?\"\n\n\"When was the last time you went to a nice restaurant and had a nice dinner with a really nice guy, maybe one that you occasionally have fantasies about?\"\n\n~\n\n\"Well, this is somewhat awkward,\" I said several hours later, glancing once more out the window of the roof-top restaurant at the city spread out below us as I moved my chair just a bit closer to Linda.\n\n\"Why is that?\" she answered, her hand sliding forward, resting on the back of mine.\n\n\"A nice Pinot Grigio gone,\" I said, lifting my glass and taking that last little sip of wine, \"that hopefully relaxed your inhibitions; a great meal in a romantic setting, a beautiful woman...\" I set my glass back down before I finished. \"This is the point where on a first date like this I'd normally say -- \"would you like a nightcap?\"\n\n\"And?\" she questioned after a few seconds, \"Are you asking?\"\n\n\"No.\" \n\nShe sat upright, a bit startled. \"No? Why not?\"\n\nI leaned forward a bit, reaching for her hand. \"Because I don't want to know the answer.\" I looked down at her hand, her long sensuous fingers enveloped in my hand. I brought my other hand over, stroking the back of hers. \"There are only three answers possible. First, you would say something like 'No, it's getting late, I've got to go.' This would mean that it's over, and I'm probably never going to see you again.\" I gave her a second to digest what I'd said before continuing. \"Second, you could say something like, 'Oh that sounds wonderful, but not tonight. Can I get a rain check for next time?' This would mean that I haven't struck out, I'm still in the game, but I'm not getting anywhere tonight. And third, you could say, \"That sounds wonderful, your place or mine?\"\n\n\"And you don't want to know the answer?\" I nodded in affirmation. \"Why not?\"\n\n\"Because I know it will rip my heart out. Linda, these last two days -- they helped me realize how much you mean to me, how much I miss you. You and Lori both. Making pancakes and playing with Lori yesterday, making love with you this morning, waking with you in my bed -- I've got feelings for you that I never felt even when I was married. I don't want you to go to your home, but I know you're going to. I don't want you to say goodbye, but I know you have to, and I don't want to wait until next time. I think I've fallen in love with you.\"\n\nShe looked down at her hand in mine; I felt her fingers squeeze mine momentarily. \"I think my answer is all three. I need to go home this time, but you're going to have to bring me here again, and it'll be your place, not mine.\"\n\nA short while later I helped carry Lori from the car into her tiny apartment, putting her into hers and her mom's bed. I realized as I did, I'd never even been in Linda's bedroom before. The sliding door to her closet was standing open; I realized for the first time how little Linda really had when I saw there were more children's clothes than adult. I stepped out of the room; Linda tucked Lori in and then followed.\n\n\"You're not going to bed?\" I questioned, her actions for some reason indicating otherwise.\n\n\"Oh, I wish.\" She glanced at her desk, several books stacked on the corner. \"I've got an Anatomy test tomorrow morning, and some damn professor whose initials are Rick, but I won't mention his name, scheduled a mid-term on Wednesday; my car broke down and I had to get another one. I missed out on two days of studying, but... I also had the most wonderful date I've ever been on and I did get eight hours uninterrupted sleep. But no, too many complications came up this weekend; I don't think I'll be going to bed tonight.\" \n\nI stepped over to open the door, disjointed thoughts pummeling my mind. Complications; there it was again -- that word. But, I had to admit, from what she'd just said, it was true -- she'd had multiple complications, all of which meant that she was now going to have to study, perhaps all night. But she had said it was a wonderful date and we could do it again.... I felt her hand on my arm, I turned back. \"Rick, thank you for being there for me.\" \n\nI reached up to her hand, moments later she was in my arms, her lips against mine, her body melting against me. My hand went to the small of her back, holding her tightly against me; her hands went to my face, holding it against hers, and then holding it still while she moved hers away. \"Six months, Dr. B, and this nightmare portion of my life will be over.\" She pushed herself away from me, \"Now go.\" I nodded and turned back to the door once again. I pulled the door open, reached for the screen when she spoke.\n\n\"Rick?\" I turned back once again, my hand on the door.\n\n\"Yeah?\"\n\n\"I think I'm falling in love with you too.\"\n\n~\n\n\"Doctor Ber... Doctor Bernash...\" the inquisitor began.\n\n\"Doctor B is fine. Even people that know it don't say it correctly most of the time.\"\n\n\"Fine, Dr. B it is. This is an official inquiry instigated by the Board of Governors into certain alleged improprieties between the professional staff and the students. You're not being accused of anything, you're merely here to answer questions about your classes, your grades and how certain events transpired.\"\n\nAnd so it started. \n\nWe'd all heard about the abrupt dismissal and replacement of a professor from another department. We'd heard how the professor had gone in and been questioned, and then there had been a flurry of students and former students, all female, called in to speak to the board; how the last day a couple of unmarked police cars were in the visitors parking lot as the professor was questioned yet again and at the end of the day, he'd resigned and walked away. We'd also heard how multiple students had been able to offer their observations, complaints, or suspicions about other professors, but unless there was some corroborating evidence that turned up nothing had come of it.\n\nSo far there had been a multitude of professors questioned; most just a perfunctory visit, and then they were off. No one was told not to talk about it, and most everything people said was that it was just innocuous questions about how's and why's for certain grades that had been made. \n\n\"We've had a statistical consultant examining grades and class scoring for several months. There have been multiple items from multiple professors that have been investigated; however, with one exception, they have all been easily explained and understandable. So if you would, can you start by explaining your grading system?\"\n\n\"Of course,\" I said. Turning to my briefcase I pulled out the generic syllabus sheet that explained my rules and handed one to each of the four. \"I hand this out to my classes at the start of every semester; it explains the scoring and grading system. There are generally 1000 points available in a semester and it takes 90%, or at least 90% of the points available before the final, to get an A. If anyone in the class has 90% of the available points at the time of the last class session, they cannot do any better -- they can only do worse and they've already shown they can do \"A\" work -- so I excuse them from the final. A little incentive to try harder, if you will. Everyone else has the opportunity to better their grade through the final exam.\"\n\n\"And do you always follow this formula exactly?\" \n\n\"Generally, but I have made exceptions in extraordinary cases.\"\n\n\"Yes, we saw that. Our investigators found exactly as you've stated except for a single anomaly to your scoring system.\" He held up a sheet of paper for me to see but didn't offer it to me. \"Your grades have all exactly followed the 90-80-70 rule except for the semester before last. In that one we found that four student's grades have been arbitrarily adjusted, which is certainly a professors prerogative -- except when it's made for the wrong reasons. Can you tell us why you adjusted these four grades?\"\n\n\"I can. Actually, you're incorrect. I adjusted all except two. There were two students that had greater than 90% going into the final, and they got an automatic A. Their scores will not show a final exam score, but they did get an A. The others I had an extraordinary circumstance brought to my attention and decided to adjust a grade. I didn't feel it was fair to adjust just one person's grade without giving the same consideration to all -- so I revised the total available number of points for the class downward. Everyone got a jump upward by a fraction of a percent in their score, but it only made a difference to four students. \"\n\n\"Dr. B,\" I looked over at the woman, who was speaking for the first time. \"I presume this student you're speaking of was Miss Simpson? I see that according to the revised scoring she received exactly a 90% mark.\"\n\n\"That's correct.\"\n\n\"And can you share with us her extraordinary circumstance that required you to change your grading scale?\"\n\n\"I can.\" I paused, sweat beaded up on my forehead. Although I'd prepared for this since I'd heard the rumors about inquiries were true, and especially after a certain Humanities professor had abruptly resigned or most likely had been dismissed, I hadn't known just exactly what or how far they would continue to question. \"Miss Simpson is an extraordinary student. Driven like no other student I've ever had. She's a dedicated student, who works full time, and is also single mother. She went out of her way to follow-up on assignments when she couldn't make it to class, usually because of her daughter. I didn't allow credit for late homework or makeups on unannounced quizzes; yet she always turned in her homework even though I did not give her credit. She came to me after the last class, obviously upset that she had not made the \"automatic A\" of 90%, and wanted to know whether it was possible for her to still get an A. I ran the calculation, and even with a perfect final exam paper -- she would still be a few points short of 90%. She asked if there was any extra credit available that could help her make up the difference, and I told her I hadn't planned on anything. When I looked at her transcript, it showed that she had completed nearly 3 years of college with nothing but A's. When I looked at her class record, with one exception she'd made perfect scores on everything she'd done. She'd missed several quizzes and gotten zeros for those but had perfect scores on every quiz taken. She had several homework's turned in but received no credit, indicating she'd missed those classes but had done the work and turned the homework in anyway; she had perfect marks on three of four tests, but made one error on one test that compounded into several problems being wrong. The combined totals of the missing homework, missing quiz scores, and one moderate test error during the entire semester meant that she could not reach the 90% mark. I took all of this into consideration and told her before the final exam that if she managed a perfect score on the final exam, I would reconsider. I imagine that wasn't even difficult for her to achieve, and after she scored a perfect paper on her final, I adjusted the scoring, so she received an A, and adjusted everyone else's by the same percentage.\"",
        "\"The other three were just by chance?\"\n\n\"That's correct. Two of them I should have failed, they didn't know the material, and since it's an undergraduate prerequisite for nearly everything -- I felt they should have. But I didn't think it was fair to just adjust Miss Simpson's score without giving the same consideration to everyone, and for those four they all got slightly improved grades.\"\n\n\"Mr.B, what is your relationship with Miss...\" she paused to look at the paper, but somehow I felt she knew exactly what her name was, \"Simpson?\" I could feel my heart pounding in my chest; my blood pressure must have been through the roof as I could also feel the vessels pulsing in my ears. I carefully chose my words.\n\n\"Miss Simpson is currently a student at this school and a former student of mine. I had her in class for two consecutive semesters, achieving well deserved A's both times.\"\n\n\"Thank you. Are you aware of whom James Patterson is?\" \n\nI was startled. James Patterson? Who the hell was James Patterson? The name sounded familiar, but yet... suddenly a thought popped into my mind.\n\n\"Um, Isn't James Patterson a novel writer?\"\n\n\"Quite right, Mr. B,\" the speaker laughed. \"However, we're speaking of a different James Patterson. Perhaps you would know him better by his nickname of JB?\"\n\nImmediately I knew who they were speaking of; a former student from several semesters' back that had immediately let it be known that James was his father, his name was JB -- and so it had gone into my book. I hadn't equated the two names until then. \"Oh yes, of course. He was a student in my classes, probably two years ago. I'm sorry I really don't remember much of him.\" But what the hell did this have to do with anything?\n\n\"Thank you. And perhaps you can tell us, are you aware of a dining establishment called \"Le Fontainebleau?\" I wanted so desperately to wipe the sweat off my forehead, it was about to run into my eyes, but I refrained. \n\n\"Yes.\"\n\n\"Are you aware that Mr. Patterson is a waiter at Le Fontainebleau?\"\n\n\"No, I was not.\"\n\n\"We have heard from Mr. Patterson that he witnessed you and Miss Simpson at that restaurant having a romantic little dinner for two about 8 weeks ago. Is this correct?\" \n\nOh shit, ran through my mind. I hadn't seen Linda since that night, except in class. Now into the next semester, I hadn't even had that little bit of interaction in several weeks. What was this going to do to her? What would it do to her reputation? We hadn't done anything wrong, but I knew appearances could be more damning than evidence. \n\n\"Yes, I had dinner with Miss Simpson.\"\n\n\"But you say your relationship with Miss Simpson is as a \"former student.\"\n\n\"Yes, that's correct.\" \n\n\"I see.\"\n\n\"Mr. B,\" my least favorite woman in the entire world at the moment started again; \"Mr. Patterson said that he witnessed you holding hands, speaking quietly together and leaving together. Are these the type of activities that a former student and professor normally engage in?\"\n\n\"No.\" I didn't expound, just let it be.\n\n\"Mr. B, are you currently married?\n\n\"No.\"\n\n\"Were you married at the time that you had Miss Simpson in your classes?\"\n\n\"No.\"\n\n\"Mr. B. Have you had a relationship other than as student and teacher with Miss Simpson?\" \n\nIt takes a lot to get me riled. \"Turn the other cheek\" was instilled into me by my parents at an early age, and for the most part it's always been the best policy. But as any cop knows, just keep asking the questions again and again, and eventually a liar will slip up, or the one being questioned will explode. I hadn't lied, not one word -- but I'd had my fill.\n\n\"Damn it, if you've got something to ask, Fucking Ask It!  You're sitting here trying to entrap me into saying something wrong, trying to trap me in a lie, but it's not going to happen. My personal life and my professional life are two different things. No, I did not trade a grade for sexual favors. At the time that Miss Simpson asked for additional consideration she was just a student, and I was in a relationship with someone else. I didn't meet Linda socially until later that summer, between semesters and we hit it off, we hooked up. Yes, we had a relationship for several weeks -- but she broke it off. She didn't think it wise to allow anyone to know about our relationship, especially since she was going to be taking my class the next semester and she just didn't have time for me in her life. \n\nHave you got anybody accusing me of something? Have you got someone complaining? You had a very minor discrepancy between how I normally grade and how I graded one semester, and since I am the Professor and according to the University Rules it says the grade is entirely my prerogative, I've done nothing wrong, and I've explained that. Last semester Linda Simpson called me when her car broke down in the middle of the night because she had no one else to call. I went out on the road at 3 am and picked her up. If you don't believe me, check the police report. I took her home to get her daughter and then helped her get a new car the following day. Afterward I took her out to dinner, and the last time I checked, it is not illegal for two consenting adults to have dinner together in a public place. That is all!\"\n\nIt was quiet, nobody said anything. \n\n\"Dr. B, we're not making any accusations,\" we're just being sure that the facts all add up. One last thing, you said that at the time she was in your class you were in a relationship with someone else?\" I thought about it, decided to answer.\n\n\"Yes.\"\n\n\"And could she corroborate that statement?\"\n\n\"That I was in a relationship with her? Yes.\"\n\n\"More that you didn't have a relationship with Miss Simpson at that time.\"\n\n\"Is that a stupid question or what? Of course not! Look, I was married to a woman that was sleeping with her boss for months -- and I had no clue. If I'd been asked to testify whether she was having a relationship with someone at that time -- I'd have said no, and I'd have been dead wrong. The reality is unless you've got something specific, somebody who's accusing me of something, somebody who is complaining about something -- tell me. Otherwise, I'm done. I'm not participating in this witch hunt any longer.\"\n\nI stood up, gave them 10 seconds, and walked for the door. I heard a \"Dr. B\" just as the door was swinging closed, but I just kept walking. \n\nAnd that was the end of it. I never heard another word from anyone. As it turned out, they actually questioned every single professor about the way they created grades and applied them and even came out with supposed guidelines later on in a report. We all knew it was bullshit; it was just a cover for getting rid of a lawsuit that was waiting to happen. The head of the Humanities department was asked to step down at the end of the year. Nobody ever said why, but we all knew. \n\n~\n\n\"Hello?\" I answered before looking at the caller ID on the phone, recognizing the number even as I spoke.\n\n\"Rick? I had to call someone.\"\n\n\"Linda? What's wrong?\" Her voice sounded strange.\n\n\"I got in.\" Like a dummy, I didn't even follow what she was saying.\n\n\"In? Got in where?\"\n\n\"Harvard Medical School! I'm so excited, I had to tell someone!\"\n\n\"Oh my god! Linda, that's fabulous! Congratulations! That's your dream! When did you find out?\"\n\n\"I just did. It was in today's mail. I keep reading it, I just can't believe it.\"\n\n\"Believe it, baby. You deserve it. You've worked hard, stuck to your guns, and big sacrifices warrant big rewards.\"\n\n\"Thanks Rick. I gotta go to work, but I had to tell you. Love ya.\" And she hung up.\n\n\"Love you.\" Two tiny words, we say them to others so often, they flow like water sometimes. But in this case -- it was the first time she'd ever said them to me. I almost forgot about Harvard, having heard those two words. Everything about Linda was running through my mind; meeting her at a strip club, picking her up alongside the highway in the middle of the night, Lori bouncing onto the bed in the morning demanding pancakes -- and now that period in her life was coming to an end, she was going off to Harvard Medical School. \n\nI glanced down at the letter in my hand, wondering as I did just what the prognosis for a non-tenured professor to get a job in Massachusetts was. I hadn't even moved when the phone rang again. \"Rick?\"\n\n\"Hey Linda, what did you forget?\"\n\n\"I know I said I wouldn't see you again for six months -- but tomorrow's my day off and if you're free, would you like to take me to dinner to celebrate?\"\n\nI didn't even need to think about my answer.\n\n~\n\nI think my mouth fell open when Linda opened the door. At the very least, my eyes bugged out. \"Like it?\" She asked, twirling in place for me as I opened the screen door.\n\n\"Like it? Oh My God, Linda -- you're absolutely stunning.\" The dress was obviously new, nothing close to anything I'd ever seen her wear before. It certainly wasn't a dress that had been hanging in her closet weeks before when I'd seen her almost non-existent wardrobe. I'd never seen her look this elegant, this exotically beautiful or sexy before. A solid red equivalent to the proverbial little black dress, it was loosely cut where it draped over her bosom, showing a fair amount of cleavage. With two spaghetti straps the only cloth on her upper chest or arms it was something that would have been seen on a beautiful young A-list actress walking into the Emmy's. When she turned around, the back was even lower than the front, only rising to the middle of her lower back; the two straps over her shoulders crossed and attached at the top of the dress, just below her armpits, so her entire back was naked. Even without makeup the contrast with her raven black hair would have been awesome but, with the perfect amount of color she'd added to her face, she was indeed absolutely stunning. A pair of red strapped high heels accenting her legs completed the chic and sexy ensemble. \n\nI escorted her to the front door at the restaurant; trying to play the perfect gentleman even though she left me feeling completely underdressed and virtually tongue tied. I glanced back at the car when I didn't hear it drive off and found the valet sitting there obviously ogling Linda. \n\nLinda talked throughout dinner. She'd brought the letter to show me, her excitement and pride making her that much more radiantly beautiful to my eyes. I heard again about how much time she'd spent working for a goal, preparing for something that ultimately wasn't her decision. I heard how, now that she'd made it, the pressure she'd put herself under was off and although the semester and her undergraduate career hadn't yet come to an end, at least it was in sight and she knew that with just a few weeks to go she'd have no problem completing her second goal of going through her entire school career with nothing but A's. \"And besides, now that I'm in Harvard -- it really doesn't matter! They've already admitted me even if I didn't get all A's!\" \n\nI sat and listened and let her talk. The bottle of wine had all but disappeared before she looked around and realized how long we'd been there. \"I suppose we should get going?\" She asked, leaning forward and reaching across the table to put her hand on top of mine again. The loose folds of her dress fell forward just a little bit as she did, drawing my eyes for the thousandth time to the curves of her nearly exposed breasts. I forced my eyes up to meet hers, the twinkle in hers saying she knew exactly where I'd been looking, exactly where she'd wanted me to look.\n\n\"I suppose,\" I answered, nodding. \"Are you ready?\" \n\n\"Almost,\" she answered, making no move to sit back or standup. \"Three.\"\n\n\"Three what?\" I asked, not understanding what she was referring to at all.\n\n\"Would I like a nightcap, isn't that what you're supposed to ask? The answer is three, and your place.\"\n\n~\n\n\"Oh my god, you're so beautiful.\" Linda was lying naked on the sheet beside me, the covers kicked to the foot of the bed. I was lying on my side facing her; I slid my hand up her belly to her breast running a finger around her nipple before cupping it with my hand. I watched her eyes watching my hand, before they flicked back to my own face. \"Have I ever told you that?\"\n\n\"What is it about boobs and guys?\" she asked instead of an answer. \"All I have to do is take my top off and you guys all become blithering idiots. Show a man your boobs and they completely forget the rest of the world.\"\n\n\"Um-hm,\" I agreed, my fingers coming to rest with her once again hardening nipple between them. \"You don't seem to mind when I pay attention to them.\"\n\nShe giggled. \"You do have that effect on me,\" she said, stretching her arm out and rolling toward me. I reached down, her arms went around me and our lips met. Her hand reached around behind, sliding to my butt and pulling me against her, even as my hand was still pinched between us, her breast in hand. \n\nOur lovemaking was slower this time, less frantic than the lusty romp that had built from the time we'd walked through the door of the elevator at the restaurant. She'd snuggled against me as the elevator began the 26-floor plunge to the street, my arm going around her back, resting on her shoulder. She'd had her arms clasped to her chest between us; I let my hand drop down her naked back and over the top of her dress to her bottom. I knew most of her underwear were thongs so wasn't surprised to feel nothing beneath the dress but her bottom, but for some reason ran my hand along the dress, across her bum -- realizing as I did that I didn't even find the miniscule cloth of a thong. I felt her looking at me for reaction even as I glanced down, finding her face smiling up at me impishly.\n\n\"It's about time you noticed.\" I didn't answer, just bent my lips to hers. The fingers of my right hand worked the bottom of her dress higher until my hand slid underneath onto her naked bottom; my left-hand moments later joining to two handedly pull her against me as my cock expanded rapidly in my pants. Her bottom would have been uncovered except for my hands; if we'd had anyone else with us she would have been indecently exposed. When the elevator slowed, I removed them, the dress sliding down over her naked bottom as the elevator door slid open to once again make her just the exotic, beautiful, woman in red. \n\nHanding over the valet ticket was almost needless, there weren't but a couple of cars left in the lot that late anyway. The lone driver ran off, and I put my arm around Linda pulling her to me again. I bent my head to hers; her tongue slithered between her lips. \"I want you,\" she whispered. \n\n\"I want you too,\" I whispered back, my lips finding hers, my hand again sliding down over her bottom, this time keeping the dress between my hand and her flesh. It seemed just seconds before the sound of the car, accelerating through the lot and slowing rapidly in front of us, broke up our kiss and fondle.\n\n\"You're a stinker!\" I said once we'd slid into the car. Although I'd noticed the dress was hot and short, for the first time it meant something more -- knowing that there was nothing beneath to protect her modesty. \"What are you trying to do, pull a Brittney Spears?\" \n\n\"What? You don't like me without panties on?\" she grinned.\n\nReaching across the center console, I put my right hand on her leg. \"Just the opposite -- I love you without panties on.\" Rubbing gently, I began inching it upward under the hem; she made no effort to stop me. As I reached the crease of her leg, her legs spread slightly, but my foray was stopped by the tautness of her dress. Pulling my hand back momentarily to drive as I headed up the freeway onramp, I saw her shift upward, pulling the dress from beneath her bottom. She was now sitting bare bottomed on the seat, only the bunched up dress in her lap keeping her from being nude from the waist down. \n\nWhen I slid my hand back to her leg she spread them for me and there was nothing keeping me from finding her wonderland with my fingers. In fact her hand reached up to grasp my arm, keeping me exactly where she wanted me. Her \"ummm\" of pleasure as my fingers began stroking her preceded the increasing wetness as I continued to play between her legs. She made no effort to stop me as we pulled onto the side streets, our twenty-minute freeway drive seemingly over before we started. Traffic on the side streets as we approached the house was non-existent but apparently it didn't matter to her at all. The smell of aroused woman filled the car long before we reached my street, the wetness of her pussy making squishy sounds to my plundering fingers.\n\nPulling into the driveway, when I started to pull my hand away to shift out of gear and turn the car off her hand gripped mine, preventing me from pulling away. \"Almost...\" she said - her first words since we'd left the restaurant. I forced the headlights off with my left hand, continuing to sit there with the engine running in gear, foot on the brake, my right fingers stroking her kitty. Now leaning back in the seat, she'd thrust her pelvis forward to my hand. Her dress had ridden up -- if someone had come by and looked in the window, she'd have been completely exposed -- but she also obviously didn't care. Her body quivered now and again, her hips twisting back and forth, trying to move just that little more so my fingers were in the perfect spot. I heard her sharp little intakes of breath followed by seconds on end of not breathing at all, the wet, squishy sounds of my fingers on her pussy somewhat hidden by the idling engine. I could feel the gradually increasing tension in her body, the gradually increasing force as she raised her pelvis against my hand, but there was nothing gradual about the sudden shuddering and gripping of my hand as she exploded in orgasm. I stilled my fingers, only to have her shudder convulsively once again as I resumed caressing her. \"Stop,\" she commanded half-heartedly. I did, leaving my hand in place cupping her mound, my finger resting against her clit.\n\n\"God that was nice,\" she said as she released my hand and turned slightly to look at me. I purposely pressed my finger harder onto her clit as I withdrew my hand. I reached over and secured the car, the inside lights coming on automatically as I turned the ignition off. Leaning over the console on my right arm, she leaned in toward me and I kissed her, my left hand coming up to caress her cheek. \"Let's go in,\" she said when she pulled away.\n\nI unlocked the front door of the house and pushed it open allowing Linda to enter before me. As I turned to push the door closed and lock it something bulky and soft suddenly hit me in the head - a flash of red falling through my peripheral vision. I unconsciously grabbed at it and closed my hand, realizing as I did that it was Linda's red dress. \n\nTurning in surprise, I found Linda standing totally naked except for her red high heels, an impish grin on her face. Stepping forward she reached for my belt, her mouth hungrily searching for mine. I crushed her naked body to mine at first in a bear hug, rapidly relaxing that as the hug was keeping us from getting my clothes off. Her mouth hungrily sucked mine, slipping away, coming back again as our hands worked together to strip my clothes off. I hooked one shoe with my other toe, slipping first one foot out and then the other, immediately stepping out of my pants that had fallen to my feet as she'd already gotten my belt and pants undone. She reached in to unhook my cock where it had gotten stuck on my underwear and I stepped out of them as they also fell to my ankles. My hands had been roaming her body, cupping her breasts, stroking her ass as we'd worked on undressing me. Now with us both naked, our mouths were once again locked into a kiss, her mouth hungrily sucking my tongue into hers. Her right hand slipped between us to grip my penis, stroking slowly. My hand slipped again to her naked ass, pulling her against me, trapping her arm until she pushed back slightly, pulled away from our kiss but still sucking my tongue until it slipped from between her lips. \"Fuck me right here,\" she said, turning and leaning her back against the door and pulling me toward her by my cock. ",
        "I had to bend my knees and dip down to get the angle, her hand guiding me into place. I straightened my legs and bottomed out in her before I'd totally straightened up. Not hesitating, I continued lifting just those last few inches, totally impaling her on my cock, her legs coming off the floor. Her legs hooked behind mine and I turned to push her against the door. Holding her there with my upper body I rocked myself in and out. Her vagina tightened around me each time I pulled back, its grip loosening each time I pushed forward, her pussy naturally milking my cock. The door creaked with each thrust, an image from the movie \"The Godfather\" flashing through my mind. Her hands were on either side of my neck, holding my face to hers, our mouths frozen together. My tongue was hungrily sucked into her mouth, my cock simultaneously sucked into the fiery warmth of her pussy.\n\nDespite the unusual and unexpectedness of it all, the standing position wasn't doing it for me. I locked my arms around her waist, holding her on me as I turned and stumbled my way to the living room sofa. Dropping her down onto her back I grabbed her legs and bent her over, slipping them over my shoulders and practically bending her in two, as I pressed down onto her. Her hands alternately caressed my pecs, her fingers finding and flicking my nipples, and then slid behind to grab my naked ass and pull me yet harder into her. \"Oh my god, Rick, I've missed you so much, I need you so much,\" she moaned as I pistoned my cock into her.\n\n\"Oh Fuck Linda -- you're so fucking hot. I want to fuck you forever. I want to make you cum. Cum for me baby! Cum on my cock!\" I didn't even realize what I was saying, how frantic I was becoming. I hadn't had sex with anyone in weeks, and the last person I'd had sex with was currently impaled on my member once again.\n\nPushing her legs off my shoulders I bent down to her, my mouth hungrily latching onto hers, for the moment content to be bottomed out in her liquid warmth. Flexing my cock inside her, she moaned into my mouth, her vagina squeezing my cock in response. Bending my legs and leaning backward, it took all I had to pull her upward off the couch, her legs wrapped around mine once again as I rose. Changing my grip to under her arms, I lifted her higher still, sliding her up my cock, and then down, fucking her in a standing position, unaided by the wall. \"Oh Baby,\" she moaned, her arms coming forward around my neck. Three times I lifted and slid her back down, rested a moment then one more time before I turned and stumbled across the room and down the hall. \n\nI slowed at the doorway, Linda's hand reached over and found the light switch, before I stumbled forward once more -- depositing her, still impaled on my cock, onto the bed. I grunted, slowly slipping down and out as I moved my mouth to her breasts, suckling and kissing her nipples as my hands slipped again to her naked bottom. I relinquished her nipples, my mouth continuing southward as I gradually dropped to my knees. At last my tongue and lips found her hot silkiness, my tongue slipping between her lips, tasting her juices, pressing it as deeply inside her as I could before I rose back that little bit to suck and tongue her clit. I felt her body pressing upward to my tongue just as it had to my fingers in the car earlier. Responding to her non-verbal request, I continued right where I was, keeping my tongue against her clit until her body throbbed once more in an involuntary convulsion, another orgasm washing across her. Her hands came and gripped my head, holding me in place for many seconds until she gasped and pushed me away. \n\nGripping one of her legs, I stepped back and lifted. \"On your knees,\" I commanded. She rolled over as I'd said, pulling her knees underneath, dropping her chest and arms to the bed, presenting her naked bottom to me. Her vagina gaped open, a hot pink hole begging to be plugged. Her lips were swollen from what they'd been earlier, her ass crack glistening with her juices. I slid forward, my cock and her pussy perfectly aligned, and this time I realized this was the position I'd been looking for. The tension perfect, the angle perfect, the liquid warmth of her vagina perfect, I knew it was just moments before I too, came.\n\nAt first, I was holding her hips with both hands, pulling her bottom back against me as I plunged into her depths. My eyes devoured her perfect ass, the cheeks that I'd admired so often in jeans that I'd slipped my hands under her dress earlier to fondle. I let go with my left hand to run it across her bottom. My finger found the juices that had run down (or was it up?) her ass crack. I traced it from her lower back down towards her pussy until I found her asshole. Instantly her ass cheeks clinched around my finger, simultaneously her pussy clinched around my cock. Holding her hip with one hand, I plunged again and again into her fiery depth. \"Umm,\" I unconsciously hummed, my finger continuing to press against her rose bud, her cheeks continuing to clinch my finger, her pussy clinching against my cock in response. Already on the verge, the added contractions of her body sent me over the edge, my cock exploding several weeks of cum inside her.\n\nThe first jet was the biggest, a second just as strong followed by two slightly smaller. I don't know why, but it was as the third spasm became the fourth that for some reason it dawned on me that for the first time, we hadn't used a condom. Suddenly panicked but unable to control myself, I involuntarily pushed in one more time even as my mind told me to pull out. Finally able to withdraw, my cock slid forward and upward between her clinched ass cheeks, two more small spasms dribbling the last of my orgasm onto her ass and my hand.\n\n\"Oh shit, Linda, we forgot a condom,\" I spouted, aghast at my mistake, panting and weak kneed from the exertion. Withdrawing my finger from between her ass cheeks, I recognized that they didn't immediately relax, nor did she answer. Slowly her body slumped, her hand rising off the bed to rest on my hand, and I realized that her clinching pussy and ass had been from yet another orgasm. She collapsed forward; I followed, sliding in beside her. \"Oh my god, I'm so sorry.\"\n\n\"It's ok, baby,' she managed to say through her panting, her hand patting mine. \"It's ok. I'm on the pill.\"\n\n\"But you were before, and you ended up with Lori.\"\n\n\"I know; but I've changed prescriptions, it shouldn't happen again.\"\n\n\"You're sure?\" I questioned, not completely certain about her assuredness.\n\n\"I'm sure. And besides -- I didn't forget, I just chose not to.\"\n\nWe'd lain together for half an hour or more, slowly recovering and gently stroking each other before we'd resumed our lovemaking in a more leisurely fashion. Unlike those frenzied activities that had partially sated us earlier, now our caresses were slow and deliberate. Eventually pushing me onto my back she straddled me and with a little helping hand our bodies aligned, my hardness filling her, her warmth enveloping me. General caresses became more and more specific until with a little gasp and collapse onto my chest from her and a grunt where I'd tried to lift my hips, forcing myself deeper into her, we'd both finished again. \n\nLinda was laying sideways, my arm under her head, her upper hand gently stroking through the hair on my chest. \"Whatcha thinking?' she asked, her hand stopping momentarily on my chest. \n\n\"About you. You've changed,\" I said simply.\n\n\"How so?\"\n\n\"Back when we first met -- you were telling me how you'd gone in and vomited every time before you went to work. Tonight you went out in public naked beneath your dress, a walking wet dream, begging every male within a hundred miles to look at the most beautiful, most sexy woman on the planet.\" I had my hand slowly stroking down her arm to her bottom and back. \"And then you practically begged me to get you off on the way home, not even letting me shut the car off until you did. And then when we got inside, you didn't even let me get the door closed before you were totally naked.\" I paused, almost forgot where I was going before remembering. \"Oh -- and no condom.\"\n\n\"Are you complaining?\" she whispered without lifting her head from my shoulder.\n\n\"Oh God no, baby. I liked it all. The sexy red dress, the sexy woman wearing it... fingering you as we drove... I'm just wondering what happened to that slightly more conservative girl that sent \"Brook\" to work in her place.\" She didn't say anything when I finished, we just lay there for a few moments.\n\n\"Maybe I've grown up a little. I learned a few things from Brook over the last couple of years. She doesn't always have to go to work for me anymore.\"\n\n\"How's that?\"\n\n\"I don't know when I realized it, but at times I really enjoyed the power of turning men on, that it was fun to be the object of their fantasies, to make their mouths hang open, to make their cocks hard and there isn't a damn thing they can do about it. I found myself occasionally thinking as \"Linda\" when I was showing off instead of \"Brook,\" and one night I just decided go to work as Linda and found out I didn't mind anymore. It turned me on more than I could have imagined, but I really wanted it to be you that I was turning on.\"\n\n\"Well you certainly did that tonight.\"\n\n\"Umm, I'm glad.\"\n\n\"When did you get the dress -- it's new? You looked absolutely fabulous.\"\n\nShe giggled slightly, her face turning up to look at mine. \"After my car broke down and you took me to that restaurant, about a week after that. I had it in my mind that when the day came that you took me there again that I was going to wear something that would make you insane for me.\"\n\n\"I was already insane for you. I'm glad you didn't have that last time though.\"\n\n\"Why not?\" \n\nFor the first time I told her about the inquisition, about James Patterson having seen us at Le Fontainebleau, about blowing up at the inquisitors and telling them to go fuck themselves. She wanted to know why I'd never said anything. \"Said anything to whom?\" I questioned in return, \"The woman that I'm supposedly not having an affair with and not seeing?\" She didn't say anything; we just lay there for a few moments.\n\n\"What about no condom? When did you go on the pill, or should I say, when did you get your prescription changed?\"\n\n\"Three years ago.\"\n\n\"What? Three years? You mean... we could have had sex without condoms anytime and you were safe?\"\n\n\"Yes.\"\n\n\"But you didn't... I mean I thought you weren't -- I mean...\" I wasn't sure what I meant. \"Why now?\"\n\n\"After Lori was born and dickwad ran away, I just told myself I'd never take any chance with someone again unless I knew that I loved him.\"\n\nIt took a second for what she'd said to register, but when it did, I rolled to her, putting my other arm over her, enveloping her in a bear hug. I held her like that, tight to my chest for several minutes, before I relaxed a bit, allowing her to look up into my face once again. Reaching up with my upper hand, I caressed her cheek as I said \"Those are the most beautiful words I've ever heard, because I've known for some time now that I love you. I'm not sure which was worse, having you in my class where I could see you and not being able to hold you and kiss you and make love to you, or not having you in my class and not seeing you at all. It doesn't matter now, this is almost over, but I want it to stop now. I don't want you to go home. I want you to stay with me. I want you to let your apartment go, to save that extra money for school and you and Lori to move in with me. I need you Linda. I love you and I want you here with me.\"\n\nI'd been thinking about this for quite some time. I knew all her arguments; school, work, secrecy, the need to not broadcast our relationship to the rest of the school. I was prepared to argue this time, to point out that everything she was saying was now irrelevant with that piece of paper that she'd received from Harvard and the piece of paper that I'd presented to the dean the week after my inquisition. Despite my preparation to argue her down, I wasn't prepared for her answer.\n\n\"Ok.\"\n\n~\n\nIt was hours before we actually went to sleep. Unbeknownst to me, she'd made arrangements not just for evening babysitting, but for Lori to spend the night at the babysitters. We lay and talked and made love and talked some more -- filling each other in on everything that had happened that the other didn't know about. When I woke and found that I was supposed to be in class in an hour -- I called in sick and cancelled my classes for the day -- the first day of work I'd missed in the four and a half years that I'd been teaching. \n\n\"What's she like?\" Linda questioned when I told her that just as she'd predicted, Mary Richards and I had hooked up after Linda had broken it off with me. I told her everything; how we'd gotten together, when, where, how often. I told her how Mary was pretty adventurous when it came to sex, but wasn't interested in a live in lover or marriage -- she liked her independence, just occasionally needed someone to fulfill her carnal urges. When she said she wanted details -- I told her. What position she liked best, where her erogenous zones were, what turned her on. I told her how she'd told me all about her threesome with the Swede's the previous summer, and that she said that when I left perhaps she'd try women for a while.\n\n\"She's bi-sexual?\"\n\n\"I guess that's what that means. At least she said she'd liked it.\"\n\n\"What about you, have you ever done that?\"\n\n\"Me? With a man? Heavens no. Doesn't appeal to me at all. I like women.\" \n\n\"I was talking about a threesome, have you ever done that?\"\n\n\"No. I've fantasized about it, I think every man does, but it's never happened. Have you?\"\n\nWhy is it that not saying anything sometimes tells us more than words? As soon as she hesitated, my mind began flying through the possibilities. I couldn't remember her having said anything before about a threesome, which meant that in the last few weeks she must have. Probably she met someone; went home with him and he had a roommate -- or perhaps they were together when she met them and...\n\n\"Almost,\" she interrupted my thoughts.\n\n\"Almost?\" I repeated. \"How do you almost have a threesome?\" I didn't want to admit it, but I felt jealous pangs. Even though we weren't together, the thought of her fucking someone else, actually two someone else's, almost got to me. I kicked myself -- how was her dating and having sex with someone when we weren't together any different than Mary and I jumping each other's bones? \n\n\"Who was it?\" I asked, \"Would I know him?\"\n\nShe didn't answer, instead asked, \"Have you ever done anal?\"\n\n\"Anal sex?\" I asked, not really clarifying as much as giving myself time to think. My mind immediately remembered our earlier session when we'd come home and I'd fingered her ass and the way her body had responded. \n\n\"No. Have you?\"\n\n\"Yeah, maybe.\" \n\nI wasn't sure what the problem was; how she could \"maybe\" have anal sex, how she could \"almost\" have a threesome -- but she obviously was having trouble talking about it. I waited, and then asked, \"Want to tell me about it?\"\n\n\"Did I ever tell you about Marisa? At the club? Red head with a devil's head tattoo on the side of her boob?\"\n\n\"No, doesn't sound familiar.\"\n\n\"Hmmm. Yeah, probably not. She just started a few months back.\" She'd told me about some of her co-workers back when we'd been going together, but that had been the previous year so anyone new, I wouldn't even know about. \"She's been hitting on me ever since she started work there.\"\n\nFor the first time the realization hit me that it was possible for Linda to have had a threesome that didn't involve two guys. It could have been a couple -- or perhaps two women -- and then it dawned on me that it could have been even more...\n\n\"Marisa's about 30 and has a higher sex drive than any man I've ever known.\" She just started talking, slowly -- in no rush, almost thinking out loud. \"The first time I ever saw her she made a comment about taking me home with her, that I was pretty enough to eat. I just laughed at her and told her I wasn't into women. She said that if I'd just give her a try, I'd never go back. For the past few months, every time I saw her in the back room, or we'd get a time to talk, she'd always let me know all I had to do was say the word. And it's not just that she's into women, she has two boyfriends that she lives with.\n\nI swear her life revolves around sex. She's always telling us how she needs two guys to keep her satisfied, how one wears out too fast, and how they can keep her going all night long, how she'll wear one out and take on the other while the first one recovers, and how sometimes she takes on both at the same time. She says that she absolutely loves anal sex, and a DP is even better. She says she's occasionally brought home another woman for the three of them to share, but mostly when she's with a woman she just likes to have her to herself.\" Linda was lying on her side snuggled against me as she talked but wasn't looking me in the face. Her head was resting on my arm, her free hand resting on my chest occasionally playing with my chest hair. \n\n\"Occasionally at the club some big spender will come in and want to be entertained by two girls at once. About three weeks ago Marisa and I had the late afternoon shift; we were supposed to be off at 8. She came up to me and said that she had a big fish in the private rooms that wanted the two of us to entertain him for an hour. She said when she'd told him it was $500, $250 for an hour for each of us; he pulled out a wad of cash and counted out a thousand more for a tip.\n\nI asked her what it was that he wanted us to do, that for that kind of money he could get Casey to do him, but she said he wasn't interested in doing anything with us; he just wanted to watch us. I wasn't sure about it, but eventually I went with her.\n\nAt first, we just did our dance routines just at the same time. He was good, he never took his hands off his lap, just took turns watching us. After the first three songs when we'd gotten naked, then he began to ask to see certain things. He wanted me to grab Marisa's ass, or her to grab mine. He wanted to see us feel each other up, and then he wanted to see us kiss. We did, but it was all just a show. He kept having us do more and more explicit things, but when he asked us to finger each other I told him we weren't allowed to. Marisa was behind me at the time and whispered into my ear \"spoilsport -- I was looking forward to that.\" Anyway, Marisa was behind me, rubbing her hands and body all over me. We spun around so we were face to face and we were doing it more; rubbing our bodies together, rubbing our hands over each other. Marisa had been nuzzling my neck like a lover and had moved down my chest when she suddenly bent over and sucked my nipple into her mouth.\n\nI hadn't realized until then how turned on I'd gotten, how Marisa had managed to actually get me all hot and bothered, but she had. I don't know how but I suddenly realized that she'd raised back up and this time when she kissed me, I kissed her back. I don't know how long we were making out in front of him, but her hands were all over me and she was fingering me, and I suddenly realized that mine were all over her too. The guy wasn't even telling us what to do anymore -- just watching. At one point Marisa whispered into my ear,  \"you are coming home with me tonight,\"  so that just I could hear.\" \n\nI couldn't tell if Linda was just thinking when she quit talking, whether the tale was done or what. I waited about 15 seconds before I asked, \"So what happened, did you go home with her?\"\n\nHer head began nodding silently on my shoulder. \"Yeah, I went home with her.\" Just the one phrase; and then quiet again for another half minute before she picked up the confession again. \"I'd never been with a woman before, but she knew exactly what to do. She had me on fire even before we got our clothes off. It wasn't like you, you touch me different, but she just didn't miss. Everywhere she touched was exactly right, like she was in my mind. We ended up like at the club, she was nuzzling my neck and we were kissing and she sucked on my nipples and... then she went down on me.\" This time when she paused, I just waited. Her hand had been on my stomach and chest as she was talking, but now reached down to my cock which was again rock hard. She didn't stroke me, just held me in her hand. \"And I did it to her, too.\" ",
        "\"After I came, she came up again and kissed me and I could taste me just like when you've gone down on me. I kissed her back and started doing it to her just like she'd done to me. Afterward she got out a little toy and began to tease me with it -- using it around my clit, and then sliding it inside while she used her tongue on me. I was close to coming again when she pulled it out, slid it down to my ass and pressed it against my asshole.\n\nI'd never done anything like that before, had no idea I could be sensitive back there, but the vibrations, her tongue against my clit and her fingers inside me and I think I screamed when I came. I don't remember, I just remember it going on and on and on.... Afterward I told her I'd never had that done before, and she looked surprised and said, \"you've never had anal sex?\" When I told her no, she said \"My God girl -- you don't know what you're missing. There are times I would rather have anal -- the orgasms are just so different, and so strong. Can you imagine having an orgasm like you just had with a cock up your ass instead of a vibrator?\" I told her I couldn't imagine it. She laughed and said a fun thing to do is a 'stack', but I told her I didn't know what a stack was. She said that her boys kept her satisfied, but they were bi, so they also did each other. Occasionally when they're having anal sex, while the one is fucking her butt, the other guy will fuck the first one at the same time so he's both giving and receiving -- they're 'stacked' together.\" \n\n\"That was it?\" I asked when her pause made me think nothing else was coming. \"Did you spend the night or what?\"\"\n\n\"No, I had to go home to get Lori, but after we'd recovered a bit, she started kissing me again, and this time rolled over so we could get into a 69. This time she started touching me with her finger, only she was working it against me to put it in me. I was just about to cum when I felt the bed move and heard a man's voice say, \"Did Marisa bring us a playmate?\" \n\nI really hadn't thought about it beforehand, I guess I just never thought that her boyfriends were going to show up like that. When I looked over, they were already naked and climbing onto the bed. Marisa pulled away and said, \"This is Brook, it's up to her, but she's sort of hung up on a guy at the moment.\" And that was all it took -- I realized that I didn't want to be there with them, with any of them. I said I needed to go, that I had to go get Lori from the sitter. Marisa just rolled over and kissed one of them and then the other and grabbed their cocks and said, 'suit yourself, you're welcome to stay and play.'\" \n\nLinda turned her head and looked at me, but she was too close. I pulled away a little so I could see her. She still had hold of my cock, physical evidence that her little story of an almost threesome, almost anal fucking, and her first lesbian experience had undoubtedly proven arousing to me. \"And that was it? I see how you can say you almost had a threesome because the guys showed up, but how do you say \"maybe\" to anal sex?\"\n\n\"All she did was touch me there, just like you did. She never really penetrated, so I've never really had anything back there.\" \n\nI just nodded, thinking about what she'd told me. On the one hand, it didn't bother me in the least that she'd played with Marisa, but on the other hand, I was so glad that she'd left before she got into it with the two guys, and so glad that the perv at the club hadn't tried anything. \"Are you upset?\" she asked.\n\n\"Me?\" I looked back at her again. \"No. No reason to be. I guess it's no different than me hooking up with Mary, and I'm glad it was Marisa, rather than just \"some guy' who I'd have to be jealous of.\" \n\nShe was quiet for a few moments, finally asking \"Are you still seeing Mary?\" I could sense the angst in her voice; similar to the night so many months before when she'd asked me if I'd told my fellow bachelor partyers that I knew that \"Brook\" was really Linda Simpson and a student of mine.\n\n\"No. We saw each other for a while, but I broke it off.\"\n\n\"You did? Why?\"\n\nIt was an easy answer. \"Because it was just sex, there's never been anything between us except physical gratification -- and I don't need that any more. I realized that the only thing I wanted, the only thing I needed, was you.\" \n\nLinda was quiet for a moment, I felt something warm and wet on my arm. Reaching over, I tilted her head up toward me. Tears were streaming out of her eyes. \"What's wrong?\" I asked, bending to pull her to me, \"why are you crying?\" She rose to meet me, a hot, warm and slobbery kiss meeting me in return. \n\n\"That's why I called, that's why I'm here. I realized I don't want to live alone anymore; I don't want to live without you anymore. I love you.\" \n\nMake up sex, even when you haven't been fighting, is the best.\n\n~\n\nIt was early afternoon when we finally got dressed and went to get Lori. We swung by their apartment and just grabbed a bunch of their stuff. Linda's computer, a bunch of clothes for both of them was all we got to start, but over the next couple of days every time she or I went by we stopped in and brought out another bunch of their things. Inside of a week, we'd virtually moved them out, one box at a time.\n\nLori took to living in a house without hesitation. She loved having her own room, and although for the most part took to sleeping alone quite well, there were a couple of times I woke to find Linda cuddled with a little girl on the far side of the bed. It was a bit strange at first, having a naked little girl running around the house, particularly in that since she'd been living in a single bedroom, single bath, apartment with her mother for three years she thought nothing about nudity or modesty, either her own or Linda's or mine. It was bound to happen sooner or later, and as Linda had said, \"she doesn't know any different until we teach her.\" She came bounding into the bathroom as I was getting out of the shower, coming face to face with my naked and thankfully flaccid self. Apparently, it wasn't the traumatic experience I thought it might be; she just glanced at me and said whatever it was she'd come to say and pranced back out. \n\nIt was perhaps a week later that it happened again. I don't know when I came awake, or when I became aware that something was different. It had been a warm night, and although Linda had the sheet over her, I was on top of everything, naked as always, sleeping on my back. It was just past dawn, the soft glow of the indirect morning light filling the room. I gradually became aware of something to my side and looking over found Lori standing there looking at me. It was a morning after Linda had worked, so she'd awakened me to make love when she'd come home. My normal morning hard-on had been taken care of hours earlier so at least she wasn't seeing me erect. \n\n\"Billy's got a penis but it's not that big,\" Lori stated when she saw me look over and realize she was there. I tried not to react in shock, just reached over and pulled the sheet over me. Without asking, Lori climbed onto the bed, over me, and between her mother and me. I realized that I'd probably gotten it right, I hadn't made a big deal about it and the fact that I was physically different than her or her mother was of no more importance than it was with Billy, whoever Billy was.\n\nLinda had been on her side facing away from me but awoke to Lori's touch and turned. \"Hello, Baby,\" she said, cuddling her girl to her.\n\n\"Can I sleep with you and Rick?\" \n\n\"It's almost time to get up,\" Linda answered, but I couldn't help but smile. For the first time, Lori had not just asked to sleep with her mother -- but with her mother and me.\n\n~ \n\n\"Ladies and Gentlemen,\" the announcer began, pausing for the crowd to become silent. \"Ladies and Gentlemen, it's always a great achievement when someone has managed to reach the end of their stay at a University and obtain nothing but top grades. It's a sign that they have excelled in every class, every varied field that they've been asked to study. It's a sign that they are capable of looking at the world in a large and varied sense. Presenting today, for our class valedictorian and student of the year, by his own request, is Dr. B.\"\n\nI stepped up to the podium, glanced around and began. \"Every semester, there are a few students that come through our classes, come through our school, that are above average. They excel in every facet of their education. They stand above their fellow students academically in a way that is obvious to all that teach and generally to their fellow students. And then, occasionally, we find a student that comes through the classes that is as far above those few superior students as the superior students are above the average student. We have one of those exceptional persons with us graduating here today. \n\nI met this individual nearly two years ago when she quietly entered my class, took the second seat back against the wall on the right side of the classroom. She then proceeded through the next two semesters to answer any question posed; to attempt to reason out and use her intellect to extrapolate with the tools that she'd learned to take the next step forward on her own, to use those tools to solve increasingly harder problems. I had an occasion to examine her scholastic record, and found other professors recording the exact sentiments that I myself was having. \"Hard Worker!\" \"Outstanding Worker!\" \"My Top Achiever!\" were accolades that were already recorded in her record before I saw it; and I've added a few such comments of my own.\"\n\n\"This young lady took on the rigors of a higher education, not only for herself, but for her young daughter. A single mother, this young woman not only took on school, she did it without scholarships, without student loans, without financial aid or money from her family. She worked full time and earned every penny to support herself and her young daughter while getting the very top grades in the entire university. She professed to me that she would graduate Magna Cum Laude, and with a little luck, Summa Cum Laude. I can stand here today and tell you that luck had nothing to do with it. It was with pure, hard work and perseverance that allows her today, as she graduates, to have the notation \"Summa Cum Laude\" on her degree signifying that she had nothing but the very highest grades achievable. We honor this year's Student of the Year and Valedictorian, with the first of several awards she is receiving. Linda Eleanor Simpson, please step forward.\"\n\nSeated in the front row; she rose and walked to the stairs and across the stage toward me. I first read the list of awards that she was receiving, ending by reading the plaque declaring her \"Student of the Year\" and handed it to her. \"This isn't the end of schooling for Linda; it's just the beginning. Along with professing that she wanted to graduate Summa Cum Laude, she told me her goal was to attend a top medical school, so it is with great pleasure that we now officially announce that Miss Simpson has been accepted to Harvard Medical School to begin in the fall.\" I handed her the letter, obviously no surprise to her, and shook her hand. \"Congratulations.\" She shook my hand and began to walk off. \"One moment, Linda, I've got one more award for you.\" I caught the movement out of the corner of my eye as the rest of the faculty on stage glanced at each other, wondering what they'd missed.\n\n\"Before I do that however, while I've got the stage, I'd like to announce that I have resigned my position at the university. I'd like to bid a fond farewell to those students that have come through my classes, those professors that have grown into more than just co-workers, to all that have become friends over the last few years. I'm moving on, it was time, and hopefully I'll be pursuing opportunities in another state. That said, there is one last presentation for Miss Simpson.\" I nodded to Mary Richards in the back row of faculty who released Lori and gave her the ok to come forward. \n\nHearing the approaching footsteps, Linda turned, and upon seeing her daughter, turned back to me.  \"What's going on?\"  she whispered. I didn't answer, instead bending down and taking the envelope from Lori's hand. I made a show of running a finger under the flap to peel open the envelope, keeping its contents hidden for the moment. \"Thank you. Ladies and Gentlemen, this is Linda's 5-year-old daughter Lori who has just delivered the final presentation.\" Linda looked sideways to Lori and reached for her hand. \"Unlike any of the academic achievement awards which go with you forever, this you can choose to turn down, although I hope you won't.\" Dropping to one knee I said, \"Linda Simpson, will you allow me to become Lori's Daddy and allow me to become your husband? Linda, will you marry me?\"\n\nThe last time I got a hot, warm, slobbery kiss like that we weren't nearly as well dressed, and we didn't have a stadium full of graduates standing and applauding. I don't know, she never really said, but I think the answer was yes."
    ],
    "authorname": "BenLong",
    "tags": [
        "student",
        "anal",
        "teacher",
        "pantiless",
        "threesome",
        "lesbian"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-student-ch-03-1"
}