{
    "title": "Fantasy, Loss, and Summer Love",
    "pages": [
        "Special thanks to Ada Stuart for the generous commitment of her time as a beta reader and commenter.\n\nThis is my submission to Summer Lovin' 2021.\n\nSummer Fantasy, Springtime Loss, Summer Love\n\nMy last exam was Friday morning. Dorm rooms had to be vacated by noon Sunday. My parents were away, so my best friend through twelve years of public school, Jerry, came to pick me up Saturday morning. He said he'd be there early, which I was sure meant noon. I was surprised when he knocked on my dorm room door at seven.\n\nThe first words out of his mouth were entirely predictable. 'Party time this summer!' he said, wearing a big grin.\n\n'No way, pal. I'm working this summer.'\n\n'What? I just drove almost two hours to pick you up and you're telling me no parties this summer?' he complained.\n\n'I'm at Forrester Country Club again. Nothing but long, hot days for me. I'll be too tired to party.'\n\n'You're telling me you're home alone with the house to yourself? No parents. And no parties? C'mon, give me a break!'\n\nI changed the subject to his summer job. It didn't pay much but it had its rewards. 'What're you doing this summer, Jerry?'\n\n'Lifeguard for the Parks Department again at the town beach. Watching from a tower seat for swimmers in trouble. Scoping out the babes in skimpy swimwear when I can get away with it,' he laughed.\n\n'You know they're mostly the younger high school girls and mothers, right?' I asked, slightly amazed he'd even say that.\n\n'I didn't say I was going to hit on them. Rebecca would cut my nuts off,' he laughed. 'Doesn't mean looking isn't fun. Some of those young mothers are hot!'\n\nThat was typical of Jerry. He could be a bit of a jerk, sometimes. He liked to paint himself as a bad boy. He'd never do any of the things he joked about. He was really a good guy with a big heart. Plus, his girlfriend Rebecca was the catch of a lifetime. He knew it and would never do anything to screw that up. She was whip-smart, gorgeous, low-maintenance, and as easy to get along with as any guy could wish. Which is not to say she was a pushover. She could stand up for herself and kept Jerry in line without being a shrew. She didn't play head games or try to manipulate anyone. She was a world-class sweetheart. I knew of no one that didn't like her. I was a little jealous of my friend's luck in finding her.\n\nWe pulled into the driveway at my home a little after ten. Our neighbor, Mrs. Heywood, was painting her front door. She took a moment to wave at me then went right back to painting. Jerry and I unloaded my junk, stashing everything but my clothes and my books in the garage next to my Chevy pickup, where it would remain until late August. Jerry hung out for a few minutes but had to head out. He wasn't one to keep Rebecca waiting. \n\nMy folks had been gone a few months already while my father oversaw a project in Georgia. My first order of business was groceries. Mom left some money hidden so I could restock the fridge. Once I got my first paycheck, I was on my own keeping myself fed. I went for groceries only a few minutes after Jerry.\n\nI'd just finished putting away my food when the front doorbell did it's Big Ben thing. I had no idea who it might be. Only Jerry knew I was home. I hadn't touched base with anyone else yet. Some friends probably weren't home from school yet and I knew some wouldn't be home at all this summer. Mrs. Heywood was on the doorstep when I opened the door. Still wearing a nearly threadbare old tee shirt and jeans, both stained with several colors of paint.\n\n'Hi, Mrs. Heywood. C'mon in.' I closed the door behind her and asked, 'Everything okay? You need help with something?'\n\n'Everything's fine, Keith. I saw you carry in groceries so I guess you can feed yourself tonight. Care to have dinner at my house? I've got some ribs I can throw on the grill and I'll make a salad. That is if you don't already have plans.'\n\n'That would be great, Mrs. Heywood. I have no plans tonight. It'll be nice to eat something besides school cafeteria food! Can I bring anything?'\n\n'I'd tell you to bring a bottle of wine, but I know you're not twenty-one yet,' she laughed. 'So just you. It will be nice to have company.'\n\n'I can bring some wine. I'll grab a bottle from my father's stash in the cellar. I'll tell him I took a bottle and why. He won't mind.'\n\n'A bottle of wine it is, then. Come hungry. Six, okay?'\n\n'I'll be there. I promise to bring my appetite.'\n\n'Good. I've got a big rack of ribs.'\n\nI opened the door for Mrs. Heywood and briefly watched her head down the path to the driveway. I knew her dinner invitation was just an invitation to dinner. An offer of a nice home-cooked meal on my first night home from school. Just like my mother might have prepared. But Mrs. Heywood wasn't my mother.\n\nCelia Heywood was a very young widow that moved in next door near the end of the summer before my senior year in high school. She was a new math teacher at the Catholic high school in town. She lost her husband only a few months of getting married. \n\nMrs. Heywood was a stunner. A little taller than average at about five-six or five-seven, she had wavy, shoulder-length dirty blonde hair, eyes the color of the Adriatic Sea that I'd seen in Italy with my Italian teacher and some other Italian-language students right after school got out that summer, and flawless skin that had a slightly golden undertone. I spent more than a few nights dreaming about her during senior year. Fantasies of her fueled many a late-night self-indulgence.\n\nAs I watched her walk down the path, those fantasies briefly returned. But I was wise enough to know fantasies they would remain. She was nowhere near old enough for anyone to associate the word widow with her. But Mrs. Heywood was too old to be interested in me, a mere college student. She was just being kind to her neighbors' son while his parents were away. Dinner with her tonight meant a nice meal and conversation with an adult.\n\nThough I knew this was just dinner, I still spent the afternoon anxious about spending the evening with the pretty woman that lived next door. Admittedly, I relieved some of that anxiety in the shower before I went to Mrs. Heywood's house. I arrived promptly at six, with a decent bottle of red from my father's little wine cellar and a bouquet culled from flower beds my mother maintained for decorating the house or when she needed a hostess gift. \n\nMrs. Heywood had been to our house for cookouts and had returned the favor, but I'd never been inside her house. She didn't have a doorbell and the door knocker still hadn't been reinstalled. I could tell the paint wasn't quite dry. The door was slightly ajar. I pushed on the doorknob, still masked with tape, to open the door a bit more and peered inside.\n\n'Mrs. Heywood? It's Keith,' I called out.\n\nShe didn't answer but I heard footsteps coming my way. She came around the corner wiping her hands on a kitchen towel and licking her lips. 'Hi, Keith. You caught me right in the middle of taste-testing my homemade barbecue sauce. It's almost time to paint the ribs.' Her smile grew much wider when I proffered the flowers. \n\n'I brought these for you. Thought you might like some flowers for the table.'\n\n'Thank you, Keith! These are absolutely gorgeous! I hope you're not going to get in trouble for raiding your mother's flower garden.'\n\n'Mom has flower beds just for making bouquets. She'd kill me if she knew I didn't bring flowers.'\n\nI barely had time to take in her appearance before she gave me a half-hug and pushed the front door closed. But I got to look at her as I followed her through the house to the kitchen. She wore a pair of jeans that fit her waist closely and accentuated a perfectly shaped butt. The legs weren't tight but were tapered in way that fit her casual look perfectly. Her top was a pale yellow, sleeveless, loose-fitting, spring-weight fabric that hinted at the assets inside. As she walked, the motion of her arms betrayed she wore a bra. She wore a simple flat sandal on her feet. The outfit was modest but still alluring. I'd seen my mother in similar outfits. Mom kept herself in shape and was attractive enough that I'd never seen my father openly admire another woman's appearance. Except maybe to compliment the wives of their friends. But Mom in her prime never looked as good as Mrs. Heywood.\n\nWhen we got to the kitchen, a salad was already made and sitting on the island. A loaf of crusty Italian bread and a bottle of olive oil also awaited the start of dinner. The smell of ribs on the grill wafted through the open deck doors.\n\nAfter finding a vase for the flowers, Mrs. Heywood said, 'I can offer soda and iced tea. But I imagine you'd prefer a beer. You can have one, but only if you promise you're not driving anywhere tonight. Especially if you're having wine with dinner.'\n\n'I promise I'm going nowhere until tomorrow morning when I have to go to Forrester Country Club. I have to check in with the head greenskeeper to find out when he wants me to start work. I'm hoping Monday morning.'\n\nMrs. Heywood opened her fridge and took out a beer. She smiled again when she handed it to me. 'I trust you won't tell your mother I'm corrupting her only child.'\n\n'Mom's not naive. She went to college.'\n\n'Come out to the deck with me. It's time to slather the ribs.' Mrs. Heywood picked up a glass of wine, a bowl of barbecue sauce, and a long basting brush. 'Get the door for me, Keith?'\n\nThe night went just as I expected. We had dinner on the deck. Talked about our respective college experiences. She offered a little consolation and clich\u00e9 advice when she learned my girlfriend had dumped me a couple months earlier. Plenty of fish in the sea. You're a good-looking young man, someone will come along. The usual cold comfort. I helped clean up after dinner. She was surprised I insisted on washing. \n\nWe talked for a little while on her deck after finishing the dishes. Being early May, it began to get cool once the sun set. When it was cool enough for a jacket or sweater, Mrs. Heywood decided it was time to call it a night. I got a neighborly hug when she said 'Goodnight.'\n\n'Good night, Mrs. Heywood,' I turned and started for the deck steps to cut across the back yard.\n\nJust before Mrs. Heywood closed the door, she called out to me. 'Keith!' I stopped and turned toward her. 'Stop calling me Mrs. Heywood. I'm not that much older than you. I could be your big sister. From now on, call me Celia.'\n\nI thought about that for a second before responding. My parents would chastise me for being disrespectful if they heard it without knowing she'd told me to call her by her first name. But they wouldn't be home for the summer. 'Okay, Mrs. . ., okay, Celia.' Old habits are hard to break.\n\nCelia grinned and waved. 'That's better,' she said with a smile as she closed the sliding door.\n\nThe next few weeks fell into a routine but with one unexpected change. The summer crew foreman the last two summers left for a permanent job after graduating from college. I was promoted to crew foreman with responsibility for ten other college students, including a rookie girl just out of high school. It came with a nice raise that meant I wouldn't have to be as frugal as usual during the school year. \n\nI was up at four-thirty every morning. At the country club by five-thirty. I spent the days planning schedules, mowing greens and fairways, keeping the rough from getting overgrown, and overseeing other college students doing the same, or other work across thirty-six holes. When the course saw heavy play we did maintenance on buildings, power equipment, or made repairs to the irrigation system when necessary. If the weather was too bad to work outside, we got a day off, which kinda sucked. No work, no pay. \n\nMost nights, I got home between five and six totally exhausted. I'd get cleaned up, fix dinner, and fall asleep in front of the television, eventually dragging myself to bed. Saturday was usually a short day, home by two or three. My only day off was Sunday. And much as I dreaded it, I had to cut the grass at home. My mother hired a landscaper to tend her flower beds, maintain the shrubbery, and cut the grass until I got home from school. But the lawn was my responsibility during the summer. Just like every year since I was old enough to safely drive the lawn tractor. I never saw who took care of the flower beds and shrubbery.\n\nI saw Celia only in passing for a couple of weeks. Usually as we were coming or going in the late afternoon or evening. Sometimes, we'd be on our decks grilling dinner at the same time. One night, the week before Memorial Day, we were both grilling hot dogs at the same time. Celia picked up her plate and her beer when she was done cooking and walked over to join me.\n\n'Mind if I join you, Keith?' she asked.\n\n'Anytime, Celia. Excuse me a moment,' I said when I set my hot dogs down. I went inside and put a jar of pickles, a bowl of the potato salad my mother taught me to make, assorted cut raw vegetables, mustard and relish on a tray. Once I put it on the table, I said, 'Help yourself, Celia.\n\n'Thanks, Keith. The potato salad and veggies look good. You don't eat like any of the college guys I knew.' Celia said as she took a scoop of potato salad then grabbed some carrots, celery, bell pepper strips and scallions. 'You aren't going out as much as I thought you would. Didn't any of your friends come home for the summer?'\n\n'Just some Saturday nights. I get up too early to be going out all the time. Sunday is my only day off.'\n\nCelia looked thoughtful for a few minutes as we ate. 'And you have to cut the grass here on Sundays after mowing the country club all week,' she said suddenly. I nodded. 'Keith, school's out soon. After that, I don't have any plans for the summer except maintaining my yard and doing a little home improvement. I'm not even taking a vacation this summer. If you'll show me how to drive your tractor, I'll cut your grass in return for using the tractor to do my lawn.'\n\n'I'll show you how to use our tractor, Celia, but you don't have to cut my grass.'\n\n'You'll be doing me a favor. Your tractor will make my lawn a fast and easy chore. I can do both lawns in less time than it takes to just cut mine. I do my lawn in bits and pieces now with a little twenty-inch walk behind.'\n\n'Okay. But I supply the gas. Deal?'\n\n'Deal,' Celia said with a smile.\n\nThe time we spent together snowballed after that. I think Celia fell into feeling like a surrogate mother. Picturing her as my mother never crossed my mind though. We began eating together most weeknights, sharing the cooking. Sometimes at her house, sometimes at mine. She was fun. Funny. She taught me more about cooking than my mother did. If I'm honest, I learned more from Celia because she smelled nice, looked great, and was fun to be around. Plus, I still fantasized about her. I liked paying attention to her. And enjoyed the attention she paid me.\n\nMom was . . . well, Mom. Teaching me to cook was Mom teaching her son how to take care of himself. She did her best to make it fun and interesting. I enjoyed cooking with her and spending time with her. When I wasn't also getting a lecture about something I did or didn't do. But it was still part of being her son. \n\nWith Celia, it was a game. We did a little innocent flirting. Traded jokes and barbs. Bumped into each other sometimes, which almost never happened when I cooked with Mom. Making dinner with Celia was just fun. The worst part was the erection that inevitably developed when I was in the kitchen with her. Or anywhere else we were together. Thankfully, she never noticed. But, in all honesty, I liked that, too.\n\nTypically, I went out with friends on Saturday nights. But if the opportunity to spend Saturday night with Celia presented itself, I stayed home. It didn't make much sense. It was just meant another night fantasizing about her. Then having to clean up a mess from masturbating to that fantasy when I went to bed, alone, like every other night I spent with her.\n\nThings unexpectedly changed one night in mid-June, shortly after her school year ended. Celia had a date. We weren't having dinner together that night. I was disappointed but resigned to reality. It wasn't a surprise. I already heard she met someone she liked. He'd finally asked her out, as she hoped. I was sure the time I'd be spending with Celia would diminish markedly.\n\nWhen I got home from work the Friday night of her date, she was standing next to her car, dressed to go out. But her jack and spare tire were on the pavement. She had a flat. She looked frustrated and on the verge of tears.\n\n'Need some help?' I asked as I approached.\n\n'I know how to change a tire, Keith. But I can't loosen any of the lug nuts to get the wheel off.' Her shirt was dirty, probably ruined. Her jeans and hands were filthy.\n\n'Go inside and get cleaned up. I'll change the tire. I'll have you ready to go by the time you get back.'\n\nCelia smiled and started to run back inside. But she stopped short, squeezed me tightly in a hug, and kissed my cheek. 'You're the best, Keith.'\n\nThe lug nuts were much too tight. I grunted when I loosened the first lug nut and every other lug nut. Once I heard her door close, I muttered aloud to myself, 'Yeah, you're the best, Keith. But it's someone else that gets to spend the evening with the most amazing woman you know, while you stay home and jerk off again.' \n\nWhen Celia returned, I was just closing the trunk after putting the tools away and stowing the flat. She was a goddess. My jaw dropped and she saw my reaction. It was still jeans and a shirt. But something about this outfit was different. I can't explain it. A diaphanous shirt and form-fitting sleeveless body suit were both the same color as her eyes. Her jeans were an off-white denim that fit like they were tailored to show off her shape. And make an impression. It wasn't a 'Fuck me!' outfit by any stretch of the imagination. But she looked amazing.\n\nCelia grinned and did a twirl. 'You like? I didn't want to wear this tonight because it's my first date with this guy. This is an outfit I usually reserve for later. I know it's just jeans and a shirt but there's something about it that prompts exactly that reaction.'\n\n'Wow, Celia. You look good enough to eat,' I blurted out. I couldn't stop myself. I felt my face flush as soon as I said it. The realization I was blushing just made my face grow hotter and probably redder. I'd never said anything that blatantly sexual to her.\n\nCelia smiled and slapped my arm gently. 'I knew there was a college-boy dog in there somewhere.' She kissed my cheek, avoiding any other contact. I was still dirty and sweaty after a day of work. Dirtier yet since changing her tire. 'Thanks, Keith. I'm late. I'll see you tomorrow maybe.' And then she was in her car and backing out while I stood alongside her driveway watching her leave. Feeling hopeless and dejected.\n\nI went inside, showered and changed. Jerry and Samantha came by after dinner. We hung out until I started to nod off around nine. We all had to get up for work in the morning. Me far earlier than either of them. I fell asleep again on the couch while watching TV soon after they left.\n\nA tapping on the slider to the deck woke me. At first, I thought I was dreaming when I saw Celia on the deck. My eyes drifted closed again, but the tapping persisted. More awake the second time, I looked again. Celia really was on the deck. Still dressed for her date. I sleepily made my way to the door and opened it. Celia burst through like someone was chasing her, almost knocking me over. Startled awake, I checked outside but didn't see anyone. I closed the slider and locked it. I looked at the clock. It was after midnight. The TV displayed a test pattern. I had to get up in a few hours.\n\nCelia looked like she'd been crying. She ran toward me, hugged me tight, and began sobbing.",
        "'You alright?' I asked stupidly.\n\n'Yes. No. I don't know.'\n\nMy tee shirt was getting warm and wet from the copious tears she was shedding. 'What's wrong?' I asked.\n\n'Everything. I don't want to talk about it. Just hold me,' she said. After standing there a few minutes, I guided her to the couch.\n\nI knew something serious was wrong. But had no idea what. The obvious answer was her date didn't go well. But how badly? What happened that made her come running to me after midnight? Was it bad enough that the police should be called? It didn't take long to get an answer. She blubbered incomprehensibly until her sobbing tapered off. What little I understood skirted around the nature of relationships between men and women. Differences in expectations. The crudity and callousness of some men. After a half hour, she got to the crux of her distress. I just listened.\n\n'I thought everything was going so well.' Sniffle. 'We had a nice dinner. He was charming. Had a sense of humor that made me laugh. Didn't seem too full of himself.' Sniffle. 'More interested in learning about me than talking about himself.' Sniffle. 'He was nice while we watched the movie. Afterward, we drove back to the parking lot where I left my car. He leaned in for a kiss, which I was looking forward to. But as soon as our lips met, his hand was in my crotch.' Sniffle. 'Didn't even try a breast first. I pushed his hand away, but it went right back. I broke the kiss and pushed his hand away more forcefully. I told him it was too soon for that. You know what he did?'\n\n'I hope not,' I said.\n\nCelia burst into tears again. 'He reached past me and opened the car door. He said - I don't waste my time on women that don't put out. Then told me to get out. He didn't even say good night. Just drove away. And I thought he was so nice until then. I probably would have forgiven his indiscretion if he'd respected my feelings. I cried all the way home.'\n\n'Some guys just want to get laid and don't care about anything or anyone else.'\n\n'You're not like that,' Celia said.\n\n'I'm no innocent. But no, I'm not like that.'\n\n'You're a good guy, Keith.' Celia was quiet for a few moments. 'Can I stay here a while? I know it's stupid. He doesn't know where I live. But I don't think I can be alone right now.'\n\n'Stay as long as you like, Celia.'\n\n'Just hold me, Keith.'\n\nCelia and I didn't talk any more. We both fell asleep on the couch, my arm around her shoulder, her head on my chest. When I woke in the morning, Celia was curled up in a fetal position with her head on my lap. She appeared sound asleep, breathing slowly and evenly. And clutching the palm of my hand to her breast. My raging hard-on was trying to go vertical, pressing against her cheek. It wasn't morning wood. I could feel her warm breath through my gym shorts.\n\nI carefully extricated my hand and slipped out from under Celia. I slid a pillow under her head. It was just after four. I left Celia there and went to get ready for work. I intended to let her sleep when I came back into the kitchen to grab my lunch and leave for work. But she was already gone.\n\nIt was already sticky and warm as I left for work. It just got hotter and more humid as the day progressed. It was a miserable day for working outside. Just few minutes in the sun was torture. Everyone was bemoaning the dreaded three H's, hazy, hot, and humid, that don't usually arrive until July. Everyone at work was grouchy and out of sorts. The day was so hot that few played golf that day. I changed the schedule around a bit to take advantage of the dearth of golfers. \n\nBut Celia, not the heat, was the focus of my thoughts all day. I had a short fuse and barked at a couple people. A bit unfairly, I admit. I eventually apologized, but not until Monday. It was a struggle to keep my mind on work, make sure everyone drank enough water and took enough breaks to avoid over-heating. It was Beth, the only girl on the crew, that commented about my mood.\n\n'You okay, Keith? I know everyone's out of sorts in this heat but you're especially not yourself. Something's bugging you. What's wrong?' she asked when we were alone in the shop for a few minutes after lunch. The shop, completely surrounded by towering shade trees, was cool. At least in comparison to being out on the course. It was a welcome if short-lived break.\n\n'Yeah, sorry about that. I'm worried about a friend,' I said succinctly, not really wanting to get into it with her.\n\n'Don't worry about it. None of the guys have complained. And Mr. Nelson hasn't been around. It's a good thing he's been so busy on Black Oak.'\n\n'Yeah, guess I caught a break there.' \n\nThere were two courses at Forrester CC. White Oak and Black Oak. White oaks and black oaks were common trees in the area. A large and stately black oak tree was found between what became the sixth and eleventh fairways when the first course was being built. It became a featured and recognized icon of a respected and challenging golf course. A silhouette of it was featured on the Forrester Country Club sign at the main gate and in the logo on our paychecks. The tree was long gone, victim of a lightning strike before I was born. Mr. Nelson, the head greenskeeper and our boss, was busy on Black Oak, periodically meeting with tournament officials and overseeing a contractor making preparations for the State Amateur Championship in the fall.\n\n'You wanna talk about it?' Beth asked.\n\n'I do. But not 'til tonight when I see my friend,' I told her flatly.\n\n'I bet it's a girl,' Beth said.\n\n'It's a friend,' I said a little more testily than necessary. 'Not a girl.' True as far as it went. Celia was a friend. But she was no girl. Then I added, 'Let's get moving so we can finish for the day and get out of this heat. I'm going to check on Chuck and Darrin. If I don't look in on them, they'll just screw off and won't finish what they should have finished yesterday. They're paying today for screwing off yesterday.' I shouldn't have said anything about Chuck and Darrin. But everyone knew they were fuck-offs. It was a frequent topic of conversation among their coworkers whenever the duo wasn't around.\n\n'You have no idea,' Beth laughed.\n\n'Yeah, I do. And so does Mr. Nelson. But he can't fire them. They're cousins, their parents are members here, and their uncle's the club president. Their great-grandfather was one of the club founders.'\n\n'I didn't know that.'\n\n'Don't say anything to anyone about who they are. You've noticed they never get assigned anything important?' I asked.\n\n'I wondered about that. But then, they're not too bright.'\n\n'They're both really smart. Just lazy. Darrin goes to MIT. He got perfect scores on the SAT's. Chuck hasn't got a lick of sense but he's a Dean's list engineering student at Stanford.'\n\n'Shit, I thought they were just a couple of morons already working above their competence.'\n\n'Nah, just a couple of entitled rich kids that figure the world owes them. Sad thing is they're probably going to be on easy street once they finish school.'\n\n'How do you know all this?' Beth asked.\n\n'I already spent two summers working with Darrin and one with Chuck. Listening to them brag about their lives and griping about being made to work during their summers while I carried the heaviest part of the workload we got.'\n\n'Well, I'm glad you're the foreman and not one of them,' Beth said as I got on my cart to leave.\n\n'Mr. Nelson may be stuck with them, but he's not stupid. And just so you know, I wasn't looking to be foreman this year. It just happened.'\n\n'I doubt it just happened. Like you said, Mr. Nelson isn't stupid,' Beth grinned. I ended our conversation abruptly by driving away on my cart.\n\nIt was still hazy, hot, and humid when I got home. A line of dark clouds was visible to the south and west as I pulled into the driveway. Blustery winds rustled the trees as I pulled into the garage. Celia was sitting in a chair in the shade on the deck, her hair tossing in a gust of wind. I opened the slider and let her in.\n\n'Can we talk, Keith?' she said as she pushed her windblown hair back from her face.\n\n'Sure. Can it wait a few minutes? It was hotter than hell at work. I gotta get out of these work clothes and take a shower before I melt. I'm still overheated. A little surprised I'm not sick.'\n\n'Sure,' she said. But she sounded disappointed I was putting her off for a few minutes.\n\nI stripped down in my room and tossed my sweat-soaked clothes in the hamper, noting I needed to do laundry. Celia was sitting on the couch with her back to me when I left my room to go to the bathroom. I brushed my teeth then got in the shower. The initial blast of cold water shocked away my heat-induced lethargy. I didn't adjust the temperature. The water wasn't really cold, just cool. But it felt cold, and it felt good.\n\nI had my head under the shower head basking in the cool water running down my body. The exhaust fan was running. I didn't hear the bathroom door open.\n\n'I don't want to wait, Keith.'\n\n'Jesus, Celia. Give a guy a little warning. You scared me half to death. Can I take my shower? We can talk after I get dressed. I'm naked here.'\n\n'Relax, I can't see you, Keith. Besides, it's not like I haven't seen a naked man before.'\n\nShe called me a man, I noted. A little ego boost for me before some bombshell? I took a deep breath and reached for the shampoo. 'What's up?'\n\n'I'm sorry about last night. Thank you for letting me in. I needed a friend.'\n\n'Any time, Celia. That it?'\n\n'No.' She paused for a moment before she continued. 'Your hand was on my breast when you woke up. Your dick was hard and pressing against my cheek. We should talk about those two things.'\n\nI stopped washing my hair and took a deep breath. 'Yeah, it's my turn to apologize. I'm sorry about that. I didn't know I had my hand on your breast. It was just there when I woke. And I wake up every morning with an erection.' I plunged my head into the stream of cold water to rinse my hair. This conversation was uncomfortable. I didn't want to have it. I prayed it would end soon.\n\n'I know guys wake up most mornings with an erection. It's involuntary. Not something you can control.'\n\n'I'm still sorry it happened,' I said.\n\n'And your hand was on my breast because I held it there. I can't believe I'm telling you this, but I liked knowing you had an erection.'\n\nThat nearly took my breath away. I had no idea how to respond.\n\n'I noticed you didn't cop a feel before you pulled your hand away.'\n\nI'd wondered if Celia was awake that morning. 'I'm not in the habit of groping a sleeping woman, Celia.'\n\n'I know that silly. I would have thought it an unconscious reaction. Did you like the feel of my breast?'\n\nOnce again, I didn't know how to respond. While I debated what to say, Celia didn't wait for me to come up with something.\n\n'Keith, I know you get an erection every time we're together.'\n\nOh, shit, I'm in trouble, I thought. But if she knew that and it made her uncomfortable, why did she keep cooking meals with me? 'I'm sorry. I don't know what to say.' \n\n'It's okay. It's at least partly my fault.'\n\n'How's that?'\n\n'I could have discouraged you. Or been more careful. Did you think every time we bumped into each other in the kitchen was accidental? Okay, sometimes it was. Especially in the beginning. But sometimes it was because I wanted to confirm what I suspected. I knew all along you were getting aroused when you were with me. It's hard to miss seeing how you look at me.'\n\nI stopped washing myself and stared at the shower curtain.\n\n'Finish your shower, Keith.' Celia's voice had a certain finality to it. I didn't like it. \n\nI finished my shower quickly. After drying, I wrapped the towel around my waist and started for my room to get dressed. I glanced toward the living room but didn't see Celia. The slider to the deck was still open. My first thought was she was on the deck where I couldn't see her from the hallway to the bedrooms. My second thought was she had gone home. I worried she went home. We might still be friends, but she'd keep her distance. We certainly wouldn't be cooking dinner together again. I felt sick, physically ill, as I walked to my room. \n\nI tossed my towel on top of the hamper and went straight to my chest of drawers to get clean under wear and gym shorts. \n\n'Nice!' Celia said.\n\nStartled, I spun around without thinking. She was sitting at my desk. I'd walked right past her. So preoccupied I didn't see her.\n\n'What are you doing, Celia? You scared the crap outta me. Twice, now. Can I get dressed?'\n\n'If you like.' But she got off the chair and walked to me. She put her arms around me and held me gently, her head against my chest. 'Why are you so nice, Keith? Why do I get a thrill when I'm with you?'\n\nThe way my body responded to feeling her against me was predictable. And entirely unpreventable. She pulled herself more tightly against me. Were my fantasies coming true? Or was I still asleep and recent events all a dream? I decided whatever it was, I was going with it. I wrapped my arms around Celia and held her as tightly as she held me. She felt real enough. But I still couldn't fathom having her in my arms. It felt like a dream. Or was it the beginning of a nightmare? Celia was fully dressed. \n\nIt was when the idea of a nightmare went through my head that Celia turned her head and kissed my chest. My nipples hardened when I felt her hot breath. My cock was lengthening against her and beginning to stiffen, pressing against her harder. Instinctively, I moved one hand up her back, to the back of her neck and caught my fingers in her hair. The feel of her silky tresses was so sensual, it aroused me further. \n\n'Mmmmmmm,' vibrated through Celia's lips on my skin. A chill ran up my spine and goosebumps formed on my back and neck.\n\nI heard a crash just then that sounded like it came from the direction of the living room. I reluctantly broke our embrace and went to investigate. The wind had blown a folding chair over and up against the house. I went out onto the deck, folded it closed and brought it inside. The clouds were overhead now and it looked like rain. I closed the slider and returned to my bedroom.\n\nI stopped short when I got to the doorway. Celia had her back to me. Her shorts were at her feet. As was her shirt. She caught my eye in the mirror and smiled. When she turned toward me, I was speechless. Real life doesn't measure up to fantasies. At least it never did for me. The view of the lithe, feminine body in front of me far exceeded anything I'd envisioned in dreams or in my waking imagination.\n\nWhen Celia turned to face me, I drew in a deep breath. I stopped breathing when I realized all she wore was a bra and panties. Fortunately, my autonomic systems reengaged before I passed out. But not before I felt lightheaded. I didn't truly know just how beautiful Celia was until that moment. I dared not move. Afraid if I did, I'd awaken. And be heartbroken when this wondrous vision turned out to be a dream. \n\nCelia reached behind her and unhooked her bra. She held it against her breasts for a moment. I think to test me. To see where my eyes went. But they were locked on hers'. Those Adriatic blue pools had me hypnotized. I don't think I would have looked away if my parents came through the front door and called out to me. When Celia dropped her bra, my eyes didn't stray. She reached down and pushed her panties off her hips. I know they slid down her legs because they were in my peripheral vision. But I didn't take my eyes from hers'.\n\n'Keith? It's okay to look at my body. I want you to. It's why I undressed.'\n\n'Celia, I . . . I don't know what to say. I'm not sure what I should do.' I mumbled.\n\n'Do you like what you see?' she asked softly.\n\n'Very much,' I said softly. 'I've dreamed about something like this since I first saw you. But never. . .'\n\nCelia crossed to me and embraced me again. 'Shush. I've always seen the way you looked at me. I know you tried to hide it. You've been a perfect gentleman despite what I saw in your eyes.'\n\n'Celia, I hope I didn't make you uncomfortable,' I whispered as I held her tightly.\n\n'Keith, you don't have to squeeze so hard. I'm real. You're not dreaming. I'm not going anywhere tonight.'\n\nI relaxed. And stopped talking. I just stood there and held her. I don't know if it was for hours or seconds. But I know I didn't want to stop feeling her against me. \n\nCelia was the first to move. She reached up and stroked my face while kissing my chest. Once again, I tangled my fingers in her hair and lightly rested my chin on top of her head. Her soft hair tickled. I was again rewarded with 'Mmmmmm,' her lips vibrating against my chest. The chill returned to my spine. Goosebumps enveloped my entire body this time. Celia's head suddenly felt heavy in my hands. I felt her slide down my body. Hard nipples traced down my abdomen and legs. \n\nFrom her haunches, Celia looked up at me, a beatific smile on her face. Her eyes aglow with what I was hoped was love. 'You might think this is for you, Keith. But it's actually for me. Because the rest of the night will be mine.'\n\nMy ability to breathe went away again when she gently caressed the length of my erection. I stood helpless as she tickled my sac and kissed the length of my shaft. The gentle touch of her fingers and the heat of her breath aroused me more than I ever fantasized. When her tongue circled around my head, I knew the gods were gifting me for some unfathomable reason.\n\nThe end of my cock was already wet with precum when Celia took me between her lips. The 'Mmmmm,' vibrations she made when she had the head engulfed nearly sent my body out of control, but the sensation passed. I didn't want the sensation to end but knew if it continued much longer, end it would. Spectacularly. Celia lavished attention on me until my legs began to shake. I groaned when she popped her lips off the end of my cock.\n\nCelia gently pushed me toward my bed. 'You should sit, Keith,' she said with a sly smile.\n\nI collapsed into a sitting position. Celia pushed my knees apart and took me in hand. After another smile, all I saw for the next few minutes was the top and back of her head, her shoulders, the taper of her upper torso to a narrow waist, and cute little ass. At least, I saw them for a moment or two. The sensations Celia roused soon had me closing my eyes to lose myself in blissful sensuality. I held her head gently as I fought to contain the pressure building in my groin. \n\nThe way it ended was amazing. There was no warning the end was approaching. Instead, it was an instantaneous explosion of sensations that set off fireworks in my brain and sent my body reeling. Celia kept sucking through every convulsion. Driving me ever more out of control. Only relenting when I could take no more. Never in my wildest dreams, certainly not when fantasizing about Celia while I tended to late-night yearnings, did I experience anything like it. It wreaked havoc on my nervous system. Left me breathless. Shaking. But feeling better than ever before. And never happier.\n\nI fell backward onto my bed. Celia got up to lie next to me, a happy smile on her face. She leaned over and kissed the middle of my forehead and then bent toward my cock. I watched, amazed, as she engulfed most of my softening length. She coated my shaft with ejaculate as she drew her lips up my shaft. She dribbled the last bit onto the tip. She put her head on my shoulder and began slowly moving her hand up and down my shaft. The combination of her hand and the slippery fluid tickled. The tickling sensation caused me to laugh involuntarily. Little jerks rippled through me as I tried to stifle the laughs.\n\nWhen I caught my breath, to my embarrassment the first word out of my mouth was 'Wow!'\n\nCelia giggled like a schoolgirl. 'It's good to know I've still got it.'",
        "'How could you doubt it?' I asked. 'You're smart. Funny. Fun. Sexy as hell. Even when you're not trying to be.'\n\n'You've been good for my ego the last few weeks, Keith. Knowing I could get you excited gave me the confidence to go out on a date for the first time in a long while.' She said as she continued to play with me and snuggled against me. \n\n'Since . . .,'\n\n'Since my husband died,' she said softly. 'I moved here to get away from his family. They hurt me worse than losing him did. Never supported me emotionally after he died. Never said a kind word. They never cared how badly I hurt when he died.'\n\nI held her against me, trying to comfort her.\n\n'After last night, I . . .'\n\nI interrupted her by touching my fingers to her lips. 'Celia, it's not your fault that guy was an asshole.' I rolled onto my side and held myself up with one arm. 'You always amazed me. From the day I met you.'\n\n'I could always tell. Though I don't think amazed is the right word,' she giggled, her mood brightening as quickly as it had saddened. 'Your mother noticed, too. She told me she was sure you had a crush on me.' I felt myself blush. She giggled again. 'Don't worry. I told your mother I doubted it. And I assured her, that even if you had a crush, you never did anything to make me uncomfortable.'\n\n'When did you realize I had a crush on you?'\n\n'You were flabbergasted the day we met. Could hardly talk. By the time school started, I was sure I was the object of a serious school-boy-loves-teacher crush. But there was one night I learned just how you much you crushed on me. Remember the night of your eighteenth birthday?'\n\n'Yeah, it was a school night. My folks invited my grandparents, my Uncle Tom, and you over that night. I had a party with my friends over to the house that weekend. I think my mother hoped you'd hit it off with my uncle.'\n\n'She did. He's nice, but your uncle wasn't interested in me,' Celia said. 'I saw you had an erection when you were sitting next to me on the couch. We were right up against each other. I felt you growing against me later when I gave you a hug goodnight.'\n\n'Yeah, I don't get Uncle Tom not liking you.'\n\n'You'll figure out your Uncle Tom someday. Probably before your parents do. A few minutes after I left, I learned just how bad you had it.'\n\nI got a weird feeling in the pit of my stomach. 'How so?' I asked, almost afraid of the answer.\n\nCelia giggled. 'Did you know my bedroom window is across from yours?' I shook my head no. 'Before I turned on my lights, I noticed you were in your room. The lights were on, and the shade was up. I couldn't resist watching you for a moment. When you turned on your TV and flopped onto the bed, I thought you were going to watch TV until you fell asleep. Instead, you pulled your pants down. You were hard.'\n\nMy breath caught. 'How long . . .'\n\nCelia giggled. 'How long did I watch? You kidding? I left the lights out, took off my clothes and joined in. I watched until you got off. And then watched you do it a second time. And a third. I can't tell you how many times I got off.' She giggled again. 'I almost couldn't look you in the face the next time I saw you. It's probably a good thing I didn't see you for a week or so.'\n\n'Oh, god,' I muttered.\n\n'Relax. It's done. I didn't think less of you. I enjoyed myself, too. You never knew where my bedroom was?'\n\nI shook my head. 'I was never in your house until you invited me over for dinner the night I got home. Only on your deck. I never looked in your windows, either.'\n\n'You never went in to use the bathroom when you and your parents were over for a cookout?'\n\n'Nope. I always went home.'\n\n'Why?'\n\n'Because that what I was told to do before we went to your house,' I laughed. 'I still haven't been anywhere in your house except the kitchen, dining room, living room, and on the deck.'\n\n'Keith, if we do this again, it will be in my bedroom. I outgrew having sex in a twin bed long ago,' she laughed. Celia looked at the now hard cock she was still fondling. She squeezed it and said, 'Don't let that go anywhere. I'll be right back.' She ran out of my room and turned toward the bathroom.\n\nA moment later, I heard a flush and then running water. When she came back, she leaned down and kissed me. I smelled mint.\n\n'I hope you don't mind. I used your toothbrush. Just in case you were squeamish about tasting your own cum.'\n\nWhen she plopped down next to me, I reached over and caressed her cheek. 'I don't mind.'\n\n'The toothbrush?'\n\n'Either.'\n\nCelia smiled at me. 'Remember I told you I was being selfish?'\n\n'Yeah?'\n\n'That starts now.'\n\nCelia slid toward me, forcing me up to get up to avoid falling to the floor. Then she pulled me back into bed. I had little choice but to straddle her body. She kept her legs together. I took a moment to enjoy the view. Her hair was spread out under her head. Her eyes were as mesmerizing as ever. Celia took my hand and pulled me forward. I bent toward her. Our lips met in real passion for the first time.\n\nHers' were soft and supple. But yearning for attention. They parted and her tongue pushed its way between my lips. It was warm. Active against my tongue inside my mouth. I balanced myself with one hand and sought a breast with the other. I felt Celia's chest expand as she drew in a deep breath through her nostrils. Her breast wasn't heavy, but the weight of it still felt good in my hand. The areola contracted under my palm. When I slid my fingers to the nipple, I felt it elongate, distending between my fingertips.\n\nCelia put her hands over my ears and pushed my head toward her chest. She took a breast with one hand and guided my face to it with the other. I kissed every inch of it while she whispered, so softly I couldn't make out what she was saying. Finally, she said 'Please, suck on it now!' as she roughly pushed the nipple to my lips.\n\nI took it between my lips eagerly. It was hard. But it stretched readily, further elongating as I sucked it between my lips. I sucked on the nipple hard. Celia groaned loudly when I pulled away from her breast. The breast stretched as I continued to suck until the nipple finally snapped back from between my lips.\n\n'Oh, god, Keith. Don't stop. Do the other one! Please, do the other one!'\n\nI happily moved my mouth to her other breast and repeated my efforts. Kissing every inch of it until, in frustration, she pushed the nipple to my lips. While she held her breast in place for me, I felt her other hand slip between us. When it brushed against my shaft, I thought she was going to caress me. Tease me. Or guide me into her once she confirmed I was still hard. I knew she wouldn't be disappointed with what she found. I was as excited as ever I had been. Instead, I felt the steady, rapid motion of the back of her hand as she rubbed her clit. \n\nIt was my turn to groan. I wouldn't have thought it possible but the idea of Celia rubbing her clit while I lavished attention on her breasts excited me more than if she'd grasped my shaft and guided my hardness inside her. I moved back and forth between her breasts while Celia rubbed her clit. After a couple of minutes, her hips came up off my bed. The back of her hand pressed hard against my shaft but never stopped moving. A moment later, she cried out. Her torso shook. I had a hard time keeping track of where her breasts were. Just when I'd get my lips on a nipple, another writhe, shudder, or squirm would pull it away. \n\nCelia's hips bounced up and down a few times before finally falling onto my mattress. But her hips still moved under me. Celia grasped my face by the cheeks and pulled me from her chest toward her face. The hand against my left cheek was wet. Slippery against my skin. The wet fingers disappeared and slid between us again.\n\n'Fuck me, Keith! I need you inside me!' she gasped as she guided me to her opening. She slid my glans up and down her labia a couple times until she had me where she wanted. Her hips rotated upward and I felt myself begin to slip inside her. The heat inside her was incredible. Like she was on fire.\n\n'Uhhhhh!' she cried as I pushed into her slowly. Her free hand pulled my face to hers' and our lips met again.\n\nIt took a while, but I eventually understood what her selfish comment meant. I was excited beyond belief. Every fiber of my body wanted to go off again. But Celia had drained me earlier. She would have me at her mercy for a while.\n\nHer second orgasm wasn't long in coming. She shook even more energetically when it struck. The third and fourth took a little longer, though her energy, and enthusiasm, never waned. I broke a long kiss when I felt mine begin to manifest. \n\n'Oh god, Celia, I'm almost there!' I gasped.\n\n'Not yet. Hold out just a little longer, Keith. I'm almost with you!'\n\nI gritted my teeth, tensed my butt in what I'm sure was a vain attempt to postpone the inevitable. I'm not sure what I did mattered an iota because the sensations continued to intensify. But Celia exploded just before I went off. I filled her a moment later. I kept stroking though every synapse in my body was in overload.\n\nFinally, Celia pushed against my chest, 'Please! No more. I can't. I . . . don't . . . stop. I can't!'\n\nShe sounded incoherent. Or undecided about what she wanted. But I took my cue from the pressure of her hands against my chest. I rolled sideways and almost fell to the floor. Instead, I came to rest sitting with one buttock against her hip, on the edge of the bed, the other in midair. My foot hit the floor with a loud thump.\n\n'Oh, god! Are you alright?' Celia asked anxiously.\n\nI fell back, my head resting on heaving breasts. We both started laughing.\n\nCelia pulled me back into bed and wrapped her arms around me. She kissed my lips softly and said, 'Thank you.' It came out between labored breaths. So softly I barely heard it. Her face was red. Her chest a bright pink. Her skin was wet. Her hair a wild tangle. She was more beautiful than I'd ever seen her.\n\nI leaned down to kiss her. Her hand caressed my face as we held the kiss. When our lips parted, a crack of thunder shook the whole house. A second later, a flash of lightning turned the room so bright it almost hurt. A roar overhead announced a heavy downpour.\n\nShe groaned as she sat up. 'I hope all that wasn't an omen. A warning that we'd displeased the gods.'\n\n'Why?'\n\n'I'm sorry Keith, but this probably wasn't a good idea. I'll never regret it, though. I haven't felt this good in ages. If ever.' I must have looked heartbroken. 'Don't worry, Keith. I'm not done with you yet. Let's get something to eat. You got any food out there?'\n\nI went to my dresser to get a pair of shorts. Like when I first got out of the shower. \n\nCelia wrapped her arms around me from behind. 'What are you doing?' she asked, cheerily as I stood in front of an open drawer.\n\n'I was going to pull on a pair of shorts.'\n\n'Why?' she asked as she caressed my chest and rested her head against the back of my shoulder.\n\nI didn't have a good answer. 'I can't think of a single good reason,' I said.\n\n'Then don't. Let's get some food.' She slid her hand down and gently held my now limp member. 'Maybe we can get this guy fueled up for another go!' She took my hand and pulled me toward the kitchen.\n\nWe washed our hands at the kitchen sink, bumping hips playfully, each of us trying to hog the width of the sink. Then hit the fridge. Our meal consisted of some extra sharp cheddar, brie, crackers, peaches, grapes, the remains of the salami that I had for lunch two days that week, and copious amounts of ice-cold water. All while a torrential downpour and thunder raged outside. Lightning periodically turned a black sky brighter than daylight.\n\nWe ate mostly in silence but grinned like a couple of kids that had put one over on their parents. When we were done eating, Celia embraced me again. Amazingly, I felt myself beginning to stand tall again. \n\nCelia grinned up at me. 'I have a feeling this could be a great summer!' she said.\n\n'It's already my best summer ever,' I whispered. 'And not because of how we spent the last couple hours. Because you're my friend. Instead of Mrs. Heywood, the fantasy lady next door.'\n\n'C'mon. Let's go back to bed.' She said as she pulled me toward my room.\n\n'Celia. I know where we can find a bigger bed,' I told her as I resisted her tug.\n\nShe looked in the direction of the deck. 'We're not going outside in that so we can get to my house. And we're not having sex in your parents' bed. They'd have a fit as it is if they find out what we're doing.'\n\n'There's a queen in the guest room.'\n\n'Then why did we end up in your room?'\n\n'First, because that's where we were when you took your clothes off.'\n\n'There's more?'\n\n'Second, because I didn't believe my fantasy was coming true. Third, I didn't want anything to change your mind if it wasn't a dream and was actually happening. And last but not least, if it was still just a dream, I didn't want to wake.'\n\n'Then let's go mess up those sheets, too.'\n\nOur first tryst had been animalistic. Fueling a fire and a fantasy that had been burning in me since I met her. Maybe for a while in Celia, too. Our second tryst was lovemaking. Celia was smiling and looked content when I was too exhausted to continue. We slept in each other's arms. \n\nI woke with my usual morning wood. But there was a complication. I woke because Celia was straddling me. Guiding me into her for a mid-morning ride. 'Celia, I gotta pee!'\n\n'It'll have to wait.'\n\nI gritted my teeth and managed to hold my bladder until Celia cried out. I none too gently pushed her off me and ran for the bath. She was still giggling when I got back.\n\n'That wasn't fair!' I complained.\n\n'All's fair in love and war,' she replied cheerily.\n\n'Okay, what'll it be? Love or war?'\n\n'Your choice,' she responded, patting the bed beside her.\n\nLater that summer as we held each other after making love, Celia told me, 'Sometimes I want to make love. Other times, I want to fuck. Sometimes, I want both. When it's both, I want to fuck first.' Our first night, she got both. In the order she preferred. That morning after I returned from emptying my bladder, we fucked. She seemed quite content with it.\n\nWe showered, got dressed, and finished breakfast before noon. After we cleaned up the kitchen and put away the dishes, we grabbed a glass of iced tea and sat on the deck in the shade. It was cooler. The storm had been the leading edge of cooler, more pleasant weather.\n\nJerry and Rebecca showed up unexpectedly around three. Celia looked panicked for a second. But I shot her a look and she quickly relaxed. Minutes before Jerry and Rebecca arrived, Celia had expressed a desire to keep what we were doing to ourselves. At least for a while. She said she needed to sort through her feelings.\n\nJerry startled us when he said 'Hello,' as they came up on us from behind. He nodded to Celia. Celia and I were sitting next to each other, each on our own chair. Moments earlier, we'd been holding hands. I didn't think Jerry and Celia had ever met though I knew he'd seen her. Rebecca was another matter. She'd gone to Bishop O'Malley High School where Celia taught. Plus, she was more perceptive than Jerry. I knew it was likely Rebecca and Celia knew each other. I was right.\n\n'Hi, Mrs. Heywood! It's nice to see you. What are you doing here? You know Keith?'\n\nCelia smiled but hesitated to answer for a second. I answered before it got awkward. 'Mrs. Heywood lives next door,' I said, pointing toward her house. \n\nCelia recovered quickly. 'You're not my student anymore, Rebecca. Call me Celia. It's too nice to stay inside. Keith was sitting on his deck when I came out of the house to sit on mine. I decided rather than sit alone, I'd come over and sit with him. He's home alone this summer, you know. Keith, didn't I already tell you to call me Celia?\n\n'Jerry, Mrs. Heywood . . . Celia was my Calculus teacher at Bishop O'Malley. I hope you'll forgive me, Celia, for talking about school but all the guys at O'Malley practically drooled every time they saw you. I'll be student teaching at a high school somewhere a little over a year from now. How did you deal with it?'\n\n'It isn't hard.' Celia said. When Jerry snickered, Celia gave him a look that said, 'Grow up.' 'Maybe I should say it isn't difficult instead. You stay professional. Don't allow double entendres to pass without calling out the offender unless you're positive it wasn't intentional. Even if it's a female student. If someone does or says something inappropriate, address it directly right then and there. If the problem persists, you take it up through the administration's process. Humiliation can be a useful tool. If you embarrass a student in front of peers, their tune will usually change. Most high school students, especially boys, don't like to become the butt of jokes because the teacher got the better of them. You needn't worry much. There will be some that will be crude and vulgar when you're not around. There's not much you can do about that. But very few will be so callous that you'll have to face it in class. Some will fantasize but they'll keep that to themselves. So far I've only had one that presented a real problem at school.'\n\n'I hope I can manage it. I'm a bit nervous about it, though.'\n\n'Don't worry. You're a bright girl, Rebecca. I'm sure you've already learned how to deal with the jerks and frat brats at your college. It's not much different except there is a formal process that you have to follow if someone really gets out of line.'\n\nI thought Rebecca might prefer to discuss this topic further without Jerry or me present. 'Rebecca, Jerry, would you like an iced tea?' I interrupted.\n\n'Sounds good,' Rebecca said.\n\n'I'd rather have a beer, 'Jerry said with a grin. This time Rebecca shot him a look. 'But iced tea is good.'\n\n'C'mon, Jerry. You can help me get the drinks.' I took my empty glass and waited until Celia drained hers' and went inside. I got two glasses down from the cupboard. Jerry leaned against the counter with a grin.\n\n'What?' I asked him.\n\n'Celia your summer squeeze?' he asked still grinning.\n\nI stared at him for a second, then grinned. 'Oh, yeah, man! You wouldn't believe how hot she is! I swear she's a nympho! We were screwing like rabbits as soon as I got home yesterday. If you'd come a half hour early, you'd have caught us doing it right where we were on the deck!' When Jerry's jaw dropped, I laughed at him. 'You really are an idiot sometimes, buddy. I think my mother put her up to keeping an eye on me while she and Dad are away.'\n\nJerry looked both disappointed and embarrassed. 'Why would they do that? You're not ten years old.'\n\n'Right? Like I need a babysitter while I'm home for the summer. I'm old enough to take care of myself at school but not at home? I guess it could be worse, though.'\n\n'Yeah, she could be fifty-seven, sixty pounds overweight and mean as a snake. Celia seems nice. And she sure is easy to look at.'\n\n'She is that. She's been friends with Mom and Dad since shortly after she moved into the house next door. This summer, she feels like my friend, too.'\n\n'How old is she?' Jerry asked.\n\n'I'm not sure. Maybe thirty.'\n\n'Where's her husband? She divorced?'\n\n'No, widowed. He got sick right after they got married.'\n\n'That sucks.'\n\n'From what little I know he was an asshole.'\n\n'How come you haven't been around? You worked at the country club last summer and still found time to have some fun. Go to a few parties. Go to the beach sometimes.'\n\n'It's not the same this year. This summer has been hotter. I've got more responsibility. Longer hours. My boss made me the summer crew foreman.'\n\n'More money? That's cool.' \n\n'Yeah. But by the time I get home, it's all I can do to get dinner and do laundry before I'm sawing logs. I got off early yesterday, but it was so hot on the course I felt like crap. I just stayed in and went to bed early.' I didn't hint at why I was in bed early. 'Let's grab the drinks and get back outside. Rebecca's probably wondering what kind of trouble I'm getting you into.'",
        "Jerry took his and Rebecca's iced tea. I took the other two. Celia's expression suggested something was up. But she didn't, or couldn't say anything. We all chatted for a few minutes before Rebecca asked if we wanted to join them at the movie they were going to.\n\n'I'd love to,' I responded. 'But I've still got to do laundry. I'm just going to kick back and relax between loads. I have to be up tomorrow at four-thirty.'\n\n'Which reminds me,' Celia said. 'I've got a load in the washer, and I'm supposed to call my father. I appreciate the invite, but I have to decline. Thanks for the iced tea, Keith. Rebecca, it was nice to see you again. Jerry, it was nice to meet you.'\n\nI tried not to watch Celia walk across the yard while I talked to Jerry and Rebecca. I'm not sure I entirely succeeded.\n\n'I really liked Mrs. Heywood when I was in her class. The guys liked her, too, but not many of them did well,' Rebecca said after Celia was gone. 'I think most of them had trouble getting enough blood to their brains.' She didn't sound amused.\n\nJerry and Rebecca only stayed a few more minutes. \n\n'You sure you don't want to go with us, Keith?' Jerry asked. 'Toni Simmons is gonna meet us there. We told her we were going to get you to come with us. I think she liked the idea of seeing you.'\n\nJerry knew I'd asked Toni Simmons out several times during high school. She was always busy. And not once did she signal she might accept if I asked another time. I was no longer interested, but I wondered why she suddenly was.\n\n'Wish I could. But I do need to get wash done. I'm sure I'm going to bed early, too. Maybe we can do something next weekend.'\n\n'You sure you don't wanna go?' Rebecca asked. 'Toni really did sound like she'd enjoy seeing you.'\n\n'No, I'm over Toni. She had her chances but wouldn't give me the time of day. I'm sure I'll meet someone once I go back to school. This summer, with my parents away, I've got to be the responsible adult.'\n\n'That doesn't mean you can't have some fun, pal,' Jerry said.\n\n'I will, Jerry. I will,' I grinned. 'It just can't be tonight. And won't be with Toni Simmons.'\n\nRebecca leaned down and gave me a kiss on the forehead. 'See ya soon, Keith.'\n\n'Later, pal,' Jerry said as they headed off.\n\nI laughed when I heard the beginning of their bickering as they walked away. 'What'd you do that for? Jerry asked.\n\n'Do what?'\n\n'What'd ya kiss Keith for?'\n\n'Oh, grow up, Jerry. It's Keith, not some random guy. And I kissed his forehead. I wasn't making out with him.' Their conversation faded away completely when they turned the corner of the house.\n\nI did have to do laundry. I got up and went inside. After I started the washer, I went to the fridge. I took out some deli roast beef and started to make a sandwich, but the phone rang. I answered it and continued making my sandwich, cradling the handset between my cheek and shoulder.\n\n'Hello?'\n\n'Hi! You're home! Finally. I tried to call earlier but no one answered.' I'd spoken to my mother at least twice each week since getting home. More often than while I was at school. Far as I knew, this was the first time I missed her call. \n\n'Hi, Mom. I slept late. I didn't get to sleep until early this morning. I guess I didn't hear the phone.'\n\n'I hope you're not staying out late every night,' she said. \n\nMy mother had a strange set of concerns. Not once did she worry, or ask, about the hours I was keeping at school. But at home I wouldn't know enough to get some sleep? 'No, Mom. I've been in bed early almost every night. Last night was the first night I was up late since getting home. I didn't even go out. Just hung out here with a friend.' I could hear the wheels turning. Before she could ask who my friend was, I changed the subject. 'I forgot to tell you, Mrs. Heywood invited me over for dinner the first night I was home. She cooked ribs on her grill. We had dinner on her deck. We've had dinner on her deck several times since I've been home.'\n\nMom's response came quickly. 'That's nice. I've always liked her. She's always so nice. So, what have you been doing since I talked to you the other night?'\n\n'The weeks are all the same, Mom. Get up Monday morning and go to work, get cleaned up when I get home, have dinner, fall asleep in front of the TV, get up and go to bed. Repeat five times. Sleep in on Sunday.'\n\nWe talked for another half hour. She never asked if I was having some fun this summer. Eventually, Mom brought up the fact that the call was long-distance. Not that it mattered. Dad's employer was covering living expenses for the duration of the project he was leading, including the telephone bill. My father got on for a few minutes, but we didn't talk long. Mostly we talked about how working at Forrester was going. He asked about a few of his friends that were members, but I couldn't tell him anything other than I saw them occasionally. I rarely interacted with the membership. The buzzer on the washer sounded. He ended the call when he heard it. Telling me he didn't want to keep me from anything. He promised to call during the week.\n\nBefore I managed to move the clothes from the washer to the dryer, the phone rang again. This time it was Celia.\n\n'What are you doing?' she asked. I sensed uneasiness in her voice.\n\n'Laundry. I need clothes for work. They just finished washing. I was putting them in the dryer when you called.'\n\n'Can you come over for a bit?' she asked.\n\n'I'll be there in a few minutes,' I told her. I finished loading the dryer and started it, grabbed my keys and went to Celia's house.\n\nCelia was watching for me when I went up the stairs to her deck. She waved me inside. Her unease was readily apparent. She didn't waste any time getting to it.\n\n'Rebecca knows about us.'\n\n'You told her? Why? I thought you wanted to keep it quiet for the time being.'\n\n'Of course, I didn't tell her, but she knows,' Celia said.\n\n'I doubt she'll say anything to anyone, Celia. Why do you think she knows we're . . . involved?' I asked.\n\n'First, she brought up that your girlfriend broke up with you. When I said I'd heard, she looked at me strangely. Then said, and I quote -- You could do much worse than Keith. You should spend every minute you can with him this summer. What the hell does that mean if it doesn't mean she already knows about us?'\n\n'Rebecca's perceptive but I can't believe she knows anything. Maybe suspects. Or hopes. But that's not the same as knowing,' I said. \n\n'Promise me you won't mention us to anyone.'\n\n'I promise. I won't say a word, Celia.'\n\n'I'm concerned about a couple of things, Keith. One is your parents. That's just awkward as hell. But if the administration at Bishop O'Malley finds out I'm involved with the friend of a former student, it could mean my job.'\n\n'If Rebecca says anything to me, I'll tell her I think my mother asked you to keep an eye on me while I was home. You're playing surrogate mom, much to my dismay.'\n\nCelia burst into laughter.\n\n'What's so funny?' I asked, though I suspected I knew.\n\n'Your mother did ask me to keep an eye on you. Make sure you ate decently, got enough rest, and didn't party all summer.'\n\n'I had a feeling.' I smiled at her. 'You're doing what she asked.'\n\n'I don't think she had last night and this morning in mind.'\n\n'Mom will have to accept that at some point, a woman is going to take away her little boy. And her little boy is going to have sex with that woman.'\n\n'I doubt she that in mind when she talked to me about you before they went to Georgia.'\n\nI shrugged. 'Dad always tells her she can tell him what she wants him to do, but not how to do it. You could tell her the same,' I laughed.\n\n'I don't think your mother will buy that where you're concerned.'\n\n'But I will. Is it better she's happy or me?' I asked with a grin.\n\n'It's better that I'm happy,' Celia grinned.\n\n'How can we make that happen?' I asked.\n\nCelia smiled. 'I think you've made a good start.' Then her face turned serious again. 'We have to be careful, Keith. Before anyone knows we're seeing each other, I want to work through my concerns.'\n\n'I get it, Celia. You don't want to become the subject of gossip. You're not the only one that is worried about my parent's reaction. Can you imagine the grief I'll get if my mother finds out I'm sleeping with the woman that lives next door? But you know what? I don't care how much grief she gives me about you.'\n\n'Don't get ahead of me, Keith. I may decide this is just a summer fling.'\n\n'I hope not. But whatever you decide, Celia, I'll figure out how to handle it.'\n\n'What are you doing for supper?' Celia asked, changing the subject suddenly.\n\n'I took some salmon out of the freezer before I left for work yesterday morning. It should be defrosted. There's enough for both of us.' I grinned at her. 'I could probably eat it all myself. Recharge my depleted energy resources.'\n\n'Never mind your energy resources. Why don't you bring it over? I've got macaroni salad and fresh green beans.'\n\n'Okay. I'll be back after I fold the clothes in the dryer.'\n\nMuch as I'd wanted to spend the night with Celia again, we only had dinner. We hung out on the deck for a bit, but she sent me home just after dark. It was the responsible thing for me to do anyway. I had to be up early.\n\nJune was passing quickly. Between long workdays and a few nights each week with Celia, it sped by too fast for my taste. Some mornings my body protested vehemently when the alarm clock woke me. But I somehow managed not to miss any work. Often not easy after an evening in bed with Celia.\n\nEvery Fourth of July weekend Forrester Country Club held its annual calcutta, a team tournament event that includes an auction, betting, and cash prizes for the tournament winners and team 'owners'. It also raised a significant sum of money for local charities. We worked extra hours to get the course in perfect condition. Everyone worked the Sunday before the holiday. Nearly everyone would have the entire four-day holiday weekend off. The crew agreed to draw lots to determine who had to mow greens and aprons through the weekend. I was fortunate enough to get the entire holiday weekend off.\n\nMy mother asked about the holiday before I had an answer for her. When I learned the schedule, I called to tell her I was hers' for the weekend and asked when I should pick her up at the airport. I got an 'I'll get back to you with specifics soon.' \n\nThree days later, my father called with travel arrangements. Instead of Mom coming up, I was going to Georgia. I started to complain I'd spend two days flying to spend two with them, but he asked me to stop complaining and listen. His company president had an invitation to play at Augusta National Golf Club and was taking the company jet down to spend the weekend. I was flying down and back with him. Mom would pick me up late Wednesday night in Augusta. Someone would drop me off Sunday for the return flight. I didn't even have to drive to the airport. My father's boss would pick me up Wednesday after work and drop me off when we returned Sunday evening. I was still a little reluctant but when he pointed out there was a beach club they belonged to, and some attractive college girls hung out there, including one that would be going to school with me. I had to relent or raise suspicions.\n\nI wasn't surprised when Mom wanted to talk to me after Dad. I got a lecture about making sure I packed everything I needed, toothbrush, grooming supplies, clothing, including something appropriate for a night out to dinner at a restaurant with a dress code, and a bathing suit. Sometimes, I wondered if Mom thought I was still eight years old. I was surprised when she told me Celia was coming, too, though she referred to her as Mrs. Heywood. I thought about asking why but decided against it.\n\nCelia was nervous about making the trip when I talked to her the next night. Nervous about being found out, she couldn't believe she'd let herself get talked into making the trip. I reassured her everything would be fine. I wouldn't act any differently than I did any other time she was around when my parents were.\n\nCelia laughed. 'Maybe it won't be so bad. Your mother is already convinced you have a crush on me.'\n\nI wasn't so sure. Celia sleeping in a room next to me was going to be temptation difficult to resist.\n\nMy father's boss, Mr. Bogosian, was friendly. He talked to us on the ride to the airport. There was no waiting to get tickets or check luggage. His driver pulled up to a small building. A man came for our luggage and took it to the plane. We just got out and followed Mr. Bogosian to the aircraft. I'd flown a couple times on jets, as had Celia. But on big aircraft owned by big airlines. Neither of us had ever been on a small jet. Once inside, we didn't find the expected rows of seats. Instead, there was lots of room to stretch out and relax. There were only a few scattered chairs and two couches. Less than ten minutes after we arrived at the airport, we were taxiing toward takeoff.\n\nThe flight was uneventful. Mr. Bogosian quickly became preoccupied with a stack of folders he took out of his briefcase. Celia and I were fed nice sandwiches and drinks. Once we landed, we thanked Mr. Bogosian for bringing us and finalized the timing for our return home on Sunday. \n\nThe first thing I noticed when the cabin door opened was a blast of hot, humid air. The tarmac was still shedding heat from the day when we disembarked. By the time I got to bottom of the steps, I was sweating profusely. \n\nAs expected, Mom was waiting for us. I got a smile, a hug that might have broken my grandfather's ribs, and a kiss from my mother. Celia got a smile and a neighborly hug. \n\nIt was more than an hour to my parent's rented house. Along the way, Mom queried me about my summer so far. Curious about what I was doing besides work. Celia had wisely insisted that I spend at least some of my Saturday evenings and Sunday afternoons with friends. I had a couple movies to tell her I saw, a day at the beach on a day Jerry unfortunately was working. I told her about a party I attended at Paul and Connie Rogers' house while their parents were away. Mostly because I was sure she'd eventually hear about it anyway. The Rogers were friends of my parents. Besides, I had to tell her something that indicated I was mostly behaving. Mostly, but not completely.\n\n'I've been home most nights, Mom. I only went to one party so far. Considering what happened, I doubt I'll go to another.' I began.\n\n'Oh? What happened?'\n\n'Mr. and Mrs. Rogers were away for a wedding. Paul and Connie threw a party. It got way out of control.'\n\n'What does that mean?' My mother became anxious before I even told her what happened.\n\n'Paul invited a bunch of his friends and Connie invited hers'. I don't think they discussed how many to invite. When I arrived around six, at least fifty or sixty people were already there. They had started partying sometime in the afternoon. When I left, the number was way over a hundred and still growing.' \n\nMy mother looked upset and waved her hand, telling me to continue. \n\n'It was getting rowdy. The next day I heard one of the neighbors called the police because the music was too loud and there was a fight out in the middle of the street. When the police arrived, they found two open kegs and a bunch of high school kids drinking beer. Plus, they smelled pot. Paul and Connie got arrested. As did about a dozen other kids. I heard the rest were detained until their parents picked them up.'\n\n'You weren't there?' my mother asked.\n\n'I stayed for about an hour and saw some of my friends. But I could see what was happening and decided not to stick around. None of my friends stayed long, either.'\n\n'Don and Audrey have a lot of trouble with Paul. Mostly small stuff. Chronic but minor behavior problems when he was still in school. Poor grades. Now he can't seem to keep a job. This is a new wrinkle. He's never been arrested before. I'll have to call them and get the full story. I'm surprised at Connie. She's never been in trouble before.'\n\nI knew both Paul and Connie well enough from getting stuck hanging with them when I was a kid. But they weren't among my circle of friends. I'm not even sure why I decided to go in the first place. Something to do, I guess. Paul was always a little sketchy. Connie was, too. She was just smarter about it than her older brother. She didn't get in trouble at school and got good grades. But she skirted the edge in more ways than Paul. I knew it would inevitably catch up with her.\n\nI wanted to change the subject. 'What's the plan for the weekend, Mom?'\n\n'If you're hungry, I'll make something to eat when we get to the house. Tomorrow, we're hosting some people from Dad's project and the hospital for a cookout. We'll go to the beach club Friday and out to dinner Saturday. Sunday we'll stay in and relax. Just us and Celia if she doesn't have something else scheduled. I understand you'll get home around ten Sunday night. You're working Monday?'\n\nCelia have something scheduled for Sunday? I wondered what that meant. 'I'll be at Forrester before six. Like every workday.'\n\n'Are you hungry?'\n\n'Maybe a little. We had a quick snack at our house and a sandwich on the flight down. Mostly I want to go to bed. I was up early and it was hot on the course today.' I didn't mention having Celia next to me in bed the previous night.\n\n'It's going to be hot tomorrow. Humid, too,' my mother said.\n\n'And hazy, I bet.'\n\nMom switched her attention to Celia. I listened intently for clues to my mother's plans for Celia over the weekend. I got nothing.\n\nWhen I woke before six, my room was uncomfortably hot and sticky. I took a shower with straight cold water. It didn't help. Despite making extra effort to dry myself, I was wet again before I made it from the bath to my room. I wiped myself down one last time and pulled on the lightest clothes I owned. Within moments, my shirt was stuck to my back.\n\nMy father was in the kitchen when I got there. 'Your mother is in the shower. She'll be out to make breakfast shortly.' My father grinned at me. 'You look like you're about to melt. Welcome to summer in Georgia.'\n\n'How can anyone stand this heat?' I asked. 'It's hell.'\n\nMy father laughed. 'It is that. The central air quit yesterday. Someone will be here to fix it first thing tomorrow morning. We found out too late to get anyone yesterday.'\n\nI fixed a pitcher of ice water and proceeded to inhale it. Celia joined us a few minutes later, looking like she'd made an effort to put herself together. She looked ready to melt, too. \n\n'Good morning, Celia,' my father said.\n\n'Good morning, Mrs. Heywood,' I greeted her. I wanted to establish calling her Celia was okay, but I wanted at least one of my parents to hear it from her, rather than me.\n\nCelia gave me the tiniest of smiles. She knew what I was doing. 'Keith, how many times do I have to tell you to call me Celia? I'm not that much older than you.'\n\n'Sorry, Celia. Force of habit.' I said, looking at my father who nodded. Giving his okay, I guess.\n\nWe all were annoyed when Mom appeared, apparently entirely unaffected by the heat. Mom offered to cook but no one wanted a heavy breakfast. I settled for a bowl of cold cereal; everyone else had coffee and English muffins with jam.\n\nAfter we ate, Dad wasted no time drafting me to help get set up for the crowd he expected. A freezer in the garage was stacked with big bags of ice. I hauled two borrowed coolers to the deck and filled them with ice, beer, and soft drinks. The fridge was stacked with ribs, hot dogs, and burgers. Mom told me others were bringing rolls, snacks, side dishes, and desserts for our potluck holiday feed.\n\nDad loaded charcoal into one of the two grills and stoked a low fire in one. The ribs were on the grill by nine to cook slowly. People began arriving at noon. The gathering was mostly adults but there were a few kids, mostly children of the people my mother was working with.",
        "My father introduced me to a girl named Katherine that would be a freshman at my college in September. She was cute. And attentive. A country girl, she got me to promise to help her get accustomed to going to college in a city. Celia stayed busy with Mom while I flitted between helping my father, meeting new people, talking to a few I already knew, and trying to avoid Katherine without being obvious or hurtful. She was cute and appeared interested in me. But I really wasn't interested in her. But it would be awkward and raise suspicions if I paid a lot of attention to Celia. It wasn't going to happen anyway.\n\nWhen I went into the kitchen to fetch burgers and hotdogs for the second round, Mom was introducing Celia to a late arrival named Harold Chapman. When introduced to me, it was Dr. Chapman; he was one of the residents at the hospital where Mom was working. Much to my dismay, Celia ended up spending most of the afternoon with him. I fretted about it. But under the circumstances, there wasn't much I could do.\n\nThe party went well into the evening. Katherine had to leave at seven with her parents but made a point of talking to me one last time before she left. \n\n'I'll be at the beach club tomorrow. Maybe I'll see you there,' Katherine told me. 'I'll be with some friends. But I'll have my own car. In case you'd like to escape for a bit. There's a place in town that makes its own ice cream. Their peach cobbler ice cream is amazing. A ripe, young Georgia peach is the best you'll ever have,' she told me suggestively.\n\nI knew immediately she wasn't talking about fruit. 'Maybe we'll see each other there. But to be honest, Katherine, I think my parents will be pissed if I wander off. This is the first time they've seen me since Christmas.'\n\n'I understand.' But I could tell she didn't.\n\nThe last of the crowd wandered off by nine. There wasn't much of a mess. Nearly everyone had pitched in with cleaning up. Mom, Dad, Celia and I sat on the deck for a while after everyone left. The evening was still sticky and unpleasant. But it was cooler than the house. As I sat there, I was thankful the yard and deck were almost completely shaded all day by big maples. It had been oppressively hot. Without shade, it would have been unbearable. My father said he was glad the usual three o'clock downpour didn't materialize. It would only have made the heat worse.\n\nMy father motioned for me to help with two big trash cans still on the deck. When we got to the garage, he stopped to have a smoke. He offered me one, the first time he ever had. I declined. \n\n'How'd you like Katherine? She's going to be at school with you in September, you know. Her father said she's never lived in a city the size of Hartford. Or been away from home, completely on her own.'\n\n'Neither had I until you and Mom dropped me off at the dorm two years ago. She'll make friends. She'll be fine,' I told him.\n\n'You weren't impressed,' he said.\n\n'She's nice. You don't have to fix me up with girls, Dad,' I said with a grin.\n\n'I wasn't trying to,' he laughed. 'Her father is one of the engineers that will be staying with the plant when it starts up. He's worried about his little girl being up there all by herself, far from home. Or as he put it, 'roun' all dem Yankees'. I told him I'd introduce her to you, so she already knows someone. I assured him you'd help if she needs it.'\n\n'Sure thing, Dad. But I doubt she's going to need my help.' I didn't say why I thought that. 'But if she does, I'll take her call.'\n\nWe stayed in the garage and talked until he finished his smoke. Then we went back to the deck. \n\nMom went to bed first. A few minutes later, Dad stood up and said, 'I better get in there, too. Don't stay up too late. The air conditioner guy will be here at eight and as soon he's done, we're headed to the beach club. Good night, Keith. Celia.'\n\nCelia and I sat and enjoyed the quiet for a few minutes. The only sounds came from crickets and the buzz of an occasional mosquito. The moon was high. Behind a haze but it still provided enough light to see each other clearly without the deck lighting. Celia was the first one to speak.\n\n'Katherine's cute. I can tell she likes you,' she said.\n\n'She is cute. Probably easy, too. She practically offered herself to me if I could get away from the beach club tomorrow,' I told her. 'I'm not interested.'\n\n'I was surprised your father tried to fix you up with a girl,' Celia giggled. 'That must have been awkward.'\n\n'He wasn't trying to fix me up. I met her father, too. Dad said her father is worried about her being in a city all by herself. He offered to introduce her to me. So she'd already know someone when she gets there.'\n\n'Well, maybe you'll change your mind about her once you get back to school.'\n\nI turned the topic back on her. 'How did your day with Dr. Chapman go?' I asked, feeling a bit nervous.\n\n'I definitely wouldn't have come if I knew your mother was going to try to fix me up again.'\n\n'With a doctor here in Georgia? That's a long way from home,' I laughed. 'It'll be tough to go on a date.'\n\n'He finishes his residency in a few months. He's going to a practice in Shrewbury and will have privileges at UMass Hospital in Worcester.' Worcester and Shrewsbury were not far from home. My lack of a reply amused Celia. She giggled softly. Her giggle stopped me from going into a funk.\n\n'Did you like him?' I asked.\n\n'He's pleasant enough. Very full of himself.' After a pause she added, 'Apparently, I'm having dinner with him tomorrow night.' \n\nI relaxed a little. Celia didn't sound enthusiastic about the doctor.\n\n'Let's go for a walk,' Celia said. 'I'm not ready to go to bed yet. Besides, this is cooler than my bedroom.'\n\n'Okay. But I should tell my parents. So they don't worry.'\n\n'Don't wake them if they're asleep already.'\n\n'I won't.' I went into the house and down the hallway. The door to my parents' room was open. Their bathroom light was on. When my father came out a moment later, I knocked on the door frame. His head snapped in my direction.\n\n'Something wrong?' he asked.\n\n'No. Everything is fine. Celia wants to go for a walk. I'm going with her. Just so she's not alone.'\n\nDad didn't say anything for a moment. 'That's nice of you, Keith. Don't be too late. We're up early tomorrow.'\n\nNeither Celia nor I had been away from the house. It was dark when we arrived. There was no street lighting. There were no neighboring houses visible from either the yard or the front of the house. When we got to the end of the driveway, Celia looked left and right.\n\n'Which way?' she asked.\n\n'Mom turned left into the driveway. Let's go right and backtrack. See what we missed.' \n\nCelia reached over and took my hand once the house was out of sight. We walked several hundred yards and saw only two houses, both well back from the road. We didn't really see the houses, just a light that indicated something was at the end of a driveway. We passed two brick pillars with adjoining walls and nice landscaping. A closed iron gate barred entrance. A light was mounted on top of each pillar. A brass plaque on one of the pillars read 'Tilton Meadows'.\n\n'Must be a private estate,' I said as we walked past. 'Can I ask something, Celia?' \n\nThat got a little laugh. 'I think you already know you can.'\n\n'Mom always told me it's impolite to ask a woman her age, but I can't help being curious. How much older than me are you?'\n\n'Not that much. I'll be twenty-six in December. On the seventeenth if you're curious what day.'\n\nI stopped. 'You're only five years older than me? I thought you'd be twenty-eight. Maybe thirty.'\n\nCelia laughed. 'So, already into old lady territory.'\n\n'That's not what I meant. I just wanted to know our age difference. Get more of a sense of my chances.'\n\n'You're doing just fine, Keith. I was just out of school when I moved into the house next to you. Bishop O'Malley is my first teaching job.'\n\n'You weren't married long, then.'\n\n'Not long. Terry and I got married in June after my junior year. He was six years older than me. We were married less than six months when he died. He left me well off financially, but he wasn't a good husband. The way he treated me changed completely after we got married. Terry got sick in October. He needed surgery in November. He had a bad reaction to the anesthesia. He lasted about three days after coming out of the operating room. Even though he treated me badly, losing him was still hard. His family just made it worse. \n\n'What do you mean?' I asked. 'Why did they make things worse?'\n\n'Terry had life insurance policies that paid off the house we lived in and provided me with a nice nest egg. Both quickly became an issue with his family. They wanted me to give them the proceeds of his life insurance and sign the house over to them. Said I wasn't married to him long enough to have a claim on it. I told them to go to hell. I was the named insurance policy beneficiary, and I was the only one in his will. They went out of their way to make me miserable. I sold the house and moved away as soon as I finished school. I didn't tell them where I was going.'\n\n'What are we going to do in the fall, Celia?'\n\n'How about we play it by ear? See how the rest of the summer goes? Now can we change the subject?'\n\n'Just one more question. What about the doctor?'\n\n'Not interested.'\n\n'Why not?'\n\n'Married or single, he'll be screwing every pretty nurse that wants a doctor husband and doesn't care whether he's already married or not. I'll play nice tomorrow to make your mother happy. But I really wish she'd stop trying to fix me up.'\n\nWe'd been walking a while, holding hands. Celia kept her left hand in her pocket the whole time we walked. Our conversation was leisurely, like our walk, with periods of easy quiet between exchanges. We came upon a recently paved road. The asphalt smelled fresh. A large sign read. 'Tilton Meadows Estates'. A second line read 'A Development of Custom Luxury Homes'. \n\n'Let's check out the neighborhood,' Celia said.\n\nWe turned up the road and walked for about a quarter-mile but there wasn't anything to see. Both sides of the road were lined with empty lots backed by a dense stand of trees. We got to the end of it just as we began talking about turning around. The road dead-ended at a low, professionally built stone wall. When I looked beyond the wall, I recognized the terrain immediately. A line of trees, a narrow strip of coarse grass and scrub, a wide expanse of nice grass, and off to the right a bit, a sand trap. Taunton Meadows was a golf course, probably a private club.\n\n'C'mon,' I said, 'Let's check this out. We scrambled over the stone wall and onto the course. We walked first in one direction, until we came upon a green. A tee was off to the left. It looked like the hole ran parallel to the road we'd just walked. We retraced our steps and continued past the road until we came upon another tee. A short distance to the right was a green and another fairway, paralleling the other side of the road for a short distance before ending at a stand of trees.\n\nTaking Celia's hand, I pulled her toward the green. When we got to the apron, I stopped. 'Kick your shoes off,' I told her. She was wearing sandals with no heel, which wouldn't damage the green. But I wanted her to walk on the green barefoot.\n\nShe looked at me kind of strangely but complied. 'Why?' she asked.\n\n'Humor me,' I grinned, kicking off my sneakers.\n\nI took her hand again, tugged gently, and stepped onto the green. Celia followed. I waited for her reaction.\n\n'Oooooh. That's the nicest grass I've ever walked on,' she cooed. 'What kind of grass is it? Can I get it installed at home?'\n\n'It's called bentgrass. It's very expensive seed. Bentgrass turf is really expensive. And maintaining it like this requires a very expensive mower. You can't cut it with a regular lawn tractor or lawn mower. The mowers we have at Forrester are only sixteen inches wide. You'd have no time for anything but cutting your grass.'\n\n'It feels nice under foot. Soft. It tickles a little. It's nicer than the carpeting in my house.'\n\nI pulled Celia toward me and embraced her. After not being able to hold her all day, she felt good in my arms. She sighed softly and rested her head against my chest. I didn't intend any more than holding her before heading back to the house. But my body reacted like it always did when I held her. I felt myself lengthen and within moments, I was hard and pressing against her. \n\n'Mmmmm. I like that. It feels nice,' she said softly. She pushed against my chest and broke our embrace. She turned away from me and walked a few feet then turned toward me again. She took something out of the pocket on her sundress and tossed it to me.\n\nI caught it instinctively. It was her panties. 'When did you take these off?' I asked with a grin.\n\n'Well, I didn't take them off for the doctor. When you went in to tell your father we were going for a walk.'\n\n'Why did you take them off?' I asked hopefully.\n\n'I thought it would be cooler. It is. Having a little air make its way up there feels good.'\n\n'What do you want me to do with them?'\n\nCelia didn't answer. She was looking at the flag. 'This is the third hole.'\n\n'Yeah. So?'\n\n'We're near the beginning of the course. Think they have a pool?'\n\n'Probably,' I replied. 'At least, it a good possibility.'\n\n'I want to go for a swim,' Celia said. 'Which way should we go?' she asked.\n\n'I don't know how the course is laid out. Let's follow the holes. It can't be too far.'\n\nCelia went for her sandals and slipped them on. I put on my sneakers and retied them. She didn't wait for me. I had to catch up.\n\n'We didn't bring a bathing suit or towels,' I said when I caught up with her.\n\n'You've never been skinny-dipping?' she asked.\n\n'The opportunity never presented itself. I've never gone swimming at night, either.'\n\n'When I was in high school, a couple of my girlfriends and I used to sneak out of the house at night during the summer. Make our way to a nearby golf course and go skinny dipping in the pool. It was exciting. Probably as much because we might get caught as anything else.'\n\n'Did you ever get caught?' I asked as I conjured an image of Celia and girlfriends swimming naked in a pool.\n\n'Just once. By someone dressed like a cook. He must have heard us. We weren't exactly being quiet. When we heard a door slam shut, we grabbed our clothes and high-tailed it out onto the course. He didn't chase us; he was an old guy. We watched him from behind some shrubs while we got dressed. As soon as we started to get dressed, Sarah cursed. She'd dropped her bra and panties when we started running. Eve and I giggled when we saw the old perv pick up her bra and panties and sniff them. I thought Sarah was gonna die! Then he stuffed them in his pocket and left with them!'\n\nWhen we spotted the clubhouse, we were able to cut across a fairway. Everything was mostly dark except the parking lot, which wasn't well-lit.\n\n'I don't see any cars,' I said when we got to the pool. 'I only see a few lights on the outside of the pro shop and the clubhouse. That looks like the locker rooms. It looks like no one is here.'\n\n'Let's go,' Celia said. She stepped out of her sandals, pulled her sundress up over her head then strode toward the pool. She took her bra off, turned around and tossed it back toward her dress.\n\nI grinned to myself as I watched her go. A few months ago, I never could have imagined Mrs. Heywood, the pretty teacher next door, going skinny-dipping. I stood where Celia's clothes were and stripped, adding mine to the pile. Celia opened the gate, leaving it open, and walked into the pool without breaking stride. I was right behind her.\n\nThe water was cool enough to feel good. We swam around for fifteen minutes or so before Celia left the pool. I stayed and swam around a little more but watched her closely. She got up and walked over to a set of shelves that were under an overhang and took several towels. She tossed a few of them on a chaise lounge and then spread one out at the edge of the pool. She sat on it with her feet in the water. I stopped in the middle of the pool and looked back to where she sat.\n\nDespite all the time we'd spent together, I rarely got an opportunity to openly admire Celia's naked body from a distance. I'd memorized every bit of it from up close. Seeing her naked from thirty feet away was a vision I wanted to remember forever. The moon was bright enough through the clouds that I could see reasonably well. Her wavy, dirty blonde hair hung straight, still dripping water. I was too far away and the light too poor to see her eyes, which I knew were a dazzling blue. Her breasts weren't large or small but fit her slender form perfectly, firm and still unaffected by time or gravity. Her areolae, already contracted while her skin dried, were dark, the nipples darker little balls. Even sitting, her belly was flat. \n\nWhile I watched Celia, she looked up at the sky. There wasn't much to see. The moon, obscured by the nighttime haze, was a just a glowing disk high overhead, lacking the details seen on a clear night. The haze hid any stars that might have been visible. After treading water for a few minutes while I admired her, I swam toward her. I stood in front of her in chest deep water. She flinched when I put a hand on her knee.\n\n'Your hand felt cold for a second,' she said.\n\n'Want me to take it away?' I asked.\n\n'Not at all. I like when you touch me.'\n\n'Good, I have plans for it.'\n\n'Oh? What kind of plans?' Celia grinned.\n\n'Something I've wanted to do for as long as I've known you,' I laughed. \n\nI grabbed the towel with both hands and pulled her a bit closer to the edge of the pool but not into it. I hooked my arms under her knees and pulled her a little further, forcing her to lean backward, supporting her upper body on her elbows while I kept her legs apart, my shoulders between them. \n\n'What are you doing?' she asked as she instinctively fought a little, probably thinking I was going to pull her into the pool. When instead, I nibbled on her inner thigh, she said, 'Oh!'\n\nI nuzzled first one thigh and then the other, alternating which I nibbled on as I worked my way toward my goal. I'd tried to do this before, but Celia always found a way to redirect me. This night, I was determined to take advantage of having her at a disadvantage. Celia was tense at first. But as I worked my way up her thighs, she relaxed. When I got so far up her thighs that I could go no further, Celia stiffened again.\n\n'Keith! Nnnn . . . uhhh!' she groaned as I flicked my tongue at the spot I knew hid her clit. After she took a deep breath, she tried to object again. But when the tip of my tongue parted her labia, whatever she tried to say dissolved in a soft moan.\n\nI took my time. Nibbling, licking, teasing her while she kept whispering, 'No. Stop! Don't! Uhhh! Oh, god, don't stop!' One moment she was trying to push me away, the next she was clutching my head, guiding my efforts. Celia was clearly ambivalent about what I was doing, though I didn't understand why. Because her physical responses clearly showed she liked it.\n\nI paid close attention to Celia's responses whenever we were together. I knew what she liked. What excited her. The signs that preceded her peaks. But her responses were different this time. More intense. She wasn't quiet when we were making love. Louder still when we fucked. But she was getting louder with each passing moment. One moment begging me to stop at the top of her lungs. The next begging me not to in a whimper. I was sure we didn't need to worry about disturbing anyone at the club. But not knowing the area, I was unsure whether there were any neighbors nearby. But honestly, I didn't care. I was glad to finally get to enjoy returning the oral pleasure she never hesitated to bestow upon me. And ecstatic that the first time I was ever allowed to, I was apparently doing something right.",
        "Celia drew a deep breath and fell silent for a moment. Her body stiff. The muscles in her legs were hard as rocks. I sensed, rather than heard or felt something in her. A groan is not the right word. It was more like a soft, distant roar, emanating from somewhere deep within her. Like the ocean crashing against a distant cliff during a storm.\n\nCelia's legs straightened suddenly and shook almost violently. Her upper torso twisted and undulated. Her piercing cry might have deafened me but her thighs, tightly squeezing my head, muffled it. Her legs recoiled suddenly without releasing their grip on my head. My ears burned so badly it felt like she tore them off.\n\nCelia had finally escaped my ministrations but not before I'd fulfilled my quest. My face was wet from my nose down. Celia was gasping for breath. Both hands were pressed against her sex, desperately trying to quell the sensations wracking her body. I'd tell you I was pleased with myself, but that would be understating how happy I felt. Celia had already given me so much. I was ecstatic about giving her what I could.\n\nWhile Celia's body slowly calmed, I climbed out of the pool and quickly dried myself. She was still trembling when I took her in my arms and carried her to one of the lounge chairs. \n\n'My god, Keith!' she said softly. 'Why did you do that?'\n\n'I thought you would enjoy it. You never hesitated to suck my cock. It was way past time to return the favor,' I told her with a smile.\n\n'You didn't mind? Being down there?' she gasped, clinging to me tightly.\n\n'Why would I? I asked. 'I've tried before but you always steered me away. Rather assertively.'\n\n'It's just . . .' her voice trailed off without finishing whatever it was she wanted to say. After a moment of silence, she asked, 'Is it always like that?'\n\n'Was that your first time, Celia? No one has ever done that for you?' Still trembling, Celia shook her head no. 'Honestly, I have no idea. It was the first time I've done it, too. My ex-girlfriend wouldn't let me. The first night we were together was the first time I experienced any kind of oral sex. It was so amazing, I had to return the favor.'\n\n'My husband wouldn't go there. Actually, he wouldn't let me take him into my mouth, either.'\n\n'My ex-girlfriend was kind of squeamish. She wanted nothing to do with oral sex. She never wanted a second round of sex, either.'\n\n'Keith, I don't want to talk anymore. At least not now. Make love to me.'\n\nWe spent the next couple hours on that lounge chair. The pool house was locked otherwise we might have showered. We went for a quick swim instead. The night was almost gone when we got back to the house. The sky to the east was gray instead of black. A few wispy cirrus clouds low on the horizon had a faintly pink tinge. We went around to the back of the house when we found the front door locked.\n\nOur return was awkward. My father was sitting quietly on the deck, having a cigarette. 'Where the hell have you two been?' he asked pointedly.\n\nI could always tell when my father was angry with me. He wasn't angry. Rather, I thought he sounded suspicious. I hesitated to answer for a moment. 'We went for a walk,' I told him. 'I guess we lost track of time.'\n\nCelia weighed in, trying to take the heat. 'It's my fault, Chet. I was feeling kind of down and wanted to talk. Keith was kind enough to listen. I haven't really had someone close to my age I felt I could talk to since I moved here. Keith has become a confidant this summer. He's a good listener.'\n\n'It's not entirely Celia's fault. I wasn't in a hurry to come back,' I said.\n\n'Celia, you should go get some sleep,' my father said. 'Keith, I want to talk to you for a minute.' \n\n'Okay,' Celia said. 'I'll see everyone at breakfast.'\n\nMy father watched Celia go inside. Once she was in the house, he turned his attention back to me. 'Where were you?' he asked as he exhaled the last drag of his smoke, snuffing the butt out in the ash tray he held.\n\n'We found our way onto Tilton Meadows and walked most of the course while we talked. We sat by the pool for a while.'\n\n'You went for a swim, too. I can smell the chlorine.'\n\n'We did,' I admitted.\n\n'Neither of you had a swimsuit. And your clothes aren't wet.'\n\n'We didn't have swimsuits,' I admitted.\n\nMy father looked down at the deck and shook his head. 'Should I be concerned about anything?' he asked when he looked back up at me.\n\n'There's nothing to worry about, Dad.'\n\n'I'm going back to bed. Try to get a little more sleep. You should get some sleep, too. The repair man is due at eight.' We headed for the house together. When we got to the door, he stopped and looked at me before he opened the slider. 'Does she look as good as I think she does?' He asked.\n\nI smiled. 'Better, Dad.'\n\n'Watch yourself, son.'\n\n'She's just a friend, Dad.' I assured him. I hated lying to him. But I didn't want him to worry. I was sure my mother would learn of when I'd come home. Where I'd been with Celia. And that we'd gone skinny-dipping.\n\n'Yeah, a friend you've seen naked,' were my father's last words.\n\nMy mother didn't wake me until after ten. The house was already cooling; refreshingly cool air was blowing out of the duct in my bedroom.\n\n'Come out and get some breakfast while it's still hot,' she said from doorway. 'The repairman left a little while ago. We should get moving if we're going to the beach club.'\n\nCelia had just sat down to eat when I got to the kitchen. She was already dressed for the beach club, wearing a coverup and shorts.\n\nMy father came in from the deck a moment later, carrying a cooler. 'Eat up and take a quick shower. I want to get going soon.' He took it to the kitchen and started packing it with food from the fridge. If he was upset with me about last night, I didn't detect it. I wolfed down the last of the omelet left on the stove with a glass of orange juice, then left to get ready. Other than Mom and Dad talking about what we were taking to the beach club, there was no conversation while I was in the kitchen. The conversation on the drive was relaxed. I wondered if my father mentioned my late return. He sometimes cut me some slack when I pushed my luck. \n\nThere wasn't much of a beach at the beach club, just a small sandy area on a large pond. It wasn't appealing. The water was a muddy orange-brown. It had a slight rotten eggs smell, like the well water at the house. Fortunately, there was also a large pool and a kiddie pool. My parents led the way to an area under a large oak where there were several already-occupied picnic tables and a couple empty ones. Many of the people already there had been at the house. Unsurprisingly, Katherine was there. It wasn't long before she was my constant companion. I could see Celia was amused at my exasperation. I did my best to be friendly but not too friendly. None of her friends were there until later, when her girlfriend Beverly showed up. I was going to be stuck with Katherine and her friend. Under the watchful eye of their parents. Not that they had much to worry about.\n\nDr. Chapman eventually convinced Celia to go for a swim. I was poolside hanging out with Katherine and Beverly. When Celia took her wrap off, almost everything stopped. The sleek, sapphire blue one-piece she wore was amazing. Katherine stopped talking midsentence. Only the little kids didn't check her out. Dr. Chapman smiled like a kid that found his every wish under the Christmas tree. \n\nI got something of a surprise later in the day. Katherine dragged me off to play catch with a Frisbee while Beverly was talking, arguing really, with her parents. While we were walking to an area devoid of people, she said, 'I saw you late last night.'\n\nI felt myself tense a bit but maintained my composure. 'Oh, where was that?'\n\n'Tilton Meadows,' she said simply. After a moment's hesitation, she continued. 'Beverly stayed over last night. My parents' house is in Brookside, on the other side of Tilton Meadows from here. We snuck out of the house to go for a swim. We saw you and Celia at the pool. We were going to skinny-dip, too. But Beverly didn't want to take her clothes off in front of people she didn't know.'\n\nIf I hadn't already been sweating profusely, I might have broken into a sweat. 'I don't know what to say.'\n\n'Do your parents know you and Celia are . . . together?' she asked. \n\n'Not yet,' I said softly.\n\n'Don't worry, I won't say anything to them. But how come she's hanging out with Dr. Chapman?'\n\n'We're keeping things to ourselves for the time being. Celia's our neighbor and a little older than me. Mom has tried to fix her up a couple times. This is one of those times. Celia's playing nice for my mother's sake. But she's already told me she's not interested in Dr. Chapman.'\n\n'It must be difficult to watch.'\n\n'I'm not enjoying it. In her case, I think she's amused by the attention you're paying me.'\n\n'You can relax, Keith. I knew you weren't interested in me yesterday. I didn't know why but I understand now. Celia's gorgeous,' she said softly. 'And if last night is any indication . . .,' her voice trailed off.\n\n'It's much more than just involved to me, Katherine. '\n\n'I hope we can be friends when we get to school in September,' Katherine said.\n\n'I don't see why not. We're not likely to see much of each other unless we make a point of it. Maybe we can have lunch or supper together sometimes.'\n\n'That would be nice. And it will help keep my father off my back,' she said. Then she smiled. 'Celia scared the shit out of Beverly last night. I was just jealous. Wishing it was me. It sounded like one hell of an orgasm!' Then she snatched the Frisbee from me and ran off a bit before tossing it to me.\n\nI felt much more at ease with Katherine the rest of the afternoon. She and Beverly left for the day at about four. We stayed until after we had dinner. \n\nAs dinner was being served, Dr. Chapman asked Celia if she was ready to go. She begged off politely, saying she wasn't up for it. When he asked what her plans were for the next day, she whispered something to him. They walked off a short distance and spoke for a few minutes. I didn't hear their exchange, but he didn't look happy. He left immediately, without saying goodbye to anyone.\n\nI was getting a plate nearby when Celia returned. My mother had an eyebrow up. 'You're not joining Harold for dinner?' she asked.\n\nCelia shook her head. 'Not tonight, Dottie.'\n\n'I'm sorry. I thought you and Harold would like each other.'\n\n'He likes me well enough,' Celia said.\n\n'What's wrong? He's always nice to the nurses at work. Not like many of the doctors.'\n\n'Of course, he is, Dottie,' Celia said without elaborating.\n\n'You weren't impressed with him?' my mother asked.\n\n'He's impressed enough with himself for both of us,' was Celia's reply. She had a grin on her face when she said it. I thought it was funny, too. Mom didn't.\n\nMy mother said something to Celia, but it too softly for me to hear it.\n\n'Well, he'd never get any of the nurses to screw him if he wasn't nice to them,' Celia said. She didn't raise her voice when she said it. But she didn't whisper, either. Nearly everyone heard it.\n\nMy father nearly choked on his hot dog and turned away, trying to hide the smile on his face. Several people made no such effort. One of the other women in attendance, who worked with my mother, laughed heartily, then said, 'I tried to warn you, Dottie.'\n\nI never told Celia about my conversation with Katherine. \n\nWe went into Augusta on Saturday. After spending some time on the riverwalk, my mother and Celia went shopping together. My father and I found a brew pub and watched a baseball game while Mom and Celia shopped. We had dinner out in Augusta and then went back to the house. Everyone turned in early. Celia and I stayed on the deck a little later, but we didn't go for another walk. It wasn't something we discussed. We both knew instinctively that it might raise eyebrows and suspicions.\n\nSunday, we stayed in. I basked in the central air conditioning, a luxury I wished we had at home. At five, Dad drove us to Augusta where we met Mr. Bogosian for our return home. When I watched my father and Mr. Bogosian talk, Mr. Bogosian was almost deferential to my father. I thought it was odd but I didn't think too much about it at the time.\n\nOnce home again Sunday night, Celia and I returned to our routine. Something had changed between us, though. Our bond was stronger. We spent nearly every night together. We even began doing some things in public together, though we kept it low-key. We grocery shopped together. We went to dinner a few times in neighboring towns. We went into Boston twice where we were sure not to see anyone we knew. We spent the day on the Freedom Trail and had dinner in a nice restaurant on one trip. On another, we went to Fenway where we saw the Red Sox drop a game to the Kansas City Royals. We drove to Cape Cod the first Saturday in August and got a room in Hyannis for the night. We spent Sunday at Craigville Beach. \n\nThe night we were driving back from Cape Cod, Jerry and Rebecca saw us drive by them at an intersection. They were headed the same way we were and fell into traffic behind us. Jerry said they didn't think anything of seeing us together at first. But when they saw Celia duck down and not sit back up, it didn't take much to figure out what Celia was doing while I drove the last few miles home. Especially since, as Rebecca said, 'Your driving got a little erratic.' \n\nCelia finally said the words I'd been hoping to hear while we were making love the night we returned from the Cape.\n\n'I love you, Keith,' she said breathlessly as we held each other at one point that night. She repeated it several times that night. \n\nI was ecstatic when I heard it. I could finally voice a sentiment I'd been struggling to suppress since coming back from Georgia. 'I love you, too, Celia. I think I have since the day we met.' We stayed up almost all night, making love. It was a sentiment we each expressed regularly the rest of the summer. And every time we talked or saw each other after I returned to school.\n\nI was a zombie when I went to work the next morning. Mr. Nelson interpreted my lethargy as being sick and suggested I go home for the day, offering to cover for me. I took him up on the offer and spent most of the day in bed with Celia. Mostly, we slept. Mostly.\n\nTwo weeks before Labor Day. My father called. 'Ready to go back to school?' he asked to open the conversation.\n\n'Looking forward to it,' I assured him. Being away from Celia was going to be difficult to bear. I kept that to myself.\n\n'Do you think you can figure how to get there on your own?' he asked. 'Mom can't get away; she has to work the holiday weekend. I leave for equipment checkouts at vendors on Wednesday and can't get back until the Saturday after the holiday. I'm sorry but it can't be helped. I wanted to see you again before school started.'\n\n'One way or another, I can get there, Dad. I'll miss you guys, but I'll be okay.' \n\n'Take your truck, if you have to.'\n\n'Maybe, but I probably can't keep it at school. I had to apply for a parking permit for this year last semester if I wanted to have a car on campus this year. There aren't many student-parking spaces. They go fast.'\n\n'See what you can do. Take a taxi. Hire a limo if you have to,' he said with a laugh. 'I'll cover the cost.'\n\n'That would make a splash,' I laughed. There were kids who arrived at school in Mercedes Benzes. One I'd seen freshman year arrived with his parents in a Bentley. But I already knew who I'd ask to take me to school. And I was sure she'd be happy to bring me.\n\nCelia took me to school. I wanted to close the door for some intimate time before she left but dropping me off was all that happened that day. It wasn't long before we were both busy with school. We talked on the phone frequently. We had a weekend together in late September and two more in October. In November, I only saw her during Thanksgiving. I missed my parents that holiday, but I spent Thanksgiving Day with my grandparents, paternal in the morning, maternal later in the day. When I left my grandparents' house for home, I went home first and called my parents. Then I went to Celia's. Friday, Saturday, and Sunday were spent with Celia in the guest room at my house.\n\nMy parents flew me to Georgia for Christmas break. I didn't see Celia at all; I returned directly to school for the start of the semester, catching a ride from the airport on a shuttle bus the college provided. We talked regularly but couldn't seem to coordinate any time together. My mother returned home a couple weeks before spring break while my father remained in Georgia to wrap up his project. Mom picked me up at school to take me home for spring break. I looked forward to seeing Celia, though I knew we'd have to be careful now that Mom was home.\n\nWhen I got home, a minivan was parked in Celia's driveway. At first, I thought she had family visiting. But then I saw the real estate agency sign posted in front of the house. A sold placard attached to it. \n\nI was confused. My stomach flipped. A moment later, it felt like my guts had been torn out. My mother picked up on my distress immediately.\n\n'Is something wrong, honey?' she asked.\n\nMy first instinct was to tell her everything was fine, but I knew she wouldn't buy it. Instead, I asked, 'Celia moved? I was looking forward to seeing her. Where did she go?' My fervent hope was that she had just moved across town.\n\n'I don't know,' my mother replied. 'The house was empty and there was an 'Under Contract' board under the For Sale sign when I got home.' Mom was quiet for a moment. 'I understand you and Celia grew close last summer.'\n\n'We did, Mom. I saw more of her than I saw of my friends. Mostly because of the summer work schedules we all had. Jerry and Rebecca were the only ones I saw frequently. It was weird being home alone all the time. Celia filled a void with you and Dad gone.'\n\n'Your father told me about your walk with Celia while you were in Georgia last summer.' I heard the disapproval in her voice. 'I hope swimming was all you two were up to.'\n\n'Mom, there's nothing you need to worry about,' I said. Especially now, I thought. I'm not convinced she bought it. Maybe she gave me benefit of the doubt. She had no reason not to. I'd never been a difficult kid. Never got in trouble. Did well in school. Sure, they weren't always happy with me. But I was a good son, even if I wasn't always an angel.\n\nI felt lost for the entirety of spring break. I had no idea where Celia went. Or why she hadn't said anything. She called only a few days before I went home for spring break. The last words we exchanged were, 'I love you.'\n\nThings didn't get any better after I returned to school. I managed to make it through the semester without my hurt and anger interfering with my responsibilities. But I know my friends at school could tell something was wrong. I was better senior year, but I dropped some of my responsibilities. I relinquished my position as newspaper editor but stayed on as a sportswriter and returned to being a stringer for the local newspaper. I dated but didn't make a connection with any of the girls I went out with. Katherine became my closest friend and confidant. She quickly figured out I wasn't seeing Celia anymore, but we didn't talk about it in any depth. No, I never slept with her. I think Katherine would have been receptive to an overture. But I couldn't let go of Celia.\n\nI knew what I wanted to do after graduating but struggled to find work. I worked as a stringer for almost two years, producing stories and photos for several newspapers and regional magazines around Connecticut, Massachusetts, and Rhode Island. Eventually, I caught on with a newspaper in southern Connecticut. I wasn't happy there. I wanted to do something besides cover sports, but the editor wouldn't give me any other assignments. Or consider any I proposed. Shortly before I turned twenty-five, my paternal grandfather came to my rescue, though not in a way I liked. He passed away."
    ],
    "authorname": "carrteun",
    "tags": [
        "intercourse",
        "masturbation",
        "oral",
        "skinny dipping"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/fantasy-loss-and-summer-love"
}