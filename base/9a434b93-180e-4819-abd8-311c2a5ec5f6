{
    "title": "Firebrand",
    "pages": [
        "CHAPTER 1: STRONG HAND \n\nThe cold water ran over Moralez's prosthetic fingers as he held them beneath the flow of the faucet, turning them over, flexing them as the liquid poured across the tread-like pads that helped them grip objects. He could feel the chill on the black polymer that encased the machinery and electronics within, as if it was his own skin, the sensation perfectly mimicking that of the limb that he had left behind on Kruger III. \n\nHe brought his toothbrush to his mouth, peering at his grizzled face in the mirror as he leaned over the bathroom sink. His tanned skin was a patchwork of healed scars, and the same was true all over his body. People often told him that he looked like he had been through a blender or a meat grinder, but he had no interest in corrective surgery. The doctors on the station could have him looking as fresh and as smooth as a newborn in an afternoon, and the UNN would pay for it. He was a veteran, after all. But each of those scars told a story, each one of them had been earned. Some men wore their medals on their chests, others wore them on their skin. \n\nHe touched the rubbery pads of his fingers against his cheek, feeling the stubble beneath them, and wondering if it would be worth shaving before heading out. Making himself presentable for official functions beyond wearing a clean uniform was a little pointless. He shifted his weight, the gel layer that cushioned his prosthetic leg where it met what was left of his thigh chafing a little. Maybe he'd get Kurtz to take a look at it when he had some time off, the engineer always knew what minute tweaks and adjustments to make. \n\nIn total, Moralez had lost three limbs during his military career. Both of his arms had been blown off by a grenade that had gone off at an inopportune time, and the leg had been severed by the twenty-millimeter cannon of a gunship. All in all, it had been a pretty shitty tour. Rehabilitation had been one of the hardest things that he had ever done, but now he was back on his feet, fully operational. \n\nKaisha leaned in through the bathroom door as he spat out a mouthful of mint-flavored toothpaste, glancing at his reflection as she buttoned up her lab coat, her ice-blue eyes meeting his. At eight feet tall, she might have needed to duck in order to fit through a normal-sized door, but this was her apartment. It was Moralez who had to stand on a crate to reach her oversized sink, as everything was scaled up to accommodate her species. Co-habitation had been a bit of a problem at first, but it was easier for him to climb up onto an oversized couch than it was for her to sit on an undersized one. Besides, he couldn't complain about the extra living space. His old quarters would have fit into hers thrice over. \n\nShe was a Polar, to be exact, a race that hailed from the frozen ice cap of her homeworld. A coat of thick, downy fur covered her body from head to toe, its snow-white color broken up by natural camouflage that resembled dark coffee stains. Her layer of insulating fat gave her a soft, voluptuous figure, the weight settling attractively in all of the places that might entice a man. Her abundant chest strained against the fabric of her lab coat, the subtle paunch of her belly protruding over her waistline, her rear filling out her skirt. She stood on a pair of digitigrade legs, her paw-like feet tipped with black claws, a long tail like a feather duster waving back and forth behind her. Her face was human enough to be familiar, save for the flat brow, and the pink, feline nose. \n\n\"I might have to work late tonight,\" she warned, pulling down her black skirt a little where it was riding up her round thighs. \"One of my patients has been having issues with his prosthetic eyes, he says that they won't focus properly, but Kurtz and I can't find any issues with the lenses. It might be psychosomatic, or maybe a problem with the neural link. They can be finicky like that.\" \n\nIt was Kaisha who had seen Moralez through his difficult rehabilitation, and at the end of the process, they had become much more than doctor and patient. Her expertise when it came to healing maimed soldiers was unparalleled, her natural Polar intuitiveness and compassion making her the ideal person to guide the damaged on their road to recovery. \n\n\"You'll figure it out,\" he replied, the electric motors in his hands whirring as he cupped them beneath the water. He brought them to his mouth, rinsing as his alien partner watched, the round ears that protruded from her slate-grey hair flicking idly. \"You always do.\" \n\n\"Thanks for the vote of confidence,\" she chuckled. \"Today is your big day, right? You told me something about lots of ambassadors showing up all at once?\" \n\n\"Yeah, there's a big Coalition meeting happening,\" he replied as he hopped down off his crate. While his arms were modeled to closely mimic their organic counterparts in both form and function, the leg was little more than a skeletal frame, molded polymer housings concealing motors and batteries. His foot was a stylized, curved piece of carbon fiber that was flexible and springy, able to absorb impacts and push back realistically when he walked. It was little more than a skid, but it did the job admirably, affording him enough sensation to feel the cool tiles on the bathroom floor. \n\n\"The Coalition security council is meeting today to discuss admitting some new members to the alliance,\" he continued as he reached for a towel. \"The Araxie joined not long ago, and now we have the Valbarans and the Jarilo colony making bids to join. Nobody really knows much about the Valbarans, they live right out on the edge of Coalition space, and they've never been as far as the station before. It will have taken their delegates about six months to get down here. I'm curious to see what they look like in person.\" \n\n\"And contact with them was an accident?\" Kaisha asked. \n\n\"Yeah, that's what I was told. A long-range patrol that was out scouting for Bugs stumbled across them and helped them defend their planet against a hive fleet. One in a million kind of thing, the right place at the right time. The way I heard it, if the jump carrier hadn't turned up when it did, they might have missed Valbara completely. Their entire civilization would have been Bug chow.\" \n\n\"And the Jarilo colony?\" Kaisha asked, her tone becoming a touch less playful. She knew his history well enough, she knew how many years of his life he had dedicated to warding off the encroaching insectoids, how many friends and colleagues he had seen slain by their Drone foot soldiers. His injuries had been incurred during the campaign to free the Kruger system from their clutches, he had very nearly given his life in the endeavor. \n\nThe Betelgeusian hive fleets could appear anywhere, at any moment, exiting superlight and attacking whatever habitable worlds lay in their path. Their ruthless life cycle demanded endless expansion, forcing the fleets to either found new colonies or to attack one another like starving rats. They were as pitiless and as aggressive towards one another as they were to the inhabitants of the planets that they sought to claim, thinking nothing of genocide, and having no discernible rules of engagement. Every encounter with them was a bitter battle to the death. \n\n\"They haven't told me jack about them,\" he replied, Kaisha stepping out of his way as he exited the bathroom with his towel slung over his shoulder. \"You'd think that the Admiralty would want their security chief to be properly informed, but it's all very hush-hush. Hard to tell if it's classified stuff, or if they just don't want word getting out that they're even considering the application. All I know is that one of their representatives will be arriving and that I need to keep the guy from getting lynched. I pity whoever drew the short straw on that one, lord knows the Bugs can't speak for themselves. Literally...\" \n\n\"Friendly and Betelgeusian are not words that one hears together frequently,\" Kaisha added. She leaned against the door frame and crossed her arms, watching as he moved over to their massive bed and began to pull on his uniform.  \n\n\"Of course, they can't keep a whole fleet quiet,\" he said as he zipped up his blue coveralls. \"Some of the people who came back from Jarilo talked, but it's hard to say how much of that talk is true, and how much is just hearsay. Some of it sounded downright ridiculous, like colonists coexisting with the Bugs on the planet. Doesn't matter how Earth-like it is, or how cheap the real estate, ain't no way anyone would willingly set up shop anywhere near a known Bug colony.\" \n\nShe marched over to him and straightened his collar, interrupting his spiel as he gazed up at her, his face scarcely at chest height to the towering alien. Her hands were large enough to encompass his head like a cantaloupe, her thick fingers tipped with fleshy pads, not unlike his own rubbery grip surfaces. Each digit ended in a wicked, black claw, curved and sharp like the talon of a predatory bird. She was careful, gentle, however. She could cradle a baby in those hands, and he wouldn't spare a thought for its safety. \n\nHe reached up and ran his prosthetic fingers through the fur on the back of her hand, finding it fluffy and silky, its texture calming his nerves. Kaisha cupped his cheek in her palm and leaned down to plant a lingering kiss on his forehead. \n\n\"You'll know the truth soon enough,\" she said, pulling away and releasing him from her grasp. \"Now, I mustn't dawdle. If I'm back later than you, fetch me something to eat, alright?\" \n\n\"Sure thing,\" he said, watching as she turned towards the door to their apartment. How did the old saying go? 'I hate to see you go, but I love to watch you leave.' She paused at the door, looking back over her shoulder to catch him gazing longingly at her shapely rear through the clinging fabric of her skirt. She was as wily as ever, always seeming to know what he was thinking. \n\n\"Get me a longburger from Kofe's shop, and I'll do that thing you like when I get home,\" she added with a sly smile. He gave her a mock salute, and she stepped out onto the torus. \n\n*** \n\nMoralez weaved through the throngs of people that clogged the station's walkways, his brain filtering out the roar of muddled conversations through habit, like the sound of the surf or the pattering of rain on a roof. There were humans in both civilian and military garb, the blue uniforms of Navy personnel and the yellow overalls of engineers identifying them. The aliens stood head and shoulders above their smaller counterparts, the crowds parting to let them pass. \n\nThe reptilian Krell were easily visible due to their long, crocodile-like snouts, and the layers of spinach-green scutes that armored their hunched bodies. At around fifteen feet from their noses to their long, dragging tails, they were the largest species in the Coalition by far. They were much friendlier than their imposing appearance would suggest, almost to a fault. They were nude, save for the poncho-like uniforms that they wore, having no external genitalia to cover up. As amphibious creatures, they spent much of their free time swimming in the station's pool, or warming themselves beneath heat lamps in their specially-designed barracks. When it came to combat, they made fearsome warriors. Their natural durability and their protective instincts had seen many a Marine whisked from the brink of certain death, and they could also carry heavy weaponry that was too large for any human to wield, making them somewhat akin to walking pillboxes. \n\nThere were a few errant packs of Borealans, too, moving in tightly-knit groups of half a dozen or more. They were similar in appearance to Kaisha, save for their more sparse fur and their muscular physiques. They hailed from the equatorial region of the planet, where it was far hotter than at the poles, and so they lacked the thick fur and insulating blubber of their Northern counterparts. Their penchant for violence and their physical prowess made them ideal shock troopers, but Moralez had also found them to be loyal, dependable soldiers. He had become more familiar with their savage, pack-based culture than he would have liked, but the majority of them were able to suppress their more confrontational impulses through socialization and training. \n\nThe torus extended in both directions, its subtle curvature only noticeable in the distance, where it arched out of view beneath the painted ceiling. The mural was made to resemble a blue sky with fluffy, white clouds, the large lamps that were spaced out at intervals approximating the heat and light of a sun. Everything about the Pinwheel, as it was colloquially known, was designed to trick the mind. The hull of the station to either side of the street was lined with the sculpted facades of buildings, and the walkway was decorated with planters that housed all manner of trees and shrubs. There was even an artificial breeze, everything that a weary sailor might need to get all of the benefits of shore leave without actually having to ship down to a planet. It was almost enough to trick one into believing that they were on a city street, rather than inside a giant, rotating habitat in deep space. Almost... \n\nMoralez was moving through the tourist quarter as he made his way to the military quarter where he worked. There was something that he needed to pick up before he reported in for duty today. Over time, the Naval base had become as much a hub for transportation and tourism as it was a military installation, and so the Admiralty had allowed civilians to open stores and businesses in a designated quadrant. There were restaurants, bars, clothing outlets. Pretty much anything that a traveler or an off-duty Marine might need. \n\nThere were a few hey Chief's and morning Sir's as he threaded through the crowds. As the station's security chief, he was acquainted with most of the facility's permanent residents, and his singular appearance made him easy to pick out in a crowd. \n\nHe arrived at a small store with a colorful awning, its imitation brickwork carved from the station's white hull material. The windows that looked out onto the street displayed all manner of strange artifacts. There were ornate bowls, primitive rifle stocks, and trinkets that had been engraved with beautiful and complex reliefs. There were hunting scenes featuring alien animals, intricate floral arrangements, and geometric patterns of impressive complexity. \n\nThe bell on the door rang as he opened it, stepping inside the cramped store to see shelves lined with similarly artistic creations. It was narrow enough that two men would have had difficulty standing side by side, and a Krell wouldn't have been able to fit inside at all. The ceiling was maybe eight feet high, giving the room a squashed feeling, like it was being crushed between the two adjacent buildings. The Pinwheel had a finite amount of living space, and so people had to make do with whatever they could get. \n\nAt the far end of the narrow room was a faux-wood counter, and behind it was a door, from which emerged a somewhat flustered Borealan. She had red hair and smooth, pale skin on her face. She wasn't wearing the blue uniform of a Shock Trooper, but rather civilian clothes, a tank top and a pair of shorts that suggested her work area might be rather hot and cramped. \n\nShe wiped her brow on the back of her furry hand, her orange coat extending to her elbows, where it tapered into clean skin to make it look as though she was wearing fluffy elbow gloves. He knew that the same would be true of her legs, where the fur would end at her knees. She took up position behind the counter, her long, striped tail flicking back and forth as she fixed her round ears on him. \n\n\"Security Chief,\" she began, \"welcome!\" \n\n\"Hello, Zhari,\" he replied, admiring one of the decorative plates as he made his way over to her. \"Is it ready? I'm afraid I'm in a bit of a hurry today.\" \n\n\"Of course,\" she replied, bowing her head in a sign of deference. \"Please wait here, I shall fetch it for you.\" \n\nWith that, she scurried away to the back room, leaving the door ajar. Zhari was one of the few Equatorials on the station who had taken up a trade, rather than serving as an auxiliary in the Navy. She had a knack for engraving and damascening, which was a traditional practice for the aliens, and her services had become quite popular with some of the Marines recently. It was a melding of human and alien cultures that always put a smile on his face, the same way that some of the feline aliens were starting to appear with elaborate tattoos. \n\nShe reemerged a moment later, holding a handgun in her furry paws. She passed it to him over the counter, waiting with bated breath as he began to examine it. The weapon was huge by human standards, yet not large enough to be wielded comfortably by a Borealan or a Krell. His prosthetic hand molded around the familiar contours as though it had been made for him, because it had. The XMH, or X-Species Modular Handgun, was the sidearm variant of the standard-issue rifle that was used by the Coalition. It fired a tungsten slug from a receiver that functioned like a railgun, which was then captured and accelerated by magnetic coils in the barrel. \n\nMoralez's prosthetics gave him greater strength and stability than that of their organic counterparts. He had been able to modify his sidearm to be larger, heavier, and harder-hitting than any that an intact human could comfortably wield. The barrel was longer than average, packed with dense coils that accelerated the projectile to impressive velocities, the servos in his arm the only thing keeping the recoil remotely manageable. It was a real hand-cannon. \n\nThe matte black of the polymer grip was now overlaid with white enamel, inlaid with a golden Marine Corps logo. The receiver and part of the barrel's housing were damascened, a process by which precious metals were carefully hammered into the underlying material to create intricate patterns and scenes that almost resembled the tapestries of ancient times. Golden floral designs and creeping vines twisted around the barrel, leading into a hunting scene on the receiver, the trees of a forest parting to reveal a human with his rifle shouldered. The detail was incredible, almost microscopic, accented with silver where appropriate. \n\n\"Phenomenal work, Zhari,\" he muttered as he turned the weapon over in his hands. \n\n\"You honor me, Security Chief,\" she replied with another bow of her head. \n\nHe drew a magazine from the pouch on his belt, slotting it into the well, then stowed the weapon in its holster. Officers were permitted to carry loaded weapons on the station, and the battery was currently switched off, which served as the handgun's safety. \n\n\"Maybe I'll pop off one of my arms and have you decorate that one of these days,\" he said, flexing his fingers. \n\n\"You jest, Security Chief, but I would not turn down the challenge.\" \n\n\"I don't doubt it,\" he chuckled, turning towards the door. \n\n*** \n\nThe sea of casual clothes gave way to an ocean of blue and yellow as Moralez arrived in the Naval quarter, where the barracks, armory, and other military facilities were housed. Formations of Marines jogged past him, wearing their black combat armor, on their way to drills or deployments. The massive hangar doors broke up the more spartan and functional structures in the hull of the torus, leading out into cavernous bays that could accommodate vessels as large as frigates. These were not even the biggest, the Pinwheel was one of the few installations that had dry docks for servicing jump carriers and battleships outside of the orbital shipyards where they were originally constructed. \n\nThe tablet computer in his pocket was already blowing up with alerts as he arrived at the security building, stepping through the automatic doors and into the lobby. It was decorated with the same matte white that was seen throughout most of the station, a few ferns in planters breaking up the monotony here and there. He greeted the two secretaries who were sitting behind monitors at their desk, then continued on his way, passing by waiting rooms and the employee lounge. The torus was far deeper than it looked from the street, and the buildings could extend quite a distance into its hull. ",
        "Moralez didn't really think of himself as a cop, as much as the building resembled a police station, and as evocative as his title was. He was responsible for keeping the station secure and ensuring the safety of the people on it. He deployed teams of MPs to break up bar fights and to drag the offending personnel to the brig, he dealt with organizing the station's defenses during an enemy attack, and he was entrusted with keeping everything running smoothly. \n\nHis job was akin to balancing spinning plates. The Pinwheel was in a perpetual state of carefully moderated chaos, it was as large as a small town, with tens of thousands of people passing through in a given week. Soldiers, aliens, civilians. He was responsible for every person who set foot here, and every ship that docked. \n\nIt was early in the morning, but he could see that the workday had already begun. There was an especially surly Borealan sitting on a chair that was far too small for him in one of the waiting rooms. He was of the Equatorial variety, his smooth skin a dark shade of caramel, his fur a sandy blonde where it was visible beneath his Navy jumpsuit. His furry hands were concealed beneath a pair of specialized manacles that almost resembled a child's mittens, linked together by a sturdy chain, preventing him from making use of his claws. The room was being guarded by two MPs who were wearing white helmets and sashes on top of their black armor. Judging by the way that his nose was running and his puffy eyes were streaming tears, he had recently been maced. \n\n\"What have we got here?\" Moralez asked, stopping by the door to get a look at the alien. \n\n\"Drunk and disorderly, Chief,\" one of the MPs replied from beneath his full-faced helmet. \"Once we're done processing him, we'll throw him in the drunk tank until Raz can come down and pick him up.\" \n\nThe alien's ears flattened against his straw-colored hair at that, and he gazed down at the floor dejectedly. Raz was the unofficial Matriarch of the station, the most respected among the Equatorials, and the highest-ranked in their pack structure. She trained the newcomers, tempered them so that they could interact with humans, taught them how to suppress and redirect their more savage proclivities. Moralez had quickly discovered that having her pay troublemakers a visit was a far more effective form of punishment than any pay dock or suspension that he could mete out. \n\n\"Very good,\" he replied, \"I'll be in my office if you need anything.\" \n\nHis office was at the far end of the hall, and he entered through the sliding door, flopping down into a chair in front of a bank of monitors. The room was sparsely furnished, but he found that the cramped space helped focus him. This was his control center, the readouts displaying information on the station and its operations. He fished his tablet out of his pocket and began to scroll through his alerts. It was mostly mundane stuff, but there was one alert requesting that he put a call through to the Admiral as soon as he arrived at work. There was always at least one of them on the station at any time, and they were the highest authority in the Navy. \n\nHe wasted no time, tapping into the vidphone on his desk and fiddling with his collar for a moment. Before long, a man wearing a pristine, white uniform appeared on his monitor from the waist up. The Admiral's breast was adorned with colored ribbons and UNN insignias, his matching cap sporting the organization's logo emblazoned in gold above the rim, a globe contained within a wreath. He was an older man, his clean-shaven face weatherbeaten, his blue eyes cold and intense beneath a pair of bushy brows. \n\n\"You asked to see me, Admiral?\" Moralez asked. \n\n\"Good morning, Chief Moralez,\" the Admiral replied curtly. \"Our timetable has been moved up, some of the ambassadors will be arriving a few hours earlier than anticipated. I don't think I need to tell you that I expect this security council meeting to go off without a hitch. I don't want so much as a road bump, you understand me? We have potentially valuable new allies petitioning for entry into the Coalition, and we need to show them that we run a tight operation, that we're as competent as they've been led to believe. Appearances are everything.\" \n\n\"Yes, Sir,\" Moralez replied. \"I've already made arrangements to see to the security needs and accommodations of the ambassadors.\" \n\n\"There's something else,\" the Admiral continued, his tone becoming somewhat dour. \"You were informed that a representative of the Jarilo colony would be attending the conference, is that correct?\" \n\n\"Yes, Sir. Although I have to say, I didn't quite know what to make of it. I assumed that we'd be needing some extra security, so I saw to that already.\" \n\n\"I'm afraid that we may need some...special accommodations for this delegate,\" he continued. Moralez cocked an eyebrow, it almost sounded as though the Admiral was reluctant to give him any more information. \n\n\"How so, Sir?\" \n\n\"You were told that the ambassador would be representing the Betelgeusian hive on Jarilo, but not that the ambassador hailed from that same hive.\" \n\n\"A...Bug ambassador, Sir?\" Moralez asked in disbelief. \"You want to bring Bugs onto the station?\" \n\n\"Watch your tone, Chief,\" he snapped. \"It was not my decision alone, and it was not made lightly.\" \n\n\"Of course, Sir, I apologize. It just...caught me a little off-guard is all.\" \n\n\"In all fairness, I reacted the same way when the idea was proposed,\" he continued. \"There will be no Betelgeusian entourage, a single Bug will be traveling to the station under heavy guard, and it will sit in on the security council meeting in order to plead its case. It will be staying on the station for the duration of the proceedings, likely several days. When it arrives on the station, it will be transferred over to the custody of your security team, and you will henceforth be responsible for its safety. Keep the damned thing out of sight of the general population where possible, we don't want to start a panic.\" \n\n\"Yes, Sir. If we need to move it around, we can access the maintenance tunnels and keep it off the torus. I'll put it in one of the vacant apartments under armed guard, get my guys to keep an eye on it.\" \n\n\"I've read through your service record, Chief,\" the Admiral said as he shifted his weight in front of the camera. He must be standing. \"You're surely aware of the animosity that many in the Coalition feel towards the Betelgeusians?\" \n\n\"That's an understatement, Sir. Practically everyone on the station has lost a friend or a colleague to them.\" \n\n\"Indeed. Nothing can happen to this ambassador, is that understood? Allying ourselves with a Betelgeusian hive might sound insane, but it represents a significant security interest for the Coalition, not to mention lasting peace on Jarilo. If we can gain access to their technologies and the inner workings of their hives, then that knowledge can be applied to better exterminating their cousins.\" \n\n\"If I may ask, Admiral, what's the situation on Jarilo? I've heard rumors, but I don't know what to believe. Any information that you can give me might help me do my job better.\" \n\nThe Admiral paused to consider for a moment, his wrinkled brow furrowing. \n\n\"Very well, I suppose there's no reason to refuse your request this late into the game. Jarilo is a remarkably Earth-like planet that was recently discovered by survey vessels, a veritable Garden of Eden. The surveyors also picked up signs of Bug activity, and so a fleet led by the UNN Thermopylae was quickly dispatched to claim it. They arrived before the Bugs had landed all of their troops and before the orbital defenses had been deployed, and were able to destroy three hive ships in the ensuing engagement. This starved the Betelgeusians of the resources and manpower that they required to establish a self-sufficient colony, so I'm told. There were a series of ground battles in which the enemy exhausted the remainder of their resources, and when they reached a stage where their defeat was inevitable, they surrendered unconditionally.\" \n\n\"They surrendered, Sir?\" Moralez repeated in disbelief. \"Will all due respect, I've seen Drones that had been cut clean in half by anti-personnel mines drag their bodies across the battlefield in an attempt to reach our lines, I can't imagine that a hive would ever surrender. I'm not sure they're even sentient, they're just mindless insects. Besides, how would they communicate that surrender? They lack vocal cords, and they have no written language. They only communicate through pheromones.\" \n\n\"As you may know, Betelgeusian hives war amongst themselves as much as they war with us,\" the Admiral explained. \"I am told that, in rare circumstances, a hive may overcome another without actually destroying it utterly. In such a scenario, the defeated hive offers itself to the victor in the form of genetic material. If they fought well, then their genes might be of benefit to the conquering hive, and can thus be incorporated. This ensures the survival of their lineage.\" \n\n\"So that's what happened on Jarilo?\" Moralez mused, scratching his stubbly chin with his prosthetic fingers. \"The Bugs were put in a position where they were exhausted of resources, and then gave up, expecting us to assimilate them?\" \n\n\"I suppose they're getting what they wanted if they're petitioning to join the Coalition,\" the Admiral added. \"In a way, we'll be assimilating them into our own hive if we deem them to be of use to us. As for how they communicated their surrender, that's...a little more complicated. This information is on a need-to-know basis, so I don't want you repeating it. They took a Marine captive, one Sergeant Walker, and performed some kind of invasive medical procedure on him that gave him the ability to sense their pheromones. Over the days that he was kept in their hive, he learned to speak their language, if you can call it that. He delivered their surrender, and acted as a mediator in the aftermath.\" \n\n\"A turncoat, Sir?\" Moralez asked suspiciously. \"How can they be sure of where his loyalties lie if the Bugs were fiddling around in his head?\" \n\n\"No, at least that's what the UNNI shrinks reported. His loyalties were certainly split, but they judged him to be of sound mind, despite the alien sense organ that the buggers had wired into his brain. Walker won't be serving as the ambassador, however. The hive has birthed a new caste dedicated to the diplomatic role, a Diplo-bug, if you will. I am assured that this...creature, has the ability and the authority to speak on behalf of its people.\" \n\n\"And you want me to prevent the first Borealan that sees it from swiping its head clean off its shoulders?\" Moralez asked, leaning back in his chair. The Admiral nodded in reply. \"Understood, Sir. I'll have a team guarding it twenty-four seven, people I trust. I have a couple of guys in mind who fit the bill. One more thing, Sir, if I may?\" \n\n\"Go on,\" the Admiral urged with a nod. \n\n\"There aren't...colonists living on Jarilo, are there?\" \n\n\"Well, we certainly wouldn't cede such a valuable planet to the Bugs, regardless of how friendly they proved to be. Jarilo is ours, and it's currently undergoing colonization. The Bug hive exists there with our permission, and the people living there are quite safe. If the fleet stationed in orbit hears so much as a peep from our guests, they're prepared to bring the boot down, as it were.\" \n\n\"That sets me a little more at ease, Sir.\" \n\n\"Very good, Security Chief. The first ambassador will be arriving at oh-nine-hundred hours. And, Chief? Do give the Valbaran delegation a bit of a show. They've never visited the station before, and first impressions count.\" \n\n*** \n\n\"This is flight control,\" a female voice rang out over the comms channel, Moralez interrupting his work to turn his attention to one of his monitors. \"The Elysian vessel has exited superlight in proximity to the station, Sir,\" the operator announced. \"Shall I patch the external camera feed into your terminal?\" \n\n\"Roger that, flight control, I'd like eyes on them. Get a tug out there and guide the Elysians in, I wouldn't trust them to drive a forklift, never mind what appears to be a...frigate? What the...\" \n\nThe feed from one of the cameras that was mounted on the station's exterior displayed in a window on his screen, and he watched as the angular vessel righted itself after its jump, the innumerable thrusters that were spaced out along its hull flaring with jets of blue hydrogen flame. It had once been a UNN railgun frigate, that much was obvious by its one hundred and fifty-meter profile, its armored plating arranged to provide a low radar cross-section. There were dome-like structures along its length that would open up to reveal the railgun batteries beneath, the windows along the subtly raised bridge near the aft catching the light from the system's star. The large main engines were located at the aft, currently out of view. But where once it would have been painted with a black stealth coating made from radar-absorbent materials, it now sported a garish red and gold, decorated with traditional Elysian hunting scenes that flowed across its hull like a tapestry. The aliens had apparently chosen flair over practicality. It was an older model, a junker by modern standards, but its owners might not know or care. Borealis was somewhat of a backwater, they had only recently begun manufacturing black powder weapons by the time the UNN had made contact with them, and the Patriarch who ruled Elysia liked his toys. The territory had been assembling a somewhat less than regulation fleet as of late, mostly sourced from disreputable used starship dealers. The UNN had it on good authority that the dealers were selling on many of the ships that they had been contracted to scrap. \n\n\"Yes, Sir,\" the woman in the station's control center replied. \"I can have them towed into bay seventeen, but wouldn't it be prudent to have them send a shuttle over instead?\" \n\n\"No, I want our techs to look her over when she lands,\" Moralez replied. \"I'll sleep better if I can be sure that the ambassador will make it back home without the damned thing falling apart.\" \n\n\"Roger that, Sir. I'll contact engineering and have them dispatch a team to inspect the vessel.\" \n\n\"Just make sure that they arrive maybe an hour after the ship lands, we wouldn't want to inadvertently insult the ambassador. I'm on my way to bay seventeen, let the Admiral know that our guests have begun to arrive.\" \n\n*** \n\nThe cavernous hangar bay reminded Moralez of an underground cave, but made from silver metal and white hull material rather than uneven rock, the echoing of his footsteps only adding to that illusion. The ceiling must have been sixty feet above his head, and the distance between the flickering force field that kept the atmosphere in and the back wall must have been a good six hundred feet. There were elevated catwalks on the walls, engineers in their yellow jumpsuits walking back and forth along them, and embedded in the ceiling above were bright lamps spaced at intervals that lit the whole space in a pale glow. \n\nBeyond the thin barrier of energy, he could see the velvet darkness of space, the stars seeming to rotate past sluggishly as the habitat spun to simulate gravity. Navy vessels had AG fields that generated artificial gravity, but the torus was simply too large for such conveniences. They had to rely on the power of physics alone. \n\nThis bay was mostly empty save for a solitary dropship that was currently refueling, a team of engineers milling about the vessel, glancing at tablet computers as they ran checks. There was a snaking pipe that emerged from a panel in the floor, hooking up beneath the small craft's wing. \n\nThe centerpiece was the Elysian frigate, which was now docked and sitting idle on the deck. The seven thousand ton starship was resting on a set of a dozen landing skids, the hydraulic cables that hung from the shadowy recesses in its underbelly, and the massive compression disks that were built into the struts giving some idea as to how they were able to support its immense mass. These vessels could fly in atmosphere, and even make landfall if absolutely necessary, but it was best avoided where possible. Judging by the presence of what looked like sand clinging to the struts, it appeared that the Elysians thought differently. \n\nThe tapestry-like reliefs on the hull were even more impressive up close, the thing was a veritable Sistine Chapel. It was a little like the damascene work that Zhari had done on his sidearm, but on a far larger scale. The regal, crimson undercoat was overlaid with intricate designs in shining gold, depicting scenes of hunting and warfare from their territory's history. There were Borealan figures wielding rifles as they engaged in combat and sport, depictions of alien animals that he didn't recognize, and elaborate representations of the planet's dense jungles. Everything had a somewhat odd perspective, giving it a Medieval vibe. It was a shame that the heat of reentry had stripped some of the artwork from the nose and belly of the craft, the Elysian craftsmen must not have accounted for that. \n\nThe landing ramp was already lowered, situated near the aft section, below the elevated bridge. A pair of giant, shining hydraulic pistons stood to either side of it like metal pillars, the interior too dark to be seen beneath the shadow of the vessel. Moralez waved his companions forward. He was joined by a dignitary who had been sent to greet the ambassadors, and they were flanked by two Borealan Shock Troopers who were clad in black combat armor, their feline faces obscured beneath their opaque visors. They were not here for backup, but rather to make the Elysian ambassador more at home. They were his countrymen, hailing from Elysia, and they should help to put him more at ease. The Elysians always appreciated a show of force. \n\nA large figure lumbered down the ramp, his regal outfit giving him away as the ambassador. He was a head taller than the two Shock Troopers, with broad shoulders and rust-colored fur that was patterned with faded stripes. He was wearing what looked like a blend between a suit of armor and billowy fabric, extensively decorated with the same reds and golds that adorned his ship. His tunic was made from flowing, crimson material that was secured about his waist with a leather belt that sported a golden buckle, along with a pair of knee-length shorts in the same style. Sewn into the fabric of his tunic was another hunting scene, the golden threads woven into a depiction of alien figures chasing down unidentifiable animals. \n\nUpon his shoulders were two large pauldrons, the heavy metal colored red with gold trim. They were strapped to him with more leather belts that formed a cross pattern over his barrel chest, adorned with golden studs and badges that resembled medals. His claws were sheathed in ornate thimbles, attached to rings on his thick fingers via delicate chains. Upon his back was a cape that trailed on the ramp behind him, the fur shifting hue with an odd iridescence as he moved. It looked like some kind of fur, almost like an oil slick in the way that it refracted the light. \n\nHe was not descending alone, however. To his right was another Borealan, this one a female. Her entire body was covered in a sleek, shiny layer of jet-black fur, thinner and slicker than the thick fluff of a Polar. She was a little shorter than her counterpart, her build far slimmer than his muscled frame, giving her the appearance of a gymnast rather than a bodybuilder. Unlike the Elysian, her attire was startlingly human. She wore a two-piece suit, its black color giving the impression that it was blending with her fur, complete with a jacket and a neat skirt. It gave her the air of a high-powered executive, although her lack of shoes somewhat diminished the effect. He couldn't help but notice her impressive bust. She was well-endowed, even for a Borealan. ",
        "Moralez finally recognized her as Ambassador Zuki, the delegate for the Araxie territory. He hadn't been informed that the two would be traveling together. He had read her dossier, as he had done for all of the visitors who would be placed under his protection, but she was rather enigmatic. Her people were the newest addition to the Coalition, they had joined recently enough that there were no Araxie soldiers serving in the Navy yet. This was the first time that he had seen one in person. \n\n\"Ambassadors Elysiedde, Zuki, welcome to Fort Hamilton,\" the dignitary said as they approached from beneath the looming frigate. He was wearing a white uniform not dissimilar from that of a UNN officer's formal attire, but without the exuberance of medals and ribbons. \"I regret that the presiding Admiral is currently indisposed, but he will be attending the council meeting to represent the UNN as planned. My name is Secretary Stevens, and I will be seeing to your needs for the duration of your stay here. Accompanying me is Security Chief Moralez, who will be responsible for your safety.\" \n\n\"It is good to be back,\" Elysiedde said jovially, his booming voice carrying through the hangar. He sucked in a breath of air, inflating his chest and planting his hands on his hips as he appraised his surroundings. \"The Pinwheel is as impressive as ever. I am sure that this security council meeting will be just as productive as the last. My Lord Patriarch sends his greetings, my uncle hopes that the flagship of our burgeoning fleet will impress.\" \n\n\"Indeed it does,\" Stevens replied, raising his eyes to its ornate hull. \"I can't say that I've ever seen anything quite like it before.\" \n\n\"Chief Moralez, Secretary Stevens,\" the second Borealan said, stepping forward and extending a hand in greeting to each man in turn. Moralez took it, noting that her fur was just as silky as it looked, and wondering what she made of his prosthetics. \"I don't believe that we've been formally introduced, Chief, but your reputation precedes you. My name is Zuki, I am representing the Araxie territory.\" \n\n\"Nice to meet you, Ambassador,\" he replied. She had a firm handshake, confident, and she appeared to be more attuned to human customs than her counterpart. \n\n\"We weren't expecting you to arrive with the Elysian delegation,\" Stevens added, \"I trust that relations are continuing to improve?\" \n\n\"I could have charted a Courser to the station, like our Rask colleague,\" she replied. \"But the Patriarch was kind enough to offer me passage aboard his flagship, and I thought that we might use the time to discuss that very subject. I'm happy to say that Araxie and Elysia are becoming firm friends, we have signed many new trade and security treaties since we were last here.\" \n\n\"I'm pleased to hear that,\" Stevens replied, gesturing for the ambassadors to follow him. \"This way, if you would. I'll show you to your suites in the residential quarter.\" \n\nThey made their way across the hangar, the Elysian ambassador beginning to chat with the Shock Troopers in their native language of hisses and growls. After a minute or two, the Araxie ambassador seemed to grow curious, her furry ears pivoting in his direction. \n\n\"What are you scheming about, Torza?\" Zuki asked jokingly. The stocky Equatorial gave her a toothy grin in response. The two seemed to be on first-name terms. \n\n\"I merely inquire as to the nature of the Security Chief's injuries, they intrigue me.\" \n\n\"Really, Torza,\" Zuki scolded. \"It's hardly polite.\" \n\n\"I mean no offense,\" he added hurriedly. \"In my culture, injuries earned in battle are to be displayed with pride. Such severe wounds would have seen even an Elysian Ranger rendered invalid, but this human still performs his duties, and he holds a prestigious title at that.\" \n\n\"It's quite alright,\" Moralez replied with a dismissive wave of his hand, the electric motors whirring. \"I did indeed lose my limbs in battle, but the story probably isn't as heroic as you're imagining. I lost the arms to a grenade that went off too soon, and I lost the leg to friendly fire. The gunship was trying to take out a Betelgeusian Warrior that was nearby at the time.\" \n\n\"Then you faced a Warrior and lived to tell of it?\" Torza said, obviously impressed by the tale all the same. \"Perhaps it is a better story than you think, Chief of Security.\" \n\n\"What of your crew, Ambassador Elysiedde?\" Stevens asked. \"Will they be staying on the flagship, or will they be coming aboard? It wouldn't be difficult to secure guest visas for them if they would like to explore the station and make use of the facilities, as long as they remain in the tourist quarter.\" \n\n\"Yes, a little shore leave might do them good,\" he replied. \"I will have them come aboard when the necessary arrangements have been made.\" \n\nThey emerged onto the torus through a smaller opening that was built into the sixty-foot-high hangar door, Stevens leading the ambassadors downspin towards the residential quarter as the two Troopers followed. Moralez said a brief goodbye to the Borealans, then headed back in the direction of the security building. On the way, he received a call from the flight control operator again, pausing and putting a finger to his earpiece as he tried to hear her over the roar of the crowd. \n\n\"Security Chief, we have another incoming vessel. A UNN Courser inbound from Borealis has just left superlight, and they'll be dispatching a shuttle with the Rask ambassador aboard shortly. Where would you like me to send them?\" \n\n\"Have her sent to hangar seventeen,\" Moralez replied, \"might as well get them all in one place.\" \n\n\"Would you like me to contact Secretary Stevens or another member of the diplomatic staff and have them meet you there?\" \n\n\"No,\" Moralez said, \"I doubt that the honorable Rask delegate would much appreciate a formal reception. I'll handle it myself.\" \n\n*** \n\nThe shuttle matched velocity with the rotation of the habitat, its thrusters shooting jets of flame as it slowly glided towards the thin force field of the hangar, the energy barrier allowing the solid object to pass through it. It was another ocean-grey Navy vessel, a troop carrier designed to ferry personnel to and fro. It had a pair of stubby wings for gliding in atmosphere, and a cockpit situated high on the stunted nose for maximum visibility. The thrusters on its underside flared with blue fire as the inertia caught it, its wheeled landing gear descending as it hovered just above the deck, before touching down with a clunk. The vessel bounced as the gear absorbed the impact, and then the whine of the engines began to wind down. \n\nThe troop ramp at the rear of the dropship descended with a pneumatic hiss, and another large, feline figure stepped out. She rounded the vessel, which was facing the far wall, and began to stalk over to Moralez once she noticed him standing alone on the deck. She spared a glance at the Elysian frigate, wrinkling her nose at it. \n\nUnlike Torza's light complexion, this one's skin was dusky, and her hair looked as though it had been bleached blonde by the sun. Her fur was the same color, devoid of any patterning where it was visible on her hands, her lower legs, and her whipping tail. \n\nHer clothing was all tight leather in shades of jet black and dark brown, her pants leaving little to the imagination as they strained against her muscular thighs and rump, creaking as she walked. If it wasn't for the obvious stitching that held them together, he might have assumed that they had been painted onto her. They ended just above the heel joints of her digitigrade legs, giving way to her sandy fur. There were belts and holsters hanging around her waist that housed an arsenal of knives and unwieldy, primitive revolvers, but the guards would certainly relieve her of them before allowing her to set foot on the central hub. Even then, disarming her was somewhat of a futile gesture. Borealans were never unarmed, their claws were like meat hooks. \n\nHer leather jacket was a little looser, resembling something that a biker would wear. It was thick enough that it might actually provide some measure of protection from claws or blades, lined with thick padding that reminded him of a stab vest. It seemed to be handmade, but that wasn't a dig against its quality. The fine leather was adorned with golden studs and badges, decorative patterns were pressed into the material, and there were patches sewn into it. None of the Borealans seemed to like wearing shoes, but she did have fingerless, leather gloves that left her curved claws exposed. The knuckles were studded with silver metal, likely for making her punches more lethal. \n\n\"Vice Admiral Korbaz,\" Moralez began, the alien looking him up and down disdainfully with her yellow eyes. \"Welcome back to Fort Hamilton.\" \n\n\"I recognize you, tin man,\" she replied. \"We have met before.\" \n\n\"Yes, we met briefly the last time that you were on the station. There was an issue with you relinquishing your weapons before entering a secure area if memory serves. My name is Chief Moralez, and I'm responsible for station security.\" \n\n\"Indeed. I recognize your metal flesh.\" \n\n\"Why is it always the prosthetics that people remember?\" he asked, his tone dry and sarcastic. \"What about my pretty face?\" he added, gesturing to his grizzled visage. \n\n\"Using humor to diffuse tension,\" Korbaz sneered, \"how very...human.\" \n\nHe waved for her to follow him, the two beginning to walk back towards the exit to the torus. \n\n\"Were you not accompanied by an entourage, Ambassador?\" Moralez asked. \"I have to say, it's unusual to see a lone Rask without the company of their pack.\" \n\n\"Any Rask on the station will recognize my rank and make themselves available to me if I require it,\" she replied. \"I have no need to travel with a pack.\" \n\n\"Very well. Would you like me to show you to your suite?\" \n\n\"No,\" she replied gruffly, \"I know my way around this station well enough.\" \n\n\"Are we going to have any problems this time, Vice Admiral, or are you going to make an effort to abide by our rules? Your countrymen don't seem to have as many issues remembering our regulations as you do. You should realize that diplomatic immunity only goes so far, I have strict orders from the Admiralty to make sure that nothing disrupts this council meeting.\" \n\n\"Those who have undergone your training, no doubt,\" she grumbled. \n\n\"You know all too well why Borealans must complete their integration training before serving in mixed units,\" he replied. \n\n\"There are those among us who believe that your integration training is a form of brainwashing, that it strips those who undergo it of what makes them Borealan. It renders them docile...malleable,\" she sneered. \n\n\"I'm aware that some members of the Rask hierarchy believe that only the strongest and most vicious should lead, and that your people are uniquely qualified. I certainly won't dispute the latter. But this is the Coalition, Vice Admiral, not a Borealan pack. The organization treats all of its members equally. We have no ruler, no Alpha.\" \n\n\"That is what you tell yourselves, perhaps,\" she added as they approached the door. \"But we are not blind to the way that things work out here. We have a creature on the homeworld, a pack animal known as the Archeox that is loyal to those with the strength to lead it. This is a trait that we both share, making them easy to domesticate. Several of them together can bring down a Borealan, and we deploy them in battle against our enemies.\" \n\n\"We have a similar animal on Earth know as a dog,\" Moralez replied. \n\n\"They are too simple to realize that their blind loyalty is often rewarded with death. We see this relationship in the Coalition, also.\" \n\n\"How so?\" Moralez asked, pausing politely to let her pass through the door before him. \n\n\"The humans have a chain around the necks of the Borealan people,\" she continued as they walked out onto the habitat, the artificial breeze catching her blonde hair. \"You send them into battle in much the same way, rewarding their loyalty with death. But the Brokers...they have a chain around your necks, human. It has not escaped our attention that there are never any Brokers on the station, none in your armies, and none of their ships in your fleets. I may be the only Rask who has ever laid eyes on one.\" \n\n\"They provide material support for the war effort, rather than ground troops,\" Moralez explained.\" Funding, raw materials, technology. That kind of thing. I can only assume that they're not suited to combat roles.\" \n\n\"And do you not feed your war dogs well until the time has come to sacrifice them?\" \n\n\"I'm curious, Vice Admiral, why would your Matriarch send someone so outspokenly critical of the Coalition to represent her interests?\" \n\n\"Perhaps because, like you, I am not afraid to speak my mind. I appreciate that you do not talk down to me as your fawning politicians do, Security Chief. You have a certain...brashness about you.\" She reached out and ran her padded fingers across his scarred cheek, her sharp claws getting dangerously close. Moralez didn't react, meeting her gaze unflinchingly, staring up into her amber eyes as she peered back at him with her feline pupils. \"What if I were to put a chain around your neck, and take you as my consort?\" \n\n\"Others have tried,\" he warned, taking her wrist in his hand and pulling it away. He increased his grip strength, her eyes widening in alarm. \"It didn't end well for them.\" \n\nHer expression morphed into a wry smile, and he released her from his grasp, the ambassador rubbing her wrist and flexing her fingers as she looked him up and down with a new appreciation. \n\n\"A pity. With strength like yours, you might even be able to keep up with me.\" \n\n\"Unfortunately, I'm spoken for,\" he replied sternly. \n\n\"Yes, I surmised as much. A Polar,\" she said, turning her feline nose up at him. \"I can smell her cloying scent on you.\" \n\n\"I like you, Korbaz,\" Moralez said as he crossed his arms over his chest. \"We always have such frank discussions. Just behave yourself while you're on my station, and we'll get along just fine, alright?\" \n\n\"One would think that you didn't trust me, Security Chief,\" she replied with a toothy grin that exposed her sharp teeth. \"My people are accustomed to being put under unjust scrutiny.\" \n\n\"Guilty as charged,\" he replied. \"Now, if you need anything, don't hesitate to contact me or any of the ambassadorial staff on the station. I hope that your stay will be an...uneventful one.\" \n\n\"See you around, tin man,\" she said as she wandered off into the crowd. Moralez waited until she was out of earshot before loosing a relieved sigh. He put a finger to his earpiece, pulling out his tablet computer and putting a call through to flight control. \n\n\"Flight control, this is the Security Chief. Please let the Admiral know that the Rask delegate has arrived on the station. Who have we got next?\" \n\n\"Roger that, Chief. You have a little time before the Broker vessel is slated to arrive. If you'd like to have them redirected to hangar seventeen again, I'll inform Secretary Stevens and have him meet you there.\" \n\n\"Sounds good,\" Moralez replied, \"keep me informed.\" \n\nIt was probably time to get in touch with the security team that he had in mind for the Diplo-bug. He set off in the direction of the recreation center, not needing to call ahead to know where they would be. \n\nCHAPTER 2: JOKERS WILD \n\n\"Call,\" Harry said, taking a conservative sip from a glass of brandy as his alien companion looked down at the cards that he was holding. It was almost impossible to tell when a Krell was bluffing, their reptilian features were so hard to read, their scaly faces nigh expressionless. The creature was hunched over the round table opposite him, his eight-foot frame meaning that he had to practically double over to get level with it. He was sitting on a stool from the bar, equipped with a sturdy spring that would sink the occupant down level with the counter, designed to accommodate the various species that frequented the establishment. His long, oar-like tail trailed along the floor a good distance behind him, making up almost half of the alien's body length. It was thick and heavy, packed with fat reserves and muscle for swimming. \n\nA cloud of grey cigarette smoke lingered in the air above them, the fans that hung from the ceiling creating swirling patterns as they spun, their lamps casting a yellow glow that created dark shadows to give everything a dingy vibe. They were surrounded by booths and tables, many of which were occupied by their fellow Navy personnel, puffing on e-cigars and drinking their ration of alcohol as they chatted or played games. The bar was off to their right, made from the same faux-wood as the tables and paneling, the glittering bottles that lined the shelves behind it reflecting the light. The flashing neon of arcade cabinets added a touch of color the space, and a low murmur of conversation provided a constant background noise. There were few places on the station where Harry felt more at ease, he always relished the time between deployments. \n\n\"Hang on,\" he grumbled, running his fingers through his blonde hair in exasperation as he looked down at his hand. \"How can I have Four of a Kind if you have a Royal Flush? I've got all four Kings.\" \n\nThe Krell began to laugh, a low, huffing sound that was felt as much as it was heard. The giant reptile lay his cards on the table, spreading them out with his seven-fingered hand. \n\n\"What the...why are there two King of Clubs? You always cheat, you walking handbag. How are you doin' that? You don't even have sleeves!\" \n\nHis companion continued to chuckle in his alien way, Harry reaching over and plucking the extra card from the table. Some people dismissed the Krell as being slow, or unintelligent, due to their sluggish mannerisms and their easygoing nature. They concerned themselves only with basking beneath the heat lamps in their barracks, and clogging the lanes in the Pinwheel's Olympic pool, following what orders they were given without question. Those who took the time to get to know them better soon discovered that they were just as sharp as any other species. The perception of them as being anything less was mostly a result of their plodding metabolisms, and the way that their longevity altered their perception of time. The Krell rarely did anything with any urgency, unless it pertained to combat. While they wouldn't hurt a fly under normal circumstances, if someone threatened their charges, they would fly into a frenzy and tear the aggressor limb from limb. \n\n\"Right, let's try again,\" Harry complained as he scooped up the cards and began to shuffle the deck. \"And this time, I'm going to deal.\" \n\nThe Krell turned his snout towards the door, loosing a low trilling sound that he used to greet someone that he recognized. He couldn't reproduce human speech, at least not without a translator, but he understood it just fine. \n\nHarry swiveled in his seat to see the Chief approaching, the man raising an e-cigar to his lips with his prosthetic hand as he neared their table. \n\n\"What's up, Chief?\" Harry asked. \"You got time off? I'm trying to get a fair Poker game out of Blackjack if you want to buy in.\" \n\n\"What's on the table?\" the Chief asked, taking a draw from his cigar. \"Finally, I've wanted a smoke all damned day. Kaisha won't let me do it in the apartment, says it stings her nose.\" \n\n\"We're just playin' for today's tab,\" Harry replied, shuffling the cards. \"Blackjack doesn't drink much, but he doesn't stand much chance of losing either, so it evens out.\" \n\nThe Krell rumbled in agreement, the low resonance making the glass of brandy vibrate. \n\n\"Unfortunately, I'm here on business,\" Moralez replied. Harry made to stand to attention, he hadn't realized that the Chief was on duty, but a prosthetic hand on his shoulder stayed him. \"At ease, Harry. I've got an assignment that I think you two will be well suited for. Follow me over to one of the booths at the back, I don't want to be overheard.\" ",
        "\"Aye, Chief. Come on, BJ.\" \n\nThere was a creak as the Krell rose from his stool, his tail dragging on the floor behind him as the trio made their way over to an unoccupied booth. Harry and Moralez slid into the padded benches, while Blackjack stood beside their table, blocking the view of the room with his bulk. \n\nMoralez paused to take another puff from his cigar, Harry listening intently as he began to speak. \n\n\"The Admiralty has informed me that we have a very unusual VIP coming in today to sit in on the Coalition security council meeting.\" \n\n\"Unusual how, Sir?\" Harry asked. \n\n\"Before I tell you that, you need to know two things,\" he said as he leaned across the table conspiratorially. \"The first is that you must not repeat what I tell you here to anyone, is that understood?\" \n\n\"Of course, Sir.\" \n\n\"The second,\" he continued after another brief draw from his cigar, \"is that this is a voluntary assignment. Due to its unusual nature, I won't order you to do it. If you don't feel up to the task, I won't fault you for turning it down.\" \n\n\"Well damn, Chief, are you gonna tell us what it is?\" \n\n\"What do you know about Jarilo?\" Moralez asked. \n\n\"Jarilo?\" Harry mused, glancing at Blackjack. \"It's a colony planet, the Navy recently cleared it of Bugs. I know a few people who served on the Thermopylae during the campaign, it was a pretty clean op from what I heard. They caught the roaches with their pants down.\" \n\n\"They didn't clear the planet of Bugs,\" Moralez said, the glow from his e-cigar lighting up his grizzled face in the gloom of the booth. \"The hive that was dug in there surrendered, and the Navy accepted...\" \n\n\"I...don't understand, Chief,\" Harry stammered. He glanced at BJ again, as if seeking reassurance, but the Krell remained expressionless as he listened intently to their conversation. \"How can a Bug hive surrender?\" \n\n\"That's a long story, but the gist of this thing is that the hive is sending an ambassador to the station, and the Admiral has tasked me with making certain that nothing happens to them while they're here. I need bodyguards to stay with them for the duration of their visit, someone reliable, someone I can trust. You two fit the bill. You're a smart kid, Harry, and a good Marine. I know that you can handle yourself and that you'll make the right decisions in a pinch. Blackjack is a Krell, enough said,\" he added as he gestured to the reptile with his cigar. \n\n\"That's high praise, Chief,\" Harry replied. \"I guess if anyone found out that this guy was working with the Bugs, there'd be a big-ass target on his back. Ain't nobody on the station who hasn't lost someone to the roaches, present company included.\" \n\n\"It's a little more complicated than that,\" Moralez continued, exhaling a cloud of smoke to join the haze that hung in the air. \"The ambassador is a Bug.\" \n\nHarry's demeanor changed, a frown darkening his face. \n\n\"Sir, with all due respect, we're letting Bugs on the station now? I joined up to kill roaches, I cut my teeth repelling Bug boarding parties, and now we're giving 'em free tours?\" \n\n\"I reacted the same way when they told me,\" Moralez said, \"but that's what the Admiralty wants. They think that they can get something out of this, maybe an edge over the other hives, and it's not our place to question their orders. I'm going to need you to babysit this thing at all times and keep it out of view of the public. I have some ideas on that front, but we can talk about the details later. Are you in, or are you out?\" \n\n\"If you think it needs doin', then we'll do it,\" Harry replied with a shrug. \"Blackjack, you wanna weigh in on this, or not?\" The giant alien merely rumbled, his low voice making their teeth chatter. \"He says he's in,\" Harry explained. \n\n\"I know I'm asking a lot,\" Moralez continued. \"I know that if this gets out, then you might face some backlash from the other Marines.\" \n\n\"The old soap in a sock treatment?\" Harry replied with a grin. \"Nah, don't pay it any mind, Chief. I've done my time on the front, I've killed my share of buggers. Everyone who's served with me knows it, and I don't much care about the opinions of those who haven't.\" \n\nMoralez reached across the table, offering his polymer hand to Harry, who shook it. \n\n\"Glad to hear it, Marine. I'll pull some strings, make sure that you and Blackjack are compensated appropriately. I can probably convince the bean-counters that this qualifies as both overtime and hazard pay.\" \n\n\"Much obliged, Sir.\" \n\n\"I'll let you know where and when,\" the Chief continued as he rose from his seat. \"Until then, I have to get back to my duties. I didn't realize that I'd be working as a greeter when I accepted the position of Security Chief.\" \n\n*** \n\nMoralez found himself in the hangar once again, standing beside Secretary Stevens as they awaited their next visitor. The shuttle that had ferried the Rask delegate to the station had left, but the gaudy Elysian frigate still occupied much of the space. The vessel was surrounded by a team of yellow-clad engineers now, and he found himself wondering what they made of it. \n\n\"So...what do you think the Brokers are?\" Stevens asked, breaking the silence. \"Are they autonomous drones, are they controlled remotely, or do you think that there's a creature inside that suit?\" \n\n\"Hard to guess,\" Moralez replied, \"I've only seen them once or twice. I'd think that a suit would be less clunky if anything.\" \n\n\"Yes, they never visit the station unless absolutely necessary. I wasn't on call during the last council meeting, so this will be my first interaction with one. I've seen pictures, but that's about it.\" \n\n\"Here they come,\" Moralez said, gesturing beyond the wavering barrier of energy. As they watched, a silvery glint came into view, gradually growing until its shape came into better focus. It looked to Moralez like a cigar that had been wrapped in tin foil, made from shining, silver metal that reflected the unfiltered sunlight of the system's star like a beacon. It was completely featureless. There were no visible engines, no windows, no bridge. He couldn't make out the telltale puffs or gas or jets of flame from thrusters, it simply seemed to glide effortlessly through space, under no visible forms of propulsion. \n\nThe object slid through the hangar's force field, hovering silently above the deck. Where the shuttle had needed to compensate for the bay's gravity, the Broker vessel seemed untouched, merely floating down to the floor as though it was no heavier than a feather. \n\nIt did not deploy landing gear. Instead, it came to a stop just above the deck, as if it was resting on an invisible cushion. It slowly rotated on a dime to put itself side-on to its captivated audience, an indent appearing in the chrome finish at its flared midsection, as though an unseen blade was scoring the metal. The indent opened like a wound, the metal parting, somehow flexible. A ramp descended from the orifice, seeming to grow out of the silver material, stopping when it came into contact with the deck. \n\nStevens and Moralez craned their necks in an attempt to get a look inside the mysterious vessel, but the interior was too shadowy for them to make out anything of substance. From the darkness emerged two creatures. \n\nThe first looked like a refrigerator perched atop a pair of robotic legs, standing around eight feet tall. Its bulky, square body was a shade of matte white, while its mechanical components were the same shining silver as the hull of its vessel. It was featureless, save for a litany of sensors and lenses that protruded from the forward face, cameras and scopes of varying sizes seeming to zoom and focus independently of one another as they scrutinized the two humans. Protruding from the sides of the chassis were four segmented arms made from chrome metal, flexible like tentacles. Each one was tipped with some kind of grasping claw or strange attachment, the appendages hanging frozen in the air in unnatural positions while at rest. It was supported on two skeletal limbs made up of silver rods and pistons, exposed machinery visible in the spaces between the protective covering. It had backwards-facing knees, like a giant chicken, with cup-shaped feet. \n\nThe Broker marched down the ramp, waiting patiently for its companion to join it. \n\nThe second figure was an especially large Krell, his skull alone must have been five or six feet long, and he bordered on twenty feet from his nose to the tip of his dragging tail. The reptiles never stopped growing, and their lifespans seemed indefinite from a human perspective. The longer they lived, the larger they grew, and the darker their complexion became. This individual was sheathed in a layer of hard, thick scutes and overlapping scales like medieval armor, a dark green in color that faded to a lighter beige on his leathery underbelly. \n\nHe wore a poncho made from dark leather that was sparsely decorated with geometric patterns, reminding Moralez of tribal cave paintings, and his green scales were covered in some kind of colorful dye. There were multicolored handprints and alien sigils staining the smoother scales of his underside, as though other Krell had been fingerpainting on him, almost like tattoos. Hanging about his neck was a mass of rope necklaces and pendants that were piled on top of each other, there must have been a hundred of them. They were decorated with seashells, colorful beads, and carved pieces of wood. If their weight caused him any discomfort, he didn't show it. \n\nUpon his thick wrist was a device that resembled the onboard computers that were a component of Marine armor, with a built-in touch panel that was lit up with an orange glow. It clearly wasn't of Krell origin, and it looked quite out of place. \n\nThe two aliens were so diametrically opposed. One was the very embodiment of advanced technology, while the other was a primitive, yet it was not unusual or unexpected for them to arrive together. The alliance between the Brokers and the Krell predated the UNN's entry into the Coalition by several hundred years, and they had a very close relationship. The Krell were not capable of space flight under their own power, their soldiers were delivered to the station on Broker vessels as needed, and returned in the same manner once their duties to the Coalition were fulfilled. The Krell seemed to have absolutely no interest in industrializing their society or obtaining any modern amenities. They did what was required of them as part of their commitment to the alliance, and no more. \n\n\"Honorable council members,\" Stevens began with a bow, \"welcome to Fort Hamilton.\" Moralez hesitated for a moment, then mimicked the bow, the Broker watching them with its unnerving number of electronic eyes. They hadn't bowed for the Borealans, perhaps Stevens had prepared different greetings for the different races. \n\nThe Krell reached down and began to tap at the device on his wrist, then responded with a low, guttural rumbling that Moralez could feel in his bones. It was almost sub-sonic, so powerful that it seemed to vibrate the very air around them, echoing throughout the hangar like a church organ in a cathedral. After a moment, a halting, synthesized voice was emitted from the device. It was translating his alien speech. \n\n\"Greetings to those within our great circle,\" it said. \"We have come to parliament to take part in deliberation. The Elders pay tribute.\" \n\n\"We welcome you into our circle, wise Elder Rasheth,\" Stevens replied in a formal tone. The alien lumbered over to him, his size and sheer mass even more apparent as he neared the comparatively tiny human. The Krell leaned down to press his scaly forehead against Stevens', his crocodile-like snout long enough that it reached the man's knees, packed with jutting teeth. It was a kind of Krell Eskimo kiss, their equivalent of a handshake, perhaps. Moralez was relieved when the alien didn't expect the same greeting from him. \n\nThe Broker remained at the foot of the ramp, seemingly unwilling to stray too far from its strange ship. From somewhere on its robotic body came a tinny voice, far more advanced than the translator that the Krell was using, but still somewhat synthetic. \n\n\"I will remain on my vessel until my presence is required,\" it said. \n\n\"As you wish, councilman,\" Stevens replied. \"Please don't hesitate to contact the ambassadorial staff if you should need anything.\" \n\nWith that, the robotic creature turned around and made its way back up the ramp. The wound in the hull healed up, the ramp receding into the body of the craft, leaving it as featureless as when it had arrived. Not too friendly, these Brokers... \n\n\"Come, Elder. Allow me to show you to your suite,\" Stevens said as he guided the lumbering Krell across the hangar. \"We have prepared a basking pool and a heat lamp for you.\" \n\nMoralez stayed to examine the Broker vessel from a distance for a minute, wanting to get closer, but worrying that it might be a breach of protocol. Their technology truly was amazing, to the point that he couldn't even make sense of it. A shame that they didn't see fit to share it with everybody else... \n\nA call came through on his earpiece, and he put his finger to it, the familiar voice of the flight control operator coming through. \n\n\"I'm sorry to disturb you, Security Chief, but we have an unknown vessel on approach.\" \n\n\"Unknown?\" he repeated. \n\n\"The configuration appears to be that of a UNN Courser, but it has no transponder, and it's refusing to identify itself.\" \n\n\"Can you pipe an image through to my tablet?\" Moralez asked, pulling the device from his pocket. \n\n\"One moment,\" she replied. \"There, you should have it.\" \n\nThe external cameras that were mounted on the hull of the torus showed what looked like a Courser at first glance. The vessel was shaped like a giant cotton swab, with a needle-nosed cockpit section at the front that was connected via a skeletal frame to the engine and reactor section at the back. They were designed to be the perfect balance between mass and power capacity, able to perform long-range superlight jumps that outpaced vessels many times their size. They were most often used for ferrying VIPs, and for delivering important messages where conventional communications were not available. \n\nThis one differed from the usual configuration, however. Its sleek hull was encased in layers of armor plating, the angular surfaces painted with a black stealth coating, throwing off that careful balance of mass and speed. Where there should have been naked beams that resembled the jib of a construction crane, there were instead what looked like missile pods, along with a few jutting railgun batteries. The vessel certainly generated enough juice to power them, but that wasn't the point. \n\n\"And you're not picking up a transponder signal?\" Moralez asked, watching the vessel's thrusters flare as it made small course corrections. All UNN ships had a transponder that broadcast identifying signals upon receiving a query from a friendly vessel, used mostly in IFF systems as a way to track friendlies. \n\n\"Negative, Chief. They transmitted what seem to be correct Navy codes upon request, but they won't comply with our requests for identification. They won't give us a name or a serial number. Protocol states that I should let them through, but it's highly irregular. I thought it best to let you know.\" \n\n\"I'm going to get the Admiral on the horn, keep an eye on it. If its weapons go hot, or it begins to accelerate towards the station, I want you to scramble a Beewolf squadron to intercept. Warn any ships in the vicinity that we have a potential problem.\" \n\n\"Roger that, Sir,\" she replied. Moralez put in a call to the Admiral, waiting impatiently for a few moments before it went through. \n\n\"Yes, Security Chief. What is it?\" the Admiral asked, a touch of irritation in his voice. \"I'm very busy right now.\" \n\n\"Sorry to disturb you, Admiral, but we have an unknown vessel on approach that has no transponder and is refusing to identify. I've told flight control to be ready to launch interceptors if it activates its weapons systems. It appears to be a UNN Courser with some unusual modifications.\" \n\n\"That's one of ours, Security Chief, we've been expecting it. Tell flight control to cooperate fully.\" \n\n\"Sir?\" Moralez asked, confused. \"As the Security Chief of this station, and considering how many VIPs we currently have aboard, I'm going to need a little more information than that.\" \n\n\"Are you making demands of me, Security Chief?\" the Admiral replied. \n\n\"No, Sir, not at all. But this is unusual, to say the least, and I need to know who's on my station if I'm going to do my job properly. Is this vessel delivering the asset that we discussed?\" \n\n\"No,\" the Admiral replied sternly. \"That ship is on a classified mission and has no obligation to identify itself to flight control. It has the correct codes, and I'm telling you that it's expected, what more reassurance do you need?\" \n\n\"Very well, Admiral,\" Moralez replied as he attempted to disguise the frustration that was creeping into his voice. \"If you're certain that it doesn't pose any kind of security risk, then I'll have flight control let it through.\" \n\nHe took another glance at the ominous vessel that was being displayed on his tablet, then put his call through to flight control. \n\n*** \n\nMoralez walked along the lines of Marines, his prosthetic hands clasped behind his back. The men were lined up to either side of him, creating a kind of small avenue in the hangar, a red carpet laid out between them. He still found it hard to believe that when the Admiral had asked them to roll out the red carpet for the Valbarans, he had meant it literally. \n\nThey were wearing their signature black combat armor, the ceramic plates overlaid on top of their Navy-blue uniforms, their faces obscured behind the reflective visors. In their hands were clasped XMRs, the modular railguns that were favored by the Coalition. They were unloaded, but no less impressive. The men were at ease right now, but once the delegation landed, they would snap to attention and put on a show. The Valbarans had never visited the station before, they had come a very long way, and the Admiral wanted to make a lasting impression. \n\nThere were also a dozen Borealan shock troopers dressed in similar armor standing behind them, wielding long, bayoneted rifles that looked as much like spears as firearms. Their fuzzy ears protruded from the tops of their helmets, and their tails trailed behind them, the varied colors and patterns of their coats standing out against the matte black. Finally, there were two Krell flanking the twin rows at the end of the carpet, clad in the armored ponchos that served as their battle dress. Each one was clasping a golden flagpole from which hung a ceremonial flag, blue in color with gold trim. Woven into the fabric was the UNN logo, a globe of Earth surrounded by a wreath, all in white. The flags were hanging limp, as there was no breeze in the bay, but they were no less impressive. \n\nEach species was a member of the Coalition, but this was a UNN installation, and the aliens were serving as auxiliaries. They had no Coalition flags to fly. \n\nThe silvery Broker vessel and the ornate Elysian frigate were off to their right. The engineers seemed to have finished their inspection of the gaudy flagship, and the cigar-like Broker craft remained as unknowable as ever, its featureless hull reflecting the harsh lighting of the hangar like a mirror. \n\nMoralez walked back up to the top of the carpet, standing beside Stevens as they awaited the newcomers. \n\n\"I'll be glad when this is over, my feet are killing me,\" Stevens complained under his breath. He raised a gloved hand to loosen his tight collar, then resisted the urge, clasping them neatly behind his back instead. \"One more delegation to go...\" ",
        "The Secretary clearly didn't know that there was still another ambassador yet to arrive, the representative from Jarilo, but he might not be privy to that information. \n\n\"They're coming,\" Moralez said as he received an alert from flight control. He lifted his tablet, Stevens scooting closer to get a look at the screen as the station's cameras zoomed in on the alien vessel. \n\nIts white hull was long and spindly, seemingly made up of modular, cylindrical segments that were joined together. At the bow was something that resembled a bridge, with rows of windows that looked out into space, and to the stern was a bulky engine module. Situated at the vessel's center of mass was a rotating torus that was joined to one of the segments via spokes, not unlike that of the Pinwheel space station itself. It was creating centrifugal force to simulate gravity, which suggested that the species had not developed AG fields yet. The crew must live in that spinning module while they weren't at their posts. It was armed with railgun batteries, however. They seemed to be of UNN design, retrofitted, perhaps. The whole thing was about three hundred meters long, twice as long as the docked frigate, but nowhere near as large as a jump carrier. \n\nAs they watched, an object detached from one of the segments and began to move towards the station. It appeared that they didn't have hangars on their carriers either, the craft had been docked externally, clinging to its mothership like a flea to a dog. \n\n\"Alright people, you know what to do,\" Moralez said as he stowed his tablet. \"Let's give the Valbarans a reception that will impress.\" \n\nThey stood to attention, Stevens and Moralez watching as the Valbaran lander slowly came into view. It matched speed with the station's rotation, maneuvering carefully towards the force field. It was roughly twenty meters from its rounded nose to its twin tail fins, the stubby, swept wings that protruded from its streamlined hull suggesting that it was capable of atmospheric flight. It almost looked like one of the primitive spaceplanes from Earth's distant past, a little larger and more unwieldy than a UNN dropship, more akin to a cargo lander. It was layered with heat tiles that were painted with ocean camouflage in shades of grey and blue, blackened by reentry on the nose and belly. Moralez could see figures moving behind the blister-like cockpit, but he couldn't make out much detail. \n\nAlong the flanks of the vessel were a series of light panels, almost as though the aliens had bolted LCD monitors to the exterior of their hull. They flashed in colorful, mesmerizing patterns, like a neon sign or an animated advertisement. Waves of purples and blues ran from the nose to the tail, shifting hue towards greens and yellows, almost like mood lighting. Whether they were trying to communicate something, or just putting on a show, Moralez couldn't be sure. \n\nAs it passed through the barrier of energy, orange jets of flame belched from the thrusters on its underside, the vessel lowering itself towards the deck as it fought against gravity. It wasn't very graceful, and it wasn't suited to VTOL, that much was obvious. It deployed a set of wheeled landing gear that absorbed the impact as it touched down, rolling for a few feet before it came to a stop, the roar of the engines fading as it powered down. \n\nThere was a loud hiss as a landing ramp at the rear of the vessel began to slowly descend on a pair of heavy, hydraulic cylinders. It was facing towards the force field, and so Moralez couldn't see inside the compartment. When it reached the deck, a procession of strange creatures descended, rounding the idle vessel and heading towards them. \n\nThey were wearing form-fitting flight suits, too light to be armored in any significant way, the material rubbery and flexible. Their garments shared the same patterning as their vessel, camouflaged with splotches of grey and ocean-blue, but that wasn't the only similarity. Just like the color panels on their vessel's hull, they had flexible panels on their forearms. It must be some form of communication unique to their species. He could make out what looked like insulated cabling for the internal electronics running along their limbs, almost like veins visible beneath skin. Their helmets had an opaque visor, not unlike those used by the Marines, the aliens seeming to have somewhat of a snout. From behind their heads dangled two thick cables, like a pair of braids, long enough to reach the small of their back. These too came equipped with the strange, light-emitting panels. They looked as though they should be connected to some kind of oxygen tank, but they were hanging loose. \n\nThe aliens were around four or five feet tall, their body plan basically humanoid, with two digitigrade legs that were long and powerfully built in proportion to their relatively small and short torsos. Their small hands had only two fingers and a thumb, and their boots seemed to have two toes. Their long, thick tails were held off the deck as though they were being used for balance, the aliens walking with a bobbing gait that reminded Moralez of a chicken. \n\nThere were four of the aliens in all, and they slowed as they neared the foot of the carpet, glancing at the imposing Marines and Borealans that towered over them. The personnel were doing a great job, standing as still as statues with their rifles resting over one shoulder. The visitors were fascinated by the hangar, it must seem even larger to them, and they paused to admire the other vessels that were occupying the space. \n\nStevens started to walk down the red carpet, and Moralez followed, the lead alien beginning to remove its helmet as they neared. It disconnected at the neck with a hiss of escaping gas, their suits must be rated for vacuum, revealing the face beneath. The Valbaran's skin was a mosaic of fine, smooth scales, a muted green in color. The skull was rounded, with a pronounced snout, a pair of fleshy tendrils protruding from the back of the head. It flexed them as though it was glad to be free of the helmet, they seemed to be prehensile. \n\nThere was a flash of color, Moralez having to resist the urge to take a step back in alarm, the two tentacle-like appendages erupting into a feathered headdress. They stood out straight to either side of its head and split open, revealing a mass of colorful plumes within that puffed up like the tail of a peacock, creating a vibrant display. He felt as if he had suddenly been transported into the midst of a Brazilian Carnivale. The feathers were layered, those on top shifting to reveal those beneath, exposing different hues and creating patterns similar to those that he had seen on the colored panels of their spacecraft. \n\nThat explained the purpose of those panels, they must be a substitute for the feather displays when the creatures were forced to don their suits, or when they were otherwise unable to signal each other naturally. \n\nThe lead Valbaran peered back at them with eyes that were a striking shade of violet, fixing its reptilian pupils on them intensely. Stevens cleared his throat, the aliens turning their attention to him. \n\n\"Welcome, Ambassadors, to Fort Hamilton. Thank you for coming all this way, we hope that you will find the accommodations that we have prepared for you to be suitable. My name is Secretary Stevens, and I'll be seeing to your needs during your stay. If you should require anything that has not been provided, or if you have any questions, please let me know. This is Security Chief Moralez, he will be responsible for your safety while you're on the station.\" \n\n\"My name is Netza'cui'atl,\" the alien replied, its feathers flashing a shade of regal red. \"I hold the title of Ensi, along with my flock. We have come to treat with your Coalition in the name of the Val'ba'ra'nay.\" \n\nEnsi must be some kind of official title, Stevens probably knew what it meant. They spoke very good English, but their voices were tinny and musical, a flanging effect making it sound as though two distinct people were speaking at once. It reminded Moralez of a parrot or some kind of songbird that was mimicking human speech. \n\n\"Please follow me, Ensi,\" Stevens said. \"I'll show you to your suite.\" \n\nThe bird-like aliens bobbed along behind him as he led them across the hangar, the other thee removing their helmets and shaking out their feathers, Moralez sticking close. There was no word of their final, mystery ambassador arriving yet, and he didn't have much to do until then. He was curious about these new aliens, and he wanted to see how they reacted to the Pinwheel. \n\nWhen they stepped out onto the torus, the Valbarans paused, their heads swiveling on their flexible necks as they took in the sights. They admired the curved, painted ceiling, and the veritable orchard of trees and shrubs that broke up the matte white of the hull. They seemed somewhat overwhelmed by the sheer number and variety of pedestrians, their violet eyes tracking passing Krell, and peering intently at the colorful garb of the civilians. Their ornate feathers flashed yellow, alarming some of the passers-by. \n\nMoralez soon realized that they might have a problem. The Valbarans were tiny, they were liable to get trampled if they went unnoticed in the crowd. He called over two of the Marines, instructing them to escort the visitors and to make sure that they had enough breathing room. \n\n\"This facility is...amazing,\" the Ensi gasped. What had been her name? Something complicated and hard to pronounce. Netza would do, or he'd just refer to the alien as Ensi. \"You have simulated a natural environment, one that I assume resembles that of Earth. The Val'ba'ra'nay Airforce has similar orbital stations, albeit far inferior in scale and complexity. Tell me, why must the habitat spin if the Earth'nay have gravity generators?\" \n\n\"Our AG fields don't have the coverage for a structure this large,\" Moralez explained, the creature turning its eyes to him. \"We spin the torus to simulate gravity through inertia instead.\" \n\n\"You speak very good English, Ensi,\" Stevens added. \n\n\"Thank you,\" she replied, a ripple of pink spreading through her yellow headdress. \"We have had many dealings with the UNN over the last few months, our city played host to the Coalition fleet that made contact with our planet. There were many opportunities to learn and to interact with your people.\" \n\n\"We are fascinated by this installation,\" another of them added, \"may we explore a while?\" \n\n\"Of course!\" Stevens replied, \"I would be happy to give you the tour.\" \n\n\"I think I'll tag along too,\" Moralez said. \"At least until I get called away.\" \n\nThey began to walk downspin in the direction of the tourist quarter, the aliens pausing to inspect flowering plants, and to ogle the sculpted facades that lined the walkway. They communicated with one another in quick bursts of high-pitched, chirping speech, so fast that it almost sounded like a recorded conversation that had been sped up. They seemed as fascinated by the flora on the station as they were by the engineering, Moralez had to keep in mind that these plants were also alien to them. \n\n\"We see that the Earth'nay are also lovers of nature,\" one of them said, Moralez nodding in response. Nay must be a suffix, like Earthling. \"We are reassured by this. The Val'ba'ra'nay live in perpetual balance with the ecology that surrounds and sustains us, we seek to take only what we need, making as little impact as possible. Our cities are built to blend seamlessly with our environment, and we see much the same philosophy employed here. Our peoples even appear to favor the same colors for our architecture,\" she added with a flutter of green. \n\n\"Though the lack of purple foliage is odd,\" another added. \"It seems that the plant species of Earth photosynthesize in only a narrow spectrum. Note the yellow tint of the artificial sunlight.\" \n\nHe wasn't about to tell the aliens that humans varied in their respect for nature, and in their treatment of it. Some colony worlds were veritable gardens of Eden, while others were industrial hellholes. Earth itself was still recovering from an environmental catastrophe that had been caused, in part, by human activities. \n\nThe pedestrians seemed as interested in the Valbarans as the Valbarans were in them. People stopped to stare at the diminutive reptiles, the Borealans swiveling their furry ears to track them, and the Krell turning their snouts in their direction. As accustomed as the station's population was to seeing aliens, these were entirely new. Moralez had to admit that it was nice to encounter a species that didn't tower over him. The Marines were doing a good job of creating a safe perimeter around the Ensi and her flock, waving away those who came too close, and encouraging the throngs of curious onlookers to disperse. \n\n\"There are so many different species,\" the Ensi muttered, \"all working in concert. This is the Galactic community that we had hoped for, the one that we seek to become a part of.\" \n\n\"It's not perfect,\" Moralez warned, Stevens shooting him a look that said shut up. \"We have our disagreements, our conflicts, but we've always been able to find common ground.\" \n\n\"Look at that one!\" another of the aliens exclaimed, pointing at a passing Polar and emitting a flurry of yellow feathers. It was a little difficult to tell the Valbarans apart, the only difference between them seemed to be subtle changes in their skin tone. \n\nThe Polar paused, glancing down at the little aliens. She was a Goliath from their perspective, near twice their height. She took a step closer, one of the Marines moving to intercept, but Moralez waved him back. The Borealan crouched before the Valbarans as they crowded around to get a closer look, cocking her head curiously, the locks of her silvery hair falling over her shoulders. \n\nShe wasn't wearing a Navy uniform, Polars rarely served in combat roles, and she wasn't an engineer or a doctor either. She was wearing civilian clothes in the Borealan style that were suitably billowy and revealing, both because the temperature on the station was generally higher than her kind liked, and because they were all too aware of their natural charms. The flowing, gossamer fabric revealed just enough to titillate while being dense enough in the right areas to preserve her modesty. Moralez suddenly found himself pining for the warmth of Kaisha's embrace. \n\n\"What do we have here?\" she asked, her tone warm and friendly. \n\n\"My name is Cuetz'hte'otl, Ensi of the Val'ba'ra'nay,\" the alien replied with another flurry of blood red from her ornate headdress. \"My flock is here in an ambassadorial capacity, representing our people's interests.\" \n\nOdd. Moralez had assumed that the one who called herself Netza held the title of Ensi, and that the rest were her entourage, like a Borealan Alpha and their pack. Instead, it seemed as though all four of the aliens shared the same rank and title. How did that work? \n\n\"What beautiful feathers you have,\" the Polar mused, \"what are they for?\" \n\n\"Our feather displays signal to members of our flock, and convey our emotional state,\" another replied. \n\n\"And this is your flock?\" the Polar asked, glancing at the other Valbarans. \n\n\"Regrettably, we had to leave two members behind to manage the city from which we hail,\" Netza replied with a flurry of blue that might indicate sadness. \"We are separated across light-years of space, but this is the burden that we must bear as Ensi.\" \n\n\"I too have left my pack behind to be here,\" the Polar replied sympathetically, \"but know that you will be reunited in time. Think about how happy that will make you feel when the moment arrives, and press onward.\" \n\n\"Wise counsel,\" Cuetz said with a flush of red plumes. \"Might I ask what you are, furred one?\" \n\n\"Why, I'm a Polar Borealan,\" she replied with a wide smile. \"My people hail from the frozen ice cap of our planet.\" \n\n\"A Borealis'nay, but with regional adaptations,\" Netza mused. \"Not dissimilar from our own Northern cousins with their covering of insulating proto-feathers.\" \n\n\"Your fur is so thick,\" Cuetz added, \"may I touch it?\" \n\n\"Of course,\" the Polar replied with a chuckle, reaching out a hand. It was an odd request to make of a stranger, but the Valbarans might have different ideas of personal space. \n\nCuetz removed her glove, detaching it from a seal at the wrist, then placed her hand in the Polar's open palm. The green of her scales was soon lost in the forest of white fur, her three-fingered, clawed hand vanishing into the Polar's dense coat. Moralez knew from experience how fluffy and silky it must feel, their fur was akin to the most expensive Mink that money could buy. \n\nCuetz seemed fascinated, running her fingers through the fine hairs, stroking the Polar like one might pet a cat. Her hand was so tiny in comparison, the Polar's fingers as thick around as her wrist. She explored the fleshy, pink pads that protruded from the fur, and the black claws on the tips of her fingers. The Polar showed no signs of irritation, but then again, they were tactile creatures. \n\n\"How curious you are,\" the Polar purred, her blue eyes meeting Cuetz's gaze. \"If you should need a guide during your stay on the station, someone to help you...navigate the finer points of alien cultures, I would be happy to make myself available.\" \n\n\"Perhaps, if our duties allow us the time,\" Cuetz replied with a flurry of pink that almost resembled a blush. \n\n\"Alright, let's keep moving,\" Moralez said as he waved the aliens forward. The Polar gave him a knowing smile and then vanished into the crowd once more, Cuetz glancing over her shoulder at the alien as she watched her leave. \n\n\"Might I ask, Security Chief,\" Netza began as she bobbed along beside him. \"What is the nature of your limbs?\" \n\nHe had wondered when that question would arise, they certainly were inquisitive creatures. \n\n\"I was wounded in battle,\" he replied, \"and my limbs were replaced with prosthetics. They're made from lightweight polymers, driven by electrical motors. They're wired directly into my nervous system so that they can interpret the signals from my brain with a high degree of accuracy, and so that they can send sensory information back.\" \n\n\"Amazing,\" she mused, \"Earth'nay medical technology is more advanced than we had realized. To what degree would you say that your sense of touch is reproduced? Can you feel pain?\" \n\n\"Almost one hundred percent,\" he said, flexing his fingers with an electrical whir. \"The system isn't programmed to reproduce pain, no, but I suppose that it could be. My foot is a little different, it's not designed to be a perfect replica of the original, and so the sensation is more diffuse. I usually describe it as feeling like one big toe.\" \n\n\"So it is as though you were never injured?\" she asked. \n\n\"No, I wouldn't say that. The prosthetics provide a good substitute, and they allow me to live a full life, but they aren't quite the same. There are subtle things that you miss, small details that you overlook until they're gone. The feeling of tendons moving beneath the skin, the warmth of living flesh, the pulse of a heartbeat. I have no fingernails, so I had to change the way that I scratch my nose, and I can't snap my fingers anymore. I can't plug my ears, I can't clap, I have to be more conscious of how I grip objects. Just little everyday things like that. Still, it's a damn sight better than a wooden hook.\" \n\n\"We must bring this technology back with us so that we might heal our own wounded in the same manner.\" \n\n'Do you have many amputees on Valbara?\" Moralez asked. \n\n\"Amputee?\" she wondered for a moment. \"Ah, like amputate, I see. No, but we may in the future. The Galaxy is a violent place, and if our Commandos are to serve alongside your Marines and Linebreakers, then we must expect casualties.\" ",
        "\"You're remarkably pragmatic about it,\" he replied, \"most leaders want to avoid war at all costs.\" \n\n\"Conflict is not always avoidable, sadly. The Val'ba'ra'nay are a peaceful people, but again and again, we find that we are forced to defend ourselves. We must adapt, we must become stronger, more aggressive. What we are right now...is not enough to ensure our survival.\" \n\n\"The purpose of the Coalition is to take some of the load off,\" Moralez said as he watched one of the Marines ward off a curious pack of Equatorials. \"We all share the weight.\" \n\n\"I have personally borne witness to this sharing of the weight,\" she replied with a flurry of red. \"A Coalition fleet saved my homeworld from a Betelgeusian invasion. Without them, my people would surely have been exterminated to the last flock, as we saw on Ker'gue'la. We had been shoring our defenses for decades, but it was not enough.\" \n\n\"What's Kerguela?\" Moralez asked. \n\n\"In a way, it is almost refreshing to encounter someone who is not burdened by the tragedy of Ker'gue'la,\" she said with a flurry of blue plumes. \"It was our first and last colony planet. When we discovered superlight technology, we located a habitable world in a neighboring system and began the process of colonization. We built cities, relocated flocks, it was quickly becoming a mirror of our home.\" \n\n\"Then the Bugs arrived,\" Moralez muttered. \n\n\"Indeed,\" the Ensi replied with another flush of purple. Was that sadness? \"We could not stand against them, and we were forced to abandon the planet. The casualties were...severe.\" \n\n\"Our first contact went much the same way,\" Moralez added. \"We call it the Betelgeuse incident. A colony ship carrying forty thousand civilians arrived at their new home in the Betelgeuse system to find that it was already claimed. The Bugs didn't ask questions, they simply destroyed the vessel with no warning. All hands were lost.\" \n\n\"Yes, I have read of this incident in the files that your fleet shared with us,\" she replied. \"It is from that event that the Betelgeusians earned their name, is it not?\" \n\n\"That's right,\" he said with a nod. \"Nobody knows where they originated from, could be the other side of the Galaxy for all we know. The buggers get around.\" \n\n\"Buggers, roaches, critters,\" Netza mused. \"You have many names for them.\" \n\n\"Don't the Valbarans have any slurs for the Bugs?\" Moralez asked. \"Pretty sure they've earned a few.\" \n\n\"We do,\" she chuckled, her feathery headdress flashing yellow. \"We cultivate an insect species for their protein, and we refer to the Betelgeusians as such in times of stress. I fear that a human would not be able to pronounce it.\" \n\n*** \n\nThey arrived at the suite that had been prepared for the Valbaran delegation, one of the row house-like structures that lined the hull to either side of the torus in the residential quarter. This part of the station was where civilians, officers, and visitors to the facility lived. There were permanent residences in the form of apartments, and temporary residences that served the role of hotels. \n\nStevens led the group up to a large door at the front of one of the structures, eight feet tall and half as wide, the sculpted hull material that surrounded it made up to look like stone. He scanned a card in a reader that was built into the frame, and the panel slid aside, the opening gaping before the comically undersized aliens. They walked over the threshold with their odd, bobbing gait as Moralez and Stevens following after them, the two Marines taking up guard positions to either side of the door. \n\nIt was a Borealan apartment, an exact copy of the one that Moralez shared with Kaisha. It would have been large by human standards, but to the diminutive aliens, it was like they had been shrunken down to the size of house cats. The kitchen counters were taller than they were, and the couch was like a king-sized bed, one that they would have needed to scale like mountaineers. \n\nHe knew that there had been no mixup, however. Living space on the station was extremely limited, there were few such residences to go around, considering the population size. The human apartments were always packed, but the Borealan ones were often left empty. When Borealis had joined the Coalition, a large influx of tourists had been expected, and so more accommodations had been built in preparation. That influx never materialized, and the majority of Equatorial Borealans lived in the barracks, leaving many of these cavernous apartments unused. Recently, the UNN had begun converting many of them into human apartments, but there were still plenty left. Most tourists didn't complain, a room was a room, but the Valbarans were going to have a hard time even reaching the sink. \n\n\"We have provided you with one of the larger living areas on the station,\" Stevens began, trying to frame it in a more positive light. Moralez had to stifle a laugh, the secretary was talking like a used car salesman. \"We've had some furniture printed based on your dimensions,\" he continued, leading them into the living area proper. Around a glass coffee table were what looked like six miniature director's chairs, or maybe square stools, with no back support. The aliens were obviously expected to use the Borealan-sized coffee table as though it were a dining table. \n\n\"It is our understanding that your people prefer to sleep in large rooms lined with mattresses,\" Stevens continued, \"I think that you will find the bed well-suited to your needs. We've also installed a bathtub that should serve as a pool for bathing.\" \n\n\"Thank you, Secretary,\" Cuetz replied as she appraised the room. \"These accommodations should be suitable.\" \n\nStevens was startled as one of the aliens leapt up onto the back of the oversized couch, scaling a distance of maybe six feet in a single bound. She perched atop the faux-leather like a bird sitting on a power line, her tail outstretched for balance, surveying the room from her new vantage point. The rest of the flock soon joined her, they seemed to like being in high places. Perhaps the apartment was better suited to their needs than he had initially assumed. \n\n\"We'll let you get settled in,\" Stevens said, \"please let me know when you'd like to begin your tour. I can think of a few areas of the station that might be of interest.\" \n\n\"Just make sure the two Marines stay with you,\" Moralez warned. \"Don't leave the building without them. It's not that you're in any danger,\" he added, not wanting to alarm them. \"But you are...rather small, and we don't want you getting trampled or lost. It's a very big station, full of very big people who aren't accustomed to having you here.\" \n\n\"We will do as you ask, Security Chief,\" Cuetz replied from atop the armrest. \n\n\"I'll put my guys on rotation,\" Moralez added, \"make sure we always have someone on guard.\" \n\nHe heard a beep, and put his finger to his ear, listening as a call from the Admiral came through. \n\n\"Excuse me,\" he said, turning to the door. \"Duty calls...\" \n\nCHAPTER 3: QUEEN OF HEARTS \n\nMoralez marched through the winding service tunnels that made up the guts of the station, feeling the chill of the metal grates beneath his prosthetic foot, protruding pipes and exposed wiring snaking along the walls and ceiling. It was a dingy maze, sparsely lit by the yellow glow of the dirty lightbulbs that were spaced out at irregular intervals, a far cry from the carefully tended habitat that existed just a few meters beyond. It was like walking through the veins of a giant, mechanical creature, the plumbing and wiring carrying the lifeblood that the facility required to operate. Behind the sculpted facades were miles of these passages, interconnected like an ant farm, granting access to all of the station's myriad systems. Even Moralez didn't travel these tunnels very often, they were mostly used by the engineers who kept the Pinwheel spinning, and they were off-limits to the general population. One needed a key code to access the maintenance areas at all, and woe betide anyone who came in here without a map. \n\nBehind him was a procession of six Marines in their black body armor, PDW variants of the XMR clasped in their hands. Moralez was wearing one of the ceramic chest pieces too, the material blending with the black polymer of his prosthetics, his handgun on his hip. He wasn't going to take any chances with the Jarilo ambassador. Regardless of whether its intentions were friendly or not, it was still a Bug. \n\nHarry and Blackjack were taking up the rear. Harry was clad in the same black combat armor as the other Marines, but he had kept his helmet's opaque visor open, while Blackjack was wearing an armored poncho that was lined with Kevlar and ceramic plates. The Krell barely fit in the tunnel. He was tall enough, and his shoulders were broad enough, that he very nearly filled the passage like a cork in a bottle. \n\nThe Admiral had closed off one of the smaller hangars where the transfer would be taking place, and had ordered Moralez and his security detail to make their way there and back unseen. They were to keep the ambassador out of view of the public as much as possible, which meant no leisurely walks along the torus. Moralez felt more like he was transporting a prisoner than guarding a diplomat. Were they going to put a bag over its head too? \n\n\"Remember, this assignment is classified,\" Moralez said as they arrived at the access door to the hangar. \"If any of you are here, it's because I know you, and I trust you to do your duty. This is a matter of Coalition security, if word of this gets out prematurely, then it could really fuck things up. I don't think the other ambassadors even know what's going on.\" \n\nHe brought up the wrist-mounted computer that was strapped about his forearm, usually a component of Marine body armor, and pulled up his list of access codes on the holographic display. He tapped the correct sequence into a numeric keypad, and the door slid open with a whoosh, harsh light flooding in from the other side. \n\nHe stepped out into a hangar that was much like the others, albeit a little smaller in scale, more suited to shuttles and gunships than frigates. He was surprised to see that the shutter had closed over the force field like a garage door, sealing the bay off from space. The Admiral wasn't messing around, nobody was getting in or out of here without permission. There were no engineers on the catwalks, no vessels refueling, no cargo being carted to and fro. There was only a single dropship resting on the deck, flanked by two figures. \n\nOne of them was a Polar, her portly body crammed into a nondescript jumpsuit commonly worn by civilian spaceship crews, the long hair that he was accustomed to seeing on her kind tied up in a convenient bob. The second was a dark-haired human wearing civilian clothes. He had a long, grey coat that reached down past his knees, and he was wearing some kind of wrap-around visor that obscured his eyes from view. His outfit was not unusual, but there was something off about him. Moralez could tell at a glance that he was no civilian. These might be contractors of some kind. \n\nThe man didn't stand to attention as they approached, he merely leaned against the hull of the dropship with his hands stowed in the pockets of his coat. The Polar's blue eyes tracked them, but it was hard to tell where her companion was looking. The Marines fanned out into a line behind Moralez, Harry and Blackjack stepping forward. \n\n\"The boys in blue have arrived,\" the stranger said, his lips curling into a smile. \"You must be the Security Chief that we've been waiting for. You didn't need to bring a whole platoon, y'know. She's quite cooperative.\" \n\n\"And...you are?\" Moralez asked suspiciously. \n\n\"No concern of yours,\" he replied cryptically. He stood up straight and began to walk around the side of the idle dropship, passing beneath its wing, gesturing for Moralez to follow with a tilt of his head. Moralez glanced at Harry, who shrugged, then made his way over to the ship. \n\nThe stranger hit the switch that would open the landing ramp with a gloved hand, stepping aside as it began to lower, the whir of the motors and the hiss of escaping gas echoing in the hangar. Moralez had to resist the urge to place a hand on his holster as he peered into the darkness of the troop bay, not knowing what manner of insectoid monstrosity was about to come crawling out. \n\nThe first thing that he saw was a glint of white, and then the creature emerged from the shadows, stepping daintily down the ramp. \n\nEven at a glance, he got the impression that the thing was female. It looked like the Bugs that he had fought on the battlefield, basically humanoid in appearance, with four arms and two digitigrade legs. The Betelgeusian Drones that made up the fighting force of the hive fleets were around five feet tall, encased in an armored carapace, sporting a horn resembling an antler or a tree branch that sprouted from their foreheads like that of a beetle. This one was similar, yet different. \n\nThe thick, durable shells of the Drones came in a variety of colors. There were reds, oranges, greens, and blues. This one's carapace looked like it had been made from mother of pearl, its glossy, white surface sparkling with a beautiful iridescence when it caught the light. The vibrant pearlescence brought out subtle hues of pink, blue, and sometimes a hint of ocean-green when she moved. \n\nThe most striking difference was the face. The Drones wore helmets that blended seamlessly with their carapace, sporting a pair of glowing visors that gave the impression that they had compound eyes. This caste had no such helmet. Instead, a pair of large, expressive eyes stared back at him. They were almost mammalian in appearance, the sclera a vibrant pink in color, the way that her dark pupils met his gaze conveying an awareness that he was not accustomed to seeing from her kind. Her head was rounded, a pair of small, red lips occupying the space where the grotesque mandibles would have been on a Drone. They looked painted on, and he found himself wondering if they could even move. Her features reminded him of a china doll that had been shattered, then glued back together, her face made up of segments of chitin that were only obvious when one looked closely. \n\nShe still retained the horn that was common across all Betelgeusian castes, but as it rose from her forehead, the thick stem branched out into two swooping projections. They were ornate, symmetrical, giving the impression that she was wearing a tiara or a crown. From her head sprouted four feathery antennae, changing in hue from a deep charcoal near their roots, to a snow-white at their tips. Two of them stood erect atop her head, while the latter hung down her back, almost like a pair of long braids. \n\nAround her neck was a large, fluffy ring of fur, like an Elizabethan ruff made from the fuzz that one might find on a moth. It was white in color, the individual hairs sparkling with an odd iridescence at their limits as they reflected the light.  \n\nThere was more flesh visible here than was common for Bugs. They tended to layer on protective battle armor that was made to be indistinguishable from their natural defenses, leaving a scant few slivers of their underlying tissue visible between the cracks and joints. This one was also armored, albeit far more sparsely. The large joints between the sections of exoskeleton that made up her arms and legs were exposed, as were her three-fingered hands, revealing flesh in a shade of dark pink that bordered on wine. Her round thighs were only armored on the outside, leaving their inner surfaces exposed. \n\nIt was impossible to tell where her carapace ended, and where the synthetic armor began, but her torso was concealed beneath what looked like an armored corset made from chitin. It was the same waxy pearl color as the rest of her body, segmented to allow a greater range of motion, pinching her waist to give it a distinct hourglass shape. Two structures that resembled insect wings added to that effect, flaring outwards from her hips like a skirt, the gossamer material that protruded from beneath their protective coverings somewhat translucent. More of the downy fluff was visible beneath them, patches of it clinging to her outer thighs and hips. There were two larger wings that emerged from behind her, hanging low, giving the impression that she was wearing a gossamer gown. There was a vaguely triangular lip that came down between her thighs, almost like a rigid loincloth, preserving whatever modesty she might have. \n\nThe upper pair of arms sported shoulder pads that emerged from beneath the ring of thick fur around her neck, and just below it was a pair of fleshy mounds that were being pushed up by her corset. They looked like breasts, the comparison was unavoidable, pressing together to create cleavage. \n\nThere was more of the fluffy fur around her ankle joints, her powerfully built legs tapering into a pair of dainty, two-toed feet. They almost looked like the hooves of a deer, seeming too small to support her, giving her a graceful and measured gait. \n\nShe was uncanny, reminding Moralez of stick insects, and the predatory mantises that had evolved to mimic the appearance of orchids. If a praying mantis had been tasked with masquerading as a human, it might have looked something like this. Still, those sympathetic eyes burned through his apprehension, drawing him in. \n\n\"Am I to be handed off to this gentleman?\" she asked, glancing at the man in the long coat. Her lips did indeed move, though not quite enough to match her speech. Her voice was somehow soothing, feminine, her grasp of English impeccable. Moralez swore that he heard a hint of a British accent. Her lower pair of arms rested about her hips, her fingers interlocking, while the upper pair hung idle at her sides. He had never seen a Bug's arms at rest before, they had always been swinging daggers or aiming plasma rifles. \n\n\"Yeah,\" the visored man replied, nodding to Moralez. \"This is the Security Chief, he's going to be responsible for you from now on.\" \n\nShe turned those strange eyes back to him, the two feathery antennae that protruded upwards from her head seeming to wave in a breeze that only she could feel. Much like her furry ruff, they reminded him of a moth. \n\n\"There is no need for concern, Security Chief,\" she said. \"My mission here is a peaceful one.\" \n\nMoralez still couldn't get over that voice, it was so out of place coming from her. He wasn't sure how to address the thing, should he treat her like he would any other ambassador? There was nothing to be gained by being rude, in any case. Better to err on the side of protocol. \n\n\"This way, please,\" he said as he gestured to the line of soldiers. She made her way over to them without complaint, her hoof-like toes tapping on the deck, the transparent wings trailing behind her. She kept her lower pair of hands clasped in front of her, the upper pair swinging in a very human manner as she walked. She paused briefly to look up at Blackjack, then the formation of Marines closed ranks around her, her five-foot frame obscured from view. \n\n\"Will you be staying on the station?\" Moralez asked, directing his question towards the stranger. \n\n\"We'll stick around a little while, make sure everything goes smoothly,\" he replied. He slipped his hands back into his pockets and leaned against the shuttle's hull again, seeming more bored by their interaction than anything. \n\n\"I'd like for you and your companion to identify yourselves,\" Moralez continued. \"Part of my job is knowing who comes and goes on my facility. If you're UNN, then you should be able to provide your service numbers upon request.\" \n\n\"I never said that we were UNN,\" the man replied with a smirk, \"and we're not required to identify ourselves. If you have a problem with that, then speak to the Admiral. You don't have jurisdiction over us.\" "
    ],
    "authorname": "Snekguy",
    "tags": [
        "femdom",
        "fur",
        "large breasts",
        "long tongue",
        "maledom",
        "masturbation",
        "romance",
        "size difference",
        "virgin"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/firebrand"
}