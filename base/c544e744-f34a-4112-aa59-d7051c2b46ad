{
    "title": "It Couldn't Be Helped Ch. 05",
    "pages": [
        "Crystal was still on her knees sitting back and as I looked at her, despite the fact that she just redefined the word 'satisfied' to me, I could still feel myself burning for her. My body was temporarily content but my mind raged at the injustice of not feeling or touching the sexy brown body in front of me. But first things first I thought, I needed to give up the props first. \n\n\"Crystal, damn girl\" I said almost bewildered \n\n\"That was so...It was so..\" I stammered as I rifled through my vocabulary trying to find the right adjective to meet her deed.\n\n\"God..\" I said shaking my head in wonder before trying again \"It was so..so..\"\n\n\"Yummy\" Crystal said more as a statement than a suggestion as she smiled at me provocatively. \n\n\"No\" I said smiling back at her \"Yummy doesn't cut it.\"\n\n\"Speak for yourself\" She shot back smiling before she started blushing. \n\nI heard her calling my cum \"yummy\" and that was it. My mind then told my body point blank \"Listen dude, I'm outta here. I'm going to get some of this black woman now. Your sorry ass can catch up later.\"\n\nI was still sitting with my back against the wall while Crystal was on her knees to my left.\n\n\"Speaking of 'Yummy'\" I said softly \"Come here.\"\n\n\"Why?\" Crystal asked teasingly as the sparkle in her eyes brightened from my request.\n\n\"A man has gotta eat too.\" I said grinning.\n\nCrystal smiled and sat up. She swung her left knee over my lap and straddled my thighs. That action brought her breasts parallel to my face and I gazed at them like a man possessed. Her breasts were so full and firm wrapped tightly in her velvet like ebony skin. I could see bumps of excitement protruding from her dark areolas while her thick half inch nipples had me painting a bulls eye on those bad boys instantly. \n\nCrystal sat back down on my thighs but then something happened between us. We didn't kiss or even say a word.\n\nWe just stared at each other and started touching.\n\nWe touched but there was an unsaid patience between us. The car and her falling to her knees had taken the edge off and allowed us to afford the luxury of savoring. But there was also something else. Something internal in each of us and it wasn't just our evolving emotions. It was something just as personal and just as powerful. \n\nIt was an aura of rebellious discovery. \n\nI glided my fingertips across her soft brown cheeks, her chin, and her lips. I stroked her coarse hair and from there to her neck, her shoulder blades, and her arms. Crystal did the same to me, gliding her hands softly across my white face, my shoulders, my arms, and through my hair. Our eyes gazed into each other while our jaws practically dropped in our laps.\n\nI was \"really\" touching my first black woman and she was \"really\" touching her first white man. Not just in a sexual sense because it's easy to get turned on by contrasting skins or to have the sexual act highlight the contrast. We were already both gloriously and happily guilty of that. This touching was different. \n\nIt was confronting and then celebrating our differences.\n\nIt was having the courage to open our minds up to self discovery while giving the finger to how we were raised and programmed. It was each of us shedding the bullshit and judging for ourselves by ourselves. Not just for a taste like we were an experiment or a fling, but rather to see if what we had inside ourselves as individuals, in addition to what we felt for each other, was deeper than the sea of prejudice we lived in.\n\nIt was me finding her ebony skin beautiful, not just because my white hand offered an exciting contrast to it or because it was suppose to be taboo, but because it was on her and beautiful all by itself. It was Crystal being intoxicated running her hands through my hair, not because it was new or was attached to a white face, but because it was on me and she loved how it felt in her hands. \n\nThose precious moments with Crystal sitting on my lap changed me forever. It was there that I realized there wasn't a label that applied to me or her when compared to how she felt against my touch. There wasn't an epithet or slur that anyone could ever utter to me that could challenge the security and depth of her caresses. I never felt more independent, more real, more alive, or more human in my life. I just know that the more we discovered and celebrated our racial differences, the more irrelevant they became.\n\nCrystal was a beautiful and sexy ebony woman. Her race and the color of her skin enhanced her to me, drove me crazy, made me lust after her like no other. Yet the second I felt her heart beating against my fingertips, the second I felt her warm breath against my hand, the second I contemplated all the things that made her special to me, no matter how hard twenty years of programming made me try, I couldn't see the color of her skin anymore in the context I was \"suppose\" to. I wasn't afraid of nor did I give a shit anymore about the repercussions of being with her.\n\nI just wanted to be with her. Period. \n\n\"You are so beautiful, Crystal\" I said softly still gazing into her eyes and touching her neck \"I want to look at you forever.\" I whispered. \n\nThat phrase wasn't a declaration of beauty; it was a declaration of love. I just didn't have the guts to drop the BIG four letter word on her yet. Rome wasn't built in a day anyway. \n\nCrystal blushed basking in my words. Then she spoke confirming to me that I wasn't alone when it came to caressing induced revelations.\n\n\"We're gonna make it, Sean\" She said firmly her eyes sparkling with adoration \"I feel it now. I know it now. But most of all because..\" \n\n\"I want it now too, Crystal\" I said cutting her off and finishing her sentence \"More than anything, girl, I just want my shot at the title.\"\n\n\"That's all I need\" I said softly but confidently \"Just one shot.\"\n\nCrystal tilted her head and smiled. She recognized the boxing lingo and then offered sweetly\n\n\"What if I told you that you already were my champ?\" She asked softly gazing into me.\n\n\"Then I'd quit fighting and retire on top\" I said grinning \"and take my CBA crown with me to the grave.\"\n\nCrystal got the retiring part but I could tell I lost her with the acronym. \n\n\"CBA?\" she inquired \"what the hell is that?\" she asked smiling.\n\n\"Crystal's Black Ass\" I replied with a straight face until we both burst into laughter. \n\nCrystal slapped me playfully in the arm and shook her head. Her eyes and her smile just poured affection into me. \n\n\"You're so crazy, Sean\" She said still giggling and shaking her head \"Crystal's black ass crown.\"\n\n\"I don't have no crown\" she said smiling mischievously \"but I do have this\"\n\nCrystal rose up and kissed me softly. A series of lip only kisses that were as emotional as they were sexy. We moved our heads back and forth repositioning them after each kiss making sure every bit our lips got attention. \n\n\"And I have these\" Crystal said pushing her chest out and looking down at her breasts and then back up at me. She grabbed both my wrists and then sat back down on my thighs. Her eyes burned into mine as I overdosed from the reality that an older and beautiful woman was going to make me touch her. Not let me touch her, but make me touch her. We are talking Every Young Man's Fantasy 101 here. And Crystal was making me live it.\n\nShe slid her hands down my wrists to the back of my hands and put them on her flat tummy. Crystal looked at me longingly and then used her hands to guide my hands up her soft tummy until her thumbs grazed her brown breasts while my hands agonizingly were still underneath them.\n\nI was completely under her spell when Crystal then slowly pulled my white hands completely under, through, and then on top of her hot ebony breasts. She broke eye contact, arched her back, squeezed her hands along with mine, and moaned \"Ohhhhh.\"\n\nIt turned me on so bad I wanted to scream.\n\nI could feel Crystal's hard nipples in between my fingers as I felt her full breasts for the first time. Her hands were still on top of mine and although I appreciated the escort, I now wanted them out of my way. As if she possessed ESP, Crystal let go of my hands and I immediately began kneading her breasts with soft yet determined strokes. The warmth and feel of her skin and the fullness of her 36C breasts drove me insane. I literally wanted to squeeze them until they popped like a balloon. I had to make a conscious effort not to squeeze her too hard as I grinded my teeth trying to deflect the animal lust her breasts ignited in me. \n\nI took my fingertips and softly ran them in circles around her areolas. Crystal shuddered and started swaying her body side to side purposefully making her breasts rock back and forth so my fingers would graze her nipples. I then planted my hands lightly on both breasts and opened my fingers wide. Crystal arched her back and began heaving her ebony breasts back and forth as her dark nipples raked across each of my white fingers before popping out in the spaces between them. The sight paralyzed me making my mouth water at the thought of devouring every inch of her chocolate mounds.\n\nShe continued swaying until I felt her nipples pop up between my middle and forefingers. Like two pairs of scissors closing and cutting, I clamped my fingers around her nipples and squeezed firmly watching them swell in between my white digits from the pressure. Crystal moaned loudly and arched her back even more pressing more of her luscious brown breasts into my hands. Meanwhile, having moments earlier come to the realization that we could now have our cake and eat it too, we both stared like a pair junkies at the awesome contrast between my white hands and her hot ebony breasts.\n\nI desperately wanted them in my mouth but before I could act Crystal struck a pose with me that obliterated any logical thought I had left in me. As I squeezed and pinched her rock hard nipples, Crystal put one hand on the wall above my shoulder and the other she started running through her hair holding her elbow out. She then arched her back more and moaned from my touch rolling her neck back and forth as her face pointed towards the ceiling sending her black hair rocking back and forth. \n\nI have never seen a more beautiful or erotic sight in my life. \n\nLike a rabid dog I lunged forward pressing her breasts together and began devouring every bit those ebony mounds that I could. Crystal loved my crazed assault and she let me know it from the start.\n\n\"Yesssssss, Sean!\" Crystal hissed \"Ohhhh..Suck them baby! They're yours!\" She moaned loudly \n\nHer hard nipples were helpless as I rolled them over and over into my mouth and sucked on them with every bit of pressure my lungs could produce. My saliva shined off her breasts and my chin as my face hungrily slid back and forth engulfing each chocolate mound over and over.\n\n\"Oh Yeah baby that's it!\" She cooed \"Eat my black titties baby! Oh hell yeah! Bi..\"\n\nBefore Crystal could get the 'T' in 'bite' out of her mouth I clamped my teeth around her left nipple and bit down pulling away from her as I bit. \n\n\"Ahhhh Ohhhhh Shit!\" Crystal bellowed as her hand slammed into the wall behind me while her other latched onto my hair pulling my face even more into her bosom. \n\nFrom one fat nipple to the next I kept biting and devouring as much of her ebony breasts as I could feverishly jam into my mouth. Right then I noticed my body had came back online as I felt my cock twitching and enlarging. Crystal kept moaning loudly and swinging her head side to side as her hair flew everywhere.\n\nCrystal then frantically grabbed my hair behind my head and yanked down pushing my face upwards. She lunged forward with so much force that if we had hit foreheads we both would have been knocked out. But her aim was true and her mouth was opened so wide that it immediately encompassed mine. Her tongue rammed straight down to the back of my throat and we began kissing hungrily. \n\nAfter a while Crystal broke our kiss and just burned her lust filled eyes into mine. She pushed back against me and stood up extending her hand for mine. \n\n\"Take me to bed, baby\" She said eagerly yet authoritatively. \n\nThis was my first real equality test. So far it had been Crystal being the aggressor, Crystal setting the agenda, and Crystal leading the way. I guess it was natural for me to concede all those things to her because that had always been our disposition. Whether I liked it or not, the big sister aura was real and it was almost instinct for me to just defer to her. Plus, I was loving her aggressiveness and I really relished being the prey. It turned me on to no end watching her go get what she wanted which, of course, was me. \n\nStill, however, I wasn't going to let that message to be legitimized. I wasn't going to allow us, especially in light of our new status, to set the precedent where she dictated the who, what, where, when, and whys. I may have been six years younger and six years less educated than her and as much as I respected her and her accomplishments, that didn't equate to her having the right of way when it came to us or my desires. There was only one person on the planet that endeared that kind of fear and obedience from me and his name was Dad. Crystal, meanwhile, was about to find out that she wasn't him. \n\n\"I don't think so, girl\" I informed her while standing up.\n\nI threw one arm around her waist and swooped up her long ebony legs with the other and picked her up. She felt as light as a feather to me. \n\n\"I got other plans for you\" I said looking into her eyes as I began carrying her over to my big beige couch. \n\nAt first Crystal reacted with a look of almost complete shock. She obviously wasn't expecting me to grab the reins of power so abruptly and it caught her off guard. Her mouth was wide open and she looked at me like she couldn't believe she had just been deposed by my verbal and physical coup de tat. As I made my way to the sofa, however, her shocked demeanor vanished. In its place came a look of hungry and happy consent culminating in a big old Kool Aid smile and a flurry of kisses to my face and neck. \n\nI set her down on her back across the length of the couch while I knelt down on the floor beside her. The sight of her black hair splashed against the light exterior of my sofa and the depth of her dark brown skin exploding into my eyes had me grinding my teeth in anticipation. \n\nI pressed my weight against the front of the sofa and leaned over her and our lips met instantly. Crystal wrapped both arms around my head and pulled my face into hers while I cradled her head with one arm and began touching her tight ebony body with the other. \n\nI ran my free hand down her neck and through her cleavage until I scooped up handfuls of her breasts and began squeezing and twisting them. I worked over her nipples pinching them in between my thumb and forefingers causing her to moan loudly and violently suck my tongue deep into her mouth. Crystal was in flames now and her whole body squirmed back and forth as her legs began opening and closing like a wind blown shutter. \n\nI pulled her hands down from out of my hair and placed them on her breasts. \n\n\"Press those beautiful breasts together, baby\" I ordered \"Show them to me.\" \n\nCrystal's eyes sparkled and she moaned gleefully before mashing them together putting her thick nipples practically side by side. I immediately pounced on her dark nipples running my tongue around her areolas and sucking and biting them hungrily. Crystal arched her back off the couch moaning and squirming even more. \n\nI then started running my hand down her stomach and clamped it firmly on her inner thigh. I stroked one thigh tenderly again and again before raking my hand across her drenched pussy and clamping on to the other thigh. Crystal moaned loudly and then gasped when she realized my hand wasn't staying put between her legs. I began stroking that thigh when I felt her hand leave her breast and latch onto my hand and pull it towards her pussy.\n\n\"What, girl\" I said coyly after popping her nipple loudly out of my mouth \"You think you are the only one who gets to take their time? You think I don't get to take you down piece by piece like you did me?\"\n\n\"Think again\" I said grinning breaking out of her grip. \n\n\"Please, Sean, baby\" Crystal gasped \"Please\" she echoed again revealing a vulnerability I hadn't seen before while confirming I did infact have power. This was new ground for us and I loved it. The days of my being intimidated by her were now officially over. Thus, having accomplished my mental mission while also being a sucker for good manners, I decided it was time to give her what she wanted.\n\nBut she was going to get it my way. \n\n\"Is this what you want, Crystal?\" I said looking into her eyes while sliding my hand slowly onto her bubbling ebony pussy. I let my hand encompass her entire shaved mound as my fingers caressed the folds of her slit while my middle finger grazed her opening. \n\n\"Oh yessssss...\" Crystal moaned slamming one hand into the back of the sofa while lifting her ass up to increase the pressure my hand was applying. Her thrust pushing her eager pussy more into my hand as I felt her hot juices leaking out of her. \n\n\"You want Sean to play with this pussy don't you baby?\" I cooed as I began stroking the length of her pussy. My hand bottomed out against the couch as I slid all five digits up against her dripping slit and spread her swollen lips wide open. Again and again I smeared her molten juices all over her smooth and puffy mound. \n\nCrystal moaned loudly and I watched as her hand began digging into the sofa. I started rubbing my hand around her pussy in circles brushing against her thick clit trying to get as much moisture out of her as I could without actually entering her. Crystal gyrated all over the couch getting hotter and hotter saturating my hand as I became even more drunk with power. She hadn't given me an intelligible response to my question yet so I felt the need to extract one from her. \n\n\"I'm sorry, I didn't hear you, Crystal\" I said before raising my wet hand off her juicy ebony pussy and flattening my fingers together. I whipped my hand back down firmly slapping her pussy across her clit and slit as the sound of wet skin getting whacked bounced off our ears. \n\n\"Oooooooohh\" Crystal belted out shooting herself up onto her hands while her eyes locked on to my white hand in between her brown legs. She moaned loudly at the sight until it became a helpless whimper and she crashed back down on her back. \n\n\"Excuse me?\" I said firmly as the crack of my hand smacking her pussy again echoed throughout the room making her cry out and sending her skyward again. \n\n\"Yes! Yes baby! I love this shit!\" Crystal wailed flinging her arms around me and sloppily and feverishly licking and biting my lips. \n\n\"God damn I love you playing with my pussy\" she hissed to me gasping.\n\n\"Good\" I said totally obsessed with the thought of what I was about to tell her.\n\n\"Because I am going to eat your tight black pussy right now like no other.\" \n\n\"Ohhhhhhhhhh\" Crystal whined with a half excited and half helpless tone before crashing back down on her back.\n\nI stayed on my knees at the base of the couch and grabbed her right leg under her knee. I pulled her leg out spinning her around and then draped her leg over my shoulder putting me in between her legs. Crystal's sleek brown legs hung off the couch until she clamped her heels into my waist. This cause her knees to bow out and I immediately put both hands on her inner thighs and began stroking her inner thighs from top to bottom while eagerly anticipating my first proper introduction to Crystal's sweet ebony pussy. \n\nCrystal was now lying diagonally across my sofa with her head in the corner between the armrest and back. Thus far I had been obsessed with her lower body and when I glanced up at her face I saw something that both surprised me and honestly, pleased me.  ",
        "Her eyes were locked tight and her face grimaced with a mixture of uneasiness and fear. Crystal was the most powerful sexual partner I had ever been with but now she was anything but that. Lying on her back with me between her legs seemed to make her feel vulnerable, insecure, shy, and powerless. And that scared her. And I could see it. \n\nYet seeing it just made me want her even more. Maybe it was the old school part of me that rejoiced in seeing it. Just knowing that spreading her legs in front of me could produce that kind of real emotion. Like she didn't just do this kind of shit everyday and that she would silently confront those fears in order to give me what I wanted. \n\nI resolved right then and there that we would tear down those walls together.\n\n\"Open your eyes, baby\" I said softly \"Let me see those brown diamonds\"\n\nCrystal opened her eyes reluctantly and I watched as they fluttered in protest while her heels fell off my waist and her knees slightly retracted inward.\n\n\"Now get up on your elbows, baby\" I said softly but to no avail as she whimpered and shook her head no.\n\n\"Now!\" I said soothingly while nodding my head yes.\n\nCrystal reluctantly sat up on her elbows. Her black hair flowed behind her while several strands rested on her brown shoulders and chest. She continued sending out mixed signals as her face glowed with a hungry anticipation while her short, labored pants revealed a deep held fear. \n\nI smiled in approval locking my eyes onto hers. I then grabbed her knees and began parting them slowly working my hands to her inner thighs and pushing her legs back as I went. Inch by precious inch I spread my first ebony woman wider and wider and wider. \n\n\"Oooohhh God\" Crystal moaned as her eyes rolled back into her head and her whole body began shuddering. \n\n\"Don't leave me baby\" I managed to say mesmerized by what was unfolding before me.\n\nCrystal brought her helpless eyes back to me as I continued opening her up until I had her legs and shaved ebony pussy as wide as they could get. Crystal just gazed at me shaking.\n\nI stared at this spread eagled ebony woman and a lust and desire hit me that I never realized I had in me. I could see a faint streak of pink meat in her slit surrounded by her swollen pussy lips that shined with her juices. The brown folds hiding her clit were semi opened and I could see how thick and big it was. Her puckered asshole beckoned me from afar. The second I added them all up, I knew it would take a crane to pull my face out of her ebony treasure.\n\n\"Don't worry baby\" I said grinning into her helpless eyes while silently laughing at the plagiarism I was about to commit. \n\n\"I'm fixing to dine on your fine ass too.\"\n\nI lowered my face to that sweet ebony pussy with the intention of going slow and milking it for as long as I could before making her cum. When my face got within six inches of her slit, however, the smell of her juices smeared all over her bare mound by yours truly hit my nostrils and I found myself reevaluating that plan. Her sweet aroma spiked my appetite and I knew right then I might be able to start slow but the milking plan was getting launched. \n\nI stole a look at Crystal who was still on her elbows wide eyed watching me get closer and closer to her opened holes as her face painted the picture of shock and desire. I knew the sight of my white face in between her legs and the thought of being eaten by a white boy drove her insane. Her lips were in an 'O' shape and she was panting with anticipation. \n\nOn second thought, I said to myself, fuck going slow. I planted my lips over Crystal's juicy slit and pushed my tongue deep inside. \n\n\"OOOooooooooooohhhh\" Crystal wailed rolling her eyes back into her head.\n\nI started lashing her pussy with deep tongue strokes digging my tongue into the bottom of her slit and moving it all the way up and back down slowly and purposely. I ran my tongue inside her walls on both sides trying my best to suck up every bit of moisture she had inside that sweet kitty. I couldn't get enough and for several minutes I was lost in my own trance. Eating her pussy was suppose to be about her but I somehow lost track of that as her delicious taste and sweet smell made any agenda I had useless. \n\nCrystal didn't seem to mind my transgression as she threw her head back and forth moaning and groaning her approval while latching one hand into my hair. I finally caught myself and pulled my tongue out of her pussy and kissed her milky slit softly. Then I tested the waters.\n\n\"Talk to me baby\" I said looking up at her and immediately noticing the transformation.\n\nThe grimace, the unease, and the fear were all gone. Her brown eyes burned only with passion.\n\n\"Oooohhh God please don't stop, baby! Please!\" Crystal whined lovingly\n\n\"I love you eating my pusssssssssssyyyyyyy.\" She said while the vision of my tongue slicing into her slit again extended her pronunciation. \n\nCrystal was being a trooper and was still on her elbows watching me lick and devour her pussy. I then decided it was time to reward my ebony baby for her courage. I slid my tongue out of her pussy and took my middle and index fingers from both hands and place them on the sides of her clit and opened the folds as wide as I could.\n\n\"Ohhh Shit!\" Crystal wailed titling her head back and rolling her eyes back again but like an addict she brought her eyes right back. \n\nI leaned forward more so I could be over her clit and then looked at Crystal seductively and then back down at her clit. I opened my mouth and stuck my tongue out slightly and then let every drop of our mixed juices slowly roll off my tongue and onto her clit. I looked back up at Crystal and slowly began poking my tongue around and on top of her ball as my spit ran down her canal to her slit. Crystal lost it.\n\n\"Ohh God Sean, Nooooooo!\" she whined loudly shaking her head back and forth overdosing from the sight of my white face and pink tongue stabbing into her brown flower.\n\nI clamped my mouth around her clit and began licking it softly poking it with my tongue slowly escalating it to full and long strokes. Crystal inhaled loudly and I felt her whole body start to vibrate. She instictively and inadvertently rose up off her elbows placing her hands flatly on the couch lifting herself up and slightly away. This pulled her clit away from me and I wasn't having any of that.\n\n\"Don't you ever take this pussy away from me, girl!\" I scoldingly growled to her. \n\n\"Not ever!\"\n\nI forcefully hooked my arms around her thighs and pulled her back closer to me locking her in place. She fell flat onto her back helpless.\n\n\"Ohhhh God Seannnn!\" Crystal wailed panting.\n\nI fastened my lips back around her button and drove my tongue hard into her throbbing clit licking and stroking it with authority. Crystal's hot body started trembling severely as her hips thrust wildly forward while my white mouth remained tightly sealed to her ebony mound. Crystal jerked violently but there wasn't anything or anybody who could have pried my mouth off her delicicious ebony pussy. My neck easily rode out her thrusts as I was hell bent on making this beautiful black woman cum in my mouth. Crystal then slammed her hands into the sofa and cried out almost apologetically\n\n\"I can't hold it, baby! I can't!\"\n\nI replied by hungrily sucking Crystal's entire clit into my mouth while ramming two fingers deep up her quivering ebony pussy. \n\n\"Aaaggghhh\" Crystal screamed at the top of her lungs as she began cumming. Her body convulsed violently lifting her ass up and clamping her legs around my shoulders while I sucked her clit hard and drove my fingers in and out of her climaxing pussy. \n\n\"Uuuuggghhh' she groaned flexing her stomach again and pushing more hot cum out of her body as her tight pussy locked around my fingers. Her face contorting and relaxing as each wave rippled through her while her warm cum began drowning my plowing fingers. \n\n\"Uuuggghhh God Sean!\" Crystal screamed again from her loins shooting up on her hands and whipping her head wildly as her beautiful black hair flew everywhere. She latched onto my hair violently and pulled it with abandon while unleashing more hot cum into my face. \n\n\"I can't stop! I can't stop cumming! Ohhh Fuckkkk!\" Crystal belted out as another wave slammed into her body shooting her ass off the couch again while digging her fingernails viciously and painfully into my neck. \n\nCrystal's confession told me that this was the pivotal moment. I could keep going and totally decimate her right now or I could throttle down and keep the festivities going. I chose the latter because of how good she did me and because I didn't want her to ever forget the first time I ate her pussy. Crystal was going to get my entire oral sex playbook.\n\nThus, it was time to diversify.\n\nCrystal rode out the wave but before she could get aboard the next one I took my tongue off her clit and pulled my fingers halfway out of her pussy. I curled them slightly upward and massaged her G spot keeping the flame alive. \n\n\"More baby!\" Crystal whined to me passionately her body still tense and loaded \"I have so much cum for you!\" she said squirming and panting loudly. \n\n\"I know, baby\" I said sexily as my other hand entered the fray stroking her swollen lips and teasing her clit before stating my demand.\n\n\"But I want that special shit baby.\"\n\nCrystal replied with her eyes as they told me point blank I could do whatever I wanted to get it.\n\n\"I want that special shit baby\" I said seductively \"that thick, white creamy cum that has been in you since you first wanted me, since I was eighteen\" \n\nCrystal cooed loudly at the words that confirmed I was going to make her cum again.\n\n\"And I know how to get it.\" I said softly\n\nCrystal was burning but she looked at me curiously and then sadly as I removed my fingers out of her leaking pussy. I took my saturated fingers and put them in my mouth slowly sucking her cum off them while my left hand slipped two new fingers back in her pussy. \n\n\"Ohhh that's my baby!\" Crystal blurted out happily watching me eat her cum as the new fingers inside her continued fanning her flame.\n\nI burned my eyes straight into hers and slowly pulled my fingers out of my mouth. I took my now liberated hand and dropped it down past my left hand and started running my wet fingers over her already saturated and puckered asshole. Crystal figured out the game plan and began squirming and whimpering helplessly\n\n\"No..No..No..\" she wailed dishonestly shaking her head back and forth just knowing this was going to rip her apart.\n\nI didn't give her time to elaborate as I began sinking my middle finger deep up her tight ass and down to my knuckle in one slow, but fluid stroke.\n\n\"AAhhhhhhhhiiiieee\" Crystal howled in a long, high pitched voice bolting up on her hands as I began pumping and twisting my finger deep up her tight ass. I pulled my fingers out of her pussy halfway and bent them to the side so she could see what my white fingers were doing to her ebony pussy and dark asshole. Over and over I worked both juicy holes slowly causing Crystal's mouth to lock in an 'O' shape as she whimpered and stared in awe at her brown holes swallowing my white digits.\n\n\"I want that special shit baby\" I cooed to her again \"that thick shit you have been saving for me since day one\"\n\nI then savagely slammed two fingers deep into her pussy again and teasingly pulled my finger almost all the way out of her asshole barely leaving the tip inside. After that vision hit her eyes Crystal became possessed.\n\nHer eyes burned into me with a mixture of pleading and anger. She panted loudly and grabbed my right wrist frantically trying to push my finger back up her ass. I could see her fighting to hold back until she got what she wanted but I purposefully fought her. It wasn't until I was able to covertly place another finger on top of the one I already had in there that I let her have her way. Crystal pulled violently on my wrist getting one more finger up her ass than she bargained for letting out a primal scream that still resonates in me to this day.\n\n\"AAAAGGGGGHHHH\" Crystal screamed from my four digit invasion as her brown body began convulsing violently and her monster climax began.\n\n\"Ohhhhh...Ohhhhh..Ohhhh..UUUUGGGGHH\" She wailed as I pummeled both holes viciously grinding and fucking them so hard that her sweet juices started flying off my hands.\n\n\"Fuck yeah, baby!\" I growled \"Squirt your shit all over your man!\"\n\n\"Ohhhh Gaaaawwwddd\" Crystal shouted flexing her entire body as I felt her warm cum flooding around my fingers. Her long black hair flung wildly side to side and front to back while her head whipped violently in all directions. \n\nThe whole point of this was to get the creamy white stuff so my mouth went straight down to her clit to get it. I hungrily sucked her hard clit into my mouth rolling it around between the roof of my mouth and tongue while humming moans of encouragement.\n\n\"Sean! Ohhh baby! Ohhh Fuuucckkk!\" Crystal growled as the added stimuli of my tongue and mouth humming around her clit decimated her effectively ripping out her remaining cum by force.\n\n\"Uggggggghh Ohhhhhh Uggggggghhhh!\" Crystal groaned intensely as her body contracted violently. She grabbed my hair savagely and pulled my face deeper into her ebony pussy as wave after wave crashed into her one on top of the other.\n\nCrystal belted out screams and long, labored groans over and over as she thrashed uncontrollably pushing out her liquid love all over my face. Her tight, black body flexing and vibrating non stop while she made sounds I never knew a human being could make.\n\nCrystal's sweet ebony body kept convulsing and cumming but she had no more air to scream with and could only make sobbing whimpers and silent screams as she then released my hair and began pounding her fists into my shoulders. I kept going and going until couldn't tell the difference between ecstasy and agony anymore. \n\nI rose up and pulled my fingers out of her. Crystal fell to her side like a rag doll. Her body kept shaking and twitching uncontrollably as her eyes fluttered and closed. I sat there and I remember laughing not in a bad way but just chuckling because I felt so good making her feel so good.\n\nI basked in the stardom of being, as she put it, her champ. She might have said it but now I felt like I deserved it. This was my moment to raise my championship belt and parade around the ring with it. \n\nCrystal was curled up in the fetal position and I stroked her hips and the small of her back until she regained herself. She opened her eyes and smiled before blushing uncontrollably. I smiled back at her grinning proudly like I was the shit. \n\n\"You ok?\" I asked softly. \n\n\"Hell no, boy\" She said with a scratchy voice and grinning \"You almost killed my black ass, Jesus!\" she said before we both busted out laughing. \n\n\"I only have two things to say to you Sean Joseph\" Crystal said smiling using my middle name skillfully.\n\n\"One, You ain't ever getting rid of my black ass after that\" she said smiling.\n\nCha Ching. The aftermath she had expected me to produce had indeed been delivered.\n\n\"And two, who in the hell taught you how to do that?\" she asked shaking her head in disbelief while giggling. \n\nI grinned at her and then in my best female ghetto voice complete with hands on hips and neck gyrations I said\n\n\"All them little white tramps that's who! Uh huh, that's right, I said it! Them young ass white bitches taught me. Yeah, Bet!\"\n\nCrystal burst out laughing at my imitation shaking her head.\n\n\"You're so crazy, Sean\" she said laughing as she grabbed a pillow off the sofa and snuggled it into her bosom. Crystal quit laughing and then gazed happily into my eyes and added\n\n\"But that's why I adore your ass.\" \n\nTo Be Continued... "
    ],
    "authorname": "DavidJ",
    "tags": [
        "crystal still",
        "shit crystal",
        "ebony breasts",
        "crystal screamed",
        "head crystal",
        "top crystal",
        "make touch",
        "ebony woman",
        "hot ebony",
        "hair flew"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/it-couldnt-be-helped-ch-05"
}