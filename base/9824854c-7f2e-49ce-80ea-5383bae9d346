{
    "title": "Tucker's Studio Ch. 29",
    "pages": [
        "All people and places are fictional. All characters are over eighteen.\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n Marsha Throws A Party\n\n\n\n\n\nDoris was nervous when she saw black folks walking in her hallway. There were black families that lived in Tucker's building, but none on her floor. Tucker knew his eighty-three year old next-door neighbor had different views of race than he had. It wasn't that she was a bigot, she'd just grown up isolated, and it was a challenge for her each time she saw \"colored people\". Jamar and his girlfriend gave Doris quite a shock when they rode up in the elevator with her and got off on her floor. She wanted to ask if they'd made a mistake, but she held her tongue. It was an even bigger shock when Jamar asked her a question. \n\n \"Does Tucker Sims live on this floor?\"\n\n Not only was he darkly black, he had a foreign accent! Doris was speechless for a moment, and her mind worked furiously. Right next door to me? That's where they're going?\n\n Jamar was ready to wander down the hall looking at door numbers when Doris finally spoke.\n\n \"He's next to me. 46. Just down on the right.\"\n\n \"Thank you. Beautiful evening, isn't it?\" Jamar said, his big smile brightening the hallway.\n\n He took his girlfriend's hand and found Tucker's door, knocking on it as Doris walked slowly by. She fumbled for her keys when she reached her door, on purpose, so she could see what happened next. Marsha greeted them in a sexy cocktail dress, looking taller than usual in her high heels. Doris only got a glimpse of her, and heard a few bars of the jazzy music before the smiling people all disappeared behind the big door with number 46 on it.\n\n \"Is this Latanya?\" Marsha asked, smiling as she ushered them in and shut the door.\n\n \"The one and only,\" Jamar said, his smile still beaming. He was proud to have Latanya on his arm, but nervous about how she would handle things. His only sexual experience with her had been one-on-one.\n\n \"It's so nice to meet you!\" Marsha said, giving her an unexpected hug. \"I'm Marsha.\"\n\n \"Marsha does the hair and makeup for the women,\" Jamar said.\n\n \"Oh, okay,\" Latanya said. \"Yes, I've heard all about you all. I feel like I already know you.\"\n\n \"Good, 'cause we're like a big family here. We're so happy to have you join us!\"\n\n Jamar was suddenly hit with a sense of nervous dread as he watched the two women chatting. Latanya was well aware of the 'part time' work he did in front of the camera, fucking the nervous amateur women who chose him, but he hadn't told her about all the off camera shenanigans with Liz, Marsha, Kelsey, Tucker's old girlfriend Rhonda and others. He was hoping letting Latanya in on the fun would lessen the blow when she inevitably found out about all that, but he hadn't even told her there might be sex at the party. It was a big chance he was taking, and only time would tell how it worked out. He took her hand, led her in and introduced her to the others.\n\n Kelsey and Hannah were there, with Billy Carpenter and Raymond. Hannah and Billy were dating, and Raymond had made the trip from school on short notice when Kelsey told him Marsha was hoping he could make it. The two girls were wearing sexy little cocktail dresses, the way only hot nineteen-year-olds can wear them. In other words, there wasn't a heterosexual male in the room without a swollen cock just seconds after the girls walked in the door.\n\n Chip was there with his husband. He'd initially declined the invitation, knowing the party was planned to be a sexual free-for-all, but Tucker talked him into stopping by for a drink or two.\n\n \"We'll stay if you boys want us to suck your cocks,\" Chip said right before Jamar and Latanya arrived. After the awkward silence he laughed hysterically. \"Don't worry, Andrew and I have dinner reservations.\"\n\n Ginny and Ralphy were there. They were both feeling nervous about the orgy Kelsey had told them to expect. They wanted to be there, they didn't want to miss it, but it was new territory and both of them had sweaty palms.\n\n With Hannah and Raymond on the guest list, Kelsey had felt funny asking Marsha if her friend Brie could attend. Brie was still having a miserable time at school. The college she was attending was religious and strict \u2014 she knew that going in \u2014 but Brie wanted to teach young children and the school's Early Child Education program was among the best in the country. Brie was toughing it out, but the lack of a sexual social life was killing her. \"We'd love to have her!\" Marsha had said when Kelsey explained the situation. Brie didn't think her old car would make the trip, so she took the bus and Tucker picked her up at the terminal. They made their entrance soon after Jamar and Latanya arrived.\n\n \"Brie!\" Kelsey squealed. She ran to the door and hugged her, and swept her away, down the hall to the spare bedroom to help her change into her party dress.\n\n \"That is a cute girl,\" Tucker said as he watched them disappear into the bedroom.\n\n \"Did you offer her a job again?\" Marsha said, smirking at her horny man.\n\n \"I did,\" he said, still lost in a dreamy trance.\n\n \"Can you check these?\" Liz yelled to Marsha from the open kitchen. Crostini hors d'oeuvres were in the oven, and things were looking ready.\n\n \u2014\n\n \"Dearly beloved, we're gathered here today...\" Tucker let his voice trail off as he raised his glass and smiled. \"Sorry, that's goofy, isn't it? It's the truth though. Jamar, Marsha, Chip...working with you guys all these years has been has just been fantastic. I can't imagine a better crew. I can't believe there's a happier production studio anywhere on the planet. You guys are the reason our amateurs have so much fun. Billy, Ginny, Ralphy, Kelsey, and all the rest of the family who're not here tonight, you guys are the best, putting yourselves out there the way you do. I'll be forever grateful for your talents and your friendship. Latanya, Brie, Hannah, Raymond, Andrew...I'm glad you're all part of the family too. You're a big part of why things are so happy around the studio, whether you realize it or not. And Lizzy, you're representing the amateurs who've put Tucker's Studio on the map. We're nothing without you. And Marsha and I, well, we're nothing without you too. Sorry everybody. I didn't mean to get all mushy tonight. I hope you all enjoy the party.\"\n\n Marsha beamed at her sweet man, and everyone raised their glasses with him and drank. Latanya was at the bottom of her second strong gin and tonic already, her nerves making her extra thirsty. She was a 'speak up' kind of woman, and the alcohol let it flow...\n\n \"Can I ask a question?\" she said. \"Why's porn so much a man thing? I mean, the amateurs you get, they're all women, right?\" she asked.\n\n \"Men have always been the biggest audience, yeah,\" Tucker answered. \"That's not to say there's not a whole lot of women watching.\"\n\n \"You'd get a lot more if you brought in some everyday men,\" she said.\n\n \"It's kind of a...mechanics issue, Latanya,\" Tucker said. \"How can I put this...not everybody gets it up like Jamar.\"\n\n \"You can say that again,\" Chip chuckled. \n\n \"Oh,\" Latanya said. \"Well I never had that problem.\"\n\n \"That's 'cause you're wicked hot,\" Ralphy said. \"You could get anybody hard.\" He glanced at Chip and Andrew. \"Well, maybe not...\"\n\n Everybody laughed. Latanya looked amazed. She'd fantasized about white guys a little, but she never really thought she was attractive to them, in that kind of way anyway. She'd watched Ralphy on the website, but in person he was delightfully down to earth and...interesting. She still had some more questions though.\n\n \"So when Jamar does a scene, is it your idea, or his?\" Latanya asked Tucker.\n\n Jamar looked embarrassed. Tucker knew it was sensitive ground to cover, especially in a public airing.\n\n \"Always mine,\" Tucker said, fibbing to maintain peace in Jamar's household. \"I could tell he'd be great at it, the same way I can tell you would.\"\n\n \"Me?\" Latanya said. \"You're crazy!\"\n\n \"Anybody else here think I'm crazy?\" Tucker asked everybody.\n\n \"Not me boss,\" Ralphy said, and everyone agreed. \n\n \"Me?\" Latanya said. \"You guys are all...oversexed or somethin'.\" She squirmed a little in her short dress as she felt everyone's eyes on her. \"Get me a drink baby?\" she asked Jamar.\n\n \"I think you got what it takes, what can I say?\" Tucker said to her.\n\n \"Your ass is amazing,\" Kelsey said, admiring how round and sexy it looked in the tight black dress.\n\n Latanya's lungs tightened and a sudden jolt of horny hit her. So many eyes looking at her, so many thoughts bouncing back and forth.\n\n \"I don't know if a gay man's opinion counts honey, but yeah, that's an ass,\" Chip nodded. \"And those are some tits girl!\"\n\n \"She doesn't like her tits, or her ass,\" Jamar said as he handed her a fresh drink.\n\n \"Jamar!\" she said, sounding quietly horrified.\n\n \"I like her tits,\" Hannah said softly. \"I wish I had 'em.\"\n\n \"Hannah you're perfect sweetheart,\" Marsha said. \"I wish you'd stop talking like that.\"\n\n \"Your mama black?\" Latanya asked Hannah.\n\n \"My father,\" Hannah said.\n\n \"That's it right there,\" Latanya said. \"If it was your mama you'd have a big ass like me.\"\n\n \"Ginny's got a little ass, but it's sooo cute,\" Kelsey said. \"Just goes to show you, sexy doesn't have much to do with size.\"\n\n \"Well said Kelsey,\" Tucker said. \"Sexy doesn't have to do with beauty either. You ladies got it all though \u2014 sexy, beautiful...big curves and sleek curves. Does that kind of thinking translate to men, I wonder?\"\n\n \"Shit yeah,\" Kelsey said. \"You guys are all really different looking, but you're all sexy. I love fucking all of you.\"\n\n \"You don't love fucking me sweetheart,\" Chip chuckled, shaking his head. \n\n \"I would if you wanted to. Would you Chippy?\" the little redhead said as her eyes opened wide. \"Oh my God, that'd be so fun!\"\n\n \"Sweetheart, if I wasn't gay you'd be at the top of my list,\" Chip laughed. \"What do you say Andrew? It's about time we left for the restaurant, isn't it?\"\n\n \"Yes. It was so nice meeting you all,\" Andrew said. \"Chip just loves working with you.\"\n\n \"Bye you guys. Stay longer next time,\" Tucker said as he walked them to the door.\n\n \"We'd just be in the way, unless you want us to run the cameras or something,\" Chip smirked.\n\n \"You could fuck each other in front of us, that'd be cool,\" Kelsey yelled over when she heard what Chip had said.\n\n \"Sorry honey, you guys are on your own. I hope it's as fun as I think it's gonna be. Bye everybody,\" Chip said.\n\n Everyone bid he and Andrew adieu. Everyone except Latanya that is. She was stunned by what she'd heard. Was it going to be that kind of party? Were porn people that crazy and wild? Surely Jamar would have told her, wouldn't he have? She was too nervous about the idea to even ask him.\n\n The drink he'd brought her was a doozy, at least a double if not stronger. It was gone in a matter of moments. Jamar loved how frisky she was when she'd had a few, so he wandered off again to mix her a refill.\n\n \"Anybody wanna play truth or dare?\" Marsha asked.\n\n \"Yeah! Fun!\" Kelsey said.\n\n Latanya and Ginny looked a bit concerned, but they both had similar thoughts \u2014 if I'm here, I'm doin' it.\n\n \"Yes?\" Marsha asked everyone.\n\n \"Sure Miss Marsha,\" Jamar said as he returned with a fresh drink for Latanya. \"We know you'll take good care of us.\"\n\n They all sat in a big circle on the floor, with the city lights glowing brighter in the fading darkness outside the big floor-to-ceiling windows. It was a rather stunning circle of humanity, at least from a male point of view. Kelsey and Hannah sat cross-legged, their little cocktail dresses putting every inch of their legs on display, with their little colored thongs providing a nice target for the wandering eye. Brie caught on and mimicked them, and Marsha, sitting slightly more lady-like with her legs together and wrapped around her, pulled the hem of her sexy dress up high.\n\n The men looked pretty good too in their cross-legged positions, Billy in tight pants that molded to his fleshy cock lump, Jamar in a tight shirt that showed off his tall frame and perfectly sculpted chest, and Ralphy nearly busting out of his too-tight clothes, his hard-body muscles looking ready for just about anything.\n\n \"We'll work our way around,\" Marsha said. \"Lizzy, truth or dare?\"\n\n \"Oh God,\" she said, dreading going first. \"Dare?\"\n\n \"Crawl to Raymond on your hands and knees, arch your back, and give him a long, hot kiss.\"\n\n Liz didn't think it was too bad of a request until she got on her hands and knees and realized the sexy short dress she was wearing didn't cover her well in that position. Her face reddened as she crawled and felt the fresh air on her ass. She started to kiss Raymond.\n\n \"Arch your back honey,\" Marsha said.\n\n Suddenly Liz's ass was in full view and she was regretting her choice of minuscule see-through panties. She tried to put it out of her head and kissed the college boy, adding tongue after a few moments and letting herself go.\n\n She pulled away slowly and smiled at the boy, letting her eyes drift down to the newly raised lump in his pants.\n\n \"Nice honey,\" Marsha said. \"Your turn.\"\n\n Liz shuffled back on her knees, sitting in her place with legs crossed like Kelsey's. She let her skirt ride up, not worrying anymore about showing too much. \"Latanya, truth or dare?\"\n\n \"Truth\" she said, worried about what the dare might have been.\n\n \"Tell us who's the last person you undressed with your eyes tonight, and explain what you think they look like naked,\" Liz said.\n\n Latanya looked horrified. She glanced at Ralphy, and then at the floor. She took a swig of her gin and tonic.\n\n \"Ralphy,\" she said shyly. \"I guess I didn't really need to. I've seen him on the website.\"\n\n \"Tell us what he looks like tonight, underneath those tight clothes.\"\n\n \"He's...white. Tan, kinda all over. Ripply, like in a good way. He's kinda hard, I think, maybe.\"\n\n \"You mean his muscles, or something else? Give us some detail,\" Liz said.\n\n \"His...dick. It's hard because I'm looking at it. That's the way I kind of see it anyway. His ass has got those muscles in it too. When he walks they do that thing they do.\"\n\n \"Nice,\" Liz said, picturing Ralphy naked too. \"Okay, you go.\"\n\n \"Me?\" Ralphy said, confused by the eyes on him.\n\n \"No, Latanya,\" Liz said.\n\n Latanya thought for a moment, her gaze finally landing on Tucker.\n\n \"Tucker, you always tell everybody else to take off their clothes at the studio. I dare you to take yours off.\"\n\n \"I guess I asked for this one, didn't I?\" he said.\n\n \"Yeah you did,\" Kelsey smiled. As Tucker stood and started unbuttoning she started a quiet chant that everybody joined in on. \"Tu-cker...Tu-cker...Tu-cker...\" \n\n Latanya looked smug, proud of herself for coming up with a dare everyone enjoyed, but her lungs tightened and she was hit with another jolt of horny when Tucker's pants went down. His silky boxers came off last and his cock bobbed with his heartbeat, it's six-inch length half hard.\n\n Latanya giggled, but it was a nervous giggle. She'd picked a great dare, but it had moved things farther into the 'that kind of a party' realm. She'd secretly fantasized about what a party with pornstars would be like, but watching her dream slowly morph into reality was more than a little nerve-wracking. What would Jamar think of her if things...escalated?\n\n Tucker sat down again after he'd completely stripped, cross-legged like most of the others. \n\n \"Brie, truth or dare?\" he said.\n\n \"Truth,\" she said, glad she wouldn't have to be the first girl naked.\n\n \"What was the best orgasm you've ever had? Who gave it to you? Describe it all to us.\"\n\n \"Oh God,\" she said quietly. She avoided eye contact with anyone and looked shy, finally concentrating on Tucker's face. She'd liked him since she first met him, so she pretended he was the only person in the room.\n\n \"Up until recently I would have said Kelsey, or maybe Kelsey and Raymond. It can be two people, right? If they were both...making it happen?\"\n\n \"Sure,\" Tucker said.\n\n \"Yeah, Kelsey and Raymond, at the first pool party Raymond was at, when it was all new. People were watching. Remember you guys?\" she said, glancing at the two of them. \"It was like Kelsey made me her project, in front of everybody.\"\n\n \"Nice. I remember,\" Kelsey said. \"But you said 'up until recently'.\"\n\n \"Yeah,\" Brie said, breaking eye contact with her childhood friend. After a moment of reflection she looked into Tucker's eyes. \"Truth, right?\"\n\n \"Truth,\" Tucker said, gesturing to his naked body.\n\n \"It was...someone you know. Both of them really. Bobby and Kay.\"\n\n The look on Kelsey's face was priceless as she realized what Brie was saying.\n\n \"Mom and Daddy?\" she said, her mouth open and eyes open wide. \"Oh my God!\" She chuckled in disbelief.\n\n \"I do know them, and I'm not surprised,\" Tucker smiled.\n\n \"I'm not either,\" Marsha said. \"I'm looking forward to the description.\"\n\n \"Me too!\" Kelsey said, her disbelief morphing into an amazed smile.\n\n \"Raymond was there,\" Brie began, glancing at Kelsey again. \"It was a couple weeks after you came back here, after your summer vacation.\"\n\n \"Raymond! You and Mom?\" Kelsey said, her smiling face even more amazed.\n\n \"Yeah, sorry Kel,\" Raymond said sheepishly.\n\n \"You know I don't mind, right?\" Kelsey smiled. \"No sorry's.\"\n\n \"We were sunbathing with your mom when your dad showed up,\" Brie said. \"We were all naked, you know? Ray and me, we freaked out, but your mom, she told us it was all right. I couldn't believe it when your dad started taking his clothes off to join us.\"\n\n \"Where'd you do it, right by the pool?\" Kelsey said, remembering her parents poolside orgies that she'd watched as a child.\n\n \"No, their bedroom. Your mom, she just got us there somehow. I don't even remember.\"\n\n \"So what was the big orgasm? Was daddy fucking you?\"\n\n \"I was sixty-nining your mom, and your dad started fucking me right over her head. Her tongue is so awesome, and his cock, oh my God. I was in that place where...it just hits you, you know?\"\n\n \"I know,\" Kelsey said, remembering how she'd cum insanely hard when her mom licked her clit as Tucker was fucking her in her childhood bed. \n\n Latanya was amazed at the conversation, and the girls casual attitude toward things. Jamar could tell by the look in her eyes that she was enjoying herself, and her gin and tonic buzz was humming along nicely.\n\n \"Nice job Brie, I had a feeling I really liked you,\" Tucker smiled. \"Your turn to question somebody.\"\n\n \"Oh. Okay,\" she said, looking around at everyone. \"Billy, truth or dare?\"\n\n \"Dare,\" he said without hesitation. \n\n \"We need more eye candy I think, right girls?\" Brie said. \"Take off your clothes Billy, and make yourself hard.\"\n\n Brie looked thrilled at her own command. She loved watching Billy on the website, and she knew Kelsey loved fucking him. She would have been at the party anyway probably, but when she heard Billy was going to be there it was a sure thing.\n\n Billy stood, pulling the striped t-shirt up over his head like a male model. His faded jeans were off next, followed by his playful tartan-plaid boxers.\n\n \"Chip and Andrew are missin' a hell of a show,\" Latanya said, drawing laughs all around.\n\n Billy was a born performer and stood, legs a bit apart, as he stroked his big cock to life. It didn't take much work. He was right next to Brie, looking down at her as the big thing slipped in and out through his loose fist. She wanted to do more than just watch the beautiful sight, so she got up on her knees and took the rapidly hardening meat into her mouth.\n\n \"Yeah, that's how you do it!\" Kelsey said quietly, proud of her old friend for kicking things up a notch.\n\n \"Fuck!\" Latanya said as she watched the big-cock fellatio. She was embarrassed when she heard her private thought get out into the world.",
        "Ginny had a similar reaction to the close-proximity blowjob. She hadn't worked with Billy yet, so it was her first time seeing him in the naked flesh. She'd already mentioned to Tucker that she'd be open to doing a scene with him. Oh yeah!, she said to herself when Brie swallowed him whole. Oh yeah!\n\n \"Fuck!\" Brie sighed as she backed her head off the big cock, taking the slippery thing in both her hands. \"It looks so nice on the computer, but damn! I didn't think it was this big.\" She looked at Kelsey wide eyed, and Kelsey gave her a knowing nod.\n\n \"Nice, huh?\" Kelsey smiled. \"Marsha knows, right Marsh?\"\n\n Marsha giggled nervously, quickly glancing at everyone. There were no secrets with Kelsey around.\n\n \"Your turn Billy,\" Kelsey said.\n\n Brie moaned softly as she took the big cock into her mouth again. There was no reason to stop a blowjob that felt so nice, she thought. Billy tried to gather his thoughts, not easy to do with Brie's deep-throat technique, solidly honed on all the boys in the Slut Club back home.\n\n \"Truth or dare Ginny?\" he said.\n\n \"Dare,\" she said.\n\n \"Give Raymond a lap dance, in that chair there.\"\n\n \"I'm not much of a dancer,\" Ginny said as she got up and took Raymond's hand.\n\n \"Fuck that, you dance nice,\" Ralphy said.\n\n Marsha got up and turned the music up louder. Aretha Franklin's voice kicked up the energy in the room as Raymond got situated. Ginny giggled as she got into the groove, shimmying her shoulders and hips. She worked her way in between Raymond's legs, teasing his thighs with her hands.\n\n \"Lap dancers don't wear dresses do they?\" Tucker asked. Ginny wanted to object, but she couldn't very well scold her boss, sitting there naked as he was.\n\n She reached behind herself, lowered her zipper, and her sexy cocktail dress slipped off of her arms, down over her slender hips to the floor. She stepped out of it and kicked it aside.\n\n \"Woo hoo!\" Kelsey yelled. \"Yeah! Do it! Raymond loves older women, don't ya Ray?\"\n\n He was speechless. He'd watched Ralphy fuck Ginny countless times on the website, and watched Dante fuck her too. She was way older than Marsha or Kelsey's mom, but she made him hard every time. And now she was grinding her sexy little ass on him, making him hard again.\n\n \"Touch her Ray,\" Kelsey said. \"It's your dance, you get to do what you want.\"\n\n Ray wanted to see more of her. Ginny's eyes opened wide when she felt Raymond's hands on her bra clasp. It was strapless, so when he opened it the bra fell away and put her out there, facing the circle of onlookers. All she could do was embrace the moment and show herself off. She arched her back when she felt Raymond's hands on her sides, sliding up to cup her warm globes.\n\n \"Fuck yeah!\" Kelsey said. \"Raymond's a tit man.\"\n\n Ginny was plenty horny at that point, after watching Brie blowing Billy, and seeing Tucker naked for the first time. She got up and turned, straddling Raymond's legs. She ground her panty-clad pussy on his hard lump, put her hands behind his head and pulled his open mouth to her tits.\n\n \"Yeah baby! Give him a mouthful,\" Kelsey said. \"He's got a nice cock. It's probably hurtin' all scrunched up in there.\"\n\n Ginny took the hint and unfastened his pants. She surprised herself a little, but she knew where the party was going and her horniness was almost off the charts. Before she or Raymond knew what was happening his cock was nudging aside her panties and slipping inside of her, both of them sighing beautifully as he entered.\n\n \"Fuck Yeea-haa! Kelsey said.\n\n \"Does this shit happen all the time?\" Latanya asked Jamar. She was wide eyed, but not unhappy.\n\n \"No baby, it's Marsha's first party,\" he said, using the truth to bend reality a bit.\n\n \"We're gonna do this for a while,\" Ginny said breathlessly as she ground her full pussy hard on Raymond. \"Ralphy, truth or dare?\"\n\n \"Dare I guess.\"\n\n \"You know that ass you been lookin' at all night?\" Ginny said, even more breathless as she started to fuck young Raymond. \"Get it naked and give it a massage. A nice long one.\"\n\n Ralphy looked at Latanya, and her eyes opened wide when she realized what was happening. \"Me?\" she murmured when Ralphy stood up.\n\n \"Couch all right?\" Ralphy asked, holding his hand out for her.\n\n \"Yeah, I...guess so...\" Latanya said softly. She glanced at Jamar as Ralphy's strong arm pulled her to her feet.\n\n She looked around. Things were starting to evolve. Brie's epic blowjob had become a down on the floor thing, with Billy on his back and Hannah joining in, licking her new boyfriend's balls and sharing cock-sucking duties. Marsha was stroking Tucker's hard cock as they watched things, and Ginny was losing herself, bouncing nicely on Raymond's young shaft as he tried to keep a tit in his mouth. Latanya walked past it all as if in a dream, following Ralphy's muscular ass.\n\n He helped her lie face down on the soft couch cushions, her short dress barely covering the sweet hump of her round ass. Ralphy put a knee between her legs to get himself into position. Latanya nearly jumped out of her skin when his hands touched her thighs and started moving toward the hem of her dress. It was pushed up as he advanced, revealing her black panties.\n\n \"Take 'em off baby,\" Ginny sighed, thrilled by how exciting everything was.\n\n Ralphy reached for the sides of the filmy garment. A barely audible \"Jesus\" floated from Latanya's mouth as she humped-up her ass a little to ease Ralphy's effort. Her head was cradled in her arms, facing away from everyone so she could be in her own little world for the time being. One thing at a time, she thought to herself. One thing at a time. \n\n Ralphy pulled the flimsy panties down Latanya's long brown legs, and off over her high heeled shoes.\n\n \"Put 'em in your pocket baby,\" Ginny sighed, watching intently as she fucked.\n\n The panties were tucked away and Ralphy's hands went back to the brown flesh, curves so womanly be could barely believe it. His dare was to give a massage, so he squeezed the soft cheeks with his big hands, opening up Latanya's little asshole to view for the first time.\n\n \"Holy shit,\" Ralphy said under his breath, thinking to himself How come I ain't never been to a party like this before?\n\n He kneaded the soft flesh like bread dough, letting his thumbs drift into the nether region, tickling Latanya's tenderness. She moaned loud enough for everyone to hear and humped her ass up some more.\n\n \"Use your mouth on her,\" Ginny directed, thoroughly embroiled in something new and wonderful \u2014 watching sex while she had sex was something new for her, and she was on display too, the most naked woman in the room, showing off in front of the party.\n\n Ralphy spread Latanya's ass and licked, swirling his tongue on the heat of her flesh, circling her dark little hole before tasting the richness of her glistening pussy. Latanya humped her ass up even higher to give him better access, arching her back more than Ralphy thought possible.\n\n \"Oh fuck yeah!\" she groaned. \"Lick me!...Lick me deep!\"\n\n \"Oh Ralphy, you gotta fuck that,\" Ginny said. \"It's too fuckin' sexy. You just gotta.\"\n\n Ralphy looked over at Jamar, sitting quietly in the circle of spectators. His big smile and slight nod was what Ralphy was hoping to see.\n\n \"Do it Ralphy,\" Kelsey said. \"Fuck that sexy girl.\"\n\n Ralphy buried his face in the woman-scented heat of Latanya's ass again, licking her deep like she wanted as he released his fat cock from his tight jeans.\n\n Latanya's head was spinning. Ralphy's hands were MIA and she could hear the fumbling. She could almost smell the big cock as it \n\nsprung into the fresh air. She looked at the blurry couch cushion next to her face anticipating what she'd feel next. A pornstar cock at a sex party? How did it all happen so quickly? When she'd gotten there it was just a cocktail party at Jamar's boss's house, the kind of thing people do all the time. And yet there she was, her dress up around her waist with a sexy muscle-man's tongue tickling her clit. Oh God, it's not there anymore! He must be...!\n\n \"Uggghhh!\" she grunted. \n\n Ralphy grunted too. His cock was as hard as hard can be, pressing into Latanya's pink pussy.\n\n \"Yeeeaahh!\" Kelsey cheered.\n\n Latanya hadn't been with anyone but Jamar in eight years. She was amazed at how different Ralphy felt, not as long but noticeably fatter, fuller. And the way he held her soft hips was different too. Damn, it was exciting being fucked by a new man!\n\n It didn't take long for her to get right up on her knees, taking Ralphy deep. Her head was up too, just enough to see Jamar and the others out of her peripheral vision.\n\n \"Oh God yeah!\" she grunted as the fat cock thrusted deep. She squeezed the couch cushion in her white-knuckled hands, holding on for the ride of her life.\n\n \"Fuckin' hot!\" Kelsey said. \"Jamar, you gotta love that ass, don't ya?\"\n\n \"I do,\" he said proudly.\n\n When Latanya heard him she knew all was right with the world. He got to fuck around once in a while in front of the cameras, and now she was evening up the score and he seemed to like it.\n\n \"Yeeaahh!\" she hissed at Ralphy. \"Oh yeeaahh!\"\n\n She started fucking back at him, the tell-tale slap-slap-slap of body against body overtaking the stereo as the best music in the room. The sexual enthusiasm Jamar loved was coming out to play.\n\n \"That's too fuckin' hot,\" Kelsey said. \"Is the game over Marsha? Time to play?\"\n\n \"It looks that way,\" Marsha said, smiling at the way things had gone.\n\n \"Yay!\" the little redhead said. Her dress and thong were off in a flash. She sauntered over to Jamar, pulled him to his feet and led him to the end of the couch where Latanya was being fucked hard.\n\n \"Do me here,\" Kelsey said to him. \n\n She bent over the arm of the couch, looked deep into Latanya's wild eyes and kissed her. Jamar scrambled out of his clothes and sunk his long length into Kelsey's steamy pussy, sighing like a dying man in the desert taking his first gulp of cool lemonade.\n\n \"Holy fuck!\" Kelsey yelped. Jamar's cock always had that effect on her.\n\n Latanya's eyes looked up at Jamar, himself nearly lost in the sweetness of Kelsey's little pussy. Conflicting emotions waged a quick but decisive battle in Latanya's head as she watched the man she loved fuck the stunning young girl. It was Ralphy's fat cock that scored the victory \u2014 sex was too fucking awesome to keep hidden, one-on-one, behind closed doors.\n\n \"Havin' fun baby?\" she asked Jamar, breathlessly giggling at the obviousness of the question. \"I like your friends.\"\n\n \"I was hoping you would,\" he said.\n\n Down on the floor Brie had finally ended the epic blowjob and her mind was being blown by her first time fucking a talented, gorgeous young pornstar. She was riding Billy, her tits shuddering with every hard bounce, an orgasm overtaking her much faster than she was used to. She was almost embarrassed that she would be first, but it turned out to be a virtual tie, as Ginny moaned in deep orgasmic delight just as Brie vibrated and screamed, her slender legs jerking wildly as Billy's big cock drew a monster out of her.\n\n \"Did ya cum in me baby,\" Ginny cooed to her young lover as her body roiled in post orgasmic bliss. Raymond nodded, a bit shell-shocked by the sexiness of the fifty-six year old woman. She rose up off of him and watched as his warm seed, liquified by her juices, dribbled out of her and splattered on his still spasming cock. Marsha crawled over to clean things up, licking Raymond's messy cock and balls clean.\n\n \"You like us older girls, don't ya Ray?\" Marsha asked. Horny fire was starting to burn in her eyes.\n\n Raymond smiled at her. He knew she knew the answer.\n\n As Brie lay recovering on the floor \u2014 eyes half-lidded, body still spasming a bit \u2014 Billy zeroed in on Marsha.\n\n \"I like older girls too,\" he smiled, pushing her sexy dress up onto her back. His fingers eased aside the gusset of her damp panties and gave her slippery pussy a quick feel.\n\n Marsha moaned and kept working on Raymond, gently sucking his soft balls into her mouth as Billy lined up his sticky, rock-hard poker. He pushed past her lovely pussy lips and thrust his way deep.\n\n Brie had recovered enough to crawl over and watch, amazed at Billy, the Bible Boy with the pornstar cock and the skill and stamina to melt women's minds. She wanted to watch in person what she'd seen so many times on the computer. \n\n \"Marsha, you should see how beautiful Billy looks going into you,\" Kelsey said. She had a beautiful view of the proceedings. \"He's so fuckin' big. Oh, fuck yeah! That's fuckin' deep isn't it Marsh?\" Jamar wanted all of Kelsey's attention so he hit her with some deep, hard thrusts, making her little body shudder. \"Oh Fuck!\" she yelped. \"Yeah! Fuck me!\"\n\n A vibrating moan emanated from Marsha as Billy bottomed out. Raymond's cock was hard again, so she licked her way from his balls up the length of his shaft and swallowed it whole as Billy started to fuck her slow and deep.\n\n Hannah had Liz on her back on the rug, Liz's knees in the air spread wide. Hannah's ass was up in doggie position and Tucker was fucking her as she licked Liz's pussy. Both the girls had lost their dresses, Liz nearly naked in a sexy garter belt and sheer hose, and Hannah in nothing but a black satin lace-up corset that she'd had hidden under her dress. It covered her mid-section, from her hips to just below her small, sleek tits. Detailed with yellow and red embroidery in a Far East motif, it gave her the look of a stunning, slender, exotically Asian hooker. Kelsey helped her pick it out.\n\n Kelsey screamed again as Jamar's long cock pummeled her tiny body. Latanya would have laughed if she could have, knowing exactly what his huge black meat felt like, but she was on the verge of a scream too as Ralphy put everything he had into her sweet brown ass. The uncontrollable noise finally lifted out of her, bellowing out of her lungs like a siren.\n\n Marsha let loose too, Billy's cock always made her sing, and Hannah and Liz joined in the heavenly chorus. The men were grunting and Tucker roared like a lion when he plastered Hannah's sexy corset with his seed. Her tight pussy was just too much for him.\n\n The windows were open in the condo that night. Big old industrial windows from the building's former factory days. Most of the time folks kept them closed \u2014 air-conditioning was the way of the day \u2014 but it was a beautiful seventy-degree evening and Marsha thought it would be nice to have some fresh air and to hear the sounds of the city street below, so she opened them all just before the guests arrived. Tucker thought nothing of it.\n\n What they didn't realize, though, was that Doris had opened her windows too. The thick, brick-covered masonry wall between their condos was plenty soundproof, but with the windows open \u2014 Tucker's hinging one way and Doris's the other \u2014 sound was literally scooped in. Doris, nosy as she is, had noticed the phenomenon before of course and had taken advantage a few times. She'd heard nothing more than Tucker talking on the phone, and a conversation with Marsha about the studio's bookkeeping. Tucker's bedroom was farther away, so she never got an earful of that.\n\n She sat quietly the night of the party, in a comfy chair she pulled right up close to the window. The still night air seemed to grab a hold of the carnal sounds and amplify them. Kelsey's sweet little voice begging for a harder fucking. Jamar's foreign accent praising her tight pussy. Unknown women shrieking in orgasmic bliss. It was all almost too much excitement for Doris's eighty-year-old heart to take. But take it she did. She barely breathed when the unmistakable sounds of bodies slapping into bodies reached a fever pitch. She swallowed hard when someone named Brie seemed to be taking on everyone in the room, egged on by that sweet little voice again. And she just about passed out from shock when a woman she thought was Liz \u2014 dear, sweet, neighborly Liz \u2014 asked someone named Ralphy to put it in her ass and shrieked with delight when he did.\n\n It was quite a night in Tucker's building. Marsha's party was a huge success, and Doris went to bed exhausted. Marsha and Liz cuddled with Tucker in the big king sized bed after everyone had gone home. Thank God for Tucker's Studio they all thought as they drifted of to dreamland. Thank God for Tucker's Studio.\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n Hi folks, Riverboy here. This is the last story in the Tucker's Studio series, at least for the time being. I've always thought of these chapters as a collection of stories rather than one big long story with a clear ending, so this seems like a good place to take a break. I'll probably return to Tucker and the gang someday \u2014 I'm pretty sure I won't be able to let Kelsey remain dormant for too long. :-)\n\nI hope you've enjoyed reading this series as much as I've enjoyed writing it."
    ],
    "authorname": "riverboy",
    "tags": [
        "orgy",
        "interracial",
        "black woman",
        "white man",
        "redhead",
        "voyeur",
        "exhibitionist",
        "party"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/tuckers-studio-ch-29"
}