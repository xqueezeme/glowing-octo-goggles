{
    "title": "Jonas Agonistes",
    "pages": [
        "Jonas Agonistes Chapter 1: Like a Novel by Robbe-Grillet\n\nI avoided bourbon but not scotch. Scotch. I found it helped me sleep, but upon further discrimination and many scientific trials I decided it helped me do something like sleep. I pushed it aside. I even poured out one of the half-full bottles in my drawer. Not the other one, though. Just one. \n\nTwo weeks before, I left the Corps. Unwillingly, grudgingly, silently, at my own request, but I left. I resigned. Not in disgrace, but \"don't show your face around here again, Buddy\" was the implication. For about a fortnight, I toasted my discharge in a motel in Jacksonville, NC. I stayed at a terrible place, drinking more of that scotch, wishing I had a friend, finding one in the bottle. I was not suicidal. I did what we all should do when we have no one to go to. And there was no one. \n\nThe major warned me. \"You are a candidate for all sorts of neurotic behaviors, Lieutenant. Depression, anxiety, alcoholism, fantasies... Don't give in to them. You did what you could. You did right. The system failed you. Hell, the system eats up moral decisions, and doesn't even spit them out. Talk to that priest friend of yours. Get a girlfriend. If they can handle it, talk to your parents. Get a counselor or a therapist. But remember: al Gatar is off limits. Al Gatar is classified. They are already considering declassifying it, so it should come off the list. But not yet. Soon, maybe.\" \n\nFor two years Major Marx had steered me through a pseudo-legal system of innuendo, implication, half-truth, and exhaustive restatement, threat, cynicism, and frustration. Two years repeating the same story, recounting the same action on the same day, over and over while my interrogators looked for a flaw, for a changed word or idea, a discrepancy. I was the main character in a novel by Robbe-Grillet, each chapter repeated with only a small change here, a nip and tuck there. Finally the major brokered a decision that the Corps would NOT pursue charges like mutiny or murder or disobedience of orders. In return, all I had to do was resign, accept an honorable discharge-and get the hell out of our Marine Corps. So I did. It was probably for the best. I was starting to smell like Camp Lejeune, and Camp Lejeune smelled like Dewar's. \n\nAnd I thought Dewar's smelled more and more like kerosene.\n\nSo I drove home to Mom and Dad, taking my time, using secondary roads, eating in little diners with girls waiting on me, listening to their southern accents, ordering grits and ham and greasy burgers. I avoided thought about my future. I wore civilian clothes, but my high and tight gave me away for a serviceman and especially a Marine. My Mustang was only two and a half years old, paid off, and worked wonders for my attitude, keeping me on an even keel. It was my most important possession, except for that Dewar's half bottle in the trunk. I found a little, run-down motel along the highway just across the Ohio as it was getting dark and I put in. I could have made it all the way home, but I was in no hurry. No one knew I was coming. I was a low expectation. \n\nI could not like-sleep without the Dewar's, but I didn't drink it anyway. There were too many arms and legs in my mind, too many women in burkas clutching babies, two too many dead Marines. I think I needed a sleeping pill. How do I get that? Walk into a doctor's office and say, hey, I got some people killed and I'd like some pills to make me forget? Or maybe I could just say, I'm having trouble sleeping and Dewar's doesn't do it for me anymore, Doc. Can I get a pill? Ambien? Trazodone? Heroin?\n\nI didn't think he'd give me the opium but I had a shot at the others. I lay there thinking I was the victim of raised standards. I used to think like-sleep was good enough, and now it wasn't. Perhaps I should reconsider? That scotch was in the trunk, not far at all. But it was 7 in the morning, I was four or five hours from home, from Mom, from my birthplace, from Father Rick, from Jane Austen n\u00e9e Miller, the prettiest girl in the ninth grade. Eighth grade too. Dad was there. Maybe I had friends I couldn't remember. The scotch was sounding better all of a sudden. I think the major was correct: I was definitely a candidate for neuroses.\n\nI pulled into the driveway at home about 3 in the afternoon. I hadn't touched the scotch, which felt like a victory, if a sad one. The sun was out, it was cool but not cold, most of the leaves were still on the trees, the house and street and neighborhood all looked the same. I had last been here two-no, two and a half years ago, just before I deployed with my platoon to Afghanistan. \n\nI had seen Mom and Dad upon my ignominious return, alone. They met my plane, but I had been in handcuffs at that point. I was allowed to say hi, kiss mom, and head to the brig\u1deb to await a hearing. I was restricted to Camp Lejeune once a judge got me out of the brig, pending results of the investigation since there were no charges. We went to the beach a few times, the O club, but then they had gone home and I had entered the Long Winter of My Discontent. Now I was home. No job. No prospects. Out of jail, though. Home. \n\nI pulled my two seabags out of the trunk and backseat of the Mustang and locked the car. I carried things up the steps to the big front porch. I decided to knock-I didn't think it right to just walk in when I'd been away for years. I knocked. I waited. Then I rang the doorbell, and I heard Mom coming down the stairs. She was there. I think that moms can tell if one is suffering, and can tell if one is suffering justifiably. She just looked at me for a few seconds. Ultimately she pushed the storm door open and I was in her arms. I whispered, \"No charges, Mom, I'm out of the Marines. Honorable discharge.\" She said, \"You did what was right, Jonas. I don't know what you did, I don't know if anyone was hurt, but I know you did the best that could be done. I'm so glad you are home!\" \n\nI cried. I have cried many times over al Gatar. So it goes, said Vonnegut. \n\n*\n\n\"I have an applicant here, Mrs. Gilchromie, a veteran requesting he be admitted for teacher education and history. A guy from the Marines. He wants to get his teaching license. He needs student teaching and two...no, one methods class. He also wants to start work on a master's in history. Got out of the Marines in October. Oh, he was in Afghanistan, but there is nothing about that in the record sent to us. Resume, application, some references.\" Marjorie Morningbloom just pointed out the obvious to her boss. \n\n\"Is it on computer?\"\n\n\"Yes, Ma'am,\" she responded. \n\nBarb Gilchromie called it up. Jonas Simms, bachelor's from Miami in Oxford, First Lieutenant, nothing about the details of service in Afghanistan. Honorable discharge.\n\n\"Do we have transcripts from Miami?\"\n\n\"Yes, Ma'am, pretty good. 3.23 undergrad. Strong in English. Likes history, though. Weak in foreign language; barely qualified with two years German.\" \n\nThe dean looked at the documents, thinking. \"I have a request here from Merciful Saviour High for a more experienced student teacher to work full time and move into a position. I think they had a teacher get sick. Here it is... This could be the guy. Is he Catholic?\"\n\n\"We don't ask that, Barb!!\"-but then Mrs. Morningbloom said quietly, \"But yes he is. It's in his military records.\" \n\n\"Crazy world, isn't it Marj? I still would recommend him. Call him in. I'd like to talk to him. He fits this post, if he has enough presence. I'll give Marty a call out at Saviour.\" \n\nMrs. Morningbloom dialed the number on the application. It rang a house in Sky Grey, Ohio, not far from Cincinnati. \n\n\"Hello?\" A man's voice.\n\n\"Hello, I'm Marjorie Morningbloom calling for Mr. Jonas Simms?\"\n\n\"Speaking, Ma'am.\"\n\n\"Mr. Simms, I'm trying to arrange an interview for you with Ms. Gilchromie, the dean of the school of education here at the University of Cincinnati.\" Morningbloom always liked to say the full name of the university; UC just seemed to abbreviate the dignity of the school.\n\n\"Yes, Ma'am,\" replied Simms. \"When would she like to see me?\" \n\n\"As soon as possible, Sir, she has openings today and tomorrow if you can make one.\"\n\n\"How about this afternoon?\" Simms asked. He needed a half hour to shave. At least he was sober.\n\n\"Will 2:00 work for you?\n\n\"Yes, I'll be there at 2.\" And so it was arranged. He hurried to shave and clean up. He needed to iron a shirt. \n\nAt 2 he walked into Marjorie Morningbloom's office. \n\n\"Mr. Simms?\" \n\n\"Yes, Ma'am.\" \n\n\"Right this way. Ms. Gilchromie is expecting you.\" She led him into an office cluttered with books, papers, and years of experience. \n\nMs. Gilchromie rose and held out her hand. \"Mr. Simms, I'm happy to meet you.\" \n\n\"Thank you, Ma'am.\" \n\nBefore her stood a strong-looking young man, perhaps 25, with dark brown but short hair, wearing a sport coat and shirt with a button down collar and a tie. He was wearing corduroy trousers. The clothes ensemble looked new, which it was. \n\n\"Have a seat, Jonas. Is it okay if I call you that?\" \n\n\"Of course. May I call you Barb?\" \n\nShe laughed. \"If you think it appropriate, then of course.\" \n\n\"Thank you again, then, Ms. Gilchromie.\" She noticed the hint of a smile and she appreciated his little gesture of respect. She returned it.\n\n\"Mr. Simms, I called you in because your application indicates a desire to student teach. Almost all student teaching assignments were made long ago. But I have a last minute request from a high school that a student teacher with outstanding credentials or greater than usual successful experience be allowed to student teach while performing the full duties of a teacher. To be plain, a teacher at one of the local schools has become ill and will be unable to fulfill her duties in the second semester. The school would like to fill the position with a student teacher as a full time substitute using an emergency license. These are occasionally granted for cases like this. So you would be student teaching for us but working full time as a teacher for them. You would be paid on the substitute schedule. We have a part-time social studies instructor who teaches at this school who would act as your mentor and cooperating teacher. You would also need to attend at least a methods class here, in the evenings or on weekends, depending on availability. Would you like to be considered for this position?\" \n\nJonas considered. It would mean more pressure, but he had already been a Marine officer; it might lead to a full time permanent position next year. \n\n\"Yes, I'd like to be considered.\" \n\n\"Good! I hope you are flexible. They will want to meet with you soon. They do not want this hanging over their heads. Schools hate for tragedies to bog them down, I think you can understand. It is Merciful Saviour High School in Sky Grey, which is where you live, correct? I'll call their principal as soon as we finish, send her your documents, and hopefully they will interview you soon.\" \n\n\"Thank you for everything, Ma'am.\" She indicated he might leave, and she picked up the phone.\n\nLate that afternoon, Jonas received a call from Sharon Martin of Merciful Saviour High School. \n\n\"Mr. Simms?\"\n\n\"Yes, this is Jonas Simms.\"\n\n\"Mr. Simms, this is Sharon Martin. I am the principal of Merciful Saviour High School. We are just outside Sky Grey. I'd like to arrange an interview for a position here.\" \n\n\"Of course, Ms. Martin. I can come anytime.\" \n\n\"If you could make it tonight around 7 it would really help us. We are swamped with work right now.\"\n\n\"I'll be there at 7, Ma'am.\"\n\n\"Uh, Ms. Gilchromie faxed us most of your documents, including a list of references. Are these current?\"\n\n\"More or less, Ma'am. although the local ones are less so. The main reference is Major Tom Marx. He and I worked closely together for the last two years. The others-Father Rick was a childhood friend I lost touch with about the time I went into the Marines, etc.-they were all longer ago.\" \n\n\"I don't see a commanding officer listed here from the Marines, Mr. Simms.\" \n\n\"No, I believe Major Marx may be able to shed some light on that, Ma'am.\" Simms then went quiet, afraid he would say too much. \n\n\"I will certainly try to get in touch with him. I expect to see you in a few hours then, Mr. Simms.\"\n\nJonas was worried. She was smart. \n\n*\n\nAt 6:00 Sharon Martin and Father David Elkins met in the conference room next to Sharon's office. \n\n\"It's strange. He would not say why he didn't have his commanding officer as a reference. For the last two years! It seems he might be hiding something,\" she said. \n\n\"Yeah. All the vets we've interviewed have included their last commanding officers for sure. I wonder what this Marx will have to say.\" \n\n\"I reached his office. He's an attorney in D.C., in the Marine Reserves. He's supposed to call back.\" \n\nOn cue, the phone rang.\n\n\"Hello? Merciful Saviour High School. This is Principal Martin. May I help you?\" \n\nTom Marx spoke up. \"Principal Martin? Tom Marx. Major Tom Marx when I am on duty. I understand you are calling to inquire about Jonas Simms, who I know as Lieutenant Jonas Simms, USMCR.\"\n\n\"Uh, yes Mr. Marx. I'm going to put you on speaker here. Father David Elkins is with me. We have the responsibility of hiring a new teacher and are considering hiring Jonas Simms.\"\n\n\"Hire him.\" \n\n\"I beg your pardon?\" \n\n\"Hire him. No one will do a better job for you. No one will work harder. No one will be better for your kids to be around. When Jonas Simms left the Marine Corps, the Corps lost its best young officer. Not one of the best. The best.\" \n\nFr. Elkins looked at Principal Martin. His look said, Is this for real?\n\nFr. Elkins: \"What was your relationship to Lt. Simms?\"\n\nMarx: \"I am a JAG officer. Lt. Simms and I worked day in and day out on a court case. His case. I was assigned as his defense counsel. I cannot tell you what he was charged with-actually he was never charged. I can tell you nothing about the case. It is still classified, or I would tell you. I hope to have the reports and documents declassified, but it will not be this month.\"\n\nMartin: \"I wondered why he had no commanding officer's recommendation.\"\n\nMarx: \"That's because he was restricted to Camp Lejeune for two years. Officially he worked for the base. In reality, he had no duties. He was not in the brig, but it was almost as bad. I wrote his fitness reports and the commanding general signed them. As he was not writing them himself, and as he wanted no contact with Lt. Simms, the general demanded the evaluations be non-controversial. They were vanilla. It is unfortunate. Lt. Simms is extraordinary.\"\n\nFr. Elkins: \"You really have us intrigued, Major Marx.\" \n\nMarx laughed. \"I will say something for the record if you want to record this. Here. I have known many brave men in the Marine Corps. I have known men who lost their lives saving others, selflessly acting when it would mean their own deaths. I have investigated brave men for the awarding of the Medal of Honor. So I do not say this lightly: Lt. Simms is the most morally courageous person I have ever met. You will see no medal or award. There is no statement in his file. I cannot tell you what happened or what he did. Maybe someday. He faced an impossible situation and acted morally when, I believe, most men would not.\"\n\nFr. Elkins looked at Ms. Martin. She mouthed the word, Wow. \n\nFr. Elkins: \"Could you repeat that? I want to copy it down.\" \n\nAnd so they did. \n\nMarx: \"I do not know if Lt. Simms will be a good teacher. I can tell you that his men trusted him implicitly. They to a man stood for him. I have never seen such loyalty. And from every-EVERY-one of them, there was a statement that Simms was the best lieutenant or best officer they had ever served with. I speak of his character. If I had children, I'd want them to be around as many teachers like Jonas as I could find. And I think you'll only find one.\" \n\nMartin: \"Major, are you given to overstatement, perhaps?\"\n\nLaughing, Marx said, \"Ma'am, and Sir, I only wish I had been able to save Lt. Simms's career in the Marines. Unfortunately political considerations undermined his cause. He is a remarkable man. Oh, and he doesn't know it.\" \n\nFr. Elkins: \"Humility is more welcome in my business than yours.\" \n\nMarx said with a hint of humor, \"True. He is alone as far as the Corps goes. Humility is perhaps the virtue least recognized by the Marine Corps. He was placed in an impossible situation and behaved with integrity, grit, and with complete disregard for his own life and career. He realized his actions would threaten or end his career-he told his platoon sergeant. His after action statements were scrupulously consistent, detailed, and true to every verifiable fact. The Corps ostracized him before it investigated, almost as completely as you hear happens at the academies. His friends disappeared. For the last two years he stood alone. Now that he is home, I hope he finds old friends and makes new ones.\" \n\nFr. Elkins: \"I think you have given us a lot to think about. We may get back in touch with you, but I can say for myself I look forward to meeting him.\" There was a pause. \n\nMarx: \"Feel free to contact me about him any time. I only wish I could have helped him more. Thank you, and goodnight.\"\n\nMs. Martin clicked off the phone. They sat in silence. \n\nFr. Elkins said, \"I don't care if he can't teach. We have a responsibility to surround our kids with people of character. I've never heard such a recommendation. Let me check with a chaplain I know at Arlington; I want to find out if this Marx guy is something other than he claims.\" \n\n*\n\nThere were nights I didn't remember going to bed, and I'd find a half-full glass of whisky sitting by my chair on an end table. I don't waste liquor, so I knew I must have been too drunk to justify, too drunk to think, too drunk to read, too drunk period. For some reason it's the lost last hour of a small binge that finally brought me up short. I knew I was drinking to a problem, threatening my liver, my mind, the job I expected to start after Christmas, my plan for a master's, a future. \n\nMom and Dad must have seen it, but they didn't say anything. They'd get up with me still asleep or in that like-sleep state and I'd awaken an hour or so later with a dirty, sour feeling. My hangovers didn't hurt, they just depressed. I wanted milk then. I knew I'd done wrong. Perhaps Mom and Dad felt like I needed the release. Perhaps they knew I needed something and just hoped and prayed I'd come around. They knew I wanted the job and the degree. Perhaps they trusted me-who could not trust myself. Perhaps they just hoped it would go away with time and patience.\n\nMom got me back to church. For some reason, she always felt Mass cured ills. Maybe it does. \"Fr. Rick is saying Mass at 9 Sunday,\" she said. \"But he's been given a new assignment, so he won't be here long.\" Rick had been my best friend up to 9th grade, when he had headed to Saviour and I'd headed to Sky Grey Public. He'd ended up in a seminary and was ordained while I was in the Marines. Right now he was associate pastor of our home parish, Merciful God. \n\nI drove my Mustang to Mass about 10 minutes early and found a seat in the back. For some reason I wanted to be unobtrusive. Some people went to Mass to be part of a community; I usually wanted solitude, introspection, prayer in a private way. But I was there, and by 9 the place was full. There on the right was Jane Miller Austen, prettiest girl in the eighth grade, ninth grade, and most other grades to to be honest, now with a toddler holding one hand and an infant on her other arm. The unworthy husband, Austen, was carrying a diaper bag and a punkin seat. He was tall. I decided he looked smug, married to Jane and with two kids. I wanted some bourbon. I'd finished my half bottle of scotch and hadn't replenished it, and now I regretted it.",
        "Jane saw me from across the nave and smiled and nodded. I held up two fingers with a questioning look. She smiled and nodded again. She whispered to her smug husband and he looked at me. I had to smile and nod at him, too. The cad.\n\nRick was Rick. He was gregarious and joyful and it came through his ceremony. He noticed me, I think for the first time, during the gospel. He hesitated and looked back down at the lectionary and repeated a whole sentence. During the petitions later the reader finished her list and Rick added one, \"And for old friends returned safely home, Lord hear our prayer.\" \n\n*\n\nTeaching allayed my drinking almost completely, but it did not end my challenges. I learned to teach on the job. Most jobs are learned on the job, I believe. In my many years as a student, I had never realized the influences on my teachers that had nothing to do with school. I had assumed it was effortless. I looked back and wondered about that fifth grade teacher who disappeared in the middle of a year; that nun who was team teaching with another and then was not; the pressures Mrs. Frederick must have felt as she was larger and larger with child. In the classroom every mistake must be quickly faced and resolved because you had to face the same kids tomorrow. For me in those years, besides learning to prepare lessons and handle kids and avoid alienating parents, I had trouble with dreams. Even two years a teacher, I still dreamed of that day in Afghanistan.\n\n\"Jonas! Jonas!\" \n\nSomeone was insistent. I wanted to sleep, but I pulled myself up from the dark. Mom.\n\n\"Mom...what is it? Am I late for work?\"\n\nShe was sitting on my bed, and I felt her hand on my arm. As my eyes cleared I could see Dad at the door to my room. \"No, you were dreaming. It was a nightmare.\" \n\n\"What did I say?\" \n\n\"You were calling out for people to hurry, to run, to hold onto some kids. You said, Get that kid, Silly! Turbo don't drop her, don't drop her. You told someone called Bronstein to keep everyone moving...\" She had tears on her face. \n\nI was silent. The war is here too, I thought, inside me. \"You know, important things are really hard to keep secret,\" I said, smiling. \n\n\"I know you are not allowed to tell us what happened...\" said Dad, speaking to me! \"Just tell us things if you can. Are those people you mentioned dead?\"\n\nI relaxed. \"No, every person I named made it out of Afghanistan, as far as I know. Turbo and Silly and Bronstein-I know what I was dreaming about. They're alive. Did I mention maybe Paritzki?\" Mom and Dad shook their heads. \"None of my guys died that day.\" \n\nDad went on. \"Son, it's been almost four years. You've been out of the Marines for two years. You've been a teacher for a lot longer than you were in combat. Don't you think you should get some help? See a counselor? Something?\" \n\nI thought about that. \"If I could open up about that incident. Maybe when they declassify it. I've been so careful not to breach the secrecy. I've told no one anything. I wish it would go away.\" \n\nMom leaned over and kissed me. \"I wish so, too.\" Her hair was grey. She looked suddenly old. What was she? 53. Dad was 55, heavy, heavy walking, quiet, holding up the doorway. I always wondered if he was very smart. He didn't seem to need to prove it one way or the other. I never wondered if I was loved, unlike some other guys. 27 and living at home? I couldn't think of a better situation. They'd never mentioned me moving out. \n\nI swung my feet over the side of the bed. Two years ago I'd returned from Camp Lejeune bereft, half-way to alcoholism, slipping into that restful but restless unhappiness called depression. But here in Sky Grey things had started getting better. I was still teaching at Merciful Saviour, still working on that master's at UC. It was now November; I should get the degree in June. \n\nI dressed for school thinking about lesson plans. What was today? Oh, yeah, the bank failures of the 1930s in US; the rise of Hitler in World History. \n\nJonas Agonistes Chapter 2: Guns Ablazin'\n\nIt was that evening that I received a call from Lieutenant Colonel Marx.\n\n\"Hello?\"\n\n\"I'm trying to reach Jonas Simms.\"\n\n\"Speaking. Major Marx?\"\n\n\"Hello, Jonas. It's Light Colonel now. Oh, and you are a captain in the IRR.\" \n\n\"Congratulations and I had no idea I'd been promoted, either.\" \n\n\"Figures. Well, it's happened. They declassified al Gatar and all documents appertaining as of November 1. They have now moved all physical files to the public access areas and digital files are re-indexed for public use also. As of today, matter of fact. Anyone can see them now, Jonas.\"\n\n\"How should I feel, Sir? If people find out, how will that be good for me?\"\n\n\"They'll have to read the detailed narrative, but the record is very clear. If they only check the summary, you may not fare so well. It mentions investigating you for disobedience, mutiny, etc. I am sending you as of five minutes ago copies of all files and documents. I checked them-they are exactly as filed years ago. I think you should print out a hard copy and keep it in a safe deposit box. Make lots of copies if you want to show friends, but keep one secure. In case someone only brings up the abstract. And make some digital copies too.\" \n\nSilence. I felt that a burden had been lifted. \"I think now I have some explaining to do to some people I've kept in the dark.\" \n\n\"So far no one seems to have noticed al Gatar. They could have gotten access 28 days ago if they were waiting for the reports. There were a lot of other mundane documents declassified at the same time. But your story is remarkable, Jonas. I'd like to talk to you about that next week, if you don't mind.\"\n\n\"Of course, sir. Call me...\"\n\n\"No, I mean in person. I'll come there. Next Wednesday okay?\"\n\nStrange. \"Of course. Next Wednesday. Want me to meet you at the airport?\"\n\n\"No, I'm not sure how I'll travel. I'll come to your parents' home? Is that where you are?\"\n\n*\n\nTom Marx pulled the rental into the driveway of the Simms's house. It looked like much of middle America: clapboard, big front porch, glider to the side, bay front window, porch light on. There was a ballpark behind the property. He got out. December now. Cool, not cold yet. Stars were appearing. Marx wore a sport coat and slacks, a tie, but he was decidedly casual. He'd considered wearing his uniform to impress the family, but decided he didn't want respect for that. He wanted something else he could not identify immediately. On the plane, he'd come to the conclusion he wanted friendship. Jonas was 13 years his junior, but.\n\nHe carried a thick briefcase with him. He rang the doorbell. \n\nHe was met by a smaller, older woman. Early fifties, graying hair, attractive, with a straightforward expression. \n\n\"Mrs. Simms? I'm Tom Marx.\"\n\n\"Colonel Marx. I hope your trip was pleasant.\"\n\n\"It has been.\" \n\n\"We're waiting for you in the living room. Please come in.\" \n\nIt was a very pleasant meeting. Marx let the business of it go until some time had passed in reminiscence and catching up. There was laughter, which had been in short supply in the last years of Jonas's Marine experience. There were stories. Marx felt at home, and he understood where Jonas came from. They sat in some overstuffed chairs and a sofa and drank hot chocolate. There was no music on the stereo. \n\nAt 9:00, Marx said, \"I have some business to conduct. Mr. and Mrs. Simms, I think you will want to stay, if that's alright with you, Jonas?\"\n\n\"Of course. But I have not told them of al Gatar yet.\" He looked at his Dad. \"I just couldn't find the right time or the words.\" \n\nDad shook his head, \"Whatever you did, whatever happened to you, we are your parents and we love you.\"\n\nTom Marx had a smile of forbearance. In keeping his actions secret, Simms had created doubt and belief he was hiding some dark action that required forgiveness.\n\n\"The longer we keep silent, the more people will assume you have something to hide, like these good people who love you more than anyone on earth. I think the truth needs to be told, Jonas.\"\n\n\"I came to that conclusion, but I don't know who to tell or how.\"\n\n\"Okay, well, let's start with what they know. Jonas was arrested and investigated for disobedience of an order, mutiny,\" at this Dad inhaled deeply, \"murder, treason, and just about any other thing they could think of. It all stemmed from an order given by Captain Messina to conduct a hammer and anvil raid on a small village called al Gatar. I have here one of Jonas's early statements. I recorded this, the original is in the just declassified files in Washington. He wrote it down, then read it, but he added to the written.\" He pulled a small recording device out of his case, put it on the coffee table, then hesitated to push play. \"If you want something to eat or drink or to go to the restroom, now is the time. You won't want me to stop this once it goes for a minute or two.\" They shook their heads and he pushed play.\n\n*\n\n\"My platoon was 32 hard-charging grunts with bravado and chutzpah and belligerence, carrying the latest M16 versions and SAWs and some rockets, wearing armored vests and helmets and desert cam. Most of my men were late adolescent guys who didn't make college or wanted excitement or, like Summersill, had gotten in some trouble and wanted a new start. I think Silly actually was told by a magistrate to join the Marines, but I'd have to look up the records to be sure. Bronstein who was Catholic had gotten some girl pregnant, married her, and thought he could move her and a kid into the middle class by enlisting. I thought that might take a few years, but he was at least housing and feeding them. Turboboost-I mean Turbish-was huge; some of the guys wanted on his fireteam because he would provide cover. The platoon sergeant was Staff Sergeant Healy, a strange thin guy about three years older than I and four more in the Corps; he had OCD and would wash his hands scores of time per day. The Captain had conferred with him several times about this. Oh, I'm the platoon commander, Jonas Simms of Ohio. At the time of these events I was 23, Healy was 27 I guess, Turbo and Silly were 19 and Bronstein 21. \n\n\"All the officers in the company had comms-radios linked. My squad leaders and platoon sergeant too, on a separate frequency. With flick of a switch I could contact the captain or my squad leaders, or the other platoon leaders if they were close enough. The helmet radios were not strong enough to contact a mile away in these hills, unless you had line of sight and good luck. \n\n\"We were outside Al Gatar or El Gatar or something like that. We'd never been there, or we'd been there and forgotten, but we were there that day. \n\n\"It was our fourth month in country and Afghanistan still looked like shit. Men, women, countryside, country, shit. The men had bad teeth and breath and the women were not allowed to notice us. Nice houses had rubble in the hallways and rooms, unbroken windows were rare things, and water pipes rarely had water, electrical lines rarely had electricity, if there were sewers they smelled or backed up most of the time, and the place was a dump. Actually the dump outside El Gatar was nicer than the town, but the important thing in this place seemed to be that the men do as little work as possible. Success was doing little and still getting by. I knew some fellow students who had that policy in school, so it reminded me of home. It was hot, which was a good reason to do nothing, but doing nothing leads to backed up sewers and rubble in your halls. \n\n\"At nine that day 2d platoon was going to attack Gatar because we had solid, I mean SOLID, evidence that the place was occupied by Taliban or ISIS or even still bin Laden's group. When the captain briefed us platoon commanders he asked for questions and I said, \"Sir, what is the source of our intelligence?\" Captain Messina looked at me as if I was overstepping bounds. He said, \"Well, I am your source, Lieutenant. My source was the colonel commanding this battalion, and he got the information from a source so impeccable it can't be revealed to the likes of you.\" Which got him a chuckle, got me some looks of derision, and I knew better than to ask of weapons of mass destruction. I was also sceptical of the information. \n\n\"2d will attack with guns blazing. We understand the enemy is in some numbers: 40 or more combatants. We want the fire to be so aggressive as to force combatants out the east end of the village. Townspeople have been moved to cellars already by choice or force by the enemy. Simms, you will approach from the west along the road. The town is two rows of a total of about 40 structures, right along the broken formerly paved road. Notice the pictures. At 9 guns ablazing, you recon by fire the near houses and then clear them; they only have 2 or 4 rooms and one floor for most; don't forget those cellars. You may if you can't tell who's who, consider the place a free fire zone. Hear me, gentlemen? Intel is solid this place is bad guys. Do not endanger yourself or your men: I want dead ragheads, not Marines. Clear everyone from inside; if any survive, take them to the first building and guard them all. We don't want any Taliban hiding out behind us. We'll organize them or terminate once we sort them out then.\" Organize or terminate? I remember thinking. \n\n\"1st Platoon, Lt. Kelley, will approach the east side of the village. Your job is to cut off and kill any Taliban that flee the 2d Platoon attack. You'll come over the top of the ridge and down toward the road just before 9, set up what is essentially an ambush. You'll have two attached machine gun teams from Weapons Platoon. Sweeping fire on the road, about a hundred yards from the village. Plunging fire from the ridge side for the rest of the platoon. Oh, don't forget flank and rear security-your platoon is supported by 3d but they'll be well on the other side of the ridge so they can move to you or 2d.\" \n\nThe discussion was focussed on maps for quite some time. A helo insert. Helo extract. Avoid prisoners. Prisoners tended to return to the battlefield after visiting a camp by this point in the war. Lots of details were ironed out. By midnight we were tired and ready to brief our men.\n\nI had never heard murder discussed so off-handedly, but I knew the protocol for dealing with an illegal order. Following it, I would be relieved of my command immediately and the attack would go on. I knew how to follow the orders and give myself options during the coming action and I determined to do it. Later, I spoke to Healy. \n\n\"What do you think, Staff Sergeant?\" \n\nHealy and I were sitting at a table in our fob area. We had a lamp, a map, some Coke. Tee shirts. \n\n\"He wants to massacre the town, doesn't he?\" Healy said quietly. His voice was monotone, his hand was around a pop can, his hand so white from thousands of unnecessary cleanings. \n\n\"That's how I make it. Clear everyone out, shoot first, aggressive, herd them, body counts...\" I mused morosely, without humor. It was now about 1:30. We'd board choppers at 7:45, drop around a half hour later, and approach the town about a mile away at 9. I had been assured the flanking ridges were unoccupied. \n\n\"We'll put First Squad on the left of the road. Second on the right, and Third back. Vee formation.\" I paused. \"I'm not a murderer, Ken. We'll follow orders but I'll find a way. Could be the end of my career tomorrow,\" I said. \"Well at least it'll be with guns ablazin' as the Captain said.\" There was a pressure around my heart or in my stomach, I couldn't tell, but pressure. \n\nI said, \"You'd better get some sleep. I need to think how to do things.\" \n\n\"Good night, Sir.\" \n\nI briefed the squad leaders at 5:30. I followed the five paragraph format. I was very specific about the onset of the attack, should the mission proceed according to plan. I wanted controlled fire; guns might blaze but I wanted coordination, legal targets, and control. I even ordered how many rounds should be fired at certain times, and their targets. They briefed their men at 6:15. We ate. We loaded up. We were at the helos at 7. We boarded at 7:35. We lifted on time. We dropped on time at the LZ. \n\nHelos are not quiet. They must have known we were coming; it was only a mile from the drop. \n\nWe formed a vee of the three squads with some flank security up the sides of the ridges to each side of the road, at least up to the military crest of each ridge. Sitting ducks were we should the enemy be there, but the helos had not noticed anything and our intel was impeccable, as always. The ridgetops were empty of ambushers and we double timed, because we were out in the open, to the village, getting there in a hundred degree morning about 15 minutes early. We were about 400 yards away. I ordered First Squad up the ridge side to the left. I ordered Second up the right ridge side. The captain said by radio that First Platoon was in position. I notified the captain we were commencing attack. \n\nOver my headset: \"Squad leaders, as you were instructed, five rounds each designated man, high aim, commence fire in 30 seconds, my command.\" That gave them time to notify their people and remind them quickly of the plan. \n\nAt time I said, \"Second Platoon, Designated Marines, fire.\" In ten seconds 100 rounds from one fire team in each of First and Second Squads flew into the nearest buildings on either side of the road; silence followed. \n\n\"Again.\" \n\nAnother 100 rounds flew down, and it was now obvious that the rounds were hitting high in every room. There was no return fire. I was pleased with the controlled reconnaissance by fire.\n\nI contacted the captain. \"Sir, no return fire, commencing approach.\"\n\nI blew my whistle and Third Squad ran down the road under the careful overwatch of First and Second Squads up on the ridge sides. I ordered First and Second to begin moving forward along those ridge sides, maintaining the overwatch of those in the village. Third Squad leader reported, \"Sir, right side, 6 civilians here in cellar, no combatants. No weapons. Evacuating noncombatants to designated position.\" \n\n\"Sir, Second Squad, I can see people fleeing houses down the main road and heading east. No weapons, looks like women, kids.\" So the non-combatants were not safely hiding in their cellars. \n\n\"Carry on, all. Third, clear those buildings, mark 'em as you go. I don't want any friendly fire accident.\" \n\nI notified the captain we had received no fire and that civilians were heading his way. \"What the hell is that, Simms? I do not hear much fire from your position, and you will carry out your orders.\" \"Yes, Sir,\" I replied, \"So far no combatants.\" \n\nI notified First and Second Squads, \"Captain wants more fire. Commence fire, like we planned, keep it high until you have combatants to aim at. Everyone alert, intel says they are here, report any incoming fire.\" And so, we fired into the sky, mostly, or at far hillsides, or targets of opportunity like a rock 600 yards away. But it motivated the non-combatant villagers to move faster, assuming the bullets were coming for them. \n\nAnd then I heard it. US machine guns have a distinctive sound and they were opening up on the far side of town. I could hear conversation about ducks on a pond on the First Platoon net, and I thought, Oh my God. \n\nMy guys were speaking. First and Second Squads being up the hillsides could see the far side of the village. \"Mr. Simms, they're mowing 'em down, Sir! It's almost all women and kids, I see some old men who have trouble moving, the guns are...\" Someone else added, \"They are pointing them to get in line by the building, Sir. I think they're gonna...\" \n\nI had a cold feeling. Healy was running back from the edge of the village. He reached me, with a look in his eyes aghast or perhaps disbelieving: this can't be happening. I cleared my platoon comms and took over. \"Listen to me, SECOND PLATOON. I am giving orders. We are Marines, not fuckin' individuals. We control our fire. No questions right now. Right NOW! Third, how far are you down the village?\" ",
        "Corporal Bronstein: \"Sir, about a third. But we've seen NO combatants, no weapons, nothing. No one left in the buildings as we reach them. Just noncombatants hiding or running away. A lot of them.\" \n\nI said, \"Alright, First Squad, stay on the west side of the village, gather as many noncombatants and protect them at this end. Put them in the nearest buildings and protect them! Do it.\" \n\nSergeant Lynch: \"Yes, Sir.\" I assumed he went to his task then. I did not see him until after I was relieved.\n\n\"Second Squad,\" I said, \"Proceed along the south ridge to the east side of the village and take a position to protect any non-combatants we can. Try to keep them in the village. Do you understand me, Corporal Williams? On line, down the ridge side, facing First Platoon, but not too close. Do not fire unless you are fired upon, is that clear?\" Healy was looking at me like the world was ending. Mine was. \n\n\"Oh my fu...\" Williams started to say, and I cut him off. \n\n\"Do you all hear me? This is on me. I am giving you lawful orders, do you understand? We control our fire, we are Marines. Corporal Williams, do you understand your orders?\"\n\n\"Yes, Sir.\" \n\n\"Good man. Carry them out. Semper Fi.\" \n\n\"Bronstein, I am coming to join you. As soon as I am there I want Turbish, Summersill, and Paritzki, whoever else is in that fire team, and we'll be running to the far end. Hell or high water, we're cutting through. Do you hear me?\"\n\n\"Yes, Sir. They will be ready. I'll have the others attempt to cover you.\" From Taliban or Marines? I thought.\n\nI looked at Healy. \"If I'm killed, explain what happened here. If I live, come explain it to me, please.\"\n\n\"Good luck, Mr. Simms.\"\n\nI took off. I was a good but not great runner, but considering the heat, the weapons and equipment we were carrying, boots, helmet, light pack-we did what we could. I ran right down the middle of the road, past noncombatants huddled in houses and some in doorways, I yelled and pointed for them to go to the west but I kept running. I reached Bronstein's position and Silly, Turbo, Lyninger, and Paritzki joined up with me, keeping as far apart as possible. We had another 250 yards to go, so I found myself wondering about inconsequentials like why Paritzki had no nickname and I could never remember Lyninger-but then I forced myself back on task. We ran, perspiration soaking our clothes and dripping from noses and chins and hands. Machine gun fire was ripping across the open space beyond the last houses-I saw the occasional tracer. Villagers were everywhere huddled in groups behind building walls, dark eyes filled with fear and wonder. There were few men. Mostly they were old or women with children, trying to save themselves.\n\nI looked out beyond the final houses. In a field were bodies. Women, some children. I saw no men but there must have been some. There was a line of noncombatants along the last building wall on the side facing First Platoon. Somehow they had lined up over there; then they were pounded by 7.62 rounds from a light machine gun, the wall was smoking, and they were down. I did not count or estimate. Rounds were firing into the houses from up on the hillside. Two hundred yards away. Kelley's platoon was firing at anyone leaving the village, and at anyone near the buildings on this side. There was a young guy missing a foot from an old injury or operation, leaning against a wall staying out of sight from the hill. Some old guy was sitting next to him with his back to a building wall, staring at me, holding a cane or stick. \n\n\"Oh my God sir they killed them all...\" I think that came from Williams up the hill, who would have had a good view of the whole thing. \n\nCaptain Messina cut into my comm. \"Simms, there are people in that village and they are no longer moving east. Now what is going on?\"\n\n\"Sir,\" I said, \"They don't want to get murdered by First Platoon so they refuse to leave. I am moving them back to a safe location with my platoon.\" I heard him start to say something when I put him out of my mind. \n\nI said, \"Summersill, clear anyone out of these buildings on that side, don't let First Platoon see you if you can help it...\" when the game went to final shit. \n\nFirst Platoon repositioned a machine gun team. They began firing plunging fire from the ridgeside into the village buildings. \n\nI opened comm to Kelley and perhaps his platoon. \"Kelley, I have men in those buildings! Cease your fire, cease your fire!\" But it kept on, chewing up the building with the crippled kid and ending his hard life. Summersill escaped injury by luck. I lost sight of the old man.\n\nI called Williams: \"Do you see the machine guns firing at us?\" \n\n\"Yes, Sir, my God sir, those two are about 200 yards from us. My guys on the right can see them clearly.\" \n\n\"Williams, who's on the right?\"\n\n\"I am, so is Tomilo, uh, and Allen.\"\n\n\"We need covering fire.\" I wished I had smoke. I didn't.\n\nThe guns switched to the house on the far side of the street. \n\nI said, \"Silly, Turboboost, Lyninger, as soon as we open fire, take those people and your own ass back down that road. And get all the people down that road to First Squad on your right in that direction. Don't miss any but get going. Got me?\" \n\n\"Ready, Sir.\"\n\n\"Sir.\"\n\nNods. I imagined nods if I didn't see them.\n\n\"Paritzki, you and I are last. Covering fire!\" I aimed and fired where I thought the guns were. Paritzki poked his SAW around a corner and fired up the hill; Tomillo and Allen fired in front of the offending guns, but were hesitant. They did fire. One of the guns on the hill ceased fire. \n\n\"Alright, we've done enough here. Go! Go! Go! Williams get your men out and back to the west end of the village. Protect our noncombatants and yourselves. Now get your asses moving!\" \n\nSoon up on the hillside and down in the village there was a population shift to the west. Marines picked up kids by the backs of their shirts and ran from the fire. Mothers in burkas jogged along with babes in their arms, sometimes. I kept the last of them in front of me, and I looked back trying to see if anyone was coming. \n\nI thought of all the rules I'd broken, ignoring IED possibilities, booby-trapped homes, suicidal enemies, and I was now herding a hundred or so noncombatants down a road. There was Turbo with a woman carried under his left arm and a rifle in his right, Silly with two kids crying but moving along the right side houses ready to duck into doorways. Paritzki covered us; he aimed and fired bursts, aimed and burst, aimed and burst. He may have saved a lot of lives. I saw him kick some kid because he didn't have a free hand and the kid was just crying, frightened to move. It did get him moving. Bunches of people crawled, hobbled, cried, and ran down the street toward the west and safety. I was firing to the east to slow any pursuing fire. As we reached Bronstein and his other fireteam I signalled him to move back to the west side. His Marines dispersed among the non-combatant groups and encouraged them to move faster. One Marine had a guy over his shoulders in a fireman's carry. We withdrew. Fire from First Platoon finally withered and ended, as we were beyond their effective range and view halfway down the village. At the west end there were some buildings Marines pointed the noncombatants into, but basically everyone just huddled together and cried.  \n\nI contacted Healy and he gave me some numbers: no casualties for my platoon, some among the noncombatants, a bunch of people under our protection in the first houses. Marines were helping those who were bleeding. We had no corpsman.\n\nCaptain Messina was screaming into my ear when I decided I could pay attention to him, the first part of his yelling about disobeying orders was all jumbled up but the second was clear. \n\n\"Simms, what the hell was that? Were you firing on First Platoon? Oh my God, you must have gone crazy. You killed a Marine! I'm relieving you, Lieutenant. Healy should take over immediately.\" \n\n\"Very well, Sir. We have taken no casualties. We have 132 noncombatants safe at the west end of the village. We are consolidating a defensive perimeter there. Simms standing down.\" \n\nHealy was then in contact with the captain. I watched him speaking into his mike but rarely. I think he was getting an earful from the captain. \n\nI looked about. Sunny, hot, relentless and oppressive brightness and heat. Old, old buildings, broken pavement, glass, rubble. Marines consolidating, preparing for a counterattack from the enemy. Perhaps First Platoon, with Captain Messina leading the way with guns ablazin'. \n\nBut the intel-it was solid.\n\n*\n\nIt was silent. Marx hesitated. He looked directly at Mom and Dad. \"Actually, two Marines died. When they moved their machine gun to fire down on the buildings they didn't expect to take fire and took an exposed position. Some of 2d Platoon's covering fire killed them. This whole thing is classified as a friendly fire incident.\"\n\nJonas said, \"Ray Zumwalt and Shannon Smith.\"\n\nMom had tears streaming down her face, Dad was unwilling to talk. Mom got up and walked over to me, put her arms around me, and hugged. She whispered, \"I have never been so proud of anyone in my life. I am so glad I am your mother.\"\n\nIt was quiet while she hugged Jonas.\n\n\"Your report was almost perfect, Jonas,\" said Marx, quietly. \"Every Marine in your platoon, every one of their statements, corroborated yours almost word for word. I didn't tell Healy you mentioned his OCD. I didn't tell a few others about other little comments-you called Healy strange, said Bronstein was Catholic, things like that.\" \n\n\"Bronstein says everyone assumes he's Jewish, so I used to mock him calling him the Catholic.\"\n\n\"But for things like that, they all heard what you said.\" \n\nDad spoke, \"You saved 132 people.\"\n\nMarx said, \"Actually it was more like 158 but his numbers at the time were confused.\"\n\nDad said, \"It was the deaths of the two Marines that led to an investigation for murder? Why was it secret, why is there anything to worry about?\"\n\n\"For some reason, some higher ups rewarded Captain now Major Messina and 1st Lieutenant Kelley for their victory, within hours of the incident. 29 dead Taliban were reported, most in that field at the end of the village. They mowed down the first wave of non-combatants without bothering to identify them. They followed Messina's \"guns ablazin'\" principle that Jonas was so skeptical of. Some of those dead Taliban were under two years old.\" \n\n\"Is there proof?\"\n\nJonas stood up. \"No.\"\n\nMarx looked at Jonas and shook his head. Then he said, \"I wouldn't say that. Why don't we go to the kitchen table? I have some things to show you.\" \n\nAt the table, Marx got out a large manila folder. \"I had these enlarged. This may be gruesome, you may want to look away. Some of Jonas's platoon had cell phones with them, against regulations, but they pulled them out and took some quick pictures during the battle.\" He pulled out a picture, pointed to various parts as he talked. \"In this one, you see the field at the end of the village. If you look closely, you can see women in burkas and over here is a child. Also in this one you see this kid huddling against the building, here. That is an old man next to him. And this one taken a minute later is blurry but the same kid dead and that is what is left of the building. It is clear in the first picture the kid is a cripple with a stick, not a combatant. There are one or two others from the field, but the rest are of the noncombatants huddled together under the watch of the Marines at the west end of the village.\" \n\nMom asked, \"Are there any pictures of Jonas?\" \n\nMarx smiled. \"Two. Here he is running down the center of the road with a kid in his arms.\" In the background you could see Turbo carrying a sack under his left arm, that in reality was a woman.\n\nJonas said, \"I don't remember doing that.\" Marx said, \"I know. But that is you and you did it.\"\n\nMarx continued, \"And here he is just after he was relieved, helping wrap a kid's foot. I can't tell if he was bleeding or just turned his ankle.\" \n\n\"Silly had his phone, didn't he?\" Jonas asked. \"Disobeyed my orders. Standing orders.\"\n\n\"Yup. He said he'd have taken more but he was busy.\" \n\nMom and Dad were poring over the pictures, so strangely far away, with their son doing things they had not suspected. \n\nMarx said, \"I think it was the picture of you carrying the kid, with Turbish carrying the woman, that got the charges pushed aside. It's hard to see American heroism in the face of American atrocity and reward those responsible for the latter. Oh, I've made about 100 copies of these pictures.\"\n\nIt was quiet. Mom would make a statement or observation of the pictures: \"I've never seen Jonas in his combat get-up\" or \"look over at this\" or just \"oh my.\" Dad would say, \"Is this him?\" or \"what is this guy doing?\" or things of that nature. They studied those 9 pictures.\n\n\"Now I am almost afraid to tell you the next. I am not here because of any of this. I could have sent the pictures. And while a pleasant evening with friends is always good, I came because I want Jonas's approval of something I am doing.\" Marx actually looked awkward, as if he had committed a transgression and wanted forgiveness. \n\nMarx continued on after a deep breath. \"I have written a novel based on the al Gatar massacre. I can't think of what else to call it. I wrote it as a novel because I thought it would increase readership and perhaps protect Jonas from everyday scrutiny. But I can account for every sentence in the book except for the names of the participants. Every word is true, to my knowledge. It took me over a year to write, and I'd like Jonas's approval before it hits the bookstores. I don't want your approval because it will change whether or not it is published. Sooner or later, al Gatar is going to come out. I mean, Kelley's dad is in the Senate. Sooner or later someone will look into his career in the war. I want your approval, your criticism, your thoughts on the book. You and I probably know more about al Gatar than anyone.\"\n\nMarx opened his case one more time and took out three hardbound copies of his new novel. He gave one to each of the family. \n\nJeremiah in Agony \n\nby Tom Marx\n\nBased on an Incident in the War in Afghanistan\n\nThe cover pictured a soldier or Marine with haunted eyes kneeling beside a child on the ground. He was dirty and unshaven and it reminded me of a movie poster for \"The Thin Red Line.\" The book was about 300 pages, hardback, and the print was not large. Production values were first rate, he thought. It was very well done. The publisher was NovelAmerica. \n\n\"Well, Tom,\" Jonas thought aloud, \"you must know someone in the publishing industry.\" \n\n\"Actually, my sister is the editor,\" he said. \"We had the whole thing written except for the classified chapters. I wrote those three chapters a thousand times in my head, but until they declassified a few months ago, I put nothing to paper. Then I wrote for two weeks, draft after draft. I think it came out well. My sister is pleased, which means her boss is pleased too. They want to send it to stores shortly. I asked them to delay until you had a chance to read it.\" \n\nMom and Dad were paging through. Jonas was also. \"Can you keep my name out of it? I mean, can you just refuse to say who I am?\" \n\n\"I can. I will, if you want me to. I think it is a mistake.\"\n\n\"Why?\" asked Mom. \n\n\"Anyone doing a cursory examination of the JAG files will see the summary page. That page mentions that 1st Lt. Jonas Simms was investigated for possible charges of mutiny, disobedience, murder, and several other things. It says no charges were finally brought. It makes no mention of what he actually did. For that, you'd have to go to the pages of his recorded statements, the 29 page narrative of actions at al Gatar, and find the occasional statements of his actions and put them together. It would take someone who wanted an in-depth story-or a book.\" \n\n\"Then, Tom, I ask you to protect me. Protect my integrity. My privacy, too. If you feel my name should come out, choose the proper time and release it. Until then, just tell people that I'd prefer to finish school, teach, maybe coach the baseball team or girls basketball or something.\" \n\nMarx noticed that Jonas had called him Tom. \n\nMarx said, \"Then that is how I will do it. I can keep the secret for quite a while, but it is a quick search to find the al Gatar incident file, and your name is on the front.\"\n\nIt was 11:30. Marx stood. \"Mr. and Mrs. Simms, it has been a genuine pleasure to meet you. I've wanted to meet Jonas's parents for some time.\" He hesitated, then held his hand out to Dad. \"Your son is a hero in the middle of a tragedy. He was faced with Calley's decision and he made the right one, without any pause.\" They shook. \n\n\"Yes,\" Mom said, \"we have always been proud of him. Now we know.\"\n\nJonas said, \"Mom, enough. Tom, I'll read the book as soon as I can. Thanks for coming.\" Marx led the way to the door, said goodnight, and left. Mom came up behind Jonas and hugged him and cried, remembering all those sleepless nights worrying that something might be happening to Jonas at that very instant on the other side of the world.\n\nJonas Agonistes Chapter 3: The Honour in Humility\n\nI opened \"Jeremiah\" after school the next day. I opened it to the beginning. I did not have class this night, thank goodness. \n\nIt was 3:30 in the morning when I closed the book. A few thoughts had come to me as I read. Tom Marx was a writer, and not just a good one; I wondered if he was misguided going into the law. I was amazed at the depth of the characters, the clarity of the action. Chapter 16, describing the actual incident, was a masterpiece describing the actions of dozens of Americans in two small units, confronting one another over the lives of noncombatants trapped on a battlefield. Chapter 15 had made me question my perspective, if not my decisions. Chapter 17 justified me, and made me wonder at the motives of the Marine Corps. More than that: the motives of the United States. I sat and thought about the book.\n\nI called Tom. He answered, at 4 am. \n\n\"Hello?\"\n\n\"Tom, Jonas Simms. Finished the book.\"\n\n\"Yeah?\" \n\nI could tell he was waking up, his voice foggy. \n\n\"Gonna change my life, you know,\" I said. \n\nPause. \n\n\"Yeah. It may take them a while to figure out the real case. A little longer to read the general officer's report on the incident,\" he said.\n\n\"No, Tom, I mean the book. The book will change my life. I'm still ticked at you for writing it, though.\" \n\nPause. \n\n\"Thanks, Jonas. I'm sorry it will all come out. Soon, too, maybe.\" \n\nIt was a slow conversation. 4:00 am. \n\n\"Maybe for the best. When's it in the bookstores?\" \n\n\"Soon. It's ready to ship now, printed and boxed, and the publisher knew the incident was being declassified. They are advertising now, and the tour is growing daily. Maybe a month before it's in the stores.\" He paused. \"They want it out soon.\"\n\n\"It's scary how good your writing is, Tom. Why'd you become a lawyer?\" \n\nHe said wryly, \"I wanted to keep good guys out of the brig.\" \n\nPause. \n\n\"Thanks. I need to get to sleep. Doubt if I can. Probably show a movie in class today,\" I said. \n\n\"Jonas, really, thanks for calling. I thought you might not forgive me,\" he said. \n\n\"Nah, that book is...well, I know who my friends are. I gotta go. Talk to you later. Good night.\" \n\n*\n\nMom and Dad finished the book over the next few days and had many questions and comments. Mom even wrote a letter to Tom, thanking him for giving them a better insight into their son's life. Dad, who I think has read two books in his life-one being a guide to home plumbing-kept asking me about this incident and this guy and that gun and what Afghanistan was like. He was underlining things in the book, writing notes in the margin. Whenever I was home, he'd bring something up. It was a side of him I'd never seen.",
        "I asked them, \"Have you told anyone about the book? I mean, about what happened to me over there?\" \n\n\"No, we have talked in general but we haven't mentioned the details or al Gatar or anything. We discussed this late into the night the other night. We don't want to brag about your actions, we think it looks self-serving. And ultimately it's a tragedy. The whole thing: it was a murder, an atrocity. You just did the right thing, and that is enough. When people find out you are the guy in the book, then we'll talk more. Maybe.\"\n\n* \n\n\"Jeremiah in Agony\" was in bookstores before Christmas. It was reviewed very positively two weeks before by a famous author in the New York Times Book Review. Tom was on morning talk shows, morning drive radio shows, interviewed in Vanity Fair, of all things. I hadn't realized his reputation as a lawyer; I had been told he was the best but I hadn't realized he was well-known in legal circles. This was not his first book; it was his first novel. He said that Jeremiah was a real person. When asked to prove it, he said did it matter? He also said he did not change the names to protect Jeremiah; he said he did it to protect some of the others who had acted with poorer judgment. Overall, the Marine Corps sat back and watched. I saw no comments from anyone in my platoon or company or battalion. Maybe they don't read much.\n\nBut I received two Christmas cards this year. One was from a car dealer, but the other was from Ken Healy. On the back it said, \"So you think OCD is strange, huh??? Well, I can tell you it is completely strange and you know you are doing it anyway. I hope you have a Merry Christmas, Jonas. You saved a lot of lives. Proud to have been in Second Platoon.\" He signed it Gunnery Sergeant Ken Healy, 3/6. I laughed, thinking he was a good sport. He must have read it as soon as it hit the stores. I wrote him a note, finding his return address on the envelope. I mentioned that his actions that day had been loyal and humane and brave. I said without my platoon's support and willingness to obey orders, a lot more people would have died, and I would have had difficulties. And I thanked him. I signed it, High School History Teacher Jonas Simms. I had rank, too.\n\nBy New Year's Day, \"Jeremiah in Agony\" was a bestseller. Tom sent me an email that he was signing books the next week at the Joseph-Beth Booksellers store in Norwood, Ohio, not too far from Sky Grey and actually within a few miles of the University of Cincinnati. I promised to come hear him and maybe get my copy signed. I had the first meeting of my American Wars seminar that same day in the late afternoon, at 4:00, just giving me time to get there after school ended at 2:20, so I could then swing over to see Tom's signing at 7. \n\nI made it to the seminar just before it was to begin. In the room were 11 students, which does not mean young people. Graduate level classes are often filled with the middle aged or the mid-career person. I was actually one of the youngest there. \n\nBarry Lynd taught this course. By this point I would say he led the course. Barry was my advisor and I had been looking forward to taking his class for some time; finally I had been able to fit it into my schedule. He promised I would like the readings. He intimated there was a girl he wanted me to meet. Since there were only two women in the room, and since the one woman was old enough to be Barry's mother, I assumed that the little redhead was the subject of his matchmaking. She sat across from me and one down.\n\n\"Good evening, I'm Professor Lynd and this is the American Wars Colloquium. I know some of you already from here at UC, and I'm sure some of you know one another. Why don't we take a few minutes and introduce ourselves for those who don't. Just say your name, where you are from, what you are doing, your goals, innermost desires, that sort of thing.\" People were smiling at the desires comment. \"Why don't we start over here on my left and work our way around the table?\" He looked at me with darts in his eyes. I so wanted to laugh. \n\n\"Okay, I'm Jonas Simms and I teach freshman and sophomore history classes out at Merciful Saviour High School in Sky Grey. I am trying to earn a history master's so that I may teach in college, eventually, but I'm really liking my time at Saviour. I have a bachelor's from Miami.\" I shut up then, despite the death rays shooting from Barry's eyes at me for my mundane description. \n\nHaving set the standard so low, I now listened to nine other renditions of insignificance about ourselves. One or two went on. When it came the redhead's turn, I did pay some attention. \"Hi, Emily Scott. I'm working on a degree in American literature and I needed some history coursework, so I've taken two courses now from Dr. Lynd. I'm working on a thesis about fictional representations of Americans at war. I hope to be able to teach in college once I have the degree. I spent two years in the Peace Corps in sub-Saharan Africa working with ebola decontamination before I came here. I'm from Fairfield and still live there.\" Barry was smug: see! You didn't have to be boring. It would serve you right, Simms, if she never spoke to you. \n\nEmily was petite, perhaps 5'1\", with bright red hair, some freckles, and a runner's perkiness. She wore no rings on her fingers but had earrings and wore a sweater that gave her a Lana Turner sexiness. It was good, I thought, that Fairfield is only a few miles from Sky Grey. Okay, a little more than a few.\n\nIt was an hour later that Barry gave us a ten minute break and I checked my phone. There was one message from Tom Marx. Barry walked over: \"Opportunities are fleeting, Simms.\" Then he walked toward the restrooms. I pulled up the message. \n\n\"Jonas, in town and heading to Joseph-Beth. My sister is with me. Would like to get something to eat after the signing if you'd like to join us. And take us to a decent place to eat.\" I called him. \n\n\"Tom?\"\n\n\"Jonas, just got to Joseph Beth. So can you join us for supper?\"\n\n\"Yeah. I know a German place near there. Harkens back to Cincinnati's German heritage. You paying?\"\n\n\"Of course. I'm on an expense account. Uh, my sister is looking at me like that may not be a good attitude. See you in an hour or so?\" \n\n\"I'll be there. Might be late.\"\n\nThe students were filtering back into the room. Barry came over. \n\n\"So are you going to ask her out?\" he asked. \n\n\"Haven't said anything to her, yet. She's cute though.\" \n\nHe looked at me like I was blind. \"Cute? Simms, don't be an idiot.\" He left then and we started up the class again.\n\nWe were discussing our projects, required for the course, and what we intended to study. I was interested in the modern leadership system in the military; rotating officers through the combat roles without regard to perceived success or failure or maintenance of the status quo. One of the other students was studying strategy and how it had changed with the advancement in weapons systems. Another was studying the structure of the US Army from the Revolution to Afghanistan; I didn't see where that one was going but maybe it would mean something. The other, older woman, Barb Ford, was studying the influence of women since the First World War; I thought that might be interesting if she did a good job. \n\nEmily spoke. \"I'm comparing fiction of Americans at war from Vietnam to now. I'm selecting novels from Vietnam, the Gulf War, and the current wars in Iraq and Afghanistan and comparing their themes, attitudes toward policy, toward the military, that sort of thing. There is a new novel about Afghanistan with graphic depiction of a battle and atrocity that is getting a lot of attention recently,\" she said, pulling a copy of \"Jeremiah in Agony\" from her bag on the floor. \"I really liked the novel, and the author claims it is all true and based on official documents. But nowhere does he give a real name or date; I can't find the name of the incident anywhere. The author is giving a talk at Joseph-Beth in an hour, so I'll see if he will help me or something.\" She sat down. \n\nBarry said, \"I think hitting up the author is a great idea if you have that kind of luck. If you can get an email address often works too; I've corresponded with many authors over the years. It seems quite a coincidence him being here now.\" I almost laughed aloud; Barry saw me and gave me a querying look but I just shook it off. \n\n\"How did you pick this topic?\" I asked Emily.\n\n\"When I was in Africa I came across the murder of a bunch of school girls in Ghana by rebels. I decided to look into this sort of thing.\" I nodded and let it go. \n\nTom Marx had said it would take somebody writing a book or an in-depth investigation to find the information. Ms. Scott seemed to be the first, except for Tom himself. I wondered if I should help her.\n\nClass finished shortly after 6 and I went to my car. Barry looked at me as I left; I smiled and laughed and waved him off, saying, \"I'll talk to you about it another time. I have an appointment.\"\n\nThe drive to Joseph-Beth took only a few minutes. I was there at 6:40. Chairs were set up in front of a fireplace, with tables full of \"Jeremiah in Agony\" stacks. Two other books by Tom were also available, \"Capital Punishment and Military Courts\" and \"Defending the Dobus Murderer,\" Tom's other most famous case. Tom was there laughing and talking with a tall woman who must be his sister. She was about 40 with brown hair and smart glasses. She was round but not overweight and had a wedding ring. He did not notice me when I walked in. Behind me, I heard, \"Are you following me?\" \n\nI turned and saw Emily Scott a few feet away. \"No, I had planned to be here when you mentioned it. I'm Jonas Simms, if you don't remember.\" I held out my hand and she shook it, not sure if she believed my explanation. \"Would you mind if I sit alone?\" she asked. \"I need to ask Marx some questions and I may give him a hard time.\" \"Of course,\" I answered, wondering how tough can a book signing be? \"I usually prefer to stand, that way I can disappear if the subject gets dull.\" Others were now sitting in the seats. People were picking up copies. Tom saw me and waved, but he was speaking to some others so he could not break away. Most of the chairs were full, and then it was 7 and they were full, and there were others like me standing. I leaned against a bookshelf. Emily was in the middle. I wondered if her attitude was partly a result of her stature. \n\nThe tall woman who had been standing with Tom went to the lectern that was just off to the side of the fireplace. \"Ladies and Gentlemen, I am representing the publisher of \"Jeremiah in Agony,\" NovelAmerica. My name is Jennifer Jones, and if you notice I resemble Tom Marx it is because he is also my brother. Tom has been a JAG lawyer with the Marines for 20 years now; he is a lieutenant colonel in the reserves. He also works for Thompson, Brasch, and Jones law firm in Washington D.C.,\" she said. \"He has two other books in print which you may see and purchase from the table to my far right. But we are here to talk about this remarkable book you see and hear about everywhere, \"Jeremiah in Agony.\" Ladies and Gentlemen, Tom Marx.\"\n\nThere was a smattering of applause; perhaps 50 people were paying attention. \n\nTom was a gifted writer; he was also a forthright and convincing speaker. He told stories, he mentioned characters, he talked about defending me, he talked about the case. He only spoke for about 20 minutes. At the end he said, \"It has been my duty and my honor to defend the real Jeremiah; he is my friend. This is my first bookstore. I chose it for a reason. Jeremiah, the real Jeremiah, buys books here. I'd like to read you a very short statement which is in the novel. In real life, I received a call from an employer, considering hiring the real Jeremiah Perkins for a job. I said, actually, I read them this: \n\nI have known many brave men in the Marine Corps. I have known men who lost their lives saving others, selflessly acting when it would mean their own deaths. I have investigated brave men for the awarding of the Medal of Honor. So I do not say this lightly: Lt. Perkins is the most morally courageous person I have ever met. You will see no medal or award. There is no statement in his file. I cannot tell you what happened or what he did. Maybe someday.\n\n\"He is remarkable, humble to a fault, and genuine. I hope you like his story. I hope you feel the same renewal of faith that I felt for the three years I defended him and wrote the novel. \n\n\"I will now take questions.\"\n\nEmily's hand was up, but she was not called on first. She was second. \n\n\"Colonel Marx, I am writing a thesis on modern American war fiction. You say the incident is completely declassified in the introduction, but you don't state the actual name of the village, give the date of the incident, or the name of any participant. How can I find the truth and the actual reports?\" \n\n\"Jeremiah and I discussed this very thing. He is worried that his privacy and integrity will be compromised when the story comes out, so he asked me to be very...judicious in making it easier for any investigator. I think he wants to be sure his tale is told by people who want the whole story and not a simple one. IF you find the report, Ms.?\" he paused, \"Scott,\" she said, \"Then when you see it you will see that if you only read the abstract page it gives no inkling of the actual acts of the title character. NONE. It assassinates his character by listing the things he was investigated for and does not mention he was cleared of them. Keep searching. I have a feeling you will soon have the report.\" \n\nHe glanced up at me. I guess he'd seen her with me earlier. I nodded. I decided she was not to be stymied. If I didn't want the story to be told by someone like Emily, then who would be more honest and fair? I walked over to the main desk and asked for a pen and some scrap paper. I wrote, \n\nI am going out to dinner later with Lt. Col. Marx and his sister-you are welcome to come if you'd like. I'd like you to.\n\nI folded it and put it in my pocket. \n\nQuestioning was still going on. Several people were concerned that Jeremiah was too good to be true. Marx agreed that there had been tremendous pressure on Perkins to conform to simply herd the crowd to the end of the village and into the field and let the other Marines kill them. \n\n\"You understand he did that. Jeremiah suffers for a reason. He suspected that the Marines were not going to discriminate combatant from noncombatant. He ordered or forced the noncombatants out and into the ambush kill zone by his actions on the west side of the village. \n\n\"It was only after the massacre began that he gave contrary orders. He said to his NCOs, 'this is on me.\" He took responsibility not in the fake way of politicians, but in the real way of men: I will risk my life and my reputation and my career. I will do what I can and expect consequences or punishment. This was his. And he suffered all those losses but his life. As you read in the last chapters, he spent two years without a visit from Marine friends. Without orders. Restricted. I was his Marine Corps while men and women he never met decided whether to charge him with some of the worst crimes possible-mutiny, disobedience of orders, murder... All for the virtuous act of saving 160 people who would never thank him, who would never feel gratitude, who would never acknowledge it.\" \n\nAt 8:15 Jennifer called a halt and people lined up to get their books signed. Emily was in line, too. I walked over to her and gave her the note. I said, \"Here. This might be of interest to you.\" I moved away from the line then. \n\nShe read the note and left the line. \n\n\"You know Colonel Marx?\"\n\nI nodded and smiled. \"I'm more interested in whether or not you'll go to dinner with me, but yeah, I know him.\" \n\n\"You have an interesting way of asking a girl for a date.\"\n\n\"I haven't asked a girl for a date since I was at Miami. I'm out of practice.\"\n\n\"Why so long?\" she asked.\n\nYes, why so long? Barry wanted to know that, too. \n\n\"Maybe because it's so hard to get a straight answer to the question,\" he said. \"Will you go with me?\"\n\n\"Of course. It is a bit overwhelming. I've never spoken with a famous author. How do you know him?\"\n\n\"Good. Tom's after me to make friends. Barry was trying to set you and me up, too,\" I said. \n\n\"Barry? Lynd? He was trying...\"\n\n\"To get me to ask you out. Actually he said there'd be someone I should meet in the seminar so it was you or Barb, but I didn't think he meant her.\" Smiling. \n\n\"Probably not.\" \n\n\"He's been my advisor for the two years I've been at UC.\" \n\nJennifer came over as the line moved, Tom diligently signing each copy.\n\n\"Mr. Simms?\" she asked. I responded, \"Jennifer, I'm Jonas Simms. This is Emily Scott. I've asked Emily to join us for supper and she's accepted.\" \n\n\"Wonderful. You were going to give him a hard time, so I guess you can do that over German food. It looks like Tom will be finished in about ten, so we can get going.\"\n\nEmily said, \"Is the book selling well?\"\n\nJennifer answered, \"Very, very well. We have ordered another printing. It is getting notice in academic circles and historical groups, military book club, I hear the history book club. And the story! I think people were crying out for a true and moral American story. There is so much cynicism-the idea that someone would see a wrong and try to right it is just so compelling...\" \n\n\"Well, I'm looking forward to giving your brother a hard time.\" \n\nJennifer looked at her and then Jonas and responded, \"Good. That will make the evening perfect, then.\" \n\n*\n\nEmily called her mother to say she was going to dinner-\"yes, a date!\"-and would be home late. Jonas and she left their cars at Joseph-Beth and rode in the back seat of Tom's rental (expense account) a mile up the road to a German restaurant called Mecklenburg Gardens. The place featured waiters and waitresses in what must have been German costumes. Some of them even had German accents. \n\nIt was a fun night. Emily was friendly and pretty and laughed easily; Jennifer talked about her children and how she'd gotten into NovelAmerica; Tom talked about silly things his clients had done. Jonas talked about teaching and the things kids do. Emily talked of burning homes and villages and bodies to stop ebola. She also mentioned that she had witnessed the aftermath of an atrocity in Ghana: the murder of dozens of schoolgirls by Muslim extremists. \n\nEmily said, \"I met Jonas tonight in our history class. How did you meet him, Colonel? What's your connection?\"\n\nI think that was when Jennifer realized, or had confirmed for her, that Emily didn't know who Jeremiah was. Her eyes grew bigger. She looked at me. I shook my head a tiny bit. Before Tom spoke, she said, \"Tom I need to talk to you in private. Now.\" She stood up, as did her brother, and they walked off toward the bar. Jennifer put her hand on my shoulder as she left. I think she meant, this is your chance. You better tell this girl. \n\n\"Did I say something wrong?\" Emily asked. She looked as if she'd committed a faux pas. I hesitated. \n\n\"No, nothing like that, relax. I have kept this secret for so long it is hard now to relinquish. I forgot how rude it is to share a secret with all but one person present. Remember Tom said he chose Cincinnati for the first book signing for a reason? I'm the reason,\" I said, \"I've never had to tell a girl I was in jail. You have my name. The village you are interested in is al Gatar. G-A-T-A-R. Type them into the Marine Corps page and you're going to get hundreds of pages of testimony, pictures, documents. Tom saved me. He gave me back my life. That's how I know him.\" \n\nShe just looked at me for a moment. \"You are Jeremiah?\" \n\nI took a deep breath. Her eyes were piercing, and blue-grey. \"Tom says I am. The book is very faithful to the accounts in the files you'll get. It's very accurate to my experience.\" ",
        "\"Why are you telling me, now?\"\n\n\"The files are available. I'd rather have someone like you looking into it than some others who are out there. And I'm tired of hiding. I don't want attention, I hope no one bothers with me, but I am not going to pretend. I was there. I did what I did. I sent those people into the field...\" \n\nEmily studied Jonas's face, but he did not talk more. \n\nTom and Jennifer returned then, thankfully. \n\n\"I hope you cleared things up, Jonas,\" Tom said. He looked at Emily. \"I've known Jonas since he was relieved. I was in Kabul, and that's where they sent him. It's all just like in the book. He asked for a lawyer and I'd heard rumors of a great victory at al Gatar-did he mention the name? Good. So I went to see him and he told me the damnedest story.\" He was shaking his head. \"And it was all true. I couldn't believe it at first. Massacre? My Marine Corps? But then I met people, and the ones who lied were the ones who expected to be believed. I spoke to Jonas's platoon and it was one-two-three-four straight down the line like in the novel. Word for word. I only invented dialogue when I had a statement like, 'He said something like he did this' or \"It was about doing this sort of thing.' \n\n\"I assume you'll read the reports and interviews. The Corps threw him to the dogs before it realized he was the only one using good judgment.\" \n\nJonas seemed perturbed and interrupted. \"Kelley was my friend. He just couldn't handle the pressure...\" he said. \"But Messina, he was so excited he was almost frothing at the mouth. 'Guns ablazin,' he said. Oh my God.\" I shook my head.\n\nSilence. \"Zumwalt and Smith. How do I ever face their families?\" Jonas said, head hanging. Emily put her hand on his back, the first time she'd touched him. She was looking at Tom. \n\n\"Those were the two Marines who died. Up on the hill with the machine gun,\" he said. \n\n\"I promised myself someday I'd visit their families,\" Jonas said. There was quiet for a moment. \n\n\"I think Dante was right,\" Emily said, \"Purgatory is self-inflicted.\" \n\nJonas looked up at that one. So did Jennifer and Tom. Jennifer leaned over. In Jonas's ear, she said, \"I think she's a keeper, kid.\" \n\nSo the dinner became talk and soon it was getting close to closing time. They were the last there, and the staff was cleaning up. \n\n\"Jonas, you need to deal with it. You have PTSD worse than you realize,\" he said, \", \"and you haven't done anything to address it. You found work and school and then you stopped. You've avoided counseling. Your idea to visit the families of the two Marines is worthy, but could be a disaster, and would mean they would have to face the fact that their sons murdered people. Get the help. Even the Corps is changing how it sees therapy.\" Tom was right. The implication that the Corps's attitude would affect me was lost in the ether, but not the idea that visiting the families of the two dead Marines might be considered vindictive. \n\nTom said, \"Emily, if you need to talk to me for your paper, just give me a call. Jonas has all my numbers and address. I think you can reach Jennifer at NovelAmerica if you want to get permission for excerpts and things. It will be given, by the way. It has been an honor meeting you.\" \n\nThey took us back to our cars. Emily held Jonas's hand on the ride. \"Do you have your cell phone?\" she asked him. He got it out. She took it and programmed in her number. They pulled into the shopping center with Joseph-Beth.\n\n\"I'll call you tomorrow,\" Jonas said. \"You don't need to request the materials on al Gatar. That could take some time, they never hurry for requests from the public. I can send you the digital files, and give you a hard copy if you'd like. I have them at home.\" \n\nEmily said, \"Tom, Jennifer, thank you for one of the most interesting and fun nights of my life. Meaningful. Jonas, thank you for asking me.\" The parking lot at Joseph-Beth was practically empty but for their two cars. Jonas walked to her car with her and held the door. Tom and Jennifer waited until our cars were started before they left.\n\nJonas Agonistes Chapter 4: Meeting Her Folks\n\n\"So how was your date?\" Emily's mother asked in a low voice. \"Quiet-Dad's asleep.\" It was after midnight that Em had walked in, but she'd had so few dates since breaking off an engagement a year before that her mother was worried about her. \n\n\"Really very unusual. I went to that book signing where I met up with this guy from class. His name's Jonas Simms. Anyway, turns out he knew the author so we all ended up at dinner together. Nice people all around. The author is a lawyer named Tom Marx, his editor is also his sister Jennifer. So just the four of us. We talked about the book and school. Jonas is a teacher over at Merciful Saviour in Sky Grey.\"\n\n\"You like him?\" \n\n\"Yeah, I guess I do. I expect Jonas to call tomorrow-today, now. He has some documents to help me with my class project.\" \n\n\"Did you find out who the book is about? Or did the writer keep it secret?\"\n\nEm thought for a minute. \"I think they were sharing a confidence with me, but yes, they told me. I'm not sure if I'll reveal who it is or not. The guy has enough problems with PTSD and everything.\" \n\n\"It's a good book, maybe even a great one,\" her mom said. \"You got me to read it. Dad wants to read it next.\" \n\n\"All in all a really good day, Mom. Jonas is a good guy, a year or two older than I. I think you'll like him. Oh, and he lives with his parents, too.\" They both laughed.\n\n\"You work tomorrow?\"\n\n\"Yeah, I'm chartered from CVG to Dallas at 9. Then I return the plane. Should be home early evening. Or late afternoon if there are no delays.\" \n\n\"Better get to sleep, Hon.\" \n\n\"Good night, Mom.\"\n\n*\n\nI called Emily while she was on a jet to Dallas the next day. \n\n\"Emily? Jonas.\"\n\n\"Hi, Jonas. I'm flying to Dallas now but I can talk for a minute. I thought you'd be in class now.\"\n\n\"Prep period. I need your email to send you those documents.\"\n\nShe gave her address, then said, \"If you want, I should be home around 6 this evening if you want to bring the hard copies over. My mom and dad will be home if I'm not. Why not stay for supper? I'll let Mom know.\"\n\n\"Uh, you're on your way to Dallas and you're coming back this afternoon?\"\n\n\"I'm the copilot. It's my day job.\"\n\nJonas laughed. \"First you're fighting ebola and now it turns out you fly planes. You're a woman with many talents.\"\n\n\"The main thing I did to fight ebola was fly doctors around. My dad's a pilot and I got my license when I was 16. I've been commercial for three years now.\" \n\n\"Well I'll leave you to your work. Dinner sounds great. I'll find your house.\"\n\n\"We're listed. Bye, Jonas.\"\n\n\"Bye.\" \n\n*\n\nI found the Scott house on a street near the Great Miami River in an area called LIndenwald. It had several gables, a nice front porch. The road was not busy. I parked on the street. I grabbed my briefcase and headed up.\n\nMy knock was answered by Emily. I was glad she was home; I didn't want to try to make small talk with her parents. \n\n\"Jonas! Come in.\" Sweaters definitely became her. The house was dark wood trim and old, thick plaster. Solid. \"You can put the briefcase over against the wall. \n\n\"Mom's cooking. She's very excited for me to bring a guy home, I must say.\"\n\n\"I'd like to meet your parents.\"\n\n\"Okay,\" she said, taking my hand and pulling me to the kitchen. The whole place smelled of spinach and chicken breast and good cooking. \"Mom.\" Emily's mother was petite also, but rounder with the years. She was probably over fifty, with reddish-brown hair, glasses, and intelligence in her grey eyes. \n\n\"Mom, this is Jonas Simms. Jonas, my mom, Sharon.\"\n\nWe shook hands. \"My pleasure to meet you, Ma'am.\" \n\n\"How do you do, Jonas?\"\n\n\"Very well. You have a lovely home. Very much like ours in Sky Grey.\" \n\n\"Jonas,\" said a man's voice behind me. I turned. Emily's father was several inches taller than I, perhaps six feet tall. He held out his hand.\n\n\"How do you do, Sir?\" I said, taking the hand. Firm.\n\n\"Well, very well. Walter Scott. No 'sir,' please. Let's go sit in the living room and get out of Sharon's way.\" \n\nI smiled. \"Did your parents like 'Ivanhoe?'\" Emily abandoned me then to her father, staying to help her mother. \n\nHe smiled and shrugged. \"Maybe. By the time I found out who Scott was, they were gone. Em was working and just got home, so she hasn't told us much about you,\" he said.\n\n\"We only met at our class yesterday-so I've only known her a day,\" I said. \"But she was interested in Tom's book, so we ran into each other at the signing and we all went to supper. It was fun. I have some papers she needs for her school project so I brought them over.\"\n\n\"You teach at Saviour high?\"\n\n\"I have for two years. Once I get the master's, probably this summer, I'll think about teaching at a college. Or stay at Saviour; I'd like to coach some sports, I think. Baseball. Basketball. What do you do for a living?\" \n\nHer father was nodding. \n\n\"I own most of a plane charter company. We own 7 smaller jets and some turboprops. Emily actually works for me, flying around the east coast and south. She likes to be home at night, so we usually work that out. She's copilot on our small business jets, pilot on the props.\" He sounded proud. \"Smart as a whip. Knows the engines, the mechanics. Good pilot. \n\n\"How old are you, son?\" \n\n\"27.\"\n\n\"If you've been at Savior for two years, where were you before that?\"\n\n\"I was on active duty. Marines.\" \n\n\"Did you see any action?\" \n\nI hesitated then. I felt hot. Would it always come up so fast? Why couldn't I just lie or keep cool or whatever? Emily's dad saw I was uncomfortable. \"Yes,...\"\n\n\"I'm sorry. If that is a sore subject. I have heard terrible things about the war and it is not my business to poke around...\"\n\n\"No, Dad, you shouldn't,\" Emily said from the kitchen door. \"Supper is ready.\"\n\nWe moved into the dining room. The table was prettily set. Emily and I sat across from one another, her parents at the head and foot. There were parmesan chicken breasts, green beans, spinach and squash, cooked salad, some sort of chutney which I'd never heard of. \n\n\"Emily, would you say grace?\" her mother asked.\n\nWe all added our amen after, and we ate. It was good conversation, but I felt that I had committed a faux pas by not answering her father, and by feeling so uncomfortable. \n\nAs at my house, clearing and washing dishes was part of the meal. It was good talk and I washed because I didn't know where the dishes went. \n\nEmily and I met then over the dining room table to look at the documents I had brought. It was a complete set, perhaps 1200 pages plus the few pictures in a separate manila envelope. Once I had shown her the organization, she had read the somewhat misleading abstract page, I made another decision. The pictures, I thought, were moving.\n\nWe talked a few minutes, but for some reason the room felt like it was shrinking. I asked, \"Will this stuff help you?\"\n\nShe thought about it. \"I think it will help me understand the nature of the book, its relationship to what happened and what Major Marx interpreted. It's going to be interesting.\" \n\n\"Good. I think you may want to visit the Marine site just to verify I didn't edit or censor the documents here. But they're all here.\"\n\n\"Jonas, I never thought you'd do that.\"\n\nI was perspiring, shivering. \n\n\"I want you to talk to your parents about me, tell them it's me, after I'm gone.\"\n\n\"Why don't you?\" she asked, but she saw my discomfort. \n\n\"There are things I can't remember for some reason. Anyway, I should go.\"\n\nI went in the living room and thanked them for supper and I said, \"Mr. Scott, there are things I have trouble discussing. Emily will explain, I think. I should go now.\" \n\nHe protested, thinking he had committed a faux pas by asking about my service. I assured him it was not that.\n\n\"I should be getting on. I think Emily can go over things...\" She was in the doorway, nodding.\n\n\"Of course. Emily's brother Chris will be interested to hear about you,\" Mr. Scott said.\n\n\"Emily has a brother!\" I exclaimed. \n\n\"Yeah, but he's away at school,\" Sharon said, smiling. \n\n\"I have a lot to learn about Emily yet. It's only been a day. Funny, but my life seems to be an open book compared to hers,\" I rejoined, smiling and looking at Emily as she shook her head and smiled. \"Thank you all for a great evening. Em, I hope you'll be at class tomorrow night?\" \n\nShe nodded.\n\n\"Then goodnight and thank you all.\" And I left.\n\n*\n\nEmily looked at her parents after she closed the door. \"Mom, Dad, come out in the kitchen-I have some stuff to show you.\" During her explanation, her mother realized Jonas was Jeremiah. They studied the photos, skimmed statements. \n\n\"Well? You always say something about my boyfriends when you meet them. Well?\"\n\nSharon looked at Walt. She smiled as she said, \"He is hurting still. Five years now.\" \n\nWalt picked up the picture of Jonas with a child in his arms, running for their lives. He pointed to it. \"How do you beat that for an introduction?\"\n\n\"He's wounded in his heart, you know,\" Sharon said. Emily nodded. \n\n\"He's haunted by the two Marines who died. The little girl he can't remember. And that he didn't protect the first group of non-combatants to flee into the field,\" she said. \"But look at these statements from his own platoon-they're almost exactly like in the novel. It's easy to disbelieve superlatives as overstatement but the military guys said them over and over.\"\n\nWalt said, looking to Emily, \"I didn't like Carl all that much, especially when he got drunked up those two times. I was kind of happy you broke off with him. And I know Jonas probably has a lot of issues from the war. I hope he's not drinking too much. I hope he gets ahold of it.\" He paused. \"But the guy's a hero.\"\n\n\"Tom Marx, the guy who wrote the book, called him the most morally courageous person he's ever met,\" Emily said. \"He knew his career in the Marines was over, he knew he might be killed, he knew protecting noncombatants would not be popular. For two years he was ostracized on that base, Camp LaJern or whatever.\"\n\n\"Lejeune,\" Walt said, smiling.\n\nSharon asked, \"Do you intend to meet his parents?\" \n\n\"I guess. I've only known him for what, 27 hours or so?\" \n\nWalt said, \"You have a prop to Lexington, then to Evansville, then Dayton and Lunken tomorrow. What time's that class?\" \n\n\"4. Just a bunch of half hours. Last one should finish a little after 3. I can drive straight to class from the airport,\" she said. Then with humor, she said, \"No problem as long as your planes work.\" \n\n\"Sharon, she's getting mighty cheeky since she got a boyfriend.\" Sharon and daughter shared a smile. Sharon thought, I think Emily likes having a boyfriend. This one, anyway.\n\n*\n\nIt was at seminar that someone mentioned \"Jeremiah.\" I had been taking some notes about my project and had missed the comment. I could see Emily across the table looking at Jonathan, a young guy who projected an air of righteous, anti-authoritarian, indignation. I said nothing. Emily said, \"Could you repeat that? I'm working on atrocities for my project and I need current opinions.\"\n\nHe said, \"I think it is typical of the military to whitewash one of their own and make him out to be a hero, like this al Gatar massacre. It's like My Lai or Malmedy; first they hide it and then they praise it as a victory.\" \n\nI watched Emily stiffen. I thought to myself, she has hackles to raise. Barry was also interested; he'd been a late Vietnam era liberal and believed that the protests and draft dodging had reduced American involvement and ended the war. (He was working to have his dissertation published, dealing with this issue.) He also knew I had been in the military, but he didn't know anything else. \n\n\"Based on what I've been reading and watching, it's the other way around when it comes to the Americans. They call it a victory and then try to cover it up. But are you saying there are never any moral actors during an atrocity?\" she asked him. As he talked, as she responded, I began to think that she felt he was spouting off without much information-perhaps repeating what some teacher in the past had said. \n\nJonathan said, \"Perhaps rarely. But isn't it an indictment or a moral failing that a free citizen surrenders his moral obligation to distinguish and act rightly by joining a military and swearing to follow orders no matter what?\" \n\nBarry jumped in. He did not want the exchange to become heated, which it was threatening. \"So Jonathan, your point is that anyone in the military is at fault if anyone else commits an atrocious act?\" \n\n\"Yes. Because it is immoral to surrender your individual responsibility to decide what is the right thing to do.\"\n\nBarb, the other woman in the class, spoke up: \"Why do you insist that a person in the military swears to follow orders no matter what? That he or she no longer judges the morality of orders and actions?\" I was surprised. Perhaps there was more to Barb than I had assumed in earlier classes, where she had seemed hesitant and quiet, almost meek. \n\n\"I know I didn't surrender that,\" said Juan, the only black member of the class. He was about 30, had made it known he'd served in the army and had not been sent to a war zone. \"I can tell you what I swore to,\" he said. \n\nBarry said, \"You don't think it is immoral to swear to defend the Constitution? Does that oath relieve a soldier of the responsibility to act morally?\" \n\n\"Yes,\" Juan said. \"Service is a virtue, properly carried out. There is a way to refuse an illegal order.\"\n\n\"But I always thought,\" said Jonathan, \"that it was illegal to disobey an order. This is all smoke to hide a wanton, heinous act.\" \n\nThat was an insult, but I spoke up. \"I think Jonathan is right to some degree.\" I looked at Emily, then at Barry. \"At al Gatar no one was held responsible. One officer was investigated but charges were never filed. Perhaps he was guilty, or perhaps not. But 30 noncombatants were killed and no one brought to justice. Was no one responsible? The military prides itself on honesty and accountability, where is it in this case? At My Lai, Calley was the only one at all punished and he was eventually pardoned. At al Gatar one man was exonerated. No one was even tried.\" \n\nThe look on Emily's face was unique: a mix of confusion and which side are you on and the world is flat.\n\n\"Things happen in war,\" Barb said. \"You have thousands of people making decisions based on orders and clarity is lost.\"\n\n\"The Marines whitewashed the whole al Gatar killing. It was murder and that is that,\" Jonathan said. \n\n\"I agree it was murder, but that is not that,\" Emily said. \"Judging and assuming without deep investigation is not worthy of a civilized, armed society. Jeremiah did not resent the investigation; he resented the witch hunt aspect of it. He resented only one party was considered possible of guilt. And he feels culpable that he did not stop the killing earlier and that he did not save everyone. He thinks he could have. I've met the guy, and he seems like the sort who every day second-guesses his decisions that day.\" \n\nBarry was surprised. \"I knew you went to meet the author, I didn't realize he introduced you to the real Jeremiah.\" \n\nEmily hesitated but went on. \"Actually, someone else introduced me to Jeremiah. And it is a little bit like 'Crime and Punishment.' In the book, it is his conscience that punishes him. He knows he is not guilty of the murders; he feels guilt because he anticipated them but did not prevent them. He knows he reduced their scope, but that is not enough.\" \n\nShe thought for a moment and continued. \"I think it's that way for the real guy, at least the author claims, but I don't know Jeremiah that well to say.\"\n\nIt was a discussion worth holding. Stereotyping provides clarity, delineates, and ultimately reduces understanding. American minds are often closed because it simplifies understanding of the world. Jonathan did not want his stereotypes shattered. Patriotism is the last refuge of a scoundrel, said another Jonathan two centuries before, and therefore the Marines are bad, period. In this case, he was close to right for the wrong reason. Marines did not sacrifice their humanity and responsibility by their oath. At that dusty village they failed both. We failed both.",
        "Al Gatar was evil and would never be resolved because there was nothing to resolve. The event was investigated thoroughly. It was murder, the evil was in chunks of irresponsibility hidden by loyalty and the chain of command, and only the implicated and the victims wanted justice. \n\n*\n\nIt was a month later that Marty called Jonas into her office at the end of a day. \n\n\"Jonas, I have a disturbing piece of information. One of our board members has information that you were investigated for murder. Is that true?\"\n\n\"Yes, Ma'am.\" \n\n\"Were you charged? Indicted?\"\n\n\"No, Ma'am.\" \n\n\"The board president has asked me to remove you from the classroom until such time as these allegations are cleared up. I'm afraid I will have to do so immediately.\"\n\nJonas felt a pressure in his chest he had never felt, a squeeze that let him know he was stressed.\n\n\"The board will meet tomorrow night to consider the case. You are asked to attend. It will be a Friday, I know, but these things need to be handled quickly. Especially if a teacher needs to be removed.\"\n\n\"Yes, Ma'am.\" \n\n\"Do you have anything to say?\"\n\nHe looked at her. She saw pain in his eyes. \"I think Malamud said, 'Some mistakes you never stop paying for.'\"\n\n*\n\nI called Tom that evening. I explained the situation. He was absolutely flabbergasted. I told my parents nothing, nor Emily. I hoped I could clear it up without them ever knowing. \n\nThe next evening I walked into the school auditorium. As a personnel matter, the public was not invited but there was a reporter present. I also was surprised-really, was I?-to see Tom Marx walk in. He was in a fine suit, of which he probably has several. He walked over to me. We shook hands. \n\n\"Tom, you didn't have to come.\"\n\n\"I'm your lawyer. I'm making gobs on that book. It's about time I earned it.\"\n\nMrs. Martin walked in. The board appeared on the stage. 8 men, 4 women, Fr. Elkins. Argo, the board president, called the meeting to order. Tom and I sat in chairs away from the table, but on the stage. There was a video screen set up, and a projector.\n\n\"I have here the front page of an investigation into the actions of Lt. Jonas Esiah Simms in a village in Afghanistan. The summary states that Lt. Simms was relieved of his duties so that investigation into allegations of murder, mutiny, disobedience of a lawful order, and some others could be conducted. Charges were never brought. Is Mr. Simms present?\"\n\nI stood up. \"I am, Mr. Argo.\"\n\n\"What do you say to these charges, Mr. Simms?\"\n\n\"There were no charges, Mr. Argo,\" I said. \n\nThere was a moment of slight confusion for the board president. Marx whispered, \"Maybe you don't need me, after all.\"\n\n\"What do you say to these allegations, Mr. Simms?\" said Mr. Argo with a hard edge to his voice.\n\n\"I do not usually engage in refutation of mere allegations.\" \n\n\"If we cannot get to the bottom of this, we will be forced to terminate your contract in the best interests of our students. We need to know that they are in good hands.\" \n\nI began to speak again, but Tom put his hand on my arm. \"Allow me. I came a long way.\"\n\n\"If I may address the board. I represent Mr. Simms's legal interests. My name is Tom Marx. I am an attorney and licensed to practice in just about every state and civilized nation. Including Ohio. I am also a lieutenant colonel in the Navy JAG office.\" \n\nMrs. Martin spoke. \"Mr. Marx called me about this and asked to make a presentation to the board that he thought might help us. We set up the projection screen and you have some slides, I believe?\" \n\n\"Yes, Ma'am, pleasure to meet you. We spoke one other time; I recommended you hire Mr. Simms.\" \n\n\"I recall it. You said some amazing things,\" she said.\n\n\"All true. Some of that will become clearer here. Now if I may, I'd like to address the issue. The page you have in your hand is the summary or abstract on the front of a military investigation report conducted by Naval and Marine Corps investigators and other investigators over the course of two years.\" He picked up his briefcase, which was standing beside his chair. Placing it on the table before the board, he opened it and removed a copy of the investigation, all 1200 or so pages. \"The abstract gives the impression that Lt. Simms was guilty of a crime, or likely was. If you had taken the time to read the report, which with appendices and index and photos takes up at least 1000 pages, including interviews with not less than 78 Marine enlisted men and commissioned officers, you would have been overwhelmed with evidence of another kind. \n\n\"Instead of going into detail of each allegation, I will tell you what happened that day using the few pictures of it as evidence. I've used a computer to clear up what were very blurry images off a cell phone camera. I have others, unclarified, at hand if you'd rather see them. Otherwise, you may look at the actual report here, or ask Captain Simms to furnish you one because he has several copies, I'm sure.\" He looked at me and I nodded. \"Yes, Sir.\"\n\n\"There were nine pictures taken at the village of al Gatar on the date in question. Lt. Simms and his platoon were ordered to clear the village of Taliban. Intelligence reports said there were at least 40 Taliban present and the intel was irrefutable; actually, there were no fighters present. There were no Taliban in al Gatar that morning. Lt. Simms's platoon attacked on time, pushing the non-combatants they found toward the eastern end of the village as they were ordered to do, where another Marine platoon was to confront the Taliban with an ambush. Lt. Simms notified the other platoon that there were no Taliban, only non-combatants. As the first noncombatants cleared the last houses of the village they entered an open field, and were promptly killed by the Marine ambush. We have no pictures of that happening, but one of the open field with bodies.\" The picture of the bodies in the field appeared on the screen, cleaned up by computer and much clearer than my copies. \"If you look here, and here, and here,\" Tom said using a laser pointer, \"you see women in burkas dead; if you look closely you can see children but I just won't point them out.\" \"Oh my God,\" one of the women on the board said. \"Captain, where were you in relation to this picture?\" \n\nI answered, \"I was just out of the picture to the right. I was directly in front of that building with the kid missing a foot and the old guy there. Maybe 15 feet from the building.\"\n\n\"How long had these people been dead when this picture was taken? Approximately?\"\n\n\"About 15 minutes. There were lots of other noncombatants huddling in the buildings and there against the walls.\"\n\n\"What happened at this point, Captain?\" Tom asked.\n\n\"1st Platoon up on the hill relocated two machine guns and turned their fire on these first buildings and the street. I had people in or near them. I called them but they continued to fire. They destroyed this building in front of us, killing the boy and the old guy.\" At that point the picture changed and you could clearly see the two bodies and the building in tatters. I saw the old man's body, which was blurred and unrecognizable in my copies. He was obviously dead. My heart cried.\n\n\"Go on, Captain.\"\n\nIt took me a second. \"Sorry, Sir. I haven't seen these photos cleared up by computer, before; it's the first time I can identify the old guy's body...\" My voice cracked, I was close to tears. I sought control, needed it, grasped it. \n\n\"I ordered my men to fire up at the machine guns so we could get back down the street, then we gathered everyone we could and ran back to the west.\" Again the picture changed. It now showed me holding that kid and running. \"That is me carrying a kid and trying to get everyone back. In the background you see Turbish carrying a woman under his arm and shooting back. Turbish thought he killed the two machine gunners. I don't see how but their fire decreased about this point.\"\n\nMarx added, \"If you look closely at the picture you can see noncombatants here, and here, this Marine over here actually kicked this kid to get him going, according to his statement.\"\n\nI continued, \"Once fire slackened at the other end of the village, I got back on the radio with Captain Messina and he was furious. He relieved me. I went over to help who I could; a lot of the noncombatants were banged up. I think there's a picture of me wrapping a kid's foot.\" The picture came up. \n\n\"I was arrested and sent to Kabul by helo that night. Lieutenant Colonel Marx was assigned as my lawyer.\"\n\nMr. Argo asked, \"So what were the bases of the allegations?\"\n\nMarx answered, \"He was ordered to push all unsecured people into the field and refused. He ordered his men to fire on other Marines, two of whom died-that's the murder. Ordering his men to protect the noncombatants and get them to the west was the allegation of mutiny. You should understand that the Marine Corps at first reported the dead women and children in the field as a great defeat of the Taliban-that is how I heard of it before they assigned me as counsel. Simms was eventually restricted to base, and after two years allowed to go into the reserves. He was interrogated 52 separate times for a total of 109 hours. Some of those were only a few minutes, one was 26 hours long. He was not waterboarded, but it was threatened.\" \n\n\"I was waterboarded in training once,\" I said. \"So I knew what it was.\"\n\nThere was silence. The board seemed reluctant to take up the case. \n\nMarx filled the quiet room then. \"Ms. Martin, board members: He saved 158 Afghanis. He was investigated and interrogated for two years. He was ostracized by the Marines. He is the bravest living commissioned hero of a dirty war.\" He stopped and looked directly at the board members.\n\n\"He teaches history at Merciful Saviour.\"\n\nMs. Martin spoke, \"Tom, you wrote that book, 'Jeremiah in Agony,' didn't you?\" \n\n\"Yes, Ma'am. Jonas is Jeremiah. This is part of his struggle. I can prove every word in that novel, using official documents. He is not a figment of my imagination. He did it. He's paying for it.\" \n\nThe board voted to return me to the classroom effective immediately. \n\nJonas Agonistes Chapter 5: Issues of Character\n\n\"Emily! Em!\" Sharon was calling her daughter, her hands holding the morning Cincinnati Enquirer. \"Em!\" Get up. You want to see this.\"\n\nToward the bottom of the front page was a headline: \"Jeremiah\" Teaches at Saviour.\n\nEmily came down the steps, hair mussed and looking lovely and rounder with sleep. She looked at the headline and skimmed the article, which was mainly about an effort to remove Jonas as a teacher until he was defended by the author of \"Jeremiah in Agony.\" \n\n\"How do you think this will affect him?\"\n\n\"I don't know, Mom. He didn't tell me what was going on. I don't think he can open up to me, maybe not to anyone. It seems like he will never get out of Afghanistan.\"\n\nEmily sat on the step, where her mother had met her, and thought. It was Saturday. She had no flights. Jonas had not called. He had not seen her since Thursday seminar. She was disappointed that he had not turned to her when he was faced with a new trouble. She wondered if her appropriate response was anger, but she saw the depth of the attack on Jonas's character and decided she would turn to him. \n\n\"Mom, I'm gonna get dressed. I've known this guy a few months. He opened up about the incident and depth of his problem to me, almost from the moment I met him. But he hurts and can't do it when the pain is great or sharp. But... maybe he will. I gotta get dressed. What time is it?\"\n\n\"6:30.\" \n\n\"I think it's time I met his parents.\" She turned and went up the steps. She threw off her clothes and showered and by 6:45 she was heading for the front door. \n\n\"I need the paper. Sorry.\" She took it, got in the car and left. She'd never been to Sky Grey. She found his house.\n\n*\n\nAt 7:40, Jonas's mother opened the front door and was surprised to find a small, redheaded woman sitting on the top step with her back against the support pillar. In her hands were two copies of the Cincinnati Enquirer.\n\n\"Hello?\" she said. \n\n\"Mrs. Simms? Hi, I'm Emily Scott, a friend of ...\" She got up.\n\n\"Jonas's friend! Yes, he's mentioned you. He's still asleep. He had some meeting last night and I think he couldn't sleep then.\" \n\n\"I know. It's in the paper.\" Emily handed Mrs. Simms their paper which she'd picked up from the yard when she arrived. \"That's why I'm here.\"\n\n\"Well. Why don't you come in, Dear. I'll make coffee.\"\n\nMrs. Simms looked at the headline and the article. \"This can't be good, can it.\" \n\nEmily, walking in. \"I don't know. He didn't even tell me about the board meeting.\" \n\nMrs. Simms said, \"He didn't tell us, either.\"\n\nThe coffee was on. Mrs. Simms went upstairs and warned Mr. Simms not to come down undressed, as they had company. Mr. Simms was quite surprised that a girl was downstairs for Jonas. Mrs. Simms then went over to Jonas's room and got him up.\n\n\"Jonas! Wake up, and now!\" \n\n\"What is it, Mom?\"\n\n\"Well, your meeting last night is in the newspaper. That's something, but not why I'm here. There's a girl downstairs. Emily. She was waiting with the paper on the porch when I went outside.\"\n\n\"Emily? Downstairs? Now?\" he said.\n\n\"Yes, and I think she is a little peeved at you for not telling her about the meeting.\" \n\n\"I gotta get dressed. Go keep her company, okay?\" \n\n\"Okay. Your father's up too, so you can fight over the hot water for the shower.\"\n\nMrs. Simms headed down. That's one way to get the men moving, she thought. Just get a beautiful redhead to show up on the porch...\n\nShe poured coffee for Emily. \n\n\"They'll be down shortly. Why are you here?\" \n\nEmily said, \"I thought the story and the meeting might be upsetting to Jonas. I am a little upset he didn't tell me, but with all he's been through... I wanted him to know I wasn't abandoning him like most people. I have known him only a few months, but he's been honest and told me things he hasn't said to others.\"\n\n\"He told us about you, Emily.\" Mrs. Simms started making some cinnamon rolls, greasing a pan and getting the oven going. \"Ready in about 20 minutes.\"\n\n\"I hope good things.\"\n\nMrs. Simms sat with a cup. \"You are the only girl he's shown interest in in 4 years. So what do you do?\" \n\n\"We met in history seminar at UC. But I'm a pilot. My family has a plane charter service and I fly businessmen around the east coast, the south, usually. No flight today, though.\" \n\n\"But you are so tiny!\" Mrs. Simms said. \n\nEmily smiled and imitated a movie. \"Never...theless!\" \n\nThey laughed. \"Kate Hepburn had red hair, too.\" \n\nMr. Simms walked into the room, his hair wet, but dressed unusually well for early Saturday. \n\nEmily stood. \"Good morning, Mr. Simms, I'm Emily. Jonas's friend.\" \n\nHe held out his hand and they shook. \"You are beautiful.\" \n\n\"Paul! You don't say that to a lady!\" his wife said. \"Excuse him, Emily!\" \n\n\"I thank you. I came here because my mom showed me this,\" and she handed him the paper with the article centered. Mr. Simms read for a few minutes. He harrumphed once or twice. \n\nEmily was sitting again, sipping coffee. Mr. Simms finally made his way to a seat. The three of them were at the kitchen table when Jonas entered. \n\n\"Emily. Hi. I see you've met my parents,\" he said. \n\nEmily decided to be forthright. Pushy, too. \"I realize after what you have been through that you may have trust issues, but you should have told me, told US, about the teaching suspension and the meeting last night.\" \n\nJonas thought, she sounds mad. He looked at his mom, and she seemed to be on Emily's side. Dad? He was looking down at the paper, so no help there. Why hadn't he confided? Emily was a new person in his life, and there was no commitment, but his parents... Who else knew him as they did? Who else loved him?\n\nThe pause was long.\n\n\"Dad,\" he said, \"I need a therapist.\" His dad was the tough guy, the silent, the serious, the stalwart. \n\n\"Yes, you do,\" Dad said. \"Sit down now. These people are on your side.\" \n\nOver cinnamon buns and coffee, they talked and discussed the newspaper article, the meeting, and the future. \n\n*\n\n\"i think you'd like his father, Dad. He's a mass of quiet and hold it in and keep it to yourself and deal with it and yet you could see how much he loved Jonas, and the way Mrs. Simms looked at her husband was as if she was shocked he had said Jonas should get help,\" Emily said. \"I think you would like him. Maybe I see some of you in him.\" \n\n\"A good part, I hope.\"\n\n\"Goes without saying.\"\n\nMrs. Scott smiled.\n\n\"And his mom! She called me dear and I usually hate that-but it was like I was at home with her.\" Emily was thoughtful. Her romance with Carl was a wooing and capture and finally her rejection of his foibles and bad judgment. Jonas was deeper; his goal wasn't a good drunk on Friday night with a girl waiting to forgive him. \n\n\"They're a little older than you guys. Good people.\" Her parents laughed. \n\n\"How long have you known him now?\" her mother asked. \n\n\"Two months?\" Emily responded after thinking. \n\n\"Not so long, yet.\" \n\n\"No. Not long.\" \n\n\"Be careful, Em. It's easy to jump in too fast.\" \n\n\"He doesn't make a move, Mom. He doesn't try to make out or put his hands in the wrong places or anything. He doesn't move at all. He is hurting. He avoids even the little risk of a kiss or holding hands. He looks at me as if he has never seen a woman before and he holds the car door and says goodnight. It's like he thinks women are too valuable. I've kissed him goodnight, and on the cheek, but he lets me do it.\" \n\n\"Has he told you about his other girlfriends?\"\n\n\"No. Not one. His mom said I was the first girl he'd had any interest in in 4 years.\" \n\n\"I think he has a great pain.\"\n\n\"Do you think he is good?\" Emily did not know how to phrase it. Sharon did not know how to answer it. \n\n\"Could be. I love you, Babe. Be careful. Keep me in the loop. I like him. But I want you to decide on the real guy, not the book and the passion and the torture of his life.\"\n\n\"It was easier with Carl.\"\n\n\"Of course. Carl got drunk for recreation, manufacturing reasons. Jonas has reason to drink and fights it.\" \n\n\"Maybe I should look for a guy with no issues.\" \n\nSharon chided, \"Silly. There are no guys worth marrying who don't have issues. Good guys have issues because they care about important things.\"\n\n*\n\nI saw Emily again on Sunday. Saturday morning was a warm memory. She had gone out of her way, despite that she had not met my parents-she had talked and acted like someone who liked me. No, like someone who loved me. \n\nShe came over in the afternoon, at my behest, and we talked in the living room. Mom and Dad were around and left us mostly alone. Dad found out she was a pilot and was askance: \"What! But she is so tiny!\" he said, same as Mom. \n\n\"I grew up with flying,\" she said. \n\nWe sat in the living room and we discussed life and politics and religion (she's Presbyterian, an impossible word to spell quickly) and my situation and her plans. I told her about growing up, about Jane Miller Austen and moving on and wondering why I was so shy around pretty girls. She talked about Carl and breaking it off and some guy who talked her into the senior prom. She said that some people really hated freckles. I laughed.\n\nI told her about Turboboost, who carried women to safety who would never look at him because he was American and big and not Muslim and black. I talked about guys I hardly remembered. We laughed at this and that. \n\nShe stood to leave. She handed me a paper. \"I ran off some names of therapists who deal with PTSD and veterans at a discount, and there are a lot. There's a VA program. I got them through the VA hospital online. Call one of these. If you want me to go with you for some reason, I will. I...\" "
    ],
    "authorname": "Malraux",
    "tags": [
        "war",
        "atrocity",
        "recuperation",
        "betrayal",
        "ptsd",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/jonas-agonistes"
}