{
    "title": "Summer and Fall",
    "pages": [
        "Preface\n\nA huge thank you to all of you who have left me comments or reached out by email after reading \"Five Years and Four Days.\" Your kind words and encouragement have been so deeply appreciated. Here is what I cooked up next for Alex and Jess. Please continue sending me feedback; I love hearing from you! \n\nThis picks up roughly two months after the last chapter of \"Five Years and Four Days.\"\n\n<br /> --Chapter 1: Arrival--\n\nJESS\n\n\"We are about to begin our descent into New York's LaGuardia airport. The local time is 6:57pm. Flight attendants, please prepare for landing.\" \n\nIt was the end of a long travel day. At 7am, I waved goodbye to two colleagues and fourteen students at the airport in Guatemala. Now, ten hours later, I was about to land in New York City. \n\nThe two weeks I spent in Guatemala were tiring but fun; I was one of three teachers chaperoning the girls for the annual end-of-year trip for sixth-formers. The faculty rotated through chaperoning duties each year, and the girls voted on the destination. As always, Halsey coordinated with other UK schools on the trip so the two weeks ended up being a fairly raucous affair. \n\nI spent most of my time in Guatemala -- captivating as it was -- counting down the days until my New York detour, the first time since Alex's visit in early May that we'd be in the same place together for more than a week. In fact, we'd have two whole months together until my return to the UK just before the beginning of the school year. \n\nAdmittedly, in the beginning, I had a hard time reconciling my hesitance about being in a relationship with how much I wanted to be with Alex. In many ways, the fact that we had to live apart helped me shed that ambivalence. It gave me time to shake my head loose of most of the debris from the disintegration of my last serious relationship. \n\nThe distance also had the unintentional benefit of putting our physical attraction aside so we could actually focus on communicating with one another and getting to know each other's day-to-day lives. Alex's work continued to send her to meetings in the UK at a regular clip, so our time apart was happily interrupted by her visits and my trips to the US. \n\nI still have not figured out how it was that I fell so deeply in love with Alex so quickly. My friend Cathy reckoned Alex had burrowed into my heart a long time ago and I just didn't realise it. When I first uttered \"I love you\" to Alex, I surprised myself by how easily it came to me, and how gratifying it was to discover that Alex felt the same way.\n\nIn general, my friends and family embraced the relationship; my parents were surprisingly sanguine -- Alex was charming when she met them one bank holiday weekend -- they even insisted that she join me on my usual late August visit to see them in the Lake District. My brother reacted the only way I expected him to: by continually teasing me for switching teams because of an ex-pupil. \n\nAlex's family was a harder nut to crack. In truth, it was her father who was the most difficult. Her mother tried -- in her own way -- to find some path through between her husband and her first-born -- both of whom were equally stubborn. Alex's siblings were completely supportive; it took some time for Audrey to stop calling me 'Miss Wainwright,' but it honestly annoyed Alex more than it did me. \n\nAs the plane made its way to the gate and phones were turned on, multiple beeps and buzzes echoed around the cabin, including a number of beeps emanating from my phone. \n\n\"I'm here. Usual spot. Take your time.\"\n\nI quickly typed back: \"Just getting to gate. See you soon.\"\n\nAs I made my way through customs, I felt like every molecule in my body was on high alert as I anticipated Alex's touch. I wheeled my luggage through the now familiar automatic double doors and into the arrivals hall. I immediately saw Alex with a big smile on her face, standing a little apart from the crowd of people in the greeting area. She looked good enough to eat. \n\nI jumped into her arms and she lifted me up. I squealed with delight. \n\n\"You are finally here,\" she said, and gave me a kiss that sent a spark of electricity radiating from my stomach right through to my scalp and the tips of my toes. \n\nA passer-by wolf-whistled, \"Not for nuthin' buddy, but with a kiss like that, you better plan on marrying her!\" \n\nWe laughed as Alex kissed me one more time, \"Come on beautiful, let's grab a cab.\" \n\n<br /> ALEX\n\nSetting aside the fact that Jess would look good in anything, she was a heart-stopping vision coming off that flight. The kicker? She was wearing her glasses instead of her contacts, and it made her look extra brainy and sexy and nerdy and cool all at once, and I just stared and worshipped her face the entire ride home. \n\nBy the time we pulled up to my apartment building, we were pretty much ready to rip each other's clothes off. I had my nose buried in her hair as we rode the lift up to my place, desperate to inhale as much of her scent as possible. I still couldn't really believe this was happening. Jess was here. For two months. She wanted to be with me! \n\nThe second the front door closed and her luggage hit the floor, Jess turned and jumped on me, wrapping her legs around my waist and pressing her hips into me. I was halfway to the bedroom and Jess already had her shirt and bra off; her beautiful breasts were tantalisingly out of reach. \n\n\"Not fair. You are giving me a mental crisis: carry you to the bedroom, or touch them and drop you on your butt,\" I protested when we finally reached the bed. \n\nJess smiled as she reclined on the bed. She took off her glasses and slipped out of the rest of her clothes, \"I didn't think you were moving quickly enough, my love, just some positive encouragement...\" \n\nHer words spurred me to strip as fast as I could, my eyes feasting hungrily at the sight of Jess, nude, on our bed. The images of Jess that I hoarded selfishly in my head all this time were but poor facsimiles of what I saw in front of me. I soon found my way on top of her. Our touching flesh was a revelation after being so long apart. \n\n\"Hi there,\" Jess whispered, her eyes inviting pools of deep green. This was what perfection felt like: her legs wrapped around me, her arms wrapped around me, her come hither smile -- the one she reserved just for me -- dazzling me. \n\nI kissed her everywhere, trying to devour as much of her as possible. \n\n\"I have missed you so much,\" I said, my hands seeking out every contour of her body. It was like getting a fresh lungful of air after being under water for a long length of time. \n\nJess rolled us over so she was on top and inserted her thigh between mine. I felt the sweet pressure of her body as she started grinding against my leg. Our lips crushed together and opened. Our tongues met again and again as we thrusted against each other, both of us desperate to have as much of our bodies touching as possible. Her body felt like heaven, her breasts pressed into mine, our breathing becoming moans as we moved together. \n\nThe deprivation of our physical absence from each other was eviscerated as we both came, Jess laughing with delight as we opened our eyes in the afterglow. Our legs shifted restlessly, tangled in a dance of reunion; our breasts were still mashed together as we clung to each other, arms locked in an ardent embrace. \n\n\"I spent a lot of time thinking about this body...\" Jess said, as her fingers made a slow journeys up and down my side. \n\nI watched her fingers coast towards my hip, and my whole being tingled with anticipation. \n\n\"... and everything I want to do to it,\" Jess continued. She reached between us, cupped my sex and squeezed. \n\nI inhaled and closed my eyes, lifting my hips towards her eagerly, and Jess did not make me wait. Her fingers were inside me almost immediately, and I felt her shift lower, her mouth enveloping me as I cried out with pleasure. I wasn't sure exactly how she managed it, but Jess had figured out some complex algorithm for stimulating my erogenous zones. I didn't think someone could manipulate my senses quite like this. And she was bringing her A-game. When I came, it was powerful and deep, rumbling through me like thunder. \n\nHer body was soon back on top of mine, her hair sweeping gentle caresses along my skin. \n\n\"I love that I can do that to you,\" she smiled. \n\nI basked in her gaze, quickly plotting how I would return the favour. \n\n\"One good deed deserves another,\" I flipped her over. Jess gasped in surprise at being so roughly handled. \n\nHer eyes took on a seductive gleam, \"Hmmmm, and are you going to have your way with me now?\" \n\nI nodded eagerly and kissed her neck where I felt her increasingly rapid pulse beneath my lips. The supple flesh of her amazing breasts were undulating under my hands as my fingers and palms squeezed and pressed and caressed. Jess started squirming when I landed light nips along her collarbone and flicked my thumbs across her nipples. \n\n\"I want to make you feel good,\" I whispered, not wanting to forget touching any part of her body. \n\nShe breathed in and exhaled in jagged breaths. \n\nMy mouth moved to her breasts and I grazed my knuckles down each side of her body while alternating kisses and licks in smaller and smaller circles on each breast. \n\nJess moaned. Oh, how I had missed hearing her moan! She grabbed my wrists and returned my hands to her breasts. I happily obliged, grasping those perfect orbs firmly as I kissed her stomach... then the shallow valley where her torso met her thigh... and the curve of her quads... and the soft inviting flesh of her inner thighs. \n\nJess's hands were gripping the bed sheets as she pushed her hips towards my mouth. Impatient for more, she opened her legs wider and I swooned as I watched her slowly spread open. Her inner lips were slick and pink, her outer lips swollen with desire. \n\nI placed the tip of my tongue just under her opening and gently licked upwards, eliciting a shout from Jess. My senses exhaled with pleasure as I tasted her -- sweet, warm, intoxicating -- familiar and revelatory all at once. When she shouted out once more, I doubled down on her breasts: squeezing hard before slowly rubbing her nipples in a circular motion with my fingers. \n\nI made love to her with my mouth, savouring every spot that I could get to. \n\n\"Inside me, Alex, please,\" she whispered, guiding my hand off her breast. \n\nI placed three fingers inside and stroked them in and out, twisting them on the way in. \n\nJess was making incredibly sexy groans at this point, and as I increased the speed and strength of my strokes, she moaned in response to the deepest part of each thrust of my hand. As the speed reached its apex, and I was deep inside her, I curled my fingers up and rubbed the spot I knew would make her come. My tongue continued its caress of her clit, now throbbing against me with urgency. \n\n\"Oh that feels so good AAAA-aaalexxxx. Just like that,\" Jess screamed, her hips jerking upwards as she came. \n\n\"Stay inside me a little longer,\" she asked as she recovered. We laid on our sides, facing each other. She draped her top leg over my hip allowing me to continue filling her up. \n\nI made an almost imperceptible push with my fingers but she was aroused enough to feel it. She looked into my eyes as she slowly moved her hips, my fingers pressing inside her as I started thrusting into her again. Our lips were locked together as she bucked against my fingers; her climax was almost instantaneous. Her fingers kneaded my shoulders and her leg was hooked against my lower back pulling us closer together. We held each other like that as she recovered; neither one of us said anything. We didn't need to: we were back in each other's arms. \n\n<br /> JESS \n\nThe combination of Alex's tongue and fingers was almost too much. But there I was, having multiple orgasms that pulsed through me like shockwaves. I had asked her before if this was how women had sex with each other, but it was becoming clear that this was something between us. Neither one of us has had this level of physical connection before. It made me smile and I nuzzled her neck, sighing contentedly as I allowed myself to drift off. \n\nWhen I woke, I was alone in the bed. I saw a light on in the living room and padded out. She was in the kitchen, eating a sandwich. \n\n\"Why did you leave?\" I grumbled, embracing her from behind. \n\n\"I got hungry,\" she mumbled with a mouth full of food. \"Do you want anything? We can whip something up or order in.\" \n\n\"Are there places that deliver this late?\" I asked. \n\nAlex pulled open a drawer and pointed at a stack of menus, \"A couple of these are still open. The top menu is from the one you liked the last time you visited. And can I just say how much I enjoy seeing you naked in the kitchen?\" \n\nI picked up the phone and called the restaurant. I leaned over the counter as I ordered, lazily swaying my hips back and forth. When I hung up, I couldn't help but giggle: Alex was staring with her mouth open. I might have arched my back a little more than I needed to. \n\nI stopped giggling when she slid two fingers inside me. Oh, honey! \n\nSome number of mind-blowing minutes later, the intercom buzzed, announcing the arrival of our food. We managed to cover ourselves up before the delivery guy knocked; his bemused smirk was puzzling until I noticed that Alex was wearing my shirt, which was two sizes too small and inside out. \n\nAlex shrugged, \"This is probably tame compared to some of the other stuff he walks in on...\" \n\nThe food was perfect. \"This I can get used to,\" I declared, digging in with glee. \n\n\"Makes me lazy, I cooked more in college,\" Alex said, \"but I do intend to make you breakfast in bed tomorrow. Is there anything madam wishes to have?\" \n\n\"Apart from you? Surprise me,\" I said. \n\nI noticed that Alex had moved my luggage into the living room. \"There's two weeks' worth of laundry festering in there somewhere, and some clean clothes that I had set apart for New York.\" \n\nAlex nodded towards the kitchen, \"We can do a load tonight. I got you a chest of drawers and the closet has plenty of room.\" \n\nI stared at her, \"You got me a chest of drawers?\" \n\n\"Jess, you're going to be here for two months. And it won't be the last time you visit for longer than a weekend, this is your place too now.\" She smiled, \"and if it doesn't work out, I'll keep it until my next girlfriend moves in.\" \n\n\"Oh, very funny,\" I said, at a loss for a comeback. \n\nAlex leaned over and kissed me, \"Do what makes you comfortable, you can live out of the suitcase for as long as you want.... Now, do you want to have a quick shower? Or should we attack the laundry?\" \n\n\"Shower,\" I said, as I took her hand and led her to the bathroom, \"but only if you get wet too.\" \n\nAlex grinned, \"I don't need a shower for that...\" \n\n\"Oh, well played, Mak,\" I acknowledged as I felt my core swell and pulse for her. \n\nAlex pulled my T-shirt over her head and kicked off her boxers as she stepped into the shower. I marvelled at her body. I would never tire of looking at it. \n\n\"Are you getting in, or are you just going to stand there all night?\" Alex stuck her head out and raised her eyebrows. \n\nI followed her into the shower and pulled the curtains shut. The first cascade of water on my skin made me remember how dehydrating being on a flight could be.\n\nAlex's hands were on me instantaneously, smoothly moving over my shoulders and down over my breasts. They came to a rest on my hips and Alex pulled me towards her for a kiss. \n\nI pressed myself against her, my heart fluttering a little as our skin made contact. \n\n\"May I make a request?\" Alex murmured, as she moved from my lips to kissing my neck. \n\n\"Hmm?\" I wanted her inside me, but her hands held steady on my hips, squeezing gently. \n\n\"When we do what we are about to do, please try not to rip off the shower curtain like you did last time,\" she continued landing kisses up and down my neck. \n\nI laughed and slapped her across the shoulder, \"Then stop being such an overachiever with those fingers of yours... speaking of which...\" \n\n\"You mean these fingers?\" Alex grinned. She wiggled them in front of me and then trotted them down my front, pausing just slightly below my belly button. Tap tap tap. Alex's fingers were an inch away from where I wanted them to be. \n\n\"Lower.\" I tilted my hips towards her. \"Please.\"\n\nAlex smiled. Her hand continued their journey south, sliding between my lips, and then -- delectably -- with two fingers on either side of my clit, sliding back out. \n\n\"Ohhhhhhh!\" \n\nAlex repeated this I don't know how many times before plunging her fingers inside me. I felt my knees buckle. Alex caught me, turned slightly and pinned my back against the wall. The cold tile made me jump. Her fingers made me scream. By the time her tongue made its way to my nipples, my body was more than ready for climax. \n\n\"Ok. Ok. Ok.\" I barely managed as I slid down to sit in the tub. Alex joined me, smoothing down my hair. I wrapped my legs around her waist, resting my head against her chest, the warm water from the shower splashing over us. \n\n\"I'm getting all pruny,\" I observed. \n\nAlex leaned over and grabbed the shampoo, \"Here,\" she ran some through my hair. \n\nI started rinsing it out as Alex soaped me up. \n\n\"Darling, am I really that dirty?\" I asked as her hand made yet another pass over my breasts. \n\nShe nodded, water dripping off her short black hair. \"You've been bunking with two dozen adolescents with questionable personal hygiene standards... I know this because I lived through the horror. I think it's the least I can do to make sure that you don't suffer from it in any way...\" \n\nI laughed and pushed her hands away. \"Ok. Stop it, Alex Mak! Water conservationists are going to come knocking any moment.\" \n\n<br /> --Chapter 2: Getting Out and About-- \n\nJESS \n\nAfter living like hermits for the first week and a bit, we decided to rejoin civilization and ventured out to meet some of her friends from university one Friday night. \n\n\"Honestly, it's so much more fun being here with you!\" Alex complained as she got dressed. She wiggled her eyebrows.\n\nI stepped backwards as she tried to unbutton my shirt. Alex's single-minded pursuit of having sex with me meant I was in a permanent state of heady euphoria. \n\n\"Alexandra! Behave!\" I smiled in spite of myself. \n\nIt did not help that she was half naked: her pecs and abs flexed as she calculated her next move; her jeans a rugged sheath around her narrow hips and long legs. \n\n\"I just need five minutes,\" Alex pleaded as she moved forward. I stepped back, although my eyes clearly welcomed her advance. \n\n\"Five to ten minutes,\" Alex amended as she sensed my resolve slipping. She took another step towards me. \n\nI stepped back once more, but was thwarted by the hard edge of the dining table. I gasped. I was a quivering mess. I gave up any remaining pretence of resistance, grabbed her by her belt and pulled her towards me. \n\nAlex was grinning wickedly. \n\n\"Ten to fifteen,\" she said, as she pulled off my shirt. I didn't think I would last more than five. \n\nAn hour later, we stepped into the cool air of a bar in the West Village. Alex's best friend Annie had snagged us a table, and was chatting with two others when we arrived. \n\n\"It's a freaking miracle. Alex Mak actually walking into a bar on a Friday night. Better late than never!\" Annie exclaimed as she gave us each a hug, and introduced me to Michelle and Jo. \n\nAnnie nodded at me approvingly, \"You are a good influence, Jess, this one just prefers to stay holed up at work or in her apartment. We have to literally drag her out most weekends.\" \n\n\"Well, it's not surprising, given how quickly the insults have started flying.\" Alex responded, looking a little hurt. ",
        "\"Oh, stop being so sensitive. We're just glad to see you,\" Michelle said, \"we've ordered a round of beers. KT's tending bar tonight by the way, give her some love -- she's heart-broken over Natalie.\" \n\n\"What? They broke up? They were together for forever!\" \n\nAnnie shook her head in mock disapproval, \"Happened last week, Alex. See what you miss when you make excuses not to come out with us?\" \n\n\"Are you really as anti-social as I suspect you to be?\" I teased. Alex was sitting next to me and I put my hand on her lap, caressing the inside of her thigh. \n\n\"I do spend time with my friends!\" Alex said indignantly. \n\n\"Yeah, all five of them,\" Annie interjected. \n\n\"And that's enough for me. And by the way, I think bars are terrible for socialising: too loud, and too crowded, you wait ages for your drinks... speaking of which, I'm going to get our order and say hi to KT. Back in a bit.\" \n\nAnnie laughed, \"She's such a misanthrope. She's great once she lets you get to know her, but she makes you work for it. I literally had to say to her during her sophomore year, 'I think you and I ought to be friends' before she actually started behaving like we were building a friendship.\" \n\nI looked towards the bar to try and find Alex. She was standing by the bar chatting with the bartender whom I assumed to be KT, when I saw someone with a mass of blonde hair leap onto Alex from behind. \n\nI looked at Annie, \"Who's that with Alex?\" \n\nAnnie craned her neck towards the bar. She shook her head and said, \"Oh. It's Sienna.\" \n\nI tried to place the name, but couldn't recall Alex mentioning her. \n\n\"They swam together in college...\" Jo explained, \"When Sienna was a freshman and Alex was a senior. Sienna has had a little bit of a thing for Alex ever since.\" \n\nMy heart started beating faster as I watched Alex turn around to give the gorgeous blonde a warm hug. I expected to feel some jealousy, but I found none. She loves me she loves me she loves me, my heart sang. I smiled. \n\nAnnie snorted, \"Little? Sienna's got a big crush on Alex. But it's never been reciprocated. At. All.\" \n\nSienna was talking a mile a minute, touching Alex a little more than a casual hello would warrant: smoothing out the collar of her shirt, grabbing hold of Alex's arm as she talked. \n\nMichelle giggled, \"See, normal humans would be on the receiving end of that and think, 'huh, this person is touching me a lot! They probably like me!' Not Alex. Look at her, she could be chatting with the mailman right now.\" \n\nI chuckled. Alex was friendly enough, politely nodding as Sienna talked, and turning her head towards KT every now and then to see if the drinks were ready. Eventually, the tray of beers materialized, which Alex picked up after giving KT a fist bump. Sienna was still talking. She then reached up to wipe something off Alex's cheek. \n\nI lifted my eyebrows. \n\nJo cocked her head, \"Jess -- Sienna hasn't seen Alex since you guys got together. I don't think she knows.\" \n\nI shook my head, \"Oh, it's not that. I'm more amused by Alex's reactions -- or lack thereof.\" \n\nAnnie nodded, \"She's not very good at picking up signals.\" \n\nI laughed when she said that, remembering my own failed attempts at flirting with her. \n\n\"What's so funny?\" Alex asked, placing the tray of beers on the table. \n\n\"You,\" I said. \n\nI stood up and extended a hand to Sienna, \"Hiya, I'm Jess.\" \n\n\"Oh, how rude of me.\" Alex said, \"Jess, this is Sienna, a friend of mine from college. Sienna, this is Jess, my girlfriend who's visiting from the UK.\" \n\nAdrenaline pumped through my chest when Alex said 'girlfriend.' I loved it. \n\nSienna's face dropped for an instant, and I felt bad for the poor girl. \"Nice to meet you,\" she said softly.\n\n\"Sienna and I were on the swim team together -- you're starting your.. junior year in September, yes?\" Alex looked at Sienna for confirmation.\n\nSienna nodded, \"Are you planning on attending homecoming this year? Just a subway ride away! The team would love to see you.\"\n\nAlex grinned, \"I'll check the calendar. Could you email me the invite? I don't think I have it.\"\n\nSienna brightened little, \"Ok -- I'll send it to you tonight. Uh, I'm going to get back to my table over there.\" \n\n\"Yeah, see ya, Sienna,\" Alex said, returning to her seat beside me. \n\nAnnie, Michelle, and Jo started shaking their heads at Alex disapprovingly once Sienna was out of ear shot. \n\n\"What?\" Alex asked, taking a sip of beer. \n\n\"Come on Alex, you could have been a bit gentler than 'yeah, see ya Sienna'!\" Annie admonished. \n\nAlex looked genuinely puzzled. \"Huh? She was going back to her table. What are you guys on about?\" \n\nI chuckled and gave her a soft peck on the lips, \"Honey, you kind of dropped some bad news on Sienna just now when you introduced me as your girlfriend.\" \n\n\"But you are my girlfriend!\" Alex looked at me, \"Why is that bad news- oh wait. No. Are you guys still harping on the thing? It's just not true.\" \n\nAnnie banged her head against the table, \"Alex, you idiot, she was all over you at the bar. We all saw it. She even picked imaginary lint off your face.\" \n\n<br /> ALEX \n\nWe ended up having a nice time hanging out, after that nonsense about Sienna. Jess and I decided to walk home at the end of it -- it was a beautiful night. \n\nI took her hand as we strolled and chatted. I had never enjoyed a summer night walk as much before.\n\n\"Your friends are hilarious,\" Jess said as we got back to the apartment, \"They were right about the Sienna thing, though, Alex. You pulled the rug out from under her.\" \n\nWe settled onto the couch. I sighed, \"Jess, I never did anything to ...\" \n\n\"I know,\" Jess said, squeezing my hand, \"But she was being incredibly affectionate, darling.\" \n\n\"I just thought that was just the way she is,\" I mumbled, \"I'll apologise when I see her next.\" \n\nJess shook her head, \"No don't -- she'd be mortified. Just be more, you know, aware of it.\" \n\n\"That's even more awkward! You see why I don't like going out?\" \n\n\"Alex, you are part of the human race. You do need to have some human contact every once in a while. I just feel lucky that I didn't have to prance around naked in front of you to make you notice me.\" \n\n\"No -- I was the one who had to bombard you with letters and emails for years and years and years. I noticed you the first time I saw you, Jess.\" I said. \"And you were fully clothed and not paying attention to me in the slightest.\" \n\n\"When was that, we met pretty early on at the beginning of term, I thought?\" Jess asked, knitting her eyebrows together. \n\nI shook my head. \"Swim meet at Greystone Prep, you were student teaching there.\" \n\n\"I'm sorry honey, I just remember you being very fast, but not a lot else,\" Jess scooted down and stretched out with her head on my lap. \n\n\"See! Don't go on and on about me not being aware,\" I pouted. \n\nJess squeezed my thigh, \"Sorry love, those are two totally different situations. I definitely would have remembered if you jumped on my back and pulled pretend lint off my face.\" \n\nI ran my fingers through her hair, \"You did had this bit of hair that kept falling across your brow. I remember I wanted to tuck it behind your ear for you. It was an impulse that I couldn't really explain then. Although now it's perfectly obvious what was happening.\" \n\n\"Do you still have dreams about me?\" \n\n\"Uh...\" \n\n\"Do you?\" Jess smiled seductively. \n\nI nodded, feeling my face heat up. \n\n\"Tell me one,\" Jess murmured. \n\n\"Well, I already told you what they were like...\" \n\nJess closed her eyes and started unbuttoning her shirt, \"Talk me through one...\" \n\nThe cogs in my brain suddenly found themselves mired in the high viscosity goo of embarassment. \"Uh, Jess, they don't really make much sense,\" I said, stupidly.\n\nJess opened her eyes, \"Alex, honey. I am trying to engage you in foreplay. Sexy dream. Go.\"\n\nJesus. I'm such a loser. \"Uh. Right. Ok. Sorry.\"\n\nJess winked at me. Oh holy hell, that wink. It oozed sex and it cut right through me. I would gladly tell strangers in Times Square about those dreams if it earned me another one of those winks.\n\n\"Well, um, the one that recurs most often is the one in the Dark Room at Halsey where you're working late to finish off some project. It's warm in the work room, so you have your shirt off. You are wearing just a tank top underneath... I notice you don't have a bra on, and I wonder if you did it on purpose...\" \n\nJess closed her eyes, her hands moved lower, unbuttoning her jeans. \n\n\"... and I can see your nipples through the fabric, and I keep trying to find a way to brush against them... because, uh, you know, they are irresistible.\" \n\nJess's hand was now in her underwear. Her other hand kneaded one of her breasts. \n\n\"You ask me to help you sort through the prints, so I sit down. That's when you lean over my shoulder to look, and I can feel your breasts brushing against my shoulder. I can't stand it anymore, so I turn around, pull down the front of your tank top, and start licking one of your nipples...\" \n\nJess's hands were working faster now, and I had to remind myself to breathe as I watched her get off. \n\n\"You grab me by the shirt and pull me up. Then, uh, we kiss. A lot. And you rip my shirt off. I press one hand against your breast, and squeeze...\" \n\nJess moaned deeper. She bucked against her hand. \n\n\"I undo your trousers and reach in, but you stop me. 'Dark Room,' you say, 'not out here.' You pull me through the curtains as you take your trousers off and then all of a sudden we are both totally naked. You start kissing me again, and I lift you up onto the counter. I slide two fingers into you.\" \n\nI kept stroking her hair and stared in wonder as Jess writhed on the couch. \n\n\"I squeeze your breast with one hand while I am fucking you with the other. You are so hot, and wet...\" \n\nJess's hand was a blur in her underwear. \"Oh! AHHH!\" She shouted as she came. \n\n\"Oh my god, Jess, that was incredible to watch,\" I whispered. \n\n\"Bed, Alex,\" Jess panted, \"Clothes. Off. Quick.\" \n\nI didn't think I could move as quickly I did. \n\n<br /> --Chapter 3: The DC Trip-- \n\nALEX \n\nLiving with Jess was, for me, the easiest adjustment I ever had to make. I loved discovering her little habits and peccadillos (such as her penchant for taking her bra off the moment she got home and hanging it on the nearest receptacle: doorknob, drawer pull, chair. I didn't mind -- one fewer item to contend with in getting to those magnificent breasts of hers). \n\nAt this particular moment, Jess was trying to locate her favourite bra as we finished packing for a trip down to DC. My boss was on the host committee of the Pride Legacy Taskforce, a non-profit focused on at-risk LGBT youth. PLT was holding its annual black tie gala in DC, and Mona had -- as she did last year -- invited a whole bunch of us to attend. \n\n\"I saw it in the study yesterday,\" I told her. \n\nShe came back out triumphantly brandishing the item and stuffed it in the suitcase. \n\n\"So who's going to be there?\" Jess folded a long black dress that I couldn't wait to see her wear. \n\n\"Mona and her wife... also Jared -- the VP at work I told you about. He might bring a date. Annie, Michelle, Jo, and some other folks. Olivia and Amy too.\" I dropped the last two names with a little trepidation. \n\nJess looked up, \"Olivia... this is the rebound drama you told me about early last year?\" \n\nI had sent Jess several emails about my protracted break up with Olivia. \"It was an unfortunate situation. Actually, it was around this time last year, come to think of it. Looking back, I probably should have extracted myself at the first sign of trouble. Olivia is still with Amy, by the way, so it all worked out in the end.\" \n\n\"Amy is her ex? So she was with Amy, then with you, then back with Amy?\" \n\nI nodded. \n\nJess arched her eyebrows and went back to packing, \"I can't believe she didn't choose you. I'm very happy she didn't, obviously.\" \n\n\"I suspect Olivia started up with me to get Amy all jealous. I fell for it. Thankfully, we won't have to spend a lot of time with her. Amy is decent enough... I don't really get their relationship.\" \n\n\"She sounds like a piece of work,\" Jess closed her suitcase and sank into the couch next to me. \n\n\"Olivia -- I learned the hard way -- can go from charming to weapons-grade bat-shit crazy in an instance,\" I drew her closer, \"But, as Mona likes to say, 'not my monkey, not my circus,' well, not anymore, anyway.\" \n\nJess snorted, \"That's hilarious. I've never heard it put quite that way before.\" She placed her hand above my heart, \"well, you and I are the only monkeys in this circus, and will be forever more.\" \n\nMy heart expanded several sizes. Jess had told me a little about how her last relationship ended, and I knew the idea of being in a relationship was a big deal for her. But in moments like this, with words like that, I couldn't help but allow myself a little mental cartwheel of joy. \n\nI chuckled, \"I like the sound of that. Come on -- let's go grab a bite to eat before heading to Penn Station.\" \n\n\"Oh, you read my mind,\" Jess whispered in my ear as she pushed me back onto the couch, \"I was just thinking of having something tasty in my mouth...\" \n\nMy body started tingling. Jess wants to go down on me? No objections. Whatsoever. I lifted my hips as she worked my jeans and boxers off. I leaned forward and reached for her, but she pushed me back again, \"Nope, this is payback for you fingering me in the cab the other night and scandalising that nice cabbie from Haiti.\" \n\n\"He would not have noticed if you hadn't started squealing,\" I protested, \"if I remember correctly---JESUS!\" \n\nJess started sucking on my clit as she threw my clothes to the floor. All I could do was shut my eyes and absorb the unrelenting tides of pleasure she was creating. Jess's tongue and lips were aggressive and confident, and as always, she put me completely at her mercy. I felt my limbs flailing in a pathetic attempt to process the millions of explosions rippling through my body. Jess had the ability to make me come like no one else. Maybe my lovers in the past had been more passive -- or I had less of a connection with them -- regardless, Jess's abilities were without equal. She made me feel vulnerable, powerful, and sexy all at once -- and those were not things I usually felt... ever. \n\nI was making incoherent sounds, but they somehow made sense to Jess, because she knew just when to kick it up a notch and thrust inside me, all while her mouth was doing what felt like a dozen different things to me as she teed me up for a massive orgasm. \n\nWhen it cascaded over me, I was practically sitting up as Jess had chased me up along the length of couch. My arms were gripping the back of the couch, one of my legs was hanging off the edge, the other hitched up on some of the pillows. My shirt was twisted up around my chest. Jess looked up at me with what can only be described as a self-satisfied grin. \n\n\"Are we even now?\" I croaked, sliding back down with blissful fatigue. \n\n\"Hm, temporarily,\" Jess rested her head on my thigh, \"I could easily spend a lifetime doing that, and just that.\" \n\n\"I want a turn,\" I declared, \"just as soon as feeling returns to my extremities.\" \n\nJess looked at the clock, \"You'll have to prioritise getting dressed, darling, otherwise we'll miss our train.\" \n\nI looked at the clock, \"Bloody hell, Jess! We're late!\" \n\n<br /> JESS \n\nAlex and I settled into our seats on the train, having made it with minutes to spare. We kept catching each other's eyes and smiling like idiots, our impromptu tryst still firing adrenaline through our veins. Alex attempted -- unsuccessfully -- to literally get into my pants on the way to Penn Station and it was exhilarating; I loved that she tried. \n\nBeing together, out in the world, knowing that I had this unseen connection with her was like sitting on a delicious secret that nobody could experience even if they found out about it. \n\nAs the train pulled out of the station, Alex whispered in my ear, \"By the way, I'm really, really good at having hotel sex.\" She then nonchalantly picked up her book from her backpack and started reading. \n\nTwo can play at this game.  \n\n\"Sweetheart, you have something on your shirt... right there,\" I said, as I brushed the front of her shirt, applying just enough pressure against her nipple to make her blush. She made a good effort to keep reading. \n\n\"Oh dear, it's on your trousers now,\" I swiped my hand along the inside of her thigh, hitting the top of her inseam forcefully. \n\n\"Okay! Truce!\" Alex yelped and grabbed my hand when I feigned another swipe, \"Jess, seriously.\" \n\nI wiggled my eyebrows at her, picked up the newspaper and hid my grin behind the Metro section. \n\nSome time after we passed Delaware, I started sensing that someone was staring intently at me every time he walked past. I looked up and froze as I made eye contact with the man, who was looking quizzically at me. \n\n\"Oh shit,\" I said, grabbing Alex's hand. \n\n\"What?\" Alex looked at me with concern as the man made his way towards us. \n\nNot letting go of her hand, I quickly said, \"There is absolutely no way I can apologise enough for what's about to happen.\" \n\n\"JESSIE???\" The man said as he approached. \n\n\"Hi Mateo,\" I replied. \n\n\"I thought it was you! What are you doing here in the U.S.?\" He appeared to not have noticed Alex at all. \n\nI looked at Alex, \"I'm on school break, so am here visiting Alex, my gi--.\" \n\n\"Oh-ho! Is this your new boyfriend?\" Mateo glanced over at Alex, \"Let me tell you, Jessie, I have not given up on you yet.\" \n\nAlex and I just sat there, dumbstruck. \"Mateo, Alex isn't my boyfriend...\" I started to explain. \n\nMateo interrupted, \"That's even better! Look, I'm working in DC now. Call me. As I have always told you, I think we'd be good together.\" He handed me his card, winked, and sauntered away. \n\nAlex put her book down and looked at me, a small smile creeping onto her face, \"Please explain.\" \n\n\"We were set up on a blind date when I was at uni. Not surprisingly, it was a total disaster. I had to fake a migraine to get out of the dinner. He called me a couple of times after that, but I never went out with him again. Apparently, He hasn't changed.\" \n\nAlex chuckled and gave me a quick kiss. She picked up her book, \"If we see him again, I'm flashing him my boobs.\" \n\n\"Even though I would get a kick out of his brain melting if you did that, those are for my enjoyment only, please.\" I stared at her chest meaningfully. \n\n\"What? These teeny tiny things?\" Alex mocked. \n\nI felt the blood vessels in my cheeks expand as Alex's naked chest flashed up in my mind, \"Yes -- those things. Along with your pecs and your hyper-sensitive nipples. The whole package. Mine.\" \n\nAlex stared at me. The fact that Alex had no idea how hot she was made her even sexier. I gave her the most beguiling wink I could come up with. \n\n\"You drive me crazy, you know that?\" Alex adjusted her jeans, \"and now I have to sit with it until we get to the hotel.\" \n\nI rested my hand on her thigh and felt it tense up in response, \"Oh sweetheart, it's mutual.\" \n\n<br /> ALEX \n\nTravelling down to DC with Jess was amazing for so many reasons, not least the fact that being together -- as a couple -- was starting to feel real. It was on the cusp of not being brand new anymore, but I still found myself giddy with excitement every now and then. \n\nThere were moments where I would be going about my day and remember that something awesome was happening, and then realise with amazement that the \"something\" was having Jess in my life. \n\nChecking into the hotel together felt like a public declaration of our relationship. I was relishing it. Jess didn't give me much time to overthink it though. She pushed me through the door the moment the keycard beeped. She kissed me so forcefully I couldn't remember how we got onto the bed or where our clothes went. ",
        "She was so wet, and my tongue happily swept it all up. I spent a lot of my time focused on her clit, supremely proud that I could drive her wild with my efforts. Jess's deathlike grip on the bedsheets told me this one was going to be a monster. \n\n\"Under..\" she moaned. \n\nSomewhere along the way, we discovered that Jess had one spot on the underside of her clit that was ten thousand times more sensitive than anywhere else. I had been licking everywhere but that spot, waiting for just this moment. \n\n\"Alex... under..\" she muttered again, pushing her hips up. I smiled... and went for it.\n\nThe moment the tip of my tongue made contact with that spot, Jess started screaming. \n\n\"JUST-LIKE-THAT-JUST-LIKE-THAT-JUST-LIKE-THAT...\" \n\nI almost came myself, listening to her supplication. Her arousal was flooding my mouth, enveloping my tongue. But nothing could distract me from that spot. It was mine and mine alone, and I loved laying claim to it because it made Jess babble in that amazing way. \n\nJess's body tensed. I could feel those beautiful thighs of hers squeezing tight. Her clit started throbbing. I drove my fingers into her, curling them up to rub against her other spot. She was slick and warm, and she wanted more. Jess started thrusting against my fingers, her breasts bouncing with abandon as she moved. I pushed deeper in her with each thrust; I knew it would only be moments before she went over the edge.\n\n\"Oh Alex, honey, fuck me! Ahhhhh! AHHHHHHHHHHHH!\" \n\nMy lover came and it was glorious to witness. Her breasts shifted sexily as she panted, her hair was a mess, her legs open, the sheets a crazy mess around us. \n\nI laid on top of her and she wrapped her arms and legs around me. \n\nBliss. \n\n\"I love you I love you I love you,\" Jess groaned into my shoulder. \n\nI smoothed the hair out of her face and kissed her, \"I love you too.\" \n\nJess suddenly pumped her legs up and down, laughing. \n\n\"What are you doing?\" I looked at her, immensely amused by her antics. \n\nShe held my face in her hands, \"I love having sex with you.\" Which set off another peal of laughter. \n\n\"I told you I was really good at hotel sex!\" I boasted. \n\n<br /> JESS \n\n\"Cocky, aren't we?\" I reached for her, and my fingers found her primed for me. \n\nAlex shook her head, \"On the contrary, I am quite cockless.\" \n\nBefore I could admonish her for the terrible joke, she shifted and straddled my stomach. \n\nAlex lowered herself onto my fingers and started rolling her hips back and forth. \n\n\"Holy shit,\" I blurted out. \n\nHer entire upper body was a visual orgy of rippling muscles. Her eyes were shut, her mouth slightly opened as she moved. I have the hottest girlfriend in the world. \n\nAlex kept grinding, and I just held on for dear life, drinking in the sight of her as she rode my fingers. When my thumb joined in the fun and flicked across her clit, Alex's eyes flew open. She held my gaze as she chased the orgasm, collapsing onto me as she came. \n\n\"Holy shit,\" I said again. \n\n\"Hm?\" \n\n\"I said, 'holy shit,'\" \n\n\"Did I hurt you?\" Alex lifted her head. \n\nI shook my head, \"I have such a crush on you.\" \n\nAlex blushed. \n\nI buried my fingers in her hair. \"Can we stay in here for the rest of the weekend?\" \n\nAlex grinned, \"Yes, we can. Throw away the phones.\" \n\nI fished around for mine and made to throw it across the room when I noticed the time. \n\n\"Oh no -- Alex -- look at the time -- aren't we supposed to meet your cousin for dinner?\" \n\nAlex sprung off the bed. \"Bugger! Oh wait, no, we can still manage to get there respectably late if we get going right now.\" \n\n<br /> ALEX \n\nMy cousin Jeremy and I were kindred spirits in many ways, but two stick out: neither one of us had any interest in moving back to Asia with the rest of our family, and neither one of us felt any compunction flouting our family's narrow-minded standards for selecting \"appropriate\" spouses. Dinner with him was the first time -- outside of my siblings -- that Jess has had the opportunity to spend time with someone from my family in person. \n\nMy parents' stance on the whole gay thing was to tacitly acknowledge it, but they made it perfectly clear they didn't want anyone else to know. Jess had a hard time understanding this, until Jeremy told her his parents were having a hard time accepting Marissa, his American fianc\u00e9e. \"It's less about you being a woman and more about you not being Chinese,\" Jeremy quipped. \n\n\"It's both,\" I said, \"but let's talk about something else.\" \n\n\"We'll just have to make our own family,\" Jeremy stated optimistically. \n\n\"Stay away from that lot, for as long as you can,\" Marissa said, \"Jeremy and I decided to put on a major charm offensive the last time we flew over... Total utter disaster.\" \n\nJeremy looked devastated. \n\n\"Oh Jer, it wasn't you,\" Marissa stroked his cheek lovingly, \"I couldn't do anything right: I was holding the chopsticks wrong; I made too little eye contact and was too shy; I made too much eye contact and was too American; my clothes were too risqu\u00e9; my skirt was too frumpy; I didn't get their jokes...\" \n\nI could imagine exactly how each of those things unfolded. There was one thing my family was really good at: closing ranks and making an outsider feel like total crap. \n\n\"But Jeremy was a prince,\" Marissa kissed him gently, \"And once I realised that I wasn't marrying any of them, it got easier to handle. Especially since he and I started playing Bingo in our heads for all the horrible things they could say or do.\" \n\n\"And what did the winner get?\" Jess asked. \n\nMarissa and Jeremy looked at each other and blushed at whatever memory that question provoked. \n\n\"OH! Ha!\" Jess and I laughed, \"Pray, tell!\" \n\n\"Ok! New topic of conversation!\" Jeremy coughed, \"baseball, gardening... anything!\" \n\n\"I'll say this: Jess, <en>we welcome you to the family. You can call us any time to vent if you ever get ambushed by a wayward Mak.\" Marissa said warmly. \n\nAfter dinner, Jess and I walked hand in hand, headed in the general direction of the hotel. \n\n\"Alex, I'm sorry your parents aren't more supportive.\" Jess finally said. \n\nI squeezed her hand, \"I'm sorry they are missing out on what a great person you are and how happy you make me. But honestly, I have accepted that they won't change. It's taken a while to accept. I'm not going to push them. I miss them and it breaks my heart, but I have to live my life my way. I can't make them happy and be happy myself.\" \n\n\"The Wainwrights need to step it up then -- you know they love you already -- and we'll see them when you come back to the UK with me that last week of August.\" Jess leaned in closer as we walked, and inserted her hand into the back pocket of my jeans. \n\n\"Careful where you put your hand, Jess, I won't be responsible for my actions if you keep manhandling me like this...\" I teased, profoundly happy that she was groping me. \n\n\"I'll put my hand where I please. And stop changing the subject,\" Jess said, squeezing my butt cheek brazenly. \n\n\"I'm bored with talking about my family,\" I draped my arm across her shoulder and dropped my hand down so I could brush my fingers against her breast, feeling her nipple instantly harden with my touch. \n\n\"Time to get a taxi,\" Jess said as she exhaled loudly, \"or we'll both be arrested for gross indecency...\" \n\n<br /> JESS \n\nAlex and I woke up late on Saturday after an enormously satisfying night. \n\nWe languished in bed for most of the morning, and had a lazy lunch before Alex went down to the gym for a work out. I decided to use the time to finish up some emails and cull my portfolio of photographs from my time in the US. \n\nAlex sauntered back into the room an hour later, and headed into the shower. I decided to join her, stepping in just as she was rinsing her hair out. I spooned her from behind and bit her gently on her shoulder blade. \n\n\"I'm going to have to report this as spousal abuse if you keep biting me,\" Alex threatened jokingly. \n\nI gently passed my thumb over the indentation of my teeth in her skin, \"Spousal abuse? Are you proposing to me?\" \n\nAlex turned around, \"Now there's an interesting concept... You know we can get married in New York now, right?\" \n\n\"Oh my god, I wasn't serious.\" My heart was thumping, \"I was just giving you a hard time. I don't want to get married.\" \n\nIt came out wrong. \n\n\"I mean, it's not that I don't want to. I just...\" I was screwing it up. \n\n\"How about this,\" Alex said gently, \"If -- and I am emphasizing the 'if' -- we want to get married, you get to pop the question, ok?\" \n\nI kissed her as my reply, relieved at how artfully she managed my moment of panic. \n\n\"I'm sorry that came out the way it did... I want to be with you Alex.\" \n\nAlex turned off the shower, \"Good. Then I think I have something that you'd like.\" \n\nCurious, I followed her, drying off quickly as Alex wrapped a towel around her waist. She started rummaging in her suitcase. The just-showered Alex with a towel around her waist was very, very, very appealing. \n\n\"I've been carrying this around just in case such an opportunity presented itself.\" Alex took out a small black bag and withdrew two necklaces. She handed me one. \n\nIt was a simple sliver chain, with a small round medallion attached. My initials were engraved on one side, and hers was on the other side. \n\n\"Alex, I love this. When did you get them?\" I put mine on immediately. \n\n\"I had them made a month ago. I wanted us to have something when September rolled around. Not a proposal, but appropriate for now, yes?\" Alex clasped hers on. \n\n\"Come here,\" I whispered, \"Let me show you just how much I love this.\" \n\n<br /> ALEX \n\nJess reeled me in by my towel and pushed me onto the bed. I loved being with this beautiful woman who knew how to grab me and take charge. \n\n\"This is becoming quite a habit with you...\" I teased as she untucked the towel and lowered her lips to my sex. \n\n\"No... ah! foreplay, Jessica? Ah!\" The sight of Jess between my legs was almost enough to set me off. \n\n\"Foreplay was you in a towel,\" Jess grinned and pushed my thighs open, her tongue running expertly along my folds. I felt her fingers enter me. I tightened around her, feeling every stroke. Note to self: parade around in a towel more often. \n\nJess suddenly slowed down, holding off my climax. \n\n\"Please Jess, I'm so close,\" I groaned, pressing my hips against her, straining for her to release me. \n\n\"Do you have any idea how hot you look right now?\" Jess bit her lower lip as her eyes raked my body up and down. Her fingers were casually slipping in and out of me. \n\n\"No! I mean, Yes! Oh god, Jess...\" \n\nThe tip of her tongue glanced off my clit. She had me vibrating at some insane frequency and I tried to say 'Don't make me wait,' but it came out as \"Dowmewaaaaaaaahhhhh!\" \n\n\"Sorry, honey, what?\" Jess did that thing with her tongue again. \n\n\"Don't.... don't....\" \n\n\"Don't do this? You want me to stop doing this?\" Jess's tongue was setting me on fire. \n\n\"DON'T MAKE ME WAIT!\" \n\nI saw her smile as she finally obliged, pushing deeper and faster into me. Her tongue lashed my clit like wave after powerful wave. And then she slayed me with the climax I begged for. I was floating. And sinking. All at once. The orgasm whooshed through me and I felt my legs flop down numbly, muscles spent. \n\n\"Oh my god, Alex, you are so wet,\" Jess's tongue now gently caressing me. \n\nEventually, Jess clambered up, her still damp hair leaving a trail of cool air on my body. \"Delicious,\" she exclaimed. \n\nI couldn't find the words to respond. She'd fucked them right out of me. \n\nI laughed when I saw the state of her face. \n\n\"What?\" asked Jess. \n\nI swept my fingers across her lips and grinned, \"You were down there for a while!\" \n\nShe took my fingers and sucked on them. \n\n\"Clearly I should have given you the necklace the moment it arrived,\" I joked. I wrapped my arms and legs around her. \n\n\"Do you think we are moving too quickly?\" Jess asked quietly as she fingered the small medallion. \n\n\"Maybe,\" I said with mock concern, \"so maybe we should stop spending time together and having all this great sex...\" \n\nJess opened her mouth to protest. \n\n\"I'm just KIDDING, Jess,\" I laughed, \"What's really going on? One moment you're here with me, the next you look like you're about to have a heart attack.\" \n\nJess was quiet for a moment. \n\nShe sat up, wrapped my towel around her, and said, \"Alex, there's something I have to tell you. You know I mentioned James? How we were engaged? And then it didn't work out?\" \n\nMy heart was in my mouth, but I nodded and waited for her to continue. \n\n\"It didn't work out because two months before the wedding, he called it off. Never really got a clear reason. He just left. Poof. Gone.\" \n\nJess looked out into the distance. \n\n\"It was devastating -- less because he left, but because I didn't see it coming. I lost my bearings for a while, and vowed to never get hurt like that again. I'm still a little haunted by it -- I....\" \n\nI reached out and held her hand. \"I'm so sorry that happened -- that must have been... Jess -- I don't know what to say.\" \n\nJess's eyes darkened a little, \"I didn't want to have that kind of a shock again. I dated here and there, but nothing serious. Until you.\" \n\nI pulled her towards me and just held her. \n\n\"Then we'll take it one step at a time,\" I whispered, \"and I'm definitely not going anywhere. Unless you want me to.\" \n\nJess nodded, \"I am not going anywhere either. I just got spooked all of a sudden... I'm sorry.\" \n\n\"Please don't apologise. Thank you for telling me. I wish I could have been there for you when you were going through that. Instead, if I am getting the timing right, I was bombarding you with inane tales of running away from a campus police squad car for streaking across the academic lawn. I wish I'd known.\" \n\nJess smiled wryly, \"Your missives were a welcomed distraction. I promise you that.\" \n\n\"If it's distractions you want, I can definitely deliver. We can get back to the most important of activities. You know, kissing and stuff.\" I landed soft kisses on her mouth again and again. She kissed me back every time. Our tongues lightly brushed against each other as our breaths deepened and warmed our skin. \n\n\"I have such a crush on you,\" Jess said, looking in to my eyes when we eventually broke apart. \n\n\"I will never get tired of hearing that,\" I grinned, \"kiss me some more.\" \n\nWe locked lips gloriously. \n\nMy phone started buzzing. \n\n\"Your phone sounds like a dying farm animal.\" Jess protested as I reached for it. \n\n\"Holy shit, we're late. Again! That was my alarm for the reception downstairs.\" \n\n\"It's 6 already? How did that happen?\" \n\n\"Epic time management problems... but if we are already late... we might as well...\" I reached for her again. \n\nShe stopped my hand's advance. \"Good try, but no. We need to get dressed.\" \n\n<br /> JESS \n\nTelling her exactly how it ended with James lifted a huge weight off me; I had been worried about not having told her before -- but it was still a hard thing to talk about.\n\nI thought James and I had been happy, that we had been on the same page in terms of what we wanted. His leaving me laid bare how wrong my perceptions were. It was such a dark time; I remember spending that summer holed up in my room at my parents' place, not wanting to see anyone. \n\nMy fear -- grounded in nothing but vapours of the past -- was that history would repeat itself and all this with Alex would turn out to be something other than what it appeared to be. Truthfully, the thought of committing to Alex made my heart sing. She made me feel so safe. If anything, it was me figuring out how to trust in that amidst the panic.\n\nAfter indulging in several (hundred) more of her delicious kisses, I marched Alex and her garment bag into the bathroom, telling her she was not to reappear until she was dressed and ready to go. Honestly, it was more to keep me from jumping on her than anything else. Her mouth was its own universe of wonders and I was defenceless against it. \n\nWith Alex safely separated from me, I quickly got ready. I brought a simple black dress for the occasion, a sleeveless v-neck dress that's always served me well in the past. The necklace Alex got me nestled perfectly along the neckline. \n\n\"Darling?\" I called, not having heard Alex rattling around for a while, \"Are you ready?\" \n\n\"Almost,\" Alex responded. \n\nI quickly applied some make-up. \"What's taking you so long?\" \n\nThe bathroom door opened and Alex stepped out looking gorgeous in a beautiful tux. \n\n\"Wow,\" I sighed, \"I approve.\" I grasped the lapels of her jacket before smoothing out the material across her chest. \n\nAlex grinned, her eyes straying to the neckline of my dress and my cleavage. \"I'm not going to be able to focus on other things tonight if I have this to look at.\" \n\nShe cupped my breasts and squeezed, leaning down to kiss each one. \n\n\"You have the whole rest of the night to spend with them... and me,\" I said, reluctantly taking her hands off. \n\nAlex was undeterred. She put her hands to my waist, running them tantalisingly downwards, \"Technically, we don't have to get there until dinner starts.\" \n\n\"Which is in about fifteen minutes. Stop messing around, you nymphomaniac!\" I giggled. \n\nAlex pushed me down into the bed, \"A lot can happen in fifteen minutes.\" \n\n\"You are nut, you know that, right?\" I laughed as she burrowed under my dress. \n\nI felt her fingers move my underwear aside and her tongue claim my clit. \n\n\"Oh!\" \n\nAlex's hot breath and pliable tongue made quick work of my nerve endings. She hit every one of my sensitive spots, again and again until I came, dissolving into a dizzying puddle of post-orgasmic bliss. \n\n\"You really are mental,\" I mumbled, as Alex planted kisses along my thighs. \n\nShe emerged from under my dress, \"Now we can go,\" she grinned. \n\n\"Give me a minute, Romeo, I need to recover.\" \n\n<br /> ALEX \n\nJess wandered into the bathroom. Her easy beauty always caught me off-guard; the dress was stunning on her. And those breasts... \n\nI finished re-adjusting my shirt and tie when Jess came back out with a smile. \n\n\"Hiya...\" \n\n\"Hiya back!\" I returned her smile. \n\n\"Thank you for being so wonderful about... about earlier. I know I gave you a little bit of whiplash back there. I'm here with you now, and I want to be, and I have no intention of being with anyone else. I got all jumbled up for a moment.\" \n\nI wrapped her in my arms and kissed her on her forehead, \"I love you.\" \n\nI was glad she finally told me the whole story about James. It was devastating to hear that she had to endure such hurt. I wondered how much we would need to contend with the ghost of that relationship as we moved forward. \n\nI took her hand. \n\n\"I love you too,\" Jess replied, kissing our intertwined fingers. \n\nDinner was just getting started when we got to the ballroom, so Jess and I slid into our seats as the speeches got underway. Annie was seated next to Jess and she leant over to say hello. \n\n\"You guys look great! Didn't think you were going to make it,\" she exclaimed, giving Jess and I a knowing look. \n\n\"We had some time management problems,\" Jess deadpanned. My stomach flipped with the memories from the afternoon. \n\n\"You know me, I hate the chit-chatting business during receptions.\" I fumbled for an excuse. \n\nAnnie rolled her eyes, \"More like you guys are still in the FLB phase of the relationship... not that there's anything wrong with that.\" \n\n\"Shut up, Annabelle,\" I narrowed my eyes at her. \n\nJess looked at me, \"What's 'FLB'?\" \n\n\"Fucking Like Bunnies,\" I replied. \"Annie is bloody hilarious.\" \n\nJess blushed a bright crimson, \"It would be funny if it were not so embarrassing.\" \n\nChanging the topic, I quickly introduced Jess to the others at the table she hadn't met before. With impeccable timing, Mona, my boss from work (and a co-chair of the event), came by to say hello. She and Jess quickly launched into an animated conversation about the Lake District. ",
        "Jess seemed amused by the US-version of non-profit fund-raising, as she watched the deep pockets in the room vie for auction items donated by other deep pockets. \n\n\"Seems like they spent a lot of money to get this thing going, and they are raising money by having people pay more money for stuff. In the UK, organizers beg, borrow, or steal to put the event on as cheaply as possible. This seems to work just as well though!\" \n\n\"Go big or go home, my cross-Atlantic friend,\" Mona responded, \"Although your point is well taken. Excuse me while I check out our results on the night.\" \n\nAs the auction wound down, a DJ took the floor, pumping music through the multitude of speakers in the ballroom. Annie and a handful of others immediately bounced enthusiastically towards to the dancefloor, working off several hours' worth of alcohol. \n\nJess and I watched for a while, and then I noticed that she was staring at me with a smile on her face. Her gaze was like a warm embrace and I melted. \n\n\"I love it when you look at me like that,\" I admitted. \n\nJess brushed her fingers along my cheek, \"I was just thinking about how very handsome you are.\" \n\nMy heart skipped a couple of beats. I moved closer and kissed her. \n\n\"GUYS! Get a room, or come join us!!!!\" Annie shouted from the dance floor. \n\nI stood and held out my hand, \"May I have this dance, Jess Wainwright?\" It was cheesy, but who cared? \n\n<br /> ANNIE \n\nThey looked good together. Alex had her arms around Jess; they looked like they were in their own little world. I had to return to the table; my feet were destroyed by my heels. \n\n\"I remember that phase in my relationship with Liz,\" Mona said wistfully as she sat down next to me. \n\nI grinned, \"You mean it's not always rainbows and unicorns?\" \n\nMona leaned back and crossed her arms, \"Not when you have three kids under 6! Liz and I don't know what to do with ourselves this weekend -- the kids are with her parents in New Jersey. We spontaneously woke up at 5 this morning and were almost disappointed when we realised we had no diapers to change.\" \n\nI scanned the room idly as Mona talked. I saw Olivia the same time Mona did. \n\n\"Uh-oh,\" Mona nodded towards Alex's ex. \n\n\"Has she been here the entire time?\" I asked. \n\nMona shrugged, \"No idea. I don't see Amy.\" \n\n\"Olivia without Amy equals trouble. I should warn Alex.\" I started to get up to head off Alex and Jess as they returned to the table. \n\nMona put a hand on my arm, \"No, Alex is a big girl. She can handle herself.\" \n\nI saw Olivia spot Alex from across the room. Like a cheetah prowling through the tall grass, Olivia threaded her way through the tables towards us. \n\n\"Yeah, ok, but I'm not missing this showdown.\" \n\nMona nodded, \"Touch\u00e9. Quick, grab that bottle of wine.\" \n\n\"For drinking? Or as a weapon?\" I asked, half seriously. \n\nMona held out her wine glass, \"Haven't decided yet.\" \n\nAlex pulled out a chair for Jess before sitting down and undoing her tie. \n\nI watched as Olivia approached and touched Alex on the shoulder. When she saw who it was, Alex almost choked on the water she was drinking. \n\nJess's eyes found mine. She cocked her head inquisitively. \n\n\"O-LIV-IA\" I mouthed her. She raised her eyebrows and turned back towards Alex. \n\n\"Hi sweetie,\" Olivia leaned down and kissed Alex on the lips. \n\nAnd now we can all see her boobs; what an effing shrew.\n\n\"Hey!\" I shouted. \n\nAlex leaned back from the kiss and wiped her mouth with a grimace, \"Hi Olivia.\" \n\n\"Oh, Annie, you're here too. Of course.\" Olivia shot me a look of pure poison, \"Alex, can I talk to you for a second? In private?\" \n\nAnd then, almost as an afterthought, she turned to Jess, \"Don't mind, do you?\" \n\nJess gave Alex's arm a subtle squeeze, \"No, not at all.\" \n\nAlex frowned, but leaned over and gave Jess a quick kiss and said something in her ear before steering Olivia away. \n\n\"Jess, I had NO idea she was going to be here.\" I started immediately once Olivia was out of earshot. \n\nJess smiled, \"Alex told me she might be here. It'll be ok.\" \n\nMona watched Alex point Olivia towards the back of the ballroom, \"Smart, Alex, fewer people back there.\" \n\n\"Wow, you guys are really worried!\" Jess turned back to us. \n\n\"Well, I don't know how much Alex told you, but...\" \n\nJess seemed totally calm. \n\nI smiled, \"What did Alex say to you just now?\" \n\nJess took a sip of her water, \"Enough to let me know that Olivia won't get any drama out of this.\" \n\n<br /> ALEX \n\n\"What do you want?\" \n\nOlivia took my hands in hers. I retracted them and crossed my arms. \n\n\"No need to be unfriendly, Alex,\" Olivia pouted. \n\n\"What do you want?\" \n\n\"Who was that at the table with you, anyway?\" Olivia tossed a careless look in Jess's direction. \n\n\"Jess Wainwright. My girlfriend.\" \n\n\"Oh!\" Olivia feigned surprise, \"Does she know who I am?\" \n\nI nodded and asked again, \"What do you want?\" \n\nOlivia leaned forward, \"Well, Amy is on a work call, I saw you, and I just wanted to come say hello -- I'd forgotten how good you look in a tux.\" \n\nI would have laughed if the situation hadn't been so absurd. \"So you said hello. We're done.\" \n\nOlivia slid her hands over the lapels of my jacket and pulled me towards her. \"Remember how much fun we had at this gala last year? It's been ages, sweetie. I've missed you.\" \n\nI shook my head, \"It's definitely not mutual. You had fun at this gala last year -- sneaking off with Amy. Yes -- I knew you were fooling around with her, way before the gala.\" \n\nI was about to push her away when I felt Jess's hand on my shoulder. \n\n\"I'm afraid I have to interrupt, darling, but the photographer just arrived and Mona wants a photo of all of us together.\" Jess turned up my collar, smoothly inserting herself between Olivia and me.\n\nI could feel Olivia shooting daggers at Jess with her eyes. \n\nI handed Jess my tie. We seemed to have wordlessly agreed to proceed as if Olivia wasn't there. \n\nOlivia snarled, \"Oh, how cute. Alex, do you need help getting dressed these days?\" \n\nI was about to snap at Olivia to mind her own business when Jess winked at me. \n\n\"Well, Olivia,\" she said over her shoulder, as she finished knotting my tie, \"I actually prefer undressing her... but she does look rather dashing in this, doesn't she?\" \n\nShe smoothed down my collar. \n\nI looked at Jess in total awe. \n\nJess gave me a kiss, \"Don't take too long, my love. Olivia, it's good to finally put a face to the name.\" \n\nI never thought that having Jess involved in any ex-girlfriend melodrama could be arousing, but all I wanted to do at that moment was drag Jess somewhere private so I could make her come. \n\nI was watching Jess walk back to the table when I realised Olivia was saying something. \n\n\"Sorry, Olivia, what?\" I turned back to see Olivia with her arms tightly crossed around her chest. \n\n\"What happened to you loving me forever?\" \n\nI sighed, \"First, I never said anything like that, and second, you cheating on me with Amy kind of put a damper on any plans to stay together, Olivia.\" \n\nOlivia opened her mouth, but no words came out. \n\n\"And since we are talking about this -- I think we should both acknowledge the fact that you dated me to get Amy all riled up.\" \n\nOlivia's mouth was a thin white line. I tried to remember how it was that I fell for her. \n\n\"It worked, too, given that you guys got back together,\" I saw Amy walking towards us and added, \"and I'm not going to be a part of your games anymore.\" \n\n\"Livy,\" Amy came up, \"That call took longer than I expected, sorry. Oh, hi Alex.\" \n\nI raised my hand in greeting. Amy looked between me and Olivia and frowned. \"What's going on?\" \n\nOlivia pouted, \"You left, I got bored. And then I got even more bored.\" She looked at me pointedly. \n\nI shrugged, \"I'm boring, what can I say? On that note, I've got to get back to my boring table to take a boring photograph.\" \n\n<br /> JESS \n\nAlex came strolling back not long after I left her with Olivia. I planted the sloppiest kiss I could on her mouth. \n\n\"I'm sorry that happened,\" Alex whispered, pressing her forehead to mine. \n\n\"All sorted?\" I asked. \n\nAlex nodded, \"Jess, I am sorry.\" \n\nI stroked her cheek, \"No need to apologise, honey, not your fault. Although it was incredibly hot watching some woman throw herself at you, inappropriate and awkward as it was.\" \n\nAlex blushed, \"I liked it when you said you preferred undressing me...\" \n\nI laughed, \"Well, it's true. I rarely have the presence of mind to come up with zingers like that. I really enjoyed it. I think Olivia was a little sloshed, don't you think?\" \n\nAlex shrugged, \"Yeah. Probably. Are we taking a photograph?\" \n\nI shook my head, laughing, \"No, Annie sent me in with the photographer as a ploy to extract you.\" \n\nThe DJ started playing a ballade. \"Come on, one more dance, then,\" she took my hand and led us to the dance floor. \n\nAs Alex gathered me in her arms, I felt a familiar fluttering in my stomach. As she easily led me through our dance, I allowed myself to be guided by those strong arms of hers. I felt like a teenager at my first ball, dancing joyously with Alex, resplendent in black tie. \n\nAs the song ended, she pulled me closer. I gasped as her thigh met my hips and I felt something hard press against my body. I quickly looked down, then back up at Alex, who had a sexy smirk on her face. Her hand was on the small of my back, pushing me gently into her body. \n\n\"You are packing?\" I whispered. \n\nAlex nodded, \"Just brought along a little reminder of what's in store for later tonight. You like it?\" \n\nI buried my face in her neck and nipped her flesh with my teeth, \"You are being very, very naughty, my love. And I love it so very, very much.\" \n\n<br /> ALEX \n\nWe said our goodnights soon enough. Mona and her wife Lizzy were still tearing up the dance floor, but Jess and I had driven each other to the outer edges of desire with our prolonged session of subtle foreplay in the ballroom. \n\nI stood behind her in the lift, pressing into her body as I wrapped my arms around her stomach. I rested my lips on the pulsing blood vessel on her neck. There were three other people in the lift with us, none seemed aware of the energy that we were throwing off. \n\nJess had her hands up my shirt by the time we got to our room door. I fumbled for the room key as her lips found mine, which made activating the key card much more difficult than it had to be. Finally, the door yielded and I pushed us into the room. Jess grabbed my tie and pulled me towards the bed. \n\nI unbuckled my trousers and eased my boxers off. I reached under Jess's dress and pulled off her underwear, which was damp with her arousal. She gasped with anticipation. I tightened my strap-on and pushed her onto the bed. \n\nJess stretched her legs out and lifted her dress. I positioned myself on top and guided the strap-on into her dripping opening. \n\n\"YES! OH AH AH AHHHHHHHHHHH!\" Jess shrieked as I started fucking her. \n\nJess panted, pulling her knees higher towards her shoulders. \n\nI quickly adjusted so I could push the cock deeper inside her. I love how she swallowed me up as I thrusted into her. I felt a quickening in my clit -- the result of the alchemy between the visual and physical stimulation assaulting my senses. \n\n\"Come on, baby,\" I grunted, \"come for me...\" \n\nI reached between us and started rubbing her clit. \n\n\"Unh. UNH. MMMM. FUCK! Alex, I'm close, baby, oh shit!\" Jess shouted. I kept thrusting, feeling beads of sweat bloom on my chest. I felt her clit swell and pulse and I started gently pinching it with my thumb and forefinger. \n\nI stroked in and out several more times and we managed to come together. \n\n\"Alex, my darling, oh...\" Jess mumbled as I fell onto the bed next to her. \n\n\"That was worth waiting for...\" \n\n\"I don't know if I can keep up with you, Ms. Mak,\" she teased, running her hand under my shirt. \n\nI kissed her, \"This is what you get, dating a younger woman,\" I teased back. \n\n\"Oh, you cheeky monkey,\" Jess exclaimed, nipping me on the shoulder with her teeth. \n\nI laughed, \"You really need to stop this habit of biting me, sweetheart. I'll have to go around with scarves and shit to hide the evidence.\" \n\n\"You know you love it, darling,\" Jess nipped me again, this time on my neck. \n\nI chuckled, \"Yes, you're right. I do love it. I love all of it. All of you.\" \n\n<br /> --Chapter 5: End of Summer-- \n\nJESS \n\nI heard the gentle clinking of plates and glasses from the kitchen downstairs as I woke up in my parents' house. Alex was wrapped around me, all smooth and warm. \n\nWe'd spent a wonderful six days in the Lakes with my family and planned to leave later that afternoon for London. Two more nights before I would have to wake up alone. I didn't like that thought one bit. \n\nI couldn't believe our two months together were coming to an end. The rest of our time in the US was free from drama, and Alex and I fell into an easy rhythm of living together. It scared me how effortless it was: living with James had been a study in compromise -- he left dirty dishes and mugs all over the place, I didn't; he played a narrow set of music repeatedly, I had a broader playlist; he used every pot and pan in the kitchen just to cook pasta, I didn't; I left my bras everywhere, which drove him bonkers. \n\nWhen he left, the absence of his messes helped mitigate the pain. With Alex, I could well imagine that there would just be an abyss with no redeeming factor if I lost her for any reason. \n\nI watched her sleep, envious that she did not share my sporadic episodes of uncertainty about our relationship. Not trusting myself to keep those demons at bay, I left her sleeping and plodded downstairs to the kitchen for some distraction. \n\n\"Morning,\" I said to no-one in particular. \n\nMy mother placed a mug of hot coffee on the table for me, \"Hello poppet. Did you sleep well?\" \n\n\"Yes, mum, thanks.\" \n\nMy brother snickered. I kicked him as I sat down. \n\n\"Shut it, Nick.\" I hissed at him. \n\nHe giggled maddeningly. \"Sis, all I can say is, you guys have stamina.\" \n\nI stared at him, horrified. \n\n\"Don't worry, I put my headphones on when it was clear you guys were going in for the long haul. Didn't hear a thing after that.\" \n\n\"Hear what, darling?\" My mother asked, sitting down with her breakfast. \n\nI glared at Nick, who was clearly enjoying this much more than he should. \n\nNick almost choked on his cereal as he quickly said, \"House. Really.... uh... creaky.\" \n\n\"We didn't notice anything in the master bedroom down here Nick. Maybe it's just your room,\" my mother earnestly responded, causing Nick to dissolve into a fit of laughter. \n\nShe shook her head, \"there's always something funny for you, Nicholas. Finish your breakfast darling, Dad needs you to help out in the back when you are done.\" \n\nNick downed the rest of his cereal and loped off to the backyard. \n\n\"Now Jess,\" she said, turning to me, \"What time will you and Alex be setting off?\" \n\nI shrugged, \"Probably sometime after tea.\" \n\n\"Why don't you stay longer, dear? Drive back on Sunday?\" \n\n\"Alex's flight is on Sunday afternoon, we want to have some time in London before she leaves.\" \n\nMy mother sighed, \"What a pity -- it's been so nice having you both here.\" \n\n\"It means a lot that you invited her to be here with us,\" I said sincerely. It was true: my parents had unreservedly welcomed Alex as a member of the family. \n\nMy mother patted my hand, \"It is just so good to see you so happy. When will you see each other next?\" \n\n\"She'll be back a couple of times in September for meetings. I'll fly over for half term in October, and then we'll be here for Christmas for a little bit, but we might want to go somewhere warm as well -- we haven't quite decided.\" \n\n\"You must stop by and spend some time with us over Christmas. What about Alex's family? Will you be seeing them?\" \n\nI shook my head, \"Her siblings stop by New York every so often, but her parents have stated that she can't bring me with her if she visits, I'm afraid, so she's not going to see them.\" \n\nMy mother frowned, \"That is just such nonsense, Jessica. Why would they choose to be so narrow-minded?\" \n\n\"It's not an easy thing to accept mum. I'm just so grateful that you and dad have been so amazing.\" I gave her squeeze. \n\n\"Now I feel very cross for you, and especially for Alex. Tom, did you know that Alex won't be seeing her family for Christmas because they don't want to see her and Jess together?\" My mother glared at my dad as he tramped in from the back yard. \n\n\"Morning Jess,\" my father said as he ruffled my hair. \"What is it, Maggie?\" \n\nMy mother sighed, \"Alex's parents. They don't accept the relationship.\" \n\n\"Hm. Their loss, I suppose.\" My father started in on the newspaper. \"Where is Alex?\" \n\n\"She's still sleeping. Why?\" \n\n\"Oh, I promised I would take her round Grasmere today before you two left -- I said she couldn't leave without seeing it.\" \n\nI gave him a huge hug. \n\n\"What was that for?\" He asked, hugging me back. \n\n\"For being you, dad,\" I said, \"I'll go see if I can rouse Alex. She'd sleep half the day away if she could.\" \n\n<br /> ALEX \n\nI felt Jess's weight on the bed and then her hand on my thigh. \n\n\"Hiya,\" I mumbled. I stretched happily. \n\n\"Come down for breakfast -- Dad's raring to go -- something about taking you to see Grasmere.\" Jess bent down and kissed me. \n\nI nodded and grabbed her by her shirt. \"Come snuggle for a little bit.\" \n\nJess fell on top of me, laughing, \"no darling. Dad's waiting, and they know I came up here to get you. Nick heard us last night, by the way. Mortifying.\" \n\n\"Shit, really?\" \n\nJess nodded, \"I'm going to be very happy for us to be back in my place tonight. Come on love, off you go.\" \n\nI quickly pulled on some clothes and stopped by the bathroom before trooping downstairs. Maggie and Tom were in the kitchen, finishing up breakfast. Nick was carelessly attacking the backyard with a rake. \n\n\"Hello sleepy head,\" Maggie said, \"what'll it be?\" \n\n\"Uh, some tea and toast?\" I lowered myself into a chair. \n\nTom put his paper down, \"Alex, we should get going if we want to avoid the crowds -- starts getting noisy around 11.\" \n\nI nodded, quickly finishing up what Maggie put in front of me. \n\nAll four Wainwrights and I piled into the car and headed off. \n\n\"Welcome to 'the loveliest spot that man hath ever found,'\" Tom said as we approached the lake. We'd parked in the village and strolled to the lake. \n\nIt really was a breath-taking vista. \n\nTom and I had worked our way a little ahead of the others. \n\n\"Alex, where do you think this relationship with Jessica is going?\" \n\nI stopped and looked him, surprised by the bluntness of his question. Tom's eyes were gentle, but I heard the concern in his voice. \n\n\"It's only going to go where Jess wants it to go,\" I said. \n\nTom sighed, \"She's told you about James, I suppose?\" \n\nI nodded. \n\n\"I still don't really understand what happened,\" Tom continued, \"afterwards she didn't bring anyone home, didn't seem to really want to find anyone after that. Then you came along and it all changed.\" \n\n\"I don't know where this is going, but I know that I don't want it to end,\" I looked into his eyes, which were exact replicas of Jess's. \"I still feel like I'm dreaming sometimes when I wake up next to her.\" \n\nTom chuckled, \"I didn't need that mental image. No offense.\" \n\nI laughed, \"Sorry. Tom, I --\" \n\n\"Ech,\" Tom said as he clapped me on the back, \"Forgive a father for overstepping. You are adults. You don't need me barging in like this. Jess is as happy as I've ever seen her, and that's good enough for me.\" \n\nNot long after, Jess caught up with me, \"What were you talking about with my dad just now?\" \n\n\"He asked if I knew what happened between you and James,\" I said. \"I said yes, and he wanted to know what my intentions were...\" ",
        "Jess rolled her eyes. \"I can't believe he cornered you like that. Honey, I'm sorry.\" \n\n\"No -- don't be. He wasn't being obnoxious. He just -- he was just being a good dad.\" I said. \n\nShe took my hand as we strolled, \"So what did you say your intentions were?\" \n\n\"Oh, that I wanted to corrupt you with my deviant ways... something like that,\" I said glibly. \n\nShe smacked me on the chest. \"Seriously, Alex! What did you say?\" \n\nI chuckled, \"That I love you, and that this all seems like a dream sometimes it's so perfect. He backed off pretty quickly.\" \n\n\"Oh,\" she said, and was silent for a few moments. \n\nI squeezed her hand gently, \"For what it's worth, I think he pretty much gave us his blessing.\" \n\nJess looked surprised, \"He's quite keen on you then! You must have been doing something right. He's been prickly about people I've dated.\" \n\n\"I think you've been prickly about people you dated,\" I ventured, \"all the better for me... I might not have had a chance with you otherwise.\" \n\nJess fell silent for a while, then said, \"'It seems right now that all I've ever done in my life is making my way here to you...'\" \n\n\"Clint Eastwood. 'The Bridges of Madison County.'\" \n\nJess nodded.\n\n\"I think we've been making our way to each other. I'm glad we did.\" I gathered her in my arms.\n\n\"Me too,\" she held me close. I leaned forward and kissed her. \n\n*CLICK* \n\nJess broke away, \"NICHOLAS. Stop being such an ARSE.\" \n\n\"It's a really nice photo Jess. Thought you guys would like something from this trip,\" Nick was smiling openly. \"Come on, mum and dad headed back to the car the moment you guys started getting all gooey with each other.\" \n\n\"I can't wait until we're back down south by ourselves,\" Jess grimaced. \n\nNick laughed, \"Me too, Jess... me too...\" \n\nI shook my head, \"Sorry Nick, we really tried to be quiet.\" \n\n\"You were. I didn't hear anything last night -- I just like taking the piss out of her...\" Nick ducked as Jess tried to take a swipe at him. \n\n<br /> JESS \n\n\"What are you still doing on your laptop? Come to bed,\" I called out, as I finished the last bits of unpacking from the Lake District. \n\n\"Just taking a look at the photo your brother sent. It really is quite nice,\" Alex replied, \"you shouldn't give him such a hard time.\" \n\nI plodded out to the living room and stood behind Alex and peeked at her laptop screen. She was right, it was a beautiful picture of us. \n\n\"Alright, fine,\" I allowed, \"it's a nice photo.\" \n\nAlex leaned her head back against my body as she looked up at me, \"Tell him! He would love to hear that from you.\" \n\nI shrugged non-committedly. \n\n\"Well, if you won't, I will,\" said Alex, \"You guys obviously love and support each other -- why neither of you can say so outright is beyond me. But I'm not one to talk, my siblings and I fall in and out of touch as the seasons change.\" \n\nI kissed her on her head and snaked my hand under her shirt. I felt her heartbeat quicken as my hand slid lower. \n\n\"Can you compliment my brother's photography later, darling? I've been waiting a whole week to have some really loud sex with you.\" \n\n\"How loud, Jess?\" Alex teased. \n\nI gave her breast a squeeze, \"That all depends on you...\" \n\n\"You are going to give me performance anxiety,\" Alex protested mockingly, \"but I do have some tricks up my sleeve...\" \n\nShe stood up and threw me over her shoulder. I screamed in surprise. \n\n\"Put me down this instant, Alexandra!\" \n\n\"Oh bite me,\" she grunted, \"You know you want to.\" \n\nAlex marched us into the bedroom and lowered me onto the bed. \n\nI felt a now familiar rush of anticipation as Alex and I disrobed each other. Her arms, so strong and deft, enveloped me with authority. My legs were wrapped around her hips almost immediately, claiming her body as mine. \n\n\"I can't believe I have to leave Sunday,\" Alex murmured into my hair. \n\n\"That's just about forty eight whole hours of time for us to spend together. Alone. In private.\" I raised my eyebrows suggestively. \n\n\"Alone time is good,\" Alex swept her thumb across my lips. \n\n\"Hm... it can be very good, especially if you take your fingers... and put them right... there...\" \n\n<br /> ALEX \n\nI woke up on Sunday with a feeling of dread. I looked over at Jess and found her awake, staring at me, camera in hand. \n\n\"Good morning,\" I smiled, \"what's that for?\" \n\n\"Come here,\" Jess lifted her arm. \n\nOur heads next to each other, Jess turned the camera on and waited for the monitor to boot up. Image after image of me, sleeping. Nothing explicit, but close-ups and abstract shots that were very much in Jess's style. I felt so loved right then, but also slightly embarrassed. \n\n\"Uh... how many of these are there?\" \n\n\"Do you see how beautiful you are?\" Jess whispered. \n\nI couldn't think of anything to say. All my life, I've known that I've looked very different than how people expect women to look. 'Beautiful' was never a word I associated with my appearance. By the time I got comfortable with who I was and how I presented to the world, I just pretty much abandoned any interest in conforming to the expectations that word produced. To hear Jess use that word was jarring. And pleasing. \n\n\"What is it?\" She asked, her eyes lingering on a shot of my shoulder. \n\nI looked up at her, \"I would never have expected to hear anyone describe me as beautiful. But I like hearing you say it.\" \n\n\"Well,\" Jess said as she put the camera away, \"I will say it more often then.\" \n\nI rolled on top of her, singing, \"I'm so pretty... oh so pretty... oh so pretty, and witty, and gaaaaayyyyy!\" \n\nJess rolled her eyes, \"You are completely missing the point. You are NOT a wispy delicate beauty -- that is so not interesting to me. I'm reclaiming the word beautiful for butches everywhere. You are beautiful the way a waterfall is beautiful, the way the Grand Canyon is beautiful, the way a sunset is beautiful. It's not feminine, it's not masculine, it's both -- it's defiantly both -- it just is. And when you see it, it takes your breath away.\" \n\n\"Jessica Wainwright, when you talk like that, you just make me want to...\" I smashed my lips onto hers. \n\nShe smiled, \"Now you're getting the point. No, no, don't stop...' \n\n<br /> JESS \n\nI was starting to despise the Terminal 3 carpark. There was nothing to recommend it. After proving that we indeed had severe time management problems, Alex and I scrambled to get her to the airport. We didn't say it out loud, but we were probably both hoping that she'd miss the plane; no such luck. \n\n\"Don't leave me,\" I whispered as I watched her disappear into the immigration check point. \n\nI wandered blindly back to the car and drove home, not at all looking forward to the rest of the day. Or to the school term starting at Halsey. I couldn't bear driving home without Alex next to me; let alone the prospect of returning to a teaching schedule. \n\nI groaned as I thought about the fact that I was having the PE department over for supper that night. I had volunteered to host, thinking that it would take my mind off Alex's departure, but all I wanted to do was crawl into bed and let sleep overwhelm how much I was already missing her. \n\nIf this is what it feels like to not see Alex for two weeks, how the hell would I cope if she disappeared from my life? \n\n<br /> --Chapter 6: Here comes the Fall-- \n\nALEX \n\nSeptember was insanely busy at work as we put the final touches on the endless UK project. We finally submitted our proposal mid-month, and spent the last week and a bit following up with the client as they went through it. Even in its most horrendous moments, I'd come to feel a certain affection for the project. Without it, after all, I wouldn't have made that trip to London in May. \n\nHalf term was coming up, and I was looking forward to Jess's visit. My last few trips to the UK were so harried we barely got to spend time together.\n\nMy phone rang and interrupted my daydreams. Mona called me into her office, telling me she had a question for me. I was intrigued, knowing that it couldn't be a normal project-related question -- Mona usually shot those out over email. \n\nShe had a big smile on her face when I walked in. I raised my eyebrows with curiosity as I settled into one of the chairs in front of her desk. \n\n\"Some very good news to start the fourth quarter, Alex: we won the UK project!\" Mona beamed. \n\nI pumped my fist, \"That's awesome! Wow. Did the client just call?\" \n\n\"They sent over the engagement letter early this morning. This means we'll need to have some of the team relocate to London for the duration of the project starting next month.\" Mona looked at me meaningfully. \n\nI almost jumped out of my chair. \n\nMona smiled, \"You've worked on this since we hired you -- and you've done a great job. You get first dibs on whether you want to be on the team that moves across the pond. This may be the catalyst we have been looking for to open a London branch -- obviously early days yet, but it's now a real possibility. I've already got a couple inbounds from other corporates interested in talking to us -- we might get some really interesting follow-on projects from this.\" \n\nI was still trying to form words -- the excitement of winning the project was very quickly pushed aside by the unfathomable joy of being able to live in the UK with Jess. \n\n\"Why don't you go make that international call, Alex. I'll put your name on the list in the meantime.\" Mona winked at me. \n\nIt took all my self-control not to dance back to my desk. It wasn't until later that it dawned on me that I forgot to thank Mona for offering me the gig. \n\nIt took me three tries to punch in the right digits on my work phone -- my fingers were shaking and flying over the keypad too quickly to be precise. Jess didn't pick up -- I figured she must be teaching. \n\n\"Hey Jess, it's me,\" I stammered into her voicemail, \"listen, we won the UK project and I can relocate to London to work on it for six months, maybe longer! Just call me back, okay? Love you!\" \n\nFor good measure, I sent her a text as well: \"Got some good news -- check your voicemail. AM xo\" \n\nI texted Annie as well, and her reply was immediate, \"Don't leave me! I knew that Brit was going to steal you away from us!\" \n\nI grinned and wondered how I was going to be able to focus on doing any work for the rest of the day. \n\nWord of the mandate got around the office by around 11, and everyone was in high spirits. Many colleagues came over to congratulate me on my first project. I almost didn't notice that I hadn't heard from Jess until I got up to go for lunch. \n\nI checked my phone -- no messages from her and no missed calls. The only thing from Jess that day was the customary good morning text she sent me almost every day before I woke up. I tried her again. This time, her phone was off; her voicemail greeting immediately started playing. \n\nI left her another message, \"hey there -- me again -- you phone must have run out of juice or something. Call me when you get that other voicemail. Love you!\" \n\nWhen I still hadn't heard from her after lunch, I realised that perhaps my good news did not land the way I thought it would. \n\n<br /> NICK \n\nJess's phone buzzed again. I could see it was Alex calling. \n\n\"Jess, it's Alex calling.\" I held out the phone.\n\nJess was face down on her couch, immobile. I was staying over at Jess's for the weekend: my roommate's girlfriend was visiting from Spain and I was happy to cede our flat to them. When I arrived at Jess's place she was in a foul mood. \n\nAfter some prodding, Jess shared some details: Alex's job was bringing her to the UK for the short to medium term. I thought it was good news, but Jess was having an absolute cow over it. \n\n\"Jess, if you're not going to pick up, I will.\" \n\nTaking her lack of response as consent, I grabbed the phone, \"Hey Alex, it's Nick.\" \n\n\"Is Jess freaking out?\" Alex didn't even bother asking why I was the one who answered. \n\nJess peeked out from under her hair. I ignored her. \n\n\"If ignoring your calls and lying face down on the couch like a drunken sloth counts, then yes, she is.\" I said dispassionately, \"what the hell is going on?\" \n\nAlex sighed, \"We won the big UK project -- the one I've been working on since May -- and I'll be moving to London to work on it in the next month or so. I left a message for Jess about it. That's when she stopped taking my calls.\" \n\n\"Oh.\" I said. I glared at Jess, who hid her face again. \n\n\"Yeah,\" said Alex. \"Look, just tell her I'm not going to push her to talk to me. She knows how to reach me.\" \n\n\"Ok,\" I said. \n\n\"Nick, I know why she's freaking out. But I can't help if she won't talk to me. I'm just going to assume that she won't be flying over for half term, okay? I mean, I'd love for her to come visit, but I don't want to make it worse. She can call me when she's ready. The team will be moving over to London to start work some time in November, that's about all I know.\" \n\nAlex said all this very quickly, as if she'd rehearsed it and wanted to say it without meeting a lot of objections. \n\n\"I'll let her know, Alex. Sorry, mate.\" I heard Alex drop the call and turned to face my sister. \n\n\"What did she say?\" Jess mumbled after a while. \n\n\"She said you are an imbecile of the highest order.\"\n\nJess stared at me.\n\n\"Ok, fine. She didn't say that. She said that you know how to reach her, that she won't bother you anymore, but you can reach out any time you want.\" I spun her phone around on the table as I said it, and noticed that Jess was using the photo I took of them as her phone's wallpaper. \n\n\"Did she sound mad?\" Jess asked, still prone on the couch. \n\n\"She sounded hurt, Jess. Why are you being such a horses's arse?\" \n\n\"I don't want to talk about it,\" Jess said. \n\n\"I think you are being ridiculous.\" \n\nJess switched the telly on. \n\n\"You know I'm still sitting here, right? Switching that thing on doesn't make me disappear.\" \n\nJess stared at the TV, glassy-eyed. \n\nI put a hand on her arm, \"Don't crap all over this, sis. At least, not until you have given it a real go.\" I held up her phone, \"just call Alex. You guys are good together. Don't leave her hanging.\" \n\nJess stared at me for a moment, took the phone, slouched into her room, and slammed the door behind her. \n\n<br /> ANNIE \n\nAfter Alex finished with Nick, I managed to talk her into going out for brunch instead of moping around at home. She was in the shower when her phone rang. It was Jess. Without thinking, I picked up the call. \n\n\"Hello?\" I said, trying not to sound homicidal. \n\nThere was silence for a moment, before Jess said, \"Uh, who's this?\" \n\n\"It's Annie. Alex is in the shower,\" I spat out. \n\n\"Oh. Um. Can you let her know I called?\" \n\nI rolled my eyes involuntarily, \"Why? You've been ignoring her all week. I don't know what you are planning on doing, but just know that what you are currently doing -- or not doing -- is crushing her.\" \n\nJess paused for a moment, then said bitingly, \"Thanks for playing the loyal Rottweiler, Annie, but this is between Alex and me. I'll give Alex a ring later.\" \n\nROTTWEILER?? DID SHE JUST CALL ME A BITCH? \"Thanks but no thanks for the Rottweiler reference, Jess. And from where I stand, there's nothing going on right now between Alex and you. And that's fucked up. She deserves so much better than that. So don't call again unless you have something useful to say.\" \n\nI hung up, fuming. \n\nLooking up, I saw Alex staring at me with her mouth open. \n\n\"That was Jess. I gave her a piece of my mind.\" \n\nAlex furrowed her brow, \"Yes, I heard.\" \n\nMy bravado evaporated. \"She's being so selfish. And she's making you feel terrible...\" \n\n\"She's working through a lot of bad history. Cut her some slack, Annie. I should call her back.\" Alex said quietly. \n\nI shook my head, \"No -- she has to do the work here. Not you.\" \n\nAlex reached for her phone. I stuffed it in my pocket. \"I don't get it. You are just going to let her keep you dangling while she sorts her shit out? It's not a relationship if she goes AWOL every time she has a flashback.\" \n\nAlex sighed, \"That's not fair -- you've seen us together the past five months -- it hasn't been like that. She just needs some space.\" \n\n\"You don't have to be so noble, Alex. Sometimes, you can't fix everything. I mean, I know this is the woman you've been pining for since dinosaurs roamed the earth, but she's being really awful to you right now. Can you acknowledge that at least? Walk away, before she totally stomps all over your heart.\" \n\n\"I am not walking away, Annie. She'll come around. I know she will.\" \n\nI made one last attempt, \"How do you know that? Al, it's fine to be in love and selfless when the other person feels and acts the same way. But it's not fine when the other person gets to disappear without regard to how you feel about it. Remember Olivia?\" \n\nAlex's eyes flashed with anger for a second, \"Yes. I remember what happened with Olivia. I also know the difference between her and Jess, Annie. Stop with the preaching, ok?\" \n\nI nodded and gave her a hug, \"Just promise me you'll make her earn it if and when she eventually tries to make it up to you.\" \n\nI knew it wasn't fair of me to bring up the past. Olivia and Jess were worlds apart. But Alex hung in for too long with Olivia -- even when it was clear Olivia was using her for some manipulative mind-games with Amy. But I wasn't going to let Jess get away with thinking she could walk all over my best friend. \n\n<br /> ALEX \n\nAs I sat at the table with half a dozen other friends later that morning, I tried to keep Jess out of my mind. It wasn't working. I was doing my best to not go down the rabbit hole of what-ifs. I wondered if I should be fighting harder for this to work. Jess and I have had a small number of arguments, and if those were any precedent, harping on the issue was not going to help. When Jess needed her space, she needed it. \n\nA piece of bread hit me in the face. \n\nJo grinned, \"Hey, Mak, stop daydreaming about your lady love and tell us about this big deal you guys just won at work.\" \n\nOnly Annie knew about Jess's temporary departure from radar contact, and the look on her face was enough to tell me that she was ready to broadcast Jess's transgressions at the slightest provocation. \n\nI shrugged, \"We pitched a strategic re-org to this big corporate client in London -- one spin-off, one sale, massive share repo for the parent-co. They picked us to execute, so we are going to be there to get it started. It'll be at least six months, very likely more.\" \n\n\"Wow, congrats, Alex. That's a really great result. I know you were working crazy hours ahead of the pitch. Glad it worked out. Jess must be psyched, huh?\" Michelle high-fived me. \n\nI nodded, watching Annie's eyebrows almost reach the top of her head. \n\n\"Can we come visit?\" Jo asked, \"wait, where will you live? With Jess?\" \n\n\"Oh -- my cousin Terry has a flat in London. I'm going to sublet it from him -- it's closer to work.\" A clumsy dodge, but it worked, \"And yes, you can come visit. The exchange rate sucks right now though, so get ready to exist on baked beans and toast.\" \n\n\"Oh good! I can go stalk Prince Harry.\" Ian wiggled his fingers together with glee. \n\nI grunted derisively, \"Ian, you are probably on James Bond's kill-on-sight list from the last time you tried to scale the palace gates.\" \n\nAs everyone clamoured for Ian to retell the story, I was grateful for the diversion away from talking about my move to the UK. I knew that there was a possibility that I could arrive in London without Jess being in my life, which would be gutting. I was already walking around, half-mad with longing. So I just couldn't let her go. Not yet, anyway. \n\n<br /> JESS \n\nI knew I was screwing things up. Alex, true to her word, gave me my space. I wondered if I would have felt better if she kept hounding me. ",
        "Half term arrived and the girls poured out of the school gates for the week-long break. I was supposed to have flown to New York, but my inaction left me at my parent's place for the break. \n\nNick had filled them in on the drama of my making. They were all surprisingly gentle when I arrived, which left me feeling even more stupid and panicked all at once. \n\nNobody broached the subject until the last night I stayed over. \n\n\"Jess dear, how did you leave it with Alex?\" my mother asked. \n\nNick sighed dramatically and put his headphones on.\n\nI was sprawled out on the couch in the living room. \"I haven't spoken to her... yet.\" \n\nMy father lifted his eyes up from the book he was reading. \n\nI blushed, \"I know. It is not the best thing to do. But I panicked. I'm panicking. Now I can't bear the thought of talking to her about this. Because I can't really explain it. Well, I kind of can, but it doesn't make it any better.\" \n\nMy parents just looked at me, confused. \n\n\"It's just all happened so fast it seems. And things that happen fast just don't always work out. So when Alex said she was going moving over here, it just seemed like it was moving even faster and everyone would expect that we would be a thing. And that's when things usually fall apart.\" I was blabbering. \n\n\"Ok, so what if it falls apart with Alex? Is this current situation any better than that?\" My dad put his book down and stretched out his legs, \"because it seems to me that you are not spectacularly happy at the moment. And neither is Alex, probably.\" \n\n\"Hitting pause is better than breaking up. Which is what we are doing right now,\" I said, trying to sound convincing. \n\nMy mother arched her brows, \"You hit pause, Jessica, not Alex. And you didn't tell her you were doing so or why.\" \n\nI sat up, \"Ok, so fine. But Alex knows. She understands why.\" \n\n\"And doesn't that count for something?\" my father said. \n\n\"What do you mean?\" I asked. \n\n\"That you know that she understands you -- even when you've shut her out and she has every reason to write you off?\" \n\n\"Wait, you think she should leave me?\" I almost shrieked. \n\n\"Jess, listen to me. Look at me,\" my father said. \n\nI reluctantly looked him in the eye. \n\n\"I didn't say that she should leave you. My point is you are operating on your belief that Alex understands you and is waiting for you to sort this out. But you haven't actually told her what's going on, have you? Have you thought about the possibility that she thinks you've left her?\" \n\nI was sweating I was so agitated. I hadn't thought of that. \n\n\"I don't know what the hell I'm doing.\" \n\nMy mother's arms were around me as my sobs came out in ragged spurts. \"Lovey, it does feel like an awful muddle, doesn't it? So let's keep it simple: are there any reasons why you don't want to be with her?\" \n\n\"Because I'm bad at this. I mean, look what I did! I should be in New York right now.\" \n\n\"So you are making a mess of things because you think you'll make a mess of things anyway. Well, that's a self-fulfilling prophecy if I ever saw one.\" \n\n\"Look, I thought it was all going great with James. He -- obviously -- disagreed. Maybe he never liked me in the first place and was just going along with it all until he couldn't any more. Alex is moving to the UK. It won't take her long to figure out being with me is not what she thought it was going to be and then it's just going to crash and burn.\" \n\nMy father shook his head, \"Jess, first you say it's moving too fast, then you say it's about Alex not really loving you. That's the biggest load of tosh I have ever heard, and you know it. Just pull your head out of the sand, call her, and make it right.\" \n\nHe took a deep breath, \"Jess, she loves you. Anyone can see that.\" \n\nMy mother gave me a squeeze, \"Poppet, does Alex make you happy?\" \n\nI nodded, smiling in spite of myself. \n\n\"So why are you here with us, instead of there with her?\" \n\nI shrugged, \"Because she probably already hates me. All her friends do.\" \n\n\"Well then, I guess you'll just have to find a convent and plant tomatoes by yourself for the rest of your life.\" My father had a hint of a smile on his face. \n\nI rolled my eyes. \n\n\"Do you want to fix this?\" My mother asked. \n\n\"Yes,\" I said as quietly as possible. I am a fucking idiot. \n\n\"Well,\" said mum, \"the obvious next step is to extend some sort of apology to Alex, accompanied by severe grovelling. But if I've read Alex right, you won't have to do a lot of that.\" \n\n\"I thought 'love means never having to say you're sorry.'\" I pouted.\n\n\"Who came up with that pile of shite?\" Nick grumbled.\n\n\"I thought you had your headphones on, you philistine!\" I shouted as Nick shuffled out of the room.\n\nMum gave me a kiss on my forehead, \"Jess, call her. Make it right.\" \n\n<br /> ALEX \n\n\"Annie, can you stop reading Harry Potter and please focus on packing this shelf up?\" \n\nAnnie was sitting next to my bookshelves, engrossed in the first book of the series. \n\n\"Oh my god, I didn't know these were this good. Did you have four-poster beds at Halsey?\" \n\nI rolled my eyes, \"Yes. We had four-poster beds and we flew to classes on brooms, we had food served to us by fricking elves and Maggie Smith was our headmistress. Jesus. No, Annabelle. We had beds that were barely flat on a good day, food that was boiled to death by someone who thought cooking didn't need any skill, and the only \"magical\" ability our headmistress had was showing up in our common room at the precise moment one of us started talking smack about her.\" \n\n\"Okay, okay. Sensitive, much? Can I borrow the whole series though? You were going to pack these anyway.\" \n\n\"Fine. I've done all the rest of the packing. Can you PLEASE help me finish packing the bloody books? I promised I would clear one set of shelves for Lucy.\" \n\nI rented out my apartment to Lucy, a family friend. She'd been living with her parents in Queens and I cut her a deal. Terry was letting me stay in his place in London for a song, and I was more than happy to pay it forward. Lucy hated her commute to Tribeca. This would eliminate an hour of travel time for her each way. \n\nAnnie commandeered a box and started packing at a funereal pace. \"I forgot you had this many books when I volunteered. I should have offered to pack your shoes.\" \n\n\"I'm bringing all four pairs with me,\" I said. I looked at her face and realised she was teasing me. \n\nI made a face at her, \"I'm going to put these other boxes in the basement. Back in a tick.\" \n\nWhen I came back up, Annie had cleared out the shelf and four boxes stood neatly by the door. \n\n\"Do you want to bring this... or...?\" Annie paused, holding up a framed photograph of me and Jess. \n\nI took the frame from her and stared at the photo. Deep, painful longing welled up. \n\n\"... or maybe smash it into a million pieces?\" Annie finished hopefully. \n\nI glared at her. \"Annie, she'll come back.\" \n\nAnnie crossed her arms, \"You don't know that. Does she even know you are flying out tonight?\" \n\nI said nothing. \n\nShe threw her hands up, \"Get over it, Alex! If someone walked out on me and didn't call for weeks afterwards, you'd tell me to get over it.\" \n\n\"She didn't walk out on me. And she did call -- you picked up, remember? And told her not to call back!\" \n\n\"If I fucked up with you, I'd chase you around the world to make it ok again.\" Annie said, \"You deserve so much more. Jess isn't even trying.\" \n\n\"How do you know?\" I snapped, feeling defensive for Jess.\n\nAnnie was right, there was nothing to indicate that Jess would come back. All I had was hope, and a gut feeling that she was struggling with this; I just had to wait. \n\n\"I don't,\" Annie allowed, \"but I don't want you to end up alone and bitter. I mean, Sienna was ready to pledge her love in marriage to you last night, Alex.\" \n\nMy stomach tightened. My friends threw me a farewell party last night; I got a little drunk, Sienna got a little drunk. She proposed a no-strings-attached \"private send-off\" as the party wound down. I declined. I guess Annie must have witnessed all or part of that exchange. \n\n\"I don't love Sienna, Annie, I love Jess.\" \n\nAnnie shrugged, \"Sienna was right in front of you. Jess was nowhere to be found.\" \n\n\"A., she was tipsy. B., I don't do one-night stands. C., I love Jess! I don't want to be with anyone else! Get it?\" \n\nAnnie looked at the photo of Jess and me, \"I get it, Alex. Promise me one thing?\" \n\nI raised my eyebrows, \"Depends on what it is...\" \n\n\"Don't go running into the hills of England looking for Jess in the driving rain only to fall ill with consumption. I'm not coming to attach leeches to your body while you cling to life in a feverish haze.\" \n\nI snorted. \n\nAnnie giggled. \"Oh my god. You, as Marianne Dashwood, with golden ringlets, prancing through the hills and vales of... wherever they were... in a dress...\" \n\nI had to laugh. \n\nAnnie handed me the photo, \"I just don't like seeing you hurt.\" \n\n\"I know,\" I gave her a hug, \"I love you too. Let's get the rest of this stuff down to the basement before Lucy gets here. Still want to have dinner before I leave for JFK?\" \n\nAnnie nodded and waved her arms hopefully at the boxes, \"Wingardium leviosa!\" \n\n\"As Sam Seaborn said on 'The West Wing,' we'll 'overlook the fact that you're coming late to the party and embrace the fact that you showed up at all.' You're going to love the rest of that series.\" \n\n<br /> --Chapter 7: London-- \n\nJESS \n\n\"It's Friday!!!!\" Cathy sang as she walked into my office. \n\nI grunted. \n\n\"What's wrong?\" \n\nI grunted again. \n\n\"Grunt once if you are choking, grunt twice if it's something else.\" Cathy scowled at me. \n\n\"I think Alex has a new girlfriend.\" Tears started springing from my eyes. \n\n\"WHAT? WAIT. Hold on!\" Cathy said, shutting the door, \"start from the beginning.\" \n\n\"Alex told me she will be moving to the UK later this month. I freaked out.\" I sobbed. \n\nCathy spun her forearm in circles. \"Yes, yes, yes, we know all that. What happened today?\" \n\n\"I just tried to call her mobile... you know, to apologise and patch things up... It went to voicemail. I called her at work. It went to voicemail. And...\" \n\nI burst out crying again. Cathy exhaled impatiently. \n\n\"And... when I called her flat, a woman picked up. I didn't recognise her voice. I think I woke her up. I panicked and hung up.\" \n\nI looked up at Cathy. \n\nShe took a deep breath, \"Ok. I don't think that necessarily means that Alex has a new girlfriend.\" \n\n\"Cathy, it's 7 in the morning in New York. Why would a WOMAN PICK UP ALEX'S PHONE AT SEVEN IN THE MORNING???\" I wailed. \n\nVisions of Alex sharing a bed with this person flooded my imagination. \n\n\"First, stop shouting. You are going to scare the children. Second, call her back,\" Cathy said bluntly, \"bite the bullet. Better to find out sooner rather than later.\" \n\n\"She probably snuggled back into Alex's arms after I dropped the call. They're probably having sex right now.\" I couldn't breathe. This was all my fault. \n\n\"Oh for the love of all that's good and holy. Get a grip! Just call her.\" Cathy was firm. \n\n\"NO.\" I shook my head. I could feel sweat breaking out everywhere. The office felt too bright. I just wanted to die. \n\n\"Maybe Alex has a friend who's staying over?\" Cathy suggested. \n\n\"Then why didn't that... that woman say so?\" \n\n\"Um, you hung up before she could?\" \n\nThat made sense. I felt slightly better. I put my hand on my phone. Cathy nodded her encouragement. \n\n\"Hello?\" It was the same sleepy voice that answered before. \n\n\"Uh, hi, sorry to wake you, but may I please speak to Alex?\" I eked out, my heart in my mouth. Please don't say she's asleep next to you... please don't -- \n\n\"She moved out,\" the woman replied. \n\nOH SWEET BLESSED RELIEF! Thank you to any and all deities who had a hand in this... \n\n\"Oh, ok. Do you know how I can reach her?\" \n\n\"I have her cell phone number if you want? Um, it's... hold on, let me find it on my phone... 646...\" \n\n\"Oh thanks -- it's ok, I have it. Thanks. When did she move out?\" \n\n\"Last week. She moved to the UK.\" \n\nI looked at Cathy. Alex already moved! \n\n\"Oh -- thanks again. Thanks! Sorry again about waking you up!\" \n\n\"What? She moved?\" Cathy asked. \n\nI nodded, \"Last week. She's already here. She moved last week. SHE'S HERE. CATHY!!!! SHE'S HERE!\" \n\n\"So... not a new girlfriend?\" Cathy smiled. \n\nI spun myself around on my chair, \"NOPE. Nope-nope-nope-nope-nope.\" \n\nI picked up my phone and dialed Alex's mobile. \n\nI frowned and hung up, \"Went to voicemail. Again.\" \n\n\"Do you know where she's staying in London?\" \n\n\"Well, she usually stays with me...\" \n\nI scrunched up my face when Cathy raised her eyebrows. \n\nYep. That's right. I'm an idiot. Oh god-y-god-y-god. Alex, where the hell are you? \n\n\"Who can you call to get her new contact information?\" Cathy wondered. \n\nI knew the answer before Cathy finished asking the question. \n\n\"Annie.\" I leaned forward and rested my head on my desk. Oh shit. \n\n\"Bite the bullet.\" Cathy leaned back and stretched. \n\n\"After lunch.\" I knew I was stalling, \"No point in waking her up. She's already going to rip me a new one. Better to wait until she's had her coffee...\" \n\n<br /> ALEX \n\nMy phone rang as I stepped out of the tube station. \n\n\"Hi Annie...\" \n\n\"Lucy called --\" Annie began. \n\n\"It's only been a week! What did she do to my apartment? I knew I shouldn't have sub-let it!\" I yelled as images of destruction flashed through my head. \n\n\"Shut up, you freakazoid,\" Annie shouted back, \"Lucy called to say that someone called your apartment this morning, looking for you. Lucy didn't have your UK cell, so she asked me for the number in case that person called back. Long story short, it was Jess, and Jess called me.\" \n\nI stopped walking, which elicited a couple of unsavoury words from those who had to suddenly navigate around me. \n\nJess finally reached out. After almost a month of nothing. \n\n\"Alex?? Can you hear me??? Are you there?\" Annie pulled me back from my shock. I scooted to the nearest shop entrance, still reeling from the news. \n\n\"Yes -- sorry. I'm just surprised she called. Wait, so did you speak with her? Why didn't she call me?\" \n\n\"She called your US cell. Went straight to voicemail, dummy. Anyway, she wants to apologise. She said she didn't want to email in case you ignored it because she had behaved so poorly.\" \n\n\"Did you behave when she called you?\" \n\nAnnie snorted, \"Please, you know me, queen of civility and all that.\" \n\n\"ANNABELLE -- come on!\" I shouted, \"What did you say?\" \n\n\"I did not exactly repeat my Oscar-winning Rottweiler performance, if that's what you are asking. She sounded awful, to be honest. I gave her your UK cell phone and address. We didn't really talk much beyond that.\" \n\n\"Ok. Thanks Bella-bear. I owe you one.\" \n\n\"Alex -- I know you've already forgiven her -- but please, don't let her think she can do this again, ok? You deserve better.\" \n\n\"Ok,\" I said again, about all I could manage at that point. \n\nAnnie rang off, and I stared at my phone for a while. It had taken all of my self-control to not have emailed or called Jess since her freak out. But I promised to give her the space she so obviously needed. Now, when it seemed certain that Jess would finally reach out, I allowed myself a flash of anger over her behaviour. \n\nI also knew Annie was right. Jess only needs to show up at my door, tell me she was sorry and I would forgive her. I resolved to play it cool -- hard to do under normal circumstances, but bloody near impossible when it came to Jess. \n\n<br /> JESS \n\nI stood outside number 35 on Alex's street, waiting for her to return. It was just after 3pm, so I wasn't expecting to see her for a while. \n\nAfter steeling my nerves to face Alex, I finished teaching my last lesson of the day and pretty much broke land speed records to get to her place. Loitering around outside her flat seemed more productive somehow. \n\nTo my surprise, I soon saw her familiar form, striding towards me. Seeing her after all this time apart made my breath catch in my throat. She was in her work clothes: a long coat over a grey suit, light blue shirt; crisp lines that accentuated those beautiful broad shoulders and long legs. Her sunglasses glinted in the late afternoon sun as she walked; she slowed as she spotted me. \n\nDespite my anxiety about how it might turn out, the sight of her thrilled me to the core. \n\n\"Hello,\" Alex said, fishing keys out of her pocket. \n\nMy heart was thumping in my chest, \"You don't seem surprised to see me,\" I heard myself say. \n\nAlex's face was impassive, her eyes hidden behind her shades. \"Annie told me you asked her for my number and address, so I figured I would hear from you soon enough. You are lucky Peter sent us home early for the weekend. Could have been a long wait.\" \n\nI nodded, \"Can we talk inside?\" \n\n\"Sure, come on in,\" Alex drove her key into the red front door and led me in. \n\nWe walked up two flights of stairs in silence. Alex remained mute as she unlocked the door to her flat. \n\nI followed her in; the place smelled like her. My chest tightened with desperate yearning. We still hadn't touched. \n\n\"So... what are you doing here?\" Alex asked, dropping her coat and messenger bag on a chair in the hallway. \n\n\"I came by to apologise.\" My voice shook, betraying my nerves. \"I shouldn't have left... uh, things the way I did. Shit, Alex, I shouldn't have left. I should have talked to you about it -- or at least have given you some warning. I'm sorry.\" \n\n\"Apology accepted,\" Alex said. \n\nShe threw me off-guard with her curt response. I had expected her to berate me the way Annie did. \n\n\"You came by to apologise. That's it?\" She took her shades off and glanced at me, her brown eyes masked with indifference. \n\nI moved towards her, but she shifted away from me and walked into the kitchen. This small rejection stung, and I felt tears spring to my eyes. \n\nI followed her, stopping at the kitchen entrance. I fiddled listlessly with the pocket door's latch.\n\n\"No -- that's not it...\" I had a speech all planned out, but the words wouldn't come, \"I mean, I really am sorry. I mangled it. Royally. Can we start over?\" \n\nUgh. That was clumsy. \n\nAlex wouldn't look at me, but busied herself with the kettle. \n\nI took a breath and continued, \"I have missed you so much. Please believe me. I just panicked when it seemed like we were going to move in together when you got to the UK.\" \n\n\"Well, I got this place, and you have your place, so no need to worry about co-habitation,\" she snapped, still not looking at me. \n\nI had heard Alex bark at people before, but never at me. I felt like I broke something between us. \n\n\"But that's just the thing -- I want to be with you. I just didn't want to believe that you did too, in case you changed your mind.\" I grimaced, \"It made no sense, but I still pushed you away. It was stupid, what I did. I wish I had it to do all over again.\" \n\nAlex left the kettle to boil and walked past me into the living room. \n\n\"Alex, please say something. Can you look at me, at least?\" \n\nAlex sighed as she lowered herself onto the couch and finally made eye contact. All I saw was hurt and anger. \n\n\"Let me make it up to you,\" I said kneeling in front of her, \"I'll spend every day from now on making it up to you.\" \n\nAlex shook her head. \n\n\"I want to,\" I said, reaching out to touch her forearm. \n\nAlex pulled her arms away and rubbed her eyes, \"No, really. Stop, Jess.\" \n\nMy heart sank. \"Stop what?\" \n\nAlex covered her face with her hands and sighed. \"This conversation. It's really not working for me right now. So just stop.\" \n\n\"But... Alex, why?\" I felt my stomach churn. My tears left hot streaks down my cheeks. I didn't care. \"Please Alex, look at me. Why can't we try and talk through this?\" ",
        "\"I don't want to talk anymore, Jess.\" Alex shook her head slowly. \n\n\"Oh, darling Alex,\" I pleaded. \"why not?\" \n\n\"There's no point in having this conversation.\" Alex stared at me like I was a stranger. \n\nI crossed my legs and slumped over, burying my face in my hands. Alex got up and walked back to the kitchen. I heard her pouring water into a mug. I couldn't believe I had thrown it all away. \n\nI got up and headed back into the kitchen. If at first you don't succeed, try, try again. \n\n\"Don't say there's no point,\" I ground out, trying not to be overcome with sobs, \"I know I cocked it up. But please don't say there's no point. I... I... need you.\" \n\nOh god, that sounded pathetic. \n\nAlex leaned back against the counter and crossed her arms, \"Ok. How about this, then: I'd rather not have this conversation.\" \n\nI hardly recognised the person uttering those words. \n\n\"Why not?!\" I shouted at her. \"I want to have this conversation! I want... ARGH! Alex, you always said we can talk things out. Why not now?\" \n\n\"It's a waste of time.\" Alex looked down. I couldn't read her face. It was horrible. \n\n\"I don't believe you,\" I spat out, \"I don't believe you think that.\"\n\nI walked right up to her, \"Look at me and tell me why you think this is a waste of time.\" \n\nAlex suddenly pulled me into her arms. \"Because,\" she said, leaning in until her lips brushed my ear, \"It's getting in the way of us having some crazy make up sex.\" \n\n<br /> ALEX \n\nJess was still for a couple of seconds before she started hitting me on the shoulder, \"Oh you horrid, horrid woman, making me think you wanted to break up!\" \n\nI pulled her back into my arms and shook my head. \"Never.\" \n\nJess said nothing, but grabbed my face and kissed me, our tongues eager emissaries of our desperate need to re-unite. This. Her taste. Her lips. This. Her desire... for me. More... I want more. We breathed each other in, clinging tightly together. Tears sprung from my eyes from joy and relief. Our faces were a mess of tears and snot and saliva. \n\nI ached to feel her skin against mine; Jess must have had the same urge strike her. \n\nJess's hands flew everywhere, undoing buttons scattershot. I hastily fumbled with her jeans, grunting in frustration while trying to shrug off my jacket. \n\n\"Whoever invented the zipper ought to be shot,\" she muttered as she fought with my trousers. \n\n\"I think it was a Swedish chap called Gideon\u2014mmph--\" Jess cut me off, smothering my mouth with hers as I felt her pulling down my trousers and boxers. \n\n\"Yeah, ok, never mind,\" I flung off her jumper and shirt. \n\nMy hands shook with need as I placed them on the slight flare of her hips: the perfect starting place for their journey north.\n\n\"Hmmm, I've missed your hands on me,\" Jess cooed. \n\nI nodded, my eyes glued to my hands' slow sweep along Jess's smooth toned stomach to the underside of her breasts. \n\n\"Alex...\" Jess whispered, biting her lower lip, \"please, touch me...\"\n\nI swept my thumbs across the soft grey cotton of her bra, thrilled to feel the bumps of her nipples through the fabric. Jess whimpered.\n\nOh, I get to do this again. Thank fuck I get to do this again.\n\nI leaned in and nipped her neck as I unclasped her bra. Jess impatiently discarded it. She let out a slow breath through her teeth when I caught her breasts in my hands. Her firm warm flesh spilled into my fingers; I felt zings of pleasure as I pampered them with attention. \n\n\"Angry Alex is scary Alex, I'm sorry I hurt you,\" she closed her eyes and pressed her breasts into my palms. \n\n\"I'm sorry I scared you. Never again, I promise,\" I murmured as I ran my tongue along her delectable cleavage. \n\nJess let out a low deep growl. Without warning, she pulled me downwards. I laughed as I tumbled to the floor with her.\n\nI quickly made my way down her body, eager to taste her.\n\n\"Oh no, you don't,\" Jess said, \"me first... I fucked up.\"\n\n\"Don't care,\" I declared. \n\nI had aleady caught a sensuous whiff of her arousal, and wild horses couldn't have pulled me away. I grabbed her thighs and pushed them apart; my mouth descended like a heat-seeking missile.\n\n\"HOLY FUCK! OH YESSSSSSSSSS!\" Jess yelled. Keep screaming, Jess, I'm not stopping until you pass out.\n\nI'd never had make up sex like this. It was like we were in a fight to the death to make each other come more times than the other. There were no post-climax interludes. Sex here, sex there, sex pretty much every where. \n\nI felt her throb against my tongue as she came one more time. Her legs tightened around me before they collapsed onto the couch. Jess's eyes were closed and she had a slight smile on her face. I stared in awe at how sexy she was. \n\nI shifted myself up and lay on top of her as she recovered. \n\nI watched Jess's long brown lashes flutter as she tried to open her eyes. \"OK. Pause. Time out. I can't move anymore,\" she whispered, a mega-watt smile was slowly emerging. \n\nJess wiggled her body underneath mine. Her eyes opened and I fell into a luminous green ocean with flecks of gold. \n\n<br /> JESS \n\nI couldn't believe we were back in each other's arms again. I was home. \n\n\"Alex, I'm sorry,\" I began. \n\nShe kissed me and rubbed my nose with hers, \"I know you are. This past month really, really sucked. But I knew why you freaked out. And I hoped that you'd come back.\" \n\n\"Annie told me you could have your choice of women, and I didn't deserve a second chance.\" My voice caught. \n\n\"Well, it's a good thing you aren't dating Annie,\" Alex said lightly. \n\n\"She hates me.\" I sighed as Alex rested her head on my chest.\n\n\"Nah, she's just being protective. I think she hissed at Olivia under her breath for an entire semester after Olivia and Amy got back together. You gotta give her points for loyalty.\" \n\n\"She said Sienna would never have left you,\" I said diffidently. \n\nAlex sighed, \"I'm going to strangle Annie the next time I see her.\"\n\nAlex propped herself up on her elbows. \"Annie is probably one of the few people who knows my history with you. She knows the way I feel about you. She just didn't want me to pine for you for the rest of my life if it wasn't going to work out.\" \n\n\"I thought you met someone new,\" I confessed, \"when I called your New York number earlier today, a woman picked up... I thought...\" \n\n\"That woman,\" Alex said, landed soft kisses all over my face, \"was Lucy, my sub-lettor. Very straight... and very not my type.\"\n\n\"You have a type?\" I asked, begging for validation.\n\nAlex nodded, \"Platinum blonde, ice blue eyes, over six feet tall, preferably from some Nordic country, massive boobs.\"\n\nI pushed her off me and threw a pillow at her, \"Oh! You are being so vile to me!\"\n\nAlex easily swatted the pillow away, \"You were fishing. Oh Jess, I'm sorry... I was just kidding.\" \n\n\"No, I'm being childish. Sorry.\" I moved over and sat down next to her, \"Are we ok?\"\n\nAlex nodded emphatically. \n\nI nuzzled into her shoulder. \"Hm... nice flat, by the way.\" \n\n\"It's Terry's... well, it's my family's, but he uses it the most. Come on, I'll give you the five cent tour.\" Alex grabbed my hand and pulled me up. \n\n\"The neighbours are going to get an eyeful,\" I mused as we traipsed naked through the house. \n\nAlex raised her eyebrows, \"I think they probably already did if they were going to peek. But don't worry, most of the windows are shaded. So that's the kitchen, bath, bedrooms through here... pretty compact, but exactly what I needed.\" \n\nI wandered into the bedroom, minimally decorated except for a large book shelf full of books and photos of what looked like Alex's extended family. On the bedside table, there was a photograph of me and Alex in a simple silver frame. I remember when Nick took that picture over the summer. I was laughing at my dad, who was off camera; he'd just accidentally sprayed himself with the garden hose. Alex was standing behind me, arms around my waist, gazing at me and grinning. Guilt washed over me anew. \n\nI turned and buried my face in Alex's shoulder. The tears just started flowing. Alex held me without a word. \n\n\"I should be the one comforting you after what I did...\" I sniffed. \n\nAlex reached for a tissue, \"Here. Don't talk like that.\" She kissed the top of my head. \n\n\"How are you so good at this?\" \n\nAlex sighed, \"I'm not. I just know that I love you. And that I really love being with you, and given that you are here, I know you feel the same, so as long as those things are true, I'm not going to worry too much.\" \n\n\"You are a clever old thing.\" I flopped onto the bed. \"So what do we do now?\" \n\nAlex laid down next to me, \"nothing we weren't doing before. Except we are not on different continents, and you are not ignoring me.\" \n\n\"Annie said I was crushing you,\" I looked at Alex, \"I don't think I can forgive myself.\" \n\nShe rolled on top of me, \"Don't beat yourself up. Just talk to me. I have infinite capacity when it comes to listening to you talk.\" \n\nSo I took a deep breath, and I talked. I told Alex everything. It was as if I turned myself inside out. And she listened patiently as I unravelled half a decade's worth of heartache and loneliness I didn't even know I had been feeling until that moment. \n\n\"And now here you are, with me, even after I pretty much lost my shit,\" I concluded, \"you should hate me...\" \n\n\"Nope. Good try gorgeous. Still head over heels in love with you,\" Alex smiled. \n\nI scrambled on top of her, \"Lucky me.\" \n\n\"I think you ought to get in touch with James.\" \n\nI froze. \n\n\"There's too much unfinished business and it will do you both good to slay the ghost of that relationship once and for all.\" \n\nI sat up, shocked.\n\nAlex held my hands reassuringly, \"I think -- and I'm sure you'd agree with me -- that you're are still enormously affected by that break up,\" Alex replied, \"and justifiably so. Maybe talking to him about it and figuring out what happened would help you move on.\" \n\n\"You are really ok with me going to meet with my ex-fianc\u00e9?\" I asked incredulously. \n\n\"Well, between now and then, I plan on giving you lots and lots of reasons to not forget who's waiting for you at home when you go meet with him.\" Alex pressed her hips suggestively against mine. \n\nI pressed back, \"I'm a very slow student, so I will need a lot of help... and lots of remedial sessions to remember all those reasons...\" \n\n<br /> --Chapter 8: Loose Ends-- \n\nJESS \n\nI kissed Alex goodbye and set off for the coffee shop, nervously fidgeting with the buttons of my coat, my fingers oblivious to the December chill. \n\nIt took a couple weeks for me to track down James's contact information, and another long stretch of time before we found a mutually agreeable time to meet. \n\nI knew it was him before my eyes fully registered the shape and contours of his face. James still looked the same, with maybe a little more weight on his frame, but it suited him. \n\n\"James,\" I said, just loudly enough for him to turn towards me. \n\n\"Ah, Jessica! I just got here as well. Good timing.\" \n\n'Good timing,' was one of his favourite phrases. \"Shall we go in? Looks like there are a few tables free.\" \n\nWe settled into a two-top in the corner of the caf\u00e9 after putting in our orders. \n\n\"I was so glad you got in touch,\" he began, \"I had been wondering how you've been doing.\" \n\nI smiled, \"I'm very well. How have you been?\" \n\n\"Uh, I'm not doing too badly,\" he smiled back. \n\n\"Order for Jess, order for James, order for Charlie!\" yelled the barista. \n\n\"Good timing! I'll go grab them,\" James leapt out of his seat. \n\nI chuckled quietly, realising that one of the things that I had found so annoying about him now felt amusing. I was all of a sudden infused with a warm sense of calm. \n\n\"Here you go,\" James returned. \n\nI warmed my hands against the mug of coffee, studying James as he went through his ritual of putting in his precise mix of Splenda and sugar. \n\n\"So tell me, what have you been up to?\" He asked as he stirred his coffee vigorously. \n\nI shrugged, \"Not much, school's been the same. Been doing some travelling, saw my parents couple weeks ago.\" \n\n\"Oh, how are they? I really, really liked your parents. Such kind people.\" \n\nI nodded, \"They are well. They were surprised that we were meeting up.\" \n\nNeither one of us spoke for a while. \n\n\"So what happened, James? What went wrong?\" \n\nJames let out a long, deep, breath, \"Me. I felt the pressure of 'doing the right thing,' of having to 'move the relationship forward' and all of a sudden, I felt that we were both on this conveyer belt tumbling towards a wedding that I'm not sure either one of us wanted.\" \n\n\"Why didn't you just tell me?\" I asked, fully comprehending the irony of my asking such a question. \n\nJames shrugged. \"I couldn't explain it. It felt like I needed to just disappear for me to be free from the conveyor belt. I just felt like everybody else seemed to think it was the right thing, which made me feel like I had to get as far away from it as possible. It was wrong of me. But I couldn't think straight. It had nothing to do with our relationship, or whether I wanted to get married, or any of that.\" \n\n\"Oh.\" \n\nJames leaned forward, \"I wondered for a long time if you'd forgive me, and if you'd understand. But then time passed and I felt that I missed the opportunity to raise it with you. But I regret what happened. I regret it because I realised, much later, that what I thought was pressure -- pressure on me to just go along with what everyone wanted -- was not actually pressure, but corroboration. That everyone just saw and felt what I felt, and supported what I wanted.\" \n\nJames's words struck me like a lightning bolt. I hadn't misread him... or our relationship. It was a story he made up in his own head that had nothing to do with me. I wasn't bad at this! He was!\n\n\"Are you ok?\" James asked with concern, \"did I say something wrong? I know I have a lot to apologise for, but I never knew how to start.\" \n\nI reached out for his hand, \"Oh, dear James, you don't have to apologise. Water under the bridge. I hope you can find some peace with this. I certainly have.\" \n\nJames smiled, \"Oh good, I was thinking that maybe we can...?\" \n\nI shook my head, \"We can be friends. But just friends. I've met someone, you see. Actually, re-met, I suppose. It's someone I've known for a good long while.\" \n\n\"I've never seen you smile like that for any one,\" James said. \n\nI didn't even know I had been smiling. \n\nI reached into my pocket and retrieved the engagement ring James had given me. I placed it in his hand, and gave it a squeeze. \n\n\"Who is he?\" James stared at the ring. \n\nI smiled wider, \"It's not a he. Her name is Alexandra. Alex.\" \n\nJames looked stunned. \"Oh.\" \n\nWe sat in silence as I watched him digest the news. \n\n\"You love her?\" James stirred his coffee. \n\nI nodded. \n\n\"She loves you?\" \n\nI nodded again.  She loves me!\n\n\"Love is good,\" James now looked quite sad, \"I'm happy for you.\" \n\n\"Thank you for coming to meet me.\" \n\nJames nodded, a faint smile playing on his lips. \"You are an enchanting woman, Jess. Alex is very lucky. I was a fool, walking away like that.\" \n\n\"You had your reasons.\" \n\nJames shook his head. He finished his coffee. \"Well, there we are. I want to say that we should keep in touch, but I'm not sure I am ready quite yet.\" \n\nI nodded, \"You know how to reach me.\" \n\nWe both stood, and I gave him the warmest hug I could muster. \n\n\"Bye, Jess.\" \n\nI flung open the caf\u00e9 door and raced back to Alex's flat. I fumbled with my keys, desperate to get through to the apartment. \n\nAlex was sprawled on the sofa in the living room, reading the paper. She looked up as I tumbled into the room. \n\n\"That was quick. How was it with James?\" \n\nI leapt onto Alex and kissed her. \n\n\"Hmm, so I gather that James did not try to win you back?\" Alex raised an eyebrow. \n\nI laid my head on Alex's shoulder, \"I didn't give him a chance to. I just wanted to be back here with you.\" \n\n\"I'm very happy you came back,\" Alex picked up the paper and resumed reading over the top of my head. We stayed like that for the next little while, with me listening to Alex's steady breathing as she read. \n\n\"Do you want to talk about it?\" Alex whispered as she put the paper down. \n\nI lifted my head up and gazed at her handsome face, \"There's a lot to think about. Poor James, he ran away and didn't know how to come back. Now it's too late. I'm just relieved that you waited for me to come to my senses.\" \n\n\"Well, don't tell Annie I said this, but sweetheart, I would have waited forever,\" Alex confessed. \n\n\"I would have, too,\" I replied. \n\n\"Really?\" I felt Alex's heartbeat speed up. \n\nMy stomach fell; she didn't believe me. \n\n\"Hey,\" I slid my hands under her shirt, \"I know I went off the grid for a little bit. But I'm back. I'm all in. I promise. I love you. I got freaked out when you told me about the move. I was so excited, but then I got so scared that what happened with James would happen all over again with you -- that my expectations weren't realistic... that I couldn't trust my feelings in any of this, and maybe you didn't feel the same.\" \n\nAlex didn't say anything. \n\n\"James left because he felt like he was a pawn on a chessboard, it had nothing to do with me,\" I continued, \"I know that now. I'm sorry it took me this long to figure out. I'm sorry I disappeared on you exactly like he did on me.\" \n\n\"I believe you,\" Alex said, \"but I don't think it's the same. Three reasons...\" \n\n\"First,\" she kissed me on the nose, \"you came back.\" \n\n\"Second,\" she kissed me on the lips, \"We talked about this. We both knew you had some stuff to work out. So while it was totally shitty to live through, I knew why, and I knew you'd come back to me.\"\n\nMy heart was dancing a jig. Oh, you are going to get some good loving, Alex Mak.\n\n\"And the third reason?\" I asked, resting my forehead on hers.\n\nAlex paused, then said, \"I knew you couldn't live without my spaghetti carbonara.\"\n\n\"What?\" I was confused, \"You've never made that for me once!\"\n\nShe chuckled, \"I know. Sorry. I couldn't come up with a third reason. Spaghetti carbonara was -- bizarrely -- the only thing that came to mind.\"\n\n\"You are a nut job.\" \n\nAlex shrugged in resigned agreement.\n\nI moved my hand over her heart, \"A nut job that I want in my life. Always.\" \n\n\"Really?\" Alex asked again. \n\nI got up from the couch and tugged at her shirt. \"Ok. I'm not getting through. Let's try and get that message across another way...\" \n\n<br /> ALEX \n\nJess shifted off me and slowly walked out of the living room. \n\nWhere is she going with this?\n\nShe looked over her shoulder at me, winked, and started taking off her clothes. \n\nI quickly followed, my heart thumping with desire. I found her in the bedroom, fully undressed and waiting for me by the bed. \n\n\"Lie down, love,\" she said, patting the bed. She reached into the closet and took out a couple of my ties. \n\nI complied, already feeling incredibly aroused. She started undoing my fly, and swatted my hands away as I reached out to touch her. \n\n\"Let me do this,\" she smiled, \"I'm going to show you how much I want you, and how I want you to be all mine.\" \n\nWhen she finished undressing me, she straddled my stomach. I sat up and tried to kiss her, but she pushed me back down. \n\n\"I believe you,\" I said, tired of being rebuffed and yearning to get my hands on her.\n\n\"Well, no, I don't think you do,\" Jess said, using a tone I hadn't heard in years, \"the teacher in me tells me I need to take a firmer hand.\"\n\nI tilted my head, titillated by the change in her demeanor. \n\n\"Arms up, Alexandra,\" she instructed. \n\nI stared at her. Her eyes flashed with mischief. And then she winked. She winked her sexy wink and before I knew it, my arms did as they were told.",
        "\"Thank you,\" Jess said crisply. She tied my wrists to the bed posts and blindfolded me. \n\nShe moved off me, but not before slowly trailing her fingers down the middle of my torso to my crotch. \n\nI felt her move off the bed, and heard her getting something off the dresser. She rubbed her hands together. Then I felt her warm, soft hands on my thighs, applying pressure. \n\n\"How are you doing, darling?\" Jess asked, her voice now low and sultry.\n\nI nodded. \n\n\"Now, you've had a long, long, week my love,\" she continued, \"so please relax so I can expound on some of the reasons why I say I want you in my life... always...'\" \n\nHer fingers kneaded and pressed along my legs. Every now and then, she'd sweep her hands up the inside of my thighs to lightly brush against my increasingly wet sex. \n\n\"First, and in no particular order,\" she cooed, \"I love every inch of your legs... they are strong, they are so smooth, and I love it when I feel them on top of me.\" \n\nI moaned softly. \n\nShe chuckled, \"You have no idea how amazing you look right now. It's not just your looks of course, but we'll get to that later. Let's focus next on this area...\" \n\nHer hands moved up to my navel, caressing my skin. \"I love your abs, I love your hips.\" \n\nWhen her hands covered my breasts and slowly massaged them, I gasped.\n\n\"I never thought I'd obsess over someone's body like I do with yours, but you are the perfect balance between masculine and feminine, and nowhere more than your amazing chest. I love it when you embrace me, I love it when you cover my body with yours.\" \n\nI flexed for her, knowing how much she loved it.\n\n\"Holy shit, Alex...\" she breathed, \"fine, if that's the way you want it...\"\n\nI grinned, pleased I could make her react like that. \n\nI felt her breath on my inner thigh, and in a flash, her tongue was licking me, consuming me with such passion my nerve endings strained to absorb it all. \n\n\"Oh Jess! Oh --.\" I yelled as she made love to me with her tongue. \n\nHer tongue moved slowly up my torso, leaving my clit throbbing for more. I felt Jess shift her weight, and then my senses exploded around me when she thrust into me with a toy. I gasped with wonder and need as Jess fucked me with the strap-on.\n\nWith every thrust, I felt Jess laying claim to me, loving me, thrilling me. I lifted my hips to meet her thrusts and I surrendered to her possession of me. She ground into me with such aggression that she took me to my climax in no time at all. \n\nI felt her hands untying my restraints. When she took the blindfold off, I blinked as my eyes focused on Jess's beautiful face, looking down at me.\n\n\"Wow, Jess, you can tie me up and top me any time you want,\" I grinned. Jess shimmied out of the harness and curled up next to me. \n\n\"I felt that I needed to take a more aggressive approach -- you weren't getting the message,\" she kissed me along my jawline. \n\n\"I love you,\" Jess said, \"I love the way you think; I love that you make me laugh, even with the bad jokes you crack; I love the way you look at me. I love the way you love me. I love that you gave me the time to figure all this out. Do you get it now?\"\n\nI nodded, momentarily struck dumb by her words. \n\n\"I love you too,\" I murmured, enjoying her lips on my skin, \"but just so we are clear.... we are no where near done...\" \n\n\"I was hoping you'd say that,\" Jess whispered, \"I'm all yours, sweetheart....\" \n\n--EPILOGUE-- <br /> --April -- \n\nJESS \n\n\"So when is Alex back?\" My mother asked. \n\n\"Tonight,\" I sighed, stretching out on their couch. \n\nWe were spending half term at my parents, but a last-minute client meeting had Alex driving back to London at the beginning of the week. \n\n\"It's too bad she had to drive back to the City. It would have been nice to have her here for the full week.\" \n\nI snorted, \"Come off it, mum, you've been down in London with us at least twice a month since Christmas!\" \n\n\"What can I say, I like spending time with my daughter and future daughter-in-law.\" My mother winked. \n\n\"Now Maggie, don't be so pushy,\" dad said. \n\nI sat up, \"No, it's ok. Actually, I wanted to talk to you about that.\" \n\nMy father put down his book. \"What happened?\" \n\n\"No, no, nothing happened. Well, not yet, anyway. Uh, well, I'm toying with the idea of asking Alex to marry me on our anniversary next month. You know, after the surprise party you guys have been helping me plan.\" \n\nMy mother gasped. \"Oh darling, I'm so happy to hear that!\" \n\n\"Good,\" my father said, \"we can finally put an end to your mother's endless speculation about this subject... and I'm very happy to hear this as well, obviously.\" \n\n\"Does Alex want to get married?\" My mother asked. \n\n\"Well, that's the thing. I think she does. But last year, when I was freaking out about commitment -- WAIT!\" I held up my hand when my father raised his eyebrows. \n\n\"I know. What a surprise. But listen, when that happened, Alex said that if we ever wanted to get married, I'd get to be the one to ask. And she's never brought it up again since.\" \n\nI looked at my parents, \"So... I was wondering if you guys could help me test her temperature on this when she is back... Well? Say something!\" \n\n\"I'd just ask her outright, if I were you.\" My father said. \n\n\"Dad -- I would, but I want to do this big thing. I don't want to ruin the surprise.\" \n\n\"I'm pretty sure she'd say yes if you asked, Jessie,\" my mother said, wiping a tear from her eye. \n\n\"Me too, but can you guys just check? But subtly. Don't give it away.\" \n\n\"Fine. Tommy, let me handle it. You have the worst poker face in the world.\" \n\n<br /> ALEX \n\nI pulled up to the Wainwright's cottage just after 10, relieved to be out of the City. The lights were still on, so I went straight through to the living room. \n\nMaggie and Tom were sitting together, watching a movie. \n\n\"Welcome home, Alex! How was the drive?\" Maggie looked up. \n\n\"Not bad -- made pretty good time.\" I dropped myself onto the couch, \"Where's Jess?\" \n\nTom paused the movie, \"She went upstairs to read, but she fell sleep -- but I'm sure she'd be happy to be roused.\" \n\nI shrugged, \"I'll let her sleep. How are you both?\" \n\n\"Very quiet week here, Alex, the meeting went well?\" \n\nI nodded, \"As well as it could -- another project in the works, so Mona just extended my stay through to the end of the year. Very happy to be back here, though!\" \n\n\"That's fabulous news! Jess knows?\" Maggie clapped. \n\nI nodded again, \"Told her yesterday.\" \n\nTom stifled a yawn, \"Jess said you are having some landlord trouble?\" \n\n\"Oh -- that was my fault. The flat belongs to my cousin Terry's family. I noticed a small leak in the bathroom ceiling and got someone to come in and fix it -- but I forgot to tell Terry, who didn't notify the building manager, who got stroppy because he was not familiar with the builder I used. Anyway, that led to him asking what the sublet agreement was with Terry, and that got messy, because of course there is no contract. It's all sorted now.\" \n\n\"It sounded like petty nonsense to me,\" Maggie said, \"why not just move into Jess's place and be done with it?\" \n\n\"Uh, mostly because I have the more regular commute, and I think Jess likes having a second option. Sometimes, she just needs her space.\" I smiled, \"and I'm happy for her to take it when she needs.\" \n\n\"Yes, but Alex, I don't think that's what's happening -- for all intents and purposes, aren't you two living together now?\" Maggie asked. \n\nIt's funny, up until Maggie put it that way, I hadn't really thought about it. \"I suppose so.\" \n\nTom leaned back and closed his eyes, \"Saves a lot of money if you two go down to one rent payment a month.\" \n\nI agreed, \"Oh for sure. Jess and I have talked about it, but I think she likes this arrangement for now. I'm not fussed either way. My cousin isn't charging me all that much.\" \n\nTom opened one eye and looked at me, \"What arrangement would you like, Alex? It's good of you to accommodate Jess's needs -- but what do you want out to this?\" \n\nI was surprised by the question, to say the least. I chuckled, \"Everything,\" I said quietly. \n\nI looked at Jess's parents, who have been so accepting, who had always welcomed me into their home. \"I want everything out of this. I just don't want to scare Jess away.\" \n\n\"Stop treating her with kids' gloves, Alex. You won't get anywhere that way.\" \n\nI nodded. \"We are getting there -- I promise.\" \n\nMaggie grinned, \"Hurry up and get on with it then, Alex. I want grandkids.\" \n\nI saw my opening, \"So if we were to get married, we'd have your blessing?\" \n\nTom shot Maggie a look. \n\n\"What?\" I asked. \n\n\"We'd been wondering if you would bring this up, that's all.\" Maggie replied breezily. \n\n\"So... is this imminent?\" Tom asked with raised eyebrows. \n\nI shrugged, \"Hm, well, our anniversary is coming up... so I... I don't know. Maybe it's too soon.\" \n\nNeither one of them said anything, but they looked distinctly uncomfortable. \n\n\"Oh my god. You guys think it's too soon. Forget I said anything. Really.\"\n\n\"NO!\" Maggie said quickly, \"I mean, well, we don't think it's too soon, right Tom?\" \n\nTom nodded, then shook his head, \"Uh, do you think it's too soon, Alex?\" \n\nWhat a very odd conversation.\n\n\"I keep trying to test the waters with Jess by trying to make plans for our anniversary, like go on a trip or something, but she keeps putting off the conversation. I don't want to keep pushing on it if she doesn't want to talk about it.\" \n\n\"Oh, that's just Jess being Jess. You should push!\" Maggie was nodding enthusiastically, \"don't you think so, Tom?\" \n\nTom nodded, but he looked totally conflicted. \n\nI backpedalled, \"I mean, we sort of agreed that Jess would be the one to flip the switch on the marriage thing... so this is all hypothetical anyway.\" \n\n\"Well, hypotheticals are good.\" Tom declared. It looked like he was going to say something else, but Maggie glared at him.. \n\n\"But it's all hypothetical, for sure,\" I emphasised, hoping to appease them. <br /> \"Well, real or hypothetical, it's really not for us to say, right, Alex?\"\n\nI shrugged. \"Well, I value your opinion, but I'll just have to play it by ear, I suppose.\" I felt like I brought up a a sore subject between the two of them.\n\n\"Did I say something wrong?\" I asked.\n\nMaggie and Tom both shook their heads, \"No, Alex, no, not at all,\" Tom said.\n\nPhew.\n\nMaggie suddenly jumped up and trotted to the kitchen. \n\n\"Tea, Alex?\" Maggie asked, sniffing a little. \n\n\"Uh, no thanks. I'm going to turn in, actually.\" I got up and headed towards the stairs. \n\nMaggie blew her nose and wiped her eyes. \n\n\"Maggie, are you okay?\" \n\nShe nodded, \"Allergies, poppet.\" \n\n\"When did those start?\" Tom asked. \n\nMaggie looked at Tom with surprise, \"I've always had them, you know that!\" \n\nTom went red, \"Oh right you are, Maggie.\" \n\nI looked back and forth between Jess's parents. Whatever was going on, I didn't need to be in the middle of it. \"Um, ok, I'll see you in morning.\" \n\n\"Goodnight Alex,\" Maggie said, dabbing her eyes. \n\nI headed upstairs, where I found Jess asleep, a book open on the bed. \n\nShe stirred when she heard me undressing. \"Hey...\"\n\nI turned out the light. \n\n\"Hey baby...\" I crawled into bed, and snuggled in. \n\n\"You're late... bad traffic?\" She mumbled.\n\n\"No, I was downstairs having a really weird conversation with your parents.\" \n\n\"Never mind them,\" Jess grabbed my arm and wrapped it around her chest, \"you're home,\" she murmured. \n\nHome.<br /> <br> <br> --May--\n\nJESS\n\nI was setting the candles on the dining room table when I heard Alex turning the key in the door. \n\nI gave her a massive hug, \"Welcome home, my love.\" \n\nAlex gave me a distracted kiss, \"I thought we were going out for dinner tonight?\" \n\n\"Oh, we are,\" I said breezily, \"This is for afterwards...\"\n\n\"What are you planning, Wainwright?\" Alex arched her eyebrows. \n\nI gave her a peck, \"Just dessert. I promise. Go get changed out of your work clothes. We need to leave in a couple minutes.\" \n\nAlex didn't object, and returned moments later, ready to go. \n\nWe had reservations at one of our favourite Italian restaurants in the neighbourhood. \n\nElenora, the maitre d', had saved us a table in the corner. \n\n\"Ah-Lix, Jeh-seeeca! Happy anniversary. Come, we have your table ready.\" \n\n\"One year, Alex, can you believe it?\" I grabbed her hand as we sat down. \n\nAlex nodded slowly, \"Yes I can. Although, technically, it's only been 11 months. October's inclusion is questionable.\" \n\n\"No need to be cheeky, Alexandra,\" I said, perhaps a tad defensively. \n\n\"Well, I like to think of it as the month you went away to regroup and amass deep, deep reserves of love for me.\" Alex winked. \n\n\"Yes! I did!\" My heart swelled with love for this woman. \n\nElenora didn't disappoint, lining up a fabulous string of dishes for us. Throughout dinner I wondered if my plan had kicked into action yet. \n\nAs we walked home, Alex exhaled with a shake of her head. \n\n\"What is it, love?\" I asked. \n\nAlex chuckled, \"I was half expecting a mariachi band to pop out of the table during dinner. I seriously thought you had something up your sleeve.\" \n\n\"Disappointed?\" \n\nAlex shook her head, \"No. You've just been, well, a little schemy lately.\" \n\n\"'Schemy'?\" I tried to sound as innocent as possible. \n\n\"Yes. Schemy. I know you well enough to know that something's going on. Maybe not tonight, but you've been scheming!\" \n\nI shrugged, \"it's our anniversary. I've just been super excited to celebrate with you.\" <br /> <br> <br> ALEX\n\nUnless my radar was off, I knew something was going on and Jess was masterminding it. \n\nJess had been distracted all week and now she looked like a kid who was the first to wake up on Christmas morning. I had expected some sort of surprise at dinner, but nothing happened. \n\nWe strolled back home in contented silence. One year. With the promise of so many more to come. I was more in love with Jess than ever before. \n\n\"HAPPY ANNIVERSARY!!!\" came a cacophony of shouts as we walked through the door. \n\nI turned to Jess, \"I KNEW IT!\" I shouted. She was clapping with glee as we were swarmed by our friends and family. \n\nShe'd managed to get a lot of people there. My brother, my cousin Terry, Cathy and Jules, Nick, Tom, Maggie, several of her other friends, Annie, Michelle, and a number of other mutual friends. \n\nA great jumble of hugs and hellos ensued. \n\n\"Happy anniversary, big sis,\" Alistair grinned, \"Audrey is stuck at school, but she really wanted to be here.\" \n\n\"I can't believe Jess pulled it off. I had no idea this would happen.\" \n\nMy cousin Terry gave me a big bear hug, \"She got you! That is brilliant. I tell you, you looked like you shat a cow when you walked in. Priceless. She planned this out months ago, you know.\" \n\nI was shocked. \n\n\"Yes -- remember when I came to visit over Chinese New Year?\" Terry's eyes twinkled, \"she pulled me aside and asked if I thought it was a good idea. I went all in. This is awesome.\" \n\nI remembered seeing Jess and Terry chatting back in February. I thought they'd been discussing photography or something. \n\n\"I can't believe it,\" I said again, punching him in the arm, \"and I can't believe you were in on it!\" \n\nTerry squeezed my shoulder, \"I am so proud of you. For being so brave -- I know it's not been easy with your parents. I'm sorry they aren't here. You deserve their support, and I know they have been reticent, so I was happy to step in and represent.\" \n\nMaggie and Tom were handing out drinks to everyone. \n\n\"Where are you staying?\" \n\n\"Uh, with a friend.\" Terry replied, blushing. \n\n\"Who? Does she live here?\" \n\nTerry shook his head dismissively, and nodded at Annie, who was getting up to stand on a chair. \n\n\"New girlfriend?\" I asked. \n\n\"Sh!\" Terry admonished, \"Annie is about to say something.\"\n\nAnnie clapped for everyone to be quiet. \n\n\"Ok, first, thank you to Terry for footing to bill to get some of us over here from New York. We wouldn't have missed this party for the world.\" \n\nI stared at Terry, who winked at me. \n\n\"When Alex and Jess first got together, I was not without scepticism. Long distance relationships rarely work! But there was no stopping these guys... well, except for a couple minor hiccups here and there...\"\n\n\"Oy! Easy, Annie,\" I interjected. Jess slipped in front of me and wrapped my arms around her waist. \n\n\"Hey, it's not Jess's fault you have an ex-girlfriend who's certifiable!\" Annie teased. \n\nEveryone laughed. \n\n\"Anyway,\" she continued, \"I'm so happy you guys are together, and Jess, I'm so happy you're in Alex's life. Without you, she'd probably have moved into a cave, cut off from ever having to interact with anyone ever again.\" \n\n\"Hey!\" I protested, \"that's not fair!\" \n\n\"Ok, ok, teasing aside,\" Annie raised her glass, \"let's toast Jess and Alex; happy anniversary guys!\" \n\nJess leaned back and kissed me. I didn't care that everyone was watching. \n\nMuch as I hated socializing, it felt so amazing to be surrounded by everyone on such a special day. \n\nMaggie pulled me aside towards the end of the evening. \n\n\"So are you going to pop the question tonight?\" Maggie whispered into my ear.\n\nI shook my head, \"No, I promised Jess it would be on her terms. I got her a ring though.\" \n\n\"Can I see it?\" Maggie gripped my hand, \"please?\" \n\nChecking to see that Jess was otherwise occupied, I led Maggie to our bedroom and extracted the box from deep inside my closet. \n\n\"It's beautiful. She'll love it,\" Maggie's eyes gleamed. \n\nI smiled, looked at the ring again, and put it back in its hiding place. \n\nI promised Jess I would wait until she was ready, and I wasn't going to break my word. I liked that idea of her having an engagement ring though; I just couldn't figure out how to give it to her. \n\n\"I'll join you outside in a minute,\" said Maggie, \"just going to pop in to the loo.\" \n\n*******\n\nIt was almost midnight when we finally said goodnight to the stragglers. \n\nTom and Maggie were helping us clean up. \n\n\"Maggie, where's Jess?\" I hadn't seen her in a while.\n\nShe smiled, \"She just headed into the kitchen. She said she needed your help with something, actually. Tom and I are going to head out now. Happy anniversary, Alex.\" \n\n\"Thanks, Maggie, for everything.\" I gave her a hug, \"um, why is the kitchen door closed?\" \n\nMaggie shrugged, \"I'd be lying if I tried to give you an answer.\" \n\nPuzzled, I headed to the kitchen, but just as I was about to slide open the door, Maggie stopped me. \n\n\"Wait, Alex, take this!\" she said, jamming Jess's ring into my hand and closing my fingers around it. \n\n\"Wha-?\" I looked up at her. \n\n\"See you tomorrow, Alex!\" Maggie opened the door and gave me a gentle push backwards into the kitchen. She grinned at me and slid the door shut. \n\nI stared at the door for a moment. I needed my brain to do some catching up and make sense of what just happened, but I kept blanking out. \n\n\"Hi, honey.\" \n\nI turned around. \n\nJess was on one knee, with a single rose in her hand. \n\nMy brain remained stubbornly stalled. \n\n\"Uh, Jess, what are you doing?\" \n\n\"Remember how you said that I get to pop the question?\" \n\nI nodded. I felt dizzy. \n\nShe took a deep breath, \"Alex, will you marry me?\" \n\n\"Bloody hell, Jess, are you kidding me?\" I blurted out. \n\nMy brain made a buzzing noise in my ears. Jess was very good at making my brain buzz. \n\n\"Will you?\" Jess asked again. \n\nI knelt down in front of her, \"Yes. Yes, of course I will.\" \n\n\"YES!\" Jess squealed and kissed me. \n\n\"You are SO schemy,\" I whispered in her ear. \n\n\"Ok, I admit it. I was scheming.\" Jess grinned. \n\n<br /> JESS\n\nAlex pulled me close, \"You popped the question.\" \n\nI nodded, squeezing her tight. \n\n\"No more freak outs!\" ",
        "I shook my head, \"No. Nyet. Nope. Negative.\" \n\n\"Well good. So you won't object to me asking you the same question?\" Alex opened her hand to reveal something shiny. \n\n\"NO! Alex Mak, you did not!\" I jumped to my feet and screeched when I realised what it was. \n\n\"I'm not the type to want to wear an engagement ring, so thank you for not giving me one,\" she said, \"but I wondered if you'd want to mark the occasion -- if and when it happened -- so I decided to get you a ring, in case you wanted one.\" \n\n\"Oh honey, it is beautiful.\" I extended my hand to her, and she slipped the ring on. \n\n\"Perfect fit.\" Alex held on to my hand. \n\n\"How did you know? I mean, how did you have the ring in your hand?\" \n\n\"I actually didn't know. Your mum, I think, played her part of go-between perfectly. We'll have to thank her.\" \n\n\"You know, for all your bluster and misanthropy, you are a romantic, Alexandra.\" I pulled her up into a hug and gave her a kiss. \n\n\"Only with you, Jessica,\" Alex nuzzled my neck. \n\n\"And what other things do you do only with me?\" I asked suggestively. \n\nAlex trailed kisses along my earlobe, \"I don't know, let me think...\"\n\nI shivered. \n\n\"... something to do with touching tender, sensitive spots... like maybe here...\" She brushed her fingers against my nipples. \n\n\"Hmmm... what else?\" I smiled at my fianc\u00e9e. \n\nShe wrapped her arms around me and picked me up, \"Here on the floor, or in the bedroom?\" \n\nI stared at her, remembering those words -- that question -- from a year ago. Alex wiggled her eyebrows at me. \n\n\"Oh, very smooth, Alex.\" I curled my legs tight around her. \"My parents are gone?\" \n\nAlex nodded. \n\n\"Bedroom. Now.\" \n\n\"As you wish.\" \n\n<br /> ***END*** \n\nI wonder, by my troth, what thou and I <br /> Did, till we loved? Were we not weaned till then? <br /> But sucked on country pleasures, childishly? <br /> Or snorted we in the Seven Sleepers' den? <br /> 'Twas so; but this, all pleasures fancies be. <br /> If ever any beauty I did see, <br /> Which I desired, and got, 'twas but a dream of thee. \n\nAnd now good-morrow to our waking souls, <br /> Which watch not one another out of fear; <br /> For love, all love of other sights controls, <br /> And makes one little room an everywhere. <br /> Let sea-discoverers to new worlds have gone, <br /> Let maps to other, worlds on worlds have shown, <br /> Let us possess one world, each hath one, and is one. \n\nMy face in thine eye, thine in mine appears, <br /> And true plain hearts do in the faces rest; <br /> Where can we find two better hemispheres, <br /> Without sharp north, without declining west? <br /> Whatever dies, was not mixed equally; <br /> If our two loves be one, or, thou and I <br /> Love so alike, that none do slacken, none can die. \n\n--John Donne, The Good-Morrow"
    ],
    "authorname": "careythomas",
    "tags": [
        "lesbian",
        "lesbian romance",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/summer-and-fall"
}