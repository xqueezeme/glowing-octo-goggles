{
    "title": "The Twelve Vitali Ch. 08",
    "pages": [
        "Authors note: Hello everyone. I hope you are enjoying this series despite its differences to the original story. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\nCat woke up alone again. Since their first date she had spent each evening with Matteo being seen, and reported on it, it seemed, at the local hot spots. The publicity didn't faze her. Any reporting was done strictly on Matteo as one of Australia's most eligible bachelors. She was rarely mentioned, despite being photographed with him. She had tried many times to move away from him and let him have his time in the spotlight, but he would draw her back and hold her close to his side like a shield against the young women who would happily have given him anything he asked for in return for his company. He certainly wasn't hiding his relationship with her or his desire for her when they came home.\n\nIn the light of a brand-new day, however, it was back to business as usual. He was always gone before she woke and she would get a phone call at nine to check how she was and let her know his plans. At five she would get another phone call from his assistant, Hilary, to let her know what time she should be ready and whether it was a casual night or black-tie event. She sighed and stretched before getting out of bed. Her limbs protested the movement, and she smiled thinking of how he had taken her to amazing heights the night before.\n\nHe hadn't lied when he had told her that he was very good at fucking. The problem for her was that emotions had begun to surface, and each morning she was left alone and went through the business of the day she wished he had been there just to kiss good morning and share a moment before starting the day. It was silly, she knew. He would never put his heart on the line again and needed that distance between them in the mornings and during the day, but she couldn't help wanting it. She'd known him almost two weeks, and, even though it was such a short amount of time, their speed dating and getting to know each other phase of their relationship had been so intense, she thought she was in falling in love with him.\n\nIt saddened her as each day she would counsel herself that she was silly, he could never love her in the same way, and he had been honest about that. She just had to accept their relationship for what it was, she was a friend with benefits.\n\nShe got up and padded to the bathroom before heading to the kitchen in search of coffee. Peri had been busy with her own family commitments and left her to her own devices, for the most part, allowing her to make contact with the family members she needed to see again for her initial sketches. Because she had a really clear concept in her mind, she continued on the background layout in her spare time and met with the various men as she could, getting to know them and becoming familiar with their love for their family. She felt privileged to be welcomed so warmly and treated so well by virtual strangers who seemed to trust her just on Peri's say so. The power of Peri's position in the family rapidly became apparent to her as each of the men trusted Cat implicitly because Peri trusted her.\n\nShe'd just finished spreading a thick layer of avocado on her toast when there was a loud banging on her door. Unless she had called someone for a meeting she didn't get visitors, but went to answer it thinking that it may be some sort of delivery from Peri or Lucia, who often sent her information or books to help her in her research. When she opened the door the young woman who stood there was not what she had expected.\n\n\"Oh, good, you're awake, he had me worried,\" the woman said. \"Here, Mattie wants to talk to you,\" she said, passing Cat her phone and pushing past her into the apartment dragging a garment rack behind her.\n\n\"Mattie?\" Cat asked, taking the phone in amused bewilderment.\n\n\"I'm sorry,\" Matteo immediately apologised. \"Trista saw our photo in some ezine and she got on a plane first thing this morning without telling me she was coming.\"\n\n\"Okay, just to catch up, Trista is your sister, and she loves you, and she is in my apartment with a garment rack because she wants me to wear something, maybe something she or a friend of hers created to the book launch tonight?\" Cat couldn't help but laugh at both Matteo's consternation and the faces Trista was pulling as Cat talked to him.\n\n\"Pretty much,\" he groaned.\n\n\"Why didn't you tell me she was a designer?\" Cat asked, dreading that he hadn't told her because her designs weren't good.\n\n\"Because she isn't. She hasn't graduated yet, she's still a student,\" Matteo sighed.\n\n\"No worries, I love this sort of creative stuff, and you always get the right of veto,\" she smiled into the phone, trying to relieve his anxiety. \"How are you feeling today? Do you have a full day planned, as usual?\"\n\n\"Everything is fine. Can you call me when Trista leaves?\" Matteo asked, realising that there was very little he could do about Trista's sudden arrival.\n\n\"You're always in meetings. How about I call and let Hilary know?\" she suggested.\n\n\"Fine,\" he agreed, obviously frustrated about the lack of control he had over this situation.\n\n\"Would you like to talk to Trista again?\" she asked, knowing he had probably been abrupt and cross with her for her unscheduled visit. \"It's nice of your sister to come and try to help me like this,\" she smiled at the unusual young woman before her, trying to put a positive spin on her arrival.\n\n\"Yeah, I guess,\" Matteo agreed, and Cat pushed the phone out toward Trista before he could say anything further or she could say something that would make everyone uncomfortable.\n\nShe went back to the kitchen leaving Trista to talk to her brother. Her mind went over what she knew about Trista, which was next to nothing, as she took a bite of her breakfast and poured herself a cup of coffee. With the small amount of media attention they had gained, she was surprised anyone in his family in Melbourne were even aware that they had been seen and photographed at a few of the trendy new places here.\n\n\"Apparently I have to be nice to you and not just expect you to wear my designs just because you're dating my brother,\" Trista said, rolling her eyes. \"As if I would want you to wear anything you didn't love! It just so happens that I think you will love my designs and want to wear them, regardless of what 'he' says,\" she stressed the word 'he' as she spoke about her brother.\n\n\"Hi, Trista, I'm Cat,\" she held out her hand to the other woman. \"I seem to have come in halfway through a conversation between you and Matteo.\"\n\n\"Hello, Cat,\" Trista giggled. \"I think I like you already. Not the same way as my brothers like you, but, hey, I expect you're glad about that.\"\n\n\"Coffee?\" Cat offered while laughing. She doubted this young woman needed caffeine.\n\n\"No thanks, we have a lot to do for the book launch tonight, so if you wouldn't mind having a quick look at my designs I can start making alterations to the one you'd like to wear,\" Trista said confidently.\n\n\"Sure,\" Cat laughed, \"Just let me eat this first, okay?\" she held up her piece of toast before taking another bite.\n\n\"You can eat while you look,\" Trista said, going back to her rack and wheeling it toward where Cat stood in the kitchen area.\n\n\"Trista, I don't know how much you know about me, but I'm not very good with this fashion stuff. Would you mind if I called a friend to look with me?\" Cat immediately thought of the expense and time Andie and Peri had put into the look she now had for going out to functions like tonight.\n\n\"I guess, but we don't have a lot of time if I am going to have to make alterations. Ricco is pretty good at guestimates, but you don't seem quite as curvy as I was expecting,\" Trista's brow creased in concentration as she surveyed Cat openly.\n\n\"Ricco tried to guess my measurements?\" Cat blinked, astonished by the idea.\n\n\"Sure, it's no secret that you dumped him for Mattie,\" she grinned. \"Which was a strange move, if you ask me, because Ricco's much nicer. But I guess I am not the one having sex with him.\" She said it so casually that Cat choked on her coffee.\n\n\"I didn't even meet Matteo for several months after Ricco and I had broken up!\" Cat said in her own defence. \"Is that what you all think? That I traded one brother for another?\" She was horrified by the thought.\n\n\"Well, it does sort of look that way,\" Trista said, realising she had made a mistake by voicing her thoughts. Of her three oldest brothers, Ricco was her favourite, and she felt for him having to watch the woman he was still obviously hung up on date Matteo. Her mother had told her the whole story, and obviously didn't approve of Cat dating either of her stepsons. Trista had just assumed she was yet another social climber that had seduced her brothers; men were so weak that way.\n\n\"Good grief,\" Cat said sadly. \"Give me a second, I will call my friend, Andie. I really have no clue what she had planned for tonight, and I don't want to upset Peri, she is my boss, after all.\"\n\nAfter a brief phone call asking Andie to come over, Cat sat on a comfortable couch and let Trista show her the gowns and made generalised comments until Andie arrived. Trista's exuberance and obvious passion for her designs were endearing, but Cat couldn't shake the feeling that Trista obviously disapproved of her and the way she had treated Ricco when they had broken up. She hated the thought that Ricco would feel that way, or, worse still, that he had told his sister that Cat had dumped him for Matteo.\n\n\"Are you okay?\" Andie asked as Cat let her into the studio apartment. \"You sounded upset on the phone.\"\n\n\"Yes, I'm fine, but I am obviously way out of my depth here,\" Cat laughed. \"What I like and what would be suitable are two different things.\"\n\n\"Let's have a look, shall we? You said Matteo's sister was the designer?\" Andie asked, still scrutinising Cat. There was something wrong here; she could feel the sense of Cat pulling away from the situation like Peri used to do so often. She'd seem fine and go through the motions of what she had to do, but there was a mental distance, as if she was running away from something she didn't want to deal with.\n\nAndie swept into the room embracing Trista and chatted enthusiastically about fashion design and her business and that she was always keen to get a new designer on her list that social elite hadn't discovered yet. \"It's so hard to be truly unique in your choices when everyone uses the same people,\" she had lamented.\n\n\"I like these three,\" Andie said an hour later. \"What do you think, Cat?\"\n\n\"I love the teal one, but I think it's probably too much for a book launch. The beaded sheer one is pretty, and probably better suited to a more intimate thing, maybe?\" Cat asked uncertainly. \"The hand-painted silk is just lovely, but maybe it's too long?\"\n\n\"I know this one with the wildflowers doesn't seem like much on the rack, but try it on for me, please, I know you will change your mind about it,\" Trista urged Cat.\n\n*****\n\nAs usual, Maryanne arrived back in Brisbane for any family celebration, and the launching of Lucia's second book was a special occasion for her sister that she just couldn't miss. She missed the closeness she had shared with her siblings when she had gotten married and moved to Melbourne, she hated that the Vitali's seemed so splintered, and she wished she knew how to fix them, but she couldn't work out where the real problems lay.\n\nShe wanted to talk to Dante again, wanted him to come down and spend some time with her, but he rarely left home these days, and she understood that sort of love, she had it with Jacobi. She wished she had it with Ricco, but the most she had managed to feel for him was a sisterly affection, and he felt the same way, she assumed. She didn't know how to overcome that hurdle either. In her darkest moments, she questioned whether she was cut out to be a mother of a table and wished desperately that her own mother was still alive.\n\nWhen Jacobi, Ricco and Matteo had gone to the country house to meet with Josh and Dante, she had gone with them to seek out Peri. She found her in the nursery with the twins and quietly took a seat, watching her with the babies, reminding herself how much the woman had been through and overcome to be the mother of the new generation of Donatis'. Lucia never had ambition, Izabella was overseas, and Maryanne had no one else to confide in, but had never truly made a connection with Peri before. But she sat as Peri fed her beautiful boys and told her all her worries, letting them spill out and feeling the weight lift from her as she shared her concerns.\n\nPeri had listened thoughtfully, saying very little as Maryanne spoke around in circles detailing her life in terms of what her husband wanted, and what her mother-in-law expected from her and what she believed she had to do as being part of what would become the next table of the Vitali.\n\n\"I'm so sorry Antonia isn't here to help you through all of this,\" Peri said softly. \"She was so good at dealing with everyone else's problems and seeing to the heart of the matter. I'm still reasonably new to the family and being a mother,\" she smiled down at her baby and stroked his cheek. \"Do you feel better for telling someone exactly how you have been feeling?\" she asked.\n\n\"Yeah, I guess, but I'd like to know what you think,\" Maryanne said, genuinely wanting a different perspective.\n\n\"You mightn't like what I will say,\" Peri said cautiously. \"I won't just tell you what you want to hear, and sometimes the truth can be confronting. You're a grownup to me, not the baby sister who needs protection from the harsh realities of life, so I won't treat you that way. As far as I am concerned, we're equals here.\"\n\n\"Go on,\" Maryanne said, tilting her head curiously.\n\n\"Jacobi is not the second son. Antonia ensured I met the second son, and the man who she believed would be the next chair of the Vitali's when I was at your wedding,\" Peri explained. \"You did know there was an older brother who died when he was around ten, didn't you?\"\n\n\"Yes, but he doesn't count.\" Maryanne said with a careless shrug, startling Peri.\n\n\"Let me ask you this, you were the twelfth child of Joseph Donati, which makes you pretty special. But now that Nik and Leo are gone, are you now the tenth child? Because, as you said, the dead don't count,\" Peri said, not holding back and feeling dreadful for the parents of the Vitali to have their eldest child dismissed so completely from his sibling's thoughts.\n\n\"That's completely different!\" Maryanne looked horrified.\n\n\"How is it different? How is Jacobi's oldest brother any different to Emilio?\" Peri asked. \"Would you have let Emilio be dismissed so easily if he was the eldest instead of Angelo, and Carlo had wanted to claim that he was the second son?\"\n\n\"That's ridiculous,\" Maryanne said, but the strength of conviction had left her voice.\n\n\"How do you think Stefano and Roberto feel about Jacobi ignoring his oldest brother's existence entirely? That must hurt them terribly. How do you think Matteo feels? He is the rightful second son, after all,\" Peri posed the questions to make Maryanne think. \"His name was Alessandro, by the way, I know it, and I guarantee all of the other tables know it and recognise him as the eldest son of the Vitali table.\"\n\n\"But Jacobi is so adamant about it,\" Maryanne whispered. \"I assumed that was the way they all felt.\"\n\n\"You know it doesn't matter who the second son is in reality, don't you? Look at Josh, and Dante, neither was the second son. Talk to Ben and you will realise he is happy with the way things are. If he had stepped up into the chair, who would have been his Oracle? Who would have loved Emily enough to forsake a love of their own?\" She let the question hang between them as she saw Maryanne try to sort through the questions and obvious answers.\n\n\"Jacobi has asked Ricco to give up any chance he had for a real love of his own, and, from what I understand, he may have found it and turned it away because of pressure from his brother and you, who just admitted can only offer him affection, at the most. You both expect him to live a half-life because you think, not know, but think, Jacobi will be named chair. That doesn't seem fair somehow, does it?\" Peri said.\n\n\"I didn't have anything to do with their agreement,\" Maryanne became defensive. \"It was their agreement and their choice. It's always been Ricco's choice. I would never force him to love me!\"\n\n\"The Vitali's are a younger table than your father's table; you have probably another decade before any decisions are made. Let Ricco live his life, and you live yours, enjoy your husband, who obviously adores you, enjoy your pregnancy,\" Peri smiled knowingly as Maryanne put a hand on her belly. \"The table will work itself out when it's ready, and in the end it will have very little to do with what you or Jacobi wants. People end up in the roles they were born to be in, particularly the oracle, if that is Ricco's destiny. Nothing you do or say now will make one iota of difference to that outcome. Dante is the poster child of destiny taking a hand in a man's life.\" She smiled softly and was glad when Maryanne returned her smile.\n\n\"All of this worry and planning and it could amount to nothing,\" she agreed. \"You've given me a lot to think about. Not that I agree with all you have said, but you are right, I think Josh and Dante are perfect together. If you had asked me before I got married I would have told you that you were crazy! It was lucky the way it worked out for them and you. I never imagined either of them sharing so much.\" She hedged around the loving relationship the three of them shared.\n\n\"It's a delicate balance, but we make time for each other, both together and apart. It's important to have those date nights, Joseph taught me that,\" Peri smiled warmly. Peri could predict the love triangle forming in the Vitali family, and she knew it didn't include Maryanne. Peri was impressed that Maryanne loved Jacobi so much that she bought into his dreams and needs and would compromise her love for him to include Ricco, but Peri was ninety-nine percent sure that Maryanne wouldn't need to in the end.\n\nShe watched as Blayze came into the room quietly seeking out his mother, but seeing her occupied he climbed up into Maryanne's lap to accept cuddles from his aunt and show her the bump on his knee with a teary pout. Maryanne kissed it better with a smile and held the little boy close.\n\n\"I can't wait to have my own babies,\" Maryanne said.\n\n\"It's an amazing feeling,\" Peri agreed, getting up to put her sleeping infant back in his bed and checking on his twin. \"Let's go see if we can find some cookies and milk for morning tea.\"\n\n*****\n\nMatteo was tense, he was genuinely enjoying the meeting with his brothers and cousins, but he knew Trista was with Cat saying god knows what to her and forcing her into some clown suit for the book launch tonight. It was getting close to lunchtime, and he wondered why she hadn't called him back yet.\n\n\"Back in a sec,\" Dante said, getting up and moving away from the conversation. The idea of an HQ building to gather various factions of their family into one corporate entity was a good one. The idea had worked well for the Vitali because Matteo had built his developmental design and construction business up to incorporate many of those factions. He wasn't as sure it would work for his family in the same way, but had decided that Josh's ideas on the subject held some merit. It would have to be a completely different setup, but it could work with the House of Lorraine as the overarching company to tie them all together.\n\nJosh watched Dante go. He knew Dante wasn't one hundred percent sold on this idea yet but could see his vision and was going along with the early planning stages. Josh needed an official office in the city instead of working out of their home or Dante's business. He wanted to be able to invite the men from the thirteen tables to come and stay in the luxury of a private five-star facility, as well as offer business premises to those in the family who required it. He felt the need to keep them all close and safe, even now, years after the day that had claimed so many lives and almost his own. He looked up as Dante came back in and threw his phone to Matteo.",
        "\"Hello?\" Mateo said uncertainly, unsure of who would be on the other end of the call.\n\n\"Hi, I'm okay. There is no clown suit, and I am looking forward to seeing you tonight,\" Cat said with a small laugh, making him chuckle. \"Now stop being so grouchy to your family, please. I promised Dante you would smile and enjoy the meeting with him. I know how much you enjoy talking about heating and cooling properties of space rock, or whatever you are using in this build.\"\n\n\"Space rock?\" he chuckled.\n\n\"You know what I mean,\" she laughed with him, hiding the fact that she felt dreadful after spending the morning with Trista, who obviously had a problem with her dating two of her brothers one after the other.\n\n\"Yeah, I do,\" he chuckled. \"I'll see you at six?\"\n\n\"Sounds good, I'll be ready if you let me go and let this seamstress finish the alterations to the dress I have agreed to wear. Again, it is not a clown suit, so don't panic,\" she laughed. \"See you tonight.\" Cat ended the call.\n\n\"Trista causing waves?\" Jacobi asked.\n\n\"Apparently not,\" Matteo said, feeling more relaxed and joined the meeting again. The biggest problem would be securing the right site and dealing with the city council, which is where Jacobi and Ricco's expertise came in. They were surprised that Tarsia and Paul, who were project managers for the Donati development group, were possibly as knowledgeable, if not more so, than them. It was all about choosing the right site and then working out the logistics from there.\n\nThey'd earmarked a couple of sites, but there always seemed to be at least one large obstacle with each of them that seemed almost insurmountable. Matteo considered Dante and his reservations about the project for a few moments and then changed his approach.\n\n\"What if,\" he pulled one of the large blueprints toward him and looked at it critically. \"We knocked out this and this and relocated them to new levels here and here.\" He made marks on the blueprints which showed the two blocks of prime land in the city that Dante owned. \"Then you could keep the warehouses you have and the art galleries, the building you live in and the house of Lorraine as it now stands. Where these have been taken out, you could construct a new HQ over and around the original house of Lorraine which would stay intact and look the same to the public view if we put the entrance to the HQ on this street on the other side.\"\n\n\"We'd have to forego some of the landscaping we were thinking to implement on the street level,\" Carmella said, looking at Farris. \"It's certainly doable, building up these warehouses wouldn't take much and could probably work out better for all concerned if we put in several freight elevators and widen the docks a little.\"\n\n\"It would give you a chance to renovate the galleries and upgrade the security if we went this way,\" Farris agreed. \"What we did after the blasts there a few years ago was more of a band-aid measure because we were so swamped getting to all the damaged buildings in the city.\" They all looked at Dante, who had adamantly refused to move the house of Lorraine and its surrounding buildings to make way for this project.\n\n\"I'd have to see it drawn up properly before making a decision, but I can see how it might work,\" he said grudgingly, realising they were compromising for him and his need to hold onto the last parts of what he and Lio had built together.\n\n\"You wouldn't have to run the gauntlet of city by-laws to build there as there is a fair amount of construction in that part of the city recently anyway. I'm sure Tarsia is all over that anyway,\" Ricco sat back. \"No need for me to consult any further.\"\n\n\"It would save you having to negotiate with people who don't want to vacate the properties they rent or own on the other sites,\" Jacobi said, also leaning back. His reputation of being a fixer would have been sorely tested in some of these scenarios.\n\n\"I haven't said yes,\" Dante reminded them, \"I just said I'd like to see it drawn up properly. Now I am starving, let's eat!\"\n\n\"What's up with Trista?\" Ricco asked as they moved through to the dining room for lunch.\n\n\"She showed up at Cat's place unannounced this morning. Apparently Theresa encouraged her to get Cat to wear her designs because we have been photographed together lately. Look, I'm sorry, I know you're not thrilled about me seeing her, and I'm not trying to make it more difficult,\" Matteo said.\n\n\"I meant what I said,\" Ricco conceded. \"If she has to date someone then I'm glad it's not some asshole who'll treat her badly, like her ex. Or me, for that matter,\" he admitted. \"I loved her. Probably still do on some level, so don't mess it up if you're going to date her.\"\n\n\"You know you don't have to follow Jacobi's dream. At the end of the day the two geniuses will probably step up, especially if Theresa has her way. Not that I would stop seeing Cat if you decided you could give her what she wanted,\" he chuckled. \"She's pretty amazing; I can't believe you let her go in the first place.\"\n\n\"I was a dumbass, but what is done is done,\" he shrugged. \"Trista was behaving, I take it?\"\n\n\"Apparently so, but I got the sense that something was off, you know, when someone is too cheerful?\" Matteo asked.\n\n\"You want me to call Trista?\" Ricco offered.\n\n\"No, Cat said everything was fine. She was with a seamstress. I imagine Trista got her own way, as usual,\" he chuckled. \"I guess I'll find out tonight. Are you coming to the book launch?\"\n\n\"Yeah, that's why we came up, Maryanne wanted to be here for the launch. You could have handled all this development stuff without us being involved. It's nice to feel needed though,\" Ricco clapped his brother on the back.\n\n*****\n\nCat stood at the kitchen bench drinking a glass of water. Trista had finally left her alone for the first time that day to go and get ready for the event herself. Cat sighed and sipped the water, going over what she had learned from Trista throughout the day. She had to get the whole Vitali family out of her life. She couldn't live with that sort of judgement. She wasn't the girl Trista quite obviously thought she was. She just hoped that Matteo was honest when he said that David deserved the benefits he was getting at work and that Matteo wouldn't take them away once she told him that she wouldn't be taking up his proposal for a business partnership style relationship.\n\nShe had been kidding herself thinking that she could without developing any feelings for him or his family. The fact that Trista and her mother believed her to be a gold digger after the Vitali family name and fortune upset her almost as much as the fact that it would be true if she went through with the proposal. He was asking her to be his partner for the money and prestige and for no other reason.\n\nThe problem was that, even though logically she knew it was for the best and would save her greater heartache in the long run when he discovered that she would never be good enough for him in the eyes of any of his family, she knew she had begun to fall in love him. The thought of never seeing him again after only a couple of weeks of knowing him hurt more than when she had been trying to push Ricco away for the same reasons. It made no sense to her that she could feel so strongly for him after such a short amount of time. It was as if they had been on a speed dating program, and she knew him far better than she's ever known Ricco. Ricco had done that purposely, of course, keeping her separate from his family and future plans, but it still made no sense to her.\n\nShe had to be stronger when it came to Matteo. It could never work in the long term. He had told her right from the very beginning that he would never love her in the true sense of the word. The best she could ever hope for was a friend with benefits and a lifetime of heartbreak knowing she would continue to fall in love with the man he was. She breathed deeply and steadied her nerves. She knew Ricco would be there tonight. She didn't know how he would react to seeing them together, even though he had told Matteo he would be fine with it, saying it and seeing them together would be totally different things entirely. She just wanted this day and this night to be over.\n\nCat was still in the kitchen, lost in thought, when Matteo arrived to pick her up. He looked as handsome as ever, and she could feel her resolve to end any relationship she had with the Vitalis', especially him, begin to crumble. The look he gave her was hungry and heated as he moved to where she stood, taking the glass from her hand and, without uttering a word, he kissed her.\n\n\"Hi,\" he murmured after breaking the kiss.\n\n\"Hey,\" she whispered breathily. \"We should go. Hopefully it will be an early night.\"\n\n\"Everything all right?\" he asked in concern.\n\n\"I'm just tired. Someone has been keeping me up very late each night this week,\" she laughed lightly and pushed him away gently.\n\n\"What can I say? You're like an addiction, and I just can't get enough,\" he grinned and pulled her back into his arms to kiss her again.\n\n\"We should go,\" she said again, hating that her voice was deep and husky with desire for his kisses, and more.\n\n\"Did I mention you look beautiful?\" he murmured softly before he released her.\n\n\"You should tell your sister that, it's one of her designs with a little tweaking from Andie,\" she said lightly. She untangled herself from his arms and went to get her purse. She hated that she found him so attractive and hard to say no to.\n\n\"I will be sure to congratulate her,\" Matteo grinned as he opened the door for her and they left for the book launch.\n\nMatteo spoke about his day with Josh and his team as they drove after not being able to get more than one-word responses from her about her day with Trista and Andie. The unsettling feeling he had earlier in the day came back to haunt him, and he wondered what had happened between the women. He didn't press Cat for answers, but he was damn sure going to talk to his sister and find out what happened.\n\nThey mingled and made polite small talk when they arrived. Matteo felt her stiffen when Ricco bent to kiss her cheek, and Maryanne embraced her like an old friend, commenting on how lovely the dress was to Trista instead of the girl wearing it who made it look so good, he thought. Cat was unusually subdued, and Matteo worried even more as the night went on. It was as if she was enduring the cocktail party rather than enjoying it, and he couldn't work out why. They'd had such a good time this week going out to places and events just like this.\n\n\"Hello, Matteo,\" Rosanna said with a wide smile. \"Would you mind if I stole Cat away for a few minutes? I just need a few last-minute details for the cabin she'll need at the gathering.\"\n\n\"Be my guest,\" Matteo said pleasantly, and went to find Trista in the crowd.\n\n\"In a weeks time, all of the Donati family will gather out on our property. It becomes like a small village almost. There are a least a couple of hundred family members who come and go over the two-week period, some arrive early, some stay late. We bring in a lot of demountable cabins and set up yurts, it's fun, and this is my second year of organising the majority of it with Peri,\" she said proudly. \"Now, I've set up a small cabin for you close to the main residence so the guys can find you easily when you schedule their individual sittings. What I need to know is if there is anything specific you need in that cabin?\"\n\n\"I'll be staying in a cabin on your property for a few weeks?\" Cat asked, stunned by the information. \"Peri mentioned the gathering, but I obviously didn't take in all of the details and just thought she meant gatherings in general, like tonight.\" This wasn't just good news, this was great news, Cat thought. \"Only Donatis go? No extra cousins, like Matteo and his brothers?\"\n\n\"Unfortunately, but I am sure you can manage for two weeks on phone calls and video chat,\" Rosanna grinned.\n\n\"Honestly, I could use the break, it can be a bit overwhelming sometimes when you aren't used to such big families,\" Cat gave her a crooked smile.\n\n\"You could come early, if you wanted, and get set up. The cabin is ready for you, and you can just let me know if I have forgotten anything,\" she said in understanding. \"Peri felt the same way when she first came to events like this. There are far more benefits to being part of a large family than there are downsides,\" she suggested. \"Still, it's always good to take a breath and get perspective.\"\n\n\"That is exactly what I need,\" Cat said. \"I'd rather you didn't mention it to Matteo though, he's ...\"\n\n\"There's no need to explain, you just let Peri or me know when you want to come and we'll organise it for you,\" Rosanna said, reaching out to touch her upper arm in a friendly gesture of warmth and understanding. Cat looked past her to where Matteo stood with his back to her, talking to his siblings.\n\n\"Trista, the one thing I have learned about Cat recently is that she will endure just about anything to avoid conflict or having to show her real emotions. She is enduring tonight and being here with me, so you had best tell me what exactly happened today before I lose my shit with you completely,\" Matteo said in a flat, unemotional voice.\n\n\"This is why I'm on your side, Ricco,\" she indicated Matteo's glower.\n\n\"What do you mean, 'my side'? There are no sides between Matt and me,\" Ricco was confused.\n\n\"It's okay, Mama told me that Cat was a gold-digging bitch that dumped you when you wouldn't commit and went after Mattie instead. I wanted her to wear my designs, it's not like I needed her to be my friend or anything,\" she rolled her eyes as if it was obvious she would never be friends with someone like Cat.\n\n\"That's not true, Trista. I was the asshole. I treated her badly. We broke up because of me! Matt had to beg her for days to accept a date because she didn't want anything to do with our family,\" Ricco stared at his sister in disbelief. \"You would be lucky to have a woman like Cat as a friend. You better make the most of that one dress tonight, because I believe you have just fucked up any chance Matt had of making her believe we aren't all assholes!\"\n\n\"Don't be so melodramatic,\" Trista waved her arm airily. \"Matt doesn't date anyone seriously. He's not a relationship sort of guy.\" She looked at Matteo then as if to have him confirm her words, but saw just how close he was to losing his temper and took a step back. \"When Matt dumps her ass she'll probably just go after Zion.\"\n\n\"That's enough, Trista!\" Jacobi intervened seeing the amount of pain she had just cause both of his brothers. Maryanne stood dumbfounded wondering how she could have been just as blind to Ricco's pain. She hated the thought that she, like this girl, could be so callous, so focused on her own beliefs and agenda that she hadn't fully considered how unfair both she and Jacobi had been to Ricco.\n\n\"Matt, I'm sorry. I'll talk to her. I'll tell her I'll get it all straightened out,\" Ricco offered. \"Then, when I get home I will sort it out properly with Mama.\"\n\n\"No, the damage is done now. You can't take back the words now that they are out there. Cat will just believe everyone in the family thinks of her like that now anyway.\" Matt shook his head. \"Just keep her away from Cat, not just tonight, but for good.\" He turned his back on Trista and found Cat watching him from where she stood across the room. He could see the sadness in her eyes, and something inside him broke a little more and he walked back toward her.\n\n\"Let's go,\" he said in a soft voice that belied his mood.\n\n\"They haven't done the speeches yet,\" Cat argued.\n\n\"Okay, speeches, then we leave!\" he commanded rather than asked, making her frown at him.\n\n\"Maybe we should get a drink,\" she suggested, and began to walk toward the bar.\n\n\"I'll get it,\" he gave a half-smile. \"Why don't you say hello to Pete, we've barely seen him since New Year's.\"\n\n\"Okay,\" Cat nodded and went to talk to Pete.\n\n\"Everything okay?\" Pete asked softly, leaning down to kiss her cheek in greeting.\n\n\"Fine, perfectly fine,\" she smiled brightly.\n\n\"I believe I've seen that disguise before. Did you forget who you were talking to?\" Pete asked with a slight chuckle. \"Do you need me to save you? I know Josh is the white knight and all, but I do a pretty good imitation now and then.\"\n\n\"You do indeed,\" Cat smiled up at this wonderful man who had saved her already on more than one occasion. \"I've just had a confronting day. I thought I might go out to the Donati property a few days early and set up my equipment so I can get to work as soon as everyone arrives.\"\n\n\"I see,\" Pete looked at her questioningly. \"That makes sense, I suppose, but I get the feeling that's not the real reason you want to run away to the back of beyond. You know you can talk to me about anything.\" Pete's voice was full of concern for her.\n\n\"I'm fine, and it's so nice to have a friendly ear to listen to my silly worries, but I'm afraid I already take up far too much of your time,\" Cat said.\n\n\"I'm going out to the property in the next day or two to set up a small surgery for minor injuries that always happen. Maybe we can travel together, it's much nicer to fly than drive,\" he offered.\n\n\"That sounds good. Can I call you about it tomorrow?\" she asked, seeing Matteo make his way back toward them and wanting to change the subject.\n\n\"Of course,\" Pete said easily, and frowned as he followed her line of sight and wondered if what had seemed to be the beginning of a relationship had fizzled out already. It wasn't surprising, given her history, the young woman should have been a basket case with the amount of baggage she had from her early life. He liked and respected her. However, she was strong and resilient and seemed to be determined to overcome the obstacles of her early life and help her brother overcome them as well. He hadn't met too many women who held the fortitude she did. \"You can trust me,\" he said seriously in a low murmur next to her ear, and felt her stiffen as she looked at Matteo.\n\nMatteo came back with pink champagne and handed her a glass. He seemed to be brooding, and she wasn't sure what she could have done to upset him. She had been perfectly pleasant all day to his sister, who treated her like the hired help, she greeted his brothers and Maryanne warmly. Despite knowing she would have to leave him, and soon, she had worn the perfect girlfriend disguise all night, and had been within his arms reach as he needed her.\n\nThey stayed standing with Pete for the speeches and, as soon as they were over, Matteo took her hand and led her out of the event. She barely had time to farewell Pete, let alone their hosts, as he hurried her to the door. He helped her into the car and got into the driver's seat, driving like a maniac to get home as quickly as possible. The silence stretched between them as he didn't want to fight with her or hear the words he dreaded. He knew her well enough by now to see the masks she wore, and he knew that Trista's words and attitude would have made her want to run from him and the proposal he had offered her.\n\nFor her part, Cat didn't want to argue either, and was contemplating the best way to say what needed to be said and clear the air between them. She didn't want him to hate her or be yet another woman who let him down, but she also knew that she couldn't keep being rejected as not good enough for the Vitali family and their sons again.\n\nNo matter how hard he tried, Matteo couldn't swallow his anger and the dread that sat in the pit of his stomach down enough to be able to speak to her. As soon as they entered her apartment he grabbed her and pushed her back against the wall, kissing her fiercely and grinding his body up against hers as if trying to claim her as his and his alone. His hands skimmed over her body, coming to rest over the curve of her bottom. He kneaded the soft flesh for a moment, stroking and caressing her, then cupped and lifted, and suddenly Cat found herself with her legs wrapped around him, three feet off the ground.",
        "\"I'm not going to make love to you standing against the wall again,\" Matteo muttered against her red, swollen mouth.\n\n\"Wh-What?\" Cat stuttered, dazed and confused. She knew he'd meant to say fuck her, but he had said 'make love', and the words stuck in her head and rolled around, giving off the faint of hope that maybe he could care about her eventually, despite what his family believed. He cursed, gripping her tightly to him and began walking, stopping every few moments to pause and kiss her again.\n\n\"What are you going to do?\" she asked, as he adjusted his grip on her and her senses finally seemed to come back to her. This wasn't the confident in control man she was used to. This was a different Matteo, and she wasn't sure what to do or say. \"What are you doing?\"\n\nMatteo dumped her on the bed. As if the answer to her question wasn't obvious! He merely grunted in reply, stripping off his shirt and trousers. She stared in fascination at the beautiful body of the man who had the power to render her a needy, trembling, sex crazy woman, but somehow seemed different tonight. She felt a strange compulsion to touch him, to stroke and caress. She wanted to taste him.\n\nAs if reading her mind he crawled over her, his mouth hungrily seeking hers. Instinctively her lips parted, and he slid inside, plundering her mouth, hot and wet. He rolled and she found herself on top of him, her dress gaping open as he pulled the zipper down, her bra tugged away and the last of the material between them pulled over her head. His hands gripped her waist, bent her forward, and his mouth captured her nipple to torment her as he literally ripped the fragile lacey panties from her body.\n\nShe let out a gasp of agonising pleasure. She wanted this. She wanted him. She wanted all of it, all of him, but she also wanted more than he could ever give her. She shook her head, banishing the thought and enjoying the sensations rolling through her body. Tugging herself away from his forceful kisses and grappling arms, she bent down, pressing her mouth against his bronzed, sculpted torso. He was always so dominant in their lovemaking that she wanted to take advantage of the uncertainty and simmering anger that radiated from him tonight.\n\nHer tongue touched his nipple and he groaned, closed his eyes and let his head drop back. \"Oh, God, Cat,\" he rasped. \"What are you doing to me?\"\n\nShe didn't answer, merely moved to the other nipple, tonguing, then sucking at it. Matteo' hands crept into her hair, his fingers alternately caressing and twisting.\n\nShe moved down to his stomach and he tensed. \"Cat...\" he began in a warning voice. \"Do you...\"\n\nThe rest of the sentence was cut off in a strangled gasp as she took his cock into her mouth, and he seemed to pull his hips back from her. His fingers clenched in her hair, holding her head in place with just the head of his cock held on her soft fluttering tongue. He uttered a weak moan, then dropped back, his entire body stiff with the strain of keeping himself from thrusting into her mouth and choking her with his need.\n\nThe taste and the scent of him filled her senses. She could feel the strain he was putting into remaining docile beneath her teasing and tormenting hands and mouth in opposition to his usual and, she assumed, preferred dominating torment of her body.\n\n\"Oh fuck, yes, suck me, baby...!\" Matteo groaned.\n\nCat complied, stroking his balls and thighs as she took as much of him into her mouth as she could, making soft gagging sounds. He growled low in his throat, his fingers clenching even tighter in her hair. Cat winced but continued to caress him, wrapping her tongue around him. She sucked, and he let out a yell of pleasure. His body became rigid and he grew larger in her mouth.\n\n\"Cat...\" Matteo growled in warning. His hips bucked, thrusting involuntarily into her mouth and choking her. \"Fuck! Yes! Cat!\" he thrust on each word.\n\nShe felt him before she tasted him, shooting into the back of her mouth. Instinctively she swallowed. His eyes never left her face.\n\n\"I'm sorry,\" Matteo said at last. \"I shouldn't have done that, but you seemed on a mission, and I couldn't... didn't want to hold back.\" There was a satisfaction in his eyes that went with a strange bittersweet expression.\n\nSilently, Cat crawled back up the bed. Matteo reached out and drew her tightly to his side. There was a strange feeling of tightness in his chest, even after everything, after he'd believed he'd found the right woman to be his partner. She would ask him to leave as soon as he gave her the chance to speak. He was surprised to find that he dreaded it more than he could put into words and wasn't sure what he could say to forestall the conversation that he knew was coming. Perhaps it was because he knew that she would ask him to leave, not because of any machinations on her part, like every other woman he had loved, but because of his family's treatment of her and his own unwillingness to put himself on the line with her.\n\nCat curled into his body and simply lay there. She didn't speak, she had seen the bittersweet look on his face and knew that he had come to the same conclusion she had. This agreement between them was never going to work beyond these few weeks, and they should end it before it gets messy.\n\nShe didn't sleep at all that night. Each time she tried to talk to Matteo, he would begin to stroke her, tease her, and inevitably move on top of her and inside her until she forgot everything but the feel of him again. He made love to her almost constantly, sometimes rapid, hard, and explosive, sometimes slow and sweet and tender. She clawed at him, bit him, leaving angry, passionate marks on him, and he, in turn, marked her, his teeth sinking, it seemed, into every part of her body, even those she wouldn't even have imagined it possible to bite.\n\nCat woke from a brief doze to the sensation of something hot, wet and probing between her legs. She sat up with a gasp, lifting the bedcovers and finding Matteo's head of dark silky hair between her thighs. \"Matteo,\" she murmured weakly, before collapsing back onto the bed.\n\n\"Wider, baby,\" Matteo's voice, muffled, came from under the covers. Mindlessly, she did as he commanded. He licked, lapped, and probed deep inside her some more, and she was soon orgasming around his tongue, not bothering to even muffle her cries of pleasure.\n\nHe crawled up her body, stopping as his face was level with her breasts. He took a nipple into his mouth, sucked and nipped at it, pulling out from her chest with his teeth, and Cat whimpered. His lips travelled upwards, lingering in the curve of her throat. He licked the length of her neck before he sank his teeth into her again. She moaned.\n\n\"You're so delicious,\" he murmured. His mouth sealed over hers, his tongue filled her mouth with the taste of her. His hips settled into the cradle of hers. She felt him probing at her entrance, and then he was inside her, full and thick and heavy, pulsing with arousal. She was so swollen from her orgasm and the night of unrelenting sex that he felt impossibly huge inside her, stroking in and out, his hips grinding against her with slick and frantic lunges. She whimpered, her arms coming up to wrap around his neck. He let out a low growl, digging his fingers into her hips as he lifted her, forced her up to meet his thrusts, to take him deeper.\n\n\"Matteo!\" Cat gasped, writhing, yet unable to move in his iron grip.\n\n\"Say it again,\" Matteo ground out. \"Say my name!\"\n\n\"Matteo. Matteo. Oh, God, Matteo!\" Cat cried.\n\nHe stilled, suddenly, his impossibly dark eyes blazing into hers. Then he growled again, low, reverberating in his throat, and quickened his thrusts, clasping Cat closer against him so that her breasts were crushed against his chest, her face buried against his throat.\n\nHe pumped rapidly, ever harder inside her, their two bodies joined as if one, and, quite suddenly, the moment came. He let out an exultant roar of ecstasy, his eyes rolling into the back of his head. It had never been like this. Never before. He recovered in time to feel her pulsing against him, clenching around his cock. He smiled, his eyes closed, and collapsed over her. He did not care at that moment that he was too heavy for her. What mattered was the fact that she was his, that he was inside and on top of her, and that was where he wanted to be.\n\n\"Be mine,\" he said softly into her ear. \"Say yes to the proposal and be mine forever.\"\n\n\"No, I can't,\" she whispered, feeling her heart break and tears well in her eyes.\n\n\"I will keep my family away from you. You can travel the world with me, paint in Paris on the bank of the Seine!\" He said, trying to problem-solve all of her concerns about their partnership. \"We can have a house in the country, you won't have to deal with them at all.\"\n\n\"That's not why I have to say no,\" she said softly, and he leaned up on an elbow to look at her in confusion. \"I can deal with Ricco and Trista and the fact that your family doesn't like me. That isn't the problem. The problem is mine and mine alone, and I can't be yours even temporarily anymore.\" She knew this morning more than ever that her heart would be the problem between them.\n\n\"You can't tell me why?\" his eyes searched hers. \"I need to know why the most perfect woman in the world for me would want to leave me, now, of all times.\"\n\n\"I'm falling in love with you,\" she said, her voice scarcely above a whisper. She reached up and cupped his cheek. \"You were honest with me from the start, Matteo. I have always known you couldn't love me, and I tried to stick to the agreement, I did. I truly believed I could in the beginning, but living in each other's skin so intensely for the last few weeks since we met, I feel like...\" her words faltered, and a tear ran down her cheek.\n\n\"You can't love me,\" he said woodenly. \"You can't!\" He stopped short of telling her that he was unloveable, she just hadn't discovered that yet.\n\n\"I know that was your number one rule, but,\" she took a deep shuddering breath. \"Night's like last night and this morning, that wasn't about fucking, that was about possession, marking me as yours,\" she turned, exposing the most recent bite mark on her neck. \"Not just physically, but in here,\" she touched her chest. \"Even with the best of intentions, I could only withstand the assault so long.\"\n\n\"No,\" he said. \"That's not true. We're good together, we could be a real team, honest and trustworthy and good, like this,\" he reached out to stroke the bite mark on her neck, but she pulled away.\n\n\"I think you should go now, Matteo,\" she said softly. \"I need you to leave before I ask you to stay for all of the wrong reasons and get even more hurt in the future or ending up hurting you. I don't want to do that, not when you've already been so hurt in the past.\"\n\n\"You think this doesn't hurt?\" he let his anger build. All of the anger he felt at his family and the unfairness of the situation he had felt the night before building in him again. \"You think I don't care at all?\"\n\n\"That was the point of your rules, wasn't it? To protect yourself from any scenes like this?\" she asked reasonably. \"The longer we prolong this, the worse it's going to feel, because I am falling in love with you, and no matter how I try to ignore it or rationalise what we have here, like this, I can't. So just go, now, please!\"\n\n\"No! This isn't over!\" he yelled at her.\n\nCat had nothing left to say. She didn't want him to see her crying and think she was trying to emotionally blackmail him, so she got up and went to the bathroom, turning to him as she got to the door. \"I'll be out of the apartment by the end of the week, I hope you can break the lease and get your money back. Goodbye, Matteo.\" She stepped inside and closed and locked the door and ran the shower to hide her sobs.\n\nMatteo was lost. He didn't know whether to feel relieved that she had called it off before love had become a factor in their relationship or whether to stay and fight for the first woman he had cared about in the three years since Nik had left him holding a ring box and the shreds of his dignity. Thoughts of Nik, as always, hardened his heart, and he got dressed and left the studio apartment. If this was how Cat wanted it, then that was how it would be. Far be it for him to beg her to reconsider. He was never going to look that weak in front of a woman again.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "novel",
        "novella",
        "family"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-08"
}