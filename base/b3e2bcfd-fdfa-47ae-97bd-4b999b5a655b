{
    "title": "Nine Months, One Week, Six Days and Roughly 18 Hours",
    "pages": [
        "Nine Months, One Week, Six Days and Roughly 18 Hours\n\nChapter One:\n\nA Strange Request:\n\n\"There's my favourite secretary!\" Comes the loud Canadian twang of my boss from the other side of the desk.\n\n\"You are aware I'm your only secretary?\" I reply without looking up.\n\n\"I am yeah... but I know the other secretaries...and you are by far my favourite.\" I can tell from her tone that she's amused and sure enough when I look up there's a toothy smile on her gorgeous face.\n\n\"What do you want?\" I answer, trying desperately not to smile back at her as I recognise that look and realise I'm about to be buttered up for something.\n\n\"Am I not allowed to simply want to talk to you?\"\n\n\"You are, but at...\" I pause to check my watch \"...nine thirty-three in the morning you wanting to talk to me usually means that you want something. So, what's her name?\"\n\n\"Actually, it's not about a girl this time.\"\n\nI raise a skeptical eyebrow, I'd worked for Dr Shepard, or Kate as she insisted I call her, for almost eight months now after a previous consultant in the department had retired (I'd also been crazy about her for approximately seven months, three weeks, four days and roughly an hour...) and in that time she'd been on so many dates that I'd lost count.\n\nIt wasn't hard to work out how she got so many offers, she was, at least in my eyes, absolute perfection.\n\nShe had shoulder length brown hair, dark brown eyes, a smile that made you putty in her hands and a body that curved in all the right places. Add to that a great personality and sense of humor...plus the whole exotic Canadian in England thing, and you've got a guaranteed recipe for success in the dating game. But somehow it didn't seem to be enough and every few weeks or so we'd have the same conversation about how the woman in question was great...but there was just something missing.\n\n\"Don't look at me like that Erin, I'm being serious...I haven't been on a date with anyone for at least a month now.\"\n\n\"That long? Seriously? Are you ill?\" I ask in mock concern.\n\n\"Ha ha ha, very funny.\" She smiles briefly as she flicks an elastic band at me.\n\n\"Ok, ok,\" I raise my hands in surrender \"what's on your mind?\"\n\n\"Well, you know how much my parents really love Rob?\"\n\nI inhale deeply under my breath, Rob was Kate's long-term best friend from childhood, and practically family in the eyes of her parents. They were desperate to see the two of them get together...despite Kate's lack of interest in the male form.\n\n\"Yeeeaaahhh, I do.\" I reply slowly, wondering what the latest development with her parent's favourite adopted son might be.\n\n\"Turns out his girlfriend just broke up with him and I'm the incredibly obvious choice for a replacement...you know...minus the slight issue of me being into women.\"\n\n\"A small detail.\" I grin over the desk at her.\n\n\"Oh yeah, just a tiny one.\" She rolls her eyes \"Anyway, I'd had a few beers last night when my mom called me to tell me the news; 'he's so sad and depressed, he needs a friend...and a new relationship...and we've known him for so long he's already practically family'...blah blah blah. You know what parents are like.\"\n\n\"I do.\" I say again, pushing what feels like the hundredth letter of the morning into an envelope and sealing it. \"But I still don't understand why you're so wired up about it, you have that same conversation every time you speak to your mum.\"\n\n\"I know,\" she sighs, \"but this time I'd been drinking...and when my mom told me I was almost past the age where I was still wife and mother material I sort of went on a bit of a rant about this amazing woman I'm seeing...only, the problem is that no such woman exists. I just wanted her off my case ya know? And now she's super excited to meet said woman when they come over next month.\"\n\n\"Just tell her you were drunk and you wanted her off your back then. Problem solved.\"\n\n\"Erin, honey, you and I both know that that will only pacify the situation for a few weeks. She'll ask questions, want details, the whole nine yards...\" She begins absent-mindedly making a paper clip chain out of my stationary.\n\n\"So, how do you plan on getting out of this one then?\" I smirk.\n\n\"Well, I was thinking...if they met a girl while they were here then they'd have some solid evidence of another human and it'd sort of, tide them over, for a while, then I wait a couple of months, tell them we broke up and that I'm so traumatised I can't possibly date ever again. All I need to do is find a woman to play the part of my loving girlfriend for the month that they'll be here in the city, the last two weeks when we head down South should be ok...\"\n\n\"Jesus Kate,\" I sigh \"you're an incredible doctor, but sometimes you really are an idiot. This plan is absolute madness. I can't see it helping you long term at all...and\"\n\n\"And if it is doomed to failure it'll be my fault.\" She interrupts \"It's me that'll have to deal with the consequences. But I need to try something Erin, it's really starting to get to me now.\"\n\n\"Well, what're you talking to me for then?\" I sigh again before raising yet another questioning eyebrow at her and pulling the stationary back across my desk. \"Shouldn't you be out there finding a woman?\"\n\nShe smiles sweetly at me.\n\n\"Oh no no no! No way! I am not getting wrapped up in this.\" I reply leaving my desk and walking over to the internal post box to get rid of the pile of letters I'd spent most of yesterday afternoon and this morning writing.\n\n\"But I neeeeeed you.\" Kate whines following me across the room.\n\n\"You're a beautiful woman Kate and you go on plenty of dates, I'm sure if you just called one of them up and told them the plan they'd jump at the chance to play crazy games with you. You definitely don't need me specifically for this.\"\n\n\"I do though!\" She whines again \"I need you Erin, because this won't work with just anyone,\" She grabs my hand causing my stomach to do a backflip and puts on her best 'pretty please' look, \"I need someone I can trust...and who I actually like...and who I know my parents will love...\"\n\n\"First of all, don't try and butter me up with compliments...and secondly, are you seriously telling me you haven't managed to find even a semblance of that in any one of the women you've slept with since you moved here?\" She shakes her head, her eyes becoming suddenly a lot bigger...and sadder.\n\n\"Please Erin, pretty, pretty please. It'll be fun I promise...\"\n\n\"Ok, ok, fine.\" I sigh, my short-lived resolve crumbling instantly as I look up into her deep brown eyes while silently cursing her for knowing exactly how to play me. \"But on your head be it if they don't...\"\n\n\"Ohhh, thank you, thank you!\" She interrupts pulling me into a rib cracking hug. \"You will not regret this!\"\n\n'I already do' I found myself thinking.\n\nIgnoring my massive crush on her, my relationship with Kate was great as a friendship, we'd worked well together from day one and over time had developed a strong professional bond. I knew exactly how she liked to go about her work, while she knew I had a penchant for biscuits and kept me well stocked up. She was the best boss I'd ever had and I loved working with her, the last thing I wanted to do was mess that up...\n\n...\n\nKate left not long after that to attend a meeting she was chairing before the start of clinics that afternoon, while I spent the next ten minutes tidying up my desk after her visit and wondering to myself how on earth we were going to pull this off now I'd agreed to it. I had no real issues with my personal appearance (5ft5in, dirty blonde hair, green eyes, no boobs, I had often been told I had a great bum though) but in comparison to some of the women she'd dated since starting work here I was definitely nothing special. Surely her parents would instantly see straight through it? Or think she'd gone mad and drag her back to Canada by any means possible...\n\n...\n\nI didn't see her again until just as I was packing up for the day, when she casually walked by and dropped a piece of paper on my desk.\n\n\"What's this?\" I shout across to her as she walks away.\n\n\"An itinerary sweetheart, for my parents visit...make sure you're free to join us on some of those dates...parents like girlfriends who're interested in their partner's family.\" She winks theatrically at me.\n\n\"Jesus Kate,\" I reply, unfolding the list and noting at least fifteen points, \"are you sure they're only here for one month and not six?\"\n\n\"What can I say? They wanted to cram a lot in to their visit. Just think of all the extra time you'll get to spend with me.\" She smiles hugely and makes her way to see her next patient while I swing my bag over my shoulder and try not to stare too much at her perfect backside as she walks away. If she sends my heart into a frenzy just by smiling at me how the hell am I meant to keep calm being in even closer proximity to her?\n\n...\n\nI had a lot less time to worry about such trivial things over the next few weeks as my workload crept up; due to the upcoming visit of her family Kate was cramming in extra clinics to ensure her patients were seen before she took time off, I admired her dedication to her patients but was a lot less thrilled when it came to typing up so many extra dictations and letters.\n\nOur lack of free time also meant we hadn't had chance to go over what was, and wasn't going to be acceptable in terms of affection in front of her parents. When I breached the subject with Kate her only advice was to 'act as if she were actually my girlfriend' which was all well and good but if I was being completely honest I needed there to be a line I couldn't cross. There had to be something there to stop the relationship feeling real, to stop me from falling even more in love with her, and to stop the utter devastation I knew I'd go through when it was over and everything went back to normal...\n\nChapter Two\n\nThe Parents:\n\nTwo weeks later Kate's parents arrived. As requested I arrived at Kate's house just before seven on Friday night. I had tried to make myself look presentable, but it's not really my greatest talent and in the end, I decided to just go for comfy and casual, it was going to be hard enough getting through the next month without adding unnecessary stress to the situation.\n\nI take a deep breath, open the car door and as calmly as I can, walk up the door and knock\n\n...\n\n\"Hey baby!\" Kate's face lights up as she opens the door. \"You don't have to knock you know,\" she whispers, \"just let yourself in...and give me a kiss.\"\n\n\"What?\" I whisper in return.\n\n\"Kiss me, we're in love remember?\" She leans in, raises an eyebrow at me and grins.\n\n\"Oh, right, yeah.\" Blushing furiously, I lean in and softly brush her lips with mine.\n\nShe seems on the verge of making some sort of joke at my embarrassment but catches herself just in time. It's my turn to grin now as I realise that Kate only stopped because she remembered she needs me and I could easily tell her parents the truth about us...\n\nShe leads me through into her kitchen where her parents are sitting around the table drinking coffee. There's a brief moment of anxiety on my end but once the introductions are over I feel a lot more at ease. Kates parents, Ira and Elaine, are equally as relaxed as she is, it isn't long before I feel like I've known them for years.\n\nA couple of hours later, just as I'm about to leave, Elaine hands me a copy of her fully complete, well organised and structured itinerary for their visit. Informing me that I'm welcome to come to anything they have planned, as a dutiful girlfriend I of course say I'll try to get to as much as I can and add that getting to know Kate's family is something I'd love to do...all the things parents like to hear. Kate beams at me from behind her mum and gives me a thumbs up before pointedly wheeling her out of the hallway.\n\n\"Thanks Erin,\" she whispers once Elaine has gone and we hug goodbye, \"you were amazing there, they like you.\"\n\n\"Well, I am very likeable.\" I grin back.\n\n\"Oh yeah, you're positively adorable,\" she smiles, leans in and presses her lips to mine, pointedly harder than I did when I arrived, I can feel my cheeks start to colour as she pulls away, \"especially when you blush.\"\n\nWith that she turns me to the door and pushes me gently out of her house.\n\n\"Night sweetheart.\"\n\n\"Night Kate.\"\n\n...\n\nBy the end of the first week I was beginning to seriously regret agreeing to be Kate's 'girlfriend', it had been a long and torturous seven days. We saw each other on all but one day that week and Kate had used every possible opportunity to get my heart racing, I was beginning to think my cheeks would stay in a constant blush for the rest of my days. We met for lunch on a couple of occasions and it was all I could do not to just stare at Kate's legs in the shorts she decided to wear, her legs went on forever and she worked hard to keep them in great shape. She took full advantage of our time together and used every chance she got to be physically closer to me. She kissed me, or wrapped her arms around me, or held my hand...or took my hand and laid it on her bare thigh! In the end I decided she must simply like seeing me blush.\n\nOne night, we went out for dinner with her parents, sat across from each other I had thought it would be a less arduous experience than I'd had so far...turns out I was wrong. I made a conscious effort to keep my arms and legs to myself, not because I didn't want Kate to touch me, the problem was that I found myself starting to crave her touches, I was getting far too comfortable around her for my liking -- exactly what I'd warned myself about before we've started this thing...anyway, about halfway through dinner I succumbed to stretching my legs and accidentally brushed my foot against Kate's calf. Quick as a flash she lifted her foot up and trapped my leg against hers...the rest of the meal passed with Kate grinning at me across the table as her now bare foot rose higher and higher up my calf, past the back of my knee and halfway up the inside of my thigh until she was resting her foot on the edge of my chair between my thighs.\n\nHow I managed to keep calm for the rest of that evening I'll never know.\n\nWe got back to Kate's place a few hours later, I'd driven so both Kate and her parents were fairly tipsy, there'd been a fair amount of alcohol consumed. Ira and Elaine gave me a hug goodnight and went inside but Kate lingered in the doorway;\n\n\"You wanna come in gorgeous?\" She asked in a slightly slurred voice.\n\n\"For 'coffee' yeah?\" I joke.\n\n\"If you want baby,\" she wraps her arms around my waist \"but I was thinking of something that involves a lot less...\" she pauses.\n\n\"A lot less coffee?\" I ask confused.\n\n\"Noooo, a lot less clothes.\" She laughs and rests her chin on my shoulder. She kisses my neck just below my ear and I quickly pull away.\n\n\"No, sweetheart,\" I whisper, trying my best not to make this an embarrassing situation for either of us, although in all honesty I'm not sure Kate will remember this conversation in the morning, \"I can't tonight. I'm out with my friend in the morning.\"\n\n\"No,\" she moans \"don't go with them, stay here and let me...\"\n\n\"I can't Kate, I promised her we were going out weeks ago.\"\n\n\"Fine...\" she sighs \"...but just remember you're mine now,\" she kisses me full on the mouth \"don't even think about letting anyone else kiss these lips!\"\n\nWith that she goes inside, shuts the door and leaves me standing alone and very confused on her front doorstep.\n\n...\n\nEventually week two of my torture rolled around. As I predicted Kate either didn't seem to remember our conversation or was too embarrassed to bring it up, I wasn't complaining about this, although I'd put her actions down to alcohol I was still feeling dazed and confused about her behaviour.\n\nWe saw less of each other that week, I was working Monday - Friday and Kate was busy taking her parents on local trips in the area, she usually called at some point during the day but our conversations were kept brief and strictly work related. If I was being completely honest I missed her being around.\n\nOn the Thursday of that week we went to the cinema, Kate managed to last until roughly half way through the film before taking my hand. Tired from my busy day at work I reciprocated without giving it much thought and rested my head on her shoulder. I felt her smile as she kissed my forehead and rested her head against mine, her thumb brushed the skin on the back of my hand as she squeezed my fingers...\n\nI couldn't tell you what happened in the rest of that film, I was practically asleep on Kate's shoulder, that one small gesture was enough to make me feel completely safe, relaxed and reassured...yet again I found my brain (even in my half-asleep state) reminding my heart that this wasn't real. If it's possible for a heart to crack under intense emotional strain I'm sure mine was doing at that moment in time.\n\nChapter Three\n\nKate's Award Night:\n\nWeek three of this madness and it's Kate's Medical Award Night, she asked me to this event months ago because apparently the woman she was dating at the time was an unsuitable companion for such an event...although what exactly made me a suitable companion I never found out.\n\nIt took me ages to find a dress that was both comfortable and presentable enough to fit in with a bunch of high flying medical personnel for an evening. In the end I opted for a simple royal blue number that clung to my hips and made my legs look great.\n\nI pulled up outside Kate's house right on time, walked up the steps to the front door and let myself in.\n\n\"Erin, is that you?\" Kate calls from upstairs.\n\n\"Yeah, it's me, I'm ready whenever you are.\" I shout back.\n\n\"Jesus,\" I breathe as Kate appears at the top of the stairs not a minute later.\n\n\"Oh god what?\" Kate asks as she sees me staring \"Do I look a mess?\"\n\n\"No!\" I shout, startling her slightly. She raises her eyebrows questioningly at me.\n\nShe's wearing a strapless deep emerald green dress that stops just below her knees, her hair is waved softly around her face, she's also wearing make-up which surprises me, not that it doesn't look good on her, I just don't think in all the time I've known her she's ever worn it.\n\n\"No,\" I repeat more calmly realising I've not spoken for a few minutes, my voice softens and I smile hugely at her, \"you look beautiful. If you don't pull tonight there's something seriously wrong with the doctors in this country.\"\n\n\"I'm not aiming to pull a doctor tonight,\" Kate laughs making her way down the stairs, she kisses my cheek when she reaches me and whispers in my ear, \"I want someone else.\"\n\nBlushing furiously yet again, I turn and follow her out the door.\n\n...\n\nFour hours later the medical event draws to a close, Kate hasn't left my side all night, her arm feels like it's been super glued to my waist. She was easily the most beautiful woman in the room tonight, I found myself working hard not to just stare at her...and I wasn't the only one...she drew glances and stares from both men and women. I almost felt a little guilty at one stage that I was there as her date, she could've had anyone she wanted, that is until I remembered that she asked me to this and I didn't volunteer!\n\nA free taxi pulls up outside the venue (luckily for us) just as it starts to rain. We climb inside, Kate gives the driver her address and then leans back in her seat shivering slightly.\n\n\"Cold?\" I ask.\n\n\"A little,\" she admits smiling at me \"but we'll be home soon, I'll be fine.\"\n\nNot quite convinced, I slide across to her and lay my jacket over us both. Kate says nothing, instead she casually rests her hand on my thigh and leans in to my side. I wrap my arm around her waist, our positions reversed from the rest of the evening, and try my best to keep my heart beating at a normal rate. It feels so natural now for us to act like this that for a moment I forget this part of our relationship isn't real...once the moment passes however and I snap back to reality, I'm certain I feel those cracks in my heart break a little more...",
        "...\n\nAbout a kilometre from Kate's house we hit traffic...and not just a little bit...the rain is now pounding hard on the roof of the taxi and the wind starting to pick up. After roughly ten minutes of not moving I start to feel a little restless, I pull out my phone and check for traffic updates and find that walking would be much quicker.\n\n\"Do you fancy walking it?\" I ask Kate.\n\n\"Hmmm,\" she sighs from her half-asleep position cuddled up to me.\n\n\"I know it's a bit wet out there,\" I say trying to think how best to get her to agree, \"but this traffic is going nowhere fast...it'd get you home to bed sooner...\"\n\n\"I suppose we could do,\" she mumbles back on hearing the word 'bed' \"no point paying to sit still here.\"\n\nWithout waiting for her to change her mind I quickly pay the driver and drag her from the car...just in time for the rain to intensify...\n\nTogether we start to sprint down the street back to Kate's house, by the time we reach her front door the pair of us look as though we've been swimming, we stumble over the threshold and into the hall, catch sight of each other and dissolve into instant giggles.\n\n\"Don't ever suggest that we do anything like that again in this weather.\" Kate says regaining some composure and tipping water out of her shoe. \"I can't see a thing here!\" She indicates the hair stuck to her face.\n\n\"Here,\" I laugh, reaching up to sweep the hair back from her face and tucking it behind her ear \"that better?\" My fingers linger for a moment on her skin and our eyes meet.\n\n\"Yeah,\" she breathes \"much better, thanks.\"\n\nHer eyes don't leave mine as we stand there together, water streaming down our faces, I'm numbly aware of movement coming from upstairs but I find it hard to focus on that as she takes a step closer to me. Without any further pauses Kate leans down and presses her lips to mine, her hands on my hips pulling me closer, a light switches on from some distant place but all I can think about is how good her lips feel...then they're gone and Elaine is asking us what happened...\n\nSlowly I come out of my daze as Kate explains the traffic and the weather, they exchange some conversation about the award ceremony, agree to talk more in the morning maybe, who knows...we say goodnight to Elaine and make our way into the living room.\n\n\"Sorry about that.\" Kate says quietly as she throws me a towel. \"I don't know what came over me...you...\" she starts towelling her hair dry \"...you looked stunning tonight and then the crazy running and the rain...my emotions just got the better of me.\"<br >\"It's ok,\" I stammer in return as my cheeks start to colour \"I felt the same way about you. Guess my emotions got the better of me too...I think looked is definitely appropriate though.\" I gesture to my sodden dress and the hair matted to my forehead.\n\n\"Actually,\" she says slowly as she drops the towel \"looked might be a stretch. That dress is plastered to your body in all the right places,\" she walks across to me and turns me so I'm facing away from her, \"although, I suppose you should take it off. As a doctor I can't really have you getting pneumonia, can I?\"<br >Slowly she runs her fingers across my shoulders causing me to shiver even more under her touch. I hear her breath catch in her throat as she reaches the zip between my shoulder blades and tentatively begins sliding it down my back. She gets the zip to just above my hip line before she speaks again.<br >\"You're actually soaked through Erin...\" she slips her hands down across my ribs, resting them for a moment on my hips \"...wait here.\" She quickly withdraws her hands leaving me standing shivering, alone and half naked in her front room.<br >Looking around my eyes come to rest on a picture sitting on the mantelpiece, I walk over and trace the pattern on the frame with my fingertips; the picture is of Kate and myself in fancy dress from a charity event last year, our arms wrapped around each other, both of us smiling hugely. I can't help but smile now as I relive that day, it was the turning point in our relationship - from strictly work related to genuinely good friends. Of course, that was also the day that spending time around Kate got that little bit harder; being allowed closer to her, both mentally and physically, only made me realise just how crazy I really was about her.<br >\"I love that photo.\" Kate says suddenly from behind me making me jump. \"Here, I bought you some dry clothes. Put these on then get your ass over here,\" she slumps back on the sofa and pats the seat next to her, \"you need to warm up before you head home.\"<br >Suddenly very self-conscious I turn away from Kate and shimmy as best I can out of my dress. I chose not to wear a bra so at least I didn't have to peel that off but the thong was a different ball game. In the end I opt to pull on the shirt Kate passed me and hope it covers my bum as I drop the rest of the dress and quickly pull on the shorts.<br >Kate smiles at me as I finish changing and walk over to her. When I get to the sofa she reaches up and pulls me down so I'm sitting across her lap.<br >\"Thanks for coming tonight honey, I know you aren't big on dresses and heels but you honestly made my night.\" She flashes one of her prized smiles at me and pulls me closer as the rain pounds against the window outside.\n\n\"Picking up your award wasn't the highlight then?\" I grin back.<br >\"No Erin,\" she traces her finger down my cheek, \"having you by my side was all I wanted.\" She leans in closer and hugs me a little bit tighter. \"You looked a million dollars, that dress was just, wow, I couldn't take my eyes off you...\" her breath tickles my neck as she whispers in my ear \"...and I was about ready to swing for that guy who kept trying to chat you up.\"<br >\"He wasn't my type.\" I reply, again reaching up I brush a few loose strands of hair back from Kate's face and tuck them behind her ear.<br >\"Lucky for me eh?\" She slides out from under me so I'm laid on my back and then climbs on top of me. Her lips mere centimetres from mine. \"Warm yet?\"<br >\"Hmmm,\" I wrap my arms around her waist, \"not quite.\"<br >\"How about now?\" She pushes herself against me and cheekily jerks her hips against mine.<br >\"Definitely getting warmer.\" I smile as I bring my arms up under Kate's and rest my palms on her shoulders.<br >Kate jerks her hips against mine again and presses a finger against my lips when I open my mouth to complain.<br >Then she kisses me again, it's just a quick kiss but it's enough to make my heart race and the lingering look that passes between us makes my skin feel like it's on fire. <br >Suddenly embarrassed I slide out from under Kate and head for the kitchen \"I'm just going to get a drink, want me to bring you anything?\"\n\n\"Only yourself.\" She grins.\n\nI return from the kitchen with my drink to find Kate sitting up on the sofa under a blanket, she lifts the blanket at one side and invites me in to sit with her. She leans into my side as I sip my drink, her left arm round my shoulders, her right hand on my thigh.\n\n\"I don't want you to go home tonight Erin,\" she whispers.\n\n\"No?\" I enquire.\n\n\"No,\" she sighs back sleepily, \"I know you're at work first thing but I feel so tired all of a sudden, you fancy just laying here with me under this blanket until I fall asleep? The sofa isn't as uncomfortable as it looks.\"\n\n\"I think I can manage that.\" I smile and kiss her forehead. Putting down my cup I move to the edge of the sofa and Kate lays down beside me, her back flush with the back of the sofa. I lay down on my back and lift my right arm, Kate then rests her head on my shoulder, wraps her arm around my ribs and presses a leg between mine, asleep before I can even wish her goodnight.\n\nAs we lay there together and Kate falls more soundly asleep I start to get a strange feeling in my stomach...and suddenly it hits me...I feel content, absolute, blissful contentment...like all my dreams have come true...but five minutes later the reality of the situation hits.\n\nThis isn't real. This feeling is exactly what I warned myself about before this whole thing started.\n\nAs quietly as I can I slip out from under the blanket, being careful not to disturb Kate I lay a cushion in my now vacant spot on the sofa, grab my clothes and shoes, gently close and lock the door on my way out then get in my car and start the drive home. This isn't the first time I've 'slept over' at Kate's since we started this crazy venture, her parents are late sleepers so we've managed to pass off my morning absences by saying I left early for work, or had plans.\n\nI chastise myself from leaving Kate's house to entering mine, I have to remember that this is all an act, the closeness, the kissing, the cuddles. Just one more week to go and then things go back to normal, Kate goes back to being my out-of-bounds boss, we see each other at work and on the odd night out and she resumes dating those 'out of my league' women...by the time I climb into my bed I've almost convinced myself this emotional experience won't scar me for life...\n\nChapter Four\n\nThe Coast Trip:\n\nThree days after my latest emotionally scarring experience Kate asks for my opinion on local trips she could take her parents on, I suggest a small seaside town my family have been going to since I was a kid...which leads to an invite for me to come along...against my better judgement I agree to go, telling myself that it's almost at an end now, just the home stretch to get through and things will go back to the way they were before...\n\n...\n\n\"Isn't this place just gorgeous Ira!\" Kate's mum exclaims loudly as we reach the top of the hillside.\n\n\"Oh yeah, it's great honey.\" He gasps back clutching his side for the stitch and the fence for balance.\n\n\"Thanks so much for bringing us here Erin, the view is simply beautiful!\" She inhales deeply, taking in the sea air. \"Ira! Make sure you take plenty of pictures for everyone back home...our first trip to the English coast.\" She giggles to herself.\n\nThey quickly start taking photos of everything and anything in their eyeline for their friends and family back home to see while Kate and I hang back by the fence.\n\n\"Thanks for suggesting we come here,\" She smiles at me, \"they love little 'English' things like this.\"\n\n\"That's ok,\" I shrug \"I love it here too so it isn't exactly like it's an inconvenience for me to be here. Plus, this view really is worth it.\" I add, gesturing at the view of the sea from this height.\n\n\"Yeah, it's pretty beautiful.\" She moves closer and wraps an arm around my shoulders, assuming this to be part of showing her parents how in love we are I reach around her waist and hold her closer to me. Kate pauses for a few seconds and then leans down as though she means to kiss me...my heartbeat quickens as she gets closer...but Ira chooses this moment to drag his daughter into a selfie with him and the moment passes by as nothing more than Kate softly kissing my forehead instead. By the time we decide to head back down into the village for some good old fish and chips it's was though our near kiss never happened at all...\n\n...\n\nWe had a great time that evening in the village by the sea, both Kate and her parents loved every second of it and together they were the life and soul of the quiet B&amp;B, the locals thought they were great. It was around midnight when we finally decided to call it a night and head up to bed, Ira and Elaine gave me a drunken hug and thanked me in slightly slurred voices for showing them round and making them feel so welcome...and for taking such good care of their baby girl while they were an ocean away...it was on the verge of getting uncomfortably emotional when Kate pulled them off me and escorted them to their room.\n\nIt was at least half an hour before Kate came back. I was laid in bed checking through some emails on my phone and looking at holiday deals when she finally crawled in beside me.\n\n\"All sorted?\" I enquire with a grin without looking up from my email.\n\n\"Eventually yeah,\" she sighs, sinking down into the pillows \"who knew parents could be such trouble...\n\n...They adore you, by the way.\" She adds after a slight pause.\n\n\"That was the idea though, right?\" I reply, putting down my phone and propping myself up on an elbow facing her. She doesn't answer straight away. \"Kate,\" I say softly, \"this was what you wanted...yes?\"\n\nShe turns to look at me and smiles that gorgeous smile. \"This is exactly what I wanted.\" She lifts her hand and gently traces my jaw with her fingers sending jolts of electricity coursing across my skin. \"I am sorry about us having to share a bed though.\"\n\n\"What do you mean?\" I ask, puzzled slightly.\n\n\"Well, my mom booked the hotel and it would've looked weird if I'd said twin beds instead of a double, I didn't want you to feel uncomfortable in here with me...after you left that night after my award ceremony I sort of thought maybe it was because you were...well, that you didn't want to be so...or you didn't like me enough to want...\"\n\n\"Kate,\" I interrupt \"please stop talking.\"\n\n\"You're right,\" she says, \"ignore me, the rambling is just one of those things drunk people say...anyway, if you're interested, I could really use a cuddle with my best friend while I fall asleep.\"\n\n\"Best friend eh? Rob will be devastated.\" I grin, flopping back against the pillows too.\n\n\"Shut up and get over here.\" She laughs as she turns onto her side and wraps her arm around me. Pulling me in as close as she can she presses one of her legs between mine, nuzzles into my neck and is once again asleep within seconds.\n\nThe last thing I remembered before I fell asleep too was Kate's soft lips pressing lovingly against my skin.\n\n...\n\nI don't think we moved at all that night and when the alarm went off the following morning I awoke to find Kate still wrapped closely around me.\n\n\"Why did we set an alarm.\" She groans sleepily from beside me.\n\n\"Because...\" I smile, switching off the alarm \"...you and your folks have a train to catch today, for the next city on your agenda, remember?\"\n\n\"Nooooo,\" she groans again. Her warm breath tickles my neck as she wraps her hand in my shirt tightly, \"I'm way too comfortable here to get out of bed and get on a train.\"\n\n\"Mmmm,\" I agree, \"but you don't want to miss your train and then have to spend the rest of the day catching up with yourself.\"\n\nI give her a few more minutes, but when Kate makes no effort whatsoever to get up I decide to take matters into my own hands and quickly slide my hands up under her shirt tickling her without mercy as she squirms under me.\n\n\"Ok, ok, I'm up! Stop, stop it...\" she laughs.\n\nRelenting I shift my body out from under her and prop myself up on an elbow, my face inches away from hers.\n\n\"I love seeing you smile,\" I say suddenly, taking even myself by surprise, \"your whole face lights up.\"\n\nShe doesn't answer; instead she slowly raises her hand to my arm, her eyes never leaving mine. Her fingers seem to touch every inch of my being as she makes her way from my fingers to my wrist; I can't tear my gaze away from her, her eyes are like magnets holding mine in place.\n\nShe continues her journey up to my elbow and uses her nails to trace small circles on the crook of my arm. It feels like an eternity passes before Kate's fingers leave my elbow and reach my shoulder, but her hands don't linger there for long and I soon feel her fingers at the back of my neck pulling my face down to hers.\n\nSuddenly nervous and very aware of the little voice in the back of head saying 'are you sure about this?' I subconsciously bite my lower lip, my breathing becoming fast and shallow. Kate seems to sense this and pauses, her soft lips merely centimeters from mine.\n\n\"Do you want me to stop?\" She whispers.\n\nI decide in that moment to ignore that little voice, I bring my free hand to Kate's hip and softly pull her closer;\n\nI shake my head, \"No.\"\n\nHer mouth breaks into a wide grin before she closes her eyes and presses her lips against mine.\n\nI knew instantly that the little voice in the back of my head was right to question this move, nothing I had ever done felt more natural to me than kissing Kate did in that moment. No woman I had ever kissed before had even come close to making me feel the way she was doing...I was completely hooked on her.\n\nMy heart races as I press my tongue against her lower lip, she moans and rolls onto her back pulling me over with her; swiftly I push my leg between hers and run my fingers up under her shirt from her hip to just below her breasts. Kate's left-hand grips my hair tighter, she opens her mouth and our tongues meet, my heart feels like it's about to beat right out of my chest it's pounding that hard...\n\nKNOCK, KNOCK, KNOCK!\n\n\"Kate! Katie, it's mom! We overslept! Wake up, we need to go catch that train!\"\n\nI lept up like a shot as soon as I heard the knocking and started looking around for some clothes while Kate casually rolled out of bed and opened the door a fraction;\n\n\"Mom,\" she begins calmly, \"we get it ok? But I'm not gonna see my girlfriend for another couple of weeks while we're off in another city...so could you like, give us a few minutes? We'll meet you downstairs ok?\"\n\n\"Oh...right...ok...\" Elaine mumbles back as her face starts turning red.\n\n\"Ok...\" Kate slowly closes the door and leans back against it.\n\n\"Jesus,\" She says to me as I pull a t-shirt over my head, \"you don't hang around. Anyone would think you were looking for a reason to stop kissing me...\"\n\nShe walks slowly across the room; her hands reach out to me and my stomach backflips as she cups my face between them. \"Now, where were we?\"\n\nMy mind feels like it's in overdrive as I watch Kate moving towards me; two minutes ago kissing her had felt like the most natural thing in the world...maybe even the best thing that had ever happened to me...but now I almost wish it never happened. The idea of our arrangement was that her parents believed we were in love, not that we did. How comfortable we were around each other was what made our current relationship so great, was a moment of lust really worth risking that over?\n\nKate leans down to kiss me again and I back away from her slightly, I can't even bring myself to look at her as I speak;\n\n\"Maybe we should...pack...and stuff. I don't want you to miss your train and have your parents miss out on what they've come to see...\"\n\n\"Oh...\" Kate says in surprise, pulling away from me.\n\n\"It is sort of a mess in here...\" I gesture at the state of the room.\n\n\"Yeah...I guess...\" Her hands leave my face and she turns away without another word.\n\nWe pack in silence, I catch a glimpse of her face just as we're finishing up and seeing the hurt etched into her features makes my heart feel suddenly so cold and empty...\n\n...\n\nThe drive to the train station was agony.\n\nI drove while Kate sat beside me in the passenger seat, Ira and Elaine chatted away in the back for the duration of the drive, but I couldn't tell you what was said, all I could focus on was Kate's hand resting on mine, and her grip getting tighter the closer we got to the station.\n\nI pulled into a parking space at the back of the station with fifteen minutes to spare before the train was due to leave.\n\n\"Thanks so much for everything Erin,\" Elaine beamed as she hugged me goodbye, \"you'll have to come to us for Christmas so we can show you Canada!\"\n\n\"I'm not sure I'd fit much in,\" I smile, \"I hear it's a big place.\"\n\n\"It is, but we live in the best bit.\" Ira winks at me over his wife's shoulder. \"Let the poor girl go Elaine.\" He steps forward and pulls her off me before giving me one last hug himself. \"Thanks for taking care of my Katie,\" He whispers out of earshot of his wife and daughter, \"I've never seen her as happy as she is whenever she's with you.\"\n\nI didn't reply, I couldn't, words just simply wouldn't come out and it only got worse when it came time to say goodbye to Kate.",
        "Ira and Elaine went into the station to 'find their platform' giving me and Kate the privacy to say goodbye properly after Kate's speech this morning. My breath caught in my throat as I tried to find the words to explain how I was feeling, but Kate didn't give me much time to think; the second her parents were safely out of sight she stepped towards me and kissed me sweetly, I think my knees would've buckled there and then if she hadn't immediately proceeded to wrap me in her arms.\n\nWe stood in silence and Kate held me as close as she could until Elaine reappeared to say the train had arrived...\n\nI watched them into the station and waved goodbye to Elaine as Kate disappeared without a word. As I got back in the car my stomach felt as though it was tying itself in knots and my chest felt strangely cold and empty; by the time I pulled out of the carpark and began my journey home tears had begun streaming down my face...\n\nChapter Five\n\nThe Calm Before the Storm:\n\nThe next two weeks passed in a haze, Kate hadn't called or texted since we had parted ways at the station and I found myself missing her terribly. I tried desperately to throw myself back into work in an attempt to take my mind off her, but everywhere I turned she was there. Her office was straight across from my desk and just reading her name on the door was enough to cause my chest to feel tight, the 'World's Best Secretary' mug she'd bought me as a joke last Christmas was stashed away in a drawer out of sight. I'd even had to move the paperclips off my desk to stop myself joining them together as Kate so often did when she walked past. I suppose really my only saving grace was that the other secretaries had already quizzed Kate to death on her plans for her time off so they at least didn't ask me too many questions on the subject.\n\n...\n\nAt long last, it was the Friday afternoon before Kate was due home; generally speaking we left work early on Fridays but I just couldn't bring myself to put my coat on and drag myself out of the office. I was staring into space, contemplating finding a new job when my phone buzzed and snapped me out of my trance.\n\nMessage received from Kate:\n\nWith some trepidation, I picked up the phone and opened the message.\n\nHey Erin, I'm not really sure I have any right to ask this, but my parents have decided to come home with me...just for a couple of days...then they're catching a flight back to Vancouver from this end of England rather than London...I tried to get them to keep their original plans, it'll cost them a fortune to change flights, but they wouldn't listen.\n\nAnyway...they'd love to see you before they fly home - if you're free - so I said I'd text you and ask...and of course, I'd love to see you too.\n\nI'm so so sorry for what happened, I guess I just got caught up in the moment...do you think maybe we can start again? I miss you so much honey.\n\nKate\n\nxxx\n\nMy breathing eases slightly as I re-read the message, although it does nothing to ease the speed at which my heart is pounding against my ribcage. Maybe I don't need to find a new job after all. I reply to Kate's message, saying I'm free on Sunday and then lean back in my chair, my hands cupping my head as I stare at the ceiling.\n\nMy phone buzzes again five minutes later with Kate's reply;\n\nSunday sounds great, dinner at my place ok? xxx\n\nI reply again saying I'll be there for around six, throw my phone in my bag, switch off my computer and leave the office with a massive, yet somewhat nervous grin on my face.\n\nChapter Six\n\nReunion:\n\nSunday evening rolls around and once again I find myself sitting in my car outside Kate's house trying to calm down. I close my eyes and lean back taking several deep breaths.\n\nA quiet tapping noise at the window brings me sharply out of my revere. I open my eyes and find myself face to face with Ira.\n\n\"I hope you plan on coming in soon?\" He smiles. \"Only I've got a daughter in there who's been like a bear with a sore head since she said bye to you two weeks ago.\"\n\nI open the car door and climb out.\n\n\"Hey Ira,\" I grin, \"how was your trip?\"\n\n\"It was pretty good eh, I'll tell you all about it over dinner. I hope you brought wine.\"\n\n\"Better,\" I laugh pulling out a box from the passenger seat, \"I brought beer.\"\n\nHe takes the box from me and laughs, \"I knew you were a keeper!\" \n\nWith Ira's arm now wrapped around my shoulders I find myself being steered up the steps and through the front door of the house.\n\n\"Kate!\" He yells, almost deafening me \"Erin's here.\"\n\nHe disappears off into the kitchen leaving me standing at the foot of the stairs with my hands stuffed in the pockets of my hoodie. I catch sight of myself in the mirror as I stand there and wish almost instantly that I'd seen my reflection before I got in the car; as usual my hair looks ruffled and unloved, the small amount of make-up I threw on before leaving the house does nothing to cover my tired eyes and my skin seems to be even more pale than normal.\n\nI find myself wondering how on Earth Kate's parents believe that we're a couple as I examine my appearance. She could have anyone she wanted, in the past few months she's dated women so out of my league they probably don't even know my league exists and yet here I am about to have dinner with her and her parents...\n\n\"Hey baby!\" Kate smiles at me as she bounds down the stairs.\n\nShe looks, if it's at all possible, even more beautiful than she did when she left two weeks ago. Her hair is swept back in a loose ponytail, a few stray locks feather her face and soften her features. It looks as though she's caught some sun too, her skin is a gorgeous, lightly tanned and freckled brown. Then there's the shorts...her legs couldn't have looked more perfect if she'd tried!\n\n\"Hey,\" I manage to reply, plastering a smile on my face, \"how was your trip?\"\n\n\"Oh, you know...\" she leans down as though she means to kiss my lips, but seems to change her mind halfway to doing so and instead catches me on the corner of the mouth.\n\n\"...anyway...\" she continues, a pink blush spreading across her cheeks \"...it was pretty boring really, saw a few museums, some big rocks, a clock...\"\n\n\"Some big rocks?\" I ask, raising an eyebrow.\n\n\"Yeah...\" she lifts my hoodie slightly and wraps her arms around my waist \"...Stonehenge...big rocks...\"\n\n\"Oh right.\" I smile, catching on.\n\n\"...God I've missed you...\" she sighs holding me tighter.\n\n\"I'm so glad you could come over this weekend,\" Kate continues after a pause, \"it would've broken my heart if you'd turned me down...I was so worried I'd messed everything up...\"\n\n\"Don't...\" I interrupt \"...you asked if I wanted to stop and I said no, what happened is on both of us.\n\nI tilt my head back to grin up at her.\n\n\"It was a really good kiss though.\"\n\n\"Really good?!\" She replies incredulously. \"Erin darling, it was out of this world. I brought my best moves to that party!\"\n\n\"Those were your best moves?\" I ask, trying desperately to keep a straight face.\n\n\"Erm, of course, which moves did you think I'd bring out for the woman I...\"\n\n\"Oi! Are you two love birds joining us in here or what?\" Ira yells from the front room before Kate can finish her sentence.\n\n...\n\nA few hours later I feel like I've lived the last two weeks with Kate while she's been away, Ira and Elaine spared no expense when it came to details. Kate on the other hand said hardly anything, even when invited to join in on the conversation. She seemed blissfully happy sitting by my side with her arm around my shoulders just listening.\n\nI realised I wasn't reciprocating very well during a story about Stonehenge and casually moved closer to her, resting my hand on her thigh. She jumped slightly at the contact but placed her hand over mine as I made to pull it away. I squeezed her thigh in reassurance and Kate responded by tightening her grip around my shoulder and kissing my forehead.\n\n\"You two make such a cute couple!\" Elaine says suddenly from the other side of the table.\n\nMy cheeks start to colour instantly.\n\n\"They do, don't they?\" Ira adds causing my cheeks to turn an even darker shade of red.\n\nKate jumps up from her seat and starts picking up plates to take them through to the kitchen. I follow suit and grab a few more.\n\n\"Sorry about that,\" she says as I enter the room, \"I hope you're not too embarrassed.\"\n\n\"It just took me by surprise is all. Here,\" I take the plates off her, \"I'll sort those, you should be spending time with your mum and dad.\"\n\n\"It's ok, I'll do them.\"\n\n\"Kate!\" I say firmly \"I can wash a few dishes, go and relax with your folks. I'll be back before you know it.\"\n\n\"You'd better be.\" She smiles.\n\n\"Go, Kate...\" I repeat, begrudgingly managing to get her to leave the kitchen.\n\n...\n\nThe sudden presence of Kate's hands on my hips makes me jump and draws me out of my revere.\n\n\"You look pretty good stood over the sink washing up you know...\" She whispers quietly.\n\n\"Yeah?\" I reply, watching her in the reflection from the window and trying to keep my breathing at a normal level. \"The rubber gloves doing it for you?\"\n\n\"Oh yeah...\" She smiles against my ear and presses herself against my back, \"...they're a massive turn on. You've been ages by the way...\" She squeezes my hips gently.\n\n\"How many beers have you had?\" I enquire as her fingers wander up towards my ribs.\n\n\"Enough that I feel brave enough to do this.\" She leans down and bites my neck softly.\n\n\"You should be spending this time with your parents really,\" I breathe as I feel her teeth on my skin, \"they're only here one more night.\"\n\n\"I know, but I thought I'd take advantage of the fact they're engrossed in the tv to come spend some time alone with you. Keep up the illusion that we're madly in love and all that.\"\n\n\"Are you worried they don't believe we are?\"\n\n\"Definitely not,\" She admits, resting her chin on my shoulder, \"I think they may love you more than they love Rob...maybe even more than they love me actually.\"\n\n\"Oh ha ha,\" I frown at her in the window.\n\n\"I'm being serious, apart from their desperation to try jellied eels all they've talked about the past two weeks is you.\" She wraps her arms around me fully and pulls me into a comfortable embrace. \"I'm going to miss you being around when this is all over you know.\"\n\n\"You'll still see me five days a week at work.\"\n\n\"True,\" she sighs, \"but at work I can't do this...\" she slides a finger under the collar of my shirt and softly kisses the exposed skin before resting her chin on my shoulder once more.\n\n\"Technically, at home you can't do that either,\" I laugh.\n\n\"Hmmm...\" Kate breathes, her arms tightening around me.\n\nA lull falls in the conversation after that, apart from the gentle rise and fall of her chest as she breathes Kate never moves from her position behind me as I finish washing the last few plates. She seems suddenly so sad and quiet as we stand there, a far-away look on her face.\n\n\"Are you ok Kate?\"\n\n\"Just got a lot on my mind that's all, nothing for you to worry about baby.\" She smiles, kissing my forehead.\n\n\"Less of the 'baby' thank you!\" I swat her arm. \"And I do worry about you, whenever you go quiet it means something isn't quite right...\"\n\nA long and somewhat awkward silence follows.\n\n\"...you are ok with leaving things like this aren't you?\" I continue as I turn to look at her. \"Because if you're not just let me know ok?\"\n\nShe doesn't answer again; the kettle seems to have gained some extraordinary powers and become the most interesting thing in the kitchen. I pull my gloves off and reach for her, turning her face towards mine;\n\n\"...you can tell me Kate...I won't be offended if you've all of a sudden decided it's too complicated to leave things as they are now...\" I offer her a cheesy grin as I look up at her \"...we can stage a dramatic break-up if you want?\"\n\nShe shakes her head and attempts to smile but her expression doesn't alter, her brown eyes look watery and read nothing but sadness.\n\n\"It'd break my heart if we broke up.\" She whispers, her eyes blazing into mine. \"In fact, it breaks my heart just thinking about it, even if it would be a fake breakup...\" she says wiping a lone tear from her cheek, that far-away look back on her face.\n\nShe shakes her head and takes a deep breath, steadying herself \"I think maybe I'm gonna head up to bed.\"\n\n\"I should probably head home myself,\" I reply, although my body seems unable to make any attempt whatsoever to move, \"I'm covering for Ann first thing.\"\n\nKate leans down and kisses my cheek before making her way to the door.\n\n\"Erin?\" She pauses with her hand hovering over the door handle.\n\nI look across at her.\n\n\"Do you want...would you...\" she takes a deep breath \"...I might be over-stepping the boundaries of this,\" she indicates the space between us, \"but would you stop here tonight...with me...I really don't fancy being alone...maybe we could just watch a movie together?\"\n\nI've never seen her look as vulnerable as she did in that moment, her eyes were on the floor, her whole body seemed to sag further with every word she spoke, her normally happy and sunny disposition appeared to be gone and I found myself simply unable to leave.\n\nI walked across the kitchen and took her hand in mine, we said a quick goodnight to her parents and I lead her up the stairs. I hadn't been to Kate's room before, it was a lot smaller than I'd expected and somewhat sparse.\n\n\"I don't like clutter while I sleep.\" Kate said when she noticed me looking around. \"I also like the window open but if it gets cold I'll close it.\" She walks around to the other side of her bed and pushes the window open a fraction.\n\n\"First Wives Club ok?\" She asks picking up the remote and flicking through the tv.\n\n\"Sounds great,\" I smile as I take off my hoodie and climb on to the bed, I lay down on my back using the pillows to prop myself up.\n\nKate finishes setting up the movie then climbs on to the bed beside me, her arm lightly brushing against mine.\n\n...\n\nAs time ticks by Kate falls into a doze and rolls onto her side facing me, her arm pressed between us. By about the halfway point in the film I start to notice her shivering as the temperature in the room dips; reaching over her I grab a blanket from the top of her bedside table and pull it over her sleeping body.\n\n\"Thanks baby,\" she sighs sleepily, \"it's so cold in here.\"\n\n\"You want me to close the window?\" I ask choosing to ignore the fact she called me baby again.\n\nShe shakes her head, \"no, I like the air.\"\n\nPerhaps ten minutes later a strong, cold breeze fills the room as the wind picks up outside. Kate snuggles closer to me for warmth and I instinctively press my lips against her forehead.\n\n\"Come here sweetheart.\" I whisper. I roll off the bed and pull the duvet back for Kate to get under the covers; once she's in I gently take the blanket from her and lay it on top of the duvet before sliding in next to her. I lay on my side and open my arms to Kate, inviting her to cuddle with me. She doesn't need any persuasion and instantly moves into my embrace, her left hand reaches up under my shirt to rub my back, she tucks her head into my chest and sighs happily, her face once again lit up by her smile. I wrap my right arm protectively around her and kiss the top of her head.\n\n...\n\nIt's 3am when I next open my eyes, the movie finished long ago but the tv has somehow switched to a different channel and is now blaring out at full blast. I slide out of bed and fumble around until I find the remote, Kate stirs in her sleep but doesn't wake. She looks so beautiful laid there under all the covers, her hair pushed up in a mess around her head.\n\nQuietly I slip out of the room for a bathroom break and on my return I find Kate in her shirt and boxers, hunched over tightly peering out the window.\n\n\"Kate?\" I whisper. \"What on Earth are you doing?\"\n\n\"I...th...th...thought you le...left me.\" She sobs.\n\n\"Hey, hey,\" I rush over to her and pull her away from the window. Sitting her down on the edge of the bed I tightly wrap her in my embrace. Her arms and forehead are freezing from leaning against the cold glass, I tip her face up to look at me and use my thumbs to wipe away the tears streaming down her cheeks, \"don't be daft. Never in a million years would I do that to you.\"\n\nI quickly kiss her forehead and then pull her into me once more. She sobs against my chest for what feels like hours, simply unable to calm down. Her arms wrap around me, her fingers dig almost painfully into my back.\n\n\"Shhhhh,\" I whisper as I run my fingers through her hair, \"it's ok, I'm here...\"\n\n\"I'm so...sorr...sorry,\" she stammers, her breathing slowly starting to become more regular, \"I just wo...woke up and you were gone and I felt so al...alone...\"\n\n\"Hey,\" I say cupping her face in my hands once more, \"everyone feels alone sometimes, it's human nature. But I'm not going anywhere ok?\"\n\n\"Promise me something,\" she whispers as she looks up at me, beautiful even with tears still rolling down her cheeks.\n\n\"Anything.\" I reply, meeting her gaze.\n\n\"Don't ever change.\"\n\n\"I won't.\"\n\n\"I'm serious Erin,\" she stands up slightly until her face is level with mine, \"you are so awesome just the way you are.\" She runs her fingers up my back and pulls me closer. \"In fact,\" she whispers, closing the distance between us, \"you're so much more than that,\" her face is now so close to mine I can count the freckles on her nose, \"to me you're perfect.\"\n\nI can't move, I'm so captivated by her I feel like I'm in a trance.\n\nShe softly bites her bottom lip and I find myself unable to tear my eyes away as she gets ever closer. \"Kiss me Erin,\" she brushes her cheek against mine, her skin still so soft despite the tears, \"please honey...\" she nuzzles into my neck and whispers closely \"...please...\"\n\nSlowly I turn to her, searching for her lips, I bring my hands to her waist and hold her gently,\n\n\"...please...\" her tears leave a trail on my skin and I find myself completely powerless to resist.\n\nI bring my right hand up to her face and turn toward her, leaning in I kiss along her jaw as she rests her cheek in my hand.\n\n\"...please Erin...\" she whispers again.\n\nOur lips finally meet and Kate whimpers. The fingers of her right hand find their way to my hair and hold us together.\n\n\"...don't stop baby...\" she nips my lower lip.\n\nI push against her until my weight becomes too much and she's forced to sit. Laying her back down on the bed I climb on top of her, my legs either side of hers, the kiss deepening. Her hands reach down and cup my ass;\n\n\"I've wanted to do this forever.\" She gasps between kisses as she squeezes my ass.\n\nI moan unwittingly into her mouth and feel her start to smile. The past few weeks of telling myself to keep my distance and not to get too emotionally involved may as well never have happened as we lay there together, I'm completely lost in her. Stupid idea or not, I decide in that moment that I can't go on pretending I don't want this, screw the consequences...\n\nPressing my body as close to Kates as I can I push my tongue against her lips and gently lift one of my legs, easing the pressure against her thigh.\n\nKate responds exactly as I want her too and invites my tongue into her mouth, she squeezes my ass again, harder this time and spreads her legs.\n\nI don't pause for thought and instantly start exploring her mouth with my tongue while pushing my thigh firmly between hers. I feel Kate's hands start to creep up under my shirt, pulling the material and exposing my skin.\n\n\"Patience is a virtue darling.\" I grin playfully, grabbing her hands and holding them over her head, lowering the pressure of my thigh. She groans in frustration and lifts her hips, searching for that now missing feeling.",
        "I lean down and kiss her again, gradually returning my thigh to its resting place, Kate gives a long, low moan of appreciation and I feel myself get even more turned on as her hips begin bucking up into me.\n\nI run one of my hands down her arm as I kiss my way down her chin, I let my hand slide all the way down her body until I reach the bottom of her shirt where I trace a few lazy circles on her hip as my kisses now move onto her stunning neck.\n\nShe thrusts her hips up hard into me and gasps as my lips make their first contact with her neck. Moving my fingers agonisingly slowly I use my fingernails to trace yet more circles on her skin, up to her hip, across her abs and ribcage, letting my hand rest over her left breast.\n\n\"...mmmm...don't stop there...\" she mumbles pushing her chest up until her nipple is pressing against my palm.\n\nTaking the hint, I take her nipple between my thumb and forefinger and begin pinching it gently, all the while kissing and licking my way down her neck.\n\nAs I reach the base of her neck I suck the skin into my mouth and pinch her nipple hard.\n\n\"Oh God!\" Her right hand escapes my grasp and grips my hair tightly. \"That feels so good honey...don't stop...please God don't stop...\"\n\nI push my thigh as hard into her as I can, she's so wet now I can feel it through my shorts, I roll her nipples between my fingers, alternating between each of her perfect breasts.\n\n\"...please baby...oh fuck...don't stop...don't stop...\" she gasps, her breath coming in short bursts. She thrusts as hard as she can against my thigh, her grip on my hair almost painful.\n\nI pull my thigh away and slip my hand down under her boxers, she groans again, almost angry this time. But the groans soon become moans as I find her soaking wet pussy and push two long fingers inside, I kiss her again as I curl my fingers upwards and pump them in and out of her.\n\n\"...more...Erin...please...fuck...don't stop...I've waited so long...I'm so so close...\"\n\nI use my thumb to rub her swollen clit and Kate kisses me in earnest, her body presses tightly against mine as she moans into my mouth, her legs wrap around me and her hips jerk as she grips my fingers inside her.\n\n\"...oh fuck baby...I'm cumming...I'm cumming...please God...\"\n\nShe bites down hard on my shoulder to stop herself from shouting and my hand is soon coated in her juice as it runs down my fingers and the inside of her thighs. Her body seems to shake for an age, every nerve ending so sensitive to even the slightest movement as we lay there. I pull my fingers out of her and suck them into my mouth.\n\n\"You taste so fucking good.\" I smile down at Kate.\n\n\"Hmmm,\" she moans quietly.\n\nI shift my bodyweight and instantly her legs tighten around me again.\n\n\"Don't go...\" She gasps, her hand gripping my arm.\n\n\"Shhhh,\" I whisper as I kiss her once more, \"just relax.\" If this turns out to be the first and last time I get to enjoy her like this I intend to make full use of my time.\n\nSlowly her legs unwind from their grip around me and I'm free to move again. I sit up and encourage her to move up the bed until her head is resting on the pillows.\n\nReaching down I hook my thumbs under her shirt and pull it up over her head, momentarily trapping her arms above her I lean down and kiss her again, gently sucking on the tip of her tongue.\n\nSoftly I make my way down her body. Her breath catches in her throat as I nuzzle against her neck and she moans quietly when I run my fingers across her nipples while kissing down between her breasts.\n\nI spread my hands outwards and slide them over her ribs down to her hips, my lips never leaving her skin as I lightly lick across her toned stomach. I slip my fingers under the legs of her boxers and tug them down over her bum.\n\nSliding down off the edge of the bed I pull her boxers with me and drop them unceremoniously on the floor at my feet. I have to take a deep breath to steady myself as I stand there looking at Kate. This is the first time I've ever seen her fully naked...and it's an image of perfection I will never forget. Her toned body shines with a thin layer of sweat, small rose coloured nipples stand erect on the slightly darker areola of her rounded c-cup breasts, her hips have just the slightest bit of extra curve and a line of dark brown hair leads you to her plump, glistening pussy. Then there's the legs, long, slender and toned, it feels like an age before my eyes finally reach her ankles.\n\n\"Do you have any idea how stunning you are?\" I ask while I gently massage her calves, my gaze skimming over her body trying to drink in every little detail.\n\n\"I've been told a few times before...\" Kate smirks, watching me admiring her.\n\n\"Oh really?\" I reply, moving the massage up over her knees.\n\n\"Really really.\" She sighs happily, leaning back into the pillows. \"But they never said it with nearly as much conviction as you just managed...and they never looked at me like you're doing right now.\"\n\n\"More fool them.\" I whisper into her thighs as I push her legs apart and lay down between them, deliberately resting my cheek on her thigh close enough to her still glistening pussy for her to feel my breath.\n\n\"...ohhh...\" she moans as I blow air on her pussy \"...and they never made me feel anywhere near as good...\"\n\nI lift a finger to her clit and trace one small circle on it as Kate moans in delight.\n\n\"And I'm not even trying.\" I laugh and wink at her.\n\n\"Mmmmm,\" she moans again, stretching out on the bed \"please honey, keep going.\"\n\nI slide my finger down from her clit through the folds of her pussy and press gently at her entrance, applying just enough pressure for Kate to lift her hips before I then pull away, moving back up to her clit.\n\nI repeat these few small moves over and over again until Kate's breathing starts to become more ragged.\n\n\"Erin...\" She whispers quietly.\n\n\"Hmmm?\" I hum in return, taking her by surprise and pressing my tongue into her pussy.\n\nShe inhales sharply and closes her eyes, grinding down ever so slightly, forcing my tongue further into her sopping wet hole.\n\n\"...feels so good...\"\n\nI reach up and rub her clit with my thumb, one of Kate's hands reaches up and grips the headboard, the other grabs her breast and squeezes, her fingers tweaking her nipple.\n\nMy own pussy is so wet from watching her that I can feel it running down my thighs.\n\nNot wanting to waste time I begin to devour her in earnest, my tongue everywhere, in her pussy, on her clit, licking the sensitive spot at the top of her thigh that makes her moan so sweetly.\n\nHer juice is dripping down my chin now, her body writhing under my hands. I push her legs apart and pull her hips down to my face, burying my tongue as deep inside her as I can. My hands slide under her and squeeze her oh so perfect ass;\n\n\"Oh fuck!\"\n\nShe releases her grip on the headboard and stuffs her hand in her mouth, biting down to stop herself from crying out again and waking her parents. Realising how close she is I push my fingers once again into her welcoming pussy and nibble on her clit...\n\nShe moans loudly despite the hand in her mouth. Her thighs clamp around my neck and her pussy around my fingers. It's all I can do to keep hold of her, her hips buck uncontrollably as I try to lap up the juice flowing from her.\n\n...\n\nEventually she relaxes the grip of her thighs and reaches out for me.\n\n\"Come here honey.\"\n\nI crawl up the bed and into her arms; pressing as much of my body against hers as I can I then roll onto my back and pull Kate with me, dragging the duvet over us both. She rests her head on my chest and sighs contentedly.\n\n\"How long have you waited?\" I ask quietly.\n\n\"Hmmm\" She replies half asleep.\n\n\"Earlier, you asked me not to stop, you said you'd waited so long. How long exactly have you been waiting?\"\n\nShe raises herself up on her elbow and rests her other hand lightly on my chest.\n\n\"You remember that first girl I dated? The one who worked in ortho?\" I nod \"Well, we broke up because she was threatened by you.\"\n\n\"By me? But...\" Kate presses her finger against my lips and then proceeds with her story.\n\n\"All I talked about was you, whenever me and her would do things together I'd find myself wishing I was there with you instead, or I'd see something and be reminded of you, or I'd think 'Erin would love that.' Then when we broke up she told me to call her when I was, and I quote 'over that bitch who worked for me'\n\nOf course, at the time I figured she was just jealous of how good you are at your job, her secretary was such a moron...by the way, you are seriously the World's Best Secretary ya know? You make my life so much easier when it comes to work...\" I smile and stroke her cheek.\n\n\"...but the more I thought about it the more I realised that it wasn't just a work thing. I started dreading Friday afternoons because I knew it'd be two days before I saw you again, I hated the girls you dated because they got to spend time with you and I didn't...I hated the girls I dated because they weren't you...on Sunday nights I wouldn't be able to sleep I'd be so excited to see you again, the drive to work on a Monday morning would be agony. In fact, I wouldn't be able to calm down until I saw you...\"\n\nShe pauses and takes a deep breath before continuing \"...it took about two months of that for me to realise I wasn't just 'being protective' but that I was actually falling for you.\"\n\n\"You were falling for me?\" I ask quietly.\n\nKate doesn't seem to hear me \"Then I had that conversation with my mom and I couldn't think of anyone to do this with besides you. Thennnn we went to the coast and I started to think maybe you felt the same way...until you pushed me away.\n\nI was so scared I'd lost you that day, when I kissed you at the station I thought it'd be the last time I ever got the chance. It means the world to me that you came over tonight...just please say you feel the same way about me because I don't know what I'd do if you didn't...you mean so much to me...\"\n\nHer eyes begin to well up again as she gazes down at me.\n\n\"I love you Erin.\"\n\nI lay there in stunned silence just staring at Kate, tears begin to roll down her cheeks again but the grip she has on my arm never falters.\n\n\"Say something Erin...please.\" She whispers.\n\n\"You love me?\"\n\nShe nods.\n\n\"Really?\" I ask \"I'm not dreaming?\"\n\n\"You're not dreaming sweetheart.\"\n\n\"Well then,\" I stammer, my voice shaky and quiet, \"it's a good job I love you too.\"\n\n\"You, you do? Kate says doing a double take.\n\nI cup her face between my hands, \"I've been crazy about you since the day we met Doctor Shepard.\" I kiss her lips gently. \"Now, I may wake up in a few hours and find that this has all been a dream, but for now at least...\" I kiss her again \"...I plan on enjoying every second.\"\n\n\"Speaking of enjoying every second...\" Kate kisses my neck and goes to lift my shirt over my head but I pull her hands away and wrap them around my neck.\n\n\"We've got plenty of time for that later,\" I smile and kiss her again \"for now I just want to lay here and enjoy this.\"\n\nKate smiles broadly as I kiss her and presses her naked body against me, I can't help but grin too as I revel in the feel of her in my arms, cursing myself for not just giving in and letting myself fall completely in love with her nine months, one week, six days and roughly 18 hours ago.\n\nEnd "
    ],
    "authorname": 184081,
    "tags": [
        "lesbian novel",
        "lesbian romance",
        "love story",
        "drama",
        "lesbian drama"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/nine-months-one-week-six-days-and-roughly-18-hours"
}