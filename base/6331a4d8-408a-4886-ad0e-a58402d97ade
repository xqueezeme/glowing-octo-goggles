{
    "title": "Hearts of Warriors Ch. 12",
    "pages": [
        " Sorry for the delay in posting up a new chapter. Real life and all that...makes for a bit of trying time when it comes to writing and being online sometimes.\n\nMy thanks to mikothebaby for editing for me as always :)\n\nEnjoy! \n\n*\n\nMac knew he should be concerned about driving to the Armand-Hanlon compound but he couldn't take his mind off the soft skin of Lily's thighs as she sat demurely beside him in the Jeep. She'd made a show of pulling the hem of her dress down as far as possible but it had still ridden up to expose her flesh.\n\nHe was so hard it was painful to drive and the slight smile on Lily's lips let him know she was well aware of her effect on him. He wanted to growl in annoyance but his feral side approved of the way she was keeping him on his toes.\n\nTheir earlier disagreement was playing on his mind, her apparent easy forgiveness of his blunder appearing a little too easy. He was sure it wasn't natural for a woman to just let something that important go so easily. But then, he was also aware that there was a hell of a lot he didn't know about his mate as well.\n\nHe knew the important things, that she was strong and feisty and had a wicked sense of humour. He knew she tasted divine and was spontaneous in her affections and gave herself freely to him. She was sexy and addictive and she appeared to crave him as much as he did her. It was just her thought processes he wasn't completely certain of. She didn't come across as a typical woman at times which baffled him.\n\n\"You're frowning,\" the object of his thoughts said, with a hint of amusement in her voice. \"Are you worried about meeting the parents?\" She sounded relaxed enough but Mac knew she had to be concealing her own concern about the up and coming meeting.\n\nHis eyes travelled quickly from her bared thighs up to her face. \"I was actually trying to work out the way you think,\" he admitted, seeing the turning for the wolf compound coming up and concentrating back on the road.\n\nLily laughed, though inside her stomach felt as if it was going to revolt as they turned onto the dirt road leading home. A few more moments and they'd be there and she'd have to face her father's disapproval not to mention Rafe's. She was pretty sure her mother would just be relieved to see her and not too angry but the pack males tended to overreact very easily.\n\n\"And here I was thinking you were too engrossed in staring at my legs to be thinking with any part of your anatomy above the waistline,\" she teased him to keep her trepidation at bay. They were bonded now and he'd be able to sense her emotions. She had no doubt that if she was too tense he would be too and then Lord only knew what would happen when they came into contact with her father.\n\n\"You made sure exactly where my thoughts would be,\" Mac grumbled, unable to stop his hand reaching out to touch the flesh which was teasing him mercilessly. It was a mistake and he knew it straight away. The second Lily gasped at his touch and his fingers connected with her skin he was slamming on the brakes and turning off the engine.\n\n\"Mac...\" Lily's breathless cry was cut off as he pushed open the door and headed around to her side. He was pulling her out of the Jeep before she could utter his name a second time, his intentions plain. She couldn't expect to get away with wearing a dress that practically begged him to take it off without him reacting to it. He couldn't remember ever having signing up to sainthood. \n\nHer expression was adorable as he picked her up and dumped her unceremoniously onto the hood of the Jeep; part surprised but mostly sensual as she reacted to his need. Those lips which tempted him shamelessly parted and he swooped down, diving into the moist cavern of her mouth to sip at the honey that was undeniably his Lily. \n\nThere was nothing tentative about his kiss. It told her how badly he wanted her, how insane her red dress and sassy mouth had driven him. He had to have her or he'd go mad with want. \n\nThe heat from the car was burning Lily's backside as her dress had ridden up exposing her tender skin to the heated metal. It stung a bit but Mac's kiss was even hotter, melting all her objections in an instant as she scooted forward trying to get closer to her man.\n\nThe determination on Mac's face when he'd yanked her from the car, the way that strange hint of silver had flashed in the blackness of his eyes, had made her heart flutter and her lust rise so she couldn't resist his kiss when he began his assault. \n\nNot that she wanted to but if they were utilising their brains at the moment one of them would realise that turning up to meet her father smelling of sex was practically suicidal. One of them should have the sense to stop this before it got out of hand but Lily was already addicted to her mate's touch and they hadn't properly kissed and made up after their disagreement.\n\nShe was tugging at his braid, freeing his hair so she could wrap her fingers deep within it as he continued to devour her mouth like a starving man, his erection branding her between her thighs as she twined herself around him. \n\nHer fingers moved to pluck at the buttons of his shirt as Mac's lips scorched a path of fire down her neck towards the swell of her breasts peaking temptingly from her dress. It was then she scented their observer and her body went rigid in Mac's embrace.\n\nHer mate was instantly alert his body twisting around to face the forest ensuring she was completely blocked from view. Lily was tempted to laugh knowing she was not in any danger and also knowing Mac wouldn't have a hope in hell of spotting their company. He was shadowed and masking his scent, only she could see him.\n\n\"Kothi, stop being an ass and show yourself,\" she said in her best stern voice, trying not to smile. She adored Kothari but then she always did find herself reacting intensely to the more marginal elements of their group, Liam, Elina and Kothi.\n\nMac relaxed slightly when Lily spoke, his expression curious as the young male appeared out of thin air a few feet away from them. He was big but then his father was Gard though he was dark-haired like his mother and had dark glasses shading his eyes. So this was the issue from a V\u00e2rcolac and an Ancient? Kothari was not what he'd expected having met three of the hybrids already. \n\nThe man before him appeared cold and suspicious, so remote he gave off the appearance of being completely emotionless, and yet Lily's voice held such a warm tone he knew there had to be more to him than met the eye. \n\nHe eyed the fourth of his charges with cool detachment only mildly irritated that he'd interrupted them. The faint smile when it came surprised Mac because he didn't think Kothari was capable of it from his initial impression.\n\n\"I thought it best that someone act like a grown-up, Liliana. You're in enough shit with Andrei without showing up ten seconds after you've just had sex,\" Kothari said, his expression unrepentant.\n\nHaving him echo her earlier thoughts made Lily blush as Mac helped her from the hood of the Jeep. She took the handful of steps needed to give Kothari a hug which he returned with almost as much enthusiasm, surprising Mac even further as he saw the other man's expression soften into open affection.\n\nHe held still as Kothari kissed Lily's cheek and curled a lock of her hair around one finger tugging lightly.\n\n\"The compound's been quiet without our resident spitfire,\" Kothari remarked in a low voice. \"It perked up a little last night when Elle decided to smack that vampire around but nobody outclasses our Liliana when she's on a roll.\"\n\n\"I'm not that bad,\" she groaned, tilting her head back to look at her mate. She didn't want him to think she was too high maintenance. \"Don't listen to him, Mac. He's just as much trouble as I've ever been.\"\n\nThat brought a laugh from the other V\u00e2rcolac. \"I've never claimed otherwise,\" he countered, a glint of humour on his face before he turned his concealed gaze to the vampire watching them. His expression smoothed out as he released Lily.\n\n\"So, you're Mackenzie? I hope you're good, vampire, because Andrei's been pretty pissed these last few weeks. If you're better than Karn you might hold your own.\"  There was a hint of challenge in his voice as if he were testing Mac.\n\nLily glared at him smacking at his arm. \"Don't, Kothi. Mac is my mate and remember I can still kick your ass. He's off limits to your brand of humour.\"\n\nRather than being offended by the younger male, Mac was struggling not to smile at his blatant attempt to intimidate him. Lily's automatic defence also amused him and he reached out to curl an arm around her waist to pull her close. \"How did I survive so long without you to protect me,\" he teased and kissed the tip of her nose.\n\nHis black gaze met Kothari's dark glasses and he allowed his amusement to show. \"I've known Andrei for close on a thousand years now, Kothari. I'm sure we'll be just fine when we have our little chat.\"  His tone was pitched just right to subtly smack down the younger male but not incite Kothari's need to step up his aggression level.\n\nIf he'd been anything other than a V\u00e2rcolac and someone Lily obviously cared greatly for, Mac's response would have been completely different to his challenge. Instead he moderated himself while still letting Kothari know that he wouldn't be easy fodder if the younger male wanted to test his luck.\n\nHe felt Lily stiffen at his reference to her father and looked down. \"What? You didn't know I knew your father or is it the length of time we've been friends which surprises you?\"\n\nLily hadn't considered that Mac might know her father; know of him yes, but to have met him? His past was so well hidden considering he'd moved around Europe so much over his lifetime. It had taken her forever to discover that he was friends with Demetri, finding out he knew her family too rattled her a bit. She frowned as she looked back at him. \"You didn't tell me you were friends with Dad.\"\n\nHe shrugged. \"You never asked. I just assumed you knew seeing as you managed to find out just about everything else there was to know about me when you did your research.\"\n\nHe had a valid argument and it didn't really affect anything anyway. He was her mate and there was no disputing that. Lily relaxed and leaned into his heat wishing Kothari would disappear so she could spend a few more moments alone with Mac before they had to face the music.\n\n\"I don't suppose you're going to go away anytime soon?\" she asked privately, quirking an eyebrow at her friend. She received another of his enigmatic smiles which could hardly be called a real smile because his mouth barely moved. Most people would even miss it if they weren't one of the V\u00e2rcolac.\n\n\"And miss all the fun, Lily? You have to be joking. I like your mate, by the way. He seems more together than Karn though he's no slouch either. That vampire hides a lot behind his gruff exterior.\"\n\nShe smiled with pleasure, her eyes dancing. \"Elle really punched him last night? Liam told me but I found it hard to believe. Karn didn't deny it though so I figured it had to have happened.\"\n\n\"She smacked him clear across the room. I don't know who was more surprised, Elle or Karn or maybe it was the rest of us standing there with our mouths hanging open. I thought Dayton was going to burst a blood vessel when they were arguing and then Elle punched the vampire and Freya was as smug as you please saying 'That's my daughter.' You missed a treat with that one, Lily. Elle's real strength is phenomenal when you see it in action.\"\n\nMac figured the two of them were having some form of conversation he wasn't privy to. He found he didn't much care for being excluded so he gave in to his more base urges and kissed his mate, hard and fast. He took some satisfaction at her instant response. No one continued a telepathic conversation while having their mouth claimed as thoroughly as he was claiming Lily's.\n\n\"I am still here,\" he muttered dryly, when he let her up to breathe. \"And we still have to go get this meeting over and done with.\" He kissed her again and then nodded to Kothari. \"I'm sure we'll see you around before we leave.\"\n\nLily rolled her eyes and smiled as Mac tugged her back to the Jeep and made sure she was settled inside.\n\n\"Isn't he wonderful, Kothi? So possessive. Wait until you find your mate. You won't know what's hit you.\"\n\nKothari didn't answer, merely frowned slightly before raising his hand and turning and vanishing into the trees. Lily watched him go with a slight narrowing of her eyes.\n\n\"What is Kothari's problem?\" Mac asked, starting the Jeep and continuing on towards the compound. \"It's like he has a split personality or does he just dislike me.\"\n\nShe glanced at him in surprise. \"He likes you just fine. Kothari is just Kothari. Today he's been more approachable than normal. I guess he missed me being away and with Liam and Kal up at our compound and Elina acting out of character last night, he may be feeling a bit unsettled hence his need to connect with me.\"\n\n\"So he's usually worse than he was with me?\"\n\nShe laughed at Mac's dry tone. \"Oh, he's usually much more reserved than he was just now. Sometimes a whole week can pass without Kothi uttering a single word to anyone in public. He'll be there but keep totally silent. I'm sure he talks to his parents and he sometimes talks to one of us telepathically. He's...well he's just not easy to explain. He's Kothi and we love him.\"\n\nMac filed the information away for future consideration. Kothari plainly had extreme anti-social tendencies which could spell an issue waiting to happen. He'd get Karn's initial thoughts on the man when they got home later. He was curious as to why his second-in-command hadn't selected him to come back to the compound the night before.\n\nFor the moment they were pulling up into the centre of the suspiciously empty compound and Lily was tense at his side, her eyes flickering around the empty square nervously\n\n\"Crap! Rafe must have warned everyone to stay away,\" she muttered under her breath, tapping a finger nail against the dashboard as she leaned forward. The lack of people milling around was not a good sign. She'd been hoping for lots of pack mates being their usual nosey selves to run interference. \"Park here, Mac.\"\n\nHe brought the Jeep to a halt outside a two storey house with a large tree to one side of it.\n\n\"This is where I grew up,\" Lily sighed, a faint smile gracing her lips as she thought of all the fun times she'd had sneaking out and climbing down that very tree beside her bedroom window. She turned to see Mac's reaction and her smile grew softer as she watched him quickly tie his hair back at the nape of his neck.\n\nHis dark gaze connected with hers as he turned sideways to look at her. His expression was serious as he picked up her hand and kissed the back gently. \"No matter what happens, Liliana, I promise I will do my best not to hurt your father. But this you must know and accept before we do this. You will be coming home with me. No one had better try and stop that happening because I will not tolerate it under any circumstances.\"\n\nShe shivered at the promise in his eyes, knew he was telling her he would fight to the death to keep her, be it her father's or his. It sent fear flooding through her which she couldn't hide.\n\n\"Let me deal with him, Mac,\" she whispered. \"Don't do anything which can't be fixed. I will be coming home with you, no one will prevent that. Just trust that I know the best way to deal with this.\"\n\nMac had to fight down his instinctive need to be the strong one, the one to protect what was his. If it came down to a fight between him and Andrei, despite Liam's reassuring words, it would be messy and bloody and would most likely end in someone's death. He knew it would kill Lily to lose either of them so he battled his natural instincts and nodded his head in acquiescence.\n\n\"I'll do the best I can, sugar,\" he sighed, leaning forward to brush her lips gently. \"Let's hope Liam's right and Andrei feels the same way as I do, that your happiness is the most important thing here.\" With that he pulled back and opened the door.\n\nLily followed him anxiously smoothing down her dress and wishing she'd picked something old, something Victorian and reserved that wouldn't incite her father's anger. She pushed the thought away as being unjustified. Her father understood. They'd talked about things and he'd been hurt that she'd thought he would do anything to her mate. She had to keep that firmly in mind.\n\nThe front door to the house suddenly opened and Mac's gaze swivelled from Lily to the gorgeous brunette who appeared from the house. He'd never seen Loretta Simpson before but he could see where Lily got a lot of her looks from. While not as classically beautiful as some women, Loretta's allure was just as impressive. \n\nHer thick brown hair was perched haphazardly on top of her head with strands framing her face. Her brown eyes were shining with moisture as she regarded her errant daughter standing sheepishly in front of her.\n\n\"Hi Mom,\" Lily said, biting at her bottom lip as she tried to work out how much trouble she was in. She felt as if time had rolled back and she was once more about to get a telling off as she had that day she'd persuaded Kallum to try shifting into wolf form and they'd met Dayton in the forest.\n\n\"Oh, come here and stop trying to look so repentant when we all know you're not,\" Loretta laughed, rolling her eyes as she gathered her child into a tight embrace, swallowing back the tears of relief which were threatening to fall. She held her in a death grip, relief and love surging down their bond now she could see Lily was well and unhurt.\n\n\"You scared the living daylights out of us, Lily,\" she whispered. \"Don't you ever suppress our bond again. I thought your father was going to explode when he couldn't contact you. He was all for calling out the Praetorians thinking someone had kidnapped you and drugged you so you couldn't call for help.\"\n\nThe chastisement brought tears to Lily's eyes even as she hugged her mother back just as fiercely. Despite her words, Loretta was pouring so much love and forgiveness to her it was making her feel even guiltier for her actions. She hadn't wanted to hurt her family; it had just turned out to be unavoidable. \"I'm sorry, Mom. I should have stayed in contact, I know that now. I just wasn't thinking clearly at the time.\"\n\nLoretta framed her face gently and gave her daughter a reassuring smile as she wiped at her wet cheeks. \"Yes, you always did have a habit of acting first and thinking later,\" she remarked, her smile turning rueful. \"You're so much like you father. How I've managed to stay sane with two of you to contend with I don't know. Thank God Kallum was less of a handful.\"\n\nShe hugged Lily tightly again and then stepped back to regard the vampire standing silently beside them. Her gaze was critical as she measured his suitability to call himself her child's mate. She'd have to be dead not to notice how attractive he was and she could see he was strong and a good age for one of his kind. Mackenzie exuded power much like Andrei.\n\nShe turned back to Lily and gave an exaggerated wink. It had the desired effect, causing her daughter to burst out laughing. \"Yes, I think he'll do nicely, Lily, though you can fill me in on all the details later.\"\n\nShe directed her gaze back to Mac and held out her hand. \"I'm Loretta, Mackenzie. Welcome to the family.\"\n\nHe took her offered hand and raised it to his lips rather than shaking it as she'd expected. \"I can see where Lily's gets her looks from, Loretta,\" he answered smoothly, immediately liking his mate's mother for the way she instantly soothed his Lily. She didn't feel as stressed as she had a moment before.",
        "\"Oh God, we've got another charmer in the family,\" Loretta laughed. \"I'm going to try for another baby. We need more girls to counteract all this male charisma.\" She gestured for them to enter the house.\n\n\"Your father's in his study,\" she said to Lily as she ushered them inside. \"Have you had breakfast? Having a vampire for a mate can be a complete pain in the ass. They forget we need to eat just because they don't.\"\n\nMac flushed red and frowned at his mate. He had no idea if she'd eaten and was chagrined to admit he hadn't considered that she would need to. He would need to rectify his way of thinking now he was responsible for taking care of Lily. Loretta's unladylike snort of amusement made him blush harder.\n\n\"See, this is what I've had to put up with for years, Lily. Hopefully you can train Mackenzie better than I was ever able to train Andrei. Go ahead and see your father. I'll give your mate a crash course in cookery while you're talking.\"\n\nThe low growl that rumbled from Mac's chest didn't even faze Loretta as she raised an eyebrow at him. \"Trust me; Lily knows how to handle Andrei. Give them time to scream at each other and they'll join us when they're ready.\"\n\nMac's expression was comical as Lily watched her mother override his objections. He was obviously trying hard not to offend her but he was clearly unhappy at the thought of not being with her when she saw her father. It was his expression that had her resolve hardening and her lips twitching with a smile.\n\n\"Mom's right, Mac,\" she said, moving to wrap her arms around his waist. He was gathering her close, securing her protectively in his embrace in an instant. \"It's better if Dad lets off steam when you're not around. He'll only shout for a little while. Just stay with Mom until he calms down.\"\n\n\"I said we'd do this together, Lily, and I meant it,\" he argued, anger lacing his tone. \"You're my mate and I'm not leaving you to face Andrei alone.\" His arms tightened around her to emphasise his point.\n\nLoretta gave them some privacy heading into the kitchen but remaining close enough in case Andrei became tired of waiting for his daughter to come to him and reacted negatively to seeing her wrapped around Mac so intimately. Not that she thought he would do anything too stupid but it was always wise to err on the side of caution after he'd been through such a volatile few weeks.\n\n\"You agreed to trust my judgement on this,\" Lily whispered, tilting her head back to look at Mac. She searched his face intently. \"Don't repeat your mistake from last night, please.  You have to learn the difference between protecting me and taking over my life. My father would never hurt me.\"\n\nMac struggled with the conflicting emotions raging through him. He rebelled at the thought of Lily facing Andrei alone and yet if he didn't let her do this then he'd hurt her as he had this morning. He was damned either way whatever he decided. He'd go quietly insane not knowing what was happening in the study if he let her go alone, and she'd hate him if he refused to let her deal with this herself.\n\n\"You call me immediately if you need me,\" he finally said. There really had been no choice for him. He couldn't do anything that would hurt her so he would just have to suffer through wondering what was happening.\n\nHer big brown eyes sparkled with such joy he knew he'd done the right thing by her. It was the completely wrong thing for him but when she pulled his head down and kissed him so thoroughly he forgot all about where they were, he conceded that he could live with the choice if this was her reaction.\n\n\"I love you, Mac.\" Lily knew how hard it was for him to agree to this. Though he kept his expression as neutral as possible she could feel his emotions through their bond. He was fighting hard to tamp down his protectiveness so he could do the right thing.\n\n\"I love you too, sugar,\" he rumbled quietly, kissing her again before reluctantly letting her go. He stepped back and watched as she squared her shoulders and headed over to a closed door towards the back of the house. He turned and followed Loretta into the kitchen, trusting his mate knew what she was doing.\n\nLily smoothed down her skirt nervously before she opened the study door and stepped in side. Her father was standing staring out the window with his back to the door and he didn't turn as she entered. She knew he was well aware when they'd arrived and that he'd most likely given her mother time to greet them first. \n\nShe closed the door and took a deep breath. \"Dad?\" She wanted to cringe at how tentative her voice sounded. She was a mated woman now not a child but being around her father always regressed her back to childhood. She hated disappointing him or her mother but she always managed to.\n\nAndrei inhaled the scent of his daughter, reaching out mentally to lightly brush their familial bond. He'd deliberately given Loretta time with Lily, fighting his own urge to go to their child the minute she'd arrived home. His mate hadn't had any contact with her since she'd left the compound. Loretta deserved a moment to ensure herself of her daughter's safety and to meet Mac and form her own opinion of him.\n\nHe'd doubted Kal's words the night before. He hadn't thought Lily would be ready to come home so soon after their last discussion, after he'd revealed so much about himself. He'd been frightened she'd think him a monster after his confession and never come home. But she had and she sounded so unsure of herself as she waited for his reaction.\n\nHe'd never been one to hide from the difficult things in life but for the first time ever he wanted to stay staring out of a window so he didn't have to turn around and see disappointment in his child's eyes. He'd failed Lily; he knew that now. He'd loved her too much, been possessive and overprotective to the point she had been forced to run away from him. He'd given her his genetic flaw and she'd spent her entire life fighting that inner darkness.\n\nWas this his real punishment for all the wrongs he'd done over his long life? He'd once believed Loretta's abduction had been his punishment but maybe it was more than that. Maybe his entire world of happiness built around his family was the real punishment, where someone somewhere laughed at him as those he loved suffered because of his actions or his physical flaws.\n\n\"Dad?\" Lily's hesitant voice filled the room again and he forced himself to turn to look at her.\n\nAndrei wanted to look away immediately. He didn't want to see the uncertainty on Lily's face or the gathering moisture in her big brown eyes. It killed him to see her cry, it always had. It killed him knowing that he was responsible for putting those tears there. His heart twisted painfully as he looked for signs of change within his daughter and found them instantly.\n\nShe had already mated with Mac which meant she was already leaving his world to embrace the other male's. Losing Lily had always been one of his greatest fears, now it was becoming a reality and it was a blade to his heart knowing their relationship would never be the same again.\n\nHe could see the telltale signs of strain in her eyes. It was so subtle most people wouldn't notice it but he did because he knew what to look for. He saw it every day in the mirror, the strain of wondering if today would be the day his battle with his nature was lost.\n\nHe knew he should say something, reassure her somehow but he couldn't force his mouth to open as he struggled with the conflicting emotions whirling inside him. He didn't know what to say to make it right, to take away the gathering tears and see her smile again.\n\nAndrei's silence was ripping Lily to pieces inside. He was so still, so unmoving with his neutral expression and cold brown eyes. She had no idea what was going through his head but she knew she'd hurt him badly with her actions. She had to keep swallowing to try and fight the misery inside, knowing he hated it when she cried but feeling the tears coming despite her best efforts.\n\nShe loved her father so much and she'd let him down. She was honest enough with herself to admit that she would have done just about anything to claim Mac as her mate. She couldn't regret loving Mac but she could have tried to do things differently so her family wouldn't have been hurt.\n\nThe tears spilled over and her breath hitched in her throat. \"I'm sorry I've disappointed you, Daddy,\" she choked out, dropping her gaze from his because she couldn't bear to look at him and see that disappointment cross his face.\n\nHer father moved then, so fast he was standing in front of her between one breath and the next. She was hauled tightly into his arms, squeezed so hard she thought she might break.\n\nAndrei's heart shattered the moment Lily spoke and her tears began to fall. His baby was hurting and he just couldn't tolerate that for an instant. No one was allowed to hurt his children, not even him. \"You could never disappoint me, Lily Rose,\" he whispered gruffly, releasing control of the tight hold he had on his emotions.\n\nHis daughter's tears were his undoing and he let his own fall as he ran his hands over her body to reassure himself she was uninjured in anyway physically. \n\nYes, she'd made mistakes but only because his had been the greater ones. If he'd been less overbearing she would have been able to talk to him safe in the knowledge he would've listened to her. She wouldn't have had to put herself at risk to claim her mate if he'd been more reasonable and less hot-headed. Loretta was right when she'd said he'd driven his children away. He hadn't meant to but that didn't negate the truth of it.\n\n\"I let you down, Lily,\" he groaned hoarsely. \"I sheltered you too much because I loved you so much. I was warned years ago that I'd pay for my actions but I was so arrogant in believing I knew what was right that I ignored the words and went on doing things my way. It was never my intention to hurt you though. I just needed to keep you safe.\"\n\nLily was hugging her father as tightly as he was hugging her. The relief of being home, of knowing he wasn't still angry with her made her tears flow harder. She'd expected angry words, their usual clash of tempers when things became strained between them but she hadn't expected his apology or his tears. It was just so wrong to see her father like this and yet she felt honoured that he was letting her in, treating her as an adult rather than a child.\n\n\"I know that, Daddy,\" she whispered tremulously, running a hand soothingly down his back because she hated seeing him so miserable. \"I've always known that, so has Kal. We might not have known all your reasons for doing things but we've always known they were done out of love for us.\"\n\nShe pulled back so she could look up at him and give him a tentative smile. \"I guess I'm just too much like you sometimes. I don't always think through the consequences of my actions and then pay the price for them later.\"\n\nAndrei brushed the tears from her cheeks and stared at his daughter in amazement. She had Loretta's big heart when it came to forgiveness, instantly absolving him of all his wrong doings. He was so proud of the woman Lily had become. It may have taken him a long time to acknowledge that she had grown up but now that he had, he was so full of pride at how wonderful she'd turned out.\n\n\"I was afraid of losing you,\" he admitted, pressing his hand against the side of her face. \"I didn't want any other male coming along and stealing your heart from me.\"\n\nA burst of laughter escaped Lily and she rolled her eyes. \"You're so silly sometimes. No one could ever replace you. You're my dad.\" She said it with such finality as if it was carved in stone for the world to know. \"I love you, Dad.  I'll probably still have moments when I'm reaching out to you when I feel insecure about something. I know you'll always be there for me no matter what.\"\n\n\"But you have Mac now, Lily. He's your mate and it's his place to take care of you, not just your physical well-being but your emotional well-being too,\" Andrei pointed out, hating to say the words but knowing they were true. He still had his exceptionally close bond with Alexei but it was Loretta he turned to now when he was troubled which was how it should be with mates.\n\n\"Well, I can't very well turn to him when he's pissing me off, can I?\" she retorted with another laugh, though her expression softened as she spoke of the man she'd chosen as her mate. \"And boy, does he know how to piss me off already. He actually thought he could fight the mating pull. The stupid male even tried to go to Europe to get away from me!\"\n\nHer indignant tone eased the last of Andrei's sadness and he burst out laughing at her outraged expression. She looked so much like her mother the way she tilted her chin up and her eyes flashed with indignation. It reminded him of when his mate had caught him with Marcia all those years ago. She'd that same steely determination that nothing and no one would get in her way of claiming her mate.\n\nAndrei actually felt some sympathy for Mackenzie. If Lily had been as determined as Loretta, then he hadn't stood a chance against her just as he'd never stood a chance against his Rose. \n\nMaybe he could handle this whole mating thing better than he'd initially thought. Seeing Lily so alive, the love and happiness on her face as she spoke of her mate...that was priceless in his eyes and if it was what Mac gave to her then he could accept it.\n\n\"You love him.\" It was a statement rather than a question. He could see her emotions clearly in her expression.\n\n\"He's everything to me, Dad,\" she smiled softly and then her brow furrowed and her eyes narrowed. \"You're not going to do anything silly like play the overprotective father routine, are you?\"\n\nIt had crossed his mind, he couldn't deny that, but he knew he wouldn't do anything to let his child down again. She had made her choice and despite the few misgivings he had about Mac's past, he conceded the other vampire was an excellent choice of mate for his wayward daughter. He had the strength to not only protect her but to keep her in check when she needed it.\n\n\"I told you I wouldn't.\" He kissed her forehead and hugged her close again, enjoying this moment with her. \"If he gives you even a fraction of what your mother gives to me I could never take that away from you, honey. I'm surprised he's not in here with you.\"\n\nLily laughed and gave him another squeeze before moving out of his arms to perch on the edge of his desk. \"He would've been only Mom and I managed to persuade him to stay away until we had time to talk.\"\n\nAndrei knew just how hard that would've been for Mac. Any mated male would struggle to allow his mate to go into a potentially hazardous situation alone. It would be doubly worse on a newly mated male who was being subjected to all manner of extreme emotions. He could remember his own instincts going haywire when he'd first mated with Loretta.\n\n\"Dad, you're growling,\" Lily sighed, amusement creeping into her tone.\n\nHe shot her a lopsided grin. \"Sorry. Thinking about what newly mated couples get up to isn't a wise move in the same context with my daughter.\"\n\n\"Dad!\" she blushed scarlet, scandalised laughter filling the room. It filled Andrei with such joy to hear the sound and see the happiness on her face. It was all he'd ever wanted for his children, to be happy. The changes in Lily were so easy to see and they were all good changes.\n\nLeaning against the desk beside her he tackled the topic he'd been trying to avoid and knew he couldn't. \"\"Your wolf...she's respecting Mac's dominance so far?\"\n\nLily sobered at the serious note in her father's voice. She could tell he was still feeling responsible for something which wasn't his fault. He probably always would and she didn't know how to convince him otherwise. She'd felt his pain and despair when she'd told him about it. It was buried deep within him. Cauterising that wound would be nigh on impossible.\n\n\"This morning my wolf was content for the first time ever,\" she admitted in a quiet voice. \"She listens to Mac, respects him as her mate. I know it's not always going to be easy and there will be times when Mac may have to be very harsh to help me, but I know together we can achieve anything we set out to.\"\n\nThat brought a raised eyebrow from her father and her own curiosity to the fore. \"How does Mom help you?\"\n\nThe smile that crossed his face was so full of love she found herself automatically smiling too. Her parents' relationship had always been beautiful to watch as she was growing up, the way they just fit so well together and obviously adored each other. It was the template from which she'd built her own dreams of what her life would be with her mate when she grew up.\n\n\"Your mother soothes me with her love. I guess it would be different for you and Mac because I'm the aggressor in our relationship and while your mother is pretty formidable herself as a Beta, my beast requires her love to be tamed rather than aggression.\"\n\nShe nodded her agreement. \"My wolf needs to be dominated when she gets out of hand. She needs someone stronger, more aggressive than her to make her submit. Mac does that instinctively though I don't think he likes it very much. The one time he had to do it, he wrecked a room right afterwards.\"\n\nShe sighed deeply at the memory, and then she smiled ruefully. \"Hopefully we won't have to redecorate the house too much even if it's badly in need of it. That man sure does like dark wood.\"\n\nAndrei was quiet, taking in her words and working on the guilt he felt inside. It was good to know Lily had the safety net she needed but still he felt bad that she even needed to have one. If he had been stronger then maybe she wouldn't have had to deal with this aspect of her personality.\n\n\"I haven't thanked you for all you've done for me,\" Lily said quietly, her expression sombre as he turned to look at her with a surprised expression. She gave him another smile so full of love he wondered how he could have been so lucky to be blessed with such a wonderful family.\n\n\"You've kept me balanced all my life, Dad. Kal has too to a certain extent but the reason I was able to control my wolf for so long was because of you. She respects you as a dominant male in her life. I know you feel as if you've given me some kind of curse but you also gave me the means to fight it by loving me and protecting me as you have. I don't want you to feel guilty about this. It's just one of those things and it has shaped me into the person I am today.\"\n\nAndrei slipped an arm around his daughter, pulling her against his side as she wrapped her arms around him. \"When did you get to be so wise?\" he asked gruffly, his emotions once more close to the surface. \"You've grown into a wonderful young woman, Liliana. I'm so proud of your strength and integrity. You're everything a father could wish for and more. I love you so damned much it hurts sometimes.\"\n\nShe felt tears gather in her eyes again but they were happy tears this time as her father's love and approval surrounded her in a warm cocoon. She adored him so much. Having his love and respect meant the world to her. \"I love you too, Dad,\" she whispered. \"So much that I get scared sometimes I'll let you down so badly you'll find it hard to forgive me.\"\n\n\"Never, Lily,\" he ground out hoarsely, pulling her tightly into his arms and kissing the top of her head. \"There is nothing you or your brother could ever do which would make me turn away from you. You're my children. You're my life just as your mother is. I would forgive you anything and give my life to keep you safe. Don't ever think otherwise, honey.\"\n\nSilence filled the room as they hugged each other tightly. Lily had always had a special connection to her father but it was different now, stronger in a way she could never have imagined. He was no longer treating her like a child. He'd opened his heart and mind to her, shown her his fears and his deep love for her. She hoped she'd given him the same feeling of peace and acceptance he'd given her.",
        "\"I think it's time to go tease Mac now,\" Andrei finally said, his tone full of mischief. \"I'm quite partial to my study door so maybe we shouldn't tempt him too much by staying in here any longer.\"\n\nHis unrepentant expression at her low groan told her he wouldn't be dissuaded. \"I've got to get some fun out of all of this.\"\n\nLily sighed in defeat and rolled her eyes. At least having her father onside was better than the alternative. They were just going to have to put up with his brand of teasing until he got it out of his system.\n\n*****\n\nMac couldn't tear his eyes away from the open doorway even as Loretta bustled around the kitchen, the noise and smell of cooking assaulting his senses. He could feel Lily's erratic emotions through their bond and he was desperate to go to her but knew she wouldn't thank him for interfering. \n\nIt was only Loretta's calm attitude which was holding him back. She clearly knew her family dynamic and if she was unconcerned about her mate and daughter being alone then it stood to reason that he shouldn't be worried either. And yet, he wanted to go to Lily, itched to protect her from whatever Andrei was saying which was making her swing from misery to joy and then back again.\n\n\"Remarkable.\" Loretta's laughing words dragged his attention from the doorway and he looked around to see her watching him intently. She had a sparkle in her eyes and he could see exactly what it was about the wolf that attracted Andrei. She was the perfect foil for his erratic personality. She was a blend of strength and compassion which was very much part of her children's personalities.\n\n\"I don't know what I'm more impressed with,\" she continued, turning back to the stove and flipping some bacon in the frying pan. \"The fact those two aren't screaming at each other or the fact you're still seated in that chair.\" \n\nLike Mac, she could feel her mate's emotions and knew he was struggling with coming to terms with how to cope with the changes in Lily. Unlike Mac, she'd had countless years to come to know her mate and knew he was handling everything just fine, so therefore, she wasn't concerned about what was going on behind the study door.\n\nShe'd taken time to watch Mackenzie, to get a feel for who he was as a man and her daughter's mate. She was impressed so far. It was killing him to stay away from Lily but she'd asked him to and he was trying hard to give her what she needed. Loretta had no doubt he'd fuck up just as much as he succeeded but it was obvious he was willing to try and that was the important thing.\n\nMac let out a loud breath from his seat at the kitchen table. \"I'm using you as a barometer on whether or not I need to be concerned,\" he admitted with a slight smile. \"You're the glue that holds this family together.\"\n\nLoretta beamed a wide smile and nodded her head in thanks for his compliment. \"Oh, I'm going to just adore you, Mac. I knew Lily would pick a good mate. Kal will probably be the one who ends up giving me grey hairs when he chooses a mate. He's been too easy to bring up so far. He has to have something up his sleeve to drive me insane.\"\n\nHe laughed at her resigned tone so full of love for her family. He was sure she was right too. What he'd seen of Kallum so far was pretty impressive. He was a strong Alpha male with a wide streak of compassion running through him. \n\nBut the man who had confronted him the day before when he was defending his sister's right to stay at the compound had been a different male entirely. That man had been stubborn and resolute. Backing down just wasn't an option for him as he defended Lily. He took what he considered to be his responsibilities seriously and wasn't afraid to go up against anyone if he felt he was right.\n\nNo, there was a lot more to Kallum Romanov than first met the eye, a power that bubbled under the surface just waiting to be unleashed. Mac was certain that when Kal finally let go of his tight self-control they would all be surprised by just what he was capable of, including his parents.\n\n\"You're handling this so much more reasonably than I expected,\" he commented, surprised at her acceptance of him when she didn't know a thing about him.\n\n\"That's because I'm the sane one in the family,\" Loretta joked, as she dished up the food onto waiting plates and put them on the table. She gave him a measuring look. \"Don't be fooled by me, Mackenzie,\" she continued her expression serious. \"I'm as protective of my family as Andrei is. If I thought for one moment that you were bad for my daughter I'd rip your throat out without a second's hesitation.\"\n\nMac had no doubts about that. He'd been around wolves long enough to be able to sense their strengths and weaknesses. He knew Loretta was a senior Beta in the pack and was just as much of a soldier as Lily. That she had a sunny personality didn't detract from the feral wolf nature she had deep inside. It just made her even more deadly because some people would be foolish enough to underestimate her. And he was no fool.\n\nGiving her one of his rare smiles, he accepted the wolf into his suddenly growing family with barely a flicker of an eyelid. He knew he was going to adore this woman almost as much as he did his Lily. \"Just as well you like me then,\" he quipped, drawing a wide smile.\n\n\"Lord, save me from charismatic males who think one smile is enough to make a woman melt,\" she grumbled good-naturedly, her hand coming to rest lightly on his shoulder in a gesture of acceptance.\n\n\"Be good to my girl, Mac. That's all a mother can ask.\" She bent down and kissed his cheek lightly before turning towards the door. \"Oh, and cut Andrei some slack too. This isn't easy for him.\"\n\nThe sound of Lily and Andrei approaching had his head turning too even as he worked on his stunned surprise that he'd managed to win over Loretta so quickly. He knew it would please Lily if he could gain approval from at least one of her parents.\n\nMac's gaze zeroed in on his mate the second she entered the kitchen. Her eyes were red from crying and he had to fight to contain a growl of displeasure. She was smiling happily so that helped. He ignored Andrei completely which probably wasn't a wise move but he needed to make sure Lily was okay.\n\nHer gaze connected with his and her smile brightened as she was drawn across the room as if she'd hated their separation as much as he had. Uncaring of their audience he was reaching for her pulling her down into his lap and searching her face intently.\n\n\"Is everything okay?\" He used their private form of communication; glad they had it so they could maintain a level of privacy when around her family.\n\n\"Everything's fine, Mac. Dad was much more understanding than I gave him credit for. We're closer than ever now and he understands how important you are to me. Thank you for being as understanding and letting me do this my way. I know it wasn't easy for you.\" Lily rested her forehead against his as she spoke, proud of her mate as she was of her father. This meeting was going so much better than she'd expected it would.\n\n\"So Mackenzie, you're sleeping with my daughter.\"\n\nAndrei's cool words brought a groan from said daughter and a muttered sigh from his mate.\n\n\"Dad!\" Lily all but squeaked as Loretta groaned out, \"Andrei!\"\n\nMac simply tightened his hold on Lily and met Andrei's gaze. His expression was neutral but his eyes were anything but. He responded to the male challenge instinctively though he did work to keep his aggression levels down. \"That's what mates do, Andrei. I would've thought you'd managed to work that out after being mated to Loretta all these years.\"\n\nSilence descended over the kitchen as both Lily and Loretta tensed waiting to see what Andrei's reaction would be. Mac kept his tight grip on his mate as she wiggled on his lap attempting to stand up to try and make the situation less volatile by not rubbing her father's nose in their relationship.\n\nHe was having none of that. She was his mate and it was natural to express their love physically. He wasn't about to deny that and he wouldn't allow her to either, not even to appease Andrei. No one would dictate when he could and couldn't touch his mate. \n\nAnd it probably wasn't prudent for her to rise at the moment. Her wiggling was inciting a reaction which was very natural. They might be pushing their luck a bit if Andrei had to see the evidence of his sleeping with his daughter.\n\n\"Mac, let me up.\"\n\n\"Not a chance in hell, sugar,\"he growled. \"Your father has to accept that I can't keep my hands off you and you have to know that I won't tolerate you denying us in any shape or form. This is a male thing. You asked me to let you do things your way. Now it's your turn to let me do things mine. Trust me, Lily.\"\n\nShe couldn't really argue with him. He had given her the space to talk to her father first and she was reasonably confident the situation wouldn't come to blows. Lily stopped wriggling to escape and settled against Mac's chest, her gaze intent on her father's face.\n\nAndrei would've been a liar if he denied that he was tempted to rip Mac's arms from his shoulders. They were so securely wrapped around his daughter's body, one hand resting possessively on her hip. He'd have had to be a saint not to have some negative reaction to it but the resolute expression in Mac's eyes earned the respect of his more feral side.\n\nHe'd always liked Mac, had always been impressed with his integrity and the way he handled himself. He liked the fact he wouldn't back down in his presence. If he was willing to stand up to him to secure his right to be Lily's mate then he would defend her to his dying breath. There was nothing he wanted more for his daughter, someone as committed to protecting her as he was.\n\nA smile slowly crossed his face and he could feel the tension level in the room dropping. The smile reached his eyes which wasn't a normal occurrence outside his immediate family and pack. \n\n\"Oh, I think I've got the hang of that just nicely,\" he smiled, crossing over to Loretta and gathering her into his arms so he could ground himself in her scent and ease down his aggression levels a bit more. He turned back to Mac.\n\n\"It's been a while, Mackenzie. I wasn't expecting our next meeting would turn out to be with my daughter wrapped all over you. Father's prerogative to be a little pissed off about it even if I'm willing to accept that my little girl is all grown up now.\"\n\n\"Fair enough,\" Mac agreed, with a brief smile. \"Just as long as you do accept that Lily's mine and I'm not going to let anyone come between us.\"\n\nLily watched the byplay wondering idly if this was akin to a father handing off his daughter in a marriage ceremony. Weres and vampires didn't adopt the human bonding ceremony, their mating bonds being that much deeper and fixed. \n\nSurprisingly the one couple who were actually married was the last couple most people would have thought of. She adored the story of how Demetri had proposed to Mara when she was still human and not ready to join his world as a vampire. It was so romantic that one of the most intractable vampires ever appeared to be the one who had bent the most to secure his mate.\n\nAndrei shrugged as if it was a given and dropped a kiss on Loretta's mouth. \"I suppose we could continue having a pissing contest or we could let our girls eat breakfast. I know which one I'd prefer to do and I'm sure I don't need to recite the whole 'You hurt my daughter and you're dead' routine.\"\n\nMac laughed even as Loretta slapped Andrei's chest in admonishment and Lily groaned in despair. \"Duly noted and understood,\" he answered, slipping his mate from his lap into the chair beside him so she could eat. His kissed her temple and played with a lock of her hair as Loretta and Andrei joined them at the table.\n\nLily started eating, sparing a glance at her mother as her father and Mac started catching up as if they hadn't just been about to go at each other to prove who was the biggest, badass vampire a handful of seconds ago. She couldn't believe she'd been so worried about this meeting and they were chatting away so amicably. Mac was filling her father in on the formation of Praetorians and he appeared genuinely interested in the subject.\n\n\"Don't even try to understand men, honey,\" Loretta said, as she chewed on a bacon sandwich. \"They're a completely different species and that's nothing to do with the whole Vamp/Were thing. I like your Mac by the way.\"\n\nLily's mental laugh was full of happiness. \"I'll take your advice on the whole male thing, Mom. And I'm glad you like Mac and Dad seems to as well. I just feel so happy right now. Everything's just perfect.\"\n\n\"Perfection is pretty boring, Lily. Being mated is no easy feat especially when your mate is a dominant, overbearing vampire who thinks you need their help to just breathe properly. It's not always going to be heart and flowers, not if I'm reading Mac correctly.\"\n\nHer mother's caution was spot on and so like her that Lily smiled as she forked some eggs into her mouth. \"I know that. Do you know he didn't tell me about the meeting last night until this morning? I was furious with him about it. Come to think of it, I think we've argued more times that we've kissed at this point.\" \n\nShe blushed slightly remembering the night before and heard her mother's laughter in her head. \"Okay, maybe that was a slight exaggeration. There was a lot of kissing being done last night.\"\n\n\"Tell me more,\" Loretta teased. \"Is he as good as he looks?\"\n\n\"Mother!\" Lily's exclamation was half scandalised, half amused.  Her mother was incorrigible at times and sometimes she forgot just how much of wolf lived inside her.\n\n\"What? I was only asking,\" Loretta said innocently. \"I was just wondering if there was a chance you might be making us grandparents in the near future. I'm trying to envision your father's face if I manage to fall pregnant at the same time as you. It would be priceless to tell him he's about to become a father again and a grandfather.\"\n\nLily choked on her breakfast, Mac immediately patting her on the back as she tried to laugh out loud and swallow the food in her mouth. Both he and Andrei shot the two women perplexed looks wondering what was the cause of such hilarity. \n\nLily managed to catch her breath and take a sip of coffee. \"Mom, you're terrible!\" She turned to her father laughter dancing in her eyes. \"You do know she's talking about having another baby, Dad. Another girl to drive you insane now I'm out of your hair.\"\n\nAndrei stared at his mate shaking his head in disbelief. \"No, I had no idea such devious thoughts were going through your mother's mind.\" \n\nHe answered his daughter though his gaze never left Loretta. While stunned by the announcement, he couldn't help feeling excited at the prospect of having another child now theirs had grown. Another adorable little girl would be more than he could ever hope for, if they could work out what would make them fertile again.\n\nLoretta grinned unrepentantly at him. \"Actually, I was hoping we could time it so Lily was gifting you with your first grandchild at the same time,\" she teased, having no idea of what the impact of her words would be.\n\nMac suddenly froze on the spot; the hand which had been running up and down Lily's back ceasing all movement. The pleasure on Andrei's face evaporated and his gaze swung to look at the other male. \n\nMac was stunned by Loretta's announcement. He couldn't believe he hadn't even considered that now he was mated to a V\u00e2rcolac he would be able to father children again. His one experience of fatherhood had been an agony he couldn't bear to repeat again.\n\nHe knew Andrei was aware of his past; the look in the other male's eyes a stark warning as they stared at each other. It was an effort to ensure none of his inner turmoil travelled down his mate bond with Lily as his past memories reared up and he saw his daughter again. \n\nBarely a fraction of a second had passed since Loretta had spoken and both he and Andrei were the only ones aware that her words had set off memories Mac never wanted to relive. \n\nMemories of Sophia, only they weren't of her laughing or of him holding her in his arms, she was always lying dead with her throat torn out and her clothes covered in blood. Losing his wife had been hard; losing his child had been hell on earth and the thing which had tipped him over the edge until he'd tried to leave the world with them.\n\nDemetri had stopped him. He had changed him into a vampire and given him a goal to go on. He had stood at his side as he had buried Maria and Sophia and helped him track down the vampire who had taken their lives. Knowing he would never be able to father a child again had been the one thing Mac had always relied on. Now he didn't have that any more.\n\n\"Mac?\"\n\nLily's voice dragged his attention from Andrei and he smiled automatically, continuing his slow caress of her back as he struggled to fight off the memories. She was looking at him speculatively, sensing something was wrong but not quite knowing what it was.\n\n\"I think we stunned Mac more than we stunned your father,\" Loretta chuckled, completely oblivious to the world of hurt she had just opened up. \n\nHe murmured some polite response, something along the lines of there being plenty of time to consider parenthood. All the while his thoughts were on Lily. \n\nHow could he explain it to her? \n\nIt was obvious she wanted to be a mother. It was part of her Were heritage the need to bring life into the world. If he'd stopped to consider it for a moment he wouldn't have mated with her. He would have let some other male know her love, allowed someone else to give her what she needed.\n\nBecause Mac knew he never could. He would never father another child and know the hell of losing that child as he'd lost Sophia \u2013 not even for Lily. \n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "werewolves",
        "hybrids",
        "love",
        "mates",
        "paranormal romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/hearts-of-warriors-ch-12"
}