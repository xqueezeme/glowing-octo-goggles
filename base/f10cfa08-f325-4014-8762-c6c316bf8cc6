{
    "title": "Necromancer Chronicles Pt. 10",
    "pages": [
        "Chapter 9 \u2013 Vinnie\n\nMy sister had been emotional, I wasn't sure why, but she'd also been right once I thought it through, but there were a few things to take care of before we split.\n\nI said, \"Johnson, you want a ride back to civilization? I think we are ending our island vacation.\"\n\nJohnson seemed thoughtful, \"No, they'll get upset if I abandon a multi-million dollar aircraft on an island somewhere. I'll fly us back.\"\n\nI went over to Jeremy and Bell. I was starting to understand the affect my father had on human woman when I got close. Bell was temptation personified, and I was more than happy with what I already had and had no intention of straying. But my body didn't want to listen.\n\nI smiled, \"Let's swap numbers. Assuming you want to keep helping? Also, we should get together some time when the world isn't ending. Hope tells me you're staying in the Chicago area?\"\n\nJeremy chuckled, \"Sounds good,\" and we swapped numbers.\n\nBell said, \"Call us if anything comes up,\" as shadows rose, clinging to their bodies until they disappeared. Even her magic looked sexy.\n\nI decided to leave all the food here for now just in case. I had a feeling we would need it. I created more cooling wards to keep the food and drinks cold, and then teleported the four of us back to the house.\n\nBy the time we were home I was excited about going to work on Monday and seeing if we couldn't come up with an energy source that would replace fossil fuels. And I don't mean batteries that take electricity to charge and fossil fuels to burn for electricity. That kind of green technology defeated the purpose. \n\nAlicia said as she put her arms around me, \"I need to check on the pack, I'll be back before you leave for work,\" she kissed me smolderingly and winked while she pulled away.\n\nI'd miss her, but her pack was a big part of her life, so I just pulled her in for another kiss goodbye and gave her a smack on the ass when she turned to walk away. She looked back over her shoulder and raised an eyebrow.\n\nShe growled, \"If you're going to smack my ass, do it harder next time...\"\n\nI winked and she headed out the door. Kristi and Toni were already working in the kitchen so I grabbed a beer and joined them.\n\nToni said tentatively, \"I need to go by my apartment for a change of clothes...\"\n\nI nodded, \"About that, I'm wondering if you need to even bother looking for a home now... if you're interested. It's kind of fast but... I want you here.\"\n\nShe raised an eyebrow, \"Yes sir, right away sir.\"\n\nI snorted, \"No... you're supposed to tell me what you want now... that's how it works. I ask you to move in... tell you what I want, then you decide yes or no...\"\n\nShe said irately, \"Oh, I'm so sorry I'm doing it wrong. Is there anything else you want me to change?\"\n\nI shrugged; I seemed to be in deep anyway so I raised an eyebrow and said, \"You could cook naked...\"\n\nHer lips twitched and she said in a softer tone, \"Let me think about it.\"\n\nI asked raising a brow, \"Which one?\"\n\nShe glared. \n\nI figured she wasn't really mad at me, just a little spooked at the idea of moving so fast, so I quit while I was ahead and just drank my beer. To be fair it was a little fast. I cared for her a lot, she was an amazing woman. But I didn't love her yet, not like I did my other mates. That would take time.\n\nKristi muttered, \"Never asked me to cook naked,\" under her breath.\n\nThere was just no correct response for that, no matter what I said it would piss off at least one of them, the joys of multiple mates. So I got up and went to the living room for my own safety, maybe there was something on television... \n\nI watched the news for a while; it was all the same stuff over and over, but nothing overly bad. Even the anchor seemed a little optimistic. Maybe they were all just a little excited to have magic, like some fairy tale. Nah, they were probably just in shock so going with the flow for now. Things would change soon.\n\nI got up and went back in the kitchen for another beer.\n\nI said, \"Is it safe for me in here?\"\n\nI heard a muffled moan and peaked around the island. They were naked in the sixty nine position right in front of the stove. See, that's why I wasn't serious about the cooking naked thing. Still, I goggled as I saw Kristi on top, her long blond hair a sharp contrast against the silky tan brown skin of Toni's thighs. I berated myself for being dumb enough to watch television.\n\nI walked around to the other side, summoning the lube from our bedside table. I locked eyes with Toni as she dug her tongue into Kristi's sweet honey pot. I slapped Kristi's ass hard and watched it shake, her perfect butt tightened and I heard her moan into Toni's heaven. Kristi came twice at the combination of Toni's tongue and as I spanked her repeatedly. Her ass turned red as I got her puckered star ready for my length with two fingers while Toni feasted on her silken swollen lips.\n\nAs I started to push past her ring she bucked back popping me in and groaned in pain and pleasure. My eyes rolled back in pleasure as I felt Toni lick my balls as I slowly sunk into Kristi's perfect tight little rosebud. \n\nKristi begged me in a muffled voice, \"Fuck my ass hard baby. Hurt me with that big strong cock.\"\n\nI started to pull out slowly, then rammed back in making her gasp. I never got tired of hearing her sweet innocent voice spewing lustful perversions. I still started slow though, I didn't want to truly tear or hurt her, even if I could heal it. I wanted her to love it... so I was both rough like she liked it and careful as I slowly picked up speed.\n\nBefore I knew it her tight ring gripped my hard shaft. I froze as she came all over Toni's beautiful face. When she came down a bit, I started up again and slammed into her while she bucked back into me, grinding her hot heat along Toni's face. I heard Toni gasp and Kristi's moan of approval and knew Kristi's tongue was getting a tasty bath.\n\nAnd all this happened in front of the oven on the kitchen floor. I started to lose it, and Kristi must have felt me start to expand because she started talking...\n\n\"God yes, cum in my slutty ass, fill it, claim it. I love it when your big dick cums in my tight little puckered hole,\" she begged as she bucked back into me harder.\n\nWhen I came down, I pulled out and sat back, before leaning down and kissing Kristi's perfect ass, and then Toni tasting Kristi on her lips.\n\nThe food had a ways to go so we moved it on up to the bedroom.\n\nOn the way Toni said, \"I'll be happy to spend the night... but I'm not ready for more. And Kristi is...\" she trailed off.\n\nI grinned, \"I know, I thought you'd hit it off in bed, she loves being a sub.\"\n\nShe raised her eyebrow, \"And us?\"\n\nI winked, \"You're incredible Antonia, and we'll have a lot of fun trying to one up each other.\"\n\nShe kissed me as we reached the bed; the three of us were quite hungry by the time dinner came around...\n\nThe next morning before work I put on the television again. My mouth dropped open as I saw footage of Hope with a glowing golden visible aura walking around the hospital healing people. It looked like cell phone footage, but it was still good quality. I knew what that would mean for her. I liked healing well enough, but I had never felt the same intense need she did. My passions lied elsewhere.\n\nStill, I guessed her career as a doctor was over. I looked forward to getting back to mine later this morning. Kristi looked excited about it too, we had only missed one day of work, and with everything going on I'd be surprised if there was any fallout over it.\n\nWhat I hadn't counted on the following morning, was the gaggle of reporters in the parking lot when Toni and I arrived together shortly before eight. They started to yell questions as we walked toward the door. When we tried to pull the door open human magic flew by me and the door slammed shut.\n\nI turned and glared at the reporter the magic led back too. This could get complicated.\n\nI said firmly, \"No comment, please don't bother me at work,\" and took Toni by the arm and teleported through the door.\n\nI smiled smugly. Not having to hide may have its uses... \n\nWhen we walked in Lina frowned at us from behind her desk and said, \"Conference room.\"\n\nWe went down the hall and knocked before opening the door and walking in. Darnell and Abby seemed to be arguing based on the looks on their faces. I grabbed a coffee and took a seat.\n\nToni asked, \"What's going on?\"\n\nAbby glared at Darnell and said, \"He wants to shut us down for a while... And I'm telling him there is no point.\"\n\nI asked, \"Why?\"\n\nDarnell frowned at me, \"I'd figure you of all people would understand. The FBI are using remote viewing and catching all the people on their most wanted list, and they'll probably have them all within a day. The CIA is watching other countries. What do you suppose our competing companies are doing? They'll steal the results of our experiments and read the monitors. Get blueprints, all of it, without ever having to come near the building.\n\n\"It's quiet out there now, but what you and your family did will change everything. It's only a matter of time until criminals figure out concrete can't stop them, and guns are a joke. It's only a matter of time before everything falls apart. Do we really want to add new powerful inventions to the mix?\"\n\nI liked that he was concerned about his inventions getting in the wrong hands, but he wasn't playing what if far enough along.\n\nI nodded, \"I know, but the alternative to loosing the magic was worse, trust me. Society and government will eventually change drastically. Those people that steal your stuff, well they won't last long... and the peeping toms and other spying will all die down. It's all about being forced into an honest society where you can't lie. \n\n\"Also, all those people in prison that escape won't last long against the rest of you. Forget the old way, waiting for the police, it may take a while to get there but we'll work as one society.\n\n\"Consider one man with magic against a room full of hostages, that all have magic. It would be completely different from a man with a gun and ten helpless people. They also can't escape for long if they run. No one can lie and get away with it, which means swift justice that isn't in doubt. No... the criminals will be screwed, not rolling in luxury and taking what they want. It goes the other way too, people falsely accused will be let out of prisons and be able to reclaim a life.\n\n\"It will be an honest but brutal change in some ways. Not sure though that a power source would matter at all that much to the chaos that will happen. All it would really do is provide easy and cheap power. Plus boss, my inner geek is dying to build it.\"\n\nToni said, \"Vinnie is right. People may steal it, but in the long run they'll be screwed. No long protracted court battle, just two people, one honest, the other a liar and a thief. It won't be that simple for a while, but it's coming.\"\n\nAbby added persuasively, \"They're making sense boss. When they are interviewed to make that patent, the clerk will know they are lying about it being theirs. When the reporters interview them, it won't take long either. A few stupid ones will fall, and then after that, corporate espionage will stop as a crime despite how easy it would be, simply because there'd be no more money in it.\"\n\nDarnell closed his eyes and rubbed his forehead, \"Fine, but if I lose my shirt you're all fired.\"\n\nI snorted and lifted my eyebrow to make a point. He'd tried to sound like he was joking, but he'd meant every word of it.\n\nWe went back to the lab and got to work...\n\nWe didn't really have anything solid that first day. I was working with a theory that would collect solar energy and heat out in space, then transmit it here using exotic particles. There were other implications and possibilities, using the energy created by the planets themselves as they orbited the sun for example. But we had a long way to go in applied science before we reached the point we could even try advanced theories like that.\n\nStill, even what I was planning was impressive. I could hardly imagine what benefits collecting energy from the sun and sending it to earth would engender. It would be possible to create a large field electric field, much like cell and radio towers worked, but transmitting energy instead of data. It wouldn't be easy, hell, even getting something close to Mercury's orbit would be tough, but a small proof of concept device in the lab shouldn't be that difficult.\n\nActually I take that back, it won't be that hard with anti-gravity to get something close.\n\nAll we had though at the end of the day were conflicting ideas and dead ends. We could take it up again tomorrow.\n\nAbby asked, \"You up for drinks tonight?\"\n\nI shared a look with Toni, and then said, \"Sounds good, as long as we can avoid the press.\"\n\nWe wound up at the same bar we did on that first day, after I relented and answered a couple of questions from the press. The disturbing part was they seemed much more concerned about my personal life than anything else. \n\nAbby seemed to have as many questions for us as the press did, but I was much more comfortable with a drink in my hand and a relaxed atmosphere. She also seemed more concerned about magical topics, not my sex life which was kind of a relief to tell the truth.\n\nBy the third drink, I was feeling pretty good.\n\nAbby asked, \"So what do you think the fae will do?\"\n\nI shrugged carelessly, \"I don't know. They may attack or do something else entirely. It's hard to say. The longer it takes though, the better it is.\"\n\nAbby nodded, \"I suppose, the more we learn about our magic the better.\"\n\nI offered, \"If you want I'm sure my wife would stop by and give you the basics mentally. Then it's all just practice instead of discovery.\"\n\nShe asked, \"Wife?\"\n\nI shrugged, \"It's how I think of them, of course not legally... But Kristi has had her magic for four years, so she knows what it can do.\"\n\nWe chatted for a bit more and had a couple of drinks. Abby said she'd have to think about it. It wasn't all that surprising, the magic was new and the thought of someone in her mind that she didn't even know... It would take time for people to trust their new senses.\n\nWe stayed out until around nine, Abby needed to get home to her family, and so Toni and I got in the car and started for the house.\n\nI asked, \"Do you need to get anything from the apartment?\"\n\nShe took my hand, \"No, I got what I needed last night for the next few days.\"\n\nI said carefully, \"Is everything okay? You seem a little tense.\"\n\nShe shook her head, \"Just something I need to work through on my own. Nothing to worry about.\"\n\n\"So you're getting along with Kristi and Alicia?\"\n\nShe nodded, \"Their amazing actually.\"\n\nI nodded sagely, \"Of course, they put up with me don't they?\"\n\nShe snickered, \"You're not so bad... most of the time.\"\n\nShe squeezed my hand as we pulled in. I wondered if we should even bother with the car. Now that I don't need to hide, all those little habits I'd created almost seem silly now. I did like driving my cars though, so I would have to think about it.\n\nI gave her a kiss before we got out and went into the house, which was full of people. Toni and I looked at each other with surprise as we looked around. Kristi walked up and kissed my cheek.\n\n\"Surprise, thought we might throw a little party tonight.\"\n\nI pulled her against me and kissed the top of her head, \"What's the occasion?\"\n\nShe shrugged, \"Been a while since we were all together. There seems to be a break in the fight so...\"\n\nI smiled, \"Great idea.\"\n\nBesides my sister and her three mates, there were quite a few people. My parents were here along with their other mates; Kim, Amy, and Lisa. Along with my brother Ray, sister Claudia, and Elisha and Eloise who were the only other humans with magic up to a few days ago, and who were family friends. I also recognized a few coven members, most notably Willa, Tara, and Stacy who were still known to visit my father on occasion. Last but not least I noticed a few sorcerers wandering around.\n\nI took the opportunity to introduce Toni to the latter, while also trying to catch up with all the former. It was a long party, with lots of drinking, although everyone behaved themselves with a child here. I laughed when Elisha was telling me how she was teaching her teachers how to do magic so they could teach their classes.\n\nIt was definitely a good time to be alive right now, with all the changes going on. But there was also a caution hanging over our heads. The news was starting to show what I predicted; the harshest of the governments that kept their people in a stranglehold were quickly being put down. Not that it was such a bad thing, people deserved to be free, but death and destruction is never fun to hear about.\n\nToni looked like she was a bit overwhelmed meeting all these new people, so we stepped outside onto the deck for a quick breather.\n\nToni giggled, \"You remember what I said about your parents when we first met.\"\n\nI nodded, \"What about it?\"\n\nShe whispered, \"They are wonderful people, you have a great family. But... they are still sorta scary.\"\n\nI laughed, \"Yeah, a bit. I can't argue that.\"\n\nShe on the tips of her toes and kissed me softly with her hands on my chest, \"You're just like them you know.\"\n\nI shook my head, it was hard to picture, I was just me...\n\nShe smiled, almost like my denial pleased her, and she kissed me again before pulling me back inside...\n\nWhen I asked how things were going with my parents my mother made a face.\n\n\"The council is shut down right now. We were holding a meeting this morning and humans came in curious. I'd guessed they sensed all the different auras in there. Next thing I knew there were reporters coming in. I'm proud of you and Hope, but so much is changing. At least it was peaceful though, they were just curious.\"\n\nMy wife flipped on the television, and gradually silence fell in the room. I had wondered what the fae would do, and it looked like I was about to find out. There was quite a bit going on and it took watching for about fifteen minutes to get through it all.\n\nThere were reports of fae appearing in remote areas, away from the cities where their magic would be most blunted. A few small towns in Middle America had gone dark at the latest report. As for how the fae planned to deal with the cities. I could barely believe my eyes when the television showed an image through a telescope.\n\nThere was a large blank spot in space, and coming out of it were a number of small meteors. They brought in experts who believed we were about to be bombarded from orbit. Some even suggested, and it made sense, that the fae would be guiding them in for maximum damage in the cities.\n\nI looked all around me at who was here, and then at Kristi, who had turned on the television. All this had been her work. Had she known this would happen and shielded it from the rest of us? I don't think I could have been that strong. She smiled at me weakly and I went over to hold her.\n\nThis wasn't something even all the people in the room could fix, what could we do against an orbital bombardment? Or even the thousands of invading fae. It seemed like a bad dream. We were at war.\n\nThe noise started to build up as everyone absorbed what they had seen. Ironically in a few months the humans could have joined together and tossed the meteors like pebbles back through the hole in space. The magic of six billion joined in a single purpose. But right now? They were learning but still had too far to go in both skill and trust.\n\nEveryone seemed scared, but also promised to help if we came up with something, before they left for home. What now?\n\nI had absolutely no idea...\n\n\u2003\n\nChapter 10 \u2013 Hope\n\nThey say ignorance is bliss. I had always wondered how they made worlds uninhabitable during the wars with magic. There may not be nuclear radiation, but all those meteors hitting would cause megatons of damage, spewing dust and dirt into the air and possibly starting an ice age.",
        "I really wish I still didn't know.\n\nEveryone was gone from Vinnie's now, except for the eight of us. We were sitting on the couch staring off into space. \n\nI asked grasping at straws, \"Any ideas? What about that anti-gravity thing you made?\"\n\nVinnie shook his head, \"If we had six months... maybe. As it is, we have what, five days before the meteors hit the atmosphere?\"\n\nI asked in a strained voice, \"Rafe?\"\n\nHe frowned and looked a little defeated when he said, \"Nothing I could do would help. My world is protected from this type of attack, but even if my sovereign wanted to we couldn't implement the solution here in a week. It would take months to build the spells to cover your planet from this type of attack. We don't really have high technology either, we use magic for everything.\"\n\nVinnie asked, \"What race does have the tech we are just learning? Magic wise it seems like your race as well as the human race here is limited by time.\"\n\nRafe looked thoughtful, \"The grays I believe your popular fiction calls them. But we are back to the same problem. It would take a longer than a week to build a gate to their world and they might not even help.\"\n\nI asked, \"Have you ever met one? I need to know what their magic feels like.\"\n\nVinnie looked up at me sharply and Rafe asked, \"Why?\"\n\nI replied, \"Because Vinnie and I can cross realms remember? We only go to limbo because it's empty and close enough to ours to see across. Just because we haven't gone to others doesn't mean I can't like I'm walking across a room. But there are too many to search, I need a place to start.\"\n\nBree growled, \"But you can't take anyone with you.\"\n\nI shrugged, \"I can take Vinnie with me. The rest of you can work on the fae problem here,\" I turned to Vinnie, \"Unless you think you can make a difference here, then I can go alone.\"\n\nRafe didn't look happy, but he transferred the memory to me with Kristi's help.\n\nI added, \"Are you sure the tech you made won't help? I imagine the president would make sure you got access to all the fabricators you could want.\"\n\nVinnie shrugged, \"There are hundreds of them, and even if I could figure out a way to change all their trajectories, the fae here would just pull them back. I don't even have an idea how to do that. AG will help get things to the asteroids, but that's a lot of mass and momentum to redirect.\"\n\nI shrugged, \"Not if they're dead. Or running for their lives when you do your thing... I'm sure the rest of our family would take care of that little detail.\"\n\nVinnie asked, \"If you're so sure we can pull it off why go at all. I don't like the idea of you being alone. You won't even be able to take ghosts with you.\"\n\nI wasn't sure about that, \"I might be able to pull them there through our bonds. But I shouldn't need them; if the grays are violent I'll just come back... Besides, we need allies. Even if we do protect the earth this time around the fae will only try again in a different way.\"\n\nI turned to Kristi, \"Do you think if the president gave you a battalion you could train them to join minds, would that be enough to push away an asteroid?\"\n\nShe shook her head. \"I don't think so. I could teach them, but it would take a lot of practice. Joining minds isn't something you can rush.\"\n\nI closed my eyes and grated out with gradually increased volume, \"What are we missing? There has to be a way. Either Vinnie or I have to be able to fix this right? Isn't that the whole fucking point of the god damned stupid fucking prophecy?\"\n\nI might have been losing it. For all my back and forth, I was pretty sure I was wrong before. Me freeing the magic did this, caused this attack. We hadn't been expecting meteors for hell's sake. Problem was, I wasn't seeing Vinnie stepping up right now to fix my shit. I know that wasn't fair, he was probably thinking hard to come up with something. But shit, this was too much to deal with.\n\nI felt arms go around me and I knew it was my mates.\n\n\"Sorry,\" I muttered.\n\nI walked over to the bar set up for the party and grabbed a drink.\n\nToni said softly, \"I have an idea...\"\n\nEveryone looked at her and she blushed.\n\nToni explained, \"So, I think we could create enough AG devices to make a smaller size rocket weightless, that would be enough to extend its range to reach the asteroids. After that, the solution isn't tech, its magic. If I were close enough, Vinnie or I, could easily turn it to dust with sorcery. I think we could come up with an earth ward that would do something similar, since we can't go ourselves.\"\n\nVinnie smiled, \"That would work, you're a genius. Of course, if Toni and I are doing that, the rest of you need to hunt out the fae and work with the government again. They could probably stop any launches if we don't.\"\n\nI took another sip of my drink and sent a ghost to dad. He and mom showed up before I started on my third drink. Yeah, it wasn't healthy but the world was ending, and I was fairly sure it was my fault...\n\nBefore I started I had Kristi locate Johnson and I reached out and grabbed him. Once he calmed down, I started explaining the plan. Vinnie and Toni would deal with the asteroids and needed all the resources the government could supply, including missiles. I also suggested if there was anyone else at the office that could help to bring them in on it. He had told me about Abby and it seemed to me an engineer might have some ideas too.\n\nMy parents and the rest of our family, including my mates, as well as Kristi and Alicia would work with the military to track down and kill the fae as fast as possible. With my father there they would be able to gather the dead fae as troops along the way. If he could collect enough of them, maybe he could have them fix the issue.\n\nAlthough I doubted they could push away the asteroids, I think they were only here to bump them into a better attack profile, which would be a lot easier.\n\nI added, \"Hopefully the communities will fight back now that death is imminent. You could probably depend on Jeremy and Bell too if you contact them.\"\n\nThen I told them what I'm doing, \"I'm the backup plan, I'm going to go ask for help from the grays. Johnson, I need permission to negotiate for us, and no, I can't bring anyone with me.\"\n\nNo one looked especially happy about me going alone, especially Bree and Callie. But it was what it was. I wished I could take them with me, but it wasn't an option.\n\nJohnson picked up his phone and said, \"I'll call the president and see what he says. If he's as smart as I think he is, he'll let you speak for us.\"\n\nWhen he walked off Bree said, \"I want you to pull me there in spirit form, I don't care if you need me...\"\n\nI sighed. I should have expected that, and truthfully I was glad of it. There was one more thing I could do, so I could still help back here. It would be as close to being here as was possible, if Callie were willing. I couldn't use Bree for it, though she would be my first choice. One, she'd hate to be locked into her body, two was she wasn't a vampire.\n\nI said with a smile, \"Okay, I promise I'll try. It should work...\"\n\nI grabbed Callie by the hand and pulled her into the other room, Bree followed. Rafe didn't, but then he always knows what I want, and he probably knew what I was up to already.\n\nI kissed her softly and caressed her hair. She looked back at me concerned.\n\nI said softly, \"There is a way for us to stay in communication, and for me to even act through you. It would also give you access to my magic directly, as a result you would be very strong and even able to self heal. All my ghosts would be bound to you through me, and you could order them. It is not a small thing I ask.\n\n\"You met my Aunt Amy right? She's my father's lich, that's what I'm talking about. I won't get angry if you say no, once it's done you would die without the bond, so it does come with risks. If I ever died, you would follow me quickly.\"\n\nCallie's eyes widened, \"You would trust me with your magic and the spirits under your dominion?\"\n\nI smiled, \"More than that love, I'd trust you with my soul, which is what we would be sharing.\"\n\nI could feel Bree was content, and understood the reasons behind my choice.\n\nCallie smiled brightly and pulled me into a hug, \"I'd be honored, I love you so much Hope...\"\n\nI reached for her soul... and mine, and bonded them together. It was so much more intimate than the mind bond; there was no closing this one, or keeping anything private. Callie was a part of me, and I was a part of her. Literally until death do us part, there was no going back, and I honestly couldn't imagine ever wanting to.\n\nI kissed her softly and we walked as one to the sofa. Bree watched with love in her heart as Callie and I stripped. She was breathtaking. Despite her previous strength she was so much stronger now.\n\nBut in my arms she was soft, yielding, and gentle. I lowered her onto the couch and lay beside her. There would be no mistress Hope this time. We explored each other with soft fingertips and light caresses and the intimacy seemed to build as our souls also explored each other's. Her skin felt like silk against mine and I felt a fingertip run up my inner thigh, and then teasingly circle around my heating core.\n\nI barely brushed against her labia and she gasped loudly, which was quickly followed by mine. I had no idea just how sensitive I'd made her, and I could feel it clearly through our new soul bond. I broke our seemingly endless kiss, I had to taste her, and I wanted her sweet wet tongue on me as well.\n\nI couldn't tell where my desire for it ended and where hers began, we both sighed in pleasure as I straddled her head, while I lowered my head down between her legs. Her labia were puffy and ever so sensitive. I ran my tongue under her hood and flicked her clit, twice, and gasped as she licked mine. She was so sensitive we both fell into bliss together as our need, feelings, and pleasure all mixed together.\n\nIt was only a small one, but it was fantastic, I felt decadent and sexy... loved and cherished, all at the same time. We dove into each other again and I moaned into her velvety pleasure at her taste. We teased each other, rising slowly to our height, going higher and higher until we broke in rapturous pleasure.\n\nWhen we came down there was no reason to talk, her want was mine and mine was hers. We turned to Bree and beckoned her over, a duplicate smile of wicked anticipation on our faces. Bree came over to join us, and things got a little naughtier at that point. Both Callie and I were subs at heart, so when we finished stripping Bree we dropped to our knees and each took a side.\n\nOur knees were touching between Bree's spread legs as we both started tonguing a hole each.\n\nBree gasped, \"God, yes... lick deeper.\"\n\nA bolt of pleasure went through me at her words, and while I doubled my efforts to enter her tight hot body with my tongue I reached down and slipped two fingers into my hot wet molten core. A short few seconds later we all fed back on each other's pleasure and went into ecstatic bliss. We worked together on Bree for a while longer, and reluctantly stopped when she reached her third orgasm.\n\nIt had been important, almost a necessity to come together like this after the bond formed. But we were well aware the World's time was running out. We got dressed and walked back into the room. We were all flushed and sweaty, blushing as everyone took us in.\n\nJohnson said, \"He said yes, but try not to sell our souls okay?\"\n\nI grinned, \"Don't you trust me?\"\n\nI winked when he glared.\n\nI said, \"Sorry, too much pressure you know? I'll contact you through Callie if it seems like too much, or something I'm not comfortable with approving.\"\n\nJohnson said, \"Good, now can you send me back to the meeting you stole me out of? I've already given Vinnie and you're parents the contact information they will need to get their side rolling.\"\n\nI shook his hand and told him thanks, then sent him on his way, back where came from.\n\nVinnie asked, \"Are you sure about this sis, you don't have to do this.\"\n\nI nodded, \"Just in case. We have a lot to do, and only a week to do it.\"\n\nI hugged everyone self consciously, I really did think I'd be back, but just in case...\n\nI kissed and hugged Rafe and Callie last, then took Bree's hand and teleported home. I took a quick shower and changed my clothes. Bree was with me in spirit, her body lying on the bed. I took a deep breath and closed my eyes. It was habit, simple and easy to walk into limbo. But this time I was looking for another Earth. I focused my magic to access that ability and stretched it out.\n\nIt was almost overwhelming how many worlds there actually were. Uncountable. It didn't take as long as I thought it would. The magical... essence of worlds were closely related. The further apart, the more different. I strummed across them with my magic and went in the direction that felt right.\n\nEvery world I sampled came closer and closer to the memory in my mind, until it finally happened. I found it. I took a deep breath and stepped into grays' world, dragging Bree's spirit behind me...\n\n\u2003\n\nChapter 11 \u2013 Vinnie\n\nIt felt strange letting her go without me. But I had my own task to do and only a few days in which to do it. The first thing I did was call Abby; she would definitely help and perhaps bring a unique perspective. Toni and I packed a few things and I spent some time talking to and kissing Kristi and Alicia.\n\nI didn't like the idea of them fighting without me, but I wouldn't embarrass any of us by expressing any doubts in their abilities, so I only told them to be careful. We met Abby at the building and grabbed the information we would need. I explained to Abby what we needed and she had an objection almost immediately.\n\nAbby explained as I teleported us to a hidden army base, \"We need to figure out how much acceleration one of the missiles can handle without burning up flying through the atmosphere. I wouldn't be surprised if we needed to leave at least a half G or maybe a quarter G until it leaves the atmosphere.\"\n\nI snickered, \"I knew there was a reason I called you.\"\n\nShe smiled, \"So are you two official yet?\"\n\nToni blushed, \"Is it that obvious? We are kind of dating right now.\"\n\nShe snickered, \"No need to worry, it's only obvious to a budding empath, so you know, only six billion or so people would know by taking one look at you.\"\n\nI snorted a laugh and Toni elbowed my side.\n\nA few men came out in uniform and jogged over to greet us.\n\n\"Please come with us, we can get you settled and get anything you need that we don't have.\"\n\nWe followed the two men to a warehouse.\n\nOne of them said, \"I'm Mike, this here is Bob. I'm instructed to make sure you only have access to this building, so remember it and try not to get lost.\"\n\nI nodded and they brought us inside. There were three fabricators, they looked much bigger than the one we had at work. I also figured all the feature restrictions on what could be made had been removed on these.\n\nAbby had a big smile on her face and sat down at the interface and started typing. Then she turned and started to talk excitedly.\n\n\"These three will create what we need, making five at once every hour. That's... three hundred twenty a day. That will give us two days tops to try different approaches and see what will work. Most of that will be programming though.\"\n\nI asked Mike, \"Do you have one of the missiles we'll be using.\"\n\nHe nodded and pointed to a crate in the corner. I brought one out. It was small, but shouldn't have trouble leaving atmosphere with the gravity reduced. The tradeoff was fuel though, the more stable the climb the more fuel it would take. That gave me another idea.\n\n\"Can these be fired remotely?\"\n\nHe nodded, \"Yes.\"\n\nI turned to Abby, \"What if I teleported them up there, then we wouldn't have to worry about them burning up in the atmosphere. I'm sure I could get them to L.E.O.\"\n\nShe nodded, \"That should work, I'm going to build one out now, we can try it in an hour.\"\n\nAn hour was so fast to make one, and so damned slow at the same time. Still, we threw ideas back and forth for a while as it was built. Toni added her earth magic ward to the tip of the missile while we waited. It didn't look too hard and I thought I could duplicate it, but it didn't look easy either.\n\nWhen the device came out we added it to the missile. We had to wait another ten minutes for Bob to get back with the control device for the missile. It looked like a small laptop. Once it was up, I teleported the missile straight up to low earth orbit. The gravity up there was still close to earth normal, but out of the atmosphere, so with the anti-gravity switched on, it just hung there.\n\nWe waited a few seconds as the telemetry came in, and then launched the missile at one of the closer meteors. It went fast, accelerating toward the target. Space was big it still took some time.\n\nThe missile hit the asteroid, so as far as it went, that part was a success. Not so much on the destroying it part though. I stared in disbelief at the image, it didn't look touched.\n\nI said, pointing out the obvious, \"You don't suppose they shielded them do you?\"\n\nAbby frowned at me and Toni sighed in disgust.\n\nI shrugged, \"Well it worked as far as the AG and missile goes, so why don't you start printing them out. In the meantime we need to figure out what to deliver once we have them.\"\n\nToni asked, \"Any ideas?\"\n\nI shook my head, \"Just a crazy one,\" I turned to Bob and Mike, \"I need two things, an EVA suit that will fit me and someone to remote view an asteroid and give me a picture. If you can't get that last one I can bring in someone who can.\"\n\nAbby looked at me like I'd lost my mind, \"You're going to teleport out there?\"\n\nI shrugged, \"Only way to see what's shielding them, and to experiment in a reasonable amount of time. It takes too long to get a missile up there and we learned nothing from the failure. There has to be something we can do. Plus, it sounds kind of fun.\"\n\nI'd never really dreamed of being an astronaut, but space was cool, I wouldn't pass up the chance to go up there now that I had a good reason to. \n\nBob got off the phone and said, \"It will be here in four hours, along with an astronaut to put it on you and make sure you don't kill yourself.\"\n\nI thought that a little insulting, but probably accurate.\n\nThen we heard screams outside, and the sounds of gunfire.\n\nToni said in an alarmed voice, \"Shit, they must have traced that test here somehow.\"\n\nThe sound of fire was getting closer, so I casted my sword and armor and made for the door. I could feel about fifteen of them attacking. There were a lot more humans but I wished they were better at magic. We had to protect the warehouse, and I hoped I wasn't stupid for charging them. I stepped into limbo, fifteen to one odds means it was time to cheat.\n\nThe first one I came up to I blinked back to the Earth side a moment before my sword went through his shield and into his neck, the next step I was hidden again. I took about three out that way, but the humans were still losing, and the fae were still gaining ground.\n\nThere were still ten left when I stepped out and took my fourth head. This time I stayed out, hoping to give them a target and slow them down... hopefully without dying. I got close to the next one when I was hit by a jeep and slammed into the wall of another building.\n\nThat was such a bad idea.\n\nI slipped into limbo and started to snipe them again with my sword. I got two more when they reached the warehouse. I growled in frustration. I knew I didn't have a chance at stopping them but I was still pissed off. I teleported into the warehouse long enough to grab Abby, Toni, Mike and Bob, and then I got us out of there with my magic.\n\nMike glared at me as if it was my fault, and then got on the phone.",
        "What I wanted to know was why my parents hadn't been notified immediately. It wasn't like my project was important or anything. I realized if my sister had been there, they would have been by ghost messenger. We'd have probably also won the fight.\n\nMike got off the phone and said, \"We have another site, can you get us there?\"\n\nI shook my head, \"Bad idea. They traced my magic somehow. They didn't even check other buildings and went to the exact spot we were in. How about I leave a wild goose chase while you guys take Abby and Toni to the new site and get started on the making what we need. \n\n\"Just tell me where to end up, and when, to get my space suit on. When I have something figured out, you'll have to come get me and bring me in. Also, you need to have my parent's attack team on speed dial and call next time. They could have stomped those fifteen easy.\"\n\nHe scowled but nodded. \"Be in Edward's AFB in three hours. They'll know how to get in touch with me when you want to come in.\"\n\nHe got back on the phone and ordered a helicopter. I waited with them, not willing to risk them to another ambush without me here. If my theory was right, the fae knew where we were right now. I told Abby to be careful, gave Toni a hard lingering kiss and gave Mike and Bob the glare that said they better be okay when I catch back up.\n\nOnce they lifted off, I began my tour of the world. I popped in and out of Hawaii, NYC, California, France, Japan, Russia, Chicago, Seattle... I hoped I was driving them crazy.\n\nI stopped for a while New Orleans and got some Cajun for dinner. I missed my mates and wondered how they were doing. Normally a few hours I wouldn't turn a hair, but it was the end of the world and I couldn't be there to protect them. I had to protect them in a different way.\n\nI hopped to the AFB when it was time. I was ushered quickly to a hanger where a gruff looking old man looked at me like I was dirt he'd found under his shoe.\n\n\"Listen up boy. This ain't a track suit. You will pay attention to what I tell you or I'm taking the suit and going home. I could be fishing out the end of the world, so don't waste my time.\"\n\nI couldn't help the smile and said, \"Yes sir.\"\n\nHe frowned, \"Something funny boy?\"\n\nI shook my head, \"Just one of those days.\"\n\nHe grunted and finally got to cases. He gave me a bottle of high content oxygen to breath while he explained how everything worked. The mask muffled my voice, but he seemed satisfied with my answers when he checked on me.\n\nHe helped me get the suit on, which was a genuine pain in the ass. Then to my surprise, he sent the location straight to my mind. I grinned; he must have worked on that so he could see Earth from space again...\n\nOnce he gave me the all clear, I teleported to the asteroid...\n\n\u2003\n\nChapter 12 \u2013 Vincent Sr. & Anise\n\n-Anise-\n\nI shut my eyes to contain my anger when Johnson finished explaining what happened with Vinnie and Toni.\n\nI said as evenly as I could, \"Vincent, why did you not have a ghost on our son and his new mate? They were alone and the most vulnerable.\"\n\nI could swear I heard him wince and I fell into light meditation to deal with my anger.\n\nVince replied cautiously, \"It didn't occur to me; I figured they were safe in some hidden government facility,\" he paused for a moment, \"There, I have one on each of them now.\"\n\nI blew out a breath and nodded. I've been perpetually angry lately. First, four years ago I had to let them find their own way and learn how to stand. That was hard enough. But now I was frustrated, my children had asked for help and the communities seemed to have their heads buried farther in the past than the humans did.\n\nI flinched when I felt Vince's arms go around me, but then I melted into him as he kissed the top of my head. I hugged him back.\n\nI asked impatiently, \"Johnson, we have a target yet?\"\n\nHe nodded and I felt guilty when he said warily, \"There are close to a hundred that seem to be gathering near NORAD, we think they are going to attack to take out our ability to track the meteors.\"\n\nI raised an eyebrow, \"Would that work?\"\n\nHe shook his head, \"Not by itself, but it would be a good first step.\"\n\nI nodded and pushed my feelings down. I was very tempted to take out my frustrations on the enemy, but fighting angry would just get me killed. Still, I knew I would feel fiercely satisfied about it when I let go of them after the fight. Kristi gave me the target site. They were out in the open in the mountains, which would make it both easier and harder.\n\nWe split up the groups. Vince teleported his group to higher ground, north of the fae, I took mine their south. This was going to be messy. I was surrounded by my white armor, and wielding two swords as I rushed into the enemy. I moved with a thought at the speed of my magic and took the first head.\n\nI felt several head sized rocks coming toward me, but I was a sorceress too, the earth was mine to command and with a thought they fell to dust as I took the next head. The truth about the most powerful races was their long lived lives. They had the time to learn and perfect their magic beyond most others.\n\nThere was a cluster of six fae attacking my mind in concert, before my shield could fail I concentrated the air, raising the air pressure high enough to squeeze their shields and hold their bodies in place. It also made it impossible for them to breath. They switched their focus from attack and struggled to move out of the compression field, but they weren't fast enough.\n\nI couldn't go into melee range so I hit them with fire. It wasn't quite as hot as the sun, but it was close as it ate into their shields and burned into their bodies. They quickly turned to ash.\n\nI turned and headed for the next fae who launched a thick branch at me like a spear. It was surrounded by a fae shield. There was no way I could destroy it in time, so a pillar of stone rose from the earth to intercept it. It sounded like a thunderclap when it hit, and my pillar was falling over, but I was already around it.\n\nI saw the consternation on his face as I closed the distance. He jumped up into the sky and I followed, my wings flared out behind me. I hated to fly, but I wouldn't let him escape. I cut him in half at the chest with my sword; his body fell back to the Earth in two pieces.\n\nI took a moment to look around, and no one seemed to be getting overwhelmed. There were a few wounded and I launched a glyph of healing their way. I could also see Vince had a number of the dead ones enslaved. I picked my next target and dove for him...\n\n-Vince-\n\nWhen we had landed at the top of the slope, we could feel the fae below us, but not see them with all the trees and shrubbery. We started moving down. Lisa casted spells next to me while I surrounded Amy and Callie's fists with dark shadow. There were a number of other smaller groups with me, but we couldn't fight as one large group any more than the fae could in this dense mountain forest.\n\nWe moved together toward the enemy we could feel but not see until we were close to them. Callie and Amy were both liches, and with my shadows on their hands not to mention their own considerable power they started to take out the fae with crushing blows to their enemy's bodies and heads. Lisa and I followed in their wake, concentrating more on defense.\n\nI raised the dead fae and bound them to my purpose, and worked on deflecting attacks from the fae. A stone heading for Amy's head was pulled aside by shadows with a determined thought. It all seemed to snowball in a short time as the more fae I gathered the faster the enemy went down.\n\nThe last fifteen took off up in the sky but didn't get far. I sent all my fae up after them as I spread my wings and took to the skies myself. I could also see Rafe, Anise, and Kristi join us there. We killed all of them without mercy. This was war on a scale I could scarce imagine; they were trying to kill the whole planet and I had no moral doubts at all as we took them out without mercy.\n\nWhen we were finished we regrouped on the ground and Anise started healing those that were damaged. She healed both simple contusions and crushed limbs with ease. None of us had died, but for three it was worse than that. Two of the younger witches and a werewolf were being held down. Kristi did something with her magic then shook her head.\n\nShe sounded a little fragile when she said, \"Their memories are gone, their minds crushed into insanity.\"\n\nKristi took a deep breath, \"I can probably fix the insanity, but they'd have to start their lives over.\"\n\nWe waited while she did that, then we sent them home to be cared for. I felt a little guilty because all I could think of was thank god it wasn't anyone in my family.\n\nAnise said coldly, still suppressing her emotions, \"Next target?\"\n\nJohnson sighed and nodded before pulling out his phone. It was such a waste, I was already tired of this and we were just getting started. Of course, the odds would be even better next time; outside of the ones Anise burned to ash I now had an army of fae almost a hundred strong at our backs...\n\n\u2003\n\nChapter 13 \u2013 Hope\n\nI woke up having no idea where I was. It was even stranger because I don't sleep, so I was fuzzy headed and alarmed, trying to clear the cobwebs from my mind.\n\nBree asked nervously, \"You okay?\"\n\nI muttered, \"I think so, what happened?\"\n\nI took a quick look around. I was lying on a metal table in an empty room. I didn't see a door.\n\nBree asked, \"You don't remember?\"\n\nI shook my head, \"Last think I remember was stepping to grays' world.\"\n\nBree replied, \"Well you weren't shielded or anything, and a few seconds after we got here, a number of the grays teleported to our location. It looked like you were about to say something, but they shot you with some kind of knock out beam.\"\n\nI shuddered, \"What else happened?\"\n\n\"They brought you here. They didn't do anything invasive, but they scanned you with devices and stared at you for a while. I don't think they know I'm here.\"\n\nI snorted, \"Well, they do now if they're listening, either that or they'll think I'm nuts.\"\n\nA crack appeared in the wall where I was sure there wasn't one a second ago, and opened up. I warily raised my armor, but not my sword. I wasn't here to start a fight, and apparently if they wanted me dead... I would already be.\n\nA short man with gray skin came in. He didn't look like the fiction shows, but he did have a somewhat larger head, and the eyes were all black and larger than human. But not that much larger. They did have thinner limbs, but they were still in the human proportion, it was only that they were much shorter. I guessed he stood around four foot five.\n\nHe nodded, \"That is not necessary. You are safe and welcome here, please come with me.\"\n\nI shook my head in disbelief, \"Welcome?\"\n\nHe turned his head and looked back at me, \"Our world is protected from magical gates. We did not permanently harm you, but your uninvited arrival was somewhat... alarming to us. Please, follow me and I will explain everything, we did not harm you, merely scanned your mind to ensure you did not pose a threat.\"\n\nOh, right. No harm in that, just download a damn copy why don't they.\n\nI sighed and followed him down a hallway. Everything looked... sterile, uniform, and utterly boring. I was lead into a room with a table and chairs, another gray was already sitting there and the table was covered with different foods. I took a seat and waited for them to speak.\n\nThe one who brought me said, \"I am Aris, this is Tenna. I apologize for the intrusion into your privacy, but we must protect ourselves, and you were not known to us.\"\n\nHis voice was without inflection, I was starting to wonder if they had emotions.\n\nTenna said in that same monotone, \"The war before the one you know about, approximately forty five thousand years ago, happened when we were emerging as a race using high technology for the first time, much like Earth is now. I won't go into all the details, but during that war the fae tried their best to destroy us.\n\n\"However, when we went to counter invade it became clear other races would not allow it. But we have not forgotten even after all that time. It was in the Great War fifteen thousand years ago, that we sealed off our world to all but a few allies. I am telling you this, so you will understand why we are willing to help you, but only under certain conditions.\"\n\nI shivered. I hadn't even asked yet. Maybe they actually had downloaded my mind. I found that thought very... disturbing. On the other hand, I didn't have to go through long interrogations as my world's time ran out. Apparently I didn't have to find someone in charge either, they'd found me.\n\nI briefly checked in on Callie. She seemed to be enjoying killing the fae and as far as she could tell, things were going well minus a few casualties.\n\nI asked, \"What conditions?\"\n\nTenna said, \"For one, we wish you to join our alliance.\"\n\nI thought for a moment and then asked, \"To what end?\"\n\nTenna explained, \"Mutual defense, a promise never to attack us or the others in our alliance. We can also freely trade. The main reason we ask though, is it will make it possible for us to annihilate the fae. The politics has somewhat changed recently, but we can't follow up on a forty five thousand year old slight, even if it was to destroy our world and race. But we can attack them if you are in our alliance.\"\n\nI nodded, \"So you would like us to help with the attack?\"\n\nAris shook his head, \"No, if you join the Alliance, we can destroy the fae world while the humans of your world destroy the current fae invaders. Your world is not yet ready to join an attack on the fae, and I fear if we waited until it was, the politics would change again.\"\n\nI frowned, it seemed like they just wanted us to join this alliance so they could get revenge. On the other hand, at least I knew what their motivations were.\n\nTenna said, \"We will honor the alliance afterward. It is not a little thing we offer for the chance of revenge. Beyond that your world would have our friendship, we would not offer this even for revenge if we thought we couldn't honor the alliance. Besides, we also realize your Earth will grow quickly and become powerful. The alliance will be good for us both on many levels.\"\n\nI asked curiously, \"Who else is in this alliance?\"\n\nAris said, \"There are two other races of human that we are partnered with. One is a race not unlike the werewolves you know, but they shift into great cats. The second race is peaceful. They look much like the Sasquatch of your myths and legends. Both of the other races have high technology but prefer more natural surroundings. I can tell that you aren't very comfortable here at all.\"\n\nI nodded, \"So, if you've read my memories you know I can't speak for the whole planet. And entering into a treaty would probably be way past what I could offer. Let me get instructions and I'll let you know how it went.\"\n\nTenna agreed, \"We expected this. We will wait.\"\n\nI sent Callie the message and all the particulars. She'd go to Johnson, who'd likely call the president. Now all I needed to do was wait. It might be a long time though; the president may try and get other countries to sign it too. I sampled some of the food. It was a bit bland, but much better than I thought it would be based on how it looked.\n\nI wondered if this is what the prophesy meant when it said us or the fae would be destroyed. Who would anticipate finding a race bent on destroying the fae and that they would be the only ones able to stop the meteors if we failed to do so ourselves. It also made me reevaluate the statement about the second born. It only said the first born would bring about humanity's destruction without the second born to stop it, it hadn't said anything about the reverse.\n\nMaybe it would take both of us to save it...\n\n\u2003\n\nChapter 14 \u2013 Vinnie\n\nHaving no up or down was extremely disorienting. I pushed down the feeling of having to throw up while cheating with a little healing magic to calm things down. The view was amazing though, and I took a few minutes to look around before moving closer to the asteroid.\n\nThe asteroid was definitely surrounded by a shield. I wondered how long they took to prepare this attack. Not that it truly mattered, but I wondered if it was my push forward in science or my sister destroying the enchantment that prompted it. The idea they could set up this many meteors and enchant them all in just a few days was an intimidating thought.\n\nJust to be sure, I sent my earth magic at the asteroid, and the signature brown of the fae's magic held it at bay. I could make out an enchantment running the shield, and wondered what to try next. My first thought was to use my own magic and just bypass the shield through limbo. But all that would really accomplish is to break it up into a bunch of smaller pieces, which probably wouldn't be any better.\n\nI also couldn't manifest my magic into a sword out here to break the shield, because that magic was solid, and required me to be touching it to keep it active. I couldn't do that in this suit without putting a big hole through it.\n\nJust to see how long it would take I sent a continuous attack of my magic trying to destroy the shield. After about five minutes I stopped. There was no ward powerful enough to do what I just did, and it was a failure. My sword could probably do it, but that enchantment was easily resisting my distance magic attacks. I was back to thoughts of going around the shield through limbo again. Could I wrap my earth magic inside my immortal magic and bring it along through limbo?\n\nI'd never tried, never had a reason to, but now was as good a time as any.\n\nInstead of condensing it into a magic grenade of sorts, I thought of it like a water balloon in my mind. I created a thin shell of immortal magic that would simply break against the meteor releasing the earth magic. It worked on the first try, but the earth magic ran out of juice when the meteor was only a quarter of the way gone. The meteor was just so huge.\n\nEven without the shield that first missile wouldn't have been a hundred percent successful. The shield was gone now though, so perhaps it had something to do with that? The earth magic reacting to the enchantment as it ate the rock it was embedded on?\n\nI threw more earth magic at it, and this time the same amount took out the rest of the meteor. So it was definitely the enchantment that caused the earth magic to burn out so fast. I moved toward another I could barely see, and it took me twenty minutes to get there. I didn't see how I could possibly destroy them all from up here, I'd run out of oxygen long before they hit, even getting a refill I'd fall way short of the total.\n\nDid this mean we needed two missiles for every meteor?\n\nWe didn't have enough time for that either. It would take at least three days to make enough AG devices for one missile each. I growled. The suit was so damned quiet, my breath sounded like a damn hurricane in my ears. I needed to be calm and think. If I couldn't have two missiles, I'd need the magic itself to be in two stages.\n\nIt was a lot to hold in my head at once. A layered spell. The top layer was the thin bubble with the first earth spell under it. The next layer of immortal magic under the earth spell would be harder and hold together on impact, and then it would release the second earth spell when it sensed the enchantment fail.\n\nI had to go into meditation to make sure it was all in my mind correctly as my magics came together. I sent it at the meteor, and it worked very well, the different stages breaking down the asteroid as designed. I needed to personally put the spells on each and every missile.\n\nI took one last look around before I teleported back. It really was awe inspiring out here in space. ",
        "I teleported back to Edwards AFB and the older astronaut helped me get out of the suit. By the time I did that and took a shower, my flight was ready to my new destination. It would be good to get back to Toni, I missed Alicia and Kristi as well, but it would be a while longer before I saw them.\n\nI know it had only been a few hours, but the humans had already failed to protect Toni once, so I was more than ready to go when I jumped onto the helicopter. It was an apache; they flew me east toward Arizona where we stopped in the middle of nowhere. We went into a cave of all places where there was a checkpoint about twenty yards in.\n\nAfter that it was straight down in an elevator. Some military bunker I would assume. The doors opened up and I could tell it was built in the fifties, but there were some upgrades done to it over the last eighty years. I was led down a hallway. The soldier with me pointed out the infirmary, somewhere to lie down and sleep, and a basic cafeteria with limited food choices.\n\nWhen we reached the end of the hallway, we went through double doors that led into a cavern size room that was filled with jets, helicopters, tanks, and various types of ordinance. It was the ultimate break open in case of emergency for the military. We walked through the cavernous room toward the back and over to the left. I smiled when I saw Toni and Abby over by a number of fabricators.\n\nI felt the stress melt from my body when Toni turned and met my eyes with hers, which danced brightly along with her wide smile. \n\nToni asked, \"How was your space walk?\"\n\nI winked, \"Easy...\"\n\nShe snorted as I enfolded her in a hug, her body fit perfectly against mine and I held her for a minute before letting go.\n\nI went over what I discovered and asked them how it was going on this side.\n\nAbby sounded hopeful when she said, \"It's coming along we'll have ninety already when these finish in a bit. We also have a detail of soldiers attaching them to the missiles. Really it's just a matter of time.\"\n\nI nodded. \"The one problem is I have to do all of them spell wise. Also, the spells will only last a couple of days at most, so we need to wait for the last day before I start with it. I'm guessing in mediation I can do over a hundred an hour, perhaps more. It will be maybe eight to ten hours of constant work for nine hundred missiles.\"\n\nI grinned, \"So I get to slack for a day or so, either of you hungry? I haven't eaten yet.\"\n\nToni took my hand, \"Yeah, let's go see what the U.S. military has for food.\"\n\nAbby said, \"This batch is almost done, go ahead. I'll catch up when I get the next set of fifteen cooking.\"\n\nAs we walked by the tanks I squeezed Toni's hand and raised an eyebrow.\n\nShe chuckled and shook her head, \"No... we won't be fucking on the tanks. But feel free to take me to one of those rooms after lunch.\"\n\nShe kissed me like she meant it, and then dragged me down the hall to the cafeteria...\n\nWhat? I'd never had sex on a tank before. That would be even sweeter than the mile high club... I doubted she'd go for it on one of those large missiles either.\n\nLunch was okay. It wasn't terrible, but it wasn't great either. I wound up eating a roast beef sandwich and some potato salad while we talked.\n\nToni said softly, \"I wish I could help with the missiles.\"\n\nI replied, \"It's fine, I count on you to tell me where I'm going wrong. You have a lot more experience with practical applications. I'm not going to have much to do for a couple of days myself.\"\n\nToni shrugged, \"I feel kind of useless.\"\n\nI sighed, \"You aren't though. I know what we are doing is important, but I still feel like a coward hiding down here doing it, while Kristi and Alicia are up their risking their lives fighting the fae. I know my parents are looking out for them, but shit happens. Having you here really helps me hold it together.\"\n\nToni nodded, \"Things are screwed up, what scares me is what will the fae do next. You know the axiom; wars are better fought away from home ground.\"\n\nI took her hand and pulled her up from the table, \"Let's give Hope time, because we sure as hell aren't invading fae without help. We can't even open a portal yet. Until then we need to just concentrate on staying alive.\"\n\nI led her into one of the rooms with a bed in it. It was starkly furnished with simple double bed metal frame with a thin mattress on it, and a night table with a lamp. I'd take her somewhere else, but I was afraid to teleport anywhere near the base, we were stuck here until we could launch the counter attack on the asteroids.\n\nI kissed her softly and she sighed into my mouth, her soft supple body melted into me until it was plastered against mine. She felt soft and yielding at first, then the kiss changed as our passion grew. It became harder, demanding, and had an edge of desperation to it in an emotional release from the present circumstances.\n\nWe both breathed heavily as we stripped each other's clothes away, I explored her silky smooth skin as I bared it. When we came back together I could feel her already swollen nipples and the soft silky surrounding flesh of her breasts rub up against the skin of my chest. I wanted to taste her badly, so I went to pick her up but I was too slow. She dropped to her knees and moved to take me into her hot wet sexy little mouth. Her eyes looked up at with me with lustful desire.\n\nI gasped sharply as her full lips closed around the ridge between my shaft and tip and sucked hard while running her tongue in circles around my sensitive flesh. Her fingernails teased my ass, taint and balls as I watched her lips lower, sinking down my hard shaft as she hungrily took me into her mouth.\n\nShe moaned in approval and wanton need as my tip hit the back of her throat. Then she made love to my long shaft with her mouth, bobbing up and down. I could feel her tongue as it bathed my sensitive underside each and every long stroke between her lips.\n\nI moaned loudly and reached down to grab her hair.\n\nI whispered, \"Too good Antonia, if you don't stop I'm going to cum in your sexy mouth.\"\n\nShe didn't stop; instead she moaned in approval and started bobbing up and down my length even faster. Her tongue swirling the tip each time she pulled back. She rolled my balls between her fingertips and gently squeezed. Her eyes were full of a wanton need as she worked desperately for my cum and that's what pushed me over. I gasped as my legs locked and felt myself erupt into her mouth. Her eyes were lit with lust as she slowed down but continued to work up and down my shaft as she sucked me dry.\n\nShe said with a smile when she popped off, \"I love it when you call me by my full name in bed.\"\n\nI pulled her up lightly by her hair and she stood. I kissed her softly, and then pushed her onto the bed. I spread her legs and pushed them up and over, bending her in half as I lowered my face toward her core. The scent of her arousal hit me like a drug and I licked all the way down her labia and back up, my tongue barely touching. \n\nI wanted to dive in and suck, nibble and bite. But I went slowly driving myself and her crazy as she rose slowly toward her height. \n\nToni demandingly begged, \"My clit, suck my clit...\"\n\nI ignored her and kept slowly licking up and down her swollen hot wet lips. She started to squirm, whimper and beg... but I kept her pinned down under her own legs as I drove her crazy. When I thought she was at her limit, I used my thumbs to expose her clit and merely blew softly on it.\n\nShe gasped and her body locked up and trembled as I held her down, her liquid silk shot out in a squirt and soaked my lips, mouth, chin, and neck. I licked her the same soft way on her outer lips as she came down. Once she was back with me I dug my tongue in deep, and greedily sucked in her tasty honey. I flicked her clit with my tongue once, twice, and then a third time.\n\nShe came again, hard, but her juice merely ran out in a rush this time as I lapped it up. I raised my head as she trembled beneath me, and rested her legs against my body and over my shoulders as I crawled forward on my knees. I was long past hardened again.\n\nAs she came down, I slowly pushed into her center. Her eyes widened in shock and pleasure as I stretched her very wet, tight, and grasping center wide enough to accommodate my hardened flesh as I pushed into and invaded her sheath. The feeling of her wet silken heat wrapping around me tightly as her muscles fluttered and tightened was beyond bliss as I buried myself deep within her. The angle we had was perfect for maximum penetration and I could feel her ass cheeks against my upper legs and thigh.\n\nWhen she seemed ready I started to pump in and out of her hard. Her perky B cups stood straight up from her chest, and although I had my eyes locked with hers, I also watched them bounce and vibrate as I slammed into her velvety passage over and over.\n\nShe started to roll her hips each time our flesh slammed together, grinding against me as her core squeezed down on me. \n\nShe said between gasping breaths, \"Goddess, Vinnie... harder... faster... fuck!\"\n\nI started going faster and grunting as our bodies slammed together just short of painfully as I railed into her. She screamed my name right before she came for me for a third time. The way her tight sheath squeezed and milked me along with the amazing feeling of her liquid heat bathing my shaft and soaking my balls pushed me over the edge. I pumped into her roughly a few more times, and then buried myself hard and deep as I emptied my seed into her waiting womb.\n\nI collapsed next to her on the small bed, and pulled her up against me tightly as we recovered our breath. \n\nI wasn't sure if she was ready to hear it, but I whispered the truth into her ear, \"I love you Antonia.\"\n\nShe turned toward me and kissed my lips. She had a sheen in her eyes as she said it back in a almost disbelieving voice, but I heard the truth in her words, and on her aura. I don't know what she was unsure of, but it wasn't in her love for me...\n\n\u2003\n\nChapter 15 \u2013 Hope\n\nI was back in that room, but they had taught me how to open the doors, so I wasn't a prisoner. Still, I felt like they would prefer it if I didn't snoop around too much. I closed my eyes when I felt Callie reach for me.\n\nCallie said, \"He wants to talk to you, the president I mean.\"\n\nI asked, \"Do you mind?\"\n\nCallie laughed, \"No... we'll have a blast in the same body.\"\n\nI grinned and said out loud, \"Bree, going on a little vacation. Get me if I need to be aware here.\"\n\nShe nodded.\n\nI went inside myself and stretched out my senses and mind. It felt a little strange, it was more than seeing or hearing through someone like I could do with a ghost, it felt like I was in this body. Then I moved and the material of the shirt brushed my overly sensitive nipples, and my panties felt amazing against my super sensitive labia. My goddess, how does she live like this? I'd be begging for sex all the time.\n\nI heard her giggle and could feel her in my... our mind.\n\nCallie said, \"Watch this.\"\n\nShe reached through our link and grabbed a little of my necromantic power and sent it straight to our shared core. My whimper was barely audible as I exploded in bliss. Holy shit.\n\nI asked with an internal smile, \"You do that often?\"\n\nCallie smirked internally, \"I have to. Besides, you said it yourself. Without that relief I'd be begging for sex constantly. I'm pretty sure I'm addicted to the rush of it now.\"\n\nI shook my head; it had been her choice to keep it this way. I doubted a normal human could take that kind of thing all the time without something going wrong, but her body was perfect and she was a lich with access to heal herself at any time.\n\nI opened my eyes and looked around. Johnson was over by the door with a smirk on his face. I shrugged and got up. My panties were soaked, but I had a long skirt on along with a silk blouse that felt amazing against my nipples. I envied her B cups for a moment; I couldn't get away with not wearing a bra with my D's.\n\n\"Why does he want to see me?\"\n\nJohnson said, \"You'll find out.\"\n\nI followed him out and made it halfway down the hall before I realized I was in the white house already. I had to distance myself a little bit from Callie's body. I felt like I was going to cum just from walking. It was very intense.\n\nHe escorted me right into the oval office.\n\nThe president got right to business, \"I'm having trouble selling this to the other countries. They feel like it might be a trick or trap. Besides that, it looks like your brother is going to handle those meteors just fine. But I wanted to hear it directly from you, so I know if I can trust them or not. If that makes sense?\"\n\nI said softly, \"Perfect sense. What good is reading lies going to get you through a third party? I get it. So yes, they can be trusted to do everything they said. They and the two other groups will be good trading partners. It also wouldn't be bad to have someone who knows who the other neighbors are. I get that it seems too good to be true, but when you weigh it against their desire for revenge against the fae, helping us into the greater community is a small price for them to pay.\n\n\"Eventually, they will have a bad ass world with a mutual defense agreement. They are seeing what we can be as well, and the people of this earth have strong magic and an inclination toward technology. For a people that plan over millennia a couple of hundred years is a short time to wait for a bountiful return.\n\n\"Beyond that, the fae are convinced they will die as a race if we don't. This isn't something they will back down from. If their meteors fail, and it looks like they will, they'll just do something else to kill us all.\n\n\"We don't have the ability to fight on their ground at all, we have no portals and even our tech is falling short of their magic. Maybe in a year when you all have a handle on your magic we could, but right now it's just a matter of time until they kill us. You can't win a defensive war and we are incapable of fighting offensively.\"\n\nThe president nodded slowly, \"I had thought of all that of course, but hearing you say it and knowing it is the truth will allow me to push back a little harder against the other world leaders. Thanks for stopping by, I'll let you know soon.\"\n\nI took that as a dismissal and left with Johnson. He led me back to the other room and pulled his phone out. A moment later Rafe was there and I jumped in his arms and kissed him like I was in heat, rubbing our needy body against his. Oh goddess, this body was insane.\n\nI whispered in his ear, \"Take me somewhere and fuck us both silly... please,\" the please came out in a desperate breathy tone.\n\nCallie crowed in delight at the idea of us getting fucked together, and I had to admit I kind of liked the idea of it too. What could be more intimate than sharing a body and mind with a woman I loved that was being pleasured by the man we both loved? Add in the extra sensitive girl parts and it sounded both wonderful and crazy. Not that I could think straight in this body. \n\nHe smiled and teleported us away...\n\n\u2003\n\nChapter 16 \u2013 Vinnie \u2013 Hope\n\n-Vinnie-\n\nThe next couple of days went by both slow and fast. We got some report updates. My sister was still trying to get a treaty going with the grays who would destroy the fae. I wasn't sure exactly why they needed the treaty first; they seemed almost desperate to want to kill them. I guessed the treaty of mutual support would give them the excuse to do it that would be upheld by the other races.\n\nUntil then their hands were tied.\n\nAs for why it was taking so long, a few of the countries on the U.N. council wanted to wring more concessions out of the grays, to take advantage of their desire. Some others wanted to limit what we would owe them for it. I thought it was ridiculous, we were on the verge of getting destroyed and human greed was entering the picture.\n\nAs far as the growing pains, they were still going on around the world. It hadn't quite hit a boil, but as people learned to control their magic it was getting closer every day. There were some prison breaks, but as I predicted they didn't last long. The common man and woman was no longer a helpless victim.\n\nMy parents did well against the fae, and continued to do so as they had them on the run the world over.\n\nI was in a light meditation attaching the four layer spell to the warheads. We considered sending them out as we did them but worried the fae would start on the next idea right away as soon as they saw this would end in failure. So we planned to launch them all at the same time with NORAD and the Pentagon coordinating the launches for each target.\n\nIt was boring work, but I'd suppressed my boredom about an hour back. Now it just was.\n\nAnother thing my sister had learned which I thought interesting was the grays magic was all internally focused. At one time they all looked like the rest of us. At some point though, they increased their lifespan, intelligence, and cranial capacity. That part was pretty cool, but in the end they sacrificed their emotions to the changes.\n\nI had a hard time understanding that. I suppressed my emotions when I needed to, but to simply not have them anymore seemed... wrong.\n\nI finished the last one and came out of my meditation. It took just over nine hours and ironically I felt rested thanks to the meditation and due to my emotions being suppressed.\n\nI asked our newest liaison to the president, \"So what's the plan?\"\n\nKate was sharply dressed in a business suit and had her light brown hair up in a bun. I hadn't seen her smile, but I knew it was a fiction. She looked that stern because it helped her get where she was. I was curious how long it would take her to get over it, because with magic released she wasn't fooling anyone anymore.\n\nKate said, \"If you're done I'll call the president.\"\n\nI nodded and stretched to try and relieve my tense muscles after sitting in one place for so long.\n\nKate hung up and turned to me, \"He said one hour, we'll get everyone on a conference line to coordinate.\"\n\nI sighed, \"Hungry anyone?\"\n\nToni took my hand while Abby and Kate trailed after. \n\nI hadn't eaten in nine hours either...\n\n-Hope-\n\nI was losing my mind a bit in this place and getting impatient for the leaders who were being disruptive to get on board already. I was a bit of a party girl still, though I was faithful to my mates, but I still loved to dance and have fun.\n\nBeing stuck on a planet with emotionless people for three days was not my cup of tea. I took a minute to reminisce on my threesome with only two bodies. It was great, but almost too much. I could barely move, or even breathe. I'd lost count of the amount of times I came in the first five minutes, and he had fucked us for over an hour.\n\nI was sure I'd have had a heart attack if I wasn't in a lich's body at the time.\n\nThe only thing keeping me sane since then was Bree, and I was glad I brought her with me. Still, all we could really do was talk since she had no body.\n\nCallie connected to me and said, \"They decided. Apparently the last holdouts panicked at the fact we were launching the missiles in less than an hour. So they caved in fear of what might be coming next. Score one for the survival instinct kicking in... finally.\"\n\nI snickered, thanked her, and headed out of my room in search of Aris and Tenna.\n\nI found Tenna in the dining hall and got her attention.\n\n\"They want to sign up with the alliance.\"\n\nTenna stood ignoring her food and took out a device. I felt myself being transported away.\n\n\"Where are we?\"\n\nI heard Aris' voice behind me, \"On my ship, don't worry, the trip won't take long.\"\n\nThey opened a forward view screen and I could see the blackness of space, the stars were so bright with no atmosphere in the way I couldn't help but just stare. I held my breath when a beam of light left the ship opening an aperture in space, the ship flew through it.",
        "These guys didn't lollygag, at all. My mouth dropped open when I saw the UN building through the port. Maybe it was a good thing they no longer had emotions, or all the delays from our world might have annoyed them, and it was quite clear to me they could squash our world like stepping on a bug.\n\nI followed them out of the ship and into the U.N. There were some surprised expressions at their appearance, but no one could doubt the veracity of their words when given in person. In a surprisingly short time the U.N. was signing a document, one nation at a time.\n\nI walked them back to the ship, but they didn't even say goodbye. I wondered how they would do it, how they would destroy the fae world, but a part of me hoped I never found out. \n\nI surrounded myself in magic and teleported to our apartment, so Bree could collect her body. After which we shared a long kiss. It was easy to find the others with Callie tied to my soul. I just thought of her and the connection we shared, and let my magic take Bree and I home...\n\n-Vinnie-\n\nWhen we got back from dinner we only had a few minutes to wait before we were on a call with a number of people. We had a three star general at NORAD, a four star general at the Pentagon, the president, and some telemetry people from NASA.\n\nWhen they all reported ready the President gave the order and I teleported close to a thousand missiles to orbit ten at a time. It took me a few seconds each batch, but I was able to keep ahead of them as they received the telemetry and fired off one missile after another in quick succession.\n\nWe had maybe a quarter of them in space on the way when the first one hit. A few seconds later we were looking at an expanding dust cloud instead of a meteor. There was some cheering from someone on the phone line, but I was focused on moving the missiles up there.\n\nIt took a little less than five minutes in total to get all the missiles in space, after that it was out of my hands. I didn't want to be rude, but as the asteroids were destroyed I wanted nothing more than to get out of here, and see the rest of my family.\n\nI said a quick goodbye to Kate. Abby asked me to send her home, so I did. Then I called Kristi and asked where she was. Everyone was at my parents' house so I held Toni's hand and surrounded us with my magic and took us home.\n\nBefore I could even get my bearings, I was in a four way hug with all my mates. It seemed like all our plans had come together, and we would be able to wipe our hands of the fae forever. My sister wormed her way in and gave me a hug.\n\nHope said, \"Hey little brother.\"\n\nI lifted my eyebrow.\n\nShe shrugged, \"Just saying, I have no idea which of us is first born.\"\n\nWe both turned to mom and said, \"Well... prophecy is over... which of us is which?\"\n\nAnise got an impudent look on her face, \"I promised I'd never tell...\"\n\nWe glared, but she just laughed at us, and then Johnson's phone went off.\n\nHis face drained of color and he looked over at us.\n\n\"A gate opened in Yosemite Park, and thousands of fae coming through. So far that's the only one we know of.\"\n\nI felt the touch of Kristi's magic and a teleport site showed in my mind.\n\nMy mother said loudly, \"Let's go!\"\n\nI surrounded as many in my magic I could and teleported to Yosemite Park...\n\n-Hope-\n\nThere were over a couple of hundred of us. Over the last five days while I'd been visiting the grays more of the coven as well as others from the various groups had joined to help. There were also quite a number of military who over the last week had gotten to the point they could shield and use telekinesis, none of them had rifles anymore.\n\nMy father had hundreds of zombie fae bound to his will as well. No one looked happy; we thought the nightmare of the fae had been finished. Now we were being flooded by them. The thought was depressing; I had been looking forward to a celebration and now this. I suppressed my emotions, we'd have plenty of time for that later and it wouldn't help me fight.\n\nThe target point Kristi gave me was to the East. Apparently they had a system worked out, because I could feel the fae to the west, but I also felt two other groups to the north-west and south-west. There was probably another farther west outside of my detection range.\n\nSurrounding them wouldn't do any good though if their bridgehead got too large. I brought up my armor and sword and we moved swiftly to engage. With Rafe, Bree, and Callie around me, we ran into the first of them quickly. Scouts, or perimeter guards most likely. \n\nThey screamed and attacked us savagely, something they had never done before. But there weren't that many of them out here and they fell quickly. Still, there was something about this that bothered me. I felt as if I was missing something.\n\nThe ground shook as there was a large explosion of magic throwing most of us to the ground. I looked up and there was a brown pillar of magic shooting into the sky. It lasted for several moments, and then disappeared. I got up and we continued the charge. We cleared the tree line and the ground was littered with fae bodies. Some were groaning, others were still as if they were knocked out.\n\nThey were helpless, like a field of wheat ready to harvest. A few moved forward to finish them off when what I was seeing finally registered.\n\nI yelled, \"Hold!\"\n\nThis wasn't an invasion force. There were thousands of fae here, but many were young, I even saw a few children being protected by the adults as they laid over them. The fae had tried to destroy us, had targeted me for assassination, and had manipulated my entire life and my family. But none of that mattered now, they were beaten, their world destroyed.\n\nI couldn't imagine another reason the gate would have exploded so violently. We didn't do it. \n\nThese were... refugees. I wasn't sure, but we had the time to sort it out. They were the last of their kind. That said, I was wary when some of them started to stand up.\n\nI called out, \"Surrender now, and we can talk.\"\n\nThey surrendered.\n\nI wasn't sure where this would lead, but it would be up to the world leaders to sort out, not me or my family. A number of helicopters showed up after a while and the military took over the quarantine. The fae had been instructed to stay in the area until things were sorted out.\n\nMy family and I left at that point, went home. It was hard to believe I was free of it all now, but it certainly looked that way. I was looking forward to the party...\n\n\u2003\n\nEpilogue \u2013 Hope, Vinnie, and Anise\n\n-Hope ten years later-\n\nI cringed as sand was thrown up in the air next to me and fell onto my back. I looked up at Rafael, my grinning seven year old son. My five year old, Anise, who also gotten bombarded with sand was scowling up at him. She looked adorable, but I knew laughing would be a mistake. She was as stubborn as her mother.\n\nI said with exasperation, \"How many times have I told you not to fly at the beach, and to not land next to mommy and kick the sand.\"\n\nHe tried a pout but I wasn't going for it. It was also a miscarriage of justice. My parents had wings, my Rafe had wings, and so did my children... Where were mine at?\n\nI was enjoying a day at the beach after enchanting my last healing ward. I had learned those seven glyphs, and used them to power a healing ward for the first time a little over five years ago. I'd spent the last few years setting them up in different cities around the world in my spare time. Now if someone was sick all they needed to do was get within the area of effect and the glyph would heal them.\n\nThere was some outcry from the pharmaceutical companies about overpopulation, but they are full of crap. The highest percentage of deaths is from old age, accidents, and violence. Not a child with cancer, or even a forty year old from a heart attack. The highest cause of overpopulation was the birth rate in any case. Regardless, it was a heartless argument for such a small contributor to the population question.\n\nThey just didn't want to lose money. Luckily they were mostly ignored, if only because my brother's inventions had been putting many other larger industries through troubled times, and those current and hot issues seemed to dominate the news in comparison to an issue that wouldn't blow up for a few generations. The oil based economy was going away, like it or not.\n\nThere were some overpopulation concerns, but not because I refused to let people waste away and die in pain when I could make a difference. Some medical scientists had determined that humanity's new life span was six hundred years or so. So instead of living three to five generations, a human could look forward to living close to thirty and contributing children for five or so.\n\nMy brother though, assured me he has plans to alleviate that problem.\n\nAs for my regular job? I work for the president, through Johnson mostly, on trying to integrate the communities into the general population. Society is changing, but slower than I had expected, probably because of simple human habit. There had been some major changes though.\n\nThe calls to nine one one have slowly been declining every year, as people realize they can just protect themselves and their neighbors. The courts have been thrown on their ears, and the lawyers who had lied for years to get their defendants off now find they have a jury that can't be tricked or manipulated.\n\nJustice is a lot faster and surer as a result.\n\nLife on Earth will adjust, in the meantime, I needed to get some revenge and get this sand off me.\n\nI grabbed my son and ran toward the water with an evil laugh as he screamed in delight.\n\n-Vinnie forty years later-\n\nKristi straddled my lap and rubbed her core lightly against me while she kissed me teasingly. It had been over forty years since I met her, and she still looked like a woman around thirty. She was incredible and more beautiful and sexier than ever. When I first heard the news that humans were not immortal through their magic, I'd been upset, but I came to the conclusion I needed to live my life with her in joy while she was here.\n\nWe still had a long time to spend together; there was no sense borrowing grief from the future.\n\nMy communicator went off and I ignored it as I grew hard from her touch. She knew it was time to go and was driving me crazy on purpose. That was Kristi, anything to earn a spanking later.\n\nStill, it wasn't like they could leave without me... Fuck it...\n\nAn hour later we moved out into the corridors and slowly made our way to the bridge. There were a few smirks and shaking of heads as we walked past people, but it was a good natured thing. It made me wonder how many of them had looked to figure out what was holding up their captain and got an eyeful for their efforts.\n\nWe reached the bridge and I took in the view of outer space around us in the view screen that wrapped around the bridge. It was the first ship of its kind, able to carry over a quarter million people for short trips.\n\nThe real advancements came from mixing our magic with technology. We had the knowledge to create an FTL drive, but why bother when we could build technological controls around a gate enchantment, and cross light years in the blink of an eye. Our power systems used a shielded chamber that had a similar enchantment as a gate to connect directly to the power of the sun itself to power the ship.\n\nI was the captain of the ship, and it was built with one purpose in mind when Toni, Abby, and I designed it in its first rough form thirty five years ago. To spread humanity out among the stars before life got too crowded on Earth in just a few more generations. \n\nThe grays had given us a database of all the worlds fit for settlement or that were in a good place for terra-forming in their universe. Since our universes were all similar, we had a good chance of most of those lining up with what we would find in ours. Even if only a half were accurate, it would lead us to thousands of habitable worlds and ten times that many worlds where we could make them habitable. And that was just in our galaxy alone.\n\nToni and Alicia were also with us, along with half our children, although we wouldn't be leaving Earth and the rest of our extended family. I liked to joke we were just the first inter-world taxi service, that would be taking settlers to new worlds.\n\nAs for the first born, my mother still refused to tell. The warning had been clear, tell no one ever. It seemed a moot point now to continue to hide it, but I suppose in the end it didn't matter. I don't think the fae would have lost if either my sister or I had died. We had both been necessary to correct things. Things had turned out, on balance, very well.\n\nI gave the order to jump to the closest star that we suspected had a life bearing planet. Despite the database, our universe was truly unknown, and I wondered at what we might find out there in it...\n\nAnise sixty six years ago...\n\nAs things went, the births were easy ones as my body had gone through it so many times before. I had cradled them in my magic as they were born, and used it to cut and tie off the umbilical cords. If I hadn't been able to suppress the pain and most of my emotions, it would have been much harder.\n\nI cleaned them up and they were both beautiful to me, we had decided on names a while back, Hope and Vincent. I was concerned though, about the message I was sent in the augury. Everyone believed I would just keep it to myself and hold it in my heart. But I was worried about mind reading and things of that nature. In an unguarded moment, my granddaughter Amy could pick it right out of my head, or even worse, an enemy could.\n\nSo I kissed both my children and put them in the bassinet and walked over to the wall covered in runes. I looked back with a sad smile, I didn't want to do this, the memories of their birth were precious to me. But I would die to keep them safe, this seemed a small sacrifice.\n\nI looked at Hope one last time, my new and already beloved daughter and wondered what life would bring her as my firstborn. I turned back toward the wall, tears in my eyes as I touched and activated the glyph that would steal the memories of the birth of my children. Now no one knew at all, and no one ever would.\n\nI wouldn't tell anyone what I'd done or sacrificed to ensure the information stayed a secret. I turned back to my children and wondered which one of them was firstborn as I gathered them up in my arms and took down the ward shields.\n\nMy eyes were still filled with tears when my family came in to welcome the new additions to the family, but these newest were tears of joy..."
    ],
    "authorname": "Magicwrtr",
    "tags": [
        "necromancer",
        "witch",
        "sorcerer",
        "sorceress",
        "angel",
        "demon",
        "fae",
        "warlock",
        "werewolf",
        "vampire"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/necromancer-chronicles-pt-10"
}