{
    "title": "The Morrisons Ch. 26",
    "pages": [
        "As always, I want to thank Fat_Dad for his help, patience and most of all editing. He has been in contact with me over the past 11 months during the good and tough times. He had most of his chapter 8 finished and he waited until I had my chapter finished so we could send them in together. I sure am glad to call Fat_Dad a friend.\n\nTo all the readers of The Morrisons I want to thank you for taking time out of your busy schedules to read my story. I also want to thank all those who sent me messages or emailed me asking about my health or when I was going to publish another chapter. Well, here it is....\n\nWith express permission and assistance from Fat_Dad, we have incorporated some of the story characters from \"A New Life for Dr. Mitchel\" into \"The Morrisons.\" and vice versa. I have a complete character list on the last page of this chapter.\n\nWe've had unbelievable positive response to the integration of story characters and aligning our story lines, although each story remains a separate entity. We've interlinked some situations since we found out Marsh and Dan are neighbors.\n\nAgain, a profound thank you goes out to Fat_Dad for all the hard work he's invested in editing and assisting me. I know Fat_Dad is only a phone call away.\n\n~ ~ ~ ~ ~ ~ ~ ~\n\n**Author's Note: The Morrisons is a continuing story where each chapter builds on previous chapters. If this is your first encounter with The Morrisons, I'd like to suggest you read the previous chapters prior to reading this one. Please enjoy!\n\n~ ~ ~ ~ ~ ~ ~ ~\n\n**PLEASE NOTE:\n\n**Before you read this chapter, be advised that it contains very graphic depictions of raw sex and/or love-making between two or more consenting people. IF such depictions upset you or make you lose sleep, PLEASE don't read any further. You may not enjoy reading a particular portion of the story; that doesn't mean other readers will dislike that same portion. It's a different-strokes-for-different-folks kind of story.\n\nFor the sophisticated intellectuals who read incest/taboo stories on Literotica expecting to find professional authors, including perfect punctuation, spelling, dialog, characters with only sophisticated actions, etc., please pass this chapter by, you won't find that here! We do our best to correct all typos and spelling errors but some may still slip past us.\n\nI appreciate hearing from readers, and I want to thank all those who took time to send me a public or private message. However, please don't leave a derogatory comment, if you willingly overlook THIS WARNING.\n\n~ ~ ~ ~ ~ ~ ~ ~\n\nFor the record: All characters engaging in sexual activities are of legal age!\n\n~ ~ ~ ~ ~ ~ ~ ~\n\n****************************\n\nChapter 26\n\nTaffy Davis woke up early and called her friend Connie Swensen. On the third ring Connie saw the caller ID and giggled as she picked up the phone, she asked, \"Are you calling me to tell me you changed your mind?\"\n\n\"Oh no, quite the contrary,\" Taffy replied, \"I'm only calling you so we can coordinate our plans.\"\n\nThe previous evening Taffy and Connie talked on the phone as they usually did but this time their conversation was a little bit different. As they talked, they fed or fueled each other's imagination of what it would be like to go on trips with Dan and Beth, meeting important clients. They verbally dreamed what it would be like to dress up in fancy dresses, riding in a chauffeur driven limo, and sitting down to dinner at an up-scale restaurant.\n\nAs ideas continued to flow between the two of them, Taffy said, \"Imagine what it'd be like if you had on a strapless gown and leaned over, your breasts would show. I bet everyone would drool over your little puffy nipples, if they saw them.\"\n\nConnie countered with, \"I'm pretty sure Dan loves my puffy nipples, I caught him staring at them several time when we were naked in his office. But you have beautiful round titties and I'm positive if you were to bend over in a strapless gown and show your titties, it would make any guy hard as a rock, even your brothers.\"\n\n\"But my brothers aren't going to see me in a strapless gown, so there are no worries there.\" Taffy replied.\n\n\"Maybe not,\" Connie continued, \"But they could catch you naked at home and I'm positive that would give them a woody.\"\n\n\"Are you saying I should let my brothers see me naked?\" Taffy questioned.\n\n\"Think about it Taffy,\" Connie said, \"What better way to practice showing off that beautiful body of yours? You could leave your bedroom door open enough so one of them can look into your room while you're naked.\n\n\"I'm only wearing my panties right now.\" Taffy replied.\n\n\"Ok then,\" Connie challenged, \"If you were naked right now, I could dare you to go open your bedroom door all the way, while we talk. I know the bottom of your bed is towards your door so if you lie on your bed and spread your legs a little bit, anyone passing your open door will see your naked body.\"\n\n\"OH MY FREAKIN' GOD, CONNIE!\" Taffy exclaimed in a hushed hoarse voice, \"DO YOU REALIZE WHAT YOU'RE SAYING? If I did that, anyone in my family could walk down the hall and look into my bedroom and see me. As far as I know, everyone is still home, even mom and dad.\"\n\n\"Please Connie, withdraw that dare and let me take a shower and put on a tee shirt, like we originally planned. I'll even wear a shorter tee shirt, if you let me off the hook while mom and dad are home. A friend of theirs is coming soon to pick them up and take them grocery shopping. Then it will just be me, my brothers and sisters at home.\" Taffy pleaded.\n\n\"Ok, I'll let you off the hook and withdraw part of my dare,\" Connie said in a sweat innocent voice. \"But instead of a tee shirt, I dare you to wear only a regular towel, no bath towel, around your body when you finish your shower. I want you to tuck in the towel so the opening is on your right side. Remember I know how your house is set up. That way, when you lean forward even a little the towel will open and anyone at your kitchen table will be able to see inside your towel. Oh, and I am daring you to lean forward many times while you're in the kitchen.\"\n\n\"Since you asked me to amend my dare, you know the rules, I can make my dare more difficult to accomplish. After your parents are gone, I dare you to go back to your room, leave your door wide open, discard the towel, lay on your bed completely naked, bend your knees and put your feet flat on the bed and spread your legs. And to complete the instructions of my dare, I dare you not to close your legs or cover yourself in any way, even if one of your brothers sees you. Oh and I want you to call me once you are in position.\"\n\n\"Oh my God, Connie\" Taffy excitedly rattled off, \"Why don't you just dare me to go downstairs completely naked? With what you've described, my parents are going to see me anyway and if I have to lay on my bed completely naked with my door open, you know Tommy will come in and look at me. He's been perving on me for a long time.\"\n\n\"Hummmmm, that's a nice idea,\" Connie sounded off into the phone, \"I can easily accommodate your wishes if you'd rather go downstairs completely naked.\"\n\n\"NO! OH GOD NO!\" Taffy exclaimed, \"My parents would have a heart attack. Showing my body to a stranger who I most likely won't meet again is one thing, but please, I don't want to shock my parents. We talked about this. I'll let my brothers and sisters see me if that's what you want, but please not my parents until we've had a chance to break them in, like we agreed.\"\n\n\"I also know our rules,\" Taffy said as calmly as possible, to eliminate any chance of being heard by anyone out in the hallway.\n\nShe continued with, \"I have to complete my dare before I can give you a dare, but DO YOU REALIZE I'M GOING TO MAKE YOU PAY! .... BIG TIME!\n\n\"OK, I'm going to go take my shower and follow your dare to the letter.\" Taffy said, \"I'll call you back when I get back to my room and lying on my bed completely naked with my door open all the way. Do you want me to give my brothers a hint I'm going to be naked?\"\n\n\"You can give them a hint if you want to.\" Connie said with a smile on her face that Taffy could hear in her voice.\n\n\"Ok, Goodbye, I'll talk to you in a little while.\" Taffy said in a good natured tone of voice. \"Don't forget, while I'm doing your dare, I will be thinking of a dare for you. Your body will be mine by the time I get done with my dare.\"\n\nConnie gave a nervous giggle and said, \"If you want, we can always fall back on our original plan.\"\n\n\"OH NO YOU DON'T,\" Taffy sternly warned, \"I've never welched on any dare you've ever given me and I'm not going to start now. Any misgivings I may have had a few moments ago have now turned into determination. I'm going to do exactly as you've dared me, no matter what happens.\"\n\n\"YOU on the other hand,\" Taffy giggled, \"You should be very worried about what might pop into my twisted mind, for your dare. Talk to you soon. Bye.\" Taffy hung up her phone.\n\nTaffy stood in front of the full length wall mirror and looked at her almost nude body. She playfully hooked her thumbs into her white satin bikini panties and pulled the waistband away from her body and then let it go so it snapped back against her skin.\n\nShe cupped her titties and moved her hands so she could pinch her small nipples. She thought to herself, I hope my titties stay like this; they're perfect for my body. Taffy allowed her hands to glide down her smooth flawless upper body until her right hand touched the scar where the doctor had cut her open to take out her appendix.\n\nTaffy remembered the awful pain she experienced when the attack of appendicitis hit her a few years ago. Taffy turned her right side towards the mirror, as her finger moved back and forth along the scar. She remembered how her brothers and sisters wanted to go with her to the emergency room as the EMTs strapped her to the ambulance cot. Her father told her siblings, Jerry, Julie, Tommy and Renee they needed to stay home and he would call them with updates.\n\nThe ride in the ambulance was scary but the EMT had allowed her mom Joy, to ride in the back with her but she had to sit on the bench seat. She held Taffy's hand during the whole trip to the hospital. Dana, Taffy's father followed the ambulance in the family car.\n\nIn the emergency room a nurse came in and checked all of Taffy's vital signs and then with Joy's help, the two of them were able to take off Taffy's blouse and bra before the nurse helped Taffy into the hospital gown. The nurse moved further down the side of the gurney and unbuttoned and unzipped Taffy's pants. She pulled the gown down over the top of her pants and then removed Taffy's pants leaving her in her yellow bikini panties with the saying, \"\"U GOT 2 LICK IT- B4 U STICK IT!\" on the front of them. The nurse read the saying and smiled broadly without saying a word as she pulled the sheet up over Taffy's legs.\n\nJoy was standing near Taffy's shoulder on the opposite side of the bed, holding Taffy's hand, so she didn't get to see the saying on her daughter's panties.\n\nAbout five minutes passed, which seems like hours to Taffy, before a young looking doctor walked into the room and introduced himself. He watched Taffy squirm in pain for a few seconds before he asked her about her pain and where it was. Taffy indicated her lower abdomen by moving her free hand down to rub the area. The doctor asked a few more questions and then told Taffy he was going to check her abdomen.\n\nHe pulled the sheet down and her gown up baring Taffy from mid-thigh to the bottom of her rib cage. He paused a few seconds and watched Taffy before he touched her. He proceeded to palpate both of her lower quadrants. Taffy screamed loudly when he put pressure on her lower right quadrant. When he did that, not only did Taffy scream, she lifted her butt cheeks off the gurney and spread her legs wide enough to afford the emergency room doctor an unimpeded view of her panty covered pussy.\n\nJoy suddenly gasped and blushed profusely when she read the words on her daughter's panties. The doctor looked at Joy, and smiled broadly before he quickly changed back into his professional mode. He told Joy he thought it might be appendicitis however he was going to order some blood samples and an x-ray to be taken, and he was going to have an IV started just in case they had to move Taffy into surgery immediately. He told them he would be back after the tests results came back.\n\nJoy thanked the doctor and on the way out of the room he mumbled, \"That's the right way to do it.\"\n\nThe nurse came back in with all the supplies she needed to take the blood samples and start the IV. When the IV was in place she told Taffy she was going to give her something to relax and proceeded to inject a drug into the IV line. When she finished, the nurse told them the doctor would be back to talk to them later.\n\nWhen the doctor returned, even though Taffy was in severe pain, she tried to listen to the doctor. The only things she really understood him to say was appendicitis and surgery. Joy had tears in her eyes as she continued to hold Taffy's hand while the doctor explained Taffy's appendix was so enlarged it could burst at any time.\n\nThe doctor told Joy he had already made arrangements for emergency surgery and someone would be taking Taffy to the OR (operating room) in a few minutes. He asked if there were any questions but Joy didn't have any and Taffy was in too much pain to ask anything. When the doctor left the room, Joy hugged and kissed her daughter and tried to keep her calm.\n\nThe nurse came back into the room and injected another drug directly into the IV line. She told Joy that Taffy would get groggy in a few minutes. They didn't want her all worked up about going into the OR.\n\nIt wasn't long before a guy dressed in green scrubs came into her room and said he was going to take her to the OR and her parents could follow them until they reached the waiting room. At the doors leading into the OR, the guy in green scrubs paused and waited for Dana and Joy to kiss their daughter and tell her, \"I love you baby girl. I'll be here waiting for you when they're finished ..... I love you.\"\n\nAs Taffy was pushed through the doors, Joy turned in her husband's arms and cried hard. He comforted her but Joy was distraught at the thought of her daughter going into surgery.\n\nThe next thing Taffy knew, she was in a different room with both her parents sitting by her bed, waiting for her to wake up. Once they realized she was waking up, they showered her with gentle hugs and kisses.\n\nTaffy remembered, she had to stay in the hospital for three days, and during that time she had plenty of visitors. Her siblings and Connie came to visit her the most and stayed the longest.\n\nTaffy was brought back to the present when her sister knocked on her door and said, \"Wake up sleepy head, breakfast will be ready soon.\"\n\nTaffy replied, \"Thanks, I'm awake, I have to take a shower first and I'll be right down.\"\n\nTaffy hooked her thumbs back in the waist band of her panties and pushed them down her legs. She noticed that she had to take time to shave because her pubic area had a five o'clock shadow, which was the curse of having black hair on the top and bottom. She wasn't really disappointed about the black hair on her head because it made her bright blue eyes stand out.\n\nTaffy picked up her robe and started to put it on, but stopped. It suddenly occurred to her after her shower; she had to wrap a towel around her body, it wouldn't look right if her robe was left in the bathroom.\n\nSuddenly, butterflies invaded her stomach at the reality of what she was about to do. Could she really go downstairs with only a small towel wrapped around her body? Could she really lean forward and allow her family members to see her naked body when the towel opened?\n\n\"OH MY GOD\" Taffy softly exclaimed. \"I'm nuts to think I could pull this off with my family looking at me.\"\n\nShe slipped the robe off her arm and laid it on her bed. She walked slowly to her door and paused. Her hand was shaking, her nerves were on edge, her brain was almost on overload and that's when she turned and walked back to her stand in front of her mirror. She stared at the naked girl, the bare naked girl with no pubic hair to even hide her most secret place between her legs. Taffy spoke softly to her reflection, \"I have to do this dare and my family is going to see my naked body. I really have to do this. I really have to do this. I can do this. Wait right here for me, I'll be back!\"\n\nTaffy turned and walked the few steps back to her door. She opened it a little way so she could listen for any movement. When she didn't hear anything she opened it a little more and poked her head out and looked up and down the hall. Her bedroom was not quite half way down the hall so the bathroom wasn't far from her room. However, for her to get to the bathroom, she had to walk towards the stairs which was risky because someone could come up the stairs and catch her naked in the hall.\n\nAfter a few more moments of hesitation, Taffy opened her door all the way and stepped forward until she was half in and half out of her room. Once again she listened and looked and there was not one iota of anyone being present on the second floor. She thought everyone must be in the kitchen eating.\n\nThe butterflies returned as she stepped out into the hallway completely naked for the first time since she was a little girl and walked nervously towards the bathroom. Just as she reached the bathroom door she heard water running in the sink and she stopped dead in her tracks. She was almost ready to turn around and run when her sister Julie came out of the bathroom in a tee shirt. Julie stopped and looked at her little sister's naked body for a few seconds before she said, \"Umm, did you forget something?\"\n\nTaffy blushed a little as she said, \"I was in a hurry because you knocked on my door and said breakfast was almost ready.\"\n\n\"Ok, well hurry up, get your shower.\" Julie said, \"I'll let everyone know you'll be down in a few minutes.\"\n\nTaffy scurried into the bathroom and hurriedly adjusted the water in the shower before she sat down on the toilet to pee. Before getting in the shower she reached into the towel cabinet and pulled out the towels she'd use, when she was finished. Taffy stepped into the shower and moved under the shower head. Without thinking, she put shampoo in her hair even though she hadn't intended to wash it. Of course after shampooing, she had to use conditioner so her hair wouldn't tangle and snarl. Washing her hair took more time than she wanted to spend in the shower so she hurried and washed the rest of her body and paid particular attention to her pussy and made sure that was washed thoroughly. Then she had to take time to shave her pussy and she did that slowly and carefully so she didn't cut anything.\n\nWhen she finished, she shut off the water, opened the curtain and picked up the towel for her hair. Taffy dried it some, before she wrapped the towel around her head and tucked in the edge so it would stay in place. She dried her body with the other towel and then laid it on the side of the sink while she brushed her teeth. Just as she was finishing, her sister Julie knocked on the bathroom door and said, \"Hurry up in there; mom has your breakfast on the table already.\"\n\nTaffy finished quickly and reached for her towel and wrapped it around her body and started to tuck it in between her breasts but then she remembered Connie dared her to tuck the end of the towel in on her right side. Taffy quickly adjusted the towel and when she started to move she felt the towel loosen up. She re-tucked the end and opened the bathroom door and saw Tommy just outside ready to knock on the door. He smiled when he saw her before saying, \"Wow, sis you look great this morning.\"",
        "Taffy smiled and said, \"I'm sure you're wishing I didn't have this towel around me when you said that, you perv.\"\n\n\"You know I love you and I'd protect you to the ends of the earth,\" Tommy said, \"But seeing you like this, hey I'm only a guy and you're looking mighty good.\"\n\n\"Come on Tommy, I'm your sister.\" Taffy whined, \"Don't you have any moral sense than to perv at your sister?\"\n\nTommy lowered his voice to just a whisper and said, \"Oh, and just between you and me, if that towel slid off that great looking body of yours this second, I'd be one happy brother.\"\n\n\"You are incorrigible TOMMY!\" Taffy exclaimed without alerting anyone else in the house.\n\n\"You keep wishin' perv; maybe sometime soon you'll get to see the goods. I've got to go, mom has my breakfast ready.\" Taffy said with a giggle as she turned and headed for the stairs.\n\nAs she entered the kitchen everyone else was just finishing their breakfast and Taffy's mom said, \"You might want to warm your breakfast up in the microwave, it's been on the table for a while. Why didn't you get dressed?\"\n\n\"Mom, Julie didn't tell me you had my breakfast cooked until she just knocked on the bathroom door. So I hurried right down to eat before it got too cold,\" she reasoned.\n\nTaffy went to the refrigerator and took out the orange juice; when she stood up she saw her dad quickly look back down at his paper. Then she went to the cupboard and reached up for a glass. It wasn't until she had the glass orange juice pitcher in one hand and a glass in the other that her towel came loose and in less than a second it slid swiftly to the floor. What made matters worse or better, depending on how you want to look at it, Taffy screamed when it happened. Her scream only served to get her more attention than she wanted at that point.\n\nTaffy had been facing towards the kitchen table so no matter how fast she moved to set down the orange juice and her glass, everyone at the table had a few seconds to view Taffy's completely naked body. She quickly squatted and picked up her towel. When she stood up again she was still facing the table as she wrapped the towel around her naked body. This time when she looked at her father, he didn't look down at his paper. He was staring at her, right at her pussy! Taffy wrapped her towel around her body and tucked it in on her right side.\n\n\"Hey sis, when did you remove the carpet down there?\" Renee asked with a giggle.\n\n\"Girls, I don't need to hear that kind of talk.\" Taffy's father said.\n\n\"But daddy, you were looking at Taffy's pussy just like the rest of us.\" Renee countered.\n\n\"That's enough Renee,\" Taffy's mother injected, \"Taffy, sit down before your towel falls off again.\"\n\n\"When did Taffy's towel fall off?\" Tommy asked as he walked into the room.\n\n\"Just a few seconds ago, dad got an eyeful of Taffy's juicy body.\" Renee said while giggling.\n\n\"That's enough young lady; accidents happen. That was perfectly innocent. There wasn't any way for Taffy to stop her towel from falling off, her hands were full.\" Taffy's father said in her defense.\n\n\"So you were looking.\" Renee criticized in a good natured sing song voice.\n\n\"Yes, of course I looked when Taffy screamed. Yes, I saw what happened but let's drop it, don't embarrass your sister.\" Dana said.\n\n\"So Taffy, like when did you shave the carpet or did you have it waxed off?\" Renee questioned.\n\n\"I shaved it ok? When I shaved my legs, I just kept going and shaved off everything.\" Taffy retorted.\n\n\"Ummmm .... girls .... I don't need to know that part about your personal lives.\" Dana interrupted.\n\n\"Mom shaves her carpet completely, because she said you like it that way, and I only asked Taffy when she started shaving the carpet. I know I've been shaving mine bald for a couple of years now.\" Renee countered.\n\n\"Wow, keep going,\" Tommy said, \"This conversation is getting good.\"\n\n\"Mind your manners Tommy,\" his mother countered.\n\n\"Come on mom, lighten up, it's not like we're seven years old anymore. All of us know what you and dad did to make us, and both of you have done a great job raising us. We are family and we pull together. A few individual secrets between us won't tear our bond apart. I know other kids who wish they could have a strong family bond like we have.\" Renee said authoritatively.\n\nJulie and Jerry came downstairs fully dressed and ready to leave for work but they walked into the kitchen just as their father put his paper down and said, \"You're right Renee. Your mom and I are blessed to have kids who value our family bond. Please remember, your mother and I only instilled those values in you when you were growing up. However, now that you've grown up, it's up to each of you to carry on and live with those values.\"\n\n\"Thinking about what you said Renee, I guess a few family secrets between us serves to strengthen our relationship, as a family. I remember when all of you kids used to run around the house in just your underwear and sometimes nothing at all. Actually, all of us still run around here in almost nothing. It's not uncommon for the guys in this family to be down here in just our boxers and no one has ever said anything. Just like no one has said anything to any of you girls for being down here in your tee shirt and panties. So I guess none of us should be shocked seeing each other .....\"\n\n\"Besides, I remember helping your mother bathe each one of you when you were growing up so I guess I shouldn't be shocked to hear you talk about shaving yourself bald. Yes, I did ask your mother to keep herself shaved bald and I won't hold that against her for telling you. We are fortunate that all of you are responsible young adults. As a family, we have been through some really hard times and I want to thank each and every one of you for contributing some of your hard earned money to keep this family going.\"\n\n\"We have survived and things are going to get better soon. I'm back to work thanks to Taffy's boss, Dan Morrison. I've never met any executive of any company I've worked for who took an interest in an employee's family as Dan has done. We are still limited for cash right now, until I get my first check and it will be a little while until we get back on our feet.\" Dana finished saying.\n\n\"I don't know what was said to start that speech dad,\" Julie stated, \"But as the fourth oldest person in this family, counting you and mom, I cherish this family and the way we've all pulled together during the rough times. What we've been through just served to strengthened our family bond. As far as running around the house in just a tee shirt and panties, dad, I have to tell you, I don't always wear panties under my tee shirt.\"\n\nAll the girls giggled including their mother who composed herself before saying, \"Julie, I don't always wear panties under my tee shirt either. Now that our secret is out, the guys will always be guessing if we are or aren't wearing panties.\"\n\n\"I want to tell you girls, your secret is not a secret, at all. When you bend over wearing only a tee shirt it's easy to see which one of you, aren't wearing panties, just so you know. I don't really mind nor do I care what anyone wears or doesn't wear. Being the close family that we are is the most important thing for me.\" Dana said with a big smile on his face.\n\n\"One thing we know for sure, right now,\" Renee said, \"We know Taffy is completely naked under that towel and her pussy is completely bald.\"\n\n\"We know that how?\" Jerry asked.\n\n\"Oh you weren't here a little while ago when your baby sister turned exhibitionist and showed all of us what she wasn't wearing under her towel. Even dad got an eye full of her delicious looking body.\" Renee responded.\n\n\"Renee Jean Davis!\" Her mother exclaimed, \"Your sister isn't an exhibitionist, she experienced an accident when her towel fell off.\"\n\n\"I wish I'd been down here to see that.\" Tommy said.\n\nTheir father spoke up saying, \"You know son, you shouldn't wish any bad luck on anyone because it might come back and bite you some day. Maybe sometime your towel will fall off Tommy, and you can be the brunt of the conversation. Your sister had her hands full and there was no way for her to catch her towel without breaking the glass she had in both hands. I think she did the right thing and put the pitcher of orange juice and the glass down instead of dropping them. It was just an unfortunate accident.\"\n\n\"Yeah perv!\" Taffy said, \"It's no secret that you've been trying to catch us girls in some state of undress or naked. Just last week when I was in the bathroom you just walked in without knocking. I had my bra and panties on so you didn't get to see anything.\"\n\n\"Tommy, it's not right to do that,\" his mother said, \"If you see them by accident that's one thing but they are your sisters for God sakes.\"\n\n\"I know mom,\" Tommy said, \"And I would defend my sisters from any and all danger but do you know how tough it is living with sisters so beautiful they could be models on the cover of any magazine? Look at them, they're all very beautiful. Oh, and you're just as beautiful as they are, mom.\"\n\n\"Don't worry perv,\" Taffy said, \"Someday you'll get a chance to see a girl naked. When you do, I hope you'll take your time to make her happy before you blow your load and go to sleep.\"\n\nAll three girls and their mother burst out laughing as Tommy said \"Don't worry about that, I know what to do.\"\n\nJerry said, \"Don't let them get you lil brother, girls will be girls. I've got to get going or I'll be late for work.\"\n\n\"Ain't you the voice of experience,\" Joy said, \"Where did you learn all about girls? I hope you're not giving us some quote from those Playboy magazines you have hidden under your mattress.\"\n\n\"MOM!\" Jerry said, \"You aren't supposed to be snooping around in my room.\"\n\n\"Did you notice your room was cleaner than you left it most days? I wasn't snooping when I clean up after you and while making your bed I find your Playboy magazine under your pillow and your mattress, open to one of them naked girls. If you cleaned your room and made your bed every day, I won't have to go in there.\" His mother countered.\n\nSuddenly the doorbell sounded and Joy interrupted the conversation and went to answer the door. She came back into the kitchen and said, \"Come on Dana, time to go shopping. Renee, Tommy, Taffy do any of you want to go?\"\n\nAll three declined and Taffy added, \"Nope, since I've been the topic of discussion this morning I think I'll go up to my room and pout. Besides, I want to call Connie this morning and find out what she's doing.\"\n\nWhen all the older family members were gone, Renee said, \"I'm going to go take a shower, and shave my legs. Come to think of it, I'm going to shave my pussy too, see you guys in a little while.\"\n\nTaffy put her dish in the sink and took time to wash the few breakfast dishes while Tommy dried them and put them back in the cupboard. When they were finished, Tommy asked, \"Are you really going to lie on your bed?\"\n\n\"Why do you want to know?\" Taffy asked, \"Are you planning on coming into my room and perving me?\"\n\n\"It's not like that Taffy, really,\" Tommy said, \"You are a very beautiful girl and you're standing here with just a towel wrapped around you and ....\"\n\n\"I know, you wish my towel would slip again and fall on the floor so you could see how beautiful I am, right?\" Taffy said in a sweet innocent voice.\n\n\"I just want to look.\" Tommy said with a sad eyed puppy dog look on his face.\n\n\"I don't know Tommy.\" Taffy said quietly so no one else would hear her. \"I know it's probably impossible to change your mind about seeing me or your other sisters naked.\"\n\n\"Please Taf, just show me what everyone else got to see.\" Tommy pleaded. \"PLEASE?\"\n\n\"Oh God Tommy, go lock the doors; I'm going up to my room and I don't want to be disturbed.\" Taffy said while her heart fluttered in her chest.\n\n\"But .... But ....\" Tommy stuttered as he watched his sister turn and walk out of the kitchen.\n\nTaffy walked on shaky legs over to the stairs. About half way up the stairs she allowed the towel to slide off her body and fall on the stairs. The towel on her head quickly followed the first so that both towels were left lying on the stairs in plain sight.\n\nTommy's eyes bugged out of his head as he watched the first towel fall. He gasped when he realized his sister was naked and he could see her beautiful ass. Suddenly his body told him it needed oxygen and he inhaled a huge breath.\n\nNervously, Taffy walked up the last few stairs and disappeared from Tommy's sight down the hallway. As she walked past the bathroom, she heard Renee humming the current number one hit. She also noticed the bathroom door was open about two inches.\n\nOnce Taffy was out of his sight Tommy rushed to the front door and locked it. Then he hurried to the back door and locked that also. He took a few more deep breaths while he looked at his shaking hands. His mind kicked in a little bit and he determined he didn't want to rush up the stairs like a fool, he was going to act a little sophisticated and go upstairs slowly.\n\nTaffy walked the last few steps to her room, she left the door open and then she walked straight to her bed. Without one instant of hesitation she laid down as Connie had dared her to do. She bent her knees and then allowed them to flop off to either side. She felt the cool air on her open pussy as she picked up her phone and pushed Connie's number. The phone only rang twice when she heard Connie's voice say, \"Are you in position? Is your door open?\"\n\nTaffy just had time to say \"YES! and YES!\" before she saw Tommy standing in her doorway, with both her towels in his hand. His eyes proverbially bugged out of his head as he stared at his naked sister with her legs spread so wide open.\n\nConnie asked, \"Did you give your brother a hint that you were going to be naked?\"\n\nInstead of answering the question Taffy said, \"Hi Tommy,\"\n\nTaffy heard Connie scream into the phone, \"OH MY FUCKING GOD, TOMMY'S IN YOUR ROOM AND YOU'RE LAYING LIKE I DARED YOU?\"\n\nOnce again Taffy ignored Connie and said, \"Come on over here and have a seat right here next to me, I'm talking to Connie.\"\n\n\"YOU'RE FULL OF SHIT; TOMMY AIN'T IN YOUR ROOM!\" Connie screamed.\n\nTommy's eyes were glued to Taffy spread open pussy and when he walked into her room he moved very slowly, as if he was a wild animal stalking prey. When he reached his sister's bed his eyes roamed over her naked body but returned frequently to her bald pussy. Taffy patted the mattress and motioned for Tommy to sit down and when he finally got the unspoken message he chose the spot next to her bent knee. That way, he had a close up view of her beautiful pussy, which looked like a delicate flower with its pedals folded open.\n\nTaffy's hands were shaking as she held her phone out to her brother and said, \"Say hi to Connie. She likes you, you know.\"\n\nTommy took the phone and put it up to his ear and said, \"Hi Connie.\"\n\nTaffy could only hear Tommy's side of the conversation as he said, \"Yes, Taffy is naked and lying on the bed with her legs spread wide.\"\n\n\"Yes, I'm looking at her pussy right now.\"\n\n\"No, she didn't say you dared her to do that, did you?\"\n\n\"No, she isn't covering anything with her hands; I can see her complete naked body.\"\n\n\"Ummm, yeah I do, but she's my sister.\"\n\n\"Yes, I've wanted to see her naked for a long time.\"\n\n\"Yes, she's very beautiful even more beautiful completely naked than when she has clothes on.\"\n\n\"Ok, here she is.\"\n\nTommy handed the phone back to Taffy and once again Taffy heard her scream, \"OH GOD, I CAN'T BELIEVE YOU ARE LAYING THERE COMPLETELY NAKED WITH TOMMY SITTING ON YOUR BED!\"\n\n\"As I told you, I've never welched on a dare so I'm doing what you dared me to do.\" Taffy replied with a nervous sounding voice.\n\nTaffy reached down and picked up Tommy's hand and placed it on her right breast. His hand felt so warm but he was stunned and she had to coax him to squeeze her breast by squeezing his hand.\n\nTaffy continued to talk to Connie as Tommy worked up enough courage to move his own hand over to her left breast and gently massage it in between tweaking her nipple. Connie asked Taffy all kinds of questions to keep track of what she was doing and what Tommy was doing to her.\n\nTaffy's nervousness diminished and she encouraged Tommy to take off his shirt, followed by his pants a few moments later. Sitting beside her in just his boxers Taffy saw he had a hard on so she reached down and slipped her small hand into the hole in the front. The second Taffy wrapped her hand around his manhood he moaned and Connie heard him. Immediately Connie asked what he was moaning about. Taffy told her he was enjoying the view of her body.\n\nTaffy said, \"Connie, I have to go, I'll call you back later.\" Without waiting for a response, she hung up her phone.\n\nTommy only lasted less than a minute and he blew his load in his boxers. He started apologizing for making a mess but Taffy assured him not to worry. Taffy quietly told Tommy to take off his boxers and use them to clean off her hand and his cock. As if in a trance, Tommy slipped off his boxers and Taffy was pleasantly surprised to see Tommy's cock was still hard.\n\nAfter he cleaned up her hand and his cock Taffy patted the left side of her bed and asked Tommy to lie down next to her. She put her legs out straight since she'd already completed Connie's dare but she opened them anyway to give Tommy's hand access to her pussy. At first Tommy only rested his hand on her belly so Taffy reached down and pushed it south until it was over her pussy. He looked at Taffy and in a whisper he said, \"But this is so wrong, I'm your brother, I'm supposed to protect you from guys who want to take advantage of you, not do it myself.\"\n\nWith a faint smile on her face Taffy said, \"You aren't taking advantage of me, I'm encouraging you to play with my pussy, I want you to play with my pussy and if you want to, you can fuck my pussy.\"\n\n\"TAFFY - WHAT DID YOU SAY?\" Tommy was shocked to hear his sister say fuck and she was talking about herself. After his shock settled down a little bit he responded with, \"Taffy, do you know what you said I could do to you, is incest? We just can't do that.\"\n\nIn a nervous, shaky voice Taffy said, \"Tommy, I want you to have sex with me. We don't have much time because Renee will be out of the bathroom soon. So make up your mind quickly, do you want to enjoy this body of mine or do you want to forever masturbate wondering what you missed out on.\"\n\n\"But Taffy, you're my sister, it's illegal. I don't want to go to jail.\" Tommy replied.\n\n\"It's only illegal if after we have sex, you run around and tell all your friends you fucked your sister. Then someone will investigate. However if you keep this just between you and me, I'm not going to tell anyone.\" Taffy challenged.\n\nShe reached down and wrapped her hand around Tommy's cock again and stroked him before she asked, \"Wouldn't this feel better inside me than in my hand?\"\n\nTaffy spread her legs wider and asked, \"Do you want to get between my legs or do you want me to be on top and ride this beautiful cock of yours?\"\n\n\"OH SHIT! Are you really serious about this? What about us after we do it, will we still be close, like we are now?\"\n\n\"Tommy, I'll always love you as my brother. No, nothing will change between us. Actually, we'll strengthen our bond and make our relationship more special.\"\n\n\"If there is absolutely no way to change your mind,\" Tommy mused, \"You get on top so you can control how much of my cock you want in you. That still doesn't make it right or legal, you know.\"\n\nTaffy pushed her brother flat on his back and then rose up and straddled his hips. He looked down and saw her beautiful bald slit and his hard cock. Taffy allowed herself to sit on Tommy's cock and press it flat against his body. She was so wet she was dripping so she used some of her fluids to lubricate her brother's cock.",
        "Taffy moved slowly and steadily back and forth along the length of Tommy's cock. Tommy moaned loud enough that Taffy had to shush him so Renee wouldn't hear him.\n\nTaffy acted like she knew what she was doing when in fact she was doing what came naturally, what the other girls talked about and the lessons she'd learned in sex education class. When Taffy was satisfied her brother's cock was well lubricated she lifted up and reached between her legs and aimed his cock at her pussy.\n\nTommy reached up and put a hand on each of his sister's hips and held her steady. \"You know, once you've lowered yourself on my cock, there's no turning back. This is something that can't be undone.\"\n\n\"I want to make love to you, more than ever. I love you and I know you would never hurt me or brag to your friends about what we are going to do, like some other guys I know. Please Tommy; never doubt my feelings for you, now or tomorrow.\"\n\n\"Oh God Taffy, here I am with a beautiful girl, a beautiful naked girl perched over my stiff cock and I'm questioning if we should do it or not. Most guys I know would have already rammed their cock into you by now.\"\n\n\"See ... see that's what I'm talking about. I know you love me and you want to give me plenty of time to back out. However, I don't want to and I do want to make love to you but only if you are with me on this. I don't want you to regret anything tomorrow either.\"\n\n\"If you are absolutely certain ...\" Tommy nervously said. \"I'm with you but I want you to be the one to decide how much you take inside you. You set the rules and I'll go along with them. Hell, I was only looking forward to seeing you naked ..... I never expected this.\"\n\nTaffy smiled as she started to settle down over the tip of Tommy's cock. She moved slowly and deliberately. Her eyes were locked on to Tommy's eyes as if they were both telepathic. One final down stroke and her pussy lips were resting on Tommy's pubic area. Taffy started to move both up and down and when she had all of his cock inside her, she sat up straight and wiggled her hips to make sure she had every iota of her brother's firm cock buried inside her.\n\nTommy was glad his sister went slowly because her love tunnel was so tight and super-heated. All he could utter was, \"Oh Taffy .... You feel so good. I've never felt like this before.\n\nAfter sitting still a few moments and feeling Tommy's hard cock fill her completely, Taffy started moving up and down his shaft, while he held her lovely titties, one in each hand. He pinched her nipples causing her to moan. They worked into a great rhythm and both of them began moaning loudly, not caring who heard them.\n\nSuddenly they heard a loud shriek followed by, \"WHAT THE FUCK ARE YOU TWO DOING?\"\n\nRenee ran into the room and said, \"You can't do that, that's incest.\"\n\nBoth Taffy and Tommy were beyond listening to their sister as their mutual orgasms reached fever pitch and both of them started to buck and quiver as each one enjoyed their mutual spasmodic orgasms together. Taffy moved faster and faster up and down her brother's pole until she was exhausted and collapsed on top of Tommy with his semi-hard cock still embedded in her.\n\nOnce more, Renee tried to get their attention but Taffy kissed Tommy on the lips and then when their lips met the second time Tommy was ready and he kissed her back very passionately. They engaged in a tongue duel and no matter what Renee said, they didn't stop kissing for at least the next three minutes.\n\nWhen the kiss ended Taffy looked towards Renee and noticed she was nude and sitting on her towel in Taffy's chair. Taffy giggled and said, \"Tommy, look at your sister.\"\n\nTommy looked and saw Renee's knees were spread and he could see her bald pussy and immediately Taffy felt his cock jerk and she asked, \"You like seeing her like that, don't you? I feel your cock growing bigger inside me.\"\n\nRenee said, \"You know what you guys did is illegal. It's called incest and it's against the law in this country.\"\n\n\"Only if I run around and brag to all my friends that I had sex with my sister. I can promise you right now, I'm not going to do that. I'm the luckiest fucker in this town. Taffy, have I told you how beautiful you are? Oh and Renee, you are a picture of perfection also.\"\n\n\"You keep talking like that and you'll get a chance to sink that tool of yours into this pussy as well.\" Renee responded.\n\n\"Are you kidding me, is it possible two of my sisters would be willing to have sex with me?\"\n\n\"Why don't you convince the sister that's hogging your cock to get off you and you'll find out if you have to sisters who'll have sex with you.\" Renee said in a matter of fact voice.\n\n\"I don't know, I found him first, I don't know if I want to share him.\" Taffy said with a huge smile on her face.\n\nTaffy sat up and started to rise up off Tommy's cock when he looked down and saw remnants of his cum sticking to his cock. Suddenly he got alarmed and said, \"OH SHIT, I wasn't wearing a condom and when we had our orgasms together and I dumped my load inside you Taffy.\"\n\n\"Don't worry,\" Taffy replied, \"I've been on birth control pills for a few years now and the other day I got the Depo-Provera birth control shot. When that takes effect fully I won't have to worry about having my period every month. I'm going to stay on the shot for as long as my doctor deems it safe for me.\"\n\n\"Wow, I'd love to get that shot, I'm taking birth control pills too. That would be pretty neat not to have my period every month.\" Renee added.\n\n\"Sis,\" Taffy said, \"If you are serious about wanting to get the shot, I'll take you to my doctor after I get my next check. I know you don't make much money so I'll pay for your shot if you want me to.\"\n\n\"Taffy, did I tell you how much I love you? I'd love to get the shot and I'll pay you back a little at a time, if that's alright with you.\" Renee said with a sincere tone of voice.\n\n\"Don't worry about paying me back sis,\" Taffy said, \"I was just promoted at work and I'll have many opportunities to put in extra hours and make overtime, so I'll do that for you because you're my sister and I love you.\"\n\n\"I'll be really grateful to you if you do that for me. Someday, I'll be able to do something special for you.\" Renee replied.\n\nTaffy lifted her body all the way up and off Tommy's cock. He already was sporting a hard-on because of Renee's offer. Taffy lay down by Tommy's side and reached out and turned his face towards hers and kissed him again. However this time, they lovingly groped each other's body and there was much more passion in their kiss.\n\nRenee watched Tommy's cock as Taffy stroked it. She exclaimed, \"Holy shit Tommy, you have a very nice cock!\"\n\nRenee stood up and walked over to the bed and looked at her brother and sister. Intentionally she stood with her feet wide apart and when Tommy finished kissing Taffy he turned his head and saw another magnificent bald pussy within his reach. Renee's body was exactly the same as Taffy's body, except for their hair color. Renee had very dark brown hair and Taffy had black hair. Renee picked up her towel and handed it to Tommy and asked him to wipe his cock off. When he finished Renee asked, \"If we do this are you going to tell anyone?\"\n\nTommy moved his finger across his lips in a motion that people understand as zipping your lips before he said, \"I think the three of us should come to some kind of agreement whereby we swear to each other never to tell anyone else. Taffy, that includes Connie.\"\n\n\"I understand. I promise I won't talk about anything we do and I don't want this to be a onetime thing. Tommy, you have a marvelous cock and I want to ride it again and again.\" Taffy conceded.\n\n\"I also won't tell anyone what has and likely will transpire here today. If you two are willing to make love with me, I'd be the dumbest idiot in the world to mess that up.\" Tommy said.\n\n\"Ok, I want that cock inside me.\" Renee said as she laughed.\n\nShe moved onto the bed and straddled Tommy's hips. She reached between her legs and aimed his beautiful seven and a half inch cock at her pussy. Renee moved her brother's cock up and down her slit a few times so her feminine fluids would coat his cock head to make it slide into her easier.\n\nLike Taffy she moved up and down taking more and more of his cock into her body until she was sitting on her brother with his entire cock buried deep inside her. She moaned in delight before she said, \"OH Tommy, I wish we had done this years ago. Your cock feels so good. The best part of all this is you love me and would never do anything to hurt me like my last scumbag boyfriend.\"\n\nRenee started moving up and down her brother's cock when he asked, \"What did your last boyfriend do to you. I'll kick his ass.\"\n\n\"I don't want to talk about him right now; I want to enjoy your nice cock.\"\n\nRenee's tight vagina gripped her brother's cock and massaged the sensitive ring at the base of his cock head. Soon both Tommy and Renee's breathing increased to sporadic gasps as both of them traveled the pre-orgasmic path and their movements became jerky and unpredictable. Both of them were making loud moaning sounds and getting louder by the moment. Taffy watched both of her older siblings enjoy their first sexual encounter.\n\nThey lasted over fifteen minutes before both of them exploded in mutual orgasms. Like Taffy, Renee collapsed on top of her brother when they finished. After a few minutes Renee rolled off her brother on the opposite side from Taffy. All three of them talked quietly as Renee and Taffy cuddled up to Tommy, from each side.\n\nFinally Tommy got around to asking Renee, \"Why did you break up with your last boyfriend? Did he hit you?\"\n\n\"Why do you want to know Tommy?\" Renee asked.\n\n\"You mentioned him in a very derogatory way; in the same sentence with the words \"hurt you\". I want to know if he hurt you. IF he hurt you then I'll find him and make him hurt twice as bad as he hurt you.\" Tommy replied in a soft loving voice.\n\n\"He never hit me Tommy,\" Renee said, \"What he did do though, was much worse.\"\n\n\"So, I'm in suspense here. Are you going to tell me so I can find him and make sure he doesn't do to any other girl, what he did to you?\"\n\nRenee hesitated and both Tommy and Taffy looked over at her. She had tears in her eyes as she said, \"Remember he was a party animal and at first it was fun to go out and party and meet other people. We went to all kinds of parties and danced almost all the time. I really enjoyed myself even though he drank a little too much ... too many times.\"\n\n\"We had sex on a regular basis so I didn't say anything to him when we were at a party and he would massage my breasts through my blouse and bra. I even let him put his hand between my legs when I didn't think anyone would see us, even when I had a dress or skirt on. At first he was real happy to feel me up a little bit so I got turned on and really horny. When we left the party and we were in private, we had fantastic sex.\"\n\n\"As time went on he wanted to put his hands inside my blouse and play with my boobs. That soon escalated to him wanting to reach inside my blouse and raise my bra above my boobs and play with them. Again I didn't stop him because he was always discrete and I remained completely covered. I'm pretty sure some of the other people, at the various parties, knew what he was doing to me but they didn't see anything.\"\n\n\"After I started letting him play with my boobs with my bra raised inside my blouse, he wanted me to wear button up the front blouses when we went out. After he had a few drinks he'd unbutton some of my buttons and reach into my blouse, flip my bra up and openly rub my boobs. There were a few times he made me squeal by pinching my nipple and when people looked at us I was forced to smile even though they saw his hand inside my blouse.\"\n\n\"Of course, when I didn't stop him from doing what he wanted with my boobs, the next obvious step was for him to tell me not to wear a bra when we went out. He wanted me to continue to wear the button up the front blouse. Like a dummy, I didn't argue with him because like I said, he'd always been discrete and never exposed me to anyone.\"\n\n\"One time we were at a party at a private house and they had a hot tub. Some of the girls had on bikinis because they'd been to parties at this house before. Well, my boyfriend wanted me to get into the hot tub with the other girls but I told him I didn't have a bikini so I couldn't go in. He told me to just take off my clothes and join the other girls. I flatly refused to go into the hot tub naked, in front of all his friends. He got angry with me and we ended up leaving the party. On the way to his house he told me I had embarrassed him in front of his friends and the next time we go to that house for a party, I would take off all my clothes, even if I was wearing a bikini and get in the hot tub with the other girls.\"\n\n\"After that night things started to change in our relationship. This is the part that gets rough for me to reveal. He did things to me and justified doing them; by saying I had allowed him certain freedoms in public places. He was quick to point out I wore a skirt and a button up the front blouse without a bra as a few examples of my willingness to do what he wanted me to do. He told me I was just as much at fault for allowing him to tell me what to do and me doing them.\"\n\n\"I understood his reasoning because that was exactly how I dressed when we went out. The only difference after that night, we would dance and he would have something to drink and once he had a few down him, he became playful. He would unbutton my blouse down below my boobs and when we danced he put his hands on my ass and I know he raised the back of my skirt so part of my ass showed. But there was no real damage so I didn't say anything to him.\"\n\n\"When we took a break and sat down he would reach into my open blouse and play with my boobs. A few times he pushed my blouse to the side so even I could see most of my boob while he played. His other hand slid up my leg to get to my pussy but each time I pushed his hand away and pressed my legs together tightly to block his access to that part of my body. I was always vigilant and made sure no one saw what he was doing to me.\"\n\n\"One time, he took me shopping at Fredericks of Hollywood before we went out. He embarrassed the hell out of me when he had me stand there while he and the salesgirl selected a few pair of sexy panties for me. Even though they only selected panties in my size, he told her he wanted me to try them on. We went back to the changing room, all three of us. He made sure the door to the changing room stayed open and invited the salesgirl into the room to watch me before he turned to me and told me to take off my skirt and panties. He then told the salesgirl to only hand me one pair of panties at a time. I looked at him, no, I stared at him, but he didn't change his mind about me being naked from the waist down in front of the other girl with the door wide open. I turned away from them and started to undo my skirt but he told me to turn around and not be bashful because I had the same thing she did. I turned around and faced both of them and of course the open door and slowly removed my skirt. I hung my skirt on a hook and then I went into slow motion and took my time as I pushed my panties down and took them off.\"\n\n\"When I stood up I crossed my legs but he told me not to do that and instructed me to stand up and move my feet apart. The girl was smiling as she looked directly at my pussy. It seemed like an hour went by before she handed me the first pair of panties.\"\n\n\"I asked her for the store panties a girl uses when she tries on intimate apparel. When I finished speaking she told me I didn't need them because my boyfriend had already told her he was going to buy the panties for me.\"\n\n\"When I questioned him as to why I was trying them on, he shrugged and told me he wanted me to get used to people seeing me. He followed that up by saying I was lucky he wasn't going to have me go back out into the store dressed the way I was and select another pair of panties. I quickly tried on all the panties they had selected for me. When I was finished, he told me he wanted me to put on the crotch-less white lace thongs instead of my panties.\"\n\n\"They put my panties in the bag and we left the store and went to the party. Once again while we danced he raised my skirt enough for my ass cheeks to be seen. I reached back and pulled my skirt down to cover myself but a moment later he reached down and lifted my skirt even higher and he had both hands directly on my ass cheeks. We finished the slow dance and I wanted to sit down but he insisted we continue to dance and he told me to leave my skirt alone. I'm positive the people dancing behind me had a wonderful view of my bouncing ass cheeks.\"\n\n\"When we finally sat down his hands went directly to my blouse and unbuttoned every visible button. There was only one button still buttoned and that was inside the waist of my skirt. We had a drink and then he pulled me out on the dance floor, to dance a fast song. I danced and tried to hold my blouse together but he instructed me to let go of my blouse and dance. I did and my braless boobs bounced the rest of the night. A few times I had to tuck them back into my blouse. When it came time to leave it seemed like he had to stop and talk to every guy on our way out. Those guys got an eye full of my boobs because he was holding my one hand and I didn't dare use the other to hold my blouse closed.\"\n\n\"Another time we were out at a private home party he didn't waste any time unbuttoning my blouse all the way except for that one button. He dragged me by the hand around to all his friends and introduced me to those I hadn't met before. Again, they could see inside my blouse because I didn't dare piss him off, by holding my blouse closed. We danced a lot and he drank a lot that night. Almost immediately, he had the back of my skirt raised with his hands on my ass cheeks, as we danced to slow numbers. I tried to pull my skirt down to cover myself but he whispered in my ear and told me if I touched my skirt again he would take it off me and I would have to dance in only my Fredericks of Hollywood thong.\"\n\n\"As the night wore on, he got more daring and he was even pulling my ass cheeks apart while we were dancing. I'm positive whoever was dancing behind us got to see my asshole. I was so embarrassed I told him I wanted to leave. He refused and we stayed for another hour during which time he intentionally pulled the sides of my blouse open and exposed my boobs to anyone who was looking our way. Once again I tried to save my modesty but when I re-covered my boobs he reached out and pulled the bottom of my blouse out of my skirt. He yanked the sides of my blouse forcefully in opposite directions and the single button, holding the bottom of my blouse together, popped off. It went rolling across the floor leaving my boobs and abdomen exposed to everyone.\"\n\n\"I had to sit there, facing the crowd, with the front of my blouse hanging open, while he finished his drink. Again when we left, he had to stop and shake hands with everyone. This time the guys could see both of my uncovered boobs. When we got out to the car, he told me to strip. I argued with him but he warned me if I didn't do it, he would. So, I stripped without saying another word.\"\n\nTears were running down Renee's face and while Tommy hugged her to him, Taffy jumped up and went to the bathroom and got a cool wash cloth and brought it back. She came back just in time to hear Tommy tell Renee she didn't have to go on with her story.\n\n\"I'll stop, if you don't want to hear this.\" Renee said in a soft voice, \"I really need to tell someone. I've had no one to talk to since it happened. The next part is much worse because he got progressively worse as time went on. Do you want me to stop?\"",
        "Taffy spoke up quickly and said, \"No, don't stop. I had no idea you've been suffering in silence.\"\n\n\"Ok then, like I said he got progressively worse as we continued to go out. The next time we went out he took me shopping again before we actually went out for the night. He took me to a place, I don't remember the name of it but he bought me a light pink sheer blouse. When we went to the dressing rooms in the back of the store, he stood with is back against the door, holding it open. I turned around to take my blouse off but he told me to face the door and if anyone looked in, not to cover myself. He held out his hand and I knew he wanted me to put my blouse in his hand when I took it off.\"\n\nThere were many people walking past the dressing room and all of them looked into the room and saw me topless. When I put on the sheer blouse I knew I'd be showing something but the single layer of material over my boobs didn't hide anything. I gasped when I looked in the mirror and I told him there was no way I could wear the blouse without a bra on. He looked at me and told me to get used to wearing it because I'd be wearing that blouse a lot.\"\n\nHe called a saleslady over to the dressing room and told her I wanted to wear the blouse instead of putting it in a bag and asked her if she could ring it up and take off the security device. She told me to take off the blouse and she would remove the device. I handed her the blouse and she left.\"\n\n\"While she was gone I told my boyfriend again that there was no way in hell I was going to wear that blouse without a bra. He told me he liked the blouse and I was going to wear it and that was the end of the conversation. More people walked by the room and saw me before the saleslady returned with the blouse. She waited and watched me put the blouse on and complemented me for having beautiful breasts. The three of us walked over to the register where my boyfriend paid for the sheer blouse and put the blouse I had been wearing blouse in a bag, which he carried.\"\n\n\"He then took me to another shop and we browsed through the short tight skirts that would fit me skin tight. He finally found two miniskirts which he liked. The tag said the fabric was 93% Polyester 7% Elastan, I knew that type of material would add additional problems to the skirt being as short as it was. The skirts had draw strings on the sides and I could only guess that would cause more exposure instead of more coverage.\"\n\n\"My boyfriend took both skirts over to a male salesman and asked him to assist me in the dressing room. The salesman looked at me at the same time I saw my boyfriend hand him some money. The salesman told me to follow him. I was nervous as hell thinking I would have to try the skirts on in front of the salesman. To make me even more nervous, as we followed the salesman my boyfriend whispered only loud enough for me to hear him, he wanted me to take off both my skirt and panties when we got to the dressing room.\"\n\n\"Remember, I already had on a sheer blouse that did nothing to hide my boobs from anyone's view and every guy we passed in the store did a double take and looked at my boobs. Now, my boyfriend wanted me to model skirts front of a strange guy without any panties on. When we got to the back of the store, we walked into a sectioned off area and down a hall with individual changing rooms on the left. We got to one where the door was open and the salesman stopped and motioned with his hand for me to enter. I walked into the rather large room first and then I turned and reached my hand out for the skirts. However my boyfriend had other ideas and told me to step back so both of them could come in too. I was devastated knowing I was going to have to strip in front of the salesman.\"\n\n\"I tried to argue with my boyfriend but once again, my boyfriend looked at me sternly and I silently conceded. He told me we needed to get moving along. He followed that up by telling me, since my blouse didn't hide anything; he wanted me to take that off first. I turned around facing away from them but my boyfriend was quick to tell me to turn around and face them. I turned and stared at him in disbelief, but all he did was smile back at me. I slowly unbuttoned my blouse and slipped it off my shoulders. He took my blouse and told me to hurry up and take off my skirt and panties. The salesman was all smiles when he heard I was going to be naked in front of him.\"\n\n\"I took off my skirt, again my boyfriend held out his hand so I gave it to him. Then he asked the salesman if he wanted to take off my panties. Of course no guy is going to turn down an opportunity to take off a girl's panties unless he's gay, so he immediately kneeled in front of me and pulled my panties down. My boyfriend shocked me even more when he told me to open my legs and let the salesman feel my pussy. I told him I wouldn't do that and he told me I didn't have a choice, as he scowled at me.\"\n\n\"I slid one foot away from the other but my boyfriend wasn't satisfied. To punish me, my boyfriend told me to turn around, and spread my feet wide apart. He then instructed me to touch the floor with my hands and don't move until he told me I could.\"\n\n\"I opened my eyes very wide and shook my head no but that didn't faze him one bit. He nodded his head and I knew I was out of options. I couldn't just leave because I was naked and he was holding my clothes and wouldn't give them to me. So I did what he told me to do. My face burned with embarrassment at the thought of both the salesman and my boyfriend being able to stare unimpeded at my most private areas. The salesman asked my boyfriend if he could finger fuck me and he was given permission. He finger fucked my pussy for a few minutes then shocked me when he pushed his finger into my asshole and finger fucked me there too. While doing my asshole he licked my exposed clit until I experienced an orgasm. When he was finished with me, my boyfriend made me get down on my knees and suck first the salesman's cock and then his. I had to swallow their cum so there wasn't any mess.\"\n\n\"I was finally allowed to try on the skirts and both of them barely covered the bottom of my ass cheeks. When I bent over, following my boyfriend's instructions, I looked in the mirror and could see my pussy peeking out at the top of my thighs. I tried to adjust the skirt but my boyfriend told me to leave it alone. He told the salesman he was going to take both skirts. I had to take the skirt back off so the salesman could remove the tags. I turned away from the door but as usual my boyfriend made me turn around and face the open door. He told me I'd better get used to people seeing me naked or he was going to punish me in front of a large group of people. I nodded my head considering the fact it was better to let a couple of people see me than a large crowd.\"\n\n\"A woman and her daughter started to walk into our changing room, since the door was open, and she stopped dead in her tracks when she saw me standing there naked. She told me I should learn to close the door if I was using the room. My boyfriend quickly told her that I loved to let others see me naked. He immediately told the woman it didn't matter to me if I showed my naked body to males or females. Both of them stared at my body especially my bald pussy. He asked her if she wanted to see me follow his instructions. I flashed my most stern glare at him at the same time I shook my head no but he looked at me and simply told me to turn around and spread my feet like before and put my hands on the floor.\"\n\n\"I realized he was actually going to make me spread myself open for his pleasure. I slowly turned around and parted my feet; I bent over and put my hands on the floor, in front of me. My face and I suspect my body, was totally red with embarrassment showing the mother and her daughter, my open pussy and my puckered asshole. The worst part is they talked about me with my boyfriend, without including me. Both the mother and daughter came into the room and were standing right behind me with my most private areas on display to them.\"\n\n\"The salesman came back into my room with my skirt and he stopped behind me and asked my boyfriend if he could finger me one last time. I was horrified when my boyfriend told him he could and I immediately felt him slip two fingers into my juicy pussy. I heard my boyfriend tell the mother and daughter it would be ok for them to use our changing room if they wanted to.\"\n\n\"The woman, after seeing the salesman finger fucking me, asked my boyfriend if he would instruct me to lick her pussy and her daughter's pussy, if she wanted it. I was terrified when I heard my boyfriend tell the woman all she had to do was take off all her clothes. When she questioned why she had to take off all her clothes, my boyfriend told her she would receive enjoyment from my mouth and he wanted to receive some enjoyment by seeing her completely naked body. He added if her daughter wanted me to lick her pussy she had to get completely naked too.\"\n\n\"The woman didn't hesitate; she was naked and sitting on the small bench in less than a minute. My boyfriend told me to move between her legs and pleasure her. I was crying and told them I wasn't a lesbian or bi-sexual and I wasn't going to lick anyone's pussy. Suddenly I felt a very hard slap on my ass and I knew right then and there, my fate was sealed. A few seconds later my boyfriend asked if I needed another slap to get me moving. I asked him if I had to remain spread open and he instructed me to just move forward between her legs and stay as I was. Her pussy was gross; it was covered with a lot of thick matted down hair. She has a strong odor from her gaping pussy that was totally repugnant. To top it all off, she had white crusties, I'm sure you know what I'm talking about Taffy. Tommy, they come from the toilet paper that clings to a pussy when we wipe after peeing. Uuuuuuuuuuuugh, Oh MY GOD, I stared at her nasty pussy for a few seconds before I casually used my finger to wipe those away. I didn't want those little balls of toilet paper in my mouth.\"\n\n\"After I was satisfied the lil crusties were gone, I cautiously stuck out my tongue and licked the first pussy of my life. I had to push my tongue through all that hair to finally get to her slit. I almost puked at the thought of pleasuring such a disgusting pussy but I wanted to get the task over with, as fast as possible. I didn't know what to do since I'd never pleasured another woman before, so I did to her what felt good when I played with my pussy and it worked. She had two orgasms before she released my head, and I could lean back away from her Grand Canyon.\"\n\n\"I thought I was finished, but the daughter asked my boyfriend if her pussy could be next. He quickly told her to take off all of her clothes and have a seat. I looked up at my boyfriend to complain, even though I knew it was useless, and that's when I saw he had is cell phone in his hand. That asshole was making a video of me with the mother and daughter. The daughter was naked sitting in front of my face in no time flat. I stared at her hairless pussy a few seconds before I moved my face forward and started licking her clit. She grasped the back of my head and pulled my face right into her juicy little slit. My nose was plugged with the top of her slit and my mouth was tight against her pussy. She produced so much fluid I had to swallow some of it, so I wouldn't drown and I'm not even kidding. While she held my head she moved it side to side and used my nose to stimulate her clit while my tongue was in her hole.\"\n\n\"The salesman asked my boyfriend if he could fuck me. When I heard that, I cried nooooo... into the daughter's pussy. I was totally relieved to hear my boyfriend say no for once. The reason my boyfriend gave for denying the salesman's request was not because he didn't want him to, but because we had a party to go to later. So the salesman split his fingers and pushed two into my asshole and two into my pussy and then pumped them into me.\"\n\n\"After I made the daughter have a couple of orgasms my boyfriend told me to suck the salesman's cock and then I could suck his cock again. The worst part for me was, both the mother and daughter stayed in the room and watched me on my knees in front of the guys. The whole time I was sucking each cock, the mother made lewd comments about my cock sucking techniques. Once again, I had to swallow the cum from both of them, so there wouldn't be a mess in the changing room.\"\n\n\"I was finally allowed to stand up and I looked at the naked mother and daughter and both of them smiled at me. I glared at them and told them I did not enjoy licking their pussy. The woman shrugged her shoulders and told me I was a great cunt lapper and she'd love to give me more practice. I told her only in her fucking dreams.\"\n\n\"My boyfriend told me to get dressed. When I reached for my panties, my boyfriend snatched them from my hand and handed them to the salesman and told him to keep them as a souvenir. I picked up my new skirt and stepped into it and pulled it up my legs. It didn't do much to cover me and only hung an inch or so below my pussy but the bottom of my ass cheeks were visible from behind. I pulled it down until I thought it was decent before I picked up my sheer blouse and put it on. When I was covered the best I could have been, (there is no way I could have said I was dressed) we left the changing room.\"\n\n\"I asked the salesman if there was a restroom I could use to wash my face and he had me follow him. He opened a door that said \"Employees Only\" and inside was a toilet and a sink. I walked into the restroom and reached back to close the door but he held it open. He told me I wasn't an employee so I couldn't close the door. I knew it was hopeless to argue and I was soooo embarrassed to think they were going to watch me. I looked at my boyfriend and saw he was still taking a video of me. I decided to show them I was better than they were, so I walked over to the toilet and hovered just above it and relieved myself, under their watchful eye. I dabbed my pussy dry with the cheap toilet paper, before I stood up and walked the couple of steps to the sink. I washed my hands and face before I cupped some water in my hands so I could rinse my mouth. When I finished, I dried my hands and face on the rough brown paper towels. With the best smile on my face that I could muster, I asked them if they were happy now.\"\n\n\"I walked out of the bathroom and on the way to the register, the salesman told me I could come back any time and he would personally service me. His weak attempt at word play didn't go unnoticed by my boyfriend. He told the salesman the next time we come in, he'd be willing to have me walk around the store in sheer panties and bra if he wanted. We stopped by the register and my boyfriend paid for the skirts. All the guys in the store stared at me with lust in their eyes.\"\n\n\"When we left the store we had to walk a good distance to get to his car. The material of the skirt clung to me and with each step I took; I could feel it ride up a little. I kept pulling it down until finally my boyfriend told me to leave the skirt alone and whatever happened, will happen. I told him I couldn't do that because it was riding up as I walked and if I let it go, my pussy would be showing and that's against the law and I wasn't going to be arrested for nobody.\"\n\n\"He didn't say anything more and I knew he was pissed off so I let the skirt ride up and lucky enough we made it out of the mall into the parking lot by the time I felt a cool breeze blow across my bare pussy lips. As I walked, I asked him if he was happy now that my pussy was showing for the world to see. He looked at me and then ran ahead of me and turned around to see if I was telling the truth. To make matters even worse, now that the skirt had managed to ride up over my ass cheeks, each step I took made it slide up more. It was a little past dusk but it was still light enough outside that when I walked past a group of five guys, they all saw my bald pussy and made a lot of comments in the short few seconds it took to pass by them.\"\n\n\"I saw a family off in a distance and I reached to pull my skirt down and my boyfriend told me to leave it alone. I told him my pussy was totally uncovered and I needed to pull my skirt down before we passed the family. He told me to leave my skirt alone and keep walking. I told him my skirt was almost at the top of my legs but it didn't matter. By the time we were ready to pass the family my face was scarlet from embarrassment and the mother yelled at me and told me to pull my skirt down. I fixed my eyes straight ahead and kept walking even though she called me all kinds of names as we passed by them. I was pissed off that my boyfriend made me expose myself and I told him so after we were out of earshot from them. He didn't say anything.\"\n\n\"Once we got in the car he made me pull my skirt up to my waist and sit with my legs spread wide. When we arrived at the party he leaned over and told me I'd better behave and follow his instructions and not to embarrass him. I was allowed to pull my skirt down and cover myself as best as I could before we entered the party. Immediately I was the center of attention and almost everyone complimented me for having beautiful boobs and told me how wonderful they looked.\"\n\n\"When we danced it didn't take long for my boyfriend to start playing with my ass cheeks. He pulled them apart and I silently suffered the embarrassment of knowing the people behind me were able to see an unobstructed view of my asshole and my pussy. When we sat down he made me spread my legs and many of his friends stood in front of me and talked to him while looking at my pussy. Once he had enough drinks in him he started openly rubbing my pussy as the guys were talking to him. A couple of times I tried to close my legs but he dug his fingernails into my thigh and I opened them again. Each time I closed my legs he made me pay a higher price by pushing my legs further apart or intentionally pulling up my skirt so not only was my pussy showing but my lower abdomen was as well. In other words, I might as well not have anything on below my waist.\"\n\n\"We decided to leave so he leaned over to me and told me to pull my skirt up so it was above my hips and leave it there. I told him I wasn't going to do that and he looked at me and told me to do it or else. Again I refused so he reached over and pulled my skirt down and with a bit of a struggle he pulled it off leaving me bottomless. I begged him to give me back my skirt but he refused and said if I wanted to wear my blouse I'd better keep quiet and do everything he told me to do.\"\n\n\"On the way out of the house I had to endure several of his friends including a couple of female friends who asked him if it was ok to finger my pussy. Of course he gave them permission and each time he instructed me to open my legs and give them access. At first I didn't but with a loud, hard slap on my bare ass, I did what he asked me to do, when he asked me to do it.\"\n\n\"As we walked out the door he told everyone the show starts in a few minutes to follow us. I didn't know what he was planning but the thought he had invited all his friends to watch us scared the shit out of me. We made it to the car and I was somewhat relieved but that didn't last long when he told me to take off my blouse. I looked around and then told him no, we were on the sidewalk and there were other houses nearby and cars traveling the street.\"\n\n\"He got that look in his eye and I didn't hesitate any longer and I unbuttoned my blouse. He took it from me and put in in the car then turned to me and told me I'd been a naughty girl and I needed to be punished. He pointed to a clear place in sidewalk where there were no cars parked at the curb, as he instructed me to walk to that spot. When I got there, he instructed me to face the street and spread my feet as wide as I could and bend over and put the palms of my hands on the sidewalk.\"",
        "\"He stood by his car as I followed his instructions. Everyone from the party was behind me. If I thought I had been embarrassed in the store, that was nothing to bending over with so many people standing behind me and seeing me with my pussy spread wide open and my puckered little asshole on display. To make matters worse, even though my body was in the circle of illumination from the street light, my boyfriend pulled his spotlight out of his car and shined it on me as he walked behind me, showing everyone my asshole and pussy. He handed the light to one of his friends. He unzipped his pants and drove his cock into me with such force I almost fell face first into the sidewalk. He fucked me in front of everyone gathered outside for a long time before he blew his load deep inside me. When he was finished he pulled out and left me standing there with his cum dripping out of me. There were plenty of flashes so I know there are pictures of my dripping pussy on many cell phones.\"\n\n\"When he allowed me to get up I had to go into the house and get some paper towels. As you can imagine, I was groped as I walked through the crowd on my way in and again on my way out. Some of the guys, who didn't mind the mess, fingered and rubbed my pussy while others squeezed my boobs. Either way I didn't want to piss off my boyfriend until I got home so I stopped each time someone reached for me and let them do what they wanted. It's a good thing I did that too, because my boyfriend was watching me.\"\n\n\"I spread the paper towels out on the seat of his car and asked for my clothes and he told me I didn't have any clothes that I would have to ride home naked with him or with one of the other guys. I got into the car and sat quietly. I waited until I was almost home and then when I was in familiar territory I unloaded on him. I told him I wasn't a two bit whore that he could pass around and let others grope or play with. That got the fight started and we yelled at each other even when he stomped on the brakes in the middle of the street and threw the transmission into park. I mean I really let him have it and told him there was no fucking way he was ever going to put me on display again. I was so pissed off I got out of the car not remembering that I was still almost a mile from home. It was lucky that it was a warm night or actually early in the morning. I walked home completely naked and I didn't even bother to be cautious. I don't know if anyone saw me but I was so mad I didn't care.\"\n\nTommy caressed his sister's face and wiped her tears with the damp wash cloth before saying, \"It's ok Renee, I think we've got the picture. You don't have to say any more.\"\n\n\"Oh no, you don't have the complete picture yet, it gets much worse.\" Renee said in a quaking voice.\n\nIn a soft understanding voice Tommy said, \"You really don't have to say anymore.\"\n\n\"Now that I've told you the beginning of my downfall, if you don't mind, I really want to tell both of you the rest of the story. Like I told you before, I've been keeping all this in my head and I haven't had anyone I trusted enough to tell. Tommy, I've never made love to you before, but while we were doing it, I could feel the love you have for me. It wasn't just sex, ya know. Please believe me when I tell you, we made love and I really needed that.\" Renee said.\n\nThere was silence between all three of them for a few seconds before Renee started talking again. \"I didn't take his calls for well over a month because he not only scared the shit out of me but he MADE ME do things I didn't want to do. I'm not a whore but he made me act like one.\"\n\n\"Yes, I could have walked away from him at one of the stores where he made me perform like a whore, but I didn't. Although I was mad at him, I also thought I was deeply in love with him. I should have and could have walked away from him when he first started ordering me to expose myself or allow others to use my body. So yes, some of what happened to me is my fault. I'm telling you this to get it off my chest but Taffy, please don't let anyone use your body like my ex-boyfriend did mine.\"\n\n\"I remember that time when you stayed home a lot. You spent most of your time in your room. That was almost two years ago if not longer, wasn't it?\" Taffy inquired.\n\n\"Yes, that's when it was. But then I was stupid, really, really stupid. One time I took his call and he cried on the phone and told me how much he loved me and wished that I would forgive him. Well, to shorten the story, he got to me and I talked to him on the phone a few more times. Finally I agreed to meet him out in front of this house. In person, he got down on his knees and begged me for another chance. I told him I wasn't a piece of meat and I wasn't going to put up with him treating me like one. He promised he had changed. I told him I'd think about it and let him know.\"\n\n\"For the next couple of weeks, he sent me roses and little notes saying he missed me. Stupid me, I let my guard down. He called me and told me about a party he'd like to take me to but it was about an hour away from here. He told me it would be a fresh start for us. I told him I would think about it on the condition that he wouldn't drink anything except water or soda.\"\n\n\"After we talked some more, I conceded that he could have ONLY one beer. Finally I told him I would go with him and he was overjoyed. We set up a time for him to pick me up and he arrived fifteen minutes early. During the drive to the party we talked more than we ever had in our entire relationship. He even talked about possibly marrying me and that really lowered my guard. I started to think he really did change.\"\n\n\"We got to the party about an hour after it started and he immediately wanted to dance. We danced several dances and then I told him he'd earned a beer for all the good time we had on the dance floor. Both of us had a beer as we sat watching the others mill around chatting with others in small groups and individually.\"\n\n\"My boyfriend looked at me and told me he loved me and I almost melted. I was glad that I gave him the second chance; we were having a great time. We talked to some people inside the house before we walked out on the back deck. I smelled the weed immediately and saw a small group of people standing off to the side. We were standing by the railing holding each other and the next thing I know, someone handed a blunt to me so I took a hit and passed it to my boyfriend. We stayed and talked while the blunt was passed to us three more times. Finally we excused ourselves and walked a short distance over to the steps and down on the lawn. Weed has always made me horny so I started kissing my boyfriend and I felt the lump in the front of his jeans. I kneeled in the cool grass and within seconds I had his cock out and I sucked it like the world would end the next day. He pulled me up before he had a chance to cum and we kissed while he rubbed my pussy through my panties. It wasn't long before I slipped my panties off and he put them in his pocket. I turned around and flipped my skirt up and he didn't need any further prompting to bury his wonderful cock deep into my pussy. We had wonderful orgasms before we finished. I squatted and peed right there on the lawn and my boyfriend handed me a small napkin to wipe myself. After some additional kissing, we went back into the huge house and found a bathroom so both of us could wash up a little.\n\n\"We dated a few more times and everything was looking great. I even agreed to wear that pink blouse again but I stipulated that I had to wear a bra under it. I even agreed to wear the short skirts again with the understanding that I could keep my pussy and ass covered all the time. He agreed to both of my stipulations so I wore the blouse, short skirt and the crotchless panties we purchased. We had some dates where we went to the movies and sat in the back. We played around a little but nothing too serious. I let him finger me while I played with his cock. One time he shot his load on the floor and we laughed about it.\"\n\n\"Things were going very well for us when he told me about a party at the house with the hot tub. I told him I didn't want to go there but he assured me we would have fun. When the night arrived I had butterflies in my stomach because I remembered what he had told me about the next time we go to that house for a party. Even though I was apprehensive about going, I got into his car wearing my pink sheer blouse, short skirt and thong panties. I figured if I wore the sheer pink blouse and kept him happy knowing that I was willing to expose my boobs for everyone to see, that he wouldn't want me to strip naked and get in the hot tub like he told me I'd have to do.\"\n\n\"We arrived at the party and we started dancing. He complimented me on wearing the sheer blouse and I was honest with him and told him the only reason I wore it to that party was to satisfy him so he wouldn't force me to strip and get in the hot tub. He laughed and told me I was his girl and he was going to make sure I was well taken care of. Over the next couple of hours he had three beers and I had a glass of wine. The party was moving along smoothly when one of the guys showed up with a few bottles of the hard stuff. My boyfriend loves Jack Daniels and one of his friends poured both of them a double shot. I asked my boyfriend not to drink it but he downed it anyway. One double shot, led to another.\"\n\n\"I dragged my boyfriend out on the dance floor and danced a slow dance with him. It wasn't long before I felt him pull up my skirt in the back and begin to massage my ass cheeks. I tried to pull my skirt down and he told me to leave it alone. I knew right then things really didn't change, when he drank liquor. I told him I was going to leave if he didn't pull my skirt down and he laughed at me. He whispered in my ear, that I was going to do whatever he wanted me to do and I'd better like it or else.\"\n\n\"He informed me that I had been naughty and I was going to have to be punished. He told me not to touch my skirt and he walked me through the crowd with my ass cheeks showing. I tried to pull away but he held tight to my arm. We walked out to the kitchen where the liquor was and he poured us a double shot of Jack Daniels. He handed me one and told me to drink the whole thing at once. I told him I didn't drink that stuff and one of his friends called out he knew I loved to smoke weed. After a quick survey of the room a joint was produced and my boyfriend told me I had to smoke all of it or drink the Jack.\"\n\n\"I fired up the joint and took my first hit deep down and held it. I figured if I was going to be embarrassed that night I was going to be high. I tried to pass it around but my boyfriend wouldn't allow it. My second hit made my world start to spin and my boyfriend told me to take off my blouse. He took the joint from me and without thinking I did just what he told me to do. When I let it slide down my arms he quickly took it and handed the joint back to me and told me to take another hit, which I did. He knew I got horny when I smoked weed, and he prompted me to take a fourth hit immediately after I let out the remnants of the third.\"\n\n\"While I was holding the fourth hit he instructed me to take off my skirt. I protested but he leaned over towards me and whispered in my ear that I'd better not embarrass him in front of all his friends. I looked around the room and even in my buzzed state; I knew everyone was hungry to see me naked. In my head, I knew I was going to be naked very soon.\"\n\n\"My boyfriend held out his hand for the joint. I looked around the room one more time before I handed him the joint. Hesitantly, I slowly pushed my skirt down over my hips and let it fall on the floor. There was nothing sexy about the way I did it. My boyfriend handed the joint back to me, told me to take a hit and step out of my skirt. I did both without any hesitation.\"\n\n\"Even in my semi-clouded mind I knew what was going to happen next, if I stayed, so I decided to leave while I still had my panties on. When I tried to leave I was pushed back into the center of the room. I dropped down to my hands and knees and tried to crawl between everyone's legs but that didn't work either. Many of the guys groped my boobs before I found myself standing in the center of the room again. I tried to reason with my boyfriend but he looked at me and told me to take off my panties or he'd ripe them off me. Once more I looked around the room and tried to enlist the aid of at least one of the other females, but no one came forward. I started to cry and told him I didn't want to show everyone my pussy. He told me I had ten seconds to take them off or else.\"\n\n\"I looked around the room again and asked for help but no one came forward. My boyfriend started moving towards me and I held up my hand and told him I would take them off. I took as much time as I dared, before I pushed my panties down. I even bent over and held onto them as I stepped out of them hoping someone would come to my aid. Finally I straightened up and stood in front of everyone completely naked and crying.\"\n\n\"I told my boyfriend I was totally embarrassed and naked and if that was my punishment, he'd accomplished it. I begged him to take me home and he laughed at me and told me it wasn't time to leave, the party was just beginning. I begged him to give me back my clothes and he continued to laugh at me and told me I wouldn't need them for the rest of the night. I was more scared than ever when I asked him what he had planned for me. He told me he knew how horny I got when I smoked weed so he was going to fuck me. I told him I was ready to leave the party and he could fuck me when we got to his house. That wasn't his plan and he let me know he was going to fuck me in front of all his friends. I dropped down on my hands and knees again and tried to escape through everyone's legs but I was stopped and pushed back into the center where someone helped me stand up again.\"\n\nRenee's tears rolled down her cheeks and Tommy hugged his sister to his body and said, \"Sis, I'm so sorry I wasn't there to protect you. If I get my hands on that asshole, he'll wish he was never born.\"\n\nRenee cried for a few minutes before she said, \"I was crying when some of his friends scooped me up and carried me to the kitchen table and put me down on it. I begged my boyfriend not to fuck me in front of all these people but my pleas fell on deaf ears. I continued my attempt to enlist the aid from the females in the room and not one of them stepped forward nor did they say anything while my body was put on display, for everyone to see. Once on the table four guys stretched my arms out to my sides and the two holding my legs pulled me down the table until my ass was on the edge and then they spread my legs as wide as they would go. I cried even harder knowing everyone at the bottom of the table was able to look into my spread open pussy. I'm positive my pussy was open enough for everyone to see into my hole.\"\n\n\"There were a lot of light flashes so a lot of people took pictures of my naked body. When my boyfriend walked over next to the table, I saw him and asked him why he was doing this to me. He drunkenly drawled that I had embarrassed him in front of his friends and the girls weren't going to help me because I thought I was too good to use the hot tub with them. He told me it was all my fault and he was going to punish me in a way I'd always remember.\"\n\n\"I looked down my body when I saw my boyfriend step between my stretched out legs. I cried even harder and begged him to not to fuck me but he didn't listen. I watched as he stripped off his clothes. He told his friends to pull my legs back towards my body so he could have access to both of my holes.\"\n\n\"He moved forward and to my horror he slammed his cock into my pussy without any pretense of being gentle. His cock was like a jackhammer as he stood there holding my thighs. I guess I should be happy he asked someone to find some oil while he continued to fuck me. When they handed him some vegetable oil he poured a liberal amount on my pussy with his cock still pistoning in and out of me. Without any fanfare he suddenly pulled out of my pussy and jammed his cock into my asshole. I screamed and begged him not to do that but he didn't care and he continued to fuck my asshole. I cried so hard but all he did was tell me to shut up. He told me I was the one who stripped naked willingly, so he could fuck me. He told me I was just a whore who wanted everyone to see my naked body. Finally he shot his load into my ass and I thought I was through, but he had other ideas. When he pulled out of my ass he looked around the room and told all his friends that I was a good fuck. He told everyone they could take me for a test drive and find out.\"\n\n\"I don't know for sure but I think every guy at the party, that night, fucked my pussy or my ass. I cried and screamed for them to stop and told them I didn't want anyone to fuck me. It didn't matter what I yelled, the guys held me firm while one guy after another stepped up to the end of the table and chose one of my holes to ram his cock in. I struggled a lot and tried to get away but after a while I became too weak to fight and I had to just lay there. Even when I was too tied to struggle, the guys still held me open. I guess I should be happy that no one wanted me to suck their cock. Maybe they were afraid I'd bite them.\"\n\n\"By the time the last guy finished with me there was cum running out of both my holes. When the guys let go of my legs, they just hung limply off the end of the table. They had been raised up in the air so long they were numb. When I could finally move I got up on weak legs and tried to locate my clothes but they were nowhere to be found. I asked where my boyfriend was and his friends told me he left right after he fucked me. But before he left, he told everyone to fuck me like the whore I was. The guy who owned the house got pissed at me for all the cum that dripped on his floor.\"\n\n\"Since I couldn't find my clothes, I went in search of something I could use to cover my body. I opened a bedroom door and saw a couple fucking on the bed. I was crying and babbling so the girl stopped the guy from fucking her and got off the bed. She walked over to me and took me into the bathroom. She helped me shower and get cleaned up and then she went to the closet and pulled out a guy's button up the front shirt and gave it to me to put on. I asked her to give me a ride home and she told me she would. I waited for her to get dressed and the two of us left. On the way home, she told me she wanted to help me earlier but her boyfriend wouldn't let her.\"\n\n\"She shocked me when she told me the party was set up by my boyfriend and all the people who were at the other party, where I wouldn't get into the hot tub, were invited. Everyone, but me, knew my boyfriend was going to bring me back there and make me strip naked and get into the hot tub. She told me she didn't know the guys had planned to fuck me but she assured me her boyfriend wasn't one of them. She told me she took her boyfriend into the bedroom where I found them and she promised to rock his world. Finally we arrived out in front of our house and I thanked her for the ride home and for keeping her boyfriend busy. I had a tiny bit of consolation knowing at least one guy, at the party, didn't put his cock in me.\"\n\n\"The next day, my ex-asshole boyfriend called me and warned me not to go to the police. He told it was my fault because I started everything when I stripped naked in front of everyone. He also told me there were plenty of pictures and a video without audio of me smoking the weed and taking off my clothes without help. He told me all of the videos and pictures could be used to prove I wanted to be gangbanged. He told me there were other videos and pictures of me laying on the table and not fighting to get up, while a guy was between my legs fucking me.\"",
        "\"At first, I believed my gangbang really was my fault. As I worked through the details I could remember, I realized the only fault I had was I trusted that fucking asshole and gave him a second chance. I remembered so vividly what the girl who brought me home told me, he and his friends planned to get me naked at the party. The reason none of the girls came to my aid was because their boyfriends had warned them not to interfere. I was set up by that asshole and I didn't know it. I know I can still go to the police but I don't want everyone to see those pictures of me. It's bad enough to know they are out there on people's cell phones. I've been able to move on, and put that shit behind me. I'm sad today for re-counting the story but emotionally I got my satisfaction and I'll explain that in a couple of seconds. Hopefully I'll find Mr. Right someday.\"\n\n\"WOW sis, I had no idea,\" Tommy said. \"If there's any way I can make him pay for what he did to you, you know I'll do it.\"\n\n\"Tommy, Karma has a way of coming back around and biting someone in the ass and it has already done that.\" Renee said.\n\n\"What do you mean sis?\" Tommy asked\n\n\"I told you he used to drink a lot well one night he was at a party and was driving drunk when he ran off the road and hit a big tree. The firemen had to cut him out of the car and he was airlifted to the trauma center. He's alive, well kind of anyway. He's a quadriplegic so he can't move; he's hooked up to a ventilator and he can't even talk. For whatever life he has left he will be in a hospital or nursing home.\"\n\n\"Do you want to hear what Karma can do to someone?\" Renee asked.\n\n\"Yeah sure,\" Taffy replied.\n\n\"I learned,\" Renee said and then paused before she said, \"He hit the tree so hard, part of the car, a piece of metal, broke away and was forced between his legs and gouged his cock and balls right off his groin. From what I hear, he only has a catheter pushed into his urethra to drain his urine out of his body.\"\n\n\"Want to hear something else that helped me heal the invisible wounds I have?\" Renee asked.\n\n\"Go ahead and tell us,\" Tommy said, \"You're smiling for the first time in a while so it has to be good news.\"\n\n\"It is,\" Renee replied, \"I went to the nursing home. I stood outside his room and talked to his nurse and when I told her I was his girlfriend she was very willing to tell me a lot of information. Nothing personal, mind you, but a lot of general stuff. When I walked into his room and stood next to his bed his eyes got wide. As I told you he's on a ventilator so he can't speak. That wasn't a problem for me; I enjoyed doing all the talking. I let him know right away I heard he lost his cock and balls in the accident. I told him it was too bad that he couldn't move his hand over to his crotch, to find out for sure. He watched me as I lifted the sheet and looked. When I looked back at his face I smiled as I told him his cock and balls were definitely missing. I kept smiling as I told him not to worry, I would be happy to provide him with sex. I put my finger under my chin and rolled my eyes and then told him, that someday I could bring my strap-on with me. I told him I could close the door and pull the curtain then fuck up his ass like he had done to me.\"\n\n\"I leaned over him so he could see my face clearly and I told him all the times he fucked me he never once gave me an orgasm. I told him I faked an orgasm each time so he'd finish and go to sleep. I made up a story how much I enjoyed the other guys who fucked me that night. I told him all of them did a much better job than he ever did. I even went as far as to tell him each one of those guys gave me at least a couple orgasms while they fucked me that night.\"\n\n\"I giggled when I told him I smoked some weed on the way to the nursing home so I was horny as hell. To make sure I made my point I pulled the curtain, slipped off my panties then stood up in a chair right next to his bed and lifted my skirt so he could see my pussy. I even rubbed my clit and had an orgasm while he laid there and watched me. I almost fell on the floor when my orgasm shook me but I got down safely without falling.\"\n\n\"Standing next to his bed, I told him I had a present for him since he was a good boy and he hadn't ordered me to do anything. I dipped two fingers into my drenched pussy and made sure they were really coated with my pussy juice before I removed them. I reached out and rubbed my pussy juice coated index finger under his nose. He had his teeth clenched together so I rubbed my other pussy juice coated finger on his lips inside and out. I reminded him that's what my aroused pussy smelled and tasted like. I leaned over him and told him I'd come back and let him see my pussy again. I gave him the finger, opened the curtain and left him lying there, helpless.\"\n\n\"There's an old saying that love is blind and in my case, I had it bad and it wasn't until that last night, I finally realized I needed to get away from him and do it fast, before he killed me. You know, I could have been in the car with him the night he crashed, if he didn't show his true colors that last night. I'm so glad that I could finally tell this story to someone.\" Renee recanted.\n\n\"Renee, I heard what you told us and even with my wildest imagination I can't even comprehend what you went through with him. I am so sorry that you weren't able to summon someone that last night who would come to your aid. All I can say is, you've been real brave to bear that secret burden all by yourself for the past couple of years. Now that you've shared your story with us, I'd consider it an honor if you'd accept me as your confidante.\" Taffy added.\n\n\"I feel comfortable with both of you and after the wonderful love making session we experienced, I feel we have a special bond between us. I don't want anything to happen to our bond.\" Renee added.\n\n\"So what are we going to do about our new found lives? How are we going to share Mr. Loverboy?\" Taffy giggled.\n\n\"I think the three of us can find places to go so we can be together. I don't have a boyfriend nor do I want one. So are you two are going to be my new besties?\" Renee asked firmly.\n\n\"Honestly, Taffy had me pegged perfectly, that's why I didn't correct her when she called me perv. I've been trying to see her undressed or naked for a long time. I'm not sure why she was the object of my desire but she blessed me with many panty peeks and a couple of bare buns quick shots which only made me more curious what she looked like naked. Now, today, in a matter of a few hours, I not only see her naked but I get to make love to her and get caught by you, and then ...... you join us. This is going to be a day I'll remember for a long time.\" Tommy added.\n\n\"Oh yeah buster,\" Taffy said. \"There'll be no more jerking off by yourself. Renee and I are willing and able to accommodate your urges. Got it?\"\n\n\"Gheeeeezzzzzz, I made love to both of you and now you're giving me rules to live by, how bad is that?\" Tommy queried\n\n\"I agree with what Taffy said!\" Renee confirmed. \"We'll take care of your needs from now on.\"\n\nTommy sat up in the bed and looked at the nude bodies of his sisters, \"Let's go take a shower together. I think I'm going to like this new relationship.\"\n\nAs they got off the bed Taffy's phone rang and when she looked at it, she realized it was Connie. She left the phone on the nightstand and decided to call her back later. Taffy wasn't going to miss out on a chance to shower with her brother and sister.\n\nThe three of them walked to the bathroom completely naked. Taffy broke the silence by saying, \"This is what I wish I could do all the time. For some reason walking outside my bedroom and the bathroom naked like this, I get excited. Actually, my pussy is getting wet just thinking about it. What makes it more exciting is both of you can look at me and see me naked.\"\n\n\"Well .... aren't you a budding exhibitionist?\" Renee joked.\n\n\"Taffy, Renee, neither one of you have to get dressed on my account. Both of you look perfect and I'll never get tired of looking at either of you.\"\n\n\"Tommy,\" Taffy said, \"You can stay naked too. I love to see your cock and your balls hanging down. I love how your cock swings when you walk. I wish .... I hope this doesn't sound strange or weird but I wish ....\"\n\n\"I bet you're wishing we had done this a long time ago.\" Renee interrupted.\n\n\"Yes,\" Taffy coyly smiled, \"I have always wondered ....\"\n\nTaffy pulled out two disposable douches from under the bathroom sink and handed one to Renee. Tommy sat down on the toilet and watched each sister step into the shower and use her douche. Taffy started laughing when she was used her douche.\n\nTommy asked, \"What's so funny?\"\n\n\"Tommy, you get to see me naked for the first time, you get to make love to me for the first time, we get caught by Renee making love for the first time, you make love to Renee for the first time and now you are watching me douche your cum out of my pussy which is supposed to be a private thing, for the first time. My question is, how many more firsts are you going to experience today?\"\n\n\"We could make love in the shower if you want.\" Tommy said with a huge smile on his face.\n\n\"Oh no buddy,\" Taffy said, \"These things cost money and I just cleaned myself so you'll have to wait. There's nothing worse than a smelly pussy. I refuse to allow my pussy to stink. I can give you a blow job in the shower if that will satisfy you. That will be another first.\"\n\n\"Oh yeah and another first,\" Renee said excitedly, \"You can lick our pussy in the shower, in the bedroom, anywhere in the house we dare to go.\"\n\n\"Renee,\" Taffy asked, \"Have you ever thought about being naked in our house?\"\n\n\"I have been naked in our house. When no one is home and likely not to come home right away, I've sat downstairs naked and watched TV.\" Renee responded.\n\n\"I was just thinking what dad said before,\" Taffy mused, \"He said he noticed when we only wear a tee shirt without wearing panties under it. I'm wondering how you feel about never wearing panties under our tee shirts again. And to make it more interesting, we could wear shorter tee shirts than the ones we use to sleep in.\"\n\n\"Well, if you like this naked thing so much,\" Tommy injected, \"Why bother wearing anything when we are up here and that includes sleeping. When you go down stairs, it would be exciting for me to know you weren't wearing panties under your tee shirt. The only problem I can think of is that I'll have a perpetual hard-on and that will show in my boxers.\"\n\n\"Are you suggesting that all three of us start sleeping naked? What do we tell mom or dad when they poke their head into our room, to wake us up, in the morning?\" Renee inquired.\n\n\"Your tee shirt rides up your body when you're sleeping so you can use the excuse that you got tired of it bunching up under you.\" Tommy replied.\n\n\"Wait a minute,\" Taffy interrupted, \"Are you saying you've peeked into our bedrooms while we were sleeping? How else would you know our tee shirts creep up our bodies while we sleep?\"\n\n\"Ok, today I'm being honest and I hope neither of you will hold this against me,\" Tommy said thoughtfully, \"To be specific, any room that has a female sleeping in it, I've checked out during the night. Mom and dad sleep naked so I don't think they would say anything to either of you for sleeping naked.\"\n\n\"You are a little perv aren't you?\" Taffy laughed, \"So you creep around the house at night and look into our rooms in hopes you'll catch us in a compromising position? I can't believe you spied on mom and dad.\"\n\n\"I can't help it; I've only had a couple of girlfriends and neither one of them let me get past feeling them up .... on the outside of their clothes!\" Tommy admitted.\n\nThe room fell silent ... until ... Taffy screamed, \"OH MY GOD, ARE YOU SAYING WHAT I THINK YOU'RE SAYING?\"\n\nTommy hung his head ... once again, the silence in the room was deafening ... finally he raised his head and stared blankly at Taffy for a few seconds before he said in a hushed tone of voice, \"Yes Taffy, you ... you ummmmm ... are the first girl I've ever had my cock in. I've only read about sex in books and magazines, I've never experienced it in real life, that is, until today. I've read about girls being hurt when guys push their cocks into a girl's pussy and I didn't want to hurt you. That's why, when you wanted to get on top, I didn't stop you. I figured if you were a virgin too, I wanted you to be in control of how much of my cock went into your body and how fast you wanted to take it.\"\n\nAt that moment in time, tears flowed freely from three sets of eyes. Both Taffy and Renee pulled Tommy up off the toilet seat where he'd been sitting, and both of them lovingly hugged him. While they had their arms wrapped around his body Taffy said, \"Tommy I'm sorry, I didn't know you were a virgin. If I'd only known ...\"\n\n\"Lil brother, I'm so happy right now, knowing that I've been a part of something special for you. I never thought I'd ever have sex again but when I saw you and Taffy together, you two looked so perfect.\" Renee said.\n\nShe continued, \"I want you to know, after what's happened to me, I'm not looking for another boyfriend and it might be a long time before I do. If you want me, I'll promise you now, my body is yours because I know you love me and you won't do anything to hurt me. You can have me anytime you want me and I won't care who's watching us. I need love .... lots of love.\"\n\nTaffy whispered, \"I'm sorry for calling you perv, I didn't know you were still a virgin.\"\n\nTommy cleared his throat, \"When I went out with a girl, it was awkward. Even though I read a lot about sex, I didn't know what to do when I was with a girl. I did what came natural and felt up her boobs and one girl I worked up the nerve to feel between her legs, even though she had jeans on. I never got nerve enough to try and undress any of them.\" Tommy reminisced.\n\nTaffy looked into her brother's eyes and said, \"Renee just gave you her body to play with any time you want and I'll make that same offer to you. You don't have to perv me anymore; I'll willingly show you my naked body and do anything else, to please you. I don't want my brother to eventually meet Miss. Right and then fuck things up so bad he ruins his chances with her.\"\n\n\"Oh Tommy,\" Renee sighed, \"If I'd only known, I would have helped you. I hope my telling you the story about how my body was used didn't ruin my chances to be included in anything you and Taffy do. I want us to be like the Three Musketeers, \"All for one and one for all!\"\"\n\n\"Renee, my sweet sister,\" Tommy said, \"I love you more now, than I ever have, if that's possible. You trusted me enough to share your secret and I promise I will never tell anyone. From now on, I want you to know, you can tell me anything.\"\n\n\"That goes double for me,\" Taffy added, \"We are definitely the Three Musketeers.\"\n\n\"How about,\" Tommy questioned, \"We agree to not keep any secrets from each other and we'll always be there to support each other. After all we are the three youngest members of this family.\"\n\n\"Ummm,\" Taffy hesitated, \"No secrets? I've signed a confidentiality statement where I work, when I was promoted to my secretary position. I can't share the confidential stuff with either of you.\"\n\n\"Ok so I amend that to our personal lives instead of no secrets from each other.\" Tommy quickly added.\n\n\"We need to take our shower, before mom and dad get home.\" Renee stated.\n\nTommy turned the water back on and adjusted it before all three of them stepped into the tub/shower. The three of them took turns getting wet and then each of them washed their own body. When they were finished they took turns rinsing off. Tommy got out and walked over to the linen closet and pulled out three towels. He handed one to each of his sisters and kept one for himself. When all three of them were dry, Tommy used his towel to wipe up the water on the floor. Both Renee and Taffy tossed their towels over the shower curtain rod so they could re-use the towel again later while Tommy hung his on the side of the tub so the excess water could drip into the tub.\n\nBoth girls brushed their hair and Tommy used the comb for his hair. When they were finished, Taffy opened the bathroom door and saw her mother standing in the hall. Immediately Tommy covered his cock but Taffy and Renee stood facing their mother without covering themselves. Taffy, smiled at her mom and said, \"Oh you're back from shopping already.\"\n\n\"It's two o'clock in the afternoon,\" Joy said sternly, \"I'm positive you'll have a good excuse for all three of you being in the bathroom together and all of you naked.\"\n\nTaffy put on her best little girl's face and said, \"As a matter of fact, yes there is a good reason for all of us to be in the bathroom together. We, all three of us, just finished taking a shower together. Each of us washed our own body, we dried our own body and we feel comfortable being naked with each other.\"\n\n\"I've been doing some reading about nudism and I think it's a wonderful idea. I'm surprised you and dad don't know about it since there was a huge sexual revolution in the sixties and both of you were born after that time. I'm sure you've heard about Woodstock and all the people who attended that, many of them remained naked or in some state of nakedness throughout the weekend.\"\n\n\"I can go on and on but the one thing that kind of spiked our conversation about nudism is the fact that daddy was so nonchalant when he said that he knew when all of us only wore our tee shirts without panties. Mom, if dad isn't all that concerned, if we wear panties or not, why would he be concerned if we were nude?\" Taffy finished saying.\n\nBoth Tommy and Renee were all smiles when Taffy finished speaking and it was Tommy who said, \"I agree with Taffy.\"\n\nJoy stood in the hall with her mouth open for a few seconds as she recovered from Taffy's explanation. Finally she said, \"Our friends, Lorraine and Bert are down stairs, I hope you weren't planning to go down there like that.\"\n\n\"Actually mom, we had talked about doing just that.\" Renee stated, \"We wanted to be open and honest with you and dad. We were going to be down in the living room watching TV when you arrived home. It didn't cross our minds that your friends would come in. I guess we'll have to fall back to plan B. Taffy and I will go put on our tee shirts and Tommy can put on his boxers. But mom, our plan B didn't include us wearing panties and it did include us wearing shorter tee shirts than the ones we use to sleep in. Is that alright with you? We don't want to embarrass you or dad in front of your friends.\"\n\n\"Oh my word,\" Joy shook her head, \"Tommy, you can let go of your cock now, the only one who hasn't seen it is me and I don't really mind if you are naked or not. I told your father something like this would happen someday. All of you kids are close in age and your father was right when he said all of you are used to running around in the house with little or no clothes on. Actually, I should be shocked that it took so long for you to feel this comfortable with each other.\"\n\n\"I guess I'm going to leave it up to the three of you to decide what you feel comfortable doing. If you still want to come down the way you are, I won't stop you. If you want to use plan B, that will be up to you as well. However, please let me know what you are going to do so I can support you.\"\n\n\"What do you mean you'll support us mom?\" Tommy asked.\n\n\"If you are going to go down stairs with nothing on, you'll have to give me a second to go to my room and remove my clothes or if you are going to use plan B, I'll have to find a short tee shirt and put it on, so we'll be unified when we go down there.\" Joy announced.\n\n\"What about you Lorraine and Bert?\" Taffy asked.\n\n\"Lorraine and Bert have been our friends since high school and yes Taffy; we are not strangers to nudity. It's just that when the first two started getting older and they grabbed our body parts that hung down, your father and I started wearing minimal clothes around the house. As years went on, and all of you grew older and had friends over for a few hours or overnight, it was just as easy to wear whatever clothes we wore for work and play.\"",
        "\"All of you are old enough now to make choices on your own so I don't care what you wear or don't wear. From what I see, each of you has done an excellent job maintaining the body your father and I gave you. You should be proud of your nude body and never be afraid to be free of textiles. Now, do I take off my clothes or do I wear only a short tee shirt?\" Joy finished saying.\n\n\"Mom, if you don't mind,\" Tommy said in an authoritative voice, \"If the girls are going to go down stairs nude, I'd consider it an honor to help you take off your clothes.\"\n\nRenee moved past Tommy and said, \"I'm up for this if you are Taffy.\"\n\n\"Then it's settled, Tommy help mom take off her clothes.\" Taffy offered.\n\nTommy slowly and methodically undressed his mother and when she was reduced to just her panties, Tommy got down on his knees in front of her and looked up at his mom saying, \"I'm going to uncover the place from which each of us entered this world. This is a moment I never thought would happen but I am so glad it is, I love you mom.\"\n\nTommy started to pull down on his mother's plain yellow cotton bikini style panties. Although she had carried and given birth to five children, she had maintained a pretty good body shape. Their mom only had a little paunch which was covered in light pink stretch marks. Tommy paused for a moment when his mom's bald pussy lips appeared before he continued to pull them down. The center of Joy's panties stuck to her pussy for a moment before it popped free. She stepped out of them and Tommy left them lying on the floor. He looked directly at his mom's pussy then reached out with his hand to touch it. Joy saw what he was doing so she intentionally stepped one foot away from the other and gave her son room to explore and touch her between her thighs. Tommy slipped his middle finger inside his mother's pussy and he leaned forward and kissed it. Joy visibly shivered and a low moan escaped her lips as she reached down and placed her hands on the back of her son's head and pull his face forward ever so slightly.\n\nSuddenly they heard, \"Joy, are you coming back down here? Your tea is getting cold.\"\n\nDrawing from her inner strength she responded, \"We'll be right down dear, but get ready for a surprise.\"\n\nTommy stood up and kissed his mother on her lips for the first time ever and she responded by kissing him back. Tommy put his arm around his mom's shoulders since he stood three inches taller than her. Both mother and son looked at Renee and Taffy and their mother asked, \"Are the three of you ready for your nude debut? When we get down the stairs, I want all four of us side by side holding hands. I really think your father is going to like what he sees.\"\n\nThe four of them walked down the stairs and as they walked into the kitchen. All four of them heard an audible female gasp and then, there was silence. Two men and a woman stared wide eyed at the four nude people for a long time before the silence was broken by Joy. \"Honey, remember when I told you someday our children would feel comfortable enough with each other that we'd find them nude? Well, today is that day. They felt comfortable enough to take a shower together and their plan was to sit in the living room nude watching TV when we arrived. We got back sooner than they anticipated.\"\n\nAll four of the new arrivals stood side by side and not one of them tried to cover their nude body. The four stared at the other three and it was obvious the three were looking at all the parts of the nude people. Finally Joy said, \"Well Dana, I present to you, your son Tommy who has been fortunate enough to have your size in every way, and your daughters Renee and Taffy who have such like bodies, except for their hair color, they could be mistaken for twins.\"\n\n\"After your little speech this morning about how you could tell when we wear or didn't wear panties under our tee shirts, it spurred them to start a conversation about nudism. I'm not going to repeat our whole conversation we had upstairs but the three of them want to be able to walk around our house nude, as they are now. I'm nude because I support their decision.\"\n\n\"All three of you sitting there with your eyes bugged out, know when we were younger, we spent plenty of quality time together and most of it was spent nude. As I see it, all of you can sit there and stare at us or you can join us, either way, we are going to remain nude.\" Joy finished saying.\n\nDana was the first to say, \"Yes, you predicted someday our children would end up nude, however you were mistaken, they aren't children any more. I'm not disappointed they've chosen to be nude and if they don't mind, I'll lend my support by taking off my clothes as well. Renee, Taffy I don't want you to be offended, but seeing your nude bodies, has given me a hard-on just like your brother has a hard-on.\"\n\n\"Daddy, may we help you take off your clothes like Tommy helped mom take off her clothes upstairs?\" Taffy asked.\n\n\"Of course you may. Joy I'm so delighted over this most recent development.\"\n\nDana stood up and both his daughters quickly walked over to him and immediately started taking off his clothes. When they reduced him to only wearing his boxers with a big lump in the front of them, both girls sunk to their knees and simultaneously reached up and slipped their thin fingers into the waist band of his boxers and pulled down slowly like Tommy had done with his mother's panties. When their father's cock popped free of the elastic waist band, the girls pushed the boxers to the floor.\n\nAs their father looked down, both girls reached out and wrapped their thumb and index finger around his cock and took turns first kissing the head of it and then sucking the head of it into their mouth for a few seconds. Their father told them to stop but neither of them listened. He tried to push their heads away from his cock but they didn't budge. After a few minutes the girls stood up and one hugged him from each side. Their father put his arms around them and pulled them close to his now naked body and savored their young titties pressed against his chest.\n\nTommy finished undressing Lorraine and Joy helped Bert take off his clothes. Now all seven people were completely naked and Lorraine said, \"This is just like the old days Joy.\"\n\n\"What did you guys do in the old days?\" Tommy inquired.\n\nLorraine replied, \"Tommy it wouldn't be right to kiss and tell. I guess it would be ok to tell you that we spent plenty of time like this. There's a place not far from here where we used to spend many a summer evening, skinny dipping with anyone who showed up. We weren't hippies or anything like that; we just enjoyed the company of our friends.\"\n\n\"Tommy the old days as you call them weren't that many years ago. I want all three of you to understand your parents, Lorraine and me, along with our other close friends are not that old, yet. We are still young enough to enjoy life. We used to do a lot of things together, besides going skinny dipping. Bowling, shooting pool, pitching horse shoes, playing soft ball on a mixed league, to name a few activities.\"\n\n\"The TV you watch today on cable or satellite dish didn't exist when we were younger. We only had a choice between ABC, NBC and CBS and that was it. We didn't have cell phones or computers or the internet so we used to actually go and visit our friends and family, instead of texting them. This area used to be mostly farms with open fields instead of the houses that now line the roadways. Oh, and we used to have drive-in movies where we could go and watch movies and make out with our best girl. Our cars had bench seats both in the front and back. The seats were big enough so we could double date and each couple had room to stretch out if they wanted.\" Bert said.\n\n\"Hey wait a minute there Bert.\" Joy said, \"You guys were on top and it wasn't your head that bumped into the arm rest on the door, right Lorraine?\"\n\nTommy, Renee and Taffy started laughing and Lorraine said, \"That's right Joy. There was many a night I went home with a sore spot on top of my head from the banging it took while ole Bert here, was getting some pussy.\"\n\n\"So the three of you want to be nudists now?\" Dana asked.\n\n\"Yes daddy,\" Renee replied, \"As you can see we came down here with mom, knowing Lorraine and Bert were down here with you. The only thing we are losing is the tee shirt; you made the comment this morning that you could tell when we weren't wearing panties so why wear the tee shirt.\"\n\n\"I suppose you're right honey.\" Dana replied, \"I don't mind if you want to be nude but what about when you have your friends come over? The reason your mom and I started wearing clothes was so we wouldn't embarrass you and your friends. I know we may seem old to you and I say that because our parents seemed old to us, when we were your age. You've already heard, your mother and I used to be nude most of the time.\n\n\"Daddy,\" Taffy said, \"I think it should be the responsibility of the family member who's having a guest come over to explain we are living as nudists now. That family member can inform the guest they will most likely see someone nude when visiting and leave it up to the guest to decide if they want to come or not.\"\n\n\"You know, before we get too far, we need to let your older brother and sister know what happened today. Let's have a family meeting tonight after dinner.\" Joy said.\n\n\"That's and excellent idea Joy,\" Dana said, \"We've always discussed our family situations that way before, and there's no reason to change things now. In the meantime, I'll say it's up to the individual to make a choice to stay nude or not. I hope you don't mind but I think it will be fun to be nude and watch the ball game in a little while. Lorraine, Bert you two are invited to stay for dinner if you want to.\"\n\nEveryone in the kitchen expressed their interest in remaining nude so Taffy, Renee and Tommy excused themselves and went back upstairs. Taffy went to her room to call Connie, while Renee and Tommy went to Tommy's room.\n\nWhen Connie answered the phone Taffy could hear the disappointment in her voice. That was short lived when Taffy invited Connie over to her house and informed her all she needed to wear was a sundress or something she could take off quickly. Connie blurted out a sting of questions but Taffy put her off and told her to hurry up and get to her house and she'd answer all her questions when she arrived.\n\n******************\n\nIt was light outside but the sun had not risen above the horizon when Terri and Joanna woke. They got out of bed and looked at Hanna who was still sound asleep. Terri held her finger up to her lips then pointed towards the bedroom door. In the hall, Terri greeted Joanna in a hushed voice saying, \"Good morning sweetheart.\"\n\nJoanna held out her arms and stepped towards Terri and they embraced while they kissed each other on the cheek to avoid morning breath. Joanna allowed her hands to drop down along Terri's smooth back until she reached her ass cheeks. Terri responded by doing the same to Joanna. They cupped the other's ass cheeks and pulled, resulting in their pubic area being pressed tightly together. Terri responded with, \"Uuuummm, I love being held especially first thing in the morning.\n\n\"Terri, you are a very special person,\" Joanna whispered, \"You don't have to wait until mornings to get a hug. Anytime you want or feel the need for a hug, you can count on me to give it to you.\"\n\n\"I've got to pee!\" Terri said with a giggle. \"Let me go or I'll pee on you.\"\n\n\"Oooo Terri, you kinky lil girl, you!\"\n\nJoanna released Terri and she hurried towards the bathroom. Joanna followed her and stopped at the sink and picked up her toothbrush and toothpaste. Terri finished on the toilet followed by the bidet and then she stepped into the shower. While washing her body Terri said, \"Joanna, I have to meet Leyanni at the cafeteria this morning. I volunteered to help her with some of the arrangements especially the ones pertaining to Dan and Beth. I'm probably going to be with her all day. I wanted to tell you so you wouldn't worry about me.\"\n\n\"Could you do me a favor?\" Joanna asked as she sat down on the toilet.\n\n\"Sure, anything.\" Terri replied.\n\n\"I know you are going to have your cell phone with you, would you please text me during the day and let me know where you are. That way I can stop in that area and eyeball you once in a while, without disturbing what you're doing.\" Joanna said as she stepped into the shower with Terri.\n\n\"No problem,\" Terri replied.\n\nTerri stayed in the shower and helped Joanna wash her body. When they finished they stepped out and helped each other dry. Terri picked up her bottle of scented moisturizer and as she squirted some in the palm of her hand, Joanna took the tube from her saying, \"I'll help you with that.\"\n\nTerri didn't argue with Joanna. She allowed Joanna to turn her body so she stood facing her. Joanna's hands tenderly and thoroughly rubbed the moisturizer into Terri's skin. When Joanna finished Terri offered to return the favor but Joanna declined saying, \"I'm going to go for a run, I'll have to shower again before I get something to eat. However, don't lose that thought; I'll take a rain check if one's available.\"\n\n\"Most certainly,\" Terri replied, \"When you are ready, I will be too.\"\n\nTerri finished by brushing her hair and her teeth and last minute personal items before she told Joanna she was headed up to the cafeteria. She let Joanna know she had her cell with her and then disappeared out the door.\n\nAfter Terri left, Joanna stepped out on the porch with her running shoes in hand. She saw Mary, Shelly, Ted, Marion, Tony and Patty standing on the beach by the lounges, so she left her shoes on the porch and walked the short distance to her friends. When she got close she said, \"Good morning.\"\n\nEveryone turned and greeted Joanna in a hushed voice and then pointed to the reclined lounge chairs. Joanna looked and saw four nude people sleeping on the lounges. With a closer look Joanna discovered that both Tom Banks Sr. and Jr. along with their wives were still fast asleep. Tom Jr. was sleeping on his left side with his right leg over his wife's right leg. Her left leg was parted enough so anyone passing the bottom of the lounge would have a perfect view of her bald pussy. Tom Sr. was in a similar position but he had his left leg over his wife's left leg. She likewise had her legs spread slightly.\n\nAfter checking out the sleeping people, all eyes turned back to look at the horizon. Mary spoke softly saying, \"Look, there's the sun, barely peeking over the water.\"\n\nThe group stood and watched the sun rise until the round circle of fire shone brightly over the Eastern horizon. Ted remarked how beautiful it was to be standing on the island with nothing visible, other than the ocean, between them and the sun. Everyone agreed with him.\n\nAfter a few more minutes of meditation everyone turned to look at each other in the small group. A quiet discussion started and when Joanna mentioned that she was going to go for a run, \"Would you like some company?\" Ted asked\n\n\"Sure if you think you can keep up.\" Joanna replied with a wide smile and a wink at Ted.\n\nTed laughed before saying, \"Listen lil girl, I've been running since high school.\"\n\n\"From whom?\" Joanna inquired with a chuckle, causing everyone else to laugh as quietly as possible.\n\n\"Ok smart ass,\" Ted replied, \"I'll go get my running shoes, I'll be right back.\"\n\nJoanna smiled and said, \"All I have to do is put on my running shoes and I'm ready. I'll meet ya back here in a few minutes.\"\n\nMary, Shelly and Tony asked if they could join her and Joanna said, \"Hurry up and go get your shoes on.\"\n\nWithin ten minutes everyone was back with their favorite running shoes on. They took a few more minutes to do some stretching exercises and then they were off. Marion and Patty watched as the small group of runners took off at a slow pace. Both women watched the combination of male and female ass cheeks bounce rhythmically with each running step.\n\nAs Kim, Beth and I walked towards our cabin we saw Marion and Patty standing by the lounges so we walked down to them and exchanged good morning greetings with them. They immediately hushed us and pointed towards the sleeping Banks family.\n\nBoth Marion and Patty looked at our faces and it was Marion who asked, \"It doesn't look like any of you got much sleep last night, did you?\"\n\nKim spoke up saying, \"It was a long lovely night in paradise and I wouldn't trade it for the world. God, we had so much fun.\"\n\nBeth reached over and lifted my limp dick before she said, \"Have you ever see this thing totally deflated before this morning?\"\n\nBoth Marion and Patty started laughing. Kim and Beth excused themselves and went up to the cabin to get cleaned up. When they returned fifteen minutes later, Beth was carrying cups, napkins and sugar and Kim was carrying a pot of coffee and the cream. Everyone gathered around the small beach table and waited to pour coffee in a cup. Once everyone had a cup, we moved to the lounges and sat down.\n\nMy first cup of coffee went down so smooth and few minutes later, I stood up and poured myself a second cup. I offered to refresh everyone else's cup but they declined saying their cup was still full. So I sat down and enjoyed my second cup and enjoyed the view and the present company.\n\nAfter a few minutes of talking quietly, we heard some whispering and realized both Tom Sr. and Jr. along with Janet and Faith were awake. We watched them stretch and heard a few moans as the nighttime kinks were worked out. Both couples sat up about the same time and adjusted their lounge so they could remain sitting.\n\nWe exchanged good morning greetings before Tom looked at me and said, \"Ghezzz Dan, you look like you've been up all night. Actually it looks like all three of you could use a couple extra hours of sleep. I thought we came here to get some rest.\"\n\nBeth smiled as did Kim, before she said, \"We got some alright, but Tom, it didn't have anything to do with resting.\n\n\"I don't suppose you'd care to elaborate on what you meant, would you?\" Tom queried.\n\nOnce again Beth picked up my cock, stroked it a couple of times before saying, \"Tom, I can't remember ever seeing this wonderful piece of manhood this flaccid. It received a real good work out last night.\"\n\nJanet smiled and said, \"Speaking of limp dicks, both Toms are soft this morning too. Faith and I worked them over pretty well last night. Come to think of it, I haven't had this much sex in years. Thank you once again for bringing us to this wonderful place.\"\n\n\"Oh yes,\" Faith said, \"I can't thank you and Beth enough for giving our family an opportunity to find real love. Tom and I are going to raise our family in the spirit of the love we just discovered.\"\n\n\"Now that all of you are awake,\" Beth said, \"I'll go up to the cabin and make another pot of coffee.\"\n\n\"Yes, I'd love a cup of coffee but before I drink coffee,\" Faith replied, \"I have to pee.\"\n\nFaith stood up and stretched again before she joined Beth and the two of them walked towards our cabin. Janet waited a few moments before she jumped up and ran after Beth and Faith. It wasn't long before both Toms excused themselves and then walked to their cabin to take a leak.\n\nBeth, Faith and Janet came back carrying a tray with more coffee, cups, sugar and cream. Both Toms rejoined us as we sat or stood on the white sand of Hawaii and enjoyed our fresh brewed coffee, the smell of the ocean and sound of the surf.\n\nAfter a short term general conversation, we decided we needed to take a shower before we go to the cafeteria for breakfast. Everyone agreed to meet back at our cabin and we would walk to the cafeteria together.\n\nJake and Kathy followed Beth, Kim and me to our cabin. We managed to get everyone through the shower without any real sexual activity. I didn't count the touchy feely stuff which happened during washing each other's body. Jake managed to get Kim to wash his body and I stayed in the shower long enough to wash both Beth and Kathy.",
        "It wasn't long before the first people came back to our cabin. Fresh from the showers and our individual morning hygiene rituals, we greeted everyone out in front with renewed vigor.\n\nTom and his family were verbally poking fun at each other and it was great to see a side of Tom I'd never seen before. Everyone was so jovial.\n\nAfter everyone arrived, even those who had taken a run and those who had not been out on the beach this morning, our large group started walking towards the cafeteria. Jake was apparently feeling frisky. While we walked, Jake ran ahead of Kathy and squeezed between Beth and Kim. He wrapped his arms around both of them and looked back over his shoulder towards Kathy saying, \"Honey, look what I found.\"\n\n\"Jake be careful,\" Kathy replied, \"I don't want you to hurt yourself. Remember we had to put that old bull down after he tried to jump that heifer last year.\"\n\nWhen the laughter quieted down Jake replied, \"But honey, remember that old bull slipped in the ice when he tried to jump that heifer. I don't think there's any threat of us getting an ice storm here.\"\n\nI slowed down and wrapped my arm around Kathy before saying, \"Don't worry, soon to be mother-in-law, you have a young buck beside you and I can take care of your needs if the old bull falls short. No pun intended, mind you.\"\n\n\"Kathy laughed and pulled my body tighter to hers as she said, \"Dan Morrison! Today is my daughter's wedding day, look at her, she's so radiant and beautiful! It's one of the biggest days in a girl's life and here you are trying to proposition her mother, how dare you cheat on my daughter?\"\n\n\"I guess you've been stuck out there in the country too long my dear Kathy with a (K).\" I said with a smirk on my face, \"Don't you know it ain't cheatin' if Beth participates?\"\n\n\"OH, and just in case you haven't heard,\" I said as I returned the hug, \"I'm marrying your daughter because I love her. The fact that she could be a model makes no difference to me.\"\n\n\"You're a smooth one, Dan Morrison.\" Kathy said.\n\nOur joking and kidding continued right up until we reached the doors of the cafeteria. When we arrived, Jake opened the door and held it open for most of us to pass through before Ted took over holding the door open. The younger people went through the serving line and then found some empty seats near some people already eating their meal. They asked if the empty seats were reserved. When they found out the seats were open, they sat down and introduced themselves around the tables in the area.\n\nI stopped and looked around the cafeteria and noticed there was a much larger group of people eating together, than we'd seen previously. Out of the corner of my eye I saw Marsh, on the other side of the room, using hand signals, trying to get my attention. I pointed toward Beth and Kim but Marsh shook his head no. I leaned towards Kim and Beth and whispered Marsh wanted to see me. I excused myself and told everyone to go get something to eat and I'd join them shortly.\n\nWhen I got close to Marsh a Mexican looking fellow also walked over and joined Marsh. I extended my hand and shook hands with Marsh and then he introduced me to the Mexican fellow, named Carlos. While we shook hands Marsh asked both of us to follow him.\n\nWe walked into the back office of the cafeteria and Marsh explained to me, he had his mechanic fly down to Mexico and pick up Carlos and bring him to the resort. He told me Carlos had arrived, only a short time ago. I laughed and asked, \"So that was Carlos in that small plane which buzzed the beach while we were on the boat?\"\n\nMarsh laughed and replied, \"My chief mechanic likes to hot dog when he thinks he can get away with it. Yes, that was him coming in just over the surf; he wanted to let me know he was here.\"\n\n\"He's not the only hot dog who's showed off and buzzed the beach. I remember last night ....\"\n\n\"But Dan, I wanted Beth to know her parents were here.\" Marsh said when he interrupted me.\n\n\"Flying upside down is NOT a sure-fired way to let a girl know her parents are safe.\" I countered with a smile on my face.\n\nMarsh laughed as he said, \"Someday I'll take you and Beth for a ride in the Gulfstream. I'm sure you'll love the adventure.\"\n\nBut I didn't bring you back here to talk planes. As you know Carlos made my original wedding rings and I've made arrangements with him to make my wedding rings for today. What Carlos doesn't know is I want him to make me a third ring so I can have Trish stand up and marry me too. Dan, by the end of today, you aren't going to be the only one with two wives.\"\n\n\"Now, the reason I had you come back here is because I've already been in contact with Carlos and asked him to bring some additional ring blanks with him, in case you wanted to have some custom rings made for you and Beth. I didn't know you had the chaplain take you to the jewelry store yesterday and it doesn't matter. If you want Carlos to make rings for you, all you have to pick out what you want and he can make them, before this afternoon. Follow us and he'll show you what he has.\" Marsh said.\n\n\"I love the idea of custom made rings,\" I said as I followed Marsh and Carlos. \"Carlos, if it's possible, I would love to have you make us rings. I never thought of it until you mentioned Trish, but I'd love to have a third ring made for Kim which would show the unity between the three of us. I love your idea of having Trish included in the ceremony and I think I'll include Kim also.\"\n\nMarsh went through the procedure to open the vault and when it was open, all three of us stepped inside. Carlos walked over to his safe and opened it before he asked me to step forward and look at what he brought with him. Carlos said, \"I have settings in white and yellow gold as well as some platinum and I can put almost any of the stones in a setting for you.\"\n\nI was amazed as I marveled at the selection Carlos had. I really wanted him to make rings for me but I wanted Kim and Beth to pick out a setting they liked. Unlike Marsh, I preferred to have the engagement ring separate from the wedding band only because that's what I was used to. I asked Carlos if he could have the rings ready before the ceremony this afternoon and he assured me he could.\n\nHe said, \"All you have to do is choose the settings and the stones you want.\"\n\nCarlo laughed as he pointed towards the end of the vault and said, \"Marsh said if you don't have enough cash in your pocket you can just borrow some money out of his stash. Right Marsh?\"\n\nI looked in the direction Carlos was pointing and suddenly I recognized what he was pointing at. Stacked on the far wall was a lot of paper money. I said something like, \"HOLY SHIT MARSH, what are you doing with all that money in your vault? It looks like you have millions of dollars stacked up there.\"\n\nMarsh gave us a short explanation how and why the money was in the vault and when he finished, his point was very clear. I told him I dealt with big numbers with my company but they'd never let me take that much cash out and stash it away in a private vault. However, I told him his reasoning sounding like an excellent idea.\n\nCarlos told me he wanted to eat some breakfast and then I could bring Kim and Beth back to the vault and they could pick out their rings along with the diamonds or other stones they wanted. I asked Carlos if he had any bracelets or necklaces and he opened another drawer and then opened a black velvet cloth, there laid the most spectacular necklaces I've ever seen. Carlos opened another black velvet cloth and this time I wasn't surprised to see very beautiful bracelets. Carlos told me, everything I was looking at was handcrafted by him. I told Carlos I definitely wanted to bring Beth and Kim to see the jewelry when we finished eating.\n\nCarlos added, \"If you want me to use any of the stones in your current rings, I can do that as well.\"\n\nAs Marsh was closing the vault, I told Carlos I only had my credit cards with me. I told him I didn't have any checks and no real big amount of cash so I asked him how he wanted to handle my payment for the rings.\n\nCarlos looked at me and said, \"Dan, I know you are here because my brother Marsh likes you and trusts you. If my brother trusts you, I will also. We can make arrangements for you to send me a check or give it to Marsh, when you get home.\"\n\nAs the three of us walked back out into the dining room we noticed some people were still going through the serving line choosing their breakfast. I went over to the serving line and selected what I considered a very good breakfast before I joined Kim, Beth and her parents. I took my place between the two loves of my life. Both of them looked at me and as if they rehearsed their question they both asked at the same time, \"What did Marsh want?\"\n\nThey giggled at each other because they both said the same thing at the same time. I waited to see if my stereo sounding, soon to be wives, had any more questions for me. When they said nothing, I replied, \"It's not what Marsh wanted but what he had to offer me, well maybe not what Marsh had to offer but what Carlos had to offer me.\"\n\n\"Who's Carlos?\" Kim and Beth inquired in stereo again.\n\n*******************\n\nWhen Marsh returned to the cafeteria area, he saw Mike stand up from the table where Becca and Trish were seated, wave his hand then turn and walk over to the orange juice machine where he and refilled his glass. When he finished filling his glass he turned around and saw Katie walking up to him with a huge smile on her face. She said, \"I saw you when I first came in, but you were sitting with Becca and Trish and I didn't want to interrupt you, in case you were discussing business. Are you busy now? Would you like to come and sit with us, over there? We are talking to a few other people like you and I told my friends you were a very cool guy.\"\n\nMike smiled at Katie and said, \"Sure I would Katie, please lead the way.\"\n\nKatie was surprised that Mike remembered her name, especially with all the other people he must meet. She led the way back to the table and Mike pulled an empty chair over and sat down with everyone. Katie introduced Mike to everyone and included Mike in their conversation as if he was an old friend. All of the Turner employees answered everyone's questions in general terms, instead of giving specifics. For the most part, the young adults were fascinated by some of the stories they heard.\n\n*******************\n\nI looked around the table before I said, \"Carlos is a jeweler and he made Marsh and Becky's wedding rings and the ring Marsh gave to his daughter Elsie. Marsh had him make a ring for Becca. He brought some very beautiful stones and settings with him. My dear lovely ladies, Carlos can make custom rings for us if we want him to. When we finish breakfast, we can go into the back with Carlos and he can show you what he has. I'm sure you'll be impressed and I'd really love to have some custom rings made for all three of us to wear.\"\n\n\"Oh Dan,\" Beth exclaimed, \"What about the rings we bought yesterday at the jewelry store? We'll have to take them back before we leave.\"\n\n\"No sweetheart,\" Kim replied, \"I have a set of rings Dan gave me when we were married and we'll keep our individual rings and have our custom rings made for the three of us.\"\n\n\"OMG .... That would be so wonderful!\" Beth screamed, \"This afternoon our three hearts will be joined as one and three identical rings would show the world our commitment.\"\n\n\"What a wonderful idea,\" Kim added, \"I'd love to have identical rings to show our unity.\"\n\nI looked at both Kim and Beth before I said, \"Then three identical rings we shall have. Beth my dear, since we are going to have identical rings, could we include Kim in our vows this afternoon? Both of us can marry Kim and seal our love before God and our friends.\n\n\"Dan,\" Beth cooed as she hugged me, \"I love you so much.\"\n\n\"I love you too Mr. Morrison.\" Kim hugged me from the other side.\n\nFrom across the table Jake and Kathy stared at us while we hugged. It was Kathy who finally broke the silence at the same time a tear escaped from her right eye as she said, \"This is truly going to be a special day for all of us. I never would have imagined all of this.\"\n\n\"Yes Kathy, I concur!\"\n\n\"Never in my wildest dreams, did I think I would fall in love with the two most beautiful women in the world. These two beauties are going to be my wives this afternoon.\"\n\n\"Hey, it looks like Carlos is finished eating, if you two ladies will join me, we'll go see what we can have him make for us. Jake, Kathy, please excuse us.\" I said.\n\nThe three of us stood up and walked over to Carlos. I introduced him to both Kim and Beth and told him we wanted to have three rings to signify our commitment to each other. Carlos asked us to follow him, which we did. After Carlos opened the vault he opened his personal locked cases and showed us what he had and told us what he could do.\n\nBoth Kim and Beth's eyes went wide as with any female who looked at the beautiful treasures would do. The room was filled with plenty of ohhhhs and awwwws as they stared at all the jewels in different shapes and sizes on the trays. When they looked at the different settings and it didn't take them long to choose three matching rings. When Beth questioned Carlos why he had several settings with three matching rings, two being female and one being for a male, Carlos smiled and quietly said, \"Marsh asked me to bring them. I make all my own jewelry. I can do anything you want.\"\n\nCarlos sized our fingers and then asked us what we wanted for diamonds or other gems. All three of us were in a strange situation since none of us had ever looked at unfinished jewelry before. From the bits and pieces we described to Carlos, he took a few minutes and laid out some suggestions for us to choose from or make other suggestions. It was a first time for all of us to actually build a piece of jewelry. After a short while we made a final decision on the jewels and the settings. Our rings were truly going to be very personal to us.\n\nI asked Carlos to show Kim and Beth the bracelets he had. Once he un-wrapped the black velvet I explained that I'd like Kim and Beth to choose four bracelets, one for Kathy, Jenna, Terri and Hanna. The two of them conferred for a few minutes as they picked up the various bracelets and laid them over their wrist. Finally both of them came to a decision which bracelets to buy. Carlos told us he had to get to work. He told us not to worry about the rings, he would be in the garden way before the ceremony and he would have them with him. We thanked Carlos and told him we would see him later. All three of us shook his hand and the girls giggled all the way back into the cafeteria.\n\nI said, \"Remember, don't tell Kathy, Jenna, Terri or Hanna about the bracelets.\"\n\nBeth looked at Kim and me before she said, \"Dan, I think we should go back to the cabin and the three of us get a couple hours of sleep. It's going to be a very long day if we don't. I don't want to look like shit in our wedding pictures.\"\n\nI smiled and hugged both Kim and Beth to me and said, \"I love both of you and I agree. We have time to get two hours but Beth you should call Leyanni and let her know what we are going to do. That way she can send someone down to the cabin if they need both of you early to get your hair done.\"\n\nBeth lifted her cell phone and found Leyanni's number. She talked to her for a few minutes and when she finished she pushed the red button and disconnected the call. Beth smiled and said, \"Leyanni told me, no problem, she'll have hair stylists ready to do our hair when we wake up. She said if she needs us, she'll send someone to the cabin to get us.\"\n\nThe three of us walked back to the cabin where we found Jake and Kathy. We told them we were going to get a couple of hours sleep and Kathy said she'd wake us in two hours if we wanted. We accepted her offer and then went into the bedroom to sleep.\n\n*******************\n\nThe young people from the Morrison group stayed in the cafeteria even after they finished their breakfast. They found out the two young Hawaiian girls were sisters named, Lolana and Kailani. Kailani told everyone she was the older sister and they were permanent residents of the resort because their mother worked for Leyanni. Everyone took turns telling a little about themselves. Soon all the young people were laughing and having a great time together. Andy had walked in with Katie and when they sat down at the table he ended up being seated between Katie and Kailani.\n\nKatie participated in the conversation with everyone but Andy seemed to be distracted by the beautiful young lady on his right and only added something now and then. Out of the corner of his eye along with any excuse he could muster to look to his right, he noticed Kailani's delicious small breasts and her rippled abdomen. Another thing that didn't go unnoticed was her long black hair was fashioned in a ponytail and the end of it rested on the seat of the chair.\n\nAndy engaged Kailani in a private conversation and they seemed to get along just fine. Andy asked her about her life in paradise and she told Andy about her studies and her exercise program which was very stringent. She told Andy her and her sister Lolana trained with some of the Turner people who were stationed at the resort. Andy immediately complimented her on her abdomen and she thanked him. She told Andy every morning before breakfast, both her and her sister go to the gym and participate in a rigorous exercise workout, followed by an additional half hour of Karate training.\n\nKailani asked Andy about himself and he was able to paint a very clear picture of his town, home, school and his family. By the time he finished Kailani smiled and hugged Andy. Andy asked Kailani if she and Lolana would like to hang out with the group. Kailani told Andy she'd have to talk to her mother but she didn't see a problem, since the whole resort is secure.\n\nAndy asked if he could go with her and maybe she could show him around a little before he had to be back for the wedding. Kailani, Lolana and Andy excused themselves from the table and the three of them stopped by the table where Amy and Ken were seated and Andy asked his parents if it was ok for him to go with the girls. Amy told him he had to be back at the cabin before noon so they could get ready for the weddings. Andy agreed and off the three of them went to go see the girl's mother.\n\n*******************\n\nLeyanni was involved in a conversation at a table when one of her staff whispered something in her ear. She nodded a few times and then reached over and tapped Terri on the shoulder as she stood up. Terri stood up also and the two of them walked out the back doors of the cafeteria. They headed for the helipad and welcomed the new arrivals. There were plenty of questions and some were answered while others were put on hold until later. Leyanni was quick to let everyone know they should go into the cafeteria and get something to eat.\n\nWhen Colleen, Brianne, Rachael, Jen, Jean and Josh Smith walked into the cafeteria through the back doors, Patty and Tony were in the serving line getting something more to eat. Patty saw the new arrivals and suddenly she recognized her mother and sister. With a loud shriek Patty turned and ran to them and pulled both into a hug. She asked, \"When did you arrive? I didn't know you were coming. Where's dad?\"\n\nColleen smiled and said, \"It seems Terry decided she wanted your sister Brianne and her friend Jen to watch some kids during some party this afternoon. To make a long story short, Rachael picked us up at home last night and we got on a private plane with Holly and her two kids. Holly is going to DJ at the party.\"\n\n\"Ok, I know strange things have been happening to us lately but where's dad?\" Patty asked.\n\n\"Oh yeah, about your father,\" Colleen said with a giggle, \"When Rachael called me last night, I told your father Brianne and I were going to spend the weekend with Rachael and Jen. He told me that was ok with him and he even gave me a couple hundred dollars for extra spending money. I think he was looking forward to no females at house along with a golfing weekend with his buddies.\""
    ],
    "authorname": "RecHiker",
    "tags": [
        "mother son incest",
        "mother",
        "sister",
        "brother",
        "father",
        "brother sister sex",
        "nudism",
        "nudist",
        "exhibitionist",
        "voyeur"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-morrisons-ch-26"
}