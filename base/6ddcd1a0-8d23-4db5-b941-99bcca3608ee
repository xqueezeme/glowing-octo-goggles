{
    "title": "A New Way of Seeing Things Pt. 04 Ch. 02",
    "pages": [
        "Thanks to all who have been posting comments and sending e-mails about what they like (and don't like) about this story, and where they hope it might go. One of the benefits from my hiatus is that it gave me plenty of time to think about all those requests and suggestions and put my own spin on them to turn them into fresh ideas. Now to find the time to write them down! \n\nStandard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\n\"Now?!\"\n\n\"Why not?\" \n\nThey met Tim coming out of the house, his erection flagging a bit and hanging heavily over his balls. \"Cricket likes my new style,\" Gwen quickly explained after catching his quizzical look and running her hand between her legs to help clarify. \"She wants hers like that, too.\"\n\nHer was only mildly distracted by the sight of his wife rubbing herself and quickly figured out what they had been discussing in his absence, wondering where he fit in with all of this other than continuing to hold their drinks and the door. \"Oh\u2014uh, okay?\" \n\n\"Since you didn't get to do mine, would it be alright if you did hers instead?\"\n\nTim's eyes ducked to the young woman's wispy bush before his manners brought them up to her eyes, an uncertain smile on his lips. \"Oh\u2014uh\u2014is it alright with Cricket? I mean, I've never done that before...\"\n\n\"If you want,\" she replied with a nervous giggle. \"I trust you.\" \n\n\"Well, uh okay then, now?\" He absentmindedly handed them their drinks. \"What do I do?\" \n\n\"Let's use our bed,\" Gwen suggested. \"I'll get the things you'll need.\"\n\nCricket and Tim quietly stood by, trading embarrassed smiles before looking away while Gwen hurried in and out of the room, dropping off the supplies she had gathered. \"Okay Cricket, lay down on the towel,\" she said, taking charge after the preparations were complete. \n\nThe young woman smiled shyly and nervously brushed her hair back behind her ear before complying, lying stiffly with arms crossed over her breasts, thighs pressed together. \"Relax, Cricket,\" Gwen soothed. \"If you would rather I do this instead, or not do it all\u2014\"\n\n\"NoNoNo,\" she squeaked. \"I want to, I've just never...like this...\" \n\nGwen smiled. \"First time for everything. But, uhh, Tim can't do it if he can't get to it...all of it...\" She arched her eyebrow meaningfully and smiled. \"He HAS seen you down there before, remember?\"\n\nI sure do, Cricket thought with a deepening blush, remembering the circumstances and how good his tongue had made her feel. Her thighs shifted apart just enough to show the towel beneath them, her legs still dangling off the bed. \n\n\"Here,\" the older woman offered, stepping in to grab her right ankle and pull it out while bringing the foot attached to it up on the bed. She repeated the process with the left then stepped back to give Tim access to his workplace. \"Okay, it might be easier for you to kneel down,\" Gwen instructed while reaching for the scissors. \"Start with these. Get some of the longer hair between your fingers and cut it. Don't pull too hard, though...\" \n\nHe took his position. \"Yeah, I know about that.\" Tim's first cuts were tentative, not wanting to get the blades too close to the delicate skin beneath, reminding himself to concentrate on the job rather than the view. Like she said, you HAVE seen-and tasted-it before, but it was something he never got tired of looking at...\n\nGwen directed him to some stray hairs beside and below Cricket's lips before suggesting the razor. Tim spread the shaving cream sparingly, then after a deep breath gingerly applied the blade with a short stroke over her mons. Bare skin, no blood, he thought with some relief, and tried again. He worked even more carefully when he reached her slit, small movements before rinsing the razor to keep the white fluff from obscuring the view. Soon only small smears of missed cream were left, and Tim looked over his shoulder at Gwen for direction and approval. \n\n\"I think that's pretty good! Use this to get the rest of it.\" Tim took the offered hand towel and gently dabbed the cloth at a little white spot sitting on the skin between pussy and asshole, then after an obligatory \"excuse the touch\" dragged it up her furrow to collect the shaving cream that had collected deep between her lips he had been too afraid to remove with the razor, making Cricket shudder with the contact. \n\nGwen smiled and ran her hand over the young woman's bare sex, her finger dipping into her slit much deeper than Tim's towel-covered digit had, nodding in approval. \"Feels like you got it all.\" She looked up and smiled at Cricket. \"Well, you wanted it bare...what do you think?\"\n\nThe young woman craned her neck to look down her body. \"It's certainly different!\" Her eyes continued on to the man still between her legs. \"Thank you for doing a good job!\"\n\nTim looked down in an \"aw, shucks\" kind of way. \"Wasn't as hard as I thought it would be. Guess all those years of cutting up my own face was good practice after all.\" \n\nGwen reached in and again caressed the young woman's sex. \"It certainly is smooth...\" she again slipped a finger between her folds and easily drew it up through the accumulated wetness. \"Kissably smooth, I'd guess.\" \"Tim checked mine to make sure it was kissably smooth after,\" she announced straightening. \"Would it be alright if he checked yours, too?\" \n\n\"Oh-uhh, sure, if he wants\u2014if you want,\" she said, looking down at the man between her legs, silently willing him to say yes.\n\n\"As long as you don't mind...\" He bent and planted his lips on the puffy flesh above her cleft, then softly kissed the folds where her clit lay nestled beneath. Cricket's hips flexed involuntarily to present it in the hopes he would continue. \n\nGwen reached for a bottle of baby oil. \"Doing alright?\" \n\nCricket looked up through lidded eyes filled with lust. \"Oh, yes...\"\n\n\"Would you like him to keep kissing it?\" \n\nYou mean like he did before?\" \n\n\"If you want...\"\n\n\"God yes, Please!\" The young woman begged, suddenly deciding that etiquette still applied even to this extraordinarily unusual situation and hurried to soften her enthusiasm. \"I mean-if that's alright\u2014with you both.\" Tim knew his answer and was confident of Gwen's. He responded by burying his face deeply between her legs, his nose filled with the smell of shaving cream and her arousal. \"Oh yes, please, that...thank you...\" she breathed. \n\n\"Since it's going to be hard to get this down there right now,\" Gwen said, holding out the oil, \"how about some on your front instead?\" She took her friend's soft moan as a yes and a line was squirted from navel up into the valley formed by two pert breasts, firm hands spreading it over tingling skin. \n\nCricket was aware of those hands gliding over her mounds, gently caressing and teasing painfully erect nipples, but her focus was the man between her legs. There was the rasp of stubble against her thighs like before, and she imagined the feel of his chin and upper lip to be a bit more pronounced now that there was no hair between her and him. It was certainly not unpleasant, though; masculine was the word that her lust-filled brain was screaming out, and their combined wetness was already smoothing the contact.\n\nThe tongue exploring her was unmistakably masculine as well, more rough and insistent than Gwen's, stronger, like its owner. Tim's hands were firmly gripping the tops of her thighs as if to keep her from moving out of range, not that she was even considering that; instead the young woman was doing her best to push harder against the face gently pressed against her sex, trying to direct that unpredictable tongue to spots that wanted it most at that very second. \n\nShe was close to orgasm just a few moments later, Tim sensing it too and redoubling his efforts as if to thrust her over the finish line while Gwen's hand's continued their same gentle smoothing and caressing. \"Oh-oh-oh\u2014\" Cricket's soft chant was suddenly cut off, her breathing stopped in convulsion as the first wave of her climax pulsed from her overexcited clit. She managed to gasp and inhale sharply as the next followed the first, and others followed those. The tongue had thankfully pushed its way into her opening and stayed there as her hips continued to twitch uncontrollably against it, and the young woman became dimly aware of feminine lips gently kissing her own. She kissed back between gasps, her breathing slowly quieting as the waves softened. With a final shudder, she went limp, Gwen's lips eventually withdrawing from hers. Cricket slowly opened her eyes to see her friend smiling down at her. \n\n\"Better?\"\n\nShe giggled self-consciously. \"Wonderful!\"\n\n\"I know how excited I got when\u2014\" Gwen began to explain, quickly changing course a bit and making up a white lie to avoid giving Natalie away\u2014\"my friend shaved mine and how I couldn't wait for Tim to come home. I thought you might have the same, uhh, problem.\" \n\n\"Well, thank you\u2014\" Cricket now looked down at the wet smiling face looking up from between her legs\u2014\"like I said, that was wonderful.\" That word doesn't do it justice, she thought. It was fucking incredible! It would be so easy to get addicted to that, if she wasn't already...\n\n\"Now,\" the older woman said casually, lying down on the bed next to her and scooting down so her ass was on the edge, \"Tim, do you think you could you move one body left and keep doing what you were doing? I promise it will only be for a little bit.\"\n\nHe grinned and shuffled over on his knees. \"Happy to as long as you want.\" \n\nCricket rolled to her side and smiled shyly. \"Can I help?\" \n\n\"I'd love you to.\" The young woman rolled away off the bed and retrieved the baby oil, lightly climbing back on to return the attention Gwen had given her. She bent to gently kiss her after the oil had been properly distributed over a taut stomach and firm breasts; the older woman responding by pulling her close and returning the kiss with enthusiasm.\n\nTim managed to peer over Gwen's bare mons as he tongued her clit, the scene of the two women passionately kissing making him almost painfully hard. He resisted the urge to reach down and stroke himself, knowing it would not take much for him to erupt all over the bedspread and rug There were way better places for what he knew was a healthy load of come to end up and had no doubt he would be taken care of eventually, but not knowing how or by who was only making his impatience worse.\n\nGwen was true to her promise, thighs clamping tightly around the head between them while burying her face in Cricket's neck, resisting the urge to lewdly grunt through clenched teeth with each pulse. With the soft laugh that came with the sudden release of built-up sexual tension she released Tim from his headlock, kissing Cricket on the cheek before letting her go too. The young woman sat back on her haunches and smiled down at her, then looked back at the man still kneeling at the end of the bed. \n\n\"I'm sorry you had to wait so long,\" Gwen said softly, propping herself up on her elbows and smiling down in gratitude at Tim. \"Would you like to come up here and lay back and relax? I'll do whatever you want.\" \n\nWell that answers that, he thought as he rose and crawled across the bed, already thinking of ways to put on a show for their guest. He turned over and lowered himself on to his back, Gwen lounging to his left and Cricket kneeling by his right hip. His straining erection pointed at a spot on the wall above his head, pre-cum oozing from the tip of the wet, glistening head, waiting to be catered to. \n\nGwen used a finger to smear a droplet around the spongy pink skin, lost in thought. \"It really is beautiful, isn't it?\" She said suddenly, looking up at her young friend. \n\nCricket looked up from the finger mesmerizing her. \"It is...I never really thought about it until...but yeah, it really is.\"\n\n\"Of course, the rest of him is beautiful too. I particularly like his chest and bum.\"\n\nThe young woman blushed. \"Me too.\"\n\n\"And his tongue...\"\n\nAnother high pitched nervous giggle. \"...is really, really good,\" Cricket finished.\n\n\"But this\u2014\" Gwen gently grasped his shaft between two fingers and shook it\u2014\"is my favorite.\"\n\nTim had heard that tone from his wife before, when she was evaluating a horse, but women's frank and sincere assessment stroked his ego rather than insulted. \n\nShe let his length go and resumed drawing her finger up and down his length. \"Would you like to take care of this for him instead?\" \n\nCricket again looked up from his cock, eyes wide. \"Me? Really?\" \n\n\"Why not? I don't think Tim will mind, will you?\" \n\nFor Christ's sake, somebody take care of it, his brain screamed, before it goes off by itself! He did his best to remain nonchalant despite his need. \"Nope, if she wants.\"\n\nThe young woman looked down at his length again, studying it. \"How? With my hand, or, like...last time?\" \n\n\"However, you'd like.\" \n\nShe blushed again, a deeper shade of crimson spreading across her cheeks. \"Well, last time didn't go so well...\"\n\n\"Do you mean for you, or for Tim?\" Gwen asked with a smile. \"I didn't hear him complaining, and you were just surprised. I know I was the first time I did that. This time you have a better idea what to expect.\" She swiped a finger up Tim's length, gathering a large drop of his excitement from where it had pooled under his glans, and delicately offered it to Cricket. \n\nThe young woman slid her lips over the offered finger, tasting the salt in the moisture, imagining the scent. Gwen's hand was back at the object of her friend's desire, gently lifting and offering it to her. Cricket looked to her as if for confirmation and got a quick nod in return as the hand lowered the shaft to lie on Tim's stomach. She looked down at the now unattended length twitching in time to the heartbeat engorging it with blood and tentatively extended her own finger to rest just above the loose skin of his sac, then drew it up to the spongy flesh below the tip like some sort of test of her resolve. Tim smiled and groaned with encouragement as she now looked to him for approval, another finger joining the first and then another. She stroked for a moment, marveling at the heat radiating from it, the fingers wrapped around his girth making his hips flex against the pressure. Her stroking slowed, and suddenly, as if sufficient courage had been gathered, she bent at the waist and kissed the bottom of the dark pink head. The young woman lifted long enough to make herself more comfortable, lying beside him with her head just inches above his stomach, then delicately lifted his shaft enough to slide it between her lips. \n\nGwen settled in against her husband, breasts mashed against his ribcage as she kissed him while her hand languorously stroked her friend's hair, shoulders and back in a show of support. \n\nCricket reminded herself to be very careful with her teeth as mouth and hand quickly developed a rhythm, one retreating while the other advanced, the young woman hoping that she would recognize the signs of his impending orgasm and be better prepared as what would inevitably come next. She knew she had options as to how to handle it (gagging and choking was certainly not one of them) but was determined to do it the way Gwen had done before, to swallow his offering and if not enjoy it, at least not make a scene. \n\nGwen broke her kiss. \"Getting close?\" She certainly knew the signs by now; the question was meant more as a warning for the woman with her mouth full of his cock.\n\nTim groaned. \"Uh-HUH...\" He was letting Cricket do most of the work, trying to avoid any energetic thrusting that might overwhelm her, but every once in a while he weakened and flexed his hips to get as much of himself past her lips as he dared. \n\n\"You'll tell her when you're ready, right?\"\n\n\"Uh-huh\u2014OHhh yeah, right there...\"His breath caught at the drag of her lip over the sensitive underside of the head. \n\n\"Does that feel good?\" \n\n\"Oh hell, yeah!\"\n\nCricket was pleased the sounds he was making. He certainly seemed to be enjoying it; men didn't fake that kind of thing, did they? \n\nTim was ready to show her how much he was enjoying it a moment later. \"Okay, get ready,\" he groaned, and the young woman steeled herself. Her lips were wrapped as far down the shaft as she dared before logic kicked in and reminded her the farther the tip was from the back of her throat the farther the warm goo that was about to shoot from him had to go to reach it. She quickly slid her lips up the shaft just below the rim of the spongy head in time for the first jet to pulse from him; even so, the feel of hot liquid splattering against the back of her throat made her recoil a bit as her muscles flexed to push it back on to her tongue while his length slid deeper. Tim's other spurts were gathered there as well, a hot and salty pool on her tongue, until finally he had no more to give. Cricket waited a moment with her lips wrapped around his cock, unsure what to do next, then finally let him slide from her mouth. She looked up at Gwen, a bit of hesitation in her eyes, then with an effort, swallowed hard. It tasted like the time before, just in a larger dose, she decided, saltier and...earthier with a hint of both sweetness and bitterness, maybe? Like I'm some sort of come connoisseur, she thought with wry amusement. But I could become one... that's something I would like to do again, Cricket thought, beginning to understand and take pride in the role her efforts could play in delivering a man's pleasure. \n\nBoth Tim and Gwen looked at her, waiting for a reaction. \"Did I do okay?\" \n\n\"You did great,\" Gwen offered while Tim laughed in agreement. The older woman sat up and kissed her. \"Did you like it?\" \n\n\"Yeah, I did,\" she chirped truthfully, nodding emphatically. \"Yeah...I liked it.\" \n\n***\n\nGwen managed to free herself from the feminine arm draped over her hip and followed Tim out of bed when he rose early for a day of fishing with Charlie. She slipped one of his clean t-shirts over her naked body and headed for the kitchen as he quietly dressed, neither wishing to wake their young guest.\n\nHe sat at the kitchen table putting his boots on as a buttered English muffin and coffee was put in front of him. \n\n\"So what did you think?\"\n\nTim looked up in confusion at the woman smiling back at him from the sink. \"About what?\"\n\n\"About last night.\"\n\nThe warning bells going off in his head were offset by her seemingly genuine smile. \"Uhh, what about last night?\"\n\n\"Did you like it? Getting to shave her, and...all the other things?\" \n\n\"Oh\u2014uh, yeah, I did.\" He hesitated. Was it proper to thank your wife for being allowed to blow your load down another woman's throat? \"Do you think she was okay with it\u2014all of it?\" \n\nGwen smiled. \"I think so.\"\n\n\"Are you still, uhh, okay with it? I mean, it really doesn't bother you that I'm with her like that, right?\" \n\n\"I did like it and it really doesn't bother me. I think it's good for her to experience it\u2014all of it. How was her, umm, technique? Passable?\" \n\nOh, yeah, it was\u2014she was\u2014good. Felt great.\"\n\n\"Better than me?\" \n\nMove carefully, think...\"No, hell, nol. She's more inexperienced, I guess? She pretty much just stuck to the basics, you know, up and down, in and out...you have a lot more tricks.\"\n\n\"Oh, I'm sure I was the same way when I first started,\" Gwen deflected.\n\n\"Maybe a little, but you sure as hell got good at it fast.\"",
        "Gwen giggled and gave him a dismissive little wave, secretly proud her oral talents had apparently progressed to where the difference was noticeable. \"Practice is so much easier if you like what you're doing. Maybe Cricket will get there with more practice.\" \n\n\"Maybe...\" \n\nShe waited until he had risen to take his empty plate to the sink before pinning him back against the counter. \"Can I practice a little more now?\" \n\nHe was about to remind the woman working at the zipper of his jeans that he was going to be late meeting Charlie at the boat landing but stopped himself. Fishing or a blowjob? What a stupid fucking question! Charlie'll wait. \"Practice makes perfect,\" he replied with a grin, a reflexive glance towards the hallway confirming they were alone.\n\nGwen quickly had his pants down around his ankles and his cock hard, consciously varying her efforts with licks and kisses, wanting to avoid the same old \"up and down, in and out.\" Her skills had advanced enough to have him getting close shortly after. He was looking forward to watching her take what he had for her and swallow it all; something about the taboo nature of it, and her relatively newfound willingness to do so, made the act incredibly hot...\n\nHe was about to tell her to look up while she blew him when the wet warmth of her mouth was suddenly replaced with the feel of cool air on his length after one particularly deep bob of her head; her lips had been nearing the base of his shaft before they slid up and over the tip of his dick, her tongue flicking at his hole in farewell. She rose, shed her t-shirt and bent away from him over the kitchen table. \"Can we do it like this?\" Gwen asked over her shoulder, walking her legs out from each other, making her ass wiggle at her husband in invitation. \"I like it when you take me this way.\" \n\nCricket was alone in the bed when she awoke, remembering that Tim had mentioned something about getting up early to go fishing with the man who had been there the night before. She stretched and smiled as she remembered what else had happened the night before. I gave a man a blow job, she thought with a smile. I didn't screw it up and I swallowed it all and I think he liked it! I definitely wouldn't say no if I get a chance to do that again, especially if the favor was returned the way Tim had...the young woman was surprised the couple had managed to escape the bed without waking her\u2014she had been snuggled pretty close into her friend's back and ass the last thing she remembered. The house was quiet; Tim's probably already gone, she thought, and Gwen's probably out in the barn. \n\nCricket rose and slipped on a t-shirt\u2014just in case she wasn't alone after all\u2014and padded softly down the hallway towards the coffee. She stopped suddenly in front of her room, the one she was using to out her small but growing collections of things she was leaving here between weekends \u2014at the noises coming from the kitchen. The sound of a wooden chair scraping across the tile and rustling clothing was easily identifiable; the sound of metal scraping across the floor was not. Not silverware, she decided, that would have clattered; it sounded like...a belt buckle? She heard enough of Gwen's request to give her a good idea what was going on and wanted to give her hosts some time together without her. But she could at least investigate without intruding. Quietly, she crept forward and peeked around the corner. \n\nA very naked Gwen had her back to the young woman and was bent at the waist over the kitchen table, elbows resting on the surface and legs spread in a vee. Tim stood behind her, his bare butt peeking out from beneath his t-shirt with jeans puddled over the tops of his work boots, his erection poised inches from the upturned ass in front of him. He was still wearing his ball cap pushed back on his head and obviously had been just about out the door when he had changed his mind. \n\n\"I can never say no to that,\" he said with a chuckle as he drew a finger down between his wife's asscheeks and beyond. \n\n\"So this way is alright?\"\n\n\"Hell yeah,\" Tim said with a laugh before his finger came to rest on her rosebud. \"But which way?\" \n\nCricket stifled a giggle. She wants you to take her from behind, silly, doggy style. \n\nGwen looked back over her shoulder. \"One of us will have to get the lube for that way,\" she said with a patient smile. \n\nWait, what? She better understood exactly where his finger was resting between her upturned cheeks and the truth dawned on the young woman. He was asking about her rear end! Cricket felt a surge of excitement over seeing that for the first time while dreading the pain her friend would certainly experience from it. It did hurt\u2014a lot\u2014right? \n\nHe chuckled again, his finger moving down and sinking in to her other opening. \"I like to take my time goin' in that way, and I think you like me to, too, and since Charlie is probably gonna be pissed for making him wait for me at the landing...\" he shuffled forward, roughly grabbed her hips and inserted himself to the hilt in one smooth thrust. \n\n\"Thank you for making him wait,\" Gwen purred, her eyes the door in front of her and her fingers gripping the edge of the table as Tim took her hard. Despite his schedule, he was deliberate in withdrawing from her pussy, repeatedly pulling back slowly before plunging forward hard enough to make her breasts wobble from the assault.\n\n\"Thanks for the offer,\" he chuckled, enjoying the sight of her ass recoiling as he slammed into her. \"Watching Charlie get his line stuck in the weeds, or bending you over and fucking you, not even a choice.\"\n\nGwen must have given him a good start, Cricket thought, he's going at her like he's already pretty close...\n\n\"Please come in me,\" Gwen murmured between thrusts, briefly looking back over her shoulder before returning her gaze to the door. \"I want it all deep inside me...in my pussy.\"\n\nTim slammed into her with another grunt before replying with a chuckle. \"It's a cunt until I'm done with it and shit yeah, I'm gonna fill it up.\" \n\nCricket looked on in fascination. She never tired of watching them make love, although she had to admit the sight of those muscular legs and buttocks flexing to deliver powerful thrusts made this particular instance look more like a good hard fucking being delivered than a tender moment being shared. To her it seemed Gwen was playing the part of obedient sex toy to Tim's needful, lustful man, a role better suited for herself than her strong-willed friend, but something made her believe her friend was actually enjoying her part. The young woman's finger strayed beneath her shirt to lightly stroke her clit. \n\nTim did not announce his orgasm as he had done the night before; in keeping with the primal nature of the act he just slammed himself into his wife one more time and held himself there with a loud growl. \"Sshhh, we don't want to wake Cricket,\" Gwen said softly. \"Just make sure you get every drop in me\u2014in my cunt.\" \n\nCricket watched him do just that, reflexively pushing deep into her even as his orgasm began to wane. Had Gwen already been satisfied, she wondered as her own finger circled with growing intensity, and if not, how would Tim do that for her? Would he? She had never known Tim to leave Gwen unsatisfied, like Daniel always had done to her. \n\nGwen looked back over her other shoulder at the man she was still impaled upon to thank him for what he had put inside her, but stopped as she and their audience made eye contact. Cricket stifled a surprised squeak and jumped back while her friend broke into a knowing smile. \n\nTim thought the smile was meant for him and withdrew after a sharp exhalation. With casual strength he pulled Gwen into a standing position and turned her to face him, his hand already moving down her stomach to her sex. \"I wanna see you come,\" he grumbled through a smile. \n\nShe stopped his hand at her belly button while leaning up for a kiss. \"When you get home. That way you have all day to think of the way you're going to make me come. Go on, Charlie's waiting for you.\" \n\nI bet you won't wait with Cricket still in our bed, Tim mused. But that'll be fun to think about, too, as long as he didn't get a hard-on in front of Charlie. \"You sure?\" \n\nGwen kissed him again. \"Uh-huh.\" \n\n\"Okay, then.\" He stepped back and reached to pull up his jeans. \"Really? I don't mind taking a few more minutes.\" \n\n\"Really. Go.\"\n\nHe buckled his belt, grabbed his keys and travel mug, and kissed her. \"Okay, if you're sure. Charlie's gonna be pissed I made him wait.\" \n\nShe smiled. \"I'm sure he'll understand.\" \n\nTim grinned back. \"Depends on what excuse I give him.\" \n\nGwen waited until his boots thudded down the deck stairs before returning to their bedroom. She had only made it as far as the hallway before a rivulet of Tim's spend tickled down her thigh, a particularly large drop shaking free mid-stride and landing with a barely audible plop on the bare floor just short of a throw rug. I'll get that later, she decided after stopping to examine the watery puddle, moving on as the Lady rolled her eyes in disgust. It was bad enough to not make her first destination a bathroom and prevent that from happening, but to leave something that needed to be cleaned up until later was inexcusable. \n\nCricket was sitting on the bed hugging her legs to her chest, an apologetic smile on her face. \"Sorry about that!\"\n\n\"For what?\" Gwen replied smoothly, slipping on to the bed to lounge beside her. \n\n\"For, you know, spying on you.\" \n\n\"You're stealthy, I'll give you that,\" the older woman laughed, \"I know that watching is kind of your thing, and I told you we don't mind being watched.\" And it's even better when we know we're being watched, the Slut offered. \n\n\"Still, I should have told you I was there, at least.\" \n\n\"How long were you there?\"\n\n\"Oh, you know, when Tim was, uhh, he got behind you-but he hadn't, umm, started, yet.\" \n\n\"Ahh.\" \n\n\"I'm sorry I was spying on you,\" she repeated, \"But you're right\u2014I really like to watch. I guess I'm just a perv. I really like seeing you and him...making love. Especially that way. It just seems so, I don't know, primal, I guess?\"\n\n\"I think that's why I like doing it that way too,\" Gwen admitted. \"It just took me a while to understand that.\"\n\n\"I never told anyone this,\" Cricket began with a nervous laugh, \"but I never knew there were other positions than that one until I got to high school.\"\n\n\"Is that so?\" \n\n\"Uh-huh. I knew that's how animals did it, so in my logical little na\u00efve virgin mind why wouldn't people? I remember,\" she paused to draw up some courage, \"this is going to sound really perverted, but I remember I could sometimes hear my mother in her bedroom having sex with a guy when she was auditioning for husband number three. I always imagined they were in that position\u2014you know, because I didn't know there were others-my mother on all fours, the guy behind her going like crazy. I guess I always thought it was very sexy and I'd get all excited, even though it was my mother. Sick, right? I mean,\" she added quickly. \"I always pretended it wasn't her when I was thinking about it, it was somebody else like a teacher or someone like that, but it had to be somebody I knew. It just seemed so exciting that real people did...that.\" \n\nGwen smiled. \"You know, I used to think missionary was the only way people should have sex.\" \n\nThe young woman's face lit up. \"When I found out that a lot of people make love that way it seemed so much more romantic to me! You know, face to face, kissing...\" her mood suddenly darkened. \"But it sure didn't feel romantic with Daniel. I always thought he didn't like it that way very much. The one time I talked to my mother about our problems in the bedroom she told me that it was probably my fault because I wasn't being exciting enough for him, which by the way is the major reason I never talked to her about it again. I don't think anybody ever wants to hear you're so bad at sex you're not even exciting enough for your own husband. So anyways, one night I suggested he get behind me and put it in. He got so angry I had even suggested it! You would have thought I was the devil or something! He told me that only animals did it that way and I was perverted for even thinking it! But after I got over my hurt feelings, well, I had to agree it was perverted, but that only made it even sexier and more exciting, only with some imaginary hunky guy having his way with me, making me do things for him. Sorry, I know that sounds weird, but it's true.\"\n\n\"I think everybody has something they find sexy that other people might find strange. But that doesn't make it wrong, or weird, just different. And if you like it and it's not hurting anybody...\" Gwen shrugged. Take me, for instance. I like it when Tim and I make love the way we did in the kitchen \"I like feeling like he's is in charge sometimes, and I have to do whatever he wants and I don't have any choice. Do you think that's weird?\"\n\nCricket laughed. \"No, because I think I'm the same way, too. But it surprises me that you like that because you always seem to be so calm and in control, always in charge. Honestly, when I first met you one of the things I thought was that no one would ever dare tell you what do.\" \n\nGwen nodded, absentmindedly stroking the other woman's bare thigh. \"Sometimes it's fun to be something different than what you normally are. My friend thinks it's good for you.\" \n\n\"I'd really like to meet this friend. You've got so much good advice, if she's giving you some I can only guess how smart she is.\" \n\n\"It took me a long time to realize how smart she is. Maybe I'll introduce you someday...\"\n\nThey grew silent, Cricket stroking her friend's arm. \"I also really like the way you and Tim talk to each other when you're...having sex,\" she finally continued. \"It's really dirty, but it doesn't sound mean or hurtful. The guys my mother was with could sound so...mad, I guess. They'd call her names like bitch, or whore...or cunt, which I thought was the worst thing you could call a girl. But when you or Tim say that word, it sounds so sexy rather than gross or mean. It's really hot. And Tim never seems like he's angry with you, never calls you those names.\"\n\n\"I think I know what you mean,\" Gwen said, nodding thoughtfully, her hand moving further down to where her friend's t-shirt ended on her hip. Tim calls likes to call 'it' that when he's acting tough, but he has never called ME that and I'm pretty sure I wouldn't like it if he did. Maybe what we say sounds so sexy because its things we would never say in public, only when we're alone.\" She paused, a mischievous smile curling her lip. \"Or in front of a small audience.\" \n\nCricket blushed and smiled. \"Maybe.\" She paused, aware of Gwen's bare skin under her own palm. \"Can I ask you something?\"\n\n\"Of course.\"\n\n\"When, umm, you were in the kitchen and Tim was behind you, he asked which way. Was he talking about the, umm, other hole?\"\n\nGwen continued to smile mischievously. \"Uh-huh.\" \n\n\"Wow! So you really let him do it that way?\"\n\n\"Sometimes.\"\n\n\"Do you like it? I mean, it has to hurt, right?\" \n\n\"It's not my favorite,\" the older woman admitted, \"and it can hurt a little, but if I'm in the right mood it's not too bad, and he seems to like it, so...\"\n\n\"That's true love,\" Cricket breathed, getting a chuckle in response. \"To let him do that to you. Is it really painful?\"\n\n\"No, more like uncomfortable if I relax and he goes slowly and then I get used to it. It's really interesting to have two penises in me at the same time.\" \n\nThe young woman's eyes widened. \"You mean like two men at once? Have you really done that?\" \n\nGwen laughed. \"I mean like Tim and a dildo, if you want to count that as another man.\" An image of her sandwiched between two muscular bodies came to mind and was filed for later. \n\n\"Oh.\" Another pause. \"So I guess I didn't do such a good job after all last night?\" \n\nGwen showed genuine surprise. \"You did fine! What makes you say that?\" \n\n\"Well, you had to do that for him before he left...I just figured that meant he needed something more than what he got last night.\"\n\n\"Good heavens Cricket, we really need to work on your confidence! This morning was my idea\u2014I was still in the mood from last night.\"\n\n\"You were? But I thought you, you know, had an orgasm, last night?\"\n\n\"I did. But, well...I had you snuggled into my back all night and I was snuggled into Tim, and maybe I like to watch, too, and seeing you do that for Tim last night and seeing how much he enjoyed got me going again...\"\n\n\"Oh. So he really did like it?\"\n\nGwen laughed. \"For that last time, yes! But as long as we're talking about it, how about you? Did you enjoy it, or is it a 'been there done that' kind of thing?\"\n\n\"Oh no, I'll do it again,\" the young woman said with earnest sincerity. \"At least, I'd like to. I actually liked it a lot, but I was pretty nervous about messing up like I did the first time. I'm just glad I didn't gag!\"\n\n\"You didn't seem to struggle with, umm, swallowing it...\" \n\n\"No, that was actually easier than I thought it would be...I didn't taste as bad as I thought it would. So did you, you know, have an orgasm before I started watching? You said you were turned on...\"\n\n\"Not yet,\" Gwen said with a smile. \"I have all day, and he'll be back this afternoon.\"\n\n\"So you're going to wait for him?\"\n\n\"Maybe not. It's nice to know I'm not limited to one orgasm a day. I could have one right now and still be ready for him when he got home, if I wanted to.\"\n\n\"I could, uhh, help you right now, if you want...\"\n\nGwen gently kissed the young woman. \"I'd like that, thank you for offering. But could you stand up and take off your t-shirt for me first? I think you look beautiful without clothes.\" \n\nCricket rose and pulled the shirt over her head before climbing back on to the bed to rejoin her already nude friend. \n\nGwen rose as she lay down. \"I'll be right back,\" she said softly. \"I'm going to the bathroom to clean up\u2014\"\n\n\"Don't. Please. Stay.\" \n\n\"But I'm sure I have some of Tim's, uhh, some of what Tim left in me.\" Minus what you left in the hallway, the Slut giggled. \n\n\"I know. That's alright.\" Cricket patted the bed beside her. \"Please?\"\n\nShe shrugged in acceptance and joined her, their embrace ending when Cricket began to kiss her way down the older woman's body. She paused for a moment over her breasts, nipples rising from the attention while a finger slid between Gwen's legs to noisily stir the soupy mix between her lips. \n\nGwen felt the first kisses being planted on her bare mons. \"I think there's still a lot of him down there, \"she warned again. \"Are you sure you don't want me to go clean up?\" \n\nCricket shifted to bring her body to spread her friend's legs. \"I tasted it last night,\" she replied matter-of-factly, resuming her kisses on the bare skin above their junction. \"His, I mean, and I like I said I think I liked it. I at least didn't hate it. Speaking of weird, I want to see how you and him taste all mixed up, if that's alright. I know it's gross, but remember how I told you that I went in the bathroom once after Daniel and I had sex and pulled some of his stuff out to taste it? I really wanted to find out what the big deal was. It was so bitter...I think one of the reasons I gagged on Tim's that first time is because I was expecting his to taste like that and it psyched me out. But even though I only got a little bit the first time, Tim's still tasted different, nicer, so I was ready this time and I kind of liked it. It tasted, I don't know, like I tasted a man, I guess? Sorry, I don't have a better way to explain it.\" Her mouth traveled further down, planting a light kiss on the offered lips before inserting her tongue between them. \n\nGwen was relieved Cricket did not seem to be having second thoughts about the heady mixture she was stirring with her tongue and lay back to enjoy the attention being lavished on her pussy. The orgasm she was given left her weak, and she mustered the strength to pull Cricket back up to where she could kiss her in thanks. \"It tasted good\u2014like you had been making love,\" the young woman offered unasked, her face glistening with wetness. \"I liked it.\"",
        "Gwen intended to return the favor, and after holding each other for a few moments, she began the trip down her friend's body.\n\nGwen could taste the mild tang of female arousal when she reached her pussy and found herself wondering just how different it might taste with healthy dose of semen mixed in. She soon had her friend squirming before abruptly stopping and rising up in a crouch. \"Turn over,\" she instructed. \"Get on your hands and knees.\"\n\nThe interruption of Cricket's rise to her climax left her momentarily confused. \"Huh-wha\u2014\"\n\n\"Don't argue. Hands and knees,\" Gwen calmly ordered again as she reached over to open her nightstand drawer. Cricket let out a small groan of frustration but complied, rolling over into an acceptable four-point stance, feeling both incredibly horny and a little embarrassed as she presented her ass and pussy to the older woman. Out of the corner of her eye she caught sight of a flesh-colored dildo and a vibrator being retrieved from the drawer. \n\n\"I'm going to fuck you with this,\" Gwen announced, sliding the shaft she held up and down the length of the young woman's slit. \n\n\"Oh-oh, okay, yes, please,\" Cricket squeaked. The voice asking the question carried more authority than she was used to from Gwen, but it wasn't menacing. \"I'd like that.\" \n\n\"You'd like what?\"\n\n\"I'd...I'd like you to...use that on me.\"\n\n\"How do you want me to use it?\" \n\nI want you to...put it in me?\" Her hips began to undulate in invitation, flexing and waggling in an effort to signal her need. A hand found its way around her thigh and between her legs in response, a finger circling her clit.\n\n\"Put it in where?\" The hand between her legs retreated only for the finger to land lightly on the wrinkled muscle of her anus. Cricket flinched and gasped. \"You have such a pretty little rosebud. I can fuck you there, if you want. I can go get some lubrication to make it easier.\" The finger abruptly slid down and plunged into her wetness, slowly pulling free and landing back on her asshole to spread the moisture it had gathered. \"Or I can use this.\" \n\n\"No, not there,\" she begged with a nervous giggle. \"The other place, please?\"\n\n\"Where?\"\n\n\"My pussy, okay? Please put it in my pussy.\"\n\n\"It's a cunt until I'm done with it.\"\n\n\"Yes, okay, my cunt!\" \n\nAnd then what? Do you want me to fuck your cunt?\" \n\n\"Ohhhh, yes, pleeeease...\"\n\nGwen centered the tip of the dildo\u2014Tim's, she thought with wry amusement. He had been selected in the case Cricket had done the completely unexpected and consented to being taken anally\u2014Nearly Neal would not have been a kind first experience. She pushed gently, the tip parting her labia to nestle in the opening beyond. Cricket whimpered but held still, waiting. Gwen watched in fascination as she began to slowly feed the recreation of the cock she knew so well into the waiting hole, disappearing into her friend, lips grasping at the veined surface only to release and catch again. \"Here, you can use this,\" she offered, passing the vibrator to where the young woman could reach it.\n\nCricket took this as permission to drop her chest and shoulders to the mattress while a hand placed the bulbous end of the rabbit firmly on her clit. It buzzed maddeningly, the pitch varying in rhythm with the invader sawing in an out of her as Gwen became less gentle with the cock's insertion and withdrawal, mimicking the pounding she had taken earlier. \n\nCricket came after one particularly hard and deep slam of the shaft, softly uttering \"ah-ah-ah\" as she pulsed. Gwen left it buried to the hilt and grabbed the young woman's hips just as Tim had grabbed hers in the kitchen, pressing herself tightly against the dildo and the body it was buried in. She let Cricket ease forward on to her stomach as the spasms became trembles, her own body pressing the woman beneath her into the mattress before rolling off and lying next to her and stroking her back as she regained control of her breathing. \"Sorry, not the same as a hunky guy doing whatever he wanted, but I tried.\" \n\nThe young woman opened her eyes. \"No, that was great! It was a little scary when you started telling me what to do, but I liked it...especially when you grabbed my hips and, umm, pulled me against you. You're strong, but I can only imagine what it feels like when a man does that.\" \n\n\"It feels wonderful,\" Gwen confirmed. \"Now we just need to find the right man to show you how wonderful.\""
    ],
    "authorname": "BusyBadger",
    "tags": [
        "doggystyle",
        "exhibitionism",
        "husband",
        "lesbian",
        "shaving",
        "swallowing",
        "toys",
        "voyeur",
        "wife"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-04-ch-02"
}