{
    "title": "Vision Ch. 04",
    "pages": [
        "I am not going to answer the race question. I will leave it to readers to make up their own minds. Is race how you perceive yourself or how others see you?\n\nMaddening, I know. \n\nI will try to put in lots of good sex and plot twists to ease your aggravation and keep you titillated. \n\nIt seems to take hours to make the 40-mile drive home and I am still reeling when I get there. While I realize that whatever is going on with her has little if anything to do with me, it's poor consolation. I've not been this tired since Hurricane Katrina. \n\nHurricane Lulu category 5. And to think that I'll have to see her around the office. Don't shit where you sleep and eat and never fuck where you work. I should just quit now. \n\nNothing to do but, set the alarm and try to sleep.\n\nHot little hands on the back of my thighs urging me on sliding up my ass, my back my shoulders as she kisses me and moans into my mouth, such a luscious kiss, an intensely hot little pocket of flesh gripping me. Her sweet face frowning and relaxing as she comes apart. \n\nI wake with a disoriented start. I'm home alone evidently in the middle of a Lulu induced wet dream. I've not had one since high-school. Barely two days and she's jacked me up good and proper. High-strung, volatile little harpy. \n\nShe's probably right. It'd never work in a million years. And while the rational part of me doesn't want to have feelings for her, it also recognizes how extraordinary she is. Brains and passion. Tough and sweet. Perfectly flawed and wonderfully human.\n\nIt's 2 am. I get up and turn to ESPN, which I know I will pay for later. \n\nI wake up on the couch with a start. I can still make it on time but I'll have to hurry. I shave, shower and throw on some clothes and head out without breakfast or coffee, which will make for an ugly morning. \n\nHaving sent many of my key personnel for training I find that I am manning the IT department alone on a Monday busted down to tech support and customer service. Luckily, most of the office is out training or in a health benefits seminar. \n\nAround noon, I'm slogging though performance management reviews and contracts when I get a service call. \n\nProblems with the scanner - in Legal. \n\nI haven't had a break today. I'm starving, tired and highly irritated. \n\nI go over to the copier room and there she is. Another black suit with killer heels this time, hair pulled back and braided in a high bun. Looks a little tired, but irritatingly pretty and studious in her glasses.\n\nSeeing me she immediately bristles, the muscles in her jaw working.\n\n\"Why are you here? I placed a service call.\" \n\n\"My people are all in training today, so it's just me.\"\n\nShe sighs and mutters something under her breath.\n\n\"June's off in the same seminar.\" She groans.\n\n\"So what's the issue?\"\n\n\"I've sent a 60 page document to the copier and I need color copies for my 2 o'clock meeting. I don't have an original document. I only need 10 copies and while I see the document, for some reason it has a weird suffix and I can't access the file. This is not the first time this scanner has sent my documents to an inaccessible default folder. \n\nIt generally happens when there's no more room in the M Folder. I might add that I've repeatedly requested more room on the server. We work with information-dense material. I really don't understand the lack of accommodation on so simple a thing.\"\n\nLike the weekend never happened. Unbelievable. I look at her and she calmly returns my gaze. Nothing I've not heard before. We are updating the server as fast as we can. I look hazily at the small copier screen and try to focus. \"I don't see the file.\"\n\n\"It's right here.\"\n\nPointing in irritation she steps closer. I can smell her goddamned lotion. The vision of her rubbing it on her body comes to mind. I groan inwardly, this is not helping. I look but still don't immediately see it. She sighs in exasperation. Pointing again we move at the same time and there's a loud zap of static electricity as our hands meet giving us a good shock, Ow! We laugh involuntarily.\n\n\"Let me run back to free this file, I'll be back.\" I move the file and come back down the hall. She's already accessed it and is printing it.\n\n\"Thanks.\"\n\nStanding on a small stepladder she's trying to reach the colored paper which has slid back just out of her reach. I walk over and take the box down and set it on the work counter. Using the colored pages to separate sections of the presentation, she staples and collates everything. \n\n\"I guess everyone's busted down to mid-shipman today, huh?\"\n\nI watch her closely as She gives a small smile but still won't look at me. She does ask for assistance connecting several laptops to the network. I follow her down the hall into the conference room.\n\nI get everything set up and then she loads the presentation and runs through several slides, before laying out the materials. \n\n\"Thanks.\" \n\nHer voice is huskier than usual as she swallows, struggling to master herself. She retreats to a far corner, muttering underneath her breath. \n\n\"Shit!\" She sighs heavily.\n\nI grit my teeth. \n\n\"Come here you little monster.\" \n\nTaking her arm I quickly drag her around the corner to the server room and lock the door, no windows, no cameras, one desk and a chair. There's a lot of white noise here, the whirring of the server fans and blasting air conditioning.\n\n\"You're upset.\" \n\nShe still won't look at me. I hand her a handkerchief. \"I don't carry spare shirts, this will have to do.\"\n\nThere's a small smile from her before her face crumples and she starts to cry. This is good. Sitting down with her I pet her a bit and let her get it out.\n\n\"I don't know what the hell is wrong with me. I never cry.\"\n\n\"What's wrong is how stubborn you are. I really like you and I know you like me too. There's no need to inflict misery all around. Can we resume getting to know each other?\"\n\nShe nods and shrugs. \"Yeah, I guess.\" \n\nShe's sniffling and looking prettily wretched. I'm trying not to give in and start petting her again.\n\n\"I'm going to need a more definitive answer, Lou.\"\n\nShe tenses and frowns. \"What the fuck do you want from me man?\"\n\n\"Less of the potty mouth for starters. I want you to say you'll try.\"\n\nShe's frowning at me and I'm frowning right back. She growls low in the back of her throat. \"I'll try.\"\n\n\"Good. Now kiss me like you mean it.\"\n\nShe's still frowning, but removing her glasses she puts her hands on my shoulders and gives me the softest kiss. It's been no time and I have missed her and now she's on my lap kissing me and it's changing and getting hotter as she scoots closer, sliding her arms around my neck. I unbutton and unzip her pants stroking her through her soft panties before slipping a finger inside her wet little self. Her clit feels about the size of a small raisin. Her breath hitches in her throat as I kiss and lightly rub her.\n\nThe intoxicating smell of her wafts in the air and I can't get enough. Instantly I am recalling the smooth tight almost indescribable feel of her, the almost painful clutch of her little pocket, the salty sweet taste of her, those sounds . . . I need to have her again and again and again. If I have to fight for it I will.\n\n\"Lulu you can't leave me, you just can't. I'll find you. Understand?\" I give her a little shake and she nods slowly.\n\n\"Yeah. Yes.\" She hiccups and shivers.\n\nI kiss her neck and she gasps. \n\n\"Good. Now, I want you to come for me. I dreamed about you coming last night and I want to see it right now.\"\n\nShe shakes her head a little.\n\n\"Don't be shy, come for me, let me see it.\"\n\n\"Here? I don't think I can right now, Dax.\"\n\nI love it when she says my name with that voice of hers. \"Say my name again?\"\n\nWith a small smile and a sigh she does. \"Dax.\"\n\nI kiss her deeply and continue to stroke her until I start to feel her tighten around my fingers I pull back to look at her face. Her eyes are closed and her brow knits a bit and then relaxes, her mouth opening as she moans and comes on my fingers. She looks a little drugged and quite drowsy as she leans her bowed head on my chest. We rest for a bit. I kiss her eyes and cheeks again. I check my watch.\n\n\"You're going to miss your meeting.\"\n\nI smile as she jumps and looks at her watch and breathes a little easier.\n\n\"There goes my lunch hour.\"\n\nChecking her makeup in the mirrored reflection of one of the server doors, she straightens her clothes and quickly leaves. I can hear her saying hello to someone in the hallway.\n\n--\n\nDespite the fact that I've still not eaten anything I find my day much improved. Raiding the HR employee database I find her cell phone number and text her.\n\n\"We're meeting after work Lou.\"\n\n\"How did you get this number?\"\n\n\"I am the great and powerful Oz.\"\n\n\"Stalker.\"\n\n\"Have dinner with me?\"\n\n\"I'm leaving at 5 sharp today - you don't leave until 6:00 or so.\"\n\n\"Now who's the stalker?\"\n\n\"Whatever. Grabbing a cheese steak from Mary Angela's and heading home after work, u want one?\"\n\n\"Yes, thank you. See you at 6.\"\n\nAt 6 pm sharp I pull up just as she's rolling into her driveway.\n\nI follow her in. She eyes me warily as I walk towards her with clear intent. She shakes her head and raises a restraining hand. \"Back-off man, it's Monday and I'm tired, and hungry.\"\n\nI chuckle as she kicks off her shoes, takes off her pearls and tosses them carelessly into a bowl on the coffee table, reaches under her sweater and removes her bra and tosses it over a chair and breathes a sigh of relief as she pads down the hall towards the kitchen. Sexy little tease.\n\n\"What would you like to drink, water, bourbon, tea, lemonade?\"\n\n\"Lemonade's fine.\"\n\nShe pours me a glass and herself a tall glass of water, grabs an orange and a platter and we go back to the living room. She arranges the sandwiches on the platter on the coffee table, turns on the TV and flips to the Daily Show and puts her feet up. \n\nWe eat and laugh at Jon Stewart. We share the orange and finally sit back on the sofa replete, companionably leaning against each other. \n\nShe's handed me the remote and I'm flipping through channels searching for ESPN while she reads over some files from her bag making notations. There's a bottle and a glass beside the bowl on the table. MaCallan 25 year single malt scotch.\n\n\"Scotch?\"\n\n\"Yep, love it. You?\"\n\n\"I have my moments but that's pretty hardcore stuff.\" I whistle.\n\nShe looks up sharply.\n\n\"I'm not judging.\"\n\nShe looks mildly hostile.\n\n\"You said you'd try. Stop being so defensive.\"\n\nShe growls, which makes me laugh. \"Come here.\"\n\nPulling her onto my lap I start removing the hairpins, unwinding her bun and pulling apart the braids. She's looking at me like I'm crazy until I start massaging her scalp. Closing her eyes and relaxing, she gives herself over to it. When I'm done she looks like the wild woman of Borneo.\n\n\"I plan on us getting to know each other very well, it's going to be interesting. Let it happen.\"\n\nI've noticed that if I stroke the center of her back she practically melts she gets so soft. She lies back and pulls me down with her. Making out on the couch. I unbutton her sweater. \n\nAny man who says more than a handful is wasted is clearly not thinking straight. Her body's addictively responsive and receptive. She's starting to squirm. She's got one hand on the back of my right thigh and is rubbing me through my pants with her other. I touch her crotch and she kisses me frantically, struggling to get my shirt off actually tearing it a little. \n\nShe gives me a slow sleepy-eyed blink, stands and takes off her pants. She's standing there in an open sweater and small black panties, which she quickly pulls down as I roll on a condom. Firmly pushing me back on the sofa she slowly lowers herself onto me. \n\n\"Thank god.\"\n\nClutching my shoulder with one hand, the other is braced against the sofa as she kisses and rides me. I've got my hands on her ass trying to go deeper but she's controlling the angle and depth. I grab her and flip her down and plunge in deeper, she stiffens a bit but as I align us both so that I'm rubbing her clit with each stroke she eventually relaxes and catches the rhythm. \n\nBuried in her hot wet self up to the hilt as she whimpers and comes around me bringing me with her. I lean back and look at her. She's smiling that small, satisfied smile. I sit up, my pants and boxers are around my ankles and there are two buttons missing from my shirt. She sits up and tries to repair herself a bit but quickly gives up. She looks at me, cocks her head to the side and sighs.\n\n\"I'm stuck with you for a minute aren't I?\"\n\n\"You are indeed.\"\n\n\"Stubborn fucker.\"\n\n\"You're one to talk.\"\n\nShe unsuccessfully tries stifling her laughter. I pull up my boxers. She looks at me and sighs. \n\n\"Fine.\" She holds out her hand and we go down the hall.\n\n--\n\nShe rubs her arms as we enter the room. \n\n\"This weather is crazy. It was just 90 the other day and now it's chilly again.\"\n\nI nod in agreement; it is especially cool for May.\n\n\"Hey, let's take a bath in that tub of yours that Lenny says you let no one step foot in?\"\n\nShe looks mildly perturbed at first, but then she starts to smile.\n\n\"Please, I'm dying to see you in the middle of it covered in nothing but suds.\"\n\n\"This is for relaxation Dax, not further perversion of my body by your skinny, kinky, twisted self.\"\n\nI laugh. \"So I'm skinny?\"\n\n\"You could stand to eat.\"\n\n\"And I'm kinky?\"\n\nShe looks at me matter-of-factly. \"I did wake up with your nose half way up my ass the other day, not an everyday occurrence for me.\"\n\n\"Yeah? Well maybe it should be.\"\n\nShe laughs. \n\n\"Definitely twisted. Perfect. You do realize that that predilection of yours, that the ink's barely dry on that being legal in the state of Virginia. Where'd a nice Catholic boy learn tricks like that?\" \n\nShe smiles mischievously as I shrug.\n\n\"Here and there.\"\n\n\"I'll bet,\" she laughs. \"Fill the tub. Bubble bath is on the counter, pick something. I'm going for firewood.\"\n\nSandalwood-Rose smells pretty nice. I pour some in and it starts to foam immediately. I sit on the edge of the tub and take off my shoes and notice that there's a plastic covered remote for the television on a small table beside the tub. I turn on the TV and it's tuned in to ESPN. There's a game on. \n\nDoes she really does watch the game from the tub? I watch while I wait impatiently for the tub to fill. I want her in those suds and this is taking forever. I'm going to need more bubbles. I end up dumping in half the bottle which seems to do the trick. \n\nShe comes back and she's got that silver leather string tied goddess style around her hair and she's wearing a towel too. She looks at my towel and shakes her head and goes to make the fire; she looks up at the television.\n\n\"Who's playing?\"\n\n\"Cleveland and Miami.\"\n\n\"I don't care much for Miami but I like Dwayne Wade, LeBron James can ball his ass off though, he'll make MVP this year mark my words.\"\n\n\"You really love basketball don't you, and not just for the money you win in the betting pool?\"\n\nShe looks at me and shrugs. \n\n\"I played in high school and still play with my brother every now and then. My father was in the police basketball league and would take me to the games and I'd keep track of all the rebounds and assists and what have you. His friends loved it because I'd never cheat for him or fudge his stats, not even for extra allowance and ice cream. \n\nI used to be really into football too until I saw the Redskins play the Steelers. The Redskins were doing all sorts of heinous things on the field and the fucking ref never called any of it. I lost the faith after that and stopped watching. I can follow it though. \n\nI like baseball ok, but it's such a slow sport though, barely faster than golf. But I watch sometimes in remembrance of my great grandmother who loved it dearly, though I love going to live games much better than watching on TV, especially when the series starts in New York, the fans are often times more entertaining than the game itself. Piling onto the subway to go out to the game is a trip man. \n\nI like soccer, the men are hot, but the women are better players, hockey isn't my thing it's like football on blades and too violent, even for me; golf eh there's Tiger Woods and that's fine but I'm still not buying into the coolness factor, there's not much cool about a green blazer, not even on Andre 3000. \n\nI like tennis though I'm terrible at it, Venus and Serena kick ass, they are scared of those girls. They were a little down for a bit with health issues. But they're back bigger and badder than they ever were. I've come to love boxing and kickboxing too of late.\" She arches that eyebrow at me and smiles.\n\nI walk towards her and drop to both knees and hug her to me. \"Mecca at last.\"\n\n\"All this because I like balls?\" She smirks and shakes her head.\n\n\"Lulu, Lulu, Lulu.\" I just shake my head and look up at her, she shakes her head right back and looks at me and smiles.\n\n\"Let's get in before you flood the place.\"\n\nThe fire's going pretty good now. She goes to the wall and turns down the spotlights and chandelier which are on a dimmer. She drops her towel and holds out her hand for me to help her into the tub, gracefully and carefully she steps in and sits down, sighs and leans back.\n\n\"Damn, that's good.\" She breathes. \"Are you getting in?\" I'm too busy watching her.\n\nI drop my towel and step into her bath. She's taking it all in as I lower myself into the tub, she blinks slowly and looks at me like I'm something to eat. Her breasts are floating on top of the water I can almost see her nipples through the suds. To hell with the game. \n\nI pull her over and slide her onto my chest and she kisses me greedily while I stroke her behind underwater. Parting her legs she climbs on and sinks all the way down, and just like that I'm lost and as happily buried as a man could wish in smooth, tight wetness. Arching that eyebrow again she smiles contentedly and starts to move. Her hands slide over me, my chest, my arms and shoulders. \n\nLulu is in control and out of control all at the same time and I love it. It looks like she's dying as she throws back her head and gasps which sends me over the edge. It's beautiful. \n\nShe collapses on top of me in a quivering heap and as she's still contracting around me spasmodically, I realize I just came in her without protection. Damn! Easing off me and sitting back on the opposite side of the tub she smiles at me, but as I don't smile back her face falls.\n\n\"What's wrong? Did I hurt you? I know I can be a little rough.\"\n\nThat does make me smile. \"Yes, you did and I liked it. Seriously though, we didn't use protection just now.\"\n\nShe bites her lip, and then quickly shakes her head. \n\n\"Do you know how hot this water is? It's like hot-tub hot, no one gets pregnant in a hot-tub.\"\n\n\"That's an urban legend.\"\n\n\"Perhaps, but look it up sometime. Besides, I'm not ovulating.\" She shrugs indifferently.\n\nI look at her carefully. \"You're the one that doesn't want children. I wouldn't mind at all if . . .\"\n\n\"Look man, don't start with that shit. I realize sex is mostly biology, but you really need to be able to look at me as something other than someone you desperately want to breed with.\" \n\nShe looks annoyed and mildly horrified.\n\n\"Come here you.\" \n\nI pull her over and grab some bubble bath and lather up my hands and massage her shoulders. She un-tenses after a bit and lies back against me and sighs contentedly. She's floating a little on top of me and I am for the first time in a long time utterly content. This is like a glimpse of the beautiful forever. I take a deep breath. She turns her head to look at me.\n\n\"What's up?\"\n\n\"Just thinking maybe we should call in tomorrow. I'm tired.\"\n",
        "She sighs. \"I'm impossible. I know.\"\n\n\"Don't start. You're a handful, but I mean to hang on.\" I grab her firmly by the waist and pull her tighter against me.\n\nShe chuckles. \"A handful? You have no idea. I wouldn't wish me on anyone. You must have beat your slaves in your past life to wind up with me in this one.\"\n\n\"I'll not have you talking about my girl like that, now stop it.\" I give her a little shake and she chuckles but settles down.\n\nShe's quiet for a few moments and then turns all the way around and faces me frowning. \"So, now I'm your girl?\"\n\nI slowly nod at her. \"Yes, yes you are.\"\n\nShe looks a little panicky. \"That's more than a little presumptuous. We hardly know each other. You don't even know how I take my coffee.\"\n\n\"Black with 3 sugars, but only at home. Otherwise a splash of cream and 4 sugars.\"\n\nShe blinks in surprise before smirking and narrowing her eyes. \n\n\"Showoff. But seriously, I don't even know your middle name, your favorite color, favorite movie or book. You could be a Republican for all I know. In which case I'll have to drown you in this tub and bury your body in my tomato patch.\"\n\nI laugh. \"I know your middle name, Lou Lou James. Your favorite color is yellow, and the rest I'll learn. But if you must know, my favorite color is blue, sky blue. I am not a Republican, my favorite movie is Pulp Fiction, my favorite book is Crime and Punishment by Dostoevsky and, I sigh, my full name is Dax Daniel Junius Wilde.\"\n\nI look at her expectantly. She smiles delightedly.\n\n\"Julius, like Dr. J., Julius Erving? That's mad cool!\"\n\nMad cool is a little naked woman knowing who that is. I swear I'm getting hard again.\n\n\"Sadly, No. My middle name is Junius.\"\n\nShe frowns. \"What the hell kind of middle name is that?! I prefer Julius. Change it.\"\n\n\"I'll have you know it's a revered family name, so show a little respect. Some family members call me Junie. For obvious reasons, I prefer Dax or DJ.\"\n\n\"Oh my good sweet lord! I knew you were southern but damn. JUNIE! But you're too big to be a Junie!\"\n\nSlapping the water with the flat of her hand she makes a huge splash.\n\n\"Laugh it up.\"\n\n\"Oh come on Junie it's pretty funny.\" Tears are rolling down her cheeks she's laughing so hard.\n\n\"That's it. I'm out.\" I leave the tub. I was starting to prune anyway. Quickly grabbing a towel I wrap it around me. \n\nShe's still laughing. Inspiration hits and I leave the room.\n\n\"Oh no! Wait! I'm sorry! Come back - Junie!\" She breathlessly calls trying to get herself under control and failing, giggling like a maniac. \n\nI grab my iPhone and go back to the bathroom and snap her picture. It's a keeper with the suds and the hair and the smile. It's my turn to laugh as she starts to pout. I snap a picture of that too before I come over and kiss her forehead. \n\n\"I think baby is clean enough, it's time for bed.\"\n\nHead tilted back, she looks up at me at me blinking that slow sleepy eyed blink of hers that I've quickly come to understand as Lulu-speak for sex. She smiles softly and says 'ok' in a small shy voice. I haul her gleaming wet from the tub and set her on her feet in front of me.\n\n\"Oooweee! Looks like 'ol Junie caught himself a fish.\" \n\nShe giggles. \n\n\"A Lulu fish! The biggest fish I've ever caught and to think I caught it in a bath tub.\"\n\nLooking intently at me as I dry her off she smiles. I look in the air as I dry her bottom. \n\n\"My original thought was fricassee but think I'll have broiled Lulu tonight instead.\"\n\nShe's laughing as I turn off the TV and lights and take her to the bed.\n\n--\n\n\"What do you usually sleep in? \n\n\"You want to dress me? \n\n\"No, just asking. \n\n\"Just an old jersey and undies.\"\n\nShe pads over and takes one out, it barely covers her bottom. There's a ferocious looking blue lions head on the front and Lou #8 Captain on the back. I find it sexier than her being completely naked.\n\nAs I walk towards her, she shakes her head and steps back.\n\n\"So this is you at home, eh? Mmmm . . . let me see that, give us a little spin.\" \n\nShe shakes her head and turns around.\n\n\"This is pretty short. I can almost see your . . . \" \n\nI stroke the center of her hot little self, and she gasps again, I reach around and cup her ass. And I can definitely see most of this. . .\n\nShe blinks slowly at me looking at my mouth so I kiss her. She's becoming so easy to read. I roll her nipples between my thumb and forefinger and her head falls back and I kiss another beauty mark at the center of her throat. I can span her long small neck with one hand. \n\nI want her again. It's starting to dawn on me that I can barely think of anything but having her all the time. I gently pull away from her and go to her iPad which she's synced with the speakers and put some music on. She's got it set up to play throughout the house. I pick her chill mix.\n\n\"Let's dance.\" \n\nShe looks confused, but comes willingly into my arms. A little awkward though as my crotch almost comes into contact with her breasts. Which gives me some new ideas. She's usually balancing on her toes I realize when she kisses me, which won't work for dancing.\n\n\"You're like a foot taller than me.\" \n\nShe frowns and leaves and comes back wearing very high very glittery pumps with an oddly attractive heel which make her 5 inches taller.\n\n\"Much better, shorty.\"\n\nShe scoffs. \"I am not short, I'm compact.\"\n\n\"Is that right?\"\n\n\"Yes. Besides, it's the gravity of my inordinately large ass grounding me to this earth and keeping me from attaining my true height of 6'1, I think if I were to cut it off tomorrow I'd sprout right up overnight. I'm looking into just that.\"\n\n\"Sacrilege! I should spank you on the spot for even thinking of getting rid of my new favorite thing.\"\n\nI touch her lightly with my finger and she grabs my hand and grinds against it.\n\n\"That's an interesting dance move.\"\n\nShe backs up. \"I'll show you dancing.\"\n\nShe goes over to the iPad and changes the music and all of a sudden I hear Usher and Lil Jon. She comes strutting back and starts dancing. She can really move too. Grinding on me to the beat of the music and singing to the song going yeah and moving sexy. Shoulders rolling, hips swaying, slapping her ass in time to the song. \n\nShe does some fancy foot work and as Ludacris sings bend over to the front and touch your toes she quickly does so, giving me an eyeful. She pops up and turns around and winks at me and twirls around me and rubs against me alternating with her breasts and butt. It's a goddamned lap dance and I have never been more shocked in my life. I love it. She's giggling at the expression on my face. The song ends. I turn off the music and start to stalk her.\n\n\"You are so going to get it.\"\n\nShe laughs. \"Bring it on!\"\n\nThose shoes aren't made for running though and I easily catch her and throw her on the bed.\n\n\"You are a very bad girl.\"\n\nI grab the last condom, the top comes off and as grab her ankles and slide her bottom onto my lap those heels end up somewhere around my ears. She deserves to be fucked good and hard after a display like that. Remembering her words of caution though I ease into her slowly, watching her face, she shifts her bottom a bit and nods yes and smiles. I look at those shoes around my ears and do the same, as I start to really move she closes her eyes and gives in to it. \n\nShe's as hot and wet as she was the first night and even when I am basically holding her spread-eagle she's still pretty tight. I'm watching my dick slide in and out of her and she's lifting and shifting that ass of hers and keeping up with my stroke. \n\nTouching herself, her hands slide over her breasts, down her stomach to her clit, damn that's hot! I don't know if I can hold on much longer, but I don't have to as Lulu is coming and coming. I feel something in my spine click and wonder vaguely if I've slipped a disc, it was worth it if I have as she continues to spasm around me. We both drift for a bit and eventually I rise and look at her.\n\n\"What?\"\n\nI'm watching her. \"I was serious earlier, can you take a few days off? I'd like some time with you.\"\n\n\"Oh.\" She lowers her eyes. Her whole body's gotten warmer. Even her nipples harden. I brush a thumb across one and watch with satisfaction as she sighs and her eyes close. I want many days with her.\n\n\"I take that as a yes.\"\n\n\"There's nothing terribly pressing, if push came to shove I guess I could work from home, especially since VPN was installed.\" \n\nI chuckle as she looks at me accusingly. Making a call to her assistant, she gives instructions and excuses herself for the rest of the week. She cues up some music on the computer and we drift off to sleep to some otherworldly trippy tunes.\n\n--\n\nI wake in the oddest position with Lulu wrapped around me like a starfish, with herself hugged to my chest, her arms wrapped around my back. I can feel her soft cheek and full, hot breasts against me. And because she has one of my thighs pulled forward and wedged between hers I can feel her little sex against my leg, hot and clingingly wet, like a kiss. \n\nI love it, but I have to take a leak and make a call. Pulling my leg gently away is like pulling away from a suction cup. I smile and shake my head. She had a pretty good grip. She turns in her sleep pulling the sheets around her. \n\nI use the bathroom and look in on her again before calling in and leaving a message explaining that I'll be taking a few days. I've not taken a day off other than a holiday since I arrived and it's been well over a year. After yesterday I feel justified.  \n\nI'm hungry but can't quite stay away from her. I pull back the sheet and blanket and just stare as she clutches a pillow and sleeps peacefully, that hair is still bound like she's a goddess. Which, let's face it, she is - thick lashes, full perfect lips, smooth satiny skin, small straight back leading to that perfectly pert peach shaped ass, muscular hamstrings, narrow ankles and small highly arched feet, like a dancer. Pole dancer, I chuckle. \n\nI stroke her back and drop a kiss on one shoulder - so precious. She sleepily opens one eye and smiles.\n\n\"Molesting me in my sleep?\"\n\n\"I am. Is that a good thing?\"\n\n\"Well it's definitely not bad.\"\n\nShe slides her hand up my thigh lasciviously. I'm hard of course.\n\n\"Shocking!\" She squeezes me and laughs.\n\n\"Oh we're in a playful mood today are we?\"\n\n\"Yep, if you mind your manners I'll let you play with me after I shower.\" She stretches and sits up and then quickly runs to the bathroom and locks the door. \"Na na na na na naaaa,\" she taunts from the other side. I hear the shower start.\n\nQuickly sliding on clothes, I grab my keys and run to my truck. I groan. I can barely stand leave her. I grew up hearing about women casting spells and I'm starting to think she's done something to me. I make a quick run for a few essentials, and get back just as she's getting out of the shower. She eyes my bag.\n\n\"Sneaking out already?\"\n\n\"Well Lulu, I know you'd have me naked 24/7 but even we sex slaves need clothes. We've got unions and everything these days. I got a few things. I need to shave for starters or haven't you noticed?\"\n\nShe comes over and puts her hot little hand to my face. \"I noticed, but I like it, it's got bits of red and it tickles when you lick me.\"\n\nThat last bit is said so softly I barely hear it. I can't believe this is the same fearless hussy that danced so brazenly last night.\n\n\"I see. Well if milady likes it then we'll keep it for a bit longer.\"\n\nStanding on her toes she kisses me. I slide my hands under the towel cupping her naked bottom. The perfect handful. She sighs and backs away, putting a firmly restraining hand against my chest.\n\n\"We're not starting that up right now. How do you feel about shrimp and grits?\"\n\n\"I love it. I'm curious to know what the mid-Atlantic version of shrimp and grits tastes like.\"\n\n\"Humph. We may not be Deep South but Virginia is very much the South. Don't let anyone convince you otherwise.\"\n\nI kiss her again and head off to shower. I come out and she's just putting a lid on the grits. After an admittedly sacrilegious crisping of prosciutto di Parma in a hot pan she sets it aside to drain on a paper towel and takes down the cake flour and makes a nutty brown roux with the drippings before adding ice cold water to the pan, whisking furiously until it's nice and smooth, adding a touch of cream, a lot of pepper and a bit of seasoning, she puts a lid on the gravy and turns it way down low. \n\nShe takes out the raw shrimp and stops eyeing them in disgust.\n\n\"What's wrong?\" I pick them up and smell them. \"They're fresh, perfectly fine.\" They look good too.\n\n\"Yeah but, they didn't peel or devein them. They still have the heads on. I hate that; I know I asked for it. I certainly paid for it. The Yellow Umbrella is NOT cheap.\" She frowns.\n\nI get a paring knife and some ice water and make short work of peeling and deveining them.\n\nShe smiles like the sun just came out. \"You are very handy.\"\n\nI kiss her and resume my post.\n\n\"You seem to know your way around a kitchen Dax.\"\n\n\"I like to cook, I prefer baking though.\"\n\nShe nods. \n\n\"Well you are an excellent baker. I imagine it appeals to your perfectionist tendencies. I like baking but it doesn't always allow for on-the-fly improvisation as easily as cooking does; not to mention the mess it makes.\n\nAnd too it can be a rather exacting science and I admittedly have problems staying inside the lines. My othermama would have loved you. She too, was methodical and meticulously exacting, said men made better cooks. Though in her opinion men did everything better than women.\" \n\nShe snorts and shakes her head. Draining the shrimp and patting them dry she slides a generous pat of butter into a pan and cranks up the heat. She seasons and tosses the shrimp and scatters them in the hot pan where they sizzle and jump for a few minutes on each side before she turns off the heat. \n\nGathering glasses, cups, silverware and placemats she lays everything out. I help myself to a cup of coffee and pour her one. \n\nShe plates the grits and gravy puts the shrimp on top and sprinkles everything with crisped prosciutto and passes me a plate. The yellow stone-ground grits are creamy and tangy with a cheese I can't place, the gravy is delicious and smooth and peppery and the shrimp are well seasoned, it's delicious.\n\nThe woman can cook. \"This is seriously good, what'd you put in here?\"\n\n\"That would be telling.\" She smiles mysteriously.\n\nWe eat in silence for a few moments really savoring the food.\n\n\"Feeding me like this, you know we need to get married!\"\n\nSighing around her food she says, \"I don't do marriage either.\"\n\nI pause and look at her as she calmly continues to eat.\n\n\"Children, church, parsley and marriage. Is there anything else to add to the growing list of things you don't do?\"\n\nPutting the fork down, she rests her chin in her hand looks at me.\n\n\"Don't you think you'd be better off with someone a bit more traditional? It's not too late to call this off. I mean dating in the office is unwise and a bit clich\u00e9.\"\n\nThat smarts. And if I didn't see a contradictory something in her eyes my feelings would be hurt. I decide to be a little sharp myself.\n\n\"How we met is anything but clich\u00e9, and you know it. Anyway, I've been with traditional women and I've never had one that affected me like you do. It's too soon and too late to even think about calling things off, so just stop it.\"\n\nHer hand drops as she looks at me. I can see her face heating. She goes back to eating. \"It's all about the chase and I think you'll quickly get tired of that.\"\n\nIf I didn't know better I'd think she was deliberately spoiling for a fight. I decide to change course. \n\n\"You wear glasses?\"\n\nShe shakes her head, and shrugs. \"Yeah, why?\"\n\n\"They're very sexy.\"\n\nShe frowns and grunts. \"Glasses are a thing right now and it really bothers me when I think of all the names I was called as a child. I started wearing them at age 8, it was not pretty. It did spur me on towards a high school job so that I could buy my own contact lenses. These posers wearing them as a fashion statement should be slapped silly. \n\nI don't usually wear them outside the house but my eyes were irritated because I fell asleep in my lenses and woke up a dried out itchy and red mess. My glass of scotch didn't help matters just further dehydrated me. And before you ask, No, I don't imbibe hard liquor every time I'm upset.\"\n\nShe's damned touchy this morning.\n\n\"That's not what I was getting at. I'm not judging. If there were anything at my place I probably would have had a drink myself. My point is that I clearly affect you as much as you affect me.\"\n\n\"So far you kind of bug the shit out of me.\" She looks at me coolly.\n\n\"That's because you're stubborn. I dig how bad-ass you are, but does everything have to be a fight?\"\n\nShe continues to look at me calmly but that eyebrow slowly goes up. \n\n\"Relationships are based on acceptance. Acceptance is key. So, if you want me,\" she gestures sweepingly to herself with one hand, \"this will be your cross to bear. This is it, what you see is what you get and I don't see any of this changing.\"\n\nShe's all but daring me.\n\n\"Take it or leave it? Is what you're telling me?\" \n\nI can plainly see I'm going to have to strong-arm her at every turn. \n\nSitting back with crossed arms she calmly but matter-of-factly looks at me. She jumps though as I reach out and quickly snatch her off her stool and kiss her good and hard. It's the only solution I can think of. I bend her back and feel her up, stroking her back and butt as I kiss her forehead, cheek and neck.\n\n\"And just so you know, every time you arch that brow, I want to fuck you.\" She laughs nervously and tries to push away but I'm holding her too tightly. \n\n\"You don't scare me, Lou. I'm quite determined and meaner than I look, especially when I want something. And I want you. So you just bring it on little girl.\"\n\n\"I am not a little girl.\"\n\nShe can barely talk though as I stand her up, stroking her back, kissing her neck and sucking at her earlobe. \n\n\"Yes you are. You're a brat. You've just not had the right kind of chastising. Now, take off your jeans.\"\n\nWatching me through half closed eyes she unbuttons her Levi's and slides them down. I move the dishes to the sink and pick her up and place her on the counter with a satisfying plop.\n\n\"Lift your arms.\"\n\nI take off her top.\n\n\"Lie back.\"\n\nShe does and I skim her panties down her silky little legs. \"I'm going to give you a proper tongue lashing.\"\n\nShe looks like quite the feast laid out before me. I slide her forward on the counter and put her legs over my shoulders and dive in. Finding her berry-like clit, I lightly tongue and suck at it, eating to my heart's content. I can feel her tensing. I enter her with my tongue and curl it to touch the roof of her vagina and it sets her off, there's Lulu juice everywhere. \n\nThe counter is the perfect height. I can see everything, her pulsing toffee and pink center is just where I want it. \n\nWhile she spasms I slip on a condom and slowly slide inside her. I've got her knees bent and held apart and her smooth, plump, little sex seems to be stretched to its limits as I watch myself slide in and out of her. \n\nThe paleness of me sliding into the darkness of her is the most erotic thing imaginable. I watch her contracting around me; she's coming again. I don't want to come just yet so I pull out and rest for a few moments watching as her breathing slowly calms, she seems to be drifting off. Lifting her legs, I slowly start to rub the length of my dick along her clit and her eyes flash open as she gasps and tries to inch backwards.\n\n\"Hold still.\" Holding her hips I continue to rub her with it very lightly until she's arching off the counter. I spear her again. Balls deep in Lulu. I start to move faster trying to hit every sensitive bit of her I can. Her legs start to shake.",
        "\"What are you doing to me?\"\n\n\"Thoroughly but gently fucking you.\" She gasps and her eyes roll back in her head as the second orgasm hits her hard, the pocket tightens and pulls on my dick so deliciously. \n\n\"Dax!\" \n\nI feel her stomach clench and tighten as she yells my name and passes out. I finish, fucking her as hard and as fast as I can while she continues to spasm around me. Two or three more strokes in her prone body and I stop and pull out and look on in fascination at the little hole that brings such joy. I bend and kiss it. Now that's what I call pussy.\n\nShe's completely limp as I pick her up and wrap her arms and legs around me and carry her to the bed. She opens her eyes to find me smiling at her as I lay her down. She looks at me apprehensively.\n\n\"Sleep now.\" I kiss her forehead and pull the sheet over her and she burrows into a pillow and drifts off.\n\nImpressive, that ability of hers to fall asleep the instant she shuts her eyes. \n\nI quickly put things away, wipe down the counters and stack the dishwasher. 10 am on a Tuesday and I am walking around her home in my boxers having just eaten another of her excellent meals and fucked her silly on her kitchen counter and she's naked and waiting in bed. \n\nI am in a much better place than I was 24 hours ago. We nap for a while and then she suddenly sits up.\n\n\"I need to check in not to mention I won't be able to sleep tonight with all this napping, it's too strange to be here in the middle of the day like this.\" She turns to me and sighs. \n\n\"You are a bad influence.\"\n\nGoing to the chair where I placed her jeans, she gives the clothes a shake and looks under the chair, searching.\n\nWhat are you looking for?\n\n\"My undies, you must have dropped them in the hall somewhere.\" she goes to leave the room.\n\nI call out. \"I have them.\"\n\nShe walks back into the room and looks at me. \"I knew it was too good to be true. You have some sort of fetish, don't you?\"\n\n\"Yes, I have a fetish, a pussy fetish and you won't be wearing panties for at least the next 12-24 hours. I want the full experience.\"\n\n\"Seriously, you can't expect me to walk around like this all day?\"\n\n\"I do.\" I get up and go towards her. \"I plan on having you every hour on the hour.\" I put my arms around her and walk her back to the bed.\n\nI slip a finger inside her she's wet. She's always wet. I roll on a condom and sit her on top of me. She takes all of me in and smiles as she arches that eyebrow and starts to move. \n\n-\n\nWhen I wake up she's still lying on top of me, chin on folded hands staring. Watching me sleep seems to be a quirk of hers. It's cat-like, predatory and more than a little unnerving.\n\n\"What's up? Was I snoring?\"\n\n\"Snoring? Please, you know my policy. No, I'm just looking at you. You're kind of beautiful Dax.\"\n\n\"Oh, yeah?\" it's my turn to blush. I've gotten cute or handsome, but never beautiful.\n\n\"Let's not pretend. You know you're good looking.\" \n\nShe sits up slowly and straddles me, trailing her hand down my chest and stomach. \"I've seen you eat so I don't know how you have this beautiful skinny body.\" \n\nShe touches my face. \"And in my next life I plan to come back as stubble just so I can live beside this dimple.\"\n\nKissing me there, she trails her fingertips lightly over my forehead, eyes, nose, lips and chin. Looking fascinated, she gently runs her finger over the prominent bump on my nose.\n\n\"How'd you break it?\"\n\n\"I was 8 and pretending to be Superman and standing on a folding lawn chair when it closed up on me, fell face first onto a concrete planter.\"\n\n\"Ouch. Superman eh?\"\n\n\"I broke it again at 14 fooling around with my brother. We had a knockout drag down fight is what and I kicked his ass good.\"\n\n\"I like it.\" She laughs lazily and kisses the bump. Maybe it's not so bad being stared at if this is the effect I have on her. She's making me tingle all over.\n\n\"That damned square jaw-line, you're so fucking cute I could bite you.\"\n\nI can't help but smile. \"Well bite me then.\"\n\nWith a mischievous gleam in her eye she comes down and bites me firmly on the jaw. \"Just like the lions do on National Geographic.\" She nods wisely.\n\nI smile at her. \"So you like the look of me?\"\n\nShe looks up at the ceiling nods her head and shrugs. This is quite a moment.\n\n\"You barely look at me though. I look at you.\"\n\nShe tilts her head to the side. \"I look at you all the time. I just don't stare.\"\n\nI give her a narrow eyed look.\n\n\"You stare; you just wait until I'm asleep. I'm on to you.\"\n\nShe looks momentarily embarrassed. Ah ha! Caught.\n\nShe blurts out, \"Well it's impolite not to mention unnerving to openly stare at people.\" \n\nShe looks at me pointedly. \"The first time you saw me you just stared for I don't know how long.\"\n\n\"You were practically naked Lou. All that flesh? I am a man you know.\"\n\n\"That wasn't my fault, you walked in on me. What about at the office, when you saw my natural hair? You looked at it like it was about to attack you. It was insane.\"\n\n\"C'mon now, imagine my shock? One minute I'm being accosted by this mysteriously sexy little girl in England who just disappears and the next I'm meeting Kathleen Cleaver in a power suit. I was having an out of body experience, it couldn't be helped. Besides, there was so much hair I was wondering how you stayed upright.\"\n\nShe giggles and scoffs in mock indignation, lightly punching me in the stomach.\n\nShe laughs out loud. \"Are you implying that I'm a bobble-head?\"\n\n\"I didn't say that. But I wouldn't deny it. Thank god you have all this,\" I grab a nice handful and squeeze, \"or else you'd tip right over for sure.\"\n\n\"I am not a bobble head, thank you very much! And as a rule, sex and the workplace do not mix. You managed to sneak past security. The only other time I broke that rule I ended up being too scared to go to the cafeteria having slept with one of the chefs. Good for my waistline, but annoying as hell. I eventually found another job. But women talk. You've been noticed.\"\n\nShe narrows her eyes. Oh this is getting even better.\n\n\"Are you jealous?\"\n\n\"Generally no, unless you give me reason to be.\" \n\nShe looks somewhat serious. \"Thou shall have no gods before me. I'm just sayin' \". She shrugs.\n\nI chuckle lightly. \"That's an easy fix you know?\"\n\nShe raises an eyebrow.\n\n\"I don't have a problem with PDA.\" I look at her. There are a few men I'd like to put on notice around there as far as how they look at her anyway.\n\nShe shook her head firmly. \"No. We are keeping this quiet for the foreseeable future. I don't want word of this in the office. I barely know what it is we're doing as it is.\"\n\nLong seconds passed as he scowled while she coolly stared back.\n\n\"Come on we're both starving. I think a salad is order.\"\n\n\"Salad? I know I'm skinny but I do eat real food.\" I was hoping for a good steak, or at least some protein. Loving her silly is quite the workout.\n\n\"Don't be like that. Trust me, you'll get good and full. We've been eating wrong. We need vegetation. I do anyway.\"\n\nShe stands and puts on her jeans and slips on her top. \n\n\"You boil up some eggs and grill some chicken. I'm going to make us a Gargouillou salad. Trust me you'll like it.\" \n\nSlapping me on the shoulder, she nods once emphatically and leaves.\n\nI dress and as instructed and grill a couple of chicken breasts and boils four eggs. Looking up I see her leaving the greenhouse, tasting this and smelling that as she walks back.\n\n\"It's going well out there. I've got mixed baby greens, spinach, arugula, rose petals, radishes, nasturtiums, tomatoes, garlic, thyme, chives, baby kale, young carrots, parsnips and watercress and chervil.\" \n\nShe's got what looks to be a laundry basket full of vegetables. This should be interesting. After preparing a vinegar bath and carefully washing everything thoroughly several times, she spins it dry in a salad spinner.\n\nPouring some olive oil in a pan she puts in some garlic, thyme and chives and turns the heat down low. I skin the parsnips and chop the tomatoes and chicken. \n\nTossing some of the greens in the hot oil for a bit she waits a beat while some of it wilts away, most of it stays intact. She arranges it in the bowl, separates a tangerine and tosses it in, adds some dried cranberries and marcona almonds and stilton cheese adds the chicken gives everything a good toss and a squeeze of tangerine and lemon juice and finishes with rose petals and nasturtium blossoms. \n\nIt looks more like art than food and I'm a little doubtful.\n\n\"I've seen it, but don't think I've ever eaten flowers before.\"\n\n\"Of course you have. Everyone has if they've eaten broccoli and cauliflower.\"\n\nShe drags out utensils and glasses and two very large bowls which she fills.\n\n\"Let's eat out back.\"\n\nWe take everything outside, it's warm and there's a breeze and the garden is lovely. I take a cautious bite and it's incredible. Every other bite gives off different flavors and there's plenty of chicken so it feels like a real meal after all.\n\n\"The way your eyes have just about rolled back in your head, I take it you like it?\"\n\n\"Whatever Lou.\"\n\n\"I promise not to tell the others that you're a salad eater,\" she says in a mock whisper.\n\n-\n\nIt's 7:30 am and we're both restless and sexed out for the moment. I usually go for a morning run, but I am willingly forgoing my routine in favor of quality time.\n\n\"It's a beautiful day, let's get out of here. Maybe a picnic somewhere, but first I have a request?\"\n\n\"A request?\"\n\nThose eyes and lips, luscious kisses. \n\n\"A dress? No pants, no jeans, a dress. Today is not a workday. I like the way they sway in the back as you walk by.\"\n\nShe looks at me and frowns but says - ok. She's getting easier. I take a few long moments to kiss her again.\n\n--\n\nWear a dress. Men! I swear. \n\nHe's a damned good kisser though. A great kisser in fact. Every kiss is deeply luscious and breathtaking. Serious kisses from a serious man. \n\nA dress. The feminine ideal, the prurient male fantasy, it's what they all want. \n\nSo clich\u00e9. But where's the harm? It's such a small thing really. Who's to say I can't be both? Fine, Let's see if I can do this.\n\n--\n\nI head off to the shower. When I come back she's nowhere in sight. I hear a car horn. She's at the curb in a shiny chrome black car with a trident as an emblem. She retracts the hard top roof and waves at me to come on and lock the door. It's very warm and sunny so the top down is a good idea. \n\nI look at her personalized license plate PJU2GBD? Virginia, capitol of the personalized license plate. What the hell does that mean? She's all smiles as I slip in beside her. \n\nIn a simple white dress with her hair blown out and left down she's gone from pretty to stunning.\n\n\"Where to?\" I ask.\n\n\"Your place. Where do you live?\"\n\n\"Near Williamsburg.\"\n\n\"Excellent! I get to put him on the highway.\"\n\n\"Him?\"\n\n\"Yes, the car. James Brown.\"\n\nI howl with laughter. \"Great! And you our license plate is an acronym for . . .?\"\n\n\"Punks Jump Up to Get Beat Down.\"\n\nI look at her. What the hell have I gotten myself into? She kicks off her shoes, driving bare foot. We are on 64 and out of the city in 6 minutes. Drives like a bat out of hell, but seems to know where all the speed traps are and to slow down accordingly. I like the way she handles the car, driving with one hand, not hesitating to pass people. She hikes up her dress.\n\n\"Hike it up baby, hike it up.\"\n\nShe puts her foot down a little harder. The speedometer reads 90 mph. Is that emblem a trident or a pitchfork? I'm not scared, much. Looking over at me the eyebrow raises in mild concern.\n\n\"You ok?\"\n\n\"I'm good.\"\n\n\"You need me to slow down?\"\n\n\"No, do your thing. There's a speeding ticket out there somewhere with your name all over it.\"\n\nShe laughs. \"I only drive it like I stole it on the highway, and knock on wood,\" she knocks on my forehead, \"I've never had a speeding ticket.\"\n\nShe puts on some music cranks it up and is rocking out to it singing a little. I look at the screen, what the hell?! Marilyn Manson?! All I know about Marilyn is that he seems like some evil angry Goth Tranny. Halloween music.\n\nI hold my own and manage not to blink or flinch as I believe this to be some kind of test. It's soon over and she's softly singing something loungish and dreamy with an acid jazz vibe. Her voice isn't great but she stays within her range, low, natural, abstracted, a little tired even, as though she were trying, after a long evening of scotch, to sing herself to sleep. \n\nIt's goes on in this vein for several songs and I'm doing well until I hear Jay Z start singing Big Pimpin' I look at her and cock my head to the side like really. Her tastes are all over the place. Is she schizophrenic, bipolar or what? It'd explain a lot. She turns down the music and shrugs.\n\n\"You wanted to know me, this is me. \n\nI love music, rock, country, world music, R&B, Rap, I even like some Klezmer. I love literature, am especially partial to Victorian. \n\nI like foreign film especially French and German and whatever is passing for independent film these days, though my favorite movie is the Godfather. \n\nAm a serious news junkie, I listen to NPR and read the Guardian, NYTimes, LATimes and Wall Street Journal, but only online, I don't like ink on my hands. \n\nI love good food, great sex, basketball, boxing, sharp suits, SciFi, single malt scotch, Belgian beer, Cuban cigars, cake and fast cars just for starters. \n\nAnd right now I like you too. You're pretty high on my list of likes in fact. So this is me. I've not done something like this . . . in a really long time. \n\nI generally have a 'Hell No' policy when it comes to men. I can be . . . uncompromising.\"\n\nShe finally takes a breath and looks over at me. I'm smiling at her.\n\n\"You're a little strange but don't change, it's what I like best about you so far.\"\n\n\"You say this now . . .\" I hear the doubt.\n\n\"I mean to hang on with both hands. I'm ambidextrous by the way.\"\n\n\"Ambidextrous? Sounds untrustworthy, pick a hand already.\" She glances over. \n\n\"Well I'm rooting for you anyway.\" She throws her chin up at me like players do on the court. \n\n\"Good Luck!\" She puts her foot down again.\n\nCHAPTER 32\n\n\"You live in the woods.\"\n\n\"This is not the woods.\"\n\nShe looks around and looks at me again.\n\n\"I'm not going to chop you into little pieces or chain you in the woodshed. I'd never do that here.\"\n\nShe smirks at me.\n\nWe pull into my driveway beside my mustang. I'm glad I cut the grass before I left. The place is still standing and looks all right. I turn on the lights.\n\n\"It's not much but it's clean and mine and pretty much paid for. Just me, a bunch of computers and my guitar collection.\"\n\nHer eyes light up. \"You play guitar?\"\n\n\"I do.\"\n\n\"You any good?\"\n\n\"I'm not half bad.\"\n\n\"Well, I love live music, so anytime you want an audience . . .\"\n\n\"I'll keep that in mind.\"\n\nAfter the grandeur of her place, my home seems Spartan. Looking around she inhales deeply.\n\n\"It smells like you here.\" \n\nShe's smiling so I'm guessing this is a good thing. Admiring my beat-up leather chesterfield sofa she says it's got great character. And she gushes over my red kitchen aid standing mixer.\n\n\"You are really serious about baking, huh?\"\n\n\"I like cake almost as much as you do.\" \n\nI tell her about my experience at a Williams and Sonoma annual sale as the only man in the store. \n\n\"I was able to grab the last mixer because it was on a high shelf and this 65 year old woman verbally assaulted me. She tried to imply that I'd snatched it from her as she was about to pick it up. \n\nLuckily the manager saw the whole thing and said 'he simply picked it up first ma'am'. \n\nLulu, I swear she followed me around the store for 20 minutes. I was so nervous I forgot about the knife set I was looking at and paid for my purchase left the mall.\"\n\nShe laughs heartily. \n\n\"So that's your idea of fun? Shaking down grandmothers for mixers and fleeing the scene? I see.\"\n\nI swat her with a dishtowel. What do you want to eat woman?\"\n\nShe looks at my crotch. \n\n\"I meant for breakfast.\"\n\n\"That's what I want for breakfast.\"\n\nShe slides an arm around my neck, unzipping my pants with conviction, slipping her hand in my boxers. I'm hungry but my dick seems to have other ideas. Her hair is a beautiful mess from the drive and there's a wicked gleam in her eye as I untie her wrap dress to find a black bra and matching thong. Breakfast can wait. I grab her hand and drag her off to my room. Let's do this. \n\nTaking off her dress she drapes it over a hook on the door and comes over to me and takes off my shirt unbuckles my belt and pulls down my pants and then my boxers, she brushes her breasts against my dick as she stands, again kissing me and then shoving me so that I fall to the bed. \n\nLaughing softly as she positions me the way she wants to before quickly straddling me and trailing kisses down my chest and stomach, which chooses that moment to growl. Shaking her head she addresses my stomach.\n\n\"Nope, no food for you right now.\" \n\nShe plants a kiss there and keeps going and grabs the base of my dick with one hand and kissing the tip, opens her mouth and pushes down on me and sucks hard on the upstroke, she moves her tongue around and around the head and starts it up again with the up and down, her hand moving in concert with her mouth, sucking hard, she gags a little but keeps going, her tongue swirling around and around the tip feels amazing. \n\nGod she gives great head. I love it. All I can see is that pert peach of an ass barely covered with a little patch of lace just past her bobbing head. \n\nFurther and further she slides until I'm lodged in her throat. Jesus wept! She's got her other hand on my thigh for balance squeezing it gently before sliding it down to cup my balls.\n\nIn a voice I barely recognize as my own, \"Lulu, you should stop baby. Please, I'm going to come in your mouth if you don't.\" My balls are tight and boiling.\n\nNodding with my dick in her mouth she looks directly at me and hums approvingly. \n\nWow that's it, I come in her mouth and those perfectly glossed lips stay trapped around me and don't spill a drop as she swallows repeatedly. I'm drowsy warm and on the verge of sleep when she slides her warm soft body on top of me.\n\n\"That was amazing.\"\n\nMmmhmmm, she says sleepily and we drift off. \n\nI wake up an hour later to her kissing me and guiding my fingers into her. \n\n\"Can I help you miss?\"\n\n\"I believe you can sir.\" With a firm grasp she eases down onto me. I grasp her waist to take her off and she frowns and tightens the grip of her thighs to an impressive degree. I laugh.\n\n\"We need a condom.\"\n\n\"Just finished my period, not ovulating. I've seen your card and you've seen mine. I say we don't.\" She rolls her hips in a circle. The tight silky feel of her is beyond incredible. I groan and give up.\n\n\"Yes ma'am.\" Glad to lose the argument. I let her have her way with me until we finally fall back happily exhausted. \n\nI wake find her halfway on top of me again but asleep this time. I'm starving.\n\nGently shifting her onto the bed, I slide on boxers and gingerly shift my junk around. I'm sore from my abs to my groin. She comes hard and repeatedly. I've not had this much sex in a long time, jerking off does not count. \n\nI love the sight of her stretched out on my bed. She's on her stomach with those dimples at the top of each plump buttock looking like absolute perfection. Damn. I groan to myself. I have got to get out of here or I'll try to fuck her again, and I'm a little scared to think she'd let me. I chuckle to myself. \n\nI start the coffee. What to feed her? Omelets, toast and coffee? She feeds me so well at her place and here I am with barely a thing to feed her. Eggs, grits and bacon? \n\nI'm pouring myself a cup when she comes in wearing my polo. She comes over and hops up on the counter and pulls me to her and puts her legs around my waist.",
        "\"What's for brunch?\"\n\n\"I was thinking Omelets, toast and coffee, but I'm not sure I have enough eggs. I've not made groceries so I don't have enough of anything really. But I know where we could score a good home cooked meal because we need to get out of here, or else we're going to fuck each other to death.\"\n\nShe shrugs. \"I am about to be a woman of a certain age. I have needs and now that I've warmed up I think I could pretty much fuck you sideways. We're just getting started, so man up.\" She calmly smiles as I almost choke on my coffee. I hear her stomach growling and look at her pointedly.\n\n\"I'm going to ignore that threat, Lou. Now put your clothes on. We're going across that lake or rather around it to that house for a meal.\n\n\"In that case I need to scrub up first. You're that friendly with your neighbors? I barely know mine,\" she snorts.\n\nHere goes. \"No. My parents live there.\"\n\n\"You live with your parents?\" She hisses, looking incredulous.\n\n\"I don't live with my parents. I live here and they live there. Don't panic, they're going to love you.\"\n\n\"Your parents. Meet your parents? Absolutely not. No! You have completely lost your mind.\" She hops down.\n\n\"They're just people, just ordinary black folk from Tugaloo, Mississippi.\"\n\n\"Take your black girlfriend to meet your parents from Mississippi?\"\n\nI give a small inward chuckle. She didn't hear me. \n\n\"They are not even like that Lou. You're in for a shock when you meet them. I know it. They probably know I'm here anyway by now. I've not seen them in days and need to check in. C'mon don't be rude?\" \n\nAppealing to her home training seems to work. I see her jaw working though as she grits her teeth.\n\n\"Fine.\"\n\nTurning on her heel she goes into the bathroom. I hear the shower start. I go in and pull back the curtain and join her. She's wrapped her hair in a towel and is lathering furiously with the soap using my washcloth.\n\n\"Dove soap?\" She looks at me accusingly. Slapping the washcloth and soap into my hands she rinses and exits the shower leaving me to quickly wash myself. I come out to find her wrapped in a towel, hairbrush in hand.\n\n\"I saw you had this brand in your cabinet at home and decided to get some is all.\"\n\n\"And you decided this when? You bought razors, deodorant, condoms and underwear this morning,\" she says ticking the items off on her fingers, \"not soap.\" \n\nFucking lawyers man always with the cross exam and indictment.\n\n\"I texted Pop's to pick up some for here that's all. I just want you to be comfortable. If you don't like the Dove maybe you can bring some of your fancy soap to use here.\"\n\n\"Your dad bought you soap for me? Jesus Dax!\" She's working herself up over nothing. \n\n\"My hair is a mess.\"\n\nShe takes a threatening step towards me holding the brush like she'd like to smack me with it. Taking it from her stiff fingers I sit her down and brush out her hair. She relaxes breathing deeply as the bristles drag against her scalp. \n\nCool calm and downright flinty at work but having a meltdown about meeting my parents. Hmmm . . . I kiss and massage her a bit and she slowly calms. She lets me dress her, but her little lip is poked out.\n\nNot wanting to come off as showy she makes me take my Mustang for the drive over. But when I shake my head and chuckle she gives me a look that could freeze hell.\n\n\"Man, you are testing the fucking friendship.\"\n\nFor all that piss and vinegar she's fidgeting and nervous and trying to make sure her cleavage is not too much. She's tense.\n\n\"If I'd known this was happening I wouldn't have worn this. Do you have a safety pin or something?\"\n\n\"Calm down Lou. You look fine.\" \n\nI quickly get out and open her car door. She gives me another withering glance and steps out, quietly looking around. \n\nTheir home is set back on an incline from the lake amongst fragrant Linden trees and there are wild ducks and geese. And right across you can see my place.\n\n\"It's nice here.\"\n\n\"At night, if the breeze is right you can smell these trees clear across the lake, 20 acres of mostly woods, Pop made me purchase my house from him, he gave me a good deal, but said there was no such thing as a free lunch in this life.\"\n\nShe nods. \"He's not wrong.\"\n\nI take her hand and call out as I bring her inside. \"Mom? Pop? Where Y'at?\"\n\nThe whirring ceiling fans are the only sound. There's the lingering smell of something recently fried and the more definitive smell of Mom's sweet potato pie. They can't be far and sure enough there they are, side by side, asleep in their chairs on the side sun-porch. They look small and innocent in their sleep. I gently wake them.\n\n\"Dax, where have you been?\" Mom says smiling at me.\n\n\"Son, you know you forgot to put on your timer lights and it was pitch dark over there. I did it for you and your mail is in the parlor as your mailbox was full to overflowing this morning. That dog of yours is out chasing something in the woods, I fed him but he likes to supplement his diet. It must be nice to have someone look after a place when you just up and disappear for days without word, not being a man of luxury, I wouldn't know.\" Pop grumbles.\n\nI sigh and shake my head. \n\n\"Mom, Pop? This is Lulu James. Lulu, this is Aurelia and Hannibal Wilde.\"\n\nHiding behind me she's pulling against me as I squeeze her hand hard and pull her around to meet them. She looks up at me giving me a quick little frown. They scramble to their feet.\n\n\"Lord boy you could have told us you were bringing company. I know you have a phone on you somewhere, you call and text here for everything else in the free world!\" Says Mom.\n\n\"Aurelia! He's bought a young lady home, be nice!\"\n\n\"Hello there young lady,\" he says. \n\n\"Hello.\" She's looking at him in the oddest way. I know she's trying to figure it out because except for the eyes we look just alike, he's about a shade or two darker than me. She looks at mom and she's even more confused. I have my mothers eyes. My mom is a beautiful black woman, just like her. I probably should've told her but some things just defy explanation and are easier to show than tell.\n\n\"Hello Lulu, welcome.\" Says mom looking at her curiously.\n\nLulu is shocked but she's rolling with it.\n\nPop puts on his glasses and looks her up and down and smiles from her to me and back again and looks at Mom and smiles and nods. He's a terrible flirt. Taking Lulu's arm, he escorts her in, asking if he can get her anything. \n\nShe looks amused and says she'd love a glass of iced tea if they have it.\n\n\"Coming right up.\"\n\n\"Mom we're starving, is there enough to go around?\"\n\n\"We were just sitting down to supper. I've made chicken and dumplings for dinner and fish and chicken fried steak and garden vegetables for supper, there's pie for dessert, more than enough. You know what we don't eat goes down to the shelter and I always fix plenty, never know when company's coming.\" She winks at Lulu.\n\nPops grumbles. \"Feeding those scalawags and ne'er do wells. Nothing but bums, drunks and ladies of the night. We are on a fixed income!\"\n\n\"Hanni, stop it. You know you don't like leftovers. Besides, we have plenty to tide us over. We're doing better than most. That's what's wrong with folk, no one cares for their neighbor anymore.\n\n\"If they ever did\", grumbles pops, he looks at his wife and softens.\n\n\"You know I love how sweet and kind you are.\"\n\nHe pinches her side and she laughs girlishly. Ah hell, they're in rare form today.\n\n\"But do you have to feed half the county Aurelia? I could see when you did it back home, hell most of those people are family. But you don't even know these people here. There is no free lunch!\"\n\nLulu, looking amused by the exchange, quietly sips her tea.\n\n\"Can we eat now?\" I ask a little impatiently. Maybe this wasn't such a good idea after all.\n\nMom gives me the hard look. \"Watch your tone. You and I are not too old to tango around here. Set the table Junie.\"\n\nLulu looks on the verge of choking from suppressed laughter and I just know I'll never live this down.\n\nI set the table and go out to the kitchen to help Pop bring in the food.\n\n\"Now she's alright. Seems worldly without being low-down and common, very down to earth. She's got a familiar look about her, like she's Creole or something nother. That red hair of hers is something else. She got people down our way?\"\n\n\"No idea, she might, I'm not sure. Her way of talking though, some of her phrases are straight from there. She'll say she needs to 'make groceries' for instance. She looks familiar to me too, but for the life of me I can't place her.\"\n\n\"Well I do like the look of her, she's a pretty little thing. Nice and busty too, just the right amount of thickness.\" \n\nHe rubs his fingers together. \"I take it this is the one you wanted the soap for.\"\n\n\"Yes sir. She's got me spinning though Pops. She cooks, she's funny, she likes ball.\"\n\nPops grunts. \"They all say that at first. Your mama got me with that lie too.\"\n\n\"Yeah, well this one actually plays, or at least she did in high school.\"\n\n\"That itty bitty thing does not play?\"\n\n\"I've seen it Pops. She's got a jump shot and everything.\" I cock my head at him and he cocks his back at me.\n\n\"I'll be damned.\" He pauses and thinks. \"So, you like this one?\"\n\n\"I do, but she's hard. Hard headed. A lawyer.\"\n\nPops rocks back on his heels and looks at me. I'm dealing out the shocks today. \"That sweet little thing's not a lawyer?\"\n\n\"As vicious as they come. You should see her around the office. She barks and they jump. That guy that was giving me trouble the first few months by email - L. James, turned out to be her.\"\n\n\"Ooooeee! Spicy! But spicy food never did agree with you.\"\n\nI sigh and shake my head. \"If spicy is another word for stubborn, she is that.\"\n\nLooking at me he takes pity. \"Take heart, stubborn people won't do anything they don't really want to. She must like you pretty good, here she is meeting us.\"\n\nTrue. Though I decide not to tell him about how I got her here to meet them in the first place let alone her stance on marriage and children. He'd tell me to run for the hills.\n\n\"You're treating her right?\" He levels his hand across the air.\n\nThis is Pops being subtle. His version of 'the talk' consisted of a repeated listening to Otis Reddings Tenderness. Sage advice. Most women, if you treat them right, they'll pretty much do anything for you.\n\n\"Yes sir, I am. She's . . . eager, capable too, no problems there.\" Just thinking about how eager and capable she is, is enough to get me going.\n\n\"Well if that's good the rest tends to fall into place sooner or later. Either that or one of you just gives in through frustration and worration. He chuckles and sighs. You are lucky I'm not younger.\"\n\n\"Old man, you know Aurelia March does not play.\" I look at him and we both laugh. \n\nI've heard the story. They met at a dance. He was on a date with someone else when mom saw him. 'She just reached right out and took me and that was it.' \n\nMom comes from an impressive matriarchy; responsible, complex, self-sufficient, of the earth, capable women. Most of them are business owners. All of them, to a one never wait to be asked, they inform a man they like him and that's it. Those March women were as fine as silk, soft as Sea Island cotton and hard as steel.\n\nOnce Mom decided to have him he never stood a chance. Something about Lulu that reminds me of those women.\n\nChecking his watch Pops gets up and excuses himself for a moment and quickly comes back and hands mom a pill for which she thanks him.\n\n\"Don't look like that Dax, its just vitamin D to help with calcium absorption. I lost a little height is all. I'm getting old it happens to everyone if you're lucky.\"\n\nA shadow crosses Lou's face as she sips her tea. \"So you've already found a doctor here?\" She asks.\n\n\"Yes and the doctors here are good, but I think I'm still in the market.\"\n\n\"That's putting it mildly. Mom doesn't like her new doctor.\"\n\nMy parents both scowl at me.\n\n\"What? We all know it's true, mom needs to be monitored, you both do.\" \n\nThere's an awkward silence as my parent look at me with pursed lips.\n\nLulu pipes up. \"My friend is a doctor, an OBGYN. I can have her ask around for you or have her get in touch with you if you'd like.\"\n\nMom's eyebrows go up in surprise. \"That's mighty kind of you cher.\" Mom says smiling softly before looking at me and quickly winking. \n\nThis is going well, these two are liking each other more by the minute.\n\nHaving spotted the beautiful basket in the center of the table Lulu asks about it and mom informs her that she wove it herself. They start talking up a storm about crafting. Lulu it turns out loves to crochet and is mostly self-taught, it's great on long flights. Says she'd like to learn weaving but it looks complicated. \n\nTalk turns to gardening with heirloom seeds, 30 minutes on varieties of corn, tomatoes and peas alone. We let them talk. Pop and I look at each other and shake our heads in commiseration.\n\nMom says, \"We have about half of our 15 acres under cultivation with soybeans and cotton. Our side-hustle generates a pretty steady income. Not too bad for a retired pediatric nurse and oilrig driller. There'd be even more under cultivation if it weren't for the kudzu. \n\nWe are fighting a losing battle against that stuff. To say that it's tenacious is an understatement; it grows a foot a day during the summer. I've never seen anything like it. We've been here a while now, a few years ago half the beehives on the property started producing odd colored honey. I set the hives amongst some Tupelo trees. \n\nThe whole reason we purchased the property was for those eight misplaced trees near the boggy part of the property and the Linden trees surrounding the main house. I was aiming for the white tupelo honey I grew up with in Mississippi. We are able to harvest the Tupelo honey easily enough during early to mid-May. \n\nBut the other year we were surprised that some of the hives presented with pale lavender honey in late early July. After some research by a botanist friend it was determined that it was a result of the kudzu and soybeans blooms. Hanni calls it Purple Haze and sometimes it is purple, depending on the heat levels, though mainly it's a pale lavender color. It tastes a little like tupelo honey, but sweeter. It's so popular and sells so well that I put in more hives. \n\nBetween that and the soybean craze we do alright around here. Hanni here spends half his good winter days beating back the kudzu while it's dormant so that it doesn't eat us alive in the summer. We purchased a backhoe last year to help with clearing the property. But since the blooms give us lavender honey I've decided to keep a good deal of it. That kudzu is an excellent reminder that everything and everyone has a purpose in this life and can be of use. \n\nFinding that purpose and or use can take a while, but it's there, in everything. I even use the vines to make baskets like this one from time to time and those sell as well. The Linden trees around the house produce an especially fine honey as well. Those trees when they flower actually smell like honey. I've got about 12 hives going right now all over the property.\" \n\nOpening a cabinet, Mom takes down a large jar of lavender colored honey and hands it to a clearly awed Lulu.\n\n\"Do you mind if I try some?\"\n\n\"Mais oui, cher!\"\n\nAs they have been since forever, the biscuits are in their usual center spot on the table sitting in a basket on a hot flat Mississippi River warming stone surrounded and covered with a moist clean tea towel. Opening the steaming biscuits they smear the butter and drizzle the honey. \n\nLulu's eyes roll back in her head a bit. She sighs in deep satisfaction. I've quickly come to understand her sighs and I could have sworn that those contented sighs were just for me.\n\n\"I love homemade biscuits, but I only make them at Christmas because they're so much work with the cold butter not to mention how hard it is to find full fat buttermilk these days. There's only one place in the city that I know of that consistently sells it. The honey is amazing, it's got a kind of flowery perfume to it.\"\n\n\"That batch might have more linden in it and maybe a touch of black locust flower too I suspect. \n\nBiscuits are only hard work if you do it the long way and,\" mom tilts her head to the side and looks at Lulu. \"It sounds like someone taught you how. If you come back I'll show you how I whip up the base in the food processor, takes no time a'tall. \n\nAs for the full-fat buttermilk, I feel you, if you have a source, send some back by Dax. I use a combination of heavy cream and sour cream these days as a substitute, that's what's going on here as I don't have the patience to make a proper clabber, as that would really set the biscuits just right.\"\n\n\"This honey is delicious. You may want to shop this around the city.\" She names two popular food stores in the city. \n\n\"Or at least some farmers markets, between this and those baskets you could have quite the business going, maybe even charge a little more, they'd eat this up.\"\n\nThey are enjoying themselves immensely and I have to practically pry them apart when it's time to leave 2 hours later. \n\nMom has given her a canister of her homemade Tilleul blossom tea and 3 large jars of honey. A white Tupelo, a golden Linden, and lavender Kudzu- inside one of her more elaborate baskets. \n\nIt's heavy and Lulu makes me carry it very carefully to the car. It went better and longer than I thought. They pause and then hug each other they've exchanged email addresses promising to stay in touch. Uh oh.\n\nPop hugs her too and looks beside himself.\n\n\"It was very nice to meet you Mr. Wilde.\"\n\n\"Call me Hannibal or Hanni for short.\"\n\nShe kisses his cheek, and that's just it for him, he's a goner.\n\n\"Oh, I like her much better than that Angela!\"\n\nMom pokes him with her elbow. I drag a laughing Lulu away. There's no telling what they will do or say next.\n\n--\n\nShe's rooting around in my closet. \"J. Crew, J. Crew, J. Crew. You are consistent I'll say that much. Ah Hah! Signs of possible style Paul Smith, Thomas Pink, Ben Sherman. So you are capable of something more than this glorified farm boy routine you've got going day in and day out.\" \n\nShe looks me up & down. \"You're changing right now. Here put this on.\"\n\nSigh, so it begins. We are headed to my timeshare at the beach, it's gotten even warmer and the trade winds will feel nice. \n\nWe stop off for a few essentials. I try to get her a bathing suit but she says she's not much for swimming; she picks up a couple of pairs of shorts and little tank tops. \n\nShe loves the house, says she's always wanted to live at the beach but is not an especially strong swimmer and is deathly afraid of being swept out to sea.\n\nI put on a rediscovered linen trilby, she kicks off her sandals and we go for a walk. She's very quiet, but looks content. \n\nI snap some pictures with my iPhone and she laughs and poses playfully. I snap pictures of the two of us, we look well together. Her in that white dress has my brain in a spin.\n\n\"I like your folks. Especially your dad, he has a wonderfully cantankerous exterior. Though the way his eyes light up when he looks at your mom I suspect it's merely window dressing for his creamy soft center. He has eyes just like my babyfriend. Your mom seems to know how to handle him.\"\n\n\"Well they like you too Lou.\"\n\n\"Why didn't you tell me about them?\"\n\nI expected this. \"How does one explain something like that?\"\n\n\"You open your mouth and say it.\"\n\n\"It's common enough where I come from but the rest of the world generally doesn't understand it. Every other person there is a product of some sort of swirl. You missed it when I said that my parents were ordinary black folk.\" \n\nShe blinks at me looking a little perturbed. ",
        "\"My family is black and white. A lot of us are mixed. Some of us come out white. Probable enough when you have mixed parents. My brother looks like them and I look like . . . well me. Its called genetic atavism. \n\nSupposedly, I am a one in a million anomaly, but where I come from it's really not all that rare. We are all of us mutts in this country and believe it or not there are very few 100% white or 100% black people walking around.\n\n\"Yeah, but Dax? You . . . I mean c'mon man. I don't even know what you are.\"\n\nI take out my license and hand it to her.\n\n\"Does it really matter?\" I can tell this is a make or break moment. \n\nShe stops walking and looks at the license for a beat. Finally she tilts head and shrugs.\n\n\"No, not really. You're you. And I am me. I have red hair and freckles, aren't we a pair. It does explain a few things, a lot in fact now that I think about it. Tell you what? I'll take you to Charles City, VA one day - we'll have a good laugh.\"\n\nWe walk quietly for a few moments\n\n\"Who's Angela?\" She asks softly.\n\n\"Someone I no longer see.\"\n\nShe looks at me questioningly.\n\n\"We were pretty serious for awhile. Our families are so close it seemed ideal. I don't think she loved me. She was in it for the emotional security of it being the thing to do, you know - college, marriage, children. \n\nAll our friends were on the same track and I suppose I was too until it dawned on me one day there was little or no passion to the thing. We were going through the motions. To do a thing just because everyone else is, is no reason at all. I don't want to look up one day and be in someone else's relationship.\"\n\n\"I saw a prom picture in your parent's parlor. Was that her? The blonde?\"\n\nMy sentimental parents and those pictures I swear to god. I can't rightfully gripe about it, they lost so much in the flood as far as memorabilia, but damn it all.\n\n\"Yes, that was her.\"\n\nI sense more questions coming.\n\n\"I have what will sound like a stupid question.\"\n\nI nod at her to go for it.\n\n\"Have you dated black girls before?\"\n\nI sigh heavily.\n\n\"Not successfully, no. I could never get close enough to them. A date or two tops. Comes down to trust I guess.\"\n\n\"I see.\"\n\n\"It's not about your being black Lou. This is not some fetish for the exotic. You're sexy, and smart and have a good heart, that's what I'm into. You are a strong black woman, why wouldn't I love that. My mom and all my aunts and many of my cousins are beautiful strong black women.\"\n\nShe looks at me and nods. We walk some more and happen upon a beach fair with a live band. They're covering a pop song and they're pretty good. Listening to the lyrics I see why she's so into it. Her sex takes me to paradise too. Bouncing and twirling around me, and looking at me like she'd like to jump me right here. I need to get her back to the cottage.\n\n\"Ok Madonna, enough with the dancing, let's go.\"\n\n\"Let's stay a little longer? Please?\" She whines adorably.\n\n\"No ma'am, we need to be somewhere private now.\"\n\nShe lets me lead her back, laughing as we barely make it in the door before falling down on the sofa. I open her dress and kiss her fluttering eyelids as she smiles at me. \n\nI sigh. She's lovely and surprisingly funny, all this energy and irrepressible spirit - So confident, strong, bold, and with a bit of guidance, uninhibited. Sexy as hell. \n\nAlso stubborn, literal, though there's an honesty to her being so literal all the time, literal yet secretive, high-strung and firmly set in her ways. Damned near intractable, a bit of a brat really. \n\nAdmittedly, I've not had many long-term relationships. I'm 41 and have never lived with a woman. Save some things for marriage is what I was taught. \n\nBut I've had some basic formative experiences. I've pursued and been pursued, only to realize it was all wrong. Pursued a few girls I desperately wanted to adore me back who did not. \n\nMade my first bumbling steps into lust and passion with Angela, I stayed with her for years because I was lonely, horny and selfish. Beautiful, deceitful Angela who killed two of my babies and never told me about it. Didn't even talk to me about it first just did it. \n\nAnd now there's this, which at first I thought was just a massive crush; but it's gone beyond mere attraction and lust. The reality of 'her' has given everything a startling Technicolor clarity. Emotion, lust and passion made physical and manifested with a sanity defying intensity. \n\nShit. I love her to death. She's so difficult, a total pain in the ass, and I've never wanted anything more in my life. How are we going to do this? \n\nSuddenly my head is pounding and I feel nauseous, like I'm about to stroke out. Stroke out right on top of her. \n\nTilting her head to the side she's looking at me in worried confusion. Dead at 41, died on top of her. Well if I have to die . . . I laugh a little at that.\n\n\"Dax, you ok? You seem a little out of breath and your heart is beating a mile a minute. We've not even done anything yet.\" She presses her hand to my chest and then her fingers to my neck.\n\n\"I'm fine.\"\n\n\"That's good to hear, because 41 is kinda young for a heart attack, I think.\" \n\nMassaging behind my ears with her thumbs the pain actually eases. Looking at her my chest expands. \n\nWe've already got this little thing whereas when stare at her too long she's puts her hand over my eyes. She does this now. \n\n\"Those eyes are killing me.\" She chuckles.\n\n\"What's killing me is how much I love you. Already, I love you.\" \n\nHer hand falls away and she stares at me as I stroke her cheek. \n\n\"Shit Lou, I've been a little bit in love with you almost since the day we met.\"\n\nI try injecting some humour. \n\n\"It was that Batman T-shirt and those little panties that did me in. I was a goner the minute I saw them.\"\n\nShe smiles a little but looks at me with eyes so large they could swallow me. With my hand on her chest I can feel that her rapid heartbeat. \n\n\"And now your heart's beating too.\" I smile at her. \"I know this is fast.\"\n\nShe having trouble and looks distressed as I kiss her quivering lips.\n\n\"Breathe b\u00e9b\u00e9.\"\n\n\"Y-y-you're not serious? You barely know me. This is not some fucking love-story Wilde. You insist on pursuing me, dupe me into meeting your parents and now you want what?\"\n\nI ignore all the piss and vinegar as she's clearly in a panic and on the verge of tears. The walking path is pretty close to here and last thing I want is for someone to hear her crying and think the wrong thing. \n\nI kiss her again and it intensifies and progresses. The lovemaking is tender sweet and passionate, but she's very quiet afterwards. Pushing too hard too fast Dax.\n\n\"You hungry?\"\n\n\"I could eat.\"\n\n\"There's nothing here to cook so I'm going to order takeout, ok?\"\n\n\"Cool.\"\n\nHer voice is a little huskier than usual. Not monosyllabic but it's pretty close. I pass her the menu, and she looks it over briefly and asks if this place is good.\n\n\"It's pretty good yeah, same owner for 20 years and they're raising the kids in the business too, delicious traditional seafood, Pops' got in so good with the family he sometimes rides the boat out when they go fishing.\"\n\n\"I'm so hungry I don't know what to eat.\" She pushes a shaky hand through her hair.\n\nNot good. \"Why didn't you say so?\"\n\nI take a deep breath. \"I took a few biscuits from Mom's, so here.\"\n\nI grab some orange juice from the fridge and give it to her. She drains the glass in seconds and I pour her another while she nibbles a biscuit. I'm trying to be patient. \n\n\"So, what is it you want?\" I ask softly. She looks at a loss. \n\n\"From the menu.\" I snap.\n\nHer eyes widen and then narrow and her nostrils flare.\n\n\"Crab cakes with coleslaw and hush puppies, a piece of fried flounder, a lobster roll, and a slice of key lime pie and a tall mint iced tea.\"\n\nThere's that memory Matt spoke of. She barely glanced at the menu.\n\n\"All that food?\"\n\n\"Just covering my bases. I'm going to take a shower.\" Grabbing another biscuit she stalks off.\n\nI place the order and order an extra Lobster roll, piece of pie and tall tea for myself. I turn on the television to space out for a bit and when I look up again 30 minutes have passed. I knock on the bathroom door.\n\n\"Babe, we gotta go get the food. You about ready?\"\n\n\"I'm in the tub. Can you drive a stick?\"\n\n\"Yeah.\"\n\n\"Just take the car, keys are in my bag.\"\n\n\"Alright, be back in a bit.\"\n\nI can't believe she's letting me drive her fancy car. I adjust the seat and mirrors wondering if she'll murder me for this later. It's a sweet ride, quickly and smoothly gets up to speed. I chuckle thinking of her little foot on the gas. \n\nI pick up the food, and gas up again, this car sucks down gas like crazy. \n\nI return in record time to find her sitting Indian style on the sofa flipping through channels. \n\nWearing a wife-beater of mine and plain white cotton panties, her hair has been secured somehow with a single chop stick. With her fresh scrubbed face and eyeglasses she looks like a precociously pretty little girl.\n\nI plate everything and put the tea in glasses and bring it out to the coffee table. It's a lot of food and we dig right in, eat what we can and put the rest away.\n\n\"Those crab cakes will be great with scrambled eggs.\"\n\nWe watch Star Trek for a while, but she's tired and nodding.\n\n\"Come now b\u00e9b\u00e9, time for bed.\"\n\n\"It's 9 o'clock.\"\n\n\"Yes, and we've had a long day, let's go.\"\n\nShe yawns. \"Man, you're bossy.\"\n\n\"Said the pot to the kettle. Come on, off to bed, it's time for sleep.\"\n\n\"Sleep?\" She blinks up at me smiling naughtily, twisting from side to side.\n\nI look at her and somehow manage to push down the desire. We need to sleep. Baby doesn't sleep enough and almost every night she wakes up and works a few hours and I know for a fact she's still jet lagged from a last minute trip to France in the middle of the week, and we've been at it pretty hard these last few days like we're trying to kill each other.\n\n\"Ok.\" Her mouth turns down a little but she yawns again and lets me lead her down the hall to the master suite. \n\nI pull back the mosquito netting and the sheet and get her settled. Out as soon as her head hits the pillow, she'll have to teach me that trick. I shower and come back and she's still sleeping soundly. I kiss her forehead and turn out the light and drop off myself. \n\nThree hours in she becomes restless and starts to toss and turn. It's a little stuffy, so I open the door to the deck. Tang of salt in the air as the tide comes in.\n\n\"You ok babe?\"\n\n\"I'm good.\"\n\nShe goes to the bathroom and comes back to bed and asks for a blanket, which I quickly find. We go back to sleep but after an hour or so, the tossing starts again. I turn on the lamp and look at her.\n\n\"What's wrong with you?\" I'm tired and want her to settle down.\n\n\"I should have bought my laptop. I rarely sleep the night through. I won't keep you up. I'll go out to the sofa and watch some television.\"\n\n\"Absolutely not, I don't plan on spending a single night away from you if I can help it. Now, come here.\" I open my arms and she hesitates a moment but quickly comes over and snuggles against me hugging me tightly. \n\n\"We've had a long day.\"\n\n\"Mmmm.\" She's calming as I stroke her back and when I look down again she's quietly sleeping.\n\nThe sun is well up by the time I wake up. She's still wrapped around me and as I disentangle myself to go to the bathroom she smiles shyly and pulls a pillow over her face. I hear a muffled squeal as I give her a pinch. \n\nThe coffee is just done when I hear the shower turn on.\n\nShe's put up her hair and is wearing the shorts and top we picked up. She puts on her shades, and goes out to the deck where she stretches while taking in the ocean view. \n\nI scramble some eggs and we have the rest of the crab cakes and fish from last night, with some bits of tangerine and grapefruit for breakfast.\n\n\"Lulu I'm gonna hit the shower and then we're gonna get on the road.\"\n\n\"Ok, I'll clear up.\"\n\nI am showered and dressed in 10 minutes just as she finishes the dishes. We head back and it's another beautiful day supposed to be 85 and not humid today but it's already 80 degrees according to the weather channel and it's only 9 am, it's going to be hotter than forecast I think. \n\nLulu puts the hard top back, readjusts the mirrors and seat. Rolling her eyes dramatically, she slides the seat forward looking at me the whole time. I smile sheepishly. \n\nQuietly rocking out to her music, Lips like sugar indeed, she's driving at a relaxed clip, just 5 miles over the speed limit, keeping up with the flow of traffic. \n\nA large SUV comes up suddenly from behind, flashing his high-beams in the universal language of asshole drivers everywhere, urging her to move and or drive faster.\n\n\"Oh for fucks sake! I can only go as fast as the car in front of me.\" \n\nWe are blocked by a large truck on the left side. She gets that look.\n\n\"I'm sorry.\"\n\n\"What for?\"\n\n\"This.\" Putting her foot down we zoom forward in front of the truck, she puts her foot down further and goes around the car, the bastard behind her follows and goes around her and zooms off. \n\nUnfortunately, there's the whoop-whoop of a siren and a flash of blue lights as we are ordered to pull over via loudspeaker. She throws her head back.\n\n\"Great, in the meantime the asshole that caused all this gets away.\"\n\nShe turns off the music. We wait and the officer eventually exits his car and comes over.\n\n\"Do you know why I pulled you over ma'am?\"\n\n\"Yes, sir.\"\n\n\"License and registration please.\"\n\nShe grabs her bag and drags out her license and opens her glove compartment and gets the registration, there are what look to be two police badges and a gun. The officer sees them but says nothing. He takes the registration.\n\n\"Your name is Lou James and you currently live at 312 Camellia Lane in Richmond, VA?\"\n\n\"Yes, sir.\"\n\n\"Please remove your eyewear ma'am?\"\n\nShe does.\n\n\"Thank You. Turn off the engine and remain in the vehicle.\" He returns to his car for what seems like forever.\n\n\"I've had the blue lights upon me before, but this may be the day I actually get a ticket.\" She waits calmly, tapping her fingers impatiently.\n\nHe comes back and stands for a moment looking sternly forbidding before breaking into a big grin. \n\n\"You look real good Lulu, how are Lili and babyfriend? I'd ask about Lenny, but I just saw him.\"\n\nShit they know each other.\n\n\"Hey Uncle Jack. Lili and the baby are good. We're all fine. How are you?\"\n\n\"I'm good, out here chasing down trouble makers like yourself. That Glock looks familiar? You got a permit for that?\"\n\n\"Yes sir, I have the permit, it's one of mom's.\" \n\n\"Thought so.\" He nods.\n\nSeeing him look at me pointedly Lulu pipes up \"This is my . . . uh boyfriend Dax, Dax Wilde.\" \n\nShe stumbles but she gets it out. Acknowledgment!\n\n\"Look at you blush!\" He trains a teasing grin on her. \"Mmmmhmmm, Alright now!\" \n\nHe reaches cross to shake my hand. \"Nice to meet you young fella.\"\n\n\"I'll let you go with a warning, on the condition that you come to the civic officer's dance and bring your fellow with you. But please wear a dress. Don't show up in a tux like last time.\" He laughs.\n\n\"Why not? I look almost as good in it as you do. Besides, those guys get pretty raunchy; it's for the best. But since I'll have a chaperone maybe I'll accommodate you, just this once.\"\n\n\"Maybe?! Just this once? I clocked you doing 115mph! You owe me some dances baby girl and I'll hold it over you to get you out for the Christmas ball too.\"\n\n\"Fine, Uncle Jack.\" She laughs.\n\n\"Don't worry about that fool that caused all this, you'll probably see him sitting by the side of the road a few miles up when you pass. Be good baby girl.\"\n\nHe kisses her forehead and whips out his cell phone. \n\n\"I'll see you in 8 weeks for my dance. That's right, I'm gonna practice with Arlene and see if I can't get up an office pool right now, see if I can't make me some money off this little venture. Lulu in a dress dancing? Sheeiiit that's $200, easy money. But please slow down.\"\n\n\"Yes sir.\"\n\n\"Arlene? Baby you won't believe who I caught out playing hooky.\"\n\nLulu groans. \"Tell Aunt A I say hello.\"\n\n\"Will do. And you,\" he says addressing me, \"watch out for this one she's a handful.\"\n\n\"I'm hanging on with both hands sir.\"\n\n\"Alright now, that's what I'm talkin' bout!\" He winks at me. \"Bye bye Lulu!\" He waves us off. She pulls away carefully, smiling at his reflection in her rear-view mirror.\n\n\"There is going to be some major fall out behind this. I can just hear it now. Shit!\" She groans again.\n\n\"Lulu, you are mad, bad and dangerous to know, I think.\"\n\nShrugging, she says, \"I got lucky today. The last time he caught me speeding he made me attend driving school. I think I have you to thank for that.\"\n\n\"I can't believe you didn't get a ticket.\"\n\n\"Man please, I'm a fucking lawyer. I haven't had a speeding ticket stick since high school.\" She chuckles darkly.\n\nWell shit. I look at her sideways and she shrugs.\n\n\"So that's your uncle?\"\n\n\"Not exactly, more like a lifetime hostage.\" She chuckles ruefully. \n\n\"My parents were on the force they worked SWAT and after the bombing, it was just me Lili and Lenny Jr. and those guys really pitched in, they did not let us fall. \n\nThe three of us spent a lot of time with Jack, Arlene and Harry. Every Sunday dinner, school play, dance recital, graduation, birthday and holiday he made sure we were ok. Each of my parents was an only child and Uncle Jack was Dad's best friend. \n\nSo yeah, I have about 50 or so 'uncles'.\" \n\nShe looks at me mischievously nodding. \"And they all carry guns.\" She catches the look on my face and grins.\n\n\"So, that's your mother's gun and those badges are theirs?\"\n\n\"Yep, that is Louelle's gun. My father's name was Louis, she named me Lou. She just knew I was going to be a boy and so when I came out a girl she didn't change it, just tacked on an extra Lou. \n\nShe was fantastically kind, almost to a fault. Lovely and tall, an excellent cook and a crack shot which is amazing considering her country of birth is pacifist. She worked the cage, where they keep the munitions. \n\nI keep the badges in this car, it's like having a little piece of them with me, they deserve to ride in luxury.\n\n\"And the gun?\"\n\n\"It's a Glock 26 compact polymer carbon steel spring pistol, it weighs less than 16 ounces. Light, powerful and deadly. A perfect gun for a woman. I've never fired it, not even at the range. On Moms birthday I take it out, take it apart, clean it and put it back. It's loaded and the safety's on.\"\n\n\"You know guns?\"\n\n\"I know that gun. All lawyers should - know a gun.\"\n\nI look at her carefully. \"You've not shot anyone have you?\"\n\n\"Nope, but the day is still young.\" She drawls looking at me pointedly.\n\n\"Policeman's daughter huh?\"\n\nShe sighs. \"Yeah.\"\n\n\"So, that's why no speeding tickets?\"\n\nShe shrugs a shoulder. \"I guess.\"\n\nI guess, my ass. She should be arrested the way she drives. \"You own a Tux?\"\n\nShe smiles. \"Why the hell not? I look hot in it. Big Pimpin' Baby!\"\n\nI laugh with her. \"I'm your chaperone?\"\n\nShe blushes. \"Possibly presumptuous of me, but you said . . . And, well you know what you said, so . . . yes.\"\n\n\"Mmmm . . . I see. Of course I'd love to go. I've just got one more question?\"\n\n\"What is this, an inquisition? I'm driving and you are distracting me.\"\n\n\"No I'm not.\"\n\n\"What is it Dax?\" She gives me the annoyed side eye.\n\n\"I'm your boyfriend?\"\n\nShe groans and looks away. \"Shit. You heard that?\"\n\n\"Yes. But I'd like to hear what you think about it.\"\n\nShe groans again making a to do of checking the rear-view and side mirrors. \n\n\"It is a ridiculous term, I mean you are definitely not a boy and I don't like labels, but at this moment, for all intents and purposes and lack of a better term, yeah, I guess.\"",
        "\"You guess what?\"\n\n\"Yes, you're my boyfriend, now lay off!\" She huffs and rolls her shoulders like she's shrugging off a court offender.\n\n\"Well as long as you're sure.\"\n\n\"Boyfriend or not, I'm sure you're about to riding in the trunk of this car if you don't stop badgering me. I will strap your ass to the hood like road kill if you say another word. I swear to God!\"\n\nAt least she didn't threaten to shoot me. I reach over and slide my hand up her plump little thigh and stroke her crotch.\n\n\"Ever ready, never scared especially now. I mean to assert my new rights.\"\n\nWe're making progress. She grudgingly smiles and I watch as her foot slowly presses down."
    ],
    "authorname": "MsLuLuX",
    "tags": [
        "black woman",
        "white man",
        "oral sex",
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/vision-ch-04"
}