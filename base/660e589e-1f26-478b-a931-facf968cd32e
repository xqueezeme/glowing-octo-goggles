{
    "title": "Lisa Ch. 07a: Jessica",
    "pages": [
        "\"You double crossing bastards!\" Riley yelled as he drew back his arm and landed blow upon blow on Scott's face and head.\n\n\"No!\" Jessica yelled and tried to run to Riley and stop him but Josh had sensed she'd try to get involved and hung back, blocking her way.\n\n\"Stay out of it Jessica!\" Josh said, \"I want to go help Jim and Scott but you have to promise me you'll stay out of it.\"\n\nJessica shook her head as she saw Scott covering his head with his arms and working to buck Riley off of him. Jim almost fell from the second punch Angus landed but pulled himself together at the last second and dodged Angus' next punch.\n\n\"I knew you guys were shitheads but I never thought you were backstabbing shitheads!\" Angus growled, dodging Jimmy's swing and landing another of his own.\n\nJosh pushed Jessica out of the way, and threw himself against Riley, knocking him off of Scott.\n\nWhen Scott sprang to his feet, Josh retreated again to block Jessica as she tried to move toward the men.\n\n\"Stop! Stop!\" Jessica yelled but they didn't pay her any attention.\n\nTears came to her eyes as she saw blood pouring from Jim's nose, and gashes on Scott's face. Jim and Scott began to land some good punches and despite the initial upper hand that Riley and Angus had gained from the surprise attack, the fights seemed evenly matched. \n\n\"I'm going to pound your pompous fucking face in you double crossing sack of shit.\" Angus yelled at Jim, the dull sound of flesh hitting flesh accenting his point as Angus' fist made contact with Jim's face. \n\n\"Good luck.\" Jim said through split lips. \"I have a few bones to pick with you too.\"\n\n\"Oh my God, stop!\" Jessica yelled again. Josh had diverted his attention from her and committed himself to the fight with Riley. Riley was working hard to fend both Josh and Scott off. \n\nJessica tried to grab Josh's arm but he shook her off.\n\nSuddenly Jim charged Angus and the two of them crashed against the sofa, knocking it back. They landed on the floor, struggling.\n\nFinding himself at a standstill with Josh and Scott, Riley kicked out his leg and landed it in the middle of Scott's chest, sending Scott flying. Then turning without warning he tackled Josh sending the both of them smashing into the wall behind them. Jessica could hear the swoosh of the air being knocked out of Josh.\n\nScuffling, grunting, muffled thuds as punches and kicks landed filled Jessica with horror. Her pleas for the men to stop fell on deaf ears and she felt a growing sense of fear that they were going to kill one another. Frustrated, Jessica clutched her hair and screamed at the top of her lungs, but the men were completely oblivious.\n\nJessica was desperate but not nearly as desperate as when Angus won the upper hand against Jimmy and stood over him volleying kick after kick into his stomach and ribs. Jessica's eyes strayed to the gun rack. She ran to the rack, grabbed a rifle and fired into the ceiling.\n\nThrough the shower of dry wall particles that fell around her, Jessica saw the men freeze and look over at her. A sudden rage overtook her. Jim was clutching his chest, his expression conveying the magnitude of his pain. Angus had frozen mid kick. Blood poured down Josh's face from the gash on his forehead and he looked crooked as he froze against the wall. Riley still pinning him there with one hand and his other hand frozen in the punch that he'd been about to land to Josh's face.\n\nScott had been in the process of getting up and froze in a kneeling position, looking up at her in obvious surprise.\n\nJessica lowered the barrel of the gun and swung it between Riley and Angus and with a pronounced pout she said, \"You promised you were only going to talk!\" \n\nTurning slowly, hands raised, Riley took one look at Jessica and despite how pissed off he was he couldn't help but be disarmed by her. There was an earnestness about her that took the steam out of his anger. The other men seemed to be calming down also. Angus stepped forward, raising his hands slightly, Jim staggered to his feet, clutching his chest, Josh pushed off from the wall, hands slightly raised, Scott slowly got to his feet.\n\n\"That was before I found out that these assholes nearly left with you and were willing to kill Angus and me in the process.\" Riley said, his eyes slipping from Jessica's face to the gun she held, and back again. \"And it really fucking pisses me off that the only people here that don't find you with a loaded gun unnerving are Angus and me.\" \n\n\"Grow the fuck up Riley.\" Jim wheezed, clutching his chest, \"Like it or not, you're playing catch-up. You can be as pissed off about it as you want but it doesn't change that fact. Blowing up about it all the time, isn't going to get you any closer to Jessica.\" \n\n\"Grow up?\" Angus demanded, \"That's fucking rich ... Fuck, we're the ones who covered our obligations with the clan. We're the ones who always had to work ... giving you all the time in the world to make Jessica fall in love with you. And for that, yeah, fuck, you better believe I'm going to blow up.\"\n\n\"Do you honestly think being home more often would have changed anything about how you dealt with Jessica? Changed your attitude toward her?\" Jim panted, running out of breath from the effort of speaking, \"Be honest with yourselves ...\" Jim added when Riley looked like he was going to argue, \"We asked you to go easier on Jess many times. Being home more often would've just given you more time to beat the shit out of her.\"\n\nSeconds ticked by before Riley exhaled and said, \"Shit.\" His shoulders sagged. He suddenly felt very tired.\n\n\"Put the gun away.\" Angus said to Jessica, \"We're done fighting.\" As Jessica returned the rifle to the rack Angus looked Jim over with an increasing sense of horror. \"This is so fucked. Fuck Jim, I'm sorry.\"\n\nJim nodded, \"'K.\" \n\nReturning, Jessica stopped and looked around at all the battered faces. Her face, already reflecting her distress with the situation, grew more and more glum as she moved her eyes from Scott to Riley to Josh to Angus , but when they settled on Jim there was no denying her sadness, incredulity and disappointment. Jessica went to Jim, slipping under his arm and melting against him ... cupping his bruised and bloodied face gently with her hand. \n\n\"You should sit down Jim,\" she pleaded. \n\nTilting his head slightly he pressed his lips into the palm of Jessica's hand and kissed it. Pulling her tighter against him he shook his head, \"I'd rather stand for now.\"\n\n\"Jess ...\" Riley said, shame overwhelmed him. He'd never felt anything like it before not even when he knew he was using his friends to do his dirty work with Jessica. \"... I'm sorry.\"\n\n\"You should never, ever, fight like this Riley.\" Jessica replied. She looked around at the men, before swinging her eyes back to Riley, \"You're the only family you have left ... no matter how much you disagree you can never turn on each other like this again. Please ... promise me.\"\n\n\"I don't know if I can Jess.\" Riley said, \"I don't know how not to be pissed about all the secrets, the inequality in our relationships with you. I don't want to make a promise I might break.\" \n\nJessica nodded and let her head fall against Jim's shoulder and she looked even more disappointed.\n\n\"So now what?\" Angus asked. He wanted Jessica in his arms, he wanted her to stop looking like he and Riley had betrayed her. \n\n\"Jim?\" Riley asked when the ensuing silence stretched.\n\nJim shrugged and winced from the pain, \"You tell me.\"\n\n\"I have no fucking clue.\" Riley replied in a despondent tone. He felt so out of his element.\n\n\"I think you do.\" Jim said. \n\nRiley shook his head. \n\n\"Jim, you always have a plan.\" Josh said, bereft of ideas himself.\n\nJim's laugh quickly turned into a coughing fit. Jessica struggled under Jim's arm, trying to hold him up as his coughing became increasingly painful. \n\n\"You're sitting down.\" Scott said, pulling Jessica away from Jim and taking her place as Josh moved under Jim's other arm. The two of them guided Jim to the sofa and helped him sit. As he tried to stop coughing and catch his breath Jessica slid onto the sofa beside Jim and wrapped her arms around him, comforting him as his coughing fit slowly subsided. \n\n\"If you do have a plan,\" Riley said when Jim didn't look like he was going to say anything else, \"I'd like to hear it.\"\n\nJim shook his head. \"The only plan I had going was for Jess. It was supposed to be a tailored version of marriage ... a way that maybe she could call herself our wife within the confines of our situation.\" He said locking eyes with Jess as he spoke, \"With the hope that eventually you'd be willing to marry us by your definition. No Jess ... don't worry or feel bad.\" He added when Jessica looked despondent about how her stance on marriage was being received. Pulling her to him, Jim looked around at the men, \"But I don't see how it could ever work. It was based on honestly, respect, and love and considering how little of that we have amongst ourselves there's no way Jess could believe in it enough to bother marrying us.\"\n\n\"Well, maybe we need the same plan for ourselves.\" Scott said.\n\n\"There's no fucking maybe about it.\" Josh said, \"What was the plan?\"\n\nJim shook his head, \"It can't be my idea. This'll have to be a group effort ... only way all of us can really commit to it is if we all have a say in it.\"\n\n\"Makes sense.\" Scott said, \"But if that's the case I want Jess involved in it too. This has to be all or nothing ... marriage material.\"\n\nJim nodded. \"And we have to think long term. I don't think it'll be marriage material if we don't think longer term.\"\n\n\"What does that mean?\" Angus asked.\n\n\"It means we have to consider what will make Jessica happy in the long run. Five years, ten years, twenty years, a life time from now, what will Jessica need to be truly happy.\" Jim replied. \n\n\"Fuck.\" Riley growled, \"That's what got us here in the first place.\"\n\n\"What do you mean?\" Jim asked when Jessica turned her face into his chest and groaned softly. Angus, Jim, Josh and Scott looked back and forth between Jessica and Riley. \n\nRiley sighed. \"Jessica already took a look into the future and worried that we'd force her to have kids.\"\n\n\"What?\" Jim gasped.\n\n\"Yeah, that's what I said.\" Riley added, when the other men stared at Jessica in slack jawed shock. \"She thought that eventually we would want kids and we'd make her have them. I was doing pretty good at convincing her we wouldn't do that until I realized she'd probably have your kid Jim. If none of the rest of us were here, she'd have your kid. I can fucking guarantee it and it fucking pisses me off.\"\n\n\"It's not true!\" Jessica said sitting up, looking around at the men with the horrified look of a person falsely accused of murder. \"I don't want kids, honest.\"\n\n\"You don't want kids because you've never wanted kids, or you don't want kids because of our situation?\" Scott asked unable to hide how hurt he felt. \"And be honest. I'm trusting you to be nothing but truthful Jess.\" \n\nJessica blinked at him ... \"Our situation.\" She said quietly. The reactions of the men around her ... all of them clearly hurt, made her heart hurt. She sagged against Jim.\n\nAngus' groaned as his expression contorted into a frozen mask of pain. Jessica looked around at the other men, so surprised by how badly Angus was taking this. The other men, particularly Riley, were watching Angus with trepidation. Sliding off the sofa Jessica went to Angus and slipped into his arms. Melting against him, Jessica cupped his face in her hands. Angus wrapped his arms around her and held her hard against him.\n\n\"Please understand that kids need so much. All the things that I had growing up ... I just can't ... I don't want to bring kids into this world without that.\" she said, looking into his eyes. \"I'm sorry.\"\n\n\"What if it happens by mistake? An accident. Will you want to get rid of it?\" Angus asked in a sad, pain filled tone. \n\n\"Oh, Angus. Is that what happened between you and Beth?\" Jessica asked. \n\n\"Would you get rid of it?\" Angus repeated.\n\n\"I don't know ... I'm sorry, but I don't know what I'd want to do. My goal is not to get pregnant. I have the pills and unless you make me stop taking them, that situation will never happen.\" \n\n\"Fuck kids.\" Angus grumbled, \"I just want you. That's all. What kinds of long term things would make you happy?\" \n\nJessica didn't know what to say. Aside from the whole pregnancy thing she hadn't thought long term.\n\n\"She likes to shower alone.\" Josh said when Jessica didn't respond. \"She'll want that long term.\"\n\n\"You do?\" Angus asked staring at her in startled surprise.\n\n\"How do you know that?\" Riley demanded from Josh.\n\n\"She asked that from us, a long time ago. On our nights with her, she showers alone.\" Josh replied.\n\n\"Was that because of all the things I did to you in the shower?\" Angus asked, guilt rolling over him in waves.\n\n\"Some of it.\" Jessica said. \"But it was just nice to have some privacy. It was the only time I ever got any.\"\n\n\"Privacy.\" Angus repeated. \"Showering alone. You got it. From now on you shower alone when you're with me.\" Angus said.\n\nRiley nodded, \"Me too.\"\n\n\"And she needs to go out.\" Jim said as he wheezed. \"She can't spend the rest of her life in this house, on this property ... she needs to go shopping, out to restaurants, dancing ... long term she needs a real life.\"\n\nScott nodded his agreement. \"And you don't need to worry about her being recognized.\" Scott added when both Riley and Angus looked like they were going to argue. \"I checked it out before planning to have Jess ride at the track. No one is looking for her ... they've given up ... they're just waiting for to find a body.\"\n\n\"Fuck Scott can you be any more insensitive?\" Josh demanded when Jessica's face went pale.\n\n\"Sorry Jess, baby, I'm sorry.\" Scott said moving to Jessica and Angus and wrapping his arm around her shoulder, giving her a hug, and kissing the top of her head while Angus still held her. \"I just meant that it's safe for you to go in public, no one will be looking for you.\" Scott kissed the top of her head again when Jessica nodded, but she was still pale. Wanting to comfort her more Scott pressed harder against her as she stood wedged between him and Angus and something about the moment ... Angus holding Jessica, Scott holding Jessica, gave Scott an idea that stunned him. His mind raced ... he was amazed they hadn't thought of it before. Temporarily left speechless by the idea Scott watched Riley and Angus struggle with the idea of Jessica going out in public. Expressions of anger, worry, fear, rolled over their faces as silence ensued.\n\n\"Okay.\" Riley finally said. \"I give the fuck up. You three are way beyond me in anything related to Jessica ... if you say she should go out, okay. But, I want her to be with us. Not alone, at least not at first. Understood?\"\n\nJim nodded and panned his eyes to Angus who still looked unreceptive to the idea. \"Angus?\" Jim asked.\n\nAngus thought about it for a long time before nodding. He locked his eyes on Jessica's, \"But like Riley said, not alone. Do you understand Jess?\"\n\nJessica nodded. In truth she was as thrown off by the idea as Riley and Angus were. She never, ever, imagined that she'd be going out in public with the men much less alone. \n\n\"And I want you to be our wife when we do.\" Riley added. \"By whatever way Jim was thinking ... if you accept it, when we go out I want it to be very clear that you are taken. Do you understand Jess ... \"\n\nJessica nodded, her eyes wide ... to Scott it was hard to tell who was more overwhelmed by the idea of going out in public, Jessica or Riley and Angus. \n\nScott cleared his throat, \"Good. I have the perfect first place to take Jess. A pool hall I always go to. We can go tomorrow, early in the day so it'll be quiet. Do you know how to play pool Jess?\"\n\nJessica shook her head, \"Not really.\" She replied and her look of surprise quickly morphed into excitement.\n\n\"Perfect. It's something we can all teach you, together.\" Scott said, \"Which is something we have to start doing more of ... things with Jessica, together. Including fucking her.\" \n\n\"What the fuck?\" Riley demanded not sure he'd heard Scott right. \n\n\"That's the ultimate thing we can all do together with Jess.\" Scott explained, \"It's the most intimate.\" \n\nAnxiety rolled over Riley, worry about how he'd compare to the others consuming him, but when Angus said, \"Holy fuck yes!\" and he looked at Scott with awe, Riley began to rethink the idea.\n\n\"But not with each other right?\" Angus demanded. \"We'd all be there, but the sex would be with Jessica ... I'm not fucking any man, not even you guys.\" He growled his face twisted in revulsion.\n\n\"No, not with each other ...\" Scott said. There were a lot of things he liked about sex but man on man was not one of them. \n\n\"Besides, I don't think our sexual preferences match too well.\" Jim said trying to stay calm. He looked at Angus and Scott. \"I haven't quite made it to the point of making Jessica scream ...\" he added, and for once it was him turning red rather than Jessica.\n\nJosh groaned. Here he was trying to quit having sex with Jessica and now they were all going to do it together? At the same time? But if that was what she wanted then he would do it ... he just wanted to make her happy. \"Jessica?\" Josh asked, \"What do you think?\"\n\nJessica looked around at the men clearly surprised. \"I never thought about it. But if you want to have sex with each other I don't mind.\"\n\n\"No, not that.\" Josh said. \"I mean. Do you care if we all have sex with you at the same time?\"\n\n\"Oh.\" Jessica said and stopped to consider it. She imagined all of them touching, probing, fucking, her at the same time and her pussy tighten. A thrill swept through her. \"No.\" she said in a breathless whisper, \"I think it would be fun.\"\n\nJessica's obvious arousal brought the men to full erection ... Jim gasped, pain shooting through his chest as his muscles constricted.\n\n\"Why the fuck didn't we think of this before?\" Angus demanded in a low guttural growl as he pulled Jessica harder against him, thrusting his leg between hers ... pressing hard against her pussy.\n\n\"I'm fucked if I know.\" Scott said in an equally guttural tone and moved up behind Jessica sandwiching her between him and Angus.\n\nRiley and Josh moved closer to the trio their heavy panting joining Angus, Scott and Jessica's but everyone paused when Jim gasped in pain.\n\n\"Jim!\" Jessica exclaimed and pushing back into Scott she managed to look over her shoulder, around Scott, and see Jim sagging on the sofa, one arm wrapped around his chest, the hand of his other one pressed firmly on his crotch where his cock strained against his pants. \"We can't do this until Jim gets his chest checked ...\" she said looking around at the other men ... her arousal still clearly evident on her face but her eyes filled with worry, \"Riley, please help him.\"\n\nRiley struggled to gain control of his urge to strip Jessica down and fuck her. With a grunt he nodded, \"I'll get my first aid kit from the car.\"\n\n\"Wait.\" Jim gasped, \"You can do that later ... right now we have to finish settling things between us. Fucking Jessica together, while a great idea, isn't going to help us fix the problems between us, and it's not going to make Jess our wife. Besides which, I agree fucking Jess together is going to be ... hot, but I still want my one on one time with her.\"\n\nScott nodded, \"Me too.\"\n\n\"That's just going to keep putting you guys ahead.\" Angus said.\n\nJim shook his head. \"Ninety percent of the time we do things together. And since all we're going to do for the clan anymore is intelligence gathering, Josh, Scott and I can rotate in for that work. We'll all get a shitload of time with Jess. But if we don't get past our secrets and resentments all the gangbanging in the world isn't going to improve things for us.\"",
        "Riley nodded. \"We need an oath. Something like the pledge we made the clan when we came of age ... but this time we'd commit to one another.\"\n\n\"To be honest, and committed to one another. Forever.\" Angus said, \"Do you think you could commit to something like that Jess. Would you be my ... our ... wife?\" Angus asked studying Jessica's face. For much of the conversation it was still riddled with lust but Angus' question sobered her. \n\nShe wanted to make this oath with them. But she also planned on turning them in at some point. Did she really have to? She closed her eyes. The final betrayal of her family. Would she be able to live with herself? Starting a new life with the men that killed her family? Enjoying it? No longer planning to turn them in?\n\nJust when she thought the surging guilt within her was too much, a thought occurred to her. If the way she understood Jim's idea was accurate, this oath would be a new beginning for them. For all of them. Was there any longer a point in holding them responsible for something that happened so long ago? Wasn't it her parents who always said move on. Forget the past and build a future? Could they have meant it for this situation too? She hoped so. Because, she wanted to try. She still couldn't marry them but she could go into the pact Jim had described. She was a different person now from what she had been when her family was alive and they were different men now too. \n\nOpening her eyes she nodded. The men seemed to relax, sexy, lopsided smiles settling on their faces. Jessica felt a warmth spread through her ... it was odd to realize that these men really loved her, even Riley and Angus.\n\n\"We'll write the oath in a minute.\" Jim wheezed, \"But we need to know how we're going to symbolize our commitment. What do each of us need to remind us of our oath and commitment to one another?\"\n\n\"A tattoo.\" Angus answered, \"Of something meaningful to us.\"\n\n\"Like what?\" Josh asked.\n\nAngus shrugged, \"I don't know. We'll think of something. Jess, would you get a tattoo? Something to mark you as our wife and symbolize your commitment to us?\"\n\n\"Yes.\" Jessica said, \"And Josh could come up with a design for a tattoo.\" She added smiling at Josh. \"He's a great artist.\" She explained when the men looked surprised.\n\n\"Not that great.\" Josh said looking embarrassed by the praise.\n\n\"Great.\" Jessica added. \n\n\"You've seen his art?\" Riley asked.\n\nJessica nodded, \"He's making a comic. It's very romantic. He'll have it published one day.\"\n\n\"Really?\" Scott asked, \"Does it have sex scenes?\"\n\n\"Not yet ...\" Josh said, \"but it will.\"\n\n\"Can we see it?\" Riley asked.\n\n\"I'd rather you didn't.\" Josh said, embarrassed. \"It's ... personal.\"\n\n\"How the fuck are you going to publish it if you won't even let us read it?\" Angus demanded.\n\nJosh nodded. \"Okay. Let me add the sex scenes first.\"\n\n\"And you can come up with a tattoo design then?\" Jim asked.\n\n\"Yeah, sure I can.\"\n\n\"Good, and then we can get Corey to come over and do the tattoos for us.\" Scott said.\n\n\"Corey?\" Angus demanded.\n\n\"Yeah, Jess is allowed in public now remember ... that includes our friends.\" Jim replied.\n\n\"Right ... forgot.\" Angus replied.\n\n\"What else is a good symbol?\" Jim asked.\n\n\"Rings.\" Riley said, \"I want wedding rings. Are you okay with that?\" he asked Jessica.\n\n\"Yes.\" Jessica said, giving Riley a smile. The genuine enthusiasm of the men had her feeling warm inside, feeling wanted. It felt good.\n\n\"Jess, what about you, what kind of a symbol makes the commitment mean more to you?\" Scott asked her.\n\n\"When I was a kid, my friends and I used to make blood oaths.\" Jessica said. \"We'd prick the tips of our fingers and press them together.\" Jessica added when the men looked perplexed. \"I always felt closest to those friends.\" Jessica continued. \"But, if you do that ... you have to promise not to fight anymore. You can't fight with the person you have a blood oath with.\"\n\n\"We won't fight any more Jess don't worry.\" Jim said, \"Part of our oath is honesty ... if everyone sticks to the oath there will be no resentment and no need to fight.\"\n\n\"Is that true?\" Jessica asked, looking around at the other men, \"Do you promise not to fight?\"\n\n\"We promise Jess,\" Riley said, the others nodding agreement.\n\n\"So a tattoo, rings and blood oath? Is there anything else?\" Jim asked.\n\n\"I'll get a paper and a pen so we can write down the oath.\" Scott said when no one had anything to add.\n\n\"I've got a needle in the first aid kit.\" Riley said, \"We can use it for the blood oath.\"\n\nWhile Riley and Scott were gone Angus slid his hands onto Jessica's ass and squeezed, pulling her in, he growled in her ear, \"And when you're our wife we're going to gangbang this sexy ass. I can't fucking wait ...\"\n\n\"Fuck Angus ...\" Jim gasped, doubling over as his cock, still hard from the earlier gangbang discussion, strained against his pants, \"don't get her worked up again ... not now.\"\n\nAngus chuckled, his hot breath on her ear causing shivers of anticipation to engulf her making her pussy even more wet. Sliding his hand along the inside of her leg, he pressed his hand firmly against her pussy,\"Too late Jim ...\" he grunted, \"Isn't it Jess ... your pussy is wet and needy, ready to be eaten ... why don't we take a little snack break.\" \n\nJessica whimpered, she wanted that so badly, she wanted him touching her ... she rocked her pussy harder on his hand.\n\n\"Fuck yeah.\" Scott said returning from the kitchen with a pen and paper but dropping them unceremoniously on the coffee table and moving to Angus and Jessica. \n\nJessica's clear willingness to participate propelled Josh closer. But he stopped a few feet away. She was willing to participate, she wanted it, that was clear. And so his promise to protect her was still being respected, but it occurred to him that they were a mere few minutes away from making the oath together. And he couldn't, in good conscience, make an oath with Jim without telling him about Pam. To be completely fair to Jim it would have been better to tell him when he was physically healthier. Giving Jim the chance to kick the shit out of him ... but he couldn't put Jim in a position in which he'd have to break the oath. Decision made, he no longer felt horny, just nervous. About both Jessica and Jim's possible reactions ... neither would be very happy with him. \n\n\"Holy fuck ...\" Riley exclaimed slamming the door behind him. He was too horny to care about being compared to the other men. Dropping the first aid kit on the coffee table he moved to the foursome also but then Jim gasped in pain as he shifted on the sofa, cutting through Jessica's lust filled haze.\n\n\"Wait.\" She panted, her tits heaving against Angus as she tried to catch her breath. Pushing back from Angus she looked over her shoulder at Jim, \"We can't do it now ... Jim can't join in.\" \n\n\"Sure he can.\" Angus said sliding his hand up under her shirt, under her bra, squeezing a tit ... bringing his mouth to hers, kissing her hard. Fingers in her hair, clutching and holding her in place as his tongue fucked her throat. She felt one of the men press up behind her and she certainly hoped Jim really could join in because she didn't think she could stop any more than the men could.\n\n\"And we're not married yet.\" Jim said. \"Don't you want the group fuck to seal the marriage? Doing it now won't mean the same thing.\"\n\nJessica felt hands pulling at her clothes. God she wanted to be naked so bad ... to have the men naked, to feel their hot skin and hard muscles on her, under her, in her ... Oh God she was going to explode, but when she opened her eyes she saw the bruised, cut and bloody faces of Angus, Riley and Scott and it cut through her lust. Jim was right, this would be so much better once they took the oath, once they were all cleaned and bandaged up, once they were all committed to one another and ready to celebrate it with celebratory orgasms. Despite being completely ineffectual, Jessica planted her hands on Angus' chest and pushed. \n\n\"Wait, please ...\" she said, looking down at Scott and Riley as they knelt on either side of her, lifting her feet to get her pants off, \"Angus, we should be married first.\" she said as he took the hem of her shirt and whipped it up over her head. Scott was busy undoing her bra.\n\n\"Don't worry baby, we'll fuck the shit out of you when we're married too.\" Scott muttered with a throaty chuckle. Jessica looked around for Josh, suddenly realizing he wasn't undressing her and she found him standing slightly off to the side, watching her.\n\n\"Josh, what's wrong?\" she panted as Riley swallowed her left tit with his mouth, Scott the right, and she felt three of Angus' fingers slide into her pussy. He took her swollen and throbbing clit in his teeth and chewed. A blinding pleasure rocked her and Jessica threw her head back and screamed as her pussy squeezed hard, soaking Angus' face with her juices. Her pussy still pulsing Jessica straightened intent on taking Angus' cock in her mouth. She slid her hands down Riley and Scott's chests ... rock hard abs and behind the waistband of their pants ... her finger tips brushing the head of each man's cock, moaning at the wetness of their precum. \"Josh, come closer ...\" she said, starting to sink to her knees, \"I'll take care of you and Jim in a minute.\"\n\nJosh watched Jessica sink lower, looking up at Angus who had guessed her purpose and stood, pulling his cock out of his pants. She opened her mouth wide. On the sofa Jim was watching Jessica, Scott, Riley and Angus and he was panting hard, clutching his chest with one hand, rubbing his cock over his pants with the other. He looked like he wanted nothing more than to feel Jessica's mouth on his cock right then. \n\n\"Christ Josh,\" Jim said, \"We need to say the oath first, stop them!\"\n\nJessica had just taken Angus' cock in her mouth and she was stroking Riley and Scott's cocks hard and fast. The three men where moaning progressively louder.\n\n\"There's only one way I can think of to stop them.\" Josh said, \"But you're not going to like it.\"\n\n\"For fuck sake Josh just do it.\" Jim said.\n\nJosh nodded, took a deep breath and said \"Jim, I raped Pam .\"\n\nJessica screamed, \"No!\" on Angus' cock ... letting go of Riley and Scott's cocks, she planted her hands on Angus' thighs to push herself away from him. It took little effort because Angus, like Riley and Scott had heard what Josh had said and stood dumbfounded, staring at Josh. Jessica scrambled to her feet, and positioned herself between Josh and Jim, holding her palms up to Jim. \n\nJim was stunned. Everyone, except for Josh was looking at him, waiting for him to do or say something. But he couldn't. He was numb inside. He felt nothing, he could say nothing. \n\n\"It's not exactly like it sounds,\" Jessica said. Jim sat wide mouthed, and pasty white, staring at Josh and then he slid his eyes to her.\n\n\"You knew about this?\" Jim demanded.\n\n\"Yes. I'm so sorry.\" She said going to Jim, sliding on his lap, straddling him, cradling his face in her hands. \"I know what it looks like ... with Pam killing herself, but it's not necessarily a cause and effect situation.\"\n\nJim brought his hands up to rest on Jessica's naked hips and stared at Jessica. The fact that she was naked on his lap worked its way through his surprise muddled mind and made the whole conversation surreal. \"But you have to admit that it's suspicious.\"\n\nJessica nodded. \"But it's not like Josh just raped her out of the blue ... they were secretly dating.\"\n\nJim turned his eyes to Josh in surprise. \n\n\"Tell him Josh. Tell him how you were dating Pam ... it was for a few months, right?\" Jessica urged.\n\n\"Josh ...\" Jim urged also when it looked like Josh wasn't interested in defending himself at all.\n\nFinally he nodded. \"Yes, we were dating for about two months.\"\n\n\"And did you rape her like you raped me? Just couldn't stop? No real violence?\"\n\nJosh looked up at Jessica. \"Jessica, I don't think there are different grades of rape.\"\n\n\"Trust me Josh, there are.\" Jessica answered and worked really hard at not looking over her shoulder at Angus. But Angus knew what she meant and groaned. \"What I mean is that it was more like a ... What do they call them in those magazines?\" Jessica asked Scott who had moved closer. Riley too ... Angus stayed where he was.\n\n\"Date rape.\" Scott said.\n\n\"Date rape.\" She repeated. \"That's it. It doesn't change the fact that it was rape ... but it's not like some stranger beat her up and raped her at knife point ...\"\n\nAngus groaned again. He never had a knife but he sure was a stranger who beat her up and raped her. Damn it he felt like his guts were being ripped out.\n\nAnd suddenly Jim realized he had a problem. When he found out that Josh had raped Jessica, he had barely reacted. No righteous indignation, no anger. Now, when his shock about Josh raping his sister wore off, he was certain he'd be indignant and angry at Josh. Jessica would surely have to wonder why he cared more about his sister's rape than hers. Jim couldn't do that to her. Every fiber of his being rejected that option. No matter how awful it was that Josh raped Pam, Jessica was right, it didn't necessarily follow that Pam killed herself because of it. The two could be at worst loosely related and at best not related at all. Pam was dead. Jessica was very much alive. And Josh was one of his best friends. No matter what, he was going to have to forgive Josh. At all costs, their group of six had to stay together.\n\n\"It's okay Jess.\" Jim said when it looked like she was going to launch into another argument in defense of Josh. \"I had no idea that you two were dating.\" He said to Josh. \"But I remember how upset you were at her funeral. And I don't think it was just out of guilt. Pam was always a little off. I think I'm in shock right now so I'm not feeling much one way or the other, but if I get upset later I will honor the oath and work it out with you. Thanks for telling me about this.\"\n\nRiley and Scott exchanged an incredulous look ... both looked to Angus but he was staring at Jessica's back and seemed oblivious to the conversation.\n\n\"What the fuck?\" Riley demanded under his breath. \n\nScott nodded, \"Kinda kills the mood.\" And he began gathering up Jessica's clothes.\n\n\"And Jess, this is exactly the kind of thing that we have to tell each other. I'm sure the guilt was eating away at Josh. And you. You just aren't allowed to know these kinds of things and keep them to yourself. Do you understand?\" Jim asked.\n\n\"But Jim.\" Jessica said, \"I understand when it's my secret. But I can't go around telling other people's secrets. It's rude, and no one will trust me.\" Jessica replied.\n\n\"You have a thing about rudeness don't you?\" Riley demanded.\n\n\"Yes I do.\" Jessica replied. \"It's rude.\"\n\nRiley snorted.\n\n\"Fine. You have a point.\" Jim said. \"But when everyone is living up to the oath then no one should be keeping secrets. Under that premise, if you're keeping a secret it will be your own, and that's not allowed. Got it?\"\n\n\"Yes.\" Jessica said, exhaling in relief. As it'd become clearer that Jim wasn't going to hurt Josh or even really be mad, Jessica had settled lower onto Jim's lap and become aware of his hard-on. Straddling Jim, her legs and pussy lips were spread and she could feel his bulging crotch pressing against her meat. Inadvertently she'd started rocking her hips and though it caused him pain, Jim was rocking his. \n\nScott hesitated, thinking he could easily get back in the mood watching her sex ass move up and down on Jim's lap, but Riley's growled, \"You are fucking kidding me!\" snapped him out of it. Moving behind Jessica, her clothes draped over one arm, Scott wrapped his other around her waist and lifted her off of Jim. \n\n\"Gonna get you dressed babe.\" He said into her ear when both she and Jim looked at him in surprise. Placing her on her feet he crouched next to her and held her pants open for her, winking when Jessica looked down at him, her eyes sliding between him and Riley. \"I got you out of them, it's only fair I get you back in.\" he said as Jessica leaned on his shoulder and lifted her foot. Pulling her pants up once her second foot was in the second pant leg, Scott buttoned her pants and pulled her shirt over her head, \"I only know how to get bras off ... don't really need it right now anyway.\" He added with a lopsided grin. Jessica melted into his arms, but she looked at Riley with concern. He looked angry and the way he scowled at Josh sent fear rippling through her. She'd been so sure Jim would be the one angry at Josh that she'd never considered the other men's reactions. \n\n\"Back the fuck up Jim. You're letting him off on this?\" Riley demanded. Riley stalk closer to the sofa and stood glaring down at Jim. \"He killed Pam Jim ... Pam, your sister. You remember her right? She's the one you thought you let down. You blamed yourself for her death for the longest fucking time ... you moped around for months after the funeral. Your fucking parents ... they were never the same after that ... and you're going to just let him off the hook?\"\n\n\"Riley, please ...\" Jessica began, trying to go to him, but Scott had his arms around her and wouldn't let her go.\n\n\"And you ...\" Riley said turning on her, his expression so livid Jessica shrank back against Scott, \"We'll have a talk about you and secrets don't you worry ... right now though I want to know why you're going so easy on him Jim?\" Riley cast a disgusted look at Josh, \"And how are we going to deal with things like this after the oath?\"\n\n\"After the oath, we'll all be subject to consequences, just like Jess is.\" Jim said when Riley had finished his rant and stood glaring at him, \"But I am letting Josh off on this and you should too.\"\n\n\"Yeah, you were always a bleeding heart. I guess I shouldn't be surprised.\" Riley growled after a moment of quiet disbelief, \"But just because you're too much of a pussy to make him pay for what he did, doesn't mean the rest of us won't.\"\n\n\"I think you should reconsider that.\" Jim said now just as pissed off as Riley.\n\n\"And why's that?\" Riley demanded.\n\n\"Because Jessica had the same if not worse done to her and she's still alive.\" \n\nSilence hung in the air. Riley slid his eyes to Jessica.\n\n\"Fuck ... Jess ... I'm sorry.\" Riley stammered.\n\nAll Jessica could manage was a nod. It was overwhelming to know that Jim was forgiving a horrible crime against his sister because of her. She was thankful for Josh's sake, but she felt a little like she was stealing Pam's justice from her. But it didn't take her long to realize that she was sacrificing her family's justice ... Pam's was just one more sacrifice. All this sacrifice had to be worth it in the end. For her sake, her family's sake and Pam's something good had to come out of this even if it was just that the six of them lived happily ever after. Scott's hug had become increasingly stronger as he buried his face in her hair.\n\n\"I'm so fucking sorry.\" He murmured in her ear. Jessica leaned back into him, lacing her fingers in his short hair and caressing his head.\n\n\"Thank you.\" She replied.\n\n\"Shit Angus, are you alright?\" Riley asked. Scott turned toward Angus, taking Jessica, still wrapped in his arms, with him. Seeing Angus Jessica gasped. Face red, vein bulging on his forehead, Angus was glaring at Jessica.\n\n\"Angus ...\" she said patting Scott's arms until he let her go. \"Are you upset about the rape thing?\" She asked, moving to stand in front of him.\n\n\"You mean, am I upset about being the stranger who beat the crap out of you and raped you? Maybe I should be happy that there was no knife involved?\" he demanded, \"Does that make me more acceptable to you on your sliding scale of rapist ratings?\" he added. \n\n\"Are you mad at me or at yourself?\" Jessica asked stunned by his anger.\n\nAngus paused. \"I guess myself.\"\n\n\"Then why are you acting like you're mad at me?\"",
        "\"I don't know. Sorry. But Jess, you said so yourself, the things I did to you were way worse than what the other men did, even Josh. How can I ever make up for that? How can I ever be equal?\" \n\nJessica slipped into his arms. Bringing her hands to his cheeks she gently ran her thumbs over the cuts and bruises, trying to soothe him. \"We talked about this, remember, in the car?\" she began, her cheeks turning pink when Angus' expression made it evident that he remembered the car clearly. \"I've moved on. And so have you, and this oath is a new beginning for all of us. Let's just start over okay, clean slate for all of us.\"\n\n\"Okay.\" Angus said the tension leaving his body. Jessica felt him melt around her. Pecking his lips she turned so she could see the other men. She looked around at the them. The blood on their faces was drying, eyes, lips, cheekbones were swelling and apart from the dejected expressions on their faces, they looked tired and broken. She wished they could take a break to clean up and rest but she recognized the wisdom in completing the oath before anything else. \n\n\"This oath symbolizes a new beginning for us.\" She said holding Riley's gaze, then Scott's, Jim's, Josh's, looking over her shoulder at Angus, and then reversing the pattern, \"In my mind, we go forward from today by letting go of the past. We have an opportunity for a new beginning, let's use it ... please.\"\n\n\"Starting from scratch?\" Angus asked into her hair.\n\nJessica nodded, \"Complete scratch.\"\n\n\"I'm in.\" Scott said. Jim, Josh, Riley and Angus agreed too.\n\n\"Josh.\" Jim said. \"You must have been feeling like shit for a long time about Pam.\"\n\nJosh nodded. \"I'm sorry Jim. You have no idea.\"\n\nJim stuck his hand out, \"I appreciate it. I'm not sure that I should be the one to offer forgiveness ... you didn't rape me. But for what it's worth, I forgive you.\"\n\nEyes rimmed red, Josh shook Jim's hand. \"Thank you.\" Josh said. \n\n\"One more thing,\" Jim said once both he and Josh composed themselves, \"Before we write and take the oath ... Jess, you hate the name Jessica. It'll take some getting used to but we can go back to calling you Lisa.\" \n\nJim's question was met with stunned silence. The men were taken aback but Jessica looked completely derailed. Her reaction cut the men to the core. Guilt weighed down on each of them as they remembered everything they did to make her accept her new name. It was clear Jessica remembered too. \n\n\"Jessica ... Lisa ... fuck ... I'm sorry.\" Angus said in a dejected tone. God, if there was one thing she had to resent all of them for, especially him, it was that. They'd taken her very identity, the one thing that she'd clung to with such veracity. \n\nRiley groaned. Just like all the other horrible things they'd done to her, he had given the order to change her name. It occurred to him that she could change her mind about the oath, now, remembering this. She could change her mind and he couldn't blame her. \n\nScott and Josh shifted their eyes between Jessica's frozen expression and Jim's earnest one ... once again struck dumb by Jim's abilities to think of everything. The biggest freedom they could give her ... her identity back, Jim was without doubt a genius.\n\nJessica gaped at Jim. Her initial response to Jim's question was astonishment. Her name, the first battle she'd had with the men. The first thing they'd taken from her ... arguably the most damaging thing they'd done to her, and she had all but forgot about it. But her second response was a fierce and absolute repulsion. Her mind reeled. Lisa was a different person. She existed at another drastically different time in her life. She was Jessica now and to change that was just as much a personal assault on Jessica as the first name change had been.\n\n\"I resented the name for a very long time.\" Jessica finally said shuddering at the memories of that time. \"But Lisa belonged to my parents, my brothers, to my old life ... she doesn't belong here. I'm Jessica now and I want to stay Jessica.\" \n\n\"But you resent it.\" Riley said.\n\nJessica shook her head, \"No. I don't resent it. I don't think we would be where we are if I was still Lisa, and I like where we are. Please, I just want to be Jessica ... your Jessica.\"\n\n\"You're sure?\" Angus asked. \n\nJessica nodded, \"I'm positive.\"\n\n\"Okay.\" Jim said, \"So to recap, we're going to do as much together as we can. Riley and Angus, you should join us for workouts and target practice ...\"\n\n\"And fucking.\" Angus said, \"We fuck Jessica together from now on.\" He continued in a low, sexy, growl in Jessica's ear. Jessica shivered in anticipation and pressed herself back against Angus as hard as she could. Feeling his cock straining against her, and his arms, his body, so strong and powerful holding her, made her want him so bad.\n\n\"Fuck yes!\" Scott hissed. Riley and Josh grunting their agreement.\n\nJim nodded his agreement, then cleared his throat, \"We'll keep our assigned days with Jess. One on one fucking when it's our day is fine, but no tag teaming. More than one of us with Jess means all of us... to keep things fair. Angus, Scott ... no experimenting on your own, it's all of us together or only one of us.\" \n\n\"Sure thing Jim.\" Angus replied.\n\n\"No problem Jimbo,\" Scott added locking his eyes with Jessica's when she glanced at him, \"We'll wait for the rest of you to make Jess' eyes roll to the back of her head ... curl her toes ... squirt across the room ...\"\n\nA collective groan from the men and a very distinct moan from Jessica had Scott, Riley and Josh moving toward Angus and Jessica while Jim sat on the sofa panting and frustrated with his inability to move.\n\n\"Fuck guys ... can we finish this fucking oath first?\" Jim demanded. \"And I want my fucking ribs taped up before Jessica squirts anywhere.\"\n\n\"Guys.\" Josh said grabbing Scott and Riley's arms before they made it to Angus and Jessica, \"Jim's right. Let's make Jess our wife first.\"\n\nStruggling for control Riley and Scott stopped. The sound of panting filled the room. Angus worked hard to control his need to strip Jessica down, bend her over and fuck her ass, and it wasn't long before he realized he was going to fail unless he got some distance from her. Looking around his saw Riley staring at Jessica and he realized that it was still Riley's night with Jessica and once again he'd managed to get in Riley's way.\n\n\"This is going to fucking kill me.\" Angus said into Jessica's ear, \"But it's still Riley's night with you ... you should be with him.\"\n\nJessica nodded and moved to Riley who more than willingly pulled her into his arms. But then he looked around at the other men who were still struggling to get themselves under control and it occurred to him that if they were going to share Jessica sexually, all of them at the same time, it would get pretty ugly if they thought only of themselves and spent the time jockeying for their turn with her. To avoid any future issues, he thought it best if he start to set an example of sharing now. The men were seating themselves, Scott in the armchair, Josh and Angus on dining room chairs that they'd hauled into the living room. The only fair thing to do seemed to be to let Jessica decide who she wanted to sit with. First anyway. Maybe she'd rotate. God, she'd have to rotate when they were having sex ... The mechanics of how that was going to work escaped him. But for now, he'd stick with seating arrangements and hope he could avoid feeling jealous if she didn't pick him. Man, if he got jealous over that he was afraid to see what he'd do during sex.\n\nHe took a deep breath and exhaled before asking, \"Jess, who do you want to sit with?\" \n\nThe other men looked at him in surprise. But Jessica didn't miss a beat.\n\n\"Jim.\" She said. But froze when she saw the looks on the other men's faces.\n\n\"What's wrong?\" she asked.\n\n\"Are you always going to pick Jim first?\" Angus asked.\n\n\"Um. No.\" Jessica said carefully. She realized that she had to be careful with how much attention she paid Jim. Even a new beginning wouldn't remove old resentments. And then a thought occurred to her. She loved them all. And she honestly enjoyed the company of each of them. But in her heart of hearts, Jim was her best friend. She looked at Angus, and then at the others. How was this going to work? Couldn't she love one of them in a different way? Just as a friend?\n\n\"I picked Jim because I want to make sure he's okay.\" She added. \"Although, I guess you guys are pretty battered too.\" She said raising a hand to Riley's face and gently caressing his bruised cheek.\n\nAngus felt like shit ... Jim was practically an invalid because of him and he had the nerve to be jealous of Jessica wanting to comfort him. He was beginning to get a good picture of how much of an asshole he really was and he didn't like it. He was relieved Jessica seemed capable of seeing past that. \"Jess, Jim's hurt way more than we are. Just go sit with him.\"\n\n\"Okay. But aside from that, we do have a problem.\" Jessica said.\n\n\"What problem?\" Angus grumbled.\n\nJessica took a deep breath and looked up at them. \"Okay. I don't know how to explain this so that you all can truly know what I feel and believe me when I say that I love you all equally ... but I'll try because I want to be as honest as possible. You men, are all friends, right?\" she asked. \n\n\"Right?\" she repeated when all she got were stares. The men nodded their acknowledgement. \"Okay. You all love each other, you'd do anything for each other ... but wouldn't you say that Angus and Riley are 'best friends'.\"\n\nAngus and Riley exchanged looks.\n\n\"Jim, Josh and Scott, I'm not sure really who's best friends between the three of you. From what I've observed I'd say that the three of you are best friends. You have the same interests ... same humor, that kind of stuff. And I don't think any of you get jealous of each other because you have best friends in the group ... or do you?\"\n\nJessica didn't wait for a response because she could tell that Riley was just about to interrupt her.\n\n\"So ... so I think that subtlety may be what you're picking up between Jim and I. I see part of Jim like I see all of you. My soon to be husbands. And then there's part of Jim that I see more like my ... \" Jessica shrugged. \"brother I guess. He's my best friend just like Riley is your best friend Angus ... And Scott and Josh, like you're best friends.\"\n\n\"So you feel like you're having sex with your brother?\" Josh asked.\n\n\"Oh no ...\" Jim groaned and closed his eyes.\n\n\"No, no, no, no ...\" Jessica said shaking her head emphatically while twisting up her face in disgust. \"For me there are two Jims ... Jim my boyfriend, and Jim my best friend. I guess that's probably why it took us so long to be intimate to begin with. I don't think either of us could see ourselves having sex.\" \n\n\"Are you trying to explain that you love Jim more?\" Angus demanded.\n\n\"No!\" Jessica replied.\n\n\"I think I get what you're saying Jess.\" Riley said.\n\n\"Then enlighten us.\" Scott said, \"'Cause I'm completely missing it.\"\n\n\"Okay ... Angus you know how we just hang out sometimes. Have a few drinks, shoot the shit? And you know how it's perfectly fine if the other guys are there ... but somehow it's not quite the same as when we're alone? I mean, I don't know about you but there are lots of times I'm glad it's just us.\"\n\nAngus nodded.\n\n\"Well, that's what Jess means. There's something between them at a friend level. Hell, Jess could be a man for all it matters ... or Jim a girl. They're just best friends.\"\n\n\"I'm not going to favor anyone.\" Jessica said, looking around at them. \"Or at least I'll try not to. But there's that friend part that I won't be able to change and trying to hide it will be totally against the oath. Will you guys always be upset when I pick Jim? I'm going to be as fair as I can.\"\n\n\"Trying to be too fair could turn it into reverse discrimination.\" Scott said. \"You know ... not giving Jim his fair share just to make sure no one thinks he's getting favors.\" Scott added when they all looked at him like he was nuts.\n\n\"I hadn't thought of that ...\" Jessica said glancing at Jim, distress dancing across her face.\n\n\"It's not your responsibility Jess.\" Jim said. \"Guys, you're going to give her a fucking ulcer if she thinks she has to keep everything perfectly even. Just let her do what comes naturally for a while. If it becomes too one sided, we'll talk about it and adjust. But her point about being best friends is valid. Because she is my best friend.\"\n\n\"I'm not getting it.\" Josh said. \"Jess, you told Scott and I that we're all friends, and that as time goes on we'll get to be better friends. Isn't there a chance that we'll all be best friends?\" \n\n\"That's true.\" Jessica said. \"We are all friends and we keep getting to be better friends .\"\n\n\"But there's something different about Jim?\" Angus asked in a quiet voice. He looked sad. They all looked sad. Jessica nodded and looked down at her hands.\n\n\"Can you give us some examples?\" Scott asked. \"Examples of things Jim did that makes him your best friend?\"\n\n\"Okay. Remember when you decided to take me off the leash?\" Jessica asked.\n\n\"How can we forget?\" Angus asked scowling at Jim. That had been one of the times that Jim had been more frustrating than usual.\n\nJessica hesitated as she looked back and forth between Angus and Jim. The hostility rolling off of Angus was overwhelming. She didn't understand why Angus was so mad but she instantly wished she hadn't brought it up.\n\n\"Yes, we remember.\" Riley said working hard at not letting his anger show. \"Go on, what about it?\"\n\n\"Maybe that's not a good example ...\" Jessica muttered, looking at the men and seeing unhappy faces on all of them.\n\n\"Never mind us, just keep going Jessica.\" Scott said.\n\n\"Jim?\" Jessica asked. Jim was already pale from his injuries, and fatigue, but now he looked downright sick. \n\n\"Keep going.\" He wheezed. \n\n\"Okay. Well, Jim was working at that for a really long time. Really early on ... before I realized that Jim cared about me, he promised me he'd get me off the leash. He knew I hated it. I thought he was crazy. It took him a long time to convince me that things would be better if I co-operated. I thought he was just trying to hurt me somehow. But over and over, time after time, he told me what I could do differently so that you could trust me off of the leash. I couldn't understand why he bothered. But he kept saying that things could get better for all of us. That's all he's ever tried to do. Make me happier. Make us ...\" she swept the air with her hand to indicate all of the men, \"happier. It wasn't easy. I think he could have made his life easier if he hadn't bothered. And there are hundreds of examples like that, where Jim could have taken the easy path but he didn't. He fought for me.\"\n\n\"Like the time with Ebony.\" Scott added. Scott looked at Riley and Angus. \"That time Jessica rode Ebony and fell off, remember?\"\n\n\"Fuck yeah.\" Riley said.\n\n\"Vividly.\" Angus added. \n\n\"Well, there'd been a misunderstanding. Jim hadn't really told Jessica she could ride. But he took the heat for it. Remember when we thought he was the dumbest person on the face of the earth?\"\n\n\"Jesus Christ Jim.\" Riley stated, staring at Jim in complete amazement.\n\n\"All of that shit. You went through all of that shit on purpose?\" Angus demanded. \n\n\"We were assholes to you.\" Riley said quietly, replaying all of the times they'd bullied, berated, fought, with him.\n\n\"And I was a chicken shit.\" Josh said. \"There were times I considered arguing for Jessica but then I thought about how Riley and Angus treated you when you did, and I chose not to. Jim, I'm sorry.\" He said looking at Jim with reverence. And then he turned to Jessica, \"I see why Jim's your best friend Jess. You won't hear any complaints from me when you want friend time with him. I promise.\"\n\n\"Me too.\" Scott said.\n\n\"I don't understand why you did that Jim.\" Angus said. \"To do it now, I can understand. Hell, I'd do it now. But back then? Jessica was the enemy, we intended to torture and then kill her. None of us could have imagined ... this ...\" he opened his arms to encompass all of them.\n\n\"Jimmy did.\" Jessica said. \"That's what I mean about vision. He knew even back then that we were meant to be more to each other. He told me so. I thought he was either crazy or he tricking me to break me down. But again and again Jim would tell me that we had to change things. Time and time again he'd stand up for me when it meant pain for him. I couldn't help but love him. He's my best friend.\"\n\n\"Okay. Okay.\" Riley said raising his hands in surrender. \"I get it. I really get it. I won't hold your friend time against you ... or at least I'll try not to.\"\n\n\"How the hell are we going to tell the difference?\" Angus asked, looking at Jessica. \"I'm sorry, but lover wise, soul mate wise ... and if there was a way to measure up to Jim on the best friend front I'd include that too but I'm not sure that's possible ... but in all other ways I want to be equal. How do we know when your time with Jim is a friend thing and not a love thing?\"\n\n\"I don't know.\" Jessica said.\n\n\"We could just tell you.\" Jim said. \"When we're doing something together that's friend only, then we'll just call it friend time.\"\n\n\"Do you have a lot of these 'friend' times?\" Angus asked suddenly seeing this label as an excuse to exclude him and the others.\n\nJim exhaled in exasperation. \"I don't know.\" He said. \"Why don't we see how it goes and adjust if we have to?\"\n\n\"What kind of friend things do you do?\" Riley asked. \n\nJim shrugged his shoulders, gasping in pain almost immediately. \"Normal stuff. Play cards, watch TV, sing, dance, hang out ...\"\n\n\"You did all of that on your nights alone? In your room?\" Scott asked. \n\n\"Yeah.\"\n\n\"Maybe you can do them out here now. You know, we'll stay out of it, but you don't have to hide away in your room.\" Scott continued. \"I would really love to see it happening.\"\n\n\"Okay,\" Jim said looking at Scott in a way that made it obvious that he couldn't see the point behind his request.\n\n\"So we can learn.\" Angus said for Scott. \"I'd like to see it too. I have no clue how to be friends with Jessica.\"\n\n\"It's not hard Angus. You just have to be creative.\" Jim said.\n\nAngus thought about that. How could he be creative? Finally he snickered. \"I haven't got a fucking creative bone in my body.\"\n\n\"That's not true.\" Jessica said. \"You made such a beautiful dinner for us that one night. That takes creativity. And yesterday ... in the car. That took creativity. But to be honest, I'd just be happy spending time together. One on one, and all together. That doesn't take a lot of creativity. Working on the cars with you ... maybe even doing some handiwork around here ...\"\n\nSuddenly a thought came to Angus. The perfect way to excite Jessica. He'd get her a car of her own to work on. Some broken down jalopy that she could restore. That would be perfect! Suddenly Angus had some hope. \n\n\"That's okay Jess, I have just the thing.\" Angus said and smiled at her. Really smiled at her. He felt relieved and excited. It was perfect. Tomorrow he'd go and find one ... and haul it back here so she could start working on it. \n\n\"You do?\" Riley asked surprised. \"I can't think of a thing I could do.\" \n\n\"What was all that Kung Fu shit back at the clearing?\" Angus asked. \n\n\"Oh yeah.\" Josh said, \"Jessica was saying that she'd taken some self-defense courses. You could help her practice ... couldn't you Riley?\"\n\n\"You mean put some Kung in her Fu?\" Riley asked with a laugh. \"Yeah. I could do that. \" Riley watched Jessica's face light up. She looked really excited. \"Just curious though, why are you interested in fighting?\" \n\nJessica shrugged. \"I don't know. My parents always had me in self-defense classes. I guess I kind of enjoyed it. Though it didn't really help me any.\"",
        "\"I don't know about that.\" Angus said. \"Your head butts damn near broke my nose.\"\n\nJessica dipped her head. A slight smile curved her lips and it was easy to see that she liked Angus' praise, \"I'd like to keep your nose out of it.\" She said to Angus with a giggle. Looking at Riley again she added, \"I like the sport of it I guess. I would really appreciate you teaching me Riley, if you would.\" \n\n\"You got it. We'll include self-defense with our work outs.\" Riley said kissing her forehead. \"If you want to sit with Jim Jess, go ahead.\" \n\n\"Okay.\" She said rolling onto her toes and pecking Riley's lips and moving to the sofa and settling next to Jim.\n\n\"I'm fine Jess.\" He wheezed. Jessica looked tired. Really tired. They'd been at this for over an hour. Slipping his arm around her, he pulled Jessica to him. \"So to wrap up. We'll do as much together as we can, still have one on one time, and we'll start to take Jess out. We follow the same veto rule as we established before. And since we're doing intel only, Josh, Scott and I will rotate in for work. Sound good?\"\n\nEveryone nodded.\n\n\"We can rotate into work, but for the next two weeks none of us are going anywhere. I'm going to call Paul and tell him we're on vacation.\" Riley said.\n\n\"Good.\" Angus said. \n\n\"Okay, so Scott you got that paper and pen?\" Jim asked.\n\n\"Yup.\" Scott said taking it from the coffee table.\n\n\"Ok. Leave a line long enough for us to all sign our names.\" Jim said, \"How do we want to word it?\"\n\n\"We commit the following to one another ...\" Scott began, writing as he spoke and then glancing up, pen poised over the paper, waiting or instructions on what to write next.\n\n\"To be honest and devoted to one another.\" Angus said. \"All resentments voiced and addressed.\" \n\n\"To treat each other fairly.\" Riley added.\n\n\"To honor and protect one another over all else.\" Josh said.\n\n\"To never leave one another, promising to resolve any and all disagreements using the veto rule.\" Jim added.\n\n\"To cherish Jessica with every fiber of our being.\" Scott said, holding Jessica's gaze before adding his line to the oath, the other men grunting their agreement.\n\n\"To build a life together that surpasses any we would have had independently.\" Jessica added. \"Filled with more love and happiness than we could have ever imagined.\"\n\n\"Do you really mean that?\" Angus asked quietly.\n\n\"I do.\" Jessica said. \"This is our version of marriage Angus. Marriage is a union that makes all party's lives better than what they would have been without the marriage. And the cherish one Scott ... we have to all cherish one another. You're all committing to one another and you all deserve to be cherished.\"\n\nScott nodded, crossing out the sentence and rewriting it to include all of them. \"Ready?\" He asked when he finished. Riley took the needle out of the first aid box and cleaned it with antiseptic. The men moved to the sofa and stood semi-circle around it. Jessica stood next to Scott. Josh to his right, then Riley, then Angus, Jim looked up at them from the sofa.\n\n\"Can you do it yourself?\" Riley asked Jessica, handing her the needle.\n\n\"Yes ... I'll try not to faint ... kidding!\" she said with a laugh when Riley looked horrified. \"I'm sorry ... it was a joke.\" \n\nRiley shook his head, \"Jokes like that are liable to earn you a spanking.\" Riley said while his mouth shifted into a sultry crooked grin, \"But it won't be on your ass.\" He added looking pointedly at the v between Jessica's legs.\n\nJessica followed his gaze and although her cheeks blushed she looked back at Riley in a way that left little doubt that she wanted that kind of spanking.\n\n\"Looks like we have ourselves a naughty girl.\" Angus said, taking a good long look at the arch in Jessica's pants that covered her pussy. Sliding his eyes up to hers, impressed by the depth of lust he saw in them and frustrated that he couldn't just get to the job of spanking her, he added in a deep guttural tone, \"Prick your finger baby so we can pledge our oath and fucking consummate our marriage.\"\n\nJessica shuddered, her whole body shaking at the tone of Angus' voice.\n\n\"Let me help you babe.\" Scott said in an equally sexy tone. Taking her hand he held a finger up. \"Go ahead.\"\n\nJessica pricked her finger and a small bubble of blood balanced on the tip of her finger. She passed the needle to Scott who pricked his finger and passed it to Josh. Once all the fingers were ready Jim held up the paper with the oath and they all read it aloud together. They read it slowly, clearly, and despite the raging hormones that had been rampant moments earlier, everyone sobered, saying the words with conviction. Looking at one another the men and Jessica finished the oath in a hushed reverence. Turning to Scott Jessica held her pricked finger up and when Scott held his up they pressed the bloody tips together. Minutes later they had all exchanged blood. \n\n\"You sign first.\" Jim said handing the paper to Jessica. Jessica signed with the pen but then pressed her bloody finger under her name, leaving her fingerprint.\n\n\"Good idea.\" Josh said and the men did the same.\n\nWhen everyone had signed Scott pulled Jessica into his arms and dipping her he kissed her. Long and deep. \"Our first kiss as husband and wife.\" He said in a breathless murmur when he finally lifted his lips from hers, \"Thank you baby ... with all my heart, thank you.\" It occurred to him that there was no reason to not hold off on the gangbang, now that they were married, but Jessica looked tired. \n\nJessica barely got \"Thank you too,\" Out before Josh took her from Scott and pulled her in for a deep and thorough kiss. \n\n\"You've made me so happy Jess. Thank you.\" Josh panted against her lips.\n\nJessica nodded, leaning against him, panting too. Riley held his hand out to her and Jessica took it, melting into his arms. \"Thank you Jess, for making this oath with us, for letting us call you our wife.\" He kissed her, gently, it was easy to see that fatigue was overtaking her. When he passed her to Angus she was fighting to keep her eyes open.\n\nAngus dipped her, threading his fingers in the her hair and holding her in place as he kissed her slow and deep. \"I'll show you the full extent of my appreciation tomorrow Jess.\" He mumbled against her lips, feeling tired also. \"But I am happy that you accepted me as your husband ... more happy than I think you'll ever know.\" He helped Jessica sit on the sofa next to Jim and slide under Jim's arm. She looked up at him, and they kissed.\n\n\"Thank you Jess ... for accepting me as your husband.\" Jim said brushing his lips over hers.\n\nJessica raised her hand and caressed his battered face, \"Thank you too.\"\n\nRiley looked down at the paper containing their oath and signatures. \n\n\"We should get that framed.\" Riley said.\n\n\"I'll get a frame tomorrow.\" Angus said.\n\n\"Can you come up with a design for the tattoo?\" Scott asked Josh.\n\nJosh nodded, \"After I get some sleep.\"\n\n\"We'll get the rings tomorrow too.\" Jim said, \"In time for the pool hall.\"\n\n\"I highly doubt you're going anywhere tomorrow.\" Riley said. \"You won't be doing much for at least a week or so.\" \n\nJim nodded and then looked down at Jessica in surprise. Her eyes were closed and she snored softly. \n\n\"She's wiped.\" Riley continued watching Jessica too. \"Look, I know she'd want to be with you tonight.\" Riley said to Jim, \"How about I put her in your bed while we get cleaned up? I'll bandage you up and you'll be good to crash too.\"\n\n\"Thanks.\" Jim said.\n\n\"You work on Jim, I'll take her to Jim's room.\" Angus said to Riley and gently scooped her off the sofa. Laying her on Jim's bed fully clothes, he pulled the blankets up to her chin. Kissing her lips gently, he stood. Watching her sleep it finally sank in that she had really agreed to be his wife. It seemed so surreal ... but he knew the tattoo and rings would make it real. Watching her sleep, Angus realized that for the first time that he could remember, he was excited about the future. Turning the light off, he left the room, leaving the door slightly open. He was bone tired too and headed to the bathroom to clean himself up. Scott and Josh were already there.\n\n\"She's out?\" Scott asked, looking at Angus' reflection in the sink mirror.\n\n\"Completely.\"\n\n\"Good, she'll need her rest for tomorrow.\" Scott continued, \"Can't wait to finalize our marriage gangbang style. It's going to be fucking awesome.\" \n\n\"Fuck yeah.\" Josh agreed .\n\n\"Fucking right.\" Angus grunted in agreement. \"Don't know how much of it I'll see.\" Angus added staring into the mirror and barely seeing out of the slits that remained in his swollen eyes. \n\n\"Could use a coupla sirloins for those.\" Scott said.\n\nAngus grunted his agreement, \"Will stick with ice for now. Hope Jess doesn't mind fucking zombies, that's what we look like.\"\n\n\"Guess we should wait to take our wedding pics.\" Josh said with a laugh.\n\n\"Beauty and the beasts.\" Scott added with a chuckle.\n\n\"One of you guys calling Corey about the tattoo?\" Angus asked as Scott and Josh moved toward the door.\n\n\"Already did.\" Scott said, \"He'll be here tomorrow around six.\"\n\nAngus nodded.\n\n\"Night.\" Scott said as he and Josh turned to leave again.\n\n\"Wait.\" Angus said. Jessica's explanation about how she felt about Jim ran through his mind. And then Riley's description of the friendship he and Angus shared. It made Angus realize that he'd been nothing but an asshole to Scott and Josh for years. And Jim, of course. Somewhere along the way he stopped being a friend. He was tired, dead tired, so he wasn't sure if the sudden guilt he felt was because his defenses were down, but he felt like he had to acknowledge his bad behavior. \"I know relationships aren't my strong suit.\" He said when both Scott and Josh waited for him to continue. \"I have a way of fucking things up. But I want you to know that I'm committed to this. To Jessica, to you. I've apologized to Jess but I haven't said sorry to the two of you for the shit I've put you through. I am sorry. That's it ...\" he added when Scott and Josh stared at him, clearly taken off guard.\n\n\"Thanks Angus.\" Scott said putting his hand out and shaking Angus' hand.\n\n\"Yeah, thanks.\" Josh agreed shaking Angus' hand also.\n\nAngus nodded and after a moment that should have been awkward but surprisingly wasn't, Scott and Josh left. Angus turned to look at himself in the mirror and despite the bruises and cuts Angus liked what he saw. For the first time that he could remember in a long time, he wasn't angry and bitter. There was no part of him that felt resentful. He went to bed feeling unwavering optimism for the future.\n\n**********************************************************\n\nThe next day, Riley followed Angus off the porch. The spring in Angus' step reminded Riley of Angus when Angus and Beth had first started dating. When Angus had thought he'd found the love of his life. Riley was glad that Angus was willing to put himself out there again, make himself vulnerable again. He'd really doubted that would ever happen again, but here Angus was, his heart on the line and happy. They both moved purposefully from the porch. They'd put off doing their chores all morning in the hopes that Jessica and Jim would get up and they could get on with the group fuck. But it was noon and Jessica and Jim were still in Jim's room. Scott and Josh had taken their chances and done their chores first thing in the morning and in hindsight both Riley and Angus wished they had too. But the time they'd spent waiting had been good too. Sitting around, the four of them, Josh, Scott, Angus and Riley, shooting the shit, relaxing. It'd been a really long time since they'd done that. But by lunch time Riley and Angus grudgingly acknowledged that they couldn't wait with the chores and made Josh promise to come and get them as soon as Jess and Jim got up. \n\n\"See you in a bit.\" Angus said turning to Riley, \"What?\" he added when he realized Riley had been observing him.\n\n\"Nothing really ... just glad to see you happy. Wasn't sure you'd ever take the risk again.\" Riley said.\n\n\"The risk?\" Angus asked, bewildered.\n\n\"Of getting hurt again.\" Riley said.\n\nAngus shrugged. \"Kinda a no brainer.\"\n\nRiley nodded. \n\n\"What?\" Angus asked again, \"You don't think it is?\"\n\n\"I do. But things are a little different then when we talked about this before. Our options if things don't work out aren't the same as they were back then.\"\n\nAngus nodded. \"I know. If she leaves us now ...\" Angus paused. With a shake of his head he continued, \"beating and killing aren't options anymore Riley, I know that. But honest to God I don't feel like I'm taking a risk.\"\n\n\"Neither do I.\" Riley said with a grin, relieved that Angus had truly thought things through. \n\nAngus grinned back, \"So let's get these motherfucking chores done so we can fuck our wife when she gets up.\"\n\n\"Fuck yeah.\" Riley agreed and they moved in their respective directions. Riley to the dog kennels, Angus to the garage.\n\n***************************************************\n\n\"They live!\" Scott said when Jessica and Jim came into the living room.\n\n\"What time is it?\" Jim asked.\n\n\"Two in the afternoon.\" Josh said. \"We've been waiting for hours.\"\n\n\"We were pretty sure you weren't busy fucking.\" Scott said nodding at Jim's chest. \"The next conclusion we came to was that you were dead. Another half hour and we were coming in your room to check on you.\"\n\n\"We slept like the dead.\" Jessica said, stretching while she went to kiss Scott good morning. She paused when she was about to turn to Josh. Scott was looking at her in a strange way. He looked happy, but at the same time like he needed something.\n\n\"Are you okay?\" Jessica asked.\n\n\"Better than okay.\" Scott said, running his eyes up and down her body. When they returned to Jessica's there was something in them that was familiar and made her heart pound, her body tingle, but there was something different there too. Something that made Jessica feel warm inside.\n\n\"Um ...\" Jessica said, unsure what she was supposed to do.\n\n\"Josh is waiting.\" Scott said with a smile.\n\n\"Mornin' babe ...\" Josh said, twirling Jessica into his arms and bending her back into a long, deep kiss. \n\n\"Morning ...\" Jessica said in surprise when he lifted his lips off of hers and smiled down at her.\n\n\"This is our first good morning kiss as husband and wife ...\" He said looking incredibly happy despite the bruises on his face. Jessica swallowed. Josh was, different. Playful, happy, carefree, looking at her like Scott had been. Jessica started to think that maybe she was dreaming. Things seemed surreal. Scott and Josh seemed the same, but at the same time different. Jessica looked at Jim, who stood frozen in the living room, trying not to move too much for fear of the pain that movement would cause, to Scott, who looked like he'd just taken some happy pills, back to Josh who was smiling like a simpleton.\n\n\"Am I still asleep?\" Jessica asked.\n\nJosh laughed and planted his lips on Jessica's again. \"No wifey, you are not dreaming. This is what happens when you make us the happiest men in the world!\" And he kissed her again. Jessica giggled as Josh's lips travelled from her lips to her cheek, to her neck. When he lifted his head to look down at her, she brought her hands to his cheeks.\n\n\"I'm glad you're feeling better.\" She said.\n\n\"Better?\" Josh asked. \"Baby, I'm better than better. I feel like a new man!\"\n\n\"You're a new man that's going to be a dead man if you don't go get Angus and Riley like you promised you would.\" Scott said.\n\n\"Shit ... right.\" Josh said. \"I'll be right back.\" He said pecking Jessica on the lips, righting her onto her feet and heading for the door.\n\nJessica looked after him for a moment, stunned. He was a completely different person ... overnight. She looked at Scott, who winked and moved closer to her. \n\n\"Josh finished his design for the tattoo. It's on the coffee table ...\" he said in a low, sultry voice. He continued to stalk toward her, slowly, purposefully. Jessica watched him, and waited in anticipation. It was like Scott was a new man too ... the same but different enough that Jessica felt unsure what he was going to do next. Her body tingled ... anticipating a kiss, a touch, several touches ... she felt hypnotized. Yet, she wasn't entirely sure that that was Scott's actual intention. Jessica couldn't seem to stop looking at Scott, until Jim gasped. \n\n\"Jim!\" she exclaimed when she'd finally forced her gaze from Scott. Jim was stooped, pain etched on his face. She rushed to his side and stuck her head under his arm. \"Lean on me ...\"\n\n\"I got him Jess.\" Scott said appearing under his other arm.\n\n\"Do you want to go to the sofa?\" Jess asked. Jim nodded and lent on Scott and Jessica as they helped him to the sofa.\n\n\"We should rebandage your chest.\" Jessica said dropping next to Jim on the sofa.\n\nJim nodded, but pointed at the coffee table. \"Pass me Josh's design.\"\n\nScott passed Jim the paper.\n\n\"I'm sure Josh will explain it better, but that's basically Jessica in the middle.\" Scott said pointing at a heart. He moved back so Jessica could look at the picture too. \n\n\"I'm the heart?\" Jessica asked, her heart warming at the thought.\n\n\"You sure are.\" Scott said and took Jessica's hand in his.\n\n\"And those ties show the connections between Jessica and each of us.\" Scott continued. Jessica looked at the heart and saw what looked like rope running from it in five directions. At the end of each rope was a symbol.\n\n\"Horse for you Scott?\" Jessica asked, running her finger on the picture of the horse. \"Dog for Riley ... \"Jessica traced the rope down to the dog, \"Book ... comic book I guess? For Josh ... and a car for Angus, and music for Jim.\" She ended, her finger stroking the music sign.\n\n\"And the ties run between each of us too. The perfect circle.\" Jim added.\n\nJust then the front door opened and Angus and Riley followed Josh in.\n\nJessica looked up and her breath caught in her throat. Angus and Riley had the same serenely happy, mellow, looks on their faces that Josh and Scott had. Any traces of anger, stress, seriousness, were gone. Jessica barely recognized them.\n\nShe looked to Jim, still not sure that she was actually awake, and saw to her relief that he seemed as surprised by Riley and Angus as she was. She wanted this to be real, and Jim's double take confirmed that she wasn't imagining things. \n\n\"Jess.\" Riley greeted her, \"You okay?\" he asked Jim.\n\n\"I've been better.\" Jim said with a grimace, \"but you two look ... great.\"\n\n\"We feel great.\" Angus said, watching Jessica rise from the sofa and move toward him. When Angus opened his arms to her, she went into them slowly. Even with his face battered, Angus looked younger. Much younger. She looked at Riley, and he too looked younger. Jessica stopped and pinched her arm.\n\n\"Stop that! What the hell are you doing?\" Angus demanded covering her pinching hand with his and pulling it away from her arm. She looked up at him, mystified. He'd been commanding ... in tone, and in look, but it was still different. It was if his anger, bitterness, was replaced by something else that Jessica couldn't quite identify. Jessica panned her eyes over to the other men and they were looking at her in the same way. They disapproved of what she'd done, that was evident. But they looked at her like they ... loved her. Unconditionally loved her.\n\nJim chuckled. \"Jess thinks she's asleep. She's trying to wake herself up.\"\n\n\"Is that it?\" Angus asked, smiling and pulling Jessica to him. \"Trust me, you're awake. Let me prove it to you.\" He said and brought his lips to hers. Kissing her, slowly, deeply, longingly. When he finally came up for air, both he and Jessica were out of breath.\n\n\"Believe me?\" Angus asked, panting.\n\nJessica nodded. \n\n\"Would you prefer to be dreaming?\" Riley asked, suddenly wondering if she was regretting the whole wife thing.",
        "\"No way!\" Jessica exclaimed, still magnetized by Angus' eyes but when Riley exhaled with relief, she looked over at him. \n\nShe put her hand out to Riley and Angus grunted and reluctantly let her go. \n\n\"You guys, seem ... different.\" She said moving into Riley's arms. \"In a nice way. I just don't want it to go away.\"\n\n\"Things are different.\" Riley said locking his eyes on her mouth and moving in for a kiss. \"Way different.\" He brought his lips to hers and kissed the breath out of her. By the time he was done her legs felt like jello. \"Are you okay?\" he asked, lifting his lips and staring down at her while she hung in his arms. His eyes held hers with an intensity that made her gasp. When she didn't immediately answer, their intensity grew and suddenly Jessica felt like she couldn't catch her breath.\n\n\"I ... I can't breathe ...\" Jessica said in a breathless whisper.\n\nRiley's eyes moved from her eyes, down the length of her body that hung between them. Jessica could feel them. Feel them on her. As they moved back up to meet her eyes, Riley balanced Jessica against one arm and moved his other hand to press gently but firmly, fingers spread as far as they could, against her chest. \"That won't do.\" He said and lowered his lips close to hers. \"Breathe Jessica ...\" he whispered, \"Relax ... \" and his lips were on hers again, kissing her in a way that reverberated down to her soul. He pulled her tight against him.\n\nSuddenly Jessica's mind went blank and she was kissing him back with everything she had. Despite the haze of lust that consumed Jessica she became aware of a hand pressing on her right shoulder and another hand on her left. And two on her lower back. That was a lot of hands. A hand moved under her chin and pulled her lips from Riley's, turning her face toward ... Scott. He locked his lips on hers as Riley began to kiss down her neck and chest. Jessica moaned as he continued down to her stomach.\n\nAnother hand took her chin and pulled her lips from Scott's. Jessica's head arced over to her right and Josh brought his mouth down on hers. Electricity shot through her as his tongue introduced itself to her tonsils. And then Scott's hand slid up under her shirt, under her bra and cupped her breast. Josh slid his hand up to her other breast, Riley slid his hand down the front of her pants. The jolt of pleasure literally knocked her off of her feet and she heard Angus chuckle behind her.\n\n\"I love your ass.\" He said, kissing her over her pants.\n\n\"Let's get her pants off.\" Riley said having unzipped them but still completely unsatisfied with his access to her pussy.\n\n\"And then her ass is mine!\" Angus muttered, helping Riley peel her pants and underpants off.\n\n\"Her shirt too ... \" Scott gasped as his hand strained against the confines of her bra and shirt while pulling her nipple.\n\n\"God your nipples are hard!\" Josh hissed into her ear as he and Scott worked her shirt and bra off. And then she was completely naked.\n\nRiley pushed her back, her bum balanced on Angus' palms and Angus pried her cheeks open, lowering his face between them. Jessica came, hard, as Angus slid his tongue into her hole.\n\n\"Good God ...\" Riley moaned, pushing her legs as far open as they could go, staring at her pulsating pussy, and then diving in face first. He moaned repeatedly as he reveled in her juices. Jessica's legs jerked as her sensitive clit found itself in Riley's teeth.\n\n\"Look at that face ...\" Scott said, pulling hard on her breast, and watching Jessica's head loll from side to side, pleasure evident on her face. \"Hook her knee.\" Scott said to Josh as he hooked his elbow under Jessica's knee and pulled her bent knee toward him. Josh did the same and lowered his mouth over her breast.\n\nJessica panted and then noticed that her hands were resting on Scott and Josh's chests. She began to slide her hands down, down, down, until they hit the waist band of Scott and Josh's pants. Without hesitating she slid them behind the waist band, into their underwear and wrapped her fingers around their erect cocks.\n\n\"Oh shit! Jessica!\" Scott hissed as she began to stroke he pumped his hips in rhythm with her hand.\n\n\"Harder Jess ... faster Jess!\" Josh panted and gyrated.\n\nJessica rolled her head, wondering how she could get her mouth onto Riley or Angus' cock when her eyes fell on Jim. He was sitting on the sofa, watching the men working on Jessica, and he was panting. He'd worked his cock out of his pants and he was rubbing it, intermittently cringing in pain from the movement it caused on his chest.\n\n\"Jim ...\" she gasped just as Scott and Josh ejaculated in her hands, and another orgasm rocked her.\n\nAngus slid his fingers in her asshole, Riley was finger fucking her pussy while kissing her jerking thighs and both Scott and Josh were pressing their sperm covered, partially erect cocks into her side as they pulled her nipples with their teeth.\n\nPleasure started to work through her again and she had to fight hard to focus.\n\n\"Guys ... Jim ... he's by himself on the sofa and he's trying ... trying to jerk off.\" She gasped as both Angus and Riley increased the number of fingers in her openings as well as the speed and strength with which they thrust. \"Take me over so I can suck him off ...\" she said.\n\n\"Right ... shit ...\" Scott muttered looking over at Jim. \"Guys, guys!\" he said flicking Riley and Angus on their heads when they weren't paying attention.\n\n\"What the fuck?\" Angus demanded, anger flashing across his face as he glared at Scott.\n\n\"Jim ... let's take Jess over there.\" He said nodding at the sofa. \"Josh and I will hold her ass up and she can suck him off while you two fuck her.\"\n\n\"Fucking great idea.\" Angus said with a throaty laugh. Standing he took Jessica with him. Suddenly Jessica found herself flipped onto her front. Scott holding one arm and one leg, Josh, the other side. They carried her to the sofa where they lowered Jessica between Jim's legs and she swallowed his cock.\n\n\"Oh my God!\" Jim hissed as pleasure shook him. Jessica rested on her elbows, sucking with everything she had, Jim's hands stroking her head.\n\nScott and Josh held her by her legs and Angus thrust into her asshole. Riley crawled under her and lined his cock up with her pussy. Angus squatted, and Scott and Josh lowered her onto Riley and then Jessica's body was being slammed in every orifice. Scott pressed his cock against Jessica's hip, between her thigh that he pulled toward her side, and her hip bone. He began to thrust. Josh copied him. The sounds of men moaning, flesh slapping, and Jessica sucking filled the room. \n\n\"Fuck, fuck, fuck!\" Angus yelled as he came in her ass. \n\n\"You're so wet ... so tight ... Christ!\" Riley growled as he came.\n\n\"Before you come, aim at her.\" Scott said to Josh, \"we'll spray her with our cum.\" Josh nodded.\n\n\"Oh Jess ... Jess...\" Jim started to moan and pushed her head harder against his cock. \"Jesus ... swallow Jess, swallow!\" he yelled as he spewed his cum into her mouth. Jim moaned as he felt her throat working to swallow.\n\n\"Now!\" Scott said, pulling his cock back. \"Angus ... you got her legs?\" he asked.\n\n\"What? Yah, okay.\" Angus muttered and took Jessica's legs from Scott and Josh, pushing his now semi soft cock further into her ass.\n\n\"Get her face ...\" Scott said and both he and Josh moved up and shot their loads into her face, completely covering her, and most of Jim.\n\n\"Sorry about that ...\" Josh said to Jim, pointing at the cum on his stomach and chest.\n\n\"I don't care.\" Jim said, stroking Jessica's head as she kissed and licked his cock. \"Get her pussy up here, on my mouth.\" Jim said. \"Time to return the favor.\" Jim said when Jessica looked up at him.\n\n\"Are you sure?\" Jessica asked as sweat beaded on Jim's forehead.\n\n\"Pussy ... now.\" Jim said.\n\nJessica noticed that Scott was hard again.\n\n\"If you turn me around, I can suck Scott off at the same time.\" Jessica said.\n\n\"I like the way you think.\" Scott said with a chuckle, and helped Angus turn Jessica so that her ass was up. Angus held a leg, and Riley held the other, each knelt on the sofa as they pressed her pussy up against Jim's face.\n\n\"Ahhh,\" Jessica moaned as Jim's tongue began its work, his teeth nipping her meat and clit.\n\nScott knelt on the sofa beside Jim. She braced her hand on Jim's thighs and took Scott's cock in her mouth.\n\n\"I want her tits.\" Josh said bunching her tits together, and kneeling on the other side of Jim on the sofa he slid his shaft between her tits and began to pump.\n\n\"Watch this.\" Angus said to Riley as he watched Jessica's ass shake while Jim went to town on her, and she sucked Scott hard, and Josh fucked her tits with everything he had. He slide his fingers between her butt cheeks and into her hole. Jessica jerked.\n\n\"You do it too.\" He told Riley. Riley did the same, and soon they were pulling her hole open, spitting into it, and fingering her non-too gently. And Jessica moaned. As much as she could with Scott's dick in her mouth. And suddenly she came. Her whole body convulsed, tightening everywhere. The sound that escaped her made all the men cum too. Riley and Angus lowered Jessica from Jim's mouth, and she slid down onto his lap. She relaxed onto Jim's lap, panting. She eyed Scott and Josh who were adding a chorus of their own panting to hers. They seemed to be semi erect. She hadn't had intercourse with them yet. Them and Jim. She pushed up into a sitting position on Jim's lap. The men watched her. She was breathing so hard, trying to catch her breath, wanting to suggest the next positioning but then she gave up, shook her head, and slid off of Jim and the sofa, onto the floor between Scott and Josh. Taking each ones' cock in hand she stroked.\n\n\"Move closer ...\" she managed between gasps for breath.\n\n\"Jess.\" Scott growled as he moved closer to her.\n\n\"I'll ride you.\" She said, \"Josh, do you mind going in my bum?\" she asked over her shoulder.\n\n\"Mind? Fuck no ...\" he grunted and moved behind her.\n\n\"Riley ... come here, go ... in my ... mouth.\" She said, a thrill running through her as Scott stroked her meat, dipping his finger into her. And Josh rubbed around her bum hole.\n\n\"Angus, come here.\" She said motioning with her left hand, \"I can give you and Jim a hand job.\" She grasped Angus' cock as he slid it into her hand, with her right hand she took Jim's and began to stroke.\n\n\"Holy shit.\" Jim moaned.\n\n\"Ready?\" Scott asked Josh.\n\nJosh put his hands under Jessica's armpits and Scott on her sides.\n\n\"Now.\" Josh said and they lifted her onto their rock hard cocks.\n\nJessica moaned as they lowered her and their cocks filled her completely. \n\n\"Oh mother fucker ...\" Josh said, as Jessica began lifting and lowering herself, they helped her up and down with their hands. \n\n\"You're so fucking full.\" Scott whispered in her ear. \"Two cocks in you like this ... God I can feel it, there's no room in you! I can feel Josh's dick, sliding inside your ass, practically rubbing against mine ... Christ Jessica.\"\n\nJosh kissed her neck and shoulder blades, nipping every now and then. Scott nipped her nipples. Riley stood watching Jessica. Her hands were working, her body was rising and falling, yet she looked, serene. He'd forgo the blow job. God knew he didn't need it after all the orgasms he'd already had. But Jessica suddenly opened her eyes and leveled them on Riley. She watched him for a moment and when it was obvious he wasn't going to do anything, she opened her mouth.\n\nGod, she had a beautiful mouth.\n\nHe shook his head. \"I'll just watch.\" He said.\n\n\"You want it ... \" Jessica panted, lowering her eyes to his now fully erect cock. \n\nOh yes he did. But despite the obvious pleasure Jessica was having, Riley could also see that she was getting tired. She was giving it her all, but her eyelids were starting to droop. There was always next time. For now, self-service would do. Just watching Jessica almost got him off, add a stroke or two from his hand and he'd be fine.\n\nJessica raised her eyes back to his. She couldn't understand why he'd said no when his body, and his eyes so definitely said yes. And then she realized that maybe he wanted her to ask him properly. Like a proper slave.\n\n\"Please Master, let me suck you off.\" She asked. Slowly, clearly. Her eyes glued to his. That did it. Fire flared in his eyes as he stalked toward her.\n\n\"Master?\" Scott asked, thrusting harder, trying to keep claim on his small sliver of her, Josh threatening to take up all his space. \n\n\"Yes ...\" Riley said, looking down at Jessica as he slid his cock in her mouth, caressing her head before holding it firmly and pulling it toward him to better imbed his cock in her throat. \"Jessica is a very good slave ...\" he muttered.\n\n\"I like that.\" Scott leaning over and sucking on her neck and then moving his mouth to her ear. \"You've been a good slave for me too, haven't you? Though I didn't think to word it that way ...\" He turned his head to watch Jessica's lips up close, as they wrapped around Riley's cock ... As his shaft slid back and forth between them. Holy shit he was going to explode!\n\nJosh leaned against Jessica's back, practically face to face with Scott. \"Our own little sex slave ...\" Josh said, \"Christ, fuck Jess, I'm going to ... shit!\" he moaned as he came.\n\n\"Jess ...\" Scott exclaimed, cumming as well.\n\nSuddenly Riley came in Jessica's mouth and the gulping sounds she made, as she worked hard to keep up with the flow of his cum, brought Angus and Jim to climax and they showered Jessica, Scott and Josh with their sperm.\n\nAs Scott slid out of her, he brought his hand to her clitoris and the second stroke brought Jessica to the climax she'd been building too. Wave upon wave of pleasure rocked her and she had to spill Riley's cock out of her mouth and collapse against Scott's chest to ride out the sensation. Jessica ran her hand on his shirt. She realized that while she was completely naked, the men had only kicked off their pants and underwear. They all still wore their shirts. She wanted to feel their skin against her ... not their shirts. Even as blissful exhaustion crept over her, she slid her hands under Scott's shirt and rubbed his hard abdomen.\n\n\"Not fair ...\" she muttered into his chest. \"I want to feel your skin.\"\n\n\"What's that baby?\" Scott muttered into her hair. \n\n\"Take off your shirt. You all still have your shirts on ...\"\n\n\"Hang on Jess.\" Scott said and worked his shirt off.\n\nJessica fell against his warm torso as he flung his shirt away and sighed. Josh pressed up against her back ... and she could tell he'd taken his shirt off too.\n\n\"Is that better my little slave girl?\" Scott asked.\n\nJessica slid her head up and down slightly on his chest in an exhaustion filled nod.\n\n\"Thank you ... master.\" She said, and was about to fall to sleep when she realized that Jim still hadn't been inside her.\n\n\"What's up babe?\" Scott asked, moving back a little when Jessica, with the strength of a kitten tried to push herself away from him. \n\n\"Jess?\" Josh asked, sitting up, and watching her fight to sit up. He reached around her waist and pulled her up against him. Jessica flopped back against him and with great effort turned her head toward Jim.\n\nJim was watching her and couldn't believe it when she looked him in the eye and said, \"Jim's turn ...\" \n\nRealization hit him. All of this frenzied work she'd been doing. She was making it even. \"Christ ...\" he muttered. \"No Jess!\" he practically barked when Jessica tried to get up. \"That's enough for now.\"\n\n\"But ...\" Jessica muttered, fighting hard to keep upright, and her eyes open.\n\n\"You were great Jess. Take a rest.\" Jim added.\n\n\"Next time ...\" Jessica said, her head lolling and she finally gave up on trying to get up, sagging against Josh. \"You're first ...\" she added before slipping into oblivion.\n\n********************************************************************\n\n\"She's completely out.\" Scott said, gently pushing Jessica's hair away from her eyes. Having just awaken from a sex induced coma himself, he had tried to rouse Jessica after all the men had awaken and Scott had reminded them that Corey was supposed to be coming by that evening to tattoo them. And all of this before they went out to play pool. Though none of them were able to see the exact time, they were all fairly certain that time was running out for lazing around in the living room, naked.\n\nScott tried to shake her gently again, but she continued to be completely motionless and unresponsive. They lay in a giant heap of naked bodies. Jessica had her head on Scott's chest, her butt was being affectionately stroked and kissed by Angus, her legs on Josh. Riley was pressed up against her stomach, lips kissing her gently. Jim was the only one not in the pile but he'd dozed on the sofa and then spent a lot of time looking at the comatose naked pile of limbs, dicks, butts and tits before him.\n\n\"How long were we out?\" Riley asked.\n\n\"I don't know for sure.\" Jim said, \"But it was a long time.\"\n\n\"That was unfucking believable!\" Angus said, relishing in the softness of her butt cheeks. \"I can't believe how into it she was. She was an animal!\"\n\n\"She worked real hard, that's for sure.\" Jim said. \"If she keeps that up she's going to burn herself out.\"\n\n\"You're right.\" Scott said. \"She did put a lot of energy into it.\"\n\n\"I'm exhausted and I didn't do half the work she did.\" Josh said. \"We should slow it down next time.\"\n\n\"We've gotta tell her that things don't have to be so even.\" Jim said. \"No way she can enjoy it as much as she should if she's trying so hard to make sure we each get a turn ... at everything.\"\n\n\"Holy shit.\" Angus said, replaying the whole thing in his head. \"Everyone did get an equal turn didn't they?\" he asked.\n\n\"Except for Jim. You didn't get intercourse.\" Josh said, replaying it like Angus had.\n\n\"That's what she was trying to do at the end?\" Riley stated in exasperation. \"Goddamn it!\"\n\n\"Damn it Jessica ...\" Scott muttered against her hair.\n\n\"We gotta tell her to stop.\" Angus said.\n\nJim laughed. \"And how well do you think that will work?\" he asked. \"She obviously feels like it's her responsibility to treat us all equally. There's no way she's not going to try.\"\n\n\"Then we've gotta take her control of the situation away from her.\" Angus said. \"She orchestrated everything we did. This master and slave thing ... if she's a real slave, she can't decide a thing. We just make it plain to her that when we have sex, she doesn't get any choices.\"\n\n\"We've just finished giving her freedoms Angus.\" Josh said, \"Do you think she'd going to like losing them, even for sex?\"\n\n\"So long as we don't extend it beyond sex.\" Scott said, \"She'll be fine. She likes things a little rough ... I think she likes to be sexually dominated.\"\n\n\"Are you sure about that?\" Jim asked.\n\n\"Oh yeah.\" Riley and Angus said at the same time.\n\n\"We can try that then I guess.\" Josh said, running his hands up and down her legs, \"But if she's at all unhappy about it ...\"\n\n\"Don't worry Josh, our whole goal is to make her happy. And trust me, orgasm after orgasm ... and sex where her pleasure is the most important, not ours ... will make her happy.\" Scott said.\n\n\"Christ ...\" Riley said, \"When did you say Corey's coming to do the tattoo?\"\n\n\"At six.\" Angus said.\n\n\"What time is it now?\" Riley asked.\n\n\"Dunno,\" Jim said, \"I can't see the clock. But it's gotta be late.\"\n\n\"I'll check.\" Angus said giving Jessica's butt a parting kiss and getting to his feet. \"It's fucking five thirty.\" He growled from the kitchen. \n\n\"Fuck!\" Scott groaned. \"Jessica ...\" he said a little more loudly than he had before and shook her a little more forcefully. \n\n\"How are we going to fit in the tattoo and pool tonight?\" Josh asked, giving her thigh a brisk pat.\n\n\"And I want to show Jessica the car I bought her too.\" Angus added.\n\nJust then Jessica's stomach growled ... loud. ",
        "\"And she hasn't eaten anything ...\" Josh said.\n\n\"Well, I don't know if I'd say that ...\" Scott said in a lazy drawl, a smile spreading across his face. \"She sure had a lot of our cum.\"\n\n\"Scott!\" Jim barked. \"Let's try to keep a semblance of decency here can we?\"\n\n\"What?\" Scott asked in mock innocence.\n\n\"You are a pig.\" Josh said.\n\nAngus snorted as he worked his way around from pile of clothes to pile of clothes trying to find his pants. When he did, he pulled them on. \"I'll make dinner.\" Angus said, buckling his pants and then hunting for his shirt. \n\n\"I'll re-bandage your chest.\" Riley said, kissing Jessica's belly and then rolling to his feet and repeating Angus' earlier search for his own pants and shirt.\n\n\"Jess ... come on baby, time to wake up. In a matter of minutes Corey's going to show up and we'll still be here in our birthday suits. You wouldn't want that would you?\" Scott asked.\n\n\"Oh no ...\" Jessica muttered, raising her fists to her eyes and rubbing. \n\nAngus returned to kneel near her butt, Riley near her belly. She opened droopy eyes to look at Scott. She smiled, red spreading across her cheeks and she said in a shy voice, \"Hi.\"\n\nScott kissed her. \"That was awesome Jess ... don't be embarrassed.\"\n\nJessica slid her hands down her face and pulled them back reflexively. \"What? ...\" she asked but her voice trailed off when she realized what the sticky substance was.\n\nScott chuckled. \"We've definitely claimed you as ours.\" He said running his thumb over her cheek bone, rubbing the cum into her skin. \"I love to see you covered in my spunk ...\" but when he leaned in to kiss her, Jessica moved back slamming into Angus' chest. He had slid up the length of her body, and propped on an elbow looked down at their artwork as well.\n\n\"Whoa Jess ...\" he said sliding his hand down her arm. When she turned to look at him, he leant down to kiss her forehead, but Jessica pushed herself into the floor and brought her hands up to his chest and tried to push him back. \n\n\"What's wrong?\" Angus asked suddenly worried that maybe she hadn't liked the group sex at all. That somehow her efforts had been something else that he hadn't recognized ... which seemed impossible ... or that in retrospect she was disgusted by the whole thing and wanted nothing to do with them anymore.\n\n\"I should clean up before you kiss me ...\" Jessica said, but her words were slightly slurred. Her jaw was sore. She had the urge to rub it but Angus had resumed leaning into her so she used them tried to push him back again.\n\n\"Jessica ...\" Riley said rising to his knees to loom over her, \"Did you not learn anything the other day in our bathroom?\"\n\n\"Yes, but ...\" Jessica said staring at him in disbelief.\n\n\"But what?\" he demanded.\n\n\"But that was different. That was sweat ... this is ... \"\n\n\"Sperm.\" Riley said. \"Our sperm ... on you. Claiming you. That's exactly what we wanted to do. But that's irrelevant. It could be shit all over you Jess ... blood, sweat, sperm, shit ... we don't care. You are what we want. So, you'd better let them kiss you Jess, or we'll be doing the bathroom scene all over again. Except this time it will be here, and it will be all of us ...\"\n\nJessica felt tingles running through her. She couldn't believe she wanted it again ... now ... with all of them.\n\n\"Doesn't look like much of a threat ...\" Josh said with a laugh. He'd slid closer to her, her legs still on his lap. He watched unmistakable lust spread across her face. He pressed his hand against her ankle and then began to slide his hand slowly but firmly up the inside of her leg. As he got past her knee, and moved up her thigh, Jessica's legs began to spread and her eyes locked on his. A small moan escaped her, but then as her legs tried to spread further, she gasped.\n\n\"You do want it ... \" Angus whispered into her ear, relieved. He began to nibble on her ear, bringing a hand to one of her breasts. Scott had already claimed the other.\n\nRiley leaned forward and licked her chin, up to her lips, and then slid his tongue between them. Jessica relaxed into the kiss, slid her hands down Scott and Angus' chests, and as Josh's fingers began to stroke the part between her other lips she tried again to spread her legs, and pain shot through her. She tensed ... she was sore, but she didn't want to stop.\n\n\"Jess, are you okay?\" Josh asked, bringing his hands to her hips, rubbing. Jessica, of course, couldn't respond. Riley was passionately working at giving her a tonsillectomy with this tongue, Scott and Angus were working her breasts and nipples with single minded dedication, and Jessica's hands were stroking their cocks with slow, hard strokes.\n\n\"Guys ... stop.\" Josh said. \"Guys!\" he said more firmly and tried to push Riley and Angus back.\n\n\"What's wrong?\" Jim gasped from the sofa ...\"Josh, what's going on?\"\n\n\"Jess is in pain ... every time she tries to spread her legs she tenses up.\" Josh said.\n\n\"Stop them then.\" Jim said panic growing in him as he watched Scott, Angus and Riley becoming more animated. It was like watching wolves tearing apart a deer. A willing deer mind you ... but if Jessica was in the kind of pain he thought she was, having two of them entering her and the third in her mouth was going to be excruciating.\n\n\"Riley! Stop!\" Josh yelled, and pushed Riley as hard as he could, knocking him backwards.\n\n\"What the fuck!\" Riley yelled, sprawled on his back, panting and staring at Josh like he wanted to kill him. \n\nScott and Angus looked up in surprise.\n\n\"Something's wrong.\" Josh said. \"She's in pain!\"\n\nThe sounds of panting filled the room as everyone looked at Jessica.\n\n\"It's okay.\" She managed to gasp out ... her voice slurred. Her hands hadn't stopped stroking Scott and Angus, \"I'll be okay ... keep going ...\"\n\n\"What's wrong with your voice?\" Scott asked. \"Jess ...\" he said when Jessica didn't reply. He grabbed her wrists and forced her to stop stroking him. \"Jess, what's wrong with your voice?\" He repeated in a tone that got Jessica's attention.\n\nShe shook her head. \"Nothing.\" She mumbled. \"It's my jaw ... it's sore.\"\n\n\"Jess, stop.\" Angus said, taking her hand and sliding his cock out of her grasp. Leaning forward he brought his hand to her jaw and rubbed gently. \"No wonder ... fuck, you worked it hard.\"\n\n\"That's not all that hurts.\" Josh said, rubbing her thighs. \"Where else are you sore Jess?\"\n\n\"Um.\" Jessica said, taking stock of her body. \n\n\"I'm guessing here.\" Josh said, laying his palm on the soft curls between her legs and pressing gently.\n\n\"And your ass.\" Angus sliding his hand down to her hip.\n\n\"Christ Jess ... you've been prodded in every hole you have.\" Scott said, \"I can't believe we were going to go at you again. Sorry.\" He leaned down and kissed the top of her head.\n\n\"It's okay ... I want to ... \" Jessica said.\n\n\"Good, cause you will ... a lot.\" Angus said in a guttural voice.\n\n\"But not now!\" Jim wheezed. \"Corey is going to be here any time. You're all buck naked ... I'm half naked, and we need to get cleaned up.\"\n\n\"Any minute?\" Jess squeaked and turned into Angus, pulling her legs up and trying to hide. Pain shot through her ... she was sore and her muscles were tired, but it felt good, satisfying.\n\n\"Easy Jess ...\" Angus said with a laugh.\n\n\"Jim is overstating it.\" Scott said. \"Let's get you into a bath. You can relax and soak a little. When Corey gets here he can start with one of us. There's plenty of time before he gets to you.\" He crouched behind her, sliding a hand under her head. Jessica slowly rolled away from Angus, toward Scott. Scooping his other arm under her legs, Scott clutched her to him and stood up. He kissed her nose. \"Group sex ... I can't believe it took us this long to think of it.\"\n\nJessica giggled as he kissed her again and headed to the bathroom.\n\n**********************************************************\n\nJessica had no idea how long she'd been in the bath ... but it had felt so good. Scott had run the bath, given her a couple of pain killers, and reluctantly left her alone. Now, fully dressed, clean, and feeling so relaxed that she felt like she was floating down the hallway, Jessica made her way out to the living room.\n\nShe stopped and took in the scene. Angus, Jim, Riley and Scott sat on the sofa watching TV. Josh lay on his stomach on the coffee table, Corey was leaning over him, focusing hard on his work. Once again Jessica had the feeling that she was dreaming. The scene in the living room, her feeling of complete relaxation, happiness, calm ... it all felt so unreal.\n\n\"Jess!\" Scott said noticing her. Jumping to his feet he jogged over to her and wrapped his arm around her shoulders. \n\n\"Hey Jessica.\" Corey said, raising his eyes from his work.\n\n\"Hi Corey.\" Jessica said.\n\n\"Feeling okay?\" Josh asked, raising his head from the table.\n\n\"I'm fine ...\" Jessica said moving toward the table, Scott following, arm still draped over her. \"But doesn't that hurt?\" Jessica asked crouching down next to Corey and watching the tattoo outline appear on his shoulder blade.\n\n\"A little but it's worth it.\" Josh replied winking at Jessica. \n\n\"Don't worry.\" Corey said to Jessica. \"I have a topical anesthetic I'll use for you. You'll barely feel it.\" \n\n\"Why aren't you using the anesthetic?\" Jessica asked Josh.\n\n\"I want to feel it babe.\" Josh said. \"Means more to me that way.\"\n\n\"Congrats by the way.\" Corey said, flicking his eyes up again, \"I hear that you all got married.\"\n\n\"Yeah, thanks.\" Jessica said.\n\n\"I'll bring a wedding gift next time. Any requests?\"\n\n\"Maybe we can jam together? That'd be fun.\" Jessica said.\n\nCorey chuckled, his face lighting up. \"You got it. Hey, I also heard that your race at the track got ... delayed.\"\n\n\"Ah, yeah ...\" Jessica said, dropping from her crouch to her knees.\n\n\"Sucks ...\" Corey said and then leaned closer to her. \" It's temporary right?\" he whispered.\n\n\"I don't know.\" Jessica whispered back. \"I think so.\" \n\n\"Okay ... Jessica ...\" Angus said overwhelmed by sudden and all-consuming jealousy. He reached down, took her by her elbows and lifted Jessica to her feet. \"Come have some dinner. I have something to show you when you're done.\" \n\nCorey rolled his eyes at Angus, and then winked at Jessica. \"I'll see you soon ...\" he said lifting the tattoo needle toward her.\n\nAngus led Jessica to the dining table. He looked angry. Riley had followed them and he looked angry too. \n\n\"Why are you mad?\" Jessica asked, remaining standing even when Angus pulled a chair and indicated that she should sit on it.\n\nAngus stared at her, his mind going blank. She turned to Riley.\n\n\"I don't understand why you're mad.\" She said.\n\nSame blank look from Riley.\n\n\"Assholes ...\" Corey mumbled from behind them.\n\n\"Listen you little shit!\" Angus roared at him, \"You're here for one reason and one reason only. Get the tattoos done and keep your fucking mouth shut.\"\n\n\"You going to make me?\" Corey demanded, standing.\n\n\"You bet I am!\" Angus growled and stalked toward him.\n\n\"Whoa, whoa!\" Scott said stepping between Angus, Riley who was following him, and Corey. \"What the fuck?\" he demanded from Angus and Riley, \"You can't get all caveman when Jessica is talking to other men.\"\n\n\"There's no reason for Jessica to talk to any men.\" Angus growled.\n\n\"And just how are you going to prevent that when we go out?\" Josh asked. He'd sat up, straddling the coffee table. He eyed Angus and Riley, trying to decide whether to stand.\n\nNeither Riley nor Angus replied.\n\n\"What the hell was the point of our oath last night if nothing has changed?\" Jim demanded.\n\n\"What the fuck?\" Riley said. \"Lots has changed Jim, I just don't recall anything in the oath stating that Jessica was going to be best friends with Corey.\"\n\nJim exhaled in frustration. \"Christ Riley. We agreed that we were all going to trust one another and be faithful to one another. That implies that Jessica can be best friends with whomever she wants ... she will always be ours. We also agreed that we'd go out in public with her, get her out for some fun. She is going to have to interact with other people to do that.\"\n\n\"Let me be very clear about something.\" Riley said turning on Jim. \"Yes, we trust each other and are loyal to one another ... and yes we will go in public with Jessica. Interacting with others to me means exchanging pleasantries. That's it. Maybe, and I mean maybe, sometime in the future I can accept her being friends with other men within the clan ... but that's not going to happen overnight. If that's not acceptable to you all ...\" he said scanning the men, and Jessica ... his eyes unable to leave hers once they locked onto them, \"then we're not going anywhere.\"\n\nSilence filled the room.\n\n\"Okay.\" Jim finally said. \"Okay. We have to take things slow, that's all. Can everyone do that? Just calm down and slow down?\" He looked around the room. Corey was glaring at Angus and Riley but they were ignoring him and staring at Jessica.\n\n\"Jessica?\" Angus asked.\n\nShe nodded. \n\n\"You don't look very happy.\" Riley observed.\n\n\"It's not nice ... when you attack people like that.\" Jessica said. \"Corey didn't do anything wrong and neither did I. And if you do that in a public place, I'd really rather not go. People don't deserve to be treated like that.\" She continued, looking back and forth between Angus and Riley. \"Especially when they're here doing us a favor.\" She pointed at Josh's partially finished tattoo.\n\nAngus felt like he'd been knifed in the gut. Jessica's disappointment in him and Riley was palpable. He looked at Riley and the other men with an expression that made it clear that he didn't know how to respond. \n\n\"Told you she doesn't like rudeness ...\" Scott mumbled.\n\n\"Now might be a good time to apologize ...\" Josh said.\n\n\"Sorry Jess ... sometimes I just can't help myself.\" Angus mumbled.\n\n\"I meant to Corey ...\" Josh said.\n\n\"Oh.\" Angus paused. When Jessica looked unappeased by his original apology he lowered his eyes to the floor. \"I'm uh, sorry Corey.\" He mumbled, not looking at Corey, or anyone.\n\nJessica sighed. Angus snapped his eyes up to Jessica's. Jessica scrutinized Angus and Riley's faces and sighed again. Manners, without a doubt, were not their\n\nstrong suits. Even so, Jessica couldn't understand their reactions. \"If you think about it logically there's no reason to be jealous.\" Jessica began. \"I'm married to the five of you. Don't you think five men in my life is enough?\" But as she said it she realized that the men already planned a sixth. Horror swept over her as she remembered all the threats years ago about Kevin. They hadn't talked about him last night. In fact they hadn't mentioned him in a long time and Jessica had forgotten about him. How was that going to work? She hadn't married Kevin ... she wouldn't marry Kevin ... she shuddered with fear. Did they expect her to?\n\n\"Jess, what's wrong?\" Jim demanded gasping as he tried to get up from the sofa. She suddenly looked terrified, sad, betrayed.\n\n\"Jess?\" Riley asked.\n\nJessica looked around at the other men. They looked confused, even Corey. \"What about Kevin?\" she asked, her voice shaking. \n\n\"Holy fuck!\" Riley exclaimed.\n\n\"Shit, fuck ... shit!\" Angus swore and slid his eyes over to Corey. He wanted him gone. This wasn't the kind of conversation he wanted to have around anyone other than the men and Jessica but it occurred to him that if the tattoos weren't finished Jessica may not feel that the oath was fully applicable so as much as he wanted to, kicking Corey out wasn't an option.\n\n\"How could we forget about Kevin?\" Scott demanded when Josh and Jim managed only to stare at Jessica, completely stunned. \n\n\"He's not coming here.\" Jim finally said, \"Ever.\"\n\n\"Isn't that right Angus and Riley?\" Josh asked. \n\nJessica still looked terrified. \"You said he'd hate me and hurt me.\" Jessica said her gaze settling on Angus and Riley.\n\n\"Jess,\" Riley said, she looked so small, scared and vulnerable. He pulled her into his arms. \"Kevin is in prison and when he gets out he'll never come anywhere near you.\" Jessica buried her face in his chest. She was shaking, her whole body vibrating. Holding her tighter he looked up at the other men. It was clear that Kevin had slipped off of all of their radars. He silently cursed Corey's presence. He looked most surprised of all. It was common knowledge in the clan that Riley and his chapter were planning to free Kevin and Kevin would resume his rightful place as head of the chapter. Letting this information get out unmanaged was dangerous but to try and back pedal, even for the sake of appearances with Corey, was not an option. Jessica was terrified, letting her believe for one second that Kevin would be anywhere near her was cruel. But Riley knew how the rest of the clan would take it, how Kevin would take it. It would be an act of betrayal. Well, there was no other choice. Given how things had evolved with Jessica, Kevin could never come back. Even if he wouldn't hate her or hurt her, the idea of bringing another man into the mix made Riley's blood boil. And from the expression on Angus' face Riley was sure he was feeling the same thing. In the long run, using Corey to pass the information on was the only option.\n\n\"Jessica ...\" Angus growled. \"Look at me.\" Jessica peeked up at him from Riley's chest. \"You better believe that the five of us are enough. There will never be anyone else. Ever. Including Kevin. You don't need to worry. Trust us ... please.\"\n\nJessica nodded. Straightening in Riley's arms, looking around at the men, \"I believe you and I hope you believe me when I say that I don't want to be in a relationship with anyone other than you men. Friendship, yes, I have to tell you that I want friends. But I understand that it will take some getting used to for you. We can take it slow. Just please don't be rude to people. It's not their fault you feel like you do.\" Jessica shook her head, \"And Corey is here doing us a favor. You should be thankful to him, not rude.\" \n\n\"Jess ... I don't know how to do anything different. I just get so ... jealous ... I don't think that will ever change.\" Angus said.\n\n\"Jealous of what?\" Jessica asked, \"We just agreed that I want no one other than you. Angus, thinking about last night, and this morning ...\" Jessica continued, her cheeks turning pink, her body responding to memories of the earlier interlude, \"can you honestly believe that there is any part of me that is unsatisfied?\"\n\n\"No.\" Angus replied, Jessica's response to the memories of the group sex so obvious that he had an instant hard-on. Fuck, why did Corey have to be there? \"But Jess, it's just a reaction I have ... I don't know how to change that.\"\n\n\"It's easy.\" Jessica said, \"Follow the same advice Jim gave me ... it's what helped get us here. Just do the opposite of whatever your instinct is ... eventually it will become second nature.\"\n\nAngus nodded. Fuck he wanted her ... she was wet. He knew she was. If Corey wasn't there they'd just fuck her and be done with it. As much as he wanted to throw Corey out it was more and more obvious that this oath ... the marriage, had to be solidified because without the certitude of Jessica being his wife he wasn't sure that he could successfully ignore his instincts and that would be a disaster. The men had said before that Jessica didn't like rudeness but he now had an appreciation for how much that was true. He never wanted her to look at him again like she had earlier with Corey. He had clearly disappointed her. With all his heart he wanted her to be proud of him. Fuck, he was in over his head. He was going to mess things up. Just as he'd resolved to take the chance on the consequences of not finishing the tattoo and just kick Corey out, it occurred to him that he should take Jessica's advice and do the opposite. Apologize to Corey and just let him continue with the tattoos. It was such a foreign concept that every fiber of Angus' being rejected it ... plus he wanted her ... he wanted to taste her, feel her, fuck her. Right then, right there. ",
        "\"Angus.\" Jessica said watching his face contort in a million different ways. It was clear to everyone that Angus was fighting an internal battle. It wasn't lost on Jessica that this was completely unlike him. Her heart melted, moved that he was so obviously trying to change for her. And it was also pretty evident that he was horny for her. The huge bulge in his pants, hard to ignore, made Jessica so wet she was certain there was a wet stain on the crotch of her pants. \"Maybe we should go work on your car for a while, until it's our turn for our tattoos.\"\n\n\"Shit, yes.\" Angus growled and grabbing Jessica's hand he pulled her out of Riley's embrace intending to drag her out to the cars ... it was perfect really because he also had the car that he'd found for her to fix out there to show her. But renewed disappointment in Jessica's expression made him realize that just dragging her off to the cars was high on her rudeness scale. Opposite of what his instinct told him, that was what she said to do ... right. Stopping he turned to Corey. \"I'm sorry man.\" Angus said sticking his hand out, \"I was rude and out of line. I appreciate that you're doing this for us. Please accept my apology.\"\n\nCorey looked at Angus for a moment and then scanned the rest of the men. They all looked as stunned as he felt. But not Jessica. She was smiling at Angus, like she was proud of him. Corey had liked Jessica when he'd met her the first time, but now he felt a whole new level of respect for her. \"Welcome to the family Jessica. I think we've needed someone like you for a long time.\" Then he swung his eyes back to Angus and shook his hand. \"I accept your apology, and you're welcome.\"\n\nAngus took Jessica's hand again, \"Ready?\" he asked.\n\n\"Ready.\" She replied with a smile and followed Angus out of the house. When she and Angus got off the front porch Angus pulled her into his arms. \n\n\"Close your eyes.\" He whispered in her ear, \"I have a surprise for you.\" Angus swept her into his arms. Jessica squeezed her eyes shut and giggled as she bounced against his chest with each of Angus' strides.\n\n\"Okay.\" He said stopping in front of the broken down red corvette that sat on the grass next to the one they were currently working on. He lowered Jessica to her feet and steadied her. \"Open your eyes.\"\n\nJessica opened them and looked over the shell of a car before them.\n\n\"Oh Angus, another car to work on! We're going to be busy.\" She said eyeing the silver corvette next to the red one.\n\n\"We are.\" Angus agreed, \"but this isn't any old car.\" \n\n\"It's not?\"\n\n\"No. I bought this car for you.\"\n\n\"Me?\" Jessica exclaimed. \"This is mine?\"\n\n\"Yup. All yours.\"\n\n\"Thank you!\" Jessica said and launched herself at Angus momentarily forgetting her physical condition.\n\n\"Easy babe.\" Angus said, holding her up when she gasped. \n\nJessica ignored the pain and landed a volley of kisses on Angus' cheeks, lips, neck. \"Thank you, thank you, thank you!\" She said between kisses.\n\nAngus was laughing, and feeling high from Jessica's obvious pleasure.\n\n\"Oh ... oh, oh, when it's done, can I drive it?\" Jessica asked.\n\n\"Sure. That's the point of having a car.\" Angus said, somewhat surprised at himself. He hadn't considered what she'd do with it when it was done and he'd certainly never imagined her ever driving a car. \n\n\"Have you ever driven before?\" he asked.\n\nJessica nodded. \"I had my license and my parents had my brothers and me taking defensive driving from the moment we could reach the pedals and see over the steering wheel.\"\n\n\"Well in that case you don't need to wait for this car to be fixed.\" Angus added, \"We have a shitload of cars. I'll take you out some time soon and you can show me what you know.\"\n\nJessica squealed with excitement and kissed Angus again. For his part, he had no idea where that had come from. The idea of Jessica behind the wheel of the car scared the shit out of him. But Jessica reactions to both the red corvette and the idea of driving made him feel happy in a way he never had before and he wanted more. \n\nAfter peppering him with kisses Jessica turned her attention back to the car. \"Can we work on it?\" Jessica asked.\n\n\"Now?\" \n\n\"Yes, now.\" \n\n\"Okay.\" Angus agreed. \"I have something else for you in the back seat that you need before we can start.\"\n\n\"What is it?\"\n\n\"Go take a look.\" Angus nodded at the car.\n\nJessica shuffled to the side window and peered in. On the back seat was a neatly folded pair of overalls and a large tool box.\n\n\"Those are for me too?\" Jessica asked, clearly excited.\n\nAngus nodded and opened the door. He pulled out the overalls and shaking them out he held them up in front of Jessica.\n\n\"They're pink!\" Jessica said in disbelief. \n\n\"Do you like them?\" Angus asked. He was unsure about the idea he'd had. Pink overalls, pink tool box. But somehow he had the idea she may like the touch of femininity. Now he wasn't so sure.\n\n\"Yes!\" Jessica said, reaching out and rubbing the pink fabric with her fingers.\n\n\"And I got this on the back.\" He said turning the overalls and showing her the emblazoned words he'd had patched on.\n\n\"Grease Babe.\" Jessica read. \"Oh Angus, I love it!\"\n\n\"And,\" Angus said reaching into the car for the tool box, \"this.\" He held up the pink tool box and watched Jessica's face. If there was any indication that she thought it was tacky, he'd take it back. But the pure joy on her face removed all self-doubt.\n\n\"Let me ... \" he said when Jessica tried to lower the box to the ground. Jessica slowly lowered herself into a crouch, opened the box and inspected the tools inside. Everything she'd ever need was there. And it was all brand spanking new.\n\n\"I love it so much Angus! Thank you!\" Jessica said, looking up at Angus, her eyes and face flushed with excitement. Although Jessica's expression was not similar in any way to the one she wore when she was sexually excited, it still caused Angus' groin to react.\n\n\"Can we start? I have to put my overalls on ... \" Jessica began to stand, but Angus gripped her forearm, pulling her back down to a squat.\n\n\"What's wro ... oh.\" Jessica said when Angus' expression made it very clear what he wanted.\n\n\"Did you notice what else is on the back of the overalls?\" Angus asked, turning the outfit over.\n\nJessica looked at the Grease Babe logo and shook her head.\n\n\"Lower.\" Angus grunted. Jessica's eyes slid down until she noticed what she hadn't before ... an opening so expertly placed on the bum part of the overalls that it was barely visible.\n\n\"A bathroom door?\" Jessica asked, pulling the fabric closer and inspecting the zipper. She opened and closed it, impressed with the cleverness of how it was hidden.\n\n\"It'll work for that too.\" Angus agreed, sliding his hand past her waist and grasping her butt cheek. \"But it was actually meant to be an easy access hole.\" He said, sliding his hand to the front and pressing it firmly against her crotch.\n\n\"Oh!\" Jessica exclaimed, her body tingling in anticipation of feeling Angus' hand without her pants in the way. She began to part her legs and gasped as pain shot through her.\n\n\"You still hurt.\" Angus said, a note of disappointment in his voice.\n\n\"I'll be okay.\" Jessica said \n\nHe pulled Jessica closer\n\nHe raised his hand to her jaw and rubbed. \"You're starting to slur your words again.\" \n\nJessica nodded. \"I guess the medicine Scott gave me is wearing off. But I'll be okay.\" She repeated, sliding her hand down between them and cupping the bulge between his legs.\n\n\"Can you spread your legs? Just wide enough for me to eat you out?\"\n\nJessica was nodding, her body vibrating with anticipation. \n\n\"And then straddle me?\" \n\n\"Yes ...\" \n\n\"Let's get these off then.\" Angus said, unbuttoning her pants and sliding them down. Jessica ignored the pain, especially when Angus discarded her pants, planted his palms on her thighs and pushed her open.\n\n\"Are you okay?\" he asked, as his thumbs slid between her lips and pulled them apart.\n\n\"Yes ... \" Jessica panted.\n\n\"You're sure?\"\n\n\"Oh my God Angus, yes ... hurry up, please!\" she pleaded, barely able to wait another moment. Angus chuckled as he lowered his face between her legs, his tongue and teeth sinking into her flesh. Jessica arched as wave upon wave of pleasure rolled over her. She sagged back, so relaxed she felt like falling to sleep. But she forced herself to wake up.\n\n\"You're turn ...\" Jessica said, running her hands through his hair. Angus looked up at her but continued to chew on her until her legs began to twitch. Then he kissed his way up her belly, pushed her shirt and bra up and nipped her nipples.\n\nJessica kissed the top of his head. \n\n\"Take your pants off.\" Jessica said, \"my turn to return the favor.\"\n\n\"You'll do no such thing.\" Angus said, rubbing her jaw again. \"I don't want to jump the gun on the other guys so all I'll tell you right now is that waiting for me to tell you what to do is something you should get used to doing. What's wrong?\" he asked when Jessica suddenly looked concerned and looked past him toward the house.\n\n\"Nothing ... except. Do you think they're going to mind?\"\n\n\"Who, the guys?\" \n\nJessica nodded.\n\n\"Mind about what?\"\n\n\"About this? I thought ... aren't we supposed to be having sex all together now?\"\n\n\"Nah. Individually is okay. Just not a couple of us at a time. Don't worry Jess, they'll be okay. Where were we?\" He asked, leaning back he struggled to undo his pants and pull his cock free. \"Come here.\" He ordered and pulled Jessica onto his lap, and drove his cock into her.\n\nJessica pushed herself against him, wrapped her arms around this head and did her best to ignore the protests of her muscles as she raised and lowered herself on him. Angus wrapped his arms around her and helped her move up and down.\n\n\"Jesus ... \" Angus repeated as he thrust and thrust and then exploded. As the final pleasure absorbed him, Jessica flopped against him. Angus held Jessica tight, not letting her move.\n\n\"You okay?\" he murmured into the hair on the top of her head.\n\n\"Never better. Can we work on the car now?\"\n\nAngus chuckled. \"Sure. Let's get those overalls on you.\"\n\n****************************************************\n\n\"It's getting dark.\" Jessica said. She'd collapsed onto her chest, Angus' face still between her legs, her legs straddling his face. He continued to lick, to prod, even as she twitched. This would be the third time, in what Jessica estimated to be about an hour since they'd come out to work on the car, that Angus had ignored the twitching, her sensitivity, and had brought her to climax.\n\nAngus lifted her a little, fingers of one hand holding his face's place between her lips, fingers of his other hand thrusting into her.\n\n\"How dark?\" he asked.\n\n\"The sun's almost completely down.\" Jessica replied, blinking into the bright spot light that shone down on them from the garage roof. It had come on automatically a minute before.\n\n\"One more time.\" Angus said, and used his tongue to find her clitoris. Jessica nearly jumped off of him. Angus brought his hand up to grasp her butt and hold her in place. Jessica closed her eyes and found that she truly enjoyed the discomfort that Angus put her through to reach another orgasm. It hurt, but it didn't. She spread her legs further and concentrated on the distant and fleeting beginnings of her orgasm, and began to rock against his face. Opening her eyes she saw her overalls crumpled in an heap next to her. They'd used the back door a couple of times but in the end Jessica's mobility had been too restricted and Angus had pulled them off, leaving her buck naked.\n\nShe sighed. She knew that they would probably not have time to work on her car. They had done a little in the time they'd been outside, but mostly they'd had sex. Well, actually, mostly she'd had orgasms. Every now and then Angus would enter her and orgasm as well, but he never allowed her to suck or jerk him off. She'd tried to argue but Angus would always interrupt her by bringing her to ecstasy. And she'd forget what she'd been trying to do until the next time.\n\nSuddenly a blinding pleasure shot through her and she collapsed onto the ground again. And Angus' tongue slowed to small, gentle licks.\n\n\"I see that you two have been working hard.\" Riley said.\n\n\"Oh!\" Jessica exclaimed, surprised, and inexplicably embarrassed she tried to roll off of Angus and into a ball but Angus held her still, only moving her slightly so he could look at Riley.\n\n\"In fact we have.\" He said, \"we were just taking a little ... \" Angus paused, glanced at the pubic hair so near his face and chuckled, \"pussy break.\"\n\n\"You don't say.\" Scott added. Jessica dropped her head to the ground and groaned. Both Riley and Scott had had intonations to their voices that proved Jessica's earlier concerns to be true. They sounded unhappy.\n\n\"And it's my fucking night with her.\" Josh added.\n\nJessica froze. There was no mistaking that. He was definitely upset. And suddenly she wondered if they were all outside, standing there looking at her and Angus. She didn't mind the men ... but what if Corey were there too.\n\n\"Sorry man,\" Angus raised his hands in surrender and Jessica took that opportunity to scramble off of him, sit on her bum, pull her legs up to her chest and throw the overalls over herself burying her face into the pink cloth, too mortified to even check if Corey was there. Silence fell. Angus' apology died when Jessica scrambled away, and now the men stood staring at her trying her hardest to hide herself.\n\n\"Jess.\" Riley said. But Jessica gave no response. She was so busy trying to disappear she hadn't heard him.\n\n\"Jessica,\" Scott said and moved to squat in front of her, he placed his hand on her head. Jessica jumped from surprise and glanced up.\n\n\"Are you embarrassed?\" Scott asked, surprised, when he saw her face flushed bright red. \n\nJessica nodded and as mortified as she was, she chanced a glance around. She saw Riley and Josh standing near the car, gaping at her, Angus still lying down, head tilted back to see her and Scott squatting in front of her.\n\n\"Where's Corey?\"\n\n\"Corey?\" Josh asked moving forward and crouching too. \"Oh Jess, baby, you didn't think we'd bring him with us, did you? We kind of figured this was going on, no way would we have brought him. He's back at the house finishing Jim's tattoo up.\"\n\n\"Thank God!\" Jessica exclaimed and collapsed onto her back. \"How embarrassing would that have been?\"\n\n\"He would have got a good look at your backside.\" Riley said with a chuckle.\n\nJessica rolled her head to look at him. \"So, you're not angry? Or upset?\" she asked looking from Riley to Josh to Scott.\n\nAngus sat up. \"Yeah. Jessica was worried that we shouldn't've been fucking ... but I thought that it was okay so long as it was one on one. I guess I forgot the part about it being your night Josh. Sorry.\"\n\n\"Jess was enjoying it.\" Josh said. \"That's all that matters to me.\"\n\n\"'K but the problem with this kind of thing when it's not your night, and it's not all of us, is that you're tiring Jessica out. She's not going to feel like going at it later and Josh'll get stiffed out of his night ... no pun intended.\" Scott said.\n\nThe men chuckled. \n\n\"You're right. I'll stick to my nights when I'm alone with Jessica.\"\n\n\"To tell the truth Jess, if Corey still wasn't in the house and Jim wasn't out of commission, we would've been joining you.\" Scott said, his voice turning lazy and sensual as he ran his eyes over her. For the first time Jessica noticed the tents in the crotches of Scott, Riley and Josh's pants.\n\n\"I guess Jim would be upset if I helped you with those ... \" Jessica said, eyes glued to Scott's bulge.\n\n\"Against the rules.\" Riley agreed but it was clear he was thinking of ignoring the rules. \n\n\"Once Corey leaves,\" Josh said, \"We'll have all the time in the world.\"\n\n\"Right.\" Angus said. He was glad that he'd already had so many orgasms because he wouldn't have had the discipline to wait. Even now he was feeling stirrings again. He had to change the subject, fast. \"So Josh, are we okay?\"\n\nWhen Josh didn't answer Angus Josh Jessica swung her eyes on him, and his expression made her gasp. Despite Jessica's own sexual satiation she felt an immediate and overwhelming yearning between her legs. There was no doubt that the sexual Josh was back. Still in a crouched position, Josh began to inch toward her.\n\n\"Maybe Corey'd take a break for a bit. Come back later. That way we can include Jim.\" Scott was saying, running his hand up Jessica's. He held his other hand out and it took Jessica a moment to realize he wanted the overalls that she still clutched against her. She handed them to Scott and the looked around at the men. Riley was starting to undo his pants, Angus had gotten to his knees and crawled toward her also.\n\nJessica wondered belatedly, as she felt anticipation growing, if scientifically there was a such a thing as sexual waves. Radio waves, brain waves, there had to be sexual waves because she felt them rolling off the men and engulfing her. Scott pulled her against him, Josh took her ankles and gently pulled her legs apart. Jessica sighed when Angus took her breast in his mouth and Riley knelt beside Josh, taking over her left leg from Josh, and running his hand up it, ending with his fingers joining Josh's to stroke her pussy meat and alternate dipping into her hole.\n\nJessica sighed, leaned her head back against Scott's hard chest and watched his lips as he lowered his head towards hers. And suddenly she had a flash memory of Jim, sitting on the sofa, unable to join them earlier. The look on his face, his painful attempts to get his cock out so he could at least self-satisfy himself ... and the way he looked at the end, when he hadn't had intercourse with her. He was supposed to be first this time.\n\n\"Stop.\" She managed to say even as Riley and Josh's fingers worked their magic and pleasure mounted. \"Stop!\" she said louder when no one had heard her the first time. Scott was about to cover her mouth with his. \"Stop please!\" she repeated, and tried to push Scott's face away, close her legs and sit up. But it didn't work. It was like trying to move mountains. \"Scott, please!\" she said, catching his eye and holding it. \"Jim. Jim is supposed to be here, and he's supposed to be first. We can't do this without him!\"\n\nBut Scott just stared at her, lust clouding his eyes. He tried to kiss her again. She dodged his kiss and tried instead to plant her hands on Angus' shoulders and push him off of her tit. But her efforts were futile. Desperation poured over her. They weren't going to stop and Jim was going to be left out. Without thinking Jessica threw her head back and yelled, \"Stop!\" as loud as she could. Four sets of eyes looked at her, but their hands didn't stop administering their pleasure and Jessica was about to reach orgasm. It had to stop. She couldn't do it without Jim being included. With as much strength as she could muster she pushed back on Scott. Scott let her, suddenly realizing that she wanted something. Maybe a different position?\n\nWhen Scott leaned back, Angus let Jessica push him from her tit.\n\n\"Hurry up,\" he panted, \"give me your other tit!\"\n\nJessica sat up, and pushed Riley and Josh's hands away and curled her legs up to her chest at least temporarily cutting off access to all her holes and her breasts. She was panting with the effort.\n\n\"No!\" Jessica said when Riley reached for her knee.\n\n\"Jessica!\" Riley said, desperate to get back to his probing. He'd been close to replacing his and Josh's fingers with his mouth and he was literally drooling at the prospect.\n\n\"Jimmy.\" Jessica said in a strangled voice. In truth she wanted the release just as badly as Riley wanted to give it. \"We made an oath!\" she added when Josh, Scott and Angus reached for her again. \"He's supposed to be first this time!\"\n\nJessica's words finally sank in, but Jessica's obvious desire made her desperation to stop difficult to discern. ",
        "\"You want us to finish.\" Angus said looking her over and confirming for himself that everything about her face, her smell, even her body language despite the ball she'd pulled herself into, said that she wanted them to continue.\n\n\"Yes.\" Jessica said, \"but not right now!\" she added quickly when the men reached for her at the same time. \"Remember Jim, and our oath. We can't do this without Jim!\"\n\n\"Right.\" Riley said getting to his feet, and finding his pants. \"I'm going to tell Corey to hit the road and come back tomorrow.\"\n\n\"No. No, Riley, that's not nice.\" Jessica said watching Riley fumble with his pants, trying to straighten them.\n\nRiley froze with his foot part way through the pant leg. \"Not nice?\" \n\n\"No. Corey's been here for hours, doing us a favor. We can't just kick him out. We should be offering him dinner and beer.\"\n\n\"You're serious!\" Angus said in disbelief.\n\nJessica nodded.\n\nThe men looked so pained by the idea that Jessica had to laugh.\n\n\"It's not like we won't have sex later. Lots of sex later. Look,\" she added when the men didn't look placated by her statement. \"Corey is your friend and he's only here for a little while. You should spend some time with him.\"\n\n\"Jess, I don't want to spend time with Corey.\" Riley said. \"I want to spend time with you. Every part of you. And I want to get rid of this.\" He pointed to his erect cock. \n\n\"I guess we could self-service.\" Josh said beginning to realize that Jessica was right.\n\n\"No. I want to get rid of this into you. Not some Kleenex or thin air. You.\" Riley said.\n\n\"Well.\" Jessica said thinking hard, trying to find a way to make it work out for everyone. \"I could have sex with each of you, individually. I guess technically that would be sticking to the oath.\"\n\n\"Holy shit. You really are into fairness.\" Riley said. \n\n\"Sorry.\" \n\n\"Don't be sorry Jess.\" Riley said pulling his pants on, resigning himself to the fact that he would be relying on his hands for satisfaction. \"You're right. We have to keep the oath in mind, be fair to Jim, and be nicer to Corey.\"\n\n\"I kind of like the individual sex idea.\" Scott said.\n\n\"Okay. Who's first?\" Jessica asked, looking around at the men, eager to please.\n\n\"You're killing me here.\" Angus said suddenly feeling guilty. Jim was right, she was going to wear herself out trying to make things right with them and keep things even.\n\n\"Shit.\" Scott mumbled, coming to the same conclusion. \n\nJosh nodded to himself, and got up to find his pants.\n\nJessica took one look at their faces and hung her head. \"I can't think of another way.\" She said. \"Sorry.\"\n\n\"No Jess. You're right.\" Scott said lifting her face by her chin. \"You're right about everything except the idea of taking care of each of us individually. It's not your job to make sure we all come out even. So we'll self-service and wait for later to be with you all together. It's the right thing to do.\"\n\n\"Okay.\"\n\n\"You look unhappy.\" Angus said.\n\n\"I feel like I've let you down.\"\n\n\"You haven't.\" Josh said. \"But you did make it obvious that we're not as honorable as you are ...\"\n\n\"Honorable?\" Jessica asked in a tone that made it clear that she felt anything but honorable.\n\n\"Out of the six of us, you're the only one who actually remembered our oath and stuck to it.\" Riley said. \n\n\"And we only made it last night fuck.\" Angus added, disgusted with himself. \"How pathetic is that?\"\n\n\"This is our problem Jess, not yours.\" Scott said when Jessica looked worried. \n\n\"That's right.\" Josh said, now fully dressed and squatting in front of her. \"Let's get you dressed.\"\n\nJust then Jessica's stomach growled. Loud.\n\n\"Nothing like starving you too.\" Angus mumbled, feeling like shit.\n\n\"And we'll get you some dinner.\" Josh added. \n\n\"I need to take a shower first.\" Jessica said, standing and moving to Josh. \n\nDespite feeling guilty, Riley and Angus rolled their eyes at one another.\n\nJessica saw them. \"No, really I do!\" she insisted. And then she realized how ironic it was. \"Don't you find it funny that when I tried to stay dirty so you'd stay away from me, you two,\" she nodded at Riley and Angus, \"were the most outraged by it?\" She remembered the violence that they'd unleashed on her at the time. All of them had, but Angus had been the most incensed out of them, Riley a close second. \"And now that I want to be clean for you, you don't like it?\"\n\nAngus flinched.\n\n\"No. That's not funny. Not at all.\" Riley said slowly realizing the implications of her words. They'd punished her for not cleaning herself, and then they \"punished\" her for wanting to clean herself. Suddenly he felt sick and by the expression on Angus' face, Riley could tell that he felt the same.\n\n\"I'm so sorry.\" Angus said slowly sinking to his knees in front of her.\n\n\"No!\" Jessica said looking from Angus' bent head to Riley's tortured expression. \"I didn't mean it like that.\" She said, and then noticed that Josh and Scott looked equally upset. They had done their share of punishing her at the time. Not nearly as brutal as Angus, but they had participated. \"It was just an observation.\"\n\n\"It bothers you though.\" Riley said.\n\n\"I feel gross when I'm dirty. I just don't want to gross you out. If you really like me like that, then I guess it's okay ...\"\n\n\"That's not what I mean.\" Riley replied. \"It bothers you that we were so ... awful to you then. And now, we're forcing you to be dirty when you want to be clean.\"\n\n\"I actually just thought about the irony of the whole thing now.\" Jessica said. \"Honestly!\" When Angus flashed his eyes up at her. \"I've gotten past it, past the past ... remember? I just found it ... odd. That you felt one way back then, and now you feel another.\"\n\n\"Back then ...\" Scott started his voice coming out strangled. He cleared his throat. \"Back then, we didn't feel about you like we do now. Back then it was a power struggle. Now it's ... lust.\" His voice faded. It was more than lust really. It still had to do with power ... if he was honest with himself he knew that when he dominated Jessica, just like he was sure was the case for Riley and Angus, it wasn't a power struggle but a power trip. \n\n\"I know.\" Jessica said. \"That's why I don't mind.\"\n\n\"You're going to mind though.\" Josh said. \"Especially when Corey goes home, and we're alone, all together, and we begin to have sex and we tell you that you're our slave. We've decided that Jessica. That you do way too much work, trying to make everything even for us. We've decided that when it comes to sex, we're your masters and you're our slave. You will have to obey us, you won't have a say, your will will be taken away. Can you live with that?\"\n\nJessica stared at Josh. At first she thought he was joking but the silence that followed and the expressions on the men's faces made it clear that he'd been serious.\n\n\"Jessica?\" Scott asked. He couldn't read her expression and the suspense was killing him. \n\nJessica opened her mouth, but then shut it again obviously at a loss for words.\n\n\"That would be during sex only.\" Scott said. \"Otherwise you are our wife, as equal as we can make you. Just like the oath says. But during sex ... we need to be your masters. Do you understand that?\"\n\nJessica felt her heart pounding in her chest. For a moment there, for a very brief moment, she thought she'd lost the privileges that she'd just gained. But her mind latched on to Scott's words. During sex. Yes, she could be their slave during sex. In fact, she enjoyed it ... as the tingle in her private parts demonstrated. Just remembering being dominated by Angus, Riley and Scott made her horny. \n\nHer worry had been for the rest of the time, during their non-sex life, but she realized that if they'd planned on dominating her in regular life, they wouldn't be out here right now. Naked, and talking. If the men had no intention of honoring her wishes, they would have ignored her request to wait to have sex until Corey left, and when Jim could join them.\n\n\"Jessica ...\" Riley said.\n\n\"During sex only?\" Jessica asked.\n\n\"Yes.\" Riley said.\n\n\"Will you ... hurt me?\"\n\n\"Not like we did back then ... but to get you off, yes.\" Scott said.\n\n\"Jessica, I'm never going to hit you again.\" Angus said, grasping her hand and dropping his forehead against her bare stomach. He kissed it and then looked up at Jessica. \"If I hurt you it will only be like the car ... like I did in the car. But you enjoyed that, right?\"\n\n\"Yes, I did.\" Jessica said running her fingers through his hair, and kissing his forehead. \"Okay.\" She said looking around at Riley, Scott and Josh, \"I don't mind being your slave when we have sex.\"\n\n\"And if something bothers you, you can tell us to stop.\" Riley said. \"Like you did just now.\"\n\n\"And hopefully I'll be able to stop.\" Angus said, \"I can't promise that I will always be able to. \"I don't want to promise something I can't actually do.\" He added. \"Can you live with that?\"\n\n\"Yes.\" Jessica said. \"I only want you to stop when the oath is being broken anyway.\" \n\n\"Angus!\" Jim's voice yelled from the doorway. Jessica doubled over, suddenly afraid that Corey was coming out after all.\n\n\"Coming!\" Angus yelled back. \n\n\"You go, we'll get Jessica dressed.\" Scott said, \"Before Corey comes out here.\"\n\nAngus nodded, kissed Jessica on the lips and struggled to get his clothes on. Within minutes, he was walking back to the house while zipping up his pants.\n\n\"Here are your shirt and bra.\" Scott said, passing them to Jessica.\n\n\"Pants and undies.\" Riley added, handing them to her also.\n\n\"Thanks.\" Jessica said.\n\nJosh held Jessica by her elbow, helping her balance while she pushed her foot into a pant leg. And then tugged Jessica's shirt down straight once she'd pulled it on. \n\nJessica leaned over and pecked him on the lips by way of thanks.\n\n\"You're sure you're okay?\" Riley asked, cupping her cheek with his hand.\n\n\"Yes, are you?\"\n\n\"I think so. But it's going to be hard to have enough patience to wait for Corey to leave without kicking him out.\"\n\n\"I have faith in you.\" Jessica said.\n\n\"I'm glad one of us does.\" Riley said, but then winked. Jessica slid her hand into his.\n\n\"Let's do it.\" Josh said and took her other hand. \n\nScott nodded and led the way to the house.\n\nAn hour and a half later Corey was reaching for the doorknob of the front door.\n\n\"Thanks again.\" Scott said.\n\n\"No prob.\" Corey said and turned back to Scott. \"And a word of warning. Paul was not pleased about the week you're taking off. You may want to smooth things over a little.\"\n\n\"We're taking two weeks, not one.\" Riley said, \"And I'll smooth things over with him after our vacation ... \" but then he paused, \"unless you think there's going to be a problem.\"\n\n\"Paul is Paul.\" Corey said. \"I'm sure he'll suck it up but I'd be careful. He's still pissed about you guys splintering off. I'll try to smooth things over a little for you.\"\n\n\"Thanks man,\" Riley said stepping forward to shake Corey's hand.\n\n\"See you Jessica.\" Corey said.\n\n\"Bye, and thanks.\"\n\nNo sooner had the door closed then Riley spun around, his eyes falling on Jessica.\n\n\"Take your clothes off.\" He commanded. Jessica looked startled. And so did Jim.\n\n\"Riley ...\" Jim began.\n\n\"Jim, you have no idea what we've been going through, waiting for Corey to leave ... we have unfinished business with Jessica and now that Corey's gone and you're here, we can finish it. So, Jessica, take off your clothes. Now.\"\n\nJessica looked around at the men and then remembered what they'd said about her role during sex. Pleasure shot through her.\n\n\"She's sore from the gangbang earlier this afternoon and she just had a tattoo done, without anesthetic I might add,\" Jim said casting an impressed glance at Jessica. Despite arguments from all of the men, including Corey, Jessica had said she wanted the tattoo to mean more and refused the topical anesthetic. She'd barely made a sound while Corey had worked on her tattoo and Jessica had blushed with pride when the men had praised how tough she was. \"I hardly think this is the time ...\" Jim said but paused when Jessica began undoing her pants.\n\n\"Yes master.\" Jessica said.\n\n\"You told her?\" Jim asked. \"About the slave/master thing?\"\n\n\"Yup and she's good with it.\" Scott said nodding toward Jessica who now stood completely naked before them.\n\n\"That's great.\" Jim said, breathless as his cock strained against his pants.\n\n\"Yes it is.\" Riley agreed, moving toward Jessica. \"And Jim since you didn't get your full turn earlier, you can start this evening off.\" Jessica's nipples stood fully erect and Riley couldn't help but pull on them.\n\n\"I've never done the master thing.\" Jim said.\n\n\"It's easy.\" Angus said kicking his pants off. \"Tell her what you want her to do.\"\n\n\"And if she doesn't do it real fast, and exactly like you want it ... there are consequences.\" Scott added.\n\n\"Consequences?\" Josh and Jim asked at the same time.\n\n\"Oh yeah. There are consequences for everything.\" Scott said. \"If she doesn't obey. Like when you tell her to orgasm or not to orgasm. She's already experienced the pain and pleasure of hot water on her pussy. And there are many, many other consequences.\"\n\nJessica shivered with anticipation and then she came.\n\n\"Like that for instance.\" Angus said so turned on by the look on her face, by her smell. \"We never told you to cum Jessica. There will be a consequence for that ... \" he added, running his eyes up and down her body, and his hand over his mouth. God, he couldn't wait.\n\n\"But first, tell her what you want her to do for you Jim.\" Josh said.\n\nJessica was moaning as Riley pulled harder on her nipples. He was eyeing her pussy and Jim knew that if he didn't speak now he'd probably lose his chance.\n\n\"Straddle me Jessica.\" He gasped. \"Hurry!\"\n\n\"Yes master.\" Jessica said and went over to him. She undid his pants and his cock seemed to jump out of them. Parting her legs she moved onto Jim's lap, and then slid onto his cock.\n\n\"Oh God.\" Jim moaned in a strangled voice. Jessica pulsated on him, and he brought his lips to hers. When Jim came, Riley moved to Jessica, who still straddled Jim, and pulled her nipple again.\n\n\"So Scott, what was that you were saying about hot water?\"\n\nScott chuckled while he moved to her other breast.\n\n\"Let's go to the bathroom and I'll show you.\"\n\n\"Can you make it to the bathroom?\" Scott asked Jim. \"Good.\" He said when Jim nodded. He took Jessica by her arm and reached down for her leg. \"Pick her up with me.\" He told Riley, who took her other arm and leg and they lifted her, and carried her down the hall to the bathroom, the others following.\n\n\"One of you get in the tub.\" Scott said to Angus, Jim and Josh.\n\nAngus moved to the tub.\n\n\"She'll go between your legs.\" Scott said as he led Riley over to the tub and they lowered her between Angus' legs. \"Hold her legs open.\" He told Angus and Angus hooked his hands behind her knees, pulling her open.\n\n\"Now,\" Scott said, turning the water on, \"these are the rules.\"\n\n**********************************************************************\n\nJessica smiled while she lay on her back, looking up at the underside of her car. She couldn't remember ever being this happy.\n\nA week had gone by since she had taken the oath with the men, and Corey had tattooed them. \n\nAnd it had a been a great week. They had had so much sex that Jessica felt so relaxed, it took all her effort to move.\n\nThey had not yet gone to play pool. Jimmy hadn't been up to it. But they had begun working out together. Jim just watched mostly, but Jessica ran with the men, worked out with the men, and Riley had begun teaching her some more advanced fighting techniques. Well, their work outs almost always deteriorated into animalistic sex, but at least they tried.\n\nShe had been doing target practice with them too. The men had actually gone so far as to bring the guns and ammunition back into the house and while Jessica had always been great with a rifle, she was beginning to learn how to use handguns. In fact, Jim had bought her a gun belt, just like the cowboys used to wear. With two gun holders since Jessica insisted on learning to shoot accurately with both hands. Her left hand had some serious work to do ... but she loved the challenge.\n\nAnd, since Jim still wasn't one hundred percent, Riley and Angus hadn't seen her race yet. Sean and Corey had volunteered to take Ebony to the breeding appointment, so Ebony wasn't due back for another couple of days. There were still so many things to look forward to. And now she had a little time to herself to work on the car. Progress had been slow to non-existent when Angus was around. She couldn't believe how insatiable the men were ... how insatiable she was. It was a wonder to her that any chores had been accomplished in the past seven days. They had taken to using the usual one on one schedule to determine who Jessica spent time with during the day and the nights were being spent together. This was her day with Scott and after helping him clean the barn and feed the horses, Scott asked her what she wanted to do. When her gaze had strayed to the garage, Scott had chuckled and told her to go ahead. This was the life. Absolutely, the best.\n\n*********************************************************\n\nAngus stomped into the house. He'd been into town to pick-up another apparatus for their sexual exploits. He carried the large box under his arm and held it up when Riley, Scott, Josh and Jim looked up at him.\n\n\"Another fuck machine.\" He said, \"Now she can get it in the pussy, the ass, and the mouth at the same time.\"\n\n\"Excellent!\" Scott said and the others nodded in approval.\n\n\"Don't you guys think we should back off a little?\" Jim asked.\n\n\"What the hell are you talking about?\" Angus demanded.\n\n\"You guys can't honestly expect to maintain this level of sex with Jessica for much longer.\" Jim said. \"She's going to start to resent it.\"\n\n\"I think she's enjoying it just fine.\" Riley said.\n\n\"Besides, she'd tell us if it was getting too much.\" Josh said. \"That's part of the oath.\"\n\n\"Right.\" Jim agreed. \"I forgot about that.\"\n\n\"Damn it.\" Riley said, pulling the cell phone from his pocket. The vibrations making the same buzzing noise that the vibrators they used on Jessica made. The similarity made Riley's cock start to awaken.\n\n\"Paul again?\" Angus asked as Riley looked at the call display and then tossed the phone onto the coffee table.\n\n\"Fuck yes.\" Riley said.\n\n\"I thought you told him we'd be off for two weeks.\" Josh said.\n\n\"I did. And I told him that we'd only do info gathering jobs from now on. I think that pissed him off.\"\n\n\"We have to figure out how to get out of this.\" Jim said. \"Permanently. I don't think Paul is going to let us just do just surveillance.\"\n\n\"If I can work up the nerve I'll ask Corey or Sean about that.\" Scott said. \"I'm really not sure how they'd react but they might know how we can get out of the clan.\"\n\n\"We don't need to worry about that right now, do we?\" Angus asked, examining the long dildo that he pulled out of the box. \"Once I get this set up, there are some better things that I can think of doing ... \"\n\n\"You're serious about that aren't you?\" Riley asked, leaning forward to look into the box at the engine that would be used to power the fucking machine while it banged the hell out of Jessica's mouth.\n\n\"It's a consequence. We told her several times that she was to do nothing, just let us pleasure her ... follow our commands. But she tried to suck each one of us off several times this week, without us telling her to. Not that I don't want her to suck me off ... but we agreed, right? She works too hard, left on her own.\" Angus said.\n\n\"We agreed.\" Jim said. \"I don't think she trusts us to be as fair to each other as she would be. I really can't believe that she's misbeh ... not listened.\"\n\n\"Misbehaved is what you were going to say.\" Scott said, \"And that's what it was. To be fair to Angus he told her several times over the better part of the week that if she kept doing that she'd be hooked up to all three fuck machines for the night. Either she didn't believe him, or she really wants to be pounded in her mouth, pussy and ass for hours on end.\""
    ],
    "authorname": "JadenL",
    "tags": [
        "owned",
        "gangbanged",
        "authoritarian",
        "slave",
        "master",
        "blowjobs",
        "stockholm syndrome",
        "kidnapped",
        "used",
        "anal"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/lisa-ch-07a-jessica"
}