{
    "title": "Visiting The Girls Of Amsterdam Ch. 02",
    "pages": [
        "Dear readers, in the first installment, Bunkie got to fly to Amsterdam for an education not to be had at an American university. There he met Veronika, a girl his own age that gave him an eye opening night of adventure. It's a pretty good read, according to the feedback, so catch up on that one if you haven't already done so. During that first tryst, Bunkie briefly met another girl named Galena. We'll pick up the story evolving from that chance encounter.\n\nAs always, all my stories have a germ of truth to them, either in the setting or events that happened. It tends to keep a story from becoming far fetched or unbelievable. I always relish your comments and constructive criticisms and of course thank you for reading my work. --puppop\n\nI Acclimation \n\nPieter and I puttered down the darkened boulevards. Mostly all the bicyclists were safely home, the good burghers turning down their beds and making plans for the weekend. I asked Pieter if he had waited outside all the time I was upstairs. He hadn't, instead meeting some friends for dinner and running an errand or two. The car couldn't be used on the weekend, since it belonged to the government. Bicycles would be the order of the day for Saturday and Sunday. As I absorbed this, he finally asked if I had enjoyed myself.\n\n\"It was a lot more than I expected Pieter. \" I relaxed into the seat and looked out the window at the low clouds and mist.\"But I didn't quite know what to expect. Thank you for picking out such a good hostess. There's no way things would have worked as well without your help. I had a great time. I mean, I'm worn out, Lord!\"\n\nPieter just grinned and tapped his thumb on the steering wheel. \n\nI asked, \"How did you know of Veronika, or is it a secret?\"\n\n\"I met her by my office not too long ago. She had come to the Ministry for her work visa and I chatted her up. She's a sweet girl. I was pretty sure you two would go well together.\" He geared down for a red light. \"She and her roommate are from Estonia. They escaped from a pretty tough regime.\"\n\n\"I met Galena. She stopped by for a minute.\"\n\n\"I haven't met her. Are you going to see her?\"\n\n\"That's the plan. Tomorrow night I'll be with her, as long as I can get there.\"\n\n\"We'll make it work.\" Pieter put the car in gear and we moved on. \"You'll need to get by the currency exchange and we'll have to get you a bike. Taxis aren't cheap, plus there's more to learn here than just girls.\"\n\nWe laughed. Arriving at Pieter's at last, I said my good nights and thanks and wearily shuffled off to bed. As I drifted off, I heard a police car in the distance. It might have been some other sort of emergency vehicle but the sing song siren sounded so utterly foreign. I wasn't in Jersey anymore. Saturday spelled new promises for a young man with unique opportunities.\n\nII Meeting up with Galena\n\nThe wind had picked up during the night and blew away the fog. I watched signal flags on a tugboat fluttering in the breeze. I had parked my rented bike near an old stone quay where it was reputed that Henry Hudson had sailed for the New World. Lunch was an excellent sandwich and brew from a restaurant that had been there for four hundred years and the tables were worn down on the edges from half a millennia's worth of arms and elbows. I had gone and exchanged dollars for guilders and was starting to learn what things cost. \n\nIt was strange to be in a foreign country, even one as benevolent as Holland, but it was the start of a lifelong love for the Netherlands and all things Dutch. It was a clean, unassuming, and as I found out, a very tolerant country. I had ridden through a stop sign, only to have a whistle blown at me by a foot cop who explained to me that bicyclists weren't exempt from any traffic laws. He was really nice about it. He even smiled and waved as I pedaled off. \n\nIt was cool in the breeze and I was glad I had on a heavy cable knit over my jeans and boots. I had my Red Sox ball cap pulled low over my hair and I felt clear eyed and fit as a fiddle. With a map in my back pocket, I played tourist, bumping over the cobblestones by the Royal palace and watched the ebb and flow of tourists at some of the museums. Everything seemed old, but well cared for. I was fascinated by the colorful houseboats, the flowers and all the tiny little shops that sold everything from rare books to trinkets and electronics. The narrow shopping district was crowded with people from everywhere imaginable. They clustered around street musicians and portrait painters at the corners just like in New York. But as the day drew on, the ranks of visitors thinned as I made my way back to my evening 'school'.\n\nAt the door of my previous evening's tryst, I was uncertain which bell to ring. There was a line of them mounted in brass with a number associated with each. As I stood there, the door opened and a British sailor emerged. We nodded and I caught the door before it could close. At the well of the third floor, I knocked on the middle door, which I recalled would be Galena's room. After a moment, I heard her, asking a question in Dutch. I simply said my name and hoped she wasn't entertaining.\n\nMy fears were ill founded. The door flew open and there she was. It was my first meeting with her face to face standing up. Laughing and murmuring,\"Ah Bunkie, Bunkie, come,\" she pulled me inside. We walked down a little hall which opened into her room to the right. She turned to me and gave me a hug and a peck on the cheek. Close up, her features seemed Slavic with higher than usual cheekbones and a slight tilt to her eyes, which were deep brown with flecks of gold. Her hair cascaded down to mid back and smelled of lavender. Her wide smile created dimples in her cheeks, all aglow in good health. She was wearing a tight burgundy turtleneck over equally tight bell bottom jeans and lace up boots completed the ensemble. Her breasts were unfettered, naturally sloping apart and her waist flared pleasingly out to a round thick butt. In other words, she was my idea of a full,on the tall size girl. \n\nShe gestured to an old brocade covered chair by the window, which was open. I heard people on the street below us, including a woman asking directions to the shopping district in Italian. Half thinking, I muttered the answer in Italian, having just wandered through the district earlier. Galena had turned to unpacking her valise on the bed when she heard me. \"Aha, you speak Italian?\"\n\nI nodded, \"Some, but I'm not fluent.\"\n\nShe replied in broken Italian herself, \"I learned some in school and some from an old boyfriend. This is marvelous that we can speak together, no?\"\n\n\"It solves a big problem.\" I was relieved. I'd been wondering how in the world we'd communicate and then quite by accident, this discovery. I wanted to lean out the window and thank the lady below for her perfect timing. But then again, everything happens for a reason. As Galena floated a sheet over the naked mattress, I told her as best I could how Italian men would visit my uncle's social club when I was little and how they'd pay me a dime for every sentence I would learn in Italian. \"Of course, I've forgotten a lot of what I learned\" I concluded.\n\nShe came over and took my hand. \"Perhaps we'll get to practice that and maybe some other things too? I heard from a little mouse that you are a good learner and work very hard to please the instructor.\" She chuckled. \"Now this instructor has had no dinner. Have you dined?\"\n\nI shook my head. \"Shall we do so? I've seen many places for food.\"\n\nShe grinned and grabbed a short jean jacket that didn't have the first chance of buttoning over her deep chest. \n\nOn the street she easily matched my stride as we walked around dawdlers and gawkers, some of which turned to gawk at Galena. Her hair rose and fell with each step and she took my hand when we crossed the avenue. She pulled me into a little diner I hadn't noticed and we grabbed a window booth. We were flushed from the brisk walk and our attempts to understand each other, which made for some hilarious discussions. The waiter didn't speak English, so I let Galena order for me, which she did in rapid Dutch.\n\n\"What am I having tonight?\" I asked as the waiter left. \n\n\"Bacon and ice cream\" came the mirthful reply. \n\n\"I'd heard that was the usual dinner fare for Estonians these days\" I said, leaning back in my seat.\n\n\"Wait until we have strawberries over escargot for dessert\" she replied, not missing a beat.\n\nTaking my hand, a mischievous glint appeared in those up swept eyes. \"Maybe later we'll have a wonderful Estonian and American layer cake- if you eat all your dinner.\"We laughed as shadows overtook the buildings and the streetlights started coming to life.\n\nThe dinner proved to be good solid sustenance and we left with full bellies and smiling faces. Galena helped me to understand the bill and how much to tip. During the course of our repast I learned that she wanted to save up and buy a motor trawler, much to my surprise. Her father had fished until the Soviet authorities had confiscated his boat. Galena loved the sea and it was her goal to captain her own rig. I had visions of her at the helm during a treacherous storm in the North Sea. It seemed suitably romantic to me as well as reminding me of my uncle's words concerning the equality of women. I was in the company of an adventurous soul, especially for 1971.\n\nWe repaired to her den of inequity. As we marched along, I watched her magnificent hips swinging in time with her arms, breasts rising and falling with her long strides. Such a beauty and she was mine- at least tonight.\n\nIII Feathering the Nest\n\nA breeze carried the sound of a ship's lonesome horn through the open window of Galena's rented walk up. She'd placed some candles on a table, which she lit while I drew the curtains closed. A thin light still came from under the door and I heard what might have been Moroccan music emanating from somewhere in the building. \n\n\"Do you thirst\" she asked over her shoulder as she brought a glass from the sink in the corner. \n\n\"Only for you\" I replied. \n\nA chuckle, then, \"This can be accomplished, my new friend and student.\" A hint to cover expenses, dutifully met and guilders disappeared into a jean pocket. \"Now, I have a little treat\" She pulled out another water glass, a paperclip and a foil wrapped object the size of a pencil eraser. \"This is from Lebanon, another country I hope to visit someday. But for now...\" Unwrapping the foil, she produced a small medium dark sticky ball which she impaled on the bent paperclip. \"Matches, please\" she intoned and striking one, held it to the tarry substance. When it began to burn, she blew the fire out and covered it with the overturned glass. The glass filled with smoke. \"Now, do as I do my student.\" She tipped one edge of the glass up and sucked in the smoke, then reset it. \"Wait until it fills anew, then you do as I did. Take it in slow, so you do not choke.\" \n\nI complied as best I could with her directions as a sickly sweet aroma wafted up from the scarred table. Galena exhaled, \"We do this once more, yes, and it will be finished.\"\n\n\"Is this hashish?\" I asked, staring curiously at the glass.\n\n\"Yes. You will like it in only a few moments. It makes love play more, ah, intense one might say.\" She grappled for more words. \"It expands my nerves and when I am with a man I wish to enjoy, the rewards are, can I say, more plentiful.\" She tipped the glass again, deftly sucking in the imprisoned smoke. I followed, finishing what was left. \"If you will close the window I will put on my, uh, instructors' gown.\" A wink and a grin, her merriment barely contained. \n\nI got up,closed the window and gazed out. The street tonight was busier than last, with a lot more men perusing the girls in the lower windows. Now I could hear the Moroccan music more clearly. In fact it seemed to come from the other side of the wall. I started thinking about Arabian nights, and then Barbara Eden in the 'I Dream of Jeanie' show and belly dancers, silk tents and scimitars, Ali Baba and old Disney cartoons in Technicolor. I realized the window stool was painted a pleasing shade of aqua. That's when I discovered my mind was shifting to a different plane. The music I was hearing seemed more insistent, throbbing bongos and balalaikas.\n\nTurning towards the room, it seemed dimmer, lit by the two fluttering candles. In front of the bedstead stood Galena.\n\nShe wore a long translucent gown held together in the front by a simple sash. She stood in sequined slippers and her flowing hair was pinned up in loose gathers only to cascade like auburn waterfalls over her shoulders. In the fading light her eyes seemed almost spectral and mystic, her pupils reflecting the tiny flames of the candles. Wordlessly, she held out her hand. Telepathically understood, we would be communicating without anymore language barriers.\n\nIV Intimate Galena\n\nShe swayed gently to the hidden music as she removed my clothing. I stood before her bare chested as her long fingers traced my muscles and tendons. Warm caressing palms against my nipples, squeezing my biceps, she seemed lost in her own time of discovery. Her pointed tongue licked the corner of her mouth and her luminous eyes looked deep into mine as she undid my jeans, gently pulling the zipper down, anticipating further discovery. I stood mute, hands at my side watchful as my houri took a deep breath and released my tumescence. \"Ahhh\" she breathed, nodding. Her other hand drew my head down to her lips, feathering my cheek with her fingertips as her tongue sought and gained entrance to mine.\n\nOf their own accord, my hands went to her waist, the ruffled silk warm with the promise of womanhood beneath. She breathed deep, pushing down on my waistband and I complying, became naked at last. The music intensified and we swayed in time tightly and as one, my maleness between us, encased in her stomach's hollow. Wandering hands pulled my loins tightly to her, kneading my buttocks. I found her swaying hips soft, firmness just below, flexing, releasing, pushing into me yet still we kissed more urgently. Pulling away, I released her sash, parting the gown, her flushed skin hot on my own.\n\nA true moment suspended in time, the cleft note wherein the spark reigns supreme, before the flame ignites, that split second before lightning rends a darkened sky and a moonlit torrent enters Stygian depths. Eternity became reality, of souls united, the mortal casings became no longer impediments but extensions of two minds collective, intertwining and blatantly expressing human desires with the illicit promise of Eros' lust impending. I traveled in the kiss. I lost myself into the glories of her embrace. There was no future, just an unstoppable now. Dimly I was aware of my escalating need, but also of the treasure held in my arms, her questing mouth in mine, the pounding in my temples. Behold, my framed mental remembrance of Galena, a portrait even to be carried from one lifetime to the next, a gift of the Goddesses.\n\nI decided I liked hash a lot.\n\nWe breathed to each other, the kiss broken. \"I am lost in you Galena.\"\n\nAnswering smiled whisper, \"You are stoned. Sit before you fall.\" The low cot was against the back of my calves. I sat as Galena towered over me. She leaned forward, her gown falling forward framing my shoulders. Within were her magnificent breasts, the unbound fruit of her womanhood only inches from my eyes, the nipples flushed and dark and past the pouting belly, the long sable fur encompassing her sex. As my hands came up to caress, she took each in turn, binding them behind me with her gown's sash. I looked up at her questioningly. Her silent reply- a challenging smile below dancing eyes.Her hands to my shoulders, she shifted a breast to my lips. \n\nI licked the slight saltiness from her as the aureole ridged and hardened and her nipple distended. I took more in my mouth, then closing onto her nipple, watching her face above. Her hand went behind my head, pulling me tighter as I began to suck her engorged nubbin until it stood proud and firm in my mouth. Galena sighed and nodded, her fingers combing through my hair. She pushed my head into her heavy orb, then released. She made as if to bite. \"Like a grape\" she whispered. I nibbled and sucked, nibbled and sucked, then licked her expanse before resuming anew. Her hand fled my neck, still holding my shoulder with the other and quested for my maleness, rigid against my belly. With fingertips, she drew little circles on the tip then barely squeezing. I felt my sac contract and slickness issued unbidden, only to be rubbed, glistening the end. \n\nShifting, her other breast replaced the first for my ministrations, the nipple already hard and needful. Galena's long fingers continued their tarantella, exciting my swollen need, making it difficult to concentrate on my 'lesson'. Her fingers slid to the back of my cocks head to the sensitive spot, slicking it with my own contributions and then sliding down the shaft, closing gently as she reached the base, pausing, pulling up, and allowing the skin to slide past her moistened palm on the journey's return to the tip. This she did slowly, languidly, almost carelessly. Then bunching her fingers around the head, she squeezed anew with a gentle tug, urging out still more clear droplets.\n\nIt made me delirious. My hips began to jerk as her torture continued. It was never enough to build to release. No matter how I shoved or moaned, her caress continued. If my attention to her breasts wandered, so too would her hand, only to return when I resumed. I was beginning to ache when she reached to my scrotum, squeezed, and leaving several fingers there, jacked my base firmly and rapidly. My surprise was absolute, as if a bright light had come on. My knees flexed, my belly tingled as my orgasm suddenly became imminent.\n\nGalena's hands left me and standing, she shrugged off her gown, tossing it on the pillow. I moaned, wishing to grasp myself and finish what she'd begun. I needed perhaps one more stoke for release! She shifted and placing one foot up on the cot, brought me face to face with the lush soft fur of her pudenda, the exotic aroma of feminine arousal wafting into my nostrils. She tipped my head back, rubbing her silkiness across my face back and forth. Her other hand cupped her swollen breast, tightly pinching her nipple, head thrown back, lost in her own world.\n\nShifting her hips forward forced my lips to her crevice, the labia slack and open, where the pronounced inner lips hung glistening, her clit elongated. I took my first tentative lick, the salty tanginess my first taste of woman, her smell an inviting elixir to explore, kiss and worship. Gently I sucked in an inner lip, kissing, licking the folds and hearing her sigh above in a moment's contentment. I ran my tongue down the folds as she tilted her pelvis more, giving me unfettered access to her secrets until I arrived at her entrance. Without hesitation, I plunged my tongue into Galena's needful hole and felt contractions tightening around my searching licks in and out. My face grew wet with her need, yet I ignored her firm clit rising past its hood resting against my nose. Sucking in her lips together, I suckled back to the top of her furrow even as Galena tried to push my head back down. I wiped my face in her hairs and looked up at her face. Her eyes were narrowed, nostrils flared as she breathed.\n\nI could take no more bondage and loosed the sash from my hands. Grabbing her magnificent ass, I swung her down onto the bed, head to the pillow, knees akimbo, her glorious pussy open and exposed. Her clit, unattended stood out from her freshly sucked lips, her hole ringed in fresh droplets of need, a whitish cream oozing downwards. Leaning over sideways I brought my mouth just short of her rubbery stub and planted the lightest of kisses on its very end. Galena's hips jerked one, then again. She moaned something I couldn't understand, pushing my head hard against her, grinding. ",
        "I gently kissed just the tip again, then a tiny lick. Her thighs quivered, lifting her from the bed. I licked again, more firmly. She snapped her hips off the bed, urging me on. Drawing her whole clit into my mouth, I compressed my lips at its base and tongued it bottom to top. Galena's legs snapped closed around my head and she pushed insistently on the back of my head. I pried her back open, feeling her trembling as I did so. Raising and looking down at her I beheld my beauty gasping for breath, face flushed, her hands squeezing her swollen orbs, fingers pulling her nipples and her ass hunching upwards. I started to speak but she shushed me as she arose, pushing me down on the bed. Rapidly, she straddled me, grasping my hardness and rubbing it up and down her cleft. I grabbed her tits as they swung in time with the wanton jerks of her hips, savoring the heft, feeling her nipples poking out between my fingers. Suddenly her jerking ceased and I watched her lower herself onto my cock. I felt just my head slip readily into her entrance, then she drew away, only to repeat again, this time just an inch deeper. I could feel the heat, then a squeezing sensation as she tightened around me. Again she withdrew, leaving only the tip inside her. Galena reached between us and began steadily pulling on her proud clit, jilling it until she stiffened. Abandoning that move, she rapidly jacked my shaft. I could feel fluids cascading down my shaft which she collected and returned to her earlier self abuse, this time strumming her folds up and down, desperately rubbing in long rough circles, forcing her clit to slap against my shaft over and over. It made a wet squishy sound as she did this along with a rhythmic slapping sound. \n\nThe sheer eroticism was overwhelming. I gazed up at her face. Galena was intent on her hand, solely focused on the pure pleasure emanating from her steaming soaking cleft, one spasm begetting the next. As her regimen continued, her pussy swallowed more and more of my cock, flexing her jism onto my thighs even as she slowly filled herself with me. Her control was total. I couldn't move either way in my position and was helpless save to watch and ache for release. At last, all of me was encumbered and I could feel from inside her ministrations from without. She paused, breathing deeply, chest heaving. She stretched her arms above her head, and then reached for the water glass, taking a draught then offering to me. Again she said something I couldn't understand. \"What?\" She caught her breath. \"I like to wait. It makes it much stronger.\" She regarded me. \"I sometimes will do this all night without letting the end come. When finally I cannot stop, it goes on and on until I'm screaming. I did this as a girl and still do. It keeps me sane. But I must have privacy, which is, ah, rare.\" She knitted an eyebrow. \"Have you ever tried doing such a thing?\"\n\nI nodded. \"I don't think I could last hours like what you describe. I think I would explode.\"\n\n\"Does it hurt if you wait too long?\"\n\n\"Yes. My balls begin to hurt and it is painful for them to be moved while I do the act.\"\n\n\"That I understand. Do they hurt now?\"\n\n\"No. I find that concentrating on you makes me less mindful of my own need. It is a good discovery!\"\n\nShe squeezed me, I twitched back and we smiled into each other's eyes. Galena licked her lips. \"Perhaps you might like to continue, my student. We might give mouth loving to each at the same time. Would you like that?\" \n\n\"I wouldn't last long. I'm way too aroused.\"\n\n\"Me too. But it would be fun to try.\" She thought for a second. \"Let us warn each other if the end comes near and decide from there what to do. I'm not ready to end. You are being a very good learner.\" She laughed. \"At the end I will scream as quietly as I can.\" She dismounted, my cock slapping wetly on my belly. She pulled her jeans over and removed another foil covered ball, her nakedness shimmering in the candle light. \"Oops!\" She exclaimed and handing me the ball, wiped at our fluids running down her thigh and pressing her hand to her matted pussy. She stood above me for a moment, running her fingers up and down her cleft. Breaking her reverie, she went digging for a cloth and I unwrapped the hash. \n\nV Our Sexual Confessions\n\nWe smoked again, listening to the music next door and then sat cross legged on the cot facing each other. We talked and fondled, her jacking me slowly while I fingered her hole or gently pulled her still swollen clit. \"This is so nice\" she said dreamily. \"If I jerked you faster, could you keep from climax?\"\n\nI shook my head. \"It would be too much.\"\n\n\"Ha. If you rubbed the spot inside me, I would blow in your hand. I remember the day I found it. It was by surprise. I was playing and watching TV and my brother was upstairs. My legs were drawn up on the couch and my pajama bottoms were around my ankles. I put two fingers in me as I played with my other hand. I found a swollen spot and rubbed it while I pulled on my clitoris and without warning I arrived. My wetness sprayed out and I came before I could stop. I had been teasing myself for a long time so the feeling was more than I could contain. I made noise. I couldn't help it! My brother stood in the doorway and watched the ending.\"\n\n\"What did he do?\"\n\n\"He went back upstairs and never spoke of it. It was the best thing to do.\" She gave a long slow tug, making me jump. \"What of you? Did you ever get caught?\"\n\n\"In a certain way, yes, I did. Regina, our housekeeper found me out. When I had a wet dream she noticed it in the sheets. She was very forthright about it and taught me about masturbation. \n\n\"Oooh. Tell me about it!\"\n\nIt was hard to gather my thoughts. Galena was gently scratching my balls with one hand and firmly jacking me with her other. Her breasts jiggled with the motion and it was exciting me, especially as the hash kicked in again. I put a finger inside her and found her spot while I flicked her clit. Her eyes rolled back and she stiffened.\n\n\"Well Regina asked me what had happened and I told her about waking up from a dream about a girl at school. For some reason in the dream we were in the gymnasium on a mat and we were wrestling. We both wore T-shirts and shorts and I had my hands up inside her shorts as we rolled around. It seemed so real and I guess it made me release. Regina understood and said those things were normal for a young man, but did I know how to make it happen when I wanted to. I told her that I'd made it hard of course and played with it but nothing really happened. She had me lay on my bed with my pants down. She talked to me softly while I got it hard and told me how to caress myself while I thought about erotic things. That worked well and I came as she whispered to me. She never touched me, just encouraged me and watched. She liked to watch, even after I got used to doing it. She'd leave a cloth under my pillow as a hint.\"\n\n\"Oooh! Stop for a moment please. It is too much.\" Galena's hips were shaking, trying desperately to contain herself.\"That is so sexy. I would have been all over you. Watching you touch yourself and climax- she must have a lot of discipline.\"\n\nI nodded.\"This spring I came into the guest room when she was putting on her uniform. She was just wearing her slip and had her back to me. Regina is middle aged and thick in the middle. I slipped my arms around her from behind and held her breasts. She didn't fight me off. She held onto the closet rod and let me run my hands up and down her. I felt her nipples get hard and she started rubbing her butt against me. Then she stopped me and sent me from the room. Part of her was willing but another part of her knew it wouldn't be right. Then two weeks later, my uncle decided to send me here. She might have said something to him.\"\n\n\"Ah, well thanks to Regina then.\" Galena unfolded from the bed. \"Let us do this. Lay down and I will lay over you.\" She straddled my head with her long legs, easing down until all I could see was her swollen needful pussy. I felt my cock engulfed, her long hair on my thighs. Her aroma filled my nostrils and I took her clit into my mouth, licking the tip gently while I sucked. In the near silence I could hear the wet sounds we made pleasuring each other. Galena dug her hands under my butt, taking all of me down her throat, teeth barely scraping me on the back of my shaft. \n\nMy hands were free to wander. I held her heavy free swaying breasts, pulling her nipples, then gliding back to that round meaty ass, squeezing it and marveling at the firmness of her globes. I licked her furrow with the flat of my tongue, making her clitoris spring back and forth as her entrance foamed with desire. She increased her speed, sucking me with abandon, seemingly forgoing her earlier cautions. It was so hard not to give in to that expert mouth. The challenge was becoming unsustainable. My sac was tightly drawn up and my nerve endings were on fire. My tingly warnings were in full song and I felt my fluids rising to my cocks head. I resolved to think of nothing other than suckling her puss, drawing her ass down hard against my head, my nose in her hole, gasping for breath. Galena began shaking and moaning. She replaced her mouth with her hand, rapidly jacking me while rapidly licking just my head. Suddenly, she leaped off me, only to collapse alongside me on the narrow cot.\n\nHer whole body was trembling from need. So was mine. Face flushed, she kissed me deeply, our tongues intertwining, sucking, breath puffing from our nostrils. We moved to face each other and she pulled my shaft down, putting it tightly in her cleft.\"Don't move\" she moaned. \"This is the tease. One hunch and I'll spend, I know it. It's right there and I want it so bad, oh so bad. You are a good boy, so big and hard and I want to put it in and be lovers, but for more than one move up and down. I can't do that right now, no, no, too close!\" Her hand ran up and down my back, tracing the muscles, then kneading my buttocks, resuming our kiss.\n\nWhen I could trust myself to speak, I broke the kiss.\"I am at the peak too. The way you sucked me made lose control. Two more seconds and I would have filled your mouth.\"\n\n\"I know and I would have filled yours too, maybe drowned you, I'm so wet.\" She laughed shakily. \"Poor Veronika, I did drown her one night.\"\n\n\"You two are lovers?\"\n\n\"Not by meaning so, just by my necessity I think. We live with her grandmother and have to share a bed, which is not a private thing at all.\" Galena paused, pushing me onto my back. She bellied onto me and sank back, guiding me into her sopping maw, giving me a squeeze once I was fully inside. \"We had returned home from an evening of drinking and a little hash and went to bed. I couldn't sleep for thinking of sex, but Veronika slept almost at once. I decided that maybe a little something wouldn't be noticed and started touching myself. I hadn't had any lovers in a while and my body reacted, surprising me. I jerked a few times. I couldn't help it. Veronika woke up and asked me what was wrong. I told her I needed to get off and I was sorry I woke her. She laughed and asked if I needed help. I lay there surprised and then in the darkness she started sucking my breasts and kissing my nipples. After a moment her hand went down there and she started rubbing my clit while I fingered myself. I just about died right then, it was so good! She liked it too. I felt her and she was wet. She said she got aroused from me being aroused. She went down on me, her little butt waving in the air. I rubbed her tiny thing until she came and that made me come so hard that I drenched the poor girl. I couldn't have teased that night. I was too needful. Veronika told me that is what friends are for.\" She undulated her ass slowly, her soft wet fur rubbing across my belly. \n\nI pushed more deeply inside, feeling her clench as I did so.\n\n\"Go slow. I want to feel all of you going in and out of me.\" Saying this Galena swayed from side to side.\n\nTogether, our pelvises met, only to part and begin anew. As our erotic dance continued, she got her knees under her and rose to a sitting position atop me. We held hands as she shuffled her hips and gazed down at me, a smile on her lips. As the minutes ticked by, she subtly increased our speed, all the while watching me. The color rose in her face and her tits swung in circles as her belly worked rhythmically. Releasing her hands, I grabbed her breasts and started pounding up into her. She matched my urgency, recognizing that at long last the teasing was over. Together our copulation became as one. We lost ourselves in eachother's eyes, the wet slap of our genitals confirming man's oldest rites, a ritual beyond time itself. Mirrored were our desires, joining to climb the hill, gasping as the end drew into sight, a reckoning with heaven. I felt her beginnings and she knew I did. The first pinging from her thrashing furrow betrayed her although she kept her face calm. Her pussy clamped down harder, then harder still and involuntarily she gasped, hair flying about her shoulders. Her nipples spiked, proud and swollen and she began to thrash her ass with wild abandon around my thrusting pole. \n\nMy sanity was betrayed as my first spurt began its travels. She felt it and cried out, deserting her self control. The storm was upon me now, unstoppable, wave after wave. Each gush was relief, my contractions matching hers, hearing her cries as if from far, far away and my own moans a joining chorus. Her ass swung a furious dance without let up, wringing me, torturing herself as my cock strangled in her powerful spasms, one overtaking the next. She reached down, molding her lips around me, roughly pushing her clit against my shaft only to come again and again. I watched her travails as if from a great distance, my orgasm exhausted, falling back on the bed until finally Galena's climax expired.\n\nKnees drawn up to her chest, I felt the thud of her heart as she lay atop me, the sobbing struggle as she regained her breath. We could ask no more from one another that night. It was a major concert in a rented room. We propped up together, sharing the pillow and listened to the music and the night life passing by outside the window. We napped briefly and eventually arose and dressed. Downstairs, the streetlights were haloed in the mist as we unlocked our bikes from the rack on the bridge. It was with a kiss and long hug that we set off on our journeys home to a rest well earned.\n\nVI Postscripts and a Camera\n\nThis memoir completed, I sat back from my desk, stretched, looking around my cluttered office. My gaze fell upon a corner shelf holding an old black and tan Nikon case. Unused in years, since the advent of digital photography, this dusty relic was a link to my most special time as a young adult. It was Veronika, a natural shutterbug, who helped me learn to use it, explaining f-stops and close-ups, which lenses to select and so on. And safely sequestered in a hidden place are the pictures and slides developed in the uncensored Holland of my summer's adventure. The slides I could show a parent or friend, my tourist takes of Amsterdam, the Zuider Zee, windmills- all the usual things one expects to see.\n\nThe pictures were a slightly different matter.\n\nMy coffee pot yielded my second cup as I got down the shoebox. Removing the cover instantly eradicated forty years, the vibrant colors leaping out, those of summer in a foreign land and girls just entering womanhood in all their glory and flattering photos of a youth wearing a Red Sox hat.\n\nThere was the essence captured of Galena, docile as a mare being mounted from behind as she held to a tree just off a graveled towpath, her shorts and panties bunched at her shoes. Veronika caught the lustful look of concentration on my face, Galena looking back over her shoulder at me. The three of us had biked into the country one Sunday, a simple picnic in our baskets. The shot I took of both girls topless, standing at the gate of a flower farm, Veronika standing on a stump to be the same height as Galena, both grinning into the sun.\n\nThen another time, caught in the rain, Galena's peasant blouse rendered see through in the downpour, her round orbs in full evidence on a train platform, a waiting male passenger gawking at the splendid view.\n\nA series from our night at a floating motel, Galena wearing me out, then with my wrists tied to the bedstead, Veronika taking her turn, caught at the moment of climax, face turned up like an angel's, an instant's heaven.\n\nOne after another, the pictorial chronicle shuffled through my hands, averring and refreshing a long ago simpler time of innocence, insouciance and youthful impudence. \n\nI don't look through that box very often. I regret not knowing then that I'd met a soul mate, even if she was an illegal refugee from behind the Iron Curtain. I regret not knowing then that Galena was my benchmark lover, against whom all subsequent lovers would be found wanting one way or another. I did know I couldn't have taken her to America, her being stateless, knowing that even my uncle didn't have enough pull to square that deal.\n\nPieter, his fianc\u00e9 and Galena took me to the airport on that warm mid July day. It was emotional. I said my goodbyes in Dutch and Pieter and his betrothed left the gate, leaving Galena and me to silently hug and make no promises. It was the longest, saddest fifty steps to the brand new KLM 747 and fly off in a roar back to a smoky, dirty USA, the land of want and war, needless morals and laws with religious figures wearing pointy hats and a criminal for a President.\n\nWe wrote to each other for years in scratch Italian, Galena and me. I went on to school and made my uncle proud and stayed out of the war. Galena finally got on working a cruise ship, eventually marrying one of the ship's officers. We lost touch then, but I doubt she ever got her trawler. Veronika became a virologist and eventually moved to Switzerland and the last I heard was working for a pharmaceutical firm.\n\nIt is said that souls reunite on the other side, regardless of time differentials because we never send our entire soul to this earth. Also, it is said we select a time to return to learn more life lessons with a group of fellow conspirators. It gives me succor and peace during these deeply troubled times to know there's a chance, just a chance to find a heaven as I found in Amsterdam, 1971."
    ],
    "authorname": "puppop",
    "tags": [
        "lesbian first time",
        "female masturbation",
        "male masturbation",
        "bisexual female",
        "blowjob",
        "cunnilingus",
        "femdom",
        "prostitution",
        "pussy eating",
        "outside sex"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/visiting-the-girls-of-amsterdam-ch-02"
}