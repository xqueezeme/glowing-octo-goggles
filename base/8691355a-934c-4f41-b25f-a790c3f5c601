{
    "title": "My Only Talent Ch. 31",
    "pages": [
        "Note: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\n*****\n\nCandy Caning, Professor Paining, and Brain Draining\n\nI shut the dorm room door, but did not lock it. Perhaps I really am becoming a wild and crazy guy during my college days. When I turned to look back at Suzanne, she was holding her new turquoise blue panties up in front of her. They were damp and fragrant. She was too, and she had nothing else on. \n\nShe was certainly wild right now. Feeling the sap rising, in season, hot to trot, or whatever catch phrase you wanted to use, she was ready. She was ready for me, and given her current mood she was probably also ready for Freddy, and for Tom, Dick, and Harry, too. Don't think about that right now, Robbie. Just channel your angst right between her thighs, and a few other places. I remembered that the best way to please her was just to let myself go wild, and please myself, which always seemed to work best for Suzanne. I used my left hand to grab the back of her neck and my right hand to grab her ass, slamming her against me. Her hips involuntarily pushed forward toward me and her knees moved wider apart as she did. So fine.\n\nI pushed her down to her knees, holding both her hands above her head. \"Suck me, slut! Use your teeth to pull down my zipper.\"\n\nShe did her best to take my cock in her mouth through my jeans, then she bit it, and not gently. The jeans prevented a really painful nip. She stopped, pulled her head back, and looked up at me defiantly. Then she put her tongue up on her upper lip, waited until I did a double take, and then stuck her teeth out and rooted for my zipper tab. She took it between her teeth and pulled it down all the way to the bottom. My dick was fully erect now, and it popped through the zipper opening in my pants, but still inside my underwear, creating a light blue cylinder sticking out the front of my dark blue jeans. \n\nI realized that her highly anticipated 'porn star for a night' gig had been prematurely interrupted by Gunter's little problem just as she was really getting into her role, and now I was her only available co-star. \"I've never sucked a blue dick before,\" she gasped. \"A girl likes to have a few new and exciting experiences, you know!\"\n\nShe engulfed my cock, and soon the blue cylinder of underwear fabric was soaked in her saliva, and I felt the heat of her mouth through the cloth. Then she pulled back and gave me another amazing porn star look, her eyes wide and her nostrils flaring. \"I've never sucked an Austrian dick, either, although I did get to lick one once.\"\n\nShe used her teeth again and popped me out of the opening in the underwear, and the light blue fabric, under tension from being pulled through the opening, was now tight around the base of my cock like a cock ring in one of my roommate Kevin's favorite weird German fetish videos. It was certainly not preventing blood from flowing in, as I had what was for me a very impressive erection. But my poor penis was wet and suffering from evaporative cooling now that is was exposed to the air. Not for long. Her eyes got big, and then she got a truly feral look on her face and sucked me in all the way to the hilt, with her eyes glued to mine.\n\nShe lunged forward and improved her 'bite' a little bit and got even more of me in her mouth, and then as I looked at her in a state of almost shock, she arched her eyebrows with smiling eyes and used her tongue with great flourish on the underside of my dick. No man could possibly resist this, but I intended to try. She was clearly planning to get me off just as quickly as she could, a tour de force demonstration of her awesome slut power. I was determined to hold out as long as I could.\n\nShe once again swallowed me whole, nuzzling her chin against my balls and sucking for all she was worth. Then she pulled back and licked the entire surface of my cock teasingly, her tongue flitting like a hummingbird. I was just beginning to enjoy that when she sucked me all the way in again and sucked so hard I was afraid of a 'cock hickey' if there was such a thing. I have heard of 'contrast therapy' but this was a whole 'nother rub, so to speak.\n\nSuddenly she took one of my balls in her mouth and sucked and tongued it avidly. It didn't drive me toward orgasm like the same motions would have if they were applied to the head of my cock, but it did drive me crazy, or crazier. Back to the hummingbird flit, then a full depth plunge, then the other testicle. God she was good at this. How could I resist?\n\nDistract yourself Robbie. Multiplication tables, trig identities, sequentially fill some 'spdf' orbitals with electrons, anything! It was working a little bit. I smiled, perhaps a little too smugly.\n\nShe saw my expression, and upped the ante, taking her mouth off of me for just a second. She shouted \"Come for me Robbie. I want it now!\" She then did a series of in and out total immersions, using her tongue like wet carpet beater on the bottom of my cock as it plunged in and out of her very pretty mouth.\n\nThen she sat on my ankles, strongly rubbing her now gushing pussy up and down against the bottom of my shins as if she was humping my face on her couch. I felt the squishy wetness on my legs, as the smell of the perfect Pliskin Pussy wafted up to my nose and wormed its way directly into my brain. What else could I do to resist?\n\nI tried the recalling the equations of wave motion from physics class, and suddenly realized I was plugging things in to solve for the amplitude and resonant frequency of our leg-pussy-leg oscillations. What was the coefficient of friction between my wet jeans and her pussy lips, given the presence of that incredible Pliskin Pussy juice soaking my jeans and running down to my feet? Obviously the coefficient of static friction was not applicable here, but what was mu-sub-k for pussy juice lubricated skin and denim? That sure as hell wasn't the in the CRC tables. This wasn't helping. \n\n\"I love you Robbie. I want your come. Please now!\"\n\nThat just wasn't fair. \n\nI resorted to the only tactic a novice Master has when a sub threatens to become a sexual Leviathan, taking my cue straight from Millie's summary of modern political tactics: re-frame the narrative. I twisted Suzanne's arms up behind her neck and pulled her mouth closer to my crotch. \"You better swallow every drop, slut, or you are in big trouble!\" I let the floodgates loose, and pushed my hips forward toward her. \n\nShe gave me a look that said 'You have got to be kidding' and sucked me so dry I was sure there wasn't a single sperm cell left in my balls, all the while making wet, slurpy yum-yum noises that made Strelsa's sounds for G\u00fcnter seem lukewarm. \n\nBut then I lost my heart and soul to her completely when she smacked her lips and said, with a look of genuine gratitude on her face and sweetness in her tone, \"I just love it when you come in my mouth, Robbie!\" Who could resist her? Not me.\n\nShe then took me in her mouth again and did her little low excursion suck trick, keeping me hard. My body shook with devotion to this woman. My Suzie receiver reached out and locked onto her, seeking to learn everything she wanted, so I could give it to her. \n\nIt was a new kind of connection, one I had never achieved with her before. Her normal 'main Suzie' was broadcasting strongly that she was about to be fucked hard like she wanted it, but her fantasy carrier and historical 'black box recorder' were all linked in and open and obvious too, sort of like a 'multi-cast' or three screen linked simulcast. And some secrets were thus revealed.\n\n*******\n\nDwight was in a quandary. He had to play to the camera, to whoever might be watching from HQ, and still try to solve the problem. He decided to act like the over enthusiastic corporate suck up, seeking favor with the CEO. From what he had learned so far about some of the members of the management team, the CEO should be very used to that. \n\n\"Dwight Dewitt, Sir, from the coding team. I just wanted to let you know that I have found a solution to the slow software response problem, and I am staying here tonight to install and test the fix so I can report that issue resolved at the product review meeting in the morning!\"\n\nThe CEO, the highly esteemed (at least in his own mind) Dr. William John Perch\u00e9pom\u00e9 ('Perch Uh Pom May'), and known to several as \"Professor Jack\", looked at Dwight as if he was a very inconvenient interruption to his plans for the evening, plus he really didn't seem to know what Dwight was talking about. \n\n\"I also wanted to tell you what a great honor it is to work with a scientist of your stature and a promising company like this one! I am going to do my best to contribute everything I can!\"\n\nThe older escort giggled. \"Boy you are some kind of geeky suck up, aren't you? I wish all my escorts would show that level of servility to their clients. Before you offer, you should know that Professor Jack here prefers female cocksuckers to male ones.\" She laughed again. \"Although his horizons have expanded quite a bit since he met me, and he might be willing to try something new.\"\n\nDwight decided to just stay silent and look confused, hoping the CEO would jump in. Sure enough, second only to hearing someone sing his praises, he loved hearing the sound of his own voice.\n\n\"Hold on a minute, Shaniqua my dear. This is business, and I am Leader. I do need to attend to my relaxation time to function at my usual incredibly high level, as you well know, but right now I have to make some time for my people.\"\n\nHe sat on the edge of his desk, and looked down his nose and over his glasses at Dwight. \"I tend to leave such minor details as software as an exercise for the reader, so to speak, so that my new management support team can learn its way and earn its pay. But I certainly understand and accept your devotion. \"\n\nEven Dwight had trouble keeping a straight face on that one. \n\n\"I'm sure you can report your issue through the appropriate channels, er, ah, Dwight, was it?\"\n\n\"Yes Sir!\"\n\n\"Then, if you will excuse us, we are going to continue with our little recreational musical interlude.\"\n\nShaniqua laughed again. \"Voneitra needs some throat work, and Professor Jack has graciously agreed to help her practice. Unless you want to stay and offer some suggestions on her technique, there little Dwighty Whitey?\"\n\nVoneitra was quite pretty, and if she was 18, she had only been so for a few weeks. She looked embarrassed.\n\n\"I'll close the door on my way out, Sir. Thank you again, Sir!\"\n\nDwight turned and pulled the door shut, just as Voneitra went to her knees. At least the door was closed now. But that was about all Dwight had accomplished. He needed to think this situation through. Roger Sherman would be expecting him at dinner at Buck's tomorrow evening, and he better have a plan by then. Otherwise Roger would develop a plan of his own, and that was sure to be ugly. Not only would Roger's plan be ineffective, but his report back to HQ would be constructed to reflect that they had developed it together, and any problems would be framed as due to Dwight's poor execution. Dwight's first step: do a little background research on Shaniqua.\n\n*******\n\nI was determined to tease Suzanne and then finally please her. But I realized that her Suzie signals were telling me that hard penetration was the only thing that would really please her right now. So I could really drive her crazy by first making her come every way but that.\n\nI put her up on the edge of the bed, centered her on my ESU logo blanket, and began to kiss her tenderly, slowly moving down from her lips to her chin, then her neck and shoulders, taking my time and enjoying her impatient squirming. She was building up quite a head of steam, and when she finally exploded it should be amazing. \n\nAt first she gloried in all the attention, spreading her legs wide as I grabbed her and pushed her thighs up off the bed and towards my face. But I just kissed her midriff, slowly trending down. I stopped and lingered at what would have been her panty line if she was still wearing any, as if there was some invisible barrier there that I could not go below. I kissed, licked, and then roughly sucked on her skin just above that line, making all sorts of loud and showy noises. She began to raise her knees up and try to push my head further down, and it was all I could do to match her strong legs with my arms and resist her. \n\nFinally she put both hands on my head and gave it a massive push while at the same time pulling her knees up until they were over her head, thus directing my head right to her snatch. I stopped resisting, and easily over shot her target, fastening my lips down on her inner thighs and kissing and sucking like a mad man. I could feel the titillation and frustration in her Suzie. I could see new images on her fantasy carrier, too. She was on her knees in front of three guys, one of them me, the other two appearing with just blurs for faces, alternating from cock to cock, avidly licking and sucking. Holding all three in her magical power, then making blazing eye contact and triumphantly swallowing everything they could give her. \n\nBut she was in the moment right now. She growled, low and gruff. \"Damn you Robbie. Eat me!\" Her pussy was now pumping its beguiling aroma into the room like one of those electrified air fresheners that plugs into a wall socket. \n\nI chuckled, hopefully loud enough for her to hear, and slowly began to move my lips slightly higher. I grabbed the insides of her knees and pushed them roughly apart, almost playing 'wishbone' with them, raising her hopes a little, and then settled back in on my slow progression up her thighs. \n\nI took my sweet time, literally counting out the minute I spent on each inch moving up her thighs, finally reaching her outer lips about the same time she grabbed two handfuls of my hair and tried to force my mouth onto her snatch again. One hundred slow licks on the left outer, 100 slow licks on the right outer, then butterfly flicks back and forth on the inner lips. Her Suzie signal dopplered like a fire engine going quickly by. Her fantasy carrier now portrayed her up on all fours on a linen table cloth on a big dining table, with one of the generic guys in her mouth, and the other in her pussy. They switched positions twice, and then I stepped up an entered her ass. Her Suzie carrier spiked up again. Now her fantasy foursome was on full display in her mind. She came and came, and shivered, and then each guy finished off one last time in her mouth, with me going last. \n\nI began to spread her inner lips by licking them from inside to outside, slowly opening them wider even as they became more engorged. She growled and gurgled way down in her throat. It was music to my ears. I licked the skin just inside her inner lips and teasingly tested pushing my tongue into her. I licked up and blew on her clit, not quite touching it. Just as she thought I was really about to address her clit properly, I moved by lips down a few inches and blew on her amazing little rosebud. \n\nI pushed her sharply back onto the little wall mounted bed that sported my ESU logo blanket, raising her hopes that the hard action was about to begin. But then I spread her legs and lay gently on top of her, and began to kiss her tenderly, slowly moving to her chin, and then her neck. She cooed for a few moments, and then became obviously impatient with my progress. \n\nI moved slowly towards her breasts, never quite touching them. Her pussy smell increased, and surged again when I finally took her nipples in my mouth. Her Suzie cried for hard sucking and biting, but I gave her tender hummingbird flicks like she had started with on my cock. She began to chug her breaths, and ensnared my legs with hers, trying to push me to her center. \n\n\"Damn you Robbie. Fuck me!\"\n\nOne did not need any special talent to understand that message. I flipped her over on her tummy, and pushed her head into the little wall mounted cushion. Her Suzie trumpeted. She thought she was about to be catchin' what I as pitchin' doggie style. But I fooled her one last time, and fastened my lips on her pretty little asshole, flicking but not penetrating. It drove her wild. My plan was working. \n\nI lightly flicked her sweet little butt, pushing in just a little more about every tenth flick. She soon recognized my pattern and pushed back against me with all her might, trying to urge my tongue deeper. After about ten more such thrusts and parries, I pushed up on my elbows and used my hands to open up her sweet little cheeks and plunged my tongue into her ass as far as I could.\n\n\"Yes, oh fuck yes!\"\n\nJust as she was really beginning to enjoy that, I pulled myself back upright on my knees, and pushed my now John Henry class erection all the way into her pussy. Damn that's good. \n\nShe growled, deep and throaty, her tone almost inhuman. I deliberately paused between my thrusts, counting to five before launching myself as hard and deep as I could back into her. She broke that code very quickly too, and on my third thrust she reached back and grabbed me behind the knees, so that by the time I was ready for thrust number four she used her hands to pull me deeper into her. It sure is nice to be wanted.\n\nI lost count of my thrusts, as her Suzie soared and just I timed my thrusts to pump her signal. I was rewarded with a grunt and a sneeze. The cutest little sneeze in the world. I paused for just a beat, and then started in on her again. Soon another cute sneeze and a gush of juice. There is something about this dorm room that really worked for her. There was something about her that really worked for me.\n\nHave to keep them guessing, Robbie. Just after her third sneeze, I suddenly shifted my cock to her ass, pushing up with my legs to get further above her and get even more penetration. She was so flexible and so turned on that I could have tied her legs in a knot and she wouldn't have complained as long as I kept fucking her. She didn't miss a beat, grabbing the backs of my thighs a little higher up and urging me on again. Another cute sneeze ensued. \n\nI pushed against her buttocks with the front of my thighs and moved her body further toward the wall, so that her face was now above the cushion and rammed right into my little bulletin board. I was a lizard now, fucking on automatic out on that rock in the sun. She came again, really hard, drawing her breath in as if she was going to sneeze, and then screaming instead. This was just about as much fun as I had ever had. \n\n\"I am going to pull out of your dirty little ass and come in your little slut mouth, so you better make it good for me!\" \n\nThree more deep thrusts were met with a breathy \"Please\" so I assumed she was on board with my plan. Not that it mattered one whit. I pulled out, planning to grab her head and spin her around toward me, but she spun even faster, reached for my ass with both hands, and engulfed my cock. She squeezed my butt checks and pulled me towards her. She took control and I lost it. \n\nShe smiled up at me, riveting me with her beautiful brown-eyed gaze and doing very showy things with her lips. I was done for. \n\nWhen she had it all, she smacked her lips. \"You're a pretty hot little fuck, Robbie!\" Damn it, she got me this time. \n\nWe lay back on the little bunk. I was still laboring to catch my breath when the door slowly opened and Lou Baby walked in, followed immediately by Kevin, who had held the door open for her in an uncharacteristically gentlemanly fashion. I instinctively reached over for the covers to pull them over us, but Suzanne held them tight against the cushion, leaving us (especially her) brazenly uncovered. \n\nLou took one look at us and then sniffed the air, a very funny expression on her face. \"I guess I needn't ask what we missed!\" She then fixed her eyes on Suzanne and left them there. ",
        "Suzanne, for her part, arched her back, pushing her still very erect nipples up and spreading her legs slightly, totally aware of Lou's gaze on her. \"You're looking at what you've been missing, aren't you, Lou Baby?\"\n\nLou turned bright red, which was not easy given her dark complexion and even darker tan. Kevin was staring just as obviously, and owing to his much lesser tan, he looked even redder. Finally, Kevin said, \"We'll go down to the lounge for five minutes to let you get dressed, then we'll be back.\" \n\n\"Tell Joisey Al hi for me!\" Suzanne crooned. \n\n*******\n\nMonday morning, I threw myself back into my workouts and classwork, happy to not think too much about our latest 'swap fest' at Strelsa and G\u00fcnter's place, even though it was mercifully and very prematurely terminated, thanks, I was sure, to my mutant antenna array. Tough luck buddy. Heh, heh. My weekdays were becoming highly routine, and I was embracing it like a security blanket. The academic work was voluminous, so I was following my father's work plan religiously, and still just barely keeping up with the classwork. \n\nSuzanne was apparently having back channel negotiations with Strelsa about next Sunday, but she wouldn't talk about it. She also was not having much success in her talks with Big Liz and Little Marilyn concerning recruiting Ralph as another big and 'trusted cock'. When I asked her about it she would mutter and dissemble, simply saying she was 'working on it.' It seemed to me more like it was working on her.\n\nSaskia's robotic training and conditioning routines were settling in for me, and my responses were becoming automatic. Rather than a number of reps, the new plan was to go for a certain 'burn' from fatigue, then do a few more, and then the biofeedback tone would sound in my ear, telling me that the robotics thought I had fatigued the muscles enough to break down the right number of fibers, and to rest before the next set. My muscle memory and kinesthetic sense was beginning to tell me when I had reached the maximum effect just before the little beep in my ear. Given my motivation from Lara and Suzanne's reactions to my newly improved chest, not to mention wanting to look as good as or better than G\u00fcnter, I was trying to push it a few beats past the beep every time. \n\nThe scheduling for the amazing waterskiing Candy was going much better: she was committed to this coming (I hoped) weekend's Friday and Saturday nights, and we all planned to accelerate and compress her training and make those to be her last sessions, since Spring Break was looming close. None of us wanted to postpone or otherwise modify the schedule with Nora, since we had all been looking forward to it for literally months. I would get the first three days of Spring Break to take her to the Alamo and a tour of San Antonio and environs, followed by a three day girls only 'pussy party' at Lara's place. They had absolutely refused my request for streaming video coverage of this little extravaganza, so I was planning a quick up and back car trip back to Prosperous to visit Mom and Dad during those three days while they drove each other wild. At least I could enjoy driving my car. \n\nThe first couple of days before SXSW, before the official ESU Spring Break began, would provide the perfect opportunity for pranking Professor Red 'Rock' Tappert and more importantly, his hot wife Veronica. My plan for that was gelling wonderfully. \n\nThanks to some connections between my UDP brothers and the Texas Cowboys campus organization, we had a ranch all set for the stage upon which our little play would take place. We couldn't use Bevo or his actual ranch abode, but we found a suitable cattle ranch even closer to town, and with some very impressive Longhorns and facilities to provide \"B roll\" as Keven put it. I had enlisted him as production designer, using the Tapperts as the focal point as if they were the camera, and presenting them with the most exciting (for Veronica) and disturbing (for little Professor Prick) sights and sounds possible. He was really pissed that we were not going to shoot any video, and that he and Lou Baby would not be allowed to observe the festivities. There was a real un-gelded Longhorn bull standing stud there, which believe me is much more impressive (and dangerous) than our relatively docile and often highly medicated steer mascot. We had some real working cowboys there to carefully manage the bull, who hopefully would perform very impressively for the Tappert's benefit, before my UDP cast of brothers (with a few helpful females) preformed for Veronica's direct stimulation. \n\nAfter that, I could concentrate on enjoying the platinum tresses and numerous other charms of the lovely Miss Nora \"Elizabeth Eaton Square\" Upton all by myself for three days. I would probably never feel the same about San Antonio again. I would have to find ways to distract myself during my subsequent three day visit back home while the girls played with each other. \n\nWhen I entered the linguistics classroom Tuesday, a little earlier than usual, I spotted a seat next to Lynn Da and decided to chat her p a little before our afternoon meeting to finish our 'little debate' to be presented in class. \n\n\"Hey, Lynn Da! How are you?\"\n\n\"Okay, Robbie. What did you do over the weekend?\"\n\n\"Nothing remarkable.\" Nothing that I wanted to remark about, that was for sure. \"Did you have any dates this weekend?\"\n\n\"Well, my fianc\u00e9 co-taught my Sunday school class with me, so technically that's a date I guess. Friday I did my student teaching all day and helped with the church drop off day care at night. Saturday I worked on a Habitat house all day and did my regular evening tutoring sessions in East Austin. Have I told you about my fianc\u00e9?\"\n\nNo, but I had the distinct impression that she was about to.\n\n\"We have a very compatible life plan! Bob is an education major too - he wants to be a principal and then superintendent. He will graduate this semester, start his first teaching job, and then pick up a Master's in public policy while I finish my undergrad. His goal is to be the superintendent of one of the top ten largest school districts in the US. I am an elementary education major. I am going to get certified for STEM, art, and special ed classes, so I will be readily employable at any district as he gets promoted and moves around for new and better jobs.\"\n\nI couldn't help but ask. \"Are you two compatible in other ways?\"\n\nClass started so she didn't have to answer. The lecture was once again very thought provoking. Maybe getting the new guy for Linguistics was not so bad, after all. I would withhold judgement until after I saw his first exam. Note to self - see if Millie can get me any Bi Phi Linguistics old exam files, as UDT's inventory is pretty light in that area. As soon as class was dismissed, Lynn Da took off like a greyhound, albeit one with perfect pink skin and a much nicer figure. \n\n\"Gotta go meet my boy Bob! See you this afternoon at my dorm.\"\n\nHusky Varna fell into step with me as we exited the classroom. \"Shot you down too, huh buddy? Did she tell you all about her amazing fianc\u00e9?\"\n\n\"Yeah. More than I wanted to know.\"\n\n\"I figure when they tell you about their boyfriend they want to let you know you should never, ever try to ask them out again. It's a shame. I sure would have liked to spend some time learning about that perfect skin of hers. She said she found me attractive, but she was totally committed to her fianc\u00e9. When she then told me it was going to be at least two years before they got hitched, I got my hopes up for some fun time in the sack before she tied the knot. I hinted pretty strongly at that idea. Do you know what she said?\"\n\n\"No, but you've just given me an idea of my own.\"\n\n\"She said that if she went to bed with all the guys she wanted to, she would never get anything else done! What's your idea?\"\n\n\"I was thinking that the two of us could throw her a very special little two on one bachelorette party. Very time efficient, no entanglements, and mums the word to her best boy Bob. \"\n\n\"That's a very nice plan. I understand that you do all right with the ladies yourself, Robbie.\"\n\n\"Well, I have met some wonderful young ladies that I am proud call my friends.\"\n\n\"No shit. I heard about the UDP Halloween party, and the addicted to Austin party. Some of the hottest video on TMZ ever, even if it was too far back to see much detail. \"\n\n\"I would think a soon to be starting Longhorn linebacker would get plenty of offers, too?\"\n\n\"Yeah, but screwing drunk and stupid sorority girls is no way to go through life, Robbie. Half of them smoke, which grosses me out, and if you go to sleep, they post an embarrassing picture of you on Instagram or Facebook, and say they are your new steady girlfriend. Coach says nothing good happens after midnight unless you are already in bed by ten, and if you haven't closed the deal by then you should go home alone and try again the next night. There are just a lot of them that I don't even want to close the deal with.\"\n\nI thought a moment, then had still another idea. \"You should come to some one of our UDP mixers. We get lots of classy independent girls, and girls from what I consider the more intelligent sororities like the Bi Phi's and KKG. You will meet a better class of girls, at least. But early next week, we have a special event, sort of like a small private version of the Addicted to Austin party, but a little more rustic and risqu\u00e9.\"\n\n\"More risqu\u00e9? It sounds like just what I need, but I have to worry about bad PR and coach throwing me off the team.\"\n\n\"Well this is very private event, and you would have to wear a mask that would hide your identify completely.\"\n\n\"Like the one you wore in the music video from the party?\" \n\n\"Not quite as showy and elaborate as that, but just as concealing. You would also have to wear chaps.\"\n\n\"I grew up on a ranch in west Texas, Robbie. I wore chaps all the time, but I only have one pair here in Austin. Why would that be any big deal?\"\n\n\"Well, you would be wearing a mask and chaps, and maybe some boots, but that's all. That's the way all the UDP guys will be dressed.\"\n\n\"This is not some kind of creepy Alpha Gamma style slide party is it?\"\n\n\"No, no. There is one woman that the whole event is planned for - we are acting out some of her fantasies in front of her husband for her thrills and his too. And the two women you saw me with in that music video will be there, along with some of their friends you might like to meet. And there will be absolutely no video of this little event. \"\n\n\"As long as it doesn't conflict with practice, I'm in. Give me as much notice as you can.\"\n\n*******\n\nSuzanne called me Thursday afternoon right after linguistics class, with some bad (from her perspective) news.\n\n\"G\u00fcnter is permanently out of the swap fest business, Robbie. He said his little problem Sunday, which of course has never happened to him before, was a sign from God that he should be with Strelsa and Strelsa only from now on. And my plan to work a deal with Big Liz and Little Marilyn to have Ralph join us is stalled. They want some things that I just can't agree to.\"\n\nI tried to disguise my glee. I suppose G\u00fcnter's issues were a sign from God, if you grant that God made little green apples, and also made me and gave me my only talent. \n\n\"Gosh I'm sorry, Suzanne. I guess G\u00fcnter is really freaked out. What's the problem with Ralph?\"\n\n\"It's not Ralph. It's Big Liz and Little Marilyn. They don't want to swap partners and do threesomes like I arranged with Strelsa. They are willing to let Ralph be with me along with you, but they don't want to be there with us.\"\n\nI paused to consider. \"What's the problem with that?\"\n\n\"Because what they want in return is that they each get to spend a whole night all alone one on one with you. Without me or Ralph being around.\"\n\nOh My! I guess I was assuming I would get both Liz and Marilyn at the same time, but this might be even better. Certainly it was just as good.\n\n\"I am willing to do that, if it means helping you get what you want.\" Big of me, I thought.\n\n\"Oh I am sure you would, you prick! But I am not willing to let them work their wiles on you all night long like that without me being around.\"\n\nBingo. \"Suzanne! You can't be jealous, can you?\"\n\n\"Shut up, Robbie.\"\n\nI realized that made me feel better, and more wanted, too. I also suddenly realized that the aspect of the Strelsa and G\u00fcnter swap thing that bothered me the most was that Suzanne had arranged it all, and presented it to me as a fiat accompli. It made me crazy to be expected to be a passive and powerless spectator while the other guy got Suzanne just the way she wanted it. Maybe that's why I reacted so strongly. What if I looked at this stuff another way?\n\nI decided to have a little talk with Liz and Marilyn myself, on the down low.\n\n*******\n\nI didn't actually see Kevin again until the next night at dinner. I told him that the debate Lynn Da and I did was chosen to be presented to the whole Linguistics class, and he offered to edit up our raw footage into a tight little 5 minute video. He was taking a production class and needed the projects to list on his class project resume and turn in before Spring Break. His Star Trek parody was finished, and his professor had told him to keep it under wraps and edit up a trailer that could he would pitch to film festivals and distributors on Kevin's behalf. It was that good. Orinda was about to become a star.\n\nKevin was obviously excited about all this, but then he looked nervous.\n\n\"I wanted to ask you about last Sunday night.\"\n\n\"Suzanne was being a little provocative, wasn't she?\"\n\n\"She certainly provoked Lou. She was shivering while we waited in the lounge, and then she attacked me as soon as you left to take Suzanne home.\"\n\n\"Suzanne joked about making Lou go down on her.\"\n\n\"She wouldn't have to make her, she would just have to stand still and let her. She is virtually obsessed with it.\" He looked even more nervous. \"Robbie, do you remember when we talked last semester about us double teaming Lou?\"\n\nOh boy, here it comes. \"Yeah. But I thought you were a little more serious about her as a long term relationship? So we kind of dropped it.\"\n\n\"I am serious about her, but I still need to know if this is just a phase she is going through, or a permanent predilection. Besides talking about Suzanne, she is now talking about wanting two guys at once.\"\n\nWhat was this, a fucking epidemic? \"So is Suzanne. It makes me nervous.\"\n\nWe said no more about it then, and went back up to the room and hit the books, caught up in the rush to catch up with optimistically scheduled lesson plans before Spring Break began. Kevin had mostly audio and video projects to get 'in the can' and turned in before the last day of classes, rather than exams like I had to prepare for. But we both were feeling the pressure, and we would both be exhausted and brain drained when the break began. I would keep my head down and nose to the grind stone for the rest of the week, and decided I would welcome the weekend to let off some steam before the final short week of exams. \n\n*******\n\nCandy turned out to be a little dickens, in several ways. She showed up as instructed at Lara's apartment at 7 PM Friday night. Lara seemed to have a special fascination with Candy, and she had convinced us that she should take the lead in Candy's training. She even bought a new outfit: a skin tight neon purple leather and spandex contraption that practically glowed in the dark. It was topped with a tall purple leather helmet with Lara's blonde hair popping out the top in ponytail with an iron flail at the end of it. It dispensed with the zippers built into her other suit, having a wide open band from the top of the thigh to just below her navel which glaringly exposed her curly blond pubic hair, and a push up under-wire arrangement that pushed her amazing breasts up and out and made them seem even bigger than they really were. The little iron nipple clips that matched the hair flail were quite a touch.\n\nCandy went beyond her instructions. When I opened the door in response to her ring, she stood in the hallway naked as a jaybird, having put all her clothes in the backpack she was holding in her hand. Luckily none of Lara's neighbors was in the hallway at the time. Candy strutted in wearing only her incredible tan and a pair of black spike heels, which Lara immediately made her take off.\n\nLara led her to the bedroom and ensnared her in the trapeze, legs out wide and arms up and immobilized. She clipped her nipples with two nasty looking little chrome alligator clips, her labia with big wooden clothespins, and roughly inserted a large and mean looking black butt plug in her behind. Suzanne emerged from the bathroom oiled up like a body builder, her hair up in a big ponytail like Lara's, and wearing only a big black strap on dildo that looked like a mate to the butt plug. \n\nCandy shuddered and twisted a bit on the trapeze. Lara climbed up above her and wrapped her knees in the rope holding the trapeze, grabbed two big handfuls of Candy's dirty blonde hair, and proceeded to give Candy a 30 minute tutorial in how to eat blonde bombshell pussy properly. Candy had significant natural talent in that arena, but Lara gave her some very specific instructions, which she expected to be followed to the letter. Her little quirks of desire were lessons Suzanne I had already learned, and from the sounds of it, Candy was enjoying her lessons as much as we did.\n\nSoon Lara's pussy smell began to waft out from the trapeze, and she cooed and shook with a nice orgasm. I always get a tremendous feeling of peace and well-being when Lara comes, like all is right with the world. Lara hiked herself up a few inches on the ropes, and adjusted the angle of her body a bit, and then directed Candy's mouth to her ass. Candy sighed continently. The Suzanne hung herself under Candy on the trapeze bar and began to kiss Candy's ass fervently, all around the butt plug. Candy sighed even more contentedly. Then Suzanne pulled out a little remote control, and with an evil grin started the electric motor built into the Bluetooth Butt Plug. Candy gave out a little yelp, muffled as it was by Lara's blonde muff.\n\nIt occurred to me that Lara's mouth was tragically underutilized. After some previous gymnastic gyrations had made me worry about them, Lara had assured me that the supporting bolts for the trapeze were epoxied into the concrete floor of the apartment above and were rated for at least 3,000 lbs. each. I discovered another collateral benefit of Saskia's program to build my upper body as I easily hauled myself up the ropes hand over hand and arrived above Lara's lovely face. Her eyes were closed as she enjoyed Candy's ministrations, but when my cock touched her lips she opened her eyes and smiled at me, then teasingly bounced my dick on the end of her tongue. Another wave of peace and contentedness washed over me. \n\nWe soon discovered that Candy shared a trait with our previous favorite trainee, Millie. She could not only come from the pain, she actually achieved a stronger orgasm from pain than from pleasure. It seemed to surprise Candy herself, but Lara was completely astounded. When Lara used Suzanne's favorite riding crop to spank the inside of Candy's thighs, she could make her come with five moderate blows, or two really hard ones. After the two hard blows, Candy would come, groaning and twisting, luxuriating in the feelings they engendered.\n\nAfter several instances of this, complete with an astounding series of 'spank, spank, squirt' scenes, Lara got a funny look on her face, climbed down off of Candy's face, and went over to her closet and reached up onto the shelf and pulled out a box that had never been opened, slicing the paper wrapping with her long nails. I saw on the box that it was from a mail order shop called Judicial Caning of Hong Kong. Lara removed two long canes from the box, and took them out of their plastic shrink wrap.",
        "\"I have never used these, but I think this might be the time and place.\" Lara said.\n\nLara held them up, one in each hand. Quite a complement to her purple leather suit. They both had form fitting handles that confirmed to the hand that held them. One was very thin, one was a little thicker, and they were both the same color as my grandmother's old rattan porch furniture. She held them up for Candy to see and I thought I actually saw lust and desire in Candy's eyes. Her dirty blonde hair shook as she nodded her head 'yes'. \n\nLara set down the thin one and moved the thicker one to her right hand. She moved around behind Candy, and reached out to touch Candy's left leg with her left hand, measuring the angle and distance for her stroke. Then she touched to cane to the back of Candy thighs, just barely touching them. Candy tried to twist around to look, but could not actually see the cane. She quivered back and forth in the trapeze, like a sprinter settling down into the starting blocks. \n\nSuzanne turned off the butt plug and climbed down to watch. I did too. We both had the feeling that something wild was about to happen.\n\n*******\n\nAll of a sudden, it was March. Just ten days before the beginning of spring break. Reading assignments poured down from the sky, as professors went for the quick fix to cover everything they wanted to get done before midterms. Students with poor study habits either devoted themselves to cram for midterms before break, or resolved themselves to dropping out before mid-semester reports went final. \n\nAlthough SXSW was conceived as Austin's 'spring fling' it now encompassed at least four different official sub conferences and four un-official ones, bringing film folks, music mavens, investors, tech titans, the education effete, and assorted and self-appointed elites from all points of the compass, not to mention hookers descending on the capitol city traveling from Albuquerque to New Orleans. It also had spread out all over March. \n\nThe fund raising posse that UDT would use for phase one of the 'Great Red Rock Prank' had to be used early to snag the unsuspecting professor and his wife into our little sting, and it all had to be done before the University official Spring Break began, because I was going to devote myself to Suzanne, Lara, and Nora completely during the break, except for the three day girls only 'pussy party' that I was not invited to. For those three days I would try to enjoy my quick up and back trip to Prosperous to visit the parental units and console myself with Grandma's cooking. \n\nThe prank plan had come together surprisingly well. Kevin functioned as my production design consultant, helping my choose locations, cast and props to maximize the visual impact upon and excitement of the lovely Veronica Tappert, and hopefully to maximize the anxiety, humiliation, and given his kinks, ultimately probably great excitement of Professor Red Rock Tappert. Everyone at UDT was committed to make it happen, and they had tapped their networks of friends and acquaintances to gain the resources needed. \n\nI made it through the spate of pre-break midterms, although mostly with solid B's rather than the hopeful A's of the first semester. Things were getting more difficult in the classroom, even as they got more interesting in the bedroom. Soon the night of the Great Prank was upon us. I had indulged in a little sexual Schadenfreude and projected my worst fears onto a little show for Rock Tappert that starred his hot wife Veronica and almost a dozen other 'actors'. Had I been her husband in our little play, I would probably drop out, kill myself, or kill everyone else involved. But it would probably be a fun and exciting little cuck fest for him. Oh well, it takes all kinds to make a world, as my grandmother always told me. \n\n*******\n\nVeronica Tappert was getting a little bored with Texas. She had such high hopes for Austin when they arrived, especially after meeting a few of the new people. Rock told her he thought the boys at UDP would cook something exciting up for her, but so far nothing. She was not looking forward to tonight's perfunctory but very required little faculty group outing to a pre-SXSW reception, ostensibly to raise money for several vaunted local charities. Rock had told her to expect to be 'faux arrested' and held until he wrote a check for a charitable contribution. Maybe they would handcuff her and she could at least fantasize about being ravaged for a while.\n\nShe did her makeup extra nice tonight just in case they might meet someone interesting, and wore her tightest and shortest basic black dress. They were riding with the assistant Dean and the Lillehammer's, so at least Rock didn't have to drive. For all his intelligence and inventive talent, he was the worst driver she had ever actually known. She still wondered how he ever passed the test to get a license. They arrived at the hotel and went upstairs under the watchful eye of the giant portrait of the hotel's founder, whose ghost, according to some, still occasionally stalked the halls. She was more dressed up than most. The women's outfits ranged from Haute Couture to simple denim dresses, and the men's from business suits to 'Texas Tuxedos' which she found a bit sexy in rough-hewn kind of way. \n\nThe dean wandered off to press the flesh. After twenty minutes of small talk that seemed like two hours, two tall and muscular uniformed deputies, one male and one female, approached them and told them there were being arrested for 'charitable rendition'. She was thrilled when the male handcuffed her and 'checked her for weapons'. Wow, that was kind of hot. The female did the same for Rock, but of course watching the guy manhandling Veronica got him hotter than did the female touching him. That's my boy Rock, she thought. He's a special case.\n\nThey were paraded up to a showy gilded 'jail cell' along with a line of other 'detainees' where Rock and Professor Lillehammer each wrote checks. But then, while the people in line front of them were allowed to blend back into the reception crowd, they found themselves instead marched, still handcuffed, out a side door into a hallway. She shot Dorothy Lillehammer a look, but she shook her head, seemingly not knowing what has happening. Then they went down two flights of service stairs to a door that was propped open and looked out onto the alley just north of the hotel. She heard street sounds of traffic and even the clop-clop-clop sound of a horse drawn carriage, along with a little whiff of horse manure. Very authentic! \n\nThe two deputies had both donned black 'Lone Ranger' style masks, and suddenly put pink fur-lined handcuffs on both couples, returning the more prosaic plain metal ones to their belts. Veronica's heart raced, and she heard Dorothy draw in loud breath. Was something good finally happening in this sleepy Texas town? A big burnt orange stretch limousine pulled up, complete with a pair of giant longhorn horns across the hood. The door opened and two big and very fit looking black men jumped out, in tailored chauffer's uniforms. A shapely young black women in all black leather got out with them. Something was definitely going on here!\n\nThey put both men in the very back seat of the limo with no wasted time or effort, and the deputies walked back into the hotel, closing the door behind them. The older driver spoke, taking Veronica by the arm. He sounded like Ice-T doing a George Carlin imitation, but his grammar was perfect and his elocution was too. \n\n\"Ma'am, you have been selected for sexual rendition.\"\n\nWhoa. What the hell was that? At least it wasn't going to be boring.\n\nThe female grabbed Dorothy Lillehammer. \"Ma'am, you will observe what happens to your friend, but you can never discuss this with anybody!\" She then hustled Dorothy into the middle seat of the limo.\n\nThe black clad female then stripped Veronica's dress off like stage magician, so fast that it was over before Veronica even recognized what was happening. She never wore a bra, and since she had been a little bored while dressing, she had decided to 'go commando' for the evening. The night air was cool, and her nipples were already hard. She began to breathe faster, too.\n\n\"Guess I don't have to frisk you, but you might enjoy a cavity search, wouldn't you honey?\"\n\nVeronica shivered. Things were sure looking up. The woman hustled her into the middle of the white leather seat next to Dorothy, and then got into the front, sitting on the lap of one of the big in the front passenger seat. They pulled out of the alley into Congress Avenue, opened up the moon roof on the limo, and headed south. It would be dark soon. The lights and sounds of downtown Austin filled the air, and the wind whipped and whistled through the moon roof, stimulating Veronica as effectively has hands and fingers could have. They passed through the Soco district, and finally reached Ben White Boulevard, AKA Highway 71, then turned east and accelerated. \n\nVeronica didn't know Austin well enough yet to recognize anything except that they were heading roughly east, toward the airport, the 130 toll road that was sometimes called the 'Pickle Parkway', and the Circuit of the Americas. They went past the toll road, turned off onto a dirt road, and then bumped over a cattle guard under a big metal archway with a temporary looking sign with the letters \"UDT\" on it. Maybe Rock was right - they had cooked up a little surprise for her.\n\nThey stopped the limo next to what looked like a corral or small rodeo arena. There were several lighting towers like you see on road construction projects at night, but the lights were off. The female deputy opened the limo door and pulled Veronica out and to her feet, and marched her toward the arena. The limo took off again with its remaining three passengers, pulling around to the front of the arena, where there were some lights on. The sun was down near the horizon and would set in a few minutes.\n\nThe deputy stopped and tied Veronica's handcuffs over the top of a steel fence, then walked away. There were two horses just on the other side of the fence. If she remembered the Dean's quick summary of Texas stuff correctly, these were quarter horses, not Arabians. There were not as big as the Clydesdales she had seen in a parade on Virginia once, nor as tall as the Lipizzaner stallions she had seen perform, but they were plenty big. They looked at her warily, and then one of them launched a giant stream of urine into the air. It was loud and impossible to ignore, and was coming from a huge penis hanging far down from the horse's body. They smell hit her a few seconds later like a wave: pungent, acidic, and penetrating. It was earthy and animalistic, and it made her shiver even more.\n\nIn a few minutes, the deputy returned, unhooked her handcuffs from the top rail of the fence, and marched her about 30 yards closer to the front of the arena, then locked her down again. She looked up to see a cow. More properly a heifer, if she remembered her introductory Texas lessons properly. It probably weighed more than the horse. Then what was unmistakably a Longhorn bull trotted towards the heifer. It was a big one, staring at everything around with a disdainful red cast in his eyes. His huge nostrils sniffed the air, attracted by the scent of the heifer. The only thing she remembered about bulls is that they are big, dangerous, and sometimes crazy around ovulating heifers. The bull pawed the ground and made a hoarse sound somewhere between a bullfrog and a trumpeting elk. It followed the heifer closely and then jumped up with its front hooves on the heifers back. At first she thought the fur covered thing underneath it was the penis, but then a giant pink tube that had to be two feet long shipped out of the fur covered thing and made its way up under the heifer's tail. The happy bovine couple turned toward her and she saw that the horns of the heifer were parallel to and underneath the larger horns of the bull.\n\nVeronica remembered that she used to think that only bulls had horns, but that wasn't true. Then the bull made a triumphant noise, and the heifer made a plaintive one, and the bull thrust his 'hips' up and forward and seemed to bury this penis deep into the cow. Veronica shivered a little more. After a few minutes, the bull then jumped off and seemed to ignore the heifer. Typical male. The heifer walked away, holding her tail at a funny angle. \n\nThe deputy returned, hooked Veronica's hands together again behind her back, and began to march her toward the front of the arena. One of the lighting towers was now lit up, and there were people gathered around the front gate. \n\n*******\n\nDorothy Lillehammer watched as Veronica Tappert was taken out of the car. The male deputy said we would see her a little later after she had been 'prepared'. Prepared for what? The limo then took off again, and drove toward some lights and a group of people milling around. When it stopped, the deputies took all three of them out of the car, and marched them towards three chairs that were set up in front of what looked like one the 'chutes' that they released the bulls from at a rodeo. There was a sort of big steel horizontal pole sticking out, about the same diameter as a telephone pole, and there was what looked like a leather saddle strapped to it. It had no saddle horn, and it looked like it was turned 90 degrees from a 'normal' saddle. There were also several leather straps attached to the fencing nearby that were currently draped loosely around the saddle.\n\nDorothy found herself pushed down into the middle seat, and soon tied down. A leather strap was threaded though the handcuffs behind her, securing her firmly to the rear legs of the chair. Another strap went over her waist like a seat belt, and finally two other straps held her ankles to the front legs of the chair. Her husband was similarly secured to the seat on her left, and Rock Tappert was placed and tied in the seat to her right, closest to the rodeo chute. The one central light tower was turned off, and several others came on at the sides and back of the arena. \n\nShe spotted a group of people walking toward her. Lara, Robbie's girlfriend, was easily recognizable: six feet tall in a purple leather 'sex suit' with her blond hair up another foot high. She felt a pulse of excitement. Dorothy had never been with a woman, but she would probably do anything Lara wanted her to. She noticed that her husband reacted even more strongly to the sight of Lara than he had described in his first meeting her in his office. His head snapped up and swiveled like those lemurs on the Discovery Channel. Suddenly she realized why. Lara's costume was a little different than the one she had worn to her husband's office: it was essentially bottomless. Her nipples were spectacular, and Dorothy found herself fascinated by the golden curls of pubic hair that were fully exposed. She realized her mouth was hanging open, just like her husband's was.\n\nThe petite raven haired woman next to Lara must be the Suzanne she had heard so much about, and it was easy to see why. A foot shorter than Lara, but with an incredible figure cinched tight in a white leather costume, and the same kind of openings that Lara's old suit had. She strutted like a queen, carrying a cat-o-nine-tails like a royal scepter. She noticed her husband actually quivered at the sight. Dorothy discovered that she was shaking too. \n\nThat must be Robbie walking behind them in a black outfit with a swirling cape. He had on a big black mask that hid his face, and a big shiny metal codpiece on the front of the outfit, like at the party. He held a leash in his hand that was attached to collar on the neck of a very naked and very nicely tanned woman that was crawling on all fours. \n\nShe had some sort of suit made up of metal rings that hid absolutely nothing from view, and had black leather pads on her elbows and knees. Her tan was jarring: making her breasts and mound of Venus stand out like they had pibk spotlights on them, even in the very low light from the lighting towers off to the sides. Robbie unsnapped her leash and Suzanne handed her something on a little tray. Then the dirty blonde with the spectacular tan stood and sashayed over towards the three chairs, swinging her hips seductively. Professor Lillehammer snapped to attention. \n\nThe blonde stopped in front of the professor and raised the tray she was carrying. There was a glass jar with something wet looking and red in it, and a silver spoon. She put a finger under the Professor's chin and raised his gaze up to hers. \n\n\"I hope you will enjoy the show, folks. I thought I would offer you a little sample of this freshly made and rare Texas jam. Poteet strawberries and Robstown habaneros - a very sweet and hot combination!\"\n\nShe dipped the spoon in the jam and held it in front of Dorothy's husband as if she were going to feed him baby food from the spoon. \n\n\"Oh no, no thank you.\" He mumbled.\n\nDorothy spoke a little louder than she intended. \"Oh, I insist that you try it dear!\"\n\nHe glanced over at her and then turned back toward the spoon and opened his mouth slightly.\n\nThe dirty blonde got a dirty grin on her face. \"That's a good boy!\"\n\nShe moved the spoon towards him, but just before it reached his mouth, she pulled back slightly and languidly dripped the jam on one of her nipples! She dropped the spoon back on the tray, and smiled again as his facial expression froze in surprise, then she grabbed the back of his head with her free hand and pulled his mouth to the jam coated nipple.\n\n\"Suck it hard!\" She growled. \"Suck it all off.\"\n\nThe professors face turned just as red as the jam, but he did his best. \n\n\"Good boy! Now bite it.\" She growled again. \"Harder!\"\n\nHe must have gotten up the courage to really nip it. She sighed.\n\n\"Good boy! Momma likes!\"\n\nShe pulled back, and slapped his face hard, twice. He was paralyzed for a moment. Then she took the spoon and drizzled jam on the other nipple. \n\n\"This time suck harder, and then bite harder, too!\" She jammed the breast in his mouth and grabbed the back of his head savagely.\n\nDorothy could see her husband's jaw muscles work, and his cheeks hollow as he sucked as hard as he could. The tanned blonde threw her head back and laughed heartily. Then his jaws moved again as he obviously bit down on her nipple. She drew in a big breath and stood on her tiptoes. She pulled back and Dorothy could see that her nipple was bright red, and all the jam was gone.\n\nThe dirty blonde slapped him again, hard, once on each cheek. \"I like you!\"\n\nShe then stood in front of Dorothy, her chest heaving and her nipples hard. Dorothy's too. She dipped the spoon in the jam again and looked Dorothy right in the eyes.\n\n\"Oh, I, I couldn't...\" Dorothy mumbled.\n\nHer husband laughed. \"Oh, I insist, dear!\"\n\nThe dirty blonde smiled an even dirtier smile, and once again drizzled a lot of jam on a nipple. She slowly leaned over toward Dorothy, but rather than grabbing Dorothy's head, she smiled smugly, and stopped her forward motion, and waited for Dorothy to make a move. \n\nDorothy did. She tried her best to suck really hard. She had never had another woman's nipple in her mouth before. She liked it. The she remembered she should bite hard now. She did. She was afraid she would break the skin. But the dirty blonde purred like a kitten. Dorothy felt a hand on the back of her head that grabbed her hair and then pulled her head back. It hurt a little bit.\n\nSuddenly the blonde girl kissed her, very hard, jamming her tongue into Dorothy's mouth. She felt a little dizzy. Then her head was snapped back and the blonde dripped some more jam on the other nipple. \n\nDorothy leaned forward to take it in her mouth. The blonde giggled and leaned back, making Dorothy lean forward even further. She giggled, and moved back until Dorothy almost fell over forward. She stopped just short of that and Dorothy clamped onto that nipple as hard as she could suck.",
        "\"That's my girl.\" The blonde murmured. \"Suck it, suck it - now bite it!\"\n\nDorothy gave her it her best. Then the blonde pulled back and slapped Dorothy even harder than she had slapped the professor.\n\n\"You've got real potential, honey!\" she cried.\n\nShe stuck her finger in the jam jar, wetting it with red jam, and then swiftly rubbed it between her legs. She held the finger up under Dorothy's nose, and Dorothy knew her nostrils were flaring as she drank in the smell. Then the finger was in her mouth, and she sucked it just as hard as she could. It tasted weird, but it got her hot. The finger left her mouth and went under her chin, lifting her eyes up to meet the blonde's. \n\n\"When you are ready for more training, you let me know.\" She said softly. \n\nThen she turned and moved over in front of Rock Tappert. \"Your wife is almost ready. I hope you enjoy the show. I know she will!\"\n\nDorothy could actually hear Rock Tappert's heart thudding in his chest. His legs vibrated like a flag fluttering in a strong breeze. His face was redder than the jam. The sun was almost fully set. A burnt orange sliver still hung above the horizon. \n\nSuzanne strutted up to the seated trio and began to speak. Dorothy was surprised at how deep and commanding her voice was. \n\n\"Ladies and Gentleman, welcome to a very unusual evening. You are now part of the UDT family - you will never be same again after this night.\"\n\nThe sun then completely disappeared below the horizon. \"Sunset!\" Suzanne bellowed. \"Let the fun begin.\"\n\nAll the lights went off. The only illumination was the faint red orange glow reflected from the clouds low in the western sky. There was some movement near the center of the arena, and Dorothy thought she could see a pretty large group of people walking towards them.\n\nSuzanne spoke again. \"Most of you have heard the saying that 'the heart wants what the heart wants'. But some of you know that sometimes it is more correct to say that 'the pussy wants what the pussy wants'. Tonight, you are going to see a woman getting what her pussy really wants. This is just for us gathered here. You will never talk to anyone about this. After tonight, you will never even talk about it with those who are here tonight. But she will never forget it, nor will you!\"\n\nAll of the light towers came on at once. The light was momentarily blinding. \n\nWhen her eyes adjusted, Dorothy saw a female form up on the rodeo chute not twenty feet from their chairs. It was Veronica Tappert! She had on white gloves, white stockings that ended just above her knees, a long white stiff leather collar that held her neck up and out, and her hair was tied up in a burnt orange and white bandana. Otherwise, she was naked. She was suspended with her abdomen on that little saddle that sat on a thick pipe about three feet off the ground, with her legs spread widely, and leather straps at her knees and ankles supporting her weight. Another set of leather straps held her arms out slightly above the level of her shoulders. She looked like some kind of erotic marionette show. Her fingernails, toenails, and lips were painted burnt orange. \n\nRock Tappert vibrated again in his chair. He chanted something unintelligible under his breath, and then sobbed. Veronica was totally bathed in light now, and every part of her was exposed and easy to see.\n\nDorothy saw that the group of people had reached Veronica. There were several dozen young men, and about a dozen females. All the men had on cowboy chaps, leather boots, and little 'Lone Ranger' style masks, with nothing else, except that each had a white square on their chest with numbers, like at a 10K run. She tried to scan the numbers, and the highest one she saw was 50. Were there really 50 men there? The females had no numbers, and all wore a pair of white panties, and nothing else. They milled around Veronica, looking closely at her, but not touching her.\n\nSuzane spoke again, her voice powerful. \"Members of UDP and trusted guests, I give you our plaything for the evening! Take a few minutes to welcome her and warm her up a little before the real action starts.\"\n\nThe group surged in around Veronica, touching her and commenting about her body.\n\n\"Nice nipples.\"\n\n\"I like the way your legs look.\" A pause. \"They feel nice too!\"\n\nSeveral of the woman touched and kissed Veronica. Most all of the men rubbed her face or breasts or legs with their cocks. She groaned and quivered. \n\nSuzanne spoke again. \"Everyone on your marks, the show is about to begin!\"\n\nThe men lined up according to their numbers, from #1 on the left to #50 on the right, with 25 men flanking Veronica on either side, with the dozen or so women distributed among them, perhaps standing with their dates? Dorothy Lillehammer was stunned. Surely they didn't intend that...\n\n\"We bid our new faculty advisor and his wife welcome to Texas, and to a very interesting evening with UDP. In Texas, football is a year round sport.\" Suzanne's deep voice commanded silence and attention. \"Fall football you are familiar with, they even play that at Virginia Tech, although not so well lately! And I suppose they have spring football practice, too. Here in Texas, football recruiting is a year round passion, but especially so after spring training ends. But in the hot summers, the dedicated football fans follow seven on seven football, which is the primary reason why so many quarterbacks from Texas are starting at major college programs and in the NFL.\"\n\nRock Tappert was truly Red Tappert now, especially in the face, and he was twisting in his chair to try to get a better view of his wife Veronica. Veronica, for her part, was looking back and forth trepidatiously at the long line of numbered males: short and tall, buff and skinny, and in all colors from pasty white to very dark black. Dorothy couldn't help but to think about what it would be like to have them all waiting in line for her. She hoped her husband couldn't hear her labored breathing. She could clearly hear Veronica's breathing between Suzanne's words.\n\n\"In any football game, one of the most exciting plays is the interception - especially those that are returned all the way back down the field for a touchdown. They call it a 'pick six' - suddenly, unexpectedly, savagely, the other team is inexorably penetrating all your defenses and pushing hard all the way into your most precious and previously well- guarded territory, your end zone. \"\n\nDorothy gasped. Rock Tappert groaned. Veronica sighed.\n\n\"You are going to enjoy a little 'pick six' of you own tonight, Professor! You get to pick the six men that will penetrate all of your wife's defenses, score multiple touchdowns, and make one of her hottest fantasies come true. As a bonus, if you pick a man whose girlfriend is here with him tonight, she gets to have her way with the lovely Veronica, too!\"\n\nA hush fell over the crowd. Then about half of the dozen or so girlfriends, at least those that wanted a shot at Veronica, began pitching their boyfriend's wares. A compact and very muscular UDP member wearing #14 was pushed forward by his girlfriend, a brunette at least six inches taller than he was, with big breasts and nipples that were currently very erect. \n\n\"Choose #14! Dynamite comes in small packages, let me tell you. He is fit, and strong, and he lasts a long, long time!\"\n\nDorothy was fascinated with the girl's nipples, but she couldn't help but giggle at her sales approach. She found herself speaking before she thought about it. \n\n\"That may not be a plus in this situation, sweetie.\" Professor Lillehammer turned and stared at his wife. \n\nShe suddenly realized she had spoken aloud and clamped her mouth shut. She tried to cover it with her hands, but the handcuffs made that impossible. The girl took her comment as a challenge.\n\n\"I bet you'd like to lick my nipples, too, wouldn't you lady?\"\n\nFurther conflict was avoided as several other dates paraded their boyfriends in front of Rock Tappert. Dorothy was amazed to see him break out in a big smile.\n\n*******\n\nRobbie was amazed at Red Rock Tappert's reaction. This was supposed to drive him completely insane, but he looked like he was enjoying himself. Really enjoying himself. Robbie's curiosity about the Tapperts must have triggered a Suzie snooping impulse, and suddenly he was tuned into both Veronica and her husband, the first time that had ever happened. Her carrier signal was strong, and her fantasy images were shimmering and vibrant: she was digging what was about to happen. The weird thing was, so was her husband. He was not tuned in, Suzie-wise, as far as Robbie could discern, but he was sending his own strange and funky long wavelength male desire signal that somehow harmonized with his wife's excitement! \n\nRobbie had certainly not seen that coming. It was like he was listening in on a Suzie version of an old 'party line' telephone and he could hear both sides of the 'conversation' between husband and wife. He could even sense some of Rock Tappert's emotions. The only thing that was making him anxious right now was the chance that he might not select the 6 guys that would get his wife off the best! Robbie was stunned.\n\nSuzanne pressed against him on his right, and put her arm behind him and slipped her left hand into his pants, caressing his buttocks. \n\n\"Six might be too much for me, but it looks like it is just right for Professor Taggert's hot wife. How did you know this would work for both of them, Robbie? You are such an interesting man!\"\n\nTaggert did pick #14, and then #43, our only Samoan UDP member, who looked like a football nose guard but was actually a microbiology major and a clarinetist in the Longhorn marching band. Little Liz pulled Ralph to the fore, using his huge dick, which amazingly made Rock Taggert smile. He picked Ralph, and Liz gave out a whoop, explaining that he got a bonus because Ralph had two girlfriends here tonight. Three down and three to go, so to speak.\n\nRock Taggert had to undergo three days of 'required diversity training' before reporting to his professorship at ESU, and some of it must have sunk in, because he next picked the very blackest UDP frat rat ever, a huge Nigerian shot putter who was supposedly a distant cousin of the Acho brothers. He then picked Juan 'Big Chile' Talemantes, who was from Monterrey. His father was a professor at Monterrey Tech and he was the only UDP brother who liked his food even hotter than I did. He often ate handfuls of raw Chile Pequin peppers to win bets, and seldom had to pay for his drinks as a result. \n\nHis final pick was Husky Varna, who stepped forward and actually tried to shake Professor Taggert's hand, before he realized the handcuffs made that impossible. Mighty mannerly of you there, podnah!\n\n\"Ooh! Good choice.\" Suzanne breathed. \"Who is that?\" She was popping the exact same kind of Suzie signal that Lynn Da Britain had sent for him. Damn it. Do all women react that way to him?\n\n\"That's a new member I am recruiting. Looks like he is enjoying our evening so far.\"\n\n\"Since he has no pockets, we can be sure that's not a frog in his pocket!\"\n\nLara stood next to him on his left, and Candy was backed up in front of him, such that he was very aware of her ass cheeks pressing against the metal codpiece of his 'Master' costume. He smelled all three of the girls next to him, each wearing a different perfume, and each modulated uniquely by a little perspiration and a little excitement. The assembled audience was murmuring, and the insect noises had picked up now that it was dark. The crowd was speculating on who would do what to whom, and when. Moths fluttered through the beams from the lighting towers, which seemed actinic and bright. In the background, cattle noises and bird calls mixed with the insect noises. Way off in the distance, a spring thunderstorm boomed its bass song. Was it moving this way?\n\nA phrase popped into his mind, unbidden. \"The roar of the greasepaint, and the smell of the crowd.\" It was a play he had attended with his mother, once again in support of one of her accounting students with Thespian tendencies. It seemed somehow an appropriate image tonight. Robbie had brought all this together, constructed the scene and chosen the players. Was he getting cocky? He had projected some of his worst fears onto Rock Tappert, but it seemed the young Professor was going to be very happy that he had. Where else in the world could a scene like this be played out? What starts here changes the world, right? It takes all kinds to make a world. Which kind was Suzanne? Which kind was Robbie?\n\n*******\n\nDorothy's excitement grew to a fever pitch as she watched Rock Taggert pick 6 young men to ravish his wife. She knew this was one of Veronica's biggest sexual fantasies, and it was about to be fulfilled in a spectacular fashion. Dorothy realized she was a little hot under the collar, and wet under the panties, too.\n\nThe little short girl and her tall friend walked over to Veronica, holding hands with an average looking guy. Except he had the biggest cock Dorothy had ever seen. She had watched some pretty funky pornos at her youngest cousin's bachelorette party a year ago, but none of the male porn stars had anything on this guy. If he had in a photograph she would have believed it was Photo-shopped and not real, but as he walked it moved very realistically. He stopped about ten feet from Veronica and watched with his hands on his hips as his two girlfriends walked over to Veronica.\n\n\"Don't worry honey. Ralphie is not going to go first. He might take a little getting used to, if you know what I mean!\" \n\nBut it looked as if the tall girl next to her was going to go first. She was lean and muscular, an athlete of some stripe, and she looked very erotic in the blueish light from the lamps on the towers. She sauntered over and stood next to Veronica's shoulders. All the talking stopped, and everyone's attention was now on Veronica."
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "fraternity",
        "sorority",
        "exhibitionism",
        "anal",
        "oral",
        "lesbian",
        "rodeo",
        "austin",
        "football"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-31"
}