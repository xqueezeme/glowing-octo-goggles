{
    "title": "Good Vibrations at Disney",
    "pages": [
        "Abbie heard the sounds of her Iphone alarm clock starting to chirp. She had chosen the most obnoxious sound possible as her alarm, and always made sure it was just out of reach when she went to sleep. That combination made sure she got up when it went off. She had found out that was important when she went off to college, since her mom and dad were not there, to make sure she got out of bed and got going in the morning. The strategy had worked well the first three years and as college senior she had kept it.\n\nThis morning she wasn't at college, she was in a hotel room. She and the rest of the cheerleading team were in Disney World for the UCA Collegiate Cheer Championship. This was her third year here for this event, this year they had a real chance of possibly winning. The alarm this morning wasn't going off because it was time to head Wild World of Sports Complex at Disney, where the competition was being held. This morning they were free to spend it at one of the parks.\n\n\"Is it morning, already?\" her teammate, best friend, and hotel roommate Rachel grumbled from the other bed.\n\n\"Unfortunately, yes.\" Abbie replied, her tone matching Rachel's. \"I hit snooze, so we have ten more minutes.\"\n\nRachel didn't respond. Abbie closed her eyes, but her mind started to fill with thoughts of what lay ahead for her day. Those thoughts brought emotions of nervousness, trepidation, excitement, and arousal. Last night she had fallen asleep, while running through her head, reasons why she wouldn't go through with the plan for today. This morning she was resigned to the fact that there was no way to get out of it and to be able to maintain her pride and status with the group.\n\nAbbie sighed as she accepted that she would be spending the day at Animal Kingdom, one of the four Disney World parks, wearing a remote-controlled vibrator. Two other team members would have the ability to control it and she wouldn't know who they were. She would be able to guess, the Bluetooth range was about twenty to thirty feet, so it would have be someone fairly close to her. She suspected that Rachel would be one of them but had no idea who the other one would be.\n\nThis had been a tradition among the senior cheerleaders at the annual cheer championship. Or at least a tradition once the technology was available. Abbie was in some ways a victim of the invention of Bluetooth and smartphones. Her fate being sealed when her teammates choose her as the captain this year. No one really knew how it had started, or even how it had become a tradition, but it was now in its tenth year. There were stories about it being a way for the captain to show she could stay calm, even under tremendous distraction, and that she could exercise self-control and ignore her own needs.\n\nThe alarm sounded again, Rachel cursed but threw her covers off and headed into the bathroom to shower. Abbie chuckled at her best friend; she was definitely not a morning person.\n\nAbbie got up and laid her clothes out. She had chosen one of her tighter thongs to help make sure that the vibrator stayed in place. She had also chosen one of her more padded bras. This was done to hide what she knew were going to be very erect nipples. The whole team would be wearing a matching gold tee shirt with the school name and mascot on it, along with purple sequined Minnie Ears. A pair of purple, short, running/athletic shorts, that would accent her butt while showing plenty of leg completed her outfit.\n\nThe tee shirt and shorts would be snug or even tight. Rachel was a curvy girl and most of her clothes fit her tightly. Her friends were envious of both her 36 D perky boobs and her well rounded, almost shelf ass. At five foot four inches tall, those curves made her both cute and hot. She knew that men would be checking her out all day. Some of her friends found it creepy when guys their dad's age checked them out. Rachel actually got a little turned on by it.\n\nRachel had come out of the shower and with a shit eating grin on her face said. \"Ready for today?\"\n\nAbbie nodded, smiled and moved to the shower. She had felt her cheeks redden at Rachel's question and realized she hadn't been able to look her in the eye. She also felt a slight amount of arousal and realized that she was ready and was maybe even looking forward to it.\n\nWhile she showered Abbie thought about her sex life. She had lost her virginity at age eighteen, the night she graduated from high school, in the missionary position, it was a very quick event. It was a parting gift to her high school boyfriend. She knew that when they went off to different colleges they wouldn't last.\n\nThrough her college years she had never had a long-term boyfriend. It seemed like each year she would have a steady boyfriend for about four to six months, but something would derail the relationship. She had also had a couple of short term, primarily sexual, relationships. The sex with some of them was good but it wasn't mind blowing and orgasms during the sex were difficult to achieve. Most of the guys were just looking to get off and didn't focus on making her feel good at all.\n\nAbbie did enjoy giving blow jobs. She liked the power of it and did enjoy making boys feel good. There was also part of her that realized that, while none of them would ever say no to a blow job, it was normally her tits and ass that had attracted them to her. By denying them a chance to fuck her, she felt like she stayed in control.\n\nShe finished her shower, toweled off and stepped back into the room. Rachel just looked at her and grinned. She knew that Rachel was very much looking forward to today. Since they were best friends, they talked about their sex lives with each other. Rachel was in a steady long-term relationship. She had always been able to orgasm easily and her boy friend regularly got her off with his mouth. She new that Abbie was the opposite and was excited at the potential of her having several orgasms today.\n\nBoth girls blow dried their hair and went with simple high ponytails. Abbie was a blonde and Rachel was a redhead. Both often received complements about their hair. The ponytails would keep their hair off their neck in the hot, sticky Orlando air and would also be part of the good luck ritual they would be participating in later.\n\nThey added some eye makeup. Primarily eye liner and mascara with a touch of purple eye shadow. They each had blue eyes and were often told how beautiful they were. Because of this, they rarely were in public without some eye make up to help make them stand out. When they did their heavy cheer makeup their eyes were model beautiful.\n\n\"Okay, are you ready?\" Rachel asked Abbie.\n\n\"I guess so.\" Abbie let out a deep breath.\n\nRachel dug into her suitcase and pulled out a box. She turned and handed it Abbie who took it and held it her hands like it was a hot baked potato. She put the box on the bed, opened it and pulled out the Lush vibrator. It was an insertable silicone vibrating egg with a long thinern strand that would act as the antenna for the blue tooth. It was fully charged, and Abbie found the on button before heading to the bathroom to insert it.\n\n\"Um, do you need some lube?\" Rachel asked shyly.\n\n\"Uh, I don't think so. I am... I am sure.... that am I am already a little, uh, wet.\" Abbie said quietly.\n\nShe walked in bathroom and slide a finger down her mound and confirmed that yes, she was wet, and that her clit was already a little swollen. The silicon egg slide easily inside her and she stepped back out into the room moving quickly to her clothes. She pulled the thong up under her towel and situated the antenna, so it held upwards by the edge of panties.\n\nWith her back to Rachel, she dropped the towel and quickly finished dressing. They had chosen to wear tennis shoes today, sacrificing style for sensibility, knowing they would be walking many miles. Giving each other a once over, they proclaimed to each other they looked fantastic. Securing their Magic Bands to their wrists, setting the Minnie Ears on their heads, and picking up their small drawstring back packs they stepped out the door.\n\nThe team had agreed to meet at the Pop Century Food Court and grab a quick bite to eat before heading to the park. The gold tee shirts and purple Minnie Ears stood out and they were all able to quickly find each other. Groups of two and threes would go off and grab something to eat and then return to the ever-expanding tables they occupied.\n\nAs you can imagine a group of 24 cheerleaders can make noise and draw attention. A group of nineteen to twenty-one athletic and attractive girls can really draw attention. This is especially true of frazzled Disney dads. It was both sad and humorous to watch the Disney moms catching their husbands checking out the girls.\n\nAfter gulping down their breakfast the group headed to the bus stop. The bus stop at Pop Century was famous for long lines, but with the Sky Liner now available to get to Hollywood Studios and Epcot there was significantly less people out front and it looked like most of them were waiting for a bus to the Magic Kingdom.\n\nAbbie had gotten to the point where, unless she was walking, she wasn't as constantly aware of the vibrator in her. There was no way she would forget it was there and was a little disappointed that it hadn't been activated yet. She still wasn't sure who had the ability to control it. She knew it worked on a phone app but the rule was only two people were allowed to pair it to their phone. Of course, all the girls pulled their phones out to check social media and take selfies at the bus stop so if it were turned on now, she still wouldn't know who did it.\n\nRachel grabbed her. \"Let's get a selfie with Lexi and Brooke.\"\n\nThe group pulled in close together and because Lexi was the tallest, and had the longest arms, she was the one that would take the picture. Right as Lexi was ready to take the picture Abbie felt the inside of her pussy tremble and an \"Oh fuck\" escaped her mouth. The other girls looked at her then realized what had happened and laughed. Abbie said a quick sorry, the sensation had only lasted a few seconds.\n\nThe \"oh fuck\" had been heard by a couple of moms and dads who shot a dirty look at the group. Lexi showed Abbie and Rachel the picture that had been taken at the perfect time. The look on Lexi's face was perfect.\n\nAbbie looked around and tried to figure out who had turned the vibrator on. It couldn't have been Rachel because her phone wasn't in her hand at the time. She was a little surprised at how much she had felt it and how much it startled her. She knew that the app was able to change the intensity and even the type of vibration that occurred.\n\nAbbie didn't have a lot of experience with vibrators. She had only used one a couple of times. When she masturbated she preferred to use her own fingers. To really get herself off, she needs to stimulate her clit and what worked best for her was firm pressure on it while rubbing up and down. One of the rules of the Disney vibrator challenge was the captain wasn't allowed to touch herself of do anything to provide herself pleasure.\n\nA bus had turned into the parking lot and the group let out a small cheer as they read Hakuna Matata on the front of it. This was a bus that was heading to Animal Kingdom. The bus pulled up and first loaded an elderly gentleman on electric scooter and his family before beginning to load everyone else. It was going to be a full bus but not packed like sometimes happened.\n\nEveryone lined up and patiently entered the bus. Many of the dads fighting the strollers that they were trying to collapse while moms tried to wrangle their kids on the bus. The seats filled up quickly and people were beginning to stand in the aisles. Just as Abbie stepped on the bus, she felt it again. The shock of it twisted her face and she immediately grabbed for the handrail.\n\n\"Are you okay miss?\" The bus driver asked.\n\nAbbie gripped the rail tighter the vibrator still going. \"Um, yes. Definitely, thanks for asking.\" Her voice cracked as she spoke.\n\nWhile she was talking it had been switched from steady on, to pulsing. Abbie moved further back and eventually found a place to stand where she could hold onto a rail. The vibrator stopped. She looked around and saw that pretty much half the team had their phone in their hands but noticed Rachel was looking at her with a wide grin.\n\nIt started up again. It was a slow, steady vibration that Abbie would have to say felt very good. She was enjoying the sensation right now. She looked behind her and saw a husband and wife sitting on the seats with kids, who looked to be around four and six, sitting on their laps. She realized that her ass was pretty much perfectly lined up with the husband face and he was desperately trying not to stare at it.\n\nAs Rachel continued to stare at her, she laughed a little and the speed of vibrator picked up. This caused Abbie to squirm a little and she realized she was getting wetter. She suddenly wondered if the man and wife behind her would be able to smell her arousal. She was both horrified and more turned on by that thought. The bus pulled out of the lot and the vibration stopped. Abbie wasn't sure if she was disappointed or relieved.\n\nAnimal Kingdom is the farther park from all the resorts except Animal Kingdom Lodge. The ride was almost thirty minutes. It seemed like every five minutes or so the vibrator would be activated for about fifteen seconds. It was just enough to keep her on guard and enough to keep her aroused.\n\nThe antenna was silicone coated also and as some of her wetness had leaked out of her it would rub lightly against her clit. She found that if she moved some, she could get some much-desired pressure on it. She briefly wondered if she could press herself up against the pole she was using for handhold and maybe actually get off. She dismissed that idea because her panties were already pretty damp and she worried that soon you would be able see wet spot in her shorts. Plus she wasn't sure if that would be against the rule of providing herself self-pleasure while wearing it.\n\nWhen they pulled into the bus parking drop off at Animal Kingdom everyone took their turn getting off the bus. The dad who had her ass in his face on the ride over had quickly stood up behind her and she felt his crotch press against her ass. She wasn't sure if that pissed her off or turned her on more.\n\n\"Oh, sorry.\" He quickly said trying to cover up what he had done.\n\nAbbie looked over her shoulder and with a big smile responded. \"No problem, hope you and your family have a great time today.\" She chuckled at her little jab, reminding him he was a husband and father, and shouldn't be trying to grind on a twenty-one-year-old.\n\nThe girls all gathered outside bus before walking as group to the entrance. They saw some other cheerleading groups also making their way towards gate. Abbie was a little nervous about the next part. She was going to have to go through a metal detector. It would really depend on how close attention the security people were paying if the vibrator would be a problem.\n\nShe made it through the bag check no problem, but the metal detector did alert. She was asked to step to the side and the male security guard ran the wand over. It alerted each time it got just below her waist. A female guard was brought over.\n\nShe leaned close to her and quietly asked. \"Miss, is there anything in your shorts that would make that go off?\"\n\nThe reality was that the shorts were pretty tight so she was pretty much asking was there anything in your vagina that would cause that.\n\nAbbie had prepped for this but decided to have a little fun, so she responded in her normal voice. \"Piercings.\"\n\nBoth security guards' eyes instantly widened but the male guard smiled at her while the female frowned, and half heartily waved her on. Looking back over her shoulder the male guard was staring right at her ass, she walked away, his smile getting bigger.\n\nAt the main entrance they lined up to tap their Magic Bands and have their fingerprint scanned. Watching the touch point turn green for each girl's turn, they headed into the park. The ones with Fastpasses for Flight of Passage headed towards Pandora Land, the others broke into the sub cliques and headed off in different directions. Abbie, Rachel, Lexi were joined by Christy and, what was a little shocking to Abbie, Rylie.\n\nIf there was anyone on the team that Abbie didn't get along with it was Rylie. Since their sophomore year they had pretty much been rivals. They always seemed to be competing for different roles, whether it was for a specific part of the cheer routine, or some other responsibility, it had cumulated when Abbie was picked as captain.\n\nThey all wanted to ride Exhibition Everest and headed back into the park towards the ride.\n\n\"Oh, look the wait to see Mickey is only 15 minutes. Can we stop there and get a picture?\" Christy said.\n\nRachel was first to respond. \"Come on let's do that. It would be great to get a group photo with him.\"\n\n\"Whatever.\" Rylie said.\n\nThat was another reason that Abbie didn't get along well with Rylie. For a cheerleader she always seemed grumpy. The exact opposite of Abbie who was often told that she was always happy.\n\nThe group stepped into the building marked Outpost Adventures and saw a short line. It was compromised of mostly parents and young kids, but there were two groups of adults in line also. Abbie had just leaned back when she felt the vibrator turn on again. It was set on a low setting and didn't startle her this time.\n\nShe quickly scanned her friends and all of them, but Lexi had their phones in their hand. She wasn't sure why it was so important to her to know who was running it. Maybe she felt, if she knew she would have some control of the situation, although she did realize that it was more of turn on not knowing.\n\nThe line moved forward and once again the girls noticed that the dads were checking them out. At least one of the moms was almost laughing at her husband as he kept trying to discretely look at them, while not being discreet at all. Abbie looked over at Christy and saw that she had put her arms back on the rail and was pushing her chest out. That caused her to smile, Christy' boobs were possibly better than hers and she loved to display them. Most of the men were focused on her.\n\nThe vibrator had been on for ten minutes now and once again Abbie was worrying that the wetness she felt would end up showing in her shorts. She also worried that people would be able to smell her arousal. She had several boyfriends tell her, when they went down on her, that her scent was a big turn on.\n\nIt was finally their turn and the cast member greeted them with a big smile. Mickey and Minnie were finishing with a family and as they stepped over for the picture Abbie felt the vibrator pattern change. It was pulsing and was stronger than before. She did let out a quick gasp and the cast member gave her a questioning look. Ignoring her she stepped over to the group.\n\nBecause Lexi was the tallest, she stood in the middle, and the rest of the girls squeezed in close to Mickey and Minnie, who were wearing their safari outfits, since they were at Animal Kingdom. The Photopass photographer took several pictures including a few cheer poses. They tapped their Magic Bands on her scanner. Minnie made a few cheer moves and Mickey waved good bye to them.\n\nAs soon as they stepped outside the vibrator stopped. Abbie was relieved by that, 15 minutes of constant motion in pussy had her on edge. She was starting to feel a little desperate to push her fingers against her clit. She felt like just a few firm rubs, up and down against it, and she would be able to orgasm. Like on the bus, she considered finding a discreet way to push her crotch against something solid to see if that could get her off.",
        "Her relief was short lived because the arousal had caused her clit to swell. As the group quickly walked to the Everest roller coaster the silicone antenna occasionally would rub against it. Because she was so wet, she could barely feel it slid over her clit, but right now even just a little stimulation was making her crazy.\n\nUnfortunately, none of her previous lovers seemed very acquainted with the idea of foreplay and definitely not with clitoral stimulation. They pretty much went straight to penetration. Even when she got herself off, she pretty much just went right to it. This so teasing was a very new sensation to her, and she very caught between loving it and the need to orgasm.\n\nThey heard the screams of the other roller coast rides as the approached Exhibition Everest. The sign for the standby line said the wait was 20 minutes and all the girls agreed that was fine. As they entered the line que the vibrator started again. Abbie was certain that her arousal was going to begin showing with a very pronounced wet spot in her shorts.\n\nAgain, she was unable to tell who in the group was running it. She pled with her eyes to Rachel, that if was her, to please turn it off. All the rest of the girls were chatting away, but Abbie wasn't able to really follow the conversation. She was to distracted right now.\n\nThe line que had stanchions that held the ropes. Twice she tried to discreetly press herself against one of them to try and get some relief. She was chewing on her lower lip and moaning quietly at this point, while constantly moving her body. She looked up to see that two older men in the line were basically staring at her and she wasn't sure if it was, because of how attractive and curvy she was, or if they didn't want to miss the orgasm it looked like she would have any second.\n\n\"How are you doing? Having fun?\" Rachel suddenly asked and Abbie jumped.\n\n\"If it is you, I beg you to please turn it off, just for a while, please!\" She almost had tears in her eyes.\n\nRachel laughed. \"Sorry, it isn't me.\"\n\nAs they made it through the interior portion of the line with all the artifacts and typical Disney decorations the vibrator suddenly stopped. Abbie was very grateful although her body continued to fidget and move, and her breathing was definitely faster than normal. She hadn't noticed that the group had paired off with Lexi and Rachel directly in front of her as a twosome, and ahead of them Rylie and Christy as a twosome.\n\n\"How many?\" The cast member asked Christy.\n\n\"Two.\"\n\n\"Row three.\"\n\nShe repeated the question to Lexi who replied two and they were directed to row four.\n\n\"How many?\" She asked a very flushed Abbie.\n\n\"One.\"\n\n\"Row five. Are you okay sweetie?\" The cast member asked.\n\nShe nodded yes and heard the cast member loudly say. \"Single rider row five!\"\n\nAbbie realized that the others had set her up to be with a stranger. She looked back over her shoulder and saw that the person stepping out of the single rider line was a man. As she looked closer, he appeared to be in his mid-forties, possibly fifty years old. Wearing sunglasses, a baseball hat, a Mickey tee shirt, and khaki shorts she could see he was trim and looked like he kept himself in shape.\n\nAbbie took her place in the cue and looked at her teammates in front of her. She was again pleading with her eyes and by shaking her head back and forth in a no motion. Hoping the ones who had the app on their phone would honor that and not turn it on while she was sitting next to this man. They all just smiled back at her and she realized they all had their phones in their hands.\n\nOne of the ride trains pulled out and each row moved up to the gate. They would load into the next one. Abbie turned back and thought she caught the man she would be riding with, checking out her ass but, because of his sunglasses she wasn't sure. When she looked at his face, he smiled at her. She smiled back, quickly looking at his left hand and saw a wedding band on his finger.\n\nThe next ride train pulled up and the gates opened, there was a rhythmic nature to the sound of them opening and then everyone in line began to move into their seats. As soon as she stepped forward the vibrator hit her with hardest vibration so far. She almost lost her balance, while once again uttering an \"of fuck.\" She felt a hand grabbing her bicep and turned to see the man had grabbed her when he thought she was going to fall.\n\n\"Are you okay?\" He asked and quickly let go of her arm realizing she was not going to fall.\n\n\"Uh, yes, thanks.... Fine.\" She was having a difficult concentrating because of the vibrator.\n\nShe sat down and watched as he gracefully slide into the seat next to her, removed his hat and shoved it and the water bottle that was in hand, into the bag directly in front of him. He dropped a draw string backpack at his feet. Abbie followed his lead and dropped her backpack at her feet and put her Minnie ears into the bag in front of her. They both pulled the safety bars down tight onto their lap.\n\n\"Here for the cheer competition?\" He asked.\n\n\"Yes.\" Again, her answer was short because she was sure her voice would give away what was happening in her pussy right now, as the vibrator continued to pulse in her.\n\n\"Planning on doing the good luck ritual?\"\n\n\"Uh.... Yes, how did you know?\"\n\n\"Annual Pass holder. We come down here all the time, so I am familiar with a lot stuff like that. I hope it brings you lots of good luck.\"\n\n\"Oh wow. You are lucky. I have only been here for the competition the last three years. Who is we, your family?\" Right as she finished speaking the pattern changed on the vibrator and she let out an almost silent \"Fuck me.\"\n\nThe man's face got red. \"Umm. Are you okay?\" When Abbie nodded yes, he continued. \"We is my wife and I. Sometimes our adult kids come with us, usually for Food or Wine. We are looking forward to eventually bringing grandkids.\"\n\nThe ride started and left the platform and then made a quick downhill run and a couple of short loops before catching the long, slow, upward pull up the tracks. Maybe it was her arousal level, or because she liked the attention of older men, or the idea of having a little control over them. She decided she would flirt a little.\n\n\"So where is your wife right now? And you don't look old enough for grandkids anytime soon.\" She made sure she was looking right at him as she said it.\n\nHe blushed and stuttered a little as he started to reply. \"She pretty much doesn't do any of the coasters. She prefers the dark rides, parades, shows, etc. so I try and do as many single rider ones as I can, and she shops, or people watches. I am meeting her over at Pandora after this.\"\n\nThey crested the top and the coaster picked up speed. You heard some of people yelling and then the ride came to a sudden stop facing uphill. It had been designed to look like the track was broke. Abbie reached behind her and pulled the hair tie off and got ready to throw it to the side. No one is really sure how this had become a tradition, but there were thousands of hair ties on the ground on each side of the coaster, thrown there by cheerleaders supposedly for good luck.\n\nThe coaster released and started backwards, and the hair ties flew from the cheerleader's hands. The ride hadn't traveled more than a foot or so when it stopped.\n\n\"What happened?\" Abbie asked the man next to her, thinking as a Passholder he might know. She knew that right now they were supposed to be going backwards very fast.\n\n\"I don't know. I hope it isn't broken down. I got stuck up here once before. We sat here for about twenty minutes and then eventually cast members walked us down the inside.\"\n\n\"Really? Please don't let that be what is happening. Not sure I can sit here for twenty minutes.\" Abbie wasn't sure who she was pleading with when she said that. What she really meant was that she didn't think she could take the vibrator continuing for twenty minutes. She squirmed in the seat.\n\n\"Well unfortunately, I am not sure we have a choice. Sorry.\"\n\nThe vibrator continued and now that they weren't moving, and there were no other distractions, Abbie realized that it's position inside her had changed some. It seemed to be pushing up to the area that her friends called the G spot. She had never experienced stimulation to that spot but was possibly experiencing it now. Whatever it was vibrating on, it felt fantastic.\n\n\"Please remain in your seats. The ride will resume momentarily.\" Was announced over the speakers.\n\nHer breathing was getting faster and she kept squirming in her seat. In an effort to keep from moaning out loud she hummed lightly.\n\n\"You okay?\" The man asked.\n\n\"I.... uh... will be fine. Thanks, the problem is kind of, of.... personal.\" It took a lot of concentration for her to get that out.\n\n\"Okay. Sorry, didn't mean to be nosey.\"\n\n\"I am sorry. Jesus, fuck. Sorry. Not trying to be rude. Really.\" Abbie responded.\n\nShe was grabbing the lap bar with both hands and squeezing it tight. She wondered if she could get in a position where her crotch and clit could possibly push against. Her whole body was on fire and she thought that if she could orgasm it would give her some relief. The only good thing, was she thought the lap bar was preventing her row mate from seeing what had to be her soaked shorts. She could feel her wetness running over her taint, and her thong was long since drenched and unable to hold anything more.\n\n\"Please remain in your seats. The ride will resume momentarily.\" Again, from the speakers.\n\nAbbie was going crazy. Without the thrill of the ride moving the only thing she was aware of was the pleasure between her legs and inside her. She either needed the vibrator to stop or she needed to orgasm, pretty much right now.\n\nBeaten she finally yelled. \"Rachel if it is you, please turn it off.\"\n\n\"It isn't me. I promise.\"\n\n\"Fuck, fuck, fuck.\" Abbie was squirming in the seat.\n\nAlmost felt like she had suddenly lost control the ability to control herself, one hand darted between her legs. As soon as she pressed down between her thighs she stopped. She wasn't going to break the rules. As the captain she was stickler for the rules, and she didn't tolerate anyone on the team breaking them. The rule was she wasn't allowed to touch herself while the vibrator was in her. She brought her hand back to lap bar and both hands grabbed it tightly.\n\nShe tried to reposition her butt in the seat hoping that might move the position of the vibrator and it would find a spot that wasn't driving her as crazy as she was going now. The only thing that did was have the antenna lightly slid across her clit which was possibly worse.\n\nAgain, she mumbled \"fuck.\"\n\nHer seat mate was visibly worried about her. \"Are you sure you are okay? I have no idea what is going on, but something is wrong. Can I do anything for you?\" His tone was sincere.\n\nAbbie wasn't sure what to say to him and wasn't sure she could really talk coherently right this minute. Then a thought hit her. He asked if he do anything for her. There was nothing in the rule about someone else helping you get off was there? Could she ask him to help? Would he do it? He was married but it was obvious he thought she was attractive.\n\n\"Are you in pain? Do you feel claustrophobic? Or do you... uh... I hate to mention it, but do you need to pee?\"\n\n\"Please remain in your seats. The ride will resume momentarily.\" By now the announcement was more of a taunt then a comfort.\n\nAbbie laughed when she thought about two of the questions the man had just asked and thought, was she in pain? In some ways yes, she was in pain, but it was an almost exquisite pain that was she was sure could be cured with an orgasm. She also realized that with all the squirming she probably did look like a toddler that needed pee.\n\n\"Oh fuck, Jesus, fuck.\" Abbie said that a little louder this time. \"No. Not claustrophobic and don't have to pee.\"\n\nThe man reached out and put his hand on her forearm. \"Please tell me what is going on and if I can do something.\"\n\nHis touch came just as Abbie felt like her vagina was going to literally explode, causing Abbie to lose any sense of propriety. She grabbed his hand and yanked it down into her crotch. He didn't stop her but when she turned to face him the look of surprise was evident on his face even with his eyes hidden by his sunglasses.\n\n\"Please, for the love God push your hand against me and rub it up and down. I am begging you!\"\n\n\"What?\"\n\nHis hand started to pull away and Abbie grabbed it again and put it back.\n\n\"Please, I need to fucking cum. There is a blue toothed controlled vibrator in me and if I don't get off soon, I am going to exploded. Please, please, fucking help me!\"\n\n\"Are you sure?\" His voice definitely indicated the hesitation he felt. \"How old are you?\"\n\n\"Yes, I am fucking sure. I am twenty-one. I am an adult. Please.\" Tears were now coming out of her eyes and her voice was more desperate with every word.\n\nThen she felt it. His hand cupped her mound over her shorts. A slight feeling of relief built in her. Then he pressed harder and she could feel the pressure on her clit.\n\n\"Oh thank you. Please keep doing that.\" She pushed her hips forward to increase the pressure his hand was providing.\n\nThen he moved his hand up and down over her shorts.\n\n\"Please remain in your seats. The ride will begin momentarily.\"\n\n\"Oh my fucking god, just like that.\" She yelled out. This was as loud as when she had begged Rachel to stop the vibrator, all the other time she had kept her voice down. She was aware that there were others that could hear her.\n\n\"Shh, try and keep your voice down. I am going to get you off I promise. You are so warm and wet right now.\"\n\nAbbie closed her eyes and felt him press harder as he moved his hand up and down. She could feel her clit begin to throb. The words he had just said adding to her arousal. For the first time a man was focusing strictly on her pleasure.\n\n\"Thank you. Keep doing that, just like that, please, fuck, any second, almost there, fuck, yes.\" She focused on keeping her voice quiet.\n\nShe brought her hands to her mouth to stifle the scream that was getting ready to come out of her as the orgasm began to rush over her. She felt it through her entire body. Something in her let go and suddenly her ass and thighs were wet. She realized that she had just squirted, something she had never done before. Her clit was now too sensitive to be touched, and as she grabbed the man's hand and moved it, she could feel the wetness on it.\n\nThe vibrator continued to work inside her and she realized that her arousal level already was coming back, possibly even faster this time. She looked over at the man and smiled. He smiled back at her and brought his hand, first to his nose and inhaled, and then he sucked his fingers into his mouth and winked at her. Abbie's arousal immediately went up even more.\n\n\"Jesus, you keep doing stuff like that and I will need you to give me a hand again.\" Abbie winked at him.\n\n\"Just let me know. Glad I can be helpful.\"\n\n\"Please remain in your seats. The ride will begin momentarily.\"\n\n\"Did that happen when you were stuck? The announcements? How long do you think we have been stuck here?\" As she spoke her voice changed some and she began to shift in her seat like she had been doing before the orgasm.\n\n\"Yes, and I think we have probably been here about ten minutes.\"\n\n\"Oh God, it feels like longer but if it is going to be another ten minutes, I am definitely going to need help again. Fuck, it feels so fucking good. Especially now knowing that I can get some relief.\" Her words came out a little breathless.\n\n\"Okay. Just say......\" He didn't get a chance to finish when the coaster suddenly released, and they started to fly backwards.\n\nAs they picked up speed Abbie added the feeling of adrenaline rushing through her body to the amazing feeling between her legs. Again, all her senses felt like they were on fire. Suddenly they came to a stop again. From past experiences on this ride she knew they would switch to going forward now. She put her hands up in the air to add to rush she would feel as the sped down the track and through the turns.\n\nHer row mate stuck one hand up in the air and as soon as they started downward, he shoved his other hand between her legs again. Initially Abbie was shocked but that quickly changed to desire and she pushed her pussy forward against his hand. He cupped her again and now knowing what she needed made Abbie orgasm again from the hard-direct pressure on her enlarged clit.\n\n\"Fuck me! Holly Jesus, God, Fuck me.\" Abbie screamed out. Fortunately, it was mostly drowned out by the screams of everyone else on the roller coaster. Thankfully, she was pretty sure she didn't squirt this time, but she knew her thong and shorts were soaked anyways.\n\nAfter few more loops the coaster began to slow down as it made its way back to the platform. Abbie suddenly felt exhausted. She also realized it was going to look like she had peed herself when she got up and was getting embarrassed by that. The man next to her began to pull his hat and water bottle out of the bag and she pulled her ears out and put them back on her head.\n\nThey crept up to the disembarkation platform and suddenly stopped. The lap bar released, and it was time to exit the ride. Abbie was resigned to the embarrassment of looking like she had wet herself. Out of the corner of her eye she saw her new friend screw the lid off his water bottle and, while standing up, he lost his balance, falling over towards her before his arm caught him. Suddenly his water was pouring all over the front of her.\n\n\"Oh, Miss, I am so sorry. Umm... I don't know what to say. I am really, really sorry.\"\n\nAbbie might have momentarily fell in love with him when she realized what he had done for her. She looked up and saw all her teammates staring at them. A cast member was moving quickly over to see what had happened. He backed out of the ride and was standing on the platform as she moved to get out.\n\n\"It is okay. These shorts dry really fast. Thanks for keeping me calm while were stuck.\" She smiled from ear to ear at him as she exited the coaster.\n\n\"It was my pleasure.\" He responded and winked at her.\n\nAbbie suddenly realized that the vibrator had been turned off. Her friends yelled at her to come on and she turned and went with them.\n\nThey stopped to wait for their ride photo to show up. It was taken right after they started the big forward drop. When it popped up Lexi, Christy, Rylie, and Rachel all had their hands in the air with big smiles on their faces. Abbie's hands were up in the air but the look on her face was different, it was a combination of surprise and pleasure. The man sitting next to her only had one hand in the air. Rachel was the first to recognize where his other hand was and the first to recognize that look on Abbie's face was her orgasm face."
    ],
    "authorname": "fireandlace0533",
    "tags": [
        "remote control vibrator",
        "public",
        "stranger",
        "amusement park",
        "forced orgasm",
        "reluctant orgasm"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/good-vibrations-at-disney"
}