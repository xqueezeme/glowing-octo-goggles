{
    "title": "Changed Redux Pt. 01",
    "pages": [
        "Authors Note: This story depicts graphic lesbian sex and mind control. All character are fictitious and over the age of 21. \n\nBack in 2004, I did something truly terrifying. I pushed the Literotica 'Submit' button and for the first time put something I created up for public consumption. Anyone who has ever spent many, many hours creating something from nothing can tell you it's not an endeavor to be undertaken lightly. Public ridicule of something you pour your heart and soul into can be exquisitely painful. If you want proof of this just look at how many would be authors only ever submit one story then give up. \n\nMy first submission was Changed and it was submitted in four chapters under cheerful_deviant, my previous pen name. I ended the series at the 4th chapter though I probably could have done a lot more. It was my first attempt at writing and like many other first time authors, I wrote the story in first person, a style I have since largely moved past. Recently I decided to go back and reread some of my old works. In doing so was a little surprised at how much my style has changed in the last decade. While I enjoyed revisiting my old characters, I began to think I could do better by them now with a decade more life and writing experience under my belt. So, mostly as a personal challenge to myself, I decided to revisit one of my old stories and see if I could do better. This story is the result, or the first part of it anyway. At first I had no intention of submitting it but after some introspection I decided to upload it for your enjoyment. It is not an exact copy but rather a re-imagining of the story, following the same characters and the same basic plot but hopefully a bit deeper and more evolved. \n\nFor those of you that have read my other works, you will know that I tend to be fairly wordy. If you're just looking for a quick sex scene or two, this may not be your cup of tea. Also, as with all my stories, it is strictly lesbian. I believe there is something incredibly sensual and beautiful about love between women and I enjoy writing about it. Sorry boys. \n\nAs always, a heartfelt thank you to all the readers and especially those that take the time to vote and leave feedback. Please remember that I, like all the other authors on this site are not professional writers. We create these stories in our free time for your enjoyment. We get no reward for all the time and effort beyond the feedback we receive from all of you.\n\nHaving said all that, I hope you enjoy my words.\n\n~CD\n\n<center>* * *</center>\n\nPrologue ~ The Engineer\n\nRain drops pattered steadily on the windshield as Mary Calise sat in the front seat of her Subaru, studying the dark gray overcast with resignation.\n\n\"Well, this is going to suck.\" She muttered to herself as she pulled the door handle and stepped out into the steady, cold, New England, spring rain. She put on her hardhat which she hoped would give her at least some measure of protection from the murk but after walking only a few yards, the water was already dripping off the helmet and down the back of her neck. She sighed and kept walking. \"Last day.\" She muttered to herself as she passed through the ancient chain link fence that surrounded the old shipyard complex. \"It's Friday. It's a long weekend. Last day, last stop.\" She muttered, thinking about three days of not having to do... well, this. \n\nBuilt during the height of World War II, the huge sprawling shipyard had once bustled with activity. Thousands of men and women had been employed here, building the iconic Liberty Ships that had transported everything form Sherman tanks to Hershey Bars across the world's oceans. But now over eight decades later, it was nothing but a vast collection of broken asphalt, decaying machinery, rusting building and weeds. Mary thought it was definitely the creepiest place she had ever had to work and dreaded her monthly tips here to take ground water samples. \n\nNormally she enjoyed her work as an environmental engineer. She liked seeing different projects and traveling all around, seeing different parts of the Northeastern US and even into Canada. She liked meeting new people and working on solutions to numerous different environmental problems. More than anything, she liked how her job kept her out of the office about eighty percent of the time. But today, she thought to herself, the office was sounding mighty fine. \n\nHer boot slipped in a muddy patch of the battered old roadway and she stumbled, nearly dropped her toolkit as she scrambled trying to regain her balance. In the process, her hard hat fell off her head and landed with a hollow splat in the mud. \n\n\"Fuck.\" She muttered under her breath as she bent down to pick it up. Cradling the toolkit under one arm, she wiped off the muck with a gloved hand, trying hard not to think about how many contaminants might be in the mud. Earlier in the century, environmental protection hadn't even really been thought of yet and all sorts of contaminates were used in manufacturing. Lead, mercury, asbestos and cyanide were used and dumped regularly. Not to mention solvents, petroleum products and even radioactive materials. Big industrial facilities like this, particularly government owned ones, could have a veritable cocktail of hazardous waste in the soil, slowly mixing and spreading over the decades. Plopping the helmet back on her head, she resumed her trudge through the murk. \n\nTwo hours later she was taking a water sample from the last monitoring well on her list. The rain had only gotten worse while she was away from her car and was now a steady deluge. Mary was soaked to her skin despite her raingear and she was totally, completely and thoroughly miserable in every possible way. \n\nThe last well was on the side of a small drainage ditch beside an ancient gantry crane that looked to Mary like the skeleton of some giant, prehistoric giraffe. The faded paint had likely once been blue but was now so chipped and covered in rust stains as to be almost completely unrecognizable. Old rusting cables and wires hung from everywhere and the entire structure creaked ominously with every gust of wind. She told herself that the thing had been standing there for eighty years and that the likelihood of it falling down at the exact moment she was standing under it was ridiculously small, but it still didn't make her feel all that much better. \n\nFifteen minutes passed as she took her last sample and the storm had increased its fury to the point that she was now beginning to get seriously nervous about the long trek back to her car. The wind was screaming through the crane overhead and bits of trash were swirling around her as the rain slashed her face. She had just closed the well cover and screwed the cover onto the last sample bottle when something white, cold and wet blew into her face. She let out a startled scream and took an instinctive step back before she realized that it was only an old plastic shopping bag but it was too late. Her foot had slipped off the edge of the embankment and she tumbled backwards down the slope. Rolling over several times on the quick trip down, she landed face down in a garbage strewn drainage swale that was full of muddy, brownish, evil looking runoff. She sat up spluttering and gasping for breath while frantically wiping the muck from her face. Scrambling back to the slippery bank she dropped to her hands and knees and spit repeatedly trying to get the foul ooze out of her mouth. \n\nAfter several seconds of spitting and quietly cursing to herself, the shock started to wear off and she realized that her arm was killing her and that her side didn't feel too good either. Looking herself over she didn't see any blood but thought she probably had a whole collection of new bruises to show for her clumsiness. \n\n\"Well, that was fun.\" She muttered then cursed quietly before spitting one more time. As she was looking down she noticed something gleaming in the muck between her hands. A bit of something silver gleamed dully in the fading grey light of the late afternoon. Scooping up a handful of the brown ooze, Mary squeezed away the mud and was left holding a large, silver ring with some kind of engraving around the outside. The slashing rain ran in rivulets down her arms and helped to wash way the grime till Mary could see that the engraving was actually an eight pointed star. \n\n\"Looks old.\" She said to no one in particular. In reply, a flash of lightening lit the shipyard, throwing wild shadows around the deep, narrow gully. Only a few heartbeats later, thunder boomed around her, the noise rattling the old buildings and echoing off into the distance. \n\n\"Time to go.\" She said, slipping the ring onto her pants pocket before scrambling up the embankment, grabbing her equipment and starting off for the shelter her distant car. \n\n<center>* * *</center>\n\nChapter One ~ The Sorceress\n\nThe door to her Subaru closed with a solid thump as Mary bumped it closed with her hip while trying to balance several bags at once. She could have just made a second trip but more than anything at that moment she just wanted to get from her car to her condo in only one trip to avoid getting soaked by the rain yet again. \n\nThe six hour drive back to her rented condo on Cape Cod in Massachusetts from Maine had been made even more miserable than usual by the seemingly endless, driving rain. After over a week of almost nonstop rain she was beginning to think that soon all of New England would simply float away or perhaps just turn to mud and wash out to sea. According to her phone, the forecast for the weekend was finally for some sun. She hoped it was right. \n\nLooking around the dark parking lot she noted that the blue Volkswagen GTI owned by her roommate Julia was missing. Julia managed a local watersport and surf shop in town and with spring coming on, she was busy gearing up for the start of the new season. Realizing that Julia wasn't home made Mary both a little sad and also a little bit relieved. It would have been nice to be greeted by a smiling face after a completely miserable day, but peace and quiet would be nice as well and she would get precious little of that once the bubbly and ever loquacious Julia got home. \n\nStumbling up the front steps and somehow managing not to drop anything while unlocking the door, she got everything into the front room and dropped it all on the floor in a pile, nearly knocking over one of Julia's surfboards which was precariously balanced against the wall. Catching the board with one hand and cursing under breath, Mary wondered for the hundredth time why her roommate really needed four different surfboards. It wasn't like their small condo had a lot of space to spare. Righting the board, she looked down at the pile of dirty tools, soggy clothes and muddy boots for several moments before deciding she would just leave them there to dry out and deal with it all in the morning. A hot shower was most definitely the first order of business right now. \n\nWalking into the bathroom she flipped on the heater and turned on the faucet. As the water started to flow the thought struck her that a bath actually sounded much better than a shower and she reached down to flip the stopper closed. Once the tub was full she stripped off her dirty clothes and threw them in the far corner. Something hit the tile floor with a metallic clink causing her to pause and turn back to the dirty clothes. She picked up the dirty jeans and then the still damp shirt but didn't see anything that would have made a noise. She was just putting everything back when she saw the silver ring she had picked up earlier lying on the floor next to her shoes. She picked up and set it on the corner of the sink before turning and slipping into the steaming water. \n\nShe sighed happily as the heat soaked into her bones and started to wash away what felt like countless layers of grime. Lying in the comforting liquid warmth, Mary let her mind drift for a time from her job to thoughts of her upcoming vacation to her last boyfriend whom she had dumped a few weeks ago after catching him shopping around on Tinder. What an asshole he had been. \n\nEventually her mind came back to the present and she glanced over at the ring beside the sink. Stretching over and picking it up she again noticed the eight pointed star engraving. Looking closer she now saw that the entire ring was engraved in intricate, interlocking geometric patterns with many smaller version of the star woven into the pattern. The more she looked the more she realized both how incredibly intricate the pattern was and how worn it all was. She began to wonder how old the ring really was. Was this something lost by one of the workmen at the shipyard back during the war or was it maybe even older than that? \n\nActually, the more she looked at it, the more she realized it didn't really even look like a ring that would be worn on a finger. It was far too large even for most men. And it wasn't flattened on the inside like a ring normally was. It was round in cross section. Looking at it she was reminded of something but couldn't quite place it. After a few moments of twirling the ring in her fingers it came to her. It looked almost exactly like one of the steel rings that were used on an antique carousel she had ridden as a child. Every trip around you would grab a ring, hoping to get the brass ring that would earn you a free ride. But most of the rings were just steel and they looked almost exactly like the one she was now holding. Well, except for the engraving of course, she told herself. \n\nTurning it around and around in her fingers she saw that even the inside of the ring was engraved in the same geometric pattern. As she looked she began to feel an odd, almost distant sensation in her head. Somewhat like being lightheaded but not quite. It was more subtle than that, more... more... something. Without thinking, she held to ring closer to study the markings better. The room around her faded and the markings started crawling around the ring as if alive. A part of Mary's mind knew she should be frightened or at least startled by this but she kept watching the tiny, intricate likes and grooves, whorls and stars, crawl around the ring. The miniature stars twirled and pulsed, the lines wriggled and danced in a pattern that seemed both random and orderly. Mary's eye's locked onto the largest star and her mind began to fall into it's spinning depths... \n\nThere was an audible snap and Mary blinked her eyes, startled. Looking around in confusion she almost dropped the ring in the tub. Fumbling with wet hands, she managed to catch it then held it up again. What the hell had just happened? She shook her head trying to clear the fuzziness. Had those engravings in the ring really been moving? She looked at them again and it all looked just as it did when she first picked the ring from the mud. Nothing moving, just an old ring. It even looked to be about her size. Hadn't the ring been bigger before? Apparently not, ring's don't just change size on their own. She looked again at the engraved, eight pointed star and purely because it seemed the thing to do, she slipped the ring onto the thumb of her left hand. \n\nAs soon as the ring was fully on, it shrank down in size, fitting it self snuggly around her thumb. Mary twitched in surprise but before she could even make a move to try and remove the ring, there was a tremendous thump that reverberated around the room and made the whole condo shudder. The water in the tub jumped and splashed out across the floor and the bottles of shampoo, bars of soap, razors and the like that had been sitting around the tub went flying about the room. The light over the mirror popped in a flash of sparks and the room was plunged into darkness. \n\nMary gasped and she fell back into the sloshing water as the breath was knocked from her by the impact. She lay there dazed for several moments trying to catch her wind as everything around her went silent. The bathroom heater had stopped running and even the rain outside seemed to have stopped. The only noise was the quiet sloshing of water in the tub and her own ragged breathing. \n\nSlowly, she raised her left hand and felt for the ring. It was still there, now fitted tight to her skin. Cautiously, she tried to pull the ring off. When it didn't move she tried harder. Nothing. It was stuck fast. And now she began to notice something new, the ring was getting warm. No, not just warm, hot! She could actually see it now in the darkness, the engraved lines were beginning to glow with a warm, orange light. Frantically, she yanked at the ring but it was too tight and her wet hands couldn't get a grip. \n\nThe ring was burning hot now, the glow turning from orange to yellow and getting brighter. She gripped it again to try one last desperate pull but paused. The sensation was changing, the burning pain was cooling, turning into a icy, tingling numbness that was spreading through her hand and quickly up her arm. The light was white now and bright enough to light the small room like a sunny day. Mary couldn't even look directly at it now. The tingling numbness was spreading quickly down the length of her body. When the tingling climbed her neck and head, she was overcome almost instantly with a heavy, leaden stupor. The panic slipped from her mind as she sank deeply into the tub, completely exhausted and unable to move. The hand wearing the ring fell onto her chest, the thumb bearing the ring nestled between her breasts. Her breathing slowed, her heart slowed, her thoughts came slower... slower.... slower... she slept. \n\nSome time later, Mary slowly came back to the world. Lying in the water which was going cold, only barely conscious, Mary distantly though she could now hear something new. A whispering of sound, almost like singing or maybe chanting. After another span of time, maybe seconds, maybe days, Mary's numb mind couldn't tell, the sound resolved into the sound a singing, a woman singing. The tune was simple and repetitive but the words were foreign to Mary. But the more she listened to them, the more they started to make a kind of sense. It wasn't like she could understand the language now, it was that the words were slowly changing to English. Then the simple chant stopped. \n\nMary tried to look around to see where the sound was coming from but couldn't move her head. Even rolling her eyes around the room took a supreme effort. The room was empty. \n\n\"Who...\" she mumbled to the empty room. \n\n\"Yes, my Lord?\" The words, feminine but with a strange accent echoed oddly in her ears. It almost sounded as if the words were spoken directly in her head. It took Mary's fogged mind to come around to the fact that she was naked in the tub and that she wasn't alone. A thrill of shock brought Mary back a little more into herself and she tried again. \"Who.... are... you?\" Taking a breath she added, \"Where are... you?\" \n\nThere was a long pause, then, \"I am here with you, I am the ring on your finger my... Lord? Wait, are you female?\" The voice was definitely not in the room Mary could now tell, it was speaking directly into her thoughts. The voice was in her head. \n\nMary looked down at the ring on her thumb, sitting between her breasts and before she could answer the voice in her head apparently answered it's own question, \"You are female! I can see you are! Oh no, no, no... this is all wrong. The ring. The magic! Oh, I need to stop this now...\"\n\n\"Stop what?\" Mary managed to mumble. \"Who are you? Are you the, in the, uh, part of the ring?\" She stammered. Her mouth seemed to be working better but her mind was still sluggish. She was only now really coming to grips with the idea that she was talking to some... entity, that was somehow attached to the ring stuck on her thumb. At least she thought so. She also wondered if maybe this was all some kind of dream or something. Maybe she had fallen in the tub and hit her head? Was she hallucinating? Maybe it was some hazardous chemical she got exposed to at work? ",
        "The voice swam through her head and to Mary's mind it sounded somehow snappish, as if distracted, \"I suppose you could say I live in the ring, yes. My soul is bonded to it, to the magic of the ring. I can no more leave the ring than you can leave your body. The difference is, I am not fully in charge of the ring. The magic has a, well, a mind of its own, so to speak. It doesn't have thoughts per se, but it does have needs. The voice paused then continued Now, please be quiet for a moment, I need to try and stop this. The magic can't be bonded to a woman. It wasn't supposed to work that way.\"\n\nMary tired a few more times to talk to the voice but it refused to answer and she eventually gave up. Oddly, she didn't feel the panic that she thought she had every right to be feeling right now. Actually, she felt quite calm and almost detached, as if watching these odd events happening to someone else. But as time passed, Mary's mind continued to clear and with that clarity a sense of alarm started to creep up Mary's spine. She looked down at the simple, dull silver ring on her thumb. She wanted to try and take it off again but her body refused to respond, she still couldn't move. Why wouldn't her body work? Was she really paralyzed? That thought more than anything finally set the beginning stages of true panic lose in her mind. \n\nAfter a few minutes a new sensation started creeping slowly over Mary's body. A feeling of warmth crept leisurely through her veins, as if her body was being gently heated from the inside. Looking down, she could see the ring had started to glow again, red this time. As the minutes passed and Mary lay helpless the warmth increased and her body began to respond. Her breathing deepened and the numbness in her body faded but she still couldn't move. She could once again feel the water surrounding her but try as she might, she could not move. \n\nFinally the voice returned. \"It's no use.\" The voice now sounded strained and exhausted. \"I cannot stop the Bonding, it has already gone too far and the magic is hungry for a new host. It has been without a host for so long , it... no, we have been so alone for centuries and now the magic won't be denied. I'm sorry my Lor... my Mistress.\" The voice corrected herself. \"We will be Bonded.\" \n\nMary's alarm took another big step towards full blown panic, especially at the word, 'hungry'. \"What do you mean Bonded? What is happening? Who are you?!\" Mary screamed to the empty room. \n\n\"I will try and explain, but time is short, the Bonding has already started as I'm sure you can feel.\" The voice said, then continued, \"The ring you put on is enchanted. It is an ancient magic, a powerful magic that I created eons ago. And it is a magic that through my own error, I was captured by and have been enslaved by for all those countless years. It is a magic of manipulation and. The magic has the power to control completely but it was a magic with a purpose. It... it was never meant for a woman to wield it. I don't know what will happen.\"\n\n\"Magic?\" Mary asked. \"But, magic isn't real. It's just something for book and movies and, and, and...\" she stammered, \"and kid's stuff. It's not real!\" The panic that had been slowly building was now approaching a rolling boil. Mary was becoming acutely aware that the warmth that was spreading through her earlier was now changing in quality. It was no longer a simple heat, but was slowly turning into a hot flush that felt disturbingly like arousal. An arousal that was now increasing in intensity with worrying speed. Mary tried once again to get up, to lift her head, to move her arm, anything, but it was no use. She was still completely paralyzed except for her face. \"And why can't I move?\" She said. She had intended it to sound a little harsh but was dismayed when it came out sounding breathy, almost husky. Just the sound of it sent her arousal even higher and she had to resist the urge to moan. \n\n\"Oh, I assure you, the magic quite real.\" The voice said. \"You can feel it's power right now, flowing through you. And that is only a small fraction of it's power. Just the little that is required to align our minds and feelings.\" \n\nThe word 'our' caught Mary's attention even as the feelings of heat and arousal were now transforming onto genuine passion and pleasure. \"What do you mean, 'our'? You mean you.... oooooh.\" she broke off as a wave of pleasure rippled through her and she was unable to stifle a soft moan. \n\nAt the same time, the voice in her head also moaned with bliss. \n\nThe twin moaning was immediately followed by an intense flush of embarrassment as Mary she realized that she and whoever this woman in her head was, were sharing the same experience. The realization was mortifying but also, she was afraid to admit, intensely exciting in a way that entirely new to her. Getting control of her passion and her wanton thoughts for a moment, she managed to ask, \"Are you feeling what... I feel.\" She gave a small gasp, swallowed hard, then continued, \"Or are you just, well, getting magicked too?\" \n\nAnother wave of bliss slid through Mary's body at that moment and the voice in her head moaned loudly, eliciting a sympathetic surge of pleasure in Mary's mind but she managed to control herself and keep quiet. When the voice finally spoke, it had a new, throaty, husky quality that almost made Marry gush. Something in the back of Mary's mind was deeply troubled by this reaction. Why would she be responding to a woman's voice in that way? She had never been interested in women before. Had she? \n\n\"We are being bonded together by the magic. We will be one. I will see what you see, hear what you hear, taste what you taste...\" another gasping moan, then\"...feel what you feel.\"\n\nJust the idea of this rich voice with that exotic accent, this person, this woman, always being in her head from now on sent Mary over the edge and she cried out in rapture as her sex contracted hard. She gasped as a wave of the most intense pleasure she had ever experienced flooded through her body in a shatteringly powerful but at the same time, almost impossibly motionless orgasm. \n\nThe voice in her head cried out in unison with her which only added to Mary's delight. The rich, thick cries of pure, raw womanly lust filled Mary with a rapture she had never known. The sound of the woman's moans and cries echoed in her head and flooded down into her soul, washing away a part of what was there and filling it with something new. Again and again, she and the voice shared their passions and climaxed in unison. Mary's voice filling the small room and the woman's cries filling her soul. \n\nDimly, through the haze of ecstasy, Mary could see that the ring was now blazing and pulsing with red light. Almost blinding as her passions built, blazing out brilliantly as she climaxed and dimming as she cooled. Again and again she reached her climax, crying out in rapture and with each one she felt she was coming closer and closer to either blissful perfection or utter madness. She didn't know if she cared which took her first. \n\n\"Now! Now! I can feel it! It is.... Ungh!\" The voice in her head gasped as a surge of pleasure more intense than any yet started building, low down in her core. She desperately wanted to be able to move, the be able to pinch her aching nipples, the fondle her heaving breasts, to be able to plunge her fingers into her needy pussy, but she was still held still but the magic as it had its way with her. The feeling in her core swelled and grew as the seconds turned into minutes. Rapture screamed in her veins as her mind threatened to break. The voice in her head was whimpering and moaning incoherently now. Gasped out fragments echoing in her mind, \"Can't with a woman... \" and \"Too much!\" and \"Never like this before... \" and finally as they reached the peak, a screaming, hissing, \"Yesssss.....!\"\n\nAn orgasm unlike anything she had even imagined erupted deep inside Mary's center and flowed throughout her entire body in a hot flood of molten ecstasy. It burned through every fiber of her being and shattered her mind like glass. Her ragged cry of complete and total surrender that was ripped from her mouth was echoed by the strange woman in her mind as the magic took them both completely. The last thing she heard was the voice in her head whispering \"Mistress...\"\n\n<center>* * *</center>\n\nSensation came slowly back to Mary Calise. The heat of the most delicious afterglow she had ever known hummed throughout her body, making her feel both wonderfully alive and completely at ease. She lay there, enjoying the languid stillness of the world around her and savoring the warmth in her core. \n\nAfter a time her mind started coming back from the glow and her thoughts drifted back to how she got here. She dimly recalled the bath, putting on the ring, the bonding and then, the voice. The voice. That new, strange feminine voice in her head. With a gasp, she came fully back to reality and opened her eyes. She was no longer in her bathroom. \n\nShe was outside. \n\nStartled, she sat up quickly and turned her head about, surveying her surroundings. She was lying on a huge stone table or maybe it was an altar, dressed in a strange white wraparound gown of some kind that she had to admit, hugged her body in all the right places. She was seated on a soft red pad right at the altar's center. Surrounding her on all corners of the altar were four enormous carved stone statues. Their backs were to her, each facing outward but she could tell from their shapely backsides that they were probably statues of women. Swinging her feet off the altar she stood, looking around further. She gasped again. \n\nToto, I don't think we're in Kansas anymore. flashed through her mind, almost making her laugh since she had never actually been to Kansas. Wherever she now was, she was definitely not at her condo on Cape Cod. She was in the center of a vast, open plain that looked to be mostly reddish brown earth and rocks. The barren, almost treeless landscape stretched away before her all the way to the distant horizon. Her gaze drifted down and she saw she was on the summit of a building of some kind. Taking into account the statues and the altar, she assumed it was probably a temple of some kind. Looking closer she noted that the ground she stood on was not stone as she had first thought, but some kind of baked clay paving tiles. Tentatively, she walked to the edge of the platform and looked over the edge. No, she corrected her first thought, not a building or a temple, more like a hill with this altar constructed on its peak. Mud clay stairs stretched down the face of the hill for hundreds of feet to the plain below on the three sides before her. Taking a few steps back around the altar, she looked out over the fourth side. The back she thought but supposed it could just as well be the front, fell away to a sluggish, muddy brown river far below. Beyond the river, a city stretched off across the plain. Hundreds, maybe thousands of small buildings, flat roofed building and huts were arranged in no apparent pattern that Mary could detect. At the center of it all was a vast, sprawling, walled structure that Mary took to be a castle of some kind. She could just make out the tiny forms of people walking the streets or tending the fields that lined the riverbanks. The smoke from a thousand cooking fires rising into the still, evening air. In the distance, the Sun, huge and red, was sinking towards the distant horizon. \n\nNo, she was most definitely not on Cape Cod anymore. But where the hell was she? She felt panic again building in her chest but she pushed it down hard. \"Ok, stay calm, stay calm. Look around, figure this out.\" She said to no one in particular as she closed her eyes and took a deep calming breath. Opening her eyes, Mary turned around, back towards the altar and the strange statues. She studied them with initial curiosity that started slowly turning to fear the longer she looked at them. They were all identical, about fifteen feet tall and depicted a woman that must be a goddess. She was almost completely naked save for a wide sash around her waist. Mary thought that 'curvaceous' was probably the most fitting term for the statues with their wide, curving hips and full, heavy breasts. Interestingly, the goddess had eight arms and Mary noted that each hand was holding a different item. One held a spear, one a leaf of some kind and one a child. Many of the other items she couldn't identify but her eye caught on the hand that was held at front and center, right between the statues huge breasts. The hand was holding what appeared to be a large ring. Unlike the other items that the statue was holding, the ring was not carved stone, it was an actual metal ring. More amazing still, the ring was identical to the one she now wore. She looked down at the dull silver ring on her thumb with wonder and fear. It was smaller, but there was no question it was the same thing. They even had the same geometric engravings and eight pointed star. \n\n\"Yes, that is the ring you wear.\" A woman's voice said from behind her, making Mary jump. She spun and came face to face with a woman straight out of a fantasy movie. \n\nShe was a good deal taller than Mary's five foot four, probably almost six foot. Her skin was a deep, reddish umber and her thick mane of hair was black. But what was most arresting were her eyes which were a brown that was so deep it was like looking onto a bottomless pool. Almost instantly, Mary felt herself starting to fall, deep into the woman's eyes. They were hypnotic in their enchanting darkness. \n\nAs if realizing the effect she was having on Mary, the woman abruptly turned away, breaking the effect and leaving Mary feeling disoriented for a moment. After a few breaths her mind cleared and she was able to regain her thoughts. She looked to the woman again, a little more cautiously this time. She was wearing a long, brilliant red and gold gown that was of similar cut to the one May was wearing. The gown wrapped tightly about her body, both covering and revealing. She wore so much jewelry on her arms that Mary couldn't even begin to guess how many rings and bracelets she had. Gold and gemstones of all colors glittered on her wrists and fingers. An elaborate gold circlet was nestled into the mass of her luxurious black hair. Oddly, she wore only one necklace but Mary's breath caught when realized what it was. On a simple leather thong hung an engraved, dull silver ring, the same as the ring held by the statues, the same as the one that was now on Mary's thumb. A shiver ran up her spine and she whispered, \"Who, who are you? Where am I?\"\n\n\"You are in what a historian in your time would call Sumer, or perhaps Samaria. In your modern times, the country of Iraq. As to the when, by your calendar, the year is 4385 B.C. Below us is the City of Akkad. We stand at the altar to my Goddess, Ama --Arhus.\" She turned to Mary but carefully avoided eye contract. \"I have brought you here so that you may understand who I am and how this all came to be.\" She turned and walked to the edge of the altar, gazing out over the plains far below. \"And I am Marcellene Ack-Natora, High Priestess of Ama-Arhus, Keeper of the High Temple, Holder of the Sacred Tablets, Royal Sorceress to the Emperor Uluek.\"\n\nMary looked around her, at the altar, the statues, the city beyond and then back to the woman that she now had a name for Marcellene. She was stunned but finally managed to ask, \"How?\" \n\nThe woman turned to face her and her full lips curled up into a slight smile, \"How are you here? That is simple, you're not. This is just a dream for you. Fear not my Mistress, in a short while, you will wake up back in your home.\" She turned back to the plains below, \"As to why you are here, I wanted you to see me for who I am, or at least who I was.\"\n\nMary looked around again, a little slower this time, trying to take it all in. \"So this is where you live? Are we in the ring?\" \n\n\"In a sense, yes. This is where my mind dwells when I am not with my bonded Lord.\" She paused, then glanced sidelong at Mary, \"Or Mistress.\" \n\nMary felt a not entirely unpleasant thrill start in her sex and run straight up her spine at the word 'Mistress'. Embarrassed at her reaction, Mary blushed furiously, part of her fearing that Marcellene would notice the reaction to the word but another part of her, a part that she was surprised was in her, was secretly hoping that the Sorceress did. Flustered, Mary asked, \"But how did this all happen? Why are you trapped in here?\"\n\n\"I have been asking myself that very same question for over six thousand years.\" She sighed, turning back to face Mary. \"To better understand who and what I am and also to better understand what has happened to you, I need to tell you what I was trying to accomplish. You will also need to put aside some of your beliefs. Through the Bonding I can now understand you quite well, and I know that you don't believe in magic and the powers of the Old Gods, but you must try to understand. You see, in my time, the Gods were still young and flush with power and their wonders reigned across the land. The Gods came into being because of the desires and needs of the people. They were born of the longing of the people for something greater, something to take control of the world around them and to begin to bend it to their will. What the people got was not always what they wanted or indeed what they expected, but it was oftentimes what was actually needed. Gods of great power and gods of lesser power were born. Gods of good and gods of evil, light and dark, day and night, life and death. However, all of these new gods all drew their power from those very people who's wants and needs had given birth to them. The devotion, prayers, love and sacrifices of the people were what gave the Gods their form. It was what they drew their power from.\"\n\nShe looked up at one of the statues, \"There were some of us who lived in that age that were fortunate. Were we, these few, more devoted or more pious? Or perhaps it was just luck? I don't know. But for whatever reason, occasionally a mortal gained the favor of a God or Goddess was gifted with the ability to commune with that deity . We were more able to channel their divine energies, to work their magics for them, to bring their wonders and power directly to the people. She crossed her hands in the center of her chest and bowed deeply to one of the statues, whispering something that Mary couldn't hear before straightening, and turning to face her, \"I was one of those blessed few. I was a Sorcerer Priestess of the Goddess Ama --Arhus, the Goddess of Women.\"\n\n\"As a Priestess, I served my Goddess first and foremost but like everyone who lived at that time and in that place,\" She paused and gestured at the city below, \"in this place, I also served at the pleasure of whoever was on the throne at that time. The Emperor I served was a brutal man of conquest and war. He spent his whole life wrapped up in the pursuit of power. So much so that he never took a wife and never sired a single male heir. Eventually his advisers convinced him that he needed to take a wife and give create a male heir to inherit his name and power. But he had waited too long and he was no longer able. Indeed, his mind and body started to fail rapidly and it appeared the empire would fall to his sister's son, whom he detested.\"\n\n\"His advisers came to me with an idea. They wanted a spell or potion to invigorate the Emperor, even if only temporary, and give the ability to produce an heir. I told them I would search the tablets to see if there was a solution to the problem. After a time, I found a solution, several of them in fact. It wasn't one spell but two I would weave together and cast them upon the aging Emperor. The first was a spell of power and invigoration to give him the energy needed to complete the act. The second was a spell of control and manipulation to give him the ability to make sure the woman he chose to lie with would bear him a male heir. They would each only last a few hours I thought, but they should have been enough to ensure an heir was born.\"",
        "\"You could do that?\" Mary asked in amazement. \n\n\"Yes, the ancient magics of the Gods were immense powerful when wielded by a knowing hand. Much of that power has been lost to mankind over the centuries but in some places you can find it still if you know where to look. But back to the tale,\" Marcellene continued, \"However, my research and preparation had taken months and by that time, the Emperor's mind had eroded further still and he now was not only physically incapable of being with a woman, but was no longer even interested. His mind had slipped closer to madness and the desires of the flesh had left him. So I added a new component to my spell, a measure of desire, specifically a desire to lie with a woman.\" \n\n\"It was these three spells that I was attempting to weave together on that day so many eons ago, here in this very spot.\" She walked over and placed her hands on the altar. \"It was right here.\" \n\nMary was spellbound. Could this all be real? Was this kind of thing even possible? Looking around it was hard to doubt her own senses. \"It didn't work?\" \n\n\"No.\" Marcellene answered softly, \"and yes.\" \n\n\"How... \" \n\n\"The spell was never completed. Something went horribly wrong.\" She sighed, \"I've never really known what happened. I was trying to weave together three separate spells, a dangerous undertaking but I was young and arrogant, convinced in my power and abilities, certain that my Goddess favored me. The spell of invigoration and the spell of desire were both simple spells that any peasant market spellsayer could weave for a pittance. But the spell of manipulation, that was powerful magic. It was the power of total control. The power of creation. Only the greatest mages and priests of the age could control magic like that. I thought I was equal to the task.\" Marcellene looked down and picked up the metal ring that hung about her neck. \"But I wasn't.\"\n\n\"Something went wrong with the spell. Either I couldn't control the power I was trying to manipulate, or it wasn't compatible with the other spells. Perhaps I misspoke a word. An incorrect gesture, an impure spell component, I never knew. In any event, the magic escaped my control and the energies exploded around me. My body was devoured by the very energies I had sought in my arrogance to control. All that was left of me was my soul which was melded with the magic and finally absorbed by the ring,\" she held up the engraved metal ring that hung between her breasts, the same ring that Mary now wore on her thumb, \"this ring, signified my rank, it showed all my station and influence. The iron ring of the Emperor's Sorceress. The Iron Ring of the Chief Priestess of the Goddess Ama --Arhus.\" She gestured to the identical rings held in the hands of the statues. \"The symbol of my power. The symbol of my arrogance.\" She let the ring she held drop to fall back between her breasts, \"and now my prison for over six thousand years.\" \n\nMary looked down at the ring on her thumb with a newfound horror as an empty chasm of sympathy and pity for this woman opened up inside her, making her feel hollow and weak. She couldn't think of anything to say besides whispering, \"I'm so sorry Marcellene.\"\n\nMarcellene looked over at her and smiled a little. \"Thank you my Mistress. But my fall was by nobody's fault but my own.\" Taking a deep breath she continued. \"But my spells were not cast completely in vein. The spells did work. Actually, they turned out to be far more powerful than I have ever intended. By bonding with me and absorbing my life energy, the spells became immensely powerful and the enchantment became permanent, not temporary as I had intended. The ring, my ring, became an artifact of immense power. Whomever put on my ring would gain the ability to control and manipulate people's minds at will. Merely thinking about what you wished a person to do was enough to make it happen. But the elements of invigoration and desire were there as well. Men who put on the ring would desire almost every woman they looked upon and with the power of control, they could take them all. Many men became immensely powerful rulers and accumulated vast harems of beautiful women they kept either as slaves or wives.\" Marcellene walked over and reverently touched the foot of one of the statues of her Goddess. \"I have seen the men I served, many of them ruthless, heartless barbarians, do so many horrible, perverted things over the centuries. It amazes me that I am still sane. In truth when I bond with a new master, I often don't recall much from my previous Bonding. I think that maybe this is a gift of my Goddess. Her way of trying to protect me in some small measure.\"\n\nEnrapture by the tale, Mary stared in amazement. Eventually finding her voice she asked, \"Why didn't your Goddess protect you from the spell right at the beginning? Why didn't she stop all of, well...\" she gestured around vaguely at the altar, the statues and then finally, almost reluctantly, she held up the ring on her thumb, \"All of this?\" \n\nMarcellene's response was a little harsh, her voice suddenly hard, \"Very rarely did the Gods directly intervene in the goings on of mortals. My act of binding the spells was my own and not by the hand of my Goddess. My fall was my own, by my own hand was I destroyed. It was not my Goddesses responsibility to save me from my own folly.\"\n\n\"Oh.\" Mary mumbled, feeling a little embarrassed. \"I'm sorry. guess I just don't really understand how the Gods were supposed to work. This is kind of all new to me.\"\n\nMarecllene's face softened and she smiled. \"No, it is I who should apologize. I should not have spoken harshly to you. It was an honest question. It is just,\" she paused, \"A hard thing for me to talk about. But where was I? Ah yes, the magic.\" She continued, \"The magic has a will of its own in many ways. Often, it would leave a man or betray him at the most inopportune times. Often leading to his death. This resulted in the ring changing hands many times over the centuries and also being lost many times, sometimes for centuries. Perhaps this was also at the will of my Goddess. Trying to protect the world or maybe just trying to protect me.\" She turned to look at Mary, meeting her eye this and smiling. \"But now I have no Master. For the first time in eons, I have a Mistress. Perhaps you will prove to be a better caretaker of the power that you have been given than many of the others in the past. You seem to be a good person, so it is my hope.\" She turned and looked to the statues again, \"And there is the matter of how the magic will work for you. That Bonding was far more...\" she paused and Mary could see her blush heavily, a blush that was matched by her own she was sure, \"intense than any before. Maybe because we are both women, or maybe it was because of something else. Time will tell.\" \n\nFascinated and also rather horrified at Marcellene's tale, , Mary starred at the ring on her thumb and wondered if it was all real. Did she really have the power to control other people's minds at will? And what of the lust for... for women? Was that going to happen to her as well? \"Will those things happen to me as well? The power and the, uh, desire, for... for women?\" \n\nMarcellene studied her intently for several long, uncomfortable moments before answering carefully. \"Truthfully, I do not know. The magics that I harnessed were intended only for use by a man, on a woman, that is how the spells were woven. But when the magics broke from my control, they were again changed in some ways. Now, for the first time, a woman has taken control of the ring and Bonded to me, the source of the ring's energy. It may work exactly the same as it always has, or it may react in ways I can't imagine. There is simply no way of telling.\"\n\n\"Will it hurt me?\" Mary said cautiously, then added hesitantly as if she didn't want to know the answer, \"Will it kill me?\" \n\nRealizing how frightened the young woman must be, Marcellene stepped towards her and smiled warmly, \"No, my Mistress, I don't believe that the magics would ever do that.\" Raising her hand, she tenderly stroked Mary's cheek and whispered, \"They never have in the past and I would do everything in my power to protect you.\" At her touch, Mary let out a small, shuddering gasp of surprised pleasure that was mirrored an instant later in Marcellene's own body. Startled, the taller woman quickly pulled her hand back. \n\nTentatively, Mary raised her hand and touched the cheek where Marcellene's hand had just been. \"How did you do that?\" She asked, her voice suddenly rich. Then, seeing the growing flush on Marcellene's cheeks, she asked, \"You felt it too, didn't you?\" Then answered her own question, \"You did, I can see it in your eyes. It's that thing Bonding, isn't it. You feel what I feel. Right?\" \n\n\"Yes Mistress.\" Marcellene whispered. \n\nMary thought now that she was just beginning to see what the Magic had kindled in her. She had never in her life felt anything like that before from just a simple touch. Looking into Marcellene's eyes, she knew that the other woman now knew as well. She could see lust burning deep in the woman's bottomless eyes. That knowledge sent a new and unexpected flare of heat through her core. She wondered if it worked both ways. Slowly, hesitantly, Mary raised her own hand and touched the Marcellene's cheek in the same, tender way. The woman's skin was warm and soft and it was pleasant but not in the same way as when she had been touched. There was no fire in the touch. \"Now, touch me again.\" Mary said. \n\n\"Mistress....\" Marcellene began, reaching to remove the hand from her cheek. \n\n\"Ssssh. Please Marcellene, I need to know. Please touch me.\" \n\nWith apparent trepidation, Marcellene obeyed the girl's wish and again stroked her smooth cheek. Instantly she felt a warm, ripple of pleasure spread from her own cheek and washed quickly through her entire body. Expecting the feeling this time Marcellene didn't remove her hand but instead kept it there, gently stroking the Mary's cheek and looking into her eyes even as they shared the pleasure. Unbidden, the thought of what the woman's hands would feel like on the rest of her body welled up into Mary's head and once thought of, couldn't be resisted. Unable to resist the urge, she placed her hand over Marcellene's and slowly guided it down the side of her face to her neck and then back up. Feeling Marcellene's strong fingers running through the soft hair and the nape of her neck drove a long, low moan from her that was shared a moment later by Marcellene. \n\nMary felt the warm ripples of pleasure that had been slowly spreading throughout her body now settle between her thighs. Unable to contain herself, she moaned again, louder this time. \n\nWhat was she doing? Mary's mind screamed even as she felt her nipples hardening painfully and her sex soaking with hot need. This was a woman she was with! Not even a woman. She was a ghost,or a...a... spirit or something! She shouldn't be doing this. Her body shouldn't be reacting like this! She wasn't a lesbian! She wasn't into girls! Was she?\n\nBut even as her rational mind tried to get control of her raging need, her hand slid around Marcellene's head and gripping the taller woman by the hair, pulled her now unresisting form in for their first kiss. \n\nThey both shivered at the touch of their lips. So smooth and soft, hot and wet. Their lips slid across each other eagerly for a time, both savoring the feeling before Mary felt Marcellene's tongue push its way into her mouth. The feel of the other woman's warm, wet tongue inside her mouth was incredible. She groaned and was delighted to hear Marcellene do the same. She had never in her life imagined that another woman could make her feel this way. \n\nUnbidden, Marcellene broke their passionate embrace and started kissing her way down Mary's neck, nibbling and licking her way down to the tender skin between her breasts. Mary's breath was rasping in her throat now as she watched, spellbound, the woman push aside the white fabric of the strange gown and kiss her way wetly to Mary's stiff, pink nipple. When the sorceresses' hot, soft lips finally wrapped around the aching bud, Mary let out a guttural bark of pleasure and her entire body shuddered. Her delight was driven even higher as she felt Marcellene shuddering along with her. The idea that through the Bonding, the woman with her was experiencing everything she felt was driving Mary into a hazy, lust filled euphoria. \n\nBiting her lower lip hard, she reached down and released her other breast from the gown, fondling its firm softness and finally pinching the tender summit hard with her fingers. The whole time her eyes were locked on the other woman, wanting, no needing to see her reaction. She wasn't disappointed. To her delight, the ancient sorceress reacted far more strongly than Mary had expected. The woman's eyes snapped wide open with surprise as a tidal wave of instant pleasure flooded through her body. Her dark eyes held onto Mary's and for an instant she saw the stunning intensity of the unexpected rush of sensation in the Sorceresses body. With a loud cry of rapture, the woman slipped over the edge and fell into a intense, shuddering orgasm. \n\nMary looked on in euphoric paradise for an instant before the raging climax surged through the Bond and overtook her as well. Crying out with the irresistible forces flooding through her body, she collapsed heavily onto Marcellene and together they writhed in ecstasy. She felt the woman's hands ripping her gown off the rest of the way and realized distantly that she was doing the same in return. Their searing skin now touched everywhere and it only added fuel to their raging passions. Desperately, her mouth kissed and licked and sucked any part of her lover that was within reach. Eventually Marcellene worked her face between her Mistresses thighs and at the first touch of the sorceress's tongue on her sex, Mary's world imploded. \n\nA climax even more powerful than the one during the initial Bonding filled her entire being. Rapture, searing with flame, rippling with chill, flooded through her body. She screamed and threw her head back as her entire center convulsed violently. She could feel her insides, the strong muscles deep in her core, pulsing and throbbing with every new surge of pleasure that her lover was giving her. Pushing herself back, she sat hard on Marcellene's face, trying to increase the sensations, trying to drive Marcellene's wonderful tongue deeper into her sex. She felt the muscles of her pussy trying to grab a hold of the invading tongue, desperate to pull it deep into her scalding depths. Her body bucked and convulsed beyond her control as her lover's hot tongue, deep inside her, knowingly sought out her most intimate places. Mary felt her own wetness flooding from her as orgasm after orgasm took her and she felt Marcellene eagerly lapping up her wetness, drinking in all that her Mistress would give her. Hearing Marcellene's own moans and cries of rapture muffled in her sex only added to Mary's fire and her passion built higher and higher until she thought her mind would break but still it went on. Finally, as one last shattering climax tore through her body, she let out a ragged shriek of raw, primal lust that echoed off the watching statues of the Goddess, now her Goddess, and rolled away across the ancient plains.\n\n<center>* * *</center>\n\nChapter Two ~ The Roommate\n\nWaves of hot euphoria rolled delightfully through Mary Calise's body and she groaned softly in response. Several minutes passed as the wonderful feelings slowly faded and the muscles in her center finally ceased their throbbing. Every fiber of her body felt sore and worn out but also wonderfully refreshed at the same time. Images of that strange hilltop temple flashed through her mind as well as thoughts of the beautiful sorceress she had been making love too. Making love to... another woman? What? She sat up abruptly, her eyes snapping open. \n\nMary saw that she was still in her own bathroom, sitting in a bathtub that she now realized had gone cold. She sucked in a ragged breath and let it out slowly. A dream, it had all been a dream. The woman, the hilltop, that whole Bonding thing, it had all been just a dream. Just a...\n\nA loud, insistent thumping rattled the door interrupted her thoughts. \"Mary? Are you in there?\" A pause, another round of thumping, \"Are you ok?\" \n\nIt took her a moment to realize it was her roommate, Julia. \n\n\"Yeah, I'm fine.\" Mary called out, her voice cracking and stinging in her raw throat. \"I'll be out in a minute.\" \n\n\"Ok.\" She heard the young woman call back. Then just audibly she heard a muttered \"Finally.\" followed by the sound of feet heading towards the kitchen. \n\nPushing aside images of the incredibly vivid but disturbingly erotic dream aside, Mary set her mind to the task of getting out of the bathroom. The room was dark, the only light was glow of the parking lot lights coming through the window. Mary flipped the light switch but nothing happened. She toggled it a couple more times then huffed in irritation. The bulb must have blown while she was asleep. A brief image of the dream came to her, something about the lights flickering in the dream.... she shook her head. It was just a dream. She would change the bulb later. Five minutes later Mary was dried off and wrapped in a robe heading towards the kitchen. \n\nThe diminutive Julia was seated at the kitchen counter bar eating a slice of pizza and watching something on her ipad as Mary sat next to her. The pizza smelled delicious and her stomach growled loudly, making Julia laugh. \n\n\"Guess it's a good thing I brought dinner.\" She pushed the large, flat box across the counter, \"Here.\" Once Mary had pulled out two slices and stuffed the first one half in her mouth, Julia continued, \"I was starting to get pretty concerned. What the heck were you doing in here? Sleeping?\"\n\nMary thought for an instant abut her vividly erotic dreams and felt her face blush furiously. She mumbled, \"Yeah, I must have fallen asleep in the tub. Sorry, didn't mean to worry you.\" Chagrined, she covered her embarrassment by stuffing another mouthful of pizza in her face. Thankfully it tasted as good as it smelled. \n\n\"Well try not to do that again. I was just about to call the fire department. I was banging on that door and calling you for like three or four minutes.\" She shook her head and continued. \"I thought you drowned.\" \n\nMary laughed, \"In twelve inches of water. I don't think so.\" Then she saw the lines of concern on the pretty face and realized that her friend really had been worried. \"Really, I'm sorry. It was a long day and I guess I was just...\" she paused, again recalling that mystical time spent in the arms of that strange dream woman, what had her name been? Marcellene? On some distant hilltop in the ancient past and she felt her sex clench. Swallowing and forcing the flush of arousal down hard, she continued, \"I was just somewhere else.\" \n\n\"Well, come back to here for a while ok? I need your help tonight.\" \n\nMary glanced over at her friend, wondering what kind of help she needed. For a second she studied the petite girl that she had known for five years now and been best friends with for four of those years. Shorter even than Mary at an inch shy of five feet, Julia's dark, silky, shoulder length hair and Asian eyes gave away her Chinese ancestry. The third daughter of immigrants who came to the States to work in the vineyards of California, Julia had been born in San Francisco and grown up like a clich\u00e9d California girl in every sense of the word. Outgoing and vivacious, she loved anything to do with the outdoors, especially the ocean and most of all surfing. \n\nThey had met in their first year of college in Boston when they were assigned as roommates and had been fast friends ever since. Upon graduation they decided to stick together and rented this condominium which was close enough to the ocean to satisfy Julia, and centrally located enough for Mary, who needed to be able to drive to her job sites all over New England. Cape Cod was truthfully, not a centrally located as Mary would have liked but once they had moved in all her doubts had faded away. The apartment wasn't close enough to the water that they could actually see it, they couldn't afford that, but in the morning, if the breeze was right, they could smell the sea and that made everything ok for them both. ",
        "\"So what do you need me for?\" Mary asked half way through her second slice. \n\n\"Don't you remember? It's sample night!\" Julia said with a grin. \n\nMary groaned and dropped her head to the counter with a thump. \"Really? Didn't we just do this?\" She mumbled into the Formica. \n\n\"That was a year ago.\"\n\n\"Seems like only yesterday.\" Mary muttered. \"How many?\" \n\n\"Not too many this time.\" Julia said, carefully not making eye contact and taking a sip of her Coke. \n\nThe non-answer made Mary very wary. \"How many.\" \n\nStruggling to keep a straight face, Julia finally said, \"Maybe... forty.\" \n\n\"What?\" Mary blurted in exasperation, \"That will take all night! Are you kidding?\"\n\n\"Nope. And if it will take that long, we better get started.\" She said, getting up and heading towards her bedroom. Mary only now noticed the two large cardboard boxes sitting in the hall just outside her bedroom door. \n\nMary groaned again and Julia turned to face her, \"Hey, you want free stuff?\"\n\n\"Yes.\" Mary said, her head thumping down on the counter again. \n\n\"Then suck it up sunshine.\" She turned and marched off to her bedroom, pausing only to pick up the first of the boxes on her way in. \n\nSample Night was a 'tradition' of sorts that had been started a few years ago when Julia took over management of the surf shop. Every year they were given or purchased dozens of samples of new products, clothes and swimsuits to try out and see if they were worth selling. Julia decided to bring home a number of the products to get her friend's opinion. The plus side for Mary was, that she usually got to keep one or two of the items for her help. Getting a couple high end bathing suits for free every year started off as a sweet deal, but the last time the number of items that Julia had showed off had taken hours and Mary was beginning to reevaluate her opinion of the value of this little tradition. Mary secretly thought that her friend just liked the whole sample thing as an excuse to play fashion model and prance about wearing as many expensive bathing suits as possible and still charge the time to the store. She wondered at how she managed to get away with it each year but recalled that the store's owner rarely ever checked in on Julia anymore after moving to Florida a few years ago. He trusted Julia to keep the place going and as long as it made a profit for him, he pretty much let her run the place as she chose. The fact that Julia was in most respects an excellent manager and kept the store running cleanly and profitably didn't hurt. \n\nAs Mary stuffed the last bit of pizza into her mouth, a stray thought started nagging at her but when she tried to nail it down the thought seemed to flit away, just out of reach. The harder she concentrated, the more elusive the thought became. Eventually she gave up and stood to clean up the remnants of dinner. \n\nThe door to Julia's bedroom squeaked open and Julia came out wearing a cute pair of shorts and a tank top. The shorts suited her slim frame well but the tank top looked like a trash bag on her, draping shapelessly over her slim shoulders and small breasts. Mary told her so. \n\n\"Yeah, but what about the colors and pattern. Just because I can't pull it off doesn't mean someone else can't. I mean how would it look on someone else with curves?\" \n\n\"I don't think it would matter. Shorts, cute, top, ugly.\" \n\nJulia laughed and went back in her room to change. A few minutes alter emerging with a new outfit which Mary also gave her opinion on. Then another, and another. \n\nThe tickling nervousness in Mary's mind continued to grow but she was distracted enough by Julia's showing off of largely unattractive clothing, at least in Mary's opinion, and cleaning the kitchen that she managed to ignore it. It wasn't until the first swim suit came out that Mary realized that she may have a problem bigger than just sitting through a fashion show. \n\nThe bedroom door squeaked again and Julia came out wearing a form hugging, one piece suit of the type often worn by racers or people swimming laps for exercise. The shallow scoop neck, wide shoulder straps and low hips of the suit weren't really sexy in any way but the suit did do a magnificent job of hugging Julia's slim form and showing off her toned, well-muscled form. \n\nA brief image of the woman in her dream flashed in her mind and Mary swallowed hard at the sudden bloom of heat in her center. Nervously, she turned away and started furiously scrubbing the stove top despite the fact that it was already clean and actually hadn't been used in days since they both favored takeout over cooking. \n\n\"Well?\" Julia asked. \n\nMary glanced over to see Julia standing closer to the counter, her hands on her slim hips, head cocked to one side with her eyebrows raised expectantly. \n\nMary's eyes, seemingly on their own, slid down the length of her body and back up. The light blue and pink suit hugged her in all the right places. The bloom of heat kindled into a small flame. \"It looks...\" Mary swallowed again, \"amazing on you.\" \n\nJulia's head rocked back in surprise. \"Really? This thing?\" She looked down and twisted about, studying the suit from all angles. \"It doesn't show off much.\" \n\nAs she turned Mary could see the girl's firm muscles flex and the small flame in her core burned brighter. She watched enraptured as Julia turned around and she got a good look at her friend's shapely little backside. The heat inside her continued to spread upward and she closed her eyes, took a deep calming breath as she tried to control her heartbeat which was thumping so loud Mary was amazed Julia couldn't hear it. \n\n\"Well, if you say so.\" Julia said and headed back to her bedroom. \n\nAs soon as the door latch clicked Mary let out a strangled gasp and gripped the edge of the countertop hard. \"What the hell was that?\" She whispered fiercely to herself. It's not like she was a lesbian or something. It was just that one dream or whatever it had been. That wasn't real. It hadn't really happened. Had it? \n\n\"No!\" she muttered and shook her head. She wasn't going to do this. She had known Julia for over five year now and never had a single sexual thought about her friend. Well, ok she admitted, maybe a few, but usually only when she had been drinking. Her thoughts of Julia slipped back a few years and the warm glow in her core responded to the memory of the one time they had tried kissing at a college party. Julia's lips had been soft and wet and tasted of strawberry wine cooler. Her small hands had wandered over Mary's body and... \n\n\"Stop it!\" She said and smacked her head against one of the cabinet doors. The sharp pain brought her back to reality and she set her mind firmly in order. She was not a lesbian. She didn't like girls. They didn't do anything for her! They... her thoughts came to a screeching halt when her eye caught on her hand gripping the edge of the countertop. On her thumb was a ring. An old ring of a dull silvery metal with intricate engravings all around it. The ring... the Bonding... the dream... had it been a dream? \n\nHolding her hand up, she looked at the ring more closely, were the lines of the engraving glowing faintly? \n\nThe door squeaked open again and Mary jerked her hand with the ring out of sight behind her back. Looking up just barely managed to suppress a groan. \n\nLeaning against the door frame, Julia was wearing a black and purple bikini that showed off everything in a way that the previous suit hadn't. It was an athletic cut so it wasn't really that skimpy for a bikini but it still revealed a lot and Mary couldn't tear her eyes away. The black of the thin fabric went perfectly with Julia's dark hair and the bright purple trim gave the suit just enough flash, drawing the eyes to all the right places. \n\n\"I like this one a lot.\" Julia said, turning around for May's benefit and bending this way and that to look at herself. Pausing, she ran her hands down her body as if smoothing the suit. \"I love the cut.\" She adjusted the bottom then ran her hands up over her small breasts again, shifting the small mounds slightly in the suit. \n\nWhen Julia ran her hands over the material covering her perky little breasts Mary shivered and felt heat bloom in her own breasts. Oh dear Goddess, she was beautiful, Mary thought then caught herself. Why was she thinking this? And why was she thinking of that weird Goddess that the sorceress from her dreams had been talking about? What was happening to her? Was it just a dream? Or was it that Bonding thing? She looked down at the ring again and this time it was definitely was glowing ever so faintly. The lines of the engraving pulsing with a deep red glow. \"Oh no.\" Mary murmured to herself. The Bonding, the sorceress, the magic. It had been real. Mary closed her eyes. \"No.\" she whispered.\n\n\"What?\" \n\nStartled out of her thoughts, Mary jerked her head up. \"What?\" \n\nJulia laughed. \"That was what I just said.\" She paused, looking at her friend and a look of concern crossed her face. Coming up to the counter, she said, \"Are you sure you're ok? You don't look so good. You're all flushed.\" \n\nTrying desperately not to stare at her friends breasts, Mary quickly looked away and went back to cleaning. She picked up a glass and turned towards the dishwasher but paused, \"I'm fine, really. Just tired, that's all.\" Unable to control herself, looked over at Julia again, sweeping her eyes down her small, trim body, taking in the pale skin, the toned legs and arms, the slender neck, the black hair, the... Tearing her gaze away, she said, \"And that suit is perfect for you.\"\n\n\"You think so?\" Julia said, turning and heading back towards her bedroom. \"I was thinking I really wished I had bigger tits so I could pull this one off. My little A-cuppers don't really do it.\" \n\nThe door closed with a click and Mary sucked in a shuddering breath. What was wrong with her? She couldn't be attracted to her best friend like this. She wasn't into girls, she wasn't! It was wrong. I'm not a lesbian! She railed at herself. But even as she tried to control her thoughts, her mind continually went back to the delicious image of Julia's small, athletic body being put on display before her. Her silky black hair, the dark eyes, the inviting smile... she felt her sex twitch with longing and she gave a soft moan. Her friend was so beautiful. \n\nJulia's last words unexpectedly floated back through her mind, I wish I had bigger tits.... Instantly, the image of Julia with bigger, fuller breasts appeared vividly in Mary's mind and she gasped as a shock ran up her spine. The heavy, soft firmness of the girl's new, larger breasts filled out the bathing suit so much better, stretching the thin fabric and adding an erotic, sexiness to her already beautiful, toned athletic physique. Oh dear Goddess, she looked amazing like that. Yes, Mary thought, I wish you had bigger tits as well. At that thought, the world around Mary seemed to shiver and go out of focus for a moment before snapping back. The glass in her hand slipped from her startled fingers and shattered on the tile floor. Images of Julia were pushed from her mind as Mary looked around in alarm. What the hell was that? \n\nThe door opened and Julia came out, \"What happened?\" Her voice anxious. \n\n\"Huh?\" She blinked then realized what had brought Julia out. There was shattered glass all over the floor. \"Oh, yeah, it just slipped.\" She said then asked carefully, \"Did you just, uh, feel something... weird?\" \n\nJulia went to the closet in the hall and got the dustpan and a brush. \"Something weird? What are you talking about?\" She stopped and looked right at Mary, \"Are you sure you're ok? Mary? Mary? Hey.... Earth to Mary...!\" \n\nMary's mind was frozen, her eyes were locked on Julia's breasts, trying to figure out what her eyes were telling her. The girl's breasts which had been a small, barely even there a few moments before, now did a more than excellent job of filling out the bathing suit she had changed into. The orange and green one piece was scooped low in the front and was stretched out almost to bursting over the full, rounded globes on the girl's huge chest in a way that was definitely not how it had been before. The full mounds were pushed up and together by the suit's underwire and the low scoop neck was creating a delicious display of the vast expanse of newfound cleavage. \n\nJulia stopped speaking and followed Mary's gaze, looking down at her own breasts. \"What? Have I got something on me?\" \n\nBlinking several times and shaking her head, Mary tried to regain control of herself. What the heck was going on? Julia's breasts had gone up at least three or four, maybe five cup sizes since she walked into that bedroom and she didn't even seem to notice. Mary guessed that Julia was now at least a solid double D cup which looked absolutely huge on her small body. But how? And why didn't she even notice the change? \n\n\"I... I... uh... sorry.\" She stammered, bending down to pick up the bits of glass at her feet. \"I guess maybe I'm not really feeling so well.\" That was actually pretty close to the truth, she felt confused and dizzy as her mind tried to come to grips with the strange events of the last few hours. What was happening? Why was she having these feelings towards her friend? Why was a woman exciting her so much? And how, this was the big one, how had her friend gotten tits like that? And she didn't even know?\n\nPicking up a piece of glass, Mary saw the ring on her left thumb and stopped. The engravings were glowing again, purple this time. Oh no. What was it that that sorceress had said? Something about the ring being able to control people? That the ring had magic of... of... manipulation? Something like that. And that all those men for all those years had used the ring to take control of women. She wracked her brain, trying to bring it all back. She had said the ring gave the men the ability to take control of a woman's mind but she had also said that it was never meant for a woman to wear it, that she didn't know what the ring would do. And that the ring... did... something...something else... what?\n\nMary glance over at Julia who was on her hands and knees, sweeping up the glass fragments with the dustpan. Mary's eyes were drawn like a magnet to canyon between the girl's huge breasts that was on display as she bent forward. She barely contained a moan as she watched the heavy mounds swaying gently with every movement Julia made. \n\nDesire. That was the other thing that the ring did, it gave the wearer an insatiable desire for women. Oh no, no, no, no.... this couldn't be happening. But staring at her best friend's fabulous new breasts, she knew it was. Fire flared in her center, hot and hungry. The ring was making her into a lesbian. Oh dear Goddess.... \n\nForcing her mind back to the broken glass, she used the cleanup to cover her scattered thoughts. So the magic was changing her, making her desire women and it was also changing the women around her? No, Mary realized, Julia hadn't changed till I thought about it. Until I wanted it. When I thought about her with bigger breasts and wanted it, that was when it had happened. I did that. I changed her. The thought sent another thrill up her spine. It worried her that the thrill she felt was not entirely unpleasant. In fact, it wasn't unpleasant at all. That thrill now led Mary's lust dazed mind directly to a new thought... could she do it again? \n\nShe stole a sidelong glance at her friend and wondered if she could, or if she should. It seemed so wrong somehow, but Julia didn't seem to even notice the change, so it must not have bothered her, right? And if she really could change her, then she could always change her back, right? \n\nMary got a hold of herself. No! What the hell was she thinking? She couldn't manipulate people like this! It was wrong. Julia was her friend. Her best friend for years and years. This was total, utterly and completely wrong! Despite her best effort to keep her eyes down and on her cleanup work, Mary couldn't help but glance over at Julia as the girl stood up, her eyes again caught on her new full breasts and for an instant Mary was struck by how top heavy the petite girl now looked with her big round tits and slender little bottom. I wish she had an amazing ass to match those fabulous tits. Mary thought before she could help herself.\n\nJust as before the world shivered and slipped out of focus for an instant before snapping back. When it did Mary fell backward in alarm. Julia's small, slim bottom had expanded into something much fuller and rounder, the cheeks more pronounced and her hips notably wider. Her amazing butt now matching her fabulous boobs. Julia seemed to stumble for an instant but otherwise gave no other sign of noticing the change. \n\nPanicked, Mary jumped up and ran to the bathroom, slamming the door behind her and locking it. She looked into the mirror and stared wide-eyed at her own reflection barely visible in the darkness. \"What the hell is happening to me?\" she whispered. \"What did I just do?\" \n\nA moment later there was a banging on the door and Julia called anxiously, \"Mary? Are you ok?\" \n\nTaking several deep breaths, Mary said, \"Yeah, I'm just feeling sick.\" \n\nThere was a pause, \"Ok, do you need anything?\"\n\n\"No. No, I'll be ok. I just need to stay in here for a bit.\" \n\n\"Ok.\" Julia said then added, \"Call me if you need me. I'll be right in the next room.\" \n\nShe listened for a few seconds to be sure that Julia had walked away, then let out a ragged, shuddering sigh and looked down into the sink, feeling the oddest combination of arousal, terror, fascination, nausea, curiosity and a giddy excitement rolling around inside her all battling for supremacy. \n\nCuriosity finally won out and she held the ring up close and studied it more closely. It was no longer glowing and once again just looked like an old, metal ring. It wasn't even shiny like silver. Just a dull, flat grey with that strange geometric engraving and the eight pointed stars. \n\nShe thought back to the dream earlier and tried to recall as much as she could. She remembered putting the ring on, then there was that strange voice in her head, the sorceress Marcellene that somehow lived in the ring or was the ring or something. And then there had been that Bonding thing and she had cum so many times she lost count. The thought of that brought a blush to her cheeks and made her sex tingle. \n\nForcing her thoughts back to now, she tried to remember what had happened next. She had woken up on that hilltop temple, alter or whatever it had been. There were statues of that Goddess and a desert then there was that Sorcerer Priestess Marcellene. Mary's sex tingled more strongly at the thought of the sorceress and the way they had... \n\nStop it! Concentrate! Mary scolded herself, dragging her wayward thoughts back yet again. What had the woman said about the ring? Mary closed her eyes and concentrated. Marcellene had said it originally was just supposed to be a spell. It was a spell she created to give that Emperor an heir, to let him knock up his wife or mistress or something. She had said it would give him the stamina and desire and the ability to make sure she got pregnant. And then it all went kapow and Marcellene was killed and became that ring or got absorbed into the ring or something like that. \n\nThe ring. Mary looked at it again. So she became this ring which has magic in it and whenever a man put on the ring he could control any woman's mind. That was what she had said, control her mind, not her body. Had she just not told her everything the ring could do? Maybe Mary had just misunderstood?\n\nAnd where had Marcellene gone? Mary had kind of gotten the impression that the woman was going to be in her head from now on but now she seemed to have disappeared. Tentatively she tried calling to her in her mind. When that didn't work, she spoke the name out loud, \"Marcellene? Are you still in there?\" She tapped the ring, \"Marcellene?\" ",
        "Nothing. \n\nWonderful, she was apparently alone in this. Taking another deep breath, she tried to think of what to do next. Going back out there and seeing Julia didn't seem like such a great idea at the moment. At least not until she figured out how to get her wanton thoughts under control. Control... hmmm. \n\nWhat was it that the sorceress had said, that the men had controlled the minds of all the women they wanted. Could she do that? Or maybe it worked differently for her and she could only control their bodies? Could she test it? What could she do? Something simple to start she figured, especially since she didn't know how she really did what she had already done so far. \n\nShe brought up an image of Julia in her mind and thought Julia, I want you to come back her and knock on the door.\n\nA few seconds later there was a knocking on the door. \n\nMary felt a thrill of excitement course through her entire body. It works, she thought. She struggled to keep her excitement from showing in her voice. \"Yes?\"\n\n\"I...\" Julia started then paused. \"I, just wanted to check on you.\" she answered sounding a little confused. \n\n\"I'm fine.\" Mary answered, trying to think of another test, something Julia absolutely wouldn't do on her own. Julia, sing for me. Almost instantly, Julia started singing a lullaby from the other side of the door. \n\nMary let it go on for a minute or two, finding to her surprise that Julia had a lovely singing voice. Thinking back, she couldn't recall ever hearing Julia sing in the past, at least not anything more than Happy Birthday. Her tone was rich and surprisingly deep for such a small girl. Mary found she liked listening to her sing very much. Eventually she asked, \"Julia, what are you doing?\"\n\nThe singing stopped and the pause was longer this time, \"I... I don't know. I guess I just thought you would like a song...\" she trailed off then said, \"Sorry, I don't know why I did that.\" She was sounding even more confused now. \n\nMary thought, Julia, go back to trying on your bathing suits. You won't worry about why you were singing to me.\n\nMary heard feet padding away and the sound of a cardboard box being shuffled around.\n\nShe shuddered with barely contained excitement but with a supreme effort of will, forced it down hard. This was amazing, but it's not like she could really use it. She couldn't go around making her friend do whatever she wanted. That was, was... well, Mary didn't know what it was but it was definitely wrong. She needed to stop this and now. She sat on the floor and closed her eyes, forcing herself to relax. After ten minutes she finally felt in control enough to go back out and see Julia. \n\nJulia was doing exactly what Mary had asked her to, digging through the box for another bathing suit but that wasn't the only thing that Mary noticed. \n\n\"Everything ok?\" Julia asked, turning around, \"I was worried about you. You've been acting kind of strange ever since I got home.\" Julia was wearing yet another bikini. And this one made her look absolutely gorgeous. The suit was bright yellow and very skimpy. Two little fabric triangles held together by strings were barely covering Julia's newfound boobs and the bottoms were even skimpier with just a small bit of fabric in the front and a thong disappearing into her plump new cheeks behind. \n\nStruggling to speak, Mary said, \"I know. Sorry to worry you. It's just been kind of a... uh, well, a weird day and I'm feeling kind of off. I think maybe I'm just not sleeping enough. I'll be fine.\" She swallowed, hard and unable to control her eyes any longer, looked Julia up and down hungrily, \"And by the way, that suit looks fucking amazing on you.\"\n\nJulia looked down at the suit and Mary saw her blush. \"Oh, this. Yeah, it's a little to revealing for my tastes I think.\" She gave a small, self-deprecating laugh. \"I don't know if I could ever have the confidence to wear something like this out in public. You would have to be a real knockout to pull this off.\" \n\nWith raised eyebrows, Mary said, \"Have you looked at yourself in a mirror? You look abso-frigging-lutely incredible! You're...\" she ran her eyes over her friend again, slower this time, and felt wetness pooling between her thighs as she said, \"...amazing.\" As she said it, Mary suddenly wondered if drawing Julia's attention to the changes in her body had been a good idea. She began to think she may have just made a mistake.\n\nTurning to look her in the eye, Julia said, \"You know, I actually did look at myself just a few minutes ago and for the first time that I can remember, I kind of did feel amazing.\" She stopped for a second as if trying to find the right words, \"It's weird, all my life I always felt sort of skinny and not, well, not really like a woman. I've always felt like a little girl, with tiny little boobs and a skinny little bum. But suddenly I looked in the mirror and it was like 'Boom!', holy shit, I really am fucking hot.\" She smiled and made a 'hey look at me gesture' with her hand before going introspective again. \"It just seems weird. Almost like it just kind of.... happened.\" She was quiet for a moment before asking, \"Does that seem weird?\"\n\nNot knowing how exactly to respond, Mary said truthfully, \"No Julia, you've always been beautiful, trust me.\" \n\nBlushing fiercely, Julia looked down and avoided Mary's eye. Quietly, she asked, \"Do you really think I'm beautiful?\" \n\nSurprised by her friends sudden shyness, Mary said, \"Of course you are. You're gorgeous. You're,\" she ran her eyes hungrily over Julia's body again. Realizing she was staring again, she forced a little laugh, \"... you're smokin' fuckin' hot!\" Feeling her own center twitch as she realized it was completely true. \n\nJulia looked up at her for a very long moment before she blushed a little and gave a little shy smile, \"Uh, I guess if you say so. Well, I guess I'll go change. We can do the fashion show another day if you're not feeling well.\" Julia got up and turned for the bedroom. When she did, Mary got a full, fabulous view of Julia's amazing new ass and without meaning to, she thought I wish you would wear that for the rest of the night.\n\n\"You know, actually I think this suit is growing on me. I think I'll leave it on for a while.\" Julia called over her shoulder as she continued to walk towards the bedroom. She paused for an instant then turned and looked over her shoulder at Mary, cocking her hips and popping her booty out a little. \"And you seem to like seeing me in it too.\" She locked eyes with Mary for an instant before raising one eyebrow just slightly. \n\nMary's heart almost stopped at the sudden fire that roared back to life inside her. By a supreme effort of will she barely controlled a gasp from escaping her lips but there was no way to hide the shocked look and furious blush from her face. For several long seconds she felt like a deer caught in the headlights of a fast approaching car, frozen in place, terrified, caught. \"I... uh...\" she mumbled incompletely before finally managing to wrench her trapped gaze away. \n\nJulia laughed and turned back to her bedroom. \"Caught you ya perv!\" She laughed again, \"Now stop staring at my ass!\" She called over her shoulder as she walked into the bedroom. \n\nThis was getting out of control. Mary thought furiously as soon as her mind would work again. Julia knew she was checking her out now. It was all too obvious. She was too obvious. She had to get control! She had to get.... control? It occurred to her that she had control. Complete and total control. With a thought she had made Julia keep that suit on all night and her friend didn't mind at all, in fact she appeared to like it. And more importantly, she seemed to like teasing Mary about it. \n\nThinking more carefully about it, Mary acknowledged that wasn't really any great surprise, Julia liked teasing Mary, and everyone else really, about just about anything she could. Teasing and joking around were probably Julia's favorite pastime right after surfing. She reveled in making her friends, and especially Mary, squirm. A wicked idea slipped into Mary's head and she smirked to herself as the thought, maybe I can use that. But should she? Why not, Julia liked teasing, she would enjoy it. Before she could stop herself, the words popped into her head, Julia, you know I think you're hot and you want to tease me.\n\nAs soon as the words formed in her mind Mary felt a thrill of electricity course through her entire body, her eyes slid closed and she shivered with lust. Oh dear Goddess, what was she doing? This was so, so wrong! Wasn't it? Was it? Was she really making Julia do anything that bad? Her friend liked teasing her, she was just giving her a new way to have fun teasing her. It was just in fun, Julia loved to tease and that's all it was. Just teasing, just fun. Right? \n\nA distant part of Mary's mind was screaming that she needed to stop this right now, that it wasn't right no matter how she tried to justify it in her own mind but the lust raging through her now held the veto power over that distant part of her conscience. It would be fine. It was just in fun. It was all fun she thought as another thrill coursed through her, making her toes curl and her lips quiver. A couple minutes later Julia walked back in, still wearing the skimpy bright yellow bathing suit. She walked around the living room for a couple minutes, straightening things up and putting back the furniture she had moved to make space for her fashion show. Mary thought that Julia was taking an extraordinarily long amount of time making sure that the low table next to the couch was set in just the right spot but she didn't complain as it gave her plenty of time to admire her friend's shapely backside. The thin yellow strings of the suit bottom curved over and down her shapely hips to a small strip of fabric had disappeared almost completely between the full, rounded cheeks of her bottom. Mary watched the display, completely enraptured, enjoying the way her friend was flexing and bending over before her, knowing that it was for her benefit. \n\nEventually, Julia stood and walked past Mary towards the kitchen. As she passed, she looked down at Mary sitting on one of the stools and gave her a sly, knowing little smirk. The look on Julia's face made Mary feel at once, intensely turned on and also incredibly dirty. With an effort, she pushed the dirty feeling down, Julia was enjoying this too she told herself. Just enjoy the show. \n\n\"Feeling well enough for a drink?\" Julia asked, opening the fridge. \n\n\"Yeah, sure, I'll have a little.\" \n\nTaking her time, Julia spent a few long moments looking on the lower shelves for just the right bottle of wine. Mary noted that it wasn't really much of a choice, there were probably only two bottles in there but again, she didn't mind the show. She smiled as Julia casually ran a hand up her thigh and to the small of her back as if balancing herself, casually pushing her hips back further and thrusting her ass out. Mary shuddered. \n\nEventually Julia chose the right bottle, poured two glasses and went to sit on the couch. \"Join me?\" she said, picking up the remote to the TV and turning on Netflix. \n\nTrying not to appear too eager, Mary joined her friend on the couch, not too close, and took the proffered glass of wine. Taking a sip, she noted it was a Riesling, fruity and sweet. The kind of wine you could drink a lot of very quickly. She suppressed her smile and thanked Julia. She also had to suppress her urge to stare hungrily at her beautiful best friend and her wonderfully revealing attire for the evening. While she was sipping her wine and trying not to look to obvious, Julia had already started the movie and skipped through the opening credits. \"So, what are we watching?\" She had to ask since she missed the title. \n\n\"You'll see. I'm giving you some culture tonight.\" Julia said with a little smirk. \n\nA sense of dread welled up in Mary. Julia's idea of culture probably meant... \"A foreign film?\" \n\n\"Maybe.\" \n\n\"Black and white?\"\n\n\"No. It's a new movie.\" Julia said with a small smirk. \n\nWell, that was something at least but then Mary saw the little smirk and the dread bloomed into full blown horror. She paused, not wanting to ask but had to know, \"Subtitles?\" \n\nJulia's smirk widened and Mary sank back into the couch with a huff and drank off the rest of her wine. She held the glass out to Julia. \"I'll need another to handle subtitles.\" \n\nSuppressing a laugh, Julia obediently got up and refilled Mary's glass. Bringing it back to the couch, she held the very full glass close in to her chest and leaned slowly forward, dangling her breasts in Mary's face. She smiled coquettishly, \"Here you go. Enjoy.\" \n\nFor a long moment, Mary eyed the luscious expanse of smooth, creamy skin on display right before her eyes. Then, swallowing hard, she took the wine and turned to watch the movie. \"Thank you.\" \n\n\"You are most welcome.\"\n\nThey settled in to watch the movie but Mary was hardly paying attention. Some girl was at home, getting ready for something. The speaking sounded French to Mary's ear but she wasn't quite sure. Subtitles flickered on and off at the bottom of the screen but she didn't read them. Her mind was too distracted with the events for the last few hours and more so with the knowledge of the young woman sitting next to her and what she might be thinking. Trying to be stealthy, she stole little glances at Julia every few seconds.\n\nJulia was slouched back comfortably in their huge, overstuffed couch, her nearly empty wineglass sitting on the end table. Mary's eyes traveled hungrily over Julia's body that was almost completely on display before her. The toned legs, new curvy hips, flat stomach, heavy breasts, her pert little lips, dark eyes, black hair.... She was breathtaking. Mary swallowed hard and had to concentrate on not pushing any new thoughts to her friend. It wasn't right. With an effort, she turned her attention back to the movie. Her head was starting to swim a little with the two glasses of wind she had downed in the last few minutes. The girl was in some kind of club now, talking with some other girls. More subtitles that she didn't read. \n\n\"I love this movie.\" Julia said after a few minutes. \"It's got a couple great scenes. I'm hoping you'll like it.\" \n\nMary looked from the screen to Julia. As her wandering eyes traveled over her friends body, seemingly of their own free will, she noticed that her friends nipples were now pushing through the fabric of the suit very noticeably. Was she getting turned on as well? The thought made a new wave of excitement roll through Mary's body and she had to fight to suppress a groan. \n\nGlancing over, Julia caught her staring and smirked as Mary's blushed and turned back to the TV. The girl on the screen was walking along a street now with her friends. \"Are you feeling ok?\" Julia asked, startling her a little, \"You drank that wine off pretty fast for someone who isn't feeling well.\" \n\n\"Oh, I guess I'm ok. I was just a little...\" \n\nJulia interrupted, \"I know,\" She sat up and scooted closer to Mary. \"a back rub will help.\" \n\nA thrill of excitement and alarm charged instantly through every nerve in Mary's body at Julia's words. Shocked, Mary stammered, \"Uh, I don't know...\"\n\n\"What? You've never complained before.\" Turning the unresisting Mary a little to the side and scooting up behind her, Julia settled onto her haunches. \n\nMary was about to mumble some feeble protest but then she felt her friends strong fingers dig into the muscles of her neck and the protest dissolved into a soft, little moan. \"Ooooohhh....\" \n\n\"See. I told you.\" \n\nMoaning again, Mary couldn't speak. Julia's fingers were like magic on her skin. This was so wrong, Mary thought. What was the ring doing to her? No back massage had ever felt this good before. Her friend's fingers were sending little tingling ripples of pleasure throughout her body with every movement and the tension in her back was melting like butter in the hot sun. After a few minutes of bliss, her eyes caught on the TV and saw that the girl was lying in the grass of a park now. The girl was very cute and Mary found that she was looking at the girl's lips even as Julia's talented hands continued to stoke her inner fire. She sighed as Julia's hands worked down her back and around her sides. So smooth were Julia's movements that Mary hardly noticed and didn't protest at all when her bathrobe was slid off her shoulders and down to her waist, leaving Mary sitting only in her undergarments. Her alcohol fogged mind still followed the lips of the pretty girl on the TV. The camera kept zooming in close when the girl was speaking, drawing attention to them. They looked very soft and Mary caught herself thinking how wonderful it would be to kiss them. Mary only now noticed that the girl was lying in the park talking to another girl, this one had blue hair and that they were looking at each other with heat in their eyes. She began to wonder what kind of movie Julia had put on, \"What kind of movie is this?\" She slurred out. \n\n\"A drama.\" Julia whispered into her ear, her hot breath making Mary shudder. She sat forward a little, coming beside Mary, \"I'm hoping it's something you'll like.\" She glanced at the screen then back to Mary, \"That girl's pretty cute, isn't she.\" Her fingers ran up Mary's spine making her shiver. She leaned back to Mary's ear whispering, \"Keep watching, this next scene is my favorite.\"\n\nAnother moan escaped Mary's lips as Julia's hands resumed sliding over her skin and her fingers worked deeper into her muscles. Distantly, Mary wondered if Julia knew the effect she was having on her. Dear Goddess, was this really Julia's idea of teasing? \"Is this good?\" Julia's words purred into her ear and Mary moaned at their heat. Yes, Mary thought, Julia knew exactly what effect she was having on her. \n\n\"Soooo gooood.\" She slurred out. \"What are you doing to meeee?\" \n\n\"I just thought you'd enjoy the feel of me being close to you. I noticed you've been checking me out all evening.\" \n\nA bolt of alarm went through Mary. She knew? But she didn't seem upset and her hands were still working their magic. \"It was just, I...uh...\" Mary started to mumble something but Julia interrupted her again.\n\n\"Oh, don't bother to deny it. I could see it plain as day.\" She leaned in even closer and whispered teasingly, \"And anyway, I like having you look at me like that.\" \n\nUnable to contain herself, Mary gasped and shivered. \n\nJulia continued whispering huskily, her lips just a breath away from Mary's ear. \"Do you remember that time in college, at that party when we made out? Remember how you let me feel you up for a while?\"\n\nOh dear Goddess, Mary thought, \"Yesss...\" \n\n\"Do you know I still think about that?\" Her breath was hot in Mary's ear, her lips almost touching her but not quite, still teasing her. \"I think about it all the time.\" \n\nJulia's lips moved down to the side of Mary's neck, the nearness making her skin tingle. Still not touching, skillfully teasing. Mary moaned again, \"What are you doooing...\" Mary's thoughts were muddled and confused, rolling about inside her alcohol and arousal fogged mind in all directions at once. She hadn't meant for Julia to do this to her, she had only wanted Julia to tease her a little. To show off her amazing ass a little and maybe jiggle her big tits, but this.... this was too much. Her friend was teasing as she had commanded her, but his was more, this was so much more. She was seducing her and in Mary's current state, with her new amped up sexuality there was no way for her to control herself. Her body wanted this and her mind wasn't able to say no. She somehow had to get control of this situation, she had to stop this. She couldn't allow her best friend to do this. Desperately, she started to form a command in her mind, Julia, I want you to... ",
        "But Julia interrupted her thoughts, \"I still think about how amazing your lips felt when we kissed, how you tasted of that strawberry wine cooler you were drinking, about the smell of your hair, about how your breasts felt in my hands, those little whimpering moans you made when I pinched your nipple for the first time, the feel of your body against me,\" As talked, she pressed herself up against Mary's back. Clad only in her skimpy bikini and Mary only in her Bra their hot skin touched. \"About how much I wanted you that day.\"\n\nThe feel of Julia's skin against her own was more amazing than anything Mary had experienced with another person. Julia's deeply erotic words coupled with the silky smooth touch of her skin set Mary's flesh burning wherever they were in contact and she made a hoarse, almost primal growling noise deep in her chest. Her hips started rocking against the couch of their own volition, pushing her sex down, digging into the soft fabric, allowing it to caress her intimate folds. The thrusting, rolling movement pulled the fabric of her soaking panties tight against her and sent bolts of pleasure through her. \"Uuungh...\" she slurred. \n\n\"Do you still think about that day?\" She said louder now, her voice throaty, \"I know I never told you I think about it but I do...\" Her hands slid around and up, smoothly slipping Mary's bra up and out of the way as she cupped Mary's breasts. \"I think about it every time I masturbate.\" As she spoke, she pinched Mary's hard, aching nipples. \n\nEcstasy exploded in Mary's mind and she cried out both at the words and the feel of her best fiends fingers rolling her sensitive nipples. Oh, dear Goddesss this was too much! \"Julia!\" She screamed as she fell backwards into a strong embrace and the feel of soft, wet lips on the side of her neck. Electricity raged through her as Julia pulled and rolled the sensitive summits of her breasts while her lips kissed their way down her neck and over her shoulder. Mary's entire body was trembling like a leaf in a storm as her thoughts scattered. Her eyes locked on the TV screen and she saw the two young women who had been talking in the park earlier were now naked and locked in a passionate embrace, their slim, beautiful bodies completely bared to each other. As she watched, the girl with the beautiful lips slid down and put her face between the other woman's legs, working her tongue into the other woman's sex. It was a lesbian movie. Oh dear Goddess , did Julia really watch lesbian movies? \n\nMary watched the women, totally enraptured as they pleasured each other while Julia pleasured her. She had never before realized how intensely, beautifully erotic, sex between two women was to watch. She felt she was sharing the delight of the woman on the screen as she watched the cute young woman with the pretty lips have her first orgasm. Her eyes closed and her head rolled back as her climax rapidly approached. Mary couldn't believe how beautiful the girls face looked as it contorted with the ecstasy that overtook her body. How deliciously erotic it was watching her body shudder and quiver as her release pulsed and throbbed deep inside her most intimate and secret places. How had Mary never before seen how breathtakingly beautiful a woman in rapture was? The thought of how beautiful Julia's orgasm would look entered her mind and she couldn't hold back a low, full throated moan.\n\nMary's thoughts were suddenly scattered as Julia gave her own little moan followed by a wet, sucking kiss to her earlobe as her strong hands continued to slid over her firm, sensitive breasts, cupping them, squeezing them, caressing them, fondling them as Mary whimpered. Julia's strong fingers, teased her hard nipples, pulling them and rolling them, twisting them and pinching them making Mary cry out with bliss. \n\nAfter a few minutes, Julia broke off and smoothly slid around in front where she paused and looked into Mary's eyes. Mary was astonished to see the depth of the heat and passion burning deep in Julia's dark, beautifully expressive eyes. The petite woman said, her voice trembling, \"Do you know how long I've waited for this?\" Without waiting for an answer, she leaned and for the first time since college, they kissed. Julia's lips were warm and soft but her movements were hungry and insistent, she kissed with a desperate abandon that shocked Mary but also intensely excited her. Julia's arms wrapped around her and pulled them together, their heated skin touching. Julia's huge breasts crushing Mary's smaller ones. She felt Julia's tongue play tenderly over her lips and she opened her mouth, allowing her friend inside. Their tongues danced and Mary reveled in the firm wetness of her friend, savoring the taste and sent of her. She had never imagined that another person could feel so good in her arms. After several minutes of bliss, Mary slowly realized that her friend was actually trembling in her arms and she tasted a salty wetness. Julia was crying. That realization snapped her back into some semblance or reality. She gently broke the kiss and pushed her friend away a little, looking into her eyes, \"Julia...wait, no... stop...\" she began but stopped when she saw the instant, dramatic and totally unexpected effect that her words had on her friend. \n\nJulia's eyes went wide and she shook her head, \"No, no, no! Please don't make me stop again. I won't be able to bear it this time.\" Her eyes were wide open and full of tears. Her voice trembled as she spoke, \"Not again! No, please!\"\n\nHer passions cooling further, Mary could now see pain blooming in Julia's eyes, \"Julia, what are you talking about? What do you mean, 'this time'?\" She recalled Julia talking about their kiss years before. \"You mean when we kissed in college?\" \n\n\"Yes.\" Julia practically wailed. \"That one time.\" She was trembling more now and tears were slipping down her pretty cheeks. \"I've been waiting for years for another chance to... to kiss you and to... to... to show you.\" \n\nDumbfounded, Mary looked at her friend with amazement, \"You've wanted to kiss me all this time?\" \n\nJulia only nodded. \n\n\"Why?\" \n\nJulia only looked down, her cheeks burning red as her tears continued to flow. \n\n\"Julia?\" Mary said softly, lifting her friend chin, their eyes meeting. \n\nJulia finally took a deep breath, steeling herself she said so quietly that Mary could barely hear her, \"Because I love you! I have since that first year we lived together. I think since the moment I met you.\" Her voice cracked and her lips were trembling. \"I've never wanted anyone as much as I want you. You, you're so amazing. You're smart, you're fun, you're beautiful and I can always depend on you. You're always there for me, you always listen to me when no one else would, you... you're... I...\" she stammered, visibly trying to get a hold of herself, \"When I met you, I just knew. It was like I had found the other half of myself.\" She turned away, \"But you...\" She swallowed hard, \"You broke off that kiss with me that one time I tried and you never let me try again. You said we shouldn't have done that and you never gave me another opportunity. And then you always had a boyfriend or were talking about some guy so I just, well, I knew that you weren't into girls. That you... \" She sniffled then looked straight into Mary's eyes, \"...that you weren't like me.\" \n\nMary felt her own tears welling up now at the look of pain and disappointment that burned in Julia's eyes. She couldn't believe this was happening, how much her friend was hurting inside and that she had completely missed it all. How had she not figured out that Julia was a lesbian? \"I can't believe you wanted me all these years? Why didn't you ever tell me?\"\n\n\"You weren't like me.\" Julia repeated. \"But I still loved you. So, I made up my mind that if I couldn't have you.... well, that way, then I would just have you as a friend.\" \n\nMary sat speechless as a tear slipped down her own cheek. She could only stare at Julia wondering how she had never realized any of this. Was her friend that good at hiding her feelings or was she just that dense? Julia had wanted her for years, had loved her so much that she was willing to just have her as a friend and even sit idly by while Mary had dated other people. Other guys, she corrected herself. How much that must have killed Julia inside, but still she was always smiling, asking how her dates went, asking if her dates were good to her, where they had gone to dinner, what movies, and even some more, well, intimate questions. Always hoping that Mary was happy and all the time wishing and hoping that it could have been her instead. Mary felt sick. \"I never knew...\" she said dumbly. \"If you're into, uh, into girls, then why haven't you ever had a... you know, a girlfriend?\" Mary finally managed to ask. \n\nJulia was looking down but said, \"I didn't want you to know. I thought that if you knew, you might not want to live with a lesbian, or worse that it would drive you away from me completely. I didn't want to lose you, even if I could never really have you.\" She sniffled.\"I actually have hada couple girlfriends over the years. I just hid my, uh... lifestyle from you. I never brought them back here obviously. Neither of them really lasted very long anyway.\" Finally looked up, her face wet with tears, \"They just weren't you.\" \n\n\"I never knew.\" Mary whispered again, her own tears burning hot trails down her cheeks. \n\n\"How could you? I hid it from you. I didn't want to ruin our friendship over it since...\" she paused and swallowed hard, \"Since I thought it was all I could ever have of you.\" She wiped away the tears on her cheek then continued, \"But then tonight, it was like all of a sudden, you seemed to be taking an interest in me, like something had changed and I.... well, I guess I got my hopes up. I hoped that if we could, uh... well, you know, maybe just once, then I could show you how good we could be together. I hoped I could change your mind about girls... about....\" she shuddered then continued in a whisper, \"... about me.\" \n\nMary looked at this amazing, beautiful, vibrant woman sitting before her and wondered how she could have been such a complete fool for so long. How had she never realized what she had right in front of her this whole time? Julia was always so vivacious and full of life, outgoing and personable that Mary had never realized how much she must have been hurting on the inside. Hurting because of her, because of what she wouldn't give her. Love. She didn't love her in return because she didn't love women that way. She had hardly ever before looked at women in the same way Julia had looked at me, with that kind of physical desire. Well, at least not while she was sober, she admitted to herself. It had always been men that turned her eye before, but now... she looked down at the ring on her thumb and with a bit of a start realized that men no longer held interest for her. She though back to her sessions with previous boyfriends and even to several porn movies she had watched and the thought of what those men looked like practically made her cringe inwardly. When had that happened? She looked down at the ring and it flared red for an instant, making her skin tingle before going dark again. She really had been changed. She thought that this should all upset her, probably a lot, but oddly, it didn't. In fact, the idea made her feel wonderful. \n\nShe looked up at Julia and heat flared in her chest, she really had changed and with that realization came a new sweet and heady feeling of euphoria that swelled inside her. Mary now understood that she could return Julia's feelings for her because she felt the same way. Taking her friends face in her hands, she made Julia look directly into her eyes. \"I wasn't stopping you because I didn't want to do that with you. I was trying to stop you because I didn't want you doing anything that you didn't want. But Julia... I guess... well, I guess I've... changed.\" She looked down at the ring and saw it flare red again for an instant. \"I guess I just never realized it before. I guess I was just stupid or blind or something to not see how you felt all this time. And I just never, well I never felt the same before but now, well, I've...\" she paused again, rubbing the ring on her thumb, \"I've changed. And I think I love you too Julia.\" With that admission, she leaned in and kissed her tenderly on the lips. \n\nFor a long moment, Julia just sat there frozen and wide-eyed as if her mind was trying to catch up with what Mary had just said to her. Then a light seemed to leap into her dark eyes and she leaned in and kissed Mary more fiercely than she had ever imagined possible. Her soft lips pressed desperately as if trying she was trying to meld them together into a single being. Her tongue pressed into Mary's mouth again and they danced hotly and wetly inside each other for many long minutes. \n\nJulia's hands resumed their fondling of Mary's sensitive breasts and hard nipples, making her groan softly into the petite girl's mouth which only seemed to excite her all the more. Julia broke their kiss and started kissing, nibbling and sucking her way down the side of Mary's neck making her shiver. \n\nNot wanting to be left out, Mary's hands came up and started their own wandering over Julia's exquisite new body. Her hands traced gently over the girls huge breasts and she marveled at the firm weight of the, full, heavy mounds. Her own breasts were not small but they felt tiny in comparison to this. Her palms brushed across the hardness of Julia's nipples pushing through the thin, stretchy material and she was instantly overcome with the desire to taste Julia's skin for the first time. Reaching up she found the tie of the strings behind Julia's neck and pulled the bow, releasing the top. An instant later, the lower string around her back was untied as well and Julia's glorious breasts were free. The full globes hung before her, the creamy skin capped by two large, pale pink nipples that stood out dramatically. Mary was a little surprised at just how large the nipples actually were. In her mind she had pictured Julia with small, pert nipples but what she now saw made her shiver with need. Long and thick, they were easily as big as the tip of her thumb, maybe even bigger. The thought of wrapping her lips around those huge nubs made Mary moan with need. \n\nShe was just bending down to have her first taste when Julia's mouth again recaptured hers. Mary was surprised to taste more tears on her friends lips. She broke away gently and looked into her eyes. \"Why are you still crying?\" \n\nTrembling Julia bit her lower lip. \"I'm sorry, I just wanted this, you, for so long. I wanted you so badly it hurt. It hurt so bad, but I couldn't let you know.\" She swiped at the tears and laughed nervously. \"But it's going to be ok now... right? Because you said... you said you loved me. Right?\" \n\nSmiling tenderly and brushing away the tears, she looked deep into those beautiful, dark and tortured eyes and thought of how much she had unknowingly hurt this girl for so long. How had I not known? How could I ever make it up to her? Mary instantly realized the answer was obvious, by loving her in return. She kissed her softly. \"Yes, everything is going to be ok now. It's going to be better than ok, it's going to be more wonderful that you ever dreamed it would be.\" She kissed her again, deeply and passionately this time, feeling as if she were melding them together through that kiss. Half consciously, she thought about how she needed to make this night, no every night and every day, everything, special for this amazing woman who had been willing to give up who she really was for her. \n\nWith a little start, she realized that with her new powers, she should be able to make this wonderful. She should be able to make everything wonderful for this woman. But could she? She still didn't really know how it worked. Up until now, she had just thought about what she wanted to happen, and it had. Sort of. She had thought about Julia having bigger breasts, but she knew she had not envisioned them being this big. The ring had done that part on its own. Could she somehow control it better? What should she try? \n\nTaking a deep breath, she imagined Julia's body in her mind, pictured her as a black and white outline, almost like a schematic diagram of the woman in her arms. Just imagining what she would look like completely nude made Mary groan and she had to concentrate. Don't get distracted she told herself even as she felt Julia's lips moving to her neck again, kissing slowly down towards her breasts. Goddess, her lips felt delightful on her skin and she found herself imagining how those lips would feel wrapped around her nipple, pulling the sensitive skin deep into the warm, enveloping wetness, the feel of... Stop it! Concentrate! she railed at herself. Dragging her mind back, she concentrated again on the image of Julia's body. She imagined the sensitive areas of her body as highlights. Her breasts were highlighted, her nipples brighter, her neck was sensitive, her lips, her ears, the inside of her thighs, up her spine, her pussy she imagined to be very bright, her clit and g-spot brightest of all. She realized that she was actually imagining her own sensitive areas, not necessarily Julia's. Her friend might not be as sensitive in all the same areas, like her ears for example. Personally Mary loved having her ears licked and nibbled but she knew some women didn't care for it at all. Well, she thought, it's a start anyway. Now... \n\nShe pictured the image before her all the sensitive, sexual areas glowing with different intensities. Then almost as if it were a photograph on her computer, she imagined turning up the brightness. All of the glowing areas got brighter. Would that be enough, Mary wondered. Concentrating, she turned up the brightness even more. Now, Julia's erogenous zones blazed with light and even the areas that hadn't been glowing before had started to glimmer. Not knowing if this was even going to work, holding the image in her mind, she concentrated and pushed the image to Julia who was now on her knees, straddling Mary's lap. Mary trying not to get distracted by the sight of Julia's huge breasts just inches from her face, overlapped the mental image with what her eyes saw before her. She felt the ring on her finger pulse with energy and the world around her shimmered for a single heartbeat as if the whole world had gone out of focus then snapped back. The two images before her, one in her mind and one in the flesh, melted together. \n\nJulia gave a little gasp then crumpled heavily onto the couch, half beside Mary and half in her lap. She lay motionless except for her heavy breathing. \n\nOh no, what had she done? \"Julia? Julia?!\" She pushed and pulled at Julia's inert form, getting her across her lap. No knowing what to do, Mary stroked her friends back, not quite shaking her, not yet anyway. \"Julia?\" \n\nJulia moaned, arched back and stirred in Mary's lap. \n\n\"Julia? Are you ok?\"\n\nJulia stirred a little more and arched her back, pushing her shoulders up into Mary's hand which had stopped moving. \"Mmmmm... keep doing that.... Feels soooo nice.\" She mumbled. \n\nJulia obediently resumed rubbing and Julia moaned softly. \"Feels so good. Your hands are like magic.\"\n\nHe panic receding, Mary took a calming breath. Ok, so I didn't kill her, she thought. After a couple more moments and a couple little moaning noises from Julia, Mary began to wonder if maybe it had actually worked. She deliberated on how she could test it. With a little twist of her lips, she slid her hand down to Julia's shapely backside and gave one cheek a firm squeeze, making Julia gasp. A few more squeezes and a few more gasps later and Mary was grinning wickedly. \n\nLeaning down a little, she whispered seductively, \"Do you like that?\" ",
        "\"Yessss.\" Julia hissed. \n\nShifting her hands upward, she slid them over Julia's sides and down her back again a few times. With each pass she slipped her hands lower and lower down her friend's sides until she was stroking the sides of her breasts. With each touch, Julia shuddered and made little keening noises in the back of her throat. Julia pushed herself up onto her elbows and repositioned herself, sitting up slightly so that her breasts dangled free and Mary could have better access. Not wanting to rush this, Mary continued to work her way ever so slowly around and down Julia's sides and around her breasts. Always avoiding the sensitive little summits. \n\nJulia was moaning and gasping openly now, her hips making rocking motions in the air and she continually pushed her chest down, trying to make Mary stroke her harder, trying desperately to get Mary to touch her nipples. \"Soooo gooood... Oh, touch me... please! Please I need it!\" She begged. \n\nEventually Mary couldn't resist any longer and she slid her hands fully over the mounds. She took her friends between her fingers again marveling at how large and hard they were. Whispering sweetly in Julia's ear, \"How is this, my Love?\" She gave both nipples a firm, rolling pinch while pulling them at the same time. \n\nA shriek was ripped from Julia as she had a sudden, shockingly intense orgasm. She bucked once in Mary's lap before her back arched upwards as all her muscled went rigid. Her head was thrown back, her eyes wide with rapture, and her mouth opened but her second scream was silent, her lungs were paralyzed with ecstasy. After a deliciously long moment, Julia's body bucked again and she screamed out loud this time, loud and long as her body came. Her head dropped and her eyes clenched shut. She squeezed her thighs together hard, the corded muscles of her toned legs standing out visibly as another crushing wave of ecstasy flooded through her. \"Mary!\" She shrieked as a third, smaller wave inundated her before receding. The cries of bliss and shuddering waves went on for several more minutes before the beautiful girl finally collapsed, completely spent, into Mary's embrace. \n\nMary was a little stunned at what she had done to her friend. Her own pleasure burned through her veins and she had actually come within an ace of having her own climax just from watching Julia but through force of will, had somehow managed to control herself and just enjoyed the show. Did I do that to her?, she wondered. A wicked smile slowly spread on her lips as she answered her own question, Of course it was me. Now, what else can I do? \n\nAs she had collapsed, face down, Julia had slid a little forward so that now her bottom was right in Mary's lap. Mary surveyed the deliciously curvy, round bottom with a growing hunger. The yellow thong had disappeared completely between the shapely cheeks leaving only a the yellow strings tied over her wide hips. \n\nWith one hand, then two, Mary fondled the plump, round bottom for a few minutes, enjoying how Julia's body twitched weakly at first while she whimpered softly into the couch. \"Noooo.... Can't yet....\" She slurred. \"Can't....ooooo.... yeah... ungh... noooo...\" she mumbled and grunted incoherently. Gradually her movements became more animated, and her moaning and grunting louder. Her little twitches and clenches were becoming a rocking motion as she pushed her backside up to meet Mary's hand. Casually, Mary pulled the side ties of the bikini bottom and slid the skimpy garment down, liking the way she had to tug it out from between the firm cheeks of her friends beautiful, round ass. Mary ran her fingers over the thin material and felt her own body shudder at the slippery wetness of the suit. Julia must be soaking wet. The thought made Mary moan inwardly and without meaning to, she slipped her fingers down between the cheeks of Julia's ass and let them glide over the soft outer folds of her sex. \n\nBeneath her light touch, Julia jumped and cried out anew. \"Oh my.... Aaah!\" Her hips bushed back and up, trying on their own to increase the contact with the invading fingers but Mary wouldn't be rushed. She pulled back just enough to keep a feathery contact and slid her fingertip over the wet, swollen lips. Mary continued her light, teasing torture of Julia for several minute while she enjoyed her own building pleasure. The feel of Julia's naked body under her hands and the delightfully naughty sounds her friend was making were sending Mary to heights she had only ever reached before with serious physical stimulation. She had never before gotten this close to an orgasm without even being touched. Squeezing her thighs together, she started rocking her hips, pushing her pussy as deep into the couch as she could and wishing that Julia had taken her panties off when she pulled her bra off. \n\n\"Do you like this, my Love?\" Mary asked, her words practically dripping with sex. \n\n\"Yessss!\" Julia cried with a shudder. \n\n\"Would you like more?\" With her free hand she smacked Julia's ass gently but firmly, making the girl cry out again. \"Would you like me inside you?\" \n\n\"YES! Fuck me please!\" She cried. \n\n\"Spread yourself open for me.\" Mary directed.\n\nObediently, Julia spread her knees, opening herself to Mary and at the same time, pushing her ass up towards her invitingly. \n\nGoddess this was so frigging sexy, Mary thought. \"Where would you like it, my Love?\" Mary purred, desperately holding off her own climax. Just a bit longer she told herself. \n\n\"Inside me! In ME! Oh please....ungh.... oh....\" The petite girl whimpered. \n\n\"Where?\" Mary continued to tease, her voice a little harder this time. Mary was finding that she rather enjoyed making Julia beg for this. \n\n\"In my pussy... please.\" Julia whimpered. \n\nMary smacked her ass again, harder this time. \"No my Pet, not that word. Where do you want it? Where do you need it. What naughty place do you want me?\" \n\nJulia hesitated a little but finally out in desperate need she whispered, \"I need it in my cunt! Ungh!\" \n\nThe sound of such a crude word on Julia's lips made Mary shiver. She had the disconcerting impression that a part of her mind that had been safely locked away was not being let loose and what worried her even more was that she liked it. \"What was that, my Pet? I didn't quite hear you?\" She purred. \n\nJulia cried out, \"I want you... you... in me. I want you... in my CUNT!\" Her words dissolved into a long low moans of need. \n\n\"Of course my Pet.\" Mary hissed as she effortlessly pushed three fingers deep into Julia's dripping, hungry sex. Instantly the girl bucked and jerked as another orgasm tore through her. She screamed with rapture she Mary pushed her fingers deeper , savoring the way the girl's powerful muscles squeezed her and tried to pull her deeper still. Wetness flooded from Julia's pussy and ran hotly over Mary's hand and thighs, soaking down her lap. \n\nThe feel of Julia's essence flowing over and soaking her own panties her was finally too much and Mary joined her lover in rapture. She cried out as fire burst between her thighs and ripped throughout her entire body in an instant. Every fiber of her being went taught as piano wire as her sex clenched down in a spasm so powerful it was almost painful. All rational thought was burned away as her cries matched Julia's, their bliss shared as they came together. She felt Julia's inner muscled pulsing and throbbing with her orgasm and knew her own were doing the same. \n\nMary was overcome with a need to taste Julia's lips and she dropped sideways to lie beside her. Using her free hand, she grabbed a handful of Julia's lustrous, silky black hair and forced her to look directly into her eyes for an instant. The lust and ecstasy she saw raging deep in those eyes sent her to new heights and she climaxed again with a cry. \n\nWith savage desire, Julia reached over and pulled their faces together, mashing their lips together so hard their teeth grated and Mary tasted blood. Julia cried out onto her mouth and Mary joined her. Julia caught Mary's tongue and sucked hard on it, pulling it deep onto her hot mouth. \n\nPleasure upon pleasure continued to build as they writhed. Mary felt Julia rip her panties off, the fabric biting painfully into her flesh for an instant before it broke away, exposing her drenched sex to the cool air and making her moan loudly. The moan turned to a feral cry and Julia pushed herself down to bury her face between Mary's thighs. The feel of her best friend's tongue playing over her lips and plunging inside her was the most erotic experience of her life. Her knowing tongue found the hard little bump of Mary's clit and she wrapped her lips around it, pulling it in holding it tight while the talented tongue flicked it mercilessly. \n\nMary's entire existence became centered on her sex as her conscious mind shattered like glass and her body became nothing but a screaming chalice of ecstasy. Unable to bear the exquisite torture any longer, Mary's universe dissolved into the void.\n\n<center>* * *</center>\n\nTo be continued..."
    ],
    "authorname": "china-doll",
    "tags": [
        "lesbian",
        "mind control",
        "magic",
        "ring",
        "transformation",
        "manipulation"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/changed-redux-pt-01"
}