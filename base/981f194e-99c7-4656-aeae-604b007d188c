{
    "title": "Fated Destiny Ch. 01",
    "pages": [
        "Tom Parta was working late. Having just graduated from the University of Idaho with a degree in finance, he managed to land a job in Baltimore, Maryland with the Castlewood Management Group. The Group was a capital management company, which controlled millions of dollars in assets. Tom knew he was lucky to get the job. The woman that had the position before him was more interested in sleeping with the clients with the hope of marrying one than in completing her work. Unfortunately, for her, a couple of the wives found out and protected their golden geese by getting her terminated.\n\nTom shook his head and sighed, both at his perception of the woman's folly and the amount of work she left behind. The quarterly reports were late and half of the billing statements had not been sent out yet. Tom rubbed his blood-shot eyes and looked over at the clock on his desk. The hands showed 1:17 in the morning.\n\n\"Friday night and I'm stuck here,\" thought Tom as he stood up, stretched, and went around the hall to the bathroom. \"Actually, Saturday morning...but not that I had anything better to do.\"\n\nTom walked into the bathroom and looked at himself in the mirror. At six-feet, three-inches tall, one hundred and ninety pounds, with sandy-brown hair and blue eyes, he was considered ruggedly handsome. He played football and wrestled in college, but knew his athletic abilities were not good enough to go pro. Raised in Idaho on a farm, he had developed a natural shyness that kept him away from the college party scene and woman in general. It was not that he did not have quite a few women friends...he did. It was just that he became tongue-tied and withdrawn when he was out on an actual date.\n\nThe move to Baltimore was a big one for him. He was all set to graduate with honors when one of his professors called him into his office. The professor had investments with Castlewood and was friends with the president of the company. When the professor had heard about the opening, he put Tom's name forward. After a quick interview and with the recommendations of his professors, Tom was offered the position.\n\nNow, after being on the job for a month, Tom had uncovered all the unfinished paperwork. He had been pulling late nights all this week to catch up. Shaking his head, Tom leaned down to splash water on his face and dried off with a couple of paper towels. Looking at himself in the mirror again, he remembered back to one of his classes.\n\n\"Perception,\" stated his professor, standing in the front of the class. \"Perception is the one thing that will get you into trouble. You can make a ton of money for your clients, but if they see you as sloppy, haphazard or incompetent, you might as well go look for a new job.\"\n\nTom shook his head again to clear it. He debated on whether to pack it in or finish off the work tonight. Mentally going over what work was left to be done, He figured it would only take him another hour. He would than have the rest of Saturday and Sunday off.\n\n\"Well, no rest for the wicked,\" he thought, craning his neck to get the kinks out of it.\n\nTom walked out of the bathroom and started down the hall back to his cubicle. He suddenly stopped and froze as he heard a series of scrapes and thumps coming from his boss's office. It sounded like objects had been slid across the furniture and dropped onto the tick pile carpet.\n\nTom stood still, unsure of what to do. He knew his boss, David Silverman, had left at 6:00 PM. Mr. Silverman had looked in on Tom as he was leaving. He told Tom not to work too late and that they were appreciative of the extra work he had been doing. Mr. Silverman had walked away with a wave of his hand and a reminder for Tom to document his overtime.\n\nTom's cubicle was in the back corner of the suite of offices. He knew that anyone could have entered and he would have never have heard them come in. It was still strange to him that someone would be here after one in the morning.\n\nTom heard movement inside the office. He thought about calling the police, but decided it would be foolish if it was just Mr. Silverman stopping by the office on his way home from the opera or a show downtown. Creeping forward, Tom sneaked up to the door to look in before deciding to do anything. He gasped and stood still in shock at what he saw.\n\nEverything had been shoved off Mr. Silverman's large oak desk. Pen sets, a brass clock, trays and papers were strewn all over the floor. David Silverman was lying on top of the desk with his legs hanging down over the edge. He was the vice president of the company and in his late fifties. What had shocked Tom was the fact that not only was Mr. Silverman naked, but there was a nude woman standing between his legs sucking on his cock.\n\nThe woman was statuesque, being about six feet tall with cantaloupe-sized breasts and a narrow waist. She looked to be in her early twenties. Her long, wavy, blond hair was draped over to one side of her neck. A long-nailed hand gripped the base of Mr. Silverman's hard prick, while her full lips formed an oval seal around the head of his penis. Tom raised his eyes slightly and was surprised to see the woman looking at him.\n\nHer eyes were a brilliant green and gorgeous. Tom could have sworn that he saw little red and orange sparkles in them. He could only stand there, mesmerized by her gaze.\n\n\"Stay.\"\n\nThe thought reverberated through Tom's brain, freezing him in place. He knew the woman wanted him to stay where he was and not leave. All thought seemed to vanish from him. She broke their eye contact and returned her attention to Mr. Silverman. \"Oh, Miss Covington...Desiree...I shouldn't...I can't...Oh, God!\" gasped and moaned David Silverman as the woman's head started to bob up and down.\n\nTom heard the slurping sounds as the woman he knew was Desiree sucked greedily on the hard shaft filling her mouth. Her cheeks billowed inward as she lifted her head as if to vacuum out Mr. Silverman's juices. Toms' own cock became hard at the sight of the sex scene in front of him. Mr. Silverman's head lolled back and forth as his unfocused eyes stared up at the ceiling in the excitement of his passion. Tom saw Mr. Silverman's body begin to tense and Desiree sucked even faster on his cock.\n\nTom looked in amazement as Desiree's tits jiggled and squiggled as they slapped into one another from her up and down motion. Her areolas were pale pink with thimble-size nipples sticking out. Each swaying globe would have been a double handful for Tom and he longed to grab hold of them. The strange compulsion in his mind kept him firm rooted to where he was standing, though. Tom marveled as his eyes traced down the curve of her back to Desiree's perfect heart-shaped ass.\n\n\"I...I...Oh, God,\" gasped Mr. Silverman in pure ecstasy. \"Oh, God...I...Oh. God...Oh, God...I'm...I'm...I'M...AHHHHHHHH!!!!!\"\n\nTom watched as Mr. Silverman's body stiffened in climatic pleasure so much that his hips arched upward. Desiree kept her lips locked around the shaft of his cock as he started to ejaculate. She nosily swallowed down his first load of hot cum that spattered into her mouth.\n\nTom was gasping for breath in his excitement and his hard cock strained against his pants. Not only was it thrilling to watch, but it had an extra spice since he knew that Desiree knew he was watching both of them.\n\nSlowly, Tom's excitement changed to alarm. Desiree was still sucking and swallowing Mr. Silverman's spurting sperm. Tom was sure that no one could cum that long. Mr. Silverman's hips remained arched off the desk and his whole body was shaking as he continued to climax. Copious amounts of white jizz oozed from the corners of Desiree's mouth to roll down the hard shaft of his cock and still she continued to swallow.\n\nTom's alarm became horror as he saw Mr. Silverman's body shrivel in on itself. Silverman's eyes took on a wild look as his ecstasy continued and did not abate. His hands gripped the edge of the desk like claws and his skin shrank and tightened around his bones. With a long, low, rattling exhale, Mr. Silverman collapsed, his unseeing eyes wide open, as his cock dribbled out its final juice.\n\nDesiree smacked her lips.\n\n\"Ah, I do so love a good suck,\" she said in a low, husky voice as she licked the cum off her lips and hand. \"Well, did you like the show?\" \"He's...He's dead!\" gasped a stunned Tom as he stared at the desiccated corpse.\n\n\"Can't make an omelet without breaking eggs,\" replied Desiree as she rummaged through a large purse at her feet. She pulled out a carved wooden box, about three inches square, and set it on the desk. \"It was, however, the best sex of his life.\"\n\nDesiree opened the box and Tom gasped as he felt a cold, chill wind blow past him. His eyes widened as he saw Mr. Silverman's body begin to disintegrate. The body was breaking down into dust and swirling up to fly into the box. Mr. Silverman was completely gone as the last mote flew into the box and Desiree closed the lid with a snap. Tom was shaking in fear, but could not overcome the compulsion to stay where he was.\n\n\"Now,\" breathed Desiree, standing up straight and turning towards Tom in her beautiful nakedness. \"It's your turn.\"\n\nTom knew he should flee, but was rooted to the spot by that one word command. He looked around desperately for help as Desiree took one step closer to him. Her whole body swayed in that one step, exuding sex beyond belief. Tom's eyes fell on the large mirror-like artwork behind the desk and he gasped out loud at the sight.\n\nThe entire room was visible in the mirror. Tom saw himself standing in the doorway and could clearly see the furniture in the room. What he did not see was Desiree, even though she was standing in the middle of the room itself. She had no reflection.\n\nDesiree's face took on an angry, puzzled look when she saw that Tom was not staring at her, but over her shoulder. She looked over her shoulder to see what he was staring at. When she caught sight of the mirror, her face turned into a fierce grimace of anger and loathing. With a snarl, she snatched up the clock off the floor and flung it at the mirror. With a loud crash and the tinkling of a thousand shards, the mirror shattered everywhere.\n\nDesiree stood still for a moment, her large breasts heaving as she regained her composure. She placed a smile on her face and turned around.\n\n\"Where were we?\" she asked and then gasped as she stood still, looking at the empty doorway. \"Damnation!\" she growled as she sprinted with amazing quickness out the door and down the hall.\n\nThe breaking of the mirror seemed to snap the mental control Desiree had over Tom. His fear overwhelmed him as he turned and just ran. He did not know where he was running to. His only thought was to get as far away as possible. It was pure, dumb luck that led him down the stairs to the front doors.\n\nTom burst through the doors, ran down the street, and around the corner without looking back once. Just after he rounded the corner, Desiree pushed open the front door, but backed up quickly as a police raced by with its lights and siren on. With a vile oath, Desiree gave up the chase and went back up to the office.\n\nTom had absolutely no idea how he got home. From the time the mirror broke until the very second he crossed the threshold of his apartment, his mind was blank. Alone and shaking with fear, he stared around his apartment until he was finally able to get himself under control and oriented as to where he was. The clock on the wall read 4:52. Panting heavily, Tom picked up his phone and dialed.\n\n\"Baltimore City Emergency Dispatch.\"\n\n\"I...I'd like to report a murder,\" gasped Tom in a shaky voice.\n\n\"Location of the occurrence?\"\n\n\"Candlewood Management Group.\"\n\n\"The address, sir?\"\n\nTom shook his head to clear out the fuzziness.\n\n\"It's on the fourth floor...The tall building at St. Paul and Pratt.\"\n\n\"Are you injured, sir?\"\n\n\"What? No...No, I'm fine.\"\n\n\"Who was murdered, sir?\"\n\n\"David Silverman,\" replied Tom.\n\n\"Can you tell me what happened, sir? Can you give me any details?\"\n\n\"Desiree, uh, Covington, she...uh...\" and Tom stopped, suddenly aware of how blatantly absurd the entire incident would sound to another person. \"She, uh, killed him and hid the body.\"\n\n\"Did you witness the murder? What is your name, sir?\"\n\nAt the last question, Tom stiffened and hung up the phone. He then disconnected the phone line from the wall jack. After pulling a baseball bat out of the hall closet, Tom sat down on the sofa, looking this way and that, as he prepared to defend himself for the rest of the night. Exhausted, both mentally and physically, he instantly fell asleep.\n\nTom's dreams were both frightening and erotic. He saw himself running naked through a red and black maze. Evil laughter vibrated off the walls as Desiree loomed over the top of the maze, her large breasts suspended like moons above Tom. She lifted her head and guzzled jism from a cock like she was drinking from a soda bottle. The cock collapsed in on itself and Desiree tossed it aside like rubbish. Tom tried to run from her, but kept hitting dead ends. Desiree reached down for him. What Tom could not understand was why she kept pounding against the walls.\n\nTom jerked awake, clutching tightly to his bat, as the loud banging began again at his front door. Sunlight was streaming in through the window. Tom got up and cautiously approached the front door.\n\n\"Who's there?\" he called out, raising up his bat.\n\n\"Mr. Parta? We're police officers. Do you mind if we ask you a few questions?\"\n\nTom unlocked the door, but left the chain in place. He opened the door to ask for identification, but the man and the woman on the other side were already holding up their badges.\n\n\"Wait a minute,\" said Tom as he closed the door to undo the chain. He propped the bat in the corner and opened the door. \"How may I help you?\"\n\n\"I'm Detective Smith and this is my partner, Detective O'Malley,\" said the man as they followed Tom into the living room. \"We're here about David Silverman.\"\n\nTom caught his breath and stared at the two of them warily. The man was in his early forties with grey sprinkled through his black hair. The female detective was much younger, about in her mid-twenties. She even looked like her name with her bright red hair and green eyes. What they saw was a young man with blood-shot eyes and a haggard expression in dirty, wrinkled clothes.\n\n\"I don't know what you're talking about,\" said Tom, trying to appear nonchalant. \"Mr. Silverman should be at home.\"\n\n\"He's not,\" said Detective O'Malley. \"Mrs. Silverman called the police this morning to report him missing.\"\n\n\"And...\" added Detective Smith, pulling a small pocket recorder out of his jacket pocket.\n\nDetective Smith punched the play button and Tom winched when he heard his voice, very hysterically, telling the dispatcher about Mr. Silverman's murder. Both detectives looked at Tom with suspicion on their faces as Detective Smith stopped the playback.\n\n\"Looks like you know more than you're letting on,\" stated Detective Smith as he put the recorder away. \"Why don't we take a ride down to your office and see what's there?\"\n\nTom found himself flanked on both sides by the detectives as they escorted him to their car and drove him down to the office. He felt a chill run up his spine as he approached the front door. He did not have any choice, but to go in as the detectives were determined to see the office. The three of them went up the elevator and stopped in front of the door to the suite. Tom unlocked the door and went in, only to be confronted by three people inside already. Tom immediately recognized one of the two men.\n\n\"Mr. Hart!\" he exclaimed, surprised.\n\n\"Tom,\" acknowledged Mr. Hart, slowly. \"May I ask what you are doing here with these people?\"\n\n\"Who might you be?\" asked Detective O'Malley before Tom could answer.\n\n\"William Hart, President and CEO of this company,\" replied Mr. Hart. \"You are...?\"\n\n\"Detective Colleen O'Malley and this is my partner, Detective Richard Smith,\" she stated as she looked from Hart to the other two people.\n\n\"May I ask why you are here with one of my employees?\" asked Hart, ignoring Detective O'Malley's unasked identity question. \"If you have a search warrant, I would like to see it.\"\n\nO'Malley and Smith exchanged looks.\n\n\"We are investigating a missing persons report,\" stated Detective Smith. \"Sophia Silverman reported her husband, David, as missing this morning. We came here to ascertain if Mr. Silverman is on the premises.\"\n\n\"And you picked up Mr. Parta to open the office for you? Mr. Parta, the federal securities regulations are very strict. You should have notified me before coming here with non-employees, even if it is the police. I will show the detectives around. We will discuss this on Monday.\" Hart's last sentence was clearly a dismissal.\n\n\"I'm afraid Mr. Parta can't leave just yet,\" said Detective Smith.\n\n\"Why?\" asked Hart, as his eyes narrowed in suspicion. \"What haven't you told me?\"\n\nThe two detectives exchanged looks again.\n\n\"Early this morning, Mr. Parta called 911 and said that David Silverman had been murdered in this office by Desiree Covington,\" said Smith. \"He hung up before the dispatcher could get all of the information and it was classified as a crank call. When Mrs. Silverman called about her husband, we were informed of Parta's call.\"\n\n\"I see,\" said Hart. \"Ms. Covington is one of our clients and I have to ensure her financial confidentiality. I am willing to show you around the offices to see if David is here.\"\n\n\"Thank you,\" said Smith. \"Detective O'Malley will stay here with Mr. Parta and the other two.\"\n\n\"The other two? I'm sorry, but you can't...\"\n\n\"It's alright, Villiam,\" interrupted the other man, speaking with a foreign accent. \"I know you are trying to protect us, but if it is a murder, ve vill have to give our names to the officers. Go ahead and see if David is here.\"\n\nHart nodded in acquiescence. He then led Smith down the hall to the private offices.\n\n\"I am Dr. Sergi Maleski,\" said the man to O'Malley, while producing a business card for her. \"This is my granddaughter, Anya. My address and telephone number is on the card. May I suggest ve get this young man a chair before he collapses onto the floor?\"\n\nTom was indeed swaying back and forth in fatigue. Sergi pulled a chair away from the wall and Tom fell into it. O'Malley kneeled down beside him.\n\n\"Mr. Parta, you've had a long night by the looks of things. Why don't you just tell us what Covington did to Silverman?\"\n\n\"She sucked the life out of him,\" moaned Tom, his head hanging down in fatigue. \"I went to the bathroom. I was working late and it was after one. They were naked in his office.\"\n\n\"What do you mean she sucked the life out of him?\" asked O'Malley softly. \"What did she do?\"\n\n\"She was between his...\" Tom's head snapped up as he realized what he was saying. His face went beet-red in embarrassment and his tongue clove to the roof of his mouth. He looked over into O'Malley's rich, green eyes and his mouth gaped like a fish as he tried to find the words to say.\n\n\"C'mon, Parta,\" snorted O'Malley in disgust, recognizing his shyness in his inability to talk. \"I've heard it all before.\"\n\n\"Excuse me, Detective,\" interrupted Sergi. \"Do you mind if I give it a try?\"\n\n\"Be my guest,\" gripped O'Malley, throwing her hands up in the air.\n\n\"Let us go into some place a little more private,\" said Sergi as he opened the door to a glass-walled conference room and led Tom inside. He closed the door as Tom collapsed into one of the swivel chairs. \"Vell now, my young friend, you seemed to have had a busy night. How are you feeling?\"\n\n\"Are you a psychologist, Dr. Maleski?\" asked Tom, looking over at the older man. Dr. Maleski was in his late-sixties, about six feet tall with a thin build and silver hair. He was immaculately dressed and had a thin moustache.",
        "\"No,\" replied Sergi, with a smile. \"My degrees are in related fields of history and religion, but I'm sure that the detectives think of me as a medical doctor. Can you tell me exactly what you saw?\"\n\nTom went over the entire story. For some reason, he trusted Dr. Maleski. Sergi stopped Tom several times and went back over a couple of points several times. Tom had to describe the box, the length of time he stood in the doorway and Desiree's reaction to the mirror more than once. Tom even told Dr. Maleski about his dream. He ended his tale at the point where the detectives were knocking on his door.\n\nSergi sat still with his fingers steepled in front of him as Tom fell silent. They sat silently, one reliving...the other contemplating the events of the previous night. Sergi finally sighed and stood up.\n\n\"No, sit down,\" he ordered Tom, when Tom tried to stand. \"You are exhausted and have seen something you should not have. I think you should stay vith me for the next couple of days.\"\n\n\"Was it...was it real?\" asked Tom.\n\nSergi's face saddened.\n\n\"I believe so, but ve vill discuss this later after you have had sufficient rest. Now, let me go out and convince the police that you are not responsible.\"\n\nSergi stepped out of the conference room. Hart and Smith had returned. Sergi bent down and whispered something into Anya's ear. She nodded and walked into the conference room.\n\nAs she entered, Tom got his first real look at Anya. She was as impeccably dressed as her grandfather. Her gray dress enhanced her figure, indicating a firm, tight body underneath. Anya's long black hair was braided behind her and hung down past her waist. Her hazel eyes were almond-shaped and she had full rich lips. In one word, she was gorgeous.\n\n\"My grandfather has asked me to sit with you,\" she said in a sultry voice and a small smile. \"I understand you will be staying with us for a little while. How are you feeling?\"\n\n\"I'm, uh, fine,\" stammered Tom. \"I'm just tired and confused.\"\n\n\"As you should be if Mr. Hart is correct about the hours you have been working,\" stated Anya, sitting down and crossing her legs. \"Can you tell me what you told my grandfather?\" She reached over to touch his arm lightly. \"Please? It is important.\"\n\nTom's face flushed hotly as he felt something like an electric charge pass from her fingertips to his arm. Not painful, but he knew it was partially from his shyness and from her beautiful eyes staring at him earnestly. He was actually thrilled by her touch. Tom turned away and, by not looking at her, stammered through a condensed version of what he had told Sergi. Anya looked at Tom with concern and was just about to say something when the conference room door opened.\n\n\"Mr. Parta, Dr. Maleski has told us what you thought you saw,\" said Smith as everyone came into the room. \"I've also taken a look at your time card. It looks like you've only been getting two to four hours of sleep each night this week. Is that correct?\"\n\n\"Yes, I guess so,\" stated Tom.\n\n\"Is it possible you fell asleep and dreamed this vision?\" asked Smith. \"I'm not trying to offend you or trick you. I'm just trying to get at the truth.\"\n\nTom looked at Sergi, who nodded.\n\n\"I really don't know,\" said Tom, with a shake of his head. \"When I ran out of here, I can't remember several hours. It seemed real.\"\n\nSmith sighed loudly. \"The mirror in Silverman's office is gone and the clock is broken. I'm going to have the Crime Lab process the office on the chance that some part of Mr. Parta's story is based on reality. Mr. Hart, we will need to fingerprint your employees. I will also need Ms. Covington's address and phone number.\"\n\nClearly, Hat did not like the request for a client's information, but he left to go get it. Smith turned back to face Tom.\n\n\"I understand you will be staying with Dr. Maleski,\" he said. \"Go get some sleep. We would like to see you on Monday to get a written statement when you have a clearer mind.\"\n\n\"Uh...sure,\" said Tom, shaking his head to keep from nodding off.\n\n\"Come, my young friend,\" said Sergi. \"You need sleep more than anything else. Detective, do you vish for Mr. Parta to come to your station or vould you rather meet him at my house?\"\n\n\"At Headquarters,\" said Smith.\n\n\"Your house,\" said O'Malley, at the same time.\n\nSmith looked at O'Malley quizzically in response to her statement. Sergi glanced back and forth inquiringly between the two detectives.\n\n\"Your house at nine, if you don't mind,\" said O'Malley to Sergi. She turned to Smith. \"We should get written statements from both Dr. and Ms. Maleski. Since they have been in the office, we will need their fingerprints. We can get them all at one time.\"\n\n\"Of course,\" stated Smith, noncommittally.\n\n\"Ve vill be avaiting your arrival on Monday,\" said Sergi. \"Villiam, I vill deliver Mr. Parta back to you on Tuesday.\"\n\n\"Considering all that has happened and the rest he needs, I would say to bring him back on Wednesday, but I know you are leaving Monday night,\" stated Hart, who was returning with Covington's address.\n\n\"I think I vill postpone my trip,\" said Sergi. \"I vill call your secretary on Monday to arrange another meeting.\"\n\n\"That will be fine,\" stated Hart. \"Tom, we will see you back on Wednesday morning. Get some rest and don't worry about your time. I'll mark you working on Monday and Tuesday.\"\n\nTom hardly registered Hart's words as the last of his strength left him. He remembered being helped to his feet by Sergi and Anya and taken to the elevator. He also remembered the odd look that O'Malley gave him as Anya draped his arm over her shoulder just before the elevator door closed. The black limousine with the driver in front of the building shocked him a little more awake, but the soft leather seats sent him right out.\n\n\"Vhat do you think?\" Sergi asked his granddaughter, nodding at the sleeping man.\n\n\"Do I think he ran into one of...them? Yes, I do,\" replied Anya. \"I think he confused her biting Silverman in the femoral artery for oral sex, though.\"\n\n\"I am not so sure,\" said Sergi. \"As soon as ve have him settled in one of the guest rooms, ve need to some research.\"\n\n\"I guessed as much,\" said Anya. \"It has you worried enough to cancel the trip you have been planning on for the last year. I hope the detectives bought your story about sleep deprivation.\"\n\n\"What the hell was that about?\" asked Rich Smith as he and Colleen were waiting for the Crime Lab personnel to show up.\n\n\"Excuse me? What the hell was what about?\" asked Colleen.\n\n\"Oh, we'll meet at your house,\" mimicked Rich. \"We can get written statements and fingerprints. It'll be just so dandy. It would have been simpler at Headquarters, but now we have to drag the gear to their house. Why?\"\n\n\"Just a feeling,\" stated Colleen. \"Those two are more than what meets the eye. Why take a stranger into their house? It may have been just coincidence that they were here the day after Silverman disappeared, but I don't think so. If Parta did see Silverman having an affair with Covington, it's gonna be messy. We're going to have to look at Mrs. Silverman along with Parta, Covington, and the Maleski's.\"\n\nRich sighed, \"Let's not forget Hart.\"\n\n\"Hart!\" exclaimed Colleen. \"What for?\"\n\n\"Improprieties with the clients is a good way to get the feds on your neck, especially when you're dealing in securities and bonds. Silverman's disappearance may have been a way to avoid all types of complications. Of course, Hart may have had a thing going with Covington also...maybe Parta, too. It all goes to motive.\"\n\nColleen guffawed. \"Parta has trouble relating to women that way. All I had to do was to look him dead in the eye and he got all tongue-tied.\"\n\n\"He is a bit shy around your kind,\" laughed Rich, but then he stopped and became serious. \"Obsession?\"\n\n\"I'd say no, but I can't rule it out,\" admitted Colleen.\n\n\"Well, I guess since we have Hart here, we might as well interview him,\" said Rich as he got up and headed towards the conference room door.\n\nTom was awoken by someone gently shaking his arm. He heard birds chirping and could sense the sun shining. He opened his eyes to stare up at a pixie-like face surrounded by short honey-brown hair. A pair of brown eyes stared back into his. Tom shifted his gaze downward and found himself staring down an impressive cleavage since the girl had bent over at the waist to shake his arm.\n\nTom's first thought was to ask himself why a girl in a maid's outfit was in his room. He then realized that this was not his apartment. With a yell, he threw off the sheets and bounded out of the bed on the opposite side.\n\n\"Mein Gott!\" exclaimed the girl breathlessly as she stared at Tom.\n\nTom suddenly realized that he was naked and had a hard-on as the girl continued to stare at his cock. Another reason for Tom's shyness was due to his penis. Being thick and eleven inches long when hard had earned him a lot of ribbing and jokes his entire life, which had embarrassed him to no end. One high school girl had heard the rumors and went out with him to find out the truth. When she finally saw it, she screamed in fright and ran off. Her accounts grew into great exaggerations. Tom yanked the sheet off the bed and managed to get it wrapped around him just as Sergi and Anya rushed in. Sergi was holding his walking stick as if it was a weapon and Anya was cradling a crossbow in her arms. They both visibly relaxed when they saw Tom and the maid.\n\n\"I am sorry, Thomas,\" apologized Sergi. \"Today is Sunday and I forgot to tell Gretta not to vake you up. That vill be all, Gretta.\"\n\n\"Jawol, Herr Doctor,\" said Gretta with a curtsey. She then gave Tom a sly wink and wide smile before flouncing out of the room.\n\nGrandfather, I thought you were going to talk to Gretta about that French maid's outfit she wears!\" accused Anya. \"She's not even French. She's German.\"\n\n\"Anya, I have talked to her until I am blue in the face,\" stated Sergi in a weary voice. \"It is your fault, you know. You started her reading those Victorian mysteries, which started her thinking of herself as a parlor maid.\"\n\n\"Excuse me,\" interrupted Tom, still standing with the sheet around him. \"I would like to get dressed here.\"\n\n\"We're not stopping you,\" said Anya.\n\n\"Anya!\" admonished Sergi. \"I am twice sorry, Thomas. Please get dressed and ve vill meet you downstairs for breakfast.\"\n\nWith that, Sergi shooed his granddaughter out of the room. Tom took a second to look around after they had left. He had been sleeping in a king-size four poster bed. The furniture in the room was all cherry finished and beautifully carved. Tom's clothes lay on top of the trunk at the foot of the bed. They had been cleaned and pressed. He quickly got dressed and was spreading the sheet back on the bed when there was a knock at the door.\n\n\"Come in,\" said Tom.\n\nThe door opened to admit a raven-haired Hispanic girl and a tall man. The girl stopped and arched an eyebrow at Tom, who was holding onto the sheet.\n\n\"And what are you doing?\" she asked with a Spanish accent.\n\n\"I,uh...making the bed,\" replied Tom, lamely.\n\n\"And why would you be doing my job?\" she asked sarcastically.\n\n\"Easy, Maria. He's new here,\" said the man.\n\nMaria turned to face the man and drew herself up, even though the top of her head did not reach the top of his shoulders. The man took a step back and held up his hands as Maria wagged a finger at him and began cussing him out in Spanish.\n\n\"It won't do you any good,\" he told her. \"You know I can't understand a word you say.\"\n\n\"Si, but you get the meaning,\" said Maria. \"Now, take him downstairs like you're supposed to. I've got work to do.\"\n\nMaria then forced both men out the door before going over to make the bed. Tom looked at the man questioningly and the man just shrugged his shoulders before turning around. Tom made to follow him.\n\n\"Howdy, I'm James,\" said the man as he led the way top the staircase. \"We met yesterday when I was driving the doc around, but I don't think you'd remember. You was out like a light.\"\n\n\"How did I get...uh...undressed?\"\n\n\"Well, I could say that Gretta or Maria stripped you down, but it actually was the doc and myself. Once you hit the sack, you was gone. Been asleep until now,\" said James with a laugh.\n\nTom suddenly realized that they were walking down a large hallway. Paintings hung from the walls and statues appeared every now and then in the alcoves. He looked out of a window they were walking by and saw and elaborate garden outside with woods just beyond.\n\n\"Where are we?\" asked Tom.\n\nAt the doc's house out the Greenspring Valley way,\" replied James as they went down a large circular staircase. \"It's just a small place we like to call home. You'll get used to our odd behavior in time.\"\n\n\"Like Miss Maleski coming into my bedroom with a crossbow?\" joked Tom.\n\nAll humor vanished from James' face as he turned to look at Tom.\n\n\"Some behavior is not all that odd, but that would be better coming from the doc,\" he said. James turned and opened the door they were standing next to. \"Here we are.\"\n\nThe dining room table could have easily seated twenty people. There were three place settings at the far end of the table with Sergi and Anya sitting in two of the seats. Sergi stood up as Tom and James came forward.\n\n\"Ah, good...Here you are,\" said Sergi to Tom. \"Thank you, James. If you vould tell Hannah that ve are all here now.\"\n\n\"Of course, Doctor Maleski,\" said James. \"Is there anything else you need before I take off with the rest of the staff?\"\n\n\"No, go on vith your plans,\" said Sergi. \"Ve can make do just like alvays.\"\n\nJames chuckled and went out through another door. It was just a few seconds later before he came back following behind another woman. This woman was in her late thirties with thick frizzy dark brown hair, which had been pulled back behind her neck. Her left cheek was marred by four long parallel scars that went from her left ear to her chin. The apron she was wearing, along with the flour on it, immediately identified her as a cook. She took platters off the tray James was carrying and set them on the table.\n\n\"Will that be all, Doctor Maleski? Miss Anya? Sir?\" she asked.\n\nTom shook his head no as Sergi said,\" Thank you, Hannah. Ve vill be fine. You had better hurry or you vill be late for church. Ve vill see you all later this evening.\"\n\n\"Leave the dishes by the sink,\" said Hannah over her shoulder as she headed towards the door. \"I'll clean them when I get home.\"\n\n\"Ah, blueberry pancakes, fresh fruit, bacon and croissants,\" stated Sergi as he uncovered each platter. \"Vhat vould you like to start vith, Thomas? You must be famished after your long rest.\"\n\n\"After Miss Maleski,\" said Tom, even though his stomach growled loudly as the delicious aroma hit his nose.\n\n\"Thank you,\" replied Anya with a smile. \"Please, call me Anya.\"\n\n\"Uh...er...of course,\" stammered Tom.\n\nSergi declined the pancakes when Tom offered them, taking only a small bowl of fruit, one croissant, and a cup of coffee. Tom reined in his urge to wolf down his food. They ate in silence until Tom's plate was clean.\n\n\"Please, my friend, help yourself,\" said Sergi and waited until Tom had taken a second helping. \"Now that the edge is off your appetite, ve vould like to talk to you. I hope you vill be patient with us, even though some of our questions may seem far-fetched.\"\n\n\"Ask away,\" said Tom. \"After your hospitality and generosity, I am in your debt.\"\n\n\"Do you believe in God?\" asked Anya, sipping at her coffee.\n\nTom looked over at her, startled by the question. Her beautiful hazel eyes were staring at him intently over the rim of her cup. Tom blushed and realized that this was not a trivial question she was asking.\n\n\"Yes,\" he said. \"Yes, I do.\"\n\n\"And the devil?\" she asked with a smile.\n\n\"If you are asking me if there is a central evil character to which all of man's wickedness can be laid the blame to, no. I believe that each person is responsible for his or her actions.\"\n\n\"An individualist, I see,\" stated Sergi with a little delight in his voice. \"Ve vill have to debate cause and reaction another time. However, do not confuse wickedness with evil. There is a difference. Do you believe that vhat you saw in David Silverman's office was real?\"\n\n\"At the time, I thought so,\" said Tom, shaking his head slightly. \"Now, I am not so sure.\"\n\n\"Are you unsure of all of it or just some part of it?\" asked Sergi.\n\n\"I'm sure I saw that woman, Covington, in the office with Mr. Silverman,\" said Tom. \"I'm just...just not ready to accept that his body disintegrated into a box.\"\n\n\"Close your eyes,\" said Anya and she waited until Tom had done so. \"Think back to that night. Just let it play through your mind. Don't worry about it being true or not. When you have the sequence firmly in your mind, open your eyes.\"\n\nTom licked his dry lips as he relived the event in his mind. He flushed hotly as his body reacted to both the eroticism and the horror as the scene unfolded again. Tom could hear the wet slurping sound as Desiree sucked on Silverman's cock. Hew saw her throat contract again and again as she swallowed down the milky white cum spurting into her mouth. Tom's skin got goose pimples as he remembered the cold wind when Desiree opened the box. Tom opened his eyes and shoved away the memory of Silverman being to disintegrate.\n\n\"It's all real, isn't it?\" he asked.\n\n\"Yes,\" replied Sergi. \"Just as you and ve believe in God, an omnipresent entity vho created the universe, ve also must accept the presence of other supernatural beings. Some are benign. Some are evil. Vhat you met vas a vampire.\"\n\n\"A vampire!\" shouted Tom, as he jumped up quickly and toppled over his chair behind him.\n\n\"Easy,\" soothed Anya softly, reaching out a hand towards him in sympathy. \"Please, sit down.\"\n\n\"Vampires are just myth and fiction,\" argued Tom as he righted his chair and sat back down. \"Besides, they're supposed to drink blood, not...uh...you know.\"\n\nSergi smiled and asked, \"Do you know vhat the seven deadly sins are?\"\n\n\"Uh...greed, lust, anger, pride...envy...\" and Tom's voice trailed off as he tried to remember the others.\n\n\"Sloth and gluttony,\" said Sergi, filling in for the final two. \"You know something supernatural occurred in Silverman's office. The vampires you are familiar with are a type called Dracul...the arch-typical vampire. The Draculs deal in anger...anger against God...and pride...pride of their heritage. The vampire you met is a rare type. It deals in anger and lust. It took us all day yesterday and most of the night to find references to it. A Roman historian in 18 B.C. named Huronius detailed the capture of a young voman vho had killed five men by performing a single act of fellatio and siphoning their essence from their bodies. She possessed great strength and a couple of soldiers were killed in her capture. She survived vounds that vould have killed another person. Since her capture was at night, the soldiers staked her to a crucifix while the magistrate was sent for. Huronius vrote down the voman's viperous statements of how all men were doomed and how she and her kind would rule the vorld.\"\n\n\"From his vritings, it appeared that the magistrate could not be hurried. As dawn approached, the voman changed her hateful vords to ones of pleading and begging. The guards vould not release her because of vhat had happened to their companions. As the sun rose, its light fell on the voman. Huronius vrote that she screamed in terrible agony as she burst into flames. Sufficient to say, the young voman was consumed by the purifying rays of the sun.\"\n\nThe three of them were silent for a while after Sergi had finished talking. Tom finally gave voice to a nagging doubt in his mind.\n\n\"But she couldn't be the same one I saw, could she?\" he asked.\n\n\"No,\" replied Anya. \"The young woman was destroyed and her soul released.\"",
        "\"The one you saw is of the same type, though,\" added Sergi. \"For lack of a better term, ve vill call them sex vampires. The sex vampire is very, very rare. It is alvays a voman whose unyielding, all-consuming hatred of men leads her to make an unholy pact. She must be and remain a virgin and she gains all the vampiric powers and limitations. As you pointed out, she does not drink blood, bit seems capable of producing an intense and prolonged climax in a man. His bodily fluids change to semen, which is essential to her existence. Make no mistake, she is still a vampire, draining the life force out of her victim.\"\n\n\"How is it you know so much about all this?\" asked Tom.\n\nSergi sighed and looked at Anya, who sighed also and said, \"My grandfather started researching paranormal occurrences in his college days. It became a passion for him. My parents were killed by a vampire, a Dracul. That was when he began hunting down the evil beings. I joined him after I learned the truth of what happened to my parents. Our entire staff has had at least one encounter before we met them. Hannah's scars were caused by a werewolf. Gretta and Maria have both been possessed. Dobbs, our butler, has had several run-ins with ghosts in England. James had something happen to him at the Enchanted Rock in Texas when he was a teenager. To this day, he still can't speak of it.\"\n\n\"I don't mean to be rude,\" said Tom as he tried to digest everything that he had been told and make sense of it. \"It sounds like you're trying to recruit me for something.\"\n\nSergi pursed his lips and said, \"You are right, of course. Something came up in our research last night. If ve had not found it, Ve vould have given you a good breakfast and sent you on your vay with the explanation that sleep deprivation caused your hallucinations. Huronius vrote that the last vords that the young voman screamed were, 'Coventus will avenge me!' He also vrote that the Captain of the Guard was Emilio Parta.\" "
    ],
    "authorname": "JohnEvans",
    "tags": [
        "tom shaking",
        "tom understand",
        "covington",
        "tom fell",
        "sleep deprivation",
        "waited tom",
        "approached front",
        "real asked",
        "sucked life",
        "mirror tom"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/fated-destiny-ch-01"
}