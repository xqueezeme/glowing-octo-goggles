{
    "title": "The Cunning Linguist",
    "pages": [
        "<p align=\"center\">Copyright Nikki Dark 2019</p>\n\n<p align=\"center\">--- +++ ---</p>\n\n<p align=\"center\">Edited by Tex Beethoven</p>\n\n<p align=\"center\">--- +++ ---</p>\n\n<p align=\"center\">All sexually active characters in this work of fiction are 18 years or older.</p>\n\n<p align=\"center\">--- +++ ---</p>\n\n\"Show me your dick,\" Lily demanded of her brother.\n\n\"What? Get fucked!\" Greg responded. \"Why would you even ask that?\"\n\n\"Look, I heard something today, and I need to know if it's true.\"\n\nGreg stared at his sister. He couldn't help but wonder what she'd heard and more importantly, who she'd heard it from. \"You don't need to see my dick,\" he replied, stalking away.\n\n\"Is it really as small as an Ikea pencil?\"\n\nGreg turned on his sister, his stare projecting his anger. Lily took a step back under the heat of his gaze.\n\n\"Who the fuck told you that?\" he demanded.\n\n\"Is it true?\" Lily asked, recovering herself. It was far from the first time she'd faced down his anger. Hell, they were both redheads, and had the stereotypical tempers to match.\n\n\"I'm not dignifying that with an answer. Who the fuck told you?\"\n\n\"No one told me, which is why I want to know. I overheard Lizzie and Chloe talking in the changerooms. I wanted to smash their fucking faces in; but if it's true, confronting them about it won't get me anywhere.\"\n\n\"What did you hear?\" Greg demanded.\n\n\"Chloe was talking about who on the football team she would like to sleep with, and your name came up. Lizzie told her not to bother. She claimed the two of you hooked up after a game earlier this year, and when she went to blow you, she... and this is just me quoting her here... she said that all she found in your pants was a tiny prick the size of an Ikea pencil. Chloe asked what she did, and she claimed to have laughed at you and walked out with your pants still around your ankles.\"\n\n\"Fucking bitch,\" Greg seethed.\n\n\"So is it true?\"\n\n\"What's it to you anyway?\"\n\n\"I hate that bitch, Greg. She makes life hell on the cheer team. She's snarky and manipulative, and I'd love nothing more than to bring her down. But more than that, you're my brother, and I know what it's like to be on the wrong end of rumour and innuendo, and what it's like to be bullied. I didn't get these puppies overnight, remember?\" She cupped her large tits to emphasize her point. \"I used to be flat as a board, and I was like one of the last girls to develop. I was gangly and awkward and being called a surfboard or an ironing board is pretty shit. I'd like nothing more than to smash that bitch's face in, but like I said before, if there's any truth to it, that won't work so well.\"\n\n\"I'm not showing you my dick Lily,\" Greg insisted. He knew what she'd been through. The bullying had been bad enough that her grades had plummeted, and their parents had had to get her psychological help. They'd ended up changing schools, and Lily had been held back a year, so even though she was a year older than he was, they'd ended up in the same year level. He'd recently turned eighteen, while his older sister was already nineteen.\n\n\"Then just tell me. Surely if it was a decent size, you'd have told me by now.\"\n\n\"Fine, I've got a small dick! Happy?! Fuck you, Lily!\" Greg stormed off, all but ran to his room and slammed it so hard Lily thought the whole house had shaken.\n\nLily knew better than to go after him. It would take time for him to work through the anger to a point he'd be approachable again, and given the sensitivity of the topic, it could be days. Music soon blasted from his room, another sign that his room wasn't a safe place for her right now. She retreated to her own room, thinking about how she could have approached the situation better. Maybe just demanding it like she had hadn't been the best idea, but she was genuinely angry with Lizzie and Chloe. They really were a couple of bitches. But if Greg was truly small, she couldn't confront them over the issue. She'd have to be under-handed and sneaky, if she could come up with such a plan.\n\n<p align=\"center\">--- +++ ---</p>\n\nIt was two days before Lily dared to approach Greg again. She went to him in his room like a supplicant.\n\n\"Can we please talk?\" she asked when he looked up and moved his headphones away so he could hear.\n\n\"Sure.\"\n\n\"I'm sorry about, well, you know... my approach the other day,\" she offered as an opening. Unlike her previous, less than thoughtful approach, she'd given long thought about how to approach this conversation.\n\n\"It's okay, but it was pretty shocking.\"\n\n\"Yeah, I can see that. But I really do just want to help.\"\n\n\"Yeah, but you can't, can you? It's alright for you, you were late developing and all, but then you went and got like, epic sized tits and this amazing body and... and now you're a Goddess. I've busted my ass in the gym and I'm on the football team and all, but well, there's not much I can do about the size of my dick, is there? It doesn't matter how tight my abs are or how impressive my biceps are if a girl decides my dick is too small\"\n\n\"Is it really that bad?\" Lily asked, choosing not to respond to his description of her being a Goddess, but happily filing it away in her memory banks.\n\n\"It's bad enough,\" Greg said. \"Bad enough that if Lizzie and Chloe go on about it, I'll probably never get another date until I get out of this town. I mean, you know exactly what they're like. Even if I found someone who didn't mind, they'd probably ostracise her just for dating me, and then that would end too.\"\n\n\"That's like the worst-case scenario though, Greg,\" Lily offered.\n\n\"But entirely realistic.\" Lily knew it was, but she didn't voice that opinion.\n\n\"So look, as well as being sorry about how I approached you, I've been thinking about how we might change things, too. Maybe build you a new reputation to offset your... um, challenges.\"\n\n\"Really,\" he said flatly as if he didn't believe her. It wasn't a question; it was just a statement.\n\n\"Yeah, we need to reinvent you. Imagine if girls began going on about how you gave them the most epic orgasms ever. I doubt they'd care about the size of your dick, if that experience was on offer.\"\n\n\"Yeah sure, only I have no idea how that would ever happen.\"\n\n\"Cunnilingus.\"\n\n\"Cunning what?\"\n\n\"Oh my god, you can't be serious,\" Lily laughed. \"Cunnilingus, aka eating pussy, licking the slit, lip service?\"\n\n\"Alright already. I get it, I just wasn't expecting it, and didn't think that was what you said!\"\n\n\"Well that's going to be my new go to,\" Lily laughed. \"Cunning Linguistics. If we can turn you into the ultimate pussy eater, a cunning linguist shall we say, then maybe we can also transform your reputation. I know a couple of girls who value a good orgasm enough not to worry about how they get it. Hell, some of them even give them to each other!\"\n\n\"As good as that sounds, how the hell am I supposed to become a pussy-eating expert?\"\n\n\"Nope, not a pussy eating expert. Think branding. You're to become a cunning linguist,\" Lily corrected him. \"Has a certain flair, don't you think?\"\n\n\"Yeah, I guess it does.\"\n\n\"I'm not sure. Give me some time to think about it. I need to talk to some people.\"\n\n\"You can't tell them about... you know, my dick,\" Greg insisted.\n\n\"You'll need to show me, then.\"\n\n\"What?\"\n\n\"If you don't want me to talk about it, you need to show me.\"\n\n\"That makes no fucking sense Lily,\" he objected.\n\n\"Yeah, but if I don't see it now, I'll die of curiosity.\"\n\n\"You're actually serious?\"\n\n\"Uh huh.\"\n\n\"How about when you do come up with some tangible plan for this cunning linguistics thing, I then show you my cock?\"\n\n\"Nope, now or never,\" Lily insisted. \"You do know I love you, right? Even if it's half an inch, I'll never use it against you.\"\n\n\"You're a freak, Lily,\" Greg accused, but mildly, shaking his head. \"I can't believe I'm even considering doing this.\"\n\nLily grinned at him as he stood up from his bed and released the fastenings of his jeans. He pushed both his jeans and boxers down to stand before his sister with his small cock sticking out. He couldn't help but blush as she moved close and sat on the side of his bed for a closer inspection.\n\n\"Can you get it hard for me?\" she asked.\n\n\"What? That wasn't the deal!\"\n\n\"Yeah, but like, I want to see what we're working with here.\"\n\n\"It doesn't just get hard like that, you know,\" Greg protested, even as he sensed himself starting to respond to having his cock out in front of his sexy sister.\n\n\"Hmm, does this help?\" Lily asked and leaned in as if she were going to take him in her mouth. Greg watched her in shock, and his cock did indeed spring to life. She came close enough to him that he could feel her warm breath on the head of his dick, but with a giggle, she sat back.\n\n\"God, Lily!\"\n\n\"Well it worked,\" was all she offered. \"So... you are small, but it's not the end of the world, Greg. At least it's a nice-looking cock. Small but perfectly formed, I'd say.\"\n\nGreg quickly bent and grabbed his pants, pulling them back on.\n\n\"You'd better be able to help,\" he grumbled, making it clear it was time for Lily to vacate his room.\n\nLily left, going to her own room to ponder the challenge of how to get one of her friends to teach Greg to be the best pussy eater there was.\n\n<p align=\"center\">--- +++ ---</p>\n\n\"So Annie, I've got something kind of odd to ask you,\" Lily said to her friend as they walked home from school together later that week.\n\n\"Why does that intro strike fear in my heart?\" Annie asked with a laugh. \"What's so odd?\"\n\n\"Would you please teach my brother how to eat pussy?\" Lily just blurted out.\n\n\"The fuck? You know I'm a lesbian Lily, why the fuck would you ask me that?\"\n\n\"To get back at Lizzie and Chloe.\"\n\n\"Okay, there seriously has to be more to this. There's no way that makes any sense.\"\n\n\"Well, it's like a really long story, and I promised not to tell all of it, which makes it like really awkward.\"\n\n\"Well then... no, absolutely not,\" Annie laughed.\n\n\"Shit, look... okay, if you totally promise not to tell anyone, I'll tell you why I'm asking. I mean, there are two reasons why I'm asking you specifically. First, I know how much you hate Chloe after she outed you, and second, you're the best pussy-licker I know.\"\n\n\"Well then, I doubt you'll convince me, but I'll listen and promise to keep it all to myself, just in case it fucks up Chloe somehow.\"\n\nLily explained what she'd overheard and the conversation she'd had with Greg, leaving out the bit about demanding he show her his cock.\n\n\"And so how does this fuck with Chloe?\" Annie asked when Lily finished.\n\n\"Think about it. If she never gave Greg a chance, and he turns out to be the best pussy-licker in school, giving orgasms so amazing that everyone is talking about them, you know she's going to want a turn. And then Greg can laugh in her face!\"\n\n\"Oh my God, that is ridiculous Lily! I'm sorry, but no.\"\n\n\"Damn.\"\n\n\"But like you know if you ever want your pussy licked, or you want to practice your skills, I'm totally here for you!\"\n\n\"Yeah, thanks Annie.\"\n\n<p align=\"center\">--- +++ ---</p>\n\n\"So how's the plan coming along?\" Greg asked her a couple of days later.\n\n\"Not as well as I'd hoped. It turns out it's really hard to just like convince a friend to teach my brother to eat pussy. Especially when I can't tell them why.\"\n\n\"Great, so now all your friends think I can't eat pussy,\" Greg sighed. \"I don't think this is the help I need, but thanks Lily. Let's just drop it.\"\n\n\"Unless I were the one who taught you,\" Lily suggested. It was out of her mouth before she'd even processed what she was saying.\n\n\"Say that again?\" Greg asked in shock.\n\n\"Um, shit, did I actually say that out loud?\" Lily laughed. \"I didn't mean it.\"\n\n\"Freak!\" Greg taunted.\n\n\"It, um... it could work, though. At least... well... I could help you improve.\"\n\n\"Stop it Lily,\" Greg laughed, \"Don't be ridiculous.\" He walked out of her room, shaking his head.\n\n<p align=\"center\">--- +++ ---</p>\n\n\"Okay Lily, if I'd said yes the other day when you said you could teach me to be, you know, a whatchamacallit, a cunning linguist, what would you have done?\" Greg said, having gone to find her in her room.\n\n\"I dunno really. I guess, um, I'd have done it?\"\n\n\"Even though I'm your brother.\"\n\n\"Because you're my brother. I wouldn't do it for just anyone, you know.\"\n\n\"But like, wouldn't that mean that I'd like have to... um, lick your pussy?\"\n\n\"Yeah, but it's not like we'd be having actual sex or anything, it would be purely academic. Tutor and student.\"\n\n\"Then if you're not going to blow up in my face for asking, I do want you to teach me. Please.\"\n\n\"Really? Why the change of heart?\" Lily asked, her stomach doing flip-flops at the thought of actually having to go through with what she'd suggested.\n\n\"I was at a party the other night, and I was hitting on Zoe Candana, and I thought I had a good chance until Chloe decided to come past. She whispered something to Zoe, and it was all over. Zoe just said something like 'sorry Ikea,' and walked off. I was ready to beat the shit out of Chloe, but I can't of course, so I just left. It seems you're right though. I have no idea why Chloe feels the need to destroy me, but for some reason she seems determined to do it.\"\n\n\"She's just a fucking bitch-mole\" Lily insisted.\n\n\"So, you'll help me?\"\n\n\"I will,\" Lily replied.\n\n\"When?\"\n\n\"Why not now? No one else is home,\" Lily offered.\n\n\"Wow, um, I guess there's no time like the present,\" Greg agreed.\n\nThere was a long pause while Greg worried if his sister would change her mind, and Lily gathered her thoughts.\n\n\"Okay then, so before we start anything like, um practical, I think we need to check that you understand what all the bits of a girl are.\"\n\n\"Um, I'm good there, it's not like I've never seen a girl naked, Lily.\"\n\n\"Hey, I'm teaching, so we do it my way,\" his sister insisted. She pulled out her phone and googled a diagram of the female anatomy, and went through the different parts of the vagina one at a time.\n\n\"So every girl is different, right, but they have the same basic bits.\" Greg rolled his eyes but didn't interrupt. \"Some girls like different bits to be stimulated, like some really get off on having a tongue thrust inside them, others like to have the labia licked, some like the labia minora sucked, and almost everyone loves to have attention paid to their clitoris. Like that's the ultimate, and typically where the orgasm comes in. But even then, how the clitoris is treated and what gives the best orgasm works differently for different girls.\"\n\n\"So... like if you're all different, how the hell can you teach me to be an expert?\" Greg asked.\n\n\"Well for a start, stamina is like super-important. If a guy just gives up when you're nearly there, it's about as shit as it gets. I mean can you imagine being about to cum, and then a girl just stopping? Only for a lot of girls it's worse, like if you stop it's like going backwards to fifty percent or even less. Or even if you go from doing just the right thing to something else, it's like the floor drops out from under her, and you have to build her way up again. So being prepared to learn what's getting her off and what works for her, is a massive step most guys miss. But I can at least give you pointers on what to look and listen for, so you'll know when you're on the right track. I think that's the most important thing I can teach you.\"\n\n\"So when you say stamina, how long are we talking?\"\n\nLily just shrugged. \"It varies greatly. Could be half an hour. Maybe even more.\"\n\n\"Holy shit.\"\n\n\"Yeah, so practice and stamina are totally important. Ready for your first go?\"\n\n\"Um, yes?\" he replied unconvincingly.\n\nLily stood up and peeled her leggings down, revealing a pink cotton thong beneath. Without it seeming to bother her at all, she then rolled that down her legs as well, exposing herself to her brother. Greg gawked as her pussy was revealed to him. She had red pubic hair cropped to a landing strip, and then it seemed her lips had been shaved bare, but he couldn't quite tell, as she stood with her legs together.\n\n\"I think you should kneel by my bed and I'll lie on it,\" Lily suggested as she looked about for a comfortable spot. Greg just nodded, dumb-struck and compliant at the sight of her. Lily sat on her bed, then leant back, propped on her elbows, drawing her feet in to the edge of the bed with her knees spread wide. Her labia were indeed bare, and a pale pink in colour. With her legs spread as wide as they were, her labia minora separated as well. They weren't overly long, but appeared thin and delicate, only slightly darker than her outer lips. \"Come on, get in close, then.\"\n\nGreg swallowed and knelt between his sister's legs, watching closely as she reached to her pussy and gently parted herself. Before he could do anything, she reviewed each part of herself with him, going back over what the diagram had taught. Greg stared as his sister detailed every element of her pussy, marvelling in the detail.\n\n\"Now lick me, Greg. Start slow with the labia majora, and for now just tease me.\"\n\nGreg reached out with a finger first, and he stroked delicately across the surface of the target his sister offered. He felt her shudder slightly before he leaned in and ran the tip of his tongue up the outside of her right lip, then repeated the move on the left. She sighed in response, and he took it as encouragement to continue. He laid his tongue flat against her and lapped along her pussy, then experimented with teasing the tip of his tongue along her slit, this time between the delicate folds of her labia minora.\n\n\"Oh yes,\" Lily sighed pleasurably. \"You'll find that different girls like themselves spread differently too, Greg. Some like to hold themselves apart for you, others prefer you to do it for them. Others don't like being spread open at all, and just expect you to work your tongue within them without spreading their lips.\n\n\"Which do you like, Lily?\" he asked.\n\n\"Good question, and well worth asking whichever girl you're with. Personally, I like it all to be honest, but it's nice not to have to think about what I'm doing, and to have the other person do it for me. But if I start moaning, or better yet trembling, you're doing just what I need.\"\n\nGreg used his fingers to spread his sister's outer lips, loving the sight of her wet, bright pink insides.\n\n\"Tongue fuck me, Greg,\" Lily moaned. \"Thrust your tongue into my vagina. I want to feel how deep you can get it.\"\n\nGreg did as he was asked, pointing his tongue and thrusting it inside his sister's wet hole, pushing it in and out. He kept going until Lily told him to change it up, now to lick her clit.\n\nHe paused and took a moment to survey it, to take in the sight of the little pleasure nub nestled within its hood. Then he swept his tongue over it before circling it around and around. Lily gave him pointers and he listened and followed along, working his tongue fervently or gently in response to her instructions.\n\n\"Fuck yes Greg, there. Harder! Just like that! Keep going and don't change a thing,\" Lily demanded what seemed an eternity later. \"Don't fucking stop!\"\n\nGreg's tongue felt raw, it was flattened against her clit, and he was rubbing it back and forth, feeling his sister buck her hips against his face as he did so. Her fingers grabbed hold of him and held him to her as she came hard, wailing with her orgasm. She pushed his head away and lay back on her bed, her belly fluttering, her whole pussy pulsing with the aftershocks of her ecstasy.\n\nGreg sat back on his heels, his cock straining inside his pants, simply watching his sister as she came down from her orgasmic high.\n\n\"Think you can go again?\" she asked him a minute later.",
        "\"What?\"\n\n\"Do you think you can do it again? Lick me to another orgasm?\"\n\n\"God, my tongue is already raw Lily, I don't think so.\"\n\n\"Then that's something we'll have to work on,\" she told him. \"Because I think you need to be able to get a girl off at least three times with your tongue if we're going to make you into a true Cunning Linguist!\"\n\n\"Holy shit,\" Greg sighed.\n\n\"Okay, you can leave now. Come back tomorrow and we'll do it again; this will be like wind sprints: we can start building up your stamina.\" Greg left his sister's room in something of a daze. He'd just eaten his sister's pussy until she came! He went straight to his room, stripped off his pants and stroked himself until he'd relieved his tension, relishing her promise he'd be doing it again the following day!\n\n<p align=\"center\">--- +++ ---</p>\n\nThe two siblings usually had a couple hours at home before their parents came home from work each day. It gave them plenty of time together, even with their commitments to football and cheer practice, especially as their two activities seemed to coincide a lot, and they'd drive home together in the Jeep Renegade Greg had received as an eighteenth birthday present.\n\n\"I think you can do it today, Greg. I think today you'll be able to lick me to a second orgasm,\" Lily commented on their way home. It was two weeks since she'd started coaching him, and he'd eaten her out almost every day, but hadn't yet managed to get her to a second orgasm.\n\n\"If my tongue doesn't first fall out of my head,\" Greg laughed.\n\n\"You were so fucking close yesterday though,\" Lily told him. \"I mean, it's one of the things that you're going to have to be able to claim when we begin promoting your abilities. Not every girl will even want you down there just after she's cum once, 'cause like it's pretty fucking intense, But those that do will be the ones who will sing your praises.\"\n\n\"I can only try,\" Greg suggested.\n\n\"And I look forward to your attempts,\" Lily replied with a grin.\n\n\"If I didn't know better, I'd think this was all just a wild and crazy way for you to get a lot of oral sex!\"\n\n\"Oh, don't flatter yourself, I have no shortage of people willing to eat my pussy.\"\n\n\"I've been meaning to ask you something about that.\"\n\n\"Oh?\" Lily prompted him.\n\n\"Yeah, where did you learn so much about eating pussy? I mean yes, you have one and all that, but you seem to know more than just what you like. And you keep referring to people, rather than just guys, when you talk about getting eaten. Have you like been with girls?\"\n\n\"Uh huh,\" Lily responded matter-of-factly.\n\n\"Oh, right. I guess I'd never thought of you as bi.\"\n\n\"Let's just say that when a hot lesbian friend keeps hitting on you, it's only a matter of time before you want to see what all the fuss is about,\" Lily laughed.\n\n\"Good then?\"\n\n\"Oh yes. I mean, I'm not about to give up the D, but sometimes making out with another girl, or having sex with one even, let's just say it scratches an itch.\"\n\n\"Wow.\"\n\n\"You can think about that while you go down on me today,\" Lily laughed.\n\n\"You're really not the average sister, you know that?\"\n\n\"Yeah, I had a pretty good idea already, but I'll take the compliment anyway.\"\n\nGreg pulled the car up in the drive and followed Lily inside, watching the sway of her hips in her short cheer-skirt. She glanced back over her shoulder and caught him looking, but simply gave him a wiggle of her butt in response. Greg caught up to her just as they made it to the front door and once they were inside, swatted at her pert butt, the sound of his hand on her cheek echoing in the entrance hall.\n\n\"Hey!\" she objected. Greg just grinned at her in response.\n\n\"Do me a favour?\" he asked as he followed her up the stairs to where their bedrooms were.\n\n\"After you spanked me?\"\n\n\"Leave your cheer uniform on?\" Greg asked, ignoring her complaint.\n\n\"Does it turn you on, bro?\" she asked with a grin, swishing her skirt back and forth, giving him the barest glimpse of her panties.\n\n\"Hell, yes!\"\n\n\"Well, maybe just this once, then.\" Greg threw his bag into his room and followed Lily down the hall to hers. She placed her bag in the corner by the door, then turned to face her brother as she shimmied her sports briefs out from under her bright yellow cheerleading skirt.\n\nGreg watched, admiring the way her large tits strained at the lycra top that was part of her uniform.\n\n\"So sexy,\" Greg observed when she'd stripped her underwear off and dropped them in her laundry hamper.\n\n\"Exactly the right thing to say,\" she informed him, sitting back on her bed and spreading her legs. \"Now get over here and show me how good a teacher I am.\"\n\nGreg went to his knees before her and pushed her legs apart and up and back, spreading her nether regions wide. He began slowly with delicate caresses of his tongue, having learned that Lily responded best when he began slowly, getting her juices well stirred up before he began the inevitable assault on her clit.\n\nHis cock hardened and strained against his pants as he began to feast on his sister, wondering which girls he might know that had done the same thing for her. He used his fingers to tease her as well, having come to discover she enjoyed a bit of penetration during the early stages of her arousal.\n\n\"There's something I haven't asked you to do yet, but you need to consider it as part of your arsenal, Greg. I want you to lick my ass.\"\n\n\"What, are you serious? That's gross!\"\n\n\"Yeah, I am serious. I want you to tease my clit with your fingers and gently swirl your tongue around my asshole. Don't worry, I'm like, super-clean.\"\n\nGreg sat back slightly, and Lily spread her own legs, hooking them behind her elbows, her knees almost back on the bed beside her, like an upside-down frog. The position presented her stretched pussy and puckered little starfish, both of them glistening with her juices. Tentatively Greg slid his tongue down his sister's slit across the skin stretched between her two entrances, and then flicked it across her butt hole.\n\n\"Oh yeah, that's the way,\" Lily purred in pleasure. Greg teased at the hole, his tongue flicking back and forth and swirling around while he rubbed at her clit with her thumb. \"Now my clit again,\" Lily moaned after he'd licked her for a few moments. \"I won't cum from that, but fuck it feels good. You should definitely remember it as part of the build-up, but not everyone likes it, so be cautious in your approach. Look for your girl's hints, don't just dive in there.\"\n\nGreg returned his attention to her pussy, his tongue working up through her valley before swirling around and then pressing against her clitoris. He rubbed his tongue firmly against it, feeling her thrusting and squirming beneath his attentions, knowing he was building her quickly toward orgasm. He'd learned that if he chose, he could take her to the brink, back off and build her up again and again, but his goal for today was multiple orgasms, not an extended edging.\n\nWith an iron focus, he licked his sister until she came hard upon his tongue, but he didn't stop. He backed off, giving her time to recover, but teasing her all the same, expertly avoiding her over-sensitive clit, while working her lips and inner slit. He even dipped his tongue back down to her anus and received a pleasurable sigh of appreciation. He allowed her the time he knew she needed, then licked back up her slit to her clit. She gasped and cried out, and her hands grabbed his hair, but rather than push him away, she held him firmly in place. He used every nuance and skill she'd taught him over the previous two weeks, his tongue wearing almost raw with the protracted attention he gave her.\n\n\"Nearly, fuck! Keep going! Pleaaassse,\" Lily begged him. Greg pushed on, tongue grinding against her hard clit and the pubis beneath. He listened to her gasping breath and gazed up across her body, catching sight of a tight nipple thrusting out against the lycra of her top.\n\n\"FUCK YES!!!\" Lily screamed and her body thrashed beneath him, her back arching and legs quivering as she came for the second time. Greg knelt back on his haunches, pleased with the results of his efforts. He particularly enjoyed the sight of her heaving chest, the way her breasts rose and fell with her desperate gasps. As she recovered, they slowed, but her nipples were clearly still erect. Greg couldn't help but wish he could see them naked.\n\n\"Oh my God Greg, that was amazing,\" Lily panted at him, eyes sparkling with delight. \"I reckon if we can get you to the point of getting me off one more time, we'll be ready to start spreading rumours about your glorious new reputation.\"\n\n\"I still don't see how that's going to counter Chloe's shit, though. I mean how do you even tell anyone? It's not like you can say, 'hey, my brother licked me to like three orgasms in a row, he's amazing, you should totally give him a go.'\"\n\n\"Yeah, I've been thinking about that, and I have a couple of ideas, but like, you'll have to agree to them and um, well, maybe lower your standards?\"\n\n\"What do you mean lower my standards?\"\n\n\"Well maybe get together with a couple of girls that aren't part of the bitch roster? Like think about it, those are the girls that will believe Chloe's shit, and probably not even give you a chance.\"\n\n\"What do you mean not part of the bitch roster?\" Greg asked.\n\n\"You know, maybe someone who's not on the cheer squad or perhaps the best looking in school?\"\n\n\"Wait, what?\"\n\nLily sighed. \"I don't think I'm explaining myself very well. I guess what I'm saying is that you should date someone who might not be the um, most attractive.\"\n\n\"Why?\"\n\n\"I already told you. They're less likely to be swayed by Chloe's bullshit. They might give you the chance you need to prove your skills. Then you can begin to build your reputation and move up in the world.\" She said it matter-of-factly like it was the most obvious solution in the world.\n\n\"But won't that be like, using them? I mean, what makes you think some nice girl is going to just let me eat her out and then like move on?\"\n\n\"Do you have to be so pessimistic? You need to trust in my powers.\"\n\n\"Powers?\" Greg laughed. \"Yeah, right.\"\n\n\"Trust me?\"\n\n\"Do I have a choice?\" Greg asked with a sigh.\n\n\"Leave it with me.\"\n\nGreg left Lily's room, but not without a glance back over his shoulder. After all, her cheer skirt was still lifted and exposing her glistening pussy. She caught him looking, but simply smiled. For the first time since they'd started his lessons, he went back to his room he didn't even masturbate. The conversation about the next steps had killed his arousal.\n\n<p align=\"center\">--- +++ ---</p>\n\n\"Hey Selena, can I ask you something a bit weird?\" Lily asked her classmate.\n\n\"Um sure?\" Selena replied, a little puzzled by the question. Lily dragged the girl out of the flow of students moving between classrooms, and into the girls' toilets.\n\n\"Okay, so like have you heard any rumours about my brother lately?\"\n\n\"Um, no, actually.\"\n\n\"Oh, right, well that's good.\"\n\n\"You were right, it was a weird question, but I don't see why you needed to drag me in here to ask it,\" Selena laughed.\n\n\"Well see, like I've heard two things, but well, it's super weird hearing them about your own brother, so like I was looking for someone that might give me some confirmation.\"\n\n\"So... like what have you heard?\" Selena asked, interested again.\n\n\"Okay, like well um, first I heard Chloe saying that he like had um, a tiny dick.\"\n\n\"Oh.\"\n\n\"Yeah, but then like I heard someone saying that he was like the most amazing pussy eater she'd ever been with. Talk about super-weird, right?\"\n\n\"Uh, yeah! And um, you thought I was going to do what? Confirm they're true or something?\"\n\n\"Well like, I guess I was hoping for something like that. I mean, you know what Chloe's like. If she's just making shit up about my brother, I wanna bring her down a peg or two.\"\n\n\"Um, so like why me?\" Selena asked.\n\n\"Well, you're not part of her bitch squad, for a start,\" Lily suggested.\n\n\"Yeah, but like, I've never even really talked to your brother, what makes you think I'd have any idea, well you know, how big he is, or whether he's um, talented.\"\n\n\"Dunno, sorry, like I said, it was a weird question, but like if you hear anything either way, could you like let me know?\"\n\n\"Sure thing,\" Selena replied. Lily felt slightly ridiculous as Selena left the bathroom, but she hoped the seed she'd planted would be enough. Selena might never have spoken to her brother, but she knew that she liked him. She'd seen the notes and love hearts she'd scrawled in the back of her notebook during Chemistry.\n\nWith the seed planted, she just had to wait until the party planned for Saturday after the football game to put the next phase of her plan into action.\n\n<p align=\"center\">--- +++ ---</p>\n\nGreg's team won, which was always a good omen for the post-game party, and that would definitely mean Greg would be in a good mood.\n\n\"Shit Lily, you look amazing,\" Greg commented when he saw her coming down the stairs.\n\n\"So, I'm not too embarrassing to be seen with then?\" Lily teased him. She was wearing a black dress that clung to her curves like a second skin. The hem barely passed the curve of her butt cheeks, and Greg wondered if she'd be able to sit without flashing her underwear.\n\n\"Has Dad seen you in that?\"\n\n\"God no, so let's get out of here before he does,\" she laughed, pulling on a long coat.\n\n\"So... is there someone you've dressed like that for?\" Greg asked as he drove them to the party.\n\n\"Maybe,\" Lily teased.\n\n\"You're not leaving a whole lot to the imagination,\" he suggested, glancing down at her thighs. The bottom of her skirt was so close to exposing her underwear that it kept drawing his eye whenever he felt he could safely glance away from the road.\n\n\"What are you looking at, brother dear?\"\n\n\"Sorry, couldn't help myself,\" Greg laughed.\n\n\"You've seen everything hiding in there,\" Lily laughed back.\n\n\"Yeah, but that doesn't mean it's not a turn on, Lily.\"\n\n\"Ooh, is my kinky brother getting hard at the thought of seeing his big sister's underwear?\" she teased, wiggling in the seat so that the dress rode up a little higher and exposed the crotch of a pair of lacy black underwear.\n\n\"I'm kinky? You're the one who spreads her legs so her brother can lick you.\"\n\n\"Hey, that's just to help you out, perve.\"\n\n\"Yeah, sure it is. I'm pretty sure you just like having a tongue on tap,\" Greg teased in return.\n\n\"It's not the worst thing in the world,\" Lily laughed. Greg pulled the car up out the front of the house where the party was.\n\n\"You never did tell me who you dressed up for,\" he said to his sister as they walked up the drive.\n\n\"Because it's a secret,\" Lily replied with a grin. \"Anyway, let me know when you're ready to leave the party.\"\n\n\"Yeah, no problem,\" Greg replied. They separated as they made their way inside, Greg heading in the direction of the football team, and Lily to where some of her cheerleading friends were hanging out.\n\nAs the night progressed, Lily kept an eye out, happy to see Selena arrive at the party an hour or so after she and Greg had. She made her way to where her brother was, waiting for a moment when she could have a quick word without all his friends overhearing.\n\n\"I think you should talk to Selena,\" she suggested to him when she had an opportunity.\n\n\"Really?\"\n\n\"Trust me,\" Lily replied and moved on, returning to her friends.\n\nGreg was left to look about the party, considering what his sister had said. He couldn't see Selena and so returned to his own peers, but he kept an eye out. Eventually he spotted, her, talking quietly to a friend in a corner of the room. She looked up just as he spotted her, and their eyes met briefly. Greg gave her a smile, then looked away. Greg found himself looking again and again, surprised at how many times she seemed to be glancing his way. He kept thinking about what his sister had said.\n\n\"Hey, back in a bit,\" he told his friends. He took a circuitous route through the room until he was able to approach her.\n\n\"Hey Selena, Miranda,\" he greeted both her and her friend.\n\n\"Hi Greg,\" she said shyly, looking up from her chair. \"Nice game today.\"\n\n\"Oh, you were there? Thanks. Good party, yeah?\"\n\n\"As these things go, yeah,\" she answered.\n\n\"So what have you been up to?\"\n\n\"Oh, you know, just hanging out and stuff,\" she replied. Greg faltered, suddenly unsure of himself. After all, he thought, it isn't like I can just come out and say, 'Hey, my sister suggested that I talk to you so that I can get my tongue in your pussy and show you how well I can eat you out.'\n\n\"Cool,\" he replied. \"Did you do any good on that chem test?\"\n\n\"Well you know, I didn't bomb,\" Selena laughed.\n\n\"Yeah right, I'm pretty sure your idea of bombing and mine are pretty different,\" Greg laughed. He hated Chemistry, and had barely passed the test.\n\n\"Yeah, she only got an A,\" Miranda butted in. \"She's like totally keeping up the geeky Asian stereotype!\"\n\n\"Miranda!\" Selena objected, slapping her friend's shoulder playfully.\n\n\"Brainiac hey?\" Greg teased her. \"I'm just praying to get through with a pass, so I can keep playing football.\"\n\n\"I could help if you like,\" Selena offered.\n\n\"Really?\"\n\n\"Sure, I could like tutor you or something.\"\n\n\"That'd be awesome,\" Greg replied genuinely. It wasn't what he'd expected from the conversation, but it was an unexpectedly good outcome. They continued to chat, Greg finding things easier with the ice broken, and having found some common ground. Miranda turned out to be a fun girl as well, and before Greg even realised it, Lily was seeking him out so they'd be home in time to avoid parental grief.\n\n\"See you Monday?\" Selena said when he was about to leave.\n\n\"Well, unless you're not doing anything tomorrow and you could help me with my chem?\" he suggested.\n\n'\"Um, sure, I could do that,\" she answered with a smile that set her brown eyes sparkling.\n\n\"Can I have your number?\"\n\n\"Of course,\" Selena agreed. Greg handed his phone over, and Selena entered her number for him. He sent her a message, thus giving her his number in return.\n\n\"That seemed to be going pretty well,\" Lily said to him in the car.\n\n\"She's really nice; I can't believe I haven't talked to her much before.\"\n\n\"That's because she doesn't hang around the football team with her legs spread in invitation,\" Lily laughed.\n\n\"Yeah, well...\" Greg started, but wasn't sure where he was going with his response.\n\n\"Such eloquence,\" his sister teased him.\n\n\"I don't see how she's going to fix my reputation, Lily. I mean she's really nice. But she sure doesn't strike me as the sort of girl who's just going to spread her legs for a bit of fun. I mean, she's genuinely going to help me with my Chemistry and she said her family's like pretty traditional. They don't' even really like that fact that she's taken an anglicised name even though they've been here for a couple of generations\".\n\n\"Uh huh,\" Lily responded.\n\n\"Anyway, did that extraordinarily short dress achieve its aim? Did someone get a glimpse of heaven?\" Greg asked, trying to get on the front foot, glancing at his sister's exposed thighs.\n\n\"Maybe, maybe not,\" Lily laughed. \"That's not the sort of question a polite brother asks his big sister.\" She shifted in her seat and Greg glanced down again, noting that the crotch of her panties was now visible. They drove the rest of the way home in silence, but every now and then Lily would wiggle in her seat and a little more of her panties was exposed.\n\nBy the time they were walking inside, Lily's dress once again modestly hidden beneath her long coat, Greg was horny. They were greeted by their father, who bid them good night and headed off to bed, now he knew they were safely home. Lily headed for the kitchen and Greg followed. Even though neither of them had been drinking, he decided some water was called for.",
        "\"So, how're you holding up post game and party?\" Lily asked him.\n\n\"Pretty wiped, but you know, nothing a good night's sleep won't fix.\"\n\n\"Well I don't think you should go to bed just yet. Now's the perfect time for you to work on your stamina.\"\n\n\"Stamina?\" Greg asked.\n\n\"Yep, what if you'd picked someone up tonight? What if Selena had dragged you off somewhere and wanted to have her way with you? You would have had to perform, so I think you should practice performing when you're tired. Come to my room and tongue fuck me.\"\n\n\"Tongue fuck you? Just who are you?\" Greg laughed. \"A dirty-mouthed skank?\"\n\n\"Not quite, I'm a horny dirty-mouthed skank who needs her brother's tongue in her pussy,\" she replied, spreading her coat and sliding her dress up to expose her panties to him again. She lifted the coat higher, gathering it about her waist and turned to leave the kitchen, her butt exposed to him. It showed him that she was wearing a thong rather than the bikini style he'd expected to see. She didn't even look back, and Greg hustled to follow her.\n\nHis view of her pert ass on the way up the stairs behind her had him rock hard by the time he reached the top. Lily walked into her room, draped her coat over the back of her chair, and lay back on her bed, dress up around her waist and her legs spread. \"Now, let's get down to what we're here for,\" she said with a grin.\n\nGreg went to his knees between her legs and ran his fingers over the lace at the front of her thong, teasing his finger down until it was stroking her panties against her pussy. He played with her for a while until he realised he could feel the moisture seeping from her pussy and soaking through the cotton gusset of her underwear.\n\n\"Lick me, Greg,\" Lily moaned. \"I need your magic tongue.\"\n\n\"Magic, hey?\"\n\n\"It's getting there,\" Lily smiled.\n\nGreg took hold of his sister's thong and pulled it down over her hips. She lifted her legs, bringing her knees together, and raised her feet high in the air. Greg slid the thong up, along her long, slender legs until she dipped her feet to allow him to remove the thong completely. Lily lifted her legs again and straightened them before spreading them wide in a split. Greg stared down at the familiar yet still wonderous sight of his sister's naked pussy, his cock even harder in response. He didn't wait for further invitation or instruction, but he dipped his head to run his tongue from the bottom of her slit to the top. He probed and teased, using his recently gained knowledge of what turned his sister on to build her pleasure. The suggestion that he needed to build his stamina had him thinking that he might just test hers, taking her to the brink of orgasm before deliberately backing off. Lily groaned in frustration.\n\n\"Tease,\" she moaned.\n\nGreg didn't bother replying, he simply flicked his tongue slowly back and forth across her engorged clitoris. Again, he took her to the brink without letting her cum. The third time he gave her release, though didn't relent. Even as she came, legs shaking and shuddering, he continued pleasuring her. He wasn't mean about it, leaving her clit momentarily, but he kept his tongue and lips busy, sucking and licking at her lips, and then sliding his tongue down to tease her anus. As soon as he thought she could take it, he returned his attentions to her clit, gently circling it with his tongue before pressing more firmly. Lily's thighs closed against his head, holding him tight rather than squeezing him out.\n\n\"Fuck Greg, fuck yes,\" she moaned as quietly as she could. He rubbed his tongue harder and felt small shudders shake her body. He continued his assault on her clit and was rewarded when Lily came a second time. He knew she expected him to stop then, but he kept going, thinking back to her remarks about stamina. Her pussy was almost liquid, the juices of her pleasure flowing freely down between her butt cheeks to soak her bedding. She was gasping and panting, her hands clenching the covers of her bed.\n\n\"Fuck, fuck, fuck,\" she said simply, over and over again, as Greg went to town on her pussy. When he felt her fingers grabbing his head, he knew he had her close again. His tongue was almost raw, and his jaw ached, but he was determined to give her a third orgasm. When it came, it was almost violent in its intensity. Her whole body shook with her pleasure and Greg finally sat back, staring at his sister's soaked, pleasured pussy, satisfied with his achievements.\n\n\"That was fucking amazing, Greg,\" Lily complimented him. Her hair was a mess and her dress dishevelled, but she was grinning like a lunatic.\n\n\"Glad you enjoyed it. Time for me to go take care of things.\"\n\n\"You mean sleep,\" Lily laughed.\n\n\"After I relieve myself, yeah,\" Greg commented. His sister gave him a look that gave him pause as he stood up.\n\n\"Why don't you let me do that for you?\" she asked.\n\n\"What?\"\n\n\"You've been giving me all these orgasms, why don't you let me give you one for a change?\"\n\n\"Are you serious?\"\n\n\"Yep,\" she replied simply, sitting up on the edge of her bed. She reached for him and pulled him close enough to grab his jeans, making quick work of the fastenings. She pulled his jeans and boxers down in one motion, his small but erect penis bouncing free.\n\nGreg watched as his sister took his cock in her hand, encircling it with her thumb and forefinger as she started stroking him. He found himself unable to say anything. He was so horny from having given her three orgasms, and from the fact she was holding him, that he didn't think he was going to last long, but he wasn't about to announce the probability.\n\nLily pumped and stroked him, reaching beneath his cock with her other hand to cup his sac to gently roll his balls around. Greg groaned quietly and she looked up to meet his gaze, smiling. Greg noted how erect her nipples were against her dress and wished he was able to see them. He wasn't about to ask though; things were already weird enough between them.\n\n\"Cum for me Greg, let me see you explode,\" Lily hissed. Pre-cum was seeping from the slit at the top of his cock, and his sister brushed her hand over it to spread it over the head. It was quickly absorbed though, and didn't provide the lubrication she clearly desired, so she leaned her head in toward him and drooled saliva over his erection, her hand continuing to pleasure him.\n\n\"Oh fuck, Lily,\" he groaned as he felt his balls tensing with the impending ejaculation of his seed.\n\n\"Do it. Cum on me,\" she moaned. That was enough to tip him over the edge. He came hard, his hot white load blasting out over her black dress as she kept stroking him until he had no more cum to give. \"So hot,\" she whispered as she looked down at the mess he'd made on her dress. \"Guess I'd better do my own washing this time.\"\n\n\"Um, yeah, probably,\" Greg laughed. \"And um, thanks.\"\n\n\"No problem; now you'd better get your ass into your own bedroom.\"\n\nGreg lay awake for some time, adrenalin keeping him awake as he relived in his mind the sight of his sister's hand on his cock, of her saliva running from her glistening tongue to fall over his manhood, and of his cum splattering against her dress.\n\n<p align=\"center\">--- +++ ---</p>\n\nGreg's phone pinged to alert him to an incoming message, and he glanced at it. It was a message from Selena asking what time he wanted her to come over to help him with his Chemistry. He groaned. He'd barely awakened after the activities of the day and night before, and he hadn't even begun to process what to expect for the day. The idea of Selena coming over was a pleasant one, but not so much the fact that he'd have to concentrate on Chemistry. He messaged her back, suggesting that she give him an hour so he could take his time waking, and so he could have his head sorted by the time she arrived.\n\nAfter showering and dressing, he sat down to eat and had just finished some cereal as the doorbell rang.\n\n\"I've got it,\" he called out to the family, and headed for the front door. He opened it and swallowed when he saw Selena standing there. She was wearing a cropped, tight white t-shirt with a scooped neckline that bared more chest than he'd have expected in addition to leaving her taut belly visible. It was tight enough to make it patently clear she wasn't wearing a bra. Matched with a pair of tight, short little black Lycra athletic shorts, it was enough to make meeting her gaze a struggle. He dragged his eyes up from her pert little B cups to meet her brown, almond-shaped eyes and invited her inside.\n\n\"So, all ready for a chemical burn?\" Selena joked after saying hello and following him inside.\n\n\"Um, yeah, you make it sound so appealing,\" he laughed. By the time he'd led Selena through to the kitchen where he'd intended for them to study, both his mother and sister had appeared, curious as to who'd rung the doorbell.\n\n\"Oh, hey Selena,\" Lily greeted her.\n\n\"Mum, this is Selena. Selena, my mother Olivia,\" Greg said, making the introductions. If his mother noticed or disapproved of the way the girl was dressed, she didn't say anything. It certainly wasn't the first time a girl had come around dressed to impress her fit footballing son.\n\n\"A pleasure to meet you Selena. What brings you around?\"\n\n\"Greg was looking for some help with our Chemistry course, and I offered to help him out.\" Olivia looked impressed that Greg had asked for help, but she didn't say anything about it. Nor did either of the women comment on Selena's provocative outfit.\n\n\"Maybe we should study in your room, so there'll be no distractions,\" Selena suggested when they had a moment without anyone listening in.\n\n\"If you want to. You'll have to give me a moment to clean it up a bit, though.\"\n\n\"Sure thing,\" Selena said with a smile. He ran upstairs and threw dirty clothes into his hamper and quickly scanned for anything untoward. He gave it a quick spray of aftershave, hoping to mask any smells, and then went back down to let Selena know it was safe for her to follow him upstairs. Given how the shorts she wore clung to her tight little buttocks, he wished he could find an excuse for her to go first, but he settled for any other glimpses he could manage.\n\nThey set up side by side at his desk. Greg pulled out his Chemistry textbook, and Selena asked him which parts of it he was struggling with.\n\n\"Just the bits between the front and back covers,\" he laughed, only mostly joking.\n\n\"Then maybe for today we should just focus on the current stuff we're doing, the organics,\" Selena suggested.\n\n\"Sounds good, it would be nice to get a grade that keeps me on the field,\" he replied. For a full fifteen minutes Greg managed to concentrate on the Chemistry, but the way Selena's t-shirt clung to her pert breasts became too hard to ignore. He kept stealing glances, the darker shade of her nipple like a beacon demanding attention.\n\n\"See something you like?\" Selena asked him with a smile after busting him looking.\n\n\"Um, I'm so sorry,\" he stammered out, mortified.\n\n\"Why?\"\n\n\"Well, for um... you know, looking,\" he said lamely, surprised by the question.\n\n\"It's okay, I mean it's not like I didn't expect it, after dressing like this for you.\"\n\n\"What?\"\n\nSelena just laughed. \"Did you think I offered to help you with your Chemistry just to help your grades?\" she asked him. Greg was thrown completely off balance.\n\n\"Well to be honest, yeah, that's exactly what I thought.\"\n\n\"You're hilarious. Just because I'm a smart little Chinese girl doesn't mean I'm immune to being horny, you know.\"\n\n\"Horny?\"\n\n\"Hell yeah. Do you know how often we smart girls get completely ignored by you jocks? You don't even see us. You're all so caught up in the cheerleaders and athletes that we don't even register on your radar. But then there you were at the party, suddenly talking to me. And I heard something that made me curious enough that getting to come over here was too good an opportunity to pass up.\"\n\n\"Um, dare I ask what it was?\"\n\nSelena leaned in close to him and said quietly, \"I heard you had a magic tongue.\"\n\n\"Who told you that?\" he asked in amazement. After all, the only person he was aware of that might have said such a thing was Lily.\n\n\"I'm not going to reveal my sources, but I was hoping maybe I could find out if it was true,\" Selena suggested. \"What do you say Greg, will you treat me to a magic tongue lashing?\"\n\n\"Just like that?\" he asked, amazed.\n\n\"Well, you could perhaps kiss me first,\" she giggled and leaned in close to him. He glanced down at her flat lips, glistening with gloss. He wasn't silly enough to miss the cue, and he turned to her enough that he could press his lips to hers. He found her tongue quickly worming its way between his lips and met it with his own, his cock hardening at the sudden turn of events. They kissed for several minutes before breaking, both breathing heavily, their faces flushed from their shared passion.\n\nGreg decided to take the lead. Selena had stated clearly exactly what she wanted, and he wasn't about to deny her, given it presented him the opportunity to test the skills he'd developed with his sister's help. He stood and offered Selena his hand. She grinned and took it, standing up and allowing him to lead her to his bed, detouring only slightly to close and lock his door. It was unlikely they'd be interrupted by anyone, but that was no reason to take a chance!\n\nGreg was surprised by the intensity of the desire in Selena's eyes as he moved to join her on his bed. They kissed again, this time lying beside each other. Greg slid his hand along the smooth expanse of her thigh until his fingertips reached the hemline of her shorts. He teased at her shorts for a few moments while his tongue duelled with hers, then he cupped her buttock, squeezing it. Selena gave a satisfied moan in response. Greg grasped her bum for a few moments, then slid his hand up over her t-shirt toward her breast. When she made no move to stop him, he took it in hand, her hard nipple pressed against his palm through the stretched cotton. Selena rolled onto her back and Greg slid his hand back down to her shorts. He pulled at them, eager to see the treasure within, anticipating what delight it would bring him and what pleasure he could impart.\n\nSelena seemed equally keen, wiggling her bum to assist him in removing the tiny shorts to reveal an even tinier black thong beneath. Greg moved down the bed and took up position between Selena's legs. He reached for her thong and pulled it slowly from her, dragging it down her pale, skinny legs. He was surprised to find Selena's pussy shaved bare. He'd had no reason to expect it one way or the other, but he was surprised regardless.\n\nShe parted her legs for him, and he took in every detail of her as he moved closer and closer to his target. Her inner lips protruded from beyond her labia majora, and he stroked a finger gently over them, laying them flat against first one side, then the other side of her pussy. Selena propped herself up on her elbows, watching as Greg gently parted her lips to reveal the wet pink interior.\n\n\"Like what you see?\" Selena asked with a smile.\n\n\"It's beautiful,\" he replied earnestly. As if to confirm his belief, he dipped his head and ran his tongue along the path just taken by his fingers.\n\nHe licked gently all around her before eventually sliding his tongue between her lips, first up then down. He teased and probed gently, exploring, listening carefully for the cues that would tell him he'd found one of her triggers.\n\nWith no intention other than to provide Selena with the most pleasurable experience he could, he set to doing exactly that. He used every nuance he could to build Selena quickly toward her first orgasm. He didn't stop when she came, but instead teased her through it, guiding and nudging, extending her pleasure without taking her beyond what she could enjoy. As she recovered, he began building her up again. She was completely slick with the pleasure she was experiencing, and Greg devoured her juice, delighting in both her flavour and in knowing he was bringing her so much joy.\n\n\"Fuck, stop, I can't take any more,\" Selena gasped, pushing his head back after she'd cum for the fourth time.\n\nGreg sat back, Selena's juices coating his chin, the taste of her filling his mouth, and her scent lingering in his nose. He lay beside her on the bed and cupped a breast through the t-shirt she hadn't removed.\n\n\"That was fucking amazing,\" she purred as he gently kissed her and squeezed her firm little breast. Her hand strayed toward him, caressing him, moving toward his crotch. With a gentle touch he forestalled her.\n\n\"This was just about you,\" he replied. \"About giving you a taste of the magic tongue, so to speak.\"\n\n\"But what if I want more?\"\n\n\"Then that's what next time is for,\" Greg suggested.\n\n\"Next time? What makes you think there'll be a next time? It's not like we're dating or anything.\"\n\n\"Um, yeah, well, perhaps it's just my way of hoping you'll be enticed back for a next time,\" Greg laughed, surprised at how quickly she'd discarded any suggestion they'd be dating. He decided not to press the issue.\n\n\"Well if you're going to do that to me again, I'm pretty sure I could be convinced,\" Selena smiled.\n\n\"I don't suppose you could actually help me with my Chemistry now?\" he asked when she'd pulled her underwear and shorts back on.\n\n\"I think that would be an appropriate thanks for your efforts,\" Selena replied with a smile. She pulled her thong and tiny shorts back on and they returned to sit at Greg's desk.\n\nThey managed a full half hour of study before Selena turned to Greg and asked him, \"Do you think you could make me cum again?\"\n\n\"Really?\"\n\n\"Yeah, like that was so amazing, I really want to see if I can cum again,\" Selena practically purred at him.\n\n\"Well sure, I'm willing if you are.\"\n\nSelena practically leapt to her feet, but before Greg could join her, she'd slipped between him and the desk, straddling his lap and facing him. She ground against him and thrust her tongue into his mouth, kissing him passionately. Greg ran his hands down her back and up her sides, then back down and behind her to cup her tight buttocks, squeezing firmly.\n\n\"Mmm, well someone's enjoying this,\" she grinned, grinding against his erect cock.\n\n\"Hard not to,\" Greg replied. Selena grabbed hold of her white t-shirt and pulled it up over her head, exposing her perfectly pert breasts. Her nipples were more brownish than pink, and they stood alertly at the tips of her boobs, thrusting proudly from cone-shaped areolae, stiff enough that Greg imagined they could have cut a proverbial glass sheet. He couldn't imagine a pair of more perfect nipples.\n\n\"Like them?\"\n\n\"God yes, they're perfect,\" he said.\n\n\"You're allowed to touch them, you know.\"\n\nGreg grinned like a kid in a candy shop as Selena leaned her elbows back on his desk to provide him room. Greg gently placed a hand on each breast, squeezing gently, loving the feel of her nipples on his palms. He played for a couple of minutes, Selena continuing to grind on him. He was secretly pleased she'd made no mention of his size while she did so, and he hoped to send her on her way without exposing himself. He bent his head to her left breast, sucking the nipple deep into his mouth and then letting it slip back far enough to tease it with his tongue and teeth. Selena allowed him to tease and stimulate her breasts as he moved back and forth between them for some time before asking Greg to move on to the main purpose. She slipped from his lap, pushing his chair back from the desk on its castors. She slipped her shorts and soaking wet thong from her legs and then, placing a foot on his chair between his legs, levered herself up off the ground to sit on the edge of his desk. She spread her knees wide and beckoned him closer.\n\n\"Eat me Greg. Use that magic tongue to make me cum again.\"",
        "Greg dropped to his knees before her and licked and kissed his way up her inner right thigh. Her pussy was swollen and wet with desire, her juices seeping down between her butt cheeks. Greg slid his tongue gently along her lips, up one side and down the other. He caressed and gently loved her with his tongue before deciding to see if she was as kinky as his sister. He slipped his tongue between her silky lips, then as he pulled it back out, dipped lower, pushing her thighs back toward her as his tongue slid across her perineum before flicking it back and forth across her puckered asshole.\n\n\"Oh my,\" Selena giggled, but made no effort to stop him. He swirled his tongue around her anus a couple of times before moving back up to her pussy and moving relatively quickly to her clitoris.\n\nHe set to work pleasuring her, his tongue dancing, teasing, caressing, and at times firmly rubbing her clit. He glanced up to find Selena watching him, pleasure clear on her face. She was biting her bottom lip, and he smiled as he continued his pleasure assault.\n\n\"Fuck, fuck, I can't believe it, you're going to do it to me again,\" Selena gasped. \"Just there, like that! Oh fucking God of all Gods!\"\n\nSelena's body started shaking and her thighs clamped against Greg's head. He felt her hands on him, pushing him away.\n\n\"I can't take another one, that was too intense,\" Selena panted, leaning back on her hands as Greg returned to his chair, still admiring the sight of the naked Chinese girl sitting on his desk.\n\n\"Hey are you two okay in there?\" Greg heard his sister call out.\n\n\"Yeah, all good,\" Greg replied.\n\n\"Mum thought you might like some snacks.\"\n\n\"Sounds great,\" Selena replied.\n\n\"We'll be down in a sec,\" Greg added. Selena grinned and hopped down off his desk, laughing when a sheet of paper with the Chemistry they'd been working on it was stuck to her butt. She peeled it away from her skin and slapped it back on his desk, which glistened with the evidence of her pleasure.\n\n\"Thanks again,\" Selena said, giving him a quick kiss before quickly dressing.\n\nGreg led her back downstairs where they were presented with freshly baked cookies. Greg grabbed a coke for himself and water for Selena. Lily hung around being questionably interested in the two of them and giving Greg sly looks whenever she could.\n\nAfter spending some time in the kitchen, they returned to Greg's room to spend a little more time on the Chemistry.\n\nWhen Greg farewelled Selena at the front door later in the afternoon he was confident he knew more about Chemistry than before they'd started. He thanked her profusely, and even managed to get her to commit to helping him further, regardless of anything else that happened between them.\n\n<p align=\"center\">--- +++ ---</p>\n\n\"Hey Selena,\" Greg greeted his new friend as they passed each other in the hall the following Tuesday. \"We still on for tutoring Thursday night?\"\n\n\"Hey Greg, we sure are,\" she replied.\n\n\"Excellent, see you at yours then.\" He moved on down the hall in the wake of his football teammates as they headed for a lunchtime team meeting.\n\n\"Wait, what the fuck just happened there?\" Miranda demanded.\n\n\"Um, I told you I was going to tutor him on the weekend, remember?\"\n\n\"Yeah, but now he's both acknowledged you in public and he's suddenly going to your house? Like aren't your parents away this week?\"\n\n\"All correct,\" Selena grinned at her friend.\n\n\"You're so holding out on me! What happened that this is happening? I need details, girl.\"\n\n\"Well, yeah, I guess I have been holding out. I'll tell you over lunch,\" Selena offered, grabbing her friend's arm and leading her down the hall.\n\n<p align=\"center\">--- +++ ---</p>\n\n\"Oh my God, I'm surprised you're not walking funny if you came that many times!\" Miranda exclaimed when Selena had finished telling her about the fun she'd had with Greg.\n\n\"Well it's not like my pussy or ass were pounded, I was just licked and worshipped into oblivion,\" Selena replied with a grin.\n\n\"He really didn't try to fuck you?\"\n\n\"Not at all. I mean I even offered to suck him off, and he said he was happy just giving me what I wanted. The closest I got was grinding on him. He was hard, so it wasn't like he wasn't reacting.\"\n\n\"Sounds a little weird to me.\"\n\n\"Yeah, but when you've cum that many times, you don't really mind the sort of weird of someone not looking to take advantage of you!\"\n\n\"I guess that makes sense,\" Miranda agreed. \"I reckon I'd put up with that sort of weird too, when you put it like that.\"\n\n\"Maybe you should give him a try,\" Selena suggested.\n\n\"Do you think he'd go for it?\"\n\n\"I could put in a good word for you.\"\n\n\"You're not like dating then?\"\n\n\"Hell no, can you imagine what my parents would say if I brought a white boy home? It's Chinese or nothing, remember? Like, they barely let me get away with Selena, I'm not about to push them too far. Greg was just a bit of fun. I heard a rumour that he had a magic tongue and decided to find out if it was true or not. And I mean, I'm happy to have a bit more fun with him, but if he wants to share his talents with you as well, I'm not going to stop him.\"\n\n\"I might just have to find out if he's willing then,\" Miranda grinned. \"Add some Korean spice to his life.\"\n\n\"We Asians do have to stick together,\" Selena laughed. \"I'll have to let my source know the rumours are true, too!\"\n\n<p align=\"center\">--- +++ ---</p>\n\n\"Hey there mister magic tongue,\" Lily greeted her brother, bounding into his room after school.\n\n\"Mister magic tongue?\"\n\n\"That's the rumour that Selena confirmed to me today.\"\n\n\"Really? And why would she be telling you?\"\n\n\"Well maybe... because I asked her if she'd heard the rumour in the first place. I told you, I know how to get things done around here, and apparently you know how to do girls with your tongue.\"\n\n\"Apparently? I thought you'd have been more of an authority on the matter than to need a second opinion.\"\n\n\"I didn't need one. I needed her to find out for herself. And did she ever! Six times!\"\n\n\"I couldn't have gotten anywhere if you hadn't taught me how to pick up on what she liked.\"\n\n\"Well, I am a good teacher,\" Lily grinned. \"And I have another lesson for you.\"\n\n\"Oh really?\"\n\n\"Yeah, if you're up for it.\"\n\n\"I could be talked into it,\" Greg grinned, hungry eyes roving over his sister's body.\n\n\"I think you need to practice some different angles.\"\n\n\"Angles?\"\n\n\"Yeah, like you need to get in behind me and get me off when I'm like this,\" Lily said, moving over to kneel doggy style on his bed. She shimmied her short denim skirt up and her thong down to expose herself to her brother. \"Now get over here.\"\n\nGreg hurried across to where his sister was and knelt on the floor beside his bed while she moved back to present her pussy to him. With her legs almost tight together, there was no sign of her inner lips, just two beautifully smooth labia majora meeting to present a seamless slit.\n\nHe placed a delicate kiss first on Lily's left buttock and then her right, before running his tongue along her slit toward her anus. She gave a little appreciative wiggle and he kept going. Just before reaching her puckered hole he went back down again, this time pushing his tongue between her lips to enter her, his nose pressing into the cleavage of her butt. He used his hands to spread her cheeks and licked her eagerly. The second time he didn't bother stopping, instead he slid his tongue around the outer circumference of her anus, then fluttered it against the centre. Lily gave a little yip of glee.\n\nHe worked his way back down toward her clitoris but found the access too difficult.\n\n\"It doesn't really work from here Lily,\" he suggested after licking her for five minutes.\n\n\"You're right,\" she sighed, \"I won't cum like this, but it's still great foreplay and feels amazing. Why don't you lie down so we can try another?\" Lily moved out from in front of him and let him lay down on the bed. She slipped her thong off completely, and then climbed back onto it once he was laying down.\n\nGreg watched as his sister stood facing him with a foot either side of his head, giving him a spectacular view up her long, athletic legs to the perfection that was her pussy, glistening with the juices that he'd started her oozing.\n\nShe squatted down, bringing herself closer. \"I'm going to ride your face now and give you a chance to see if you can make me cum while I do.\"\n\nGreg didn't have time to speak. His eyes were glued to the pussy that was pressed against his face within moments. He thrust his tongue out to meet her as she knelt with a knee either side of his head, her hands resting on the bed beyond to hold herself up while he started licking.\n\nGreg grabbed his sister's butt with his hands, squeezing the beautifully firm globes and supporting them enough to give him some measure of control over how hard she ground against him. He kept his tongue firmly against her clit as she squirmed and bore down against him. He was consumed by the need to make her cum, feeling like he'd lose something if he didn't. He needn't have worried though, as Lily came within a few minutes of mounting his face.\n\n\"Now let's try it the other way,\" she announced happily, spinning around so she was facing his feet and pressing her pussy back against his face. Greg resumed licking his sister's pussy as she squirmed back against his face again. After a couple of minutes, he felt a hand tugging at the button of his shorts. While she continued pushing her pussy back against his tongue, his sister was unfastening his shorts. It didn't take long until she managed to work them to a point of exposing his rock-hard erection.\n\nHe moaned when he felt her lips close over it as she sucked him into her mouth. He couldn't believe he was sixty-nining with his sister. She seemed to be right into it as well, taking his entire cock into her mouth, her face pressed against him as she also ground forcefully against his tongue. Greg was so horny and so shocked, that self-control abandoned him. He thrust at her mouth and exploded. She kept him deep in her mouth the entire time, swallowing everything he spurted into it. He had to pause with his licking due to the intensity while he came, but quickly resumed when it became apparent his sister wasn't about to stop riding him just because she'd taken a mouthful of cum.\n\nIt took her a couple more minutes to get off, but she came on his face for a second time, then quickly allowed him some air, though only long enough to turn around. She thrust her tongue into his mouth, and Greg was suddenly tasting his own seed on her tongue. He wasn't particularly keen, and Lily clearly sensed his hesitancy as he kissed her back.\n\n\"Don't be so slack,\" she chided him. \"You need to get used to a bit of cum if you expect to keep the girls impressed. This is the next part of your training.\"\n\n\"What? Why?\" Greg asked.\n\n\"Because you need to be able to give a girl satisfaction. If you find yourself with someone who's shitty enough to care about the size of your cock too much, you need to give her a good reason to forget it.\"\n\n\"Like what?\" he asked.\n\n\"Like after you shoot your load in her pussy, slither down between her legs and eat her to another orgasm or two. If you do that with your cum leaking out of her, she soon won't care whether she came while your cock was inside her or not.\"\n\n\"Oh,\" Greg replied.\n\n\"Yeah, so this was your first test: seeing if you were prepared to kiss me while I tasted of your cum. I give you a C. You kissed me, but you were too reluctant.\"\n\n\"Well maybe if you hadn't sprung it on me like that...\"\n\n\"Nope, doesn't work like that,\" Lily laughed. \"It's okay though, I know you're a good student Bro. We'll soon have you sorted out.\"\n\n\"Um, well if you say so,\" Greg replied. Lily thrust her tongue back into his mouth and kissed him again before climbing off and letting him know his lesson was over for the day.\n\n<p align=\"center\">--- +++ ---</p>\n\nGreg was distracted for most of Thursday, too conscious that he was going to Selena's after school. Given how she'd been on the weekend, he couldn't help but think he was going to get another chance to chow down on her sweet pussy. He saw her a couple of times throughout the day, typically accompanied by her friend Miranda, who seemed to be watching him every time he came across the two girls. He didn't give it a lot of thought though.\n\nSelena had texted him her address and suggested that they meet up there an hour after school, to give her time to clean up a bit. That worked for Greg, because he needed to catch up with the football coach before he left for the day.\n\nHe let Lily know he was going to Selena's for tutoring, and that she'd have to find her own way home. She teased him about what it was he'd actually be studying, but he didn't let it worry him.\n\nHe pulled up outside a nice-looking two-story home in a good suburb and walked to the door more nervous than he should be, given he was supposedly simply going there to get some help with his Chemistry. Maybe it was the thought of meeting her parents if they happened to be home.\n\nSelena answered the door in a short, navy-blue skirt, knee-high white socks and a white blouse that was almost see through, giving him just a hint of her braless nipples. Greg grinned at the sight of her as she asked him to come in, holding the door for him.\n\n\"You got changed,\" he noted. She'd been wearing a fairly standard pair of jeans and loose t-shirt at school, and the difference was more than simply pleasant. She'd been almost shapeless at school.\n\n\"Indeed, I did. Like it?\" she asked, giving a twirl that flared the short skirt almost enough for Greg to glimpse the bottom curve of her buttocks.\n\n\"You look hot,\" he replied.\n\n\"She does, doesn't she?\" Miranda agreed as they entered the living room off the entrance hall.\n\n\"Oh, hi Miranda,\" Greg greeted her, surprised but trying to hide his disappointment. Clearly if Miranda was over, the chances of his getting to have the sort of fun he'd hoped for with Selena were probably zero.\n\n\"Miranda is staying over while my parents are away. They seem to think there's less chance of something going wrong if I have a friend over. I hope you don't mind.\"\n\n\"Of course not, the more brains to help me work out this Chemistry the better!\"\n\n\"Uh yeah, well you probably don't actually want my help in that department,\" Miranda laughed. Greg smiled at her, noting that she too had changed since he'd seen her at school. She was wearing a pair of tight grey yoga leggings with an equally tight stretch cotton black t-shirt. Like Selena, when she'd been at school her clothing had been nondescript. It certainly hadn't hinted at the large breasts that were now really obvious within her t-shirt.\n\nSelena offered Greg a soda, and then the three of them sat down at the kitchen table to study. Selena was diligent and really helpful, and Greg again felt like he was actually benefitting from the time they were spending going over the material.\n\n\"Okay, so enough of this Chemistry crap,\" Miranda complained after an hour and a half. \"You guys need a break.\" She'd been sitting at her laptop doing her own thing while Selena and Greg had worked at the Chemistry.\n\n\"Probably a good idea,\" Selena agreed.\n\n\"Well yeah, I mean, I should be getting home anyway, given its nearly dinner time.\"\n\n\"You could always just have dinner with us, then get a little more studying in,\" Miranda suggested. He was surprised she was the one to suggest it.\n\n\"Well if it's okay with you both?\"\n\n\"Sure, I was just going to cook up some noodles. There's more than enough to share,\" Selena suggested. Greg texted home to let his mother know he'd be late and wouldn't need any dinner.\n\n\"Now, there's something I've heard Greg, that I really need you to tell me if it's true or not,\" Miranda said as soon as he'd put his phone down.\n\n\"Oh?\"\n\n\"Yeah. You see, the way I hear it, you have some sort of magic tongue that can reduce a girl to a quivering, multi-orgasmic mess. Is it true?\"\n\nGreg looked from Miranda to Selena, stunned. Selena just smiled and raised her eyebrows.\n\n\"Well, um, I might have some skill in that department.\"\n\n\"And just how willing are you to share and demonstrate this talent?\" Miranda pressed. Greg looked to Selena.\n\n\"Hey, you don't need my permission. If you're willing to let her have it, I'm not about to complain.\"\n\n\"Well, I guess if Selena doesn't mind...\"\n\n\"Oh yeah,\" Miranda grinned.\n\n\"Mind you, just because I don't mind, doesn't mean I'm going to miss out, either,\" Selena advised him.\n\n\"Is that right?\"\n\n\"Sure is,\" she grinned.\n\n\"Well, how about we go somewhere comfortable then?\" Miranda suggested. \"Like that nice comfy couch?\" The three teenagers made their way through to the living room and Miranda shimmied out of her leggings, dragging her thong with them. Greg watched curiously, trying not to let his mouth gape open as she took up a seat on the couch and spread her legs to reveal herself. She had a dark, broad landing strip above shaved labia, with long dark labia minora exposed between them.\n\nGreg didn't question Selena coming through to the living room with them and taking up a seat where she could watch. She'd completely surprised him the first time they'd been together, and he was quickly learning to expect the unexpected from her. AHe knelt before Miranda and ran his hands along the smooth skin of her thighs. She watched him intently as he ran his fingers over her pussy, gently caressing her outer lips before teasing at the inner lips protruding from between them, moving them left, then right, before separating them and admiring the glistening moisture within.\n\n\"Lick me,\" she purred, clearly eager for more than the touch of his fingers. Greg smiled and then did as she'd asked, running the tip of his tongue between her lips, teasing at the entrance of her vagina. He swirled and flickered it just within her before slipping it up and over her clitoris briefly.\n\nAs he had with Selena, he put all the skills he'd learned with his sister to use, his tongue dancing over Miranda's most intimate areas. He delved deep within her and dallied without, playing her like a maestro. He listened carefully to her whimpers and moans, to her breathing as it rose and fell, coming and going in gasps and pants. He used the clues it gave him to bring her to the brink of orgasm, and then let her pleasure fall away before building it again. Three times he took her to the edge before finally allowing her to cum. When she did, she was vocal, wailing in glee as her body shuddered on the couch.\n\n\"Good, isn't he?\" Selena asked.\n\n\"Fucking amazing,\" Miranda panted.\n\n\"The best bit is that if you can take it, he can do it again, can't you Greg?\"\n\n\"Sure,\" Greg agreed.\n\n\"Seriously?' Miranda asked, scarcely believing.\n\n\"Oh yes,\" Selena replied even as Greg began teasing Miranda's pussy again, gently licking at the juices that were seeping from her, teasing his tongue around her entrance and then slipping it down over her perineum and flickering it against her anus.\n\n\"Oh wow,\" Miranda purred. Greg continued to pleasure her without renewing his attention on her clit. He gave her time to recover from the sensitivity he knew she'd be feeling immediately after her orgasm, and slowly built her pleasure again.\n\nAs Greg worked her, Selena moved in behind him. He felt her hands caressing his butt, and then one slipped between his legs to stroke him through his jeans.\n\n\"Mmm, nice and hard,\" she murmured, her hand firm against his erection. Greg focused on the pussy in front of him, unable to ignore what Selena was doing, but still determined not to let her distract him from providing the maximum possible pleasure to Miranda. If it did anything, it drove him to accelerate his efforts so he could get Miranda off before he lost control and came in his pants. His tongue circled in on Miranda's clitoris and began to work in earnest, swirling, flicking and rubbing, each motion bringing a new whimper or cry from her.",
        "Within a couple of minutes, he once again had her in the throes of orgasm, her thighs clamped about his head, her hands in his hair. She finally pushed him away, too sensitive to allow him to continue.\n\nSelena stopped teasing him and moved quickly to the couch to sit beside her friend. She flipped up her skirt and revealed the absence of any underwear.\n\n\"My turn,\" she said without ceremony.\n\nGreg smiled at her and moved from between Miranda's legs to between Selena's, which were of a paler, creamier complexion and thinner than her friend's. Being already familiar with her pussy, he didn't bother taking any time to study it, but rather dove straight in to the already wet slice of heaven. It wasn't that he was hasty, one of the key things his sister had taught him was that a patient and slow build was almost always appreciated, and if a girl wanted something quicker, she'd be sure to let him know. And so that was the way he applied himself, remembering that although Selena's pussy was already dripping with pleasure, she hadn't yet had any foreplay. He did have the advantage of having pleasured her at his house, and so knew exactly which buttons to push to elevate her pleasure.\n\nHe didn't let her off easy. Even with his tongue tiring, he made sure to give her a long, drawn-out build-up, waiting until she was begging him to give her release. When she did cum, he kept on licking without contacting her clit, just as he'd done for Miranda. He savoured her juices, teased her anus and flickered and fluttered his tongue over every inch of her pussy save for the little nub that would drive her to orgasm. Once he deemed her ready, he re-engaged with that pleasure button and focussed on working her to a second orgasm\n\nWhen she'd cum for the second time, he climbed up off his knees and took a seat on the single chair that faced the lounge the girls were on.\n\n\"Well damn, you really do have a magic tongue,\" Miranda said with a smile.\n\n\"Thanks,\" Greg replied.\n\n\"And am I allowed to suck your dick?\" Miranda asked.\n\n\"Yeah, I mean, sure, if you want to,\" Greg replied. \"But don't feel you have to, I'm okay.\"\n\n\"Is he for real?\" Miranda asked Selena.\n\n\"I told you he was generous,\" Selena assured her friend.\n\n\"That's not generous, its saintly,\" Miranda said in awe. \"But I really want to suck you, Greg.\" She stood up and stepped across the space between them, her nipples prominent against her tight shirt and drawing his eyes.\n\n\"Want to see them?\" she asked, pulling her t-shirt off before he could even answer. Greg was stunned by the revelation of a pair of breasts almost as large as his sister's, with large round, brown areolae. He instinctively reached for them, and Miranda did nothing to stop him. His cock lurched in his pants at the feel of the beautifully firm orbs in his hands. He squeezed them, playing as she moved to sit astride his legs. She played with his hair and pulled his face toward them. He happily took a nipple in his mouth and sucked on it. He moved back and forth for a bit, teasing first one, then the other, before Miranda was sliding back off his legs and attacking his belt and jeans fastenings. He lifted his butt to facilitate the removal of his pants. His cock sprang free as his boxers followed his jeans to his ankles. He worked a shoe off, and Miranda pulled one leg off so she could push his knees wide and kneel between them.\n\nIf she was disappointed by his size, she didn't say anything. She simply placed a hand against his abdomen, his cock held in the wedge between her thumb and forefinger to hold him vertical. She leaned in and he watched as her tongue wetted her lips before they parted to slide down over the head of his dick. He moaned as he was engulfed. Miranda sucked up and down his cock, her tongue working along the underside and flickering around each time it reached the tip.\n\nShe was enthusiastic and Greg felt his orgasm building quickly. He saw no reason to hold back, so he gave a quick warning when he felt he was going to explode. Miranda took his entire cock in her mouth and held him as he spurted his load down her throat.\n\n\"You look hot sucking dick,\" Selena told her friend. Miranda swallowed everything Greg had fed her, and then replied with a simple thanks.\n\nThey all restored their clothes, which meant a simple flip of the skirt for Selena.\n\nGreg thanked Selena for the help with his Chemistry and grabbed his things so that he could head for home.\n\n<p align=\"center\">--- +++ ---</p>\n\nWithin moments of getting inside his house Lily came and found him, grinning like an idiot.\n\n\"How was the tutoring?\" she asked,\n\n\"Good, Selena's really smart and really knows how to explain Chemistry,\" he replied, not taking the bait.\n\n\"I'm sure she does, but I'm also pretty sure that she wanted to do more than help you with that,\" Lily pressed.\n\n\"Well given Miranda was there as well, it was really about the Chemistry,\" Greg answered, hoping to shut her down.\n\n\"Oh, well, I guess that could make things interesting then.\"\n\n\"Interesting?\" Greg asked with a laugh. Lily had followed him to his room as they'd talked. He dropped his bag of books just inside the door and was about to go to his desk when Lily took his hand. Surprised, he turned back to see why. Before he had a chance to react, she kissed him, thrusting her tongue into his mouth.\n\n\"I knew it! You taste like pussy!\" she declared triumphantly.\n\n\"You're imagining things!\" Greg accused her, stepping back away.\n\n\"Nuh uh, tell me what went down, Greg. I need to know.\"\n\n\"Need?\"\n\n\"Want, then. Please tell me? I'll make you cum....\"\n\nWell, okay then,\" Greg agreed, \"But I want to see your tits as well.\"\n\n\"Sure,\" Lily answered. She closed his door behind her and pulled her t-shirt over her head. Greg's cock started to rise at the sight of her large breasts, clad in a peach coloured lace bra. As Lily reached around behind herself to undo the clasp, they were thrust even further from her chest. Greg swallowed as she let the bra fall away and her magnificence was fully revealed to him. Her nipples were pale pink, with large round areolae. He imagined sucking one into his mouth and teasing it.\n\n\"Come on then, pants off and tell me all about your adventures while I make you cum,\" Lily instructed him. Greg stripped off his pants and sat on his bed while Lily knelt between his legs. She started gently stroking his cock as he related what had transpired at Selena's house. The whole time he spoke Lily stroked him, occasionally dribbling saliva over him to lubricate his cock. He couldn't believe how erotic it was, and he found himself taking his time and going into detail about exactly what he'd done, how it had felt, what each girl had looked and tasted like.\n\n\"Sounds so hot,\" Lily moaned when he finally told her about exploding in Miranda's mouth. \"You really like that, don't you? Cumming in a girl's mouth.\"\n\n\"It's definitely awesome,\" he laughed. Lily leaned forward and took his entire cock in her mouth.\n\n\"Fuuuuck,\" he groaned in appreciation. He let her continue for a couple minutes, but really wanted to see his sister laid out on his bed again, so he pulled her away from him. She looked at him quizzically, but she went with him as he guided her to his bed.\n\n\"Time for me to give you an orgasm,\" he explained. He undid and removed her daisy-dukes before peeling her cotton bikini from her damp pussy. She watched his every movement, and he grinned when he met her gaze. Before he attacked her pussy, he leant over her and took her nipple in his mouth, sucking it joyfully while his hand seized her other breast. He sucked one and played with the other before swapping nipples. He could feel his sister squirming beneath him, grinding her pussy up at him. Her fingers wove through his hair and pushed at his head and he took the hint, kissing his way down her body to her pussy. He feasted on her and treated her to the benefits of the education she'd provided him, licking and teasing until she came for him. After a second orgasm, he stopped, crawling up the bed to lay beside her and play with her breasts while she lay next to him, recovering and commenting on how talented his tongue was.\n\n\"We really just need to teach you that one last thing,\" she suggested.\n\n\"What thing?\" he asked.\n\n\"You've forgotten already?\" she asked him, somewhat incredulous. The blank look he gave her clearly indicated he had. She got up off the bed and straddled him, her pussy coming down on his cock, trapping it between them. She wiggled back and forth as his eyes went wide.\n\n\"Lily, no,\" he said.\n\n\"Why not?\"\n\n\"Because... we can't, it's like illegal,\" he replied. Lily simply reached between her legs, adjusted her position and took him within her pussy.\n\n\"But it feels good,\" she moaned as he slid inside her. Greg went to grab her hips and move her, but she slapped his hands away. The motion caused her to move on him, and a groan escaped his lips as the pleasure coursed through him.\n\n\"Lily,\" he protested, though only half-heartedly\n\n\"Shh, it's for educational purposes only,\" she replied.\n\n\"Oh fuck,\" was the only response he could muster as she leaned forward and ground her clit against him while his cock was buried within her. Lily rode him, working her pussy around on him, bumping and grinding and having fun.\n\nGreg gave himself over to the pleasure of the experience, taking advantage of her swaying, swinging tits, playing with them and occasionally sucking on them\n\n\"Fuck me from behind Greg, stick that perfectly formed cock of yours as deep in me as you can,\" Lily demanded after she'd ridden him for ten minutes. She climbed off him and allowed him to move before getting in position, ready to take him. Greg moved in behind his sister and admired her puffy wet pussy lips. He slid his tongue between them, driving it as deep as he could before sliding it up to her anus and rimming her. He spent a few moments working his tongue around her star-fished hole, enjoying the pleasured sounds she uttered at the contact.\n\nWhen he was ready, he knelt behind her and slid his cock into her velvet insides, pushing deep until the root of his cock was within her, his body pressed against hers. Lily groaned, pushing herself backward and Greg started to slide in and out, his hand holding her waist. As he fucked her, he leaned to the side so he could see a sideview of her breast as it hung beneath her chest, swaying delightfully with the motion of their fucking.\n\n\"That's it, fuck my pussy Greg,\" his sister demanded. \"Fuck me, and then fill my pussy with your cum.\"\n\n\"You want me to cum inside you?\" he grunted with surprise.\n\n\"Yeah, I'm on the pill, it's safe,\" she assured him. \"Now pump my cunt full of cum!\"\n\nGreg gave a few final thrusts before exploding into his sister's womb, holding himself still as his cock pulsed until he was empty and had nothing more to give. He sat back on his heels, his cock slipping from her. He saw Lily's hand appear between her legs and she flipped onto her back before spreading her legs wide.\n\n\"Now make me cum again. Lick me Greg.\" As he moved between her legs and prepared to eat her pussy again, her hand slipped away, and he saw his cum slip from within her to run down over her anus. He braced himself for the taste, then licked her clit, holding her lips wide with his fingers. He was determined not to let his reluctance to taste his seed on her show and bluffed his way through, using his tongue as thoroughly as he had before he'd fucked her. She squirmed and wiggled as he worked her pussy and within a couple of minutes she came again, body convulsing, breasts shaking delightfully on her chest.\n\n\"Damn Greg, that was amazing,\" she muttered.\n\n\"Glad you enjoyed it,\" he said, meaning every word. \"But maybe you should take off before Mum or Dad come looking?\"\n\n\"Probably a good idea. I'm not sure they realise you're home yet. You might want to clean your face, though. Don't want Mum smelling pussy on your face when she goes to kiss you.\"\n\n\"Yeah, well at least she only kisses me on the cheek, not like my kinky-assed sister.\"\n\n\"You love it,\" Lily laughed.\n\n\"I love your tits even more,\" Greg teased. Lily cupped the aforementioned melons within the t-shirt that she'd pulled back on and jiggled them at her brother before dragging her daisy-dukes back on without bothering with her underwear. She slipped from Greg's room and he sorted himself out, still barely believing how the day had turned out.\n\n<p align=\"center\">--- +++ ---</p>\n\n\"Hey Greg,\" both Selena and Miranda called out as he passed in the hall.\n\n\"Hey Selena, Miranda,\" he replied as he walked past with his friends.\n\n\"What's with you and the Asian geeks?\" Jake asked him once they were out of earshot.\n\n\"What do you mean?'\n\n\"You know what I mean,\" Jake insisted. \"Why is it that you're suddenly all friendly with them? A couple of weeks ago you wouldn't have acknowledged their existence, and there's no way they would have said hello to you.\"\n\n\"Selena's been helping me with my Chemistry,\" Greg replied.\n\n\"Well that's probably good then, can't have you missing football,\" Jake replied.\n\n\"She's actually really nice,\" Greg replied, feeling the need to say something more than just having Selena thought of as a means to his continuing to play ball.\n\n\"Careful, next you'll be slumming it with them,\" Andy joined in.\n\n\"Hey, there's no call for that,\" Greg replied.\n\n\"Dude, they're not exactly hot, are they? I mean, shit, they're like four out of ten at best.\"\n\n\"You might be surprised, if you saw them outside of school,\" Greg replied.\n\n\"Huh, I'll stick to hot cheerleaders and athletic chicks, thanks,\" Andy said.\n\nGreg let the matter drop. He wasn't about to change his friend's outdated opinions, and certainly wasn't going to reveal how he'd come to change his own. He gave it a lot of thought throughout the day, and he found himself looking more closely at many of the girls he'd never paid any attention to, trying to guess what they'd look like without their clothes on. He was surprised when he looked objectively and without prejudice, just how many were more attractive than he'd ever realised. They just didn't all put themselves on display like most of the popular girls.\n\nLate in the day, alone at his locker, he was approached by Emma Whelan.\n\n\"Hey Greg, are you going to the party after the game this weekend?\" she asked him.\n\n\"Oh, hi Emma, probably. I hadn't really given it any thought yet,\" he replied while assessing her through his new perspective. She wore a baggy t-shirt and jeans that almost appeared too big, hiding her figure. She was taller than he'd realised too, about five foot ten.\n\n\"Cool, well I hope you come, it would be good to see you there,\" she said before wandering off down the hall. He watched her go, surprised that she'd even stopped to ask. Just as she was about to disappear through the door, Miranda and Selena came out of a side-corridor, greeted and left with her. The cogs in his mind started turning, and his cock started hardening. Could they have told Emma about his new-found talents? It had already been likely he'd go to the party after the game, but he decided then and there that he'd definitely be going just on the off chance it presented him with another opportunity to show off his skills.\n\n<p align=\"center\">--- +++ ---</p>\n\nThe night of the party rolled around after the football team had won their game, and Greg was definitely in a mood to party. He offered to drive his sister, giving her the freedom to drink if she wanted to. He met up with his friends and chatted to them, but as they drank and he didn't, he found himself working his way through the crowded yard of the house where the party was being hosted, and took the time to say hello and chat with people he hadn't always bothered to talk to.\n\nSelena and Miranda chatted to him happily and gave no indication that anything other than tutoring with Selena had happened. He bumped into Emma chatting with her friends around a fire bucket.\n\n\"Hey Emma,\" he greeted her.\n\n\"Greg!\" she said, smiling and clearly surprised he'd stopped to talk to her. She shuffled along the bench she was sitting on to create just enough room for him to perch beside her.\n\n\"You played really well today, Greg,\" she said when he took the seat and stretched out his hands to the fire.\n\n\"Thanks, you were at the game then?\"\n\n\"Always,\" she replied. Greg was a little embarrassed that he hadn't even realised, but then lots of people attended the games without his knowledge. It wasn't like he would ever be able to keep a catalogue of who did and who didn't.\n\n\"Do you play any sport?\" he asked her.\n\n\"God no,\" Emma laughed. \"I'm way too uncoordinated. I can't even dance to save myself.\"\n\n\"Well maybe you'd make a good partner for me then, I can run and catch and hit things, but Lord knows I can't dance. Hell, I tried Yoga once, and that was too much for me.\"\n\n\"I love Yoga, it's really the only exercise I get. If nothing else, it keeps me nice and flexible.\"\n\n\"Well flexible is good.\"\n\n\"Yeah just in case I ever want to become a human pretzel.\"\n\n\"Now that's something I'd like to see,\" Greg laughed.\n\n\"Maybe you should,\" Emma replied with a gleam in her eye.\n\n\"Be my guest,\" Greg joked, indicating the space behind them.\n\n\"Oh no, there's no way I'd ever do it in public!\"\n\n\"So... you're offering me a private show then?\" Greg teased, holding Emma's gaze, the firelight flickering and reflecting off her brown eyes.\n\n\"Maybe I am...\"\n\n\"Hmmm, that could be... fun,\" Greg laughed.\n\nEmma turned and said something to her friend Mandy that Greg didn't catch. Then she stood up and offered him her hand. \"Come with me,\" she said quietly with a smile on her face. Greg took her hand and let her lead him through the party. They threaded their way through the crowd, then inside and upstairs. Greg glanced around to see if anyone was taking note of their passage, and although people turned as they passed, no one seemed to pay particular attention.\n\nEmma led him confidently into an upstairs bedroom that clearly belonged to a teenage girl. \"I can't believe I'm doing this,\" Emma said, blushing, her dark shoulder-length hair falling about her face as she looked at the floor.\n\n\"You don't have to,\" Greg suggested.\n\n\"I want to, though,\" she replied, \"I hardly ever show off, and I need to do more of it.\" She pulled her pullover off over her head and revealed a simple tight white t-shirt beneath. It was clear she was wearing a bra, though even with that, she didn't have large breasts. Greg sat on the edge of the single bed and watched, surprised at how slender she was. She kicked her shoes off and slipped her baggy jeans down to reveal a pair of black cotton panties. Greg gave her an appreciative and what he hoped was a reassuring smile, as she started working her way through a number of yoga poses, each one stretching her a little more.\n\n\"That's pretty impressive,\" Greg suggested when she moved from yoga poses into the splits.\n\n\"Oh, I can do even better,\" she said with a grin. She lay on her back, and with one leg flat on the floor, pulled the other one vertical, and then down toward her chest without bending her knee. Greg licked his lips as he eyed her crotch, wondering what her pussy would look like stretched out like it was. Emma managed to get her leg next to her head. She then moved again, bending her knee and tucking her ankle behind her shoulder.\n\n\"Holy shit, that looks painful,\" Greg said in wonder.\n\n\"Not at all,\" Emma laughed. Then she took her other leg and tucked its ankle behind her other shoulder, her elbows holding her legs in place practically behind her on the floor.\n\n\"That's fucking amazing.\" He struggled to lift his eyes from her panty-clad crotch.\n\n\"I heard a rumour that you have a pretty amazing talent beyond football and catching and hitting things,\" she said looking up at where he sat on the bed. One hand drifted down to her crotch and her fingertips ran directly over the tight fabric.",
        "\"Is that right?\" he asked, pleased at the turn of events. He'd formed a suspicion of what motive she might have for this private performance that had apparently come from nowhere, but he hadn't been willing to bank on it.\n\n\"Yeah, I heard you had some sort of magic tongue?\"\n\n\"Is that why you decided to pretzel yourself?\"\n\n\"Pretty much. Do you want to see what this looks like when I'm naked?\"\n\n\"Um, I'm pretty sure I wouldn't be human if I refused an offer like that,\" Greg laughed.\n\nEmma moved her arms and released her legs, then stood up from the floor. She pulled her top off and removed a padded white t-shirt bra. Her breasts were tiny, with eraser-like nipples, but she didn't pause for Greg to admire her. She bent and removed her panties, revealing a pussy completely bare of hair. Naked, she stood nervously for a moment while Greg surveyed her narrow hips and tiny waist along with everything else on display.\n\n\"Damn you're sexy,\" he complimented her.\n\n\"Thanks,\" she replied. \"I hope I'm not too small,\" she added, her hands going to her breasts self-consciously.\n\n\"No such thing,\" Greg replied. He was rewarded with a grin, and Emma returned to the bed and pulled her legs back into the same position they'd been in before, presenting him with the most incredible view of her pussy and asshole he could possibly have asked for. \"That is amazing,\" he said in admiration and moved to kneel on the floor where he could get in really close to her. He ran his fingers gently over her pussy, taking some time to admire it before he dove in. He traced his fingers over the soft skin of her labia, and teased the labia minora that peeked from between them, spreading them out over the labia majora, the pink interior of her pussy glistening in the dim light of the room.\n\nHe glanced up to find Emma watching and smiling, then ran his tongue up the slit of her pussy, flicked it delicately around the nub of her clit and then back down again. Emma gave a sigh of pure pleasure.\n\nGreg plunged his tongue into the delicious depths of her pussy and swirled it around. He sucked on her pussy lips and slid his tongue down to the bottom of her slit then lower, fluttering the tip against her anus, drawing a small squeal of shocked delight from Emma. He teased the tight little puckered hole and then returned to her pussy, focussing on her clit. He wanted her to cum quickly because he didn't want the first orgasm to be her only orgasm. He worked her clitoris this way and that, flicking it with his tongue before swirling it around and then lapping at it. As Lily had taught him, he again listened for the cues that told him when he was getting things just right for her.\n\nWithin a few minutes he had her shuddering on the bed and she released her legs from under her elbows, wrapping them around his neck instead, holding his face against her orgasmic pussy. He gave her little relief, continuing to lick her, gently caressing her clit, his tongue swirling around and around without applying too much pressure. Emma was mewling pleasurably under his attentions. When he sensed she was ready, he renewed his attentions, applying more pressure, keeping contact with the little swollen nub.\n\n\"Oh fuck, I'm cumming again,\" Emma moaned, and her thighs clamped to the side of Greg's head as she shook her way through a second orgasm. When her thighs relaxed, he lapped at her pussy, tasting the juices and enjoying the fruits of his labour.\n\n\"You're still going?\" Emma gasped when she realised he wasn't about to stop.\n\n\"As long as you still want me to,\" he replied briefly.\n\n\"Oh God yes,\" Emma hissed. \"At least, I think I want you to, I'm pretty fucking sensitive right now.\"\n\n\"I'll go easy on you for a while,\" Greg assured her, returning his tongue to her lips and down to her asshole again, her juices having slicked it up.\n\n\"I need dick Greg,\" she urged him when he'd given her a third orgasm. \"Please fuck me.\"\n\n\"Maybe,\" he grinned.\n\n\"Maybe? You can't say maybe, just fuck me already, please!\"\n\n\"Well, when you beg like that,\" he laughed. He stood up, ignoring the protests of his knees. He stripped his pants down, his cock springing free.\n\n\"I um, hope it's not too small,\" he said, suddenly self-conscious.\n\n\"No such thing,\" she replied with a generous smile. She repositioned herself on the bed and spread her legs welcomingly as Greg moved between them. He paused to suck on her nipples, enjoying their stiffness in his mouth, grazing them with his teeth, pulling on them with his lips and flicking them with his tongue. He moved back and forth between them, feasting.\n\n\"Give me your cock, Greg,\" Emma begged, pulling his face from her breast. He reached down between his legs and held his cock as the head pressed against the wet warmth of her pussy. He pushed inside, groaning as he slid inside her tight tunnel.\n\n\"God, that feels good,\" Emma purred in his ear as he began sliding in and out. He was horny as fuck from having brought her to orgasm, and he wasn't going to last long. He let Emma know.\n\n\"I don't care! God, just fill my pussy with cum,\" she urged him.\n\n\"Really?\"\n\n\"Yeah, I'm on the pill, pump me full, Greg!\" He pushed himself up on his hands and fucked her hard and fast and shortly after, exploded inside her.\n\n\"Wow, that was so good,\" Emma purred as he collapsed on top of her, breathing hard.\n\n\"You're not done yet,\" he whispered. He slid down the bed, kissing his way down her body. Emma barely moved and Greg surmised she was probably unsure of what was happening. He gently pushed her legs further apart and set to licking her pussy again, the taste of his cum mingled with hers.\n\n\"Oh fuck!\" Emma exclaimed. Her hands tangled in his hair and he once again pleasured her through an orgasm with his tongue.\n\n\"Now you're done,\" he laughed as she lay in a post-orgasmic near coma.\n\n\"That was fucking incredible,\" she sighed eventually.\n\n\"Glad you enjoyed it,' he laughed. They composed themselves and returned to the party. Greg wasn't quite sure what Emma's expectations would be following their dalliance. Did she want to date, or would it be more like it had been with Selena?\"\n\nThey went and obtained drinks together, and then he followed her back outside to where they'd first seen each other, reuniting with her friends. He sat with her and she turned to him.\n\n\"It's okay you know; you don't have to stay here if you don't want to. I mean, I'm not sure what I expected, probably just to have you laugh me off, I guess.\"\n\n\"Well, I should probably catch up with my friends too, but you know, if you want to catch up another time, I'd be more than happy to.\"\n\n\"Thanks, Greg. Go see your mates and celebrate the win. Maybe I'll give you a call?\"\n\n\"I'd like that,\" he replied with a smile before setting off to find out where his mates had gone. He saw Emma turn and begin whispering furiously to her friend.\n\n\"Where have you been?\" he was asked when he re-joined his friends.\n\n\"I heard a rumour he's been upstairs with Emma Whelan,\" Jake told the group with a grin.\n\n\"Wait, that skinny chick with no tits?\" Andy asked in shock. \"What is with you and society's outcasts, dude?\"\n\n\"Shut up Andy,\" Greg responded.\n\n\"Hey, I'm just trying to understand why you'd be going there, man. I mean shit, you can have your pick of hot chicks.\"\n\n\"Whatever, Andy; we can't all be superficial.\"\n\nJake stepped in between them and distracted them, settling things down. Greg ignored Andy and set about enjoying the rest of the night.\n\nOver the course of the rest of the evening, he noticed a number of girls smiling at him or whispering to friends after they'd seen him, and he couldn't help but think that his sister's plan may have had more merit than he'd given her credit for. Just thinking of it reminded him he'd fucked her. He shook his head at the memory, just as he felt someone pinch his ass.\n\nHe turned to see who it was, surprised when Jessica Smalt was the one smiling at him. She was on the cheer team with his sister, and while not quite part of Lizzie and Chloe's clique, she was considered part of the popular group, and oh yes... hadn't spoken to him since Lizzie had spread word of his Ikea pencil.\n\n\"Jessica!\" he said in surprise. She made no move to hide the fact that she'd been the one to pinch his butt.\n\n\"Hey there Greg, been awhile,\" she said, drinking from a red plastic cup. He glanced down and couldn't help but notice the cleavage she had on display. Her black top was tight and low-necked, and given how much shorter she was, he was practically staring straight down the front of it. She stepped in close to him as someone moved through the room behind her, and he felt her breast push against his side.\n\n\"It has, what have you been up to?\" he asked the blonde girl.\n\n\"Oh you know, just school and partying and stuff. I've been hearing some stories about what you've been up to, though.\"\n\n\"What, winning football games and shit?\" he asked with a laugh.\n\n\"Oh no, much more interesting stories than that.\"\n\n\"Maybe I don't want to know, then.\"\n\n\"I want to though, can we go somewhere you know, quiet?\" Jessica asked him.\n\n\"Not right now, but maybe we could catch up tomorrow?\"\n\n\"I don't want to wait,\" Jessica pouted. She stumbled as someone bumped into her and caught herself on him, tits crushed against his body. She'd clearly had more than enough to drink.\n\n\"Well, we can go and just talk for now,\" he suggested.\n\n\"Perfect,\" Jessica grinned and dragged him away from his laughing friends.\n\n\"See, told you,\" Andy called out as Greg departed.\n\nJessica pulled him along behind her, and Greg couldn't help but enjoy the sight of her tight little butt as it wiggled along in a skin-tight, extremely short red skirt. The view as she took him upstairs was particularly enjoyable. He suspected if he'd been a couple of steps lower, he'd have managed to see what she was wearing underneath it. He was pulled into a bedroom, and Jessica closed the door behind him.\n\n\"Um, we don't need the door closed to talk,\" Greg suggested.\n\n\"Well from what I hear, talking is the least of your tongue's talents, and I for one want to find out if you live up to the rumours I've been hearing.\"\n\n\"Well, as much as I'd be happy to oblige you, you've been drinking Jessica, and I think you'd be better off waiting until you're sober.\"\n\n\"What? Why?\" she asked, clearly confused.\n\n\"Because it would be better for you that way,\" Greg said.\n\n\"But I'm horny now, Greg,\" she moaned, a hand going to her right breast and squeezing it. Greg watched the way her fingers dimpled the visible skin of her boob and had to fight hard not to cave in and give her what she wanted. She was asking for it, after all.\n\n\"No, not tonight Jessica, call me tomorrow.\"\n\n\"You're saying no to these?\" she asked, pulling her top down. Her large breasts spilled free, drawing his eyes to her erect nipples.\n\n\"I'm not saying no, I'm saying later,\" he corrected her. She tried for a couple more minutes to convince him, even going so far as to offer him a blow job, but he stayed firm. He wanted to be sure Jessica's desire wasn't alcohol fuelled, and he was prepared to forego this opportunity to be sure. He swapped phone numbers with her, and they returned to the party.\n\n\"So little bro, you ready to head home?\" his sister asked him later that night. She was swaying slightly on her feet and had clearly been having a good time.\n\n\"Absolutely,\" Greg replied, offering his arm for her to slip through so that he could guide her out to the car.\n\n\"So I heard you got up to some fun tonight,\" Lily opened with as they drove home.\n\n\"Shit, really?\" Greg asked, surprised. \"What did you hear?\"\n\n\"Something about turning Emma Whelan into an orgasmic pretzel?\"\n\n\"There could be some truth to that,\" Greg laughed.\n\n\"How do you turn someone into an orgasmic pretzel?\"\n\n\"Well I'm only responsible for the orgasmic part, the pretzel was all her own doing. That girl is all kinds of flexible.\"\n\n\"Glad to hear that you're putting your talents to use.\"\n\n\"I actually could have done it twice tonight if I'd wanted to. Jessica Smalt was pretty keen to find out whether the recent rumours were true, but I told her I wouldn't do anything for her until she was sober.\"\n\n\"Jessica hit on you?\"\n\n\"Yeah.\"\n\n\"Shit, so my plan might actually be working then? Like once you turn her all orgasmic, it's guaranteed she'll blab to the rest of the team. She's not the sort to try and pin you as a boyfriend, either. She's way too slutty for that.\"\n\n\"Yeah, well I have wondered how all this is going to affect my broader reputation. Like it's all well and good to have this amazing talent, and I have you to thank for that, but like, it's like I'm just being used for it. What if I want an actual girlfriend, and all she hears about is how many girls I've gone down on?\"\n\n\"Worry about it when it happens, I say,\" Lily replied. \"Get those bitches Lizzie and Chloe back and then worry about the longer term.\"\n\n\"But you know, now that this is all happening, I don't really find myself worried about what those cows think. I mean, Emma was quite happy to have my cock, and there was zero judgement on my size. Maybe it's like you said about not aiming for the popular girls. Maybe I just needed to focus more on personality.\"\n\n\"Nuh uh, see it through, Greg. They need to be taken down a peg.\"\n\n\"But is denying them something as simple as an orgasm really going to do that?\"\n\n\"It's not the orgasm that will get in their heads Greg, it's the fact that you've been prepared to do it for girls that they consider totally beneath them and that they don't get to experience it. That's what will get to them, the fact that you don't think they're worth your time, when all their lives everyone has gone out of their way to try and be them or to make them happy.\"\n\n\"Right, well okay then, I'll be sure to bring to orgasm as many of the other girls on the cheer team as I can, then.\"\n\n\"That's my little brother! The ultimate cunning linguist!\"\n\nLily leant on her brother as they made their way inside, and he helped her up the stairs. He didn't think she really needed it, because she wasn't that drunk, but she seemed to want to hang onto him, so he let her. They stopped outside Greg's room and he made to free himself.\n\n\"Walk me to my room, Greg?\" she asked. Her breast was pressed against him and the look on her face suggested that it wasn't really about the walk to her room.\n\n\"I will, but you need to get some sleep, Lil's. I do too,\" he told her as they walked to her bedroom.\n\n\"But I want you to come and tuck me in,\" she insisted, tugging on his arm as she went in. Greg succumbed, intending to slip out when she climbed into bed. Lily stood and faced him and started taking her clothes off, shedding them quickly. Greg had no intention of doing anything, but he couldn't resist the sight of his sister removing her clothes. She was quickly naked, and laid back on her bed. She spread her legs and ran her fingers between them, teasing her pussy.\n\n\"Eat me Greg, eat me like you ate Emma.\"\n\n\"Not tonight, Lily,\" Greg said quietly.\n\n\"Oh, come on, you're only getting all this action because I taught you. Can't you give me just one orgasm? Please? I'll suck you off, or you can fuck me... anything. Please Greg?\"\n\nHe lost all his willpower, unable to resist his naked sister begging him for an orgasm. He went quickly to her bed and feasted on her pussy while she whispered her adoration of his talents. With the fingers of one hand parting her lips and his tongue buried within her, he reached with his other hand to seize her generous breast, squeezing and playing.\n\nHe felt his sister's hand on his, guiding him, helping him to play with her tit. He jammed his tongue against her clit and rubbed it back and forth until she was thrashing on her bed in orgasm.\n\n\"You're the best, Greg,\" she purred once she'd recovered.\n\n\"Ha, you're probably like the only sister ever who's said that to her brother because he stuck his tongue in her pussy,\" he laughed.\n\n\"Well, if it helps, I'm also about to take your perfectly formed cock into my mouth and suck the cum from it,\" she replied, sitting up on the edge of her bed. Greg let her strip his pants to his ankles, and then she followed through on exactly what she'd said she'd do, taking him into her mouth. Greg watched his sister's lips sliding up and down his cock. He thrust at her, and she let him slide his entire cock in until it barely nudged the back of her throat. He felt her tongue somehow flutter against his scrotum while she held him inside and groaned.\n\nPulling back, Lily suggested, \"You know, I could almost get your balls and your cock in my mouth all at once! Nearly, but not really,\" she giggled. She tried to do it too, taking his cock in her mouth and then trying to get a testicle in as well. She failed, but only just. She settled for releasing his cock and sucking both balls into her mouth for a few moments before releasing them and returning her focus to his manhood.\n\n\"I want to cum on your face and tits,\" Greg moaned when he felt close to exploding, remembering her offer of anything.\n\n\"Go for it,\" Lily replied. She sucked him fervently until he pulled back and stroked himself a few times. He came with an explosive blast despite the load he'd pumped into Emma earlier that night. Lily closed her eyes as he aimed it at her face, cum splattering against her forehead, nose and cheek before he sent the rest arcing through the air to rain down on her right breast.\n\n\"So dirty,\" Lily moaned when he was finished. Greg grabbed her tissue-box from her desk and passed it to her so she could clean up.\n\n\"Night, Lily,\" he bade her as he left her room.\n\n\"Night Greg, and thanks,\" she said with a smile. He returned to his room, shaking his head in disbelief. It didn't seem to matter how often something happened; he still couldn't believe what he was doing with his sister.\n\n<p align=\"center\">--- +++ ---</p>\n\nGreg spent Sunday morning helping his father around the house, mowing and edging lawns and doing whatever else was required. His mother brought sandwiches and iced water out to them, and the three of them sat on the back deck to enjoy them.\n\n\"Any sign of Lily?\" his father asked.\n\n\"Not yet,\" his mother answered.\n\n\"She had a pretty good night, I wouldn't be surprised if we don't see her until later,\" Greg laughed. \"Not that she went crazy or anything, she was sober enough when we came home,\" he assured his mother at the look of concern that crossed her face.\n\nHis phone beeped to indicate an incoming message, and he checked it to see a text from Jessica inviting him over for a swim.\n\n\"Did you need me this afternoon Dad?\" he checked.\n\n\"Not if you've got other things to be doing. Thanks for all your help this morning.\"\n\nHe finished his sandwich and went inside to clean up. He changed into board shorts and a t-shirt, grabbed the car keys and headed to Jessica's.\n\nShe met him at the door wearing a tiny pair of cut off denim shorts and a white bikini top that looked at least one size too small, struggling to contain her.\n\n\"Hey Greg! I'm so glad you could come over.\"\n\n\"Thanks Jessica, I've gotta say, given the weather, the invitation for a swim couldn't have been timed better, given I've been in the yard with my Dad all morning.\"\n\n\"Well let's get out to the pool then,\" she said with a grin, grabbing his hand and pulling him inside. \"We've got the place to ourselves, \" she explained as she led him through to the backyard. \"My folks are out wine tasting all day with friends, and my older sister isn't home either. And that means,\" she added as they went out into the yard, \"that I have no need for a bikini top.\"\n\nGreg nearly tripped over as Jessica pulled at the tie of her bikini and then discarded it on the outdoor dining table, her tits swinging free in the afternoon sun. She turned back to face Greg, grinning and he took the moment to admire the delightful perfection that was her breasts. He was surprised to see how pale they were compared to the rest of her well-tanned body. Perfectly defined tan lines traversed the smooth skin of her boobs. They weren't as big as his sister's, probably a cup size smaller, but they were amazing nonetheless. The tan lines made it clear being topless in the yard wasn't an everyday occurrence for her.",
        "\"Come on, let's get wet,\" she said, bending to undo the button of her shorts. She pushed them down her legs, stepped out of them and turned and ran for the pool in the white thong that completed the bikini set. He'd barely processed the sight of her taut little butt and the bikini tan line that told him she didn't usually wear a thong in the sun when she jumped into the pool.\n\nGreg pulled off his t-shirt and ran to follow her, jumping into the water behind Jessica.\n\nThe two teenagers swam around for a bit before taking up seats on the stairs leading out of the pool. Jessica leaned back on her elbows, her breasts setting slightly to either side with a delightful wobble of flesh.\n\n\"So... were you surprised to get my message?\" Jessica asked him.\n\n\"A little, you seemed pretty well into it last night. I wasn't sure if you'd remember, or perhaps even just change your mind.\"\n\n\"Well I definitely didn't forget. I was pretty frustrated to be honest, but then I thought about what you did, and was impressed. I mean, not many guys would say no just because a girl had been drinking. I'm pretty sure most of them would have jumped at the chance.\"\n\n\"I'm trying not to be most guys,\" Greg said, almost surprised to realise that he meant it.\n\n\"Well I'm kind of counting on that, because the rumours I've heard seem to indicate you perform way better in some ways than any other guy I've heard of. And like I was really keen to see if it was true or not.\"\n\n\"I seem to have been getting a fair bit of that lately,\" Greg said.\n\n\"Well maybe you'd like to get a fair bit of this then?\" Jessica suggested, cupping her breasts in offering toward him.\n\n\"Well you obviously haven't been drinking today, so I can't think of a solitary good reason not to!\" He slipped down from the step so that he was kneeling on the bottom of the pool's shallow end. Jessica parted her knees and sat up. Greg moved in close, his hands reaching for her tits, fondling and caressing them as he leaned in to kiss her.\n\nJessica welcomed his tongue into her mouth, greeting it with her own. Her hands rested on his shoulders, her long blonde hair behind her in a tight, wet ponytail.\n\n\"Mm, that does seem to be something of a skilled tongue you have; you kiss really, really well,\" Jessica commented when they stopped kissing, both breathing heavily.\n\n\"Thanks, your lips are delightfully soft.\"\n\n'They're not the ones I really want kissed though; you know?\" Jessica stated mischievously.\n\n\"Is that a fact?\n\n\"Yep, it certainly is.\"\n\n\"Not really going for subtle there are you?\" Greg teased, sliding a hand down from her breast, down her side and onto her thigh.\n\n\"Well maybe it's the boys I usually date, but in my experience, subtlety tends to get misread a lot of the time.\" Greg stared into her brown eyes and smiled as his fingers danced from her thigh to her pussy, rubbing it gently through the wet fabric of her bikini. \"Glad I don't have to be any less subtle,\" Jessica commented, thrusting gently against the pressure of his fingers.\n\nGreg stood and offered Jessica his hand. She took it and he led her to the side of the pool, where he turned her to face him so he could kiss her again. He pressed his bare chest against hers, delighting in the feel of her rock-hard nipples stabbing into his flesh, his thigh slipping between her parted legs to pressure her pussy. He felt her grinding down on it, and when she moaned into his mouth, he took her by the waist and lifted her onto the side of the pool.\n\nHe grabbed hold of her thong and pulled it down her legs. Jessica parted her legs to reveal a dark landing strip and closely cropped hair on her labia. Greg was starting to appreciate the differences between the different girls' genitalia he was being exposed to, enjoying their subtle differences and the variety of ways they all reacted to his attentions.\n\nHe took his time learning about Jessica, knowing they had all afternoon to have fun. More than any of the other girls he'd been with over the weeks before, Jessica was the one who would give the most direct information to Lizzie and Chloe. He had every intention that by the time he was done with her, Jessica would be struggling to stand.\n\nHe set about pleasuring her slowly, using both his mouth and his fingers. He explored and probed and licked until Jessica had her first orgasm while sitting on the side of the pool leaning back with her hands behind her.\n\n\"That tongue is awesome,\" she complimented him.\n\n\"Oh, we're just starting,\" he promised her.\n\n\"I'm really glad you said that, but like, my tits are going to burn to cinders if we stay out in the sun much longer, can we like, relocate?\"\n\n\"Of course,\" Greg laughed, noting that her pale breasts were indeed a bit pink from their exposure. \"Now that you mention it, it looks like you might need some moisturiser on those pretty things.\"\n\n\"Offering to apply it for me?\"\n\n\"I'd love to.\"\n\nJessica led him inside and to her bedroom, where she handed him a tube of after-sun moisturiser. They moved to the bed and Greg sat astride her hips, his butt resting back on her pussy mound. The feel of her breasts sliding through his moisturised fingers was intoxicating. His already stiff cock hardened further as he rubbed the cream into them.\n\n\"You know the only problem with this, is that sucking on these beautifully puffy nipples is kind of out of the question,\" Greg lamented as his fingers teased them.\n\n\"On the upside, you can still eat my pussy,\" she moaned.\n\n\"Yes, there is always that,\" he smiled and moved down the bed to position himself ready to do exactly that.\n\nThree orgasms later, Jessica was pushing him away from her pussy, unable to take any more. Her face was flushed, her pussy swollen with her pleasure and her hair in disarray.\n\n\"Fucking hell Greg, how did I not know about these skills before?\"\n\n\"Well it's not like I advertise them,\" he laughed. \"Like, I don't know why it suddenly became a rumour and stuff, it's like gone stupid viral or something.\"\n\n\"You should advertise; I don't know any girl that wouldn't want to experience it. Hell, most guys give up after like an unsatisfying minute. The one they use just to get you wet enough to plunge their cocks inside you.\" Greg blushed at the compliment.\n\n\"Well, if you can still take more, I'm up for it,\" Greg suggested.\n\n\"Are you kidding? You haven't even taken your pants off yet.\"\n\n\"When the time's right I will,\" he suggested.\n\n\"Well I can't take it right now; how about we cool off in the pool again?\"\n\n\"Sure thing,\" Greg agreed.\n\nThey headed downstairs, Jessica pausing only to put on the bikini she'd discarded outside to provide some measure of protection from the sun. Greg delighted in putting sunscreen on the substantial expanse of skin the brief suit didn't cover, especially her ass cheeks. Jessica returned the favour, taking her time to rub sunscreen into his muscular back and chest.\n\n\"Damn, you have a hot body Greg,\" she commented while doing so.\n\n\"You're no slouch yourself, you know.\"\n\n\"Glad to know all the hours in the gym pay off,\" she replied.\n\n\"That's for sure.\"\n\nThey swam together for a good twenty minutes, after which Jessica started to get handsy again.\n\n\"Someone feeling a bit restored?\" he asked with a gleam in his eye.\n\n\"I reckon I might be,\" Jessica suggested.\n\n\"Well why don't we get you naked again and find out?\"\n\n\"Only if you're naked too this time,\" Jessica told him.\n\n\"I think that can be managed,\" he replied. \"Is there somewhere you'd like to have this next orgasm?\"\n\n\"I hadn't given it any thought,\" Jessica admitted.\n\n\"How about the shaded table on the deck?\" Greg suggested.\n\n\"I do like the idea of doing it outside,\" Jessica agreed. They climbed from the pool together and laid out a towel on the table, Greg rolling a second one to prop under her head. He pulled a seat closer and with Jessica's butt at the edge of the table, slipped his tongue between her legs again.\n\nHe managed to give her two orgasms before she declared she was too sensitive to continue again.\n\n\"Dick, I need dick,\" she panted when he suggested she try for one more. Greg stood up, the table at the perfect height for him to stand and slide himself within her.\n\n\"Oh God, it's amazing how big it feels when I've cum so many times,\" Jessica groaned.\n\n\"It feels so fucking good Jess,\" Greg groaned. He moved slowly, sliding himself in and out, hands roaming over Jess's body while occasionally bending over far enough forward to kiss her. They fucked together until Greg couldn't take anymore.\n\n\"I'm going to cum, Jess,\" he warned her.\n\n\"I'm on the pill, cum inside me, Greg,\" she told him. He pumped her pussy full of cum, holding himself as deep as he could inside her while he did so.\n\n\"Time for one more, Jessica,\" Greg said with a grin, sitting back on the seat and running his tongue up the side of her pussy.\n\n\"Are you serious?\" she gasped. \"I'm not sure I can take it.\"\n\n\"I'll be gentle,\" he promised her and set about licking her again. Jessica's only response was a series of pleasured whimpers and moans. Greg worked his magic and delivered exactly what he'd promised, one final orgasm for Jessica.\n\n\"No more,\" she declared when she'd recovered sufficiently to speak again. \"I never thought I'd ever be saying it, but I can't cum again, Greg.\n\n\"Glad to have been of service,\" he replied with a laugh, standing and bowing. Jessica's eyes went to his erect cock.\n\n\"Wait. You've given me so many orgasms and you've only had one. I think it's my turn to see if I can get you off again.\"\n\n\"Be my guest,\" Greg replied with a grin. They swapped places, and Jessica started sucking his cock while he sat on the edge of the table. She brought him almost to the brink of orgasm before backing off, stroking gently, teasing him without finishing him off. When he was rock hard and pre-cum was leaking freely from the head of his cock, she suggested something completely different.\n\n\"You know, your cock would be the perfect size to stick in my ass,\" she suggested. \"Think you could do that for me?\"\n\n\"You want me to fuck you up the ass?\"\n\n\"Hell yes,\" Jessica insisted.\n\n\"I'm game if you are,\" he replied. Jessica had him stand up and she bent over the table in his stead, presenting her pussy and ass back to him.\n\n\"Get nice and wet,\" she said. He pushed himself into her pussy and dribbled saliva down over her anus, using his thumb to probe her butthole and start opening it up.\n\n\"Fuck my ass, Greg,\" Jessica moaned. He pulled his cock from her pussy and pressed the head against her little chocolate starfish. He eased the head inside, Jessica groaning in pleasure as he pushed it in. He slowly worked his cock deeper into her ass with gentle forward and backward movements, each push edging him further inside, Jessica urging him deeper each time.\n\n\"So tight,\" Greg moaned as his cock slid into her anus. He started sliding back and forth, fucking her ass just like he had her pussy. He could feel Jessica pushing back against his thrusts, clearly enjoying herself.\n\n\"Give me another load Greg, shoot it in my bum,\" Jessica demanded. Greg thrust in and out of her ass, grabbing hold of her to leverage himself. It didn't take long for him to reach the point of no return, and he shot his load as deep up her bum as he could.\n\nJessica took him inside and they showered together, taking turns washing each other and admiring each other's bodies as they did, before finally drying off. Jessica's sister came home just as Greg was leaving.\n\n\"See you around school,\" Jessica said by way of farewell, leaning in through his car window to give him a quick kiss.\n\n\"Yeah, see you there.\"\n\n<p align=\"center\">--- +++ ---</p>\n\nAfter dinner that night, Lily sought him out in his room and peppered him with questions. Their parents had told her where he'd gone and knowing Jessica's reputation, she knew Greg would have been invited over for a very specific reason.\n\n\"Geez Lily, do I have to give you a rundown every time I'm with a girl?\"\n\n\"Well I guess not, but it's hot when you do,\" Lily replied. \"I just like hearing how my young prot\u00e9g\u00e9 is faring. Would it help if I offered to suck your cock while you told me?\"\n\n\"Maybe, I mean, it's not like I really need to cum again.\"\n\n\"Okay, well now you have to tell me,\" Lily insisted, dragging him to her room.\n\nShe closed her door behind them and immediately started attacking Greg's pants.\n\n\"You know it's not normal for a guy's sister to be so into getting his pants off like this, don't you?\"\n\n\"No more unusual than sucking his cock,\" Lily laughed before pushing him back onto her bed and kneeling before him. She told him to tell him everything that had happened as she took him in her mouth and started sucking. She edged him, getting him close to the point of orgasm each time he told her either he or Jessica had cum, then she'd back off, edging him. When he reached the point where Jessica asked him to fuck her up the bum, Lily took all of him in her mouth, pressing her face tight against him.\n\n\"I can't believe I didn't think of that,\" she moaned when she released him. \"You have to do it to me.\"\n\n\"What? Do what to you?\" he asked, caught out.\n\n\"Fuck me in the bum,\" Lily replied.\n\n\"Why?\"\n\n\"Because you have the perfect sized cock for it. Not so big it'll make me walk funny, but big enough to really enjoy it.\"\n\n\"Shouldn't you find someone other than your brother though?\"\n\n\"Hell no, you won't tell anyone that I took it up the ass, and you're here practically whenever I want! Please fuck my bottom Greg? I'll get it ready for you, watch.\" Lily stood up from the floor and crossed the room to her desk. She picked up a sharpie and then grabbed some lubricant from the drawer beside her bed. She headed back to the bed and knelt on it, facing away from her brother. As he watched, she lubricated the sharpie and then slid it in her butt.\n\n\"That's not the first time you've done that, is it?\" he asked when he saw just how readily she'd slipped it in.\n\n\"Not at all,\" Lily replied as she started sliding the sharpie in and out, speeding up the pace as she went.\n\n\"That's so hot,\" Greg commented as he watched her fucking her bum with the marker.\n\n\"Not as hot as your cock would be. Please put it in, Greg. I really want it inside me.\"\n\nGreg couldn't resist. He knelt behind her and pushed his cock against her anus, using his hand to keep the head centred. He felt her starfish open up around the head of his cock, and he pushed inside as Lily pushed back against him. With the lubricant Lily had already worked into her ass easing the way, he was quickly sliding his cock in and out of her tight back passage. With Lily encouraging him, he started fucking her enthusiastically.\n\n\"Make sure you cum in me Greg,\" she urged him when his breathing was becoming ragged and it was clear he was close to losing control. That was enough to send him over the edge, and he thrust deep in her bum and exploded. \"God that was good,\" his sister purred as she slipped forward off his cock. \"Eat me out? Make me cum please?\"\n\nGreg figured it was probably only fair, and so as soon as his sister had rolled over, he plunged his tongue into her pussy. He worked her over until she came, then left her to sleep and returned to his own room, completely exhausted.\n\n<p align=\"center\">--- +++ ---</p>\n\nOver the next month, Greg progressively treated almost all the popular girls on the cheer squad to at least one session with his now famous magic tongue, or his cunning linguistics as his sister liked to say. And sure enough, by the time that month was over, Lizzie and Chloe were well and truly paying attention to what was going on.\n\nIt was at a party that it finally happened. Chloe was the one to approach him, being all nice and friendly like she'd never had anything to do with spreading nasty rumours about his cock size. Greg led her on, letting her believe that he was thrilled that she was talking to him, but playing dumb about what she wanted from him. He wanted her to have to spell it out. She didn't quite get there, only going so far as suggesting that they get together to mess around and have some fun one weekend. He didn't call her, and he didn't respond to her calls to him.\n\nLizzie tried next, coming up to him after football practice with her tits practically hanging out of her top. She was all over him and even less subtle than Chloe had been.\n\n\"Come on Greg, how about we go somewhere quiet and you can eat out my tight little pussy? I've shaved it just for you. I heard you like a nice hairless pussy.\"\n\n\"You know what Lizzie? Given how many guys I know have been in that pussy, I'm confident it's neither tight, nor somewhere I'd like to put my tongue,\" he replied. He nearly laughed out loud at the look on her face.\n\n\"You're an asshole, Greg,\" she accused him. \"I'll make your life hell.\"\n\n\"You already did that you bitch, but I'll think you'll find there are enough people that support my reputation now that you won't be able to damage it. On the other hand if I were to tell people I'd found a rash on your pussy, so I couldn't face eating you out, I'm pretty sure they'd believe me.\"\n\n\"Fuck you, Greg!\" she exploded and stormed off. He grinned at her receding back. He couldn't wait to get home and tell Lily. When he did arrive home she wasn't there, and he had to wait until the following day.\n\n<p align=\"center\">--- +++ ---</p>\n\n\"So I didn't get to tell you last night, I think we managed to accomplish our mission,\" he said to her as they drove to school.\n\n\"Wait, What?\" Lily asked.\n\n\"So yesterday Lizzie came to me and made it patently clear she wanted to sample my expertise. I told her no, and she threatened a repeat of her rumour-mongering about the size of my cock\"\n\n\"What did you do?\"\n\n\"I told her that she could try her hardest, but I was certain that my reputation with enough of the girls in our year was solid. I suggested that I tell them that she'd asked me to go down on her, and that I'd found that she had some hideous rash between her legs.\"\n\n\"Oh my God, that is fantastic,\" Lily laughed.\n\n\"She was pretty pissed. She told me to fuck off and stormed away. \"\n\n\"What about Chloe?\"\n\n\"Well she came to me as well, but I wasn't quite as mean with her. I just left her thinking there might still be a chance I'd do it for her.\"\n\n\"Would you?\"\n\n\"What, go down on her?\"\n\n'Yeah. I mean, if you thought it would shit Lizzie even more, would you do it for Chloe?\"\n\n\"I dunno, she was just as bad as Lizzie really, so even if it was just to piss Lizzie off, I don't think I'd want to reward her. I mean she gets plenty from the other guys in our year, anyway.\"\n\n\"That makes sense I guess,\" Lily replied. \"Well, it's good to know you managed to piss Lizzie off at least, even if spreading a rumour about a rash would have been true revenge.\"\n\n\"Yeah, but it would be stooping to her level too, and she'd only have to show like one guy to dispel it. I still can't change the size of my, cock, so well, let's just leave things as they stand, yeah?\"\n\n\"Sure, if that's what you want,\" Lily replied.\n\n\"I think it's best.\"\n\nThey arrived at school and went their separate ways to their classes. Greg enjoyed the number of girls that greeted him as he walked through the corridors. There were some he'd been with and more than a few he hadn't. A lot of them wouldn't have said hi to him a week prior, even though he was on the football team. There just seemed to be something about his new reputation that they thought made him more approachable. He couldn't help but think that it was likely in part to the fact that he was actually willing to engage in conversation with girls that he wouldn't have bothered speaking to previously.\n\n\"Dude, what is it with this popularity? I mean first there were the nerdy girls, then Emma, and like all I hear from girls now is something about you being... what is it they're calling him?\" Andy asked Jake.",
        "\"A Cunning Linguist?\" Jake supplied.\n\n\"Yeah, that,\" Andy said.\n\n\"Let's just say I've learned to understand how to really treat a girl right,\" Greg replied.\n\n\"Dude, you need to share your secret with us,\" Andy implored him.\n\n\"The attitude I can help you with mate, but the rest, well I couldn't teach you if I tried.\"\n\n\"Well given my track record lately, if you've got tips, I'll take 'em,\" Andy replied.\n\nThe three boys entered the class and dropped the conversation. Greg was pleased that Andy was at least open to listening to him. Maybe he could make a difference to the way his friend looked at and treated the girls at school. He wasn't convinced, but he could at least take a stab at it.\n\n<p align=\"center\">--- +++ ---</p>\n\n\"Hey Greg,\" Lily greeted him from the doorway to his room late that night.\n\n\"Hi Lily.\"\n\n\"So um, I've got a favour to ask.\"\n\n\"Yeah?\"\n\n\"Yeah, um see, I know that we um, crossed some boundaries to help you with, well, you know, but I've kinda become a little addicted to it.\"\n\n\"Addicted?\"\n\n\"You've been giving me the most amazing orgasms I've ever had in my life, Greg. I don't want to give it up. Will you still eat my pussy?' She lifted her short skirt to reveal an absence of underwear, her pussy on display for him.\n\n\"I don't know Lily, like we really shouldn't have done it at all and like, I'm obviously totally grateful, but I think we should stop.\"\n\n\"No!\" his sister protested. \"Please Greg, I really want this,\" she begged him. She dropped her skirt to the floor and stepped out of the circle of crumpled cloth. Greg swallowed at the sight of his sister's long smooth legs and her fiery little landing strip that led to the treasure of her pussy. It gave him pause. Was he really thinking about giving up the pleasure he'd been enjoying with her?\n\nShe pulled her t-shirt off and quickly released her bra, dropping it to the floor with the rest of her clothing. Her breasts looked magnificent. He stared as Lily took them in her hands and squeezed, squashing them, and then pulling on her nipples.\n\n\"Come on Greg, I know you still want to play with these,\" she teased him, her voice husky with desire. She stepped close and reached to take his hand, lifting it to her left breast, her hand covering his and squeezing. He could feel her tight nipple against his palm, and the flesh of her tit was firm and delightful.\n\nHe caved.\n\n\"Fine,\" he said. Lily grinned at him and pushed him back onto his bed. She climbed over the top of him and worked her way forward to thrust her pussy against his face, his arms trapped above his head.\n\nGreg met her pussy with his tongue, untangled his arms and reached for her breasts, enjoying the feel of them as he pleasured her. It wasn't long until Lily's juices were flowing freely from her pussy, coating his face and running over his tongue. He slurped and licked, unable not to enjoy himself, especially when Lily started whimpering, her hands holding tight to the head of his bed as she ground against him. Greg wiggled his flattened tongue as she circled her hips, and Lily came with a shudder and cry of delight.\n\n\"Fuck me?\" she asked him quietly after shifting back to sit astride his hips.\n\n\"We shouldn't,\" Greg sighed.\n\n\"But you're going to, aren't you?\" Lily said with a grin, moving further down to sit on his thighs so she could access the fastenings of his pants.\n\n\"Yes,\" he sighed as she freed his cock. He was rock hard and couldn't have refused her if he'd actually wanted to. He was too aroused to keep trying to think rationally. Lily kept moving down his body, dragging his pants free, taking his cock in her mouth once her head became level with it. Greg groaned as she swirled her tongue around him, and then moved further South so she could pull his pants free of his legs. Greg pulled his t-shirt off, and Lily started kissing her way back up his body. She took him in her mouth again, and she spent a few gloriously pleasurable minutes fellating him. Greg ran his fingers through her long red hair, dragging it up behind her head so he could watch her lips as they glided over the smooth skin of his hard shaft. When she was ready, Lily moved up over him again, dragging her nipples over his skin, along the length of his cock, over his belly, and then finally crushing her tits against his chest as she thrust her tongue into his mouth and kissed him hard.\n\nHer legs parted and she ground her pussy against his cock. He grabbed hold of her buttocks, squeezing them, using them to help position her. He groaned as he slid into her velvet warmth.\n\n\"So good, Greg,\" she moaned into his ear as she squirmed on his cock. Greg thrust at her with his hips, pushing himself into her. Lily sat up, hands on his chest, grinding down on him, and then bouncing up and down.\n\nGreg leaned up to take his sister's nipple in his mouth as she rode him, working his abs to keep it within reach. Left, then right, he sucked and licked at them until he couldn't maintain the position any longer.\n\n\"Let me do you from behind, Lily,\" he urged her, pushing her back and sitting up.\n\n\"Gladly,\" she replied. A few quick moments to rearrange themselves and Greg was behind her, staring down at the wondrous curves of her bum, hips and waist as he drove his cock into her from behind.\n\n\"Fuck yes, give it to me Greg, give it all to me,\" she urged him, pushing back against him each time he thrust forward.\n\nGreg pounded her, his abdomen slapping against her ass, balls tight with their imminent explosion. Lily dropped her chest to the bed, hands reaching out in front of her, back arched delightfully as she took her brother's cock over and over again.\n\nGreg didn't bother warning her, he simply thrust into her over and again until he reached the point of no return, shooting his sperm into her pussy.\n\n\"God I love that feeling,\" Lily crowed as she felt him gush inside her.\n\n\"But not as much as you like being eaten afterwards, right?\" he suggested.\n\n\"Well that does tend to be amazing,\" she agreed, sliding forward and rolling onto her back. \"If you're willing, of course.\"\n\n\"Thanks to you, I am,\" he replied and climbed between her legs to eat her.\n\nOnce again he exerted all the skills she'd taught him, working her clit until she came with another shuddering, body-shaking orgasm\n\n\"Thank you, Greg,\" she said after she'd calmed down again. She lay beside her naked brother and kissed him tenderly. \"Just don't suggest that we stop this again, it's too good.\"\n\n\"Well, as long as we're more careful, 'cause you know, we haven't exactly been very cautious. We could so easily have been busted by Mum and Dad. And um, if I start seeing anyone, like in a proper girlfriend sense, I will stop, Lily. And if you start dating someone properly, you should too.\"\n\n\"That makes sense I guess,\" Lily sighed. \"But until then...\"\n\n\"Until then, I'll be sure to treat you to regular orgasms,\" Greg laughed.\n\nLily's only response was another kiss with her magnificent breasts crushed against her brother's chest.\n\n\"Now scoot, out of my room, you horny tart!\"\n\n\"Huh, well if it's like that, I'll leave, but I'll be back, you cunning linguist.\"\n\n<p align=\"center\">END</p>\n\n<p align=\"center\">~~~~~</p>\n\n<p align=\"center\">A final note from Nikki:</p>\n\nWhen I write incestuous erotica, I often use a large or over-sized cock on the male character as a reason for the girls to be interested. It's not because average or small cocks are any less satisfying, but simply that in my mind, something truly extraordinary is more likely to provide the motivation for someone to cross the forbidden line into incest. I see it as something that would fire the curiosity of someone.\n\nThis time I tried something different. I've tried to go in the other direction to explore things a little differently. Hopefully you've still enjoyed my tale!\n\nLicks and kisses,\n\nNikki"
    ],
    "authorname": "nikki_2021",
    "tags": [
        "pussy eating",
        "oral sex",
        "brother sister sex",
        "hand job",
        "blow job",
        "rimming",
        "revenge",
        "anal"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-cunning-linguist-1"
}