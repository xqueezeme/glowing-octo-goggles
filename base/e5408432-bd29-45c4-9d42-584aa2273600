{
    "title": "Surefoot 29: Daughter of Kaas",
    "pages": [
        "Hrelle was floating in the Void again, the sights and sounds of his encounter with the Bajoran Orb of Tomorrows racing past him, impossible memories of things to come briefly touching his senses, like signposts barely glimpsed at the side of a road while he drove at top speed. He wanted to stop and study them, gain insight, clues, spoilers- how he and his son were meant to die- \n\n\"Captain?\" \n\nHe bolted upright in his chair, making his Vulcan First Officer T'Varik snap back, withdrawing the fingertips which had been lightly touching certain pressure areas on his head, as part of her mindmeld with him. \n\nSitting between them, his wife Kami looked at each of them with concern, focusing on Hrelle. \"Esek? Are you okay?\" \n\nHe nodded silently, gravely, his eyes focused on T'Varik. \"Well?\" \n\nThe woman leaned back in her own chair, hands together in a contemplative steeple. \"This is... not precedented with me, Captain, or any other Vulcans I am aware of. I made contact with the surface level of your consciousness, could access other areas if desired -- though of course I did not do so, Sir -- but the area of your mind involving your experience with the Orb was... shielded. I perceived it as a moment in your recent memories, but nothing more.\" \n\n\"Could this have been generated by a... resistance on his part?\" Kami asked. \"His prior traumatic experiences years ago with the telepath employed by the Bel-Zon?\" \n\n\"I would say not. Captain Hrelle's trust in me was strong.\" She looked to him, regard clear in her otherwise serene demeanour. \"And appreciated, by the way, Sir. Had there been even a subconscious resistance to telepathic contact, I would not have gotten as far as I had. No, I suspect that my lack of success in accessing the Orb visions is a by-product of the visions themselves, that they were designed to be for Captain's Eyes Only, as it were.\" She paused and concluded with, \"I regret not being of more assistance to you, Sir.\" \n\nHrelle adjusted his rear end, giving more swishing room to his tail as it poked through the hole in the back of his chair, and tried to hide his disappointment. He had hoped that T'Varik's clarity might lend some clues to what he saw... and how to avoid what was to come. \"No worries, Commander, it was worth a shot, anyway. And fortunately you didn't probe too deeply to see some of the really filthy thoughts I have about Kami.\" \n\nHis wife smirked. \"I don't think she needs to mindmeld with you to guess at some of them.\" \n\nThe Vulcan offered the hint of amusement at the banter between husband and wife. \"Indeed not. But this... shielded area... at least confirms that you did not imagine what had happened to you.\" \n\nHis expression sobered. \"I don't know if that's comforting or not. Have we heard anything back from Bajor? Or Deep Space Nine?\" \n\n\"Neither yet, Sir, beyond the initial message of gratitude for returning the Orb to them. The Bajoran religious bureaucracy is... extensive and challenging. And Captain Sisko is no doubt extremely busy following the Klingon attack on his station and the withdrawl of the Empire from the Accords.\" \n\nHrelle grunted, not wanting to have been reminded that the Galaxy was moving along despite his personal crises -- and moving in a direction that he didn't like. \"Well, I was hoping he might spare me a few minutes at least, since he's the Bajorans' Messiah and all-\" \n\n\"'Emissary',\" T'Varik corrected dryly. \n\n\"Whatever.\" \n\n\"Captain, you have described visions of both the imminent death of yourself and Misha, and your later attainment of the position of Academy Superintendent; neither can occur together in the same timeline. I should remind you of the Multiverse View: that we exist in a near-infinite number of quantum realities that can be either similar or radically different to our own, and that the futures you glimpsed are probabilities, not certainties.\" \n\nHe smiled. \"Of course. Who knows? There might even be a reality where I'm a thin, serious, mature vegetarian who loves exercise.\" \n\nShe raised an eyebrow in response. \"Perhaps... albeit somewhere very distant to our own reality, of course.\" \n\nHe rose to his feet. \"Well, we've got a party to join, and you have a godson to spoil.\" \n\nT'Varik rose as well. \"I can assure you, Sir, that I will not spoil Misha. His evening activities will be as carefully balanced as his evening meal.\" \n\n\"I have no doubt,\" Kami quipped, hugging the Vulcan. \"Thanks again for trying, T'Varik.\" \n\nShe nodded to each of them in turn. \"Enjoy your party. And try not to overindulge on the bloodwine, its deleterious effects are not exaggerated.\" \n\nHrelle smirked. \"Speaking from experience, Commander? What's a drunk Vulcan like anyway?\" \n\n\"Unpleasant. Good evening, Sir, Captain.\" \n\nAs T'Varik left, Kami looked to Hrelle with anxiety. \"Are you okay, Esek?\" \n\n\"Sure.\" He shrugged and walked away, pretending to be distracted by a silent flashing alert on a PADD on the desk in their quarters. He lifted it up and read it: it was merely an update on their progress to Capella IV in the Alpha Aurigae system, as well as a news alert informing the public about the various pre-arranged meeting points for any Klingons in Federation space who were heading back to Klingon territory. Which Hrelle assumed meant all the Klingons; since Chancellor Gowron withdrew the Empire from the Accords, Klingons were ordered to return to their space, or face Discommendation for themselves and their houses. \n\nSadly, this included their civilian surgeon Dr Kline. Hrelle would be eternally grateful to the man for his help and support during the Vlathi crisis, and it twisted the Caitian's stomach to think that their relationship was being sundered because of the idiocy of their respective governments. Especially when, in the face of the growing threat from the Dominion and the Cardassian Union, the last thing the Federation and the Empire should be doing is becoming hostile to each other. \n\nKami walked to him, took the PADD he wasn't reading from his hands and set it aside, replacing it with her own hands. \"I've been doing my own research on the Orbs, and other means of apparent prophecy, with the help of our Science cadets, and we've learned that visions are not necessarily meant to be taken literally. Often they are a symbolic reflection of your own subconscious feelings.\" \n\nHe looked to her. The thought wasn't alien to him either, though he feared he was avoiding the truth by entertaining it further. But hearing it from the woman he loved and trusted bolstered him. \n\nHis reaction prompted her to continue. \"You know we both face fear and guilt over Misha's injuries, at being made to face the reality of his, and our, mortality. It's something no parents wants to face, or should have to.\" \n\nHis tail twitched in consternation. \"But... this life we lead... if I took Misha back with me to Cait-\" \n\n\"Then you could be doing the very thing that fulfils the vision you had of both of you dying. And even if you did make it safely home, that's no guarantee of continued safety. Have you talked with my firstborn Mirow about his job on Cait? He's a rescue pilot for the Emergency Services. It keeps him busy, because despite being far away from the Bel-Zon and the Dominion and the Ferasans, and despite all the safety features built into our modern Twenty-Fourth Century lives and all our medical advances... bad things still happen. Accidents, disasters. People still suffer, and die. \n\nBe careful? Yes, of course, but then we always are. But I'm not prepared to let fear rule our lives. And neither should you, Esek.\" She paused, and then asked, \"Have you changed your mind about telling Sasha about your visions?\" \n\n\"No,\" he replied decisively. \"She doesn't need to know, to get upset.\" \n\nShe nodded. \"No, because your daughter has never faced the possibility of the death of a parent, right?\" \n\nHe looked at her sharply. \"I don't need sarcasm from my wife.\" \n\nShe shrugged. \"I'm also your Counselor; sarcasm is part of my arsenal in both roles. She's stronger than you're giving her credit for. Do you think that after Hannah, after you were reported missing and presumed dead, that she hasn't thought about it?\" \n\n\"Of course she has. But contemplating it is one thing. Hearing that such thoughts were given life from an alien artefact, with a mysterious reputation, is something else.\" He smirked. \"Besides, if our Valedictorian hears about 'Captain Sasha Hrelle', her head'll get even bigger than it already is.\" He glanced at the clock. \"Come on, we're gonna be late. We can talk about this later.\" \n\nShe grunted. \"We can, but we won't, not if you have your way. But you're right, we should go before the cadets drink all the bloodwine; the poor little cubs won't be able to handle it.\" \n\nHe smiled back. \"Let's show them how it's done, then, shall we?\" \n\n* \n\nTwelve hours later, as he threw up for the third time that morning, and quickly washed his snout and rinsed his mouth before racing out of the toilet, Hrelle contented himself with the knowledge that he was probably the best-recovered survivor of the party. \n\nAt least, that's how it seemed to those who had made it to the Transporter Room to see the Klingon off to the waiting Klingon transport ship: Doc Masterson was as green as an Orion, despite what was no doubt a shipload of detoxicants in his system from Sickbay. Hrelle's wife Kami was also present, although the Counselor was leaning back against the bulkhead as if the ship's artificial gravity was failing. Lt. C'Rash made an effort to be at attention and presentable, but she gave the impression to Hrelle that she would collapse from the slightest touch. And Chief Nurse Anna-Victoria Scarlo's normal Mediterranean swarthiness had vanished, and now she made a Borg drone look like a Risan sun-worshipper. \n\nIt hadn't been Hrelle's first encounter with Klingon bloodwine. But it definitely would be his last. Again. \n\nHe was somewhat mollified by Kline's own hungover appearance, wincing as he loudly dropped his shoulder bag onto the adjacent transporter pad, before facing the Surefoot crew seeing him off, his voice sounding like it was strained through a Horta's excretory passage. \"Well... that was a party they will sing about in the Halls of Sto-Vo-Kor.\" \n\n\"As long as they sing quietly,\" C'Rash growled. \n\nKline laughed -- then regretted it. Or perhaps he was just feeling regretful. \"I loathe long goodbyes...\" \n\nHrelle nodded, taking that as his cue to approach and offer a clasp of the surgeon's forearm. \"It has been an honour to have you serve onboard my ship, Doctor.\" \n\nKline clasped it back. \"Yes, I imagine it to be so.\" \n\nMasterson managed a weak smile and a handshake. \"Y'all don't be a stranger round these parts, Pardner. Y'all be missed. Maybe like a nest of fleas in my britches, but y'all still be missed.\" \n\nKline harrumphed. \"Someday I hope to understand at least half of the things you say, Cowpat.\" \n\n\"Uh, I think you mean 'Cowpoke'.\" \n\n\"I know what I mean.\" The Klingon moved to C'Rash. \"Die well, Lieutenant. And not too soon.\" \n\nThe coal-furred Caitian growled as she shook his hand. \"I died after that third bottle. Death holds no fear for me now.\" \n\nKline chuckled, looking to Scarlo, regarding her. \"You have served with distinction.\" But then he indicated Masterson. \"But do not be swooned by this songbird's mating calls. I would not see you wedded to him, wasting your life raising his brood and cooking his meals.\" \n\nThe Italian woman smirked. \"Fat chance of that happening... but, thanks anyway.\" \n\nNow Kami drew up to Kline... and embraced him, rubbing the left side of her muzzle against the side of his face. \"This is for your wife.\" Then she moved to the other side. \"And this is for your children.\" Finally she touched her snout to his mouth. \"And this is for you.\" She stepped back, noticed her husband's jealous expression and ignored it, focusing still on the Klingon. \"You have helped save the lives of members of my family and myself. My Clan will never be enemies with your House, no matter what our respective governments say or do.\" \n\nKline looked as moved to emotion by the declaration as any Klingon could be. Then he puffed up his chest and affirmed, \"The House of Kline will raise neither blade nor disruptor to the Shall Clan.\" \n\nJust then the Transporter Room doors parted, and Sasha and Eydiir rushed in, the cadets fully dressed and neither looking any the worse for wear for participating in the party the night before, and imbibing more than their fair share of blood wine. Sasha looked at the officers, and then at Kline. \"There you are, skulking off and leaving us in the hands of these ghu who can't hold their liquor!\" \n\nKline laughed, clasping Sasha's forearm. \"Be merciful to them, they are old and decrepit. Qapla', Young Hrelle.\" \n\n\"Qapla', Doctor Kline.\" \n\nNow the Klingon regarded Eydiir, who stood formally. \"If I had my druthers, Capellan, I would slay these others and press-gang you into my service.\" \n\nEydiir nodded. \"Thank you; that is high praise indeed. I have learned much from you. May you continue to slay Death.\" \n\n\"Well said!\" He clasped hands with her, before stepping up onto one of the Transporter pads. \"Now, get me off this ship of petaQs before I choke on the stench of sentimentality.\" \n\nHrelle nodded and stepped behind the console. \"We will meet again, Doctor.\" \n\nKline nodded back. \"If Destiny wills it, Captain.\" \n\nThe doctor and his belongings slipped away in a column of quantum impossibility. \n\nC'Rash glared at the cadets. \"Okay, how in the Seven Hells are you two still standing up after last night? I need an antigrav harness to stay on my feet!\" \n\nSasha looked to Eydiir before responding with a shrug. \"I guess the Next Generation is made of hardier stuff.\" \n\n\"Kiss my furry ass! I'm only six years older than you two tailless, furless kussiks!\" \n\n\"It is impressive,\" Kami admitted, leaning against the wall again. \"I wish I had some of what they've obviously had.\" \n\n\"They have Nanites,\" Masterson opined, rubbing his eye sockets. \"Breaking down the alcohol as it reached their bloodstreams. Eydiir checked a set of them out yesterday morning, despite there being no medical cases or Academy projects requiring them.\" At the cadets' reactions, he explained, \"Y'all think you can just requisition medical nanotechnology without the Chief Medical Officer knowing about it?\" \n\nEydiir flinched. \"Doctor, I realise it was an unauthorised use of the equipment, I will accept full responsibility-\" \n\n\"No!\" Sasha protested. \"I ordered her, if you're going to blame anyone, blame me!\" \n\nBut Masterson held a shushing finger to his lips. \"I'm not in any fit state to be blaming anyone. Or doing anything, except going back to bed, and I prescribe the same for the rest of you.\" \n\nHrelle grunted with approval at that. \"Fine, fine. T'Varik has the morning off with Misha, and I was supposed to be taking over from Neheru on the Bridge at 0800 Hours. But now...\" He looked to Sasha. \"Now you can do it.\" \n\nSasha blinked. \"Me?\" \n\nHe tapped his combadge. \"Hrelle to Bridge: Neheru, Doctor Kline has been beamed onboard the Klingon transport, resume our course to Capella IV. And Ensign Hrelle and Alpha Squad will be taking over the morning shift while the rest of us old folks sleep off the effects of Klingon bloodwine.\" \n\n\"Understood, Sir.\" The Kelpien Ops Officer didn't even try to hide the amusement from his response. \"Bridge out.\" \n\nHrelle smiled, looking at his daughter. \"Why the long face? I remember when you used to jump at the chance to sit in the Captain's chair. Now go, get your hardy Next Generation ass up there.\" \n\nSasha frowned, muttering under her breath, but Eydiir looked uncharacteristically hesitant. \"Captain... may I have a private word with you, please?\" \n\nHrelle blinked, fighting down his urge to go off to the nearest head for another pointless worship at the toilet to appease his already-emptied stomach, but looked at the others. \"Dismissed.\" They filed out, except for a bemused-looking Sasha, until he clarified with, \"That means you, too, Runt of the Litter.\" \n\nShe stuck her tongue out at him before she left. Alone now with the cadet, he asked, \"What's up?\" \n\nThe tall, muscular, coffee-skinned girl steeled herself before replying, \"Sir... while I appreciate you diverting the Surefoot to my homeworld on our way to Earth for the graduation, you didn't have to do this just for my benefit.\" \n\nHrelle let a hint of amusement bring warmth to his nauseated faced. \"I didn't, Cadet. We had to come here to drop off Kline, Capella IV is the only Class-M planet in the sector, and we need to regain our planetlegs before reaching Earth, where we'll be far too busy to compensate after so many months in space. Besides, it seems like an interesting world: one of the few pre-Warp civilisations aware of and interacting with the rest of the Galaxy, albeit on a very limited level.\" \n\n\"Yes,\" she agreed curtly, \"But it remains a dangerous world. The Ten Tribes have customs and laws all their own, and outsiders can risk injury or worse by offending them, even inadvertently.\" \n\nHe nodded. \"Which is why visitors to Capella are strongly advised to remain in and around the Federation Liaison Office and Visitors' Centre. You, of course, being a native, are free to visit your own tribe.\" He saw her react to that, and added, \"Unless of course, all this talk is because you don't want to do that.\" \n\nSomehow the cadet managed to get even more straight-backed. \"I do not wish to cause any difficulty, Captain.\" \n\nNow he smiled. \"You never have. And even if you did, you've more than earned it in my eyes.\" He knew her backstory, of course: born and raised on Capella IV, a Federation protectorate for the past century after the Klingons made First Contact with them. Eydiir, Daughter of Kaas, grew up among the Ten Tribes, a primitive, nomadic, warrior race. \n\nShe had an older brother, Straad, who caught a fever when she was twelve. It was an illness that would have been easily treatable anywhere else -- but among the Capellans, it was believed that the sick were weak, and they had no medicines or medical skills. Eydiir alone struggled to help him, to no avail, and her guilt had driven her to attempt suicide. \n\nLater, the girl earned a sponsorship to Starfleet Academy. She wasn't the first Capellan to do so -- but she was the first to forgo Security in favour of Medicine. For this, her father, the Teer of the Satiiri tribe, had removed her right of kinship and her tribal sash. \n\nWhen Hrelle had heard of this, and knew how much this banishment had affected the cadet, he had made a personal appeal to the High Teer of all the Tribes, extolling the girl's bravery and honour in service to Starfleet. Not long after, Eydiir received her sash again. \n\nAnd that had been the end of it, as far as he knew. \"Has something happened? Has your father, or someone else, contacted you?\" \n\n\"No, Sir. I have only ever received one message since I departed five years ago.\" Something like sardonic amusement lifted her features. \"Capellans have never been known to be... chatty.\" Then she grew sombre again. \"Captain, I must confess to being... hesitant... to go back. What sort of reception will I receive? Regardless of my father's rescission of my expulsion, he might still not want to see me again.\" \n\nHrelle considered her words, before finally responding, \"Something similar happened to me when I left Cait at your age. My birth-clan wanted me to continue in their fishing business, and my decision to go my own way got me excluded. After several unanswered messages home, I decided to give it a cooling off period and wait for them to make the next move. \n\nThe cooling off extended from months, to years... and then decades. With nothing from them. Over thirty years later, when I finally returned to the Motherworld, I hesitated visiting my old Clanlands. Kami convinced me that the response I would get from my Papa, even a negative response, would still be better than living the rest of my life with ambiguity. And she was right. ",
        "I won't force you to go, of course. But if you do, and you want it, I'll accompany you.\" \n\nEydiir started at that. \"I- I cannot ask you to do that, Sir.\" \n\nHe smiled. \"I don't recall wanting or needing you to ask me, Cadet.\" \n\nShe nodded at that -- but then asked, \"May I ask how well it went for you, Sir? Seeing your father again?\" \n\nHis smile dropped. \"We, ah, argued. And then he had me arrested for trespassing while visiting my Mama's grave marker. And the shock of our reunion killed him three days later.\" \n\nEydiir blanched. \"Sir! I'm sorry, I shouldn't have asked!\" \n\nBut he waved off her embarrassment. \"Don't be sorry. Despite all that, I don't regret seeing him again. And you shouldn't regret seeing your father, either.\" He grinned again. \"You'd better go, Sasha's out there curious about what we're talking about.\" When she glanced behind her at the closed door, he explained, \"I hear her leaning against the wall, tapping her boot in that impatient way she got from her mother whenever she waited for me to hurry up with whatever I was doing.\" \n\nEydiir nodded, appearing more relaxed now. \"Thank you, Sir. For everything.\" \n\nHe put a hand on her shoulder as he led them both out; Sasha was there, as predicted, straightening up. He indicated his daughter. \"See? I told you I could smell her out here. See what you can do about getting her to shower more frequently.\" \n\nEydiir nodded with exaggerated gravity. \"I'll do my best, Sir.\" \n\nAs Hrelle departed in the opposite direction, she watched as Sasha frowned and sniffed her own armpit. \"Do I offend?\" \n\n\"On a frequent basis. Come, we're late for our Bridge duties.\" She slipped an arm around Sasha's and guided her along. \n\nSasha waited for almost four heartbeats before demanding, \"So? What were you two talking about that you felt the need to keep me out of it?\" \n\n\"My... reluctance to visit my father. But your father has agreed to accompany me for moral support.\" \n\n\"Oh.\" Sasha noted, not hiding her indignation. \n\n\"I did not ask you.\" \n\n\"I know you didn't.\" \n\n\"Of course not. I knew I did not have to; you would come with me.\" When Sasha stopped to look at her, Eydiir continued. \"We have shared far more than just living quarters and an intolerance for fools. We have spilled blood to protect each other, our families and our Squad. We are sisters. Are we not?\" \n\nA now-humbled Sasha swallowed, and finally smiled. \"Yes. Yes, we are.\" \n\nThey continued towards the Bridge, Eydiir waiting until just before the doors slid open before adding, \"Besides, I know you can handle yourself, should matters end in a death duel.\" \n\nSasha shot her a look as they entered. \n\n* \n\nIn the opposite direction, Hrelle was making his way to the Cadets' Mess Hall, where he was hoping to get something to eat without Kami finding out- \n\nA roar assaulted him as the doors slid open, and he barely had a chance to grasp the doorway as he stared out into space, with most of the Mess Hall missing, the victim of a hull breach. He struggled to hold on, to force himself back into the corridor and call for a Red Alert, even as he sought out anyone still caught inside- Seven Hells, why haven't the emergency forcefields snapped on ye- \n\nSomething slammed into him from behind, and he tumbled forward and out into the Void, like in his Orb vision- \n\n\"Captain?\" \n\nHrelle stood at the doorway, staring into an intact Cadets' Mess Hall, where several diners sat or stood, looking at him strangely. \n\n\"Captain, is there something wrong?\" \n\nHe turned, releasing his hold on the doorway and stepping back, letting the door slide shut as he faced Rina Chaudri. He forced himself to calm down and smile at the Flight Ops cadet as he replied, \"Yes, of course. I- I just had to convince myself that a Second Breakfast wasn't really a thing. If you'll excuse me...\" \n\nHe turned and departed, needing professional help -- or the next best thing... \n\n* \n\nThe bald human in the Medical blue uniform moved around, muttering to himself. \"I'm an Emergency Medical Hologram. This is not an emergency. I'm an Emergency Medical Hologram...\" \n\nLying face down on a biobed, his head encased in the semi-circular neurocranial scanner, Hrelle's doubts about coming down to the Auxiliary Sickbay to get his brain checked again only grew, and he began to understand what Masterson and Kline were talking about in their dealings with this program. \"Thank you for doing this, Doctor.\" \n\n\"Thanks aren't necessary, Captain. I'm a program, lacking free will and can hardly refuse you, though I still don't understand why you didn't get this checked out by your CMO?\" \n\n\"Our doctor's... indisposed.\" \n\nThe EMH snorted. \"Probably had a shoot-out at High Noon. You can come out of that now, Captain.\" \n\nHe emerged, feeling somewhat ungainly. \"Well?\" \n\n\"Well, you're overweight.\" \n\nHe blinked, straightening out his uniform and reaching for his jacket. \"Really? Amazing. You're worth every quad of data that went into your programming. What about my head? Any damage?\" \n\nThe hologram turned to a wall display, where maps and scans of Hrelle's brain appeared. \"I assume you mean apart from the numerous traumatic incidents you've endured over the years? Or the evidence of neurological repair on those sections where you became addicted to aggression drugs, or had overloads from pain implants? Or this rather interesting collection of neural pathways indicative of a violent subpersonality you just about keep under wraps-\" \n\n\"Yes, thanks!\" Hrelle snapped. \"Apart from all of that, dickhead!\" \n\nThe EMH looked over at him. \"Nothing, Captain.\" \n\nHe blinked, not sure how to take that answer. \"Nothing that would have just caused a... hallucination twenty minutes ago?\" \n\n\"You mean another Bajoran Orb vision?\" \n\nHrelle started. \"How do you know about that?\" \n\n\"I do gain access to the crew's medical records every time I'm activated, Captain, so as to have the most up to date information available, so I know Doctor Masterson examined you. I also have access to the Federation Medical and Cultural Databases, so I did some research while you lay there wasting my time. \n\nAnd though there is no direct medical evidence to confirm your metaphysical experiences, it sounds like the incident outside of the Cadets' Mess Hall was what has been classified as an Orb Shadow: a residual vision which purportedly occurs to those who have experienced visions with the Wormhole Alien artefacts. They are reported to lessen in frequency and intensity as time passes -- assuming one believes in such superstitious nonsense.\" \n\nHrelle's ears picked up. \"So... I don't have anything to worry about?\" \n\nThe EMH shrugged. \"Well, you're still fat, though encouragingly you've lost some weight since your last recorded physical. And that subpersonality of yours is worrying-\" \n\n\"Never mind all that.\" He breathed out, feeling a little relieved. \"Thank you.\" \n\n\"Why do you keep thanking me? Do you thank the turbolift for taking you to your destination, or your fork for lifting up another oversized chunk of cake to your mouth? If you want to thank me, Captain, next time don't activate me unless absolutely necessary.\" \n\nHrelle walked up to him and patted him on his shoulder. \"Doctor, I promise you: in future, I'll avoid you like the Tarellian Plague.\" \n\nThe program looked at the furry hand like it was some alien creature. \"I would appreciate that, Captain.\" \n\n* \n\nMeow Rrori admired himself in the full-length mirror of Alpha Squad's quarters for the twelfth time, the light reflecting the gold bands on his forearms and tail, his tail swishing happily from under the back of his resplendent blue-gold silk kilt. \n\nNeraxis shoved him to one side. \"Shift, Furball.\" \n\nThe snow-furred Caitian grunted. \"If you want to use the mirror, you just have to ask.\" \n\nThe Bolian never even looked at her reflection. \"I don't! I just wanted to break the spell it had over you, before you started stroking yourself! We get enough of that every night!\" \n\nKitirik sat nearby, munching on the remains of a bag of honey-coated locusts, the lime-green reptoid brushing the crumbs off of his khaki civilian gear. \"Admittedly, Best Friend Rrori does appear most attractive in his Caitian clothing.\"  \n\nRrori turned and offered a slight bow. \"Indeed I do! I owe it to Izzy to be at my best for our date! And for your girlfriend as well, Kit.\" \n\nKit beamed. \"That is most magnanimous of you, Best Friend Rrori.\" \n\nJonas Ostrow stopped brushing back his silver-white hair and looked to his friends. \"You know he's hoping for an orgy someday with you, Hafsa and Izzy, don't you?\" \n\n\"Yes, Best Friend Jonas. I mentioned it to Intimate Friend Hafsa the other day.\" \n\nRrori looked to him with alarm. \"You didn't! Why did you do that?\" \n\n\"I like hearing her laugh.\" \n\nNeraxis bellowed with laughter herself. Rrori, meanwhile, returned to the mirror, his expression indignant. \"She's just hiding her desire for me behind all that derision.\" \n\nThe door to their bedroom slid open, and Eydiir and Sasha emerged, clad in heavy plain black robes with emerald-green sashes tied around their waists, and Eydiir's Capellan short swords criss-crossed in sheaths on her back. \"We are ready. And I hope none of you are offended by my not including you in the invitation to my tribe, but the numbers must be kept to a minimum to avoid cultural contamination and potential protocol violations.\" \n\n\"We understand,\" Jonas assured her, smiling. \"Personally, I'd rather not get a kleegat in the back for picking my nose or something.\" \n\nEydiir offered a wry smile. \"My people are not so harsh. Such an insult would only deserve at best a broken kneecap.\" \n\n\"Besides,\" Neraxis added. \"There's a Capellan Shakespeare group at the Visitors' Centre putting on a production of High Teer Lear. That sounds a little more fun-\" She frowned as she regarded the women. \"Are those authentic costumes?\" \n\n\"These are not 'costumes'! These are the clothes of my tribe!\" \n\n\"Yeah, sorry, no offence. It's just that all the images I've seen of Capellan clothes have always been... well, slacks and scarves and pink fur and pointy headgear.\" \n\nEydiir nearly spat. \"You mean the outfits preferred by the High Teer's tribe! Effete fashion-conscious snobs!\" She indicated the robes. \"These are the clothes of true nomads, true warriors!\" \n\nSasha held up a hand. \"I'd rather save any potential duels for down below! Let's get going before a line builds up at the transporter.\" \n\n\"Indeed, Best Friend Sasha,\" Kit affirmed, rising and disposing of his snack package. \"I am looking forward to returning to a desert environment, and see what everyone's... dune.\" He wheezed with Qarari laughter. \"Get it? 'Dune'? 'Doing?\" \n\nEveryone groaned, Sasha asking, \"How do you get any sex from Hafsa, telling such awful puns?\" \n\nKit regarded her, grinning now. \"Intimate Friend Hafsa is appreciative of my sophisticated humour... and if I may be so bold to point out: lately, I am getting more than you.\" \n\nThe others laughed at that. Sasha just grunted. \n\nJonas' warning was correct; there was a long line for the Transporter. But they weren't long there before Hrelle showed up, in full uniform, beckoning to Eydiir and Sasha. \"Let's go.\" \n\nSasha frowned. \"Are you jumping the queue?\" \n\n\"I'm exercising Captain's Privilege; this isn't shore leave for me, it's official business.\" \n\nAs the girls emerged from the line, Eydiir felt the urge to inform them, \"My tribe is currently settled in their winter grounds in the Amaas Mountains far to the east of the Federation Visitors' Centre; it is early morning there, and it will be cold this time of year. Especially with the frequent eclipses we have at this season.\" \n\n\"I'll manage,\" Hrelle assured her as they entered the Transporter Room, nodding to Chief Grev behind the console. \"But if Sasha's nipples are anything like her mother's, the merest hint of cold turns them into diamond cutters.\" \n\nGrev laughed, and Sasha scowled as she muttered, \"Thanks, Dad.\" \n\n\"You're welcome.\" He stepped up onto the platform, motioning to the girls to take flanking positions. \"Anything else we should be aware of, Cadet? I read the cultural briefings, but they're never comprehensive enough-\" \n\nEydiir flushed. \"Well, Sir, there's...\" \n\nThe transporter whine, and the temporary non-existence which followed, cut her off. \n\n* \n\n\"...Something else...\" \n\nHer words trailed off as she breathed in the cold, crisp air of her homeworld. \n\nOnly one of the suns had fully risen over the distant craggy mountains, its little brother struggling to keep up and illuminate the shrub-bound valley over which the visitors now stood. \n\nHrelle took in the sights and scents from the scores of tents of many sizes, and the Capellans who milled about, cooking over open fires, gathering kindling or buckets of water from nearby streams, tending to livestock and beasts of burden in pens, tanning hides and repairing blankets, tent canvases and clothes. \n\nSuddenly the ground erupted with a deafening roar, cracking open in a thousand places. The valley collapsed, and with it, the surrounding slopes, as Hrelle reached for the cadets, hoping to drag them to safety, even as he lost his own footing, and they all tumbled into an abyss- \n\n\"Dad? You okay?\" \n\nHe blinked, noticing a concerned-looking Sasha. \n\nHe shivered, recovering quickly. \"Yeah. Yeah, Sash, I'm fine.\" \n\n\"Are you sure? You looked like you were in another Quadrant there. I was worried.\" \n\nHe tugged at the ends of his jacket, feeling the chill now despite his clothes, fur and padding. \"I'm fine, hon, I just remembered Kami and I had a quickie before I left and I forgot to put away the handcuffs-\" \n\n\"Eeuww!\" His daughter looked away. \n\nSatisfied that he had distracted her, he looked to Eydiir. \"Is this your tribe, the Satiiri?\" \n\nThe Capellan girl nodded, looking them over, her thoughts unreadable from her stoic expression. \"Yes; I am glad to see we have not lost our winter grounds to the Prees tribe; they have often contested our traditional claim to it. Captain, I was going to warn you about something on the ship: you may be addressed here as a 'Nadaal'.\" \n\nHe repeated the word. \"'Nah-da-al'. What does it mean, 'Respected Warrior'? 'Valiant Leader'?\" \n\n\"Um, no, Sir. A Nadaal is a large feline predator on Capella, with spinal ridges that generate bioelectric charges from rapid muscle movement. Offworlders have referred to the creatures as Capellan Power Cats.\" \n\n\"Power Cat,\" he repeated, amused. \"That is so my new nickname.\" \n\n\"It is not meant as a compliment, Captain. Nadaals are notoriously untameable and... unintelligent.\" \n\nBut he pretended not to hear, beaming to lighten the mood. \"'Power Cat'.\" He slapped his hands together. \"What now?\" \n\n\"Now-\" Eydiir stopped as the tribespeople below finally noticed the appearance of the trio on the slope, and called for others to go on the alert. A group quickly assembled, carrying swords and the crescent-shaped throwing knives Hrelle knew were called kleegats, having seen Eydiir demonstrate their use onboard the Surefoot. They began ascending. \n\n\"Follow Eydiir's instructions,\" Hrelle muttered to Sasha. \"Make no sudden moves around any of them.\" \n\nEydiir stepped forward, hands raised and open, her voice carrying over the thin air. \"I am Eydiir! Daughter of Kaas!\" She indicated her crewmates. \"They are my guests, I vouch for them! I am Satiiri!\" \n\nOne of the older tribesmen, a gaunt, bronze-skinned male with a hint of grey in his beard, stopped and sneered. \"No. You are not Satiiri. Not if you are the weak, weeping child I last saw who bore the name Eydiir.\" \n\nEydiir tensed and stepped closer to him. \"Greetings, Uncle Coord. I see you are still alive and well. And as disrespectful as ever.\" \n\nHe raised his broad, scarred chin. \"Weaklings and cowards who mourn for the dead, who seek to join them, and who eschew combat for... medicine... do not deserve respect.\" \n\nShe took another step closer. \"Regardless of your opinion -- such as it is -- I am still the Daughter of the Teer. And I bring honoured guests. Or have the Satiiri abandoned all civilised notions and now live like beasts?\" \n\nThat drew a reaction from the crowd behind Coord, who looked past his niece and fixed on Hrelle. \"'Honoured Guests'? These? Soft offworlders? Nadaals you've trained to walk on their hind legs? You insult us, you pathetic child!\" \n\nNow Hrelle stepped around Eydiir, matching the Capellan man's height. \"Hello there. I'm Captain Esek Hrelle. I command a starship -- and your niece. I'm very protective of both.\" \n\nCoord looked up at him, eyes wide as he took in the Caitian features. \"You're an animal!\" \n\nHrelle smiled and winked. \"Yeah, my wife certainly thinks so.\" As his joke triggered laughter from the crowd, he indicated Sasha. \"And this is my daughter; as you can see, sadly she didn't get any of my good looks.\" Following more laughter, and an obvious warming of everyone but Coord, he finished up, more loudly for the crowd, \"I have heard much about Capellan hospitality, especially about the Satiiri, the greatest of the Ten Tribes. And I look forward to showing honour and respect to your Teer, Eydiir's father.\" \n\nThe crowd made noises of approval and agreement, and Coord reluctantly lowered his guard, a little, ignoring Eydiir to focus on Hrelle. \"Very well. Do so, and be gone.\" \n\n\"We will go when we are ready, Uncle, and not before. Step aside.\" Eydiir stepped forward once again, leading her guests down the slope and past the others, into the main encampment. But she did spare an impressed glance at Hrelle. \"Captain, how did you manage to defuse that so well?\" \n\nHe shrugged. \"I'm not just a pretty face, Cadet.\" He looked to Sasha. \"You okay?\" \n\nShe nodded. \"I felt... I felt like I should have done something-\" \n\n\"You did: you stayed out of it, and didn't make a potentially bad situation worse. Doing nothing is still doing something, and sometimes it's the best thing.\" \n\nEydiir led them to a large tent near the centre of the encampment, flanked by banners displaying the emerald-green colour of their tribe, along with a stylised bird in flight. She entered without preamble, and as Hrelle followed he noted some of those inside had been on the slope, and had obviously raced ahead to warn the Teer of their arrival. \n\nThe interior was warm, and centred around a tall, dark-skinned Capellan man, whose goatee was tinged with grey, and possessed tattooed symbols on his cheeks. He stood beside Eydiir's uncle Coord, and a young woman Eydiir's age, who cradled a swaddled child. \n\nFor a moment, there was no sound but the rustle of the tent canvas against a morning breeze. Then Eydiir broke the silence. \"Father.\" \n\nThe Teer regarded her intently, before responding with, \"Eydiir.\" \n\nThe girl offered a smile. \"It is... very good to see you again. You look well.\" \n\n\"Yes.\" He looked to the others with wariness. \n\nEydiir took the hint. \"Father, this Captain Esek Hrelle, my commanding officer in Starfleet. And this is Sasha, his daughter, and whom I call Sister.\" \n\nKaas barely acknowledged Sasha, focusing on Hrelle. \"I know of you.\" \n\nThe Caitian paused, not sure how to respond to that, given the mix of emotions he saw on the Capellan's face. But then the Teer looked to the woman and child. \"This is my new wife, Liira.\" \n\n\"Liira,\" Eydiir repeated, with recognition. \"I remember you. I once fought you for the affections of that boy Oomas.\" \n\nThe girl offered a sour look in reply. \"Eydiir.\" \n\nKaas drew closer to the infant. \"And this is Talaak, the son she has given an old man to inherit the Teership someday.\" \n\n\"A son?\" Eydiir beamed uncharacteristically, looking at the child. \"A brother. I have a little brother...\" ",
        "Sasha smiled too. \"It's a great feeling, isn't it?\" \n\n\"Indeed.\" She admired the infant, drawing nearer. \"He looks handsome.\" \n\n\"He is,\" Liira agreed -- drawing Talaak closer to her breast. \"Handsome, and strong. He will not be weak or cowardly like his father's other children.\" \n\nEydiir started. \"What did you say?\" \n\nBeside Hrelle, Sasha tensed as well, and he stepped forward, holding out a palm. \"Teer Kaas, we come with open hearts, and hands. And gratitude, to you.\" \n\nKaas remained wary. \"Gratitude, Captain?\" \n\nHrelle lowered his hand. \"Yes. Your daughter is a remarkable young woman, strong and intelligent, loyal and honourable. She has served me with distinction. She has saved lives. She is respected and admired by my family and my crew. You have much to be proud of.\" \n\n\"So you told the High Teer -- forcing me to rescind my decision about Eydiir.\" \n\nHrelle straightened up, balancing his role as Captain and guest in another man's home. \"I said what I said in defence of a member of my crew. Not to insult you, or usurp your authority. A leader such as yourself should appreciate that.\" \n\nKaas's gaze narrowed. \"Yes. Yes, I do.\" \n\nHrelle now looked to the infant, wiggling his fingers at the smiling face, and ignoring the reacton from his mother, who looked as if afraid Hrelle might gobble him up. \"A fine boy. I have been blessed myself, Teer. My son's name is Misha, my Warrior Prince; he turned one two months ago, and is running around exploring, discovering the world around him.\" He sighed. \"And I so much enjoy being there to discover it with him.\" \n\nDespite his wariness, Kaas nodded. \"Yes. They bring us more joy than we can say aloud.\" \n\nHrelle nodded. \"Joy... and the occasional moan when they wake up in the middle of the night roaring at some enemy they are fighting in their dreams.\" \n\nThe Teer relaxed a little in recognition at that, gesturing to some Capellans at the entrance to the tent. \"Bring food and water for our guests, they have travelled far.\" To the Starfleet trio he indicated the cushions on the ground. \"Please, sit. My wife, take my son and settle him.\" \n\nLiira nodded, still offering the visitors a final dirty look before departing. \n\nAll settled down in a circle around a circle of heated rocks, Hrelle watching Kaas' interaction with Eydiir -- or rather, his lack of interaction; the Teer made an effort to focus on either Hrelle or Sasha, asking the latter, \"You are the Captain's daughter?\" \n\nSasha nodded, accepting a wooden cup filled with a sweet-smelling tea. \"Yes, Teer. He married my mother after my birth-father died, before I ever knew him.\" She smiled at Hrelle. \"I have grown to consider this man my father.\" \n\nCoord's face screwed up in disgust at her response. \"And she was willing to lay with an... animal?\" \n\nHrelle tensed, as did Sasha and Eydiir, and he readied a response -- before Sasha beat him to it, smiling politely and replying, \"One shouldn't judge on appearances, Sir; they can deceive. You, for instance, appear to be a man of honour.\" \n\nCoord scowled. \"You insult your hosts?\" \n\n\"You insult your guests?\" \n\nKaas grunted with approval. \"She speaks truly, Brother. I have met but a few offworlders, and some have appeared...\" He looked to Hrelle again. \"Unusual... but they have demonstrated courage and honour.\" Then he focused on Sasha once more. \"You are in Starfleet as well, child?\" \n\nSasha, showing a little reaction at the word 'child', nodded. \"Yes, Teer Kaas, my mother had been in Starfleet, too. It seemed the right thing to do to follow them.\" \n\n\"Of course. It is important for children to show respect by following the same path as their parents.\" \n\nHrelle's brow furrowed, as he saw Eydiir react to the obvious dig from her father, who still refused to acknowledge her closeness, though he did not display the same hostility that Coord or Liira or other Capellans had done towards their returned tribesperson. \n\nIt seemed alien to Hrelle, who would have still been hugging the cub he hadn't seen in years to have bothered with social niceties. \"I am of course pleased and proud that Sasha took the same path as her mother and I. But I hope she knows that if she had chosen another path, I would not have loved or respected her any less. The same will be with my son, when he is older and ready to choose his way through life. And, I'm sure, you feel the same way about your own children.\" \n\nKaas stared down into his cup. \n\n\"Father,\" Eydiir finally spoke, her face a picture of tight anguish. \"Do you hate me so much that you cannot even look at me?\" \n\nKaas glanced at her, tensing -- and Hrelle could see a puzzling mix of emotions there. Was he simply conflicted, caught between anger at his daughter's seeming betrayal, and lingering love for her? There seemed to be more, but Hrelle's experience with Capellans being limited to his interactions with Eydiir, he wasn't sure. He realised he should have brought Kami along, but she was busy with finalising Counseling assessments on the cadets prior to graduation. \n\nThen Eydiir looked to Hrelle and Sasha. \"Would you please give me a moment alone with my father?\" \n\nHrelle nodded and rose. \"Of course.\" \n\nSasha followed his rise, offering Coord a look and a promised, \"We'll be outside, close at hand, if you need help.\" \n\nOutside again, Hrelle appreciated the warmth that the tent and the tea had provided, as he looked out at the tribe awakening, how the Capellans made efforts not to look in his direction despite their obvious curiosity; it was novel, to be in an environment where the people had little or no experience or interaction with 'offworlders'. \n\n\"Son of a bitch,\" Sasha muttered beside him, crossing her arms over her chest. \"I'd freeze my cojones off down here, if I had any.\" \n\n\"You have some,\" he quipped. \"Big duranium ones. Wriggle your toes in your boots.\" \n\nShe seemingly did so, grunting to herself. \"How can he treat her like that? She came all this way to see him!\" \n\n\"I don't think the Capellans can appreciate the distance.\" \n\n\"Well, the time, then! She hasn't been back in years! And I know she sent him messages about her progress at the Academy, her adventures on the Surefoot! And he's never responded, not once, except for when he was forced to send her back her tribal sash!\" \n\nHrelle noticed some Capellan children cautiously peering from around the corner of a nearby tent, and he smiled and waved at them, making them scatter... and then come back seconds later. \"I know.\" \n\n\"I thought you had settled all of this with the High Teer.\" \n\n\"You heard Kaas in there. He didn't exactly appreciate my going over his head to override him. It could be I might have made things worse between father and daughter because of it.\" He looked to Sasha. \"I don't always get it right. You won't, either. You need to be ready for that.\" His combadge chirped, and he tapped it. \"Hrelle here.\" \n\n\"Commander T'Varik, Sir. Some urgent communications have arrived from Eleventh Fleet Command: the Klingons have launched an offensive in the Pentath Sector.\" \n\nHrelle nodded; the Fleet was in that area, and even though the Surefoot was away on detached assignment delivering the cadets to Earth, he needed to stay abreast. \"Shore Leave can continue for the cadets and crew, Commander, but have Grev stand ready to beam me up. Hrelle out.\" He growled under his breath; Gowron wasn't wasting any time. \n\n\"Are we at war?\" Sasha asked, a little fearful. \n\nHe shrugged. \"Well, it's definitely not peace.\" He looked at her. \"You have your combadges on under all that?\" \n\nShe nodded, and then hugged him. \"I love you, Dad.\" \n\nHe hugged her back. \"I love you too. Keep an eye on Eydiir. And yourself. And on the Capellans.\" \n\nShe pulled back. \"That's a lot of eyes. I'm usually better known for being All Mouth.\" \n\n\"And Nipples.\" He touched his combadge again. \"Hrelle to Surefoot: One to Beam Up.\" He took a last look at the Capellan children still gazing in wonder at him, and smiled to himself as he imagined the looks on their faces when they saw his next trick, as the transporter beam- \n\nRipped him apart, atom by atom, shredding him carelessly like a puppy with a rag doll, tearing him into pieces far too small to be seen by the naked eye of even a Caitian, but leaving his consciousness intact enough to realise that the transporter was malfunctioning, and he was being killed and Kami would walk in and see this bloodied mess all over the walls and floor and scream- \n\n\"Captain?\" Grev squinted at him with beady black eyes. \"Something wrong?\" \n\nHrelle stood on the Transporter pad, suddenly gasping, feeling dizzy as if he had been holding his breath for an hour. He touched his limbs, his tail and ears. \"Am I- Am I whole? I came through okay?\" \n\n\"Of course,\" the Tellarite replied mildly. \"Though if you want, I can adjust the process and try and make you less ugly the next time you go through it?\" \n\nHrelle grunted and tugged at the sleeves of his jacket, relieved at having arrived intact. \"I'll take you up on it, if you can get rid of my nose so I don't have to smell your pelt.\" \n\nGrev laughed at the banter, assured that everything was okay. \"Are your girls expected back soon?\" \n\n\"I don't think so -- but make sure you or one of your people is on Standby here, just in case things get ugly down there fast.\" \n\n* \n\nEydiir glared at Coord, waiting for her uncle to take the hint and depart with the rest, before she finally clarified, \"You may go as well, Uncle.\" \n\n\"I do not take orders from weaklings.\" \n\n\"No,\" Kaas agreed in a low voice. \"But you do take them from your Teer. Leave us.\" \n\nThe man looked to his brother for a moment, before nodding in reluctant acquiescence, rising and exiting. The Kaas focused on her fully. \"What do you want of me, Eydiir?\" \n\nHer expression tightened. \"You do not call me 'Daughter' anymore? Have I brought you that much anger, that much sorrow?\" \n\nHe focused more intently on her. \"I am Capellan. I do not feel sorrow.\" \n\nHer own glare matched his. \"We are Capellan. And we do. I remember the look on your face when you found Mother after the Prees raid which had killed her. And when Straad was struck down by the fever-\" \n\nKaas made a sound and looked away. \"Do not speak of him.\" \n\n\"I must, Father. And I will. I loved him, loved him with all my heart. As did you. He made me smile. He taught me to handle a blade, a kleegat. He put me on his shoulders and let me touch the stars. He would have made a strong and just Teer after you.\" \n\nSadness did cross his features. For a moment. \"He was weak-\" \n\n\"No! He was strong. But the disease was stronger, one that could not be cut by blade or pierced by spear. We are strong, but we can be overwhelmed by superior numbers-\" \n\n\"I said I do not wish to discuss Straad!\" he snapped. \"He is dead and gone!\" \n\n\"Then let us discuss you and I. I sent messages to Capella when I was away. Did you get them?\" \n\nHe nodded, calmer now. \"The Starfleet Liaison in the Visitors' Centre would bring a machine that made your words, your image, come to life. You seem... happy.\" \n\n\"I am,\" she admitted, smiling. \"I am learning much. We are now proceeding to Earth for my graduation, before becoming full members of Starfleet. But already I have done much, learned much, defended my commander and my crew. I have even taken a lover.\" \n\nHis brow furrowed at that. \"You are married? You will bear his child?\" \n\n\"No, and no. One does not have to marry to mate, and there are means of preventing conception available to men and women. His name is Falok, and he is from a race called Vulcans.\" \n\n\"Oh.\" Kaas looked a little relieved. \"I... was afraid you would say that your lover was... your Captain.\" \n\nShe almost laughed at that. \"No, Father! He adores his wife, he is Sasha's father, he is my Captain, and even if none of that was true, he is far too old for me!\" \n\nHe nodded, still looking pensive. \"Yes, well... you seemed... close to him. You spoke of him much in your messages to me, and with... regard. And he is obviously fond of you. And protective.\" \n\nShe waved it off. \"He's protective of all his cadets; he calls us his 'cubs'. He is a fierce fighter.\" \n\n\"Hmph. Does he eat those he fights?\" \n\nShe smiled. \"He is fond of his food, too. But do not let his girth deceive you; he is a formidable opponent.\" \n\nHe nodded again. \"Yes. He may not look like us, but I see it behind his eyes.\" \n\n\"And he is a fine father, to Sasha and Misha.\" \n\nHis expression darkened. \"Not just to them.\" \n\nHer own matched his. \"What do you mean, Father?\" \n\n\"Do not call me that anymore. I may have been ordered to return your sash and tribal status by the High Teer, because he is happy to bend the knee to the Federation. But that does not mean I must claim you as my daughter again.\" \n\nShe started, struck by his words as if by a knife between her ribs. \"N-No-\" \n\n\"Yes. You used to be my strong, loyal daughter. Then Straad's weakness made you weak, too. You took him to that cave and tried to save him, and when they failed, you wailed like a motherless Nadaal cub. You buried his body as if he had died with honour, and when you failed to join him in death, you ran away to the stars to play with potions and liquids and take aliens as your lovers and... family. I do not know why you returned.\" \n\nEydiir felt herself plummeting. \"I- I returned because... because despite my decision to leave, I missed you. Because I love you. And I- I wanted to know if you still loved and missed me.\" \n\nKaas leaned back. \"The children of my first wife are of no more consequence to me; I have a new wife and child.\" \n\nShe was trembling now. \"No-\" \n\n\"You should leave, Eydiir. Return to the stars, your sister... and your Captain. He can be your new father. You have none here.\" \n\nDisbelief, rage, anguish, all vied for supremacy within her. Unwilling to stay and choose a winner, she bolted to her feet and stormed out... not seeing the look on Kaas' face as it twisted in pain. \n\n* \n\nSasha had been standing outside, glad the robes she wore covered her chest and prevented others from seeing how cold she felt, when Eydiir emerged, nearly running into her but continuing onward. \"Hey!\" \n\nSasha rushed to catch up with her, as the Capellan made a straight line back towards the slope where they had first beamed down, and the human had to grab the ends of her robes to hasten her catch up with her friend.. \"Eydiir!\" \n\nBut the girl continued on past the beam out point, along a narrow, winding gulley between high stark rocks, Sasha following, quickening as she heard cries, and the sounds of chopping. \n\nShe emerged into a small clearing, dominated by a gnarled black tree, one that had survived this harsh environment for years -- only to surrender now to Eydiir, her twin swords drawn as she hacked away, sending shards of wood and insects flying as she cursed and cried. \n\nSasha kept back, silent, watching, waiting. \n\nFinally she slowed, then stopped, dropping to her knees, her arms limp but still clutching the swords, her breathing heavy, her cries now a staccato of sharp breaths and sobs. \n\nNow Sasha approached, moving around the front to mirror Eydiir's pose, but easing the swords from her grip and holding her tight. \n\n* \n\n\"The Klingons have claimed System 511-R,\" Hrelle relayed to his senior staff -- and to Misha, who seemed more preoccupied standing by the window in his father's Ready Room, staring down at the orange-brown surface of Capella IV. \"Bordering the Pentath system. The Cardassians still hold Pentath, and are likely to do so for the forseeable future, given how heavily fortified it is. The Eleventh Fleet is on Yellow Alert.\" \n\n\"Will this change our plans?\" Doc Masterson asked. \n\n\"No, Admiral Savari's confirmed we're to continue to Earth with the cadets. Not just because we're only a support craft, but to reaffirm to all and sundry that life goes on, regardless of what might be happening elsewhere.\" \n\nC'Rash growled. \"Terrans like to stick their heads up their asses and believe the rest of the Galaxy is just as peaceful and content as their little blue ball. That's why they never have proper defences on hand. That's gonna bite them someday.\" \n\n\"Not our problem,\" Hrelle reminded her. \"There will be extended shore leave at Earth, as Commander T'Varik liaises with the Academy Superintendent to select the new batch of snotnoses to us to boss around.\" \n\n\"Hmph,\" Grev grunted. \"None of them will be as good as Jonas, mark my words.\" \n\n\"Duly marked,\" T'Varik replied dryly. \"But while a few of this year's cadets will be moving on to other assignments or additional Advanced Training, quite a few have chosen the Surefoot to be their first postings.\" She looked to Hrelle. \"Many have cited you as their reason, Sir.\" \n\nHe shook his head. \"That's what they say. They're really here for Misha.\" \n\nAt the sound of his name, the toddler turned and waddled over, more confident now at walking without a nearby handhold, until he practically rushed up into his father's arms, Hrelle lifting him up and setting him onto his lap, tickling him and making him laugh. The Captain looked up again. \"I guess that's it, Mr Neheru will transmit the official notice to all crew, but I thought you'd all like a heads-up. In the meantime, see if you can find some time to visit Capella IV; it's rugged, like Vulcan, but has a beauty all its own, and I hear the Visitor's Centre is quite entertaining and informative. Dismissed.\" \n\nAll rose and departed -- except for Kami, sitting beside her husband and grinning at her cub, touching her nose and encouraging Misha to do the same with his own. \"And how is Eydiir doing down there?\" \n\n\"Not... great. Her father is giving the bare minimum of hospitality required of him for visitors, and before I left, he was hardly acknowledging her presence.\" He sighed, rubbing the side of his muzzle against his son's head. \"I think I made things worse when I contacted the High Teer two years ago in support of Eydiir.\" \n\nKami leaned forward, reaching out and letting Misha grasp her fingers and squeezing. \"Yes. And I would have told you that, if you'd bothered to ask me beforehand.\" \n\nHe frowned. \"It seemed the right thing to do at the time.\" \n\n\"No, it seemed the thing you wished someone had done for you, when you'd gone off to the Academy and your birth-father and your clan declared you R'Nesikith and kicked you off of the Clan Registry. Now, in Eydiir's father's eyes, an outsider has come along and interfered in family business, in his decisions. You've usurped him, become her father.\" She looked up at him, smiling sympathetically. \"But then that's not exactly new for you, is it? Why do you think so many cadets want to be posted here?\" \n\n\"Well, I said it was Misha... but I think they all have crushes on you. I can't blame them for that, really; you're looking even more attractive now than when I first met you.\" He offered one of his more charming smiles. \n\n\"And you're a little too obvious in your attempts at diversion.\" \n\nHis smile deflated. \"I screwed up with Eydiir, didn't I? If I'd known it'd end up like this-\" \n\n\"Then you'd be a god, instead of the man I fell in love with. Esek, despite our knowledge and experience, none of us can know the ultimate consequences of our actions. T'Varik can decide to give a failing cadet a second chance, and years down the line they end up making a mistake that costs lives. I could counsel someone to leave an unhappy relationship, and they could go on to lead a sad, lonely life. \n\nAnd don't ignore how much your mood is also being affected by your Orb experience, giving you glimpses of things that might never be, of things you might never be able to change. I wish you'd never touched that damn thing.\" ",
        "He grunted. \"So do I.\" \n\nShe rose. \"He needs changing.\" \n\nHe sniffed. \"Yes, he does. I, ah, have an urgent call to make to Starfleet Command, I don't suppose you would like to do the honours-\" \n\n\"No. If you want to be Dad to the Galaxy, you have to be prepared to take the poop as well as the praise.\" She bent down and rubbed her muzzle against Misha's face, sparing her husband a stroke of his own with her hand. \"But then I know what type of man I married, Esek; I know you'll be ready, willing and able to handle whatever comes. In the next few minutes, or the next few decades.\" \n\n\"You can still change him if you want,\" Hrelle offered. \n\nShe smiled as she turned and left. Then he looked to Misha, who was wriggling his backside on his lap. \"You're doing that on purpose, aren't you? Spreading your poop all over your furry ass, to give me a real chore?\" \n\nHis son laughed, gurgling, \"Poop!\" \n\n* \n\nThe girls moved through the hills at Eydiir's direction, the suns racing high into the sky and warming the thin air. Both were silent now, saving their energy for their journey further into the hills. Occasionally they would stop, Sasha wondering if it was done by Eydiir for Sasha's benefit, or because the Capellan wasn't sure about where they were going. \n\nBut then she slowed down near a sharp incline, where gaps in the rockface dotted it like eyes, and a flat slope displayed an unmarked lump of rocks that, to Sasha, was unmistakable in purpose. \n\nEydiir moved slowly around it, occasionally glancing around her, at the surrounding hills and the sky, before returning once more to the cairn. \"Father, Uncle, the rest of the tribe... they thought I was wrong to try and save him... but they truly condemned me for burying him and not telling them where... such honours were bestowed only to our broken weapons, or to High Teers... I- I don't know why I did it...\" \n\n\"Because Straad was better than any High Teer,\" Sasha assured her. \"No High Teer put you on his shoulders to touch the stars.\" \n\nThe Capellan looked to her friend appreciatively, before kneeling by the stones, returning some that had dislodged some time ago. \n\nSasha joined her, her mind snapping back to the last grave she had visited: her mother's, when her body was returned to Earth and buried in the Eismann family plot. She remembered how bright and breezy it had been, how the long wildgrass in the surrounding fields swayed and there were kites in the distance, and how she wanted to be out there flying one too, and not be here with all these people she didn't know, having to relive the mourning for Mom. \n\n\"We don't have prayers,\" Eydiir murmured softly, her voice reaching her friend's ears and little more. \"Prayers or hymns or songs of mourning. When we do speak of the dead, it is to honour their courage, the many foes they had slain. I... I don't know what to say.\" She looked to her sister. \"Do you have any words?\" \n\nSasha did, recalling the words spoken at her mother's funeral, and she struggled to remember the words. When they started, they flowed like water: \n\n\"Do not stand at my grave and weep, \n\nI am not there; I do not sleep. \n\nI am a thousand winds that blow, \n\nI am the diamond glints on snow, \n\nI am the sun on ripened grain, \n\nI am the gentle autumn rain. \n\nWhen you awaken in the morning's hush \n\nI am the swift uplifting rush \n\nOf quiet birds in circling flight. \n\nI am the soft star-shine at night. \n\nDo not stand at my grave and cry, \n\nI am not there; I did not die.\" \n\n\"That was beautiful,\" Eydiir commented softly. \"A prayer?\" \n\n\"A poem, ancient, written for someone who could not visit the grave of a loved one. It's a reminder that no one ever really dies, so long as the people who knew them, and the good that they have done, live.\" She frowned to herself. \"I suppose I should visit my mother's grave when we get to Earth. I hadn't thought about it until now. I'm not religious, but... it feels respectful.\" \n\nEydiir nodded. \"I will accompany you, if you like.\" \n\nSasha smiled. \"Thanks. That'd make it easi...\" Her words trailed away as she noticed the growing darkness, and she glanced up, just long enough to see Capella's moons eclipsing the suns, before looking down again. \"You warned us about that.\" \n\nThe world seemed to grow still, as if joining them in mourning. \n\nThen Eydiir's head shot up again, eyes narrowing as day turned to night, and she rose and raced silently along the slope, keeping low. After a moment's bemusement, Sasha rose and followed. \n\nShe caught up with her friend, who held up a hand for silence, peering around the corner of a rockface, nodding outwards. \n\nSasha took the hint and peered around as well -- just long enough to see dozens of Capellans moving swiftly and silently through the hills, swords drawn, in the direction of the Satiiri encampment. \"Who are they?\" she whispered. \n\nEydir scowled in contempt. \"Prees Tribe. Using the eclipse as an opportunity to attack the Satiiri. We must warn them.\" \n\n\"Wait.\" When Eydiir stopped, looking impatient, she explained, \"This can be seen as an internal political matter. As Starfleet, we can't interfere!\" \n\n\"If they succeed in entering the camp,\" Eydiir informed her, \"Their targets will not only be my father, but my infant brother. But if you do not wish to get involved, I'll understand-\" \n\nFor a moment, Sasha considered calling the Surefoot for help -- but knew that the most likely outcome would be their being beamed onboard, and kept from warning the Satiiri. Instead, she replied, \"Never mind, let's go.\" \n\nAs it turned out, the darkness from the eclipse, and the longer route they had to take to avoid being spotted by the Prees raiders, meant that it took interminably longer, and by the time they reached the slope where they had first beamed in, and saw the camp, they realised they were too late; cries and movement, and the sound of clashing blades filled the air. \n\nFrom the rocks to their left, Prees raiders wearing purple sashes leapt down, swords drawn. Eydiir drew one of her own, but the unarmed Sasha had to duck and dodge her attacker, before delivering a vicious kick from her K'Gressor training, sending him down as she readied to take his fallen sword- \n\nUntil she felt the quantum swaddle of a transporter beam envelop her, and she looked up in time to see Eydiir vanishing as well... \n\nEydiir and Sasha came into existence on the Transporter Pad, Eydiir almost tripping over her feet as she continued to rush forward before stopping herself, aware of the sword still in her hand. She glanced around, seeing Hrelle and T'Varik standing there, and Chief Grev operating the Transporter console, and focused on the Captain. \"Sir, something's happening down there- a blood feud-\" \n\n\"We know,\" Hrelle confirmed. \"The sensors picked up the activity around you.\" He glanced at Sasha critically. \"I'm surprised you didn't call us for a beam-out yourselves.\" \n\nEydiir's heart raced. \"My father- my brother- Captain, send me back down-\" \n\n\"Absolutely not,\" T'Varik interrupted. \"Regardless of your personal connection, this is an internal political matter, and we cannot interfere.\" \n\nThe Capellan cadet stiffened, acknowledging the truth of the statement from the First Officer -- and then casting it aside. \"I cannot stay here, Commander! Kaas is Teer of the Satiiri, they will kill him! And my brother! I have to help him!\" \n\nThe Vulcan stiffened. \"I am sorry, Cadet, but Regulations, and concern for your safety, must be paramount-\" \n\nEydiir turned back to Hrelle, eyes wide, pleading. \"Sir- please- I beg of you- I can't let anything happen to them! THEY'RE MY FAMILY!\" \n\nThe Caitian regarded her for a moment, before turning to T'Varik. \"Report to the Bridge.\" \n\nShe looked to him. \"Sir?\" \n\n\"Monitor our cadets and crew at the Visitors' Centre, make sure this doesn't affect them. Go.\" He looked to her again. \"Now.\" \n\nT'Varik looked ready to protest, before nodding, turning and departing. \n\nThen Hrelle moved to the console, setting the controls himself, before removing his phaser and handing it to Grev. \"You're not seeing any of this, Chief.\" \n\nThe Tellarite accepted the weapon and drew back. \"Of course not, Sir. Blind as a Tiburian bat, that's me. But of course I'll be here for when you're ready to return.\" \n\nThen Hrelle strode up to the Transporter pads, motioning to Eydiir. \"Come on, I'm sure I heard a call for medical assistance down there.\" \n\n\"Sir?\" \n\n\"I have very good ears.\" \n\nSasha watched them, stepping forward. \"You'll need help-\" \n\nBut Hrelle held up a hand, as Eydiir returned to an adjacent pad. \"No. We won't.\" He looked to Eydiir as the console beeped, confirming the imminent beam-out as per his instructions. \"We'll appear back where we picked you up, but be ready for anything.\" \n\nShe nodded, raising her sword again as they vanished. \"I always am, Sir...\" \n\n* \n\nThe eclipse was ebbing, the light growing over the chaos in the encampment, as Capellans in green and purple sashes fought with swords and blades and occasionally a flung kleegat, while others carried children away and tents caught fire as they collapsed in the melee. \n\nHrelle took in the scene instantly, his claws bared, given his lack of phaser and unwillingness to pick up a discarded Capellan weapon, and followed Eydiir, dodging around tents and fights, approving of her focus on getting to her family and not joining in defence of anyone else. This would be a nightmare to sort out later, he knew, but at the same time, he owed it to the young woman who had risked her life repeatedly in defence of his own family. \n\nHe turned, stopping as he saw the tall Capellan with the purple sash draw back his arm and fling the kleegat towards a Satiiri child standing there alone and unprotected, and he raced to intercept it, the blade slicing through the air with a high-pitched whistle that made Hrelle's ears twitch, even as one of the three curved blades on the weapon pierced his chest with amazing ease, penetrating his uniform, fur, skin and pierce his heart, makign it gasp in shock, and begin the swift descent into death- \n\nHe turned, stopping as he saw the tall Capellan with the purple sash draw back his arm and fling the kleegat towards a Satiiri child standing there alone and unprotected, and he raced to intercept it, the blade slicing through the air with a high-pitched whistle that made Hrelle's ears twitch... until he swung out, smacking the weapon out of the air and sending it to the desert floor. \n\nThe Capellan who threw it stared in naked astonishment at the unprecedented move. \n\nAnd then, as Hrelle roared at him defiantly, he went to find someone else to fight. \n\nHrelle glanced down; his hand was bleeding from the move, but he supposed it was better than the alternative. \n\nYeah, go stroke yourselves, Prophets. \n\nSeveral of the Satiiri who had witnessed it raced in to collect the child, saying nothing but looking at Hrelle curiously. Then he returned and caught up with his crewmember, just as she was entering her father's tent. There were no raiders here, but Kaas was on the floor, kneeling, doubled over, his face grimacing in obvious pain, teeth bared -- while above him, his brother Coord stood, sword drawn, ready to bring it down onto the man's neck. \n\n\"NO!\" Eydiir charged forward and attacked, driving her uncle back. The tent filled with the noise of clashing steel, Coord's strength and experience matched by Eydiir's youth and fury. Hrelle moved around them and knelt to examine Kaas, recognising from personal experience the effects of cardiac arrest, and smacked his combadge. \"Surefoot! Lock onto our badges and the man beside me, and beam us directly to Sickbay! Now!\" \n\nCoord heard, and stopped fighting. \"No! I'm trying to help him! Don't!\" \n\n* \n\nHrelle readied for their near-instant displacement into the receiving area of Sickbay, lifting up the Teer and placing him on the nearest biobed, as Masterson, Scarlo and several other staff members moved in. Hrelle stepped back, moving to Eydiir and stopping her from approaching. \"Give them a moment.\" \n\n\"No! He's my father-\" \n\n\"Which is why you're definitely not working on him. Go get changed and put away those weapons.\" After a moment he clarified, \"That's not a suggestion, Cadet.\" \n\nThe Capellan, breathing hard and still adrenaline-pumped, gasped and swallowed, before nodding and departing. Hrelle stayed back, catching a strange scent on his hands, and lifted them up to examine it more closely -- frowning at what he picked up: illness. Caitians could detect certain diseases on others from scent alone, though thankfully he lived in a time and place where such occurrences were rare, but he had enough experience during his time as a slave to recognise it. And he knew it was from Kaas. \n\nHe kept watching, acknowledging Kami and Sasha entering Sickbay, his wife noting the cut on his hand and silently retrieving an autosuture, leaving the medical staff to focus on the more critical case before him. \n\n\"What happened?\" Sasha asked. \"Eydiir's baby brother, did you-\" \n\n\"I don't know,\" he replied. \"I didn't see him, or his mother. Hopefully they made it to safety before we arrived.\" Now he looked at her, his expression taut. \"You were heading back to the camp when the attack happened. Not contacting us, not seeking advice-\" \n\nShe nodded guiltily. \"Eydiir said in such raids, they kill not only the Teer but the Teer's children. Her little brother was in danger-\" \n\n\"Yes, her little brother. Not yours.\" \n\n\"That's absolutely right,\" Kami agreed, finishing up her repairs on his hand. \"Sasha's little brother is Misha. Whom Eydiir saved, more than once. Along with me.\" \n\nHrelle shot his wife a dirty look -- mostly because she had a point -- and dropped the matter. \n\nEydiir joined them again, her eyes on Masterson as the doctor approached her. \"Your Pa's got no battle injuries, but he did suffer a cardiac arrest relating to an inherited genetic condition.\" \n\nShe blinked. \"A genetic condition?\" \n\nHe nodded. \"Something similar to Marfan Syndrome, an old Terran disease of connective tissues whose symptoms and severity varies, but which typically affects the skeleton, the circulatory and immune systems. It's an inherited disease passed through the males in a particular lineage.\" \n\nEydiir's face grew haunted. \"My older brother Straad... he died of a fever that shouldn't have claimed him... unless his immune system had been compromised by this condition. A condition no one was aware of.\" \n\n\"How is Eydiir's father now, Doctor?\" Kami asked. \n\nMasterson glanced back, noting the readings on the sensor panel over the biobed. \"We've stabilised him, but he's still very weak.\" \n\nHrelle nodded, looking back at Masterson. \"And what's the prognosis?\" \n\n\"Well, the genetic treatment for it is easily done, but without it, he probably won't recover from this last attack.\" \n\nThe Capellan nodded. \"Then you may proceed.\" \n\nMasterson blanched. \"Hold up, Tiger. I might not be the brightest star in the sky, but I do know how Capellans feel about medicine.\" He nodded back to the patient. \"And he's not gonna want treatment.\" \n\nEydiir raised her chin. \"I am his next of kin. I am authorising it.\" \n\nMasterson blinked, conflicted, before looking to Hrelle. \"Captain, I'm not comfortable with this, not a lick of it.\" \n\nHrelle looked at the faces around him, finishing with the defiant, afraid Eydiir, before finally replying, \"Unless you have something on file from Teer Kaas specifically refusing any medical treatment, I suggest you accede to the wishes of his next of kin. I'll put a note on record approving it, and accepting responsibility.\" \n\nMasterson still looked dubious, but turned back to his staff. \"Scarlo! Fire up the sequencer! I want to get all this cleared up while we've got him under!\" \n\nEydiir relaxed, a little. \"Thank you, Captain.\" \n\nKami drew in, putting an arm around the girl's shoulder. \"Don't expect your father to be as grateful.\" \n\nThe girl steeled herself. \"I didn't do this for his gratitude. I did it...\" She seemed to deflate. \"I did it because... I can't see him die as well. I love him.\" Then he looked to Hrelle. \"Captain, I have to go back down and look for Talaak! Make sure he's alive!\" \n\nShe had started towards the door, presumably to the Transporter Room, but Hrelle reached out and grabbed her by the arm, halting her. \"No. You're staying here and keeping an eye on your Dad. I'll go down; I'm the senior representative of Starfleet, I know what he looks and smells like, they've met me already, and they'll respond better to me than to some hotheaded cub.\" At her defiant expression, he clarified, \"This isn't a suggestion, by the way.\" \n\nEydiir tensed, but then relaxed and relented. \"Yes, Sir.\" \n\nHe let her go, looking to his wife and daughter. \"Don't tell T'Varik I've gone back down until after I've left, you know what a nag she is.\" \n\nKami crossed her arms. \"What, you mean about complying with Starfleet Regulations and setting good examples to the cadets and all that? Oh, yes, she can be such a bitch about that.\" \n\nHrelle rolled his eyes as he departed. \n\n* \n\nHe returned to the original beam-in point outside of camp, instantly assessing that the battle was over, something verified beforehand by the ship's scanners. Smoke rose from smouldering tents, and the dead of both sides were being stacked outside of the encampment, for disposal later. \n\nSome started at his presence, but others recognised him -- and a few showed silent gratitude when he stopped to assist in shifting heavy boulders that had evidently been rolled down by the raiders from the slopes as part of their attack. Then he proceeded to the Teer's tent and entered without ceremony, relieved to see Coord there with Liira and a mewling bundle in her arms. \n\nTheir reaction was less cordial, the young woman baring her teeth. \"You! What have you done with my husband?\" \n\n\"Teer Kaas is safe onboard my ship, being treated for his condition.\" \n\n\"Condition? What do you mean?\" \n\n\"Don't play coy with me, you know what I'm talking about.\" He looked to Coord. \"You both do. That's why you were going to kill him during the raid, when he couldn't fight anymore. You were going to give him a death worthy of a Teer.\" \n\nCoord didn't respond, but Liira did, snapping, \"How dare you? My husband is not weak! Coord! Kill him for his insults!\" \n\nHrelle approached them. \"Kaas is not weak. If he has a fraction of his daughter's qualities, then he's a formidable man, and I'm looking forward to getting to know him when he's better.\" \n\nThe girl's face was a mask of indignant fury. \"Coord! I am the Wife of the Teer! I order you to kill him!\" \n\nBut the man eyed Hrelle warily. \"He has... asked for your help?\" \n\nHrelle kept his hands behind him casually as he focused on the infant in Liira's arm, leaning in slightly. \"No. He's not able to respond. Eydiir gave permission on his behalf to cure him. He'll be back with you soon, completely healthy.\" He sniffed. \n\nAnd smelled the same disease on the child as he did on the father. \n\n\"She did that?\" Liira spat. \"She robbed him of-\" \n\nhe looked up at her. \"Of what? The right to die needlessly? When he returns he'll be stronger, healthier, more fit. Better able to lead, to fight.\" He leaned in again and waggled his fingers at him, making the infant smile. \"To be a father. Isn't that what you want?\" \n\nLiira drew her child back, as Coord explained stoically, \"The sick are weak. They live or they die. That is our way.\" \n\nHrelle looked back at him, not wanting to antagonise the young mother any further. \"Ways are strange things. We follow them for generations, often forgetting the original reasons for following them. Klingons made a taboo of bathing because of a parasite in their homeworld's waters. Humans gave blessings to people who sneezed for centuries after discovering the cause of illnesses to be germs rather than demons. My own people began hugging each other to check for the scent of illness in strangers-\" ",
        "\"What does this have to do with us?\" Coord demanded. \n\n\"Your people developed this taboo about the sick because long ago, you had limited resources and knowledge; you couldn't afford to devote too much time and effort, and in the case of diseases, you might have had to protect the rest of your tribes from infection. \n\nBut that's no longer the case. The Federation is willing to offer any medical help to you, individually or collectively, and ask for nothing in return. And I know the offer has remained open for the past century, but you've hobbled yourselves with this idea, one that is no longer relevant. Naturally, you have the right to think and behave as you choose -- this has long since been established, and it will not be challenged by us -- but you also have the right to change how you think and behave. Bear that in mind.\" He breathed out. \"If either of you wish to visit my ship, to see the Teer-\" \n\n\"No!\" Liira retorted sharply. \n\nCoord raised his chin. \"Until the Teer is returned, Talaak is Teer, and Liira and I are his guardians. Return him to us, Starfleet.\" \n\n\"And keep that coward Eydiir away!\" Liira added. \n\nHrelle looked to her again, his expression tight. \"You're very free with that word when speaking about my cadet. Try to curb that freedom in future. Oh, and by the way, your son has the same disease as his father; without treatment, he'll eventually suffer and die. Still, the sick are weak, they live or they die. That is your way.\" He took in her shocked reaction, and tapped his combadge. \"Hrelle to Surefoot: one to beam up.\" \n\n* \n\nHrelle stayed in the rear of Sickbay, able to hear Eydiir with her father at his biobed, but giving them physical space as the Teer awoke. \n\nHe opened his eyes groggily, but swiftly recovered, sitting up, confused and anxious. \"Where am I?\" \n\nEydiir set a reassuring hand on his. \"On my ship, Father. I had you brought up here, to be treated.\" \n\n\"My tribe- Talaak, Liira-\" \n\n\"They drove off the Prees, and Captain Hrelle confirmed Talaak and Lirra are alive and well.\" Her smiled dropped. \"Well, alive, anyway.\" \n\nHe frowned. \"What does that mean?\" \n\n\"There is a... condition in your bloodline, Father. It is passed from father to son. Straad had it; it is what weakened him enough to make the fever he contracted claim his life. It affected you, in your tent, today. And it will affect Talaak as well, in time.\" She smiled again. \"But it's okay, Father. We cured you. And we can cure Talaak-\" \n\nHe pulled his hand from her, his expression taut. \"Why have you done this?\" \n\nShe was caught off-guard. \"What? I- I came back to help you, Father-\" \n\n\"Do not call me that. I told you before.\" He rose you to his feet, reached for the outer robes of his that lay across an adjacent chair. \"You are Starfleet now. They have told us time and again that they would not interfere in our ways. I see now their words are false.\" \n\n\"No! They did not want to do this! This was my decision! I take responsibility! I did it to save your life!\" \n\n\"You had no business doing so.\" \n\n\"I had every business! I am your daughter! I may want to pummel you, but I still love you! And I can't lose you! I-\" Her own expression faltered. \"Seeing Straad's burial place was- I can't lose anyone else!\" He glared at her. \"I wish to return to my tribe.\" \n\n\"Wait!\" She held up a hand, her anger and anguish now eclipsed by anxiety. \"Talaak! He will suffer and die without treatment! He needs our help!\" \n\n\"No.\" \n\n\"Please! Be mad at me, never speak to me again, but don't let him pay the price! I beg of you, Father-\" \n\n\"I told you not to call me that. Allow me to leave in peace, and this will not go any further.\" \n\n\"Father!\" \n\n\"Eydiir,\" Hrelle interjected, stepping forward. \"You have done all you can. He has to return to his people.\" \n\nShe looked to him, eyes welling up in frustrated tears. \"Captain, please- make him see sense- we have to save Talaak!\" \n\nHe set a hand on her shoulder. \"No. The Teer is correct, we have interfered enough already. Step back.\" \n\nEydiir shook in place with frustration, looking between each of the men in turn, before turning and storming into the nearby Isochamber and screaming and pounding the transparent walls, ignoring the looks from the medical staff who had finally emerged from the neighbouring rooms - and ventured back in again. \n\nHrelle looked to Kaas, motioning to the door to the corridor outside. \"This way, Teer.\" \n\nThe Capellan started as the door slid open, and then peered curiously at the crew they passed, as Hrelle guided him in the direction of the Transporter Room. \"You'll have to excuse her. She loves you, and her brother- the death of Straad struck her so much.\" \n\n\"She is weak,\" he replied simply. \n\nHrelle stopped in place. \n\nHe stopped and stared at Kaas until the man stopped and turned, frowning. \"What is it?\" \n\nThen Hrelle rushed up, grabbing the Teer and dragging him into an adjacent room, a stark, empty enclosure of black walls and floor and yellow gridded patterns. He flung the man forward until he stumbled, but recovered quickly. \"You chur-ah! You invite Death here!\" \n\nHrelle stepped forward, letting the Holodeck doors close and lock behind him. \"Big deal. I know Death so well we're on a first-name basis.\" He bared his claws and teeth. \"Let me introduce you to him.\" \n\nKaas hunched forward, taking a defensive stance. \"I know Death too, Captain. But be warned: I am stronger, more dangerous than I have ever felt.\" \n\n\"Yes! Because of your daughter.\" \n\n\"I have no daughter any more!\" he declared loudly. \"Take her! She is yours now! She dresses and talks and acts like you! And she calls your daughter Sister already! You want her!\" \n\nHrelle lowered his arms and straightened up. \"Is that it? You think I've... claimed her as mine? After all she's said to you, the risks she took to save your worthless hide?\" \n\n\"Do not deny it! I saw the anger in your eyes when I called her weak!\" \n\nHrelle nodded. \"Yes. I was angry. Because I am protective of her. I owe her. And because I know how wrong you are about your daughter.\" \n\n\"No!\" he sneered. \"She is weak! And she is no longer my daughter!\" \n\n\"Who are you trying to convince? Me or yourself?\" Hrelle asked, before announcing loudly, \"Computer: activate Program Capella One.\" \n\nSuddenly the black and yellow grid interior of the room was replaced by the rocky terrain of Capella IV, all stark outcroppings and shrubbery beneath an icy blue sky where moons and suns fought for dominance, and a wind ran through the gulley where they stood. \n\nKaas gasped, glancing around in shock. \"Did you- are we back on my world?\" \n\n\"No. This looks, sounds and feels real, but none of it is. In this room, we can... recreate different places, times, even people. We use it for recreation, and for education. I'm interested in the latter. Your education.\" Louder now, he announced, \"Computer: Load USS Surefoot Sickbay Security Recording, Stardate 45633.7. Prepare but don't play.\" \n\nThe desert terrain vanished, replaced by the room on the ship where they had stood minutes before, only appearing wrecked: the Isochamber windows were cracked, Kami stood inside it, cradling an infant Misha, and a large green serpentine creature held a chair over its head. On the floor, the bodies of another serpentine creature and a human female lay. \n\n\"What- What is this?\" Kaas asked. \n\n\"A recording of an event that happened on this ship last year,\" Hrelle explained soberly, stepping around the motionless figures in the simulated room. \"These monsters are Vlathi, assassins sent to kill my family and me. I was trapped in another part of the ship, my wife and son were in here, facing these... things... alone.\" \n\nHe faced Kaas again, indicating the woman's body at his feet. \"This was my former Chief Medical Officer, Juliet Ling. She betrayed us, but redeemed herself by protecting my wife and son in that room, and killing one of the Vlathi, at the cost of her own life. She bought my family time, but the Vlathi were still determined to kill them.\" He paused and said aloud, \"Computer: commence play.\" \n\nKaas started as the Vlathi by the Isochamber came to false life, slamming the chair in its hands against the transparent aluminium windows, again and again -- making the fractal pattern it produced expand with each blow, as it continued to hiss and screech. Inside, Kami hugged a crying Misha tighter, whispering reassurances that she couldn't support. \n\nThe hole in the window grew. \n\nThen something behind the Vlathi caught Kaas' eye, and he turned to see a figure race in from the corridor beyond \"Eydiir!\" \n\nThe hologram of the girl rushed in, wielding her twin Capellan short swords, and without hesitation she drew up to the creature, yelling as she struck out, cutting a slice in the Vlathi's tail, making yellow-red blood geyser up. \n\nKaas held up a hand. \"Eydiir!\" \n\nHrelle moved around the images. \"They can't see or hear us, they're not alive. But all that you see here happened here.\" \n\nThe Vlathi turned away from the Isochamber to face the cadet, its injured tail twitching, appearing useless from the damage inflicted upon it, the attacker hissing in rage and pain. \"Earther scum! I'll make a feast of you!\" \n\nKaas took a defensive posture himself as the creature moved, and Eydiir backed away slowly, deliberately, letting it draw closer -- and further away from the Isochamber door -- as she kept one blade pointed at the Vlathi. \"I am not an Earther. I am Eydiir, Daughter of Kaas, of the Ten Tribes of Capella. And you will not have that mother and child today! I SWEAR IT!\" \n\n\"Daughter of Kaas,\" Hrelle repeated. \"Your daughter. Of Capella, not Starfleet.\" He pointed to one end of the Sickbay. \"She was diverting the Vlathi to give Kami and Misha a chance to escape.\" \n\nThe Teer watched, as the Eydiir hologram pointed with her other sword to an open conduit. Kami and Misha left the Isochamber secretly, sneaking around behind the Vlathi. \n\nAnd the Vlathi sensed their presence, turned, hissed and attacked. \n\nUntil Eydiir exploded into astonishing action, using both swords now as she became a blur of limbs and Capellan steel, striking out at the Vlathi as she screamed at it, forcing it to focus fully on her, using the chair as a shield, sparks flying.  \n\nThe creature struggled, its speed like quicksilver, as it shot its head forward, driving its fangs into the girl's arm. \n\n\"DAUGHTER, NO!\" Kaas cried out. \n\n\"Computer, Freeze Program!\" Hrelle ordered. \n\nThe world stood still. \n\nHrelle saw the raw emotion on the Teer's face -- then moved forward, grabbing the Capellan by his robes and drawing him closer, to see the pained, determined, defiant expression on Eydiir. He pointed to her. \"Look at her. LOOK AT HER. Is that the face of a weakling? A coward?\" When Kaas didn't respond, he barked, \"IS IT?\" \n\nKaas swallowed. \"N-No...\" \n\nAnd Hrelle saw something he hadn't seen before from a Capellan. \n\nTears. Tears of shame. \n\n* \n\nThe rest of the Sickbay staff gave Eydiir a wide berth, as she kept herself busy running diagnostics on the medical tricorders and sensor wands, keeping her back to the Universe- \n\n\"Daughter.\" \n\nThe word, the voice, made her freeze, turning in place to see Kaas, entering the room, with Hrelle standing nearby. She set down her equipment, standing formally, her voice cold. \"May I help you, Teer Kaas?\" \n\n\"Yes.\" He drew closer, and as he did Eydiir regarded him curiously, seeing a change in his posture, in his eyes. \"Can you... can you forgive a stubborn, foolish old man, for trying to drive away his brave, beloved child?\" More softly he added, \"Please, Daughter?\" \n\nShe gasped, swallowing as she met him. \"You... you call me Daughter again?\" \n\nHe nodded, looking tearful again. \"If you'll allow me that honour?\" \n\nHer anger and grief bled quickly from her, as she embraced him. \n\nHe held her back tightly -- but leaned in and asked, \"And would you help your brother, too?\" \n\nShe nodded in reply against his shoulder, too overcome to speak. \n\n* \n\n\"USS Surefoot-A, Captain's Log, Stardate 55691.24, Captain Esek Hrelle, recording: we have delayed our departure from Capella IV, so that our cadet, Eydiir Daughter-of-Kaas, can fulfil the wishes of her tribe's Teer, and treat her infant brother for a genetic illness, as well as examine many of the others in the tribe for any similar diseases and injuries. No one is being forced to accept medical help... but I am told that many who have responded quickly and favourably to their treatments have inspired others to accept. I know it will be difficult for them to change their ways... but they are nomads, after all. They should be used to moving in new directions.\" \n\n* \n\nEydiir drew back from the gurgling infant in Liira's arms. \"He has recovered fully. You have a healthy child again.\" After a moment, she added, \"You have done nothing wrong. No one has. The illness was no one's fault.\" \n\nThe other girl merely grunted in reply. \n\nUntil Kaas, standing nearby, looked at her and added warningly, \"My wife...\" \n\nLiira steeled herself and added, \"I... thank you for your service to the tribe, Eydiir. And to my son.\" \n\nEydiir indulged in a smirk. \"You're welcome... Stepmother.\" \n\nAs Liira reacted to the realisation of their relationship. Eydiir turned back to her father. \"I must leave soon. I wish there was more time.\" \n\nHe shook his head, smiling. \"Your path is in the stars. And I shall look up to them each night and wish you life, honour and victory.\" He sobered. \"Before you go, though... would you show me where Straad is buried? I would... pay my respects to my son. For our love. And for helping make you the fine daughter I have back today.\" \n\nShe nodded, hugging him again. \n\n* \n\nOutside, Hrelle and Sasha stood at the edge of a huge clearing at the centre of the tribe's encampment, where several Capellan children played with a delighted Misha, racing around, chasing each other in some games whose rules, if there were any, were known only to the toddlers. Hrelle grinned in delight. \"He's loving it. That makes me so happy.\" \n\nSasha smirked. \"That, and the fact that he'll be exhausted after this and sleep uninterrupted for hours.\" \n\n\"Damn right.\" \n\n\"How did you manage it? Getting the Capellans to let him play with their children?\" \n\n\"Partly there are those who saw me helping save one of their children. Mostly it was Misha himself: I just brought him down, and let the parents meet him, and fall for his purrs and smiles. He's gonna be a charmer when he gets older.\" He straightened up proudly. \"Gets that from his father, of course.\" \n\n\"Stay humble, Dad.\" But then she saw something in his expression. \"What's wrong?\" \n\nHe was frowning now, staring at the ground in deep thought, before brething in and finally replying, \"There's something I haven't told you, Sasha. When we obtained that Bajoran Orb, I touched it... and it gave me a vision. A vision of possible futures. Some were... wonderful. Others, less so. Some seemed distant, decades from now. Others felt more... imminent. One of them... involved my death. Mine, and Misha's.\" \n\nShe looked to him in alarm. \"What? What are you talking about? When? Where? How?\" \n\n\"I don't know; visions rarely give you any useful information.\" \n\nShe glanced around, as if something would suddenly drop from the sky and crush her father and brother. \"What in the Seven Hells are you doing about it? What can I do? Just tell me.\" \n\n\"Nothing. I mean it, nothing.\" He faced her, reaching out and clasping her shoulders and looking lovingly into her eyes. \"We're not going to be living in fear of what might be. We'll stay careful, of course, but we would have been anyway even if this didn't happen to me. There's no scientific evidence to confirm that the things I saw will happen, and we're not going to let our lives ruled by them. We'll make our own paths. Okay?\" \n\nSasha didn't look too convinced. He hugged her, feeling more secure now. There had been no Orb Shadows since that moment the other night when they had rescued Kaas. It made him feel more and more now like things weren't destined to be bad. \n\n* \n\nImperial Palace, Planet Skaros: \n\nThe image of Captain Hrelle and an infant Misha in his arms dominated the screen above the stone hexagonal conference table, the grin on the Caitian adult's face seemingly mocking the desperation and frustration dominating the moods of those in attendance. \n\n\"We've been devastated,\" Simon Giger, the head of the Hexad of the Bel-Zon, announced. He was an older pale human of advanced years, lean and with straw-coloured hair and beard and in a plain black suit, and as he spoke, he seemed to double in age. \"I am not being melodramatic. Dumont's capture and execution at the hands of the Son'a, the subsequent Starfleet arrests of our operatives throughout the Quadrant, and the seizure of our assets and personnel, have left us... stranded here.\" \n\nMvulkoh, a Klingon woman with a wicked scar running down the right side of her face from her cranial ridges, cursed. \"That greedy petaQ has cursed us!\" \n\nGiger looked up at the image of Hrelle. \"No. He did.\" \n\n\"How bad can it be, Simon?\" an older Andorian with a drooping antenna asked. \"We're still in the good books of the Skarosians' Imperium, he gives us whatever we want-\" \n\n\"Because we keep that psychopathic little veruul happy with trinkets,\" a thin, scarred Tellarite reminded him, black beady eyes lit with fear. \"With very little in the way of disposable income now, how long will we stay in those good books?\" \n\n\"It's not as if we're broke!\" a fat Bolian sneered. \"Holy Hraxor, we have our own bloody moon here to cultivate Vraxoin!\" \n\n\"But no means now to export it into the Federation,\" Giger reminded him. \"They have increased patrols surrounding the Skarosian system, and inspect and seize our remaining vessels.\" He breathed out. \"We should seriously consider cutting our losses and making our escape.\" \n\nThe Klingon woman grunted. \"If our glorious Imperium allows us.\" \n\nA warning beep from Giger's PADD made him look to the others. \"He's on his way here.\" \n\nThe six of them rose and walked to the centre of the room facing the tall twin doors, dropping to one knee. The doors were pushed open, and a dozen huge armed and armoured reptilian Skarosians entered, flanking out wide and allowing a single small figure to enter, preceding by crawling supplicants who quickly and efficiently laid out special carpeted panels so the figure's divine feet would not to touch the same floor as mere mortals. \n\nThe figure itself was short, hairless, with wide round eyes and the scaled, segmented face of his people, and blue and yellow silk clothes that swished softly as he walked, stopping before the six figures in the room. He carried a small, brown, multi-limbed creature that could have been mistaken for a tree branch, until it moved in its owner's grasp, lifting an arrowhead-shaped head, or stretching out its spindly, articulated limbs. \n\nGiger knew to keep his head bowed. \"Imperium, you grace us with your presence once again, thank you for this honour!\" \n\nSonoda, the Imperium, the Living God and Light and Life of Skaros, regarded him. \"You may look at me.\" \n\nGiger raised his head, smiling politely. \"And how are you today, Most Divine-\" \n\n\"Are they dead yet? The animals responsible for killing my Vlathi assassins?\" \n\nGiger kept his responses measured, careful; their exalted position as allies of a twelve-year-old absolute ruler of an entire planet was built on a house of cards, and could topple with a capricious change of their host's attitude. \"Unfortunately, Imperium, not as yet. We are having difficulties with-\" ",
        "Sonoda's eyes narrowed. \"I told you I wanted them all dead. Burned. Broken. All of them! Them and their families!\" \n\nGiger nodded anxiously. \"Of course, Imperium, as do we. But many of our resources outside of your glorious system have been taken from us. But I promise you, Hrelle and his bastard clan have interfered with us for the last time-\" \n\n\"What's that?\" the boy suddenly asked, looking up in interest. \n\nGiger followed his gaze to the image. \"That's Captain Hrelle, the Starfleet officer responsible for-\" \n\n\"No, you idiot! I mean the thing in his arms!\" \n\nGiger blinked. \"That? That is his son, Imperium.\" \n\nSonoda smiled. \"It looks cute. I want it as a pet.\" \n\nThe human head of the Bel-Zon chose his next words very carefully. \"Imperium, it's a child. Children make for very poor pets. Even Caitian ones. They're no fun.\" He offered a conciliatory smile. \"Besides, you wouldn't want it around, you have so many pets already, like your Corvan gilvo there, a very rare creature indeed. They could get jealous-\" \n\nHe stopped talking, as he saw the change in the young Imperium's eyes to his gentle attempt at dissuasion. \n\nThen he winced as Sonoda's hands squeezed tighter around his pet. Then he drew back as Sonoda grabbed one of the gilvo's limbs and began twisting and tugging. The gilvo screeched in pain and tried to escape the torture, but Sonoda gripped it tighter, wrenching the limb out of the body completely and tossing it aside. \n\nThen he turned and slammed the gilvo down head first onto the edge of the conference table, again and again. It screeched once, but then once, as its carapace cracked open and blood and innards splattered out. \n\nFinally the Imperium dropped the remains of the gilvo to the floor and began stomping on it, spreading what remained around him. \n\nHe shook with rage as he glared at Giger, breathing rapidly. \"I WANT THE CAITIAN BABY!\" He looked back up at the picture of Misha, his eyes wide with opportunity. \"I want to play with it...\" \n\nTHE ADVENTURES OF THE SUREFOOT WILL RETURN IN... CLASS OF 2372"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "star trek fanfic",
        "star trek fan fiction",
        "surefoot",
        "caitian",
        "capellan"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-29-daughter-of-kaas"
}