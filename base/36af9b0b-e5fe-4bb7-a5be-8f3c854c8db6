{
    "title": "Corpulent Carl",
    "pages": [
        "This is based on a true story, and is written with the permission of those involved. Obviously, a good bit of artistic license has been appropriated for dialogue, and it is written in the first person in Carl's stead. Names have been changed to protect the identities of all involved.\n\nIf you are looking for a quick jerk or a lot of wild sex please do us both a favor and move on. No sexual activity occurs between underage people.\n\nThis story deals with some very touchy and sensitive issues. I hope you will read it accordingly with an open mind.\n\nConstructive comment are always welcomed! I respond to all emails with an address. Anonymous comments obviously cannot be responded.\n\n*****\n\nCarl is my name, but that isn't what most people call me. Tubby, Toby or Toby-lard, fatty, Lard-butt, Hugo -pronounced huge-o - and even worse were what I was called. \n\nI've always been big. In first grade I was three inches taller than anyone else in my class, and weighed twenty pounds more than the heaviest kid. In fact, I was bigger than most third graders. By the time I got to eighth grade I was already six-one, but I weighed in at two hundred ninety-five pounds. Then I hit a growth spurt, and reached the height of six-eight at the beginning of my freshman year. I also hit four hundred fifty pounds, en route to my high weight of four eighty by the end of my sophomore year. \n\nNeedless to say, sports were never an option. I pretty much hid myself away in the house when I didn't have to go to school, and I missed as much school as I could. The constant torment and abuse from other kids in the school was sometimes more than I could bear. I seriously considered suicide when only in the sixth grade and even my teacher started mocking me. Mom didn't believe it when I tried to tell her my teacher was abusing me until I snuck a recorder into my desk one day and taped the teacher calling me \"Fatty\" and telling me I would never amount to anything.\n\nMom took the tape to the Principal, but he just tried to blow it off, so Mom called a lawyer and filed a lawsuit. I transferred to another school, but the only thing that really changed was where I got called names, not the names themselves.\n\nIt was about this time I found music, in particular, the piano. Mom found a teacher for me, and since I was burying myself in the house anyway I spent hours a day playing it. Needless to say, by the time I hit High School I was quite proficient, but I never let on. I thought that would just be something else for everyone to mock. When no one was around I also sang while I played, but I wouldn't even let Mom hear me sing. \n\nWhat I didn't know was my next door neighbor, Annie Gibbons, could hear me practicing and singing when I had the windows open, and she thought I sounded good. Annie was a real sweetheart of a girl. She and just a very small handful of others were the only ones who didn't make fun of me, but since I transferred schools we didn't go to school together anymore. That is, we didn't until High School. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMy high school required us to take fine arts of some sort every year, and I wasn't about to get up in front of a crowd and make a speech or act, so I joined the chorus. Of course I had to take the mocking that I would collapse the risers. I didn't want to stand out, and I was really somewhat embarrassed about my voice. I didn't think it was all that good, so I just sang along with the others, having no trouble with learning my parts due to my piano training, but I always sang softly, and very few even heard me.\n\nThe third week of school my sophomore year is when things started to change somewhat, although I didn't like it when it happened. Mr. Simon announced the mid-winter (formerly known as Christmas) concert would be made up of small groups rather than the entire choir. It would be up to us to come up with our own groups or solos. That was entirely the last thing I wanted to hear! No way in the world did I want to do a solo, but I knew no one would want me in a group with them.\n\nQuite a few of the chorus gathered amongst themselves, but as expected no one approached me. Imagine my surprise, shock even when Mr. Simon asked for at least preliminary groupings and I heard Annie's sweet voice speak up. \"Mr. Simon, I'd like to sing a duet with Carl.\"\n\nOf course, that set off a firestorm of jeers and jibes that totally drowned out Mr. Simon's attempt to restore order. I sat off in a corner of the room trying to be as inconspicuous as possible. Obviously, that was not very successful. Fortunately, the bell rang and most of the students beat it for the exit since it was last hour on Friday.\n\nI sat there with my head down, trying desperately not to let out the tears that were dammed up behind my tightly closed eyelids. It wasn't fair! I didn't ask to be born big, nor to grow even bigger to stand at seven feet one inch and four hundred twenty-five pounds. The thing was, I wasn't really all that fat! Sure, I carried some extra, but percentage wise, not as much as some.\n\n~~~~~~~~~~~~~~~~~~~~~~~~ \n\nI let out a long sigh of frustration when I heard the last ones leave the door, and rubbed my eyes to be certain no tears would show on my cheeks when I felt a soft touch on my shoulder. I shrank within myself, just waiting for whatever cruelty someone had devised for me now.\n\n\"I'm sorry I caused everyone to laugh at you, Carl. I didn't mean to.\"\n\nSurprised I lifted my head slightly and opened an eye a crack to see Annie standing there next to me with a tear dripping from her chin. \"Why are people so mean? I just don't understand it! You've never done anything to anyone ever, but they treat you like this. I'm so sorry!\"\n\nI just dropped my head, nearly losing control of my emotions. Annie was the first person ever to say something nice to me at school that I could remember. I mumbled something about it being OK, but she stamped her foot and nearly yelled at me, \"No, it's not OK!\" My head popped up, eyes wide, as I stared at her. I was awestruck! For the first time in my life I had someone other than my mother coming to my defense and telling me I was something worthwhile.\n\n\"Look, Carl, I remember I used to think you were a pretty cool guy back before you had to change schools, and then I never saw you anymore, because you would always close yourself up in your house when you got home. I could hear you practicing the piano, though, and singing. You don't know how many days I would sit in my window just to listen to you play and sing. In fact, that's why I signed up for Chorus this year instead of acting. I wanted a chance to sing with you and to see you again. Even though we live right next door I never see you!\"\n\nLet me interrupt my account of what happened to tell you a little bit about Annie. She stands a whole five foot nothing, and there's no chance she weighs over ninety-five pounds. Her hair is as black as a raven's wing, and shines in the light, and she wears it long and straight, nearly down to her waist. Her eyes are a soft green, except when she gets angry, and then they are like storm waters at sea. She has a strong Irish temperament, Black Irish she calls it, and the cutest smattering of freckles across her face that accent her cuteness. Black hair and freckles don't normally go together, but they go well on her. When I looked into those green eyes pooled with tears my heart nearly stopped.\n\nI shouldn't have done it, but I let out some of the hurt I've tried so hard for so many years to hide. \"What will we do? Something from King Kong? You sing while sitting on my arm?\" \n\n\"That's not funny, Carl! I'm serious!\"\n\n\"I'm sorry. I'm not used to anyone wanting to do something with me that isn't intended to mock me.\"\n\n\"I have never mocked you, nor will I. I think you are a wonderful person, but you don't know how wonderful you are.\"\n\nI began to believe, or at least I wanted to believe she was serious, but it was hard. I mean, do you have any idea how hard it was to believe that just maybe there was someone who really cared? I couldn't let my guard down. To do so would only invite more hurt. Every time in the past I tried to open up and let anyone get close to me it happened. \n\nHesitantly, I asked, \"What did you want to sing? A Carol or something?\"\n\n\"Oh, no. I think we ought to do much better than that. You can do so much better. Could we maybe go to your house and try some things? I heard you singing Panis Angelicus a while back, and I think it would make a beautiful duet, or maybe you have some ideas?\"\n\nMe? Ideas? Ideas about singing in front of people? She had to be kidding! I do all I can to not be noticed, as much as you can do at seven-one and four twenty-five. The last thing in the world I wanted to do was get in front of people and do something that would draw their attention and make me a bigger target for their scorn and derision.\n\n\"Mom's not home.\"\n\n\"I know. You quit singing when she comes home. Please?\"\n\nI shrugged. \"I guess. You've got me stuck with this.\"\n\n\"You would rather do a solo? We don't have to do a duet if you don't want to.\"\n\n\"Oh, no, no, no. No solo! I was . . . I don't know. Nobody has ever wanted to do something with me before.\"\n\nAnnie smiled sweetly up at me. \"Carl, that's not true. I've wanted to do things with you for a long time, but I could never get you out of your house. And trust me, once we do this, people will be flocking to do things with you.\"\n\nI snorted derisively, and then I stood up and gathered my things to go home. It felt really strange to walk out the door with a girl, with anybody, really, but in particular with a girl. We only lived three blocks from the school, so we walked it. I noticed Annie's backpack was really heavy for her, so I grabbed it. She looked up at me and gave me a sweet smile, then slipped her hand into mine. Well actually, she held two fingers. Her whole hand would fit into my palm with room left over.\n\n\"Wow! I didn't realize the reach you have! I can't even span an octave, but I'll bet you can do an octave and a half at least!\"\n\nI blushed and nodded. \"A little more than that.\" Nobody had ever commented on my size in a good way before! I'm sure we looked a little funny going down the street, with Annie's head not even reaching my shoulders. I struggled to not allow my normal dark mood to dampen things as I walked home with someone for the first time in my life.\n\nI opened the door for us when we arrived at my house and ushered Annie in to our living rooom, where she was ecstatic over my baby grand piano. It was my baby, given to me by my grandmother for my sixteenth birthday last year. It wasn't new, but it was a Steinway that had been refurbished after sitting basically unused in some rich people's house. My grandmother purchased it at their estate sale and had it refurbished for me. \n\n\"It is so much nicer than my little spinet! I just love it! Play something for me, please.\" She stood looking up at me and I couldn't bring myself to turn her down. I kept waiting for the punch line to the joke, but it never came. \n\n\"What do you want?\"\n\n\"Play your favorite piece.\"\n\nI sat down and started playing Karen Marie Garrett's \"Tip-toe Dancer\". I had to learn this piece by ear because sheet music has never been released. I've written and asked, but she has never released it. When I finished \"Tip-toe Dancer\" I paused only momentarily and started \"Ballade pour Adeline\" written by Paul de Senneville. When I finished I looked behind me to see Annie struggling to look over my shoulder and I saw tears in her eyes.\n\n\"You really put yourself into your music, don't you? That's why I wanted to sing with you. You don't just play music, but it flows from within your heart, from your soul. Thank you.\"\n\nI bowed my head, suddenly shy again. Never before had I played for someone else other than my piano teacher and my mother and grandmother. I've always managed to get 'sick' whenever my teacher held recitals. If it had not been Annie I wouldn't have played for her either, but she has already heard me practicing as she said, and besides, she has been so nice to me today. \n\nWe started playing and singing a number of songs together and just plain having fun learning how to blend our voices together. I was amazed at her musical knowledge, and not just pop stuff either. It ran the gamut from light pop from the sixties and seventies to classical and light classical. We sang some of Karen Carpenter's stuff, John Denver, Rogers and Hammerstein, and then started on some real classical stuff. Panis Angelicus by C\u00e9sar Franck I had arranged for piano and voice for myself, not ever intending for it to be heard outside of this room, but obviously that just went out the window, no pun intended . I sang it self-consciously and Annie blended her voice in. I had no idea she had the kind of musical education she had, but our backgrounds were very similar musically, although I was way ahead of her due to my obsession with music and hiding from society. \n\nI've never had voice lessons as such, but I knew I had a vocal range that fit in either a high Baritone or a low Tenor range, although I could also hit many of the high tenor notes, but not comfortably. Annie on the other hand had a light, sweet lyric Soprano range, easily hitting some rather high notes without strain, singing them without forcing as so many vocalists do, particularly those in the operatic field. When she sang some higher notes all I could think of was the trilling of a bird, and I loved it.\n\nI had not written my arrangement down, so we just sang it together a few times improvising a part for Annie. She insisted she harmonize with me in a descant ranging higher than my notes. I have to say, all modesty aside, it sounded pretty good! We had gotten so deeply involved in the music and the fun we were having singing together I didn't even hear Mom return home from work. She walked in the back door and came through the house without our knowledge and totally startled us when she walked into the room.\n\n\"Carl! I thought I heard the radio, but it was you! Hi, Annie. You two sound really good together! Why didn't I know you could sing like this, Carl? I really thought you had the radio on.\"\n\n\"He does have a good voice, doesn't he, Mrs. Hudson? I used to listen to him sing after school, but he always quit when you came home.\" My face was red with embarrassment. I sang for my own release, not for others to hear.\n\n\"Carl, you shouldn't hide your voice! That is a gift, and it ought be shared.\"\n\nAnnie smiled at Mom and said, \"Oh, it will be!\" I hung my head and turned red again. \"Mr. Simon said our Mid-Winter Concert this year is going to be made up of small groups and solos rather than the whole chorus, and he told us to come up with our own groups. I asked to sing with Carl.\"\n\nMom's eyebrows went up. \"Really? Why?\" She was obviously pleased.\n\n\"Because I've been listening to him sing since back when his voice kept cracking, but I knew even then he was going to be good. Oh, my. I didn't realize it was this late. Thanks, Carl. I had fun.\" She gave me a bright smile and squeezed my shoulder before picking up her backpack and heading for the door.\n\nMom of course had to know all about everything that happened and what our plans were. She was obviously excited that I had found a friend finally, and was thrilled we would be singing in public. Of course she wanted to go out and tell all of her friends and Grandma, but I made her promise to keep it quiet at least until time for the concert.\n\n~~~~~~~~~~~~~~~~~~~~~~ \n\nSaturday morning I was up and doing things around the house for Mom. She has to work a lot of hours as a Nurse Practitioner to keep things together for the two of us since Dad ran off with his secretary several years ago, so I try to help out as much as I can. I had the laundry going and had just started vacuuming the living room when the doorbell rang. I wasn't really dressed for company with just a cut off pair of sweatpants and a ragged old tee-shirt on, but Mom was working and I had to get the door. \n\nI was definitely surprised to see Mr. Simon on the other side of the door when I opened it. \"Good morning, Carl. I normally don't bother my students at home, and especially on Saturday mornings, but I thought I needed to follow up with you on our concert plans for the mid-year. May I come in for a couple of minutes?\"\n\nMr. Simon was cool. In fact, he was the only teacher I had that really cared about those of us in his class, and he is the only one who would not allow the others to pick on me or mock me about my size. I might have refused any of the other teachers, but as far as I was concerned he could come in my house any time.\n\n\"Certainly! Please come in. May I get you a drink or anything?\"\n\n\"No. Thank you, but that won't be necessary. I just wanted to touch base with you for a couple of minutes and I'll get out of your hair. Oh! Beautiful piano! Do you play?\"\n\n\"Thank you. My grandmother gave it to me for my last birthday.\" I led the way in to the piano and saw the way Mr. Simon gently caressed the ebony.\n\n\"It's beautiful. Could you play me something? I would love to hear it.\"\n\nI shrugged and sat down on the piano bench. For no one other than Mr. Simon would I have agreed to play, but like I said, he was cool and I couldn't turn him down. I started on \"Tip-toe Dancer\" for him and saw the look on his face change. He stood in place, hand on the piano, as if rooted to the spot.\n\nWhen the last chord faded he looked at me soberly. \"Carl, if I could trouble you for it, I would like a glass of water. I'd ask for Scotch, but it's too early in the morning, and it wouldn't be proper for me to ask such a thing of a student and underage at that!\"\n\nI went and got him a glass of water and brought it back to see him still standing in the same place. \"Would you like a seat, Mr. Simon?\"\n\n\"Seat? Oh, yes. A seat.\" He sat down gently and very quietly obviously deep in thought. I sat back down on the piano bench to see what was on his mind and was getting a little concerned as he said nothing for a few moments. \"Carl, I must say I'm more than a little surprised. Tell me, do you play by ear, or do you read music?\"\n\n\"I read music. I started taking lessons when I was in sixth grade.\"\n\n\"I see. Tell me, how did you get the sheet music for 'Tip-toe Dancer'? I didn't think Karen published it yet.\"\n\nI was surprised he knew the piece. \"That one I learned by ear. I wrote her for the music, but I didn't hear anything back. I just loved it, so I worked it out and learned it.\"\n\n\"I see. Tell me, are you familiar with Tally's Lullabye, also by Karen Garrett?\"\n\n\"Sure. It's a beautiful piece, and one of my favorites, but I don't have a cello to play with it.\"\n\n\"I must say, Carl, that you've put me in a bit of a quandary. I came over here to talk with you about singing a duet with Annie only to find you are also a wonderful pianist. Look, I know you are shy about being in front of the public, and I understand why. I've heard you singing in the chorus, and I know you have an excellent voice, although you hold back in there to keep anyone from knowing it. I think you and Annie would do well together. Are you OK with singing with her?\"\n\n\"I don't like the idea of singing in public, but if I have to Annie is the one I'd want to do it with. In fact, she and I worked on some stuff last night to see what we wanted to do.\"\n\n\"Excellent! I saw you two talking together after class, and I was hoping you were going to be OK with things.\" He paused and pinched his lips between thumb and finger and sat in thought for a bit. \"Two things come to mind. When could I hear the two of you sing together? I'd rather not do it in class. There is no point in stirring the pot as far as the way you are treated in there. I'd like to keep it on the quiet if possible.\"\n",
        "\"I could call her and see if she is free now. She lives next door.\"\n\n\"Great!\" I walked to the kitchen and picked up the phone, suddenly nervous for some reason. I fumbled through my wallet to find the number she gave me the night before and carefully dialed it.\n\n\"Hello?\"\n\n\"Annie? Carl. Look, Mr. Simon just stopped by to talk with me about our duet, and he would like to hear us together, but he wants to do it outside of class. Could you come over for a few minutes and let him hear what we have in mind?\"\n\n\"Umm, OK. It will be about fifteen minutes before I can get there though.\"\n\n\"That's cool. Just come on in. You don't have to ring the bell.\" I hung up and walked back to the other room. \"She's coming over in about fifteen minutes if that isn't too long for you to wait.\"\n\n\"For this I'll be happy to wait! OK, the second thing I had in mind. We have a young man in the school who plays cello beautifully. I have been looking for something for intermission for the concert, and if I can get permission to use the music I think I've found it, that is if you would be willing to play a duet of Tally's Lullaby with him? I can't offer to pay you, but I will give you extra credit, not that you need any. Plus, it may open some doors for you if you will agree.\"\n\nHesitantly I nodded my assent as the door opened and a nearly breathless Annie hurried into the room.\n\n\"Hi, Mr. Simon. I hurried as quickly as I could!\"\n\n\"Oh, that wasn't necessary, Annie. I would have been happy to wait for you. Carl has been playing the piano for me. I didn't know he could play, and I certainly didn't know he played so well!\"\n\nAnnie gave me a bright smile, almost as if she was the one who should be proud of me. \"I know. That's why I volunteered to sing with him. I've listened to him practice and sing by the hours for the last few years. Even his mother didn't know how he can sing!\"\n\n\"I'm looking forward to this. What do you have in mind for the concert?\"\n\nI said, \"We were thinking about Franck's Panis Angelicus.\"\n\n\"Isn't that a tenor solo?\"\n\n\"Yes, it is, but Annie does a sort of obligatto descant above me, and I think it sounds pretty good.\" I started playing some of the chords at the beginning, and Annie walked over to stand behind me with a hand on my shoulder. Annie quickly set the music I had marked up with her part on the stand, and then stepped behind me and put a hand on my shoulder again. It felt really nice! I started to sing, and then Annie followed along as we had worked on the night before. Obviously, we weren't as proficient as I would have liked for having someone listening to us, but Mr. Simon looked satisfied with what he heard.\n\nMr. Simon sat and rubbed his chin thoughtfully when we finished as Annie and I watched him. Annie started stroking my shoulder with her hand absently and I nearly melted onto the bench. \n\n\"Would you kids mind doing that one more time for me? I already know what I'm going to do, but I want to hear that again.\"\n\nOnce again we sang of the 'Bread of Angels' as originally written by Saint Thomas Aquinas over seven hundred and fifty years ago and set to music again by C\u00e9sar Franck almost a hundred and fifty years ago. Its beauty has lost nothing over the years, and still moves people today. Mr. Simon was obviously moved as we finished the song a second time.\n\n\"I hope you don't mind, but I'm going to put you two last on the program. If I have you sing earlier everything else will be anti-climactic. Also, I think I will not have you rehearse it in chorus. We'll keep your piece a surprise right up to the performance. Carl, I wouldn't be surprised to hear from Mr. Franklin if I were you. He needs a piano player for the Jazz band, and the girl he's been trying to use is just not up to the task. Would you be interested?\"\n\n\"Gee, Mr. Simon, I really don't know. I'm not much of one for being out in front of people.\"\n\n\"I understand. It wouldn't be this semester, anyway. It's too late to add the class. I'm sure he will call you. Please talk with him and consider it. It will be your decision either way. Could you give me just a few minutes after class Monday? There are a couple of things I'd like to talk with you about then.\"\n\nI shrugged. \"Sure. No problem.\"\n\n\"OK, I'll get out of your hair then, but could I get you to play Tip-toe Dancer for me one more time?\"\n\nI nodded and turned back to the piano, only to be surprised by Annie saying, \"You ought to hear him play Ballade pour Adeline, too. And he can really tear up Scott Joplin's stuff!\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nMonday morning when I walked out my door to go to school I saw Annie standing on her front porch waiting for me. \n\n\"Good morning, Carl! I thought I'd wait and walk with you if you don't mind.\"\n\nMind? Don't be ridiculous! I grabbed her backpack from her as soon as we met at her walk and we started for the school. Normally the walk to school was my low point of the day, knowing what I would be facing, but by the time we had made it past two houses and Annie's hand found its way into mine I forgot all about what awaited me. Of course, the jibes and taunts started as soon as we reached the school grounds. I fully expected Annie to withdraw her hand, but she just gave mine a gentle squeeze and held her head high as she walked through the mockers and we made our way in the doors and to our lockers. \n\nI'll tell you right now that I've never seen another person who looked as beautiful to me as Annie did right then. I know the taunts had to have hurt her, too, but the way she shrugged them off with grace and dignity rubbed off on me and I found myself walking with my head up instead of looking at the floor for the first time in a long, long time. \n\nMy happiness lasted a whole fifteen minutes. It was just long enough to walk Annie to her class and then slip into my English classroom where we were working on vocabulary. Mrs. Anderson asked Alice the meaning of the word \"corpulent\" and before Alice could answer Ted Dawson called out from the back of the room, \"Carl,\" and the whole room broke into laughter. Even Mrs. Anderson smiled, although she tried not to. My 'Joe Btfsplk' persona was back with a vengeance. Walking to school expecting the abuse was bad enough, but getting to school in a happy mood left me totally unprepared for the day.\n\nEighth hour finally came and a retreat to the Chorus room. Annie gave my hand a squeeze as we went in. \"I'll wait for you outside after class so we can walk together, OK?\" I nodded, but couldn't speak. I had to swallow hard to keep from losing it. After the day I'd had to have someone want to walk home with me almost was enough to unnerve me.\n\n~~~~~~~~~~~~~~~~~~\n\nClass today was taken up with us guys being fitted for our tuxedos for performances throughout the year while Mr. Simon met with each group and discussed the music chosen for the upcoming concert. Mrs. Little from the Drama Department was in charge of fitting us. My name was not called at all, and I spent the time working on my homework, as we were free to do when not meeting with either Mr. Simon or Mrs. Little, until near the end of class when Mrs. Little finished with all of the guys but me. Ted Dawson had to take another swipe at me.\n\n\"You didn't call on Carl. I understand Cabellas has a big sale going on tents. You can probably find something to fit him there.\"\n\nThere was a crash of keys being pounded on the piano as Mr. Simon stood to his feet, furious. \"Mr. Dawson!\" he yelled, instantly stilling the entire room. Ted looked up at him startled. Never before had he been called down for his abuse. \"Come down here immediately!\"\n\nMr. Simon's face was almost purple, and the veins stood out in his neck and on his forehead. Ted stood and walked insolently to the front of the room. \n\n\"I have had all of the mocking of Carl I'm going to take. He had never done anything to you that deserves it to my knowledge, and even if he had, such abuse is intolerable. Report to the Principal's office immediately. You are suspended from this class, and I hope from the school itself for the rest of this week. Do you understand me?\"\n\n\"I didn't mean anything by it. I was just kidding.\"\n\n\"I don't believe you were 'just kidding.' Even so, such talk is unacceptable. Would you accept it if he made racial comments about you?\"\n\n\"That's different!\"\n\n\"How so? Can you change your skin pigmentation? Neither can he change his size. I've changed my mind. You are suspended from this class for the week, and you will not be allowed to return to my class until you write a paper of a minimum of twenty-five hundred words explaining the difference you claim to be between someone attacking you because of your race and you attacking them because of their size. Now get out of here before I call security and have you removed from the premises!\" \n\nYou could have heard a pin drop in the room as Mr. Simon stalked to the telephone mounted on the wall by the door. \"Simon here. I just sent Ted Dawson down to see the Principal for unprovoked egregious verbal abuse of another student. He is suspended from my class for a period of one week, and must present a paper, of which he is aware, before being allowed back in the class. I told him I hope he is also suspended from school for the same period of time. This is not the first occurrence, but it had better be the last.\" Mr. Simon's knuckles were white from gripping the handset so hard.\n\nBy the time Mr. Simon finished on the phone and turned back to the class the blood had drained from his face so that he was rather pale when he walked back to the podium. \"Take your seats,\" he ordered. For a few minutes he paced back and forth across the front of the classroom, brow furrowed, as he thought. Finally he stopped and faced the silent class. Mrs. Little had not left, but took a seat over at the side of the room and stayed to listen to what Mr. Simon had to say.\n\n\"When I was a little boy I remember a guy by the name of Medger Evers who was murdered just because he was active in trying to make it possible for African-Americans to go to college at the University of Mississippi. I remember when Rosa Parks refused to give up her seat and go to the back of the bus and was jailed for it. I remember when the train station in my town had two sets of drinking fountains and two sets of restrooms, one for whites and one for 'coloreds', when restaurants had separate dining rooms, and laundries were for 'whites only'. We have come a long way since that time, although we have not yet arrived. Not one of you African-American students, who have never lived under that would want to go back to those times, would you?\" Nobody moved.\n\n\"Since that time racial epithets are not acceptable either. Would any of you want to be called what your parents or grandparents were commonly called back then?\" Again, nobody moved or answered. \"I ask you what is the difference between what happened to African-Americans then, or going back to the Second World War era, to what happened to Japanese Americans on the west coast, or to the Chinese a hundred years before that, or to the Irish in the late 1800's, and what has been done to Carl in this room today. Carl is not the only one to have been ridiculed or mocked, but I can tell you that in this room he is the last. I cannot control what happens in other classrooms, but I can, and I will control what happens in this class, and in the hallways within my hearing. As I will not tolerate racial slurs, neither will I tolerate any other slurs of any kind against any person for any reason. Is that understood? Any questions?\"\n\nThere were none. The whole room was cowed by Mr. Simon's wrath.\n\n\"Very good. Your assignment for tomorrow is a two hundred fifty word essay on the differences or similarities between racial abuse and any other inter-personal abuse. No one will be allowed into this class until that paper is presented.\" He stopped and took a deep breath. \"I apologize for losing my temper. This has been bugging me for some time, but Mr. Dawson's remarks today were just too egregious to let stand. I will tell you this before we go, and if the bell rings before I'm finished it is too bad. You will not be dismissed until I'm through, which will not be long.\"\n\n\"I visited Carl in his home on Saturday morning because I was a bit concerned about his participation in the duet Annie volunteered him for. For very good reason Carl is rather reticent about being before people, and if the treatment received here today occurs elsewhere, as I'm sure it does, I would not be willing to subject myself to further unearned ridicule by placing myself out in front if I were him either. \n\nI learned some things about Carl on Saturday that surprised me. I'm not at liberty to disclose them at this time, but I can assure you that when they are revealed you will be as amazed as was I.\" The bell rang, but no one moved. \n\n\"Go home tonight and give it some thought. How you treat other people, especially people you think are lesser than you for whatever reason tells more about you than it tells about the other person. Some of you have been on the receiving end of this kind of abuse to one extent or another. Hopefully you can understand what I'm saying, and maybe you can help others understand as well. Let me conclude with this: Just as you would not allow someone to racially abuse another student here in this school, neither should you stand by when someone abuses another student for any reason. You are dismissed.\"\n\n~~~~~~~~~~~~~~~~~~~ \n\nI waited for a few minutes until everyone cleared out of the room and then walked down to the front where Mr. Simon was sitting at his desk, head in hands. He looked up when he heard me stop at the desk. \"I really hope I didn't make things harder for you, Carl. I didn't mean to, but I couldn't allow that behavior to go on.\"\n\n\"No sir. You didn't make it harder. I want to thank you. You are the first teacher who ever said anything.\"\n\n\"That's not right. Now, you need to understand something. Most of the time when people pick on others it is because they are trying to deflect attention from themselves for something they perceive to be wrong with them. Most are not being vicious intentionally.\" He stopped and eyed me quizzically for a moment. \"You look to be pretty strong. I want to try something.\"\n\nMr. Simon stood and walked over to the piano, one of those little spinets, and lifted up one end experimentally. \"I think this might work. You don't have any back trouble, do you?\"\n\n\"No.\"\n\n\"Try reaching around the piano from the back. Can you grab it under the keyboard at both ends?\"\n\n\"Sure. No problem.\"\n\n\"Try lifting the piano carefully. I don't want you to hurt yourself.\"\n\nI did so. I'm not saying it was easy, but it really wasn't all that hard either. It rated a big smile from Mr. Simon. \n\n\"I think this might work. Do you think you could carry it over by the wall over there?\" I did by walking sideways and then set it down gently and slid it up against the wall. \"Excellent! Here's what we are going to do. First of all, lift this end up and hold it for me for a moment.\"\n\nEven though I was puzzled as to what he had in mind I lifted the end of the piano and held it. \"Careful now. Don't drop it on me.\" Mr. Simon lay down on the floor and pried one of the casters loose and pulled it out. \"Excellent! Now set it down gently.\" He carried the caster over to his desk and put it in one of his drawers before looking up at me with a grin. \"It's a shame the piano is out of commission for the day tomorrow because somebody somehow broke it and it can't be moved, now isn't it? I guess all of my early classes will have to sing a cappella, won't they?\" \n\n\"Grab a chair for a minute.\" He sat down behind his desk. \"You are exempted from the assignment for tomorrow. I have a different task for you. Tomorrow I want you to be sure to be the last one in the room, but don't be late. I'd hate to have to give you a tardy for helping me. We obviously cannot work on small group numbers without a piano, so I will be waiting for you to move it. I don't know about the guys, but I know the girls will be impressed! Maybe we can start a bit of a campaign to quell some of the torment you've been going through.\"\n\n\"Now, what I asked you to stay for. I talked with Evan this morning, and he is willing to play the cello with you for intermission at the concert if you are still willing. Now, as has been pointed out so graphically earlier, we don't have a tux that will fit you, and to purchase one in your size will be rather expensive, but that is not your problem. It's mine. The second issue is 'What would we do with it after you graduate?'\"\n\n\"I spoke with the principal this morning before school started and ran this idea past him. I cannot pay you for playing in the intermission, and you definitely don't need the extra credit I could give, so he agreed with this idea. We are willing to have a tux tailor made for you. It's the only way to get one in your size. You will then have the tux for use with the Chorus through high school, and then if you are willing to play with Evan, and are willing to provide two to three additional numbers, we will give you the tux when you graduate. I think it's a win-win solution for both of us. What do you say?\"\n\n\"I'm not excited about playing in front of people, and if it was anyone other than you I'd not consider it, but after what you did for me today I don't see that I can say no. I just hope I don't freeze up on you.\"\n\n\"I have no concerns about you freezing up on me. I'm more concerned people won't get up and leave during the intermission, but will wait until we have others singing. I don't plan to give your names on the program for what you do during the intermission, but will announce them following your performance. I really think it will be more effective if it is a surprise. Can I ask you to not tell anyone? Not even your mother or Annie?\"\n\n\"Sure. Annie is likely to hear us if we practice at my house, though.\"\n\n\"I didn't think about that. OK, you can tell her you and Evan are working on a piece for intermission, but tell her to keep it quiet. OK?\" I nodded and stood to leave.\n\nAnnie was sitting in the hallway, leaning up against lockers waiting for me when I walked out. \"Is everything all right? I was getting worried about you in there!\"\n\nI gave a little grin and said, \"Everything is fine. We had a couple of things we needed to talk about. One of them is a secret, if you can keep it.\"\n\n\"I promise!\"\n\n\"Evan Lewis and I are going to do Tally's Lullaby if Mr. Simon can get permission. We'll do it during intermission, but it won't be on the program. Isn't that cool?\"\n\n\"Oh Carl! I'm so excited!\"\n\n\"I didn't say anything to Mr. Simon yet, but when you and I do our duet I'm going to play the piano.\" Annie grabbed my hand in both of hers and leaned against me, putting her head against my bicep, which is as high as her head goes.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen I walked in the doors of the school Tuesday morning to say the attitude was glacial would be mild. The word had gone around the school that Ted was given a three day suspension for \"bullying.\" I wasn't overly excited about his punishment, as I wasn't really sure what it could accomplish, but it was out of my hands. Since he was the star running back on the football team the suspension also meant he couldn't practice, and that he would miss Friday night's game. Although I cared nothing for football I really hoped it wouldn't cause the team to lose. We had a good shot at a championship this year, and a loss would kill our hopes.\n\nSomehow I got through the day. The occasional smile from Annie as we passed in the halls was the only bright spot all day. \n\nFinally, eighth hour rolled around. Rather than going straight to class as normal I stopped by Annie's locker and walked over with her, timing things to arrive just as the bell sounded, as Mr. Simon had requested. In fact, the bell rang just as I was entering the room, which Mr. Simon noted with a snide, \"I'm so glad you could make it today, Carl,\" but he gave me a carefully hidden wink to belie what his words.",
        "\"It is my understanding some of you blame Carl for Ted's suspension. He is not to blame. Ted's actions brought it on, and Carl had nothing to do with the punishment. Now, you may pass in your essays. Is there anyone who did not write the essay?\" No one raised a hand. Everything was quiet as the papers were passed to the front.\n\n\"Now, as you can see, someone removed a caster from the piano, so I cannot roll it back to its proper place.\" He took a brick from the top of his desk. \"If one of you thought this would get you out of practice today you are mistaken. Carl, you look big enough to do the job. Do you think you could move the piano over here, and we'll use this brick to hold up the corner of the piano?\" \n\n\"I can give it a try.\" Standing to my feet I walked over to the piano and reached around it. Of course, all of the guys started laughing and jeering to think one guy could pick up a piano, and some of the girls were sitting there with their hands over their mouths afraid I would hurt myself. Bending my knees a little I lifted and leaned backwards, lifting the piano from the floor, and then I stood with it and shuffled sideways over to the brick. \"Just tell me where you want it, Mr. Simon.\"\n\n\"Anyplace there is fine, Carl.\"\n\nCarefully I lowered the piano to the floor, then I lifted one end so Mr. Simon could place the brick under the corner and set it down again.\n\n\"Thank you, Carl. Now, girls, Mrs. Little will work with you on fitting your formal gowns. Guy's let's get started with some of your groups.\" I felt eyes on me from all over the room, but for once they weren't mocking looks. Mr. Simon's left eye fluttered in half a wink before he turned back to the first group of guys to work on their song.\n\nAgain, I worked on homework during the class period, and had everything completed by the time class was over. Annie came up and sat next to me and worked on hers as well once she was fitted for her dress. \"That piano thing; you two planned that yesterday, didn't you?\" \n\nI just gave her a little grin.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \n\nWhen the bell rang Annie and I walked to her locker, where I grabbed her bookbag and we headed out of the building and started home. I actually felt pretty good about thing for a change, at least until we crossed the street from the school, and thus off of the school grounds. Three of Teddy's friends were waiting for me on the other sidewalk, blocking my path. I braced myself for the onslaught I knew was coming, but I was not prepared when Josh threw a punch at my face. I managed to move just enough that he hit my cheek, rather than my nose, which was his target. Annie screamed at him and tried to get in the way, but Tim shoved her to the ground, tearing the knee out of her slacks. \n\n\"Get out of the way before you get hurt. This is between us and 'Lard-ass' here. You're going to get what you have coming to you, fat boy, for getting Teddy kicked out of school and out of the game Friday night!\"\n\nNow my mother brought me up on the old saw, \"Sticks and stones may break my bones, but words can never hurt me.\" Whoever thought that one up never dealt with what I do! She never allowed me to hit back, or to defend myself, but this was the first time I'd ever really been physically assaulted. Frankly, I didn't know what to do, or even how to defend myself. I took several hard punches from the three of them before I was able finally to catch hold of Tim and Josh at the same time, and I smashed their heads together and dropped them to the ground. Dave dove at me, and I just reached out and grabbed him by the neck, reaching all the way around it, and I lifted him straight up from the ground before throwing him headlong into a tree. \n\nI heard sirens wailing, and then the screech of brakes as a police car slid around the corner, and an officer jumped out with his hand on his tazer. \n\n\"Get on the ground, now!\" he yelled at me, and I did so, face down with my hands out over my head. I've watched 'Cops', so I know the drill. \n\n\"This is all I need,\" I thought. \"Now I'm going to get arrested for beating up these three punks! I didn't ask for this!\"\n\nThe officer jumped on top of me and tried putting cuffs on my wrists, but they wouldn't reach. Another car screeched to a stop, and a second officer jumped out and hurried over. \"Swanny, I need some ties. These cuffs won't reach around this kid.\"\n\nThe second officer retrieved some zip-ties from the trunk of his squad car and they quickly trussed my arms together before rolling me over and sitting me up. Annie was crying, saying, \"He didn't do anything! They attacked him! Don't arrest Carl!\"\n\nQuite a crowd had gathered around us, and some muttering was going on, which had the officers worried about trouble. They quickly told everyone to get back and then stood me to my feet and led me over to the back of one of the cars. \n\n\"Anything in your pockets I need to know about? Any needles, weapons, or anything?\" \n\n\"No, Sir.\" Quickly one of them patted me down before allowing me to rest my butt against the car. \n\n\"You want to tell me what happened?\"\n\nAs I told him my story I saw the other officer checking on the three jerks that jumped me. All three were out cold! He called for a couple of ambulances, and then checked on Annie, who showed him the abrasion on her knee that was rapidly swelling from the bruising. She told him what had happened before sitting on the curb looking forlorn. I really didn't care what happened to me at that point. Seeing Annie hurting like that had me angry. I almost wished they would wake up so I could go after them again! What they did to me I was somewhat inured to, but for them to hurt Annie was beyond the pale.\n\nFinally, after I had talked with the officer, and Annie had been questioned, old Mr. Harvey, the school security officer waddled across the street. Now, I'm big, but Mr. Harvey is fat. His belly hangs down over his belt and wobbles when he walks. How he ever became a security officer I don't know, because he certainly couldn't do anything other than call for help. I noticed he waited until everything was calm before making his presence known. Had he bothered to come over earlier the whole thing could have been avoided, but c'est la vie.\n\n\"Officer, this young man was just defending himself, and this young lady. He didn't start it, but he certainly did a nice job of finishing it. I'd suggest you release him. The whole incident is on tape over at the school on the security camera if you'd like to see what happened.\"\n\nTwo ambulances, and a fire truck had arrived on scene by this time, and the EMT's were checking out the three punks, who were still unconscious. Finally, one of them decided to check on Annie and me, and they got a cold pack on her knee after cleaning out the abrasion and bandaging it. My right eye was swelling shut by this time, and I was couldn't put weight on my left leg. My knee really was hurting. The EMT had me sit down on the ground before cutting my pants leg open so he could see the knee, which had a large dark contusion across the side, where Dave had hit me with a piece of pipe. I'd been so busy I hadn't even noticed the pipe! I also had another large welt across the back of my shoulders from it, and on my left bicep as well. \n\nAnother ambulance was called for, although I really didn't think I needed one, but after further thought, neither Annie nor I were exactly up to walking the three blocks home. I was really starting to hurt now that the adrenalin was wearing off. All three of the other guys were placed on back boards and loaded into the two ambulances and rushed off to the hospital to be checked out. One of the officers followed along to process paperwork on them. Dave would be arrested for aggravated assault and battery with a deadly weapon because of using the pipe. The others used only their fists and feet, so they would be charged with aggravated assault and battery. I tried to keep from having them arrested, but the officer said he had to do it. \n\nMom hurried over to the Emergency Room, arriving there about the same time Annie and I did, and Annie's mom got there a few minutes later. I tried to get them to keep us together, but they wouldn't since we aren't family. One of the EMT's who took the others in saw Mom in the hallway as she was going into my room. \n\n\"Hey, Betty. Is that your son?\"\n\n\"Yes, why?\"\n\n\"You should see what he did to the other three guys! Man, I've never seen anything like it! Tell him I said, 'Good job!'\"\n\nThat was the last thing I was going to hear my mother say about me fighting! I'm glad I heard him say it himself, 'cause I knew what I was in for from her. Mom doesn't believe in fighting.\n\nOf course, she wasn't able to officially do anything for me in there because she isn't an ER doctor, and I'm family, but she was there observing when the doctor checked me over. He insisted on doing x-rays and an MRI on my knee, which I also didn't think I needed, but what do I know?\n\nSwanny, the second officer on the scene, was waiting for me in my room when I got back from the MRI, with paperwork for me to sign. \"You did a job on those three, Carl. The two you smashed together both have fractures by the temples, and bad concussions. They are going to be in here for a while! The other one? The one that hit you with the pipe? You nearly crushed his windpipe when you grabbed his throat! He's also got a concussion from hitting the tree, plus rather bad whiplash.\" He held up his hand as both I and Mom started to say something. \"Easy there! I'm not being critical at all! I'd say job well done, and I don't know anyone who deserves it more. All three of them have records.\n\nI had the time to take a look at the tape from the school, and I have a copy of it to file with the paperwork. You have no charges against you at all. I am just glad you didn't squeeze any harder on that one kid, though. It wouldn't have been pretty if you had killed him, even though it was self-defense.\n\nMom blanched and almost passed out!\n\n\"I'm sorry, Officer. I didn't mean to hurt them. I've never been in a fight before, and I kind of got mad when they hurt Annie.\"\n\nOfficer Swanson, I learned his real name from the paperwork, looked over at Mom. \"Ma'am, you should be proud of your son. When one of the punks threw her to the ground he stood over the top of her protecting her instead of defending himself. That's why he took the beating he did.\" He turned back to me. \"You'll be hearing from us concerning court dates and things. I'm sure the DA will be calling on you for a statement. If there is anything we can do for you give me a call.\" He handed me his business card after writing his cell phone number on it. \"You can reach me directly at that number. I would appreciate it if you would not give that number out.\" I nodded, and he shook my hand and left. \n\nA nurse came in just a few minutes later with a leg brace for my knee and a script for some pain meds, which she gave to my Mom. \"I know you're familiar with this stuff, Betty, so I won't bother going through the spiel.\" Mom nodded and in just a few minutes we were free to go. I wouldn't go home though until I had a chance to check on Annie. We found her in the waiting room with tears in her eyes waiting for us. She jumped up, stiff-legged and threw herself at me in a hug. As long as I knew she was OK I could deal with the rest of it.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen Mom pulled our car into the driveway I had another surprise waiting for me. Teddy was sitting on the front step.\n\n\"Uh Oh. This could get ugly,\" I said to Mom. \"That's the guy that started all of this.\"\n\n\"Don't get out of the car, Carl. I'm calling the police.\"\n\nMom quickly pulled her cell phone out of her purse and started to dial 911, but I stopped her. \"Let me see what's up first. I don't think he's here to start something.\" \n\nMom held the phone in her hand, ready to call as I opened the door and slowly eased my way out. Getting out with a stiff leg was difficult, let me tell you! It's hard enough for me to get in and out of the car as it is normally, but with the stiff leg it was nearly impossible!\n\nTeddy walked over to the car slowly, head hanging. \"Carl, can I talk with you for a minute? Look, I'm not here to cause trouble. I owe you an apology.\"\n\nSurprised, I nodded. \"Sure. Want to go in the house? Mom, this is Ted Dawson.\"\n\nTed nodded at her. \"Hi, Mrs. Hudson. I won't be long, and I'm not here to cause trouble, honestly.\" He bowed his head again and nearly whispered, \"I think I've already done enough of that.\"\n\nI led the way up to the house, and Ted followed me in. \"I need a Coke. Want one?\"\n\n\"Sure, thanks.\"\n\nI grabbed us a couple of Cokes and we sat down in the living room. \"Look, Carl, I know I've been a royal pain in your ass for a long time, and I want you to know I'm really sorry. When I got home from school and Mom found out I've been suspended, and for what she really laid into me.\" He hanged his head for a minute. \"She said basically the same thing Mr. Collins did, asking me if it would have been OK for you or anyone else to belittle me about my race, and she made me look at myself. To be honest, I didn't like what I saw. I guess I was just pushing off on you what I thought people did to me, but you have never been one who did that. I was a fool.\" Ted actually had tears in his eyes. \"I realized I was no better than the worst racist out there, and I promise it will never happen again.\"\n\nI struggled to my feet and stuck out a hand to him, and when he took it we both pulled the other to ourselves and the handshake turned in to a man-hug.\n\n\"Jermaine Jenson called me after school and told me you moved the piano all by yourself, that you picked it up and carried it. Was he pulling my leg?\"\n\nI just shook my head.\n\n\"I can't believe it! I also heard 'bout those three punks that jumped you after school. I'm really sorry, man! I didn't know anything about that! I wouldn't have let them do something like that if I'd have known it.\"\n\n\"I know. That's never been your style.\"\n\n\"I heard they got hurt pretty bad, and are being arrested?\"\n\nIt was my turn to hang my head now. \"I didn't mean to hurt them that way, but when that one guy hurt Annie I kind of lost it. I really feel badly about it.\"\n\nTed looked at me like I was crazy. \"They attacked you! You didn't start it! As far as I'm concerned, they got everything they deserved!\"\n\nI shrugged my shoulders. \"I'm not a fighter. I'd never been in a fight like that before.\"\n\n\"All I can say is I'm glad you never threw a punch at me! If I had been given all I gave you I'd have swung at you a long time ago. You'd have killed me! Anyway, I called Mr. Simon and asked if I can apologize to the class. I'm going to do that on Monday when I go back. He said he won't let me back in the class until then, that even though I'm willing to apologize actions have consequences.\" He shrugged. \"Anyway, Jermaine, James and I wanted to know if you'd like to join our group for the concert? You'd be welcome to.\"\n\n\"Thanks. I really appreciate the offer, but Annie and I have a duet we are going to do. Maybe another time, if we ever do something like this again?\"\n\nTed stood and said, \"Cool. We thought we could call ourselves the 'Oreos', but with you in the middle it would be 'Double-Stuffed'.\" Ted gave me a big grin, and for the first time the joke was just that, a joke, and it was funny. \"By the way, I think you have a good voice. I know you don't like to draw attention to yourself, but you should. If I hadn't been such an ass I'd have told you so sooner.\" He walked to the door. \"I've gotta get going. See ya round, K?\" He waved as he went out the door, and I realized I had just made a friend. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAnnie called me just as soon as she saw Ted leave the house. \"What did that creep want, Carl?\"\n\n\"Actually, Ted came over to apologize, and we had a good talk. He didn't have anything to do with those three today, and he wanted me to know it. He's going to apologize to the class on Monday, and he even offered to let me sing with him, Jermaine, and James, but I told him we're doing a duet.\"\n\n\"I was afraid he was trying to stir things up more. I would have come over, but Mom wouldn't let me.\"\n\n\"Thanks. That was sweet of you, but we're good. Mr. Simon won't let him back in the class until Monday. He said even though he wants to apologize and make it right that actions have consequences.\"\n\n\"Good! Well, I've got to go. Mom is making me keep my knee elevated, and I have to get some ice on it again. Walk to school together tomorrow?\"\n\n\"I don't think I'm going. I don't think I can walk it, and Mom wants me to keep my leg elevated, too. She's afraid of a blood clot or something. We'll talk tomorrow, OK?\"\n\n~~~~~~~~~~~~~~~~~~~~~~\n\nTeddy made his apology to the class as he said he would do on that first day back, and he went beyond just an apology, telling us what his mother had said to him, which reiterated what Mr. Simon had asked about the racial slur concept. \"I had to take a good look at myself, and what I was feeling, and to be honest, I didn't like what I saw when I did so. Carl never denigrated my race, nor ever looked down on me because he's white and I'm black. He never cared, but because I've had others look down on me I put all of that on him because he's white and attacked him for his size. I'm the one with the problem, not Carl, and once I was able to see myself in that way I recognized I needed to quit feeling sorry for myself and prove to others just who and what I am. I can't help being black any more than Carl can help being big. There is nothing wrong with either one, and I can't let others attitudes toward me change what I think about me.\"\n\n\"I took the time to read, and then to listen to Dr. Martin Luther King's I Have A Dream speech over again, and I finally understood what he was talking about! He was not talking about waiting for others to change their attitudes toward me, but was talking about me changing my attitude toward myself! From this day forward I am going to work to change others attitudes toward me by proving myself to be worthy of that change in attitude. From this day forward I will not put on a person the attitudes of others and lump them together in a class or group, but will treat each person as an individual of worth and value, just as I want to be treated for my worth and value.\"\n\n\"I invited Carl to join Jermaine, James, and me in our group for the concert, and told him we would put him in the middle and call ourselves the 'Oreos', but with him in the middle it would have to be,\" he paused a moment and grinned at me, \"it would have to be the 'Double-Stuffed Oreos'.\" \n\nFor a moment there was stunned silence in the class before somebody snickered, and then the whole class realizing this was a for real joke, and not mockery broke up laughing, and I having heard the joke before laughed along with them.\n\n\"He turned me down though. I guess he'd rather sing with Annie. By the way,\" Ted said once the laughing died down. \"Just wait until you hear this guy sing. He always sings quietly, afraid someone will make fun of his voice, too. Had I not been such an ass I would have said something to him about his voice sooner.\" Ted turned to Mr. Simon. \"Thank you, Sir, for finally saying something. I'm in your debt,\" and he sat down after walking over and shaking my hand.\n\nI'm not saying that ended all of the mockery. It didn't, but it did go a long way toward healing some real wounds for me.\n\nMr. Simon worked pretty closely with Annie and me in the next two months getting ready for the concert. At first some of the others in the class wanted to know why we didn't sing in there, but Mr. Simon simply said it was his choice, that he didn't feel we needed the attention of the class on us as we prepared, that he was monitoring our progress, and was confident we would be ready. ",
        "Evan and I worked together on our duet for the intermission as well, and Mr. Simon was beside himself with anticipation. As time drew closer and our numbers were getting pretty polished Ted, Jermaine, James and I started hanging out at the house some and we actually did work up a number, just for fun for the 'Double-Stuffed Oreos' that we decided to spring on Mr. Simon during the dress rehearsal before the concert. It was kind of a Christmas present to him of \"Go Tell It on the Mountain\" done in the Negro Spiritual style. I really thought it sounded pretty good, and had no intention whatever of doing it in the concert. \n\nWhat we did was when Mr. Simon called on Ted, Jermaine, and James for their number I went up with them and moved Mr. Simon from the piano. I had thought it sounded good in my living room with my baby grand, but in the auditorium actually playing it on the full nine foot Baldwin Concert Grand, with its great sounding bass notes it really stood out! Mr. Simon was really pleased with our surprise, but he one upped us. \n\n\"Very good, guys. Now, if you will let me have my piano back, Carl, we'll get on with the trio. As for the 'Double-Stuffed Oreos', you will be doing that number as our encore tonight, although we will keep your group name quiet. I really don't think people will catch the joke.\" He gave me a wicked grin. \"Thought you'd pull one over on me, hmm?\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI paced around backstage like a caged tiger while a little kid with a stick beat on the bars during the first half of our concert. No matter what I did I just couldn't relax. Annie, on the other hand was as cool as she could be. It didn't bother her at all to go out and sing in front of people. Teddy and Jermaine kept cracking jokes and fooling around, but then they had been the second group out there, and didn't have to go back until we did our encore.\n\nEvan drew a lot of funny looks at first, but when he told them he was performing for the intermission everybody pretty much just left him alone. We talked a little bit together, but didn't do much, because Mr. Simon still wanted us to keep our duet a surprise. I think that caused part of my nervousness, because I couldn't even talk about it, and I had to keep everything to myself. Finally, I had to go to the restroom and grab a handful of paper towels to carry around, my hands were sweating that badly, and I couldn't wipe them on my pants any more, or I was going to ruin the crease in my trousers. \n\nI did get some good comments on the fit of my tux, which I must say, being tailored for me did fit better than the other guy's tuxes did. \n\nFinally, the last pair of girls went onstage to sing, and Evan and I went to a warm-up room to do a quick tune on his cello. We would have to re-tune, of course, for the piano on stage, but we wanted it close. Evan plays in a youth orchestra, and he's done solos, so while he was nervous it was much more contained than mine. He's also not much of a talker, but he broke that pattern during our short warm-up. \"Look, Carl. It's not that bad. I'm not going to tell you it's the same as playing in your living room. It's even better.\"\n\nI looked at him incredulously!\n\n\"Yeah. It really is. When you are playing, and the room goes silent, and as good as you are it will, you know you have them, and then when you finish and they applaud, well, it's a rush. Just focus on your piano, and let it flow from your soul. You've got it, and I guarantee you everyone will know about it before the night is over.\"\n\nWe heard Jermaine knock on the door just before the girls finished their number, as Evan had asked him to. As far as Jermaine still knew it was only Evan playing. He thought I was just helping him tune.\n\nI took a deep shuddering breath and felt nearly faint, but Evan clapped me on the back hard. \"Showtime. Let's show them what you can do.\" And with that we made our way to the stage. Mom and Grandma had managed to get front row seats, and to see the look of surprise on Grandma's face when I walked out was precious. Mom of course knew, and I thought she looked nervous. Annie's mom sat next to them.\n\nMost of the people were standing, with some in the aisles talking, and others making their way to restrooms as we walked out. We sat down, and Evan quickly tuned, then nodded at me and we paused for just a moment. Evan leaned in to the cello and made his first bow stroke, with the deep resonance of the bass intro to Tally's Lullaby and things got quiet through the first few bars until I began to play as the piano part kicked in. As I poured my passion for music into the piece I realized the room had gone totally still. The only thing to be heard was the piano and cello with their haunting melody. I could see the curtain rustling and saw a couple of heads peeking out, then I heard a startled, \"It's Carl!\" stage whispered loudly and then more and more rustling as others tried to see through.\n\nWhen the last note came to an end and Evan lifted his bow from the strings for the last time he looked over at me and nodded. \"Nailed it!\" I saw him mouth, but I was concerned because the entire room was silent. Did we stink that badly? I mean, nothing! Suddenly there was an eruption of applause, and I could hear seats banging as people leapt to their feet in a standing ovation. I hadn't realized just how deeply into the music I had gotten, but as I played it was as Evan had said beforehand. I had become one with the piano, allowing my fingers to pour all of my emotions and feelings through the keys, and that passion had translated itself to the crowd. Their response was electrifying, and the rush was everything Evan had promised it would be. \n\nThe look on Mom and Grandma's face was all I really needed, though. Grandma had tears flowing down her face, and over her shoulder I saw my piano teacher, who had never been able to get me to play in a recital cheering and applauding with everyone else. Evan and I made our bows, and he made his way off stage, leaving me out there alone. Mr. Simon walked to the microphone and waited for the room to silence enough to be able to speak. \n\n\"Ladies and Gentlemen, that was Evan Spencer and Carl Hudson providing what was supposed to be an intermission. Obviously, that didn't work very well, did it?\" He waited for a moment for the laughter to die down. \"I was introduced to Carl's piano skills by accident earlier this school year, and I've learned from Mrs. Martin,\" he gestured to Mrs. Martin in the second row, \"that she has never been able to convince him to play in public before. Mrs. Martin, I think that just changed.\" He waited for applause for Mrs. Martin to die down a bit. \n\n\"Actually, I knew this would happen, and I told Carl he would mess up intermission for me if he played.\" More laughter ensued.\" I have asked him to play a few more pieces, but because I know if he plays you won't leave, and we will have people needing restrooms while others are performing, so I've made an executive decision. We will have a ten minute intermission without any entertainment, but you won't want to be late returning because Carl will be playing three more pieces during our 'normal' intermission. I've heard him, and you won't want to miss this.\" He gave me a smile and a nod, and suddenly I had to go to the bathroom desperately. I fled the stage and tried to get to the back stage men's room, but found I couldn't get through the crowd of students who wanted to tell me what a great job I did.\n\nFinally, I made it through the crowd and did my business. Evan was waiting for me when I came back outside. \"You did it, Carl. You will never be able to match what you did tonight, but you'll keep trying.\"\n\n\"Hey, Evan, it wasn't just me! I couldn't have done it without you, and in that piece it's the cello that carries it.\"\n\nHe gave me a gentle smile. \"You couldn't see yourself at the piano. The way you were so in tune with the instrument, pouring yourself through it is what makes the difference, and that is what the audience responds to. It was a pleasure to perform with you, and if you ever want to do something again let me know. I'd be honored to be a part of it.\"\n\nAnnie was waiting, face shining as I went back to go onstage again. \"I knew you could do it,\" she whispered. \"I'm so proud of you!\"\n\nMr. Simon was waiting for me when I got back to the wings. \"Good job, Carl. Ready to finish the 'intermission?'\" I nodded, and we walked back out onto the stage together. \n\n\"Ladies and Gentlemen, I believe we are ready to finish our 'Intermission.' In the history of music there have been rare times when someone has come on the scene unexpectedly and years later people have been able to say, 'I was there when . . . .' I predict this will be one of those nights. Carl, take it away.\" He half bowed to me and left the stage. Self-consciously I gave a nervous bow to the audience and settled behind the keys to begin Ballade pour Adeline, then I followed it with Tip-toe Dancer, and a couple of other pieces. When I finished the last one I had planned I stood and bowed to another standing ovation. I started off stage, but saw Mr. Simon waving me back to the piano. He mimed playing and I could see him mouthing \"Joplin\", so I walked back to the piano and started playing The Entertainer. He was making a keep going signal as I finished, so I segued into another piece, and then another, and another before he finally gave me a sign to stop. \n\nTo be honest, most of the second half of the program was anti-climactic after the intermission, but that wasn't my fault. At last it came time for Annie and me to do our number, and once again I was very nervous about going back out there. I had gotten a little more comfortable in front of people by the time I had finished the intermission, but that comfort level was now gone, and gone for sure before Annie and I went out. Mr. Simon set up the piano for me, with a microphone over the keyboard since I was going to play for us as well as sing. \n\nAnnie looked up at me with a big smile. \"This is going to be great, Carl. Just put your heart into the music like you always do, and the rest will take care of itself. I tried hard to believe her, but it really didn't sink in. All I knew was I was going to go out there with her and do my best not to make her look bad, but to do all I could to make her shine, she who had already done so much for me.\n\nI know we looked funny as we walked out on the stage. There I was, all seven feet one and a half inches tall - I really don't know why the half is important at this stage - and four hundred fifty pounds, and Annie reaching up to hold my arm at her five feet nothing and still at only ninety-five pounds. There were a few titters throughout the audience, which caused my face to flame and I nearly stumbled, but Annie tugged on my arm and whispered up at me, \"Don't mind them. We'll show them.\" She gave me her dazzling smile and stepped behind the piano bench as I sat down. \n\nThis time she did something a little different, and it made all the difference in the world to me. She rested her hand on my shoulder, after moving her microphone back by me instead of in front of the piano. \"I want to sing with you, not up there,\" she whispered in my ear, and then gave my shoulder just a little squeeze. I took a deep breath and looked back to see if she was ready only to be dazzled by her smile and nod. Quietly, but with authority I began the introduction to my arrangement of C\u00e9sar Frank's beautiful melody. Without even realizing what I was doing I began singing, and Annie followed right along with me, her voice highlighting mine and before we knew it, it was all over. I stood and took Annie's hand and made my bow as she curtsied. I looked up to see my mother and grandmother crying, and the entire audience on its feet applauding. I was amazed!\n\nAnnie and I made our way off stage, only to be called out again, and then again by the audience before Mr. Simon came out to end the program. First of all he thanked everyone for coming, and for their kind attention to the performers, and he talked about future concerts and opportunities to support the music program of the school. Then he said, \"We have one more encore performance for you this evening, which will be introduced by one of our young men, at his request. I apologize for the length of the program, and the way it has stretched out, but I really don't think you mind.\" A chorus of 'No's' and applause drowned him out. \"Please allow me to introduce Ted Dawson.\"\n\nI started to follow Ted onto the stage, but Jermaine held me back. \"Hang on just a minute, Carl. We go out in just a minute. Ted asked Mr. Simon for permission to introduce us.\"\n\nI looked at him puzzled for a moment, but then I heard Ted start to speak.\n\n\"Ladies and Gentlemen, I'm not a public speaker, and to be honest with you I'm terrified to do this, but I think you need to know the story behind this next number and in part what has happened this evening.\" He took a deep breath and wiped sweat from his forehead. \"Tonight you have been introduced to a big guy, who also happens to be a big man. Carl Hudson has always been big, much bigger than the rest of us, and since the first grade most of us have made his life a living hell. Am I supposed to say that?\" He looked back toward Mr. Simon, then forward again. \"I guess I can't take it back. I was one of his worst tormentors, and I'm deeply ashamed of myself.\" Again he paused for a breath and to wipe sweat from his forehead with a tissue.\n\n\"Several weeks ago in class I made an egregious crack about Carl's size, and I was suspended from the class for a week, and from school for three days for what I said. I'm not proud of what I did, but I have to say it is the best thing that ever happened to me. Mr. Simon read me the riot act about my actions and what I said, comparing them to racial slurs. At first I was offended terribly at the comparison, but when I got home and my Momma found out what I had done. . .\" he paused and nodded toward his mother, \"she started in on me and basically said the same thing Mr. Simon did, but he was nicer!\" That got a little bit of strained laughter from the audience. \n\n\"Mr. Simon had assigned to us the task of choosing groups to sing with for the program this evening. One brave young lady spoke up and said she wanted to sing with Carl. Of course, she received the same mockery we had given him, but you heard tonight what a great pair they make!\"\n\n\"After my mother got through chewing on me I had to take a hard look at myself, and to be honest I was ashamed of what I saw. I projected on Carl for his size for years what I felt I received because of my race. The thing is neither of us can change either. I reread Dr. Martin Luther King's I Have A Dream speech and listened to it several times and decided I wanted to put what he said into practice. I went over to Carl's house and apologized for my actions, and we have become good friends as a result. He is indeed a big, big man, and I'm not talking size either.\"\n\n\"A while ago you heard Jermaine, James, and me sing a trio. I invited Carl to join us, but he said he had promised to sing with Annie. I told him if he sang with us we could call ourselves the 'Oreos', but with him in the middle it would have to be the 'Double-Stuffed Oreos'.\" This time he got a real laugh.\n\n\"Mr. Simon stopped by Carl's house to talk with him about singing with Annie, concerned about it because of the mockery he has received from all of us for so long, and while there he learned what an accomplished pianist Carl is, and also what a beautiful voice Carl has. It was his idea to pair Carl and Evan together for the intermission, and then to have Carl play a couple of numbers more. Then tonight you all received him so well Mr. Simon just had him keep playing and playing.\" Applause started up again.\n\n\"Look, I'm sorry to be going on so long, here, but this is totally off the cuff, and I'm sorry if I ramble. I just wanted to say Jermaine, James, and I started hanging at Carl's house after school and fooling around singing and stuff and we came up with a song that we sprang on Mr. Simon, just as a Christmas present when we were supposed to be practicing this morning, and he insisted we do it tonight as our encore. May I present the 'Double-Stuffed Oreos', and we would like to sing for you, \"Go Tell It on the Mountain\" in a Negro Spiritual style of Carl's arrangement.\"\n\nJermaine gave me a little push and the three of us went out to join Ted on stage. I sat at the piano, and the three guys gathered round me. I had arranged the piece to feature Jermaine's high falsetto voice counterbalanced by James' very deep bass, with Ted and me filling out the middle parts. We did it rather up tempo, with plenty of syncopation and movement to keep it lively. By the time we were through the audience was on its feet clapping along with the music. We ended and took our bows to thunderous applause and went backstage. I couldn't help myself. I grabbed Ted and gave him a big hug. \n\n\"Thanks, man. That took guts!\"\n\n\"If I'd have treated you right all these years it wouldn't have been necessary.\"\n\nDr. Robinson, the school Principal, came hurrying over to us, her high heels clacking across the tiles. \"Ted Dawson! I want you to know I am proud of you! That was the best thing I've ever heard another person say or do! I am going to expunge your suspension from your record, and it will only show as a three day absence, reason left blank. I see no reason that should be a blot on your record after what you did tonight to atone for it. Is that OK with you?\"\n\nTed just looked at her with wide eyes. \"Thank you, Ma'am. Thank you!\"\n\n\"You deserve it.\" She turned to me. \"Carl, that was wonderful! I know you are going to hear that over and over. I hope it doesn't go to your head and spoil you, but what you did tonight was absolutely wonderful! I have to find Evan! My daughter is getting married in June. If Evan is willing would you two play that piece as part of the wedding?\"\n\nI nodded. \"Yes, ma'am, if Evan is willing and I'm free that day.\"\n\n\"Thanks.\" She swept away, and Mr. Simon stepped up to us. \n\n\"I heard what she said, Ted, and I couldn't agree more. Well said, young man.\" He reached an arm around Ted and another as far around me as he could and pulled us together. \"I'm not leaving you two out of this, either,\" he said to James and Jermaine. \"Beautiful job tonight. That was the best Christmas present I've ever received! Carl, you were brilliant! It was a great night all the way around, and I proud of all of you kids.\"\n\nHe stepped away just as a very dark lady stepped up to me and grasped my arms. She pulled me down and kissed me wetly on the cheek, and I felt tears running down her own cheeks. \"Carl, I want to thank you for what you've done for my boy, Teddy. He's a different boy, now.\" She turned from me and gathered Ted into her arms and held him tightly. At first Ted was a little embarrassed by the display, but when he saw the looks the other three of us gave him he smiled and hugged his mom back.\n\n\"Thanks, Mom. I love you, too,\" I heard him whisper. My mother and grandmother came hurrying up then and hugs were exchanged, and Mom and Grandma made it a point to include Ted, James, and Jermaine, with Mom thanking Ted for saying what he did. \n\n\"Ted, there will be those who will misunderstand what you said, and willfully so, but I want you to know I couldn't be prouder of you if you were my own son, and your mother has a lot to be proud of!\" Mom gave Mrs. Dawson a big hug and introduced herself. Before it was all over the Dawsons, James's family, and Jermaine's family were all invited over to our place for pizzas and an after party.\n\nI had a lot of others gathering around me for a while, but I kept looking for the one I really wanted to see, and finally I was able to spy Annie sitting over to the side with her mother, just smiling and waiting. I made my way over to her and gathered her up in a hug, holding her up off of the floor and spinning her around, and saw her mom smiling up at us. \"I've been looking for you!\"",
        "\"I know. You had so many others that wanted to see you tonight. I could wait.\"\n\n\"I couldn't! This night wouldn't have been possible if it wasn't for you! Thank you!\"\n\nBefore it was all over Mom had corralled Mr. Simon and insisted he and his wife join us, and of course Annie and her mother came over too. We spent hours, into the early morning, eating pizza while gathered round the piano and singing together, just enjoying ourselves.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAnnie and I became inseperable. We didn't date as such, but if one of us went somewhere, the other went also. Of course, Ted, Jermaine, and James became a big part of my life as well, and you could count on seeing the four of us guys together a lot of places. I'm sure it was rather incongruous at times, big old white me, with the three of them, James being not much bigger than Annie, and as black as could be. The four of us worked together with the Student Council on race relations in the school, and Ted's turn-around made a big impact. I personally had never cared one way or another about race, just trying to take people as they came. Before my new-found notoriety that had not been an issue as mostly I left people rather than took to them, but now I found I was in the position of having people coming to me, wanting to be my friend. At times I found it trying, especially when some of the girls who never would have deigned acknowledge my presence tried to make nice with me to get things from me. I had little time for them, and I'm afraid I wasn't always as nice as I should have been.\n\nThe rest of the school year rocked along pretty well. I did agree to work with the Jazz band, much to Mr. Simon's pleasure, and I had a lot of fun, although it still was trying for me to perform in public. My piano teacher also, with my mother's connivance arranged a recital, but instead of it being held in conjunction with all of her other pupils she had me put one on alone. \"This is catch-up for all of the others you missed, Carl!\" I got even with her, though, because I went back through all of my old books and picked out the songs she would have had me play at each stage of my progress, and I played them for the recital, starting with of course, \"Twinkle, Twinkle, Little Star\". I did arrange them at my level of play now though, with just enough of a hint of what it would have been to make her squirm.\n\nAnnie and I both met with the District Attorney on a couple of occasions, making plans for the trials of the three punks that attacked me. Their trials were delayed significantly due to the time necessary for them to recover from their injuries, and then their attorney kept getting continuances and delays so that they didn't actually go to trial before late summer. The outcome was never in doubt, and all three of them were sentenced to extended periods of time in the penitentiary, having been tried as adults rather than as minors due to the severity of the attack.\n\nTheir attorney appealed the convictions based on a technicality of something the judge said during the proceedings, and the verdicts were thrown out by the appeals court, and a retrial was ordered, but due to the backlog in the system it couldn't be scheduled until after the beginning or our Senior year of school. All three guys were ordered to leave us alone, and of course were not permitted back into our school, but were assigned to an alternative school. For the most part we were able to forget they existed, other than an occasional note from the DA or somebody about the case.\n\nBoth Annie and I had early birthdays in the school year, mine being in late September, and hers the second week of October, so we turned eighteen at the very beginning of our senior year. \n\nI knew I was in love with Annie, and I knew she loved me, but we had never done anything beyond hold hands and an occasional light kiss or hug. We both had been brought up to respect each other's person, and to withhold sex until marriage. As much as we loved each other and wanted to be together, and as much as I wondered what sex with her might be like I was content to wait. It was an anxious contentment, to be sure, and I worried about our size differences and whether I could possibly make love to her without hurting her. I know she wondered the same from a few very light conversations we had on the subject, always in the subjective, and always in the future. We knew marriage was in our futures, although I had not actually proposed. We talked about what \"our\" home would be like, and about \"our\" family, but like I said, we weren't in any hurry.\n\nAnnie was in my home much of the time, and I was in hers as well, even though both of our mothers worked and didn't arrive home until much after we got home from school. They trusted us, and being the kind of kids we were, we honored that trust. I know, it seems hard to believe, but it is true, and to be honest, it was a lot more true of many of our friends than people would believe. Sure, some of them fooled around more than did Annie and I, but very few of them were actually sexually active. I don't say that is necessarily true of the student body in general, but among our circle of friends it was so.\n\nMaybe one reason was it frequently was not just the two of us hanging out at home together. Ted and Corrine, his girlfriend, and/or James and Joyce, or Jermaine and LaTicia hung out with us. Quite often there would be others around as well. I was amazed. From being a social outcast, nearly a pariah, I had turned into not a social butterfly, but more of a social magnet, drawing people to me like iron filings to a magnet. With my background it was often the socially inept or ignored that tended to gather with us, although we often had quite an eclectic mix of personalities, blending different social strata together nearly seamlessly. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt was the night before Annie's eighteenth birthday, and I was taking her out to dinner, all the bells and whistles as on her birthday it was to be a celebration at home with her mother, although of course I was to be included. I dropped her at her house to get ready and walked on over to my place to prepare. This was going to be all out, with coat and tie and everything. You couldn't even get in the door of the restaurant I was taking her to without coat and tie. I was really pleased with myself, and looking forward to a fun evening when my world was shattered by a scream from Annie's house. \"NO! Please don't!\" I heard, and that was all it took. I started running back to her place, only to find her door locked and dead-bolted. Inside I could hear her crying and trying to scream, but it was muffled now. I stepped back and slammed my shoulder into the door, and trust me, as solid as that door was it was no match for four hundred eighty pounds of fury and fear for my Annie!\n\nThe door bounced off of the wall, taking a good bit of the door frame with it, and I saw three people I had hoped never to see again other than in court. I heard a slam, and felt a whip of air go past my ear as Dave, the same guy as hit me with the pipe before, fired a gun at me. Behind him I could see Tim and Josh had Annie down on the floor, and had ripped her clothes from her. Tim had his cock out and was trying to rape her while Josh held her down. I dove at Dave first, determined to get the gun away from him before someone got hurt, and I had just reached him when I heard and felt a slam of a bullet as it hit my left shoulder. I grabbed him around the throat with my right hand as I tried unsuccessfully to get my left arm to work, but it wouldn't respond. I felt no pain, the adrenalin was to strong. I felt another slam, this time with the gun pressed against me and I squeezed with all my strength and felt his neck snap.\n\nI dropped him to the floor and swung a kick at Tim, knocking him off of Annie, and then had to dodge as Josh came up from the floor with a knife in his hand, slashing at my belly. My left hand wouldn't respond, leaving me badly limited, but I was able to catch Josh's wrist and force the knife away from me. I couldn't do much about it because Tim dove for the gun Dave dropped and tried to fire at me. I jerked Josh around, trying to get the knife free from him just as Tim fired, and the bullet intended for me hit Josh in the belly, and he dropped the knife. \n\nI had no choice but to dive for Tim, who turned back to Annie and pointed the gun at her. \"Stop right there, or she gets it!\"\n\nSomehow, I knew better than to stop, but instead I dropped down and grabbed the knife from the floor and threw it as hard as I could. I had no idea I'd do any good with it other than I was doing all I could to deflect his attention from Annie. It worked. Tim instinctively lifted his arm to ward off the knife, and the point went in deep into his armpit, and blood spurted out in a fountain.\n\nI looked over at Annie, and for the first time saw what she looked like naked. Trust me, it was not what I wanted to see, nor the way I wanted to see her! She curled up in a fetal position, weeping. I stripped the table cloth from the dining room table and covered her then grabbed the wall phone and dialed 911. Suddenly, the adrenalin wore off, and the pain began. It was a sharp burning sensation that radiated and pulsed throughout my shoulder and upper chest. I fell to my knees and clutched my shoulder with my right hand, and was waiting there in that manner when the police arrived just moments later.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\nI woke up groggily several hours later in the recovery room after three hours of surgery on my shoulder. My shoulder was put together like a jigsaw, and held together with wires and screws. The Brachial Artery had been grazed, and why I didn't bleed out I don't know, other than Swanny, Officer Swanson, was the first officer on the scene, and he had served two tours of duty as a Corpsman with the Marines in Afghanistan. He knew how to deal with wounds of the sort, and he had me stabilized before the EMT's even got there. Had it not been for him this story would not have been written. \n\nAs soon as I started to stir a rather haggard Annie leapt from the chair in which she had been waiting and threw herself around my neck on the right side carefully so as not to hurt me further and wept into my neck. A nurse heard the commotion and hurried in the door calling for the doctor. She tried to pry Annie away from me, but I grabbed hold tightly and held her to me as best I could in the stupor in which I found myself. \"Let her be!\" I kept saying over and over. Mom was there beside Annie, as was Annie's mom. Mom gently disengaged Annie, saying she could come back to me in a couple of minutes, but the doctor needed to check me over first. When he got through checking my conditions the doctor allowed Annie back over by me; but he asked her to please be careful not to disturb me any more than necessary. It was only a little while before they transported me to a regular room, where I would spend the next two weeks, with Annie refusing to leave my side, except to go to school. \n\nThe hospital wanted to raise a fuss about her staying since we aren't married, or blood kin, but Mom, being a Nurse Practitioner pulled some strings and since Annie turned eighteen while I was in surgery she was allowed to stay.\n\nMy arm was put in a cast that looked somewhat like the claw on a fiddler crab, and stuck out awkwardly. It was held up in traction, keeping the weight off of my shoulder as much as possible. Pain was nearly continuous, with all of the bone fragments seeming to rub against each other, and I was kept on some pretty high doses of pain killers for a few days, which scared me, because I've heard way too many stories and seen way too many people get hooked on the things. \n\nOfficer Swanson visited me with questions about the altercation as soon as the doctor would let him. He took my statement and had it typed up for my signature, but I had no problems. It was clearly an open and shut case of self-defense, and the defense of Annie. Swanny told me Josh would probably survive, but that he had a perforated intestine in several places, and would never be the same, and if Swanny had anything to do about it, Josh would never leave prison. Of course, it was up to the DA, but Swanny wrote up every charge he could think of, including attempted rape, assault and battery, assault with a deadly weapon, two counts of attempted murder, violation of a protection order, breaking and entering, - not necessarily in that order, but I'm going from memory - even illegal parking. \"I want to make sure there is no way for him to weasel out of this one! Even if the DA is willing to do a plea bargain I want enough charges on him they won't be able to do much.\"\n\nThe other two mutts didn't make it. Do I have any bad feelings about it? Not on your life! I don't like the idea I killed someone, but they brought it on themselves. They shouldn't have attacked my Annie. I have had no bad dreams, but Annie has had more than a few. For this alone I cannot forgive them!\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nAt last I was released from the hospital to go home. As big as I am it is difficult enough to get in and out of a car, but with my left wing immobilized at a ninety degree angle from my body there was no way I could possibly get into or out of a car, and they had to transport me home in a van. Annie, of course, rode along with me and was there to try to help me into the house. I walked with a bit of a list, trying to balance the heavy counter-weight of the plaster cast, and it was humorous to see Annie walking alongside me as if trying to prop me up! She held everything together until we were inside and away from prying eyes. As soon as the door was closed and I got settled into my Lazy-Boy she crawled into my lap and wrapped both arms around my neck and broke down. \n\nI hugged her to me tightly and let her cry it out, which took some time. Her mom and mine had the wisdom to slip out of the room and leave it to the two of us, understanding this was something they could not help. All the time in the hospital she kept a brave face on, and was always positive, but now I understood at what a cost! \n\nFor three days Annie was withdrawn and morose around me when home from school. She insisted on being there with me, but had totally lost all spark or zest for life. I kept telling her how much I love her, which would only bring a half-smile and wistful look into her eyes. Finally I couldn't take it any longer, and I caught her hand as she walked by once. Pulling her to my chair I lifted her up onto my lap like a little girl and held her to me.\n\n\"Annie, talk to me. What's the matter? You know I love you, and those guys aren't coming back ever again.\"\n\nAnnie sniffled and buried her face in my shoulder, unable to look me in the eyes.\n\n\"Tell me, is it me? Is it what I did?\"\n\n\"Oh, no!\" It was a muffled wail with her face buried as it was, and I felt her body shudder against mine as she wept. \"I owe you my life!\"\n\n\"Well, what is it then? What's wrong? I can't take you rejecting me like this.\"\n\nHer head snapped up, and her big tear filled eyes looked into mine. \"I'm not rejecting you! I love you, but I'm not good enough for you any more. You know what they tried to do to me!\" She burst into tears again and buried her face on my shoulder once more and wailed and wailed.\n\nGathering her tightly into my arm as best I could I held her to me, feeling the way her body molded to mine. I stroked her hair and caressed what part of her face I could reach with my fingertips until she finally started to calm.\n\n\"Sweetheart, do you really think that makes a difference to me? Do you really think I would reject you because of what someone else did? I love you! Will you marry me?\"\n\nI really didn't mean to say that! I meant it, but that was not the time nor the place I wanted to ask it! I had a ring for her, and had planned to ask when we went out to eat for her birthday, but of course that didn't happen then, but this was not the romantic time I had envisioned for us.\n\nAnnie's head snapped back and she looked at me wide-eyed. \"Do you really mean it? Really? You aren't just asking because you think you have to?\"\n\n\"Sweetheart, I mean it. This is not where I planned to ask you, but I mean it with all of my heart!\"\n\n\"Oh, Yes, Yes, Yes!\" She launched herself at me, wrapping both arms around my neck and squeezing for all she was worth. The pain was intense when she landed on my shoulder, but I really didn't care! I had my Annie back! The tears were flowing again, but for the first time in a long time they were the right kind of tears. Once she settled down again with a big sigh and nestled contentedly in my arm I set her down on her feet.\n\n\"Wait right here.\" I made my way carefully to my room and retrieved the little black jeweler's box from my dresser and slipped back into the living room, where I awkwardly knelt before her and held out the box. Carefully I slipped open the flip top and let her see the ring snuggled down in the velvet inside. \"I'm sorry, but I can't take it out and put it on your finger. Can you get it out for me?\"\n\nWordlessly she removed her new ring from the box and handed it to me, and I carefully placed it on her finger. Her eyes glowed as she stepped in to put her arms around my neck and give me the most gentle kiss, yet the most passionate kiss we have ever shared. \"I have wanted to marry you since we were in the fourth grade. I have always loved you, and I always shall. I owe you my life, and I gladly give you my life. I love you, Carl!\n\nYou know, it was kind of funny. In all this time I finally found a way I could look her in the eye and be nearly on her level. It was when I was on my knee before her, offering myself to her. Something was symbolic there somehow.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI returned to school the next day for the first time, and of course I had all kinds of people who wanted to talk, but I managed to keep it to a minimum. I just didn't have the energy to deal with all of the drama. Ted, Jermaine, and James were all at my house to escort Annie and me to the school, and they were there again at the end of the day to walk us home, this time with their girls with them, and we had a bunch of fun hanging out at the house for a while. I couldn't play the piano, but we all sang and carried on together and just had fun. Of course, the girls couldn't see Annie's ring enough and were constantly wanting to look at it. At last, they left, which I had been waiting for for a while! I wanted Annie alone. \n\nTired, I settled into my Lazy-Boy, and she came and sat in my lap. \"Carl, are you really sure?\"\n\n\"Yes, Sweetheart. I'm sure.\"\n\n\"But I'm so tiny. I'm not sure I can satisfy you.\" She looked down and blushed to the roots of her hair. \"You saw me that day. I don't have much of a body.\"\n\nGently, I tilted her face up to mine. \"Annie, please will you understand something? I didn't want to see you that way, but all I saw was beauty, and I saw the one I love. What happened that day will never change it, and when the time comes to see you again it will be wonderful and it will be beautiful, and it will be all I ever want it to be.\"\n\nI think she probably felt it, the way she was sitting on my lap, but I started to stiffen at the thought of seeing her. I was embarrassed, but it wasn't something I could help. I tried to shift her off of me a little bit without letting her know why, but she leaned in to me instead and gently kissed me on the lips. \"Wait right here. I have to do something,\" she whispered and slid down off of my lap and walked down the hallway to the bathroom. \n\n\"Carl?\"\n\n\"Yes, Sweetheart?\"\n\n\"I have a surprise for you. Close your eyes, and no peeking, OK?\"\n\nI closed my eyes, puzzled at what she was doing. \"OK.\" \n\nI could hear her padding back down the hallway and walk up right in front of me. Softly I heard, \"You can look now.\"",
        "When I opened my eyes Annie stood there in front of me totally nude, with a small smile on her face. \"I planned to wait for marriage for this, Carl, but I had to know.\"\n\n\"Annie! You're beautiful! But why? Why now?\"\n\nAnnie stepped forward, seeing the look of awe on my face. \"I just decided it has been long enough, that I love you, and there will never be another. I just had to know what it is really like with love instead of what happened when you got hurt. I have to know the difference.\"\n\nMy arm went out to her, to gather her to me, for the first time seeing a naked woman in the flesh, except for that fateful time, which was not beautiful. The feel of her soft skin against my hand as I pulled her gently to me, the look of trust and love in her eyes, the soft swell of her small breasts, with their excited nipples, and the gentle curve of her hips, with the downy black hair at the apex of her legs. I had never seen anything so beautiful in my life! I've always known Annie was beautiful, but this was way beyond my wildest imaginings, and here she was offering herself to me freely.\n\n\"Please, Carl, will you make love to me? Will you make me your woman?\" She stepped fully into my arm and rested her head on my shoulder. \"Explore me, touch me, you can do anything you want to with me.\"\n\nMy hand trembled as I caressed her skin. I had always imagined I'd go straight for the breasts and pussy, but I found instead my hand kept stroking her side, exploring the gentle curves of her figure, and stroking her back as she pressed her breasts against my chest. Even through my shirt I could feel her breasts' softness, and the nubs of her nipples as she snuggled up close and tight.\n\n\"Please, Carl, I've only seen one guy's penis, and I don't want that image in my head any more. May I please see you?\"\n\n\"Anything you want, Sweetheart. I'm yours. I'm just afraid I will hurt or disappoint you.\"\n\n\"I'm not worried!\"\n\nShe slipped from my lap and reached for the button on my jeans. \"It looks really big! I hope it will fit in me!\" \n\nThat was my worry, too. Fortunately, my size doesn't necessarily translate into being proportionately big down there, although I'm certainly not lacking in size. Annie stroked me through my jeans before unzipping and opening them up to reach inside my boxers and feel it in the flesh. When her hand touched me the first time I gasped at the sensation, and then I lifted my hips as best I could for her to try to pull my jeans down. \n\nI just couldn't get enough leverage with the cast on my arm, so I had to set the chair upright and stand. A quick tug and my jeans were down around my ankles, my boxers with them, and Annie was seeing for the first time a cock that was meant for loving her, and not for her abuse. She stroked it gently with her tiny hands a few times before leaning in to kiss it on the tip.\n\nShe tugged at my shirt after unfastening the snaps that held the sleeve over the cast, and I helped her pull it over my head, and then she gently pushed me back into the chair and climbed back onto my lap. The sensation of her skin against mine was so wonderful, and as she pushed back on me so that the chair laid back and she pressed her breasts against my chest and I felt for the first time the softness of her pubic hair caressing my cock I nearly lost it. Tightly I hugged her to me, whispering \"I love you,\" over and over again into her ear. I kissed her passionately, my hand still caressing her back and side.\n\n\"I hear girls talking about giving their boyfriends blowjobs, but I'll never be able to do that for you. I can't get you into my mouth! I'm sorry! I hope you don't feel cheated.\"\n\n\"Sweetheart, I love you, not a blowjob!\"\n\n\"Good. I don't ever want to cheat you out of anything.\" She slipped up a little higher and reached down to slide my cock between her legs and to the opening of her vagina, and then she slowly slid herself down onto me, slipping the head of my cock into her pussy a little at the time. \"Please let me go slowly! You are so big!\" I felt her slide down to the point of resistance, and she slipped up and down that short little distance a couple of times before saying, \"Here goes. I'm going to make me your woman,\" and she lunged downward firmly, and I felt the tearing of her hymen, and she stopped with her eyes welling with tears from the pain, but moments later she started moving slowly downward again and a beautific smile crossed her face as she finally bottomed out on me. \n\nI had been afraid I would not fit all the way in, but I did, just barely. She stopped and laid her head on my chest. \"I'm so full! Carl, this is wonderful, thank you! Thank you! Thank you!\"\n\nThe urge to move was on me, but I resisted, leaving it to Annie to control things for our first time together, and soon she started moving on me, slowly at first, and then more urgently. \n\n\"I'm not going to last!\" I panted. I was squeezing my legs together, trying everything to keep from coming to soon, but it was not going to last! It just felt too good, and she was so tight and warm. I wanted desperately to make it last for her, but I couldn't. \n\n\"Don't worry about me. I didn't expect you to the first time. Mom told me you wouldn't, but we'll have many other times. Come in me. I want to feel it!\"\n\n\"But what about getting pregnant?\"\n\n\"I got on the pill. I talked with Mom about things a while back, but I didn't expect it so soon. Let it come. Make me yours!\"\n\nThat's all it took. \n\nThings didn't happen romantically like I had planned. I mean, in a Lazy-Boy, with one arm stuck out in limbo where I couldn't even hold her properly, and with all of the emotional baggage that we had to deal with, but it was still the most wonderful thing anyone has ever done for me, and I was determined to spend the rest of my life making it wonderful for Annie.\n\nEpilogue:\n\nCarl and Annie married right after high school and went to college together, where they majored in Counseling, and they have served together as School Counselors in the High School they had attended. Carl never played the piano again. The bullet that grazed the Brachial Artery also bruised the Brachial Plexus, the nerve center that controls much of the hand and arm. While he regained use of the arm, and even of the hand, he was never able again to have the dexterity and flexibility necessary for the piano.\n\nTheir sex life is different than many due to the great size difference, but is no less satisfying, and they have two beautiful, precocious girls, ages six and eight, both of whom look like their mother. Carl says his life could not be more fulfilled, and Annie always seems to have a smile on her face. Their biggest task in the school is working on bullying programs, and developing programs to bring those who hide in the shadows out into the light where they can grow and become good students and leaders.\n\nTeddy went from High School to a church related college where he studied for the ministry, and he has served as a Youth Evangelist under the auspices of an organization he founded called \"Dream Ministries\", where he focuses strongly on race relations in teens and focusing diversity within youth programs in churches. He calls on Carl frequently as a guest speaker, and often when in a campaign the 'Double-Stuffed Oreos' are featured. \n\nJermaine studied Electrical Engineering and owns his own company, where he frequently works closely with James, who became a general contractor, specializing in large commercial structures.\n\nMr. Simon moved into administration and became Principal when Dr. Robinson retired during Carl and Annie's senior year in college, and it was he who reached out to Carl and invited him to become school counselor."
    ],
    "authorname": "Callicious",
    "tags": [],
    "category": "First Time",
    "url": "https://www.literotica.com/s/corpulent-carl"
}