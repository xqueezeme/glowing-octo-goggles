{
    "title": "The Long Weekend - Day 04",
    "pages": [
        "THE LONG WEEKEND DAY DAY FOUR: THE INTERVIEW\n\nThe previous day Melina set up an interview for Lindsay with Andre, the head of a design company tasked with producing the catalogue she is currently shooting for. Lindsay however is still nervous about the interview and dipping her toes in this new world of lesbian love. A chance meeting with a gay woman in the city changes all that and sets her feet on firmer ground.\n\nAuthor's note: I have included a meeting with Robyn, a character from my story, The Rescue. If you want to see how they got together you can read The Rescue. This was an impromptu scene but I wanted to see how Robyn is getting on now she's with Lisa. I'm not sure how far to take this particular story yet. I get the feeling it's almost done.\n\n*\n\nLindsay watched as Melina approached the bed. She was sitting up and wearing Melina's satin dressing gown. Her girlfriend had been up for the better part of an hour getting ready to leave for her shoot at The Stokehouse in St Kilda. It was now 8:15 and Lindsay had been eyeing the bathroom up for the last fifteen minutes as she drank the strong black coffee and tried to collect her thoughts. \n\nThe plan had been discussed last night after they returned from a light dinner in town. Melina would go to her shoot and Lindsay would drop by just before lunch.\n\n\"I do not know if I will be around for lunch but do not worry about the cost, I will put your name on the door and the agency is covering the bill. Ask for Andre and then the rest is up to you.\"\n\nAm I ready for this?\n\nLindsay's eyes flickered to the grey trousers she'd brought from home the previous day in Melina's bag. The trousers were functional and the kind of thing she wore frequently to work, the pink blouse softened the light grey somewhat but she thought it too plain. \n\nEspecially in contrast to Melina's outfit. The German model wore a dark brown skirt suit with a green, satin blouse decorated with generous ruffles down the front. She looked so impossibly elegant and Lindsay flicked at her hair as Melina perched on the edge of the bed. A wistful smile nudged her lips as she reached out and stroked her face gently.\n\n\"I have to go now, are you ready for today?\"\n\n\"As ready as I can be,\" she fingered the lapel of her jacket, \"I wish I could look as elegant as you.\"\n\n\"He is interviewing you for your mind and your creativity,\" Melina tapped her cheek gently, \"not your body but I have something for you.\"\n\nShe leaned over to the bedside drawers and picked up her purse.\n\n\"No,\" Lindsay made to stop her, \"I'm fine, really.\"\n\n\"I insist,\" Melina took out five hundred dollars, \"go down to Myer or that place we were at when I bought the shoes.\"\n\n\"Melbourne Central.\"\n\n\"Buy yourself a new suit. I want you to look your best today. Smart and sophisticated, image is everything in this business. Arrange to change into the suit at the store and hop on a tram.\"\n\n\"You're doing too much for me.\"\n\n\"Not enough,\" she leaned over and brushed her lips with a light kiss, \"goodbye for now.\"\n\nAnd with that she was gone, leaving Lindsay lying against the pillow in an empty hotel room. She lay there for a further ten minutes, going over the schedule she'd worked out earlier, it would now have to be modified if she was to get this suit.\n\nSwanston Street was bustling as she stepped off a tram and looked up and down the road. Cars were banned from this part of the city and she frowned as she started walking. To her right the Victorian architecture of the Town Hall towered over her. Melina had posed in front of the building the other day when Lindsay took her on a personal guided tour of a city she only visited once a month. A woman caught her eye. She was wearing a black skirt suit over a white blouse and on impulse she changed direction and headed towards her. The woman was texting someone whilst drinking a coffee from a Starbucks cup and didn't notice Lindsay until she coughed.\n\n\"Hiya,\" Lindsay smiled, \"lovely day, isn't it?\"\n\n\"It certainly is,\" she sipped her coffee, \"too nice to be inside.\"\n\n\"Tell me about it,\" she swallowed her nervousness, \"um, I was wondering if I could ask you an odd question?\"\n\n\"An odd question,\" the woman looked past her, \"for your information I'm a therapist so I've certainly run the gamut of odd questions, but go ahead,\" she smiled, \"hit me with it.\"\n\n\"I've got a job interview in a couple of hours down at the Stokehouse and I was wondering where you bought your suit?\"\n\nThe woman's eyes shifted as she looked past her and Lindsay blushed as she adjusted her grip on the shoulder bag that also contained Melina's laptop.\n\n\"When is this interview?\" \n\n\"Just before lunch, my um, my girlfriend gave me money to buy an interview outfit even though I thought this was okay. She wants me to look my best, she's a model.\"\n\nThe words tumbled out and she felt as if she was standing in the middle of Swanston Walk stark naked with the word freak suspended above her head.\n\n\"Your girlfriend,\" the woman raised the cup to her lips.\n\n\"Yeah,\" she replied, \"although we've only just met so maybe that's the wrong word.\"\n\n\"So, she's your lover?\"\n\n\"Something like that,\" Lindsay replied.\n\nThe woman took out her phone and then swiped the screen and tapped an icon and while Lindsay stood waiting she made a call.\n\n\"Hiya, sweetie. Are you busy right now?\"\n\nShe stepped forward and peered down the road as a tram rumbled by.\n\n\"Good, look I'm just outside the town hall, I'm bringing a woman up to see you, she's looking for an interview suit.\"\n\nLindsay held her breath as she ran a cursory eye over the woman. She had long thick blonde hair that fell past her shoulders and a face that could only be described as beautiful.\n\nIs this the kind of woman Melina would fall for?\n\n\"Great, I'll see you soon,\" she ended the call and turned around.\n\n\"Today is your lucky day,\" she dropped the phone into her handbag, \"my sister is the manager out at Portmans in Melbourne Central, I'll introduce you and leave you in her hands,\" she held out her hand, \"I'm Robyn by the way.\"\n\n\"Lindsay.\"\n\n\"Come on,\" she inclined her head, \"walk with me.\"\n\nLindsay fell into step beside her.\n\n\"So, Lindsay. How long have you been attracted to women?\"\n\n\"I wasn't, until Saturday.\"\n\n\"A quick fling that might lead to something else?\"\n\n\"That's the part we're both unsure about, she's been that way for years but it's all new to me, it's still early days though.\"\n\n\"A wise choice of words,\" she glanced over at her, \"for me it took a long time.\"\n\n\"You're gay?\"\n\n\"I am,\" she replied, \"I'm living with my partner at her place in Box Hill, we've been together nine months but it took a good few months before that of just getting to know her. She was with another woman at the time and when she broke up, to cut a long story short, I ended my relationship and got together with Lisa.\"\n\nThe frank admission took her by surprise but Lindsay found herself unloading to a total stranger, albeit a therapist about her doubts, her hopes and the larger concept of what it was to be a lesbian in a straight world.\n\n\"I mean I don't feel different, except when I think about Melina and then I wonder what the hell she would see in me.\"\n\n\"You know what you need to give yourself?\" Robyn asked as they neared Portmans.\n\n\"What?\"\n\n\"A fighting chance. You've fallen in love with a woman, it's not the first time this has happened so don't go thinking the world will automatically rise up to congratulate you. I asked myself a lot of questions over a much longer period of time but in between meeting Lisa and winding up with her, I found I only had one question to answer,\" she paused at the door of Portmans.\n\n\"Did I love this woman? If the answer was yes then why the hell was I dilly dallying about trying to sort out if I was gay or not? You can drive yourself mad with online forums, lesbian how tos, You Tube videos and all the assorted nonsense and not all of it is nonsense so perhaps I'm being a little too hard. You'll find helpful hints but sometimes it's like walking into a sweet shop on an empty stomach, you don't know what to try first.\"\n\n\"We've agreed to stay single for three months,\" she replied, \"it makes sense.\"\n\n\"It only makes sense if you're looking for a back door. If you love this woman then be up front about it, admit you're still looking for context and then go to work on your relationship. In my line of work I meet an awful lot of couples who never laid the foundation stones before they tied the knot. Most people spend untold hours and insane amounts of money on a wedding but hardly any time discussing the little things,\" she smiled.\n\n\"Like, who does the shopping, where do you want to live, what's your favourite colour? They're just random questions but finding out that your partner likes you in a white shirt when you only own one white shirt can be a fun way to learn more about this woman you're hoping to spend the rest of your life with,\" Robyn nudged her.\n\n\"Between now and whenever you ladies decide to move in together you've got one thing on your side.\"\n\n\"What's that?\"\n\n\"Distance, you might dread the tyranny of distance but with email and chat you're in instant contact wherever you are. You're not distracted physical contact with each other, which gives you and Melina more time to find out what's inside,\" she tapped Lindsay's head, \"because that kind of beauty survives the ravages of time.\"\n\nShe opened her bag and took out a card.\n\n\"Here, take this and call me if you want to talk, my Twitter is there too,\" she pointed.\n\n\"If you want this to work it will work but it must come from you,\" she inclined her head, \"come on, let's go find Melinda.\"\n\nMelinda was a few years older than Robyn and Lindsay warmed to her instantly as she farewelled Robyn some ten minutes later.\n\n\"Remember, seize your chance,\" Robyn winked, \"and let me know how you get on today.\"\n\n\"I will, thanks.\"\n\nThe Stokehouse is located on Jacka Boulevard in St Kilda and offers stunning views of St Kilda beach and Port Phillip Bay. Lindsay had not been here since it had been rebuilt following a fire that destroyed the old restaurant a few years earlier. The last time she'd been here was in 2012 with an old boyfriend, Barry and as she recalled it was a pleasant enough evening. \n\nNevertheless, despite the impromptu pep talk from Robyn and the fact she had an appointment, Lindsay still felt like a fish out of water when she arrived at 11:20 for a twelve o'clock interview with Andre, who she didn't know from a bar of soap. There were nearly a dozen models in the upstairs restaurant. She had to show her driver's licence to a security guard before he lifted the rope barrier and let her in. Lindsay looked around for Melina and eventually spotted her in front of a mirror while a makeup girl worked on her face. She was talking to a man sitting astride a chair and pointing to her hair. Lindsay looked around the room, some tables had been pushed together to make one big table that was loaded with finger food, bottles of water and other drinks.\n\nShe clutched Melina's laptop and began threading her way between tables and people, both seemed determined to get in her way and eventually she stopped near Melina.\n\n\"Hey, you got here,\" Melina looked her up and down, \"check out the hot babe in the new suit, this is Lindsay Cunningham and this handsome specimen of a man is Andre.\"\n\n\"Hello,\" Andre rose and held out his hand.\n\nAndre was over six feet tall, of muscular build and almost completely bald, the only growth visible on his head was a neatly trimmed goatee. His suit looked to be Pierre Cardin or Armani and unlike some men, he wore it well. Perhaps the suit did make the man. She judged his age to be somewhere in his late thirties or even early forties.\n\n\"Pleased to meet you,\" she took his hand, he had a gentle handshake and she noticed he had a wedding band on his finger.\n\n\"Likewise, thank you for agreeing to meet me.\"\n\nIt sounded lame but his eyes didn't show it as he released her hand.\n\n\"So, how about we find ourselves a table,\" he looked around the room, \"if that's at all possible and you can show me what you've got.\"\n\n\"No worries,\" she smiled at Melina.\n\n\"Good luck,\" Melina returned the smile and as they walked away she heard the makeup girl say.\n\n\"Okay, you're done.\"\n\n\"Thank God,\" Melina called out, \"where's my next outfit?\"\n\nLindsay chanced a glance over her shoulder as she sat down. Melina was heading towards a temporary tent like enclosure erected in a corner of the room, the structure was open at the top and had a rack of clothes outside it. She took down a dress and disappeared inside and with her out of sight, she felt as if she was swimming through a quagmire. What right did she have to be here?\n\n\"You want some water or soft drink?\"\n\n\"Water, please.\"\n\nAndre moved over to the refreshments table, which gave her the chance to fire up Melina's laptop and put in the password Melina had made her memorise. The operating system was Linux Ubuntu, which she'd only seen a few times before but never had the chance to use. Melina had given her a basic tutorial that consisted merely of showing her where to find the files she'd transferred to her hard drive.\n\n\"Unusual to see a Linux desktop,\" Andre took a seat next to her, \"I use it at home and work, when did you first turn onto it?\"\n\n\"I um, didn't, yet,\" she smiled nervously, \"it's Melina's laptop but it certainly looks pretty slick, I use a Mac at home.\"\n\n\"We use Macs at work as well, but seeing as I'm the boss I get to choose my own system,\" he moved his finger over the touchpad, \"so, Lindsay's stuff is here, let's see what you've got.\"\n\nPrior to that moment, Lindsay had thought her work pretty good but when he saw the first layout, an advertisement for shoes she felt her confidence waning. She could see mistakes in the colouring but that had been the first practice attempt.\n\n\"Not bad,\" Andre studied it and went onto the next and then the next.\n\n\"Your work is quite good, not perfect but you're certainly on the right track,\" his eyes shifted some fifteen minutes later as Melina approached. She was wearing a chocolate-coloured satin dress, she moved around behind him and squinted at the screen.\n\n\"What do you think you can bring to my company?\" Andre scanned her resume for the second time in fifteen minutes.\n\n\"Creativity,\" she replied.\n\n\"Everyone says that,\" Andre sat back and folded his arms, \"give me something more.\"\n\nShe stared at Melina and then looked past her at the windows as she tried to think of something. They'd schooled her in a unit she'd done at this desktop publishing course in interview tips and tricks but she couldn't remember a damn thing, just a fragment of a memory from her Uncle Kevin one night at a family barbecue.\n\n\"You've got to make them want you. Make them think you're what they need, even if you have to bullshit them. I've bullshitted myself into jobs I was way under qualified for.\"\n\n\"Dedication,\" she swung back to the laptop and opened up the first layout.\n\n\"I did my desktop publishing course but to be honest it would never have landed me a job in any studio, so I got myself a copy of the program I'd been using and started doing my own layouts. I got those shoes from the Neiman Marcus website and spent a day and a half playing with the picture to get it the way I wanted. I deleted a dozen copies until I had it perfect. Then I had to put it on a blank page and write my own copy. I had to choose the text, wrap it to the picture and make up a web address to go with it. That took me a week and a half to go from a blank page to that but the last one took a day to do. I bring creativity because I had to take someone else's layout and do something different with it. I had to create something new. It takes dedication to do what I did. I learned far more about that program and other programs by teaching myself, and I could have been out with my friends or my boyfriend, whenever I had one.\"\n\nShe paused for breath.\n\n\"And yes, I know I'd be starting at the bottom but if you hire me, you'll know if you give me a task I'll keep at it until it's just the way you want it.\"\n\nShe finished suddenly and Andre moved back slightly, Melina looked over as a man walked towards them and she held out her hand.\n\n\"She's got what it takes, Andre.\"\n\n\"Excuse me, I have to make a call,\" he rose and walked to the window.\n\nLindsay looked at her work, Melina and Andre. She couldn't hear what he was saying but a minute or so later he ended the call and returned to the table.\n\n\"Thirty hours a week?\"\n\n\"Yeah, I can do thirty hours a week.\"\n\n\"Welcome aboard,\" he held out his hand.\n\nLindsay was temporarily caught off guard by the look on Melina's face, she was smiling and then looking away as if trying to compose herself. Lindsay shook his hand and thanked him and finally Melina stepped forward and put a hand on your shoulder.\n\n\"Congratulations.\"\n\nAnd then she was gone, heading out towards the verandah to do another shoot, leaving Andre with Lindsay.\n\n\"She's quite a woman,\" Andre murmured.\n\n\"She sure is,\" she smiled, \"I'm going to miss her when she's gone and it's only been three days.\"\n\n\"So, you and her are together?\"\n\n\"Kind of,\" she admitted, \"we've agreed to talk more about it before we come to any agreement,\" she let her eyes move to the screen, \"she's the one who talked me into coming here today.\"\n\nAndre didn't say anything for a minute or so and at first she thought it was because she'd been a little too frank.\n\n\"It sounds a bit like how Debbie and I got together,\" he took a drink of water.\n\n\"I met her at the Grand Prix eight years ago. She was over from Scotland and without going into intimate details, let's just say it was one hell of a week for both of us, but me being young and na\u00efve thought this'll never pan out. She'll go back to Scotland and forget all about me. I remember telling my mate about it and he told me if I let her get back on a plane to the U.K without telling her how I felt then I was a bloody fool.\"\n\n\"And did you?\"\n\n\"I did,\" he replied, \"at the airport I told her I wanted to see more of her and she, being Scottish wanted to know how much more and I said I want to see you every morning I wake up.\"\n\nHe took another drink.\n\n\"Debbie says it's the most romantic thing any man ever said to her,\" he glanced at her.\n\n\"I don't know if that helps, but for what it's worth.\"\n\n\"You're the second person to say that today.\"\n\n\"Well you'd be a bloody fool not to grab her. Look at her,\" he nodded in her direction, \"she's always in front of a camera. Half the women in this room want to be like her, after she falls off the verandah and the other half want to be with her, and that's just the women.\"\n\nAndre left her shortly after that, and she pondered his advice as she watched Melina in front of the camera. She fidgeted with the business card Andre had left her as she contemplated her options, was this the right thing to do?\n\nIt was something that held her attention for the next two and a half hours while Melina posed in various outfits. It seemed they were only shooting pictures of her at first but when she ventured to a window she spotted a second camera crew down on the beach. Melina managed to speak to her once during that time but for the most part she was left to her own devices.\n\n\"God, I am exhausted,\" Melina finally slumped into a seat beside her. She had changed back into the clothes she'd worn that morning, \"sorry about all this, it must have been boring for you.\"\n\n\"It was the first time I've seen any of this,\" she replied, \"so, no, it wasn't boring at all.\"\n\n\"I am so proud of you,\" Melina squeezed her leg, \"I didn't know if you could pull it off because I only met Andre the other day. He just happened to mention he was looking for a designer.\"\n",
        "\"Do you know how he met his wife?\"\n\n\"No, I saw the wedding ring.\"\n\nLindsay related the story and when she'd finished Melina smiled crookedly.\n\n\"That is romantic and very Scottish.\"\n\n\"I want the same,\" she looked at her, \"with you. We talked about it yesterday, this three months before we make up her mind but that's a back door for me. I don't want a back door, I want to know now, if you want to wake up next to me every morning.\"\n\n\"Are you proposing to me?\"\n\n\"No, I'm saying I love you, do you love me?\"\n\n\"I do love you,\" Melina replied, \"I was in awe of you before, when you sold your pitch to Andre. I thought my heart would stop.\"\n\n\"Then why not just come out and announce it? I want my status to read in a relationship with Melina Wendel and I would like your status to read in a relationship with Lindsay Cunningham. We might change our minds after three weeks or three months but I don't want you flying back to London without something from me, a commitment.\"\n\nMelina fiddled with one of the ruffles on her blouse.\n\n\"I said yesterday that because I felt you were unsure, I was giving you room to manoeuvre.\"\n\n\"I don't want room to manoeuvre, I've manoeuvred my way out of so many relationships like this, it starts off nice and romantic and becomes just another warm body to snuggle up to. In about twelve hours you'll be getting on a plane and I'll be still here,\" she stopped as Melina moved forward suddenly and kissed her.\n\n\"I accept your generous offer,\" she stroked her face.\n\nLindsay tugged at the collar of Melina's blouse.\n\n\"Are you free to go now?\"\n\n\"You want to go back to the hotel? I can call the car.\"\n\n\"Let's take the tram,\" she replied, \"like we did the other day, get off at the park and walk into the city and have a meal somewhere, just not Young and Jacksons. Somewhere else.\"\n\n\"I am in your hands,\" Melina smiled.\n\nAustralian style pizza or an Aussie pizza as it is colloquially known, baffles foreigners for the addition of a fried egg in the middle of a bacon and cheese pizza. Melina was no exception as she eyed the pizza with undisguised suspicion.\n\n\"So, this is Aussie pizza? Why do they put an egg in the middle?\"\n\n\"I honestly have no idea,\" she replied, \"if you want I can order something else?\"\n\n\"No, no, it is all right,\" she aimed her phone at the pizza, \"I have to Instagram this now.\"\n\nIt was not the only photo taken that afternoon and evening. There were dozens o pictures at various places, some of which they'd visited on Saturday. These pictures however were different, in each picture Melina had Lindsay pose in front of the landmark, and then she took her turn while Lindsay took her picture.\n\n\"I want a visual reminder,\" she said as she posed in front of the caf\u00e9, \"and something to put on my Instagram.\"\n\nTheir meandering journey through the streets of Melbourne eventually brought them to the hotel and on the way up Lindsay found herself becoming aroused by her scent. This was their last night together and she wanted to make it last as long as possible.\n\n\"Would you like some champagne?\" Melina asked as they stepped into the room.\n\n\"Please,\" Lindsay walked to the window and knelt on the small divan. It seemed like a lifetime ago she'd knelt on this thing and yet it had only been a little over thirty six hours. She had been seeing Jason then although that affair now seemed as dead as a doornail and she hadn't even ended it yet. She took out her phone and flicked through the texts, some from girlfriends and a couple from Jason although the last one was sent this morning.\n\nJason: Are we still talking?\n\nLindsay: We are but that's as far as it goes now, I'm with someone else.\n\nJason: So, this is a break up text?\n\nLindsay: Yeah.\n\n\"Here,\" Melina handed her a glass of champagne.\n\n\"Thanks,\" she took it, \"I'm just breaking up with Jason.\"\n\n\"Oh, okay.\"\n\n\"To be honest I didn't even feel like I was with him,\" she looked down as another text came through from Jason.\n\nJason: What's his name? Just out of curiosity.\n\nLindsay: I'm not with a man, I'm with a woman.\n\n\"Well that's burned the bridge,\" she smirked, \"here's to us,\" she raised the glass.\n\n\"To love.\"\n\nThe phone beeped again and she winced when she read the text from Jason.\n\n\"What a dickhead. He says, great to see you found someone. Can I have photos, please?\"\n\n\"Does he mean the kind of photos I think he means?\" Melina asked.\n\n\"He's a man, it's a man thing,\" she sent back a brusque, 'piss off hairy legs!'\n\n\"Hairy legs?\" Melina stared at the text.\n\n\"It's a unique Aussie saying to express contempt.\"\n\n\"I love it,\" Melina leaned on her shoulder, \"I could sleep for a hundred years.\"\n\n\"Don't do that, you'll be an old bag with saggy tits and hairy legs. People will be telling me I could do so much better.\"\n\nShe giggled and Lindsay stroked her back gently, tracing the outline of her spine.\n\n\"Ooh, do that again.\"\n\n\"Oh,\" Lindsay bit back her smile, \"you like Mistress Lindsay?\"\n\n\"I loved your massage the other night, it was so relaxing, Fraulein Lindsay.\"\n\n\"I always was good with my hands,\" she reached her shoulder and squeezed it, \"the benefits of having a mother who was once a physiotherapist.\"\n\n\"I didn't know that.\"\n\n\"Well now you know,\" she shifted off the divan and set the wine down on the bedside table, \"if ever I wanted to put a guy to sleep instead of having sex, it was always a massage.\"\n\n\"So I should watch out for your massages?\"\n\n\"You're different,\" she stepped up behind her with a hair brush and started brushing her hair, \"with you every time I touch you I want more.\"\n\nMelina closed her eyes as Lindsay kept brushing her hair and soon she dispensed with the brush and began a scalp massage that moved down to her neck and shoulders. Melina sighed as her hands worked tired muscles.\n\n\"I will never get tired of this.\"\n\n\"Come on, get on the bed,\" Lindsay took her hand.\n\nMelina followed her to the bed and Lindsay put her on her back and sliding her hands up under skirt, pulled off her stockings. Melina's eyes softened as the younger woman rolled up her sleeves and moving further down the bed, began to massage her feet.\n\n\"I should have brought my oil from home, it's not too hard is it?\"\n\n\"Perfect,\" Melina murmured as she undid her belt and slid it through the belt loops, \"don't stop, I am enjoying this.\"\n\nLindsay's hands eventually moved from her feet to her legs, working the muscles slowly and gently, Melina stretched and spread her arms out wide as her hands moved up higher, under her skirt. The garment shifted and Melina reached behind herself to undo the skirt and pull it over her buttocks, Lindsay removed it with a flourish and a smile.\n\n\"Well now, what have we here?\"\n\n\"Mein unterhose,\" Melina grinned.\n\n\"And very nice they are too,\" Lindsay unbuttoned Melina's blouse, \"but do your panties match your bra?\"\n\n\"I am a model, everything must match.\"\n\n\"Well, well, well,\" she grinned, \"you're right,\" she inched forward and began massaging her thighs, working her way up to her hips and back down again. Melina closed her eyes and let the younger woman go to work on her body. She worked with the quiet dedication of a professional.\n\n\"I love massaging your body, you're so soft.\"\n\nThe massage became more erotic. Melina offered up her arms to her and Lindsay undid the four buttons on each cuff and began massaging her wrists in turn. Moving to her hands and fingers, she did the same and then started stroking her front, teasing the delicate nerve endings until finally Melina let out an audible sigh.\n\n\"You have changed me.\"\n\n\"How have I changed you?\"\n\n\"You have made me softer. Before this I had a strict schedule, I am German it is the way we are but being here with you has made me forget time.\"\n\nShe started unbuttoning Lindsay's blouse.\n\n\"And I never get tired of taking off your clothes.\"\n\n\"Me too,\" Lindsay looked down as her blouse was parted and Melina's hands moved over her front to her breasts. She felt her thumbs pressing upwards and over her nipples and arching forward, kissed her gently as she massaged Melina's breasts. The massage lasted some time until finally Melina worked herself into a sitting position and undid Lindsay's trousers, the material fell downwards and the older woman undid the last button on her blouse and kissed her lips with light, teasing kisses that seemed to last much longer every time.\n\nTheir hands moved over each other's bodies, finding the most sensitive spots and caressing them gently. Lindsay lost her blouse some time later and Melina put her on her stomach and removed her trousers. Soft, silky hair brushed up and down her back as Melina kissed her way up and down, side to side and around. Her hands traced circles over her bare skin, causing Lindsay to sigh contentedly and after a while her bra strap came loose and Melina put two pillows under her belly.\n\nWith Lindsay's buttocks now raised, Melina spread her legs and began tickling her lips with gentle spidery touches. Her hands moved down to her perineum and around to her front. Lindsay felt herself floating as the delicious sensations flooded through her. Delicate fingers tickled her buttocks again and again and she groaned loudly as it became more intense.\n\nIt was maddening in its own erotic way. She felt something giving way, not in a physical sense this was more in the mind, something intangible, a shared experience of just being touched without it resorting to sex.\n\nMelina's tongue danced along her lips and perineum and she whimpered as the older woman slid her finger inside her. Lindsay raised her hips higher to give her more access and the pushing became firmer and more intense. Her tongue lapped against her and when she felt the dam breaking she held onto the sheet and let the moment take her away as the orgasm surged through her.\n\nLindsay came to as Melina laid her down and slid her leg in between Lindsay's legs.\n\n\"Oh God that was delicious.\"\n\n\"I should do a massage course myself,\" Melina stroked her back.\n\n\"Fuck that,\" Lindsay giggled, \"I'll teach you myself, I know all the moves.\"\n\n\"I am in your hands then.\"\n\n\"You sure are,\" Lindsay rose and rolled her onto her back, \"prepare to be ravished.\"\n\nTheir lovemaking began again, and Lindsay made the most of her limited time with Melina, taking her to the brink and then bringing her down, only to repeat the process several times in a row until finally Melina climaxed with a flurry of German and her hands around Lindsay's head as the spasms moved through her. It was followed by a shower together before both women retired to bed with a glass of wine.\n\nThat night Lindsay fell asleep in the arms of her girlfriend to the gentle rise and fall of her breasts and the aroma of her freshly washed body. \n\nMelina's departure from Melbourne could not have been more different. She'd flown in on her own and arranged her own transport to the city. Now she was surrounded by Lindsay's family with the exception of Tony who had to work. Even Lindsay was surprised to see her mother sitting in the departure lounge with a magazine on her lap. It was Ron who nudged her and she looked up and waved and then got up. Emma stayed seated and Lindsay felt a twinge of guilt, she was looking a little washed out today.\n\n\"What are you doing here? Like this?\" Lindsay asked Emma a few minutes later.\n\n\"I tried to get Tony to carry the baby for a few hours but you know what men are like.\"\n\n\"Have you got a name yet?\" Melina asked.\n\n\"I've got a few picked out,\" she replied, \"we haven't decided,\" she patted her belly.\n\n\"What's your mother's name?\"\n\n\"Silke,\" she replied, \"with an e on the end.\"\n\n\"Silke,\" Emma's eyes shifted, \"now that's different. What do you think?\"\n\n\"Silke sounds great,\" Zoe smiled, \"so which one of you is going to give me grandchildren?\"\n\n\"Mum, we haven't even gotten married yet. Give us a break.\"\n\n\"We both will,\" Melina decided.\n\n\"Just not at the same time,\" Lindsay snuggled up to her.\n\n\"We um, put our money together and got you something on the way,\" Zoe picked up a plastic shopping bag and held it out, \"I hope it's your size.\"\n\n\"It is a coat,\" Melina took it out of the bag.\n\n\"Not just any coat,\" Lindsay eyed it, \"it's a Driza-bone.\"\n\n\"What?\"\n\n\"Dry as a bone, it's oilskin.\"\n\nMelina slipped her arms through the sleeves and smiled crookedly, \"it fits, my God it will be perfect for Britain. Thank you.\"\n\n\"We thought so,\" Ron broke in.\n\nZoe glanced at him and he spoke again, \"I mean, Zoe thought so.\"\n\n\"Ron paid the lion's share,\" Zoe chuckled.\n\nMelina's head turned as she heard an announcement.\n\n\"I have to book my luggage in.\"\n\n\"I'll help with the cases,\" Ron stepped forward.\n\nLindsay kept pace with her mother as they trailed her to the check in counter.\n\n\"Whose idea was this?\"\n\n\"What?\"\n\n\"Coming here, buying that? It must have cost you a fortune.\"\n\n\"We're family, dear. I've got one of each, a straight daughter and a gay daughter. Not many mothers I know can boast that achievement.\"\n\nAfter she'd checked in there was still an hour or two before boarding. It was time spent with family over a meal and a couple of beers, some passengers chanced a second glance at the two young women sitting arm in arm or occasionally kissing but Lindsay and Melina were oblivious to the outside world. Their world was complete."
    ],
    "authorname": "Shaima32",
    "tags": [
        "melbourne",
        "model",
        "interview"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-long-weekend-day-04"
}