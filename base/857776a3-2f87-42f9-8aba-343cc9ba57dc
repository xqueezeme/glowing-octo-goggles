{
    "title": "Brad's Road Trip Ch. 19",
    "pages": [
        "I don't know your editor. But I'm guessing mine is better than yours. As always, AnInsatiableReader deserves a ton of thanks for plowing through this. When I send it to her, it looks nothing like the finished product you're about to read.\n\nThere's not a lot of sex in this one. You'll see why. If you've come this far, occasional chapters with minimal sex don't bother you.\n\n*****\n\nDay 17 \n\nSaturday, June 28, 2007 \n\nGrand Junction, CO\n\nOh. My. Fucking. God. \n\nI don't normally think in Valley Girl-ese. But then, I don't normally get in line for ice cream and damn near run over the hottest girl in the history of fucking existence, either. \n\nI'd been in line for 10 minutes, but my mind was elsewhere, so I didn't notice her standing in front of me. When there were only three people between me and the counter, she suddenly turned around and tried to leave, but crashed into me and hit the ground immediately.\n\nShe looked up at me - ya know, to find the asshole responsible for knocking her on her ass - and it was as if her chocolate brown eyes instantly tunneled through my chest and melted my soul. All the air rushed out of my lungs, and I suddenly found it very difficult to breathe.\n\nShe was fucking perfect.\n\nI reached down to help her up, and I swear a bolt of electricity shot through my arm when our hands touched. Instead of instantly letting go, though, it made me grasp her hand even harder. Eventually, though, we broke contact and retreated to our neutral corners to size each another up.\n\nShe was maybe a couple inches taller than 5 feet, which gave me nearly an entire foot of height on her. I was guessing she was in her early 20s - maybe 21 or 22, probably younger than me but not by a whole lot. \n\nHer dark brown hair hung in curly ringlets a few inches past her shoulders, but a couple of renegade locks were glued to her forehead by the oppressive mid-90s heat. Her face was flushed and covered by a light sheen of sweat, but she was still the most beautiful girl I'd ever seen. I can't say she looked like anyone else, because no one - not any supermodel, actress, or singer I'd seen on TV, or any non-celebrity I'd seen in person - got anywhere close.\n\nAs I scanned down her body, I was instantly drawn to her soft curviness. She wasn't skinny with the tight body of a fitness model, but I could tell she was fit and athletic. Her arms had obviously seen a weight room, and when she bent over to pick up the purse she'd dropped, I saw her calves flex - this girl was definitely into cardio. \n\nA lime green halter top clung to her upper body for dear life. The spaghetti straps on her shirt were slightly offset from her bra, which held up what looked to be large C-cup breasts that were at least a size too big for her otherwise diminutive frame.  \n\nShe had a pastel yellow shoulder bag slung across her back, and I guessed that was where she was carrying her phone, money and other personal things, because there was absolutely zero room for anything in her tight white shorts. The material travelled a little further down the front of her thighs than it did in the back, owing to her nice, round ass. She wouldn't be starring in any Sir Mix-a-Lot videos anytime soon, but again, it was maybe just a size too big for her body.\n\nAll in all, if I had to sculpt my perfect woman from scratch, this would be her, right down to the smallest detail.\n\nFor as long as my full-body inspection took, she'd been staring at me with just as much intensity. We might have stood there forever, too, if the guy behind me hadn't cleared his throat.\n\n\"Do you guys still want some ice cream, or do you just want to get a room?\"\n\nHe didn't say it angrily - actually, it sounded like he was trying not to chuckle, and a few people in line behind him didn't bother holding in their laughs. Still, it was a clever way to let us know that she was actually next in line now. It broke the tension between us, but that was only temporary, because then she smiled, and somehow, my already illuminated world brightened tenfold. I think even the sun got a little jealous, because her face lit up the whole damned Western Hemisphere. \n\nAnother monster wave of attraction slammed into me, and again, I was struggling to get air into my lungs.\n\nMy mind briefly flashed back to my teenage years. I'd asked out a really, really hot girl at school, and she said yes. I came home and told my dad that I'd just met the girl I was going to spend the rest of my life with. \n\n\"I doubt it,\" he'd said.\n\n\"How do you know?\" I'd shot back defiantly.\n\n\"Brad, do you feel like you've just been run over by a semi-truck, but like you could climb Mount Everest at the same time?\"\n\nI thought for a minute. \"No, not really. But I do like her.\"\n\n\"So like her,\" he said. \"I liked girls once upon a time, too. Even some women. But the first time I saw your mom... it was like a tornado had just swept through my life, yet somehow it made everything better. That's how you'll know.\"\n\nThat conversation only popped into my head because... that was it. That was exactly how I was feeling right this moment. With one accidental collision, this total stranger had completely rearranged my brain, but she'd made everything better.\n\nExcept for one thing.\n\n***********************\n\nOf course, I didn't know that yet when I woke up.\n\nThe sun was already in full force and trying to heat everything in the tent to 300 degrees by the time I finally opened my eyes.\n\nOr maybe it wasn't the sun. Maybe it was the greedy, desperate noises I heard coming from right next to me.\n\nSara normally wore her red hair up in a ponytail, but when she let it down, she really had quite a lot of it. Right now, it was spread liberally all over Liz's stomach and upper thighs, preventing me from seeing exactly what was going on down there.\n\nJust looking at Liz's upper body, though - twin nipples hard enough to cut through glass, beet red face, teeth clamping down on her lower lip - gave me a pretty good idea. Her subtle moaning, probably kept low on purpose since she thought I was still asleep, was a good clue as well.\n\nI got up one on elbow, planning to watch the show. I didn't need to move Sara's hair to get an up close picture of what she was doing. Just watching Liz's face was exciting enough.\n\nLiz, however, had other ideas.\n\n\"Oh, thank God,\" she said. \"You're awake.\"\n\nShe quickly pulled my head down to her chest, and I sucked her nipple into my mouth. The quiet moans turned into not-so-quiet cries of pleasure.\n\n\"Good morning,\" Sara said, smiling up at us.\n\n\"Likewise,\" I said. \"And what have you two been up to today?\"\n\n\"Oh, not much,\" Sara said. \"Just eating breakfast.\"\n\nWith that, she vanished behind her curtain of hair again. Liz's breathing was very shallow and rapid, and I could tell it wasn't going to take much longer to bring her over the edge.\n\n\"Did you have fun last night, baby?\" I asked as my tongue dipped into her ear. With my hand, I moved back and forth between her nipples, pinching first one, then the other.\n\n\"Uh huh,\" she whimpered.\n\n\"I know you felt my tongue a couple times, but you never got the pleasure of feeling Sara's on your pussy, did you?\"\n\n\"Nuh uh,\" she pouted.\n\n\"Such a good best friend, making it up to you so soon like this,\" I said.\n\n\"Uh huh,\" she repeated.\n\n\"Is she gonna make you cum, Liz?\" I asked. Before she could answer, I kept going. \"Are you gonna cum on your best friend's tongue, you dirty little girl? Are you gonna make that gorgeous, freckled face all slick with your pussy juice? Hmm?\"\n\n\"Oh, fuck, fuck!\" she cried out. Her left hand pulled my face back down to her nipples, while her right hand ensured Sara's lips and tongue would be going nowhere. \"Fuck, you guys are going to\u2014\"\n\nIt was too late. She was already spasming, rhythmically grinding her pussy into Sara's face as her entire body undulated. It took her most of a minute to relax and let her body settle back onto the sleeping bag.\n\nSara finally reappeared, pulling her hair back into the ponytail. She had a sheepish but satisfied grin on her face.\n\n\"Can I have a taste?\" I asked. Sara hummed her agreement and slowly crawled up, stopping when she was kneeling between Liz's legs. If she'd been wearing a strap-on - or if she'd been me, with the hard-on I'd just sprouted - she'd be in a perfect position to start fucking Liz.\n\nShe offered her mouth to me, and I claimed it greedily, enjoying the taste of Liz's pussy juice on her lips.\n\n\"I want some,\" Liz said, turning my head toward her. I gladly obliged her, wondering how much of herself she could taste third-hand. \n\n\"Now from you, too,\" she said to Sara, and they kissed passionately. Before long, we all ended up in another three-way kiss.\n\n\"I have to say that I wasn't expecting to see that when I woke up this morning,\" I said.\n\n\"I wasn't expecting to do it, either, but I'm glad I did.\"\n\n\"Why's that?\" Liz asked.\n\n\"Two reasons,\" Sara said. \"First, you taste really fucking good. Second, you went down on me last night, and I didn't get off. So now... you owe me.\"\n\nInstead of arguing or making excuses - like how my cock was buried balls deep in her while she went down on Sara last night, causing a bit of a distraction - Liz just grinned wildly.\n\n\"You want me to pay up right now?\" she asked, licking her lips.\n\n\"No, I think I'll put it in my pocket for later,\" Sara replied. \"Anyway, we both need showers. Are you coming, Brad?\" \n\nThe showers had proven to be pretty fucking fantastic for me over the past 24 hours, and I had no doubt another trip would be more of the same, so I was sorely tempted. However, I had a deadline to meet.\n\n\"Nah, I'm good for now,\" I said. \n\n\"Are you sure?\" Sara asked, motioning towards my tented boxers. \"You look like you've got quite the problem there. I'm sure we could help you fix it.\"\n\nI was sure they could too, but now, in the light of day, I really only wanted one person to fix it, and that was going to have wait until tomorrow.\n\n\"I dealt with one all day yesterday,\" I said. \"I promise I'll be ok. You guys have your fun.\"\n\nThey pouted a little, but eventually they left for the showers holding hands. I grabbed my phone and saw that Kelly had answered my text when she woke up. \n\nKelly: Tomorrow! That's fucking crazy. I'll be checking my e-mail all day. Oh, and dripping all over the floor, too. Can't wait to see you!\n\nNeither could I, and I told her as much. That done, I grabbed my laptop out of the car and got to writing.\n\nIt took me about half an hour to finish my e-mail to Kelly, explaining in naughty detail all the things that happened yesterday. I left out some of the minor details, like Liz knowing about the massage and watching while I fingered Sara behind the first aid tent. It took me long enough to get into explicit detail about the concert and the threesome that followed. Besides, she might be feeling up to a little talk tonight, and I could get into more detail then. Anyway, I figured I'd have more than enough time to give her a more thorough play-by-play in person.\n\nShe probably wouldn't have time to read it until tonight, but I hoped that simply seeing she had an e-mail from me would brighten her long day.\n\nI had just put everything away when the girls came back, all freshly scrubbed and changed for the day. \n\n\"You guys taking off?\" I asked Liz. Liz had a family engagement today, otherwise I would have blocked the day off just for her. \n\n\"Yeah, off to go see the family,\" she said.\n\n\"What about you?\" I asked Sara. \"I know you're driving her in, but what about when you get back? Any plans for the day?\"\n\n\"Actually, I'm just going to stay with her,\" Sara said, motioning toward Liz, who was putting her bag in Sara's car. \n\n\"Really?\" I asked. \"What happened last night changed things between you guys that much, huh?\"\n\nThat was a surprise, but it actually made me happy. I remembered having a brief thought about how she'd have made an excellent girlfriend the night before, and while I knew I wouldn't do anything about it, it would be even easier if she was going to be somewhere else for the day. \n\nShe looked confused for a minute, but then I saw the light bulb turn on. She blushed a little.\n\n\"Oh, no! Nothing like that. I mean, I'm not gonna say that's not gonna happen again, but, no, Liz and I are still very much into this,\" she said, grabbing my cock through my shorts. Writing my steamy recap e-mail to Kelly had done nothing to cure my condition, and I was regretting my decision not to follow Sara and Liz into the showers.\n\n\"Then why aren't you coming back?\" I asked. \"Already sick and tired of me, huh?\"\n\n\"No,\" she said, staring at her feet. \"Quite the opposite, actually.\"\n\nNow I was confused. I just waited for her to figure that out and continue.\n\n\"Brad, I know you have a girlfriend,\" she said. That was news to me - I'd thought about telling both she and Liz that the day before, but since it wasn't an issue for me or Kelly, I didn't want it to be an issue for Sara or Liz, either. It might have gotten in the way of the incredible night we'd all had.\n\n\"How do you know that?\" I asked.\n\n\"Don't get mad, but I kind of eavesdropped on you the other night, right after you came back to the camp from being with Janine,\" she said. \"I heard you on the phone. I left before things got too crazy, but it was clear you were involved with her.\"\n\n\"That didn't bother you yesterday?\"\n\n\"No,\" she said. \"For one, I heard you say that she was waiting for you to give her the play-by-play. If she wanted to hear about it, then I assumed she was ok with it, and if she was ok with one, she'd be okay with me, too.\"\n\nThat made sense, I guess.\n\n\"Even if I hadn't heard that part, you'd basically guaranteed me you were going to take care of me the next day, right before you shoved your tongue down my throat.\"\n\n\"Fair enough,\" I said. \"So then, if you know I have a girlfriend and you know she's okay with it, what's the problem?\"\n\nLike I said, I was kind of happy she wasn't going to be around, but I was still curious -\n\n\"Brad, I always knew you'd make the perfect boyfriend.\"\n\n- and now, I was fucking floored. This was a girl who, after our disastrous first date three years ago, had only talked to me at work. Sure, we'd been friends there, but we hardly ever hung out socially. I'd been somewhat surprised when she wanted to come up here and watch these concerts with me. Now she was telling me I was boyfriend material?\n\n\"Are you kidding?\" I asked. \"You've treated me like radioactive waste over the past three years, Sara. We're professionals, and we work together really well, but outside of that...\"\n\n\"Brad, I've got pretty damn high standards in men,\" she said. \"I want a lot of things, and I'm way too young to settle, even if it's just for a second date.\"\n\n\"Okay...\" I said, moving my hand in a 'please, continue' motion.\n\n\"I want a man who's in peak physical condition, who's easy on the eyes and fills out a pair of jeans well. I want someone who's smart enough to challenge me, who's funny enough to make me laugh on my worst day and secure enough to keep up with me on my best. I want someone with enough charisma that he never feels out of place, but with enough humility that he never feels bigger than he is. And Brad, you've always been all of that.\"\n\n\"Pretty high compliments,\" I said. \"And thanks. So why the cold shoulder all this time?\"\n\n\"I also want someone who can set the bedroom on fire.\"\n\nAh, I thought, as everything clicked into place.\n\n\"And I haven't always been that.\"\n\n\"No,\" she said. \"That's why I stayed away. You were ALMOST everything I wanted, but not quite.\"\n\n\"You could have given me another chance, you know,\" I said.\n\n\"I don't recall you ever asking for one,\" she answered. \n\nI opened my mouth to say something, but I swallowed it. She was right. My embarrassment over that night three years ago was well-earned, but I only had myself to blame for not rectifying it before now.\n\n\"And I'll admit that sometimes I can be a first-class bitch,\" she continued. \"I might not have been receptive every single day of the past three years, but I think more times than not, if you'd have asked, I'd have said yes.\"\n\n\"Wow,\" I said. \"That's a revelation.\"\n\n\"And of course, now I know you're everything I want, but you're off the market,\" she said. \"And yeah, you're moving back to Idaho and I'm in Texas for at least another year. And maybe with all those things I ticked off, maybe we're still not a great long-term match. But spending even one more day with you might very well make me bound and determined to try, and that's not a headache either of us needs.\"\n\nI chuckled. \"You know, at one point last night, I remember thinking you would make a pretty outstanding girlfriend, given different circumstances,\" I said.\n\nShe looked at the ground. \"Why did you have to say that?\" she asked.\n\n\"Just didn't want you to think you were the only one.\"\n\nShe looked at me with a concentrated look on her face, as if there was complicated mathematical equation etched on my forehead and she was determined to solve it. Finally, she sighed heavily and kissed me on the cheek before turning for the car.\n\n\"Keep in touch, okay?\" she asked, and I nodded.\n\nLiz bounded over next and went straight for my lips, shoving her tongue about halfway to my pelvis before I could react.\n\n\"Thanks for last night,\" she said. \"That was definitely the craziest thing I've ever done.\"\n\n\"It's up there for me, too,\" I said. \"I'm glad we got our chance after all.\"\n\n\"Me, too,\" she said. \"Wondering what might've been would have sucked.\"\n\nI looked over at Sara as she started her car.\n\n\"Speaking of that, take care of Sara today,\" I said. \"She's going to be in a weird mood.\"\n\n\"Oh, I heard all about it in the showers,\" she said lustily. \"And I'll make sure that by the end of this day, she doesn't even remember your name.\"\n\n\"Good luck with that,\" I chuckled.\n\n\"Yeah, that's probably unrealistic,\" she said. \"But I promise I'll at least give her something else to think about.\"\n\nAfter one last hands-on inspection of my equipment, Liz winked at me and got in the car, and I watched until they faded out of view.\n\nI finally made my own way over to the showers, and I turned the water up only high enough to get good water pressure. Right now, I needed a shower cold enough to give an eskimo frostbite.\n\nThe problem was, I couldn't keep thoughts of Kelly out of my head. In 48 hours, there was a very, very real chance we'd be waking up next to each other in her apartment after a long night of catching up from the past two and a half weeks, and apparently my brain was trying to get me prepared. I remembered how hard she'd cum yesterday, giving herself an orgasm so intense that she'd had to pull over on the side of the road. I thought back to last week when she'd made me cum in my pants halfway between South Carolina and Pittsburgh. It was crazy - every time I thought the sexual tension between us couldn't get any hotter, she found a way to throw yet another log on the fire and make it burn even brighter.\n\nNext, my brain provided me with a highlight reel of my sexual exploits from the past week, but it substituted Kelly in place of whoever I was actually with. I vividly saw myself fucking Kelly on the floor of the lingerie shop in Indiana. I pictured her as a Hooters girl and imagined what those orange shorts would look like bunched around her ankles while I pounded her ass. She was the one bent over the sink at the Chili's in Denver. And of course, she'd been underneath me in the grass last night as Lynyrd Skynyrd sang perhaps the most famous concert song of all time. Last night, I'd wanted to live in the moment and enjoy the memory Sara and I had made, but today, Kelly was taking the starring role.\n\nControlling my hard-on was no use. I hadn't jerked off without Kelly cooing in my ear since the road trip started, but she was working all day, so I was going to have to make an exception here. ",
        "Despite all the action it had seen last night, my cock didn't need much convincing. I wasn't stroking for two minutes when I exploded, shooting cum all over the floor of the shower.\n\nHopefully that would take the edge off.\n\nI got dressed and headed back toward the festival grounds. Today was Saturday, typically the busiest day for weekend music festivals, and this one was no exception. The crowd was extra thick, with long lines for everything, include the Marine recruiting tent. Janine and Gunny were working at the moment, and they were both talking to prospective recruits. I was about to give up and come back later when I saw Tom and another Marine walk up, each carrying a case of water.\n\n\"Hey Brad,\" Tom said. He threw the bottles into ice-filled coolers under the tables, and his companion did the same. \"Have you met Sergeant Marks yet?\"\n\nI hadn't, so Tom introduced us. \"Yeah, I knew you were around here somewhere,\" Marks said. \"I hung out with one of your boys from Texas last night. Dude knows how to have a party.\"\n\nChad had been with Janine at our campground, so he had to have been talking about Russ. Janine had told me Marks was a manwhore earlier in the week, and if he and Russ were hanging out together, I silently wondered if they hadn't fucked half the festival.\n\n\"I can definitely confirm that,\" I said. \"Did you guys leave any for the rest of us?\"\n\n\"From what I heard, you were doing all right for yourself,\" he said, and I couldn't really argue with him. He went into the tent to help Gunny and Janine.\n\n\"What about you, Tom? Did you do all right for yourself?\" I'd set Grand Junction's newest Marine recruiter up with Lindsay, the shy college soccer player who woke up next to me yesterday morning on a dare. Tom played on the Marine soccer team, so I figured they'd have something to talk about, at least.\n\nHe couldn't meet my eyes, but he was definitely grinning.\n\n\"Damn,\" I said. \"That good, huh?\" \n\n\"I can neither confirm nor deny...\" he said, trailing off purposely.\n\n\"Hey, man, you know it's none of my business,\" I said. \"But I thought you might find some things in common. I'm glad it worked out.\"\n\n\"So far anyway,\" he said. \"We're gonna take it pretty slow, but I'm gonna try to see her before I leave for the tournament. If not, definitely right after I get back.\"\n\n\"Good stuff,\" I said, clapping him on the shoulder. \"I've only known her a few hours longer than I've known you, but she seems like a sweet girl.\"\n\n\"Incredibly,\" he agreed.\n\n\"I'm sure in more ways than one,\" I said. He looked confused for a few seconds before he got the joke. I'd never seen a Marine turn purple from blushing so hard, but here was my first. \"Relax, man. I'm just fucking with you. Good luck.\"\n\nWe shook hands and I wandered off to explore some more. There was an unknown, local band playing a side stage, and I had nowhere else to go, so I decided to check them out.\n\nThey weren't that good, and my mind started to wander over the events of the past 24 hours and really, over everything that had happened since that very first phone call two-plus weeks ago in San Antonio. About halfway through the band's fourth Garth Brooks cover, I made a decision:\n\nGirlfriend-approved or not, I was through with the extra-curriculars. \n\nThings had gotten a little intense with Sara and Liz last night, and though I knew nothing was going to happen with either of them, allowing my mind to even wander in that direction didn't just feel wrong, it WAS wrong. Sure, I could chalk it up to my unfinished business with Sara and how I was righting one of the few wrongs of my sexual past. And yes, Kelly knew about our history and still encouraged me to pursue her yesterday. \n\nI knew a lot of it had to do with how close Kelly and I were getting, and how I was so damn eager to do more than just talk to her. Thanks to our deepening non-sexual relationship, I was already way more in touch with my emotions than I'd ever been before. Even though these other women weren't her, it was a pretty tough valve to open and close whenever I felt like it.\n\nStill, at the end of the day, I'd damn near let one of these casual hookups get out of hand. There was no harm done, but I was going to be damned if I'd let it happen again, especially with just one night left on my trip. \n\nYes, I thought. Today was going to be all about the music. Trace Adkins was the night's headliner, and he was one of my favorites. I'd drink some beer, consume some altogether unhealthy fair food - anything with the words \"deep\" and \"fried\" in the title was a potential victim - and enjoy a day of excellent music. \n\nThere was only room for one woman in my head - either of them - and any thoughts I had about the fairer sex today were going to be limited to my beautiful, brilliant, hilarious, sexy, amazing girlfriend.\n\nComing to that decision made me feel a whole lot better. And I'm sure all that would have happened... if I hadn't suddenly had a craving for some damned ice cream.\n\n**********\n\nI could have stared at her all day. The world even did me a solid, ceasing its rotations for a few seconds after we first touched so I could reboot my brain and appreciate the stunning creature in front of me. If it hadn't been so damn steamy out here, and if there was no line trailing behind us, I might very well have done just that for the rest of the afternoon.\n\nBut we were holding up the line, and really, standing out there in the suffocating heat would only lead to sunburns and fainting. I'd already been responsible for her falling one time, and I didn't need to make that a habit.\n\n\"Let me get it,\" I said, slipping past her and approaching the counter. \"What flavor would you like?\"\n\nShe opened her mouth to answer, but no words came out. She closed her mouth and opened it again, but she still couldn't engage her voice.\n\nIt took me a second to realize it, but she was as stunned by me as I was by her. That elated me and terrified me, all at the same time. \n\n\"How about strawberry?\" I asked. \"Something light and fruity, try to do something about this crazy heat?\"\n\nShe just nodded, and I ordered two. I paid, and when she accepted the overflowing cone from me, her smile blinded me again.\n\n\"Thank you,\" she said, and I was momentarily confused. Her accent - Australian? British? Maybe South African? I'd never been good at telling the differences, but either way, it wasn't American. It was extremely thick, easily detectable even in just two words.\n\nOK, so now there was one miniscule difference between the woman I would have crafted from scratch and the beauty walking beside me. Still, this was far from a bad thing. It actually sounded pretty hot, at least the two words I'd heard so far.\n\n\"You're very welcome,\" I replied. \"Sorry for running you over back there.\"\n\n\"No, no,\" she said. \"It's quite alright.\"\n\n\"I'm Brad,\" I said, taking a seat at a nearby picnic table. She sat down next to me.\n\n\"Nicole.\" Fuck. Even her damn name was sexy. Her tongue darted out of her mouth, and I noticed a yellow stud sticking from the top before she plunged it into the rapidly melting ice cream. She noticed me watching her and blushed a little. \"Thank you for the ice cream. You didn't have to do that.\"\n\n\"I didn't have to drill you like a linebacker chasing down the quarterback, either,\" I replied. \"But I did, so this was the least I could do.\"\n\n\"Linebacker,\" she repeated, and I realized that she might not know what the hell I was talking about. \"That's from your American football, right?\"\n\n\"It is,\" I agreed.\n\n\"We get some of the games on the telly in Melbourne,\" she said. \"I like watching them, but I don't know the positions.\"\n\nAh. So it was Australian. Ok. I could do Australian. At least one of them in particular, anyway.\n\n\"Well, the linebacker plays defense, and his first job is usually to catch the quarterback, the guy with the ball. When he gets ahold of him, his second job is to bury him without digging a hole first.\"\n\nShe giggled. It was a bit higher-pitched than I expected, but it suited her voice perfectly. \"Well, you gave it a good try, but I guess I'm just a bit tougher than your quarterbacks.\"\n\n\"Ooh,\" I said. \"I'll be more careful next time.\"\n\n\"You better be,\" she said, but she was full-on laughing now. I was so taken by the sound that I didn't see her reach for my arm until it was too late. I was going for a bite of my ice cream, but she bumped my elbow, and the pink substance landed on my nose and my right cheek.\n\n\"Little mess there,\" she said, pointing at me as she laughed.\n\n\"I can see that,\" I said. \"Or I can feel it, anyway. Do you feel better now?\" I was laughing too, to let her know I wasn't mad. I grabbed a napkin and went to wipe off my face, but she stopped my arm halfway up.\n\n\"Let me,\" she said. I tried to hand her the napkin, but she didn't look down to get it. Instead, she tilted her head toward mine, and I realized she had a different cleaning method in mind. \n\nThe hair on the back of my neck stood up when her tongue touched the tip of my nose, and I got goosebumps everywhere. When that was clean, she put her hand behind my head to hold me in place and started licking the ice cream off my cheek. I felt the stud in her tongue brush against my skin, and it was all I could do not to wrap her up so she'd never stop. Her brown eyes were closed tight, and when she pulled back, it was like she was having a religious experience. Or an out-of-body trip. Either way, I was on board.\n\n\"That was maybe the most erotic thing I've ever felt,\" I thought to myself. Kinda crazy when you consider everything I'd done the past two-plus weeks, but it was the truth.\n\n\"Yeah,\" she said, her accent making it sound more like 'yeh.' At first I didn't understand what she was saying 'yeah' about, but then I realized I'd actually spoken out loud. She sat back and looked at me for a moment. \"Sorry. Was that too forward?\"\n\n\"No,\" I replied. \"In fact, it seemed kind of fun.\"\n\nBefore she could answer, I pushed my own ice cream cone at her face. She didn't have time to open her mouth before it got there, and I ended up spreading the pink concoction all over her lips and chin.\n\n\"Guess I should return the favor now, huh?\" Her brown eyes sparkled as I moved toward her, but they snapped closed right before I made contact with her skin. I started with her chin first, lapping up the ice cream and sucking lightly on the point of her jawline. I moved up to her lips and used just my tongue, licking back and forth along the contour of her bottom lip before jumping to the top. Once she was clean, I quickly darted my tongue between her lips before pulling back.\n\n\"My goodness,\" she said.\n\n\"Yeah, this ice cream tastes way better on your lips than from this stupid cone.\"\n\n\"Really?\" she asked. \"Guess I should try it, then.\"\n\nThis time, I wasn't surprised when she lifted her own cone up to my lips, smearing strawberry ice cream all over me. She leaned in to claim her prize, and I closed my eyes and just absorbed the feeling as her tongue roamed all over my lips. She took her time, ensuring there was not even a molecule of ice cream left on my face.\n\nShe moved back, but only a couple of inches or so.\n\n\"You know, I think you missed a spot,\" I said.\n\n\"You think?\" she asked. \"I was pretty thorough.\"\n\n\"You were,\" I agreed. \"But I think when you spilled it, I might have gotten just a little bit in my mouth.\"\n\n\"Yeah?\"\n\nShe barely had the one-word question out before I pounced, pulling her back to me with my free hand and pressing my lips to hers. She moaned when we made contact, dropping her ice cream onto the table. She let me kiss her for just a second, savoring the feeling before getting involved. Her tongue pushed between my lips, and when it touched mine, I swear to God we had an 8.3 earthquake in western Colorado. I would have testified in front of a grand jury that the ground shook.\n\nI was dizzy and dazed and suddenly I didn't know where I was and what I was doing, except that I was kissing the most beautiful woman in the entire fucking world. Someone could have set off a nuclear bomb next to us and I might have cared enough to shrug. \n\nOur brains finally decided that the only thing better than this kiss would be another one, but in order for that to happen, we were going to require oxygen. We each took a deep breath when we separated, and Nicole's brown eyes were glazed over when she looked up at me.\n\n\"Holy shit,\" she gasped. Her head fell onto my shoulder, so I was breathing heavily into her ear.\n\n\"Took the words right out of my mouth,\" I whispered. \"I think you dropped something, though.\"\n\nShe looked down at her ice cream cone, now melting on the ground.\n\n\"Aww, but I want more,\" she said. \"Guess I'll have to share yours.\"\n\nI'd somehow managed to avoid dropping mine despite the hurricane that had just blown through, and I brought it up between us. She licked her side and I licked mine, and our tongues met in the middle. Of course, that was the whole idea to begin with, and we forgot all about the ice cream. Predictably, her tongue tasted like strawberries, and I couldn't get enough. I felt her tongue ring against my teeth, and somehow, that just turned me on more. \n\nI tossed my ice cream onto the table so I could use both hands. One was already threaded through her brown curls, and I used my now-free hand to tug her closer to me. She rotated her body toward me and put her left leg between mine, so that she was half-straddling me. \n\nWe'd been attacking each other vigorously, but now with her half on my lap, things turned more sensual. I used the second hand to gently caress her face, using my thumb to sweep across her cheek, as if I were wiping away tears. One of her hands ran through my hair, and I felt the other on the side of my neck.\n\nMy shorts were becoming painfully uncomfortable as my cock hardened and pressed against them, and I knew she could feel it against the outside of her left thigh. Come to think of it, my own left thigh felt a little damp, right where her crotch pressed against me. My brain was spiraling out of control - I could see a real scenario where I threw this hot little Aussie on the picnic table and took her right here in front of thousands of festival goers.\n\nUnfortunately, I knew a few of those watching the show would be members of the Grand Junction Police Department, so the head on my shoulders prevailed over his more southern counterpart. Nicole and I continued to make out for a few more minutes, but I managed to keep my hands away from any areas that might accelerate things.\n\n\"Phew,\" she said when we finally stopped, what seemed like hours later. \"What you did to me, just from kissing me...\"\n\n\"That goes both ways,\" I said, and she brushed her thigh lightly against my hard-on in response. She rested her head on my chest as she sat on my lap, and we just sat quietly and enjoyed the sensations of being close to each other for a few minutes.\n\nFinally, my leg started to fall asleep, and it was really too hot for us to stay in one place for very long, for fear that the heat might permanently glue us to the picnic table. So, we got up, tossed our ice cream cones in a nearby trash can and started to stroll the fairgrounds, hand in hand.\n\n\"So, I'm guessing you have friends somewhere around here?\" I asked.\n\n\"Yeah, over there, I think,\" she said, motioning over her shoulder toward the concert grounds.\n\n\"Me, too,\" I said, before realizing that really, I didn't. Sara and Liz were gone for the day, the four Marines were working the recruiting booth, and Chad was either fucking Janine or resting up while she worked. Russ was probably around somewhere, but honestly, I had no desire to see him. Any of them, really.\n\n\"Brad, can we just hang out together for a little while?\" she asked. \n\n\"That sounds like just about the best idea ever,\" I said.\n\n\"Oh, really now?\" she said, giggling.\n\n\"I mean, yeah, the polio vaccine was pretty damn important,\" I said. \"And I guess whoever invented the wheel deserves some credit, too, but... yeah, this is better.\"\n\n\"What time is it?\" she asked. I grabbed my phone out of my pocket, and almost blew the entire fucking afternoon right then and there. I'd forgotten that I changed my phone's background to a close-up shot of Kelly's pussy, spread wide open and dripping wet.\n\nI tried to shove it back in my pocket before she saw it, but I failed. Nicole's eyebrows shot up as her face turned a deep, deep red.\n\n\"Wow,\" she said. \"That was an, um, interesting screen.\"\n\n\"Fuck,\" I said. \"Yeah, it is.\"\n\nWhat else was I going to say? A few seconds ago, I felt like the earth was shaking. Now, I wished it really would open up and swallow my ass whole.\n\n\"Just some random porn pic?\" she asked.\n\n\"Um, no,\" I said. This was going to be a brutal conversation, especially after our passionate 20-minute make-out session. \"My girlfriend.\"\n\n\"Oh,\" she said, now smiling. She actually looked fairly relieved.\n\nWait - what? This whole encounter had me thrown for a loop, but now I was reeling like I'd just taken a right hook from Mike Tyson. \n\n\"That's ok,\" she said. \"I have a boyfriend, too.\"\n\nI felt like someone had punched me in the gut. I'd only felt this way one other time on the trip - back when Kelly had told me that she'd fucked a guy she brought home from a dance club. It was jealousy, and even though I'd only met this girl half an hour ago, I was drowning in it.\n\n\"Back home?\" I asked.\n\n\"Yeah,\" she said. \"Though, I don't have a picture of his cock as the home screen on my phone.\"\n\nIt was my turn to blush now. \"Sorry about that.\"\n\n\"Oh, it's all right,\" she said. \"It looked pretty nice, though.\"\n\nNow I joined her with the eyebrows thing, too.\n\n\"I'm just saying,\" she said. \"I have one, mate. I'm not saying I wanted to go diving into it, but I can tell you if it looks nice or not.\"\n\nI was finding it very hard to speak, but finally, I had let her in on the demolition job she was doing between my ears.\n\n\"Nicole, do you have any idea what you're doing to me right now?\"\n\nShe stopped walking and stood in front of me. She pressed her body close to mine to block out any would-be gawkers and rubbed up and down the length of my cock, still extremely hard and willing to bomb a small city for a chance at escape. I couldn't help but groan.\n\n\"I think so, yeah,\" she said. \n\n\"It's not just that,\" I said. \"My mind was this organized, rational place where logical thought occurred and normal business was conducted. You've turned it into the mosh pit at a heavy metal concert.\"\n\n\"How so?\" she asked.\n\n\"Well, of course just meeting you, and kissing you... the most amazing kisses I've ever experienced. But now you see a picture of my girlfriend's pussy, and not only are you not upset, you're actually complimenting her?\"\n\n\"How could I be mad?\" she asked. \"So, you've got some sheila back home. Like I said, I have someone too. But you're here now, and so am I. I've never been kissed like that before, either. Truthfully, I've never even felt like this before. I say we just roll with it.\"\n\nThat sounded like it would be easier said than done. Call me what you want - a manwhore, a womanizer, whatever - but I'd never felt like I was cheating on girlfriend before. If this kept going the way it seemed to be, I'd have a very, very strong temptation to do just that before the night was over. Kelly approved of all my extra-curriculars thus far, but I was fairly certain that if she'd seen how I was responding to this beautiful stranger today, there was no way she'd want things to continue.\n\nStill, looking into Nicole's exquisite, sparkling brown eyes, still patiently waiting for a response and silently begging me to agree... I had no choice.\n\n\"That sounds good,\" I said.\n\n\"I'm glad,\" she said, leaning forward and giving me another kiss. As opposed to the attack-and-devour method, this one was more of a gentle caress. Our tongues stayed home, and it only lasted a few seconds. There was still a very real chance we could set the grass on fire with all the sparks we were throwing off.",
        "\"I know you never got the chance what with that distracting picture, but I'd still like to know the time.\"\n\nI chuckled. \"Actually, I did,\" I said. \"It's a little after 4 o'clock. Why? Do you have somewhere to be? Need to get away from me that badly?\"\n\nI smiled and chuckled to let her know I was just being playful, but the thought of being apart from her, even for a few minutes, was extremely unpleasant.\n\n\"I do have somewhere to be, actually\" she said. \"The main concerts start a little after 5. I came all this way, and I don't want to miss the music. But I was hoping you'd watch with me, if you don't already have plans.\"\n\n\"Well, the President of the United States and the Pope are coming into town later, and they wanted me to watch the concerts with them,\" I deadpanned. \"I'll have to tell them both that I got a better offer.\"\n\nShe snickered and playfully slapped me on the arm, before taking that same arm and allowing me to lead her off to wherever. We talked idly about our lives as we meandered around the fairgrounds. It turned out that the \"all this way\" Nicole had come was just Los Angeles, as she was studying abroad at UCLA for two semesters. School was out for the summer, and she'd tagged along with some friends who wanted to take a road trip.\n\nIn turn, I told her all about my own road trip. She was only a little bit familiar with most of the cities I'd visited - she'd heard of Chicago and Denver, and of course she knew where the Atlantic Ocean was - but she seemed fascinated by the idea of a huge, cross-country road trip in general. I left out just about all of the sordid details, but I was able to share some of the non-X-rated highlights. I mentioned the fight I'd tried to break up at the Brooks & Dunn concert in Indianapolis, I told her about getting my brother-in-law thrown in jail, and I talked about the fun I had playing wingman for a friend in Charleston. I told her about the four-grand slam game I'd witnessed in Alabama, thinking I would have to identify that particular sport, too, but she surprised me by having a least a little bit of knowledge of the game.\n\nI went on to tell her a little about what I'd done in the Marines, and I described very briefly some of the trips I'd had to take overseas. \n\n\"Well, thanks for your service.\"\n\nI was taken a little aback.\n\n\"Uh, you're welcome, but I wasn't exactly serving your country.\"\n\n\"I know,\" she said, \"but you were serving yours, which is admirable for anyone. Anyway, I'm sure there are some assholes over here who wouldn't be willing to say thanks even though you were serving their country, so I'll say it for them.\"\n\n\"More than you know,\" I said. \"And thanks.\"\n\n\"Besides,\" she said, laughing. It was an awesome sound that I wanted to stop shortly after never. \"Australia and the US are allies, right? So, yeah, in a way, you were serving my country.\"\n\nWe wandered around for a little while longer, slowly circling our way toward the concert area. We made small talk here and there, but mostly we just held hands and enjoyed being in each other's presence. Neither of us wanted to go back to our campsites, but we didn't want to sit directly on the grass either, so we bought a blanket from one of the merchandise tables. About five minutes before the concerts started, we found a spot near the front of the lawn and spread it out. \n\nWe'd just gotten settled in, with her sitting in front of me between my legs, when the first major band of the evening, Little Big Town, started their set. They only had one major hit song out, called \"Boondocks,\" but Nicole sang along to it. I was content to listen to her voice, but after they finished, I asked her about it.\n\n\"You guys listen to a lot of country music in Australia?\" I asked.\n\n\"A lot of people are catching onto it now, yeah,\" she replied. \"We've always had a pretty big Australian country music scene. Keith Urban is Australian, of course, but they didn't really play him much back home until he got big in America. And then he married Nicole Kidman last year...\"\n\n\"And I'm guessing he blew up like a fireworks stand,\" I said.\n\n\"Pretty much,\" she agreed.\n\n\"I've always liked his music, and of course, his wife is pretty attractive. You know what I like most about her, though?\"\n\nShe just looked the question at me.\n\n\"Her name.\"\n\nHer face showed confusion for just a second, but then it registered, and her lips turned up in a big smile. I quickly covered them with my own, and we spent the next few minutes putting on a public display of affection for anyone who might have been watching. \n\nWe were sweating when we pulled apart, and it wasn't just because of the heat. The heat was a major bitch, though, and I was about to suggest a beer run, but she somehow read my mind and came up with a better idea. She dug into her shoulder bag and produced a tube of sunscreen. She offered it to me with her eyebrows raised, and the look on her face told me that the idea was definitely not for me to put it on myself.\n\n\"That is a great idea,\" I said. The sun had been baking both of us for hours, and while I'd slathered some on after my shower, I'd long since sweated it off. \"But I think I need to let you go first.\"\n\n\"Oh, really?\" she asked.\n\n\"You see, the thing is, I get a little clumsy with these things,\" I said, taking the tube from her and squeezing some into her hands. \"I'm a little uncoordinated and not very good with my hands, and, you know.. it might just take me an hour to finish the job. Maybe even longer.\"\n\nShe moaned very quietly, then rubbed her hands together.\n\n\"And by that time, I might look like a lobster,\" I finished.\n\n\"Yeah, right,\" she said. \"You just want me to touch you.\"\n\n\"That, too,\" I said. She started with my legs, her fingertips tracing the contours of my calf muscles as she worked her way up. My shorts covered much more of my thighs than hers did, so there wasn't much left when she got above my knees. She jumped up to my upper body, starting with my forearms then travelling under my sleeves and mapping out the muscle definition in my biceps and shoulders. She traced the design of my tattoo with one delicate finger then moved up to my face, spending a few minutes on my face covering every square inch with lotion and ensuring it was absorbed into my skin. By the time she reached the back of my neck, it was more of a massage than sunburn prevention.\n\n\"There,\" she whispered into my ear. \"All done.\"\n\n\"Ooh,\" I said. \"That means it's my turn.\" I took the tube away from her and squirted a liberal amount of sunscreen into my hands. \n\n\"I think that means it's my turn,\" she said with a grin. \"And I'm going to enjoy this like you wouldn't believe.\"\n\n\"Probably not as much as I will,\" I replied.\n\nShe was still turned toward me, so I started with her face. I pushed several stray, sticky strands of her hair away as I rubbed her forehead and took special care to massage her temples before I moved south. I mimicked my earlier movements, brushing my thumbs along her cheeks as if I was wiping away invisible tears. I used just my pinky to apply lotion between her eyes, down the bridge of her nose and on the narrow strip of skin between her nose and upper lip. Before I moved below her chin, I leaned in and kissed those succulent lips for a few moments.\n\nNicole moaned into my mouth, and she would have gotten her tongue involved if I hadn't pulled away.\n\n\"How did the sunscreen taste?\" she asked, a smile playing on her freshly-kissed lips.\n\n\"Not bad,\" I said. In truth, it had tasted awful, of course, but\u2014 \"If that's the price I have to pay to kiss you, it's a fucking steal.\"\n\nWhatever she might have said in response was cut off by my fingertips, which started under her left ear and continued down her jawline until I was just beneath her right. I was especially gentle beneath her chin and on her neck, but I couldn't resist planting several feathery kisses along her windpipe.\n\nI pushed the spaghetti straps off her shoulders and rubbed outward from her neck until my hands were on her upper arms. On another day, in a different situation with a different woman, I might have asked permission, but I really - really - wanted unfettered access to her skin, and I figured she'd be okay with me taking charge. She just smiled and moaned slightly when my fingers dug into the soft flesh between her collarbones and her ample chest. Without the straps to hold it up, the green top sagged, affording me an excellent view of the cleavage spilling out of her bra.\n\nI worked my way down her triceps and forearms then went back up on the undersides of her arms, through the crooks of her elbows and across her biceps until I was again at her shoulders. I jumped inward to her chest, rubbing lotion on both sides of the tanline where her halter top began. As much as I wanted to keep my hands moving south, I was still vaguely aware that there were other people around, and besides - I was genuinely interested in exploring every single inch of her, not just the parts they emphasized in porn.\n\nI pulled the straps back onto her shoulders so her top would again be supported, before I pulled the bottom seam of her shirt underneath her breasts. I spent at least 10 minutes kneading her stomach. It wasn't a washboard or a six-pack by any means, but I could feel her abs rippling under the skin. I tried my best not to tickle her, attempting to find the sweet spot between too little pressure and too much. Her face was a mixture of serenity and happiness - her eyes were closed and she was drawing slow, deep breaths, but a huge smile split her lips. \n\nHer legs were next, and if I didn't know any better, I'd tell you I spent a few days massaging them. I vaguely remembered thinking that Marie, the brunette I'd slept with in Pittsburgh a week or so ago so that my friend - her boyfriend - could win a bet, had the best legs in the Milky Way galaxy, but I was sorely mistaken. Marie was taller, so of course her legs were longer, but Nicole's were just better, even if by the smallest of margins. \n\nSomewhere in the back of my conscience, I recognized that the next band had taken the stage, but I couldn't have cared less. It could have been Garth Brooks, Willie Nelson and George Jones playing a one-time only concert on that stage, and I wouldn't have let it distract me from this goddess' body.\n\nI liberally coated her thighs with lotion, even slipping my fingertips a few inches under her shorts, but I passed on the opportunity to push the fabric farther up her legs, figuring I would have plenty of time for that later. I repeated the same motions on the underside of her legs, but this time, the few inches I pushed under shorts granted me access to the lower part of her ass. I groaned when I felt how tight yet pliable her cheeks were, and she giggled.\n\nHer calves, though... holy shit. They were among the first things I'd noticed about her when we met in the ice cream line, and my hands could definitely confirm what my eyes had suspected. They were firm and muscular, leading me to believe she had some sort of athletic background, but they were still soft and feminine. I'd always considered the lower legs to be one of the sexiest parts of a woman, and Nicole's were basically the perfect specimen off which all others should be created.\n\nAgain, I couldn't help myself. I raised her closest leg up and trailed several slow, tongue-filled kisses from her knee all the way down to her ankle, drawing a few gasps from her along the way. I was aware that an outside audience might consider what I was doing to be lewd and inappropriate, but unless one of them was holding a badge and specifically told me to stop, I wasn't going to.\n\nWhen I finished the process on her other leg and set it down, Nicole's face had morphed from her earlier look of content relaxation to one of intense concentration. Her face was a deep, deep red - and I knew I'd done a good job with the sunscreen, so it wasn't a burn - and her breathing had quickened considerably.\n\nFor my part, this reverent worship of her legs had kept my cock as hard as a steel rod, and I again had to resist the urge to crawl on top of her and ravage her until Grand Junction's finest carted me off to jail. I hadn't lost sight of my objective, though - there was still a whole other side of her upper body I hadn't tended to yet.\n\n\"Come here, pretty lady,\" I said, beckoning her toward me with a crooked finger. She shifted her hips toward me until she was settled between my legs with her back against my chest. She leaned her head back and looked up at me, and we descended into yet another round of intense tonsil acrobatics. My hands roamed all over her stomach while hers rubbed up and down my legs. Her ass was nestled tight against my cock. They say innovation is born out of necessity, and I briefly wondered if my cock wouldn't suddenly figure out how to cut through fabric in order to get to her.\n\n\"Fuck,\" she moaned when we broke apart, and I was momentarily taken aback. She said it with a heat and intensity level that I'd only heard from one other person, but I'd heard it from that other person hundreds of times over the past two weeks. Thoughts of Kelly clouded my mind suddenly, and I was filled with shame and guilt over what I was doing right now. \n\n\"Brad?\" Nicole asked. \"Are you forgetting something?\" She shrugged her shoulders to remind me I still had some parts of her to finish off. I looked into her eyes, and while I have no idea what she saw in mine, I saw in hers a raging inferno that threatened to leap out and singe my soul. I wasn't scared, per se, but for the first time in a long time, I was intimidated by a woman. \n\n\"Please,\" she begged. Her voice was very plaintive, as if she'd read my mind, understood my hesitation, but wanted me to continue anyway. She didn't use any of the cheap, stereotypical persuasive devices the fairer sex was known for - there were no puppy dog eyes or batting of the eyelashes. She just gazed into my eyes, trying to convince me using sheer force of will.\n\nAnd as I stared back at her, I knew I was basically powerless to deny her anything.\n\nI pushed her head down and kissed her behind the ear.\n\n\"Oh, God,\" she moaned. My mouth moved down her neck to her shoulder, and I used my nose to push her hair out of the way as I moved across her back to the other shoulder. My hands were busy, as I was trying to put more sunscreen on them without tearing my eyes away from her body.\n\nNicole pulled her hair around to the front side of her body, giving me unrestricted access to her shoulders and neck. I moved slowly and deliberately, taking at least 15 minutes to cover her slender neck and shoulders with lotion. Her muscles were tight across her upper back, so while I was genuinely trying to prevent sunburn, I was also trying to massage out her knots.\n\nShe grunted and groaned as I hit different spots, alternating between light pressure and deep-tissue kneading when the situation called for it. \n\n\"Jesus, woman,\" I muttered. \"What summer classes are you taking at UCLA? You're incredibly tight.\"\n\n\"That's just me,\" she answered back. \"I'm tight everywhere.\"\n\nI caught the double meaning, and replied by running my fingertips under her armpits. She giggled and squirmed away from my tickling.\n\nI moved to her lower back, noticing for the first time the tattoo that started there before disappearing under her shorts. The part I could see was a small blue butterfly, with some fancy curved lines protruding out from either side in an intricate pattern that continued below her waist. \n\n\"Very sexy,\" I muttered into her ear as I rubbed lotion all over it. She groaned back a thank you. I slowly moved upward, pushing her shirt up above her bra strap. Using the same \"forgiveness-over-permission\" principle as earlier, I swiftly unclasped the bra, exposing her entire back to me. She gasped when she felt it come loose.\n\n\"Naughty boy,\" she said, and I could almost feel her smiling. She didn't stop me, though, so I worked my way up toward her shoulders, paying special attention the area where her bra had been. When I reached her bunched-up shirt, I moved back down her spine with two fingers, outline each vertebra when I came to it. \n\nFinally, I turned my palms outward and pushed both under the waistband of her shorts, giving the upper portion of her ass the same attention the lower portion had received earlier. When I was finished, I pulled her back against me and put my chin on her shoulder. She purred contently, while I relived the entire episode in my mind. \n\nSimply put, massaging Nicole's body was a fucking religious experience.\n\nI was competitive at heart, so I'd been keeping a running leaderboard in my head, ranking all the women I'd encountered on my trip thus far. There was the one for overall sexiness, but there were also ones for different parts of the body - best ass, best tits, best legs, etc. Call me crass if you want, but it was just a way of keeping track in a way that made sense to me, and really, I was splitting hairs with most of them because every woman I'd been with was hot.\n\nThose internal rankings were useless now. Nicole was at the top of every single one of them, and I hadn't even seen all of her body yet.\n\nSometime during my massage, the band had finished playing, and we were now waiting for the next artist to come out. Jason Aldean would be the last opener for Trace Adkins, and though he only had a few songs on the radio, it seemed to me that he might turn into a huge superstar down the road.\n\nA few minutes later, he came out and played for maybe 45 minutes. I just held Nicole throughout, as we sang along to the songs we knew and listened to the ones we didn't. He finished up his set and was finally taking the sun with him. It wasn't quite past the horizon yet, but it was no longer threatening to boil us all like lobsters.\n\n\"You want to come with me to get a couple beers, and maybe some food?\" I asked her.\n\n\"I would, but I think I'm just going to run to the toilet then come back to the blanket,\" she said. \"My body is still buzzing from what you did to me, Brad.\"\n\n\"It was my pleasure,\" I said. \"You want anything to eat?\"\n\n\"Yeh, I am a little hungry,\" she said. \"Surprise me?\"\n\nI nodded and watched her walk toward the bathrooms before I headed off to the food trucks. As Trace Adkins was about to sing to us in a little bit, I hated to see her go, but loved watching her leave.\n\nThe food lines were long, so it took me the better part of the break to get two beers, two plates of nachos and two hamburgers. When I got back to the concert area, I stopped short when I saw our blanket. \n\nNicole was still sitting on it, but she had company. Familiar company, at that.\n\n\"Fancy meeting you two here,\" I said, and Nicole, Chad and Janine looked up at me. I was instantly nervous - no one knew everything I'd been up to at this particular festival better than Chad and Janine, and spilling any part of it could piss off Nicole and wreck my universe. I knew Chad wouldn't say anything, and I was hoping Janine would have a fellow Marine's back, too. \n\nI was also genuinely interested in how they'd come to be here with Nicole, when I hadn't introduced her to anyone I knew.\n\n\"Brad, I, um, met your friends,\" Nicole said.\n\n\"I see that,\" I said, handing her a beer and putting the food on the ground in front of her. \"Question is, how did you know they were my friends?\"\n\n\"She didn't,\" Janine said. \"We found her.\"\n\n\"Was at the Marine tent waiting for her a while ago,\" Chad said, motioning toward Janine. \"Saw you two walking around holding hands. Didn't think anything of it, but I noticed.\"\n\n\"We were walking toward the front, but Chad saw her sitting here by herself getting harassed by two guys,\" Janine said. \n\n\"Thought she might still be with you, so we came over to check,\" Chad said.\n\nMy face must have flashed in anger, because Nicole tried to calm me down immediately. \"I was fine, Brad. They were just trying to get me to come with them. I kept telling them I was here with someone.\"",
        "\"You were doing fine, honey, but they wouldn't take no for an answer,\" Janine said.\n\n\"So they got me for an answer instead.\" I looked at Chad, who was grinning. He stood 6-foot-5 and could benchpress well over 300 pounds. He was routinely overweight when we took our Physical Fitness Tests, using the body fat test to pass instead - namely, he didn't have any. That would be intimidating for anyone.\n\n\"Was there an ambulance involved in this answer?\" I asked.\n\n\"Nah,\" he said. \"Once I told them the guy she was waiting on was a close, personal friend of mine, and that he occasionally beat me when we fought, they went away on their own.\"\n\nIt was true - I had beaten Chad a few times when we sparred during our Marine Corps Martial Arts training. Not often, mind you, but enough to prove that I could.\n\n\"Yeah, that would probably scare the shit out of anyone not named Chuck Norris,\" I agreed. \"I guess you've already introduced yourselves, then?\"\n\n\"Yeah,\" Janine said. \"Your new friend here has a sexy little accent.\"\n\n\"She has a sexy little everything,\" I fired back.\n\n\"Hey,\" Nicole piped up. \"Not everything on me is little.\"\n\n\"That's true,\" I agreed. \"But everything on you is perfect.\"\n\nNicole blushed and looked away, which amused Janine. Chad shot me an odd look, but it went away quickly, replaced by a smile. It was similar to the look I'd given him yesterday when I'd seen him with Janine at the Skynyrd concert, knowing that he was really into her.\n\n\"So what else have you guys been talking about?\" I asked.\n\n\"Not much,\" Janine answered. \"Just told her who we are, how we know you, what we've all been doing the past few nights.\"\n\nMy eyes went wide.\n\n\"You're quite the beer drinker, apparently,\" Nicole said. \"She said you put enough away the last two nights to stun a rugby squad. I don't know that there's enough beer in the world for that.\"\n\nJanine was laughing with her eyes, and Chad was wearing his signature shit-eating grin.\n\n\"I have my moments, but like you said,\" I said. \"No one's liver can take that much punishment.\"\n\n\"Anyway, we'll leave you two alone,\" Janine said.\n\n\"Aw, you can join us, if you want,\" Nicole offered.\n\n\"We would,\" Chad said. \"But my lady friend here has always had this fantasy of getting it on during a concert. She tried it one time, but I guess the guy was just awful. Gonna take her somewhere and show her how it's really done.\"\n\nSo, two things I learned from this conversation: 1. Neither Chad nor Janine had sold me out. 2. I was going to kill Chad at some point in the not-so-distant future.\n\nNicole was laughing uncontrollably as they left. \"You have some mighty hilarious friends.\"\n\n\"Yeah,\" I deadpanned. \"They're the best. Was it really that funny?\"\n\n\"Yes!\" she exclaimed. \"I feel bad for the other guy, whoever he was.\"\n\nWell, I knew damn well who he was, and knew the whole thing was a joke. So after a few seconds, I started laughing along with her.\n\n\"The poor bastard,\" I agreed.\n\nI'd thought I was going to have to eat some of her burger and half her nachos, but Nicole surprisingly matched me bite for bite. When she finished her nachos, I still had a few left, and she stole one of them before I could react.\n\n\"Just because you're the best kisser in the free world doesn't mean you get to steal my food,\" I told her.\n\n\"The more you flatter me, the easier I can steal your food,\" she said, stealing the last nacho from my plate. \"I win both ways.\"\n\nMy response was cut off by the dimming of the lights as Trace Adkins took the stage. Nicole settled back into me, and once again she backed her ass up against my cock. The food and conversation with Chad and Janine had calmed him down some, but he was quickly revving back up.\n\nHe started off with some of his bigger hits, and each time I sang a line or two directly into Nicole's ear, she seemed to melt into me a little bit more. He only had one or two slow love songs in his set, and an unconscious mental block kept me from singing those to her, but all the rest were fair game. We kept the chatter and physical exploration to a minimum, choosing instead to enjoy good music and better company.\n\nAs he started to wrap it up, though, we got up and danced together. The crowd had filled in throughout the day - when we'd first sat down, there was no one within 20 feet, but now, there were people within 20 inches. That forced us to press ourselves together tightly, but we were more than OK with that. She ground against me as I held her hips close, and by the time his main set finished, I was basically dry humping her amidst 10,000 or so of our closest friends.\n\nThe band left for a moment, but they quickly returned for their encore, which was probably Trace Adkins' most famous song, Honky Tonk Badonkadonk. To emphasize the point, I spun Nicole toward me and grabbed two handfuls of her ass, and she groaned into my mouth when I kissed her. Halfway through the song, she spun around, and I pushed my hands down the back of shorts, grabbing her ass directly now. It's impossible to use words to explain how good she felt in my hands - all I can say is I immediately stopped thinking about the music and the crowd and really, anything other than her firm cheeks in the palm of my hands.\n\nWe made out feverishly throughout the rest of the song, and kept going as people filed out around us, though I did pull my hands up to her back once the music ended. A few people patted me on the back and there were several whistles and cat calls, but if I could ignore a loud country band and focus on Nicole's tongue, I could definitely ignore a few straggling would-be interlopers.\n\nFinally, there were only a handful of people left in the concert grounds, many of them doing exactly what we were. We broke off the kiss and stared at each other for a long while; maybe a couple of minutes, maybe half an hour. I could have stood there looking at her all night, but I sensed there was something else on the agenda. It simultaneously thrilled me and scared the living hell out of me.\n\n\"Is there someplace we can go?\" she asked, reading my mind. I didn't want to risk going back to my campsite, in case Sara and Liz had come back, and I didn't want to break the mood by asking her where she camping. So I took her hand and led her off the concert grounds and back through the festival area. It was mostly deserted now, with just a few vendors closing up shop for the night.\n\nAs I'd thought, the Marine Corps tent was empty for the night. They'd kept the tables, the chairs and the coolers out, but all the recruiting materials had been packed away and of course, no one was working this late. I spread out the blanket in the darkest corner of the tent and gently lowered Nicole to it, joining her moments later.\n\nWe didn't speak, but we didn't have to. I claimed her lips with my own, and our bodies melded together again. With no audience around to object, our hands roamed freely. We only broke contact once, to pull each other's shirts off. Even with her bra on, her full breasts still felt magnificent in my hands, and I could tell she was pleased with the muscle definition across my chest and shoulders. \n\nI peppered her cheeks and neck with kisses for a while, before she slid out from under me and climbed on top, doing the same with my face and chest. Her lips felt so soft and light yet so full, and when she licked my nipples with her studded tongue, she made my eyes roll back.\n\nShe grinded her hips onto my raging cock over and over again, until I realized that there was a real chance I might cum in my shorts. I could feel the heat radiating from her pussy, as the accompanying dampness soaked her shorts and mine. \n\n\"God, Brad,\" she said, the first words either of us had spoken since we reached the tent. \"You're driving me crazy. I'm dripping like a faucet for you.\"\n\n\"I'm sure I am, too,\" I said. I could feel moisture around my cock and guessed that at least some of it was pre-cum.\n\n\"I know this is crazy, but I want to make love to you so badly,\" she said. All the sudden, my body - and my brain - locked up tighter than a nun on Easter.\n\nThis wasn't just about sex between Nicole and I. I knew that. It seemed impossible, but after less than 12 hours, she and I had forged an unbelievably strong connection, and I knew that everything we'd already done and anything else we did would do nothing but strengthen that bond. I wasn't quite ready to use the word she just had, but it would be way, way beyond just fucking.\n\nOf course, just yesterday I had been ready to use that particular word, with a very specific someone who happened to not be the brunette bombshell straddling me at the moment. Everything else on this trip had been just sex, but this wouldn't be. Could I do this to her? Either of them, really?\n\nAs if I needed more evidence that our connection was more than just physical, Nicole lay down on top of me and cooed in my ear. \n\n\"Hey,\" she said. \"I lost you there for a minute.\"\n\n\"I'm not sure I'm back,\" I replied. \n\n\"Is it your girlfriend?\" she asked.\n\nI just nodded. \n\n\"There's so much pain on your face right now,\" she said.\n\n\"I love her, Nicole,\" I blurted out. \"She's the most special woman in the entire fucking world, and if I did this right now, I have no doubt it would kill her.\"\n\nNicole had stopped breathing. Her eyes were focused on mine, clearly waiting for me to continue.\n\n\"But at the same time, I can't deny this incredible thing we have going. I want you worse than I want oxygen right now, and I don't just mean your body. How the fuck is it possible to feel this strongly for two women at the exact same time?\"\n\nI had opened my mouth not knowing what was going to come out, but I hadn't expected it to be that.\n\nShe finally drew a breath and slowly let it out. A smile spread across her face as she nestled into my shoulder.\n\n\"I love my boyfriend, too,\" she said. \"And I want you every bit as badly as you want me, so I understand.\"\n\nI kissed her on the forehead. My mind was still reeling and spinning way the fuck out of control.\n\n\"Just please, hold me right now and don't let me go, okay?\" she asked. Since I couldn't have pried myself loose with an industrial-strength crowbar, I nodded and pulled her tighter against me. \n\nWe kissed a few dozen more times over the next couple of hours, but as much as I really, really wanted to, I didn't escalate things any further. No more words were spoken, either - just simple strokes of her hand on my chest or mine on her bare back conveyed all the feelings we needed to share.\n\nIt had to have been around 3 in the morning when I finally started to doze off. Almost every night of this trip, I'd texted or called Kelly before I fell asleep, but that wasn't going to happen tonight. Honestly, I hadn't even looked at my phone since showing Nicole my brazen screensaver picture, so I'd been ignoring Kelly all day. The thought showered me in guilt, but then, it just joined a long, long list of things I felt guilty about.\n\nNicole's breathing was heavier, too, and I could tell she was falling asleep as well. Right before I drifted off, I heard her mutter something that sounded a lot like \"I can wait.\"\n\n\"Wait for what?\" My mouth hadn't actually opened, and that was my last thought before my eyes closed.\n\n***************************\n\nYou know the drill. Votes, comments and feedback are always appreciated. If you want me to add you to my mailing list, instructions on how to do that are on my profile page. Ch. 20 is in progress, and it's going well, but if you've followed me for any length of time, you know how that is. I might finish it in a month, or it might be longer than that. Thanks for reading!"
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "brad",
        "kelly",
        "nicole",
        "road trip",
        "colorado",
        "camping"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/brads-road-trip-ch-19"
}