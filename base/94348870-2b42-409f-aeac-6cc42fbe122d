{
    "title": "Sea Tramp Summer Pt. 06",
    "pages": [
        "Sea Tramp Summer\n\nPart 6\n\n(Author's note: this is a work of fiction. Any resemblance to any person(s) living or dead is purely coincidental. All characters depicted are at least 18 years of age.)\n\nThey stayed in Clarence Town for a full day due to a storm that rolled in during the night, then set sail the morning after that with Lucy again taking the boat out of the harbor, Dan switching their hats once more as they did. Right after they switched hats Dan went below deck and came back with a half-sheet of a paper towel in his hand, rolling it up and then pressing it flat on the cabin roof. He took his captain's hat from Lucy's head and stuck the paper towel behind the sweatband in the back of the hat, making it fit her head almost perfectly. She grinned up at him from beneath the bill of his hat, her eyes sparkling, and he thought she was the most beautiful woman he'd ever seen.\n\nIt took them two days to reach Georgetown on Great Exuma Island, both because of the distance and the circular course Dan had plotted to maximize the time they had left together. The end of their journey was approaching and both of them knew it, although neither of them wanted to talk about it. So they made the best of the time they had left, with Dan stretching that time out as much as he could.\n\nAfter a day in Georgetown they were out on the open sea again and headed for Nassau, the final stop on their voyage before heading back to Andros. This was going to be the longest leg of their journey and would take them three days to make the trip, but they were both looking forward to it. Halfway through the second day Dan decided to find a suitable location and anchor in Highborn Cay for the night to get them out of the shipping lanes surrounding Nassau and Andros, and after finding the perfect secluded bay later that afternoon they did just that. They dropped anchor in a small, secluded bay about a hundred yards off shore from a simply beautiful white sand beach surrounded by palm trees and jungle.\n\n\"This is gorgeous!\" Lucy said, looking around at the small bay as she stood on the bow of the boat. \"So beautiful, nice and secluded!\" She looked over at Dan with a glint in her eye and a mischievous grin on her face.\n\n\"Are you thinking what I think you're thinking?\" he asked, putting his hands on his hips.\n\n\"You mean am I thinking about throwing you down onto the deck and fucking the living shit out of you like I said I was going to do a few weeks ago?\" she said, sidling up to him and running her fingers over his chest, tweaking his nipples along the way. \"Is that what you think I'm thinking?\" she asked, her voice low and husky as she stood very close to him, looking up into his eyes.\n\n\"Something like that, yeah,\" he replied, his voice soft.\n\n\"That's exactly what I'm thinking,\" she said, her voice a whisper as she turned her head up to his and put her hand on the back of his head, pulling his mouth down to hers. He slid his arms around hers as their lips touched, marveling again at just how soft her lips felt against his. He pulled her close as the kiss deepened, her tongue slipping into his mouth as she pressed her body up against his. He could feel the firm mounds of her big, naked breasts pressing against his chest, and she could feel the tube of his cock growing and hardening against her abdomen. She slid her hand down between them to pull his cock upright in his trunks to give it room to grow, rubbing it with the palm of her hand through his trunks. Dan slid a hand down her back and gripped one of the cheeks of her ass in his hand, squeezing the firm, rounded globe beneath her bikini bottoms tightly.\n\nTheir passions rose quickly with Dan's cock rising just as fast, and she broke the kiss only long enough to grab his trunks and yank them down over his hips, being careful not to snag his erect cock in the process. Then she pushed him down to the deck and straddled him, standing over him with one foot on either side of his hips. She looked him in the eyes, her eyes burning with desire, as she untied the side strings of her bikini, stripping it off and tossing it aside. Next she dropped down on all fours, straddling him with her knees on either side of his hips and a hand on either side of his head, bending down to kiss him fiercely. Dan reached up and took each of her heavy breasts in his hands, squeezing them firmly as she pushed her tongue deep into his mouth, her breathing quick and heavy.\n\nAfter a few more intense moments she broke off the kiss and sat up, sitting down on his hips with her pussy pressed up against the underside of his throbbing cock. She looked at him with hooded eyes, the passion burning there like a forest fire, her mouth slightly open as she gasped for breath. She lifted up one knee and put one foot on the deck, lifting her hips from him as she reached down and grasped his cock. She held it straight up and dropped her pussy down to touch it, rubbing the bulbous head up and down her soaking wet slit before placing it at the opening to her most sensitive feminine part. Never taking her eyes from his she sat down on his cock, dropping her knee back down to the deck and moaning loudly as she engulfed his entire cock in one long, hard, deep push. She put her hands on his chest for support as she ground her hips down and around on his cock, eliciting a groan from Dan as well.\n\nDan reached up and grabbed her big breasts with both hands, squeezing and kneading them in his hands as she began riding his cock. She was in no mood to fool around, riding his cock in a fast, steady rhythm almost immediately, slamming her hips down onto him as she gripped him with her inner muscles. She rode him like this for several minutes, her tanned body sweating in the heat of the Caribbean sun, before she did something that totally surprised Dan.\n\nKeeping his cock trapped inside her pussy she spun around to face his feet, putting her knees back on the deck on either side of his hips and her hands on the deck on either side of his knees for support. Then she began riding his cock hard and fast, lifting her hips up and then dropping them down, sliding her wet pussy up and down on his cock over and over again. Dan lifted his head and watched in fascination as her ass moved up and down, her pussy rising and falling on his cock over and over again, his cock shiny and slippery with her juices.\n\n\"Oh my God, oh my God, oh my God!\" he heard Lucy cry out as she dropped her hips down onto his cock over and over again. She was riding him like a woman possessed, and all he could do was lay there and enjoy it.\n\n\"I'm gonna cum, I'm gonna cum!\" she cried out a few minutes later, and nearly as soon as she said it her orgasm hit. She cried out loudly as the waves of pleasure went crashing through her body, slamming her hips down onto his cock and grinding her butt around in circles on his cock as it was impaled inside her. Dan could feel her whole body shaking with the force of her orgasm, and he was surprised when she didn't slump forward gasping for breath when it was finally over.\n\nBut she didn't. She spun back around to face him, bracing herself as she had before, looking down at him as her eyes burned brighter with her lust for him than he'd ever seen before. She thrust her hips down and drove his cock deep into her pussy, holding it there and squeezing it as she spoke.\n\n\"Your turn!\" she said, her voice husky, a slightly evil smile on her face.\n\nThen she started to move again at the same intensity and tempo as she had before, riding his cock hard and fast, her big breasts bouncing and swaying on her chest. After a minute or two of this she changed her movements, keeping her upper body still while she moved her hips from the waist, sliding her pussy up and down on his throbbing cock.\n\n\"Give it to me!\" she hissed through clenched teeth, \"Give it to me, Dan! Give me your cum, give me your hot cum! I want it inside me, and I want it now!\" she said, moving her hips even faster and squeezing his cock even harder.\n\nDan gave it to her, his orgasm catching both of them by surprise. He groaned loudly and slapped his hands on top of her thighs, gripping them tightly as his cock erupted. He squeezed his eyes shut and groaned through clenched teeth as his cock pumped and throbbed inside her, shooting stream after stream of cum deep inside Lucy's pussy. She cried out in triumph as she felt him bucking and throbbing beneath her, continuing to ride him as his orgasm ran its course. She sat straight up on his hips, driving her pussy down hard onto his spewing cock, grinding her hips around and around while she squeezed the last of his cum from him. She stayed like that until his cock stopped throbbing inside her and his body relaxed, his orgasm over, leaving him spent and panting for breath.\n\nShe sat on him for several minutes as both of them caught their breath, Lucy enjoying the sensation of feeling his cock slowly soften and shrink inside her. She leaned over and kissed him softly, their tongue barely touching, before sitting back up and sliding her pussy from his cock as she stood up. She wobbled a little as she stood, grabbing onto the railing for support, laughing at her own clumsiness.\n\n\"You'd better be careful or you'll fall overboard!\" Dan said, sitting up on the deck.\n\n\"Now that you mention it, a swim in the cool ocean water would feel pretty good right about now!\" she said, looking down at the water. \"Be a dear and put the ladder down for me, would you, Cap'n Dan?\" she said, then dove over the railing into the water.\n\n\"Aye-aye, Cap'n!\" he said, smiling as he got up from the deck. He walked back to where the rope ladder was stowed, untied it from its holder, then pushed it over the side. Then he walked over to the ship's wheel, hung his captain's hat from one of the spokes, and dove in the water himself. When he came up he turned and looked for Lucy, and was surprised to see her swimming towards the beach. He followed her, and by the time he got to the beach she was already there and sitting in the sand, watching him as he walked towards her.\n\n\"Fancy meeting you here!\" she said, grinning up at him. He plopped down on the sand next to her as he caught his breath.\n\n\"Yeah, I'm like a bad penny, I just keep turning up!\" he replied, making her laugh. She stretched her legs out in front of her and leaned back, resting on her hands behind her as she looked around.\n\n\"This place is so beautiful, like a picture postcard!\" she said, smiling from ear to ear. \"You are SO lucky to live here, Cap'n Dan!\"\n\n\"I'd never live anyplace else, that's for sure,\" he replied, looking around. \"Not after having lived down here for this long, and especially not after this trip,\" he said, looking down at her. She looked back up at him, a sad look in her eyes and on her face.\n\n\"I don't want it to end, Cap'n Dan,\" she said softly, shaking her head slightly. He turned to face her, looking down at her as he spoke.\n\n\"But it has to, Lucia. You know that as well as I do,\" he said softly, seeing her eyes begin to well up with tears.\n\n\"But I don't want it to!\" she whispered, the tears coming now. She sat up quickly and threw her arms around his neck, hugging him tightly. \"I want to stay here with you, on the 'Sea Tramp!'\" she said, crying into his shoulder. Dan wrapped his arms around her and held her tightly, feeling her body shake as she cried.\n\n\"Oh, Lucia, you don't know how happy it makes me to hear you say that!\" he said softly, cradling her head in his hand. Then he held her out a bit and looked into her tear-filled eyes as he continued. \"And as much as I'd love for that to happen, we both know it can't...and we both know why,\" he said, looking into her eyes and hating what he knew he had to say next. She looked up at him, her eyes filled with both tears and dread at the same time, breaking his heart even further.\n\n\"You have a life that you have to get back to, m'dear,\" he said, holding her head in his hands. \"A life...and a husband,\" he continued, her eyes growing wide at his words. \"It's not fair to him if you stay, and it's not fair to you, either,\" he said, his own words hurting all the way down to his soul.\n\n\"How...how did you know?\" she whispered. He smiled at her as he replied.\n\n\"I've known since the moment you came on board,\" he said, taking her left hand in his and holding it up, rubbing his thumb along the top of the ring finger between the back of her hand and the first knuckle. \"You had the outline of a wedding band and engagement ring on this finger before you got tan,\" he said, smiling at her.\n\n\"I was going to tell you, I was just waiting for the right time,\" she said, her voice shaking with emotion, \"but the longer we were together the less I wanted to tell you because the more I wanted to stay! You must think I'm a terrible person!\" she said, dropping her head. He put a finger under her chin and lifted her head up, looking into her eyes as he spoke.\n\n\"No more terrible a person than I am, Lucia,\" he said with a gentle smile. \"I knew you were married but I let things continue as if you weren't.\"\n\n\"I understand how it wouldn't be fair to my husband if I were to stay here with you, but how would it not be fair to me?\" she asked, looking into his eyes.\n\n\"Because you have your whole life ahead of you, Lucia, your whole life to live, love, and experience all of the wonderful things this old world of ours has to offer,\" he said, holding both her hands in his now. \"I'm long past the midpoint of my life and am fast approaching the final act. My time remaining here is much shorter than yours, so much shorter, and I couldn't live with myself if I were to deprive you of the chance to live your life to its fullest as I have. Your husband can give you something that I can't; namely, a chance to have children and experience the joys of raising a family.\" He paused to kiss the back of her hands before he continued.\n\n\"And you can't do that if you stay here with me, as much as I hate to admit it,\" he said, his voice soft.\n\n\"But I want to stay here with you, I want to do everything I can to make you happy!\" she said, her eyes tearing up again. \"I...I love you, Daniel!\" she said, calling him by his proper, full name.\n\n\"And I love you, Lucia, with all my heart,\" he replied, smiling, \"and it does my heart good to hear you say that!\"\n\n\"I mean it, Cap'n Dan, I really do! I love you!\" she said emphatically, hugging his neck again. \"Please let me stay! Let me stay here with you!\" she begged, breaking his heart even more without realizing it. He pulled her from his neck and held her out away from him again, his hands on her upper arms as he spoke. He was about to lie to the woman he loved, and it was tearing him up inside -- but he'd never let her know that, not ever. He put on a brave face and a smile as he continued.\n\n\"If you want to make me happy, if you really want to make me happy, then I want you to promise me two things,\" he said, looking into her eyes.\n\n\"Anything, Cap'n Dan, anything at all!\" she replied.\n\n\"First, when this voyage is over, go home to your husband. Go home to your husband and share yourself and your love with him as you have shared those things with me,\" he said. \"Will you promise that for me?\" he asked, and Lucy nodded.\n\n\"And second?\" she asked in a soft, quiet voice.\n\n\"Not to speak of this again for the rest of our voyage,\" he said, \"right up to and including the moment you leave. I want the rest of our time together to be just as it has been up until the moment we landed on this beach and had this talk. Will you promise me these two things, Lucia?\" he asked, looking into her eyes. She looked back for several moments before she replied.\n\n\"Yes, I will,\" she whispered, lowering her eyes as she spoke.\n\n\"Say it for me, Lucia,\" he said softly, \"look me in the eyes and say it.\" She looked up at him and looked him in the eyes, the tears running down her face.\n\n\"I promise,\" she said, nodding.\n\n\"Thank you, m'dear!\" he said, hugging her close to him. She wrapped her arms around him and hugged him back, holding him tightly in her arms.\n\n\"I love you, Daniel!\" she whispered, fighting back the tears.\n\n\"And I love you, Lucia,\" he replied, holding her even closer, reveling in the feeling of her body next to his. They stayed like that for several moments, then Dan released her from his arms and stood up.\n\n\"I think it's time we got back to the boat and got something to eat, don't you?\" he asked, smiling down at her and putting on his best face despite the fact that his heart was breaking inside. Lucy smiled back at him as she got up, taking him by the hand.\n\n\"I think so, Cap'n!\" she said, giving him the best smile she could.\n\n\"Last one back on board is a sea dog!\" he said, sprinting for the water. She got up and sprinted after him, following him back to the boat, determined to keep her promises to him no matter what.\n\n* * * * * *\n\nThey stayed up late that night, sitting in their deck chairs on the bow drinking Red Stripe while Dan smoked his cigar until well past midnight, the boat rocking gently on the tide as it sat at anchor. They spent the evening talking about things they had seen so far and things they would see, with Dan telling Lucy all about Nassau and what a wonderful, beautiful city it was. And as difficult as it was for her, Lucy kept her promise. After a lull in the conversation where they simply sat and looked up at the Caribbean sky, Dan spoke up once again.\n\n\"This place here, this little cove on Highborn Cay, has today become my favorite place in the whole world,\" he said, pausing to take a puff from his cigar before continuing. \"I've been searching for a place to have my ashes scattered when the time comes, and I think this is the place. Right here, right in this cove at this very spot!\" he said, smiling.\n\nLucy looked over at him, thinking that she should say something, but anything she said would be breaking her promise to him, so she said nothing. Instead she got up and walked over to him, moved his hand with the cigar in it out of the way, and kissed him. Then she went back and sat down as before.\n\n\"Thank you, m'dear,\" he said softly, looking over at her and smiling.\n\n\"You're welcome,\" she replied, returning his smile.\n\nWhen they went to bed a little past midnight they made love with a gentle intensity that surprised and pleased both of them, eventually falling asleep in each other's arms.\n\n* * * * * *\n\nThe next morning Dan woke up before Lucy did, slipping out of the bunk gently without waking her. He slipped on his trunks and deck shoes, picked up his hat from its hook and plopped it on his head, then went up on deck to watch the morning sun. It was another clear, bright day in the Caribbean, the new sun shining low on the horizon as Dan walked up to the bow. He leaned back on the cabin roof instead of setting up a deck chair as he didn't want to wake Lucy with the noise it would make, and he didn't think he'd be there long enough anyway. He just needed a few moments to get his mind right, organize his thoughts, and build up his resolve for the rest of the trip.\n\nHe thought about the conversation on the beach yesterday, and just the recollection of it made his heart hurt. He was in love for the first and last time in his life, and he was afraid to tell that to Lucy. There was a difference between loving someone and being in love with them, and he was deeply in love with her. He was afraid that if he told her the true depths of his feelings for her she wouldn't leave, and he couldn't allow that to happen. As much as he was in love with her and as much as he wanted her to stay, he knew in his heart that the smart thing, the right thing, to do would be to let her go home to her husband and her life. He desperately wanted to spend the rest of his life with her, but he knew deep in his heart that it wouldn't be fair to her, and that he was doing the right thing.",
        "But that knowledge didn't make it hurt any less.\n\nHe was startled when Lucy's hand touched his shoulder, flinching just a bit at her soft touch. He turned his head to look as she snuggled up to him, sliding her arms around him and holding him close. He put his arm around her and held her to him, a smile on his face.\n\n\"Good morning, Cap'n Dan!\" she said softly, kissing him on the cheek.\n\n\"Good morning, Lucia,\" he replied, kissing the top of her head. \"I hope I didn't wake you.\"\n\n\"No, you didn't,\" Lucy replied, shaking her head. \"I had to get up to pee and saw you were gone. Are you okay?\" she asked, concerned. Dan smiled as he patted the back of her hand as it rested on his chest.\n\n\"I'm fine, Lucia, perfectly fine!\" he said, reassuringly. \"How can I be anything but with you at my side?\" he said, looking down at her. She looked up and smiled back, the love evident in her eyes.\n\n\"I love you, Cap'n Dan.\"\n\n\"And I love you, Lucia.\"\n\n\"How far away is Nassau?\"\n\n\"Not too far; we'll be there by late afternoon if we don't dally here too long.\"\n\n\"Then let's get this show on the road! I'm anxious to see Nassau!\"\n\n\"Aye-aye, Cap'n!\" he said, kissing the top of her head again.\n\nThey had a quick breakfast and then got the 'Tramp' under way, headed for Nassau. Lucy stood on the fantail behind Dan, looking behind them at the bay and the beach -- \"their\" beach -- as it faded into the distance. She'd had all night to think about it, and as much as she loved Dan and hated to admit it, he was right. She had to go home, and that's all there was to it. As much as it hurt and broke her heart, as much as she wanted to stay, she knew that she had to go home to her husband. The last thought she had before she turned away from their beach was that she was going to do just as Dan had said; she was going to go home and love her husband the way she loved Dan.\n\nAt least she was going to try.\n\nShe turned and walked over to Dan, slipping her arms through his arm and hugging it to her, and he turned to look at her as she did.\n\n\"Everything ok, Lucia?\" he asked, and she nodded as she replied.\n\n\"Just fine, Cap'n Dan, just fine!\" she said, looking up at him. \"How can I be anything but with you at my side?\" she said, throwing his own words back at him. He smiled, then kissed her on the top of her first mate's hat.\n\nThe trip to Nassau was pleasant and enjoyable, and even though it took most of the day it was still too short for both of them although neither of them said anything about it. They took turns at the wheel, Lucy wanting to pilot the boat as much as she could before the voyage was over, laying out in her usual place on the cabin roof when she wasn't at the wheel. They stopped for lunch as they usually did, and after lunch Dan was sitting on the bench behind the wheel drinking a Red Stripe when Lucy came up from below deck. She was naked as usual, having been that way for most of the morning, but as she walked towards Dan he saw the look in her eyes and chuckled.\n\n\"Uh-oh,\" he said, still chuckling as Lucy stood in front of him, a sinfully wicked look in her eyes and a half-smile on her face. \"I know that look!\" he said, looking up at her.\n\n\"Then give me what I want and you won't get hurt!\" she said, looking down at him with that half-smile still on her face as Dan laughed out loud at her words.\n\n\"Oh, hurt me, please, Lucia, hurt me!\" Dan replied, sitting back and throwing his arms wide while grinning up at her.\n\nTen minutes later he was still sitting on the bench, groaning with pleasure as Lucy sat on his lap, riding his hard cock and milking the cum from him.\n\n* * * * * *\n\nThey docked at Nassau late in the afternoon, tying the boat up to the moorings and then going ashore to find someplace to eat. After dinner they spent a few hours walking around the town and taking in the sights, then headed back to the boat for the night. Once on board they went into their usual routine of sitting out on the bow, with Dan setting up the chairs while Lucy went below to get the beers and his cigar. He was already sitting down when she came up to the bow, and he smiled at her as she handed him an already-opened beer and his cigar.\n\n\"Thank you, m'dear!\" he said, smiling up at her.\n\n\"You're welcome, Cap'n!\" she replied, sitting down in her chair and taking a swig from the beer. They sat in silence for a few minutes while Dan got his cigar going, then spent the time just looking out at the lights of Nassau in the distance. Dan spoke first.\n\n\"I love Nassau,\" he said, smiling. \"It's my favorite city in all of the Caribbean -- next to Kingston, that is!\"\n\n\"What's so special about Kingston?\" Lucy asked, looking over at him. Dan chuckled as he replied.\n\n\"Kingston is a real party town, Lucia! And even more so if you know the right people,\" he said, puffing on his cigar.\n\n\"And I assume you know the right people?\" she asked.\n\n\"Of course I do!\" he replied, chuckling and smiling. \"I wonder if the statute of limitations has run out yet?\" he mused, looking at her out of the corner of his eye as he rubbed his chin, teasing her. She thought he was serious until she caught him looking at her, then she broke out in laughter.\n\n\"You're terrible!\" she said, swatting him on his arm and making him laugh. They sat in silence for a few minutes after that, with Lucy being the next to speak.\n\n\"How long were you planning on us staying here, Cap'n?\" she asked, looking over at him. He looked back at her as he replied.\n\n\"As long as possible, m'dear,\" he replied, looking into her eyes. \"I figured we'd stay for a few days at least, and then take it from there.\"\n\n\"That sounds good to me!\" she said, smiling. She looked around the docks for a few minutes, then looked back at him with a sly look on her face.\n\n\"Think I can get away with sucking your cock right here and now?\" she asked, her voice low, her mouth turned up at one corner in an evil smile. Dan looked around before he answered.\n\n\"I think so, yes -- if you're fast, that is,\" he said, smiling at her. She got up from her chair and quickly moved in front of him, sitting down on her haunches as she untied his trunks. \"Besides, I've never had my dick sucked in Nassau before, so this will be a first!\"\n\n\"Why do I not believe that?\" she asked, grinning up at him. Before he could answer she had yanked down the front of his trunks and had his cock out, then leaned forward and sucked it into her mouth. Dan gasped when she did this; while he was expecting it, there was a force and a passion driving her tonight that was different from any other time she'd done that to him. Tonight was different, no doubt about it, and he was going to make sure he didn't do anything to ruin it.\n\nHer skills and the intensity she was showing tonight served to get him hard quickly, and before he knew it he was fully erect, his cock throbbing as she slid her soft, wet lips expertly up and down his shaft, taking nearly all of him in her mouth with every dip of her head. She did this for several enjoyable minutes, with Dan sitting there watching her head bob up and down as she worked on him, taking a look around every minute or so to make sure they weren't discovered. He'd never been kicked out of a port before and didn't want Nassau to be his first.\n\nAfter a few minutes of intense deep throating his cock she pulled her mouth up his shaft until half of it was in her mouth, then wrapped her hand around the bottom half near the base and squeezed it hard. She then began sucking on the first half of his cock like it was a big meat soda straw as she pumped the bottom of his shaft in her hand as she had done before. Dan knew by this that she wanted him to cum, and she knew that this would do the trick for him as she had done this before. She looked up at him briefly, smiling around his cock in her mouth, before looking back down and increasing the suction she was applying to his cock. Dan watched in amazement as her cheeks hollowed in from the force she was using, and he was surprised that her whole head didn't implode as well.\n\nIt didn't take long for her to bring Dan to the brink of orgasm, and he barley had time to utter a warning before his cock exploded in her mouth. She cried out in surprise around his cock in her mouth as the first geyser of cum came blasting out of his cock into her mouth and down her throat, and he was cumming so hard and fast that she was forced to either swallow or drown. So as much as she wanted to keep his cum in her mouth to show him and play with after he was finished cumming, she had no choice but to swallow it as quickly as she could. So she kept her lips clamped onto his cock and her hand gripping the bottom of his cock as he came, with Dan grimacing and gripping the arms of the chair in his hands so hard his knuckles were white.\n\nJust when both of them thought he'd never stop cumming the pumping of his cock in her mouth began to slow, gradually fading away and then stopping. Lucy kept her mouth clamped onto his cock, pumping it with her hand to get every last drop out of him, swallowing the little bit that was left. Then she released his cock from her mouth and hand, sitting back on her haunches with a smile on her face, looking up at him in triumph.\n\n\"Made you cum pretty hard, didn't I?\" she asked, grinning at him.\n\n\"You most certainly did!\" he replied, gasping for breath. \"You made me cum so hard I thought my brains were going to come out of the end of my dick!\" he said, making them both laugh. Lucy got up from the deck and sat down in her chair again, wiping her lips with her fingers and then sucking them clean. She picked up her beer and took a long swallow, then sat back and looked around the harbor.\n\n\"I could really get to love Nassau!\" she said, making Dan laugh.\n\n* * * * * *\n\nThey ended up staying in Nassau for a full week, with neither of them wanting to leave for the same reasons -- they were having too much fun, and neither of them wanted it to end.\n\nBut the time finally came when they had no choice. Lucy's vacation time was rapidly coming to an end, so they reluctantly left what was now Lucy's favorite Caribbean city as well as Dan's and headed for Andros. The trip took a full day thanks to Dan's roundabout course and an extended lunch break, during which they went below deck before fucking each other's brains out. Since they were in a well-traveled shipping lane having sex on deck out in the open like they were used to was a recipe for disaster, something that neither of them wanted, so they retired to Dan's cabin to satisfy their desires.\n\nThey entered Dan's home harbor a little after 4PM with Dan at the wheel and the boat running on its diesel engines so as not to create a wake. Lucy was in her usual place on the cabin roof, sitting cross-legged and fully clothed for the first time in nearly two months. She was a flurry of mixed emotions and was fighting desperately to control them, and for a moment she thought her emotions were going to win. Then she remembered the promise she made Cap'n Dan, and that was all she needed to get control of them.\n\n\"Hasn't changed a bit,\" she said over her shoulder to Dan.\n\n\"Never does. That's one of the reasons I like it so much,\" he replied.\n\nDan piloted the 'Tramp' to its assigned dock with the skill and ease of an expert seaman, Lucy having come down from the cabin roof and now standing at the bow with the tiedown line at the ready. When the boat nudged the dock she jumped off, quickly and expertly tying the bow line down as Dan did the same with the stern line. When they were done Lucy walked down the dock to the gangway at the stern and moved it into position as Dan unfastened the railing, moving it out of the way. Lucy walked up the gangway onto the boat, standing next to Dan and looking up at him.\n\nDan stood there and did nothing but look at her for a few moments, and he couldn't help but notice the changes in her. She was sporting a deep tan that he knew was going to be the envy of everyone she knew when she got home, she had lost a couple of pounds and her body had toned up, and her hair had lightened up just a bit. Her first mate's hat that was new at the beginning of their voyage was now faded from the sun and soiled from sweat and suntan oil, the bill just starting to fray around the edges.\n\nThe only thing that hadn't changed was her eyes. Her eyes were still deep and hypnotic, and they still made his heart skip a beat whenever she looked into his as she was doing now. She was saying something that he hadn't heard; he could see her mouth moving but wasn't hearing what she was saying. He snapped out of it when she reached out and touched him on the arm.\n\n\"Cap'n Dan, are you okay?\" she asked, concern showing in her eyes, her brow furrowed.\n\n\"Huh? Oh, yeah, I'm fine, m'dear, fine,\" he said, composing himself.\n\n\"Are you sure?\" she asked, still concerned. He smiled at her as he replied.\n\n\"Yes, Lucia, I'm sure,\" he said, holding her by her upper arms. \"But thank you for asking!\" he said, bending down and kissing her on the cheek.\n\n\"So what were you saying, m'dear?\" he asked.\n\n\"I was asking you if you wanted to get some dinner at a restaurant in town, or if you wanted to eat on the boat,\" she replied, looking up at him and still wondering if he was okay.\n\n\"I think I'd rather eat in town,\" he said, crossing his arms over his chest. \"As much as I love the 'Tramp,' every now and then it's good to get off of her and go ashore, see how the other half lives,\" he said. \"Besides, I know just the place where I want to take you on your last night in the Caribbean!\" he said, smiling down at her. \"It's not as fancy as the restaurants you have back home nor is it as fancy as where we ate the last night in Nassau, but for Andros it's pretty good!\"\n\n\"Anywhere you want to take me will be just fine with me, Cap'n Dan!\" she said, looking up into his eyes, her voice soft with a smile on her face. \"I'd go anywhere in the world with you, no questions asked!\"\n\n\"I know you would, m'dear,\" he replied, his voice soft. He reached out and ran his hand along her face, and she closed her eyes as he did, pushing her face lightly against his hand as it moved down her cheek. Then she took his hand in her and kissed it, planting the kiss on the back of his hand, looking up at him with those eyes again.\n\n\"Is it okay if I tell you that I love you?\" she asked. \"That won't be breaking my promise, will it?\"\n\n\"No, m'dear, it won't,\" he said, smiling at her.\n\n\"I love you, Cap'n Dan,\" she said, kissing the back of his hand again. He took her hands in his and lifted them up, lowering his head down to kiss the back of them.\n\n\"And I love you, Lucia,\" he said softly, a smile on his face.\n\n\"Should I dress for dinner?\" she asked, trying to lighten the mood before she broke out in tears.\n\n\"Yes, by all means, put on a clean t-shirt!\" he said, realizing what she was doing and joining in.\n\n\"You're terrible!\" she said, swatting him on his upper arm before turning to go below to wash up.\n\n* * * * * *\n\nThey had a ball at dinner, talking and laughing as if they had all the time in the world together instead of time that could be measured in mere hours. There was something that Dan knew he had to do; not that he wanted to, but he knew that he had to in order to make it easier for Lucy to leave the next morning. So as much as he didn't want to do it, when the time was right he asked about her husband.\n\n\"My husband?\" she said, her brows flying up in surprise.\n\n\"Yes, tell me about your husband,\" Dan repeated. \"I want to know something of him, what he's like, how the two of you met, things like that,\" he said.\n\n\"Well, I met him at a sorority mixer at my college year before last. His fraternity was the brother fraternity to my sorority, and each year they throw a mixer at the beginning of the first semester,\" she explained, smiling a bit at the memory of meeting him for the first time. It was working just as Dan had intended, and that made him happy.\n\n\"He wasn't much of a party person, kind of a wallflower actually, and I felt so bad at seeing him standing off to the side all by himself that I just had to go over and talk to him,\" she said, still smiling. \"We hit it off right away, and I even managed to bring him out of his shell before the night was over. When the mixer was over he asked me out on a date the following night, and I said yes.\"\n\n\"When did he ask you to marry him?\" Dan asked.\n\n\"February of this year,\" she replied. \"I wanted to wait until after we graduated to get married, but he wanted to do it as soon as possible. When I asked him why, what the big rush was, he told me that he wanted to hurry up and marry me before...\" she paused, a somber look crossing her face for a moment, before she smiled again and continued.\n\n\"Before someone came along and stole me away from him,\" she said, looking Dan in the eyes for a moment before speaking again.\n\n\"You're a crafty old sea dog, you know that?\" she said softly, smiling at him.\n\n\"So I've been told,\" Dan replied, smiling back. \"What's his name?\"\n\n\"Francis,\" she replied, a smirk crossing her lips, \"but he goes by Frank.\"\n\n\"I can certainly see why!\" Dan replied, sitting back and chuckling.\n\n\"You're terrible!\" she said, chuckling along with him for a few moments, then reaching out and taking his hands in hers as she looked him in the eyes once more.\n\n\"Let's go back to the boat, okay, Cap'n Dan?\" she asked, her eyes pleading with him.\n\n\"As you wish, m'dear!\" he replied, lifting her hands and kissing them again.\n\nThey walked back to the boat hand in hand like a couple of love-struck teenagers, and when they got on board the first thing they did was set up for their nightly ritual, Dan setting up the deck chairs with Lucy going below for the beers and cigar. When she came back up on deck, she had taken her t-shirt off and was wearing her bikini top instead, her well-worn first mate's hat on her head. Dan couldn't help but smile as she approached, putting his hands on his hips and grinning from ear to ear.\n\n\"Just because I'm leaving in the morning isn't any reason to stop doing what we've been doing every night for the past two months, now is it?\" she asked, standing in front of him with an opened beer in each hand and the cigar stuck down between her big breasts, secure in her cleavage. Dan plucked the cigar from her cleavage and smiled as he replied.\n\n\"Absolutely not!\" he said, sticking the cigar in his mouth and then taking one of the beers from her. Then they both sat down, and as soon as they did Lucy held her beer up to him to make a toast.\n\n\"Here's to swimmin' with bowlegged wimmin'!\" she said, making him laugh. He clinked his bottle to hers and then they both took a drink, sitting back in their chairs and relaxing. They spent the next two hours sitting in their deck chairs on the bow, talking about the voyage they had just completed, the things Dan had done when he was in the Navy, the things Lucy had done while she was in college, and everything in between. When they were finally approaching the 'talked out' stage, Lucy got up from her chair and walked over to stand in front of him, then dropping down to her knees.\n\n\"Lucy, not here! Not now, not here!\" he said, just about to panic. Lucy laughed out loud at him for a moment before she spoke.\n\n\"Relax, Cap'n Dan, it's not what you think!\" she said, reaching up and taking his hands in hers. \"I have a favor to ask of you, and I wanted to look you in the eyes when I asked it,\" she explained.\n\n\"What is it, Lucia?\" he asked, looking down at her.\n\n\"For tonight, our last night together, I want to be yours and only yours,\" she said, her eyes welling up with tears. \"I want you to make love to me like it's the first time and not the last, like we have the rest of our lives together instead of just this one night. Will you do this for me, Cap'n Dan? Will you let me be yours for this one last night? Please?\" she asked, fighting back the tears. He turned his hands over and took hers in his as he replied.",
        "\"Yes, Lucia, I will,\" he said, kissing the back of her hands again. She jumped up and threw her arms around his neck, hugging it tight. He put his arms around her and held her as close as he could.\n\n\"Thank you!\" she whispered in his ear, kissing him on the cheek before sitting back and looking into his eyes, smiling through her tears.\n\n\"Let's go below, shall we?\" Dan said softly. Lucy nodded at him, her smile growing bigger. Dan got up and then helped Lucy to her feet, leading her to the cabin door and then down the ladder.\n\nThe lovemaking that followed was the most intense, passionate, and loving that either of them had ever experienced before, and it lasted well into the night. When they finally fell asleep, spent and satisfied, they did so in each other's arms.\n\n* * * * * *\n\nDan was sitting on the bench on the fantail the next morning when Lucy came up from below deck, her backpack slung over one shoulder and wearing the same outfit she was wearing when she first arrived, only now she was wearing her first mate's hat as well. She had awakened before he did and slipped out of the bunk without waking him to shower and pack. Dan didn't wake up until he heard the shower running, and all he did was put on his trunks, his usual Hawaiian shirt, and his deck shoes before grabbing his captain's hat from its hook and putting it on before going on deck. She walked over to where he sat and stood in front of him, dropping the backpack on the deck.\n\n\"In your usual place, I see!\" she said, giving him the best smile she could muster despite what she was feeling in her heart. \"Kinda strange seeing you wearing a shirt while on deck after the past few months of seeing you running around without one.\"\n\n\"Not half as strange as seeing you on deck wearing anything at all, considering you've been naked on deck for the better part of two months,\" he replied, chuckling at her.\n\n\"You're terrible!\" she said, laughing.\n\n\"Got everything?\" he asked, nodding at the backpack. Lucy nodded as she replied.\n\n\"Yep, I'm all ready to go,\" she said, trying to keep her smile going but finding it harder to do with every passing moment. Dan got up and stood in front of her, holding her by her upper arms and looking into her eyes as he spoke.\n\n\"Lucia, I...\" he started, but Lucy cut him off.\n\n\"I kept my promise!\" she said, her voice strained and her smile wavering as the tears welled up in her eyes. \"I didn't think I could do it, but I did!\" Dan smiled at her as he replied.\n\n\"Yes, m'dear, you certainly did -- one of them, anyway,\" he said, looking into her eyes. \"And now it's time for you to keep the other one.\" Lucy nodded as she replied.\n\n\"I know, and I will,\" she said, looking into his eyes. \"I love you, Daniel!\"\n\n\"I love you, too, Lucia,\" he replied, his heart breaking. She threw her arms around his neck and hugged him as tightly as she could then, and he put his arms around her and held her just as tight. They stayed like that for several moments, then Lucy kissed him for the last time before stepping back.\n\n\"Let me walk you to the cab stand,\" he said, reaching down for her backpack.\n\n\"No, Cap'n Dan,\" she said, taking the backpack from him and putting her hand on his chest. \"When I leave I want to see you in the same place as when I first arrived, right here on the 'Sea Tramp,' she said.\n\n\"Are you sure, Lucia?\" he asked, and Lucy nodded as she replied.\n\n\"Yes, I'm sure,\" she said. She hoisted her backpack onto one shoulder and then turned to walk towards the gangplank. She stopped at the gangplank and turned back to him again as she spoke.\n\n\"Thank you, Cap'n Dan,\" she said, smiling, \"for everything.\"\n\n\"No, m'dear, thank you,\" he replied, returning her smile. \"Fair winds and following seas, Lucia,\" he said, tossing her a casual salute.\n\n\"Fair winds and following seas, Cap'n Dan!\" she replied, returning his casual salute, then turning to walk down the gangway, across the dock, and down the street out of view. Dan stood there and watched her go, knowing that he was watching the best thing that ever happened to him walk out of his life forever.\n\n\"I love you, my darling Lucia!\" he said softly to himself, a single tear running down his cheek. He wiped it away with the back of his hand, adjusted his hat on his head, then set about cleaning up the boat after their long journey.\n\nThe tears flowed freely down Lucy's cheeks as she walked away, and it was all she could do to keep from turning around and running back to Dan and the 'Sea Tramp.' But Dan was right and she knew it, and she was determined to keep her promise to him. It was the least she could do for him; in fact, it was the only thing she could do for him. So she set her mind to keeping her promise, focusing on her husband who was waiting for her at home, determined to live her life with him to its fullest as she had promised she would.\n\nBut she would always remember those two fantastic months in the Caribbean with her Cap'n Dan, and she would always love him.\n\nEpilogue\n\nLucy stood at the end of the dock in the bright Caribbean sun, watching the 'Sea Tramp' rock gently at its mooring. The boat looked exactly as she remembered it when she saw it for the first time in the same place 25 years ago, with nothing being different except for the large display of flowers and wreaths on either side of the gangway. She stood and looked at the sailboat for several long moments, her mind racing back to those two wonderful months she spent sailing around the Caribbean with her Uncle Dan -- or Cap'n Dan, as the locals called him and as she came to call and remember him as well. She wore her old, faded first mate's hat to shade her eyes from the sun as she stood there, her backpack slung over one shoulder. She was brought out of her reverie by the dockmaster when he spoke to her, having been so caught up in her memories that she never heard him approach.\n\n\"Did you know Cap'n Dan, miss?\" he asked, his voice soft and gentle.\n\n\"Yes, I did. He was my uncle; I'm his niece, Lucy,\" she replied, looking at him and smiling. The man's face broke out into a big smile, his eyebrows going up in surprise.\n\n\"Ah, you are Cap'n Dan's Lucia!\" he said, grinning from ear to ear. \"A great pleasure to finally meet you!\" he said, reaching out and shaking her hand. \"He spoke of you many times, so many times indeed! And you are just as beautiful as he said you were, if I may say so!\" he said.\n\n\"Thank you, you're very kind,\" she replied, looking back at the boat. He reached up and took his hat from his head, holding it with both hands as he continued.\n\n\"His passing was a great shock and a terrible loss to all of us here,\" he said, looking over at the wreaths at the bottom of the gangplank. \"Cap'n Dan was a great man who did many good things for our little town, and we loved him very much,\" he said, his voice solemn and somber. \"But not as much as he loved you, I think,\" he said, looking over at her.\n\n\"How do you mean?\" she asked.\n\n\"Every night he would sit in a deck chair on the bow of his boat, drinking his Red Stripe beer and smoking one of his Cuban cigars, always with a second chair next to him,\" he continued, and Lucy felt her eyes start to well up with tears. \"I asked him about it one day, and he told me that the second chair was for you, his Lucia, and that he always sat on the bow with his Lucia at the end of every day. And he always did, every day at the end of the day, right up until the day he...right up until the end.\" The dockmaster stopped for a moment, then turned to look at Lucy.\n\n\"He loved you very much,\" he said, still holding his hat in his hands. \"I've never known a man to love a woman as much and as deeply as he loved you.\"\n\n\"I loved him just as much,\" she replied, a single tear running down her cheek. \"I still do,\" she said, wiping the tear away with the back of her hand.\n\n\"How long will you be staying with us, Lucia? May I call you 'Lucia?' Is that okay?\" he asked, and Lucy smiled when she turned to look at him.\n\n\"Yes, that's fine, thank you,\" she said. \"And I'll be staying here permanently. I'm taking up residence here and will be living on board the 'Sea Tramp,' \" she said, looking back at the boat.\n\n\"Then please allow me to extend to you the same courtesy that I extended to your uncle,\" he said, taking her by surprise. \"You may dock here free of charge for as long as you wish.\"\n\n\"No, thank you, but I couldn't do that, it's not fair to you,\" she replied, looking back at him.\n\n\"It is the least I can do for Cap'n Dan and the woman he loved so very much,\" the dockmaster said, bowing slightly. \"Please allow me to honor him, the things he did for us, and his love for you in this way,\" he asked. Lucy smiled as she replied through watery eyes.\n\n\"Of course. Thank you!\" she said, her voice soft. The dockmaster reached out and took her by the hand, then lifted it up and kissed the back of it.\n\n\"Welcome home, Lucia!\" he said softly, smiling. Then he turned and left, putting his hat back on his head. She turned and looked at the boat for another moment, then took a deep breath and walked up the gangplank, setting foot on the deck of the 'Sea Tramp' for the first time in 25 years.\n\nShe stopped and looked around, the memories flooding back to her in a rush. She looked at the spot on the cabin roof where she had spent so many days laying naked out in the sun with Dan admiring her from his place at the wheel, then looked at the wheel and remembered the day he surprised her and took her from behind as she piloted the boat. 'Just steer the boat,' she remembered, the memory making her smile with the smile getting a bit bigger when she remembered how she had surprised him in the same place a few days later.\n\nShe walked up to the bow to see where they had spent so many wonderful nights sitting in their deck chairs, looking down and seeing four worn spots in a square pattern on the deck and realizing they were made by Dan sitting in his deck chair in the same spot for 25 years. There were four spots for her own chair as well, but they were much, much lighter. They were barely visible in fact, because there had been no weight on the chair after Dan set it up.\n\nThen she went below deck to the main cabin, stopping at the foot of the ladder and seeing the old, faded Polaroid picture that the young boy had taken of them at their first stop on the voyage still tacked to the small bulletin board, right where she had put it so long ago. She looked at it for a moment, looking at Dan's face in the picture, then turned towards the main cabin and the small table where they had shared so many meals together.\n\nSitting in the middle of the table right where Dan's attorney had said it would be was a black box about nine inches high and four or five inches around, and Lucy knew that inside the box was an urn that contained Dan's ashes. Lying on the table in front of the box was an envelope with \"Lucia\" written on it, and she recognized the handwriting as Dan's. She picked up the letter and opened it, her eyes filling with tears at what she read.\n\n\"My Dear Lucia,\n\nIf you are reading this, then I have embarked upon my final journey to that undiscovered country from whose bourne no traveler ever returns, as we all must eventually do. \n\nDo not mourn for me, Lucia, for I have lived a wonderful and fulfilling life, a life that was made even more wonderful and fulfilling the day you first set foot on the deck of the 'Tramp.' That began the period of true happiness in my life, and although we have been apart these many years I have carried the memories of that journey and my love for you and all you did for me in my heart ever since. You taught me the real meaning of true love, and for that I will be eternally grateful. Rather than mourn I want you to celebrate the brief time you and I had together and the love we shared, both during the journey and after.\n\nI never told you this because I was afraid it would make it harder for you to leave than it already was, but I lied to you when I told you that the reason for God keeping me alive after my accident hadn't revealed itself to me yet. \n\nYou were the reason, Lucia. God let me live so he could send you to me to show me what life and true love was all about. I knew that from the moment you first came on board. You were the best thing to ever happen to me, and I love you so very much!\n\nThe 'Sea Tramp' is now yours, along with the rest of my belongings and fortune as my attorney has already told you. I have taken great care to preserve her just as she was the day you first set foot on her deck, and I trust you to do the same. She's an old vessel with a lot of ocean having passed beneath her keel, but the sweet and pleasant memories she holds within her cabins and on her decks make her more precious to me than any treasure a sailor could ever hope to find. I know you will treasure her and those memories as I have these many years.\n\nI have but one final request, and that is that you take one last voyage with me to scatter my ashes on the ocean from the deck of the 'Tramp.' You already know where.\n\nI love you, my darling Lucia, with a passion that no man on earth or any God above could match. I have always loved you, and I always will. Thank you for coming into my life and loving me as you did.\n\nTake good care of the 'Sea Tramp,' Captain Lucia. \n\nI love you.\n\nDaniel\"\n\n\"I kept my promises, Cap'n Dan!\" she said out loud, the tears running down her face to drop on the letter, her shoulders shaking as she cried uncontrollably. \"I kept my promises just as you asked, but I never stopped loving you! I've always loved you, every minute of every day since, and I'll always love you!\" she said, looking at the box on the table.\n\nAnd indeed she had. She had gone home to her husband Frank, and the two of them had led a very happy life together. They had two children, a boy and a girl, who were now both grown and living on their own. While they were raising their family they had bought a small one-masted sailboat, and Lucy had taught all of them to sail. This not only let her share her passion with them but allowed her to maintain the skills she had learned while on her trip with Dan. Frank was unexpectedly killed in an automobile accident two years ago and Lucy had been living on her own since then, refusing offers from both of her children to come live with them. She knew that the day would come when she would leave her home and return to the Caribbean for good, and she wanted as few entanglements as possible when that day finally came.\n\nShe stood for a few moments more, letting her emotions run their course, and when she was finally able to stop crying and compose herself somewhat, she put the letter and the envelope down on the table, then turned and walked towards the captain's cabin, her cheeks wet with her tears. She stepped inside and stopped, looking around the cabin, and saw Dan's weathered, well-worn captain's hat hanging from its hook. She walked over and looked at the hat, smiling, then gently took it from its hook and walked over to the bunk. She turned and sat down, looking at the hat in her hands for a moment.\n\n\"I love you, Cap'n Dan!\" she whispered. Then she held the hat to her chest with both hands and cried softly.\n\n* * * * * *\n\nWhen she went into town later that afternoon to pick up the supplies she would need for the voyage she was about to take she discovered that the news of her arrival had spread through the town like wildfire. Everyone greeted her everywhere she went, and the shop owner where she went to get her supplies refused to let her pay. The owner of the restaurant where she ate dinner later that night also refused to let her pay, telling her the same thing that the shop owner had said -- her money was no good there for as long as she lived. The people of the town had great respect for Cap'n Dan and loved him very much, and this was their way of showing it.\n\nAs the sun was setting that afternoon Lucy went into the wheelhouse and got the two deck chairs, setting them up in the usual place on the bow. She could easily tell which was hers and which was Dan's, as the chair Dan had been using for the past 25 years showed considerably more wear than hers, which showed the same amount as it had the last time she had sat in it. She set Dan's chair up on his marks on the deck, then set hers up next to it. She went below and got a Red Stripe beer, then came back up on deck and sat down in her chair, her first mate's hat on her head. She looked over at Dan's empty chair, then held her bottle up in that direction.\n\n\"Here's to swimmin' with bowlegged wimmin,\" she said softly, fighting the urge to cry. She placed the bottle to her lips and took a long pull, a single tear running down her cheek. She sat there in her deck chair on the bow of the 'Sea Tramp' and watched the Caribbean sun set over the island, staying there until well into the night. Finally she got up, folded up the chairs and stowed them in the wheelhouse, then went below deck to the captain's cabin -- her cabin now -- to get some sleep.\n\nOnce in the cabin she went over to her backpack lying on the deck next to the bunk, reached inside, and took out a small photo album. She had kept only two secrets from her husband during their marriage, her love for Dan and the events of the voyage being one, and this photo album being the other. She had kept it in a safe deposit box for the past 25 years, visiting the bank occasionally and opening the album to look at the pictures inside as she was about to do now.\n\nShe sat down on the bunk and opened the album, looking at the pictures she had taken during that voyage and turning the pages slowly. Each picture brought back a memory, and each memory made her smile. When she got to the last picture on the last page her eyes welled up with tears as they always did whenever she looked at this particular picture.\n\nThe picture showed Dan from the waist up, his chest bare, captain's hat on his head as he stood at the wheel of the 'Sea Tramp,' looking ahead as he concentrated on steering the boat. It was her favorite picture of him, and it always made her cry. She kissed her fingertips and then pressed them to the picture as she always did, smiling.\n\nThen she closed the album, put it back in her backpack, lay down on the bunk and went to sleep, dreaming of Dan and a summer long ago.\n\n* * * * * *\n\nShe was up with the sun the following morning, eager to start out on her voyage. She came up from below deck wearing a black bikini with a pair of cutoff jeans over the bottoms with no shirt covering the bikini top, and every man in view took note of her. At 47 she was just as beautiful and just as stunning as she was at 22, something of which she had worked hard at and was justifiably proud. Dan's old captain's hat was perched on her head, a piece of rolled up paper towel stuffed into the back of the sweatband to make it fit. She set about getting the boat ready, the dockmaster walking up to the bow as she coiled a line on the deck. She was bent over and had her back to him as he approached.\n\n\"Good morning, Lucia!\" he said. Lucy stood up and turned around, and when the dockmaster saw the hat on her head he corrected himself. \"Excuse me, good morning, Captain Lucia!\" he said, laughing and touching the bill of his own hat in salute.\n\n\"Good morning!\" she replied, smiling down at him, resting her hands on her hips.\n\n\"Where are you headed to, Captain?\" he asked.",
        "\"Highborn Cay,\" she replied, \"There's something I have to do there, a last request from an old friend and shipmate,\" she finished. The dockmaster had been in the Caribbean long enough to know there was a time to stop asking questions about what someone was doing, and he recognized this as one of those times.\n\n\"It's a long voyage, about a three day's sail,\" he said, looking up at her. \"Will you be okay making it on your own?\" he asked, concerned. She smiled as she replied.\n\n\"I'll be fine! I had a good teacher, the best sailor in the Caribbean!\" she said. \"And would you do me a favor while I'm gone, please?\" she asked.\n\n\"Anything you want, Captain Lucia!\" he replied.\n\n\"Would you have those flowers taken over to the hospital and given to the children in the children's ward, please?\" she asked, \"I just hate to see them go to waste!\"\n\n\"I'll have the mourning ribbons removed and the flowers taken to the hospital this very day!\" he said, smiling up at her.\n\n\"Thank you so much!\" she replied, returning his smile. The dockmaster nodded as he replied, touching his cap in salute.\n\n\"Fair winds and following seas, Captain Lucia!\" he said, smiling at her. \"I'll see you when you return!\"\n\n\"Thank you!\" she replied, touching the bill of her hat in return.\n\nAn hour later she was at the wheel of the 'Tramp,' the boat under full sail and making way. She reached up and pulled Dan's hat down a little further on her head, her hair flying out behind it in the wind as she headed for her destination of Highborn Cay and the little cove containing 'their' beach where she would carry out Dan's last request of her.\n\nIt took nearly all of three days to make the trip, but early in the afternoon of the third day she arrived at her destination. She dropped anchor in the same area where they had before, stopping to look at the cove and the beach for a few moments. Then she went below and got the urn containing Dan's ashes and returned to the bow, holding his urn to her chest with her arms wrapped around it. She stood there for several minutes, looking at the beach with the urn clutched close to her body, lost in the memories of that summer so long ago and of the man she loved so much as a soft breeze blew around her. The tears came then; as hard as she had been trying to stop them, they came anyway. She cried softly, clutching the urn tightly as the tears ran down her face.\n\nThen the breeze stopped, and both the air and the surface of the water became calm. She stopped crying and looked around, a look of amazement on her face at the sudden becalming that had just taken place. Then she heard a voice in her head -- Dan's voice -- speaking to her. The voice was just as clear as if he was standing right next to her.\n\n'It's time, Lucia.'\n\nShe smiled a big smile, a smile of love and relief at hearing his voice again even if only in her head, nodding as she wiped her eyes with one hand.\n\n\"Aye-aye, Cap'n!\" she said, opening the urn and removing the lid. She put the lid down on the deck and then went over to the railing, holding the urn out over the side and pouring Dan's ashes out onto the water. As soon as the last bit had landed on the surface of the water the breeze kicked back up and the water began moving again, the wind and the tide carrying his ashes off into the distance in the direction of the beach.\n\n\"Fair winds and following seas, Cap'n Dan,\" she said softly, clutching the now-empty urn to her chest once again, a smile on her face. \"I love you!\"\n\nThen she picked the lid up from the deck and took the urn back down to the cabin. As she went to climb the ladder to go back up on deck, she stopped for a moment to look at the faded Polaroid picture once more. She smiled at the image there then continued up, raising sail and getting under way again to begin the voyage back to her new home. She stood at the wheel, steering the boat as it glided through the water, her hair flying from beneath Dan's captain's hat perched on her head, a smile on her face.\n\nFini.\n\n \n"
    ],
    "authorname": "Original_Aramis",
    "tags": [
        "bj",
        "blowjob",
        "cumming",
        "dan",
        "lucy",
        "orgasm",
        "sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/sea-tramp-summer-pt-06"
}