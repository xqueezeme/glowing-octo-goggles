{
    "title": "The Pandora Effect Ch. 08",
    "pages": [
        "Thank you to the women that helped guide my progression from fledgling author to; he's got potential: Dawn, Nulli, Mistress of the shadows, Jaz Cullen, and MizT, thank you for the lessons. Who would have thought a few years ago I'd end up like this. To the fans that have followed my stories, thank you, your support is overwhelming, and I'm truly humbled by it. With all my hopes, enjoy the conclusion of 'The Pandora Effect'.\n\nVictorian Seaways, an hour and thirty minutes out from Ramsgate, United Kingdom.\n\nThe first class lounge was spacious, with various pieces of nautical artwork adorning the mahogany covered walls. The ambience of the soft lights was overpowered as the bright sunshine streamed in from the pair of large glass windows on either side of the bar. Two dapper servers tended to the small group of passengers that surrounded the waist-high bar. When the commuters had their drinks, the taller of the two bartenders grabbed a silver serving tray, and headed out to wait on the seated guests.\n\nHis first stop was a corner table, placed next to one of the large glass panes where an older couple rested, holding hands, and staring out the thick glass window towards the calm English Channel. The server took the couples' order as the once ebony haired woman laid her head against her husband's thin shoulder. Her silver highlights made her look even more majestic as the two shared a special moment between them. The server smiled to himself at the romantic intimacy the husband and wife shared, oblivious to presence of the other passengers around them.\n\nAs the well-groomed server weaved through the tables with practiced ease, he stopped to pick up a discarded napkin off the royal blue carpet. Something caught his eye and he glanced over at the passengers' shoes that occupied one of the tables located along the port wall. They all wore some type of military style boots, and he chuckled to himself at the lack of fashion exhibited by the gruff trio.\n\n\"Would you gentlemen care for anything from the bar? We have a fine selection of...\" the courteous server tried to ask.\n\nA muscular looking man with his back to the wall indicated for him to leave with a quick gesture of his hand. The other two brawny men remained silent, as they stared out at the other passengers with cold forbidding eyes. When no indication was given that his presence was needed, the server shrugged his shoulders and walked off with unhurried steps.\n\n\"It figures -- no fashion sense, OR manners,\" he thought as he carried out his duties.\n\nHis last stop was at the very end of the lounge, near one of the thick oak doors. A young looking man dressed in jeans and a hooded sweatshirt sat back against the plush red cushions while he read a fishing magazine.\n\nFrom his vantage point above the small table, the server could see the inside of the ceramic mug placed on the table. A small trace of coffee was all that remained, which made him wonder why someone so young would be drinking coffee. The college students that frequented the ferry preferred to drink water, or on occasion, one of the upper shelf liquors.\n\nThe server cleared his throat to get the young man's attention. \"Excuse me Sir, would you like anything from the bar? We have a fine selection of wine, or perhaps something stronger?\"\n\nRandy Cross looked up from his magazine, as he smiled at the thought of having a mixed drink. He placed the magazine down next to him and grabbed the almost empty mug. As he held it up, his smile became bigger. His small dimples made the Navy SEAL Chief seem even more youthful.\n\n\"Just some coffee, black with two sugars if you would Sir,\" Randy requested with an air of politeness. \n\nThe SEAL watched the server place the mug on the tray, and with an acknowledging gesture of his head, return towards the bar to fill his orders. Randy stole a few moments to look over at one of the tables against the wall. It was the same table he had been monitoring since entering the upper most lounge area where three sturdy looking men, dressed in all black, rested during the crossing.\n\nShifting in his seat, he pretended to get comfortable as he glanced towards the other side of the lounge where another husband and wife sat waiting for the crossing to end. The small SEAL did not have to worry about monitoring that particular couple; someone else in the room was shadowing them.\n\nRandy stretched his legs out and sighed with genuine boredom as he retrieved the dreary magazine. After flipping the page, he checked his watch then went back to reading.\n\n\"Thank God, only about an hour left of reading about fucking lures, and bass,\" he thought as he looked over the top of his Field and Stream towards his charges.\n\n**********\n\nFrederick Konr scanned the room, his attention snared by the nervous glances toward the exit from one of his colleagues. He wasn't sure if the other man was sensing danger, or if the pressure of their current assignment was just getting to him. After four years of doing various missions with the anxious mercenary, he'd learned to recognize when he was becoming nervous; he'd also learned to place faith in the other man's sixth sense. \"Karl, is there something bothering you? It can't be the security; so far, it's been nonexistent.\"\n\n\"I can't quite place my finger on it Fredrick, but that kid in the corner over there keeps monitoring us.\" Karl shifted in his seat with a nervous edge as his blue eyes tightened at the young man's intrusive behavior. He had been studying human body language long enough to know when he was being watched. He found it peculiar that he would take note of their table and disregard the rest of the passengers.\n\n\"See for yourself Fredrick, every so often, he'll peek over the top of that magazine. I think he's shadowing us and it's putting me on edge. He's been doing it since he arrived, which leads me to believe he might be someone we might have to dispose of before leaving,\" Karl said to the team leader with a hint of unease in his voice.\n\nFredrick shifted his vision with a practiced calm and took a slow glance towards the end of the lounge. There in the corner, he saw a bored young man who was small in stature wearing a floppy hooded sweatshirt and jeans turn the page of a magazine and glance over at them for a few seconds before continuing to read.\n\nFredrick chuckled in amusement at the so-called operative. \"What, you think that college kid is some kind of military spy or something? He doesn't look old enough to buy a beer, let alone have a strong enough build to be part of any Special Forces unit. If I was going to peg anyone as military here, it would be the older guy over on the other side of the lounge. Look at his short hair, muscular frame, tanned face; that guy knows how to handle himself. Why don't you take over for Hans down at the cars, I'm sure he could use a break.\"\n\nKarl stood up and ran his fingers through his shoulder length blond hair, then moved towards the same exit door the young man sat near. As he progressed, he scanned the other passengers and then stood next to the person who was making him nervous. He rotated his head until his eyes stopped on his intended target.\n\nRandy knew he had the ability to kill the hired gun with ease if it came to it. His instinct however was tempered by his team leader's orders: let them all have safe passage. He needed to think of a ruse to throw the dangerous man off his tail, and he needed to do it before the situation became unstable.\n\nAs the young Navy SEAL locked eyes with the tense mercenary, he gave the blond man a suggestive wink of his eye, then ran his pink, wet tongue across his upper lip with a hint of seduction. Giving a quick nod of his head toward the door, Randy indicated to him his intentions to follow him out into the passageway.\n\nKarl watched the young man's display of affection with the sudden realization that his monitoring of them was nothing more than sexual curiosity. His callous stare remained, but now it was due to the disgust of such a proposition towards him. He felt the bile begin to rise as the young man stared back with a wanton smile. \"You fucking sick little degenerate bastard. I don't fuck other men.\"\n\nRandy leaned towards the merc, as his youthful smile changed into pout. \"Now that is a pity, you hunk of a man. From the way you kept staring at me with those dreamy blue eyes of yours, I thought you might have been trying to get some -- alone -- time with me,\" he whispered. The mercenary didn't say another word as he stormed out through the doors; leaving the SEAL far away behind.\n\nToward the front of the lounge, Fredrick monitored the small exchange between the two men. He tried hard not to laugh aloud as he witnessed the homosexual advances toward his teammate. He made a mental note to mention it in future conversations after the mission was over. He was never one to let a good jab go to waste.\n\nThere was one other person in the luxurious lounge who also witnessed the tense moment by the exit door, Bob Holiday. The veteran SEAL picked up his own coffee mug and took a small sip of the hot bitter liquid. He returned the drink to the table and placed it just in front of him. Bob checked his thick dive watch, then leaned his head back, pretending to sleep as he thought of his fellow SEAL. \"You need to get some professional help soon, Randy.\"\n\nFerry terminal, Ramsgate, United Kingdom.\n\nAdam Dawson, and Jake Patrick, stood next to Garret Brown in the center of the driving lanes. The evacuated terminal area seemed like a ghost town, and an eerie silence hung heavy in the air. The main architect of the upcoming ambush studied the final touches with a trained tactical eye. Adam played the possible scenarios out in his mind again as he scanned the narrow space the SEALs had engineered for the arrival of their guests.\n\nFor the past two hours, the men positioned cars and equipment in the open area, creating an effective bottleneck that led to either a row of concrete lane dividers and the exit gate, or a large warehouse with a single loading dock. Regardless of which path the enemy took, the BMW's would run head on into an inescapable and blistering SEAL ambush. With just a mere seventy-five yards of area to maneuver in, it would take some skillful actions to escape the trap.\n\nJack Patrick looked outside the perimeter fence line to the nearby houses and apartment buildings, with lingering doubts about civilian casualties if something should happen with the virus. He knew from experience, terrorists often failed to demonstrate the politically correct actions when it came to executing carnage. \"Garrett, are we sure about that housing complex over there?\"\n\nDirector Garrett Brown slapped the SEAL Lieutenant on the back and smiled. \"My guys and the local cops evacuated everyone within a two mile radius. The only people around are the good guys Jack.\"\n\nAdam looked out towards the channel with an anxious expression. \"I'm almost positive that won't be the case soon. V-man, do you have anything?\"\n\nDan Vasquez lay prone in his selected position high atop the large water tower with a maintenance catwalk around the entire gleaming, white dome. From his vantage point behind the access ladder's safety cage, he had a clear line of fire almost straight down the exit lane. At the distance Adam expected him to engage his target, it would be sheer seconds before the back of the driver's head opened up to the outside air.\n\nWhen he heard the call come in from his team leader, he adjusted the dial on the high-powered binoculars and waited for the Victorian Seaways to come into focus. With the modern look of the ferry, he recognized his three friends on board were more comfortable than he was for the moment.\n\n\"I've got them Boss. Man that sucker sure can move, and judging from her speed, we'll be knee deep in terrorists in just under an hour, maybe less,\" V-man muttered with a hint of pleasure.\n\n\"Copy that V-man. Wolfie, any problems from your view?\" Adam asked as he looked towards a tall reddish tower.\n\nLocated discreetly behind a large sign on the viewing rail of the Port Master's station, Mark Wolfhorst scrutinized the housing area through his high-powered scope. With practiced ease, he moved the muzzle of his M-82A1 .50 caliber sniper rifle past the front gate and across the ferry terminal.\n\nHe had a perfect view of Jake Newton as he leaned back against the cinder block wall of a small building. He lifted his eye off the scope and took a rapid look around. \"That's a negative Sir. The local police are keeping their distance, and Mr. Brown's associates are positioned at the front gate. Looks like the area will be quiet until we're done.\"\n\n\"Sounds good. Let's just hope we can do this with minimal force and destruction,\" Adam radioed back.\n\nLieutenant Patrick placed his hand on Adam's shoulder and leaned into him. \"Hell Adam, I'd be happy if they just drove up and surrendered, but what kind of fun would that be right?\"\n\n\"I don't think our dear friend Bashir Haddad will want to give up quietly,\" Adam replied with a small hint of apprehension.\n\n\"Oh well, it's his funeral buddy.\" Jack tapped his friend's shoulder a few times, then went to join the other two members of Bravo in the staging area.\n\nAdam and Garrett continued to stand out in the open area looking into a bright sky and calm channel, in trepidation of the calm before the storm. Adam questioned himself again about the location of the ambush. Given the information on the party crashers, it made sense they were hired mercenaries with orders to escort the terrorists into Heathrow.\n\nThe idea of taking out four hired guns didn't worry the Navy SEAL, what did bother him was that mercenaries were as unpredictable as the weather. Adam checked his watch one more time, and then headed towards his own position behind one of the parked cars as Garrett went to the front gate one last time before joining Jake.\n\n\"Everyone check your hide, and make sure you have your masks handy,\" Adam said. \"If this goes south, I don't want to have to shoot a bunch of zombies.\"\n\n**********\n\nHospital Corpsman Bill Haley leaned against the rail and watched as the channel water churned with the tremendous force of the large propellers beneath them. His mind drifted back to a time of deploying on great Navy vessels, ships that became small cities on a vast blue ocean. The amount of sheer power a few steel blades could produce, never failed to impress him. He stretched his large powerful arms over his head, and turned around to peer down the vehicle bay.\n\nThe replacement guard for the two BMWs remained where he was, leaning against the wall near the black sedans. Bill thought at first that the blond haired merc might have a touch of hysteria. Every time he would walk to the bow to stretch his legs, the SEAL medic overheard the blond haired man talking to himself.\n\nWhen Bill noticed the mercenary walking towards him, he tensed in anticipation of possible hostility. \"Now what the fuck is his problem? I wish I could just kill this guy and put him out of his misery.\"\n\nBill checked his watch and then sighed as he slumped against the rail in a nonthreatening posture. He thought if he seemed bored, the merc would just leave him alone. He shifted his eyes towards the side of the ferry as the guard approached him and pulled out a pack of cigarettes.\n\n\"Hey, you got a light?\" His tone indicated he was irritated about something, and Bill braced himself to react with deadly force.\n\nThe SEAL reached into his pocket and pulled out a plain silver Zippo and stroked the serrated wheel against the flint. As the flame danced around in the light breeze, the aggravated guard placed the end of the cigarette in his mouth and inhaled deeply. As he blew the smoke out, he looked at the burly medic.\n\n\"Thanks.\" The hired gun walked away and once again started mumbling to himself. \"Little son of bitch. Do I look like I date men? Why would that little prick think I would want to do something like that? Women find me...\"\n\nBill shook his head. \"If this is the talent of the mercenaries we gotta take down, this is gonna be a cake walk.\" He was jolted out of his thoughts of an easy take down as the public address system came on line with a striking female voice.\n\n\"May I have your attention please? The Victorian Seaways will be making her final approach to Ramsgate soon. The Captain has requested that passengers please return to their vehicles, and would like to remind everyone to leave your engine off until the debarking ramp is in place. Thank you for sailing with Victorian Seaways, and we hope you have a pleasant day in the United Kingdom.\"\n\n**********\n\nBob watched his fellow SEAL get up and move in behind an elderly couple as they made their way out into the passageway. He stood and stretched as he rolled his head in small circles, then made his way towards the bar. When he came upon Bashir Haddad, he stepped aside with a courteous smile and allowed him to pass with his wife.\n\nWhen he reached the bar, the proficient SEAL ordered a bottle of water and turned to watch the two terrorists who were in control of the world's deadliest virus exit the lounge. As they walked out the door, they were flanked by three muscular men dressed in black who Bob knew would never see another sunrise.\n\nSenior Chief Holiday picked up his water and tossed a few bills on the bar. With a relaxed stride, he made his way towards the exit of the lounge. Pulling the thick oak door open, he stepped out into the hallway with just a single thought on his mind.\n\n\"And so it begins.\"\n\n**********\n\nBill monitored the unsuspecting civilians as they made their way to their cars. When he saw his team Chief, Randy Cross, enter the bay, he began an unhurried stroll not far behind him towards their sedan. Just as he passed one of the steel doors leading topside, Bob exited and followed him onward. When the two reached the vehicle, Bob moved into the driver's seat as Bravo's beefy medic slid in beside him.\n\n\"When we reach the ramp, I'm gonna jam the car sideways and block the exit. I can't do anything about the civilians in front of us, so let's hope the team allows them to pass before opening up on the bad guys,\" Bob said to his small team.\n\nBill saw the thin ebony semi driver get out and check his vehicle over. Since leaving the port of Oostende, Belgium, the driver never exited his vehicle. The medic figured he was like every other truck driver, sleep when you can. He narrowed his eyes, as a cold chill engulfed his rugged frame. \"You guys notice anything different about our truck driver Abdul up there?\"\n\n\"I'm not sure I follow you Bill, what do you mean?\" Bob said in a hushed tone.\n\n\"I could be just losing my mind, but wasn't he wearing sandals back in Belgium?\"\n\nBob glanced at the driver's shoes. \"Well fuck me with a flagpole. Those aren't steel toed work boots; they're the same top of the line combat boots the guys in the lounge had on.\"\n\nHoliday watched as the driver made eye contact with one of the mercenaries standing by the driver's door and gave him an affirmation of his head. He tapped his fingers on the steering wheel as he contemplated the unsuspected twist in the upcoming assault.\n\n\"Gentlemen, you know you're getting too old for this shit when assholes like this get on your last nerve. Randy, don't make a big show of it because we still have civilians walking around, but you better let Alpha know about the truck. After that, I guess you better pull out the hardware, this is gonna go thermal in a hurry.\"\n\n**********\n\nAdam heard the squeal of the Sat-Com radio and reached over between himself and Carl Werner. He held the handset to his ear and listened for a brief moment, then lowered his head in frustration as the news of the truck came over the airwaves. \"Oak leaf copies all. You three watch your six -- out.\"",
        "He tossed the handset down roughly and pushed his throat mike. Adam turned his face so Carl wouldn't see the snarl as the irritation rose within him. \"Listen up everyone, change of plans. It seems the fucking tangos' brought more help than expected. Wolfie, I was trying to keep this whole thing down to a low roar, but we're going to have a truck full of unwanted quests real soon.\"\n\n\"The wolf man copies. I have a round in the chamber; you just tell me where to put the little sweetheart.\"\n\n\"Let the friendlies make their way out and then you'll see a semi with a red cab. Let him get to the beginning of the concrete dividers; then I want that engine block as useless as a nun on a prom date.\"\n\n\"You got it Mr. Dawson,\" Wolfie replied with a chuckle.\n\n\"Everyone else, if they so much as crack that God damn back door, I want all guns on the trailer and the first BMW.\" Adam's tone left little to the imagination at the amount of damage he wanted thrown at the mercenaries.\n\n**********\n\nBob Holiday continued to tap his fingers on the steering wheel as the bow opened at a labored pace. He squinted as the bright rays of sunlight entered the bay. He had his MP5 laid across his lap as he monitored the two black sedans and the truck ahead of them.\n\n\"If that damn Hostess truck would get the hell out of the way, the snipers would have a clear shot before we even get off this tub,\" Bob thought\n\n\"We're at the tail end of a shitty situation here Senior Chief, how do you wanna play this?\" Bill asked as he checked his own MP5.\n\n\"Your guess is as good as mine Bill. I'm sure Adam is counting on us to take up the rear so after we block the other friendlies behind us, I'd say shoot anyone holding a weapon that isn't a United States Navy SEAL.\"\n\nRandy crouched low in the back seat as he checked his ammo bag and then looked up front. \"After all the years of training, all the dangerous missions, all the shit holes you had to go to and fight in, that's the advice you have?\"\n\n\"Look on the bright side. If we all die here on this mission; you won't have to act gay anymore.\"\n\n\"Oh you're a fucking riot Bob,\" he replied, as he pulled the slide back and chambered a round.\n\n\"Um -- did I miss a really cool moment upstairs?\" Bill asked as he turned to look at his own team Chief.\n\n**********\n\nKevin looked on as the bow doors separated. He pulled the slide back; then with a flick of his thumb, released the safety. He looked over at his teammate for the ambush, John Balch, as he observed the angel clicking his own safety off and muttering a small prayer.\n\n\"Think the old man is gonna help us on this one?\" From the cloudless sky, rolling booms of thunder could be heard all around them.\n\n\"You should know Kevin, he doesn't like to be called that, and I think we want him on our side at the moment.\"\n\n\"Funny you should say that, Gabriel said the same thing.\"\n\n**********\n\nGarrett looked around the corner of the small building that concealed his location. He could see the bow doors were almost open now and it was just a matter of time before the first target was in range when he heard the thunder.\n\n\"You got to be kidding me, now we gotta take these fucks in the rain,\" Garrett said as he waited for the first vehicle to exit.\n\n\"I can't figure out why, there isn't a cloud in the sky,\" Jake answered back as he checked his weapon over.\n\n**********\n\nBashir flipped the map open and checked the route to London Heathrow airport one last time. He knew security would be weak at the port, although it was best to be on guard when they reached the target.\n\n\"Try not to get any more phone numbers on our way out of the gate Rashida, and don't lose our stupid friends up there. I want to get the virus to the airport and wait for the start of our new world.\"\n\nRashida reached her hand over and placed it on Bashir's more masculine one. \"Just think my love, in a few weeks, the whole world will be ours to do with as we please.\"\n\n\"Hmmm. Make sure you watch the roads, it sounds like it's going to rain,\" Bashir said as he folded the map and placed it in the glove box, covering the 9mm handgun.\n\n**********\n\nMark Wolfhorst kept the center of the cross hairs on the chest of the lone crewmember as he waved the cars off. As the first one pushed the accelerator, it emerged into the bright light and made its way off the steel ramp, they followed one by one down the white painted lines on the black asphalt. Mark adjusted his aim and waited for his target.\n\nThe lead car, a tan Nissan, maneuvered towards the concrete barriers that separated the driving lanes. The young, vibrant female driver had no idea that her little car just exited the scope of a very dangerous Navy SEAL sniper. \"Wow, cute blond,\" he whispered.\n\n\"Wolfie, your target is about to exit after a Hostess truck,\" Adam radioed, then ducked back behind the car he used as cover.\n\n\"Copy Adam.\" \n\nThe two SEAL snipers monitored the semi as it left the ramp, followed by two black BMW's. Adam remained out of sight, as he waited for the report of the sniper rifle. Directly across the open area, past the other side of the lanes, Garrett Brown leaned his head out. When he saw Bashir scanning the area, he ducked his head back behind the safety of the building.\n\n**********\n\nWolfie moved his sensitive finger off the guard and pressed it with care against the trigger. \"Hi there, you little fucker. I was wondering; did you happen to check your oil before leaving the ferry? It seems you have a leak, right -- about -- there.\"\n\nThe crack of the .50 caliber projectile breaking the sound barrier could be heard all around, as the engine block of the semi-truck sputtered and began making grinding noises. The startled driver tried to maintain control as he veered left then right. The nose of truck came to a sudden halt, as it slammed hard into the concrete barrier. The rig jack-knifed in an awkward position, but in doing so, it blocked the entire exit lane. Every SEAL realized the moment had arrived -- the ambush was now on.\n\n**********\n\nFredrick heard the boom of a large caliber rifle, then stared at the truck as it went out of control. He turned the wheel of his sedan hard to the left, trying to avoid the wreckage ahead of him. Just as he was about to turn the wheel again, he saw two men in green flight suits emerge from behind one of the parked cars. He was blinded as the windshield exploded into small pieces, and out of reflex, stepped on the gas pedal.\n\n\"Carl move!\" Adam screamed, shoving his friend hard as the speeding car hurled towards them.\n\nThe large black SEAL dove through the air as the right fender of their hideout traveled under him. Adam Dawson wasn't as lucky as the passenger door connected with his body and pitched him backwards. The years of training took over and he allowed his body to relax as he hit the ground hard and rolled to absorb the harsh impact.\n\nCarl was dazed as his head hit the pavement. Through blurred vision, he saw the rear doors open and a blond haired gunman emerge and raise a small automatic machine pistol at the SEAL's chest. Carl raised his own MP5, but he knew it wouldn't be in time; the gunman had him dead to rights. Before his astonished eyes, the mercenary's face exploded in a mass of blood and brain as V-man's sniper round exited his skull.\n\n**********\n\nRashida saw the lead car turn left and she yanked the wheel hard right and stepped on the accelerator. As she flew across the open area trying to escape the ambush, she saw two men dart from around the corner of a small building. Bashir recoiled as bullet holes appeared on the hood and then tore through the side window just behind him. He could also hear the rear passenger's door taking rounds as he reached over for the wheel.\n\n**********\n\n\"Bravo, go!\" Jack Patrick swung his MP5 up and pulled the trigger. He realized his aim was off as the burst went through the rear door and window. The two other members from Bravo fire team joined him as they placed their rounds near his.\n\nGarret watch in horror as the rear of the car began to sustain damage. \"Don't hit the God damn virus Bravo! The terrorists, yes; but not the fucking virus!\"\n\n**********\n\nBob Holiday steered the nose of his car towards the steel bulkhead that framed the exit for the ferry. With the exit of the ferry impassable, the three SEALs jumped out and raised their weapons. The Senior Chief gasped in disbelief as he watched his team leader fly through the air.\n\n\"Man down!\" he screamed, then remembered he didn't have his throat mike on.\n\nIt took the seasoned SEAL just seconds to figure out the situation was declining at an accelerated rate, and began firing on the second BMW as it swerved towards Garrett and Jake.\n\n**********\n\nCovering the end of the bottleneck, Kevin saw the semi driver exit the cab with an AK-47 pointed towards their location. With a three round burst to his chest, Kevin allowed the driver to sleep -- for the rest of his life. All of a sudden, he heard the report over his radio of what they all feared would happen. Kevin and John scrambled to the rear corner of the Hostess truck as he watched the Mexican driver run away in panic.\n\n\"John, get ready. If they come around this way, you're gonna have to put them down.\"\n\n\"Trust me Kevin, I wasn't always an angel.\"\n\n**********\n\n\"Shit, more bad guys coming out of the trailer! Out the back and side!\" Jake screamed into his radio\n\nAdam held onto Carl's shoulder as he checked the condition of his hip, then looked over towards the trailer. \"All teams concentrate fire on that truck!\"\n\n**********\n\n\"There, head in there!\" Bashir yelled, pointing towards a single loading dock in the largest of the terminal buildings about fifty yards in front of them.\n\nThe speed of the BMW, combined with the rounds that continued to riddle the upper half of the car, caused Rashida to enter the loading dock too fast. With both feet, she stood on the brakes as it locked the tires and skidded to a crashing halt against the rear cement wall.\n\nBashir reached into the glove compartment and pulled out the 9mm Glock in one smooth motion. He rushed towards the overhead door controls and fired in the direction of Garrett and Jake. He saw the two S.A.D. men drop to the ground and return fire towards him. When Bashir reached the end, he hit the button and the steel door began to make its way down.\n\nJust before the door concealed them in the building, Bashir took aim and sent his final round of the clip towards Garrett's head. He saw the older man roll to the side, then continue firing his MP5.\n\n**********\n\n\"Aim high!\" Garrett screamed.\n\n\"I know I heard you the first time. Remember, I'm a werewolf!\" Jake yelled back as he fired another three round burst.\n\n\"Shit, they went into that building. Let's go!\" Garrett sprinted towards the building with his point man hot on his tail.\n\nGarrett and Jake saw the overhead door start to close. When they heard the incoming rounds flying by them, they dropped to the ground and continued firing at the partially concealed body of Bashir Haddad.\n\nWhen he stuck his body out further, Jake thought he might have a chance at causing serious damage to the human form of the sadistic werewolf. He held his shot though when his peripheral vision caught sight of Garrett rolling to the side in pain.\n\n\"Fuck, you're gonna pay for that shithead!\" Garrett screamed as the asphalt erupted in front of him and peppered his face.\n\n**********\n\nJack Patrick stood tall as he fired numerous short bursts at the men exiting the truck, while his point man, Carlos Hernandez, kneeled down just to the right of him. He joined Bravo's Officer as they tried to put as much firepower on the end of the trailer as possible. The two SEALs put as many mercenaries down as they could, but the enemy continued to flow out of the trailer like ants out of a disturbed mound.\n\nCarlos winced in pain as some of the hot shell casings from his team leader's MP5 found their way down the back of his flight suit. As he pushed the small button on the side of the weapon, the empty magazine hit the ground just as he was about to slam a fresh on home.\n\n\"Who's bright fucking idea was this again?\" Carlos screamed out as the cinder blocks of the building erupted in a spray of small chips. Both of them ducked behind the building, as the corner they now hid behind continued to crumble from the incoming rounds.\n\nJack flinched in a protective move as the chips flew by him and he pressed his throat mike and looked around for another vantage point. \"I sure am glad we have them out numbered and out gunned Adam.\"\n\n**********\n\nAdam looked around as the mercenaries took up firing positions behind the cement lane divider. They had perfect firing position with the built-in lifting slots in the center of the blocks. He ducked behind Fredrick's now useless BMW, as multiple rounds streaked by his body. When he hit the ground, he winced in pain and grabbed his hip just as Carl slid next to him.\n\n\"Is it broken Adam?\"\n\n\"That dead fuck wad behind the wheel didn't get that lucky, but I can't move too fast,\" he replied as he raised his weapon over the trunk and fired two short bursts.\n\nCarl rose and fired a short three round burst, killing one merc and wounding another. In swift fashion, he saw four men take their comrades place, continuing to turn the car into something similar to Swiss cheese. Carl dropped back down and ejected his magazine, then slammed the full one home. \"Sounds like even more bad guys are pouring it on hard at Lieutenant Patrick.\"\n\n\"We gotta get over there, or at least draw some of that fire,\" Adam replied quickly.\n\nAdam looked towards the ferry as his team Chief and two men from Bravo fired short bursts towards the trailer. Adam raised his weapon and fired three rounds in front of the small group. They all rotated to engage the new target, and observed Adam waving his arm.\n\nWith his team leaders hand signals, Bob knew what his Adam wanted. \"Bill, get to the back seat and put that .60 out over the roof. We're gonna need it in a few minutes,\" Bob growled.\n\n\"I'm on it,\" Bill yelled as he fired another burst towards the trailer.\n\n\"Get ready to move Tiny; we're going after Adam.\" Bob emptied his magazine and popped the clip out. \"Now\"\n\nThe two SEAL Chiefs ran back to the car as Bob hurried behind the wheel. \"You two get out the windows and keep their fucking heads down.\"\n\nBob stepped on the gas and aimed straight for his teammates. He could feel the concussion of the .60 caliber machine gun sounding off above him, as he cranked the steering wheel and slid sideways just in front of Adam's position. He looked back and saw Carl holding up Adam as they made their way to the side.\n\n\"Bob, get us over on the other side to reinforce Bravo,\" Adam ordered.\n\nAs Adam slid around Bill Haley, he moaned in pain. \"Are you hurt Commander?\"\n\n\"Just a paper cut, keep pouring it at them SEAL.\"\n\n\"Alright everyone, full auto on three. One -- three,\" Bob screamed, then pushed his foot to the floor.\n\n\"All teams covering fire now!\" Adam shouted out over the radio.\n\n**********\n\nKevin looked to his left towards the large building the second BMW drove into. He fired another three round burst into the corner of the trailer, letting the mercenaries know not to even think about coming around that side.\n\n\"John, we're going to head towards that door over there and get behind that barricade. Keep firing as we move, and try not to get killed -- again,\" he said with a short laugh.\n\n\"Tell me again moron why I brought you back?\" he said as he fired three short bursts just underneath the trailer, hoping for a ricochet.\n\n\"Now!\" Kevin screamed.\n\nBoth men bolted for the barricade as they fired their MP5's towards the mercs location. It took a few fleeting moments to reach the waist-high obstruction. When they were within a few strides, the pair dove through the air as incoming rounds peppered the wall of the building. Kevin came up firing as he saw Bob's car begin to cross the open area.\n\nThe mercenaries crouched behind the wall saw it too and opened fire with vigor. They were only able to fire for a few moments as the incoming rounds from the SEALs forced them to crouch lower between the wall and the trailer.\n\n**********\n\nBob Holiday had the pedal as far as it would go as he felt the car shudder from the impacting rounds. When he saw the white smoke begin to bellow from the engine compartment, he swerved to avoid any more damage. When he did, he felt the stabbing torture of two rounds from an AK-47 that tore through his left shoulder.\n\nHe tried to control the damaged car for a few more moments as the pain engulfed his upper body. Bob skidded to a stop next to the building, as the SEALs exited the right side of the car. Now that the covering fire was complete, everyone ejected their mags and slammed fresh ones in.\n\nBill Haley dragged Adam to the relative safety of the small building and began checking him over. When he ripped the leg of his flight suit open, he was relieved to find the bone wasn't sticking out. From the way the team leader was grimacing, he knew it was a least cracked somewhere near the hip.\n\n\"I wish I had a splint for you Adam, but since I don't how about some morphine?\"\n\n\"I'll live Bill, get to work on Holiday,\" Adam ordered then pressed his mike. \"Snipers, how about a little help down here, you're not getting paid to watch the show.\"\n\n\"I'd love to Adam, but that fucking idiot slammed the cab against the wall, I can only see some of the top of the retaining wall.\" V-man fired another well placed round into the cement top as he heard the strain in his commander's voice.\n\n\"Sorry Commander,\" Wolfie added. \"All I can see is the damn tires. I've put a few rounds through the trailer door but I can't see anything.\"\n\n\"You two are starting to fit the profile of that nun,\" Adam muttered as he looked for an exit route, but realized they were pinned down. \"Okay, it's official, this is starting to suck.\"\n\n**********\n\nBashir ran in from the back of the building as he held the small 9mm down towards the floor. Rashida joined him in the middle of the large building after checking the front and sides. With nervous eyes, they continued to scan the interior of the building for a safe way out. He muttered under his breath as he realized they were trapped. \"Shit, the only way out is towards the fire fight.\"\n\n\"Why don't we just toss a few vials out and kill their assault team?\" Rashida asked as she contemplated going out the front door.\n\n\"We'd risk infecting our own escort, and right now that's who's keeping the bastards occupied. Get the canisters out of the car and we'll hide in that office for now. If it comes down to it, we'll release the entire virus here, and escape as our true form before the humans can react.\"\n\n\"What about the other wolves with them?\"\n\n\"They've been playing with the humans for years like obedient mutts; I'm not worried about them,\" Bashir growled as he headed towards the wrecked BMW.\n\n**********\n\nCarl grabbed the .60 caliber and raised it over the roof of the damaged vehicle. The ammo belt reached down to his knees but he dispersed of it in just seconds as he sprayed the trailer and divider in unrelenting hail of hot bullets.\n\nCarlos Hernandez saw the heavy gunner from Alpha duck down and start to reload the machine gun. He knew the team had to keep fire superior on their side, so he jumped up and joined Carl on the right side of the car.\n\nHe began firing short bursts at the retaining wall, trying to keep the enemy pinned. Just as Carl brought the weapon up, they both saw the shoulder-fired weapon emerge from behind the concrete wall. They had no time to return fire, as the projectile headed for them.\n\n\"Fuck me, incoming RPG,\" Carl screamed as he dove back behind the building.\n\nThe two SEALs hit the ground hard as the rest of the team collapsed their bodies to avoid any shrapnel. The riddled car they used as a shield shot upward from the powerful blast, spinning like a child's toy before coming to rest upside down in a fiery mass of metal.",
        "Adam shook his head clear; the others could see from the look on his face that he was starting to lose his temper. He knew had to stay calm, but at the same time, anger sometimes pushed him further.\n\n\"Alright, I've had just about enough of this bullshit! Wolfie, V-man, if you two don't figure out a way to get these assholes subdued, I'm personally gonna tell every sniper in the fucking world that you two couldn't hit a barn with a shotgun if you were standing next to it! Now earn your God damn pay!\n\n\"Damn it Adam, all I can see is the top of the wall!\" V-man screamed back.\n\nWolfie knew they must be reloading for another shot, and Adam's tone was right on target. If they didn't do something soon, it was game over the team. \"I've had about enough of this shit too. Dan, keep your crosshairs on that cement wall, I'll give you something to shoot at in two seconds.\"\n\nMark Wolfhorst slowly released his breath, then pulled the hair trigger of the .50 caliber. As the round penetrated the rear tires of the trailer, he knew it wouldn't cause much damage to the men hidden behind it, but with any luck, it would cause the desired effect.\n\nV-man saw the trailer dip down from the blown tire, but that wasn't what made him smile. The concussion from the explosion forced the merc holding the rocket propelled grenade to lean over the wall. Alpha's sniper steadied the SR-25, then pulled the trigger. It took a half a second for his scope to be immersed in a bright orange flash, as the round pierced the grenade.\n\nAs the smoke cleared, both snipers peered through their scopes. V-man could see Kevin and John peek over the barricade they crouched behind with care. The terminal area was bathed in an unnerving quiet, as the rest of the SEALs came out of hiding.\n\nJohn stood up and looked at the four-foot hole that now graced the side of the trailer. As he scanned the shredded bodies of the men that lay scattered on top of the dividing wall, he crossed himself and whispered a small prayer for the dead. He grabbed his throat mike and smiled. \"Now that's what I call extreme prejudice V-man.\"\n\n\"Thanks, I guess I get to keep my job huh little buddy.\"\n\n\"It's about time you two got in the game,\" Adam muttered. \"All teams, converge on the warehouse -- now!\"\n\nV-man and Wolfie monitored the area as the teams made their way to the large building. Due to his injury, Adam was the last to arrive at the group of SEALs gathering at the front door to join up with Kevin and John.\n\nWhen John saw his Senior Chief's arm in a sling and his shoulder covered in bright red bandages, he rushed over to check him. \"We can't take you anywhere, can we Bob,\" John chuckled.\n\n\"It's going to be a hard ride back Doc, with my foot in your ass.\"\n\n\"Listen up, we didn't see the tangos leave during the firefight, so I have to assume the little bastards are still in there. Bravo, outside security. If anyone else other that a SEAL comes out, make sure they don't take another fucking breath,\" Adam growled.\n\n\"Um -- can we include the two CIA guys on that last one?\" Garrett added.\n\nAs Bravo left to get into position, Adam grabbed Lieutenant Jack Patrick by the arm hard. \"Listen to me Jack, I know you're going to want to rush in and help, but don't . Under no circumstances are you or any of your team to enter the building.\"\n\n\"What if you guys need back up?\"\n\n\"That's an order Lieutenant! No matter what happens or what you hear, no one goes inside!\"\n\n\"Aye, aye Sir. I'll see you when it's all over,\" he replied, then shook his friend's hand with a firm grip.\n\nNow that his beloved team was around him, Adam surveyed the condition of the men. He knew what kind of enemy was waiting for them inside, and he began to wonder if they could still pull it off with a limited amount of firepower.\n\nJake saw the turmoil within the SEAL he grew to call his friend. The young werewolf placed his hand on Adam's shoulder, trying to settle his growing fear. \"It's up to me and Kevin to kill these two. You guys don't have to get involved.\"\n\n\"Spoken like a true Marine, but SEALs don't work alone, Jake,\" Adam replied as he patted the young werewolf's hand.\n\n\"I'm in better shape than you are Adam, I'll lead them in,\" Bob said.\n\n\"With a busted wing and a shot of morphine? I doubt that Bob, you stay out here and help cover the exits. If just one of them comes out as a werewolf, you and V-man are the only ones who won't freeze up,\" Adam said as he placed his hand on his friend's good shoulder.\n\n\"Yeah, I see your point.\"\n\nAdam slammed a fresh magazine in a pulled the slide back. \"Kevin, Jake, up the middle. Carl, you and John take up the right side. Garrett and I will take left. Remember, they don't escape with the virus, or none of us lives to regret it.\"\n\n\"Are you sure you want to go in Adam? You can't move very well,\" Kevin asked.\n\n\"That's why I have a werewolf as my back up. I hope that medallion really works.\"\n\n\"I took down Kordic back in Predjama with it didn't I?\"\n\n\"Yeah, and as I remember, you had help with that one,\" Adam reminded him.\n\n\"Um -- excuse me, what the fuck am I, a Pomeranian?\" Jake asked in annoyance.\n\nGarrett slapped him in the back. \"Hey if the shoe fits Marine. Masks on and let's go say hi.\" The S.A.D. Director pulled his mask down and opened the front door with caution.\n\n**********\n\nBashir studied the humans' as they began entering the large warehouse. The beast inside him fought for release as two of them stopped in the center and began scanning the area. He ducked back down and looked at his mate as she held the unwrapped canister that contained the world's deadliest virus.\n\n\"The fools have only sent in four men and their two lap dogs. They won't attack us as long as they think we'll release the virus, so kill the humans first then we take care of the traitors.\" Bashir's eyes displayed the hatred he felt about the two werewolves sent to kill them.\n\n**********\n\nWhen the team was in position, Kevin and Jake sniffed the air. They both locked in on a small office on the other side of the room. Jake snapped his fingers to get the others attention, and indicated the position of their intended targets. All at once, the lethal men trained their weapons at the doorway across the room.\n\n\"We can do this one of two ways Haddad. Give us the virus and I promise you a nice long life in a dog kennel of your choice, or everyone dies and it ends here,\" Adam yelled.\n\nKevin glanced over at his friend in shock. He wasn't sure it was a good idea to aggravate the situation by bantering a werewolf, but given the circumstances, they had very little to lose. He was about to call out to the terrorists for some understanding of what was going to happen to the world, when Bashir and Rashida came out holding two gray canisters. The male terrorist, bent on destroying the world, had a 9mm gun pressed up against the side.\n\nAdam stared at the two human shaped werewolves as they walked towards the middle of the room with caution. \"Yep, next time some CIA puke wants my help -- shoot him.\"\n\n\"Your talented escorts are just outside Bashir. I'm sorry to say they won't be helping you any longer,\" Garrett said as he trained his weapon at Bashir's head.\n\nBashir stopped and began checking the sides and overhead for any more threats. He held the canister tight as he glared at the insolent human. \"Put your weapons down and let us leave, and I'll allow you to live another day.\"\n\n\"Sorry Bashir, but if you give us the virus we might just have a deal,\" Garrett replied as he kept his aim steady.\n\nKevin pulled his desert eagle out of its holster and handed it to his team leader. Jake followed suit as he handed his to Carl, then both of them laid their MP5's and masks on the ground. Kevin knew he had one chance at ending the standoff, if they would listen to reason was the sticking point.\n\nRashida noticed the two werewolves approach as she glared at them with disdain. Given their build, she was sure they were a formidable size wolf, but being with humans as pets their skill was no match for her and her mate.\n\nWhen Kevin and Jake stood in front of them, they showed no emotion as they stared down the two terrorists. The four studied each other for only a brief moment, but to the other SEALs, it was as if hours had passed by.\n\n\"You two disgust me. How dare you betray your own kind, and then stand there like your one of us,\" Bashir said in a low arrogant tone.\n\n\"I think you should know that you've been played this whole time by Nadia Karpov. That virus not only kills every living thing, and that includes our own kind, but it turns them into some kind of zombie. If you release that virus, you'll be responsible for the total demise of humanity AND werewolves,\" Kevin said as he tried to reason with him.\n\n\"You're making that up to try and get us to lower our guard,\" Rashida responded with a hint of skepticism.\n\nJake shook his head in frustration. \"Sorry lady, but he's telling you the truth. We saw what that shit does when we took down Mansur. The whole crew and your mercenary friends were like the walking dead.\"\n\n\"Why should we believe anything you say? Two of our own kind that are nothing but subservient lap dogs. After we kill your human owners over there, my mate and I are going to show you what a true werewolf is supposed to do,\" Bashir growled.\n\nKevin stood his ground as the threat to his friends hung in the air. \"You can think of us however you want Bashir. I'm sure I can't change your mind on that matter. If this whole undertaking was to have werewolves run the world, then let's settle it as our true selves. We win, we get the virus; you win, you keep it but they get to leave.\"\n\n\"Your -- masters -- are not worth the bargaining price.\" Bashir snickered at the offer.\n\n\"Fine, if you two win you can have this as a prize too.\"\n\nKevin pulled the Lycanthrope Medallion out in plain view as he watched Bashir's eyes widen as he gazed upon the sacred artifact. He saw the recognition in his face, along with the need to possess the one thing that would make them supreme above all others.\n\n\"How could someone as pathetic as you have the medallion?\"\n\n\"Maybe my buddy and I aren't as playful as you might believe.\" Kevin tucked the medallion away and took a few steps back. Jake did the same but moved off to the side as he stared down Rashida Turk.\n\nAdam watched as the two point men took defensive positions. He knew within a few moments, World War 3 was about to start. All he could do was watch and hope for a clean shot without damaging the virus.\n\n\"I've got a clean head shot Adam. I can end this here,\" Garrett whispered.\n\n\"They drop that virus and it opens, we lose Kevin and Jake. We have to wait for another opening.\" Adam realized Garrett had a point, but he also knew that his friend's life was too steep a price to pay.\n\nBashir slowly lowered the virus down and placed it between himself and Kevin. When he took a step back, Rashida set her canister next to his and moved off to the side. They both knew they were now defenseless and might be harmed if the humans opened fire. In just a blink of the eye, two very large werewolves stared back with gleaming gold eyes. Bashir growled with anger as he revealed his large canine teeth.\n\nKevin took a deep breath, then allowed his true self to emerge from the darkness within him. The muscular werewolf growled back at his enemy and displayed his own menacing teeth, as Jake's large brown mass joined him on the makeshift battlefield.\n\n\"Holy Mother of God, Jake was telling me the truth,\" Garrett whispered.\n\nThe pair of evil wolves moved away from the canisters, but as Rashida took her next step, Jake lunged. Rashida was impressed at his speed, as she leapt at him with her razor sharp talons pointed out. The two hit each other with force as Jake dodged the knife like weapons. Their massive heads battling for position and a quick killing bite.\n\nKevin knew this must be Jake's first time battling another wolf because of his aggressiveness. Kevin studied his own opponent with restraint as Bashir prepared to attack. He could also sense Bashir's hesitation, thinking his own challenger would follow his friend's actions and strike first. When Kevin made no move to attack, Bashir began to wonder if the despicable pet wolf was unsure how to fight.\n\n\"Young stupid fool,\" Bashir thought as he released a low, deep, growl.\n\nWith practiced speed, Bashir sprang towards the young wolf and was prepared to sink his large teeth into the thick meat of Kevin's neck. Kevin felt the medallion's power flow through his body, as he watched Bashir as if in slow motion. This never happened during his first fight in Predjama and he realized the precious medallion had just chosen him as its rightful owner.\n\nKevin shifted to the side an allowed his enemy to get close to his neck. The increased agility surprised him, as he slashed the side of Bashir's face with four destructive claws. Bashir felt the vicious pain as his flesh was torn in strips. When he stumbled to the side in disbelief, Kevin saw his opening and attacked the older wolf, as the two became a tangled mass of fur and teeth.\n\nGarrett followed the four wolves that battled in front of him with his weapon. He kept looking for a clear shot, but their movements were so fast he couldn't risk hitting one of his own. Adam was trying to do the same thing with the desert eagle, but Kevin kept twisting and blocking his shot.\n\n\"Jesus Christ Adam, I can't tell which one is which,\" Carl screamed.\n\nJake was impressed with the strength of Rashida Turk as they stood on their hind legs trying to get an advantage on one another. He wailed in pain as she sunk her teeth into his powerful shoulder. With all his might, he slammed the side of his huge head into hers as she pulled the flesh from his body.\n\nHe could feel the blood dripping down his front leg, as he compressed his own sharp cuspids into the back of her neck. The pain in his shoulder fueled his anger as he rolled to his left and flipped her over. As the lighter werewolf flew over him, he placed his hind paws against her body and flung her towards the wall.\n\nIt was that same anger that caused him not to consider the move before hand, as the brown mass flew straight towards Carl Werner. The three hundred pound she-wolf crashed into the Navy SEAL hard as the pair slammed against the wall. The only thing that saved his spine was the canvas backpack he wore.\n\nAdam saw his chance as he moved the .50 caliber handgun up. As he was about to pull the trigger, Rashida darted towards him with lightning speed and slammed her massive head into his ribs. When he buckled under the force, he pulled the trigger and fired one round harmlessly into the ceiling. Rashida left the disabled human on the ground as she shot back towards Jake.\n\nKevin heard the shot ring out and glanced at his friend as he crumpled to the floor. He was torn between helping him and trying to take out Bashir who was giving as good as he got. His body exploded in pain as he felt his front leg give out when the larger werewolf clamped down on it with vise like jaws. He howled in agony as his body was forced to the floor.\n\n**********\n\nCarlos Hernandez was kneeling down by Lieutenant Patrick as they covered the building. When he heard the terrifying howl, he started to get up. \"What in God's name was that?\"\n\nJack grabbed his arm. \"Dawson said we stay put, and that's exactly what we're going to do sailor.\"\n\n**********\n\nGarrett could see the four werewolves were busy with each other as the continued to fight with fierceness. He knew he could stop it if he could just get the virus out of the building and in a safe place. With a quick burst of speed, he ran towards the unguarded canisters as the other men watched in amazement.\n\nBashir also saw him race towards the prize and released his opponent's leg. Just as the human was about to reach for one of the canisters, Bashir forced his immense head into the side of his body and slung the human head first into a large steel rack. The other men watched as he slumped to the floor.\n\nJohn watched in horror as another teammate went down. When he felt Adam trying to get up, he helped him lean against the wall. \"Don't move too much Boss, you got some broken ribs. Maybe it's time we call in Bravo?\" \n\n\"No -- they -- they don't -- come in.\" Adam winced with each word as the pain stung him.\n\nJohn grabbed the desert eagle and looked out towards the fighting. With no clear shot, all he could do watch the battle ensue, then an idea came to mind. \"Kevin, skeet shooting!\" he screamed.\n\nAs he watched Bashir dive for his exposed throat with his powerful jaws open for the kill, Kevin twisted his hips and shoved his back legs into the mid-section of the attacking monster. It took everything the medallion had to offer to heave his enemy into the air. He watched as Bashir Haddad hung motionless for a split second.\n\nJohn held the grip of the handgun tight, and then pulled the trigger on the powerful weapon. The sound was deafening as the depleted uranium round left the barrel. When it connected with Bashir's massive chest, it forced him back almost a foot as the werewolf crashed to the floor near the canisters he fought to keep\n\nJake Newton tried as hard as he could to get at Rashida's throat. She was definitely an experienced fighter as they both maneuvered for position, but when she heard the shot ring out, she braced herself for the incoming round. When none came, she nipped at Jake's face and in a twist of fate, glanced over at her mate.\n\nJake realized he had just seconds to react. He sank his teeth into Rashida's neck with a vengeance, as he slashed away with both sets of razor sharp talons. He tried to inflict as much damage as he could to her chest, then with his last once of strength, he bit down.\n\nRashida Turk, the beautiful but evil werewolf, howled for a fleeting moment before her windpipe crushed under the immense pressure. Jake pulled at the tender flesh as blood spurted into his mouth then; he collapsed to the floor beside her.\n\nExhausted and beaten down, Jake transformed into his ragged and torn human self. As he tried to crawl away from the body of his enemy, John ran up and placed a comforting hand on his shoulder to keep him still. The tired S.A.D. operative looked up at saw the angel staring back with a soft smile.\n\n\"All the -- bad guys -- dead?\" Jake whispered.\n\n\"Yeah Jake, you can rest now,\" John replied as he placed Jake's mask on his face.\n\nKevin groaned out as the pain screamed through his busted right arm. He now lay on the cold cement as a Navy SEAL, putting pressure on the open wound. His torn clothes allowed the Lycanthrope Medallion to slip out and rest of the floor next to him.\n\nKevin turned his head and gazed with a hint of understanding at his werewolf brother in arms. Being an only child had been rough on the young werewolf, but now he knew, no matter where he went or how troubled life became, he had a brother for eternity.\n\n\"You okay -- Jarhead?\"\n\nJake forced a smile at his new family member. \"Never -- felt better -- Squid.\"\n\nAdam moved with care towards the mess in the center of the warehouse. He tried to put most of his weight on Carl as he helped him forward. When he looked down at the two smiling men, he knew with a bit of rest, the two werewolf warriors would soon be back to their old selves.\n\nThe battered SEAL saw Garrett trying to get up after being smashed into the steel beam of the racks. \"Doc, those two clowns just need a Band-Aid, go see to Director Brown.\"\n\n\"Aye, aye Sir,\" he replied as he moved over towards the slow moving body.\n\nAdam stuck his hand down towards his dear friend and point man. \"Can you stand, or do I need to call in a medevac?\"\n\nKevin reached out with his good arm and grasped his team leaders hand with a firm grip. As he stood, he looked at his Adam with amusement. \"Does a one legged duck swim in circles?\"",
        "Jake took caution as he made it to his feet and checked his flight suit. He pulled at the tattered rags and moved towards the others. His face was bleeding slightly, the most serious being a small gash above his left eye. In a protective gesture, he closed it and stood next to his new friends with a sense of pride.\n\n\"That was my first time taking on another werewolf,\" Jake said as he looked at the torn body of the Rashida Turk.\n\nKevin reached his hand out to his new brother. \"We came out on top Jake, that's all that matters in that kind of fight.\"\n\nThe four men were so busy congratulating each other on a hard fought victory; they failed to notice the flickering eyes of Bashir Haddad. The dying man let his breath out with care so as not to draw attention in his direction. The searing pain in his chest was over shadowed by the sight of his mate lying dead on the cold cement floor.\n\n\"If we have to die, then these -- humans -- are going with us.\"\n\nJake saw it first as Bashir grabbed one of the canisters. He reached down to his thigh where his desert eagle should have been. He cursed himself as he palmed the empty holster. \"Son of bitch is still alive!\"\n\nThe other men were so surprised at the claim; they only had time to look at Bashir as he opened the lid to the container and sling it towards John and Garrett. John Henry Balch saw the device hurl towards them and instinctively placed his body between the canister and Garrett Brown.\n\nCarl Werner swung the .60 caliber towards Bashir and pulled the trigger, releasing half a belt of ammo into the man's body lying on the floor. The four men stared on in horror as the open container smashed against John's back, spilling it contents.\n\nKevin held his breath as he darted towards the front door where his mask lay on the ground. With extreme torment screaming from his arm, he checked the straps and went to help John and Garrett. As he reached them, he stood behind Carl and Jake as they tried not to encounter the open vials that lay shattered on the floor.\n\nCarl grabbed John and he winced from the pain in his back, as Jake grabbed his director and pulled him clear of the spreading virus. When they were clear of the broken glass vials, they laid the pair down and began checking them over. Kevin saw in an instant the new threat they all faced, as Garrett began to cough slightly.\n\n\"Adam, we have a problem here,\" he said as the team leader hobbled over.\n\nAdam looked down at the two men he had come to trust with his life. John's mask had a large crack in it, while most of Garrett's face shield was shattered from the impact against the steel beam. The Navy SEAL knew the Director of the Special Activities Division was doomed to a specific fate, a fate that they all feared when they accepted this mission.\n\nAdam grimaced as he knelt down. \"Garrett -- Garrett can you hear me buddy?\"\n\n\"You don't -- ugh -- have to shout. I'm -- ugh -- not deaf.\"\n\n\"Garrett, the virus is out. How do we stop it?\" Adam asked with a hurried tone.\n\n\"And here -- ugh -- I thought you -- ugh -- SEALs were good.\" The sarcasm did little to lighten the strain Adam felt.\n\n\"Mediocre -- even on our best day buddy. How do we stop it?\"\n\n\"Biggest fire ball you -- ugh -- you can make. Better hurry, this stuff is working -- ugh -- fast.\"\n\nAdam began looking around for anything flammable. When he spotted some drums along the far wall, he ordered Carl and Jake to drag as many as they could, as quickly as they could, to the center of the warehouse. The two men raced to complete the task, as Dawson looked down at his medic.\n\n\"John, you okay?\"\n\n\"Yep, like a new born -- ugh -- baby,\" John replied with a small cough of his own.\n\nKevin stared on in disbelief. He knew of John Balch's true self; a guardian angel. If Gabriel sent him to help the team recover the virus, then it shouldn't have any effect on him. Then it dawned on him, the angel that broke the rules of heaven by bringing him back needed a way out. He had to go back without anyone being suspicious of his real identity.\n\n\"John, we can get you out. Maybe we can find the cure before it's too late,\" Kevin said loud enough for everyone to hear.\n\n\"Did your -- ugh -- elevator get stuck between floors? Look on the bright side buddy -- ugh -- maybe I'll have a ship named after me,\" he replied with a short laugh as the drums of gasoline were placed near them.\n\nAdam touched Garrett's shoulder and the fading man looked up. \"You understand what's going to happen to you Garrett. I can't bring myself to shoot you or John. I just can't do it. I said I could, but I just can't.\"\n\n\"Less talk -- ugh -- more do.\" Garrett looked down at his hands as small white blisters began to form.\n\n\"Carl get the C-4 out and place it on the drums, use all of it and make it fast,\" Adam screamed.\n\n\"Boss, are you sure...\"\n\n\"Hurry up before this shit gets out!\"\n\nWhile Carl reached into his backpack and began placing the thirty pounds of plastic explosive against the steel drums, Jake started pulling out the detonators and wiring them together. After everything was set, Jake ran the wire out a few feet while Carl reached in for the automatic timer.\n\n\"How long you want, Commander?\"\n\n\"Two minutes.\"\n\nAdam locked eyes with the dying men. \"I'm so sorry guys, I wish I could...\" Adam tried to say through a choked voice.\n\n\"One -- ugh -- favor,\" Garrett whispered.\n\n\"Name it, Garrett\"\n\n\"Tanner Eason, punch -- ugh -- lights out.\"\n\nIt took all the will power he had to control his emotions as Adam's eyes filled with tears. \"I'll make sure he doesn't wake up for a week, Director Brown.\"\n\nJohn pulled his mask off and slightly coughed as he reached out and held Garrett's swelling hand. There was no fear in his eyes, no sense of impending doom, as he looked around at the faces of some of the bravest men he'd ever met, in any life time.\n\n\"You guys need to move out -- now,\" John said as he looked at his team leader.\n\n\"Carl?\"\n\n\"We're set Adam, let me know when to start it.\"\n\n\"May God forgive me,\" he thought as the tears became too much to withhold. \"Now.\"\n\nThe timer began counting down as Carl and Jake grabbed Adam Dawson and helped him towards the door. Adam turned his head and saw Kevin still kneeling next to the team's medic. As they stopped by the door, Jake pressed his mike button.\n\n\"Bravo, we're coming out. We need a hand with Dawson, he's hurt,\" Jake said.\n\n\"Hurry up Dvorska, clocks ticking!\" Adam screamed.\n\nWith a hushed tone, he spoke to the angel who was done with his part of the mission. \"John, after we leave, you have to show him. Let him know not to be afraid of where he's going.\"\n\n\"I was planning on it my friend. May God watch over you and your team,\" he whispered back.\n\n\"Tell Gabe I said hi and slap my dad for me,\" Kevin added, and then ran to the door.\n\nAfter everyone went outside, the front door slammed closed, this left two men to face the end alone. Two members from Bravo, picked Adam up in a firefighter's carry and everyone sprinted as fast as they could away from the large warehouse.\n\nInside the doomed building, Garrett looked up at the SEAL medic. He wore a soft smile on his face as he looked back at him. As Garrett continued to stare into his peaceful blue eyes, a gleaming aura of radiance pulsed around him. Soon, it's loving warmth enveloped around both of them.\n\n\"What -- ugh -- what are you?\"\n\n\"I'm a friend Garrett. You don't need to be afraid anymore, I'm here to help you go home.\"\n\n\"Ugh -- home?\"\n\n\"Yes Garrett, you're going home.\" John ran his hand across the side of the dying man's head. A peaceful smile formed on Garrett's face, as he closed his eyes for the last time. John looked towards the heavens, as he heard the loud click of the timer.\n\n\"Welcome your children home Father,\" he whispered, as the orange heat engulfed them.\n\n25,000 feet, one hour and thirty minutes out from Andrews Air Force Base.\n\nThe Air Force Colonel, Tony Richards, checked his charts, and then glanced up at the compass of the Gulfstream V. This was his fifth flight in the squadron's newest VIP aircraft and he made a mental note to let the ground crew check out the slight deviation. As he typed in some new coordinates, the sleek jet veered to the left a few degrees. His co-pilot, Major Richard Seems, sipped at the small cup of coffee as he scanned the sky. \n\n\"We should be within Andrews control area soon. This tail wind is helping us out a lot. I'm gonna stretch my legs before we get into final. You need anything while I'm up, Dick?\" Tony asked as he unstrapped from the seat.\n\n\"No thanks Skipper; I'll get what I need when I get home tonight,\" he told the silver haired man as he tapped the bright photo of a dark haired beauty taped to the dash.\n\nThe Commanding Officer of the Presidential Airlift Group made his way out of the cockpit and headed aft. As he stepped through the small partition, his soft hazel eyes looked over the six men dressed in brand new camouflaged fatigues. When he first picked them up in London, he thought at first he was flying a medevac mission. All of them had some type of bandages or braces adorning their rugged looking bodies.\n\nThe obvious team leader had his leg stretched out while he played with the awkward brace with one hand, and held a cold bottle of beer in the other. A stunning blond haired woman in a sharp business suit sat next to him sipping a mixed drink.\n\nHe chuckled inside and thought of his own lovely bride waiting for him at home, as the woman slapped the SEAL in his arm and told him to stop. The older man across the aisle watched them with a smile, as he adjusted his arm in the bright white sling. He noticed the other passengers sitting quietly as they drank their beers and stared out the cabin windows.\n\n\"Commander, how are you and your guys holding up back here?\" Tony asked as he leaned up against one of the wide plush seats.\n\n\"As well as can be expected I guess, how long before we hit Andrews, Sir?\" Adam Dawson asked.\n\nTony checked his watch. \"We'll be on final vectors in just under an hour.\"\n\n\"That sounds great. We're almost out of beer,\" Adam said with a smile.\n\nTony laughed at the remark, even though he knew they weren't drinking that much. He knew nothing about how the SEALs became injured, or even if they accomplished their task. His only orders were to pick them up and take them to Andrews for further transport. Although one particular phone call told him, the team was to be well taken care of during the flight.\n\n\"I'll see what I can do about pulling over at the next gas station,\" Tony said with a short chuckle.\n\nBob leaned over and looked at the seasoned pilot. \"Excuse me Sir, who do we owe the special treatment to? I mean this is pretty upscale, even for you Air Force guys.\"\n\n\"What this old bucket? This is nothing compared to the 747 I usually fly. As far as who you thank, well I guess I'm like you guys. Keep your mouth shut and do you job.\"\n\n\"Um -- Colonel, when you touch down could you have the duty driver take us to pick up a van or something? I think we're all ready to just call it a day and sit around at the house,\" Adam said as he leaned back.\n\n\"There won't be a need for that Commander, there's transportation waiting for you when we get there. Orders are to take you and your men to Langley, and that's all I know.\"\n\nThe words hung in the air as Kristine joined the others in a long groan. \"Jesus Christ, haven't we been through enough?\"\n\nAdam rubbed his eyes as the thought of another debrief ran through his mind. He and the others of Alpha and Bravo fire teams must have gone through the details of the firefight and subsequent explosion a hundred times. Once Kristine joined them a few days later, they all went over it another fifty. After two weeks of being poked, prodded, x-rayed, and questioned, he knew the others joined him in the annoyance at having to do it again.\n\nAdam struggled to stand up, and then faced his fire team. \"Alright settle down everyone. I don't want to go through this again any more than you guys do. Let's just get there, get it done, and get home. Any questions?\"\n\nKevin leaned out into the aisle. \"Yeah Boss, since you're up, can you get me another beer from the back?\"\n\nThe Lieutenant Commander picked up his crutch and pointed at his werewolf friend. \"How'd you like to practice a HALO without a chute Dvorska?\"\n\nCentral Intelligence Agency Headquarters, Langley, Virginia.\n\nTwo black limousines pulled into the semi-circle drive and stopped in front of the large glass entranceway. Well-groomed men jumped out of the passenger seats and opened the doors for the battered assault team. As Adam labored to exit, he saw a young man pushing a wheel chair out to him. With his men assembled him, he felt a sense of pride and strode past the stunned attendant and into the building. Kristine held the door open as five Navy SEALs and one S.A.D. operative moved inside.\n\nAdam made his way to the front desk and noticed the same incompetent guard was on duty the first time he met up with Garrett Brown at Langley. He could see the apprehension in Rich Woods' eyes as the confident SEAL leaned against the polished wood.\n\n\"I assume we're here for a debriefing, so if you scramble an assault team because you're nervous about us, you should know something first. I'm in a foul mood, and I'll shove this crutch so far up your ass, it'll take a surgeon a month to get it out,\" Adam said in a low gruff tone.\n\n\"Yes Sir, sub level two briefing room, Sir.\" Adam noticed Woods' shivered a bit at the harsh threat.\n\n**********\n\nTanner Eason ruffled through the numerous after action reports of both SEAL teams and his own S.A.D operative. With the death of Garrett Brown, he knew he had to act fast in naming a replacement, and with a little guidance, one that would follow his agenda without thinking for himself. He was so engrossed with the reports and replacement names, the loud buzzing of the phone startled him.\n\n\"I thought I told you no interruptions,\" Tanner said with a callous tone.\n\n\"I'm sorry Sir. This is Woods at the front desk; the team just arrived and is waiting in the briefing room.\"\n\n\"Very well. Keep their rides at the front door, they won't be here long.\"\n\n**********\n\nJake Newton had his head leaned back with his eyes closed. Quick visions of the last time he was in this room watching the film of the Pandora effect on a lab rat took over his thoughts. He could see his friends face, how he handled the room full of SEALs. He prayed that whoever replaced him, would have the same high level of achievement that his friend Garrett Brown had.\n\n\"Hey Boss, I don't want to sound agitated here, but how long are we going to wait before we say fuck it?\" Carl asked as he shifted in his seat.\n\nAdam checked his watch, and then looked at his weapons expert. \"If they're not here in fifteen minutes Carl, we extract and find our own way home.\"\n\nJust as Carl and the rest of Alpha fire team checked their watches, the Director of the Central Intelligence Agency, Tanner Eason, strolled into the briefing room. He carried with him a small stack of papers and a few pens. After setting them down on the table, he stood upright and smiled at the group who just saved the human race.\n\n\"Dawson, you and your men -- oh and wife -- did a fantastic job. We've been checking the area and there's no sign the virus survived the explosion. Although I wish you wouldn't have had to blow up a warehouse to do it, it all worked out in the end.\"\n\nAdam glared at him with contempt. \"We lost two -- very -- good men on that take down, and you wish we didn't have to blow up a building?\"\n\n\"Don't take it the wrong way Dawson. We all feel the loss of Brown and -- I'm sorry what was your medic's name?\"\n\n\"John, John Henry Balch,\" Adam replied as he felt his anger begin to rise.\n\n\"Oh yes, now I remember. Like I was saying, we all feel the loss of Brown and your medic, but in this line of work, we have to be realistic when we deal with acceptable losses. I'm sure you can appreciate the idea of -- for the greater good.\"\n\n\"Is that why we're here, to debrief you on the loss of two of the bravest men I've ever met -- for the greater good?\" Adam clutched his fist repeatedly as the rage began to take over.\n\n\"This won't take long Dawson,\" he replied as he handed out papers to everyone.\n\n\"This is just a brief statement that I need you all to sign. In short, it states you won't discuss the facts of this mission or the knowledge of the virus with anyone. I don't need to tell you about security and all that, but regulations are regulations.\"\n\nJake leaned forward and placed his arms on the table. \"Mr. Eason, with all due respect, these men know what secrecy is. Telling them to sign a piece of paper to keep quiet is like telling a monkey to eat the banana. They know what to do -- Sir.\"\n\n\"Yes I'm sure they do, but rules are rules Mr. Newton. By the way, after a few days off, I'm reassigning you to the armory. I'd feel a lot better knowing that someone as capable as yourself is taking care of the arsenal we have down there.\"\n\nJake looked on in shock at being removed from the S.A.D. Adam too was astonished at the turn of events and was about to voice his loathing for the manipulative politician, when he noticed the door start open.\n\nTwo brawny men dressed in well-fitted suits entered. They scanned the room with a trained eye and then moved to the side. All heads turned at the intrusion into the meeting, and Tanner Eason was about to voice his objection to being interrupted, when he stopped short and stared.\n\nA tall man with light streaks of grey through his black hair entered the room. He had a stern look on his face as he looked down at the SEALs. The suit he wore looked tailored and fit the athletic man like a glove. His soft green eyes locked onto Adam Dawson as he stood between the other two men.\n\n\"Attention on deck!\" Adam screamed.\n\nThe SEALs jumped up stood like statues as Kristine slowly rose to her feet. Everyone stared ahead as Kristine continued to look at the man in the doorway. When he darted his eyes towards her, she felt a small twinge of humbleness at the unannounced visit.\n\nTanner Eason, being the true manipulator that he was, couldn't pass up a moment like this. \"Um -- Mr. President, what an honor it is to have you visit today. If I knew you were coming Sir, I would have met you when you arrived.\"\n\nHenry Walker shifted his focus to his appointed Director of the CIA. He knew the man had political ambitions far beyond managing the agency, but if you wanted to keep an eye on your competition, you placed them where you could watch them. With a quick smile towards Tanner, he walked in and pulled an open chair out.\n\n\"Since you men look pretty beat up, I won't leave you at attention forever. Stand easy SEALs.\" They all stood loose with their hands tucked behind them as they watched the President take his seat. Once he was seated, only then did they join him at the long shimmering oak table.\n\n\"Well, well, well, the great Lieutenant Commander Dawson. It's a pleasure to finally meet you in person. I must say, your reputation precedes you.\"\n\n\"Thank you Mr. President, I think.\"\n\nThe President looked just to the left of him at the petite woman seated by his side. \"I take it this is your lovely wife Kristine. It's a pleasure to meet someone with such capability, in such a small package.\"\n\n\"Um -- the pleasure is all mine, Mr. President.\"\n\n\"I don't mean to interrupt Mr. President, but I was just debriefing the men on the mission. I have to have them sign the confidentiality paperwork required for any member involved in a mission outside the agency,\" Eason said as he fidgeted with nervous anxiety.\n\n\"Oh I see, well rules are rules eh Tanner?\" The President locked eyes with Adam again. \"We can't have any -- misinformation -- leaking out to the public. What are your thoughts on that Mr. Dawson?\"",
        "Adam paused for just a split second, and then decided that being himself was the best course of action. \"Personally, I think Eason can't take that piece of paper and shove it up his ass. I'm a United States Navy SEAL and I know what my duty is to my country and my men -- Sir.\"\n\nThe whole team looked on in shock, as their team leader never blinked an eye and sat up a little straighter in his high backed leather chair. The President chuckled and tried to hide his smirk as he looked down at his folded hands on the table.\n\nTanner Eason however found no humor in the insulting remark and was beside himself. \"How dare you address him in that manner! I can't fathom why you're an officer in the Navy. I'm going to call your command and...\"\n\n\"Calm down Tanner, Mr. Dawson was just speaking his mind,\" Walker said as he looked at Adam. \"That -- Sir -- is a trait I sometimes miss in politics. Speaking of your men, I'm truly sorry at the loss of your medic, Petty Officer Balch. From what I've heard, he was a very gifted man.\"\n\n\"So was Director Brown. He never flinched when he told us to blow the building,\" Adam added.\n\n\"I'm setting up a private memorial service for him here at Langley. He had no family to speak of, he treated his men as his family so I thought it would be fitting to say goodbye here.\"\n\n\"Oh,\" Kristine sobbed as she brought her hand to her mouth to hide her quivering lips.\n\n\"Mrs. Dawson; feeling sorrow for a fallen team member doesn't fit the bill as the cast iron -- person -- I've heard about. I'm rarely surprised in my current position, but maybe the reports about you have been somewhat misleading.\"\n\n\"Sorry Mr. President, he was a good man.\"\n\n\"Yes Mrs. Dawson he was, I just wish I could do more for him other than a shiny piece of metal and a star out front on some board.\"\n\nAdam pushed his chair out and stood then placed his crutch on the arm of the chair. As he limped towards the President, he grabbed Carl's chair for balance. He realized that this was neither the time nor place for this, but something inside him screamed for a reckoning of the price paid by his teammates.\n\n\"Something to add Mr. Dawson?\" the President asked as he watched Adam steady himself.\n\n\"Yes Sir, before Garrett gave his last full measure of duty, he asked me to do a favor for him.\"\n\n\"If there's anything I can do to make it happen, you just say the word and it's done,\" Walker offered.\n\nAdam stood next to Director Eason, and with care, moved his right hand down to an open pocket on his fatigues. In an extraordinary display of speed, he shoved his fist just behind Tanner's eye. Adam's powerful blow crushed the bureaucrat's temple, as the Director's eyes slid sideways and his body spun out of control. After crashing in an unresponsive mass to the floor, the Navy SEAL looked at the President of the United States. His expression still fueled by the fuming rage inside him.\n\nThe Secret Service agents by the door moved towards Dawson and he took a step back. The other members of Alpha fire team stood in haste and faced the two agents. President Walker's hand shot up towards his bodyguards and he cocked his head.\n\n\"Stop! Nick, Fred, if these men meant any harm to me at all, I'd be dead already. You go after Dawson for doing something most of us have wanted to do for three years; his team here will make sure you regret it. Now let's all sit down and talk about what happens next.\"\n\nAdam looked down at the unconscious CIA Director. \"That was from Garrett Brown, you spineless son of a bitch.\"\n\n\"Well, now that we have that out of the way. For the record, you and your team have been on training maneuvers with the British government. Off the record, your country owes you a debt that she may never be able to repay,\" Walker said.\n\n\"We were doing our jobs -- Sir,\" Jake muttered.\n\nWalker looked down the table at the lone S.A.D. man who was helpless to save his boss. He softened his posture and pondered what kind of feelings the young man was going through. Even though he was in the military in his younger days, Walker had trouble coming to grips what that kind of devotion took, to watch your friend die, knowing you couldn't do anything to stop it.\n\n\"You must be Newton, Brown's point man,\" Walker said.\n\n\"Yes Sir, Jake Newton.\"\n\n\"Your boss was a pretty good leader.\"\n\n\"One of the best Mr. President.\"\n\n\"You think Eason here is going to replace him with someone that might get you killed? That is if he ever wakes up again,\" the President chuckled hard.\n\n\"Not me Sir, I'm being transferred to the armory. I guess I'm not good enough anymore for missions,\" Jake said as he glared at the body of Tanner Eason.\n\n\"You're not going to the armory, Mr. Newton. Before I came over, I picked up your new boss. Fred, would you please go fetch the Director of the Special Activities Division for me.\"\n\nThe Secret Service agent cracked opened the door and motioned for someone in the hall to come in. When the door was pushed opened, a salt and peppered haired man walked in and he gave the men seated at the table a ridged look. His bright gold tie contrasted hard against the white starched shirt and Navy blue suit. The older man looked more like a business executive than a special operative.\n\n\"Well you fucking clowns look like shit. Haven't you ever heard of safety first?\" Neal Hawkins strolled over towards the fallen body of Tanner Eason. \"Well I guess I'll say hi to him later on.\"\n\nAdam jumped up and hopped towards his longtime companion. \"What the hell are you doing here Neal? I thought you retired?\"\n\n\"Like I told you in Aviano, guys like us don't fish -- we hunt,\" Neal said as he shook hands with the fellow SEAL.\n\n\"I hope you approve of my choice for a new S.A.D. Director, Mr. Newton. I have a feeling you're going to get more than you hoped for.\"\n\n\"Yes Sir, I think I can whip the old man into something useful,\" Jake replied with a huge smile.\n\n\"What about you Mr. Dawson? It's no secret the teams have had a -- how do you SEALs put it -- hard on for the CIA.\"\n\n\"No problem here Mr. President,\" Adam said as he smiled all the way back to seat.\n\n\"I'm glad to hear that, it will come in handy with the next bit of news,\" Walker said as he reached into his jacket. The President pulled out a large stuffed envelope and tossed it towards Adam. The SEAL picked it up and looked back with a confused look. \n\n\"First things first. Lieutenant Commander Dawson, you and your team have a one-month leave, off the books of course. I don't care where you go or what you do, just don't talk about Pandora. If you wouldn't mind going over my proposal during that time, I'd appreciate it. I expect your answer at the completion of your leave.\"\n\n\"With all due respect Mr. President, I don't like surprises and neither do my men. Why don't you just tell me what you're thinking?\"\n\nWalker turned his head towards his new Director. \"It was your idea, you tell him Hawkins.\"\n\n\"The whole idea is outlined in there Adam. It's an idea I've been working on for the past few years. We want you to start up a brand new SEAL team. You're recruits won't come from Coronado, they'll be hand-picked by you from any SEAL team in the fleet.\"\n\n\"And just what may I ask do you want this -- new -- team to do?\"\n\n\"Black ops, you'll be allowed to let your hair grow as long as you want, grow a beard for all I give a shit. No one will know who you are, or what your job is. You'll be assigned missions that are off the books and no one else can handle out of the five teams.\"\n\n\"Okay I'll look it over. The President's personnel shit squad huh,\" Adam said as he flipped the envelope in his hands.\n\nWalker leaned over towards Adam. \"As a matter of fact Mr. Dawson, I was thinking more along the lines of SEAL Team Six, although shit squad is catchy too.\"\n\nKevin Dvorska's residence, Virginia Beach, Virginia.\n\nLaura sat on the couch, her small hands clasped together, as the thoughts raced through her mind. The phone call from Kevin was short and the only thing he could tell her was he'd be home today. She picked up the remote and turned on the television. After flipping through the channels, she turned it off and tossed the remote on the small coffee table just in front of her.\n\n\"Come on, you should have been home by now,\" she muttered as she checked her watch.\n\nShe laid her head back and closed her eyes. As her head contacted the overstuffed couch, she felt the blond wig that hid her burn scars from childhood shift just a touch. Laura reached up to adjust it when she was startled by a sudden knock on the door. She cursed the unwanted intrusion, and marched to the door in hopes of getting rid of the individual in short fashion.\n\n\"Whoever you are, you need to leave. My boyfriend is coming home and I don't need visitors,\" she whispered, as she placed the safety chain on and opened the door.\n\nWhen she peaked outside, a blazing smile crossed her face and with a quick motion shut the door. Once the chain was free, she threw opened the door and ran outside. She gave the young man a quick hug, and then looked around the parking lot.\n\n\"John, welcome home. Now where's that big hunk of a man I've been waiting for?\"\n\nJohn Balch held a small package as he joined her in searching the parking lot. He knew there was little time to sit down and chat with her, Kevin would be arriving within minutes. Gabriel gave him permission to do this one favor, as long as none of the other team members from Alpha saw him.\n\n\"Um -- I got out of the debriefing a few minutes early. The others are right behind me Laura, so Kev should be here very soon. I just wanted to stop by and drop this off for my little buddy,\" he said as he handed her the small brown wrapped package.\n\n\"I'll make sure he gets it John. Do you want to come in and wait for him,\" she said as she stepped to the side.\n\n\"That won't be necessary Laura,\" he said with a wave of his hand. \"I need to get back home too. Just tell him Gabe sends his regards, he'll know what you mean.\"\n\n\"Okay, anything for one of the guys.\"\n\nJohn started to walk away but hesitated briefly before turning around and facing the once small girl he watched over during a fateful night long ago. \"Oh I almost forgot, just one more thing Laura.\"\n\nJohn walked back to her and wrapped his arms around her, giving her a gentle hug. Laura returned the gesture, as she laid her chin upon his muscular shoulder. As she hugged John back, she began to feel a strange warmth wrap around her.\n\n\"Wow, you're really warm. You should head to the club and see about taking care of that fire Mister,\" she said with a small laugh as she stepped back.\n\n\"Maybe I will, take care of yourself Laura and make sure Kevin gets that.\"\n\n\"Sure thing, see ya soon John,\" she said as she walked back in and closed the door.\n\nLaura tossed the package on the table, and went to the kitchen to get a bottle of water. As she pulled the insulated door open, she could still feel the warmth from John's hug, even with the chilled air coming from the open refrigerator.\n\n\"Now that boy's got a heater to give some girl on a cold night,\" she thought as she closed the door and entered the living room.\n\nShe was just about to sit down, when the front door opened and the man she gave her whole heart to, came walking through. As their eyes met, time stood still for both of them. The love they shared for each other knew no bounds, even with the secrets they both hid from the world around them.\n\n\"Hi Honey, I'm home,\" Kevin said as he held out his powerful arms.\n\nLaura took just three steps before launching herself into his waiting arms. She hugged him as tight as she could as she wrapped her slender legs around him and squeezed. Kevin groaned as he felt the pressure increase, and she relented her hold on him as she softened the embrace. The young woman leaned back but left her legs and arms wrapped around her werewolf boyfriend.\n\n\"God I've missed you so much. I've been dying for you to get home since you called me from London.\"\n\n\"Is that right, I couldn't tell,\" Kevin said as he swung her back and forth with care.\n\n\"Oh you evil werewolf you. Don't make fun of me, I can't help it.\"\n\nKevin let her down and walked to the kitchen for a drink. As he walked back to be with his love, he felt the moisture dampening his short sleeved shirt. It had been a long trip and even longer day. He knew a hot shower was the first thing on the list.\n\n\"I must smell like an old rag factory. I'm gonna get cleaned up before we get into the welcome home party.\" Kevin waved his hand in front of his face in mock disgust.\n\n\"I'll go get the shower ready for us baby. After that we need to sit down and talk about stuff.\"\n\n\"Oh, oh, now what have you gotten yourself into?\"\n\n\"Later sweetheart, right now I just want to feel you against me,\" she replied as she walked with hurried steps to the bathroom.\n\nKevin stretched as he sat the beer down on the coffee table. He noticed a small package on the table mixed in with some bills and papers. \"I'll go through that shit later, shower first.\"\n\nAs Kevin pulled his shirt off, he noticed Laura leaning out of the bathroom entrance. Her shirt was unbuttoned and her perky breasts stood out for his viewing pleasure. She caressed the supple mound of flesh, as she smiled with an air of seduction. In sudden remembrance, she bolted upright and paused in the manipulation of her body.\n\n\"Oh, I almost forgot baby, John was just here. He left a package for you on the coffee table, and said to tell you some guy named Gabe said hi.\"\n\nKevin looked on in shock at his true love. \"What -- what did you just say?\"\n\n\"John was just here. He left just a few minutes before you got home. Didn't you see him on the way in?\"\n\nKevin darted for the front door and threw it open. He scanned the area as he stepped out onto the steps. He found no trace that the guardian angel was anywhere around. He ran back in and shut the door with unnecessary force, looking at his stunned girlfriend.\n\n\"What's the matter Kevin? You look like you've just seen a ghost,\" she asked, her face full of confusion.\n\n\"What did he want Laura? What did he say?\"\n\n\"Nothing sweetie, he just wanted to drop a package off for you. It's right there on the table. Now if you don't mind, I want to get in the shower with you before all the hot water is gone,\" she said as she walked back into the bathroom.\n\nKevin ripped the brown wrapping apart and held the paperback book in his hands. He flipped it over and looked at the cover. The photo of the Congressional Medal of Honor adorned most of the cover, and then he noticed a small piece of paper tucked between the pages. He thrust the book open and removed the note.\n\n\"Hi Kev, thought you'd like to know why I was chosen. Take care of yourself and Laura. She's something pretty special.\n\nJohn.\"\n\nKevin looked down at the page and gasped in shock. In large bold letters, was the name of a recipient of the nation's highest award. His eyes misted over as he began to read the citation.\n\nBalch, John henry.\n\nPharmacist's Mate First Class, U.S. Navy. Place and Date: Vierzy, France, and Somme-Py, France, 19 July and 5 October 1918. Entered Service At: Kansas City, Mo. Born: 2 January 1896, Edgerton, Kans.\n\nCitation:\n\nFor gallantry and intrepidity at the risk of his life above and beyond the call of duty, with the 6th Regiment, U.S. Marines, in action at Vierzy, on 19 July 1918. Balch unhesitatingly and fearlessly exposed himself to terrific machinegun and high-explosive fire to succor the wounded as they fell in the attack, leaving his dressing station voluntarily and keeping up the work all day and late into the night unceasingly for 16 hours. Also in the action at Somme-Py on 5 October 1918, he exhibited exceptional bravery in establishing an advanced dressing station under heavy shellfire.\n\nKevin placed the book on the table and looked up. \"Thank you for your service Petty Officer Balch,\" he whispered as he wiped a tear from his cheek.\n\nKevin was ripped from his thoughts of the team's guardian angel as he heard Laura's startling scream. He darted to the bathroom door and flung it open. What he saw took his breath away, as he stared at his love trembling in front of the mirror.\n\nShe turned to him; fear and bewilderment occupied her searching eyes. Kevin couldn't find the words to tell her what was happening. There was only one explanation of why her scars that she lived with since she was a little girl were now gone. What remained was healthy smooth skin, sparkling with small vibrant specks of hair starting to peek out.\n\n\"How -- what's happening -- I don't...\"\n\nKevin placed his finger upon her trembling lips. As he slid his hand across her face, his loving eyes calmed her, but yet, he could not find the words that belonged to the emotion bursting from his heart. If anyone in this world deserved a new lease on life, a small gift from heaven, it was his true love. She believed in him, accepted him, loved him with all her soul, even with the knowledge that he was the world's most efficient killing machine.\n\nKevin dropped to his knees and wrapped his arms around her slim waist. A feeling of peace warmed his body, as he felt her delicate hands stroke his hair, then pulled him close to her body. He knew at that very moment, his life was complete, and he needed nothing else but her.\n\nLaura eased his head back and looked down at her soul mate. The loving emotion etched into his tan face, made her realize that this one man, this one caring soul, saw the beauty inside her, when others turned in disgust, or laughed with mock. She felt a twinge of self-pity at having to hide those scars. Not only the external ones, but also the ones you could not see with the naked eye. Her bottom lip quivered as she gazed upon him with all the love her heart held within it.\n\n\"I don't pretend to understand what's happening, but maybe somewhere, somehow, this is happening for a reason. I was waiting for later to talk to you, but something is driving me, and I have no words to describe it. I love you so much Kevin; I can't imagine a life without you by my side.\"\n\n\"I feel the same way Laura. I love you with all my heart and I'll always be there until I take my last breath,\" he said as the wetness began to fill his eyes.\n\n\"I hope there's enough love in your heart for both of us.\" Laura waited for the news to strike him, as she looked on in hope.\n\nKevin glanced at her belly, and then back to his lover's eyes as the tears now flowed freely down his face. As his soul mate joined him in release, Kevin placed her soft hand in his, and kissed it with trembling lips.\n\nHe tried to focus on her face, but found it difficult. The salty liquid that flowed down his face blurred his sharp vision. Blinking his eyes rapidly, he stared at the woman he would gladly lay down his life for. \"Will you marry me Laura?\"\n\nLaura's body began to quiver when she heard the question that she prayed for, believed in against all odds, but thought the tender moment was abandoned to her forever. Her own tears dropped with light splashes, onto the tender face looking back at her, as she leaned down to kiss the beast, who took a leap of faith for love.\n\n\"Yes.\"\n\n*\n\nWell, there it is everyone, all 91,000 plus words of it. I hope you enjoyed 'The Pandora Effect' as much as I enjoyed writing it. I know I didn't put many sex scenes in this story, although I could have sent Carl across the street for a quickie but he was tad busy at the time. I pray the Literotica readers won't take it out on me too bad. For those of you that wanted Laura and Kevin's dream to come true, there you go. Thank you again everyone for making the last few years very memorable for me. I must have said it a dozen times, but it still rings true -- the nonhuman fans are the best. Don't forget to vote so I know how I did and please; enjoy your journey, you never know where it will lead you."
    ],
    "authorname": "boneams",
    "tags": [
        "werewolves",
        "seals",
        "angels",
        "cia",
        "virus"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-pandora-effect-ch-08"
}