{
    "title": "Miracle on RR34 Ch. 03",
    "pages": [
        "Disclaimer: All characters portrayed indulging in sexual activity are 18 chronological years of age or older. Any resemblance between these fictional characters and actual people is completely intentional and meant for parody. Reviews are welcome, flames will be ignored. \n\nThis was done as a request for someone and it's dedicated to them. They know who they are. \n\n*** \n\nChapter 3- Christmas Wishes \n\n\"How the hell do you drive this thing?\" Ginny called in a panic, her eyes wide as she held onto the reigns, twisting them wildly as she tried to steer. Up ahead of her, eight large reindeer squealed and thrashed their heads. The sleigh corkscrewed while it hurtled through the cold night air, the moon shining down on them. \n\n\"Well, first of all, stop panicking,\" Santa replied as he stood on the back of the sleigh, atop his huge red sack of toys. He was more or less back to his original size she had become accustomed to, now that he had sent his other 'iterations' of himself out over the globe to deliver presents. \"That would be an excellent start.\" \n\n\"Easy for you to say,\" she snapped, scowling back at him for a moment since taking her eyes off her designated path seemed to make no difference to how she was doing at navigating. \"You're used to doing this!\" \n\n\"Trust me, between the two of us, you're the one with the easy job right now and I'd be happy to trade,\" he called back as he ducked wildly. A comically large rocket thundered by, with an evil-looking man strapped to the bottom of it, swinging a weapon wildly to hit Santa. \"Try to keep her steady!\" \n\n\"While dodging psychos on rockets, no problem!\" she grumbled, trying to ignore the howling wind and roaring prrojectiles. \"Have I mentioned Krampus is a gigantic asshole?\" \n\n\"Repeatedly,\" Santa answered, watching warily. The sky was threaded with jets of fire as their enemies kept coming about in ponderous, elliptical arcs and heading back towards them, intent on their destruction. They had only just pulled off from the smouldering remains of Ginny's country chateau when the assault began. Krampus was nowhere to be seen, but his minions were clearly determined to avenge him. \"Maybe urinating on him wasn't such a good idea. He never did take humiliation well.\" \n\nGinny squawked in alarm and ducked as a rocket streaked right at her. Santa jumped in the air, doing the splits to avoid the projectile and landing back on top of his present sack. Another tried to pull up alongside them but Santa grabbed the harness the man was wearing and wrenched the rocket off course, sending it speeding into one some distance away. Both rockets (and presumeably their pilots) exploded in a violent orgy of noise and flashing lights. \n\n\"Really hope people just think those are fireworks,\" Santa muttered as he looked glared balefuly at yet another rocket considering approaching. \"Fireworks right in the middle of the world's most spastic meteor shower. Sure, they'll buy that...\" \n\n\"Funny part is I can't tell if you're serious,\" Ginny said loudly. \"If they don't believe that narrative, then they've gotta accept that Santa Claus was engaged in an epic air battle over their town with quantum men strapped to rockets.\" \n\n\"Truth is often stranger than fiction,\" Santa agreed, nodding. \"Fighting these jerks off is taking too much time!\" \n\n\"Well, don't you have anything in your back of tricks there?\" Ginny asked. In spite of the sleigh being open, it seemed to have some weird form of climate control and she'd been getting rather warm. To that end she'd pulled down her top, exposing her breasts to cool herself off. The breeze allowed through made her nipples tingle deligthfully, but not enough to distract her from driving the sleigh. \n\nAfter all, she often drove ninety minutes to her job wearing a vibrating insert in her panties, so she knew for a fact she could orgasm and still control a vehicle. \n\nA wheeled one, at least. She wasn't so sure about a sleigh doing Mach Three at twenty thousand feet. \n\n\"You mean a weapon?\" Santa asked. \"In the bag full of toys for kids?\" \n\n\"You gave me a nerf gun out of that bag and it turned out to be some sort of doomsday device, didn't it?\" she pointed out. \"Scary lightning bolts everywhere. I refuse to believe you don't have some other goodies in there.\" \n\nSanta shrugged and squatted down to look inside the bag, getting narrowly missed by another rocket that shot over his head. The pilot cursed and came around again, aiming directly at the chassis of the sleigh from the side. Ginny's eyes widened in fright as she saw him approach. She jerked the reins to one side and the sleigh tilted ninety degrees, presenting its wide, flat red underside. The rocket slammed into it and exploded. Whatever it was made of or whatever shielding was in place, Ginny only heard the detonation and felt a rumble, but there was no damage aside from that. \n\n\"Ha!\" Santa said, standing tall and holding an electric guitar in the air- its black body gleamed in the moonlight. He put the strap around his neck and took several seconds to tune it, ignoring the aerial mayhem that swirled around him. \n\n\"The hell are you going to do with that?!\" Ginny asked, scowling as she looked behind to see what he was up to. \n\n\"You said to find something, I found something,\" he said simply as he checked the pickups. \"Now let's see what we can do here...\" \n\nHe took the pick in hand and strummed it across the strings- a screeching pulse of sound blared out from the instrument, heading in all directions. It struck several rockets nearby, which exploded brightly. Other were knocked off course, spiralling around crazily as they fought for control. Santa laughed loudly, apparently enjoying himself. \n\n\"Quit laughing and kill, red man!\" Ginny yelled, nonplussed by his amusement. \"I want to survive the night and I've had several close calls with death already!\" \n\n\"I'm working on it, Virginia, patience.\" Santa chided, adjusting the tuners momentarily. \"Near-death experiences make you cranky.\" \n\n\"No shit, Sherlock,\" she grumbled as he blasted out another screeching wave of sound. \"Do you plan to play anything or just keep shrieking out that one sound?\" \n\n\"As you wish,\" he said cheerfully, pleased to be doing as she asked. Making her happy was all he cared about. He began playing a heavy metal version of Wagner's 'Ride of the Valkyries', the pulsing walls of sound thundering out and striking every foe within hundreds of meters, causing several to detonate and others to be knocked in random directions. \n\n\"Seriously?\" she called, looking back at him. \"Metal?\" \n\n\"What were you looking for, Katy Perry?\" he answered, continuing to play. \"Now there's a naughty girl.\" \n\n\"I'm sure I don't want to know.\" Ginny said, cutting him off before she heard about his sex with Katy Perry. She didn't begrudge him fucking other girls, he was Santa after all, but she didn't need to hear about them. \"Can I try that after a bit? I was in a band in high school, you know, I was the bassist.\" \n\n\"Yes, and you absolutely sucked,\" he responded, pointing the headstock at an enemy and releasing a powerful bolt of coruscating energy from it, vaporizing the target. \"You only got in at all because you were blowing the guy who was the singer. And you were naughty because he was supposed to be going steady with the girl who was the rhythm guitarist.\" \n\n\"Is that why I got sweaters that Christmas?\" she exclaimed. \"I wanted a real bass and I got fucking sweaters! Because I made Brad cheat on Kendra?\" \n\n\"Guilty,\" Santa said simply, nodding and firing off another blast. \"That and you lied when she confronted you about it. Helluva chick fight afterward, though.\" \n\nGinny sighed. \"Well, you can't lie, so I now know I sucked at playing the bass. Is there any instrument I could be good at?\" \n\n\"I'm pretty sure I've got a kazoo in here somewhere...\" he answered. \n\nThe sleigh did a sudden barrel roll, twisting several times in mid-air. \n\n\"Wow, nice dodge move.\" Santa said, impressed. \n\n\"I wasn't dodging,\" Ginny grumbled. \"I was trying to see if I could dump you out of this damn thing.\" \n\n\"Oh,\" he mused, not quite sure why, for the fortieth time tonight, Virginia was annoyed with him. \"Sorry, it doesn't work like that. The sleigh can't throw me.\" \n\n\"Clearly.\" \n\nShe went back to driving, trying to ignore the chaos whirling about them. She didn't even really know where they were headed, she was just pointing the reindeer in the direction indicated by the GPS. She frowned as she counted the reindeer. \n\n\"I only count eight.\" Ginny remarked. \n\n\"Yes, that's right.\" Santa agreed. \"What's the problem?\" \n\n\"Well, where's Rudolph?\" she asked. \n\nEverything went silent for a moment, only the wind going by them making a sound. Somehow the reindeer seemed quieter, and they hadn't even been talking. \n\n\"Virginia, there's only one rule about Rudolph.\" Santa said quietly. \"Don't talk about Rudolph.\" \n\n\"Uh... okay...\" she said, wondering what the hell that had been about. \"Sorry.\" \n\n\"No harm done, everybody gets a freebie there.\" Santa said, his jovial demeanour returning. He began playing again, this time a lively rendition of a song by Queen. \"I taught Brian May everything he knows!\" \n\n\"Well okay, even if I suck big floppy donkey dick at music, isn't there anything I can do back there while you drive for a bit?\" she asked. \"My ass is getting sweaty!\" \n\n\"I don't see why not,\" Santa replied, nodding while crunching his way through Metallica's cover of 'Whiskey In The Jar'. \"You can poke around in the bag and see if anything sings out to you.\" \n\n\"I wouldn't be amazed if something did actually do that,\" she sighed, putting down the reigns. The deer slackened their pace as she clambered over the back of the seat and onto the huge sack of toys that bulged in the rear. Santa put an arm around her protectively and she drew in a deep breath as she looked out through the night... \n\nShe couldn't see anything but a vast expanse of ocean beneath them. The moon and stars glittered overhead, the galaxy turning around them. She turned and looked up into his eyes, putting a hand on his chest. He smiled down at her. \n\nThe kiss they shared as they soared over the Atlantic was captured in the reflections of the waves far below. \n\n*** \n\nSanta was a much steadier driver than Ginny, as it turned out, able to confidently perform complex maneuvres at several times the speed of sound. To be fair, he had centuries of practice and made sure Ginny knew that when he finally took over the reins. \n\n\"Nice of you to say that,\" she mentioned as she stood in the back atop the mound of presents. \"Never driven a sleigh before, except for the make-believe one my dog pulled me around on.\" \n\nShe had found another gun, but this one didn't look so ridiculous, it had a very sci-fi feel to it and the black metal gleamed mencingly. She felt like Ripley in Aliens, she just hoped she didn't look quite so butch. \n\n\"Not in that outfit, you don't.\" Santa called back, referring to her sexy-elf clothing she was wearing. \n\n\"Stay out of my mind, creeper,\" she said, scanning the sky warily. \"You won't always like what you find in there.\" \n\nShe turned and pointed the gun at another freak on a rocket, pulling the tigger. A hissing shriek accompanied the blast of plasma it fired, charring the pilot and causing the rocket to explode. She warily looked at the barrel of her weapon. \n\n\"What can this thing actually do?\" she asked. \n\n\"Well, it's no wave motion gun, but it might give the Yamato's shock cannons a run for their money.\" Santa replied, still driving. \"It's not like Krampus has a helicarrier or anything.\" \n\n\"Where is Goatse anyway?\" she wondered, pointing the weapon at a distant foe and firing off another volley. \"He's gotta be awake by now. Will he come after us in a rocket?\" \n\n\"No,\" Santa laughed. \"When he does care to leave the safety of the ground, he rides around in some ridiculous Steampunk balloon-dirigible thing, painted all black and deep purple.\" \n\n\"Wow, emo much?\" Ginny muttered. \"That's the dumbest thing I've ever heard.\" \n\n\"He'll stand on the deck and yell curses while firing off these old-school cannons at me and then he gets super mad when I can't stop laughing.\" \n\n\"Well, if he's pants-on-head retarded enough to show up in that thing, I'll blow him right out of the sky for his troubles.\" Ginny declared, putting down her gun and rummaging around inside the bag again. She pulled out a long pole made of hard wood. On each end was a curved blade like a sickle. She looked over at Santa, her eyebrow raised. \"The hell, dude?\" \n\nSanta shrugged. \"What? Shaolin monks get presents too, you know.\" \n\n\"I know, I know, if they're good.\" Ginny sighed. She heard another rocket approaching and whirled around, swinging the lajiatang almost like it was a baseball bat and cleaving the rocket clean in half. The pilot yodeled in fright as he plunged into the darkness below. \n\n\"Do they all scream like Goofy when they die?\" she asked, kneeling now and looking over the side, her butt in the air and exposing her tiny red thong. \n\n\"Admittedly I haven't really kept track,\" Santa said. \"Not exactly a concern of mine.\" \n\n\"But... aren't they your children too?\" she asked, now curious. \"I mean, sure, they've gone to the Dark Side and work for Dickface now, but does that mean you can kill them?\" \n\nSanta snorted. \"I'd never kill any of my kids, Virginia. Those beings aren't human. They're extra-dimensional, to keep it simple. They just look human when they exist here, to do his bidding, but they come from another dimension, like the Great Humpkin.\" \n\n\"Uh, don't you mean 'the Great Pumpkin'?\" Ginny corrected. \n\n\"Nope, I meant what I said,\" he confirmed. \"Guy's a huge pervert.\" \n\n\"Wow,\" she breathed. \"Poor Linus.\" \n\n\"Well, we seem to be in the clear for now,\" he mentioned, sighing in relief. \"I don't think the fuel in their rockets will carry them this far out over the ocean. You can move back up here if you like.\" \n\nGinny grinned happily and put down her weapon, wiggling back to the front of the sleigh. He put his arm around her and she snuggled up against him. It felt so comforting and right, to be held by him this way. \n\n\"Ever been given sleigh head, big guy?\" she purred, smiling up at him slyly. \n\n\"Well, no,\" he chuckled. \"I don't have a lot of my kids riding in my sleigh.\" \n\n\"Well, this kid is going to take your sleigh head cherry, then...\" she said with a wink, crawling between his legs and kneeling in front of him in the foot well. She was delighted to find there was enough room for her to kneel comfortably. She pulled down his red pants slowly, smiling up at him. His huge cock was waiting for her, swelling but still soft. She took it in her hands and began caressing it gently. It felt so smooth and the gentle pulse or throb seemed to match her own heartbeat. \n\nShe leaned down and kissed the head almost lovingly. Without hesitating, she slid him down her throat, humming along the way. She knew she'd never understand the magic or weird physics behind why such a monstrosity wasn't choking her and felt so natural, but she didn't care, either. With a practiced abandon, Ginny began bobbing back and forth on Santa's cock, shivering in wet delight as he grew hard in her mouth. \n\nThe exquisite, moist heat she felt throughout her body was unlike anything she'd felt before tonight and she knew she'd never get enough of it. Thousands of meters up in the sky, the midnight vault and stars turning over them, she was aware of only him and her overwhelming desire to cum. Her tongue swirled around the throbbing shaft while her fingers teased his sac gently. \n\n\"Can you drive this thing if I sit in your lap?\" she asked, smiling up at him, pulling her mouth off his cock and stroking its length with her little fist. \"I'm thinking I need a really good fucking right now.\" \n\nSanta looked down at her and grinned. \"We've got about thirty minutes before we're over Reykjavik and our first port of call, so yes, if you think half an hour is enough to banish your horny demons...\" \n\n\"Ooh, so we're handling the deliveries in Europe?\" she asked, pumping his cock a little more exictedly at the prospect of visiting the Old World, something she'd never done but always wished to do. \n\n\"Some of them,\" he answered, shrugging. \"There's gonna be a lot of back and forth all over. My iterations are not exactly assigned to regions, more like times and good to naughty scales.\" \n\n\"So, we could be over Paris, France for one kid and then over Green Bay, Wisconsin, for another?\" she queried. \n\n\"Not Green Bay,\" Santa said, his tone suddenly very dark. \"I'd rather made my deliveries in the stinkiest part of a Turkish prison.\" \n\n\"Not that I actually care, but what's wrong with Green Bay?\" Ginny asked, intrigued, continuing to stroke his cock and sliding her tongue up and down dutifully while she listened. \n\n\"Hate that place,\" he muttered. \"Too many sport hunters. And the idiot dads name their boys Hunter. Hunter or Logan. There's too much cheese for any of those little fatties to grow up to be Wolverine. And all the girls are named McKaela or McKenzie or McDoodle or crap like that. I quit doing shopping mall appearances and contracted out because dads kept getting their boys to ask me if I could make the Packers win the Super Bowl.\" \n\nGinny snickered. \"So how do the kids get their presents?\" \n\nHe shrugged. \"I get some elves to sneak in and leave the presents, along with notes of rebuke to the dads who are fat-bellied hunters.\" \n\n\"Why, Santa, I didn't know you were such an animal rights activist,\" she purred as she slowly stood and turned herself around, pressing her ass against his massive cock. She ground around on him for several seconds before she felt the head split her damp lips and penetrate her. Ginny sighed in relief as she sank down onto him, all the way to the hilt. She couldn't get over how blissfully full she felt. \"So you object on moral- ooh!- moral grounds to the killing of animals?\" \n\n\"Well, mostly the deer,\" he admitted, continuing to drive as Ginny started to slither up and down on his lap, her wet pussy swallowing his cock hungrily. \"Not too worried about all the cows, they're even bigger jerks than squirrels and cats.\" \n\nGinny giggled and leaned forward on the golden handlebar, shuddering in pleasure as she changed the angle of penetration. \"So you... can't make the Packers win the Super Bowl?\" \n\nSanta shrugged. \"Nope. Showing Brady how to deflate footballs turned out to be a mistake, he promised me he wouldn't use those techniques for evil. Don't ask what he got in his stocking. Can't make the Maple Leafs win the Stanley Cup, either.\" \n\n\"I thought... you could make... anyone's Christmas wishes come true...\" she panted, bouncing her ass on his lap as she fucked him with her pussy greedily. In spite of the icy winds around them, she was sweating like a hooker in church. \n\n\"Only from a certain perspective, and only if no dishonesty is involved.\" Santa replied, tilting his hips up to pushing further inside Ginny, making her gasp suddenly. \"It's like...\" he mused, trying to think of an example. \"Well, picture yourself as the office slut.\" \n\n\"Okay, I'm there.\" Ginny moaned instantly. \n\n\"That was way too easy for you,\" Santa chuckled. \"Anyway, let's say there's some guy in the office you want to fuck. I can't just change his mind for you, but my lab could invent a body spray that shoots your phermone levels through the roof and he's hard for you from a mile away.\" \n\n\"Gnnnn, just think of all the guys I could fuck...\" she rasped. \"I could have a different dance partner every night of the week.\" \n\nSanta nodded as Ginny picked up the pace, driving herself down on his erect cock with more and more force, her ass cheeks slapping against his thighs loudly. Her teeth were clenched as she fought to delay the mind-blowing orgasm that was approaching. ",
        "\"Oh, God...\" she choked, gripping the sleigh's handle desperately. \"Oh, shit, I'm gonna... Santa!\" \n\nHer back arched and she screeched through gritted teeth as she surrendered herself to orgasmic rapture. Maybe it was the thin air at twenty-thousand feet, but a swirling, light-headed delerium washed over her as her pussy clenched around her lover's cock, which throbbed and spurted deep inside her. She could feel his hands gripping her hips tightly as she ground onto him with a ferocious need. The strangely cool-yet-warm feel of his cum inundating her was a euphoria that no earthly pleasure would ever match. \n\nShe collapsed back against him, chest heaving and still pinned on his cock, which her pussy greedily refused to release. She pressed the back of her hand to her forehead, sighing in immense relief and satisfaction. \n\n\"Just when I thought it couldn't get better...\" she sighed, lost in bliss. \"You certainly know what a woman wants.\" \n\n\"I aim to please.\" Santa said cheerfully, putting one arm around her waist and holding her close while he guided the sleigh. \"Think we might've sated you for a while?\" \n\n\"Mmmm, maybe for a bit, right?\" she purred, stretching like a cat before sitting forward and looking down over the earth, lit by clusters of lights that punctuated the darkness of Christmas Eve. It wasn't long before she began to giggle. \n\n\"Schilling for your thoughts.\" Santa said, giving her breast a squeeze. \n\n\"Well, you probably don't remember, but we've met before,\" she mentioned lightly, turning her head to wink at him. \"I sure remember it.\" \n\n\"Oh? Do tell.\" \n\n\"Well,\" she said casually, her thoughts drifting back. \"I was sixteen and my girlfriends and I were at the mall. We saw you and decided to sit on your lap. So Cari and I were sitting on you at the same time, squirming our asses on you and kept whispering naughty things in your ears, things we wanted to do to you, you know?\" \n\nSanta didn't respond for several moments. \"See?\" Ginny said, smirking. \"Told you that you didn't remember.\" \n\n\"What... was the date of that, Virginia?\" he asked warily. \n\n\"December fifteenth, eight years ago, about seven-thirty pm,\" she said. \"I still have a photo. Why?\" \n\n\"Because I wasn't in your city on December fifteenth eight years ago,\" he said with reluctance. \"I was in Lahina on Maui, judging a naked limbo contest at a luau.\" \n\nShe was silent for some time. \"You're... you're sure?\" \n\nSanta nodded. \n\n\"Oh, God...\" Ginny whispered, her eyes distant. \"That means that Cari and I were grinding on some creepy mall Santa... oh, shit, I could feel him getting hard and everything!\" \n\nGinny scrunched her face up in revulsion and was flapping her arms in horror. \"Oh, God. Bleh! Bleh! Blehblehblehblehblehbleh!\" \n\nSanta's roaring laughter echoed through the darkness as his date for the evening struggled to not puke off the side of the sleigh and onto the unsuspecting town below. \n\n*** \n\nShe always kind of assumed that the sleigh made little or no noise when it touched down on a roof. After all, what kept some survivalist gun nut from trying to blow Santa away with his collection of automatic rifles when he heard some noise he couldn't account for? \n\nThe sleigh glided silently onto the roof, the blades letting out little more than a hiss and the patter of the reindeer's hooves barely audible. Santa leapt out lightly and assisted her in exiting the sleigh before grinning at her. \"Now, I won't be long, just hang tight and stay near the sleigh- if you're within the Gellar Field, you'll keep warm, alright?\" \n\nGinny raised an eyebrow in his direction, nonplussed. \"Um, 'scuse me? I'm here with Santa Fucking Claus on Christmas Motherfucking Eve. How many times can a girl say that? If you think for one second I'm not delivering presents with you, then you're even more stupid that Krampus. I'm coming.\" \n\nSanta seemed hesitant. \"Virginia, I've been at this since Proto-Hittite times, one way or another. I'm kind of an expert and I don't want you to hu-\" \n\n\"Oh, get real,\" she snorted, pushing past him toward the chimney. She was glad to note that the 'Gellar Field', whatever the hell that was, seemed to be keeping her warm at this distance. \"If your fat ass can fit down a chimney with that huge bag, so can mine.\" \n\nShe clambered over the lip of the chimney and eased herself down inside it. Santa watched silently as she wriggled out of sight. There was no noise for several seconds. \n\nFinally Ginny spoke, her voice coming up the flue. \n\n\"Okay, kinda stuck here, with my nose pressed into my own asshole. Little help?\" \n\nSanta chuckled lightly and reached for a can of grease. \n\n*** \n\n\"You're getting better at this, I must say,\" Santa remarked as he rummaged through his bag of presents while Ginny guided the sleigh. \"Last person who drove the sleigh for me, the reindeer resisted a lot. They like you.\" \n\n\"Oh?\" Ginny replied, twisting the reins slightly and veering the sleigh team southwest. \"Who was she?\" \n\nSanta cleared his throat. \"Actually, it was Krampus. Well, he was Pete back then, and it was over six hundred years ago.\" \n\nIt took Ginny a moment to recover from her shock and concentrate on guiding the sleigh. Fortunately, the reindeer seemed to know where they were going. \"Six hundred...\" \n\n\"Yup,\" Santa confirmed. \"The Belgian monks were still getting the recipe for Stella Artois right the last time one of my kids helped me out.\" \n\n\"But what about all your wives you were telling me about?\" she asked. \"They must've been in the sleigh before.\" \n\nSanta shrugged. \"Yeah, people have been in it, I've taken them places, but you and Pete are the only two who have ever helped me on Christmas Eve.\" \n\nShe felt herself grow warm, and for once it wasn't because she was wet and horny. \"I'm really helping you?\" \n\nHe nodded. \"It may be that I'm late because of the donnybrook back at your place, Virginia, but that wasn't your fault, it's just what was meant to be. I was meant to be put behind and now you're meant to be driving this sleigh while I get organized. No matter how many me's there are out there, it won't make a difference unless you're here tonight. It's fated to be that way.\" \n\nGinny didn't know what to say. She just calmly guided the sleigh, feeling a contentment she'd never quite known before. She was dimly aware of some other shadowy iteration of Santa's sleigh streaking by some miles to the north and waved absently. She couldn't explain why any of this made sense, but it did. \n\nShe really was different after all. \n\nA house below them shone with a golden light in the dark and she turned the reigns easily to guide the reindeer in its direction. There were over a dense residential area, the streets lined with endless numbers of small homes and semis. They glided onto a roof and clambered out. She followed Santa and his present sack down the chimney. In spite of his bulk, he slid down the tight shaft in a way that made her pussy inexplicably wet. \n\n\"Now that I think of it,\" she whispered as she wriggled down with him. \"How do we get into houses where there's no chimney?\" \n\n\"It was a lot easier before central heating,\" he answered, almost upside down as he worked his way toward the ground. \"For lack of a better term, it's just B &amp; E, I guess. I've got the keys and security codes for every residence on earth.\" \n\n\"Wow,\" she grunted as she twisted and wiggled, her breasts squashed to her mouth. If they'd had more time she would have sucked on them for a bit as a reward to herself. \"Even Kim Jong-Un?\" \n\n\"Yeah, but he's not getting anything you want to know about for Christmas,\" Santa muttered. \"He's a very bad boy.\" \n\n\"So, what, like a leaky bag of flaming panda shit?\" she mused, occupying herself as she strained to keep up. \"Because that's what he kinda deserves.\" \n\n\"Christmas is the one night of the year we don't discuss politics, Virginia.\" Santa mentioned as he finally freed himself of the confines of the flue and dusted himself off. He helped Ginny out as well, smiling and kissing her nose as she held her off the ground. She blushed and let him put her down, moving to a corner of the living room and watching intently. \n\nThe house they were in was not big, a modest home for a small family. Santa was rummaging around in his bag, absently noshing on the cookies left on a table near the tree. The tree itself was rather sparse on gifts, something Santa seemed to be rectifying. \n\nGinny didn't notice the other person in the room until it was too late. \n\n\"So there you are, big man...\" \n\nGinny started at the voice but Santa merely stood and turned around, smiling warmly. At the entrance to the room was a woman in a robe. She was older than Ginny, but not more than in her late twenties or early thirties. She had the look of a tired mom. \n\n\"Been waiting a long, long time to prove to myself that you were real and the presents I couldn't account for just came out thin air,\" she sighed, nodding. She had sandy-brown hair, done in a long bob. Her face was pretty enough, but you could see in her eyes that sleep was more of an afterthought than anything. \"But here you are.\" \n\n\"It's good to see you, Linda.\" Santa said warmly, moving toward her and hugging her. She sighed as he embraced her and Ginny smiled, knowing exactly how content and relieved Linda felt at the moment, whover the hell she was. \n\n\"Whoah, did I just get jealous of some girl hugging Santa?\" \n\n\"I can't believe you're here in all your chubby glory,\" Linda remarked, smiling up at him. \"It's a dream come true.\" \n\nSanta nodded. \"Little Karen's been very good this year, Linda. She's a real blessing. I brought her the puppy she wanted.\" \n\nGinny frowned and looked down at a small object that was oviously a puppy, wrapped prettily in Christmas paper and sporting a golden bow on its snout. The puppy panted happily, curled up and went to sleep beneath the tree. \n\n\"She'll love it,\" Linda said quietly, her eyes shining. \"She'll be so thrilled.\" \n\n\"I know she will.\" Santa said, smiling and placing a hand on Linda's cheek. \"Sorry things didn't work out with Bob. He doesn't know what he's missing.\" \n\n\"Thanks, I keep telling myself that too,\" Linda said, dabbing at her eye. \"Have you got an STD for his stocking, maybe?\" \n\n\"No,\" Santa chuckled. \"But you need to know that everything's going to be fine, Linda. You've made it this far, you're raising an amazing girl and you own this place now. If I could give you Mother of the Year, I would. But I can't, not my department, so that leaves me to ask... what do you want for Christmas, Linda?\" \n\nLinda looked into his eyes before her hands reached down and began fumbling with his wide, black belt. Ginny shook her head and sighed, knowing exactly why Linda's reaction was so instinctual. The mother turned her head and seemed to notice the girl in the abbreviated elf costume for the first time. \n\n\"Oh,\" she said, her hands still undoing the belt. \"Is she your chaperone, to make sure we behave?\" \n\n\"No, she's not my chaperone,\" Santa said, smiling and shaking his head. \"She's my indispensible helper, without whom Christmas wouldn't come this year.\" \n\nGinny blushed at his description of her. \n\n\"Oh, okay,\" Linda said, kneeling and shimmying his red pants down and freeing his monstrous cock. \"As long as she doesn't interrupt me enjoying my present.\" \n\nGinny blushed again, but this time the hair on the back of her neck went up and her eyes narrowed. She folded her arms across her chest, leaned against the wall and watched silently. Very silently. \n\n\"Wow,\" Linda mused, taking his cock in both hands and staring at it. \"Just when I thought nothing could get longer than that white beard of yours.\" \n\nGinny blinked and frowned for a moment. White beard? \n\nIt suddenly occured to her that Linda was seeing the Santa she had always expected to see, a fat, jolly old man with a long white beard, rosy cheeks and the rest of the Dickensian nonsense. To Ginny, he still looked like the towering, red-bearded lumbersexual she knew him to actually be. Whatever sort of glamour he radiated, it worked even in sexual situations. \n\nWithout a pause, Linda took Santa's thick cock into her mouth with a sigh and began bobbing back and forth along its length. Her wet lips formed a tight seal around the shaft, her hands holding on to Santa's thighs for balance. \n\n\"She's doing that all wrong,\" Ginny sniffed to herself. \"He likes it when one hand is pumping along the shaft behind your mouth and the other one is teasing his balls. I should know.\" \n\nSanta turned his head, smiled at her and nodded. Ginny blushed and shut up. \n\nHe took Linda's head gently in his hands, caressing her hair while she sucked his cock, letting her take all the time she liked. She undid her robe with one hand, letting it fall to a puddle at her knees, now naked. She had a mom bod, Ginny noted- not bad, she was trying to keep herself fit, probably with Tae Bo and jogging or spinning, if she could find the time. Her breasts were somewhat pointy, but she wasn't repulsive by any means. Ginny felt herself getting warm as she watched, one of her hands coming up to caress her breasts while the other snaked down inside the short green skirt she was wearing and beneath her thong, teasing her understandably gooey pussy. \n\nShe watched intently as Linda pushed farther and farther down Santa's seemingly endless shaft, breathing through her nose as she tried to reach the root. The hand she kept on his thigh for balance squeeze his pale flesh while the other was massaging her breasts, pinching the nipples. She moaned around his cock as he grew harder in her mouth. \n\nGinny leaned her head against the wall, trying to not make noise as she pleasured herself, fingers teasing through her slippery folds or circling her throbbing clit. The hand she had on her breasts mimicked Linda's squeezing and pinching her nipples, causing little needles of stinging delight to shoot through her. \n\nLinda's hand moved down between her legs and her fingers began churning inside her pussy. She moaned loudly as she pleasured herself. Normally Ginny would have thought she'd wake her kid, but Santa probably had some weird sound-dampening field just to keep things like this from happening. \n\nTypical. \n\nGinny bit her lip as she watched, her skin blushing pink as she worked herself into a silent frenzy, her wet core beginning to blossom as Linda sucked and bobbed on Santa's cock faster and faster... \n\nBoth women let out a loud moan as they came, pleasure bubbling up through Ginny's body while her fingers worked madly inside her clenching, slippery tunnel. Her knees buckled and she went to the floor, still fucking herself. Linda grunted and began swallowing as Santa came, finally pulling her mouth off and panting heavily, jerking his throbbing cock frantically and splattering his pearly cum across her breasts with great eagerness. \n\nGinny slowly lifted her head, gazing at Santa and Linda through hevily-lidded eyes. She'd cum so hard just from fingering herself. Was it her proximity to Santa that caused all her sensations to be so heightened? \n\nSanta knelt as well, hugging Linda to himself and whispering in her ear. She slowly pulled her arms up and embraced him, smiling against his shoulder and nodding gently, her eyes still closed. After holding her for some time, her took her by the chin and lifted her gaze to meet his. \n\n\"Okay, back to bed with you,\" he said gently. \"You'll sleep very well tonight and Karen will come to wake you.\" \n\nLinda smiled dreamily and rubbed her nose against Santa's before giving it a kiss. She stood, slipped her robe back on, winked at him and left without another word. Santa watched her leave and nodded in satisfaction. \n\n\"Just what she needed,\" he said to himself. \"Okay, Virginia, I'm going to finish these last few presents and then we're... Virginia?\" \n\nBut Ginny was still kneeling, slumped to one side against the wall and snoring. Santa chuckled and finished the presents before picking her up and holding her limp body under one arm and his giant sack over the other shoulder before disappearing up the flue in the blink of an eye. \n\n*** \n\n\"Taip! Taip! Mano Dievas!\" Kuni moaned loudly as she sat on her sister's face, grinding her pussy eagerly down onto Minna's mouth. Her blonde twin clamped her arms around her sister's thighs tightly as she lapped hungrily at the slick lips above. Santa was kneeling between Minna's legs, holding them wide and thrusting back and forth, his cock plunging in and out of her. \n\nGinny was leaning against the wall once again, trying to not look exasperated. The Lithuanian girls were writhing and grinding in a frenzy, clearly enjoying their early Christmas present. It wasn't like they'd crept down and surprised Ginny and Santa, as Linda had- they had actually written to Santa, saying that their parents were away for the holiday and they wanted him to come and fuck them for Christmas. They'd been waiting patiently in the living room when Santa and Ginny appeared out of the chimney, the twins wearing nothing but their little cheerleader uniforms. \n\nMinna groaned shamelessly while she lashed her Kuni's slit with her tongue, shuddering as Santa's iron-hard rod nearly split her in half. Ginny had to admit, the blonde twins had rocking bodies, trim and tight from whatever activities they were involved in. She'd have to get into P90-X or Crossfit if she was ever going to compete with these two. \n\n\"Senelis!\" Minna gasped, sliding a finger up inside her sister, which Kuni ground on shamelessly. She gyrated her hips, fucking back against Santa, her fingernails digging into her sister's ass cheeks as she endured the battering waves of pleasure. \"Ahhhh, Duok man sunku!\" \n\n\"Pasakykite pra\u0161ome...\" Santa replied, smiling slyly. \n\n\"Pra\u0161om!\" Minna wailed, her body almost thrashing. \"Pra\u0161om pra\u0161om pra\u0161om! Nekankink man\u0119s!\" \n\nSanta nodded and leaned forward, pressing Minna's legs almost back against her body, his weight over her now as he sank his cock down inside her. The blonde girl almost screamed in pleasure. Kuni grappled onto Santa's neck and kissed him greedily, churning her pussy down onto Minna's glistening face. \n\n\"Unreal,\" Ginny muttered. \"And I thought I was a relentless horny machine. But you, sir, take the cake.\" \n\n\"I would expect you of all people to understand by now,\" Santa said cheerfully. \"Minna and Kuni have been very good this year. They're both at the top of their class, they've been socially active regarding building homeless shelters, they're both-\" \n\n\"Over the age of eighteen?\" Ginny bit out. \n\n\"It's Lithuania, that wouldn't matter,\" Santa pointed out. \"They've been very good girls and I'm duty-bound to give them what they want for Christmas.\" \n\n\"So no point deductions for incest?\" Ginny asked somewhat testily. \n\n\"There weren't for you and your brother, were there?\" he replied while Kuni nipped at his skin. Ginny blushed again and stopped talking. She watched while Kuni pulled herself off her sister's mouth and hastily clambered around to lie on top of her, kissing her sister while squirming her wet pussy down on Minna's. She groaned loudly when Santa pulled out of the girl below and pushed deep inside her. \n\n\"Dear diary,\" Ginny muttered. \"Having a great time in Vilnius, watching Santa skewer Lithuanian sisters...\" \n\nSanta grunted and pushed in hard, his hips trembling as he started to cum. Kuni and Minna screamed into one another's mouths, hips bucking furiously. He pulled out of Kuni and slammed back into Minna, filling her with cum as well before both sisters scrambled to their knees while he stood. They swallowed his cock greedily, taking turns pumping the shaft while the other sucked on it. They kissed around the throbbing member, licking the pearly cum off one another's faces. ",
        "\"Esate labai geros mergait\u0117s,\" Santa breathed, holding them both gently by the back of their heads while they sucked hungrily. \"Keep up the good work and Santa will see you again next year...\" \n\n\"If we're not still here with these two whores next Christmas...\" Ginny thought darkly. \n\n*** \n\nGinny was guiding the sleigh, but she kept looking back at Santa, trying not to smirk. He was sitting beside her, a rather blank stare on his face, his eyes a little red around the edges. \n\n\"I'm still sorta hungry...\" he said somewhat absently. \n\n\"So you actually thought 'Colorado Gold' was a brand of flour used to make baked goods?\" \n\n\"Note to self,\" he murmured. \"Do not eat the brownies left out for you in Denver...\" \n\n*** \n\nGinny followed Santa as they crept down the stairs toward the basement apartment, a prismatic glow on the wall ahead of them indicating a tree was nearby. They rounded a corner and paused. A young man dressed in X-Men boxers and a white t-shirt almost walked into them as he rubbed his eyes. \n\nHe stared at them for a moment, saying absolutely nothing. \n\nAfter a long, awkward pause, Santa reached back into his sack and pulled out a wrapped gift which he slowly handed to the kid. The kid took it equally slowly and unwrapped it, his eyes widening as several deluxe editions of the newest PC games were revealed. \n\nThe kid smiled sheepishly and sighed. \"Thanks, now that I know you're real.\" \n\n\"You don't seem happy, Kevin,\" Santa said, obviously concerned. \"You've been great all year and these are what you wanted, right?\" \n\n\"I... yeah, they are,\" sighed the kid. \"At least, that's what I told everyone I wanted. My friends and I, we're all gamers, and this is amazing, but...\" \n\n\"But...\" Santa pressed. \n\n\"Well, Christmas is also my birthday,\" Kevin said. \"Here I am, eighteen finally, and I still haven't had sex with a girl yet.\" \n\nSanta smiled. \"Well, I normally deal exclusively in Christmas wishes rather than birthdays, but perhaps this year I can help you out there, Kevin.\" \n\nKevin raised an eyebrow. \n\n\"Virginia,\" Santa stated, looking at her. \"I give you Kevin the Boy. Return unto me Kevin the Man.\" \n\nGinny couldn't believe what she said next. \n\n\"Thought you'd never ask, Big Red...\" \n\nShe walked forward and took the games out of Kevin's hands, tossing them over her shoulder. Santa grabbed them hastily out of the air as Ginny poked a finger into Kevin's chest and pressed him up against the wall. His eyes were wide, not at all sure what was happening. \n\n\"Santa's already given you your Christmas presents,\" Ginny said as she knelt in front of him and tugged at his boxers. \"Which means it's up to me to give you a happy birthday...\" \n\nShe pulled the boxers down and tossed them aside. His cock was limp but she could already tell it was swelling with excitement. Rather than teasing the poor virgin, Ginny stroked his shaft and slid her mouth all the way down, deep-throating him. Kevin shuddered and groaned loudly. \n\n\"Make all the noise you want, you won't wake your parents upstairs,\" Ginny mentioned, pulling her mouth off his cock for a moment and pumping the shaft with her hand while she looked up at him. \"The big man here has some sort of sound-dampening field or some shit so that he doesn't get caught busting into people's houses.\" \n\nKevin's hands flattened against the wall and his fingers flexed as she slid her mouth down his length again before bobbing back and forth in a slow rhythm. She felt his fingers take her by the hair and begin kneading, lost in this clearly new delight. She hummed gently, vibrating her mouth around his sensitive skin. \n\n\"Well, look at you,\" she remarked, smiling as she pulled back and gazed at his now hard and throbbing cock, glistening with the wetness of her mouth. \"That's a nice dick you've got there, Kevin. You're a grower, I'm impressed.\" \n\nKevin took a deep breath. \"Maybe, but it doesn't look like much when it's limp. The one time I let a girl at school see it, I was nervous and it shrunk, so she was laughing at me.\" \n\n\"Then I'll give you a tip before I fuck you, Kevin,\" Ginny said, stroking the shaft and spitting on it t keep it moist while she instructed him. \"Girls can be hideous cunts about that sort of thing sometimes, but they have their own insecurities. So never bring your insecurity to the ballgame. You need to be turned on and your johnson here on the rise by the time you get naked for her.\" \n\n\"Uh-huh?\" he said somewhat uncertainly, shivering as she bent her thumb so that the pad pressed against the top of his mushroom head every time she stroked down. He couldn't believe this was happening. Some hot Elf-chick who looked like a Warcraft mod was blowing him! \n\n\"So from now on, you dominate, you got it?\" Ginny said. \"Make her get naked or make her turn you on so that she can see how big your dick is before you ever get out of your boxers. No girl is gonna say no to this thing when it's fully inflated, I promise.\" \n\n\"R-really?\" Kevin asked. \n\nGinny kept her eyes locked with his but reached down under her panties for several moment before bringing her fingers up for display. They glistened wetly in the dim light. \n\n\"It's made me horny, champ. And because of that dick, I need to fuck you. You with me?\" \n\nKevin just thunked his head back against the wall, closed his eyes and nodded. \n\n\"Oh, and don't worry about trying to last,\" Ginny added. \"Being around the Red Machine makes you want to fuck and cum all night. You'll be fine.\" \n\nShe swallowed his cock with a will, determined to give this kid the best first time anyone had ever had. Her hand followed her mouth along the shaft and she hummed, swirling her tongue along its length. The kid wasn't Santa, but this would be a perfectly good ride for any girl worth fucking once he had his confidence. Her free hand worked its way back inside her panties and began fingering, teasing her wet folds and slipping inside, getting her ready for the main event. \n\n\"Mmmmm, do you want to fuck me, Kevin?\" she asked, smiling up at him. \"Do you want to fuck my pussy good and hard?\" \n\n\"Gnnnn... yes...\" he whimpered. \n\n\"Say it like you mean it, Thor,\" she insisted, pressing her thumb along the throbbing vein on the bottom of his thick shaft. \"The girl wants confidence. This cock is worth your best effort.\" \n\nHe took several deep breaths before looking down at her and nodding. \"I want to fuck you.\" \n\n\"You do?\" she asked before sliding him back down her throat. \n\n\"No,\" he said finally, taking her under the arms and pulling her up. Ginny exhaled suddenly as his cock popped out of her mouth unexpectedly and he spun her around to press up against the wall. \"I don't want to fuck you... I will fuck you.\" \n\n\"That's my boy,\" Ginny breathed, her eyes flashing with sudden lust and delight. She spread her legs and tilted her hips forward, eager to feel him inside her. \"Fuck me good and hard, Kevin!\" \n\n\"K-zon,\" the boy almost growled, pressing his throbbing cockhead against her entrance. \"My gaming tag is K-zon and that's what the girls'll call me when I fuck them!\" \n\nGinny nodded eagerly. \"Good. Give it to me, K-zon...\" \n\nShe moaned loudly as he pushed inside her, heedless of any sense of timing or technique, but eager to be deep in a woman. He squeezed her sides as he trembled, overcome by the wet, tight sensation of her pussy gripping him. Her arms wrapped around his shoulders and one leg slung over his hip as she looked into his eyes. Ginny began a pumping motion with her hips, sliding back and forth on his cock while K-zon was paralyzed by the flood of pleasure. \n\n\"Alright, slugger,\" she whispered in a husky voice as she fucked herself on him. \"Let's bust this first nut of yours quick, so you know what to expect. Don't hold back, just pound my cunt until you blow, got it?\" \n\nHe nodded as he buried his face in her shoulder and started pumping awkwardly with his hips, his whole body trembling. Ginny felt an unreal flush of heat coursing through her already, an intense orgasm building up inside. \n\nHoly shit, was she turned on and about to get off because she was mentoring a virgin? \n\nShe pulled Kevin tight against herself and shivered, letting out a gasp while he moaned and jammed his hips up tight against hers- she could feel his cock twitching inside her as he spunked, Her own orgasm flooded over her, molten bubbles of ecstasy popping by the millions throughout her sweating, slick frame. \n\nHe almost buckled at the knees, collapsing against her, panting like he'd run a marathon. Ginny smiled and caressed his hair, feeling his still-hard cock throbbing inside her. She ran her fingers over his cheek and looked into his eyes. \n\n\"Ready to keep going?\" she asked. \"Second one's usually even better.\" \n\nHe nodded and she pulled him down to his knees while she got on all fours, wiggling her invitingly. She winked back at him. \n\n\"You know what to do, K-zon,\" she purred. \"Show me what you're gonna do to the girls this coming year...\" \n\nWithout another thought, he took Ginny by the hips and slid his cock deep inside her again. Ginny moaned loudly, lowering her head to the floor and pushed back against him. She felt him begin to push back and forth and matched his rhythm by squeezing her pussy muscles around him as he slid in. His fingers dug into her hips and ass cheeks delightfully. She could tell he might last a little longer this time, but not by much. Then again, she wasn't hear to teach him to be a sex god, she was here to pop his cherry and give him a birthday to remember. \n\n\"Mmmmm, right there, big man...\" she panted, surprised that she meant what she was saying. She wasn't just stroking his fragile ego, she was quite serious, because he was hitting a spot in her pussy that she really liked. He had a long enough dick that it touched her pleasure spot and he was just wide enough to pleasantly stretch her so that she knew she was being fucked properly. With confidence, this kid would be a good lay. \n\nKevin slapped his thighs against her ass cheeks and she squeaked and yelped in response. Her gooey pussy clenched him tightly, utilizing those vaginal contractions she seemed to be so damned expert at tonight. \n\n\"Fuck...\" Kevin grunted as he pumped his hips, his chest now glistening with sweat. \"This is so much better than my hand or a fleshlight!\" \n\n\"Gnnnnnn, and you feel a lot fucking better than a vibe,\" Ginny panted, still face-down and ass-up. \"You're gonna make them scream, K-zon...\" \n\nHe seemed encouraged by her words and pumped harder, determined to make Ginny and himself cum again. He seemed to have found his rhythm and fucked her steadily, his eyes closed as he lost himself in the unreal sensation of sex with a live girl. Ginny bit at the knuckle of her middle finger, aware of how flushed and warm her body was. She could feel her wetness trickling down over her stomach from her pussy, since her ass was perched in the air. The slick, sucking noises of her sex were unmistakable. \n\n\"Ooh, you're doing really good, K-zon,\" she said breathily. \"You're gonna have me cumming again before long!\" \n\nKevin seemed to be beyond words as he merely nodded hastily and kept fucking her, eyes closed and back arched. The slapping noise of his thighs against her ass was a wet one now, since they were both sweating profusely. She could feel the damp perspiration in her hairline, her mouth open and she wiped at it when she realized she was almost drooling. \n\n\"Yes, K-zon!\" she gasped, using the name he wanted again, pushing back against him but still letting him control the action. \"Fucking make me cum! Don't hold back! Gnnnn, fuck!\" \n\nKevin jammed his hips against her suddenly and cried out, a sound that Ginny echoed half a second later. Rapture splintered through her as she came, feeling him slamming against her as he climaxed, his pearly offering now deep inside her. Through glassy eyes, she looked around for Santa, to see if he was watching, but he was nowhere in sight. \n\nKevin seemed ready to fall over, exhausted, but she gently pushed backward until he sat on his behind with her in his lap, facing away. Slowly she turned around and laid him on the floor, his cock still deep inside her. She put her hands on his shoulders and smiled down at him, her nipples tracing little patterns over his chest as she did so. \n\n\"That was amazing, K-zon,\" she said quietly. \"A really great addition to my night.\" \n\nHe was still breathing heavily but nodded at her. \"Thanks. It was more than I could have hoped for. I...I guess it's been a busy evening for you this way?\" \n\n\"Well, you're my only virgin to this point, if that's what you're asking,\" Ginny sighed. \"The big red machine has fucked me more times tonight that I care to remember and I was nearly raped to death by Krampus, so this was exactly the sort of change of pace I needed, you know?\" \n\nShe sat up, still straddling him and impaled on his cock, a thought occuring to her. \"Hey, Big Red,\" she called out. \"I just let him bust in me twice, d'you have any fixes dated from yesterday?\" \n\nA tiny white pill flew out of the other room. She caught it deftly in her hand and popped it in her mouth. \n\n\"I'm getting good at this 'time-is-fluid' shit,\" she giggled to herself. \"Maybe I'll teach quantum physics.\" \n\n\"You don't need a glass of water or anything?\" Kevin asked, looking up at her. \n\n\"Trust me, Kevin, if there's one thing I'm good at, it's swallowing.\" Ginny replied, smiling down at him somewhat haughtily before carefully pulling herself off his cock, causing them both to shudder and moan quietly. She knelt over his waist and sucked on his member, cleaning their mingled cum off him and then helping him to his feet. She slipped her thong back on while Kevin retrieved his boxers. They were just straightening themselves out when Santa appeared from the other room. \n\n\"Did you enjoy your birthday present, Kevin?\" he asked cheerfully. \n\n\"Yessir,\" the newly-minted young man said. \"Best birthay present anyone ever received.\" \n\n\"Glad to hear it,\" Santa said, nodding. \"And I know it doesn't compare to what Virginia just gave you, but I think you'll be pleased with your new rig I just set up. Five terrabytes of hard drive space, thirty-two gigs of DDR4 RAM, an overclocked quad-core CPU that'll put the i7 to shame, eight fans, a nickle and copper piping coolant system and LED's to make sure everyone knows you're in the house. Oh, and I've upgraded your server to be multi-line, WAN and load-balancing. You and your guild will never lag again as long as you host.\" \n\nKevin's eyes went wide. \"I've got fat pipes?\" \n\nSanta nodded while Ginny shook her head, understanding none of this geek talk. It only figured that Santa was a giant nerd. Kevin looked like he might faint. \n\n\"Well, I've just done what you deserved,\" Santa mentioned. \"It's Virginia who should get the credit for your night being so spectacular.\" \n\n\"Yeah,\" Kevin said, blushing and smiling at her. \"Thanks.\" \n\n\"My pleasure, trust me,\" she said easily. \"Somebody have a pen I can use?\" \n\nSanta handed her one and she looked at Kevin. \"Your number, dude.\" \n\nKevin managed to stutter out his number, which she wrote down on her wrist before nodding in satisfaction and giving the pen back to Santa. \"Alright, if I ever happen to be in Ohio for some godforsaken reason, I can look you up and give you a booty call. Sound good?\" \n\nKevin nodded dumbly. \n\n\"Just remember this,\" she said, poking him in the chest, her voice serious. \"You've got a lot to learn still. You've got a nice cock between your legs, don't treat it like a Louisville Slugger and just beat the hell out of her with it, you're better than that.\" \n\nHe nodded. \n\n\"And if a girl wants you to fuck her, she'll give you signals, so watch.\" Ginny added, poking his chest with her nail. \"Don't assume you can just force yourself on anyone or next year it's dead spiders in your stocking, you got it?\" \n\nKevin nodded again. \n\n\"Excellent,\" she said sweetly. \"Now go to sleep, champ. Merry Christmas and happy birthday. C'mon, Santa, we have a holiday to save!\" \n\n\"Yes, my lady!\" Santa laughed, following her out of the basement. They were back on the roof when Santa smirked at her as they climbed into the sleigh. \"Dead spiders in the stocking?\" \n\nShe shrugged. \"Isn't that what you'd give a guy if he forced himself on a girl?\" \n\n\"Well, no,\" he replied as he snapped the reins and they took off into the cold night air. \"That's more of a legal issue. If he was considering it, I wouldn't have mentioned dead spiders, I'd've been more inclined to point out that he'd spend the next few years in a cell as some fat, greasy tattooed bastard's buttery cornhole.\" \n\nThe sleigh lurched to one side as Ginny burst out laughing. \n\n*** \n\nSanta stared awkwardly, making a wry face while Ginny stood off to the side, smirking. Standing in front of Santa was a very pretty young man in pale pink pajamas, his hands behind his back, one knee turned in, twisting his toe into the rug and blushing expectantly. \n\nGinny wiped a tear away from her eye, she was trying so hard not to laugh. \n\n\"Yeahhhhh, that ain't happening.\" Santa said finally. \n\n\"But I've been so good...\" the young man cooed, smiling coyly and winking. \n\n\"C'mon, Santa,\" Ginny urged, clearly enjoying his discomfiture. \"He's been so good, and you always reward your good children, don't you?\" \n\n\"Nice try, lady,\" Santa said, pressing behind his ear, apparently activating a communicator. \"Get Agent 641 to me, I need a pinch hitter, stat.\" \n\nSanta threw a small disk on the floor while Ginny and the young boy in pink watched curiously. The device oscillated and expanded, becoming a larger disk. Seconds later it began to glow and hum. A column of rainbow light radiated up from it and a kneeling shape appeared. Seconds later, the rainbow light faded away and a lithe, comely figure stood. He had the same slender, beautiful features as the warrior-elves who had fought earlier that night, his eyes a piercing violet colour, his impossibly long raven hair held in gold rings. His pale body was naked except for a tiny thong. \n\n\"Holy shitsnacks...\" Ginny breathed as she gazed stupidly at the new arrival, feeling her thong get wet. \n\n\"Ylmarin, young Trevor here has been an extra-good boy, perhaps you'd care to reward him?\" Santa suggested as the inhumanly graceful being stepped off the platform. \n\nThe tall being looked down at the the young man named Trevor, assessing him and then nodded. \"Yes, sire, I can absolutely do this.\" \n\nTrevor blushed furiously and giggled, covering his face. Ylmarin reached over and took the boy's hand before leading him back to the bedroom. Santa nodded and began rummaging around in his toy sack, putting items under the tree. \n\n\"Okay, we got that out of the way,\" he said, squatting and putting items under the decidedly pink-lit tree. \"Virginia, if you could hand me the- Virginia? Ginny?\" \n\nHe frowned and turned to look for his helper, finally sighting her. She was standing in the doorway to the bedroom and looking in. One of her hands squeezing her breasts while the other had snaked down inside her panties. \n\n\"Alright, go on, you little voyeur.\" Santa chuckled, shaking his head. \n\n\"Yum yum!\" she squeaked and skipped into the room, from which moans were now emanating. \n\n*** \n\n\"You weren't worried about being on the Naughty List if you waited up for me?\" Santa asked the dark-haired girl as she sat on her floor, watching him intently. She pushed her glasses up her nose and shook her head, pretty curly locks spilling over her shoulders as she did so. \n\n\"Not worried, hm?\" he mused, observing her. \"So you think you're already on the Naughty List?\" \n\nThe girl nodded. \n\nGinny blinked and pursed her lips. \"Why isn't she talking? Is she mute or doesn't she speak English?\" \n\nSanta shook his head. \"No, Ellie's just shy. She doesn't speak much at first, but once she gets going...\" ",
        "He knelt down in front of the girl and smiled. \"Well, here I am. What is it you wanted to ask me, Ellie?\" \n\nThe tan girl turned her head and looked down at the floor sheepishly for several seconds before working up the nerve to speak. \"I... I want my daddy, Santa.\" \n\nGinny blinked. \"She what, wants him back from deployment for Christmas, she wants her father to move back home...\" \n\n\"No, Virginia,\" Santa said cheerfully. \"She doesn't want her father, she wants her daddy.\" \n\n\"Oh,\" Ginny said, suddenly understanding. \"Soooo, now what?\" \n\n\"That's all she wanted for Christmas, so we give her her daddy.\" Santa said simply. The girl's eyes lit up in delight and she sat up straight, looking very excited. Santa pointed behind Ellie and she turned to look behind herself...  \n\nHer daddy stood in the doorway, his green-hazel eyes mirroring her excitement and a big grin on her face. His long, sandy-blond hair fell down to his shoulderblades. \n\n\"Daddy!\" Ginny squealed as she scrambled to her feet and threw herself against her daddy, kissing him feverishly. He held her tight, returning the kiss while she began pulling his clothes off him. \"I missed you so much!\" \n\n\"Missed you too, baby...\" he murmured through the kiss as he pulled her top off, exposing her lush breasts. \n\n\"I never had a daddy.\" Ginny sighed as she watched the couple get increasingly naked and feeling the now-familiar tingle building. \"I should take care of that at some point.\" \n\n\"I've got some other deliveries in the immediate area,\" Santa mentioned. \"How about I go take care of them while you have a little fun with these two?\" \n\n\"Well, I'm not attracted to girls.\" Ginny said in a non-commital tone. \n\n\"You just didn't know you were until tonight.\" Santa replied, smiling. \"Just trust me on this, Virginia.\" \n\n\"Well, like you said earlier, I've had you inside all my orifices, so what's the harm in trusting you now, right?\" she admitted, shrugging. Would being bisexual be such a bad thing? It certainly widened her options for dating. \n\nSanta nodded and walked out of the room. Ginny turned to look at the couple she was left with, who were already splayed out on the rug, naked and pleasuring one another. Ellie was lying on top of her daddy, facing down his body and sucking on his cock hungrily while he was pulling her slippery netherlips apart and sliding his tongue up and down her slit, making her shiver and moan. \n\n\"Fuckit,\" Ginny said finally, stripping out of her skimpy outfit and walking up to the two of them. She laid down beside Ellie's daddy and smiled at her, both their heads over hips hips. \"Feel like tag-teaming, babe?\" \n\nEllie looked up for a moment and nodded readily. Ginny smiled and leaned in, flicking her tongue against the tip of his cock. The curly-haired girl giggled and joined Ginny in teasing the throbbing member, taking turns sliding their tongue up and down the shaft while the other swirled her tongue around the head and took it into her mouth, starting to bob up and down. \n\nGinny felt herself getting really wet and pressed her lips to Ellie's around the head of her daddy's cock, kissing her. They both moaned as their tongues tangled around the glistening head. Ginny's hand slipped into the girl's hair, wrapping in it to hold her in place. Ellie smelled like strawberries and Ginny felt herself getting wetter as she took in the scent. \n\n\"Daddy,\" whimpered the girl. \"Fuck me...\" \n\nGinny knelt up while the other girl straddled her daddy's hips, facing down his body. Her sticky pussy was positioned over his throbbing cock and Ginny took hold of it and guided it home. Ellie sighed almost in relief as she sank down, his member filling her. Smiling wickedly, Ginny made Ellie lie back along her daddy's body and the girl gasped as her put his hands on her breasts and held her. \n\nAs Ellie and her daddy began to squirm and writhe, her glistening pussy swallowing his cock greedily, Ginny bent down and tongued at the shaft as it slid back and forth through her lips. She pressed her thumb gently on Ellie's clit, causing her to shudder and moan loudly. Then her tongue traced a slow route around the engorged netherlips, teasing her new girl lover. Ellie whimpered and panted, begging her daddy to fuck her harder. \n\nGinny sucked Ellie's clit into her mouth and was rewarded with a strangled cry from above. She fondled the sac in front of her gently and pressed on the throbbing vein. Her pussy was getting wetter with each passing moment and she needed to know if Ellie would share... \n\nWithout another word, she crawled over Ellie and settled down on top of her, her breasts squashing into the succulent set below. She moved around until she felt her pussy pressed to Ellie's and the magical, rhythmic motion of the cock still pumping in and out of her. She shuddered as their lips and clits met and they wrapped their arms around one another, kissing shamelessly. Tongues snaked and writhed as they moaned into one another's mouths. \n\n\"Daddy,\" panted the younger girl. \"Fuck Santa's elf-girl... fuck her please...\" \n\nGinny felt her own ferocious desire rising as the cock slurped out of Ellie and pressed against her. She groaned guturally as she felt the head penetrate and then she pressed down eagerly, taking it deep inside her. Still sandwiched between them, Ellie took one of Ginny's breasts and sucked the nipple into her mouth, swirling her tongue around it. Ginny arched her back and hissed through clenched teeth, squeezing hard on the invading cock. \n\nShe ground down on Ellie's daddy, gyrating her hips and her fingers digging into the other girl's skin. Ellie sucked and bit her nipples, the delicious sting heightening her ecstasy. She body was streaming with sweat while he fucked her, Ellie's soft flesh undulating against hers. She could hear him panting and feel him stiffening and knew what happened next. \n\nWith great haste and even greater reluctance, she pulled herself off the cock and knelt, pulling Ellie up into a kneeling position. She helped her daddy stand quickly while Ellie took his cock and pumped it eagerly with her hand. Once he was standing, they both attacked his member with their mouths and hands, pleasuring him beyond endurance. He put his hand on the back of their heads and groaned loudly, his hips shuddering as he came. Both girls pressed their faces in, letting him spurt on their mouths and cheeks, hands still working the shaft quickly. \n\nThe warm, sticky cum brought with it a warm flush of memories, how it always felt on her skin, the tingling, scintillating pleasure she always felt in the ardour of others. Ellie's soft breasts pressed to hers, their cheeks meeting as they accepted the pearly offering, on their chins and now glazing their breasts... she loved it all. She was never happier than when she was in the throes of passion with others. \n\nWas this what she was truly meant to do? Was this a Christmas epiphany? \n\nEllie and Ginny began kissing hungrily, licking the cum off one another's faces with a fervour, then off each other's neck and breasts. They returned their attention to the still twitching cock, kissing and sucking it dry. Once Ellie's daddy was spent, she laid him down and Ginny helped her snuggle into his warm, loving embrace. The girl smiled at her and giggled before blowing a kiss. Ginny gathered up her outfit and exited the apartment quietly. Not surprisingly at this point, the sleigh was just pulling back onto the roof as she arrived. Santa smiled at her. \n\n\"So did you know I was bi all these years?\" she asked as she clambered into the seat and beside him and snuggled into his side as they took off. \n\nHe nodded. \"Not my place to rob you of your journey of self-discovery, though.\" \n\n\"Maybe,\" she sighed. \"But think about all the fun I've missed out on, not playing with girls too. Doubling the size of my dating pool might have made a difference.\" \n\n\"You've always been who you're meant to be, Virginia,\" he said cheerfully. \"And your little epiphany tonight is going to have big implications in the year to come. Trust me.\" \n\nHer eyes widened. \"For real?\" \n\n\"Would I lie?\" Santa laughed. \n\n*** \n\nGinny was lying back in the plush red seat of the sleigh, her chest heaving as she stared at the pre-dawn sky. Her little elf-outfit was almost in shreds and she was missing one of her shoes. Even Santa looked a little worn. \n\n\"So that's what sex with an entire sorority house feels like...\" she said distantly. \"Kinda gives me a new respect for those college quarterbacks. Those girls are animals.\" \n\nSanta nodded. \"I have to admit, that wore me out a little too, which is saying something. And before you ask, yes, they have all been good this past year and they sent me one letter asking for Santa to fuck them as a sorority, so that really was their Christmas present.\" \n\nGinny nodded. \"That and the four metric tons of vibrators, dildos, eggs, anal beads, ben-wa balls and lingerie I saw you drop off... and about thirty Sybians.\" \n\n\"They're a really good sorority house.\" Santa admitted. \n\nGinny just stared at the sky. \"Hard to believe that you're brought up a certain way, being told that good kids act a certain way, only to find out that being a total mega-slut is not grounds for being added to the Naughty List but sneaking cookies when mom told you not to is.\" \n\n\"I didn't make the rules,\" Santa said, shrugging, but then he paused. \"Oh, wait... y'know, I probably did, a long, long time ago.\" \n\nGinny giggled tiredly. \"This has been the longest and most oversexed night of my life, and that's saying something for me. Where are we headed, Big Man?\" \n\n\"Well, it's almost dawn.\" Santa said, looking east. \"I'm going to have to drop you off before long now that my rounds are done.\" \n\n\"Yeah,\" Ginny said somewhat reluctantly. \"Since I don't have a house, I guess you should drop me off at my parents' place. I can't exactly tell 'em that my house was destroyed in a massive battle between Santa's elves and Krampus, but maybe they'll believe a gas main exploded.\" \n\n\"You can't lie, Virginia, we've been over this.\" Santa said firmly. \n\n\"Well I can't really tell them the truth either, can I?\" Ginny pointed out, hoping she didn't sound too quarrelsome. \n\n\"I know...\" he said quietly, still guiding the sleigh. \n\nThe soared through the dark sky for some time, saying nothing. Eventually, Ginny began to make out shapes in the night, sleek silhouettes that looked almost like slender, jet-powered Skidoos, being ridden by beings in strange armour with glowing runes and wild mans of hair. \n\n\"Just my guardians,\" Santa said in an assuring tone. \"Making sure there are no last-minute attempts to thwart us.\" \n\nThe earth far below them took on a white cast and Ginny knew that they were above a region covered in snow. She couldn't feel it, but she could sense the cold air around them as the sleigh angled down, heading to the ground. The landing was predicatably smooth and they finally came to a stop, flanked by the jetbikes and their unsettling warriors. \n\nSanta jumped out and helped Ginny down, smiling at her and wrapping her in a warm, furry red blanket from head to toe. When he pulled it off her, she was no dressed in a stylish red velvet dress, trimmed in white and ending on her upper thighs to show lots of leg. Her calf-high boots were red and edged with white, with adorable little poms dangling from the side. She even had a white poof to keep her hands warm and the Santa hat she now wore kept her ears toasty. \n\n\"You look beautiful,\" he said as he waved in front of himself to conjure an ice mirror that reflected her image perfectly. \"And without you, Virginia, there wouldn't have been a Christmas this year. You need to understand that.\" \n\nGinny blushed prettily and walked alongside him, petting the reindeers as she walked by. She even gave Donner a kiss on the nose and the beast snorted and blushed, pawing the ground. They walked casually through the snow, holding hands until they were approached by several people. \n\nGinny's eyes went wide- these were all women, clad in black armour with baroque chestplates reminiscent of bustiers. They all wore their hair bobbed, universally black or platinum in colour and they carried savage-looking rifles or flamethrowers. They all knelt reverently as Santa approached. \n\n\"Do I want to know?\" Ginny breathed. \n\n\"My personal guard,\" Santa said, nodding to the women as he passed through them. \"Orphan girls I've saved from a cruel world. They're fanatically devoted to me, even beyond my elves.\" \n\nHer mouth was somewhat dry when she asked the next question. \"Do you... you know...\" \n\n\"Yes, Virginia,\" he said, saving her the difficulty of asking. \"They're also my lovers. When they're not fighting for me or standing guard, they live in the bliss I seem uniquely capable of giving women.\" \n\n\"That doesn't sound like such a bad life,\" Ginny said, a hopeful tone in her voice. \"I mean, I'm no orphan, but I'd say we pretty compatible sexually. Aren't we?\" \n\nHe turned and took her gently by the arms, smiling warmly down into her eyes in that way that made her knees go weak. Other people may have seen the fat old jolly man, but she could see only the copper-haired and bearded giant with eyes deeper than a galaxy and a boyish smile that she knew she'd always love. \n\n\"You're right, Virginia, you're not an orphan,\" he said quietly. \"These girls had no future. I have no right to rob you of yours. And believe me, you don't want to miss it.\" \n\nHe took her hand and kept walking, snow gently falling as they walked through the stands of tall trees. When they emerged on the far side, he grinned and gestured grandly in front of them. Ginny's eyes went wide. \n\nAcross the clearing was her lovely home, looking as good as new. Squads of warrior-elves stood guard menacingly around the perimeter while other, smaller beings she more associated with the Christmas story elves scampered around, making final adjustments to the domicile. \n\n\"Like the whole thing never happened,\" Santa declared. \"And there are even some improvements, I might add.\" \n\n\"Y'don't say,\" Ginny said somewhat absently, still staring in disbelief. All sign of the titan battle fought on her property less than twelve hours ago were gone. \"Uh... improvements?\" \n\nSanta nodded. \"We added solar panels and some subtle wind turbines, so you can offically live off the grid. Water's hooked up to a locla artesian well. Improved your internet connection, you get about two hundred megabits per second, not to mention the fact that we connected you to our servers, so the Tor Network and the Deep Web have nothing on you for security and anonymity.\" \n\n\"Wow...\" was all she seemed to be able to say. \n\n\"Let's see, we reinforced the frame and the roof, you could probably get hit by a meteor and barely notice,\" Santa continued. \"Windows are made of transparent aluminum, they're durable, to say the least.\" \n\n\"No bugs crashing through my bay windows?\" she asked. \n\n\"Actually got a nifty physics trick for you there,\" he said, smiling. \"Remember during the fight I put you against the South wall and said you were safe because they couldn't come from that direction?\" \n\nShe nodded. \n\n\"Well, thanks to some space-time-bendy engineering, quantum beings can no longer approach your property except from the South, which they can't come by anyway.\" \n\n\"I'll take your word for it about the physics.\" Ginny sighed, shaking her head. \"Anything else?\" \n\nHe nodded. \"You've got a new wine cellar, packed to the brim with some of the best vintages from all over the world and you've got a standing diamond membership in an exclusive club that will send you cases of wine free monthly.\" \n\nGinny was feeling almost light-headed and she hadn't touched a drink for hours. \n\n\"Oh, that patch of wild strain you found on your property?\" he added. \"You now have an off-the-grid, climate-controlled grow-op, currently riasing on seventy plants, including Alaskan Thunderfuck, Northern Lights, White Widow and South African Genetic.\" \n\nShe smiled up at him slyly. \"Think you might stop by some time for a party?\" \n\n\"Noooooo,\" he said, holding up his hands. \"Last time I got baked, Christmas went really weird. You've never seen so many confused children and strippers in your life. Thanks, I'll pass.\" \n\nShe giggled. \"Guess I'll just have to lure you back here with promises of tawdry sex, then.\" \n\n\"Good enough for me.\" Santa agreed, nodding. \"Oh, I almost forgot...\" \n\nHe pulled a small but gorgeous anial habitat out of nowhere and presented it to her. Ginny's eyes widened in shock. \n\n\"Oatmeal!\" she cried out in delight. Her bearded dragon was perfectly fine. \"How?\" \n\n\"I might've pocketed him for safe-keeping during the initial brawl and then handed him off to my elves while you and I were blitzing around the globe.\" Santa admitted. \"But I promise you he's perfectly healthy and his new habitat will keep him around for a long time.\" \n\nThere were tears in her eyes as she leaned forward to the habitat and cooed at her lizard, who instead of darkening and vibrating his wattles at her, moved up to the glass and licked it, like he was trying to kiss her. \n\n\"I don't know what to say,\" Ginny choked, trying not to cry. \"All this for me? I'm grateful, but... why?\" \n\n\"You saved Christmas, silly,\" Santa replied, laughing cheerfully as he handed Oatmeal off to an elf for safe keeping. \"How many times do I have to tell you? Virginia, without you, without everything you've done tonight, Christmas would not have come, no matter how hard I tried.\" \n\nHe put his hand on her cheek and looked down into her eyes. \"And you have no idea what that means to me...\" \n\nGinny's eyes were shining and her body trembling with emotion as Santa kissed her again, gently and lovingly. She'd never felt so appreciated, needed or loved in her entire life. She felt... complete. \n\nThe kiss ended and as she drew back from it, she looked down, her eyes widening in utter shock at what she saw. \n\nThere was a beautiful golden ring on her finger. \n\n\"Now don't read that the wrong way,\" Santa said, giving her a wry smile as she looked up at him in disbelief. \"It doesn't mean we're married. But there's an old Norse tradition where Woden, king of the gods and Vikings kings after him would give their most beloved retainers gold rings as a symbol of their esteem for them. That's what you mean to me, Virginia.\" \n\n\"But it's not just a symbol of my esteem,\" he said, taking her hand so they could both look at it. \"It's a way to talk to me, Virginia, to call me if you ever need me. If something's wrong, my elves can come help. If something's really wrong...\" \n\nHis next words melted her heart. \n\n\"I'll always be there for you, Virginia. No person living aside from you has one of these. That's how important you are. And I will always love you.\" \n\nGinny was still standing there in a stupor when he turned his head to look east, which was turning grey with the promise of dawn. \n\n\"I'd better get going,\" he said, making some gestures and causing the elves to begin packing up their gear to leave. \"It's not like I turn to stone or anything in the light, but I've gotta get home and start planning for next year, you know?\" \n\nShe nodded. \"I know, you're a busy man, Kris. But do you... do you think I could ever come... see you?\" \n\nHe considered for a moment before smiling and nodding. \"I'd like that, Virginia. We'll set something up and you can teach everyone at the North Pole how to really have a good time. Place gets a little stale on occasion.\" \n\nHe clasped his hands over hers and kissed her cheek as the reindeer walked up, pulling his sleigh. She reluctantly released his hands and watched as the huge man leapt lightly into his ornate vehicle and grinned at her. \n\nShe could barely keep the wonder from her voice. \"Are... are you Woden?\" she asked. ",
        "\"Woden't you like to know!\" he laughed loudly, causing everyone nearby to do likewise at his jest. Even Ginny giggled, hiding her absurd smile inside the silver-white poof. \n\nShe watched as he snapped the reins and the reindeer snorted and broke into a gallop, rapidly pulling away from the ground. Still rapt, Ginny waved as the sleigh became a silhouette against the lightening sky. \n\n\"Merry Christmas, Virginia!\" she heard him call. \"I'll see you again next yeeeeeeeeaaaaaarrrrrrrrr!\" \n\nGinny turned and closed her eyes, taking a deep breath and willing herself not to cry. When she opened them, they were glinting with a self-satisfaction she rarely felt. \n\n\"I saved Christmas,\" she thought as she strode back into her house. \"Love to see that bitch Suzie Langston pull that off...\" \n\n*** \n\nOne year later... \n\nThe firm's Christmas party was a riotous success. The company was ending a banner year with record profits, in no small part due to the efforts of their newest senior partner and her incredible negotiating skills. Champagne, wine and schnapps flowed freely and even the office curmudgeons were having a wonderful time, dancing and celebrating the holiday. \n\nIn old man Reese's office, a much more private but equally riotous party was happening. Ginny was panting and moaning as she squirmed up and down on Chad's cock while he fucked her pussy. Behind her, Roland from accounting was shuddering while he braced her by the hips as he pumped his member in and out of her tight ass. Lying on top of Chad, yelping like she was being skewered, was Lily from the secretarial pool, trying not to scream as the strap-on that Ginny was wearing fucked her hard. \n\nStanding over Chad and Lily was old man Reese, who was trembling while Ginny sucked hungrily on his cock. She could feel her body shining with sweat from their exertions, but she knew she would make them all cum, harder than they ever had before. As brilliant a deal-maker as she'd turned out to be, it wasn't a patch on how good she was at fucking and making love. \n\nAfter all, she'd learned from the best. \n\nAnd she'd also learned a lot about herself in the year following that fateful Christmas night. True, living with Santa at the North Pole might have been fun, but now that she was living the future he'd told her about, she was happy to be right where she was- trembling, covered in sweat, impaled every possible way upon cocks and about to cum so hard she thought she'd faint. \n\nShe moaned loudly as the orgasm crashed over her, bringing everyone else along with her. Lily wailed as she came, while Chad and Roland both shuddered and groaned, pumping their cum into her pussy and her ass simultaneously. Old man Reese grunted and clapsed her hair, hips bucking as he pumped his offering into her mouth. \n\nOvercum with the bubbling, foaming lust within, Ginny swallowed hungrily before pressing the boss' cock between her breasts and massaging it eagerly, watching in delight as it continued to pump, glazing her soft orbs. \n\n\"My goodness, Virginia,\" the old man grunted, trying to hold himself still. \"You're such a naughty girl.\" \n\n\"Oh, no, sir,\" she purred, kissing at the head of his cock as it appeared between her breasts before looking up at him, eyes shining, even while she writhed up and down on her lovers below. \"No, sir, I assure you I have it on the highest authority that I'm actually a very good girl...\" \n\n~fin~ \n\nAuthor's Notes: Well, the conclusion of this story was way overdue and you have my apologies about that. Real life has a way of interfering with one's pleasures, especially if one has recently relocated across national boundaries. I'm very happy to be home, but adjusting and getting my life arranged has cut into my writing time rather badly. \n\nI make no apologies for finishing this story, since I knew it was only three chapters and I wanted it complete. Having said that, I think that Alex &amp; Alexa will be updated next, along with My Naughty Neighbour and The Great Khan. \n\nI'm going to make a plea, not on my behalf, but on behalf of other writers on here. It's one I've made before, but it bears repeating. \n\nTry not to be shitty to the writers. People write what they like and choose to share their works, perhaps hoping for feedback that will either validate the effort or at least result in a sensible critique they can take to heart and use to improve their craft. Too often, trolls who are too cowardly to have an account will give horrible ratings and scathing reviews that are not the least bit constructive but posted simply to make the author feel bad and themselves feel good by putting someone else down. \n\nI'll use a personal example- Chapter 2 of this particular series was doing VERY well in the ratings for several days, sitting at a 4.85. One troll left a crappy review, a terrible rating and dropped the overall rating down to 4.70. \n\nNow granted, 4.70 out of 5 is nothing to sneeze at, since it translates as a 94% rating, but what irked me was that Chapter 2 could have been the highest-rated story in the entire Humor &amp; Satire category, and would have ended up in the Hall of Fame, as its best-rated story. \n\nAnd some troll dashed that hope simply because they could. \n\nThere's nothing that can be done at this point, except for me to keep soldiering on and knowing my stories are better than a troll's bitter attempts to lash out. But once again, be kind or at least considerate to the authors on here. There are some god-awful stories out there, no question. Do you live any longer because you shit all over them? \n\nIf I see a story I don't like, I stop reading and don't rate it. I feel no need to punish an author who published a crappy story. They're already stuck being crappy at writing, they don't need my Anonymous caprice to make things worse and I take no schadenfreude in it. \n\nBe generous with your constructive criticism and your ratings, it's not like you're paying for a subscription. \n\nI guess that's all for now. I've got stories to write. \n\nKeep your stick on the ice! \n\n- Management (Savagely Canadian)"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "humour",
        "multiple partners",
        "weird physics",
        "incest",
        "romance"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/miracle-on-rr34-ch-03"
}