{
    "title": "Sounds Good Ch. 07",
    "pages": [
        "Thanks again to Alianath Iriad and Lastman416 for their constructive criticism, editing prowess, and continued support. Any remaining errors are mine. \n\n*** \n\nI was excessively, ridiculously happy. Mom smiled every time she saw me, because I was always smiling myself. How could I not? I had another date with Patience. \n\nShe worked as a waitress, at a family restaurant (part of a chain). Her shifts were Tuesday to Saturday, from 4 to 11 p.m.. Yes, I saw the parallels with Ronnie. No, I did not mention them to Patience. \n\nFor one thing, her job was real. I couldn't click on a screen and just skip to the next event in our lives. On the plus side, she didn't have to work until the early hours of the morning. On the down side, they didn't sell much alcohol, and the prices were very affordable, so she didn't make as much in tips as she might have elsewhere. \n\n- \"I don't mind, really.\" she said. \"Screaming kids, picky people ... but I don't get my ass pinched as much. It could be worse.\" \n\n- \"Wait - you get pinched?\" \n\n- \"Only once in a while. My last job was worse. But I still get hit on. It's getting so that we can almost predict which customers will be obnoxious. It's usually not a young guy alone. But a group of young guys, strapping on a feedbag before going out to party? Watch out.\" \n\n\"When you're a waitress, you're a captive audience - like a hostage. The customer can complain, or try out their dumb pick-up lines, and all we can do is grin and bear it.\" \n\n- \"That sounds awful.\" \n\n- \"I get through it by imagining my last day on the job. I'm going to dump a bowl of French Onion Soup on the most deserving creep of the day. Then I'll quit, and just walk out.\" \n\nI didn't quite know what to say to that. Patience saw my confusion/concern, and kissed my cheek. \n\n\"It's alright, Cyrano. This just pays the bills until we find out if the game will make any money. I won't do it forever. Worst case scenario - I'll go back to school, and you can support me.\" \n\nShe was just kidding, but I always loved to hear Patience talk about the future - our future together. \n\nWe went out at least twice a week, before her shift, for lunch, or for some sort of outing. Museums, the art gallery, the antique store, the classic records store, or the last remaining used bookstore in the city. \n\nThere were so many things that she might have liked to do, that I simply couldn't: bowling, hiking, going to a bar or nightclub ... so I made it a rule never to turn down any of the ideas she came up with. \n\nSometimes we went out on a Sunday or Monday night: to a movie, to hear a band in a small venue, or whatever new ingenuity Patience dreamed up in her fertile mind. \n\nBut one of her days off was always devoted to watching a movie with me. 'Movie Night' she called it, and she never failed to look me at me with a smile. \n\nThat might have been because 'Movie Night' was always at my house, and always ended up with us sitting on the couch in my basement, arms wrapped around each other, lips and tongues busy ... \n\nPatience was devoted to my education. We repeated my first experience of passionate kissing (while I missed much of 'Butch Cassidy &amp; the Sundance Kid'). But after that, she began to add new dimensions to 'Movie Night'. \n\n- \"You're going to love this one.\" she promised. \n\n- \"The Hustler?\" \n\n- \"Trust me.\" \n\n- \"I do.\" \n\nThis movie was a little different. No, I don't mean because it was in black and white. \n\nPatience waited about fifteen minutes before cuddling closer. Then we started kissing. \n\nOn this occasion, though, she seemed a little more ... eager. We progressed to tongues almost immediately, and Patience squirmed and snuggled even closer. \n\nWhen we finally paused, to breathe, she reached out and took my hand. Then, with her eyes on mine the whole time, she raised my hand, and placed it on her breast. \n\nShe was wearing a flannel shirt (the weather was getting cooler). I realized, almost instantly, that she wasn't wearing a bra. \n\nPatience was tiny. But she had curves, and as I'd seen when she wore a dress to the racetrack, some of those were up top. \n\nI had my hand on her breast. \n\nFor a few moments, I tried to play it cool -as if this was an everyday occurrence. But that was downright stupid. You ain't foolin' anyone, Cyrano, I told myself. \n\nI tried to concentrate on kissing Patience, but she knew that I couldn't do two things at once very successfully. She drew back, and looked me in the eye. \n\n- \"Would you like to see them?\" she whispered. \n\nMy mouth was suddenly completely dry. I managed to nod. \n\nPatience slowly reached for the top button of her shirt. She undid it, ever so slowly - and then stopped. \n\nI had to look up, into her eyes, to see that was she smiling. Mercifully, she only teased me a little, undoing one button at a time, to the rhythm of some incredibly slow song that only she could hear. I was mesmerized, unable to do anything other than watch. \n\nShe undid five buttons - down to just below her navel. She had a piercing there - a little gem. I looked up, into her eyes. \n\n- \"I want you to look.\" she said. \"And to touch.\" \n\nI looked. Her breasts were much larger than I would have expected. Fuller. She was petite, and her breasts didn't stick out very far. But they were sizeable. Her nipples were higher than I would've guessed, perhaps three quarters of the way up the surface of her wonderful ... breasts. \n\n- \"They're ... beautiful.\" I got out. \n\nSomehow, I found the courage to reach out a hand, and slide it inside her flannel shirt. I touched her bare skin, and my hand trembled. But I was able to caress the side of her beautiful boob, and to lift it slightly, as if to weigh it. \n\nWe kissed again, and I discovered the joys of attempted multi-tasking. We traded tongues, and kissed ever more passionately, while I explored the contours and substance of her delightful breast. \n\nI found the courage to caress her nipple, and noted the change in Patience's breathing. Her kissing intensified, too - I was doing something right. \n\n- \"You can ... kiss them, too.\" she whispered. \n\nI accepted the invitation. \n\nWe kissed, and I fondled her breasts as I licked and sucked on her nipples. \n\n'The Hustler' remains one of my favourite movies, to this day. \n\n*** \n\nOn our next movie night, we only managed to watch ten or fifteen minutes before we came together like magnets. Our kissing very quickly became more passionate. \n\nI didn't wait for Patience to extend an invitation; I put my hand over her breast. Her breath caught, for an instant. \n\n- \"Mmmm ...\" she purred. \n\nA few moments later, we had to pause for breath. She looked me in the eye, and grinned. I don't know what got into me; I became very bold. As she looked at me, I reached for the top button of her shirt. \n\nPatience didn't protest as I undid it. If anything, her grin became a little wider. I undid another button, and then another. Her large eyes never left mine. \n\nI undid all of her buttons, and slid my hand inside her shirt, against the warm skin of her stomach. Then I slid it up, over her ribs, to cup her breast. \n\nShe leaned forward, to kiss me again. \n\nI caressed her breasts for quite some time, and dipped my head to take her nipple in my mouth. Patience stroked my hair as I licked and sucked. \n\nBut there was something different, this evening. No, it wasn't the movie. \n\nMaybe it was because I'd touched her breast so soon, or maybe we were both just a little more keyed up. I could hear the difference in her breathing. Patience was more aroused - and so was I. \n\nShe twisted around, on the couch, and put her legs across my lap. She wasn't quite sitting on me, but she'd completely changed the angles of our kissing, and of my exploration of her chest. \n\nI could also feel her ass pressed up against the side of my thigh, and her thighs across my legs. We resumed kissing, and I fondled her breasts again, but I was all too aware of the new dynamic she'd introduced. \n\nShe'd effectively drawn to my attention to the fact that she had a lower body, too. She wanted me to touch her legs. \n\nI did. Patience was petite. My hand almost covered the whole top of her thigh, with my fingertips nearly touching the couch beside her leg. \n\nShe purred again, and sucked on my tongue. Thus encouraged, I began to stroke her leg, from her knee to her hip. \n\nPatience surprised me by undoing the top button on my shirt. \n\n- \"It's only fair.\" she whispered. She undid four more buttons, and then slid her little hand inside my shirt. \n\nI had read that male nipples were sensitive - but I'd never really believed it. Touching my own nipples had never done anything for me, except to make me feel stupid. \n\nBut Patience touching them? That was an entirely different matter. \n\nShe stroked my stomach, and ran her fingers over my skin. Then she astonished me by bending her head, and flicking her tongue over my nipple. \n\n- \"Ah!\" It was like a jolt of electricity. Patience chuckled at my reaction. \n\n- \"Sensitive, are they?\" \n\n- \"Yes. A bit.\" \n\n- \"Dan?\" \n\n- \"Mmm?\" \n\n- \"Could you get a blanket for us?\" she asked. \n\n- \"Oh - are you cold?\" \n\n- \"A little.\" \n\nShe moved her legs, so that I could get up. \n\nNo, I didn't for a moment forget that it was Patience who had created the character of Michelle. I'd never experienced it in real life, but I had picked up a few ideas from her about what could go on under a blanket. \n\nShe might actually be a little cold, but I suspected that Patience was thinking more about what it would look like if my mother happened to suddenly come downstairs. \n\n- \"Ooh - that's soft. And it looks warm. Good choice.\" \n\nPatience immediately resumed her position, with her legs across mine. She artfully arranged the blanket around her shoulders, and then draped it over us both. \n\n- \"Better?\" \n\n- \"Much.\" \n\nShe kissed me again, and re-inserted her hand under my shirt. I replied in kind. But I was still pondering what had motivated her to ask for a blanket. That didn't stop me from responding to her increasingly passionate kisses. \n\nThe next time we paused for breath, I dared to say what was on my mind. \n\n- \"There's one more button I'd like to undo.\" \n\nPatience didn't even blink. She knew very well that I'd already undone every button on her shirt. \n\n- \"I'd like that, too.\" \n\nSlowly, I reached for the button on her jeans. \n\nIt was a little more difficult than I'd anticipated. Patience assisted me. She also held the top of her pants while I pulled down the zipper. \n\n- \"Here.\" she said, as she used the arm around my shoulders to lift herself, and her free hand to slide her jeans down to her knees. \n\nI was all too aware of what a milestone this was for me. I was in a girl's pants. Well, technically, we'd slid them down, but ... you get the idea. \n\nAnd not just any girl - Patience. A woman I admired, and respected, and was so damn attracted to. The difference, when there's love as well as lust, is enormous. I had absolutely no experience with women, yet I knew how fortunate I was to be with Patience. \n\nI carefully slid my fingers under the waistband of her little cotton panties. \n\nI don't know what I'd expected, but I encountered no hair at all. She was completely clean-shaven. He skin was absolutely smooth. \n\nWhen I dipped my hand between her legs, I discovered that Patience had incredibly thick outer lips. Meaty was the word that came to mind. \n\nShe shuddered when my index finger trailed between them. \n\nThere was just a little moisture there, and I used my fingertips to spread it around. Patience encouraged me by breathing hotly in my ear, and by clutching me to her just a little more tightly. \n\n- \"I love you.\" she whispered. \n\nI felt an incredible surge through my entire body - like a pulse that that rushed through my veins. I'd never felt so alive as I did that moment. \n\n- \"I love you, Patience.\" I replied. \n\nShe held me even tighter, and shifted her hips slightly, to offer me even greater access. \n\nHad I known was I was doing, I suppose that I could have heightened her pleasure. There was no question that I was completely lost, navigating without GPS. \n\nBut I believe that Patience truly appreciated my careful, gentle approach to her pussy. I was afraid to hurt her by being too rough. Instead, I may have erred on the side of caution. \n\nYes, I wanted to bring her to orgasm. But I also hoped to make it as pleasurable for her as possible. I took my time, and tried to let her breathing - and her occasional gasp - guide me. \n\nShe also started kissing me again, and there were signals aplenty there. When I found a good spot, Patience let me know it, by intensifying her kiss, or by how aggressively she thrust her tongue into my mouth. \n\nI knew roughly where her clit was, though I couldn't see it. I also knew - from reading - that a circuitous approach might be better than direct pressure. \n\nI was close - but not quite close enough. Patience reached down, found my thumb, and moved it a fraction of a inch. \n\n- \"There.\" \n\nWhen I resumed I my soft, slow circling, she moaned softly into my ear, and held me just a little bit tighter. Then she shuddered, and made a little sound. \n\nShe wasn't loud, but it was clear: I'd brought Patience to orgasm with my fingers. I felt a tremendous sense of achievement. \n\n\"That was ... mmm ...\" she said. \n\nWe held each other, while she basked in the afterglow of orgasm, and I enjoyed my accomplishment. \n\n- \"Can I ... return the favour?\" she said, softly. \n\n- \"You don't have to.\" Honestly - I was perfectly happy. Yes, I was hard - freakishly hard. But I wasn't overpowered by desire. \n\n- \"I want to.\" \n\nPatience found the button on my pants, using both hands. \n\n\"Lift your hips.\" \n\nI followed instructions, and she pulled my pants down - and my underwear with them. \n\nAt that moment I realized that there was something just as good as getting into a girl's pants - and that was when the girl gets into your pants. \n\n- \"Oh, my.\" she said. I don't know if she was referring to the size of my dick, or how it felt - or even its aesthetic features. But it was an ego-booster, anyway. \n\nShe had my complete attention, as she stroked my cock. Patience leaned closer, and kissed me. \n\nHer hand was magic. I'd had no idea, until that moment, how much better someone else's hand would feel, compared to my own. \n\n- \"God, Patience ...\" \n\n- \"Wait.\" \n\nI don't know exactly how she did, but in a fraction of a moment, Patience shifted the blanket, and dipped her head under it. \n\nSuddenly, I felt her hot breath on the head of my cock. And then she took me in her mouth. \n\nI'd been anticipating - with pleasure - my first hand job. Suddenly, though, I was promoted to my first blowjob. \n\nHer tongue swirled around the crown of my dick. Then she engulfed several inches, locking her lips around my erection, and sliding them up and down. \n\nIt was the most incredible, mind-blowing sensation of my life. \n\nNaturally, I began to come. I grunted, and tried to warn Patience of the imminent explosion. I even put a hand on her shoulder, and tried to push her back. \n\nShe fought me, and took me even deeper in her mouth. \n\nI erupted - that's the only word for it. I spewed a geyser of cum into her mouth. She gulped, and swallowed, but there was too much. It overflowed, and spilled over my leg. \n\nPatience gulped and swallowed again. \n\n- \"Sorry ..\" she said. \n\nI dragged her up, and wrapped my arms around her. I squeezed her tightly enough to make her gasp for breath. \n\nI kissed her - hard. She responded. \n\nWhen we paused - to avoid passing out from lack of oxygen - Patience smiled at me. \n\n- \"Darn.\" she said. \"Another movie we're going to have to watch again.\" \n\n*** \n\nMom insisted on inviting Patience to dinner. \n\n- \"You don't have to.\" I said. \n\n- \"Daniel - Patience is very important to you. I want to get to know her. It's not a test - she's already passed. If she makes my boy happy, I'm going to like her.\" \n\nI couldn't fault that logic. \n\nBut at a table set for three, with two alpha females present, I wasn't about to dominate the conversation. \n\n- \"I don't understand.\" said my mother. \"You'd just met at this party. How could you know that you wanted to go out with him? Are you saying that it was love at first sight?\" \n\n- \"No.\" said Patience. \"I liked him long before we met.\" \n\n- \"From just a few emails, you knew?\" \n\n- \"You're forgetting that Dan was critiquing our game. Everything he said made eminent good sense. Did you know that we changed the title - to something he suggested?\" \n\n- \"I didn't know that.\" said Mom. \n\n- \"I was impressed by his good sense, his intelligence. He had a ... feel for what we trying to achieve. And he helped us a great deal.\" \n\n\"Meanwhile, I was listening to his voice. It didn't seem fair: he was smart, sensitive, and ... did you know that his player name was Tristan? And that his email address is Cyrano? I mean ... who does that?\" \n\n- \"Tristan and Isolde?\" said my Mom, with a brief glance at me. \n\n- \"Right?\" said Patience. She reached across the table, to take my hand. \"And then every time I listened to his audio critiques, I marvelled at his voice.\" \n\nShe went on to describe to my Mom how she'd listened to my commentaries over and over again. \n\n- \"I fell under his spell. I fell in love with his voice. And then he sent me a message. Dan asked me to congratulate the voice actor playing the part of Ronnie. According to him, she had 'the most wonderful voice'.\" \n\nPatience squeezed my hand again. \n\n\"It was amazing. I loved his voice, and this incredible man was telling me that he liked my voice. I was thrilled. He'd already complimented my intelligence, and now I was thinking about his second name: Cyrano.\" \n\n\"The difference, of course, was that I knew whose voice I was in love with. But he didn't. I was terrified that he wouldn't like me -that he might be ... repulsed - by my looks.\" \n\nMom shook her head. \"You're a beautiful girl, Patience.\" \n\nPatience smiled. \"Thank you, Mrs M.. I grew up feeling otherwise. But Dan has made me feel attractive, every time I've been with him.\" \n\nMom shook her head, slowly. \"So, you fell for each other's voices?\" \n\n- \"People connect online, nowadays.\" said Patience. \"We did that. He liked my writing, and my responses to his reviews. I admired his intelligence, and his good sense.\" \n\n\"But we were far ahead of the usual online connection. We both liked the sound of each other's voices -\" \n\n- \"Loved.\" I said. \"I love your voice.\" She smiled, and squeezed my hand. \n\n- \"I wanted to know more about him, so I asked his friend Mike. That's how I found out that Dan has MD. I did some research, and read about it.\" \n\nMom made her serious face. \n\n- \"It's not something to be taken lightly.\" \n\n- \"No. I understand that.\" said Patience. \"But it doesn't change how I feel about your son. And if I can make him happy ... likes he makes me ...\" She smiled at me. \n\n\"I read that worrying about the future doesn't help all that much. I know that Dan has to stay on top of his physiotherapy, and carefully monitor his condition. But if I can encourage him - help him look forward to next week - wouldn't that be a good thing?\" \n\n- \"You sound like one of my counsellors.\" I said. \"Better looking, though.\" \n\n- \"You may be right, Patience.\" said Mom. \"He does look forward to seeing you. And he's not quite so grumpy in the mornings since you two started seeing each other.\" \n\n\"I'm not trying to talk you out of dating Dan. Far from it.\" \n\n- \"I know. You just want me to be aware of what Dan has to deal with. I appreciate it.\" ",
        "Patience and I cleaned up, and did the dishes. \n\n- \"She likes you.\" I told my girlfriend. \n\n- \"I hope so. Your Mom's incredible.\" \n\n- \"I think so.\" \n\n- \"But your father was an idiot.\" said Patience. \n\n\"You better not take after him.\" \n\n*** \n\nSnogg and Patience released the game. It was bug-free, and almost error-free. It was, as I knew firsthand, an excellent game. Positive reviews and comments began to accumulate. \n\nThe cousins were already working on their next game. \n\n- \"Will you proof-read for me?\" she asked. \n\n- \"Of course.\" \n\nBetween her waitressing job and the new project, Patience was pretty busy. But she wouldn't let that interfere with our schedule. We went out at least twice a week, during the day, even if it was just for lunch. \n\nPatience always insisted on driving me home from at least one of those dates. Then she would gladly accept my invitation to 'come in for a coffee'. \n\nI meant that honestly, the first few times. But somehow, we always seemed to end up snuggling on my couch, as Patience continued my sexual education. \n\nI discovered that she loved having her ears stroked, or kissed, and that running my fingertip along her jaw line was guaranteed to turn her on. \n\n'Come in for a coffee' almost invariably led to a handjob or a blowjob for me; but while Patience was happy to have me bring her off manually, she refused to let me go down on her. \n\n- \"I don't understand.\" I told her. \"How is that fair?\" \n\n- \"I know that your Mom isn't going to suddenly come downstairs, and find me going down on you. But it would be more embarrassing for me if ...\" \n\n- \"But -\" \n\n- \"I know. It doesn't make sense. But that's how I feel. Please ... be patient with me.\" \n\nHow could I not? \n\nWe also got together every Sunday and Monday night. On some of those occasions, we went out, but at least once a week - and sometimes twice - it was movie night. \n\nSome of them we actually watched. \n\nBut we also cuddled on the couch, usually with my now-favourite blanket. I couldn't remember a movie night that didn't end with orgasms. \n\nIt's hard to complain about orgasms. I just wanted to go down on my girlfriend - to take that next step in our relationship, as well as my education. \n\nWhen Mom mentioned that she would be going out to dinner with a couple of friends on Sunday, it took me a moment to realize what this might mean. \n\nIf Patience and I made that a movie night ... \n\nI didn't hesitate to tell Patience, at the first opportunity. \n\n- \"Is that so?\" she said. \"And you're telling me this because ...?\" \n\n- \"You're just messing with me. You know very well what I want.\" \n\n- \"Oh? And what might that be?\" \n\nShe just wanted to hear me say it. I obliged her. \"I want to go down on you.\" \n\n- \"Mmm ... that would be nice. But you might get even more than that.\" \n\nMy eyes just about popped out of my head. Had she just said ...? \n\n\"I think we're ready. Don't you think that we're ready?\" \n\nIt would have been great to come back with something heartfelt, or even something suave. The best I could do was \"Umm ...\" \n\n- \"And if we might be making love soon, then you need to be prepared.\" \n\n- \"Prepared?\" \n\n- \"Responsible, and prepared.\" said Patience. \n\nI was too embarrassed to tell her that I already had condoms, thanks to my Mom. \n\nSo my girlfriend to took me to the drugstore, where she took me into the aisle where they kept the condoms. Prophylactics. Rubbers. The variety was bewildering. I had no idea there were so many types. Or where to begin. \n\n\"Nothing too fancy.\" she suggested. \"Lubricated is nice, unless your girlfriend is allergic, or prefers more natural lubricants.\" \n\n- \"Umm ... are you allergic?\" \n\n- \"No.\" \n\n- \"Okay. Three of these?\" \n\n- \"You might as well get a dozen. And some lubricating gel. Sometimes a girl needs a little help. You never know.\" \n\nI was bright red by the time we got to the cashier. As luck would have it, there was an elderly lady ahead of us. It took her ages to find the exact change in her coin purse, and then to locate her points card. \n\nThe cashier was very patient, but I was starting to sweat. It didn't help when a line began to form behind us, headed by another elderly lady leaning on a walker. \n\nOh, God, I thought: why not just televise the whole thing? I should have thought to buy some more items, like mouthwash, or deodorant - or toilet paper - to make it look like the condoms were just an afterthought. Or to hide them. \n\nThe old lady in front of us was now chatting with the cashier, who seemed to be in no hurry. Normally, I'm all in favour of friendly, courteous service. On this occasion, though, I would've preferred some impersonal speed. \n\nBy the time Grandma Moses was done, there must have been seven people in line behind us. \n\nThe cashier scanned our two items. Then, to my utter horror, she held up the lube, and examined it. \n\n- \"This stuff any good?\" she asked. \n\nIf there had been a hole nearby, I would gladly have crawled into it. But Patience just smiled. \n\n- \"I don't know. We haven't tried it yet.\" she said. \"It's going to be our first time.\" \n\n- \"Oh? That's nice.\" said the cashier. She slid our two purchases into a plastic bag. \"Have a good one.\" \n\nThen she seemed to realize what she'd just said. Both the cashier and Patience burst into laughter. I was too mortified to look back, to see what the old lady with the walker was doing. \n\n*** \n\n\"You have to admit, it was pretty funny.\" Patience insisted. \n\n- \"Years from now, I may come to agree with you.\" \n\n- \"Oh, come on. It's funny now.\" \n\nShe drove me home, where - to my renewed horror - she proceeded to tell my mother the entire story. \n\n- \"No! Have a good one? That's what she said?\" Mom seemed to find it as amusing as Patience did. \n\nBut she spared a glance for her mortified son. \n\n\"Oh, don't worry about it, Dan. You'll laugh about it soon enough. I'm very glad, too, that you're being responsible.\" \n\n- \"Actually, we don't really need the condoms.\" said Patience. \"I went on the Pill after our second date.\" \n\n- \"Wait - we didn't need them?\" I said. \"You mean all of that was for nothing?\" \n\n- \"No. All of that was a lot of fun.\" \n\n- \"Patience was trying to get you to think responsibly.\" chipped in my Mom. \"I think that's a very good idea.\" \n\nTo my intense relief, Mom didn't mention giving me a box of condoms. I got over my embarrassment. \n\nEventually. \n\n*** \n\nFirst, though, my mother decided to have a 'Birds &amp; the Bees: Advanced Edition\" talk with me. \n\n- \"Take your time.\" she suggested. \"Go slow. You may want to ... well, foreplay is good. You can never have enough foreplay.\" \n\n- \"Okay, Mom.\" \n\n- \"Don't be afraid to talk to her. Before - and during. Ask her what she likes. \" \n\nShe gave me tons of advice, all of it as well-meant as it was embarrassing. How many parents - let alone single Moms - do that for their kids? \n\n- \"Thanks, Mom.\" I said. \"I mean it. I appreciate what you're trying to do for me.\" \n\nShe didn't cry - but it was close. \n\n*** \n\n- \"Just so you know, Daniel. I've had a grand total of two sexual partners before you. The last one was over a year ago.\" \n\nI didn't like hearing about Patience with any other guy, but I came to appreciate her telling me. I could have imagined much worse, so it came as something of a relief to learn that she only been with two men. She refused to say any more about them, which was probably a wise decision on her part. \n\nIt might not have been so wise, on my part, but I told Patience about my mother's coaching session. \n\n- \"That's sweet.\" said my girlfriend. \"She's right, too. Let's take our time.\" \n\nPatience advised me to take a shower just before she came over, that Sunday evening. Then she arrived with an overnight bag, which she deposited in my bedroom. \n\n- \"Your Mom said that I could stay over, if we were up late.\" she said, with a grin. \"Or if I had a couple of glasses of wine.\" \n\nI already had high hopes for this movie night, but the thought of Patience sharing my bed, sleeping beside me after we'd ... well, my heart started to beat faster. Much faster. \n\n- \"You look great.\" I told her. She did, too: she was wearing a turtleneck that clung to her curves, and a pair of tight jeans. \n\n- \"Thank you, sir.\" \n\nMindful of her suggestion, though - that we should take our time - I waited patiently while she set up a movie for us. Then we watched for a while. I couldn't concentrate on what was on the screen: I was far too aware of my beautiful girlfriend, sitting next to me. \n\nThen Patience slid closer, and nudged my arm - that was usually her signal that I should lift that arm and put it around her shoulders. \n\nShe cuddled a little closer. In my hyper-sensitive state, I could smell her freshly-washed hair, and I swear I could feel the heat of her body. \n\n- \"Aren't you going to kiss me?\" she asked. \n\nThere was only one answer to that question. \n\nHer lips were soft, and yielding. Patience seemed to melt into my arms. I began to understand that she might be almost as turned on as I was. \n\nI reached for her breast. She let me hold it for a moment. But then I realized that I was stymied. There were no buttons on her turtleneck. What was I supposed to do next? \n\nPull it over her head? That might require some cooperation on her part. Should I just ask her? Or maybe I could just show her where I wanted to go. \n\nThe turtleneck was tucked into her tight jeans. I pulled a bit of it out and up, creating a space just large enough to insert my hand. \n\n- \"Mmm ...\" That was me, moaning into her mouth. I was so keyed up, the feel of her warm, smooth skin made me shiver. \n\nPatience was working wonders with her tongue, while she allowed me to pull a little more of her turtleneck out of her pants, giving my hand more scope for maneuver. \n\n- \"Take your time.\" she reminded me. \n\nIt was good advice. I proceeded gradually, stroking and caressing her warm skin, and working more of her turtleneck out of her jeans. \n\nFinally, though, my hand touched the underside of her breast. I think I gasped again. \n\n- \"You really like them, don't you?\" she said. \n\n- \"Your breasts are fantastic.\" I managed to say. \n\n- \"You can call them boobs. Little boobs ... but they're still boobs.\" \n\n- \"Not so little. And they're ... wonderful.\" \n\nPatience glanced down. Then she looked up, into my eyes. \n\n- \"It might be time to move to your room.\" \n\nShe was right. There was a wet spot on the front of my pants. \n\nI felt a little self-conscious as we stood up, and walked to my bedroom, hand in hand. \n\nPatience was more experienced than I was. But she was also far wiser. She knew how important these moments were, for me. She could also tell that I would reach the boiling point in no time. \n\nThat was why she took charge, and set the pace for us. I was just intelligent enough to let her. \n\n- \"Let's start with your clothes, for a change.\" she said. \n\nPatience helped me remove my sweater and shirt, and then sank gracefully to one knee so that she could undo my pants, and pull them down. \n\nShe didn't linger, or tease; she was almost matter-of-fact about the whole business of stripping me. When she pulled my underwear down, she gave my erection a stroke, and then a kiss - but that was all. \n\nThen she had me sit on the edge of the bed, so that she could take off my pants and underwear, and then my socks. I was completely naked. Patience took a long look at me. \n\n- \"You look great, too.\" she said. \"But make yourself comfortable. It's a bit cold - why don't you get into bed?\" \n\nI trusted her. So I pulled down the covers and climbed into my bed. I sat up, with my back against the headboard, and pulled the sheets up to my waist. \n\n\"Oh, no.\" she said. \"That won't do.\" Patience lifted one of my pillows, and inserted it between my back and the headboard. \n\nFinally, she pulled the sheets down a bit, so that they covered me only up to mid-thigh. \n\n\"How's that?\" she asked. \"Better?\" \n\n- \"Yes.\" \n\n- \"Good. It's better for me, too.\" Patience wasn't shy; she gave my cock a long, admiring look. \n\nThen she did the most amazing thing: she backed up, close to my bedroom door, and proceeded to slowly remove her own clothing - all for me. \n\nIt wasn't a striptease, exactly. She didn't bump and grind, or anything like that. But Patience proceeded slowly and methodically. One piece of clothing at a time. First, the turtleneck. She pulled it over her head, giving me a great view of her torso, and gradually revealing her wonderful ... boobs. \n\nHer eyes were on me the whole time, encouraging me to stare, to look my fill. Perhaps I should I have complimented her - told her how beautiful she was - but I was completely tongue-tied. Awestruck. \n\nShe undid her super-tight jeans, and somehow peeled them off. When she turned, to fold them, and carefully lay them on her overnight bag, I discovered that Patience had an incredible ass. \n\nI'd seen her butt before - in pants, and in a skirt. But I couldn't have imagined what it would look like clad only in panties. \n\nThen, with her back to me, Patience bent at the waist, and pulled those panties down to her ankles. \n\nMother of Mercy. \n\nShe was petite, and her ass was not very big, but it was exquisitely shaped. I wanted to grab it, to kiss it, to name civic monuments after it. \n\nBetween her divine little cheeks, I could see her protruding pussy lips. \n\nPatience lingered in that position, as she slowly removed her socks. When she finally turned around, she was smiling. \n\n- \"Wow.\" I breathed. \"You're ... a marvel.\" \n\n- \"I wanted your first time to be memorable.\" \n\n- \"You think I'll ever forget this?\" \n\n- \"Hopefully not.\" she said. \"Make room.\" With that, she lifted the covers and slid into bed beside me. I moved down from my sitting position, until I was lying next to her. \n\n- \"Thank you.\" I said. \"That was amazing.\" \n\n- \"We're just getting started.\" she said. \"But we're still going to take our time.\" \n\nEasier said than done. Patience slid forward, and wrapped her arm over me. But she also squished her breasts into my chest, and pressed the length of her delightful body against mine. \n\nWe were lying together, face to face. Completely naked. \n\nThe temptation was there - to flip her over, and climb on top. But she had yet to steer me wrong. I trusted her. If she said we should go slowly, then that's what we would do. \n\nAt first, we did nothing but kiss. I was all too conscious of her breasts against my chest, and of the heat of her pelvic area on my lower stomach. There was also my painfully erect cock, wedged against her thigh. \n\nI tried to concentrate on her lips, and on her tongue. I was nervous, though - and she knew it. \n\n- \"It's not a test.\" she said. \"Just relax and enjoy yourself. I promise - I won't schedule the exam until after your seventh or eighth time.\" \n\nThat was a sweet thing to say. It wasn't just encouragement; it was a promise, too - that we'd be doing this more than once. I didn't have to ring all of her bells, or set off fireworks on my very first attempt. \n\n- \"How did you get to be so smart?\" \n\n- \"I'm not. But I care about you, and I want you to feel good.\" \n\nShe ran her hand up my arm, and caressed my shoulder. I responded in kind. Take your time, I reminded myself - so I began with her arms, her elbows, and her shoulders. I kissed her neck, her jaw, and her ears ... which she liked, very much. \n\nSoon enough, I progressed to her lovely breasts. I was well acquainted with her boobs. By now I had a pretty good idea what she liked, too. \n\nI will admit that I did have a plan of campaign. I intended to kiss my way down her chest, across her belly, to her thighs, which I would thoroughly kiss and lick before moving on to my goal. \n\nUnfortunately, Patience knew exactly what I was doing as soon as I shifted my body a little lower in the bed. She got her hand under my arm, and dragged me back up until we were face to face. \n\n- \"Not yet.\" she said. \"I know what you want - and I want it too. But you're not going to last much longer. Please - let me go first.\" Her words made sense, sort of. But it was the pleading in her eyes that convinced me. \n\n- \"Okay.\" \n\n- \"Remember: we have all night.\" \n\nI let Patience turn me onto my back, while she kissed my neck, my collarbones, and then moved down to my chest. \n\nShe was right, of course. I was a stick of dynamite with a very short fuse, at that point. Had I gone down on her, I would've been thinking only of the next step. I would've tried to bring her to orgasm as quickly as possible. \n\nIt wasn't a race, or a contest. She deserved my undivided, unhurried attention. That was what she gave me. \n\nShe didn't skip over my nipples, but circled them with her tongue. But we both discovered a new sensation as she lightly ran her fingernails down from the bottom of my ribcage to my hips. It made every hair on my body stand up. \n\n- \"Ooh.\" she said. \"Somebody liked that.\" \n\nShe let her long hair trail over my lower stomach. Then Patience turned sideways, kneeling beside me. My dick was so hard, it was pointing at my chin. \n\nShe didn't tease me. She took hold of the base of my erection with her right hand, while she gently cradled my balls with her left. Then she gave the head of my cock a couple of drawn-out slurpy licks before taking me in her mouth. \n\nShe'd been right, of course. I didn't last long before I exploded, filling her mouth with my ejaculate. It felt like a geyser, but Patience didn't spill a drop. Still, she lingered over my cock for a moment, making sure that she'd got it all. \n\nI was panting a bit, but I wanted to touch her. Because of the way she was half-kneeling, half-sitting beside me, the closest part of her body was her hip and the lovely rounded bowl of her butt cheek. \n\nShe was well within reach, so I put my hand on her hip, and slid it down to caress her ass. \n\n- \"Mmm ...\" she murmured. That sounded like encouragement. She even shifted her position slightly, to grant me easier access. \n\nWith that kind of invitation, I pulled her a little further up the bed, so that I could reach her pretty little butt with both hands. \n\nI loved Patience's breasts; they were soft, and firm, yet squishable. Her ass, on the other hand (or on both hands) was smooth and yet muscular. Was this from standing on her feet all day, at work? \n\nThere was an added bonus as I fondled her cheeks: they spread apart a bit more, further exposing her prominent outer labia. That was a temptation I couldn't resist. \n\nI ran my hand up her thigh, and traced the outline of her lips with my fingers. \n\nPatience didn't say anything, but I felt her tremble. A moment later, she inched up the bed, just a little bit closer. \n\nTake your time, I reminded myself. I stroked her calves, and tickled the backs of her thighs. It was part teasing: I admit that. But I was also discovering what she liked. Lo and behold - goose bumps popped out all over her skin when I stroked her hamstrings and the back of her knee. \n\nI returned to her ass, massaging away the goose bumps. Then I did the same for her thighs. At that point, I couldn't resist any longer; I slide my hand between her legs again, this time running my finger between her lips. \n\nThrough all of our movie nights, I'd had plenty of practice pleasing Patience with my fingers. But I'd always been sitting beside her on the couch, or with her legs across my lap. This position, with her ass so close to my face, was new - and very exciting. \n\nIt's not polite to stare. But she wasn't going to see me doing it, so I was able to watch as I slowly slid a finger inside her. \n\n- \"Mmmm ...\" She definitely liked that. \n\nI was enjoying it, too. But it wasn't part of my plans to bring her off this way. The question was, how could I smoothly transition to changing our positions? How to put Patience on her back, so that I could go down on her? ",
        "My clever girlfriend solved that problem for me. She pulled away, and then turned around, to face me. \n\n- \"Dan ...\" she said. \"What if I did ... this?\" With that, Patience lifted her leg, and swung over me, so that she was sitting atop me. \n\n\"Would this work for you?\" she asked. \n\nI couldn't imagine anything sexier than my girlfriend sitting on my chest - naked. Her moist pussy was only a foot from my face, and I could almost feel the heat emanating from her core. If she moved up just a little bit ... \n\nHer offer made good sense. If I wanted to go down in a more traditional position, I'd have to support my weight on my hands, or my elbows. I could do that - but for 10 or 15 minutes? \n\nAnd if I began to tire - what then? I couldn't very well just lie atop her, letting her support my weight. \n\nGod bless her. She never stopped thinking about me. Patience knew that it would start to prey on my mind. How could I concentrate on her, if I was worried about my muscles, or my physical stamina? \n\nShe was offering a solution that would let me devote all the time I wanted to her pleasure (and mine), without worrying or feeling any additional pressure. \n\nIt hadn't escaped my notice, either, that if I was lying on my back, my hands would be free to roam ... \n\n- \"You're a genius.\" I said. \n\n- \"I beg your pardon?\" she said. \"Could you say that a little louder? I didn't quite hear it ...\" \n\n- \"You're a genius.\" I repeated. \"Scooch up here a bit.\" \n\nFirst, though, Patience made sure that my head and neck were resting on a pillow. Only then did she move closer. \n\nFrom this range, I could even smell her arousal. Without further ado, I planted a kiss on her nether lips. \n\n- \"Are you comfortable?\" she asked. \n\n- \"Very.\" \n\nHer outer lips were fleshy. Her taste was unusual, but not unpleasant. That didn't matter, anyway - I was totally turned on by the thought of what I was doing. Apparently, she was too. \n\n- \"Oh. You're ... you're ...\" \n\n- \"Mmm-hmm ...\" \n\nFor the first few minutes, I couldn't really do anything wrong. Everything was going to feel good for her. I kissed, and licked, and sucked gently. \n\nMy hands were active, too. I cupped her little ass cheeks, to draw her even closer. But I could also reach up, and take hold of her sweet breasts. One of each seemed like a good solution. \n\nPatience held on to the top of my headboard, to support herself. \n\n- \"That's wonderful.\" she whispered. \n\nThere was no hurry. I wasn't rushing anything. But I heard the change in her breathing, and could sense the slight undulations of her hips as she pushed her pussy just a little bit closer to my lips and tongue. \n\nPatience was getting closer. And then, suddenly, very close. I flicked my tongue over her clit, and clutched her sweet little butt in both hands. \n\nShe didn't make a sound, but her entire body shuddered. \n\nFinally, Patience released a deep breath. \"Oh, my ...\" she said. \n\nShe dismounted, and lay down beside me. I took her in my arms, and without thinking, kissed her. It didn't even occur to me that my lips and tongue must've tasted like her pussy. Nor did I think that her mouth might taste like my semen. It just didn't matter to me. \n\nFortunately, it didn't seem to matter to her, either. \n\n- \"You liked it.\" I ventured. \n\n- \"You know I did.\" \n\n- \"Then maybe we can do it again.\" \n\nShe laughed. \"Oh, you know we will. I'm already picturing me sitting on the couch, on movie night, with you under the blanket ... mmm.\" \n\nWe kissed a little more, until Patience twisted in my arms, and climbed onto my chest again. \n\n- \"Ready?\" she said. \n\nThen - wisely - she left me no time to think or worry about it. Patience simply slid down, and took hold of my erection. She placed the head of my swollen cock at her entrance, rubbed it back and forth - and sank down on it. \n\nI felt the tip of my cock penetrate her. Then a little more ... \n\nWarm, moist flesh surrounded me. I'd never felt anything like it. There is nothing like it. \n\nIt took her three attempts to sit all the way down - to take my full length. Eventually, though, my girlfriend was fully engaged. I was all the way inside her. \n\nI was making love to Patience. That was the thought in the forefront of my mind. It was a few moments later that I realized that I was no longer a virgin - a fact that paled in significance compared to the awesomeness of being closely joined with a woman that I loved. \n\nIt would be nice to relate that we fucked for hours, in a variety of positions - that I brought her to multiple orgasms, or that we climaxed together ... \n\nI lasted about nine strokes. \n\nThen I simply grabbed her hips, unable to do anything except blast jets of cum into her. Patience moaned, then, and leaned forward to kiss me. \n\nShe held me tight as my spasms subsided. I wrapped my arms around her, and held her close. \n\n- \"I'm sorry.\" I mumbled. \n\nPatience lifted her head, and looked me in the eye - at a range of about six inches. \n\n- \"Sorry? What are you talking about?\" \n\n- \"I didn't ... I mean ...\" \n\nBless her again; she knew exactly what I was worried about. \n\n- \"Dan - don't you dare. That was absolutely wonderful.\" \n\n- \"But -\" \n\nShe placed her finger on my lips. \n\n- \"I felt you inside me. You filled me. Completely. And then I felt you come - you have no idea how incredible that was.\" \n\n\"If you're worried about how long you lasted ... don't. Think about this: I want to make love to you again. As often as we can.\" \n\nIs it any wonder that I loved this girl? \n\n*** \n\nShe was right. We dozed for a while, in each other's arms. Sometime later, I awoke to find her ass pressed against my groin. I was hard, and my erection was wedged between her ass cheeks. My arm was around her; my hand was on her breast. \n\nI gently caressed her boob. I couldn't help slowly sliding my cock between the cheeks of her perfect little ass. \n\n- \"Somebody's ready again.\" she said. \n\n- \"Sorry. I thought you were asleep.\" \n\n- \"So you were molesting me in my sleep?\" \n\n- \"Umm ..\" Was there a correct answer to that question? \n\nPatience reached behind her, and grasped my erection. She tucked me inside herself. \n\nOh, glory. It was the same incredible feeling I'd experienced - but this time, I didn't feel that my orgasm was imminent. \n\n- \"Oh, my God.\" said Patience. \n\nMy thoughts exactly. \n\n*** \n\n- \"You seem ... different, somehow.\" said my Mom. \n\n- \"Oh?\" \n\n- \"I don't mean just because you lost your virginity.\" \n\n- \"Mom!\" \n\n- \"I know: conversations you don't want to have with your mother. But you are different. I don't mean that you're a man now, or any of that tripe.\" \n\n- \"Tripe?\" \n\n- \"It used to be a rite of passage. But teenagers having sex doesn't automatically make them adults. And I know a couple of men - one in his 30s - who's still a virgin. And he's no less of a man for it.\" \n\n- \"Really? Who?\" \n\n- \"None of your business. Back to my point: you're different, now, and it's all to do with Patience. Have you not noticed? You're more relaxed, and more optimistic. You don't get frustrated as easily.\" \n\n- \"I suppose so.\" \n\n- \"There's no 'suppose' about it. You're more patient, and a lot easier to live with. I don't mean that you were some kind of grizzly bear, before Patience - but you're definitely more a teddy bear, now.\" \n\n*** \n\nMom was right. I had changed - for the better. Having someone to love - someone who loved me - made a tremendous difference in my life. \n\nI still have MD. I always will. Some aspects of my life will become much more difficult as I age. But I don't dread the future anymore. \n\nAfter six months, Patience and I are still together. \n\nShe hasn't quit her job yet, but she and Snogg are quite happy with the progress on their Patreon page. If it keeps up like this, and their second game is as good as the first, they may eventually have enough support to devote themselves to making games full-time. \n\nI'm trying to help her achieve that goal, as much as I can. \n\n***** \n\nTHE END"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "dating",
        "first time",
        "gaming",
        "playtesting",
        "virgin",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/sounds-good-ch-07"
}