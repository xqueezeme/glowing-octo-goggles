{
    "title": "Amber's Ambush",
    "pages": [
        "Just a little short story that caught my imagination the other day. All standard disclaimers apply...\n\nEnjoy\n\n***\n\n\"Hey, found any good porn on your computer lately?\" The tall redhead sat across from me in the cafeteria.\n\n\"Don't remind me. That was so embarrassing.\" I laughed. \"Amber, right?\"\n\n\"And you're Nick.\" She smiled at me as she sat down, uninvited. \"I've been waiting for you to come back to the support desk and ask me out. You never showed, so I'm ambushing you.\"\n\n\"Ask you out?\" I was as confused as I looked.\n\n\"Well, isn't what guys do when they meet a girl they think is cute, especially when they watch porn together?\"\n\n\"Ok, the porn wasn't really my fault. That email looked real, and we didn't actually watch it, we more just observed it was there and then you ran the virus scan and cleaned it up.\"\n\n\"I don't know. I thought it was hot, that girl pegging a guy wearing lingerie like that. He really looked like he was enjoying it, too.\"\n\n\"I don't think it counts as pegging if the girl has a penis.\" I turned bright red as soon as the words left my lips.\n\n\"Ha, I knew you were a little into it, too.\" She laughed.\n\n\"Ok, new topic.\" I took a deep breath. \"We are at work, after all. What's this about me asking you out?\"\n\n\"Do you think I'm attractive?\" she asked pointedly.\n\n\"Well, yeah. I mean, who wouldn't? You're tall with those green eyes and red hair. You're more than attractive. I just don't date where I work is all.\"\n\n\"You think I'm attractive. I just hunted you down and ambushed you, so I obviously think you're attractive. I'm in tech support and you're a developer. We work for the same company, but we don't actually work together, so no conflict of interest and we've watched porn together at work, so I think we're past any sexual harassment issues.\"\n\n\"And?\" I chuckled at how forward she was being.\n\n\"And\" she smiled at me with the most devilish glint in her eye, \"I think you should pick me up at seven this Friday and take me to dinner someplace nice so we can talk about our mutual porn fetish in a more appropriate setting.\" Amber winked at me as she reached across the table and took my phone, adding her contact information, sending herself a text when she was done.\n\nAs quickly as she had arrived, she was gone. I sat dumbfounded and just watched as she sashayed across the cafeteria to the exit. I guess I had a date on Friday.\n\nThe week flew by and before I knew it; I was shutting down my computer on Friday afternoon.\n\n\"Hey stranger.\" I recognized Amber's voice immediately.\n\n\"Hey yourself. We're still on for seven, right?\" I gave her my best smile.\n\n\"Listen, about tonight.\" I could hear the second shoe getting ready to drop.\n\n\"Go on.\" My smile had disappeared. Amber had tracked me down and demanded I take her out, and now she was going to cancel at the last minute.\n\n\"I know it was an accident, but I can't stop thinking about what we saw on your computer. I thought it was hot and I kind of got the impression you were into it a little too.\"\n\n\"Go on.\" I didn't have a clue where she was going with this.\n\n\"Fuck, I can't believe I'm going to ask you this on our first date.\" She was as nervous as I was confused.\n\n\"Amber, I like you and you like me. Sure, we just met, but so far, we seem to talk about all kinds of things. I mean, we watched porn together on company time.\" I laughed. \"Just ask.\"\n\n\"Nick, just say no if you don't want to ok, but well, I bought some things I'd like you to wear tonight. You noticed the girl had a penis. I couldn't stop thinking about the guy wearing sexy lingerie.\" She made a face that was a strange mix of fear and want as she set a medium-sized bag on my desk. The distinctive, alternating pink stripes from Victoria's Secret were unmistakable.\n\n\"You bought me lingerie and want me to wear it on our first date?\" She just nodded, that same pleading look in her eyes.\n\n\"And what do I get out of this?\" I couldn't believe I was even thinking about it.\n\n\"You show me yours and I'll show you mine and we go from there.\" It was more of a question than a statement.\n\n\"Just to be clear.\" My developer's analytical mind had kicked in. \"I wear what's in this bag tonight and after dinner, I show it off to you and you show yours off to me. Worst case, you see me in whatever is in this bag, and I get to see you almost naked on our first date. That about it?\"\n\n\"Well, you left out the 'we go from there' part, but yeah, that's the idea.\" Her face turned crimson.\n\n\"Two conditions. First, you tell me what's really behind this.\" I paused to let her answer.\n\n\"I've been crushing on you since you picked up your laptop on your first day. I think you're smart and funny and very cute. You just never seemed to pick up on my hints so, I planted the virus on your laptop, so you'd have to come see me again. When that didn't work, I ambushed you.\"\n\n\"You planted a virus on my work computer, so I'd have to come see you. That is either the scariest or the most flattering thing I've ever heard.\" I grinned at her. \"I'm guessing you picked the porn, too.\"\n\nAmber nodded. \"I think cute guys in lingerie are hot. So, sue me. What's your second condition?\"\n\n\"You show me first.\"\n\n\"But what if you don't wear the stuff in the bag?\"\n\n\"That's a risk you'll have to take, but you'll learn something about my character in the process and all it will cost you is letting me see you in your underwear.\"\n\n\"Deal.\" She stuck out her hand like we were signing a contract, which in a weird sort of way, I guess we were.\n\n\"Deal.\" I stood up to shake her hand. \"Now, I suggest we get out of here. I think we both have things we need to be doing to be ready by seven.\"\n\nThe first thing I did when I got home was dump the contents of the bag on my bed. As I expected, it was a matching set, bra, panties, and garter belt, all black and all lace. There were also sheer black stockings. What I didn't expect was the box that tumbled out with the lingerie containing the self-adhesive breast forms. Shit, Amber had taken this somewhere I never imagined.\n\n\"Fake boobs. Really?\" I sent her a quick text.\n\n\"We made a deal. Not my fault you didn't check what was in the bag first.\" There were several laughing emojis after her text.\n\nI honestly liked everything about Amber and if it hadn't been for my policy to not date where I worked, would have asked her out the day I met her. I like the way we teased each other about the porn. I liked her smile and her intelligence, and I liked she was a stone-cold fox with those big green eyes and flaming red hair. I had fantasized about her far more than I wanted to admit.\n\nNow I was going out with her to an upscale restaurant in lingerie and wearing fake boobs, and for our first date, no less.\n\nConsidering my options, my normal five-minute shower took thirty. I meticulously shaved everything from my nose down, making sure my chest and legs were extra smooth to accommodate the forms and the stockings. I had heard rumors about how sliding stockings up freshly shaven legs would feel, and I didn't want to disappoint myself. If I was going to do this, I was going to do it right.\n\nThe forms took a little trial and error, but I got them in place and found I liked the extra weight on my chest and the way they made my waist look a little thinner. How Amber got my sizes was a mystery, but the bra fit snugly and accommodated the forms perfectly. The satin and lace panties felt amazing sliding into place.\n\nMy cock looked out of place in the soft fabric, so I adjusted things, pushing it back between my legs, causing my testicles to sort of disappeared up inside me. This left a nice smooth front that seemed more appropriate. The garter was next followed by the pi\u00e8ce de r\u00e9sistance, the stockings. Sliding the thin nylon up my legs almost undid everything I had spent the last ten minutes putting in place as my cock surged to be free.\n\nI took a break and tried again, finally getting the stockings up my long legs and attached to the straps on the garter belt while keeping my bits tucked neatly out of the way.\n\nI felt amazing. Every time I moved, something soft kissed my body: the panties, the garters, the stockings, even the bra and the way the forms it held moved with me. Looking in the mirror, I had to admit Amber was right. A hot guy in lingerie was fucking sexy, especially one with boobs.\n\nCasual slacks and a silk shirt that seemed to have trouble deciding if it was going to hide my lacey bra or expose it, and a pair of slip-on dress shoes and I was good to go. At six fifty-nine, I unfastened a button on my shirt to expose my bra a little more and knocked on Amber's door.\n\nThe door opened to a vision of loveliness. Amber stood there in a tight back dress that just teased the tops of her stockings, her long red hair cascading over her shoulders and her four-inch heels accenting her long legs.\n\nShe closed the door, and I reached for her hand, causing my shirt to fall open.\n\n\"You wore it.\" The look on her face was priceless.\n\nWe went to a little seafood place down by the marina. We ate and talked and watched the boats bob gently in their moorings. It was effortless. Amber And I had so much in common. We liked the same music, watched the same shows. Well, she watched some rom-coms I didn't care for and I was into some action stuff that she might tolerate, but mostly, we just matched. We had even played a few video games together without knowing it.\n\nAfter dinner, we went for a walk out to the end of the pier. Her hand slipped into mine and she gently tugged, causing me to turn toward her. \"I don't want to keep coaching you, but this would be the perfect time to try to get that first kiss. Just thought you'd like to know.\" She gave me a devilish grin.\n\nIn my defense, I was planning on stopping halfway back. I thought it would be a little unexpected. But when a gorgeous woman drops a hint like this, you don't hesitate. I put my free hand on her cheek and leaned in, kissing her softly. It almost took my breath away.\n\n\"Nicely done. There may be hope for you, yet.\" She put her hand behind my head and pulled me back for another kiss. I felt this one to my toes. Her tongue thrust into my mouth. I relaxed and let it in, challenging it with my own as I pulled her body close to mine. She thrust her crotch into me, stopping with a start and pulling her lips from mine.\n\n\"Something's missing or you're gay. And from the way you're kissing me, I don't think you're gay.\" She smiled as she ran her hand down my chest to my crotch. \"Oh, shit, you tucked. That is so hot.\"\n\n\"And uncomfortable, especially after that last kiss. I think we need to head back before something embarrassing happens.\" I gave her a quick peck on the lips and took her hand. \"Besides, we still need to do show and tell.\" It was my turn for the devilish grin.\n\nAll the way back to her apartment, Amber rubbed my thigh and toyed with my garter, getting ever so close to my crotch but never quite getting there. I was so horny, it tempted me to pull over, skip the show and tell, and move straight into the 'see what comes next' that was almost certainly going to happen.\n\nHer dress had ridden up just enough to expose the tops of her stockings. I ran my hand up her thigh, crossing the boundary between nylon and flesh, teasing her garter just like she was teasing mine.\n\n\"Watch the road.\" She moaned, taking my hand in hers and moving it back down toward her knee.\n\n\"You started it.\" I quipped.\n\n\"And I'm going to finish it, too. Just you wait.\" She giggled.\n\nWe got to her apartment, and she gave me her key, pulling me in for another passionate kiss. I unlocked the door and let her go in before me. Closing the door, I turned to see her with her back to me and her tight black dress pulled up over her head. Long legs, perfect ass with two dimples standing guard, a nice thin waist and that long red hair cascading down her back, Amber turned slowly to let me see the rest, her legs tight together, pert breasts rising and falling on her chest as her excitement made her breath heavy and quick, she was as horny as I was. I could tell.\n\n\"Your turn.\" She said it in a soft whimper. \"Then we can see where it goes...\" She let her words fade and bit her bottom lip. I almost came in my panties.\n\nUndressing slowly, I unbuttoning my silk shirt, realizing that I had never buttoned that button and more people than just Amber may have seen the lace of my bra. I blushed as I dropped my shirt on top of her dress and kicked my shoes off, reaching for the buckle on my belt.\n\nI could feel my cock straining to be free as I unzipped my pants and just let them fall.\n\nAmber gasped audibly, her eyes ravaging me as they danced over my satin and lace covered body. I could see the hunger in her eyes.\n\n\"Try those...\" she pointed at her heels. I looked at her questioningly.\n\n\"Everything else you're wearing is my size. They might fit, too.\"\n\nWe were beyond the edge of any map, in a place of mystery, a place ancient cartographers might have marked with such things as 'Here there be dragons.' Taking a deep breath, I slipped into the heels. They were tight, but I got them on. Amber made a motion with her finger, and I did a slow turn, trying not to fall on my butt.\n\nAmber stepped slowly forward and went to her knees. \"The garters go inside the panties, especially if you think you might get lucky.\" She giggled as she adjusted the four straps carefully.\n\nWhen she finished, she yanked my panties to my knees with a single motion. My cock sprang free. She took it in her mouth, burying it in her throat, her nose against my freshly shaved crotch. I exploded before I understood what had just happened.\n\n\"My god, Amber, I..., I wasn't expecting that.\" I tried to keep my balance. \"I'm sorry.\"\n\n\"You don't need to apologize. I've been teasing and tormenting you all night. You're only human, right?\" She smiled up at me. \"Besides, you want to see where things go from here, don't you?\"\n\n\"After that, I'd go anywhere with you.\" I smiled and held out my hand to help her to her feet.\n\n\"Goody. Don't move. I'll be right back.\" She gave me a quick kiss. I could taste the remnants of my orgasm on her lips. It didn't taste as bad as I would have imagined.\n\n\"So,\" she smiled at me. \"Are you enjoying yourself so far?\"\n\n\"Very much.\" I blushed.\n\n\"And the lingerie and the heels. They aren't too much, are they?\"\n\n\"They're actually kind of exciting.\" I grinned, realizing that it was the truth. I was enjoying myself and I did like the way the lingerie felt against my body. The massive orgasm I had experienced when Amber deep-throated me didn't hurt my mood, either.\n\n\"Close your eyes.\" She smiled again and went to her knees. It occurred to me this entire conversation had occurred with her hands behind her back.\n\n\"Ok.\" I closed my eyes and took a deep breath. Who knew what she had planned?\n\nAmber started playing with my cock and balls. Not quite fondling them, more moving them around. I felt her slip something around my balls and then pull my cock through, then pressure against the tip of my penis. A soft click and I knew what she had done.\n\n\"I like you shaved like this. It' sexy\" She ran her soft hand over my smooth balls.\n\n\"You can open your eyes now.\" She was smiling up at me eagerly. Where my cock should have been was a small pink nub with a slit in it for me to pee. Amber had put me in a chastity device, a small one, too. I wasn't huge, but I wasn't small either. I couldn't believe she had fit me into that tiny thing.\n\n\"Amber, I'm not so sure about this.\" I protested.\n\n\"You already said you were enjoying everything so far and you agreed to let me do it, so...\" she got up and kissed me hard. \"It will be fun. I promise. In fact, I'll bet you anything I can make you cum harder in the cage on than you did a few minutes ago.\"\n\n\"I don't see how that's possible.\" I paused and thought for a moment. \"If you can't, what do I get?\" I couldn't believe I was considering this.\n\n\"Like I said, anything, anything sexual, that is.\" She looked like a wolf about to devour its prey.\n\nI knew I shouldn't say what I was about to say, but the word escaped before I could stop it. \"Deal.\"\n\n\"You know that means I get to do anything I want to you if it makes you cum, right?\" I knew I was in over my head. All I could do was nod. Amber took my hand and slowly led me to her bedroom. I was still in the heels.\n\nShe laid me on the bed and slipped a satin blindfold over my eyes. \"It heightens your other senses.\" She kissed me hard, driving her tongue into my mouth and sucking mine into hers. I could feel my cock straining already.\n\nHumming quietly to herself, she left me laying there while she did whatever she needed to do to get ready. It started simply enough. She kissed me again, my lips, then across my cheek to my neck. Damn, that was sexy. Down my collar bone and along the straps of my bra. It tickled, which made me shift, which caused the satin and lace to move over my skin. My cock wanted to get hard so badly.\n\nDown my stomach, she played with my belly button with her tongue, sending chills through my body. Shit, she was good at this, and she was right. My not being able to see made everything else more sensitive.\n\nTeasing the tip of my cock through the slit in the cage, she sucked on my exposed balls, flicking them with her tongue. I was thinking she was going to win. I was so fucking horny. If I'd had a cock, I would have pounced on her and taken her right then.\n\n\"Pull you knees up.\" Amber whispered in my ear, kissing my lobe and driving her tongue into my auditory canal. My body shuddered again. I did as she asked.\n\nI never knew how sensitive my asshole could be until she licked it and stuck her tongue inside me. It didn't go far, but damn, it felt amazing. Her hands ran up and down my nylon covered legs and she rimmed me, slobbering all over my star, driving me mad with just her tongue. When she pulled away and replaced her tongue with a finger, I almost lost it.\n\nShe added a second finger and curled them up to press on my prostate. Holy fucking shit, I was gone.\n\n\"You want to renegotiate?\" Her voice was hungry. \"Last chance, and I have to be honest with you. I'm trans. If you don't ask me to stop, I'm going to fuck you just like the girl fucked the guy in the video. All you have to do is ask me to stop.\" She slipped her fingers back inside me and pressed on my prostate again.\n\n\"No.\" I whimpered.\n\n\"No, what?\" she added a third finger to the two already in my ass.\n\n\"No, I don't want to renegotiate. No, I don't want you to stop. God, it feels so good. I don't care if you're trans. I don't care what you are, just make me cum.\" Dressed in black lingerie with heels and fake tits, my knees to my shoulders and my ass completely exposed, I was begging a woman, a gorgeous redheaded vixen of a woman, to fuck me.\n\n\"Please.\" I whimpered again.\n\nIt was uncomfortable at first. I hadn't seen how big she was, but she didn't feel small, not to my virgin ass, anyway. She went slowly at first, making sure the discomfort had time to wane. As she moved in and out, going a little deeper with each thrust. Her cock was massaging my prostate with each movement, replacing the discomfort with a wonderful feeling of fullness. A strange feeling grew somewhere between my balls and my ass, a tingle, no. a surge of pleasure. I had felt nothing like it. I wanted more.\n\n\"Give me your hands.\" She pressed them against her pert breasts. Instinctively, I squeezed and fondled them while she drove her cock balls deep inside me. I let out a loud moan, pinching her nipples as she fucked me.\n\n\"You feel so good, Nick. So tight. I can't believe you let me do this.\" She was moaning almost as loudly as me.\n\n\"No choice.\" I mumbled. \"Tongue... fingers... so good... had to know.\" I let out another loud moan.\n\nI took my hands from her breasts and slipped the blindfold off my eyes. She was so beautiful, lost in the passion of what she was doing, covered in sweat, her head falling back, her long red hair flying behind her as she rode me. I reached up and pulled her lips to mine, driving my tongue between her lips, running my hands over her glistening body, writhing in pleasure as she drove into me again and again.",
        "That strange feeling surged and grew, spreading down my legs, tingling as it went. Up through my abdomen, through my chest and out my arms to my fingertips. My entire body was alive with whatever it was. Growing exponentially, claiming my very essence, it pulsed and surged through me, driving me closer and closer to the explosion I knew was coming.\n\nThere was nothing I could do to stop it. I screamed as thick liquid spewed from my caged cock, running down over my balls, joining the lube coating Amber's cock. Erupting into a thousand points of light, my body trembled and shook, tremor after tremor ripping through me until the ecstasy slowly ebbed, fading to a soft glow of satisfaction and the continued pleasure of Amber sliding in and out of my throbbing hole.\n\nI lay there sated, moaning, marveling and watching as Amber continued to fuck me, chasing her own orgasm, driving her shaft into me until her body clenched and shuddered, her cock pulsing, spilling her seed inside me. \"Oh, fuck.\" She cried. I knew what she was feeling and smiled as she collapsed on top of me.\n\n\"You win.\" I sighed as I pulled her lips to mine and kissed her hard.\n\n\"I know.\" She slipped from me, resting her head on my shoulder and tracing lazy designs in the mess I had made on my stomach.\n\nWe lay there in each other's embrace for a while. I didn't know what to say. I didn't think she did either. We had both used sexual innuendo, joking about what 'we go from there' might mean, but I never imagined it would lead here.\n\nI was worried that Amber would feel guilty for manipulating me, and part of me felt a little violated, but it was a small part. I could feel the tension building and understood that I was the only one that could break it. I just had to decide how I felt about what had happened and how I felt about Amber.\n\n\"Thank you. That was amazing.\" I kissed the top of her head.\n\n\"You're really ok with what I did to you? I wasn't expecting things to go this far. I really wasn't. It was a joke, all in good fun, and then you looked so damned sexy standing there in the lingerie. When you said you liked it..., I just lost control.\" A small shudder ran through her body. Was she crying?\n\n\"It's nice to know I can have that effect on a beautiful woman.\" I kissed her head again.\n\n\"You still think I'm beautiful now that you know?\" She raised up on her elbow, her eyes red from her tears.\n\nI reached up and wiped the last few tears from her cheeks with my thumbs. \"Amber, what you did to me, I didn't expect it, and, yes, it caught me off guard, but it felt amazing. The lingerie, the heels, and oh fuck, the sex, even the cock cage. I'd do it all again... with you.\"\n\n\"Really?\" She gave me a weak smile.\n\nI pulled her lips to mine, kissing her gently. \"Yes, really. Now, can we go clean up and maybe take this thing off?\" I pointed to my crotch. \"It's not really that comfortable.\"\n\nAs glorious as she had been in the lingerie, Amber was stunning, naked. I noticed the similarities in our bodies, both long and lean; lithe might be a better word, her perky tits and the breast forms she had bought for me were the same size. We both with a nice thin waist. Her hips were slightly more rounded than mine, and her ass put mine to shame. Sadly, when fully erect, she was about an inch longer than me and thicker than me, too. Yes, we compared, right before I turned in the hot shower, arching my back as I leaned against the tile wall, and asked her to take me again. She ravaged me, I spewed my seed all over the wall and she filled my ass a second time. It was just as good as the first time.\n\nWe changed the sheets, and she loaned me a flimsy nightgown to sleep in; no reason to break with the theme of our first date, after all.\n\nFalling asleep spooned behind Amber was the best thing of all until I woke up to her slathering lube on my cock and taking me into her ass. \"What's good for the goose...\" She laughed as she let herself drop, impaling herself on my shaft.\n\n\"Holy fuck.\" I screamed in delight as she clamped down on my cock. \"That feels amazing.\"\n\n\"I know.\" She smirked.\n\nSliding my hands under her nightgown, I fondled her breasts and moaned as she rode my cock with abandon. I had been with my share of women and some of them had been oh so enjoyable, but nothing like this. Amber literally glowed with pleasure as she pounded herself on my cock.\n\nPulling her nightgown over her head, I lost myself in her beauty. Her long body glistening with the first beads of sweat, her long hair flailing everywhere as she bounced up and down, taking me as deep as she could, and her cock, strong and proud, thrusting our I front of her, bouncing on my stomach, begging for attention.\n\nTaking it in my hand, I stroked it. So much like mine, but different. I caught myself wondering what it would feel like in my mouth, what her pleasure would taste like, and how I would feel about giving that to her. I looked up at her, catching her eye and licking my lips.\n\nShe smiled. \"Maybe later. I'm kind of busy right now.\" I blushed and kept jerking her off.\n\nI could feel my orgasm growing, my moans getting louder and louder. My hips thrusting up to meet her, I had to stop touching her. It didn't matter. I clenched and thrust up to meet her just as her ass grabbed my cock, her cum spewing all over my chest as I exploded inside her. We shook and shuddered in unison as we collapsed together.\n\n\"I think we need another shower.\" Amber laughed as I slipped from her.\n\nWe got cleaned up and collected all the lingerie we had spread all over the room. Amber showed me how to hand wash it, reminding me she had bought it for me. I smiled at the thought of wearing it again for her.\n\n\"In fact,\" she started to say something. Rummaging through her dresser, she handed me a small pile of soft fabric, some satin and lace, some soft cotton. \"You can have these, too. You're going to need something to wear today and since you seem to like it, who knows when else?\"\n\nI picked out some simple cotton bikini panties and, since I still had my forms glued to my chest, a matching bra and put them on.\n\n\"Maybe. Try them and see.\" Amber handed me a pair of her jeans. They were tight in the crotch, a problem that a quick adjustment to my tucking solved, but otherwise fit fine. A pair of knee-high stockings and a generic t-shirt for me and a simple sundress for Amber, and we headed out for breakfast. OK, my wallet and keys didn't really fit in my pockets, so I had a purse, too. Hell, what did I care? My new girlfriend had just fucked me in the ass, twice. I was bulletproof.\n\nAll I could think about when I finally headed home that afternoon was, \"If this was date one, what the hell is date two going to be like?\"\n\n***\n\nI've seen a few other writers do this and I think I have a candidate to try it with this story. Message me with your idea for chapter two. I'll think about them and pick one that feels right. Of course, if I pick yours, I'll give you credit in the author's notes for the next chapter. I think it will be fun. I hope you'll play along.\n\nPS. As always, please leave me a comment. I love to hear what you think of my stories."
    ],
    "authorname": "ShelbyDawn57",
    "tags": [],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/ambers-ambush"
}