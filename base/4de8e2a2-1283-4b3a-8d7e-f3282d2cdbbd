{
    "title": "A Town Called Eclipse",
    "pages": [
        "Arrival: \n\nThe stagecoach arrived at the small mining town of Eclipse. It was so named because two fortuitous events occurred twenty years ago. The first was the discovery of mithril by the famed prospector Magnus D. The second was the full solar eclipse that occurred that very same day and so the mine and the town were named in that inspiring moment. My name is Valakhor Bloodrose and this is the story of my time with the people of Eclipse. It was my publisher's idea to come here and write about gunslingers, dance hall girls, and the savage ways of the frontier. The Civil War has ended, and our nation is on the mend. My job is to distract, inspire, and maybe even create the next generation of dreamer or writer. The three-day ride from the train station to Eclipse was my first real taste of the frontier. \n\nMy two companions sat across from me as silent as the moment they had boarded the stage and laid eyes upon me. I was used to people gawking at me. Whether it was my brilliant violet eyes or the six digits on either hand. My people were a dying race in a time when the world was growing so quickly. A new nation was being born and I was going to be a part of it. I endured the quiet and the constant barrage of being tossed about by the lack of what civilized folk would call a road. I was sore in places I didn't think I could get sore. I let the couple disembark first and then left the coach and stood up straight and stretched. I felt my muscles ache and my spine stretch and pop. I retrieved my luggage from the rear of the stagecoach. I set it on the ground and then helped the driver retrieve the couple's luggage as well. The driver passed me their pieces from the roof and I in turn handed it over to the husband. They thanked me once they had all their belongings. It was the first words they had spoken to me. I tipped my hat to the lady and gathered up my things.\n\nI turned to face the wooden sidewalk and there standing before me a former slave. I knew he had escaped the South and a brush with a lynch mob. The scar on his neck was clear evidence of the trials he had faced to reach freedom.\n\n\"I am sorry for staring,\" I said and his color paled.\n\n\"Me too,\" he replied. \"I've never seen anyone like you before.\"\n\n\"My people are called Duskwalkers,\" I shared smiling. \"Can you direct me to the hotel?\"\n\n\"Sure, follow me,\" he said. \"I am heading over that way. I work for Galen. He's the owner and usually works the front desk.\" He continued as we walked. \"It has inside pipes.\"\n\n\"Thank the gods,\" I exclaimed. \"I was hoping for a bath.\"\n\n\"A hot bath if'n you want,\" he suggested. \"It has hot water. Much of the town has pipes. It's one of the few good things that crazy bitch on the hill has done for us.\"\n\n\"What crazy woman?\" I asked, and he pointed to a steep hill beyond the town proper that was topped with a rather large stone and wood structure. \"Nice house.\"\n\n\"That's her... what does she call it? Oh yeah, her laboratory... the mayor calls her our local mad scientist whatever that is.\"\n\nThe young human opened the door and I stepped into the dark interior of the Hotel Umbra. Galen Nighthallow stood behind the front desk. He was dressed in dark slacks, a crisp white shirt and a matching dark vest. Being a gnome, he had the dark chestnut hair that many of his folk possessed. It was his bright blue eyes that really caught your attention though. He had an easy smile and welcomed me with a handshake and a kind word.\n\n\"Welcome to the Umbra Hotel Mr. Bloodrose. I hope you'll have a pleasant stay with us.\"\n\n\"I have heard that you have inside plumbing, is that true?\"\n\n\"I bet you want a nice long bath after days on the road.\"\n\n\"You read my mind.\"\n\n\"Please sign the register and I'll have Timothy take your bags to your room. Once you are settled you can have the bath for as long as you want. I will set out some towels and other necessities for you.\"\n\nGalen handed Timothy my room key. I handed the young human a few of my lighter bags and he guided me up to my room. In my telegram I had asked for his nicest room. I wanted to spoil myself a little while I was here. I already had an idea for my first interview. A story or even a series of stories about a mad scientist could be interesting to the folks back home. Timothy opened the door to my room and he set my bags next to the bed. I was surprised at the craftsmanship of the wooden frame of the bed. I looked around and the dresser had been made with equal skill. \n\n\"Henry made them,\" Timothy explained noticing my hand caressing the wood. \n\n\"Who is Henry?\"\n\n\"He is the town's carpenter, but he calls himself a cabinet maker.\"\n\n\"I am impressed. He could make some serious coin back east.\" I said and handed the young man fifty cents. \"Speaking of coin take care of yourself and don't be a stranger.\"\n\nHe left, and I sat on the bed testing the mattress. I let out a deep sigh of relief being able to stretch out after being confined for so long. I unpacked my bags and put away my clothes. I stripped down and dressed in a robe and slippers. I tore a small piece of paper from my notebook and as I left my room I slipped it in the upper most corner of the door. I carefully closed the door and locked it behind me. I made my way down to bathe. I heard running water and that guided me to the washroom. I opened the door and stared at the small tiled room which was dominated by the large wooden tub. The tub was nearly topped off and seated within a cute female dark elf. She crooked her finger at me and then pointed at the other end of the tub. \n\n\"Well, talk about hospitality,\" I said closing the door behind me.\n\n\"I was sent by the head of the welcoming committee. The Lady Crimson sends her warmest regards. She would have come herself but prior commitments.\"\n\nI kicked off my slippers and untied the robe's belt. The whore watched me intently and licked her lips in anticipation. I opened my robe and she gasped when she spied my semi hard cock. I set my robe next to the towels before slipping into the water. My body displaced some of the water which rushed over the top of the tub and down the drain just below us. The girl introduced herself as Selene and offered to wash my back. I turned away from her and she went to work. She was all business at first. Her movements were brisk as she scrubbed the dirt from my body. Selene began with my back, but she worked her way all over my body. I could feel her small but firm breasts pressing against my back at one point. Her lips close to my ear as she asked me about my travels and had I fought in the war.\n\n\"I fought for the north,\" I admitted. \"It was terrible. But then again all wars are the stuff of nightmare.\"\n\n\"There aren't many humans living in Eclipse,\" she whispered. \"Crimson has taken a few under her wing if you like that kind of thing. I guess you could them exotic, I suppose.\n\n\"I don't fuck humans.\" I said looking over my shoulder. \"They are far too frail for my tastes.\"\n\n\"But you have sampled one,\" she purred in my ear. \"May I?\"\n\n\"May you what?\" I asked as her hands slithered under the water.\n\n\"Can I wash your manhood good sir?\"\n\n\"Let me stand up, I want to see how good a job you do.\"\n\nThe whore lathered up the wash cloth as I stood and turned to face her. I was fully erect by this time. Her proximity and soft breath on my ear had done wonders. She whistled when she took in my full measure. She began with my balls and gingerly washed them as she brushed her cheek against my length. Her hands moved slowly, and I found myself shivering not just from the temperature but in anticipation. In human culture oral sex was a big no-no. However, elven men and women loved licking and sucking off their partners. Among my own people there were no stigmas when it came to sex. We were a jaded race. We lived extremely long lives barring acts of violence. We were immune to the effects of disease and highly resistant to many toxins that would and did kill others. I looked down as the whore took a tankard and filled it with water to rinse off my cock.\n\n\"Come to mama,\" she said as she wrapped both hands around my erection. \"How does that feel?\"\n\n\"Good,\" I gasped. \"You have a delicate touch.\"\n\n\"For a whore you mean.\"\n\n\"That goes without saying.\" I said, and she smiled.\n\n\"Wait until you are buried inside of me.\" She fired back grinning broadly now. \"I have a very talented pussy. I have been trained in the arts of the concubine. I am a skilled lover.\"\n\nHer hands moved a bit faster as she flickered her tongue over the tip. I was panting as I got close to a powerful climax for it had been a month since I had been with a female. I warned her I was close and let the head slip inside her mouth. She continued to double fist my erection and with a muffled cry I let loose down her throat. The whore swallowed eagerly and that is when the door opened, and a redheaded dark elf strode into the room. This must be the Lady Crimson that had been mentioned earlier. The redhead chastised the girl and she left the tub, dried off as quickly as she was able only to dress and flee.\n\n\"I heard one of your kind was in town.\" Crimson said her voice soft but bordering on menace.\n\n\"Have I done you some wrong?\" I asked as I sat down in the tub.\n\n\"You no but one of your breed did my family a great ill in the past. I won't bar you from my girls but don't expect a warm reception.\"\n\n\"You whores have a way of sending mixed messages.\" I said, and her demeanor went from disdain to withering in seconds flat. \"I am not a whore. I am a madam. I run a business in town and don't you forget it!\"\n\n\"The miners are coming,\" Selene called out from the open doorway. \"It's payday.\"\n\n\"I have a business to run. Stay out of my way Duskwalker.\"\n\n\"I guess an interview is out of the question. I am a writer by trade.\" I said but she turned and strode out of the room with a flourish of subtle hand gestures. \"Bitch.\"\n\nI added more hot water to the tub and reclined. I placed the washcloth over my eyes and relaxed. The mithril mine was one of the chief economic forces in town. I needed to find a way of sitting down and talking with the owner. I hoped to convince him to share some of his stories and insight for my readers. My thoughts returned to the madam. I wasn't angry with her. My people tended to place themselves above the law. In the distant past we were rulers and god kings in the eyes of not just humans but the other races as well. In antiquity we were the law. Some of us didn't like letting go of such power. Some of us still played at politics and bureaucracy. I was too old for that kind of shit. I liked a simpler life. I wanted to live in the present and taste the future of this ever-expanding country. My goal was to gather stories and share them with my readers. \n\nThe water cooled, and it was time to dry off and dress. I had a town to explore. I rose and dried off. I felt better than I had in days despite the rather rough encounter with the Lady Crimson. I reached my room and noticed the small piece of paper on the floor near the door. I examined the lock and saw that it hadn't been tampered with or showed any signs of being picked. Someone had used a key to enter my room while I was in the bath. I unlocked the door and found my room occupied by two people. The first was a young attractive gnome girl hog tied on my bed. The other was my friend and confidant Russell Hawthorne. He must have been the one that caught the girl in my room and restrained her. Russell was a half-blood having a dark elf mother and a Sidhe father. Due to his mixed nature he wasn't welcome by either clan. I had taken him in when he was young and now he served as friend and protector.\n\n\"Hello Russell,\" I said in greeting. \"Who is this?\"\n\n\"I've seen her hanging around the whore house. She slipped in using a key and I watched her search your things. I caught her on the way out.\"\n\n\"Thank you, Russell,\" I said and then turned on the girl. \"Who sent you? If you are honest I'll let you go with no harm.\"\n\n\"Lady Crimson sent me,\" she said in her heavily accented English.\n\n\"I speak Gnomish, if that is easier for you.\" I replied.\n\n\"Thank you, Sir,\" she said rapidly in her native tongue. \"She got wind of your arrival. It was the innkeeper that informed her. When you set your arrangements, and let slip that you were a Duskwalker the entire town soon knew.\"\n\n\"What were you looking for?\"\n\n\"Anything out of the ordinary.\" She replied without hesitation. \"I found nothing. Will you keep your promise? While I don't mind a little light bondage my hands and feet are close to numb.\"\n\n\"Release her Russell she has been honest.\"\n\nMy companion released her and set her on her way once she could walk that is. The petite blonde hobbled out the door and returned to her mistress. Russell closed the door behind her and laughed. He pointed to the closet door and I walked over and opened it. There were two leather cases within, one was tall and slender while the other short and squat. I knew their contents and knew they had travelled well otherwise Russell would have said something. I closed the closet door and took up a spot on the bed. He handed me a small leather-bound notebook. I took it and read it contents. They were his observations of the people he felt were the most influential and interesting here in town. His notes were short and to the point. It was up to me to pry details from the people themselves. He had arrived a week earlier and spied them out and followed them. He had passed easily amongst a population that was equal parts elven, gnome, and orc. The only notable exception were the miners, most of them were goblins. They were ugly smelly creatures but clever and hard working. \n\n\"Pay day,\" I muttered. \"That is what she said.\" I noticed Russell flinch and that's when it really struck me. \"Oh no... yikes.\"\n\n\"Indeed,\" Russell laughed. \"They work hard for their money.\"\n\n\"I am going to the saloon for a drink.\"\n\nRussell nodded and returned to the closet. He showed me the floor board he had prepared. He lifted it and one on either side of it. He slid the long case into it and behind it went the smaller. He returned the boards and checked them to make sure there was no sign of his tampering. With a nod we left and locked the door behind us. The Moon Shadow saloon was filled. One third of the males and females were townsfolk while the rest were goblins covered from head to foot in rock dust. Goblins are by their very nature a close-knit group. They rarely spoke anything but their own language and even then, were a foul-mouthed bunch. I had in times past used goblin sappers on the siege of a particularly nasty orcish castle in the old country. I had learned their foul speak and I occasionally found myself cursing in goblin when my ire was severely aroused. I kept this little secret to myself. I listened as the goblins rumbled and bristled at the current project of the crazy gnome lady as they called her. She was working on a steam powered digging machine. If she succeeded they would be out of work. They didn't like this idea.\n\nShort squat creatures with long thin limbs and possessing surprising strength and deviousness. That is how my father described goblins to me. It was accurate then as it was today. If you could earn their trust they were fast and loyal friends. If you got on their bad side god help you. I feared for the lady scientist and her mechanizations. She didn't know the danger she was in. I would make it my priority to speak with her as soon as I could tomorrow. Until then I would enjoy the hospitality of the saloon and then to bed for a nice long sleep. I spent time putting names to faces thanks to Russell. When the town's sheriff strode in I remarked on the gleam of his mithril firearms. He had matching revolvers with what I believed were ivory grips, but I learned later that they were in fact dragon bone. The tall Sidhe was an uncommon sight. The fact that he was a lawman bordered on the surreal. A majority of the Sidhe were a reclusive nomadic folk that followed the religious path of their twin saints Oberon and Titania. Yet here I was sitting and drinking with one.\n\n\"I bet many people compliment you about your firearms.\" I said after a few beers.\n\n\"Honestly, most folk are fearful of bringing up that particular subject. I can see you want to ask so I'll save you the effort. They are dwarf craft and forged by the clan of Durin. The gunsmith once lived in town but has since retreated into the mountain with most of his people. If you are here long enough, you'll see the empty carts driven by female dwarves. They return to the mine laden with food and drink.\"\n\n\"I've heard that mithril shipments have been hit pretty regularly.\" I replied and he nodded.\n\n\"I have spoken with marshals about help tracking down the band of rogues responsible. I simply don't have the manpower. The mayor is in arms since it casts the town in a bad light. If we can't protect our shipments we appear weak and vulnerable. He is right.\"\n\n\"I hope you find those bastards.\"\n\nIt was shortly after the sheriff left my table that I returned to the hotel and slept. I am sure that anyone passing by my door when I laid down would have heard the huge sigh of relief. I stretched my limbs and savored the feeling of freedom. I dropped off immediately. I awoke the next morning and dressed with a song on my lips. I hadn't slept that soundly in a week. Galen had a hot breakfast waiting for me. We sat together, and I commented on my visitor to my room watching his uncomfortable reaction. He was stammering and trying to offer apologies and promised it would never happen again. It was unwise to attract the ire of a Duskwalker in the best of situations and I reminded him of that little bit of advice.\n\n\"I swear no one will ever enter your room unless you invite them.\" Galen promised, and I believed him.\n\n\"I am glad we could take care of this without the necessity for violence.\" \n\n\"Me too.\" He replied wiping the sweat from his brow. \"More coffee?\"\n\n\"Yes please. So, tell me Galen, what brought you to Eclipse?\"\n\nThe gnome was thrilled to have my attention on more mundane things. He told me that a cousin of his informed him that a town was just starting out and what a great investment it would be. His cousin had been correct of course. Since he had purchased several plots of land the mayor had tried to buy him out. Galen was sure that the railroad would pass through the town. Why else would the mayor be so insistent and offer such sums for his land? If he was correct then property values would skyrocket once that happened. It would be transformative. I would have to speak with one of three people. The town and surrounding land was owned by Erick Redmond the mayor, Henry Wood the town's carpenter and of course Magnus D the mine owner. Henry also happened to own the local logging company that his wife ran quite efficiently. Erick owned a majority of the town and rented to many of the business owners. Galen had been lucky and purchased a few plots of land within the town's boundaries and several outside of it. But it was small compared to how much the others possessed.\n\nMy first stop of the morning would be meeting Henry Wood, Galen's cousin. I stepped outside, and I felt the numerous stares as I walked down the street towards the carpenter's shop. The smell of freshly baked bread derailed me. I stopped off as the sylvan elf brought out fresh loaves of bread as well as hot buns and rolls. I wasn't hungry, but I bought three rolls because of the mouthwatering scent alone. I ate one on the way to the carpenter and saved the other two for lunch. Henry Wood was tall by gnomish standards and of average looks. His wealth was his greatest asset going for him. When I entered his shop, he was sitting at a small table I assumed he had carved himself. He was designing an elaborate headboard. I browsed his merchandise and I had to admit it, he was a talented sculptor. He put a lot of love and attention to every piece that he made. He never used nails in his creations they were all joined by either dovetailing or the use of cleverly hidden wooden pegs and glue. ",
        "\"I am staying at the hotel. Did you supply them with their furniture?\" I asked, and Henry nodded. \"You are quite gifted.\"\n\n\"Thanks,\" he said lifting his head from his drawing. \"What brings a Duskwalker to our little town?\"\n\n\"I am a writer. I am here to get inspiration for a series of fictional stories about the frontier.\"\n\n\"Ooh, I could see a heroic gnome gunslinger that saves the day and gets the girl.\"\n\nHe forgot about the drawing before him and began to ramble about the backstory of said gunslinger. I jotted down a few notes and that seemed to please him well enough. Had I made a new friend? He went on for a half hour before faltering and falling into silence. The bell above the door rang and I turned to see a well-dressed orc. I noticed that he wore a long-sleeved shirt despite the heat. He was tall, wide shouldered and powerfully built. He was impressive and took great care in his meticulous appearance.\n\n\"Mayor, I have a working sketch for your headboard.\" Henry said in greeting.\n\n\"So, the rumor is true. There is a Duskwalker in my town.\" The mayor said ignoring the carpenter.\n\n\"Your town,\" I repeated, and he nodded his gleaming canines catching the sunlight. \"I thought we lived in a republic.\"\n\n\"Technically,\" he admitted reluctantly. \"Why are you here?\"\n\n\"He is an author. He is doing research for stories about the Wild West.\" Henry eagerly responded.\n\n\"I was talking to him Henry.\" The orc growled and returned to me. \"So?\"\n\n\"I was sent by my publishing house to gather stories for a series of books.\"\n\n\"Hmm...\" The mayor mumbled, and I sensed his distrust.\n\n\"You make two,\" I said, and his head snapped up in alarm. \"Lady Crimson told me to stay out of her way. Are you threatening me too mayor?\"\n\n\"No, I was worried that's all. I fought in the war. One of the opposing generals was a Duskwalker. He was brutal. He killed many of my friends.\"\n\n\"He was my cousin.\" I said, and the orc's eyes narrowed. \"I wounded him at Antietam. He never did forgive me for besting him. Listen, I am not here to stir up trouble. I would prefer a low profile, but I know that is unlikely. I hope we can keep things civil.\"\n\n\"You are 'that' Duskwalker,\" he said and smiled. \"I will suggest to the town to give you leeway.\"\n\nHe left without another word. I left soon after. I had a mad scientist to warn about angry goblins. Her little digging machine was going to cause this town no end of trouble. I took the path out of town that led to her reclusive laboratory. While the town sat on land that had been clear cut the wooded trail to the mad scientist was positively primal. The only sign of civilization was a series of paving stones that formed the path to the main building. I followed the shadow laden way to the house and knocked on the stout oaken door. The echo beyond hinted at a large unburdened chamber beyond. I knocked a second time when no one came to the door. A long string of curses blended into one hell of a tirade. The door was yanked open and a petite chestnut headed gnome revealed herself. I noted the way she was dressed. She wore dark jeans, a man's white cotton shirt, and soft leather boots. Her slight build gave her a boyish cast to her appearance.\n\n\"What the fuck do you want?\" She said even before she saw who it was. \"Ooh... six digits... those infernal cat eyes... you must be a Duskwalker. Why are you here fiend?\"\n\n\"Is that any way to greet a guest?\"\n\n\"Guest, did I somehow forget inviting you into my home? What do you want?\"\n\n\"I have information that might just save your life.\" I said, and she laughed.\n\n\"Do you have any idea how many times I've received death threats? Who is it this time? Let me guess, the mayor's girlfriend again... or maybe the sheriff.\" She said and with a rude sound she relented and invited me in. \"Carlos! Carlos, you lazy asshole we have a guest. Bring out something to drink...\" she said, and her stomach rumbled. \"Ooh and some food too would be nice.\"\n\nCarlos made an appearance. He was a human of Mexican heritage and dressed in the fineries of an English butler. He was carrying a large silver tray. The tray had food and drink aplenty. Professor Tara Cogsworth told me all about her infernal digging machine. Of course, her professorship was self-appointed. While she had attended college in Europe they had seen fit to deny her the certificate she had rightly earned. I had asked her if she had ever read any Jules Verne and she giggled. It was in fact his novel, Journey to the Center of the Earth, that had inspired the digging machine. I told her about the goblins and she dismissed me instantly.\n\n\"There is no way they would dare attack me! Besides, no one speaks goblin but goblins.\"\n\n\"Let me tell you a little story about the brave and audacious goblin sappers that served under me a few wars back. I was tasked by the powers that be to breech the walls of Castle Voldenuit.\" Tara's eyes widened in surprise. \"So, you've heard of it.\"\n\n\"Heard of it, I visited its ruins. I examined your handiwork, if that was indeed you. I spent an entire summer walking that tunnel.\"\n\nI described that very tunnel to the last detail. Her expression went from contempt to acceptance. She knew I was telling the truth. I let her digest everything I had told her as I sipped some coffee and nibbled one of the sweet rolls on the platter. The parade of emotions was fascinating to watch. In the end it was resolve that was there in her eyes. Just as males had denied her the professorship now mere goblins would take away her steam powered behemoth. I saw her jaw clench and her eyes narrow as she made up her mind. It was only then that I asked for a tour of her laboratory. I was sure she'd turn me down flat, but she was a surprising woman in many ways. After she finished her late breakfast she offered to show me not just her lab but her house as well.\n\n\"You mentioned the mayor's girlfriend before. Why would she be angry with you?\"\n\n\"Oh that,\" Tara said breaking out in laughter. \"I'll show you once we reach my laboratory.\"\n\nWe went directly to the back of the house. There was a cobble stone path that led to an out building, that must be her laboratory. The path was framed on either side with strange looking metal trees. Their leaves appeared to be made of glass and when I mentioned them Tara stopped, placed her hands on her curvy hips and pronounced her great discovery and invention artificial light. I leaned close and looked at the glass leaves and saw tiny wires within. When I asked her where the electricity came from she pointed to the roof of her laboratory. There were strange black shingles on the roof. She explained that those tiles collected the heat from sunlight and turned it into raw power. We continued to her lab and she unlocked the heavy steel door with an intricate key. The entirety of the interior was reserved for her many experiments. There must have been a dozen separate projects in various stages of completion scattered through her laboratory. At the heart of the building was a large metallic cylinder that stood twenty feet tall of radiated an aura of heat about it. She called it her dragon furnace. It could resolve mithril ore into molten metal in short order. Tara had her own miniature foundry in her laboratory. I spotted the ingot of dark nonreflective alloy and moved directly towards it.\n\n\"You know what that is,\" Tara whispered behind me as I held a king's ransom in my hand.\n\n\"I do indeed. Did this come from the Magnus mine?\"\n\n\"Yes. You are holding the only black mithril to come from that mine. There is more if you want to see something that has never been mentioned in any text or arcane tome.\"\n\nI reluctantly set the ingot down and followed her to the wall safe. She produced a second key and opened it. She withdrew something wrapped in silk and handed it to me. I unwrapped it and stared at something I hadn't seen since the fall of my homeland. I almost pitched backward when I saw the block of pure red mithril. She watched me intently and I felt a tear slide down my cheek. Tara asked me about it and I told her that in other times only nobility could carry red mithril. The secrets of where it could be found, processed and worked had been lost in the natural disaster that had set my people upon a nomadic lifestyle.\n\n\"It took me five years to discover how to change it from ore to that block there. It was a fit of rage that allowed me to uncover that secret. Do you know it?\" She asked, and I shook my head. \"Do you want to know? It isn't like you'll ever see it's like anytime soon.\"\n\n\"Does Magnus know that you have this?\" I asked, and she flinched. \"I guess not. My people called this blood steel. It was primarily used as ceremonial daggers but there were legends that the Master of the House of Whispers carried a red mithril sword. You would call him an assassin. What are you going to do with them?\"\n\n\"You mean the black and the red. I have no idea. I suppose you have suggestions? I could sell them to one of the noble houses or hell even the government. I could name my own price.\"\n\nI handed her the red mithril back and she returned it to the safe. Why had she shown me that? Did she know the connection between rare mithril and Duskwalkers? Maybe she thought I knew more than I did. The safe closed with a dull thud and she locked it. She walked me around to her ongoing projects and had me guess what she was attempting. I saw a pattern emerging and I didn't like it. I kept the anger from my voice and face. I maintained a neutral demeanor and let her do all the talking. She was brilliant that was obvious, but I felt there was something else inspiring her. Tara began giggling when she approached the only project that was covered with a tarp. She started three separate times and stopped trying to explain what was beneath the heavy cloth.\n\n\"Oh hell, look and you tell me what you think it is.\" She said as she tugged the tarp free.\n\n\"Is that a... no fucking way,\" I said laughing. \"I heard they were using something like this as an anti-hysteria machine.\"\n\n\"Got it in one,\" she said holding up the gleaming metal phallus. \"I plug in the power supply here and it mimics a male's part. It worked so well many females have given up their husbands and boyfriends. The mayor apparently has some issues with intimacy. Speaking of rocking a major piece of male meat...\"\n\n\"You've talked to the whore.\" I said, and she shook her head.\n\n\"I got it directly from Lady Crimson herself.\" Tara continued holding up the faux cock and turned it this way and that. \"I need to build a bigger model. I don't suppose you'd be willing to pose for me and maybe let me get hands on your um... measurements.\"\n\n\"You want to give me a hand job?\"\n\n\"Well for a start yes,\" she said smiling. \"I'd like to be as accurate as possible. This is for the advancement of medical science. Think of all the women with hysteria that you would be helping.\"\n\n\"I see,\" I said failing to hide my smile. \"Well it sounds like it is for a good cause. When would you like to start?\"\n\n\"I think immed...\" she began just as tall leggy raven-haired elf stumbled into the laboratory. \"Ebony what are you doing here and why the hell are you drunk?\"\n\n\"You see it is like this,\" Ebony began and then fell silent. \"Who is this handsome piece of male flesh? Did you grow him, or did you seduce him into coming in here? Either way I am fine...\" she began and then saw my hands. \"Jesus Christ! What the hell is a Duskwalker doing in our laboratory? Has he come for the...\"\n\n\"Silence Ebony,\" Tara shouted her down. \"He is a writer. He is looking for characters and stories. Besides, he came here to warn me about some unhappy goblins.\"\n\n\"Oh... sorry,\" Ebony replied. \"My humblest apologies kind sir. Thank you for coming to warn us. I guess they got wind of the digging machine. How do you know they discovered our little project?\"\n\n\"I speak goblin.\" I said, and she made a face. \"What are you two hiding? You mentioned me coming for something.\"\n\n\"He knows all about the black and red mithril.\" Tara said but I caught a look between them.\n\n\"You showed him?\" Ebony asked, and Tara nodded. \"I see. Did he teach you anything about them?\"\n\n\"A little history lesson but nothing technical.\" Tara replied and then she turned to me. \"Do you know anything you could share?\"\n\n\"Let me show you something interesting,\" I said as I walked over and took a ten-pound sphere from one of her shelves. \"Observe and tell me what you notice.\" I held the ball of steel above the ingot of black mithril and dropped it. The sphere hit the ingot and it bounced off harmlessly. \"Well?\"\n\n\"I will be damned,\" Tara gasped in surprise. \"It didn't make a sound. Are you telling me processed black mithril absorbs sound waves?\"\n\n\"Yes. It also absorbs certain kinds of light. I'll let you work it out for yourself. Maybe afterwards you will be more forthright with me. I will let myself out. I have other people to interview. You know where I am staying.\"\n\nI left the pair stammering and returned to town. I learned early on that people needed time to make important decisions. Tara obviously had something in her possession that Ebony thought I might find of great interest. Again, there was that nagging feeling that nameless familiarity which haunted me. It tickled memories of my youth and yet was damned elusive. I would remember and when I did I would confront her. I went to the next person on my list to interview, the town's doctor. The walk back was pleasant and helped me push away those nasty emotions. The moment I reached main street I saw a group of the townsfolk gathered outside the doctor's office. I rushed over to see if I could offer some assistance. I had a general knowledge of first aid techniques. The smell of blood and alcohol was heavy in the air. Whatever had happened it hadn't been too long ago. I pushed my way through the crowd and saw the trail of blood leading from the street to the interior. The scent was much stronger now and I heard the grunts and cries of pain from within.\n\n\"Clear off, I have some medical training! Doctor... do you need a hand?\" I cried out.\n\n\"Thank the divines, come in quickly... make room...\"\n\nDoctor Ursa Forester was a tall muscular orc and despite this he was struggling with his patient. The gunshot wound was in the left leg. Ursa had a meaty hand clamped over the wound and was attempting with the help of his nurse to apply a tourniquet. Spurts of blood leapt from the wound as the dark elf continued to struggle. I rushed to the side of the patient and placed one hand on his chest and the other on his left hip and pushed hard. The gunman, as he was clearly dressed for combat, tried and failed to rise now. I think it was more to the massive loss of blood than to my strength. The doctor and his nurse worked feverishly fast to stop the bleeding but after two more minutes the patient let out his last breath. I let go and I shared a glance with the surgeon. He cursed and stepped away. \n\n\"You couldn't have saved him.\" I said peering at the wound. \"His thigh is broken and the artery appears to be severed.\"\n\n\"It doesn't make it any easier.\" The orc said bitterly. \"Here, come over here and wash up.\"\n\n\"Thanks, he must have been drunk as hell,\" I said as I washed the blood from my hands. \"I smelled the booze as I approached.\"\n\n\"Someone said he'd been drinking since last night. I believe he was working up his nerve to challenge the sheriff. He did his job too well. I saw him stagger out and somehow, he managed to stand there swaying as the good sheriff shot him in cold blood. He had no choice but still.\"\n\n\"No, I didn't have a choice. He was a threat to anyone on the street. He was so drunk he didn't know who was who.\" The tall Sidhe said from the doorway. \"How go the interviews?\"\n\n\"Slow,\" I said as I dried my hands. \"I came over to speak with the surgeon here. If you have time later, does not have to be today, I'd like to interview you for inspiration sake.\"\n\n\"I saw that coming. Fine, I have paperwork to fill out thanks to this asshole. Stop by tomorrow and we can talk. Doc.\"\n\n\"Caesar.\" The weary orc replied with a nod. \"So, I'm on your list.\"\n\n\"I was on my way to see you when this all happened. Do you know who he is?\"\n\n\"His name was Nathaniel 'the Kid' O'Brien.\" An orc said from the doorway. \"Hi, I am Horace Middlestone, but everyone calls me Digger. I bury the dead, well after I clean them up and photograph them of course. The Kid's friends left money for a clean suit and a coffin. Awful generous of them really. Most lose their nerve and run off too yellow to face the sheriff or pay for their friend's funeral. I saw one of your kind once. It was at the battle of Shiloh. Gods what a day! I thought it was the end of the world. He rode a pale horse that one. His name was Death that day. His face was so fierce that many battle-hardened veterans fled his continence and quit the field of battle. He smote his enemies down with a black sword in one hand and a gleaming pistol in the other.\"\n\n\"You should be a poet.\" I said and fell silent.\n\n\"Digger plays the piano at the saloon when he isn't planting corpses.\" Doc added as he gestured for Digger to remove the body. \"Take him away.\"\n\nDigger whistled, and two young orcs slipped into the room and gathered up the corpse and carried it away. Two humans followed up and began washing the surgery. The older of the two focused on the operating table while the younger attacked the floor with hot water and a wire brush. The doctor and I walked over to the saloon for a drink. He began sharing his life story with me as we crossed the street. It took little prodding to learn what I wanted from him. He had been a mere nurse during the war but since then he went to school and became a full-fledged physician.\n\n\"How long has Digger been photographing the dead?\" I asked.\n\n\"Only about a year now. He sells them to people back east and the more gruesome subjects have an audience as well, not everyone gets shot in the leg.\"\n\n\"Morbid.\"\n\n\"He may dress poorly and act the fool but do not be taken in. He is cunning that one and ruthless as any outlaw. Watch your step.\"\n\nI bought the good doctor a few beers before he wandered back to his practice. I jotted down my notes, and felt sorry for him. He had been barely old enough to enlist when the war erupted and like so many others he was tossed into the emotional grinder and spat out again. I was sipping my drink and watching a handful of goblins huddled together when a loud booming voice called from the street. It was going to be one of those days. I got up and went outside. A wide shouldered well-dressed dwarf stood in the middle of main street. His beard was long, neatly trimmed and showed long streaks of silvery white. He was cursing loudly but this time he was neither drunk nor addressing the sheriff. The dwarf's ire was directed squarely at the mayor.\n\n\"God damn it Erick, you promised me double the men to guard this last shipment. You recalled half of them the moment they were half a day's ride out, you lying sack of horse dung!\"\n\n\"Oh hell,\" the bartender cursed. \"That is Magnus D, he owns the mine. Looks like the mayor did it again, promising one thing and doing another.\"\n\n\"Calm yourself Magnus,\" the mayor said making an appearance. \"I am sure we can talk about this inside.\"\n\n\"Fuck you Erick,\" Magnus said and spat on the ground between them. \"I am done trusting your promises of security. I am hiring my own men from now on.\"\n\n\"We have a contract...\"\n\n\"We have nothing,\" the dwarf growled. \"You broke that contract after the last three shipments were stolen. You and your people are worthless, less than worthless.\"\n\nI walked out to get a better look. The dwarf noticed me and was distracted long enough for the mayor to set a hand on the other's shoulder. Magnus grabbed the mayor by the wrist and gripped it tightly. With a sudden movement of his other hand he tore the cuff of his shirt and yanked the material away revealing the tattooed skin beneath. I recognized the tattoos as those given to certain prisoners. So, the mayor had a jaded past. Did the good folks of Eclipse know this? The orc yanked his arm free and stormed off covering his wrist as he went. ",
        "\"There's your story Duskwalker. You need to talk to him about his sins.\"\n\nMagnus walked away and returned to his mine. I had read in newspapers about the mithril heists. There were never any witnesses left alive so the only thing the authorities had to go on was what the thieves left behind. The few clues pointed at the local natives, but I suspected that was what the bandits wanted the law to believe. I returned to the hotel and spent the rest of the day writing. The ideas and plots came in spurts and flashes of scenes and dialogue. I sat at one of the tables and watched the slow parade of whores and goblins. I tried and failed to keep the images out of my head. The noises drifting down from the rooms above didn't help any. The shriek as a goblin climaxes isn't for the faint of heart. It is both humorous and frightening at the same moment. I never felt much compassion for females that sell their bodies. But after hearing the noises above kindled a sense of pity for them. I was looking down at my notebook when the shadow fell over me. I looked up and saw the sweaty whore glancing down at me. She was a curvy dark elf with hair dyed the color of autumn leaves. Her brilliant blues eyes locked with mine for a moment before she spoke.\n\n\"Are you next?\" She asked as she poured a small quantity of mithril dust from one pouch to a larger one. \"Or do you just want some company?\"\n\n\"How much for an hour of talk.\" I replied grinning.\n\n\"Not too much my pussy is a bit sore after, well after an eventful day.\"\n\n\"Sit, if you can, and I'll buy you a drink or two.\"\n\nThe whore's name was Cerulean, but she let slip that her real name was Cassandra. I jotted down notes about her appearance and her personality. I asked her what it was like getting humped by a goblin and she laughed. \n\n\"Males are all the same,\" she giggled. \"All trying to compensate...\"\n\n\"NO, I just wondered what it was like to endure those horrible noises and worse.\"\n\n\"Oh... OH... you feel pity for me do you. I make a good deal on payday. They come out of the mine by the dozens. I have quite a few regulars, but I treat them all the same. They take turns and I just stick my ass in the air and let them have at it. Occasionally they like to team up in twos or threes. Those are a little harder to endure. I won't lie that getting ganged up on isn't pleasant whether its goblins, elves, or orcs. Though I've never been with two Duskwalkers before. I'll be honest, I've never been with one before. What are you like? I mean is it big and thick or long and thin. What does the head look like?\"\n\n\"Why not crawl under the table and find out if you want to know so damn bad?\"\n\nI returned to fleshing out the character of the dark elf whore when I felt a tug on my belt. I chuckled as the curious whore freed my cock. She let out a soft whistle before she began stroking it. I stopped what I was doing when I felt her tongue trace the underside. Oh, damn that felt good! I sat back and enjoyed it as she got me rock hard with hand and mouth. She whistled again and told me to hold on. I gasped when her mouth engulfed the head. I shivered as her tongue swirled around it slowly. She was a gifted whore. I gripped the edge of the table as her head moved forward and back. The blue-eyed beauty was taking half my cock down her throat at a time. She never took any more or any less. I promised her a twenty-dollar gold piece if she could take the whole thing.\n\n\"Seriously,\" she gasped from below. \"You want me to... to take that entire monster down my throat.\" I dug the coin out of my pocket and showed her. \"What I do for money. Hold on Cat Eyes... here... I... go!\"\n\nI almost dropped the coin. She shoved her head forward and I heard her gagging as she tried. She backed off and went slower the next time. I clenched my hand around the coin as she tried repeatedly but she failed in the end. Once she realized she couldn't she did the next best thing. She worked the head like a demon and double fisted the shaft. I clenched my teeth and shook in the chair as I fired my load down her throat. Cerulean poked her head out and opened her mouth. I watched as she swallowed my load. The challenge was set but I told her I wasn't following goblins. I handed her a silver coin for her efforts and she took it.\n\n\"You could do my ass.\" She said her voice quavering. \"No one's touched that tonight.\"\n\n\"Cerulean, you don't sound so confident.\" I said smiling.\n\n\"I 'think' I can take it.\" She said her eyes wide in doubt. \"If you leave me in control. I don't want you breaking me in two Sir.\" I looked around and she giggled. \"I'll earn that gold coin yet.\"\n\nShe returned to beneath the table. What the hell was she up to? She spat on my cock and began stroking me. Despite having just shot my load the thought of being buried in her round firm ass had me hard in short order. She licked and spat some more until I was slippery. Her hands and mouth fell away. A moment later I felt as she, on hands and knees, backed up against my erection. Was she going to try this right here? Cerulean pulled her ass cheeks apart and pressed against me. I held my cock in place and too aim for the prize. She pushed slowly, and her asshole opened to me. I looked around, but no one seemed to notice. I clenched my teeth as the head popped inside of her. She let out a sigh of relief. The dark elf pushed again until I sank to the root. I had to place my hands on the table to keep it from moving. She pressed her tits against the floor as she rocked her body. \n\n\"Damn that feels good,\" I hissed softly.\n\n\"I bet it does,\" Cerulean whimpered. \"Biggest one in my ass ever...\"\n\nShe clenched her ass around me as she pushed back, and then relaxed as she moved forward. I had been with many females, but she was a talented little sodomite. I lowered my head and watched as her body rocked back and forth. There was something erotic about watching. My cock swelled inside of her and she let out a gasp of surprise. She knew I was getting close and I felt the sweat form rivulets that rolled down my face and chest. I wanted to toss the table aside and take over, but I remained seated. Somehow, I managed to remain silent as I fired my seed deep into the petite elf girl. Cerulean however cried out alerting Galen to her position.\n\n\"Damn it girl,\" he cursed staring under the table at her. \"I warned you about fucking down here. Oh sorry...\" he said seeming to see me. \"Nevermind.\"\n\nCerulean squeezed her ass around me without moving now. I shuddered as spikes of pleasure shook me. I couldn't move without lifting the table. I was trapped. The whore continued to squeeze me regularly and I muttered a curse as a second climax hit me without warning. I leaned heavily against the surface of the table. Only then did she retreat and using a cloth wipe me clean. She returned my flaccid cock to my pants and zipped me up. She lowered her skirt and got to her feet. I handed her the gold coin she had earned.\n\n\"I think I've earned another regular.\" She said beaming with pride.\n\n\"Selene is going to be mad.\" I muttered.\n\n\"Nah, we share guys all the time. Maybe we can do a three way some time. Thanks mister.\"\n\nShe passed a few coins to Galen and that seemed to lessen his ire. After only two days I was impressed with this little town's hospitality. I ordered another beer. I opened my notebook and attacked its contents with more enthusiasm this time. I altered the whore into a woman the audience might take pity upon. It was the least I could do after that heartfelt performance under the table. I finished and went to my room. I looked forward to my time here in Eclipse. There were mysteries to reveal and people to know. I wrote a telegram for my boss and would send it in the morning when the office was open. I took out the book I had purchased from a dealer in London. It was about a digging machine and written by one of my favorite authors. I opened the front cover and began reading 'Journey to the Center of the Earth'. \n\nA Shadow Over Eclipse:\n\nThe bandits were quiet for nearly a month. The mithril shipments reached their destinations and an abundance of wealth filled the coffers of Magnus D and his family. I spent my time interviewing the people of the town and became what passed for a regular eventually. I still got stares but not as often and usually not so blatantly. I settled into a routine while my associate and friend Russell performed tasks that required stealth and subtlety. It was taking time back tracking the movements of the mayor of Eclipse before he arrived here. He had covered his tracks quite well but once Russell got the scent he was determined. I had every confidence in my friend that he would find something. The routine that I had enjoyed was broken on the first day of autumn. A young orc child raced through town hollering at the top of his lungs that the coach carrying ore had been robbed. \n\n\"They're dead... they're all dead... my father is dead!\"\n\nThe street filled quickly, and the boy was comforted by the sheriff. He promised to find the cowards that had bushwhacked his pa. I had my suspicions but no real proof who was behind the thefts. If I was right it would tear the town apart. I prayed I was wrong. The boy's mother staggered out of the whorehouse and looked around bleary eyed and it didn't take a psychic to sense the hostility in the air. The boy raced over to his mother and she took him into her arms. When she learned of the death of her husband she fell back and wailed. I had seen more than my fair share of death and the wail of widows haunt the living and lays grief at the survivor's feet. I turned and returned to the hotel. The law had a lot on its plate and I didn't envy them. \n\n\"It has started again,\" Galen muttered, and I nodded.\n\n\"Any ideas who is behind this? Have you heard any rumors?\" \n\n\"There are always rumors but the truth behind them cannot be confirmed. I'd rather not speak out of turn if you don't mind.\"\n\n\"I respect that Galen.\"\n\nI spent the next hour looking over my notes and jotting down any ideas that sprung to mind. I noticed that I had overlooked an interview. I finished my coffee and left the hotel. The local chemist, or as they were known in the old country apothecary, had eluded me so far. His shop was near the edge of town close to the stables. The ageing dwarf was well respected and fancied himself semiretired. I walked in and saw that he had a customer. The young elf looked nervous as he collected what the chemist called his mother's sleeping draught. He paid and left in a hurry. I recognized the elf as the baker's son. What had him so flustered? \n\n\"The young,\" the chemist chuckled. \"He asked me for a love potion. Poor thing was heartbroken when I told him things like that didn't exist.\"\n\n\"We were all that age at one time or another. Do you have time for an interview?\"\n\n\"I do but uh...\" he said stammering and I raised a hand.\n\n\"Relax, you aren't obligated to answer any questions you don't want to. These are more general than prying.\"\n\nI could see the relief on his face as we sat down at a small table in the corner. I took out my notebook and moved to a clean sheet. I began with an easy question. I asked if he enjoyed being a chemist. He smiled and told me of his love of chemistry. He told me that his mother had been an herbalist and grew her own plants and mushrooms. Now that he was at ease the interview went off without a hitch. As I asked him questions I wondered what secrets he was clinging to. Something had bothered him enough to make excuses.\n\n\"All done,\" I said closing my notebook. \"Perfectly painless.\"\n\nI was so caught up with interviewing that I didn't notice the three women clinging near the doctor's door. I got up and opened the door for them. Two young ladies supported a third between them. She had been badly beaten and one eye was swollen shut. A strange cut on her cheek the only clue to the monster that had smote her face and body brutally. I scooped the girl off her feet and carried her over to the small table. The chemist hovered around me like a persistent satellite. I offered my help and he examined her wounds as the other girls tried to flee. I stopped them with a word and a gesture.\n\n\"Who did this to her?\" I asked, and they refused to reply. A single glance and I could see the fear in their eyes. \"Who is she?\"\n\n\"Her name is Carlotta,\" the dark elf said.\n\n\"She just got here a few days ago. She rode in with some of the cowboys. They told me that she was on foot and they traded transportation for certain favors. She agreed and a fair bargain was struck. Lady Crimson took her on for a season and if she worked out she might be asked to stay longer.\"\n\n\"I think her cheek is broken,\" the dwarf muttered as he gently prodded her wounds. \"She has a concussion too. I don't know.\"\n\n\"I know of a salve that might render her some aid.\" I offered. \"May I look at your herbs?\"\n\n\"Please. I don't suppose you'd be willing to share it.\"\n\nI left his side and went to the back where his greenhouse was located. I gathered what I needed and prepared the salve. I worked as quickly as I dare. Once it had reached the desired consistency I carried it up front and took over. I knew how to apply it and how much. I also wanted a better look at the cut on her cheek. The bruising had worsened and made the design easier to make out. It was the impression left by a signet ring. There were few people that wore such things and I would keep an eye out for it. I finished the first application of the medicine and told the doctor I would return the next day to see how the young human girl was doing and make more salve if need be.\n\nI left him without asking the burning question. What were you so damn frightened I would ask? I stepped out onto the street and sitting outside the whorehouse was the young orc who had lost his father earlier today. I fought the urge to go over and comfort him. I knew enough of orc culture that it would be frowned upon. Strength was earned through crisis and loss. I watched him as he fought the tears and clenched his small fists. He wiped his eyes and caught me watching. I bowed slightly acknowledging his struggle. He nodded and got to his feet. I watched him walk off and knew that while he was hurting like hell he would be okay. It filled me with hope. After the war I had a small measure of hope within me. If a young orc can find his father's body and endure then so could I. \n\nThe saloon called, and I answered. I could tell by the quality of the music that the famed scout Hawkmoon had arrived in Eclipse. I knew Hawkmoon from the growing conflict between human settlers and the native elves. Hawkmoon was a member of the Apache tribe. Unlike those of European stock the humans native to America had adopted the elven way. They were stewards of the land and didn't own it. This caused conflict when the expanding humans both free born and recently slaves attempted to take land that didn't belong to them. The real authors of this tragedy were human politicians that were handing out land grants to settlers knowing that the elven nation dwelt there already. Another war was about to erupt but this one was going to involve one race versus another. The humans bred so fast and needed land of that there was no dispute. However, the elves and in this case the Apache humans were already here.\n\n\"By the stars, is that my friend the Duskwalker?\" Hawkmoon called from his spot at the piano.\n\n\"You are looking well old friend. How is your family?\"\n\n\"They are good for now,\" he said, and we wore matching expressions. \"I am sorry. My presence here has caused you pain.\"\n\n\"No, a young male orc found his father murdered today. That will always sour a sane person's mood.\" I said. \"I fear another war is on the horizon.\"\n\n\"You speak for many.\" Hawkmoon replied as his fingers tapped out a lively tune.\n\nI sat at the bar and drank as my friend played. There were plenty of memories between us. He had taught me how to track and move silently through any natural environment. I had taught him the gentleman's art of sword fighting. I had gifted him with a fine weapon when we went our separate ways. I wondered if he still practiced? I stayed quite late and drank more than my fair share. It was long past midnight before I took to my bed. I awoke to a gunshot and sat up and a moment later a second shot broke the silence. I heard the commotion begin and hurriedly dressed and raced down the stairs. The crowd was growing by the second and I barely caught the backside of the rider as he rode out of town.\n\n\"Has anyone called the doctor?\" I asked as I slipped to the side of the prone sheriff. \"Who shot you?\"\n\n\"He called himself Grimjack. Strangest looking bloke I ever laid eyes on.\"\n\n\"Olive complexion and built like a human,\" I asked and he nodded. \"Yep, that's him alright, he looks funny because he's a half breed. His mother was a dark elf and his dad was a member of the Emerald Tribe.\"\n\n\"His pa was an orc?\" The sheriff asked as I put pressure on his wound.\n\n\"Out of the damn way,\" the doctor cursed. \n\nThe doctor knelt on the sheriff's other side and examined the wound. He announced that the bullet missed the heart but he was still in danger. We carried the sheriff to the doctor's surgery as carefully as we were able. His color was poor but he was still breathing. What followed became a six-hour blur but in the end the bullet was removed, the damage repaired, and if infection didn't kill him the sheriff might pull through. I washed my hands as the doctor settled into a seat exhausted. \n\n\"How do you know this Grimjack fellow?\"\n\n\"We met at cross purposes during the war. He was the head of a mercenary band working for the South. They were selected to reach certain targets acting mainly as assassins or saboteurs.\" I said as I checked the sheriff.\n\n\"Perhaps I should have asked, how do you know so much about him?\" The doctor asked rubbing his temples.\n\n\"Ah, well that is simple,\" I replied with a smile. \"I was tasked in capturing him alive and interrogating him.\"\n\n\"I take it you succeeded.\"\n\n\"Damn right I did. I caught him and asked him nicely all the pertinent questions I felt were important. When I saw him in the flesh I knew he was different. I have met a handful of half breeds over the years. He was by far the luckiest I had seen. Most are biological nightmares taking the worst from both parents. Grimjack is handsome by any standards, he is intelligent, and he possesses nothing that passes for a conscience. He could kill without ever having to ask why if there was enough money involved. I think someone hired him to kill the sheriff to make an example of him.\"\n\n\"Did he escape? How did he end up here?\"\n\n\"I left him in a military prison. I will have to send a telegram tomorrow.\"\n\n\"Did you fight for the orcs?\"\n\n\"I fought for freeing humanity I suppose.\" I said feeling a mix of emotions. \"I felt sorry for them. I have been imprisoned and I hated it.\"\n\n\"I think it is their incredibly short lifespans that makes them the way they are, good or bad. I think by the time they reconcile their lives they are old and facing death.\"\n\n\"There is truth in your words doctor.\" I said in agreement. \"Maybe he's here for me. I guess we'll see.\"\n\n\"You think he shot the sheriff to get your attention.\"\n\nI nodded and decided it was time to eat my evening meal and call it a day. The villain had left the town for now. Patience was required to see if the sheriff lived or perished from his wound. If Grimjack had come here for me then the sheriff's life was my responsibility if indirectly. It was a burden I was willing to take on as I had numerous others. Life wasn't always the pleasant company of a whore or concubine. Life was a blend of horror and bliss. I believed that if you wanted to live a full life you accepted those two diametrically opposed ideals and everything between them. Not everyone holds those same ideals. Many people cling to the pleasures of the world and try their best to avoid the unpleasant. But I knew that to grow one had to suffer, fail, and even be utterly broken. The wars I had fought in had taught me the gift of pain. ",
        "\"I need a drink.\"\n\nI was getting too serious and hopefully the sheriff would recover. I needed to unwind a little. I couldn't overdo it in case Grimjack returned for another go. I didn't know if he was alone or had a crew of mercenaries with him. I would stop by my room and grab a little protection just in case though. I went to my room and removed the floor boards from my closet and took out the smaller of the two cases. I returned the boards and opened the case. The guns within gleamed when the sunlight hit them. They were the handiwork of a master gunsmith. I had spent a fortune on them and they were worth every dollar. The gun belt was tooled dragon leather and stitched with mithril thread. I loaded the pistols that had been hand crafted to fit my hands and my hands alone. Having two opposable thumbs while for me was not just convenient but beneficial. There were things I could do that most others could not and on the reverse side there were many objects that I could not comfortably utilize. Because of that I carried personalized tools for my own comfort. Two of those were the hand guns I was now wearing.\n\n\"Time for a drink.\"\n\nI put on my duster which covered most of my gun belt. Of course, anyone curious enough would spot the second belt buckle if they looked hard enough. I made my way to the saloon and found it relatively quiet. The goblins were busy in the mines and I was grateful for the break in their obnoxious behavior. There were few patrons in now and I liked it that way. The bartender blathered away about the unprovoked attack by the weird looking human. I wrestled with whether to tell him Grimjack's lineage or not. \n\n\"I know that look,\" he said leaning close. \"You know something.\"\n\n\"He's not human,\" I said and explained as briefly as possible. \"Was he alone?\"\n\n\"No, funny you should ask. He had two other fellers with him. One was a tall sylvan and the other was a huge fucking orc. I didn't recognize either of them. I suppose all three were passing through. There's that look again, you think they are coming back don't you.\"\n\n\"Yep.\"\n\n\"Don't you worry mister I got old peace keeper behind the bar. Anyone even thinks about starting trouble in here and they get both barrels.\"\n\n\"Grimjack is a dead shot. Just be careful and try not to provoke him.\"\n\nI left after my second drink. It was dark out by then and I needed to walk. The town was quiet though not silent. As I walked past the homes of the townsfolk there were hints at conversations. I was passing one home when I noticed a distinct difference in the tone and quality of the words being spoken. I stopped cold and shivered despite it being a warm evening. I was moving to the side of the house as quietly as I was able. I am not by nature a voyeur, but the sounds stirred my curiosity. I peered through the window and watched things unfold. \n\n\"I have your wine and sleeping draught.\" The boy said as he took a seat opposite the woman.\n\n\"Such a good son,\" she whispered as she unfolded the paper and poured the powder into her glass. \"How was your day?\"\n\n\"Someone shot the sheriff,\" he replied instead. \"He is still alive so far.\"\n\n\"This town is going to hell.\" She said and then took a deep drink of her wine. \"I hate this place.\"\n\n\"You are only upset because Lady Crimson hasn't fulfilled her promise. You are still just a whore.\"\n\n\"It is impolite for a son to call his mother a whore. It is true but impolite. The money I earn while on my back put a roof over your head. If you don't like it move out.\" She yawned and let out a soft gasp. \"I can't move. What have you done?\"\n\n\"I added a paralytic to your sleeping draught.\" He said as he stood up and took out his cock. \"Time to earn a little extra tonight. Open wide mother...\"\n\nI watched as he grabbed her by the hair and pushed his erection between her lips. So much for a kiss or getting things warmed up. I heard her gag and cough but her son seemed quite oblivious to her complaints. He reached down and tore her night shirt asunder. His hands mauled her breasts as he gave her mouth pussy a rest. He bent down and bit her nipples and I was surprised when she only chastised him.\n\n\"Not so rough,\" she said dreamily. \"I have work tomorrow night.\"\n\nHer words sent him into a rage. His face darkened and he spat on his fingers and thrust them between her legs. The intent was clear. He was prepping her to be violated. If I burst in and stopped him who would handle things? The sheriff was incapacitated his deputies simply weren't up to it. I had met them. They were a dumb dull lot that only volunteered because they weren't fit for anything else. Her sudden cry brought me back to what was transpiring. The young man had pulled her hips so that her ass was right on the edge of the seat of the chair. His cock was sliding inside of her and I could see her discomfort. With no foreplay and little lubrication it was rough going. He stopped and spat a few more times and tried to improve things. His thrusts were slow but deliberate. It looked like he was enjoying himself even as she managed to shakily raise her hand and press it against his chest.\n\n\"Stop... you are hurting me,\" she said her words slurring badly. \"This is wrong.\"\n\n\"So is my mother being a common whore.\"\n\n\"There is nothing common about me,\" she growled as her pride raised its head. \"For the god's sake use... UNNNN... in the table's drawer the blue jar.\"\n\nHe yanked his cock free and strode over and opened the drawer. He smeared some of the jar's contents on his erection. I watched as he rubbed it in. He returned to his mother and slid back into her without any resistance. They were both moaning now. Gone was the pain now she was being serviced by her own son. \n\n\"My ass,\" she begged. \"You can't spill your seed inside of my womb. Fuck my ass at least. If you love me at all give me that at least.\"\n\n\"Fine mother,\" he snarled. \"Here let's try your other hole.\"\n\nHe pulled out of her pussy and lowered the tip a bit and pushed. They both cried out how tight it was. He slid into her ass in one go. I winced but her expression wasn't one of pain but bliss. She told him how much she charged for just this privilege. That sent him into another rage and he pounded her ass with all the power and speed he could muster. He wasn't going to last long going at her like that. But then this was rape and not about pleasure. He was taking out his anger at her profession and her lack of motherly instincts. They cried out together as he shot his seed deep into her crack. I moved away before I was seen. The streets were nearly empty when I headed back to my room. \n\n\"Hello father,\" I called out in greeting to the human priest.\n\n\"So, you are the Duskwalker,\" he replied. \"You look troubled.\"\n\n\"Indeed, I am,\" I admitted to the man of the cloth. \"I have seen this very night a very disturbing sight.\"\n\n\"You passed and did nothing.\" He said, and I nodded. \"Is your conscience bothering you?\"\n\n\"No, not in the way you think. I am disturbed by the history between the two I observed. It is an unhealthy relationship and yet will remain after tonight.\"\n\n\"You don't like me,\" he replied after a long pause.\n\n\"It isn't that,\" I told him. \"I don't like what you represent.\"\n\n\"I have heard it say that the Duskwalkers have no god or higher power. Is that true?\"\n\n\"We have never bent knee nor spoken prayers if that is your meaning. However, we held three things sacred since our beginnings. I guess you could call them a triumvirate of sorts. We held logic, knowledge, and truth as our sacred ideals. If they be gods, then we hold them dearer than life itself as your Holy Church knows all too well.\"\n\n\"Suffer not a witch to live.\" The human said, and I clenched my hands into fists. \"Those were dark days indeed.\"\n\n\"There it is again,\" I whispered shaking my head. \"Your race is so short-lived father. What for me is my past is long history to you. What I recall with ease your holy books are vague words for events that naught transpired.\"\n\n\"That smacks of heresy sir!\"\n\n\"I speak only the truth.\" I fired back unrepentant.\n\n\"Your truth...\"\n\n\"The truth, the unvarnished objective truth. I told you of the three pillars my people hold sacred. I earn nothing by lying.\"\n\n\"To hell with you,\" he snapped and stormed off.\n\n\"I did it again.\"\n\nI had shattered another human's faith. I pondered a drink when I saw the priest heading for the saloon. Let him have his space I thought. It was time to turn in. I returned to the hotel and slept until dawn. A fine breakfast was waiting for me and I didn't miss the nervousness of the other guests. When I asked about it the young dark elf, Mirabelle by name, told me a message had been delivered to the hotel. Galen came over himself carrying a wooden platter. There was a piece of paper and an ornate knife on it. The paper had been cut and it became clear that someone used the knife to nail the paper to the outside of the hotel. I recognized the double-edged dagger. It had once belonged to me. I have given it as a gift to a dear friend of mine. The only reason for its return could be that he had been killed and the blade taken off his corpse. Grimjack had worked his way through god knew how many of my friends before tracking me down to the town of Eclipse.\n\nI took the note and unfolded it. The handwriting was plain and sloppy. The cursive Latin was a challenge, and poorly written. Grimjack was calling me out. He had chosen high noon to face me on the street. I asked on how the sheriff was doing. Galen told me that he was still alive, but he hadn't awoken yet. He asked me what I was going to do as the rage slow simmered within me. How many of my friends had perished just so he could find me? \n\n\"Do... do... I am going to shoot that son of a bitch dead. I am going to leave his corpse bleeding in the street.\"\n\nGalen left me in peace. I ate my meal in silence pondering the likelihood of surviving this duel. I had to contend with the fact that Grimjack might set up snipers to kill me even if I survived him. I set my utensils down, drank the last of my water, and gazed down at what would likely be my last meal. It is not what I would have chosen but it sufficed. I retreated to my room to meditate and focus on what I had to do. This wasn't my first duel and likely wouldn't be my last. I sat with my back to the wall and recalled my duel on Boston Commons. It had been a crisp autumn morning. The weapons were much less sophisticated than what we would be using today. The flintlock left much to be desired when it came to accuracy as well. But if you struck bone your foe was most assuredly dead. The metal ball propelled into the other would shatter and send shards of metal that would devastate organs and blood vessels.\n\nMy meditation was interrupted when someone knocked on my door. I got up and opened the door. Two females entered, and I recognized both. One was the young human that I had helped treat at the doctor's office. The other was the dark elf that had so brazenly got under the table and pleasured me so well. I closed the door behind and suddenly the air was abuzz with both trying to speak at the same time. They were constantly talking over the other and halting a staggering attempt to pass on a message. I smiled and that caused them to stop and stare at each other. Once more they each tried to go first and that forced a second silence.\n\n\"You, human female, tell me why you are here.\" I said keeping my laughter at bay by will alone.\n\n\"I am here to comfort you.\" She said unconsciously touching her cheek. \"You saved my life and healed my bones. I wanted to thank you.\"\n\n\"I wanted to fulfill my promise,\" the dark elf interjected. \"I wanted to make your last few hours pleasant.\"\n\n\"What if I live?\" I asked. \"What if I kill Grimjack?\" They looked at each other a second time and smiled. \"Tell you what, why not hold onto all that hunger and desire to please me until after the duel. When I am done I am going to want to celebrate. I can't imagine any better way than taking on two eager young ladies.\"\n\n\"Both.\" They said in a single voice.\n\n\"I've never...\" the young human stammered.\n\n\"I'll get her ready,\" the dark elf grinned. \"We will both be ready for you.\"\n\nThe elf grabbed the human's wrist and led her out. I fancied that the petite girl would have her horizon's broadened by the time the duel was over. Now that was a show I'd pay to be in the front row for. Since my meditation had been ruined I decided to clean my pistols and write a letter. I knew she wouldn't reply but worst case I make my feelings known. I took out my pen, ink and my best vellum. The soft scratching sound as the pen bit into the paper had a deliberate tempo as the words formed. I was surprised at how easily the letter took form. I had written it in my head a hundred times and now it was given shape. I let the ink dry took out wax and my signet ring. I folded the letter in my distinct style and slid it into an envelope. I lit a candle and used its flame to melt the stick of red wax. I watched the drops fall like blood and pool on the back of the envelope. I pressed my ring into the wax and set it aside. I wrote a note for Russel to deliver the letter if I happened to perish in the gun fight.\n\nAnother knock at my door tested my patience but I let it go. A young male gnome entered carrying a small wooden box. He informed me that the sheriff had recovered and was conscious. The sheriff had sent the boy with a small gift. The gnome left my roof and I noted the weight of the box in the palm of my hand. I pulled the lid off it and almost dropped it when I saw the twelve mithril bullets. They were the trademark of the sheriff and from what I had been able to glean from the residents of Eclipse, a gift from Magnus D. I eagerly accepted the gift and loaded both pistols. Did he know I possessed two guns or was this simply a princely gift from a man that was grateful for my help? It didn't matter in the end. I planned on placing at least one of these projectiles deep in the black heart of Grimjack. \n\n\"I should have killed you all those years ago.\" I muttered as the clock struck eleven. \"One more hour.\"\n\nMy emotions began boiling in my gut. There was the familiar surge of excitement, fear, and uncertainty. I wanted to kill this creature. I wanted to end his life. The rush of bloodlust rose up and filled me with the pulsing of my hearts. The fierce staccato of the quadruple beat filled my ears. I heard someone racing up the steps and my door opened without anyone knocking. Russell stood there, and he looked angry. He cursed as he retrieved the larger case from the closet. The long string of vitriol continued as he opened the case and retrieved his long gun. He opened a smaller compartment and removed the optics for the rifle. He systematically examined every inch of gun and sight to make sure they had travelled safely. Satisfied he attached the optic to the long gun and loaded the weapon.\n\n\"I won't shoot unless someone else attempts to intervene.\"\n\n\"I trust your judgement.\" I told him. \n\nRussell sat on the floor opposite the door and took out a leather shod metal flask. He unscrewed the lid and took a swig. He offered it to me and winked. I took it and sniffed the contents. The scent of roses and fruit made my mouth water. I thought the last of the Winter Mist was long gone. But here it was in this flask. I took a single shot and handed it back. I needed to keep my wits about me. I asked him where he had gotten it or had he been hoarding it all these years. His reply was simple. During one of his assignments a few years back he came across a burned out building in Pass Wall. He had taken refuge in the basement of that house and discovered part of the foundation damaged. Behind it he found an entire case of Winter Mist. It is safe, and sound hidden away for special occasions. I savored the slight burn followed by the rush of euphoria. \n\n\"It's getting close,\" Russell muttered. \"I better get into position. I will be your guardian angel.\"\n\n\"We'll celebrate after I put this mad dog down.\"\n\nI sat alone until just five minutes before the hour. Some of the townsfolk began to gather outside as I looked out of the hotel window. I strapped on my guns and slipped my duster on. I made my way out to the street feeling the rush of uncertainty. It was like the day I had arrived. Everyone was watching me but as the clock struck noon their gazes shifted to the other figure striding from the other end of town. Grimjack was wearing the remnants of his confederate uniform. He had torn off the patches leaving nothing but the basic jacket. Though it had only been a few years he had aged a decade or more. His once ebony locks were now graying and shorn short close to his scalp. \n\n\"Duskwalker,\" he called out to me. \"It is time to end things between us.\"\n\n\"I agree. I should have put you in the ground years ago. It was a mistake to let you live.\"\n\n\"It is good to see you haven't changed. Are you ready?\" He asked, and I nodded. \"Good. Let's go on ten. You... boy, count backward down from ten as loud as you can.\"\n\nThe young orc child looked at his mother and she placed her hands on his shoulders. The boy's voice cracked when he called out ten but as he continued his voice grew steadier and louder. My attention focused on my adversary. Tunnel vision becomes inevitable as the pounding my heartbeats crashed in my ears. As the count neared its end I shifted my weight to my left foot. My right hand brushed at my duster as it settled onto my pistol. When I heard the child call out one I moved my right foot back describing an elegant arc. I spun on the ball of my left foot offering Grimjack a much smaller target. I faced him with my left shoulder aimed at my foe. He had drawn his weapon and fired from the hip. The bullet kicked up dirt several feet behind me. I shifted my weight onto my right foot now and as I repeated the action I drew my own pistol and fired. My round struck but was low and pierced his abdomen. The orc staggered back and fired twice more. His second bullet missed but the third struck me firmly in my side. I cried out at the impact but managed to remain standing and took aim and fired. Grimjack was so intent on my demise that his only strategy was to fire as many bullets as he could. I squeezed the trigger and my next round found its mark. His head snapped back as the back of his skull exploded outwards. He was dead before he hit the ground.\n\nThe doctor rushed to my side as I sank to the ground. I held my side and whimpered. My hearts were still pounding awaiting the report of a sniper's return fire, but it never came. Every breath hurt like hell and when the doctor examined my side he stared at me in disbelief. \n\n\"He hit you,\" doc said. \"I saw it.\"\n\n\"The bullet hit my duster,\" I said breathing as shallow as I could. \"It is dragon hide, a gift from an old friend.\"\n\nI was badly bruised along with a cracked rib, but I would live. Doc patched me up and I was ordered to rest. I told him I would spend plenty of time in bed. He handed me my duster and I saw him pinch the dragon hide between thumb and forefinger. I understood his confusion how something so thin and light could so easily stop a bullet. I was forced to move slowly. It wasn't so bad until I reached the bottom of the steps leading up to my room. I cursed under my breath as I raised my foot for the first step. I fought to control my breathing as I worked at a snail's pace up the stairs. I eventually reached my bed with a little help from Doc. A short time passed before the two young ladies arrived. There was an especially hungry gleam in the human's eyes. The elf had done her work to perfection. \n\n\"I knew you'd do it.\" Mary said her lips quivering in anticipation.\n\n\"We both did,\" Cerulean murmured. \"You are hurt. I guess we will be doing all the work.\"\n\n\"Pity,\" the human moaned. \"Let's get him out of those clothes.\"",
        "\"Yes... lets...\"\n\nThey took their time and once I was naked they disrobed. They each took a turn as I watched them shed their clothes. The elf went first making the human wait on purpose. Her skin was perfection and her body small and petite as was typical of her race. Her hair was long and neatly brushed. Her eyes the color of amethyst and her mouth was full and inviting. The human moved slowly teasing me with hints of breasts that were much larger than the elf's. Her hair was short and the color of flax. The human's features were pleasant in the way of milk maids and bar wenches. The elf ordered the human to turn around and bend over giving me a clear view of her full round bottom and soaked sex.\n\n\"She is very eager Milord.\" \n\n\"I can see that.\"\n\n\"Time to show him what I taught you girl.\"\n\nThe elf sat on one side of the bed and the human the other. I was already quite excited. My member was as stiff as steel. The elf wrapped her hand around the shaft while the human lowered her mouth and began licking and sucking. The elf boasted that she had taught the human a trick or two. I forced myself to keep still so that I didn't hurt myself by aggravating my injury. The tempo was so different as the elf's hand moved faster than the Monika's mouth or tongue could. There was also the coolness of the elf's fingers contrasting the warm wetness of the human's mouth.\n\n\"He likes.\" The elf whispered. \"His thing is beginning to quiver. Remember what I said and swallow when I tell you to.\"\n\nCerulean's hand moved faster as she squeezed occasionally. I fought the urge to climax and I grit my teeth as the elf warned the human that I was real close. I lost the fight and cried out as I came. The human did well for her first time. She coughed and sputtered at the end but was all smiles. She left long enough to wash her face and hair of the excess that she couldn't swallow. I rested a bit as the elf lay next to me pressing her body close. The human returned, and I saw the twinge of jealousy when she saw where the elf was positioned. Not to be outdone she straddled my hips and pressed her sex close to mine. Using both her hands she stroked me slowly. \n\n\"He's getting hard again.\" The human giggled. \"Can I?\"\n\n\"Fine, but be careful,\" the elf warned. \"He's pretty thick and he might just split you in two.\"\n\n\"I don't care. I love getting stuffed full.\"\n\nThe girl rose up, held my cock in place, and slowly lowered her hips. She let out a long squeal of delight as her pussy swallowed me to her core. I told her to go slow and she frowned when she saw the bruising beneath the wrappings. Her hips moved nice and leisurely as she rode me. Once more I was forced to remain still while the woman did all the work. Tonight, I would wear them both out if I had anything to say about it. I was limited quite a bit but that wouldn't spoil my night. I cupped the breasts of the young human and teased her nipples. Her nipples proved to be her undoing. I pulled her down and suckled them as she rocked her hips slowly. \n\n\"UNNN... they're so sensitive,\" she whimpered as a set my teeth on one of her tits. \n\nThat was a mistake. She began to buck as she climaxed. I cried out but this time in pain. She apologized but I waved it off. I had been the one to trigger her climax. She dismounted, and the elf took her place without letting me recover in the least. She was tighter than the human by far and simply sat there unmoving. I locked eyes with her and she grinned. While she never moved she did begin squeezing her internal muscles around me.\n\n\"You are full of surprises.\" I gasped.\n\n\"Yes I am.\" Cerulean beamed with pride.\n\nSo, while she remained stationary that didn't mean she couldn't please me. The elf appeared to be on a mission to milk an orgasm from me. The human girl lightly kissed my wound and asked if she could make it up to me. I crooked my finger and she leaned close. I whispered in her ear and she looked at me and made a puzzled face. After a few minutes she told me she would be willing to give it a try. Meanwhile I was on the brink of my second climax. The elf's talented sex was squeezing me tighter now and I grabbed the covers as my toes began to curl. The human girl kissed me a moment before I came. The elf shrieked as she came along with me. The pulses of hot cum inside of her had pushed her over the edge. I rested, and they brought me food and drink. Once I had recovered the human told me she was as ready as she could be. The elf looked at her perplexed. They got me ready for another go and Monika took the lead. She straddled me and as before she took me in hand, but this time lined up the head of my cock with her tight little asshole. The elf gasped as the human sunk down slowly and took me to the root.\n\n\"Gods above, you took it all!\"\n\n\"UH HUH,\" she replied. \"He's so big!\"\n\n\"Anyone could have told you that silly girl. How does she feel?\"\n\n\"Tight... amazing!\" I growled as she began moving.\n\n\"You are either brave or just plain crazy.\" Cerulean said to Monika.\n\n\"I lost my anal virginity six months before the other,\" the human admitted. \"My poor cousin was deathly afraid of getting me pregnant. He convinced me that my ass was an acceptable alternative. It hurt like hell the first time but the second time I came twice. It wasn't until I had normal sex that I knew how good it could really feel. Don't get me wrong, I like making men feel good by letting them do this. It is so naughty.\"\n\nThe elf used her slender fingers to pleasure the human. She thrust her digits in and out of Monika's slit as she rode my erection. It was the beginning of a three-day torrid affair. The doctor stopped by on the fourth day and removed the bandages, so he could get a better look at my ribs. He stared in disbelief at the lack of bruising and the fact that I was nearly free of pain.\n\n\"I had heard rumors about the regenerative capabilities of your people. But to see it with my own eyes. Can I ask you a question?\"\n\n\"You just did. Please, go on ask away.\"\n\n\"Why are you really here?\"\n\n\"Well, since the event is a mere six days away I will break my silence. There is going to be another solar eclipse.\"\n\n\"You mean here,\" the doctor replied. \"That will make one heck of a story.\"\n\n\"I want to see it with my own eyes.\"\n\nI wasn't surprised when word spread of the upcoming event. The town prepared for a kind of anniversary celebration. I watched the people scurry about while I finished my recovery. I had dinner and a few drinks at the saloon the day the doctor cleared me to move around. I had just ordered my third beer when one of the mayor's men approached and informed me that the mayor wished to see me. His tone and body language told me my beer would have to wait. I took up my cane and followed him out. As we were leaving a cluster of goblin miners were coming into the saloon. They were chattering amongst themselves and I heard a few words that alarmed me, strike, machine, sky and dark. Were they planning an attack on the digging machine during the eclipse? I had to follow the square jawed orc to the mayor's home. \n\nThe house was by far the second most impressive structure in the town. The first belonged to the mad scientist without question. My guide opened the front door for me and closed it behind me once I was inside. A gorgeous female dark elf greeted me and took my arm. She thanked me for coming and seemed honestly pleased to see me. Whereas the orc was as about as thrilled to have been sent to get me as a painful shit at three in the morning. The mayor lived a very lavish lifestyle for a small town like Eclipse. The furnishings and decorations were expensive and of surprisingly fine quality for a frontier existence. I was alarmed to see how well off he was. It smacked of corruption and other things. The dining room table could have seated twice the number that were currently seated around it. I recognized the better paid ladies that worked for Lady Crimson and wondered if they were on retainer or a kind of payment for services rendered to the madam. I sat between a buxom human girl and a slender sylvan elf. A plate with a thick steak was provided for me and despite my having eaten earlier I picked up my utensils and began cutting into it. The Mayor attacked his steak with great zeal and a hint of anger.\n\n\"Are you upset with me Mr. Mayor?\" I asked as I chewed.\n\n\"Upset...\" he grumbled. \"Let me ask you this. How long have you known about the upcoming eclipse?\"\n\n\"A few months to be precise.\" I said watching the Mayor's reaction closely. \"I have the telegram on me if you are interested.\"\n\nHe stuck out his hand and I handed him the folded piece of paper. He opened it and I watched his eyes move as he read the brief but concise contents. I saw his hand shake as he handed the telegram back to me. His color darkened as he fought his rage. I remained silent waiting him out. I wasn't sure exactly what had angered him. Had it been how long I had remained silent or was it something else. It ended up being something else.\n\n\"I had no idea.\" He muttered his knuckles whitening as he clenched his knife in a near murderous rage.\n\n\"No idea about what?\"\n\n\"Your clan name,\" he admitted at last. \"Everyone in town just called you Duskwalker and I left it at that.\"\n\n\"Ah, you have an issue with Clan Blackthorn then...\"\n\n\"They butchered... he killed everyone...\" the Mayor stammered and fell silent before continuing. \"I am trying not to hate you.\"\n\n\"I appreciate that. I cannot intervene again.\" I said and cut another chunk of meat from my steak. \"I just can't.\"\n\n\"Again, what do you mean again?\"\n\n\"I fought for the North during the war. A cousin of mine owned several plantations in the South. We clashed, and I left him for dead on the battlefield. You must understand how few of my people are still around.\"\n\n\"You and yours are a dying lot,\" the orc said failing to conceal a smug smile. \"We have no quarrel between us and, so I will not seek your death.\"\n\n\"Good.\" I muttered as I chewed.\n\nI finished my steak and left. Russell was waiting outside in the shadows. He had been keeping an eye on me in case things went sour. He raised an eyebrow which I interpreted as him asking if he wanted the mayor eliminated. I shook my head and place a hand on my friend's shoulder. We walked back to the hotel and as we walked I told him about the goblins and their conspiracy to destroy the digging machine. He asked me what I wanted him to do next. I told him to keep an eye on the scientist and her home. He nodded and vanished into the darkness. I thought about going back to my hotel room, but I craved pleasant company. I decided to spend a little time at the saloon instead. Whoever was at the piano was playing a merry tune. A chorus of conversations including the guttural speak of goblin miners rose and fell as the music hovered in the air. I looked around and spotted an unfamiliar face. Eclipse was that kind of town. It was so small that after only a few weeks I knew everyone that lived here. She was an adult human female and she was fidgeting about as if she were uncomfortable in her own skin. It wasn't until I saw her tugging at the cuffs of her blouse that I saw the tattoos.\n\n\"Can I buy you a drink?\" I asked as I sat down next to her.\n\n\"Duskwalker,\" she said like I was a hero out of a myth sprung to life before her eyes.\n\n\"I'll take that as a yes.\" I said, and she blushed.\n\nLilacs and Shadows:\n\nShe sat there silent and sipped her drink meekly. I touched her hand and she pulled away. I began telling her about my time during the war. It prompted her own memories of those times. She had been ten when the elves tattooed her like a piece of cattle. She had worked in the main house for the ethereal masters as they called themselves. I thought the word ethereal was a little archaic for her. \n\n\"I'm Lilac, Lilac Shadowmaster. I kept my slave name to spite them. Have you ever heard of the House of the Shadowmaster?\"\n\n\"I killed Loren Shadowmaster,\" I replied and told her about the battle and how he and I had crossed blades when we ran out of ammunition. \"Did you know him?\"\n\n\"You killed him,\" she said and hugged me suddenly. She clung tenaciously, and I settle an arm about her shoulders. \"He took everything from me. He was the eldest son and a terror.\"\n\nShe began to spit out all the vile things he had done and taken from her. Her words painted nightmares of rape and torture. His abuse wasn't limited to the physical variety. He deserved ending up clutching his intestines on the killing ground. We were sitting next to each other when the group of humans came in. They drew attention from everyone since there weren't any Asiatic humans in Eclipse. By their dialect they appeared to be from the elven territory of China possibly Shang Hai. I gathered from their dialogue that they worked for the railroad and were sent ahead to scout out the final path of the tracks that would go through the town. This was going to be huge and quite prosperous for the citizens of Eclipse. The bartender tried to ask them what they wanted so I intervened and acted as translator.\n\n\"They are hungry and thirsty,\" I said after I greeted the foreman of the crew in his native Mandarin dialect. \"They work for the railroad that is planning on coming through the town.\"\n\nThere were cheers and roars of anger from some of the citizens. The angry citizens had recently sold their property to the mayor who they said had told them the railroad was not coming through the town. He had bought their land for a pittance of what it was now worth. Word went through Eclipse at a blistering speed and those that had already gone to bed were awoken and gathered outside the mayor's home. It looked like it was going to get ugly. Lillac and I went to join the ever-growing crowd when I spotted Tara Cogsworth, the scientist. I stood next to her and asked her if she had heard about the railroad. \n\n\"Of course, I heard,\" she said clenching her teeth. \"He tried to buy me out a few days ago. That damnable orc wanted every scrap of land I own. He was willing to pay double what it was worth. I told him I couldn't just pack up and leave. I have work and translations...\" She faltered here and blushed furiously. \"What I mean is...\"\n\n\"You have a book written by a Duskwalker.\" I said finishing her sentence. \"I recognized the stylized lamps Tara. I'm amazed you've learned as much as you have.\"\n\n\"Your people have a damned intolerable language.\" She said throwing away any pretense of innocence. \"I discovered it during an estate sale years ago. It has taken me decades to glean what I have. Your people were... are amazing. I know I don't have the right to ask but...\"\n\n\"If you give me the book afterwards, I will translate the entirety of the text for you. I can't promise you'll understand any of it though, fair enough.\"\n\n\"More than fair,\" she said accepting my offer.\n\nLilac tugged on my arm as the mayor's secretary appeared on the front porch. She had a prepared speech in her hand and we all waited as she read it. There were tears rolling down her face as she spat out the carefully prepared words. It was obvious that he had plenty of time to contemplate how to construct his words for this very situation. In a nutshell those that had sold their property were simply out of luck. The transaction was final and for those that hadn't been wise enough to sell he was seizing any and all property the railroad would need. The girl let the note fall from her trembling fingers. The sound of breaking grass was followed swiftly by the appearance of the mayor's personal police force. I walked to the front of the crowd and challenged the mayor to personal combat on behalf of the town. The gunmen faltered when I uttered the challenge. The mayor stepped out and he was smiling.\n\n\"Do you really expect me to cross blades with you? That would be a death sentence, you've had centuries maybe more to hone your craft.\" He said his continence iron clad.\n\n\"I will duel you as I did Grimjack without my duster. You might even kill me.\" I said locking eyes with the orc.\n\n\"Fine then, honor must be met. What are the conditions of this duel?\"\n\n\"If I kill you, your estate is settled in the favor of the people you robbed.\"\n\n\"Robbed is such a harsh word,\" he said his grin taking on a predatory quality. \"And if I prove triumphant?\"\n\n\"I will make an addendum to my will giving you half a million dollars upon my death.\"\n\nA collective gasp went up from everyone within earshot. The mayor absolutely beamed with confidence. He agreed to my terms almost salivating at the thought of all that money. Tara stormed over and grabbed me by the arm. She pulled me over and I allowed her to lead me out of ear shot of the crowd and the mayor. I waited for her to calm down and collect her thoughts. It didn't take long. \n\n\"You made me a promise. Call this off, he is a killer! You saw the tattoos...\" She said a little too loud and the mayor glared at her.\n\n\"How do you know what I saw?\" I asked not remembering seeing her present when Magnus revealed them on the street.\n\n\"Magnus told me all about it over a rather nice bottle of wine.\" Tara replied and grinned. \"You owe me, and I demand you come to my lab, so you can at least help me in my latest experiment.\"\n\n\"Can I bring a friend?\" I asked looking over at Lilac.\n\n\"Do you trust her?\"\n\n\"I just met her but since this might be my last night alive what the hell.\"\n\nWe left the crowd behind and walked to the home and laboratory of the town's mad scientist. She didn't see herself in that light but many of the citizen's feared her and her experiments. Since my arrival I had heard many stories about the strange sights and sounds surrounding Tara's house and laboratory. There had been dozens of explosions and three serious fires that had forced Tara to rebuild in part or fully the buildings she occupied. It sounded to me as if it was a miracle that she hadn't been killed. The three of us walked down the well-lit path to her laboratory. Lilac clung to me enduring the venomous stares from the gnome. Tara unlocked the front door and gestured for us to enter. She locked the door behind us and I smelled the scent of freshly brewed coffee. Despite her dislike of the young human Tara gave her a brief tour of the facility. \n\n\"What is this?\" Lilac asked holding up a metallic phallus shaped device.\n\n\"That, well that is my anti-hysteria device. Would you like to try it?\" Tara said smiling genuinely.\n\n\"I'm not hysterical.\" Lilac replied as she wrapped her hand around the shaft of the machine.\n\n\"It also works as a preventative measure as well.\" Tara said giggling.\n\nLilac acquiesced and stripped down to how the gods had made her. Tara strapped her down with her wrists crossed and above her head. When she was done Lilac was unable to move and at the gnome's mercy. It took a few minutes for Tara to get the generator up to a full head of steam. She turned on the device and it made a lewd buzzing sound. I watched Tara get to work as she applied the machine to Lilac's inner thigh. I laughed when I witnessed the girl's look of pleasant surprise. Tara slowly worked the device upward until she pressed it lightly against the human's clitoris. Her hips rose from the table as she strained against the restraints. Tara worked the human into a fevered state with ease. She had done this quite a few times before tonight. \n\n\"Take it out,\" Tara said to me over her shoulder.\n\n\"Take what out?\" I asked, and she laughed.\n\n\"Your penis of course,\" she replied giggling. \"She isn't going to be satisfied just by my toy. Trust me on this, the human is going to want the real thing.\"\n\n\"You're the expert.\"\n\nI undressed, and Lilac licked her lips when she saw my profound erection. The human bucked as she climaxed, and Tara withdrew the anti-hysteria machine. The gnome walked over, grabbed me gently by my cock, and guided me over to Lilac. My erection still in her grasp she rubbed the tip against Lilac's labia before telling me to push. I sank easily into the human's wet warm depths. I didn't need any other prodding. I thrust my hips slowly savoring what maybe the last woman I may make love to. I cupped her generous breasts and pinched her nipples as I began moving faster and with more force. Lilac cursed at me and at the same time begged me to make her feel good. The wet slapping sounds of our love play filled the air. Tara left us alone as she returned to one of her experiments. ",
        "\"Where are you going?\" I asked Tara and she stopped and looked at me.\n\n\"Simple mathematics my dear Duskwalker. I am far too petite to endure that slab of man meat you call a penis. You would break me and leave me in pieces on my laboratory floor. I wish to the gods I was of more typical proportions. I have problems sleeping with the sheriff. He is quite well hung for an elf.\"\n\nI returned my full attention to Lilac as poor Tara watched from a distance. I slowly picked up speed when I sensed how close the human was. She let out a blood curdling cry as she climaxed, and I stopped, letting her recover. I was still halfway hilted inside of her when I asked her about the family that once owned her. \n\n\"You are asking that now?\"\n\n\"Yeah, I know something of that clan that is quite unique. They used a kind of conditioning on all their property. The tattoo was the final bonding element. Why are you really here Lilac?\"\n\n\"I was supposed to seduce you and then slit your throat while you slept. But I don't need to do that now. The mayor will finish you off tomorrow and save me the trouble. When the war ended I stayed with my family. It took them time to discover who killed Loren. They told me what to do and I set out hunting you down. It is nothing personal.\"\n\n\"Poor broken thing,\" I said as I began thrusting again. \"I am going to finish what I started and then let Tara decided your fate.\"\n\nI pounded the human until her eyes rolled up in her head and she fainted from her sixth orgasm. Only then did I allow myself the pleasure of climaxing inside of her. Tara had watched the long drawn out affair and whistled. She told me that she had made the correct decision. Once I had cleaned up the gnome took out the book she wanted me to translate. As I sat next to her as she continued with her latest experiment with electricity I skimmed the contents of the book. It was handwritten, and I recognized the stylized penmanship instantly. \n\n\"It is a diary of sorts. The author was a scientist like you. They recorded their experiments both successes and failures. It is a miracle that it survived this long. The pages must have been discovered and bound afterwards.\"\n\n\"Why do you say that?\" She asked looking over my shoulder.\n\n\"Duskwalker books don't look anything like this.\" I said smiling.\n\n\"Alright Mr. Mysterious, what do your people's books look like?\"\n\nI reached out and plucked a fountain pen from where it lay on the table. I dipped it in ink and did a sketch of a book. I finished and handed her the scrap of paper I had scrawled on. She stared at the image and her mouth fell open. When I asked her what was wrong, she told me she had seen just such a thing at the estate sale. She hadn't had the coin to purchase it and now she was cursing her bad luck. \n\n\"If I survive tomorrow I will seek out this book. I hate to think of it in someone else's hands. Has Russell contacted you yet?\"\n\n\"He told me that the thrice cursed goblins have plans on sabotaging my baby. What am I supposed to do?\" Tara growled as she closed the metal housing on her latest device. \n\n\"Leave it to Russell. He has my every confidence.\"\n\n\"Speaking of confidence, I have something for you. I hope you'll wear this tomorrow. It needs to be field tested.\"\n\n\"I gave my word...\"\n\n\"You said you wouldn't wear your duster. This isn't your duster, it is my latest design. It is patterned after the honeycomb of bees. The hexagonal pattern... oh hell, just wear it damn you!\"\n\n\"I didn't know you cared Tara.\" I said touching her cheek gently.\n\n\"Before you ask,\" the gnome said fidgeting and blushing furiously. \"It is a secret. Just wear it.\"\n\nShe walked away never looking back. I turned my attention back to Lilac and wondered if I should release her or leave her freedom to Tara. I decided to leave it to the gnome. I washed up and dressed. I returned to my hotel room, but sleep eluded me. I placed a chair near the outer wall and looked out over main street. When I had faced Grimjack I knew I held an edge. While I had Tara's ebony vest it was untested. My duel with the mayor was an unknown. I felt that blend of fear and excitement. I had lived so long, and I hadn't felt this thrill very often since the war. There was little foot traffic below, so I collected my thoughts and went over my existing will. The few family members that were still alive were well taken care of as well as dear friends like Russell and others. \n\nIt was around midnight when the knock came to my door. It was soft and unsure as if whoever was outside had second thoughts about visiting me. I told them to come in and the door opened. I was as surprised to see Lady Crimson as she seemed to be standing in my room. I gestured towards the bed since it was the only other place to sit. I remained where I was and that seemed to suit her just fine. I waited for her to speak since I hadn't anticipated this little event. She started and stopped three times before she blurted out why she was here.\n\n\"I wanted to thank you. No one stands up to the mayor, he is just too damn powerful. When you issued your challenge, you could have knocked me over with a feather. He has been draining the life out of this town for so long.\" She stopped, and I saw genuine tears rolling down her cheeks. \"The things he does to my girls.\" Again, her voice faltered, and I fought the urge to get up and wipe the tears away. \"Why? I came here to find out why you are doing this?\"\n\n\"It is the same reason I fought for the North in the war. I felt it was the right thing to do.\"\n\n\"Really,\" she said a look of confusion on her lovely elven features. \"I expected you to tell me who hired you. So, you are doing this out of the goodness of your heart.\" She wiped away the tears and her act was over as quickly as it began. \"I was sure that stuck up gnome bitch had leased your services to save her property.\"\n\n\"For a second there I thought you had a heart.\" I replied watching her flinch. \"I was wrong, leave.\"\n\nCrimson was a stunning redheaded example of her race. The elves, like the younger human race, had adapted in both coloring but height and musculature to their environment. My own people possessed a static evolution but there was a reason for that. I caught a flash of anger in her emerald eyes and smiled. She rushed to her feet and glared as she crossed the distance between us. The slap was loud but had little impact on me. Instead of touching my cheek or rebuking her my hand flew upwards and snatched her by her crimson locks. I pulled her downward and the whore had no option but to kneel. I tightened my grip and yanked her head backward. She rewarded me with a cry of pain. Her curses fell on deaf ears as I traced her jaw line with my other hand. I had bedded dozens of elven females and I had to admit her raw beauty was astounding. I tried to determine her bloodline by the angle of her cheekbones and other subtler hints.\n\n\"Moondancer...\" I muttered and again the look of shock on her face all the answer I needed. \"Your pale complexion and eyes the color of royal emeralds there could be little doubt now. Does your clan know you are a mere whore?\"\n\nI caught her clawed hand as she attempted to rake my face. She surprised when she surrendered after only a few seconds. I pulled her close until her lips were mere inches away from mine. I grinned as I gave her a shove and she toppled onto her back. The whore shifted to a sitting position as she rubbed her wrist. She looked confused and I remained silent adding to it. I owed her nothing. She sat on the floor and I could see her mind trying to puzzle out what I was up to. She was confused at my behavior.\n\n\"Why don't you...\" she growled before falling silent.\n\n\"Rape you,\" I said finishing her thought. \"Do you want me to rape you?\"\n\n\"NO... I don't understand you.\" She fired back her eyes narrowing. \"Am I not... it can't be that.\"\n\n\"What exactly did you expect me to do? Get upset, so upset that I strip you down and pound you until dawn? That's like five hours away, is that what you wanted?\"\n\n\"Huh,\" she said raising an eyebrow. \"Can you... I mean do you have that kind of stamina?\"\n\nI just nodded and the redheaded whore chewed her lower lip savagely. It could have just been another act, or it could be genuine hunger for something she couldn't get elsewhere. I would let her initiate things. She got to her feet and began undressing. As she unbuttoned her blouse she told me why she had forsaken her clan name and her family.\n\n\"I was the third daughter. I would never inherit so I had a measure of freedom my older siblings did not possess. I traveled extensively, and my first century was glorious but relatively uneventful. I was heading home aboard a Greek trader when pirates captured the ship and I was sold into slavery. I became the bound concubine to a human emperor. I was trained in the erotic arts and settled into the lifestyle of a pet. There were no bars or chains but archers and swordsmen aplenty. There is no act I haven't performed and mastered. Shall I show you?\"\n\n\"You have kindled my curiosity.\" I admitted. \"Get over here.\"\n\nShe was naked by this time and straddled my lap. I kissed her and felt her arms slip over my shoulders and settle there. I let my hands roam over her body starting at her upper back and finally settling on her ass. The whore squirmed in my lap and I felt her hands fumbling to free my erection. She had me out in no time at all. I moaned into her mouth when she pressed her sex against mine and began teasing me. I felt the petals of her sex open against the length of me as she rocked her hips slowly. The lady was a talented whore and no doubt trained her girls with the tips and tricks she had been forced to do. She was moving easier now as her sex got slicker as things went along. I wondered how long she could last before she slid me inside of her. As it happened I didn't have that long to wait. She lifted her hips and aimed me proper like and sank down slowly.\n\n\"Oh, that's does it,\" she moaned breaking our kiss. \"I needed this so much.\"\n\n\"Show me what you got.\" I growled as she began to move. \"You are a talented whore.\"\n\n\"Why do you do that?\" She gasped as she took me deep. \"Why do you have to call me a whore?\"\n\n\"It is what you are,\" I said as I let her ride me. \"I am a writer and a killer. You are a gifted concubine. Do you prefer that word?\"\n\n\"Yes. It doesn't sound so cheap. By the gods you are hung like a troll!\"\n\nI kissed her to shut her up. She unbuttoned my shirt and pressed her bare breasts against my chest. Her hips began to move with quick hard thrusts now. I grunted each time my cock hit deep. The madam built up her movements and she was the first one to climax. I held her sweaty body in my arms as she recovered. She had almost slipped out of my grasp when her body bucked above me. I asked her about the mayor and she shared bits and pieces but nothing that would help me with my upcoming duel. What she did say wasn't a bit surprising.\n\n\"He is heartless.\" She whispered in my ear. \"He would sell his mother into slavery if he thought he could earn a dollar. He hates humans, so I never send them to him. I made the mistake once and she returned beaten and bloody. I didn't make that mistake again. He nigh on killed her.\"\n\n\"Have you seen his tattoos?\"\n\n\"Many times,\" she shuddered in my grasp. \"I've seen them on other males but not quite like his. He's been in prison.\"\n\n\"He survived Darkmoor Prison. Those that go there call it the grave. No one has ever escaped Darkmoor so he must have been paroled. Maybe that is how he came up with the money to recreate himself.\"\n\n\"I've never heard of it.\" She said as she spun around on my cock without letting me slip out of her snug sex. \"How do you know so much?\"\n\n\"I ran the prison for a time.\" I growled as she began squeezing her internal muscles as she lifted her hips. \"You are going to milk me if you keep that up.\"\n\n\"That's the idea, killer... you are getting even bigger... my stars but I am getting close again.\"\n\nI placed my hands on her hips and began pulling her down harder. I was panting now as I felt my orgasm crash into me. She squealed when my seed hit her insides. We came at the same time and she took credit for that. The whore cleaned up a bit and used the toilet down the hall. She returned ready for another go. It went on like that until dawn. I hadn't lied about my nearly preternatural stamina and sexual hunger. My people were voracious when it came to pleasures of the flesh. I had the whore in my grasp and pinned against the wall when someone knocked on my door. The madam begged for a break, but I told whoever it was to come on in. The door opened, and I heard a gasp of surprise. I looked over and saw the mayor's secretary standing there. While she played at being shocked her eyes took in everything and her cheeks were flushed with color.\n\n\"What is it?\" I asked as I continued thrusting into the whore.\n\n\"He's gone... the mayor I mean... he's fled the town with all his ill-gotten goods. I thought you should know. I am sorry for interrupting.\"\n\n\"Thank you,\" I said as the whore climaxed for the last time. \"Damn, I think she fainted.\" I said as I pulled out of Crimson and placed her unconscious form on my bed. \"When did he leave?\"\n\n\"OH...\" the secretary said her gaze glued to my erection. \"An hour ago, he left an hour ago.\"\n\n\"Did he pay you?\" I asked as I closed the distance between us. \"What are you going to do now?\"\n\n\"Me, I'll be okay. I have money set aside. I lived in his home, so I didn't pay rent per se. When the girls weren't enough he used me to get off. I was his all-purpose tool. If he needed a letter written I did it.\" She said as her hand reached out for me. \"If he needed something delivered I did it.\" She whimpered as she began stroking me softly. \"If he needed my mouth, or hands, or sex...\"\n\n\"You were there,\" I said and pulled her into my arms.\n\nRussell woke me at ten o'clock. I was settled between the whore on my right and the secretary on my left. He crossed his arms and pouted. I just smiled, and he told me what I already knew. The mayor had fled the town leaving nothing but his empty home and a short note. The sheriff had sent Russell to me after telling him what the note had said. \n\n\"In a nutshell he told the town and especially you to fuck off and die. He left behind two assassins, snipers to be precise. They were perched nearby so I removed them for you. I sent one of the deputies to watch over your precious gnome while I made the rounds. You are a hero even though you didn't get the land titles back.\" He stopped and looked at the females and shook his head. \"You are the only male I know that goes to bed looking at death and wind up with two gorgeous females in your bed before dawn. How the hell do you do that?\"\n\n\"I have an enormous cock.\" I said, and he nodded.\n\n\"That you do,\" he said laughing. \"Wash up and I'll tell them to fix you up a heroic meal to break your fast.\"\n\nRussell left, and I woke the whore getting out of bed. I took a bath with the redheaded whore and she was kind enough to wash my back for me. The secretary took my spot in the tub when I got out and rinsed off. We joined Russell in the dining room of the hotel and ate well. While my companion returned to his watch of the gnome I went to see the sheriff. He told me all that he had found and more over what he hadn't found at the mayor's home. He spent most of the night with his men removing every valuable. They had disappeared without a trace. No one heard a horse or the sound of a carriage. It was a mystery as to how he had performed this little trick. I walked the paths and streets that led from the mayor's house but found no sign of men weighted down with loot. How the hell had he done it?\n\nI walked through his house and the only thing left was the furniture. He had even cleaned out the larder. It was by far the second nicest home in the town. Tara's house was far cozier and had the feel of home and hearth about it. My impression of the mayor's place was more like a museum than a living space. He had so many cold fixtures about the place that it felt sterile. I returned to the sheriff's office and he looked in better spirits than he had in days. When I asked him why he replied that he was finally free of that damned orc. I had just sat down when Magnus D strode into the jail. He had a ruby whistle on his lips and smiling brilliantly.\n\n\"I heard that cocksucker fled the town.\" Magnus roared as he laughed. \"Good riddance to bad rubbish, we need a new mayor here in Eclipse.\"\n\n\"Why the hell are you looking at me like that Magnus?\"\n\n\"He is offering you the job.\" The sheriff said holding the keys to the mayor's house up. \"What do you say?\"\n\n\"I have a house back east. Let me think it over...\" I said, and the dwarf clapped me on the shoulder.\n\n\"You do that. Tomorrow is the big day, I expect you to dine at my table on the morrow. I want you to meet my family.\"\n\n\"I would never deny myself the pleasure of dwarven hospitality. It is second to none.\"\n\n\"Well-spoken Duskwalker,\" Magnus laughed and waved as he left. \"On the morrow... both of you.\" \n\n\"Damn, I need to go buy a fresh set of duds.\" The sheriff cursed. \"I can't show up in these.\"\n\nI left the jail with the sheriff, but he went to the tailor and I checked up on Tara. I was on the footpath between her house and the laboratory when I heard the scream. I broke out into a full run and tore the door open and found the gnome doing a little dance of joy. There were splotches of grease all over her as well as signs of singed clothing. She looked up at me and she placed her hands on her hips. I walked over and asked her why she had cried out. Tara simply pointed at the open grate behind her. I knelt and peered into the pitch-black space. I smelled oil, steam, and burning wood. She handed me an electric torch and I aimed the beam until it settled onto the armored backside of the digging machine. I was staring at the front of the beast with its metallic spiral horn aimed at me. I dropped down into the pit and got a better look. The machine was identical back and front. It boasted two steam powered drills so that it could go forward or back ways without hindrance. The middle of the machine was its heart. The furnace and boiler were located there along with the driver's compartment and fuel storage. The machine was idled so I climbed up and peered into the lever dominated pilot's box. The configuration of knobs, levers, and wheels of many sizes.\n\n\"It's very complicated.\" I muttered.\n\n\"It has to be.\" Tara said from behind me. \"It has to be able to adjust its path in three dimensions. Notice the gauges just there... it took forever to develop them.\"\n\n\"Jules Verne would be proud.\" I said, and she looked at me puzzled. \"He is a human author.\"\n\n\"Ah, I don't read anything other than works published by other scientists. I don't have time for silliness.\"\n\n\"You are expected to make an appearance at tomorrow. You wouldn't want to miss the full solar eclipse.\"\n\n\"I had forgotten. I planned on the second stage of another experiment. I guess it can wait. Will there be dancing? I love dancing.\"\n\n\"I am sure there will be.\" I said. \"Don't forget, Russell will be keeping an eye on things.\"\n\nI walked past the digging machine and out to the surface at the end of the tunnel it had created. The tunnel appeared stable and would easily replace quite a few miners. I understood the anger from the goblins. Their livelihood was in danger. She had only built one machine but then again, the railroad began with only one engine. If it worked well enough they would be out of a profession. Progress was inevitable. We returned to the laboratory and had some tea. I told Tara that Magnus had offered me the position of mayor. Her face lit up when she thought I might accept it. She had taken a shine to me that much was obvious. I had lived in New York for quite a while. Maybe I was due for a change of scenery. ",
        "\"I'll think about it. The tea is good.\"\n\n\"I'm glad, I grow it myself. I have a garden where I grow tea and some rare herbs.\"\n\n\"Rare herbs, what kind of rare herbs,\" I asked.\n\nShe reached over and opened a plain wooden box and took out a pipe and a pouch. She removed tobacco from the pouch and loaded up the pipe. She struck a match and soon there was a pleasant if pungent aroma in the air. She offered me the pipe and I inhaled and savored the odd smelling herb. I let out the smoke and felt the first hint of lightheadedness. Tara smiled and took another lungful of smoke. Seeing that I had enjoyed the tobacco the gnome retrieved a second pipe and handed it to me. I filled the pipe and lit it. I felt great after smoking with her. It was as if I had consumed a few pints of beer. When I asked her where she had gotten the herb Tara mentioned a travelling herbalist that had passed through a few years back. Tara had been growing her own ever since. It was medicinal and helped her relax after a rough day in the laboratory.\n\n\"I'm glad you are safe.\" Tara said her eyes unfocused and her words slurring.\n\n\"Great pipe weed,\" I replied, and her giggle turned into full out laughter.\n\n\"It gets better ever season.\" She said wiping the tears from her eyes. \"How did you learn about the coming eclipse?\"\n\n\"I received a telegram. A cousin of mine has been a star gazer for a long time. She is the foremost expert on stellar and planetary motion, or so she boasts.\"\n\n\"You miss her...\" Tara blurted out and I winced. \"I'm sorry Dusk... god damn it, what is your real name?\"\n\n\"Since you asked it is Valakhor Bloodrose.\" I said watching her reaction.\n\n\"I have heard of your clan. I heard they were all gone, apparently not.\"\n\n\"You can call me Val if you wish.\"\n\nThe front door of the laboratory opened, and we could hear footsteps growing ever closer. A human dressed in the garb of a blacksmith and wreaking of the forge strode in. He was tall by human standards with ruddy skin and long black hair. He was still sweaty from his time near the flames. He walked up to Tara and kissed her full on the mouth surprising both of us. Tara slapped him hard and chastised him about showing affection in front of guests. The human fell to his knees and groveled before her. Tara looked at me and she was as flushed as he was. She stammered out an apology, but I waved her off.\n\n\"You don't need to apologize to me. I understand love or lust or...\"\n\n\"Or?\" Tara asked. \"...or what?\"\n\n\"He isn't...\" I said sniffing the air recognizing a scent I would have sworn I thought was gone from the world. \"Dragon.\"\n\n\"Furn... don't, he is a friend!\" Tara cried out as the human flew to his feet and his demeanor changed as did the color of his eyes.\n\n\"He is a Duskwalker. His kind enslaved us... his kind...\" his voice grew in strength and power until I tore open my shirt and let him see the mark upon my chest. \"By the gods...\"\n\n\"What is it Furn?\" The gnome asked clinging to her lover. \"I don't see anything.\"\n\n\"I am sorry friend.\" Furn said his voice soft and apologetic.\n\n\"I don't understand. It took me a decade to earn your trust, and in a mere moment you call him friend! Explain yourself Furn you owe me that at least.\"\n\n\"He is a friend to all my kind.\" The camouflaged dragon said.\n\n\"All, but I thought.\" I muttered stunned by his words.\n\n\"Those that could went into hiding. I hide as a lowly human. The stench of the furnace masks my scent. Others have taken on a more dignified shape. I slip into it when needs must.\"\n\nThe human was gone and in its place a common house cat. The calico licked his paws and blinked his eyes slowly. Now every time I saw a cat on the street or in someone's home I will wonder if it is merely a cat or a dragon hiding in plain sight. Furn returned to his human shape and Tara informed he was in desperate need of a bath. Furn perambulated to a corner of the laboratory that was curtained off. I heard running water and soon after the low rumbling voice of a singing dragon. Tara informed me that Furn had demanded his own shower. I had heard of such things but only the wealthiest could afford such luxuries. Tara had simply built her own. It even had both hot and cold water available. The only other shower in the town was in the mayor's mansion. \n\nI was invited to stay for dinner and since I had no other plans I accepted. When I had half expected to be stone cold dead and buried by now dinner sounded nice. Tara went to work while Furn retreated to the kitchen to cook dinner. They had an unusual relationship. I had noticed how swiftly he knelt when he felt he had crossed a line. Was she the dominant personality between the two? Did he fill the role of wife? I found my way to a balcony that overlooked the town proper. Eclipse was lively with activity for the festivities tomorrow. I could see worn banners being erected. They must have been colorful once, but the sun and weather had sapped their pigment long ago. I could make out music as well drifting up from the streets and I found my foot tapping in time with the melody.\n\n\"I haven't seen them so excited in a long time.\" Tara said as she approached from behind. \"The mayor is gone, the sheriff is on the mend, and you are the hero of the hour. Simply challenging Erick to a duel gave those he had cheated a measure of hope.\"\n\n\"I did what I felt was right. Wait, you called him Erick. How well did you know the former mayor?\"\n\n\"He hired me to wire his house for electricity as well as the inside plumbing.\" She said and paused for a moment. \"I plan on wiring the entire town after the railroad is established. It will afford me enough regular income to fund my experiments for the foreseeable future.\"\n\n\"They offered me the title of mayor.\" I blurted out. \"Well, Magnus and the sheriff felt I was the man for the position.\"\n\n\"Really,\" she said with a noticeable lilt in her voice. \"Are you going to accept?\"\n\n\"I am pondering it.\" I said. \"I guess it depends on incentives.\"\n\n\"Damn it,\" she cursed. \"I wish I was taller and well you know...\"\n\n\"Are you offering your body again?\" I asked, and she nodded. I leaned over and whispered in her ear. \"Well?\"\n\n\"I've never done that sort of thing before. But if it would help you decide I'll give it a try.\"\n\nShe was just the right height for what I suggested. She stood in front of me facing and slowly unzipped me. Tara tentatively reached in and freed my semi-hard member. She licked her lips and as her hands stroked me slowly her tongue lapped at the head. I shivered as the sensation of her slippery pink tongue teased me. I moaned and that fed her desire to please me. I grew hard in her grasp and that made her bold. I gasped when her mouth engulfed the entire head of my cock. My eyes fluttered shut as I felt her tongue swirl and lap around me. Her hands moved faster, and I begged her to swallow when I came. My words inflamed her desire and she pushed her head forward. After a few attempts the head popped into her throat. Surprised I opened my eyes and saw her lips pressed against the base of my manhood. By the gods she was good at this!\n\n\"Damn Tara, how did you do that?\" I asked as she began moving her head. \"I've never in my long life... oh shit...\"\n\nHer small hands stroked me faster as her mouth, tongue, and even teeth tested my endurance. I was panting as I neared the point of no return. I warned her, but I think she already knew. I clenched my teeth to keep from screaming and alarming either Furn or Russell. I stared down hypnotized by her talented orifice and let out a gurgled cry as I climaxed. Tara fell still, and I saw her throat muscles work as she swallowed. Slowly she pulled her head back until with a pop my cock sprung free. I fought the urge to stagger and locked my knees.\n\n\"I can do that whenever you want, if and only if you become my mayor.\"\n\n\"By thunder you are skilled in the oral arts!\" I praised her and feeling a desire to fuck her on the spot.\n\n\"I guess snacks are out of the question,\" Furn said from the doorway. \"How about some wine?\"\n\n\"That would be lovely to wash down the saltiness of the Duskwalker's cock milk.\"\n\n\"Did you?\" The dragon asked with a hint of mirth in his voice.\n\n\"Of course, he had no idea how skilled I was at fellatio.\" She said with pride. \"I am one of the finest cocksuckers in a hundred leagues I dare say.\"\n\n\"Lady Crimson taught her much for sessions with the hysteria machine. She loves taking it in her backside by the way. Her cunt maybe too small but her ass is another thing altogether, isn't it my lust.\"\n\n\"Damn you Furn! I was going to surprise him this very evening by engulfing his minotaur cock with... well now it is all ruined.\"\n\nTara stormed off and Furn laughed. He left me alone with my cock still swinging in the breeze. I tucked it in and zipped up. I still felt energized by the aftermath of her fellatio. I had wondered how she had tamed a dragon but now I knew. With mouth and ass, she had bested him. I walked around the many tables that made up her laboratory. Dozens of experiments were in various stages of completion and at the center was the tome Tara had asked me to decipher. It was a carefully and skilled copy derived from one of my people's works. The scribe had been meticulous in his execution of pen to paper. He had successfully carried not just characters but proper punctuation from the original material. The order of the pages was out of proper order but besides that I found no fault in the book. If I took up the mantle of mayor I could leisurely translate the contents for Tara but I feared what secrets my people had abandoned that she might rediscover.\n\n\"You found it.\" Tara said as she returned in a better mood. \"What do you think? Is it legible?\"\n\n\"Quite, the scribe was exquisitely talented. He or she had never missed a single pen stroke. If I stay it will prove to be for me a kind of homecoming. I haven't set eyes on my people's writings in many a year.\"\n\n\"Stay Val,\" she purred. \"Let me pleasure you and learn from your people. I am willing to share my body for such knowledge.\"\n\n\"You are more honest than most,\" I said biting back the word whore. \"You will have what you desire and so shall I. I will break you little gnome.\"\n\n\"Gods, I hope so.\"\n\nThe carriages began to arrive during the night. The revelries as well started early. Music and booze flowed freely until nigh on midnight. The sheriff called a halt and reluctantly the more inebriated of the townsfolk staggered to bed. I couldn't sleep and shared the night watch with Russell. We stalked the shadows around Tara's home and laboratory. His keen eyesight found the bare footprints left by goblin scouts as they surveyed the layout and entrances of the two buildings. They had wisely kept a fair distance from the structures to keep their movements obfuscated. The prints were new and only a few hours old. The diminutive beings had only gone so far and no further. If they were going to strike it wasn't tonight. They would use what intelligence they had gleaned and formulate an attack plan. I would inform the sheriff and get his wisdom on the matter. I returned to the house and slept on the couch until dawn. I broke my fast before taking the trail to town so that I could speak with the lawman. \n\n\"Sheriff.\" I said in greeting as I stepped into the jail.\n\n\"Duskwalker, have you thought over the offer?\" He asked as he poured me a cup of coffee.\n\n\"I have indeed. As of late I have found entertaining incentive to stay and help repair the damage Erick has done.\"\n\n\"Incentive you say, let me guess Lady Crimson has shed her fear and embraced you. She has a way with inspiring males of any race.\"\n\n\"Be that as it may I came here to ask your advice.\" I said, and the fair skinned elf apologized for speaking ill of the madam. \"I fear that goblin miners are going to attack the Cogsworth estate and damage her digging machine. They may not stop at that and kill the architect of the threat to their livelihood.\"\n\n\"You have evidence I suppose.\" He said, and I nodded. \"What have you got?\"\n\n\"Footprints and overhearing them plotting and planning.\" I replied and watched his eyes widen in surprise. \"Do I set up an ambush and wait for them or is there another course of action you'd suggest?\"\n\n\"Let me think,\" he said pondering the options. \"If I talk to Magnus they might catch on. If you gun them down before they break in, I'd have to hang you for murder. Stay close and I'll get back as soon as I can.\"\n\nI accepted his judgement. He had the entire town to consider. I was focused solely on Tara's hard work and her creation as well as her personal safety. Russell could keep her safe until the sheriff decided. I walked around the various stalls and vendors watching more and more stagecoaches arrive carrying strangers that had gotten word of the impending solar event that would play out later today. The tourists were of all races and social standing. The well off came in fine carriages pulled by noble beasts. The others were crammed in together but were of good spirit. They had endured the three-day ride from the railroad station. The energy in the air was festive and growing as time went by. I drew more attention than usual but that was to be expected. It was a young well-dressed elf child that approached me and asked me why my hands and eyes were so strange. His parents, well off and of proper breeding, visibly cringed but I smiled as I squatted down and showed him my left hand. Fearlessly the child examined my fingers and thumbs with great enthusiasm.\n\n\"It must be difficult eating. How do you hold a fork?\"\n\n\"I have my own utensils young one. It makes it much easier.\" I said, and he laughed.\n\n\"I should have known. What is your clan name? I am Louis Lighthammer. That is my father Gregory and my mother Mary. She is from the Stormtower line.\"\n\n\"Fairly met Lighthammer,\" I replied smiling at his impeccable manners. \"I am Duskwalker but my family name is Bloodrose and my clan is Blachthorn. You, young sir, may call me Val.\"\n\n\"My father told me a story once of the Duskwalkers. The ground trembled beneath them wherever they strode. The sun shone a bit brighter and the wind blew a bit cooler.\"\n\n\"Those are just stories.\" \n\nI stood, and the boy ran off to his father and was talking so fast it was hard to keep up. I continued my walk around the town. Tara, Ebony, and Furn made an appearance. Tara took out a silver dollar and handed it to one of the local boys along with two bright red flags. The boy flew into a run directly at the town's clocktower. He raced inside and appeared a little while later at a door in the face of the clock. He hung the flags at the proper time of the start of the eclipse. The boy whistled drawing attention to the clock and the crowd clapped. We had two hours before the sky darkened. I approached the trio and Tara informed me she was determined to see the eclipse come what may. She informed me that my friend was guarding the machine. I was about to tell her to relax when I saw someone in the crowd. He looked a little rough around the edges and didn't seem to be enjoying himself. I felt a shiver run down my spine and I began searching the crowd. There were twelve of them in all. They stood out if you knew what to look for. Six of them were orcs while the other half dozen were a mix or elves and two humans. \n\n\"Furn, keep an eye on the ladies.\" I whispered in the dragon's ear. \"Keep a low profile.\"\n\n\"Of course, is there going to be trouble?\"\n\n\"Maybe, but I may just be paranoid.\" I said as I saw the former mayor Erick. \"Erick is here. Keep them safe Furn. If you see the sheriff send him my way.\"\n\nI moved through the crowd making an indirect path towards Erick. He saw me, and I could see the indecision in his eyes. He remained where he was. I greeted him, and the old mask of superiority slid back into place. I wanted to slap it off him, but our little confrontation had stirred a response from the dozen men I had spotted earlier. They were in fact working for Erick. They bristled and revealed the fact that they were armed, well-armed.\n\n\"What are you up to Erick?\" I asked locking eyes with him.\n\n\"So informal,\" he said. \"I wanted to leave but I couldn't without a parting shot.\"\n\n\"There are innocent people here. Do you really intend on going through with this?\" I asked, and he smiled. \n\n\"I don't care if I bury one or the entirety of the town. I am going to be a rich man in a handful of days but before that I will exact my pound of flesh.\"\n\nI had a vitriolic reply ready but at that moment the young elf child tugged on my arm. I turned to see who it was and that allowed Erick and his men to slip away unseen. I frowned at the child, but he boldly continued and informed me that someone wanted to speak with me. I thanked him and followed him back to his parents and the dwarf standing with them. I recognized Magnus D instantly. I shook his hand and informed him that Erick had returned. He in turn told me that his entire goblin workforce had simply walked out. I asked him to warn the sheriff about Erick and his men while I raced back to the laboratory to protect the digging machine. It was possible that the goblins would simply dismantle the damn thing, or they might in their rage set the multi-ton vehicle into motion and damage the town and its inhabitants. It was slow going because of the crowd. I looked to the clock and time was short. I raced out of town once I was clear of the pressing bodies. I was unarmed and facing an unknown number of foes. I had just reached the exterior of the laboratory when I heard the shriek of goblin voices and a deep rumble beneath my feet.\n\n\"Damn... damn... damn...\"\n\nThe spinning drill of the metallic beast punched its way to the surface and I could see several goblins clinging to the exterior as well as a small group inside the pilot's compartment. I launched my body at the machine as it passed. My sudden appearance surprised the goblins. I was able to shove and kick off a few that were between me and the exterior door to the wheel house. I yanked open the door and faced a small mob of pissed off goblins. The wheel house had no wheel. There were only a series of levers, switches, and displays. Between me and the controls was the pack. They growled, hissed, and spat as they tried to control the machine's direction.\n\n\"No... no... that one... pull that one...\" a goblin barked.\n\n\"NO... the blue one... no the 'other' blue one...\" another squealed.\n\n\"Shut up all of you!\" Yet another roared. \"I cannot think straight!\"\n\n\"Get out of my way,\" I yelled in their guttural language.\n\nThey all fell silent. The leader stared at me with mouth agape and shoved the others out of the way. I moved to stand in front of the control panel. I was baffled and tried to decipher the purposes of the levers. The goblins began to squeal and curse. I looked up through the glass screen and horrified at the sight before me. We were headed for someone's home. How had we reached the town so quickly? The drill chewed through the wooden structure with an ease that would have filled Tara with pride. A sudden roar filled the pilot's compartment and I saw one of the goblins pulling on a bright yellow length of rope. The steam whistle made my ears ring. It did the job though. It warned everyone that the digging machine was on a rampage through the town. Try as I might I only ended doing more damage. I yanked one of the levers and the machine did a forty-five degree turn to the right and went straight for a second home. My frustration grew with each passing heartbeat. I prayed everyone was at the celebration. The thought of impaling or crushing some poor hapless soul was horrifying. I was afraid to try another lever, but our current course was headed towards Main Street. \n\n\"Goddess preserve us,\" I prayed under my breath.\n\n\"Kill crush?\" The goblin leader asked.\n\n\"NO...\" I growled as I grabbed another lever and pulled. \"Damn it all to hell!\"",
        "The behemoth turned ninety degrees to the left and pulverized two homes as it passed between them. I could see the clock tower. I saw the glint of metal in the tower and guessed that one of Erick's men was positioned there as a sniper. I couldn't let the machine destroy the tower, but I had to get word to the sheriff. I grabbed one of the smaller goblins.\n\n\"Tell sheriff there is a sniper in the clock tower.\" I ordered in goblin speak.\n\n\"How? They no speak goblin.\"\n\n\"Point at the tower and go bang bang... I don't know.\"\n\n\"Bang... bang...\" the goblin uttered.\n\n\"Good, now go.\"\n\nThe goblin fled the compartment and leapt from the machine when it was clear of debris. The head goblin reached out and pushed one of the levers forward. The machine slowed and pitched downward. The drill bit into the earth and we submerged. A series of loud clicks could be heard and suddenly brilliant lamps lit the cabin as well as the forward facing drill. Where the hell were we going? A sudden jarring motion sent all of us hurtling towards the ceiling. I got to my feet and as I did so I saw a small book skittering along the floor of the cabin. I pointed to it and the nearest goblin picked it up and handed it to me.\n\n\"Thank the gods,\" I said as I opened the instruction manual. \n\nIt wasn't clear or concise but more of a loose set of drawings and scribblings next to them. I tried to decipher Tara's handwriting as the machine burrowed deeper and deeper. I found a drawing that described a lever that was marked 'level out'. I scanned the controls and found it. I pulled it slowly and the machine responded. A read out with a horizon control showed the line in the middle of the window. Had we travelled far enough to be outside the town? I hoped so. I was afraid we were going to suffocate. I yanked lever the goblin had pushed to send us downward. We clung to the handles as the beast moved upward. I prayed I had waited long enough. The machine slowed, and it was a clear sign that we were breaching the earth. I saw daylight and as the treads struck the ground I leveled us out. I got the briefest glance as the drill pierced a massive wooden building. The structure was large enough to house twenty digging machines. I looked at the warehouse's contents and it was clear someone was up to no good. Everywhere I looked there was railroad equipment and supplies. There were also several large crates that bore the seal of the Magnus Mithril Mine. I'll be damned, we found the thieves that had been raiding the shipments.\n\n\"Shit!\" I cursed when the first gunshot erupted around us.\n\nI needn't have worried. The digging machine's armor was sufficient to repel small arms fire. The glass was another matter altogether. The first bullet to strike the side glass cracked it. The second shattered it completely. We were sprayed with glass and several of the goblins were left with cuts to face, chest, and arms. The gunfire continued, and we were forced to duck. While I had been careful one of the goblins dove and in doing so yanked a lever on his way down. The machine performed a one-hundred-and-eighty-degree turn. The drill bit struck one of the gunmen killing him instantly. We heard his cry as he died. I popped my head up to see where we were going and warned the goblins to hold on tight. The treads of the machine struck the pile of train rails and pitched upward until the full weight of the machine bent, folded, and crushed them. There was more gunfire and curses as the side of the warehouse was destroyed as the digging machine trundled out and into the forest beyond. I poked my head up and saw that we weren't far from town. We were on the very outskirts and headed towards the church. One of the goblins desperately pressed the manual back into my hands.\n\n\"Push... pull... not die...\" he stammered.\n\nI had enough time to read the manual and learn the basic controls. As trees fell to the indiscriminate drill I heard more gunshots coming from the town. Erick and his men were attacking the town. I was sure they would have used the eclipse for a signal. Wasn't anything going right today? I made a critical decision and aimed the machine at Main Street. The street was wide enough to accommodate the machine, I hoped. It would act as a distraction and a target. I hoped it would give the people time to get to cover. I warned the goblins and they left the compartment to the last. They had, had enough of me and the machine. As the great behemoth rolled down the avenue citizens, strangers, and gunmen alike raced away in mass panic. I grabbed the bright yellow rope and pulled hard. The whistle sounded like a banshee and startled everyone. I spun in a panic when I heard the door to the compartment open. Instead of a raging gunman I found a raging gnome. Tara was beet red and furious.\n\n\"What happened to my windows? Why are they dents on the exterior?\"\n\n\"They were shooting at me.\" I informed her. \"I am sorry.\"\n\n\"You are a quick learner.\" She said as she took over the controls.\n\nI watched in rapt fascination as she pulled one lever that released a hidden stool. She stood on it and was soon navigating her machine safely out of town. She removed the leather backpack I had failed to notice and hand it to me. I untied the leather straps and opened it to see my gun belt and pistols. \n\n\"They are loaded and ready to go. Your friend Russell sends his regards.\"\n\n\"I have an orc to kill.\" I growled as I strapped on my guns.\n\n\"Be careful, I wouldn't want anything to happen to that fine um mind of yours.\" She giggled.\n\n\"I'll tell you all about it when I get back, if I get back.\"\n\nShe kissed my cheek and I kissed her mouth and she slapped me. I timed my exit from the machine and moved from the compartment to the interior of the saloon. I scanned the bar but found it empty. Crouching and keeping low it appeared that my distraction had reached its end. Erick and his men had regrouped and intent on finishing what they had started. I crouched lower and glanced at the clock tower. It was only twenty minutes until the eclipse began. A single shot rang out and dirt was kicked up near Erick's left foot.\n\n\"The next one goes between your eyes.\" The sheriff called out.\n\n\"That is no way to treat your mayor.\" Erick called out.\n\n\"Sorry Erick, you've been fired. Now piss off or I'll kill you where you stand.\"\n\nThe orc to Erick's right brought his long gun up and tried to fire at the church. The sheriff was as good as his word. The olive-skinned brute fell dead with a hole in his chest. The rest scattered and spoiled any chances at a clear shot at the former mayor. All hell broke loose after that and I joined in eagerly. I could hear my hearts pounding in my ears. The edge of my vision narrowed as I focused on my targets. I had limited ammunition, so I had to make every shot count. The humans made themselves easy targets. I split the lot with the others. The others appeared to have at least some military or practical experience. They proved harder to place in my gun sights. After I had taken down my first orc I had drawn attention to my position. I was forced to take to the second floor so that I could shoot down on my enemies. I found Rainwater, the saloon's owner, cowering in a corner. I didn't blame him, not all are born with the killer's soul.\n\n\"Keep down and put that chest of drawers between you and the outer wall.\" I offered as I crept towards the window.\n\n\"Thank you,\" he stammered. \"I wish I was as brave as you.\"\n\n\"I'm not brave. I am scared shitless, but I love killing so it is a fair exchange.\"\n\n\"I don't understand.\"\n\n\"Nor should you,\" I said smiling. \"Looks like they are getting ready to storm your saloon. Is there someplace you can hide?\"\n\n\"Yes.\" He replied as he fled the room.\n\nI reloaded and scanned the street below. I had lost sight of Erick and that concerned me. What was he up to? Had he returned to the warehouse or was he intent on my death? I hoped so. If he was focused on me then others were safer. Until he was dead no one was perfectly safe. The orcs burst from cover and raced across the street. There were four of them. I managed to kill one while someone from the church took a second. The left two of them downstairs. I felt my smile widen as I turned from the window to hunt them down. I slipped off my boots and crept barefoot across the floor. I could hear the pair as they moved towards the stairs.\n\n\"Where is he?\" One of them grunted.\n\n\"Don't know... can't hear a damn thing.\" The other replied.\n\nI had moved to the far corner waiting for them to top the stairs. I forced my breathing to slow and calmed myself. A sudden creak came from one of the rooms. Was there someone else in the saloon? Had one of the regulars passed out and lay forgotten on the floor? A second creak and the orcs moved up the stairs. Their backs were to me as the positioned themselves outside the door. The one with the long gun reached for the knob as the other raised his pistol. The orc shoved the door open and the roar of a scatter gun erupted from the darkness within the room. The orc with a pistol was cut in half and the one that had opened the door had missed instant death only because he had moved to the side to give his partner a clear shot. I finished him off with a well-placed bullet to the back of his skull.\n\n\"Val... is that you?\" Rainwater called out.\n\n\"I got the other one,\" I shouted back. \"I thought you had gone into hiding.\"\n\n\"I did,\" he said as he stepped out. \"Fortunately, this room had my shotgun in it.\"\n\nHe reloaded his weapon and I retrieved my boots and slipped them back on. Rainwater became animated and led me down to the basement. This is where he stored his liquor and beer. It was also one end of a secret tunnel. One of the stack of casks on the far wall swung outward. He lit an oil lantern and we proceeded to the other end of the tunnel. I closed the secret door behind me and I had a brief flashback to the last time I had been in a secret passage. It involved a romantic liaison in a Belgian castle and a rather lucky dark elf. We reached the other end of the tunnel and Rainwater knocked on the door in a stuttered pattern. A second knock from the other side gave the all clear. He pushed opened the door and I recognized the dark elf whore I had spent time with in the bath so many days ago.\n\n\"Hello there,\" I said, and she blushed.\n\n\"How bad are things Selene?\" Rainwater asked, and the girl touched finger to lips.\n\n\"Erick and ten of his men are upstairs.\" Selene whispered. \"Lady Crimson sent me down here in case you used the tunnel. He is in a deadly mood that one, the Mayor wants you dead Duskwalker.\"\n\n\"Ten you say,\" I said in a hushed tone. \n\n\"They just arrived not ten minutes ago.\" She said her eyes on the ceiling. \"I think they are soldiers or were at some point. Some of the words they use and most of them call Erick sergeant.\"\n\n\"Where are the girls?\" Rainwater asked and to our horror they were mingled with Erick and his men. \"We can't go in guns blazing.\"\n\n\"No, we can't. We are going to have to wait. Sit down and rest.\"\n\nWe didn't have long to wait. The sound of a dozen men moving about makes plenty of noise. We could hear muffled voices, but we could pick out the excitement as they moved towards the front door. Gunfire erupted, and the final conflict had begun. It was time to end this. I took the lead and Rainwater followed if reluctantly. I listened at the basement door before opening it. I gestured for the dark elf to cover the back door. I went forward with gun drawn. Sudden cries of pain alerted me to how close I was to Erick and his men. One of them had been struck and lay whimpering on the floor. I heard Erick chastise him as he moved to the front of the action. I moved slowly knowing I was overwhelmed if I didn't strike at the critical moment. I peered around the corner and saw that the sheriff and others had killed three of them. Erick was firing a lever action rifle. He emptied the weapon and moved back reloading as he ordered his men to action. I aimed my weapon at the back of his head when Lady Crimson crossed my path and stood between the orc and me.\n\n\"He is going to kill you,\" she purred defiantly.\n\n\"Who, your sheriff or the Duskwalker?\" Erick growled as he pressed fresh bullets into the receiver. \"You've fucked both haven't you.\"\n\n\"I'd never let that filthy six fingered freak touch me!\" She lied.\n\n\"Hmm, perhaps I should let you kill him for me. But no, we have history he and I.\" He said chuckling as he placed the reloaded weapon across his shoulder. \"If anyone is going to kill him it is going to be me. It's gone silent across the street. He must have killed those idiots. If I know him he has joined your precious sheriff. Alright boys, we are going to kill that damned Sidhe and I am going to claim those mithril pistols for my personal collection. Let's do this! Kill them all!\"\n\nHis men roared in response and with weapons blazing they charged the church. Lady Crimson sat down clearing my line of fire. Erick stood alone laughing as his men did all the work. He turned and saw me as I squeezed the trigger. My bullet went wide and struck his shoulder instead of his heart. The force spun him around. The she elf flew to her feet blocking my second shot. I ordered her down, but it was too late. Erick had fled out a side door. Crimson spun on her heel and she stared at me her cheeks flushed with color. I raced after the orc and the whore house became a shooting gallery. He was wounded but orcish stamina was legend. The injury would do little to slow him once his blood was up. I dodged his wild shots and we were both in it. I smiled as I squeezed off shot after shot. I hid behind a bronze bath tub as I reloaded. Erick tested the tub's capacity as a shield. Water rippled as three rounds slammed into the other side of it.\n\n\"You're lucky Val.\" Erick called out. \"She's a lousy whore.\"\n\n\"I never fucked her Erick, her pussy way too loose for me.\" I shouted back as I snapped the cylinder into place.\n\n\"True, but her ass is still nice and snug,\" he replied as he fled.\n\nI chased, and he led. He knew this place far better than I. I was learning the layout as I went, and it almost cost me. He nearly managed to slip behind me except that one of the other whores cried out a warning. I ducked and fired simultaneously sending wood chips flying near his face. The orc laughed and fled back the other way. I found droplets and even small puddles of blood now. I may have nicked an artery or vein. Hell, he might just bleed out before I get in another shot.\n\n\"You're bleeding Erick,\" I yelled.\n\n\"Yeah, you got in a lucky shot. I'm going to have to kill you quick.\"\n\nHis voice was fading as he raced for the back of the whorehouse. I heard Erick call out Rainwater's name just before the deafening explosion as the elf loosed both barrels into the orc. The silence that followed was profound. I crept carefully to the rear of the building. Erick, what was left of him, was sprawled on the kitchen floor. Rainwater was on his knees weeping with the scatter gun on the floor before him. The blast had literally cut the former mayor in half. It had struck him mid torso and killed him instantly. The girls scurried in and it was Crimson that appeared carrying the bottle of dwarven whiskey. She handed it to me and I took a jolt or two. I walked over nearly slipping in the orc's blood, and handed the bottle to Rainwater. He took several smaller sips of the liquor. \n\n\"How did it feel?\" I asked.\n\n\"I think I came.\" Rainwater replied laughing.\n\n\"Yeah, I get that.\"\n\nThe sheriff appeared with three of the male survivors from the church. They cursed seeing the corpse of the mayor and they each took a share of the whiskey. The clock rang the hour and I raced out leaving them. The citizens and visitors of Eclipse joined me on the streets as the sky began to darken. We were all looking up as the moon slid in front of the sun. I felt a slender hand slip into my left hand. I glanced over to see Selene holding my hand. I smiled and gave her a little squeeze. Not to be left out Tara took my right hand.\n\n\"You wrecked six buildings.\" Tara whispered.\n\n\"Only,\" I replied laughing.\n\n\"Hell of a sight,\" Magnus called out to the crowd. \"We need to thank the Duskwalker for this moment and many that follow.\"\n\n\"Here... here...\" many of the crowd agreed.\n\n\"Well?\" The sheriff asked, and I told him all about the warehouse and the stolen mithril.\n\n\"Damn Val, you help kill a lunatic, recover the stolen mithril and land, and even get the girls. That's a victory in anyone's book.\"\n\n\"Fine, I'll run for mayor.\" I agreed.\n\n\"Who wants Val for mayor?\" The sheriff called out.\n\n\"ME!\" The townsfolk and visitors alike roared.\n\n\"Passed.\"\n\nEpilogue:\n\nI took up residence in the house that Erick built. Tara made excuses to come over often to tweak my plumbing and wiring. I settled into the position of mayor and even attended the wedding of the former madam and the sheriff. They did make a handsome couple. Magnus D paid me a ten percent finder's fee for the recovered mithril. I used my reward to rebuild the homes I had destroyed with the digging machine. The rest I set in a community fund for the improvement of the town. The railroad's arrival to the town was slowed down by a month over the loss of critical materials lost in the events that occurred at the warehouse. Tara dismantled the digging machine and used the parts to build a power plant for the town. I wrote and sold my stories to my publisher back east and they sold quite well. \n\nI still write as the town has grown by leaps and bounds with the help of the railroad. I served two terms as mayor and was replaced by my dear friend Rainwater. He was a far better mayor than I had ever been. He was reelected to the office six times. The town of Eclipse became the city of Eclipse. As I write these words the moon is nearing its position to darken the sky. I sit on the porch with Tara and many of our friends. We toast to friends gone and those that had perished during the Battle of Eclipse as we came to call it. I'm feeling that itch to move along but I feel that the gnome may choose to come with me if I go. Tara refills my glass and touches hers to mine.\n\n\"To a bright future together.\" She whispers in my ear.\n\nI kiss her cheek and feel at home for the first time in many years."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "anal",
        "non human",
        "incest",
        "mother son incest",
        "fellatio",
        "public sex",
        "voyeur"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-town-called-eclipse"
}