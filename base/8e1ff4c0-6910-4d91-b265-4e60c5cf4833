{
    "title": "M Club Ch. 20",
    "pages": [
        "Author's foreword: Apologies for the long wait between chapters. This one is super-sized and, well, I think you'll understand by the end.\n\n#\n\nThe first rule of M Club is: You don't talk about M Club. The second rule of M Club is: You don't talk about M Club. Third rule of M Club: No touching anyone but yourself. Fourth rule: No recording devices. Fifth rule: No clothing below the waist. Sixth rule: If this is your first time at M Club, you must masturbate. \n\n#\n\nThe last week of school wasn't anything like how Denby had imagined it. Yes, she was busy studying for exams. She was also looking forward to being done and getting on with summer vacation. Getting through all of it while being pissed at her likely ex-boyfriend and ducking questions about that situation from all her other friends was wearing her down. \n\nAll enthusiasm for finishing high school and being freed of her promise to abstain from sex had vanished. Lisa had tried, repeatedly, to crack her shell. Denby didn't want to talk, but shutting her friend out was only adding to the weight on her shoulders.\n\nAndy, in passing and at band class, was polite but wise enough not to insert himself into the situation. Vida, likewise, acknowledged Denby in passing but otherwise stayed in her own circle of friends.\n\nSean, like Lisa, had tried to connect with her. He'd sent several apologies by text and email and even voicemail. He'd also gotten the hint that her lack of replies wasn't an invitation to try harder, and he'd been quiet for most of the school week. She could feel his eyes on her in the hallways, try as she might to avoid him.\n\n\"You gonna just keep hiding for the rest of the year?\"\n\nDenby looked up from the table in a dark, quiet corner of the city library where she'd been studying for her last final exam. Lisa didn't wait for an invitation, sliding into the chair opposite and setting her backpack on the table. Den wanted to be irritated, but no longer had it in her. In truth, she was relieved. Lisa, bless her, was quietly upbeat and pointedly sincere.\n\n\"Stalking me?\" Denby said, capping her highlighter.\n\n\"Your mom said you were going to be here. She's worried about you, too.\"\n\nDenby rolled her eyes. \"Yeah, like I can talk to her about it.\"\n\n\"You can talk to me.\"\n\nDenby saw the pain and compassion in her friend and felt even worse for having shut her out for so long. She fought back the tears, not wanting to make a scene.\n\n\"I know. I just needed to work some things out for myself.\"\n\nLisa reached across the table and took one of Denby's hands in hers. That gesture, human contact, felt so good. After getting used to it daily with Sean, she hadn't realized just how much she missed it. She squeezed back.\n\n\"So, where are you with all that?\"\n\nDenby sighed. \"I'm not sure. Getting better. Coming to terms. Confused. I don't know.\"\n\n\"Still pissed at Sean?\"\n\nDenby looked down at the table and steadied herself. \"A bit, yeah. But...\"\n\nLisa leaned forward. \"You do need to talk. For both your sakes.\"\n\nDenby looked up and had to wipe the corner of her eyes. \"Does he think we're still a couple?\"\n\nLisa's eyebrows raised at that. \"You're not? I mean, I know what you said in the heat of the moment and all, but...\"\n\n\"I'm not sure if I meant it then, but now I'm pretty sure. And that's why I'm afraid to talk. I'm too scared to tell him that.\"\n\nLisa frowned. \"I'm not about to tell you what to think or how to feel about this, but he's a good guy and this was his first screw up. Well, that I know about. Is that really enough?\"\n\nDenby shook her head. \"No, it's more than just that.\"\n\nLisa gave her a confused look. \"What, then?\"\n\nDenby knew if she continued any further, the tears would come freely. She already felt uncomfortable wiping her eyes in the library, afraid someone would see.\n\n\"I need to study,\" she said, politely but firm enough to be clear she was done talking. \"Thanks for finding me and being there for me. Sorry I've been a shitty friend lately.\"\n\nLisa squeezed her hand. \"You haven't been. I know it's been hard. Just, know you can talk. If not to Sean, then me.\"\n\nDen nodded. \"You've been talking to him?\"\n\nLisa hesitated and looked very uncomfortable. \"That's the other thing I wanted to talk with you about.\"\n\nHalf a dozen different, incompatible emotions flashed through Denby at once. She tried to keep her voice neutral. \"What about?\"\n\nLisa withdrew her hands, clenching them together. \"Last weekend, when you weren't talking and then told me to, uh, deal with Sean myself?\"\n\nDenby was stunned. During all this crap...that!? She wanted to scream and laugh at the same time. Lisa looked like she expected more of the former than the latter.\n\nHow to respond? She didn't even know how she felt.\n\n\"Really?\" Denby doubted her efforts to sound dispassionate was working.\n\nLisa nodded. \"I'm sorry. I was hurt, pissed, frustrated. I needed to talk, and you were shutting me out. I met Sean, only planning to talk.\"\n\nDenby shook her head and forced a smile. \"Well, I told you to. No one to blame but myself.\"\n\n\"Blame me. Please, please, please, blame me. I deserve it.\"\n\nThe pain in Lisa's voice hurt Denby more than the revelation. Her friend had come clean, which counted for a lot. And, all things considered, she had been the one who'd pushed Lisa and Sean together, repeatedly.\n\n\"Nope. I'm not blaming you. Sorry, but this is on me.\"\n\nLisa looked dumbfounded. Clearly not the reaction she'd been expecting.\n\n\"Let me study,\" Denby said, softly. \"We can talk later. Tomorrow. Okay?\"\n\nLisa nodded and began to rise. She paused and opened her backpack, withdrawing a beat-up composition notebook. She slid it across the table.\n\n\"It's Sean's club log,\" Lisa said, confirming what Denby suspected. \"I think you should read it. Up to you, of course. But, please, talk to Sean.\"\n\nDenby brushed her fingers across the black cover. \n\n\"Maybe.\"\n\n#\n\nAgainst all sense, the talk with Lisa and her revelations about messing around with Sean didn't distract Denby from her studies. On the contrary, she found herself in a strange state of indifference. It was how she imagined a monk might feel when meditating in some perfect zen balance.\n\nHer last final exam was an hour before Lisa's, so she was able to slip out of the school without a direct face to face. She'd promised to talk today but felt more inclined to explore this strange place she'd reached in solitude. \n\nHoping it would suffice, she fired off a quick text for Lisa to read later: Read the log. Thanks. I'm in a good place, but still figuring it out. Will talk with you and Sean later. See you in the morning.\n\n\"Hey baby, need a lift?\"\n\nSo much for solitude, Denby thought, but not without a small smile. She turned and rolled her eyes at Andy as he hurried to catch up with her as she made her way down the sidewalk. He smiled back, clearly relieved to get something resembling a positive response from her after the week of moping.\n\n\"I was planning on walking, thanks,\" she said, slowing enough to let him fall into step beside her. \"Need a little fresh air.\"\n\n\"We're done! Feels good, huh?\"\n\nDenby nodded. He was right. She was done with high school. Those who'd finished up were already celebrating and the mood was buoyant. She forced herself to absorb some of it.\n\n\"It does feel good. Been a long time coming.\"\n\nThey walked in silence for nearly a block before Andy finally cracked. \"It's good to see you smiling again. Things getting better?\"\n\n\"Yeah. Getting there, thanks. How about you?\"\n\nAndy shrugged. \"I'm fine. But my situation wasn't exactly the same.\"\n\n\"No.\"\n\nDenby could tell he was uncomfortable with her short answers but respected him for doing what he could to be supportive. She just wasn't feeling very conversational.\n\n\"You, uh, talk to Sean yet?\"\n\n\"Not yet,\" she said, keeping her voice light. \"I will. Probably tomorrow.\"\n\nAndy nodded but clearly couldn't come up with a follow up question that wouldn't go in uncomfortable directions. She spared him by asking one of her own.\n\n\"Mind if I ask where things stand between you and Lisa?\"\n\nHe cast a glance her way, then sighed. \"Just friends. Maybe with a few benefits on the side, I suppose, but she made it pretty clear that's all it would be. It's cool.\"\n\nDenby had been listening for some disappointment in his voice, a sign he pined for Lisa more than he let on and wasn't comfortable with the \"friends\" arrangement, but it wasn't there. He genuinely sounded okay with it. That was, in a way, a relief.\n\n\"Why?\" he said.\n\n\"Lisa and Sean were messing around together this weekend.\" Zen. The words flowed out with no emotion -- no anger or hurt. Just a simple statement of fact.\n\nAndy, however, slowed his pace as he processed her words. \"Wait, what? Seriously?\"\n\nDenby shrugged. She did feel a bit of frustration but wondered if it wasn't more a reflection of Andy's emotional response than her own.\n\n\"Lisa told me. She's feeling all guilty about it. Said she had only intended to talk and it just happened.\"\n\nAndy caught back up to her pace. She could feel him studying her.\n\n\"You seem disturbingly calm about the whole thing.\"\n\nDenby couldn't repress a smile. \"I do, don't I? It's weird, but I think I am.\"\n\n\"Okay. Where's the real Denby and what did you do to her?\"\n\nDenby laughed. \"It's me, honest.\"\n\nAndy's body language relaxed a bit. \"Prove it.\"\n\nDenby pondered for a moment, then said, \"Would you be able to confirm my identity by the smell of my panties?\"\n\nAndy's eyes widened before he let out a loud guffaw. \"I might. You offering?\"\n\n\"Not today.\"\n\nAndy gave her a playful nudge on the arm. \"That's a shame. Guess I'll just have to take your word for it.\"\n\n\"No, I'm not upset,\" she said. \"Not really. I more or less told Sean I was done with him after...well, you know. You were there. Then this weekend, Lisa was trying to get me to talk to him and I got snippy and told her to go suck him off. And, since I seem to keep trying to push them together, I guess I shouldn't be surprised when they found comfort in each other's arms.\"\n\n\"Yeah, but...\"\n\nDenby nodded. \"I know. Best friend screwing around with my boyfriend behind my back. Nuclear meltdown, right?\"\n\n\"Usually.\"\n\nDenby wasn't sure she could explain it in words. She still didn't entirely get it herself yet. Andy deserved her best shot, though.\n\n\"I like Sean. I was happy dating him. I'd have been happy letting him be my first. But after all this, I think I realized that I didn't really love him. I mean, not the deep, get-through-anything in love sort of thing.\"\n\nAndy politely waited for her to continue.\n\n\"I think part of me, too, knew our relationship wouldn't last once we split ways for school. A three-hour drive might as well be halfway across the country when we're busy college students. Text and video and phone can only fill in the gaps just so much. It didn't feel like the kind of relationship that would survive that.\"\n\nThey walked in silence for a bit and Denby happily gave him all the time he wanted to process. It was nice, just having him beside her, listening and not judging or trying to offer advice.\n\n\"I was kinda wondering how you two were going to deal with that,\" he finally said. \"Not that it can't be done, but...\"\n\n\"Not easy. Not fun.\" Denby let those words linger. \"And all the while, I'd know Lisa was at the same school as Sean. She could bump into him anywhere, meet up for lunch, go out partying.\"\n\n\"You didn't want to worry about them fooling around behind your back, so you brought it out into the open.\"\n\nDenby nodded. \"That was part of it, I think. And then I saw how well they clicked. It'd never work, letting them mess around while thinking he'd still stay with me. Wouldn't be fair to anyone to even try.\"\n\n\"Shitty deal. But, yeah, I get it.\"\n\nThey reached her house and slowed at the walkway to the front porch. Andy wore the proper expression of a compassionate friend and she loved him for it. Just a quiet understanding shoulder to cry on, if she hadn't cried herself out already.\n\n\"It took me most of this last week to figure out what part of me had probably already put together months ago. I can't say I'm happy, but I'm in a better place. And I hope things work out.\"\n\nAndy smiled and took her hand. \"I'm sure it will. You're an amazing girl and you'll find someone in college. I know, firsthand, any sane guy would be interested in you.\"\n\nShe chuckled. If she asked him inside, he'd happily come. She knew he had feelings for her, but she wasn't ready for that. He did things for her when they had flirted, things Sean couldn't do, yet that didn't mean he was the right guy for her, either. And, again, there was the distance between schools.\n\nAndy said, \"Need anything? Want anything? Company? Dinner?\"\n\n\"Thanks,\" she said. \"But not tonight. I'm just gonna chill. Big day tomorrow.\"\n\n\"Yeah. Graduation. And...stuff.\"\n\n\"Stuff.\" She agreed. That covered it nicely -- their set-up and tear-down of chairs for commencement, punishment for the Club getting caught in the school auditorium, as well as several of her friends' parties.\n\n\"You want a lift tomorrow morning? I know it's not far, but I can swing by.\"\n\n\"Sure, sounds good.\" It did.\n\n#\n\nDenby, to her surprise, slept well. She felt good when she woke and was upbeat getting ready to go help with the commencement set-up. Her parents assumed she'd volunteered because Sean's mom was running the show and she had no intention of telling them otherwise. They looked relieved to see her in a good mood after a full week of moping and they were wise enough not to dig.\n\nAndy picked her up as scheduled and made the short trip over to Highland High with nothing more than innocent small talk. With the weather forecast being iffy, the decision had been made to have commencement in the school's gymnasium. It'd be hot and crowded, but better than getting rained on.\n\nAs they entered the gym, Denby immediately spotted Mrs. Gregg talking to the principal -- the two people she least wanted to see. Both adults looked over to her and Andy when they entered, however, and there were no dark scowls or anything of the sort. The principal said something else to Mrs. Gregg and then left through the back door. Mrs. Gregg walked over to meet them.\n\n\"Thanks for coming,\" she said, smiling as if they'd had a choice. \"The others just arrived and are down in the cafeteria loading up the racks of chairs to move them down here. We've put tape markers on the floor where we want each row set up. Simple enough.\"\n\nDenby nodded and was grateful she didn't dig further about what was going on between her and Sean. She still hadn't spoken with him and had no idea what he might have told his mom.\n\nAndy walked with her down to the cafeteria where they found Sean, Lisa, and Vida all moving chairs onto the rolling racks. Sean was working one end of the room while the girls had started at the other. She felt a moment of panic, knowing she couldn't put this off any longer, but pressed on.\n\n\"Mind helping the girls?\" she said. Andy was quick to pick up on the meaning and agreed, splitting up.\n\nSean saw her approaching and hesitated a moment before returning to his work. Den was a little disappointed, but what had she expected? That he would come running over and drop to his knees? No, that wasn't him.\n\n\"Hi,\" Sean said when she got closer. He paused with chairs in each arm to give her a long, calm look. She realized he was probably as nervous about this meeting as her.\n\n\"Hi,\" she said, giving him a small smile. She could see how much that simple gesture eased the burden on his conscience.\n\n\"I've been trying to apologize all week,\" he said. \"I guess you know that, but now that we're together, in person, I want to say it again.\"\n\nDenby waved it aside. \"Accepted. And I have to apologize for taking so long to talk.\"\n\nSean stacked his chairs on the rack. \"Nothing to apologize for.\"\n\n\"You know why it took so long?\" Denby followed him and picked up a chair. He paused for a moment in gathering up a couple others when she posed her question.\n\n\"Not really, no.\"\n\n\"I needed to be sure about some things.\" She'd pictured and rehearsed this moment a hundred times in her mind, but it just wasn't the same with him here in person. Here, beside her, he was so much more the sum of their time together than the abstraction of boyfriend in her mind when he was away.\n\nHe just nodded.\n\nDenby took a deep breath and set her chair down before dropping it. \"And now I'm sure. We can't stay a couple.\"\n\nSean looked at her as his shoulders slumped. Her words stung, but she could tell he was ready for it. Whether Lisa or Andy had tipped him off or he'd simply been preparing for it since her blowup after he revealed how he'd hidden the details of journaling about the club and then his mom finding it. He nodded once.\n\n\"I had a feeling,\" he said. \"I don't like it, but I earned it.\"\n\nDenby shook her head no. \"It wasn't that. I mean, yeah, it was some of that. I was hurt and I'm serious about how hard it is to look your mom in the eye after that, no matter how cool she seems to be about the whole thing. Maybe I'd get over it. Probably.\n\n\"But no, that isn't the reason. It was just something that made me look at everything else.\"\n\nSean's eyes narrowed. \"You weren't happy?\"\n\nDen sighed and grabbed another chair. \"I was happy with you. You're a great guy. Really, you are. I'm just not sure you were quite the one guy for me. And because we were going to be hours apart from each other in school next year, I think I'd have had to be absolutely, one hundred percent sure you were that one guy to make it work. I guess I'd hoped that after we started...you know...doing it...I'd have found that last missing bit.\"\n\nSean set another couple of chairs on the rack, then stopped to process what she was saying.\n\nShe sighed. \"I was looking forward to being done with my promise. Not that I'm not, now, but I think all this M Club stuff allowed me to explore some of those same things. We shared a lot of intimate moments, maybe more than we would have just by having sex in private like a normal couple. And it didn't change the way I felt about you. Not better, not worse. Just, you know, a bigger version of the same.\"\n\nSean, to his credit, seemed to get what she was saying. He also kept his mouth shut to let her get it all out.\n\n\"But one thing did change. That was you and Lisa.\" Sean finally opened his mouth to interject but she held up a finger to cut him off. \"I know I pushed you two together. Neither of you would have done anything together without my having started it.\n\n\"What I'm trying to say is, I liked seeing you two together -- my favorite people in the world. I liked watching you two interact. I liked how happy you both looked. I should have been jealous, especially after last weekend, but I wasn't. Never have been.\"\n\nThe look on Sean's face, the flash of guilt, told Denby that Lisa had let him know she'd spilled the details of their get together. He hadn't had the chance to apologize for it, but she had no intention of letting him.\n\n\"It was what convinced me I was making the right decision, breaking up with you,\" she said. \"I don't know if you two will make a couple or not. If you do, I'll be happy for you. If not, then I'm sure it'll be for a good reason. But you two will be at the same school, so you'll have a better chance of making a go of it. And you won't be weighed down with an uncomfortable, long-distance relationship.\"\n\nSean sighed. \"You know I was totally willing to give it a shot. It's not that far of a drive, especially with our families almost halfway between.\"\n\nDenby stepped forward and took his hand in hers. \"I know. You'd have tried. I'd have tried. But texts and phone calls aren't the same as holding someone's hand between classes or getting a goodnight kiss.\"",
        "Sean squeezed her hand. \"You realize how awkward this is?\"\n\n\"Pushing my ex and best friend together?\" She smiled and got a reluctant one back from him. \"I know. I might even regret it a couple times, but neither of you will ever hear about it.\"\n\n\"Now, don't do that...\"\n\n\"Tough shit, bucko,\" she said, giving him a wink. \"It's my life and I can't have regrets if I haven't made a few bad decisions.\"\n\n\"Not too many, I hope.\"\n\nDenby shrugged. \"Well, there's at least one or two obvious candidates, but the choices that led to them also left a trail of happy memories. I think the trade-off has been in my favor so far.\" \n\n\"Hope so.\" Sean gave her hand another squeeze. \"You do realize this has to be one of the weirdest break-ups ever?\"\n\n\"I blame you,\" Denby said, smiling while letting go of his hand.\n\n\"Of course.\"\n\n\"Too good an influence on me.\"\n\nSean rolled his eyes. \"Whatever.\"\n\n\"And if you ever hurt Lisa, you know I'm coming after you.\"\n\nSean's eyes widened, but he accepted her comment for what it was.\n\n\"I suppose we better get to back to work,\" Den said, picking up another chair. \"Don't want to get another punishment.\"\n\nSean followed. \"Yeah, one was enough. Too much.\"\n\nThey worked in amicable silence for a while until their rack of chairs was ready to haul down to the gym. Denby walked beside Sean as he pushed it, aware of the eyes of their friends on the two of them, eager to know where things stood between them. They would learn soon enough, she figured.\n\n\"I do have a question,\" Sean said when they were alone in the hallway.\n\n\"What?\"\n\n\"Are you coming to my party?\"\n\nDenby had been expecting something harder, more personal. His party, however, she hadn't given any thought to. Before the auditorium and break-up, it had just been a given that she'd be at his side for his party and he'd be at hers the following day. After the incident, she'd assumed she wouldn't go, not wanting to face Sean or his mother.\n\nNow, however, after talking it out, she was feeling good. Light. Free.\n\n\"We'll see.\"\n\n#\n\nDenby arrived at commencement with her family -- her parents, older sister, and all grandparents. They soon merged with the crazy crowd of students and family converging upon the foyer outside the gym. It was hard to spot any of her friends and, since they were sitting alphabetically, she wasn't sure she'd be able to catch up with any until after the ceremony.\n\n\"We're lining up in the cafeteria,\" Denby said to her mom. \"Meet you back here by the door when it's done?\"\n\n\"Sounds good, dear.\"\n\nDenby gave her a quick hug and then started fighting her way through the crowd. Before getting far, though, a hand grabbed her by the arm and began steering her a different direction. She turned, ready to be annoyed, when she discovered it was Andy. He looked good with his hair freshly combed and a shirt and tie poking out under his black robes.\n\n\"Uh, cafeteria's that way,\" she said, but without resisting his lead.\n\n\"I know. We have another stop first.\"\n\nDenby wondered what he was up to, immediately jumping to some silly M Club stunt that was absolutely a no-go from her after what had happened the prior week. Given their tight schedule, though, that seemed unlikely. He had to know better, anyway.\n\nAs they turned down a quiet hallway toward the computer labs, he let go of her arm and simply fell in beside her. There was a definite spring in his step.\n\n\"You look fantastic, by the way,\" he said.\n\n\"Thanks.\" She had spent a fair bit more time than usual doing up her hair and applying more makeup than her typically minimalist approach. Her new dress, a pale blue knee-length affair that fit her figure amazingly, felt wasted under the obligatory robe.\n\n\"So, uh, where are we going?\"\n\nAndy looked over his shoulder, then led her into a tiny hall that had only two doors and an exit from the building. There was no one else around or any sign of a surprise.\n\n\"I just wanted to get you alone for a minute, make sure you're okay,\" he said. Den didn't think that was quite it, but he did sound sincere.\n\n\"I'm good, honest.\"\n\nHe smiled. \"It's weird, but I believe you.\"\n\n\"Things went better with Sean than I'd expected. I think we get each other.\"\n\n\"Of course you do. You were good together, you know.\"\n\nDen fought back a moment of doubt. \"What did you really bring me back here for?\"\n\nThere was a twinkle in Andy's eye, a respect for her seeing through him. She liked that look. It reminded her of a couple good times they'd shared.\n\n\"Give me your panties.\"\n\nDenby's jaw dropped. \"Excuse me?\"\n\n\"Panties. Now.\" He was smiling, but totally serious. If he'd said it any other way, it would have come out totally silly.\n\n\"Uh, this is graduation, not M Club or some party.\"\n\nAndy shrugged. \"So? It's kind of a party, and it'll be dull as hell. Trust me, you'll be far more engaged if you're going commando.\"\n\nDenby couldn't bring herself to retort to that. He had a point, even if he was crazy.\n\n\"Are you commando?\" She asked.\n\n\"Damn skippy,\" he said, unzipping his robe. Holy fuck, he was just going to whip it out to prove it? Here in school with hundreds of people just down the hall?\n\n\"Whoa!\" she said, grabbing his wrists. \"You don't have to show me!\"\n\n\"Oh, I wasn't going to,\" he said. \"Well, not unless you want me to.\"\n\nShe let him go, perplexed. Andy smiled and finished unzipping. Instead of proceeding to unzip his pants, he reached into a pocket and withdrew a bit of yellow fabric. Panties.\n\n\"Lisa's ready to go.\"\n\nDenby rolled her eyes and let out a laugh. \"Of course she is. Did you try to talk her into doing that striptease during her speech?\"\n\n\"I did, but I don't think she'll follow through,\" Andy said with mock disappointment. \"Still, you can be sure at least a couple of us will be imagining it.\"\n\n\"Perv,\" she said, slapping him on the shoulder.\n\nHe tucked the panties back in his pocket, then held out his hand for hers. \"Better hurry.\"\n\nDenby couldn't believe she was considering it, after everything that had happened. Still, Andy had a way about him that made her feel wild and daring and sexy. She liked the idea of him holding her panties, sharing a little naughtiness that no one else in that crowd would know about.\n\nShe took a deep breath. \"You're incorrigible.\" He grinned knowingly as she hiked up her robe and dress just enough to reach under and pull down her panties. She hadn't picked anything special, not anticipating anyone seeing them, but thankfully they were a tasteful pink with white lace trim.\n\n\"Thank you, my lovely,\" Andy said, taking them with care. He folded them up neatly and then, deviously, held them to his nose and took a deep whiff. \"Ah, you still got it.\"\n\n\"Perv.\" She couldn't help smiling, though, as he tucked them away in his other pant pocket.\n\n\"Thank God I'm wearing this robe,\" he said, starting to zip it up. \"Commando with a boner is not a suitable combo for this family affair.\"\n\n\"No, it's not,\" she said. \"And you're hard already, just from that?\"\n\nAndy shrugged. \"Halfway. Why, wanna get me the rest of the way there and make me really uncomfortable?\"\n\nDenby knew he was playing with her, treading the fine line between being fun and not overstepping given her recent state of mind. She appreciated that he wasn't being so damn careful, not like her parents or Lisa or Sean.\n\nShe lifted the front of her robe and dress, flashing him her bare pussy. He took it in, smiling, and gave her a wink when she let it drop.\n\n\"That'll do.\"\n\n\"Perv.\"\n\nThey walked side by side down to the cafeteria, occasionally bumping arm to arm. She almost reached for his hand more than once but resisted each time. No need to stir a pot that had already been shaken to death.\n\n#\n\nCommencement was, as Denby had anticipated, a pretty dull affair. Because they sat alphabetically, she was stuck between a couple classmates she barely knew. Sean and Andy were several rows in front of her and Lisa, as valedictorian, sat up on stage beside the principal. No matter how rough things had been, Denby counted every blessing she had it wasn't her up there. That had to be all kinds of awkward.\n\nLisa, to her credit, came across as smooth and composed. When it was her turn to speak, she gave a simple but elegant message. For a girl who tended to be on the introverted side, Lisa was a natural born public speaker.\n\nDenby, too, couldn't help but think about their jokes over her stripping before the audience. Lisa might be bold, but she certainly wouldn't try something that absurd. Imagining it, however, made the ceremony more endurable and even got her thinking about her own hidden state of indecency. Was Andy thinking about the two pairs of panties in his pocket? Hopefully he wouldn't be walking the stage awkwardly to get his diploma.\n\nShe tuned back in as Lisa wrapped up her speech: \"Allow me to leave you with one parting thought as we prepare to go our separate ways. Always stay true to yourself. Don't judge yourself by what others might think of you or expect of you. You're the one who has to live with yourself, all day, every day. If you try to live to someone else's expectations or ideals, you'll never be comfortable.\n\n\"So, get out there. Trust your instincts, follow your internal compass, and find that ultimate realization of your truest self.\"\n\nLisa's eyes had locked on to Denby with her parting words and Den couldn't help but feel they were meant for her more than anyone. She smiled and led the applause as Lisa took a step away from the podium. Smart girl and, indeed, they sounded like words of wisdom.\n\nSoon after, the band kicked into Pomp and Circumstance and the senior class began the long parade across the stage to receive their diplomas. Denby watched and clapped for her friends, happy for all of them. She was relieved to see both Sean and Andy receive theirs from the principal without any sign of different treatment -- just the usual handshake. She'd been worried, but apparently he'd gotten over it enough to be professional.\n\nOn stage, she stepped out of line for a quick moment to give Lisa a big hug.\n\n\"Great speech!\" she said.\n\n\"Thanks! I was so nervous.\"\n\nDenby smiled and leaned in close so no one else could hear. \"Well, at least you gave your panties to Andy for good luck.\"\n\nLisa's eyes widened, and she smiled. \"You too?\"\n\nDenby just winked and hopped back into line. The principal clearly had seen their exchange, but he merely gave her a congratulations and handshake as he handed over her diploma.\n\n\"Thank you, sir,\" she said, surprised how relaxed she felt in this moment. He seemed to hear her sincerity and smiled.\n\n\"You're welcome,\" he said. \"And congratulations. You earned it.\"\n\nDenby followed the line back to her seat, endured the closing remarks, and then sent her cap flying with the hundreds of others. Finally, officially, it was done. She was free of school, childhood, and her promise to not have sex. They didn't line up in importance quite the way she'd expected they would have a week or two ago.\n\nShe made a point of crossing paths and getting pictures together with Lisa and a dozen of her other friends, making promises to keep in touch over the summer and next fall as they went their separate ways. Andy found her and just gave her a knowing look and a quick hug. He didn't offer to return her panties, which was probably for the best.\n\nSean also tracked her down and she happily hugged him. There was still that familiar warmth in his embrace and a big part of her wanted him to lean down so she could kiss him. But, no, she'd closed the door on that and she'd be disappointed in herself later for being so weak.\n\n\"We're free,\" he said.\n\n\"Feels good, doesn't it?\"\n\nHe nodded. \"And a bit daunting.\"\n\n\"Yeah.\" She let that thought dangle until the silence became awkward.\n\n\"I suppose I should get back to my family,\" Sean said, surveying across the top of the massive crowd thanks to his height.\n\n\"Me too,\" she said, feeling like she owed him more than that. \"And, uh, I should be able to swing by your party later. Probably toward the end.\"\n\nSean perked up at that. \"Great! See you later, then.\"\n\nDenby smiled, even if she was nervous about having to face his mother again. Lisa's speech came back to her, though -- don't judge yourself by what others might or might not think of you. It would be okay.\n\n#\n\nIt was okay.\n\nDenby spent the afternoon making quick appearances at several of her friends' parties. She met up with Lisa around dinnertime and agreed to hit Sean's party last and together. Lisa knew Andy would already be there, as well as a few of their other guy friends. She'd also bumped into Vida who'd said she might pop in to say hi. With other friends there, M Club wouldn't be able to come up.\n\nThey arrived at Sean's about fifteen minutes before the party was scheduled to end. There were still several cars and trucks parked on the street out front, but the party was clearly winding down from the general demeanor as they were let in the front door by Sean's younger brother, Ryan, who informed the girls that Sean was downstairs.\n\nMrs. Gregg spotted them across the living room and intercepted them before they could move. She was congenial and appreciative of them coming, then offered them drinks and food, much of which was still sitting out in the kitchen. They both declined on account of having eaten too much already today.\n\n\"The boys are downstairs,\" she said. \"I think they're about partied out. Things are breaking up and once we get everyone else out and clean things up a bit, the rest of us are going to go catch a late movie.\"\n\nThere was something about the way she said it which suggested it was a pointed message for them. Was she implying that she expected an impromptu M Club send-off party down in their basement? Denby couldn't help but blush, despite her best efforts to pretend she didn't catch the subtext.\n\n\"Sounds good, Mrs. G,\" Lisa said. \"Have fun.\"\n\nAll Denby could manage was a nod of acknowledgement before getting dragged down the stairs. She'd expected to find a bunch of Sean's friends down in the basement family room, but it was just Sean and Andy. Both looked up from the couch where they were kicked back with feet up on the coffee table and smiled.\n\n\"You made it,\" Sean said.\n\n\"Now the real party can start,\" Andy added with waggling eyebrows.\n\nDenby rolled her eyes. \"Not likely.\"\n\n\"Not until the parentals are gone, anyway,\" Lisa said, nudging Denby in the side.\n\n\"Geez,\" Denby said, shaking her head in mock outrage. \"Haven't you learned your lesson? Any of you?\"\n\nHer friends almost looked chagrined. Almost. Incorrigible. \n\n\"Well, we're not at the school,\" Andy offered. \"That's something, right?\"\n\nTo Denby's relief, the topic of conversation moved on to some of the parties they'd attended earlier in the day and other subjects around graduation. Safer territory. Much as Den had wanted to steer clear of the M Club stuff that had caused all the problems, she couldn't deny the temptation given how much fun she'd had leading up to that point. Only now, with her and Sean being over, how weird would it be? Better to not even find out.\n\n\"We're headed out to the movies,\" Mrs. Gregg yelled down the stairs about fifteen minutes later. \"Have fun!\"\n\nDenby half blushed at her parting words. Was she setting them up for the opportunity to \"have fun\" in that context? It was so weird to think of a parent not only being okay with their M Club activities, but practically endorsing them. Maybe Den was just reading too much into it.\n\nNo one else, thankfully, took that as the signal to strip naked and start masturbating. Rather, they just picked up their conversations as if nothing had changed. Denby forced herself to settle back and relax. That ended up with her analyzing every little look and word exchanged between Sean and Lisa. It was subtle, but there was definitely something there. That was a good thing, right? Den desperately tried to convince herself it was. It had seemed so sensible earlier.\n\n\"I need a drink,\" Denby said, standing abruptly. \"Get anyone anything?\"\n\nLisa asked for a soda and Sean declined, still working on one. Andy hopped up and offered to come along.\n\n\"I can get it,\" Denby said.\n\nHe shrugged and smiled. \"But I don't know what I want yet.\"\n\nDenby sighed and let him follow along. At least it wasn't Sean and Lisa. Halfway up the stairs, she got the sense he was watching her ass. She knew it looked good in her new dress. With a smirk, she gave it just a little extra wiggle with each step.\n\nIn the kitchen, they stood side by side, peering into the fridge. Den grabbed a soda for Lisa and a bottle of water for herself. Andy hemmed and hawed until finally selecting a soda.\n\n\"Think they're making out?\" Andy said as he cracked his soda.\n\nDenby shook her head. \"Seriously? You're going there?\"\n\nHe shrugged. \"Just wondering. I mean, they're sort of a couple now, right? The way it happened, I figured you'd be okay with it.\"\n\nShe suspected he was testing her. Probably with good reason.\n\n\"Sure, I'm fine with whatever they do.\"\n\n\"Uh huh.\" He looked arrogantly indifferent. She slapped him lightly on the arm.\n\n\"What's that supposed to mean?\"\n\nHe smiled. \"It's okay to be jealous or weirded out, at least. I mean, I am. Lisa and I were supposed to be friends with benefits. And now, well, she's back to just friends after almost no benefits. Once again, my best friend seems to be with the girl I'd like to be with.\"\n\nDenby groaned inwardly. She'd been so focused on her own feelings, she hadn't considered Andy's situation. Granted, it was different, but not that much. \"Sorry.\"\n\n\"Well, shit happens,\" he said, hardly sounding broken up over it. \"We'll move on.\"\n\n\"Yeah, I suppose.\"\n\n\"If it'd help, you could give me a blowjob.\" He said it so straight, so matter-of-factly, Denby's jaw literally dropped.\n\n\"Excuse me?\" She wasn't mad, just...stunned.\n\nHe smiled. \"Well, you did suggest you wanted to, back when we were in the library together.\" He wagged his eyebrows at her.\n\nDenby remembered well that episode, how they'd told each other what they wanted to do to the other, barring relationships and other impediments. Fuck, that had been so hot. In that moment, she really had wanted to do those things to him. With him. His offer, joking as it might be, was probably sincere.\n\n\"Yeah, I guess I did, didn't I?\"\n\nAndy shrugged. \"Well, it's a standing offer on my end. No pressure, just putting it out there.\"\n\n\"Thanks. I'll keep it in mind. I'm just...not sure what I want right now.\"\n\nA tentative knocking at the front door broke the somewhat awkward moment. Andy went to answer it while Denby trailed a short distance behind. He peered through the window and then pulled it open to welcome Vida and Leon.\n\nVida, dressed in a sharp, figure-hugging blouse and flowy skirt, gave Andy a big hug. Leon, next in, looked nearly as good with polo shirt and cargo shorts leaving plenty of his muscles on display. Vida gave Denby a big hello and hug as well, while Leon nodded politely, eyes briefly taking in Den's dress.\n\n\"Awful quiet,\" Vida said. \"Did we miss the party?\"\n\n\"Just like you planned it,\" Andy said, giving her a wink. \"The others are downstairs, and the rest of the family is gone for a couple hours.\"\n\n\"Good,\" Vida said with a wide grin. \"Then it's time for the real party.\"\n\nDenby refrained from rolling her eyes. She felt the inevitable tug of another M Club event drawing them all in. Leon still wasn't official, but did it really matter? With school over and summer jobs and schedules about to begin, this very likely was the send-off to whatever was left of the club anyway.\n\nAndy showed the newcomers to the kitchen for drinks and then they all went downstairs. If Sean and Lisa had been making out, they were good at hiding it. Denby flopped down in a recliner while the others got caught up and welcomes were made all around.",
        "Leon settled into the recliner opposite Denby's, with Vida sitting on his lap. Sean and Lisa still claimed the couch in between and Andy sat on the floor. As the conversation continued, Denby was painfully aware of the looks Andy kept sending her way. She also caught Leon checking her out, in particular the length of bare leg that her dress revealed. The attention didn't bother her, but she wondered if they were hoping for something more from her.\n\n\"So, Den,\" Leon said on cue, as if reading her mind. \"You're free of your promise now, right?\"\n\nVida elbowed him in the ribs. \"Leon!\"\n\nLeon shrugged. \"What? I mean, that was why the whole club thing got started, right?\"\n\n\"Yes, I'm free of my promise,\" Denby said, not taking offense. Yes, she could touch a guy's cock, could let a guy touch her pussy. She could engage in sex beyond the fooling around she'd done with Lisa. She refused to glance at Sean, unable to trust how she might react to however he looked.\n\nAn awkward silence followed. Lisa, unsurprisingly, broke it by jumping up.\n\n\"Okay, I don't know about the rest of you, but I've been waiting all day to get naked,\" she said. \"I was dying while giving that damn speech, and the rest of the parties have been freaking unbearable. So, if anyone has a problem with that, you can go somewhere else because I just don't care right now.\"\n\nThat brought smiles and laughs all around. Denby knew full well about Lisa's fantasies of being the only naked person at a party. Granted, most of those fantasies had been with a party of only guys, but this was certainly close enough.\n\nLisa pulled her dress up and over her head, revealing just a lacy bra and bald pussy underneath.\n\n\"You seem to be missing something, dear,\" Vida said.\n\nLisa wiggled her bare butt. \"What, didn't Andy collect yours before the ceremony?\"\n\nAndy held up his hands when Vida and Leon turned his direction. \"I would have asked, but I couldn't find you beforehand.\"\n\nVida rolled her eyes and laughed. \"Did you get Den's?\"\n\nDenby smiled and lifted the hem of her dress just enough to flash everyone her equally bare pussy. \"Yeah, he got them. Made me go commando all day.\"\n\n\"I didn't hear any complaining,\" Andy said.\n\nLisa's bra followed her dress to the floor beside the couch. Despite all they'd done, naked in front of each other, Denby still admired her friend's complete confidence when it came to her body. That average build with soft curves and full breasts, pale skin dotted with freckles, and long red hair -- it was easy to appreciate and one Den had the pleasure of having explored intimately.\n\n\"So much better,\" Lisa said, sitting back down on the couch beside Sean.\n\nDen had expected Lisa's undressing to trigger a cascade of stripping and more, but no one else seemed willing or ready to take the jump. Lisa, predictably, didn't seem to mind being the only one. Conversation continued, but it just felt...off. It was like everyone was holding their breath.\n\nShe felt eyes keep flicking her way, expectantly. They were worried about her state of mind, the change in relationship status between her and Sean and Sean and Lisa. The weight of it all made her want to scream.\n\n\"Okay, everyone,\" Denby said, cutting in during a gap in the conversation. \"I know Lisa likes being the center of attention and all, but if I don't see a hard cock in the next thirty seconds, I'm going to go find a better party.\"\n\nThere was a moment of frozen uncertainty before smiles and laughs broke out all around. Denby smiled along with them but was surprised when it wasn't Andy who made the first move. Instead, Lisa hopped up and came over to her, grabbing her by the hands and pulling her up and out of her chair.\n\n\"I think they're all afraid of things being awkward,\" Lisa said to Den, but loud enough for everyone to hear. \"Me? Bring the fucking awkward!\"\n\nLisa pulled Denby into a hard, passionate kiss. Her best friend's tongue snaked into Denby's mouth and resistance soon became futile. Their audience both applauded and made cat calls. Den smiled into the kiss and melted into Lisa's arms. Leave it to Lisa to push the envelope.\n\nLisa broke off the kiss after keeping it up just long enough to trigger a response between Den's legs. Lisa reached around behind Den, unzipped her dress, and pulled it off her shoulders. Like Lisa earlier, Den was left standing in only a bra. Lisa made short work of that holdout.\n\nWhen the bra hit the floor, everyone cheered again, and Lisa drew Den back into their kiss. Bare breasts mashed together, and their legs and hips were soon entwined as well. Denby was slightly embarrassed by the overt display with another girl, something only Sean had been privy to seeing, but at the same time it felt so right and liberating.\n\n\"Is anyone else naked yet?\" Lisa whispered in her ear after kissing and then nibbling on the earlobe.\n\nDen, cracking her eyes and looking over her friend's shoulder, noted that Andy had pulled his hard cock out. Sean was just watching from the couch, but he was clearly hard in his pants. Leon had a hand over Vida's breast, but they both remained dressed.\n\n\"Nope,\" Den whispered back. \"Just one cock out.\"\n\nLisa's hands wandered from Den's back around to her breasts. Always sensitive and responsive, Den got a jolt from the rubbing of thumbs over her hard nipples. An involuntary moan escaped her lips. Den grasped Lisa's butt and pulled her in closer.\n\n\"Think they're too busy watching to join in?\" Lisa asked, still whispering. \"Should I just throw you in the chair and lick you out?\"\n\nDen laughed at the mental picture that conjured. She was certain the others would appreciate the show and the offer was very tempting. There was something else, however, that she'd longed for and now felt like the right time if ever there would be one.\n\n\"Tempting,\" she said. \"Actually, though, I was hoping to see you lose your virginity.\"\n\nLisa tensed ever so slightly in her arms and Denby worried that even the suggestion might have gone a step too far. Here she was, having pulled back from both Sean and the idea of giving up her virginity too quickly and for the wrong reasons, while encouraging her friend to do just that...with an audience. She feared she might have put her friend on the spot.\n\n\"You sure?\" Lisa's tone was more hopeful than uncertain.\n\nDen smiled and kissed her friend. \"Absolutely.\"\n\nShe knew everyone else was curious as hell about what they were whispering to each other between the naked PDA. Let them keep guessing, she thought.\n\n\"Alright,\" Lisa whispered. \"But he has to be okay with it, and you have to help.\"\n\nDenby wasn't entirely sure what Lisa had in mind for \"help,\" but she was good with those terms. She vividly remembered watching the interaction between Sean and her friend back during that \"date\" in the park. Revisiting that and more sounded like a lot of fun.\n\n\"Deal.\"\n\nDenby kissed Lisa once more, then they broke apart and turned in unison to face Sean on the couch. Sean's eyes widened, and he couldn't help but give them a nervous grin.\n\nHe said, \"Why do I feel like an antelope surrounded by hungry lionesses?\"\n\n\"Because we're gonna eat you, honey,\" Lisa said, sauntering off to one side of Sean. Denby took the other.\n\nDenby was aware of the others watching them, in particular Andy from his spot on the floor with cock in hand, but her attention centered on her now ex-boyfriend and \"helping\" get him ready to take her best friend's virginity. Everything about that was so weird, yet she felt strangely happy and liberated by participating. Her friend wanted it, Sean was a better match with her, and it took a huge weight off her shoulders.\n\nLisa sat beside Sean and leaned in to give him a tonsil-inspecting kiss. Sean wrapped an arm around her and gave back in kind. While they went at it, Denby knelt on Sean's other side and reached around to unbutton and remove his shirt. She ran her fingers across his bare skin, enjoying the lean muscles of his chest and torso, while pressing her breasts into his shoulder.\n\nTempting as it was, the one thing Denby consciously resisted was the urge to kiss Sean. That felt too emotional, too reminiscent of their dating relationship. If she left that to Lisa, she thought she could maintain an even perspective about what they were doing, were about to do. \n\nLisa unzipped Sean's shorts and fished out the end of his hard cock. Already, the tip was glistening with pre-cum, and Denby licked her lips involuntarily. She imagined going down on that long shaft, pleasuring him until he climaxed in her mouth. Where would that fall in the new bounds of their relationship or \"helping\" Lisa? She wasn't sure yet. \n\nSean raised up just enough from the couch that Denby was able to pull off his shorts and underwear. Lisa had a hand wrapped all the way around his cock, while he was cupping one of her breasts. Seeing them naked was old hat by now but seeing them \"together\" was still an engaging sight. It didn't seem that Sean would have any reservations performing before an audience.\n\n\"I take it this isn't the usual sort of club activity?\" Leon quipped from his seat in the opposite chair. Denby looked over and found that Vida's shirt and bra had vanished and her boyfriend's hands were casually stimulating the dark nipples on her small breasts.\n\n\"I think the club is officially over,\" Denby said.\n\nAndy added, \"Or we just call it the club's graduation to something new.\" His eyes twinkled at Denby and she could tell he was already thinking that maybe, finally, something might happen between them.\n\n\"Graduation,\" Sean said, nodding. \"Sounds about right.\"\n\nLisa, still holding Sean's cock, slid off the couch and knelt before her new boyfriend. Denby followed at a gesture from her friend. Side by side, naked, they leaned over Sean's member. Sean's expression was bemused, borderline giddy.\n\nLisa leaned forward and planted a sweet little kiss on the very tip of his cock. She then licked up the drop of pre-cum that had accumulated there. Holding it on the tip of her tongue, Lisa then leaned into Denby and shared an open-mouthed kiss. Denby accepted happily and could just make out a hint of Sean's taste as their tongues met. Somewhere behind them, Den heard Andy's approval.\n\nAfter the kiss, Lisa held Sean's cock in Den's direction. Finally, despite the change in their relationship, Denby could touch a real cock. Or she could choose to leave it solely to Lisa. No, she'd agreed to help Lisa get Sean ready for this, so anything short of intercourse was at least potentially on the table.\n\nDenby leaned forward and licked up the length of that beautiful cock, exploring the ridges of veins she'd only ever been able to look at and fantasize over in the past. It was firm while the skin still yielded slightly, warm and throbbing. As her tongue reached the tip, she wrapped her lips around the bulbous head and flicked her tongue playfully across the tip. Sean moaned in approval. It was her first big step beyond the bounds of her previous limits and in that there was a huge thrill of stepping into a bigger world.\n\nDenby took more of his length in her mouth before disengaging and letting Lisa take him into her mouth. Den shared a smile with Sean, then reached between his legs and fondled his heavy balls while Lisa continued to work him over. Again, another new experience. They were larger than she'd expected, and she was fascinated with how they moved around within the scrotum.\n\nLisa let Denby back onto the cock while she began sucking one of his balls into her mouth, leaving both girls' heads in contact with one another, cheek to cheek. This, Denby thought, was what best friends should do -- give blowjobs together. Lisa was deftly smoothing the awkward situation over by making Denby feel very welcome. Would Denby be able to do the same in the future with her own boyfriend? She'd been ready to share Sean with Lisa, but that was a situation in which they both already knew the guy very well.\n\nDenby's attention was pulled from her stray thoughts and the cock in her mouth when she felt a hand cup her breast. It wasn't Lisa's, because one of her hands was on Denby's back and the other on Sean's hip. Andy, no doubt, and Den allowed him the opportunity to feel her up. She still didn't know where she stood with him, but a little touching was certainly okay while she worked that out. Almost on cue, she felt Andy's cock brush up against her hip. Given how close she was to Lisa, he might be in contact with both of them.\n\nSure enough, when Denby passed Sean's cock back off to Lisa, Den looked back and found Andy kneeling between and just behind the girls. He'd gotten undressed completely and had an arm around each girl, both hands full of boob. If he started thrusting, he'd be getting off on the sandwich between the girls' hips.\n\nDenby was about to embarrass him by suggesting if he really wanted a turn on Sean's cock, he'd have to wait his turn. Vida spoke up before she got a chance, though.\n\n\"Andy,\" Vida said, \"stop interrupting the girls and get that fat cock over here.\"\n\nDenby looked over Andy's shoulder and saw Vida standing, her petite hardbody now fully on display as her bottoms hit the floor. Leon was still in the chair, watching the action on the couch, but his shirt was off and he was unbuckling his shorts. Andy clearly got the hint and Den chuckled at the speed with which he abandoned her and Lisa.\n\n\"Maybe later,\" he said to Denby, giving her a wink as he hurried over to attend to whatever it was Vida had in mind. Denby was a little jealous, already imagining what a girl could do with two muscular guys like that attending her at once. She wanted to focus on one thing at a time, though, and making sure this was the best possible experience for her best friend was the priority.\n\nLisa chuckled, clearly having noted the exchange as well. \"I think he's in good hands,\" she said.\n\n\"I was thinking this same about Vida,\" Den said.\n\nLisa, hand again wrapped around Sean's cock, gave Denby a long look. Den was pretty sure she knew what was coming. There was only a subtle nod between them, to which Lisa smiled and flashed the quickest of nervous, shy expressions that hadn't been seen since before the club started.\n\nLisa stood and then straddled Sean's legs. She looked back at Denby and said, \"Would you do the honors?\"\n\nDenby nodded. Of course she would. She moved between Sean's slightly parted legs and took hold of his member. Lisa began to sink downward while Denby lined him up to penetrate her. As cock met pussy, Lisa paused and Denby wiggled Sean up and down along her damp slit until the head was thoroughly coated. Lisa then continued to sink down and Denby guided Sean's cock inside. Inch by inch, the cock which she'd long expected would take her virginity instead took her friend's. Lisa's sigh and soft moans told the story of pleasure without pain, her hymen already having been broken via toy play. Denby felt only the briefest pangs of jealousy, quickly overwhelmed with happiness for her friends and honor at having played a role in it happening.\n\nClaps erupted from across the room where Andy, Vida, and Leon had clearly been watching on. Denby laughed while Sean and Lisa smiled at the reaction to the activity they were utterly engrossed in. Sean's face was blissful while Lisa's head was thrown back, eyes closed.\n\nJust like that, Denby was the only virgin left in the room. She was still okay with that. There was no sense of being left out, of being deemed lesser for it.\n\nDenby settled onto the end of the couch where she could watch Lisa and Sean side-on. From between Sean's legs, she'd been able to see him thrust in and out, but from here she could see their faces, their emotions, the connection between two people joining together. She found it far more intimate and arousing to watch their fingers touch, lips meet, eyes search.\n\nWhile the new couple settled into a groove, Vida dragged Leon off his chair and positioned the two football players standing side by side. Andy was on the muscular side for a high school guy, but Leon's muscles had the extra definition from a couple years of lifting with a college program. It wasn't difficult for Denby to imagine what it'd be like to run her fingers and tongue all over his dark skin, exploring every hard angle. That he struck her as a nice guy was icing on the cake. Vida had found herself a good catch.\n\nVida, less than half the size of either guy before her, knelt and began sucking Andy while stroking Leon. There wasn't a hint of hesitation as she worked both guys over. Denby knew the rumors of Vida's sexual exploits, but they hadn't really discussed the truth behind them in any explicit detail. Did she have experience with more than one partner at a time? Den chided herself for that hint of judgment and jealousy that bubbled up at the thought, since she herself had already played with two partners simultaneously before.\n\nVida swapped back and forth between the two cocks. Denby's inexpert opinion was that she was doing it more for show than to get either off. Priming them for something else?\n\nLisa's moan brought Denby's attention back to the other end of the couch. Sean had his lips wrapped around a nipple and their humping had slowed as Lisa savored the shift in focus. Denby knew just how skilled Sean was at sucking nipples, and she reached up and tweaked her own hard buds.\n\nAs had been the case with all their previous M Club events, seeing others get off was a powerfully arousing stimulus. Denby turned so her back was against the arm of the couch, one leg hanging off the side and the other up on the back. With her pussy splayed, she unabashedly watched her best friends fuck while her fingers danced over her folds until ultimately settling on her clit. She was incredibly slick and couldn't recall having ever been so sensitive before. Usually, she needed her vibrator to reach orgasm. Tonight felt decidedly different.\n\nLisa turned and watched. There was a look of lust and compassion in her friend's expression. Lisa whispered something in Sean's ear, to which he nodded.\n\nDen was unsure what they were up to when Lisa climbed off Sean. His glistening cock was pointing straight up. Denby could imagine tasting Lisa on that shaft, but made no move to stop her own masturbation.\n\nSean stood and Lisa took his spot on the couch, though she moved closer to Denby. She positioned her butt near the edge, spread her legs, and then leaned back into the cushions. Sean knelt between her legs and immediately went to work on her pussy with his tongue.\n\nAs Denby watched on, Lisa reached up with one hand and gently caressed the leg Den had thrown up on the back of the couch, now behind Lisa's head. Warm fingers brushed Den's calf and knee, then softly stroked down her thigh, each movement getting closer to her pussy. The contact sent sparks through Den's entire body and she rubbed her clit even harder. There was a building tension in her seeking relief and she was almost willing to do anything to find it.\n\nLisa's fingers finally reached between Denby's legs, where her friend hesitated as if to ask if it was okay to continue. Denby just smiled and gave the slightest of nods. She couldn't spread her legs any wider and there was no way she was going to stop rubbing her clit this far along in her building arousal. Lisa ran her fingers along Den's slit, driving Denby into an involuntary moan, and then slid one inside her.\n\nIt wasn't a cock, but the act of penetration pushed Den into a higher state still. Only release would free her from the ache consuming every fiber of her being. Lisa helped by adding a second finger and then applying pressure into her g-spot.\n\nDenby gasped and groaned, her legs flexing so hard her ass lifted off the cushions. Her fingers were a blur across her clit, demanding her body give up that desperate release. Everyone and everything else, save Lisa's fingers, vanished from her awareness as she threw her head back and let orgasm finally claim her.",
        "Wave after blessed wave. She knew she was moaning uncontrollably and couldn't care less about what the others might think. Never before had she experienced such a powerful orgasm.\n\nAfter Den's body collapsed, Lisa gently extracted her fingers. \"I'll have one of those,\" she said. Chuckles emerged from around the room -- clearly, they'd had an audience.\n\nDen opened her eyes and found Lisa licking her fingers clean, itself an incredibly erotic display. Sean had paused in his oral attention on Lisa, and he gave her a huge smile to go with a private wink. Across the room, Andy similarly gave her a thumbs up while Vida was busy taking a surprising length of his thick cock into her mouth. Leon just smiled and nodded.\n\n\"Thanks for the assist, there,\" Denby said as reality settled back in.\n\n\"Any time, any place, any position.\" Lisa laughed and then gasped as Sean's tongue returned to her clit. Knowing how good he was with tongue and lips on her nipples, Denby had to assume he would be equally adept at oral, even if a bit inexperienced yet.\n\nDenby shifted to her knees and leaned over to kiss Lisa. There was an intimacy to it that reminded her of some kisses with Sean. Only love and friendship could be expressed so simply.\n\n\"I want to try something,\" Lisa said when they paused in their kiss. Den settled back on her ankles to wait and see what it was.\n\nLisa gently, perhaps reluctantly, nudged Sean away from her crotch. She then hopped up and encouraged Sean to sit back down on the couch, back against the opposite end from where Denby sat. He was long enough, even sitting, that he had to arrange his feet around Denby. Once he was positioned, Lisa straddled him reverse cowgirl style, slowly sinking down on that long shaft. Almost the entire time, Lisa maintained eye contact with Denby, sharing a smile.\n\nDenby was unsure if this was all Lisa had in mind -- a more explicit view. Lisa leaned forward just enough to give her a quick kiss, then whispered in her ear. \"I want you to lick me.\"\n\nBold. Denby admired her friend's confidence and couldn't help but smile at the very idea they'd be doing something like this. She kissed her friend back. \"Lean back.\"\n\nLisa, grinning like mad, leaned back into Sean. He kissed her neck and reached around to fondle her full breasts, all while keeping half an eye on Denby to see what might come next.\n\nDenby leaned down until her head was right between Lisa's parted legs. At least half of Sean's cock was buried inside her, both it and her lips glistening with arousal. Between that long shaft and the little pink nub of clit poking out, Denby's mouth watered at the opportunities.\n\nShe reached out with her tongue and planted a long, slow lick across Lisa's clit, getting the desired response from her friend. Between approving moans, Denby continued her attention, alternating between long, firm licks and quick, light flicks. She kissed and sucked and made love to her friend. Sean, likewise, began a slow and steady thrust upward from their position, limited in his range of motion but complimenting Denby's action admirably.\n\nDenby let up on Lisa for a bit to run her tongue along the exposed length of Sean's cock, the taste of Lisa featuring prominently. She fondled his balls first with a hand and then sucking one and then the other in her mouth. Sean definitely appreciated it, but it also forced him to slow his thrusting, so Den moved on back to Lisa.\n\nThey found a steady tempo and before long Sean and Denby had Lisa writhing between them. Denby was still massaging Sean's balls, but the majority of her attention was on bringing Lisa to an orgasm every bit as big as the one she'd just enjoyed. As Lisa's moans intensified, so too did Sean's thrusting. Denby found it increasingly difficult to keep her tongue on Lisa's clit, so she pressed in harder and held on tight.\n\n\"Fuck, I'm almost there,\" Sean said, seemingly unable or unwilling to change his pace. Denby couldn't tell which of them was going to climax first.\n\n\"Please, oh please,\" Lisa moaned. \"So close.\"\n\nDenby felt Sean climax, his cock pulsing under her hand and chin. His thrusting all but stopped, his hips rising in an effort to get even deeper inside Lisa. Den, however, didn't slow a bit, her tongue flicking furiously across Lisa's clit. Lisa's hands were locked on Den's head, pulling her in tight and refusing to let her do anything but bring her over the top. Seconds after Sean came, Lisa let out a cry and her body went rigid.\n\nDen held her, tongue planted in place, until the orgasm subsided and Lisa pushed her away. Denby wiped her mouth with the back of her hand, watching in fascination while Sean's cock ever so slightly softened and some of their combined juices began leaking out. It was a sloppy mess that was simultaneously yucky and enticing. She enjoyed the taste of each of them, why should the combination be any different?\n\nMovement from the corner of her eye drew Denby's attention to the other group. Vida was still on her knees, but now was bent over on all fours. The guys had also joined her on their knees, Andy screwing her from behind while Leon's cock was probing the depth of the girl's throat. Was that what they called a spit-roast? Whatever it was, it was clear to Den that all parties involved were enjoying it.\n\nAndy caught her looking and smiled sheepishly. He then nodded toward the pile of Sean and Lisa and gave her a thumbs up gesture. It was enough to keep her from feeling at all guilty for not involving him in what had evolved into a threesome.\n\nLisa shifted up, trying to get comfortable, and Sean's cock began to fully slip out. Denby threw aside any squeamishness she might have had and leaned forward, taking his mostly soft cock into her mouth. The taste was indeed little more than a mix of those she'd enjoyed independently -- a little salty with a hint of other overtones. She was efficient in getting him cleaned up, not trying to get him aroused again.\n\nWith that done, she turned her attention to Lisa. A rivulet of thick, white semen was oozing out and Denby hastened to lick it up before it vanished too far down between Lisa's butt cheeks. Definitely a strong taste of Sean in that. She took a bit more time in cleaning up the rest of her friend than she had with Sean, but again refrained from trying to initiate another orgasm.\n\nWhen she finished, Lisa pulled her up for another kiss. Her friend's tongue probed, perhaps seeking to share a bit of that taste.\n\n\"Thank you so much,\" Lisa said softly. The earnestness in her voice was unmistakable. \"It wouldn't have been right without you here.\"\n\nDenby shifted back to give room for Lisa to move off Sean and sit between them. Sean, no longer pinned under the girl, smiled and Denby and gave her a quick nod.\n\n\"Everything you guys thought it'd be?\" Den asked.\n\nSean traded a look with Lisa that said it all. \"And then some.\"\n\n\"You should try it, sooner than later,\" Lisa said. Den could tell Lisa was being careful with her word choice, though the quick glace toward Sean's crotch said plenty.\n\nDenby said, \"Glad to hear it, and thanks for letting me help. I'm still good, but I'll keep my options open.\"\n\nLisa took Denby's hand in hers, then did likewise for Sean on her other side. Denby was glad to have such good friends. How many others could have come through everything that had happened to them and end up in a good place like this?\n\nTheir attentions turned to the other ongoing display across the room. Andy might have started getting a little self-conscious at all their attention, but he kept on thrusting. Vida's moaning suggested she was enjoying the hell out of his efforts and her hips kept grinding back in time with their coupling. Leon had a gentle hand on the back of her head while she continued to suck him off, but it was clear that was now a distant second to what she was getting from Andy.\n\n\"Now that's hot,\" Lisa said.\n\nLeon chuckled. \"She's been wanting this for weeks. Since the first time she joined your club, I think.\"\n\nVida grunted something that might have been an affirmative. Andy held her hips firmly and upped the pace and depth of his thrusting, moving so quickly it almost seemed violent to Den. Vida only moaned louder, though. Finally, Andy slammed his hips into her ass and held her tight. His expression was one of ecstasy and exertion.\n\n\"Don't think I'll get tired of watching that,\" Denby said, getting an agreement from Lisa. Even Sean nodded in approval at seeing his best friend get off.\n\n\"Leon, you're up,\" Vida said, her voice almost desperate. \"I haven't come yet.\"\n\nLeon hurried around Vida while she remained on her hands and knees. Andy pulled out, his still-hard cock glistening with their juices, and moved aside to give Vida's proper boyfriend access. To Denby's surprise, the guy didn't hesitate for an instant sinking his cock into Vida's pussy, heedless of Andy's cum all over and inside it.\n\n\"My boy loves sloppy seconds, don't'cha?\" Vida smiled, looking over her shoulder.\n\n\"It's only the second time,\" Leon said, a hint of sheepishness creeping into his otherwise hyper-confident demeanor.\n\n\"Well, you've talked about it enough since then...\" Vida leaned forward, until her face and shoulders were on the floor. A hand snaked back and began fiddling with her clit -- something Den realized was a significant step for the girl who'd professed to never play with herself much prior to joining their club.\n\nAndy stood and watched on a bit awkwardly, as if unsure what he should do next. He probably would have liked one of the girls to offer to lick him clean, but Den wasn't quite ready to go that far and Lisa didn't say anything. He crossed the room to snag a tissue from the end table.\n\n\"Leon will clean you up, if you want,\" Vida said, also having noted Andy.\n\nDenby was surprised at that offer, wondering if Vida and Leon's conversations or experiences had included that as well. Lisa's eyebrows were raised, and she had a bemused grin. Sean looked like he was enjoying the hell out of Andy's expression of discomfort.\n\n\"Uh, I'm good, thanks,\" Andy said, wiping himself up.\n\nVida chuckled. \"Someday. Someday.\"\n\nLeon, for his part, glanced up and Andy and shrugged. \"Like I said, Vee has certain ideas and you either play along or get thrown overboard.\"\n\nVida, between moans, said, \"Like I came up with that one. Ha!\"\n\nLeon rolled his eyes and started fucking her harder. The man's muscular frame flexed with each thrust. Vida, despite her petite frame, seemed built to take it. Her moans turned into whimpers and her fingers moved even faster between her legs. \"Fuck, fuck, fuck!\"\n\nThe couple were clearly experienced with one another, bodies syncing as each worked toward a quick climax. Vida came first, shuddering and moaning while her fingers dug into the carpet. Leon didn't slow to give her time to recover, though, and kept up his steady pounding until his butt cheeks clenched and he held himself deep within her, a look of ecstasy on his face.\n\nDenby enjoyed the show, but secretly wished Leon had pulled out at the end. She'd have loved the chance to see how much cum came out of that hefty black cock. Maybe another time. Who knew what the summer would bring, what opportunities and adventures? The club might officially be over, but the friendships and relationships would surely endure.\n\n\"Great show!\" Lisa clapped, and both Leon and Vida gave her slightly embarrassed but appreciative smiles.\n\nAfter catching his breath, Leon pulled out. His cock was still hard, or nearly so, with small globs of white cum clinging in spots. Vida rolled over onto her back and flopped down, knees up and legs splayed to reveal a similarly mess in her pink and brown folds.\n\n\"Thanks, babe,\" she said. \"I so needed that. Now...get to work.\"\n\nLeon shook his head and sighed. Without hesitation, he leaned over and began licking Vida's pussy clean. He was meticulous and loving in his efforts. Denby found it fascinating and just a little bit unpleasant, despite having just done nearly the exact same thing. The guy was not only tasting her and himself, though, but Andy as well. Was it something he got off on, or was Vida simply that dominant in their relationship that he obeyed and fulfilled her every whim? Either option was unexpected and intriguing.\n\n\"And here I thought the fucking was hot...\" Lisa was riveted at the display and Denby couldn't help but smile at what might be going through Sean's head. What kinks might Lisa be picking up?\n\n\"I usually make him lick until I cum again,\" Vida said, languidly rocking her head on the floor. \"If someone else wants a turn, though...\"\n\nVida glanced at Andy and giggled when he quickly shook his head no. She then looked to Sean, who similarly declined politely.\n\nVida then looked to Lisa and Denby. \"I know that look in your eye, Lisa, but I still don't roll that way. Sorry.\"\n\nLisa pouted and sent Vida's words back at her. \"Someday. Someday.\"\n\nDen didn't know if Lisa really would have gone down on Vida, but it was a funny enough exchange that she laughed along with the others. After what they'd all just done, that light-hearted moment made everything feel cool and relaxed. Even though she'd just lived it, Den had trouble believing she'd just participated in what could more or less be considered an orgy. Sure, she hadn't given up her virginity, but she'd done more than enough to be considered a full participant. Her -- the prim and proper girly girl -- and this group of friends, not one of whom would be mistaken by others at school as being sexually wild or experienced. Well, except for Vida, but hardly anyone knew she was hanging out with the rest of them.\n\nThe talk died down while everyone watched Leon finish Vida up. True to Vida's claims, he kept at it until bringing her to another orgasm. As fired up as the girl was, it didn't take all that long. Interestingly, Vida didn't offer to \"clean up\" Leon when he rose from his knees and stretched, nor did her boyfriend even glance Den or Lisa's way. He did exchange a glance with Andy as he passed en route to the box of tissues, though, and Den wondered about that.\n\nDenby grabbed her bottle of water and drained what remained in a single, long pull. She shook the empty bottle and rose. \"Anyone else need another?\"\n\nOnly Andy said he did, but he offered to join her. Again. She'd wanted to get a moment to herself but couldn't fault him for wanting to get away from the two couples. That was especially true after Lisa leaned into Sean after Den vacated the couch.\n\nDenby considered getting dressed to go up to the kitchen but that felt too prudish in the wake of their encounter. Andy, likewise, didn't get dressed. She led the way and could feel him checking out her bare ass. It didn't bother her in the least. He'd been nothing but a gentleman to her, despite the occasional kinky or suggestive note.\n\n\"That was, uh, something,\" Andy said when they reached the kitchen.\n\n\"Crazy, huh?\" Denby retrieved another bottle of water from the fridge while he took a soda.\n\nAndy nodded. \"Can't say I wasn't jealous, watching you with the others. Hotter than hell.\"\n\nDen blushed. \"Yeah, well. Lisa insisted I had to help her. And besides, you seemed to be enjoying yourself.\"\n\nHe shrugged but didn't deny it. \"Yeah, can't complain.\"\n\n\"And Leon? You know anything about that?\"\n\nAndy flushed a bit at that. \"Not sure. Just know he's not squeamish about others being around Vida.\"\n\n\"You think he's bi?\"\n\n\"Maybe.\" Andy shrugged. \"Not my business.\"\n\nDenby laughed. \"Yeah, well, it might be if you keep playing around with the two of them.\"\n\nAndy's face went crimson and Den laughed even harder.\n\n\"Relax,\" she said. \"Just messing with you. There's nothing wrong with that. I mean, obviously, you saw me and Lisa.\"\n\nAndy said nothing, taking a long pull on his drink.\n\nDenby, having fun at his expense, took a step closer and playfully ran her fingers over his biceps. \"Of course, if you were to, oh, say, suck his cock...I might be so turned on I'd have to let you fuck me.\"\n\nThe red in Andy's face may have found a new shade. There was just a hint of interest to go with the dismissive incredulity in his expression. She was teasing him, but would he consider it if she was being serious? That would be interesting.\n\n\"Tempting offer, but I'm not into guys,\" he said, voice uncertain. \n\nDenby glanced down and found his cock had swollen to half-staff. He glanced down and looked genuinely mortified at his own state. Den couldn't help but laugh out loud, despite knowing it was at his expense.\n\n\"I think someone has something else to say on that matter,\" she said, patting him on the shoulder.\n\n\"Oh God, no, I don't...\"\n\nDenby gave him a one-armed hug, all while checking out his rapidly hardening member. \"I'm just messing with you. Not that there's anything wrong if, you know...\"\n\nAndy rolled his eyes.\n\nShe said, \"We'll just pretend that's because of me. Our little secret.\"\n\nThe expression on Andy's face grew serious for a moment. \"I don't need to pretend anything with you.\"\n\nDenby felt a pang in her heart. He was putting himself out there, and right after she'd been teasing him. Worse, she didn't know how to feel about it. She liked him, had fantasized about and masturbated with him, and had even wondered whether they could make it as a couple. But something had held her back. Before, she'd assumed it was Sean, but now she realized it was more. He was a great guy, just not the one.\n\n\"I know,\" she said softly. \"Sorry I teased you. I know you'd do just about anything I asked. Believe me, I've been tempted. Still am.\"\n\nHe looked at her hopefully, but said nothing. Denby knew if she leaned in, he'd kiss her. After that, she might just do anything he wanted, which would lead beyond where her resolve had placed her limits. Still, maybe she could help him a little bit.\n\nShe set her water on the counter and placed her free hand on his chest, the other still on his shoulder. Eyes locked, she slid the one hand down his chest, over his prominent six pack, and into his pubic hair. She felt the sharp breath at her touch, marveled at the power she wielded over him if she wanted to use it.\n\nDenby brushed against his erection with the back of her fingers. It twitched, bobbing against her. The look in his eyes was pleading and hungry, despite his recent release. She reached lower and across his scrotum, feeling the weight of his balls. His breathing became heavy and unsteady. Den then dragged her fingers ever so slowly up the length of his shaft until reaching the tip. After so many times seeing him, she was finally touching that thick cock.\n\nAndy must have been having similar thoughts as he tentatively reached up to gently cup one of her small breasts. He, too, had waited a long time. That touch was electric, every bit as exciting as what Lisa had done with her earlier in front of the others. Again, the temptation to kiss him was there, yet didn't feel quite right. His cock in her hand, however, felt pretty darn nice.\n\nJust as he started fingering her nipple, footsteps approached from the stairs. Both quickly disengaged, as if they'd been in some illicit activity. Den was annoyed both at the interruption and the notion that after what they'd all just done this could in any way be considered inappropriate. Andy's expression showed a similar irritation.\n\nLisa poked her head around the doorway as if she'd expected to find them exactly as they'd just been. She noted Andy's erection with a glance but said nothing specifically about it, only giving them a sheepish smile.\n\n\"Sorry to interrupt,\" she said. \"Sean's thinking we've only got about forty-five minutes left before we need to be decent. Just in case his fam got right into a shorter movie. Better safe than, well, you know.\"\n\n\"Okay,\" Denby said, not seeing why that had been important enough to bring her friend upstairs.",
        "Lisa bit her lower lip. \"And...I need to talk to Andy for like ten seconds. In private.\"\n\nDenby cocked an eyebrow at her friend, but had no reason not to trust her. She clearly wouldn't be making a play for Andy now that she was officially in a relationship with Sean. Well, she might, but interrupting the two of them to pursue it? Not a chance.\n\n\"Sure, okay,\" Andy said, giving Den an apologetic look. He followed Lisa into the living room where they whispered well below Den's ability to make anything out. Whatever they were discussing took more than ten seconds, but not by much.\n\nAndy returned with a smile on his face. Lisa's footsteps faded back downstairs.\n\n\"You gonna tell me what that was all about?\" Den asked.\n\nAndy shrugged. \"Just a little something something. Downstairs. But you'll have to wait a minute.\"\n\nSomething, huh? Something they were all in on, except for her? Denby wasn't sure if she should be flattered, excited, or terrified. Five naked and sexually charged friends -- what could go wrong?\n\nShe gave him a challenging look, but didn't press him further. His cock, somewhat disappointingly, had softened during the interruption. Much as she'd been in the moment just a minute ago, now it seemed like it would be awkward to try and pick it back up.\n\nFrom downstairs, Denby heard a metallic twang and a bit of faint laughing. Moments later, Lisa called up, saying they were ready. Andy offered his hand, which she took, and led them back downstairs.\n\nThe family room had been slightly rearranged in their absence, with the coffee table slid back against the television stand. More conspicuously, the hide-a-bed had been pulled out of the sofa and draped with a blanket and pillows. All the others were standing around the bed, waiting on them -- no, her -- expectantly. No one had gotten dressed.\n\n\"Okaaay.\" Denby looked between to co-conspirators, eyes finally settling upon Lisa who could barely contain herself. \"What's going on?\"\n\nLisa said, \"Well, we had a quick chat and decided we wanted to do something a little special for you. All of this started, in a sense, because of you. Well, you and your mom and the promise not to have sex before graduation. And now that you can but have chosen to wait, well, we still wanted to make the occasion special.\"\n\nDenby nodded, still unsure of what they'd come up with.\n\nSean spoke up next. \"All you need to do is lay back on the bed.\"\n\n\"And we'll do the rest,\" Andy said, a sly glint in his eye.\n\n\"Uh huh,\" Denby said, though she was starting to warm up to the idea now that she had some clue as to what it might be. She let Andy and Lisa lead her over to the mattress where she scooted into the center and laid back, resting her head on a pillow.\n\n\"Believe me,\" Vida said, \"I'm jealous as fuck right now.\"\n\n\"Oh lord,\" Den said, chuckling with the others.\n\nSean and Lisa each sat on the end of the bed, one on either side. In concert, they began lightly rubbing their hands up and down her legs. It was far from overtly sexual, yet it sent shocks right up to her crotch. Eventually, their hands would have to move higher up, right?\n\nLeon sat beside Lisa. Den still barely knew the guy, but her first and second impressions had been favorable and she was willing to trust him in this. It certainly seemed the better option than awkwardly asking him to sit it out. He hesitated, searching her for permission with his eyes. She gave him a quick smile and nod, which prompted him to reach out and place a long-fingered hand upon her mid-section. Again, not explicit yet still thrilling.\n\nVida mirrored Leon on Denby's other side. The Indian girl, in a rare occurrence, looked just a little uncertain. She'd made it clear before that she wasn't interested in girls, yet here she was. Unlike Leon, she didn't look for permission. There was a bit of determined intent when she reached out, brushing her fingertips across Denby's collarbone and dragging them down between her breasts. Denby shuddered, which prompted a smile from Vida.\n\nAndy was the last to join them on the crowded bed, sliding in beside Vida up near the head. He leaned over until his face was inches from hers. Denby sensed his uncertainty, mirroring her own. Did she want to kiss him? What would that mean? She was able to kiss Lisa without it meaning more than an expression of their friendship. Could she do that with a guy?\n\n\"I was told I'm responsible for the neck up,\" he said softly while four sets of hands continued to gently touch her. \"But I'm not sure what you want.\"\n\nDenby lifted her head and gave him a quick kiss on the lips before settling back on the pillow. \"Bull. You know what I want.\"\n\nIn case he was being dense, she flicked her eyes downward. He got the hint, grinned, and shifted position so that his knees were spread around her head. His cock was already swollen as he positioned it just above her mouth.\n\nSimply giving her first blowjob -- well, aside from the little bit she'd done on Sean in prepping him for Lisa -- would have been the topper for this night's crazy activities. That she'd have to find the focus for it while so many other hands were roaming over her body? It was unfathomable.\n\nDenby reached for Andy's thick cock and ran her fingers over it, again appreciating the texture and solidity. She lowered the tip to her lips and planted a dainty kiss upon the very tip. Andy, watching from almost directly above, smiled. He reached down to brush a lock of hair behind her ear.\n\nJust as she lapped at the tip with her tongue, the first fingers brushed against her pussy. She cast a brief glance down, but couldn't tell if it had been Sean or Lisa. Maybe both? It didn't matter. Everything down there was on fire and desperate for increased stimulation, regardless the source.\n\nLeon and Vida, similarly, began to include her breasts in their roaming around her torso. The contact was soft and respectful -- two new partners exploring her body for the first time and taking their time in finding a level of acceptance. Denby wished they'd give her nipples more direct stimulation, as they were already bullet hard and eager for more.\n\nUnable to control any of the stimulation happening below her neck, Denby turned her focus to Andy. She might be inexperienced, but she still wanted this to be a memorable experience for him. It briefly crossed her mind that this cock had very recently been buried in Vida's pussy, cleaned only with a dry tissue. Any squeamishness at that notion was shoved aside in her desire to get him off. Besides, she'd tasted both Lisa and herself on more than one occasion. When she wrapped her lips around his cock and let her tongue press against him fully, she realized she could hardly taste anything.\n\nAndy did his best to accommodate her efforts, positioning himself to give her control and access without craning her neck too badly. He was so thick that it was impossible to take more than a fraction of his modest length into her mouth at any given time. Instead, she focused on sucking the bulbous head while stroking the rest of his shaft by hand. Intermittently, she took him out of her mouth entirely to lick and suck on his balls. Andy seemed appreciative of everything.\n\nDenby noticed that the hands on her breasts had been replaced with lips and tongues. With a quick glance, she noted that both Leon and Vida were working her over, a mouth for each nipple. Their heads were pressed together to accommodate the other. While neither alone had Sean's skill with sucking her nipples, their combined efforts were incredibly stimulating.\n\nThe couple effectively blocked any view of what was going on between her legs. Much like with her nipples, she was pretty certain lips and tongue were beginning to work their way around her labia with the occasional flick across her clit. Was it Lisa or Sean? Or were they taking turns? Did it matter? Whoever was licking her was clearly doing so with good intentions.\n\nDenby returned her attention to Andy -- sucking, licking, stroking, and fondling. There was something especially satisfying in playing with a man's cock and she had little doubt tonight was only the beginning of her journey. Whose cock would be next? They still had the summer ahead, so perhaps she'd hook up with Andy again. Or Sean with Lisa. That seemed almost a foregone conclusion. Would she meet someone else?\n\nSeveral minutes of utter bliss passed. The hum in Denby's body continued to build steadily, yet whoever was working on her clit was holding back just enough to prevent her from going over the top. At the same time, no amount of sucking and stroking Andy seemed to be enough to get him to climax, either. He had gotten off not that long ago, and she knew that guys couldn't always go again right away. She was beginning to fear she'd wear out before he could be satisfied.\n\nA pressure at her pussy got Denby's attention -- something much more substantial than a finger was beginning to penetrate her. Her first thought was that it was Sean, driven by the moment to have sex with her despite her stated desire to wait. Indignation and anger swelled, even if it was in direct contrast with her body's craving to allow it. She pulled Andy's cock from her mouth and raised her head...and found Sean's head still buried in her crotch. Lisa, however, was sitting upright down there and must have seen the startled expression on her friend's face. Lisa lifted up Denby's dildo, the Sean look-alike, and gave an \"is this okay\" look.\n\nDen should have trusted her friends better and the relief was immense. She smiled, nodded, and dropped her head back on the pillow. Quick as she could get him lined up, Den fed Andy's cock back into her mouth and found that carefree euphoria.\n\nThe dildo again teased her pussy. Given her state of arousal, it slid easily inside. Lisa worked it gently at first, probing a little deeper with each \"thrust\" until it was as deep as it could go. The sensation of being filled pushed her to another level and she tried to push her crotch back into it. Lisa transitioned into a slow, steady rhythm.\n\nDenby lost all concept of time with the countless sources of stimulation. Lips and tongues worked both nipples while hands roamed over her arms and legs and belly. Sean's tongue had built to a fevered pitch over her clit while Lisa fucked her with the dildo, satisfying that need which wouldn't be met any other way this night. Andy's cock was as much a distraction as participant, giving her the only avenue of active response.\n\nFinally, blessedly, that elusive second orgasm of the evening began to build in earnest. She had to stop sucking Andy as her body tensed and uncontrolled moans escaped her lips. All the participants picked up on her response and increased their efforts just a little more. It was enough and she came with a furious crescendo.\n\nAs the multiple waves subsided and then passed, Denby collapsed, spent. She cracked her eyes to find Andy stroking himself feverishly, inches above her face, while he grinned broadly.\n\n\"Oh. My. God.\" It was all she could managed.\n\n\"That was awesome,\" Andy said, his words strained.\n\nThe hands and lips and dildo all began to retreat from her body. Eventually, she would look everyone in the eye and thank them, but at the moment her attention was solely on Andy. She still wanted to help, even if she knew he was already on the cusp.\n\n\"I want it,\" she said, giving him a sly look.\n\nAndy nodded and aimed at Denby's mouth as she opened it for him. She reached up to gently cup and massage his balls, careful not to interrupt his aggressive stroke. Her touch must have been enough to set him off, as she felt him contract under her fingers, followed a moment later by the first warm spurt of his semen splashing in her mouth. It was a bit tangier than she'd experienced with Sean, but not off-putting. As she tried to swallow, a second and third smaller spurt landed across her lips and cheek. He squeezed out another drop which dangled from the tip until she reached up to pluck it away with her tongue.\n\nLisa removed the dildo she'd been licking clean from her mouth, pointed, and said, \"I think you missed a little there.\" \n\nShe set the toy aside and crawled up Denby's body, dangling breasts dragging along the entire length. When she got close enough, Lisa smiled and gave Denby a gentle kiss on the lips. She followed that by licking the remnants of Andy's cum from Den's cheeks before kissing her friend again. Denby had loved kissing Sean, but this probably superseded all of those as her all-time favorite.\n\nFinally, Lisa got off, giving Denby the space to take in her surroundings. Everyone else seemed very satisfied with the results of their efforts. Sean gave her a wink while Vida and Leon simply grinned. Andy knelt beside her and gently held her shoulder.\n\n\"That was... Just wow.\" Denby didn't know what else to say. \"Thanks.\"\n\n\"Thank you,\" Sean said, clearly speaking for all of them. \"You started all of this. Seems fitting it should end with you.\"\n\nDenby felt a pang of sorrow. The club really had been something special, even if it had led to some troublesome situations and ended her relationship.\n\n\"It was quite a ride,\" she said, sitting up. \"I'm gonna miss the club.\"\n\n\"Ah ah,\" Andy chided. \"Remember the first rule.\"\n\n\"There is no M Club.\" Nearly everyone said it in unison, bringing a happy chuckle.\n\n\"Exactly,\" Den said. She looked around, so grateful for such a group of close friends. She took Lisa's hand and patted Andy's shoulder. \"Pretty sure if there had been any other rules, more than a couple would have been broken, too. So, now that the club which doesn't exist is gone, anyone have any ideas for what to do this summer?\"\n\nLisa got a glint in her eye and immediately opened her mouth. \"I was thinking...\"\n\n#\n\nEpilogue \n\nNineteen months later...\n\n\"Happy birthday, Ryan,\" Lisa said, giving him a quick hug that flustered the now eighteen-year-old boy. \"Good to see you again.\"\n\n\"Thanks for coming,\" Ryan said.\n\n\"Take it easy, bud,\" Sean said, giving his brother a fist bump, then closing the door to his parents' house behind them.\n\nOnce in the car and on the road back to campus, Sean gave Lisa a pointed look. \"You gonna tell me what's been on your mind all evening? I've been getting weird vibes.\"\n\n\"Oh, nothing special.\" She sounded unconvincingly innocent. \n\n\"Sure.\"\n\n\"Being back at your house just brought back some memories.\"\n\n\"I'll bet it did.\" Sean had a lot of good memories about those days as well, and they hadn't dimmed in the light of new memories made in their first two years of college. \n\nLisa reached over and began massaging his cock through his jeans. He responded quickly to her touch and began thinking of somewhere isolated they could park for a bit. They'd never make it all the way back to campus. \n\n\"Remember the notes you took?\"\n\nSean gave Lisa another look and found that glint in her eye. \n\n\"Yeah...\"\n\n\"Still have them?\" \n\n\"Maybe.\" He did, and he knew exactly where they were. \n\n\"Well, I was just thinking. Since Ryan is eighteen now and so is my sister...\"\n\nSean boggled. \"You can't be serious.\"\n\n\"Why not? Scrub the names, send it anonymously. Maybe the club lives again, maybe not.\"\n\n\"You are the ultimate trouble maker.\" \n\nLisa began unzipping his shorts. \"That's why you love me.\"\n\n\"Among other reasons,\" Sean said, signing in mock exasperation. \n\n\"I'll make it worth your while.\"\n\nLisa had her fingers wrapped around his erection and began fondling despite the tight quarters inside his jeans. \n\n\"Maybe. I'll think about it. But you'll have to be very convincing.\"\n\n\"Mmm... Challenge accepted.\"\n\nThe End\n\n#\n\nAuthor's comments --\n\nFirst off, I'd like to thank all of my readers. The kind comments and fan mail go a long way toward making the effort worth it. Even if you never leave comments, it's still gratifying to see that people are reading the chapters and hopefully... Ahem, yeah, doing that to them as well. \n\nI don't usually write series, much to the disappointment of many who call for sequels to my most popular stories. This, however, was a story clearly too large for a single outing. When I conceived the idea, I outlined the entire series and stuck to it remarkably well. Some readers didn't like certain choices or voiced encouragement for specific things to happen. I respect all that (especially the passion and attachment to the characters), but as often as not I'd already written chapters ahead of what was published or it simply didn't fit with the big picture. The characters had arcs and the seeds of many of those were planted from the very beginning.\n\nLike most of my stories, I left this with an opening for more to come or at least as a jumping off point for the readers' imagination to carry on. I have no plans to write more with these characters, but I'll always leave open the possibility. Right now, I have too many other ideas that have patiently been waiting their turn to be realized.\n\nFeel free to follow me if you'd like notifications when I publish something new. Hopefully, it won't take quite a long as it did to finish this final chapter.\n\nUntil next we meet in story,\n\nWatchingCloud"
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "masturbation",
        "teens",
        "exhibitionist",
        "party",
        "naked",
        "orgy",
        "threesome",
        "virginity",
        "graduation",
        "sharing partners"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/m-club-ch-20"
}