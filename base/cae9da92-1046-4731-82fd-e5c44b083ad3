{
    "title": "Poison Ivy Ch. 08",
    "pages": [
        "ETA: This is the revised version of Chapter 8. After chapter 9's revision is posted, I'll post chapter 10 in two parts, as well as a teaser for Aella and Trevino's story, which I plan to continue after the conclusion of Ivy and Hunter. If you're new to the series or are re-reading them, keep in mind that some details have been changed and some events have been added, so it may not line up with the next chapter until both revisions are posted. Thanks for sticking with me!\n\nFor any newcomers, this chapter starts right in the middle of some pretty serious action, so you might want to go back and catch up before you tackle this one. This is an Omegaverse story, so if you're not familiar, maybe google it, check out Alpha/Beta/Omega dynamics and the like. This story is rated R for language. ;)\n\nETA and Trigger Warning: Thank you to one of my readers who pointed out that I should have included a warning. There is a torture scene in this chapter, and it's quite graphic. It's towards the end of the chapter. My apologies for not including this in the original version. \n\nIf this chapter had a soundtrack, it would be: \n\nFlood, by Saltillo, Richard Walters, Ascension\n\nAlways, Killswitch Engage, Disarm the Descent\n\nSay You'll Haunt Me, Stone Sour, Audio Secrecy\n\nSeparate, PVRIS, All We Know of Heaven...\n\nHaunted, DIAMANTE, Coming in Hot\n\n......................................................................\n\nThey had to go.\n\nThere were a million reasons why they should get the fuck out of that awful place. Gunshots still rang out from behind the concrete walls of the asylum she'd been kept in for god only knew how long. Weeks, maybe? A month? It was hard to tell.\n\nGuards were starting to stream out the front and back doors. Hunter's men, who seemed to be everywhere and nowhere at once, were merciless and relentless. They drove back wave after wave of the encroaching guard. Ivy didn't know who they were. She just knew they were with Hunter, and they were protecting the pair, for the time being. But the guards couldn't be held off for much longer, and she had no doubt that backup had already been called in. The longer they stayed, the more danger they were all in. The more danger Hunter was in.\n\nThat kiss, though.\n\nThat kiss was everything. \n\nIvy didn't protest or fight the possessive way his lips moved over hers. She knew full well that they really had to get the fuck out of here, and she felt the instinctive urge of her fight or flight response to put as many miles between her and Maverick as possible. But that was all secondary to the way Hunter was crushing her to him, devouring her, as his hands moved beneath her scrubs and stroked at her bare skin. The touch wasn't sexual (although the kiss absolutely was), and through the bond she could sense that he needed to be skin to skin with her. He was scanning her body for injuries. Reassuring himself that she was real and whole with the way his fingers trailed over her hips, up her sides, across her chest, around her neck, finally ceasing when they reached her face to once more hold her steady as he poured himself into her as much as he was pulling her back into him.\n\nAnd fuck, that kiss. Actually, make that Kiss. With a capitol fucking K.\n\nHunter slanted his mouth over hers as he bit and sucked her lower lip between his teeth. His tongue demanded entrance, and when she gasped at the feel of his cock pressing against her, accentuated by a not-so-subtle rock of his hips to show her what she was doing to him, he left no part of her mouth un-tasted.\n\nShe was drowning, suffocating. And it was going to be the sweetest death she could have asked for.\n\nWhen he finally did let her up for air, burying his head into the nape of her neck to sniff and bite and suckle the skin surrounding his claiming mark, she moaned and forgot what it was she'd needed to tell him. He nipped and kissed his way back up her throat and across her jaw, and just before he was about to take her mouth again...\n\n\"Aella!\" She gasped, bringing him to a sudden halt. It was like a bucket of cold water had been thrown over them both, and judging by the amount of pure chaos happening around them, it couldn't have come a moment sooner. As if realizing where they were, Hunter's eyes narrowed and swept the area as he banded his arms behind her back and spun her around. Holding her tight against him and using his palm to tuck her head beneath his chin, he turned away from the fight and took off in the opposite direction. She heard him bark an order to his men, and the sound of gunshots slowly trickled to a stop as they all melted into the shadows.\n\nSuddenly thrust back into reality, her heart pounding in her ears, Ivy panicked. Kentucky had hinted that Aella was safe, but if she wasn't, if Maverick still had access to her...\n\n\"Hunter!\" She said softly, not wanting to give away their location, but needing to tell him about the danger her friend was in. She fought against his hold, trying to move her face away from where it was nestled in the crook of his neck so she could look around. \"Hunter wait, he's keeping Aella somewhere, Kentucky said she was safe, but I need to make --\"\n\nHunter growled threateningly. Ivy stilled, some biological response hijacking her body and making her respond to the sound with total submission as her brain fired off warning signals to the rest of her body. Angry Alpha alert! Angry Alpha alert! \n\nOkay, so they'd talk later.\n\nSensing her distress and unease, Hunter began purring as he rushed them away from the fray and toward a waiting vehicle. She clung to him, her legs still wrapped around his waist and her arms circling his neck, absorbing the full force of his calming reverberation, a sound she had missed much more than she'd ever admit, through all the places their bodies touched. Slowly, her pulse and breathing returned to normal.\n\nThough the majority of her mind had drifted into some safe haven, lulled to distraction by the loud purr he was projecting, a tiny sliver of her consciousness was present and absorbing details she'd have time to process later. Hunter had opened the back door of a large, black SUV and had climbed in, shifting her slightly while keeping her pressed to his chest. When she tried to lift her head again, he firmly tucked it back under his chin, his purr growing stronger until her muscles relaxed and she'd closed her eyes.\n\nShe heard more doors opening and closing, and felt the vehicle shift with the weight of more bodies, the air now saturated with potent, provoked Alpha scent. She squirmed in Hunter's lap, the smell making her uncomfortable and agitated, her unease slicing through the soothing sound emanating from her own Alpha's chest. Hunter's arms around her tightened, his voice shushing and cooing reassurances in her ear. Slowly, she settled again, burying her nose into the crook of his neck to drink in his scent, the only one that mattered.\n\nShe hadn't even been aware of how much she had missed his smell, only now realizing that there was a strange sort of balance that was inexplicably gratifying when they were close. He breathed in her scent, and she breathed in his, and the bond hummed contently, sensing all was as it should be.\n\nThe agitated Alphas began talking to each other. She heard the words, but didn't really understand them, and didn't care to. The part of her brain that was still working slowly shrank down, bit by bit. Her mind was in the process of shutting off completely.\n\n\"How many?\" Hunter asked.\n\n\"Seven dead confirmed, nineteen wounded. We tried to be as nice as we could, but they weren't having it,\" someone answered. His voice was like hot chocolate, sweet with a bit of darkness.\n\n\"Is she hurt?\" The deep, growly voice that had taken her to Hunter asked.\n\n\"Her lip's been split. Bruises on her neck and arms. And she has a fucking gun.\" Hunter seethed. Were they talking about her?\n\nHis purr altered and became something that had her heart rate climbing again. The driver said something she didn't catch, and he settled, the purr still slightly off-kilter but balanced with the hand that began stroking through her hair comfortingly.\n\n\"Did you find him?\"\n\n\"He was gone by the time I got in there. Fowler didn't see him leave. He was either hiding in one of the patient rooms, or he got away somehow,\" Hot Choco answered.\n\n\"It's fine. I was looking forward to hunting him down anyway.\" Hunter. Hunter's going hunting! She thought hysterically and giggled. Her Alpha shifted her to look at her face with a concerned expression, kissed her forehead, and tucked her head back under his chin.\n\n\"The kid?\"\n\n\"Dead when she came out. Kinda looked to me like he'd been defending her.\" This from the growly-voice. Hunter grunted, unimpressed. A flash of lifeless amber eyes appeared and then disappeared before she had time to process it.\n\n\"She's worried about Aella.\" Hunter again. Aella! Yes, I'm worried about Aella! \n\n\"Trevino just got to the safe house with her. She'll be there when we arrive.\" This from Hot Choco.\n\nIvy didn't know who Trevino was, but if he'd brought Aella to a safehouse, he was all right in her book.\n\nAella was safe. Hunter was holding her. The three Alphas kept talking, but their voices grew more and more distant with every passing second. She nuzzled deeper into the comfort of his arms, and promptly fell asleep.\n\n...............................\n\nHe felt the moment Ivy drifted off. He let the timbre of his purr soften, confident now that she was sufficiently settled. It had been so fucking hard to maintain his own composure, when all he wanted to do was fly into a murderous fucking rage at what he had found in the room they had kept her in. The evidence of a struggle. Her torn dress. The smell of another Alpha, both in the room and on her. On her. \n\nShe shifted in her sleep with a soft sound of protest. He realized he'd been gripping her too tightly as he remembered the terrified screams echoing from her side of the bond before they'd stormed into the asylum. He forced himself to relax his hold and continued talking in a low voice about the logistics of their next move. Their priority was tracking Maverick. He wanted him dead, and he wouldn't be happy until blood spilled out of the torn place where Maverick's dick had been. The same dick the evil fucking asshole had forced into her. Adrenaline coursed through his veins, fury climbing to unmanageable levels, and he couldn't stop his fingers from digging into her sleeping form...\n\n\"You're going to hurt her.\" Fowler put his hand on his shoulder, bringing him back down to earth. He didn't want anyone's fucking hands near her, but it grounded him just enough.\n\n\"I'm going to rip him to shreds,\" he growled, shifting her away from the other Alpha.\n\n\"You will, Boss.\"\n\nThe car was silent for a while, the feel of smooth pavement passing under the wheels the only thing lulling him into temporary pacification. The need to reclaim his Omega, to replace the other Alpha's scent with his own, ran through his veins like it was stronger than blood. Stronger than breath. Stronger than his will to live.\n\nHe pulled the gun from the waistband of her god-awful scrubs. He would've stripped her out of those fucking things if it weren't for the other Alphas. As it was, he was getting more and more wary of their proximity to Ivy. His instincts were taking over, the need to protect and claim growing stronger, blocking out all logical thought. His focus on projecting the calming purr was the only thing keeping him sane.\n\nSensing his growing agitation, Fowler shifted away from the pair as much as he could, assuming a non-threatening position facing the window. Pyle kept his gaze on the road, not wanting to risk making eye contact with the feral Alpha cradling his precious Omega in the backseat. \"Almost there, boss,\" he said quietly.\n\nAlmost there. \n\n.......................\n\nIvy groaned as someone jostled her awake. She had been sleeping so well. When was the last time she'd slept like that? Without being drugged, that was.\n\n\"Wake up, precious,\" a familiar voice cooed in her ear. Her eyes shot open, the events from earlier coming back to her in a rush. \"Hunter!\" she tightened the limbs that had been draped over him while she slept, clinging to him, needing to be as close to him as was physically possible.\n\nIt took her a moment to realize something was wrong. His muscles were tense, his posture rigid. Slowly, his ataractic purr became something else. Something predatory and animalistic.\n\n\"Hunter?\" Her voice was lost in the new vibration he was projecting, both a warning and a promise. She shivered. His arms around her tightened as he lifted her out of the SUV and began carrying her toward the open door of a cute looking bungalow. Several chairs and couches were spread out on the covered front porch, with a two-seated swing just to the left of the front door.\n\n\"I can walk,\" she told the scowling Alpha. His scowl deepened, and she pressed her lips together. Apparently, she wouldn't be walking. She knew how to pick her battles, and right now, she didn't want to test the temper of the suddenly furious giant clutching her tight to his chest.\n\nHe carried her through the door and down a dimly lit hallway. Pictures decorated nearly every inch of the dark stained wood walls, all of several children in different stages of life, with full family portraits sprinkled throughout. The burly bearded Alpha she had met earlier stood next to a gorgeous brunette with startling green/gold eyes in each one, their family growing in size as they progressed down the hallway. The last pictures showed a happy, smiling family of six on a beach somewhere. She gawked at the Alpha's naked torso, covered with colorful tattoos that swept up his side and down his arms. And gawd, the sheer size of that man! He might even be bigger than Hunter.\n\nSeeming to sense her thoughts, her own Alpha growled a low warning. Her thoughts immediately skipped over to what she knew Hunter looked like naked, and her face warmed as she felt heat pool in her core. They stopped in front of a closed door, and he finally put her down. She swayed slightly once she was on her feet, and he put a steading hand on her back. He knocked twice, looking impatient and agitated. The door opened slowly, and a small, delicate face peeked out.\n\n\"Aella!\" Ivy cried, and the door opened wider, the older Omega's eyes sparkling at the sight of her friend. They threw their arms around each other, sobbing with relief. Ivy didn't understand the sudden comradery she felt towards Aella, but she wasn't going to question it, either. It felt good to have a friend, and the sick churning in her gut that had been there since Maverick had made her watch the awful video of Aella being tormented, was slowly melting away.\n\nThey separated, Ivy looking behind her into the small room with soft shades of blue fabric decorating the windows and bedspread. The space was comfortable and warm. A young boy sat on the edge of the bed, watching them closely. Dark hair covered his strangely old eyes. He was sixteen, maybe seventeen years old. It was hard to tell, with the strange sense of sadness surrounding him. Behind him, seated on an oak rocking chair, another Alpha held Aella's baby in his arms, rocking her gently. He was looking past her, at Hunter, with only the barest hint of a smile. He slowly nodded, and Ivy felt a big hand on her shoulder, drawing her away from the room.\n\n\"We'll talk later,\" Aella said, winking at her before softly closing the door. Hunter led her down the hall with a possessive hand on the back of her neck, pushing her through the door at the very end. Barely noticing the honey and suede d\u00e9cor of the cozy master bedroom and attached bathroom, Ivy spun around, suddenly confronted with her Alpha's furious storm-cloud eyes. He stalked toward her, walking her backward until she was pressed up against the cream-colored wall. The palms of his hands slapped against the wall on either side of her head as he caged her in, leaning down until their noses were almost touching.\n\n\"I can fucking smell him on you, Ivy,\" he growled. She reared her head back, as if struck, hitting the back of her head against the plaster behind her.\n\n\"Ouch! Fuck. What the fuck is that supposed to mean, Hunter? You think I --\"\n\nHis hand clamped down on her mouth, muffling the rest of her indignant sentence. \"No, precious girl, I don't,\" he murmured, gentling his tone. He twisted his hand so that it was gripping the back of her neck and pressed his forehead to hers. \"But that doesn't mean I'm not going to fuck his scent off of you.\"\n\nShe sucked in a breath and put a hand on her lower belly, where a cramp was slicing into her. The now-familiar feel of slick dripping from her pussy to coat the inside of her thighs in response to his rumbling growl made her groan. Hunter's hands found the waist of her scrub bottoms, and he tugged them down, lifting her out of them and pinning her against the wall. Her hands curled around his muscular shoulders, searching his face as he worked his own dark fatigues down his hips.\n\nHe maintained contact the entire time, as if he thought she might run away or disappear if he allowed her even an inch of space between them. When he had wrestled his pants down enough to free himself, he gripped her waist and lifted, urging her to wrap her legs around his waist as he lined himself up. She felt the head of his cock, hot and smooth and thick, nudge against her opening, and when he tunneled into her with a powerful thrust of his hips, she moaned and closed her eyes.\n\nHow had this happened? How had he broken through nearly every barrier she had tried to throw up around herself?\n\n\"Give me your eyes, Ivy,\" the big bully demanded. She did, but only because she wanted to. She'd had quite enough of being bossed around and manhandled by giants for the night, thankyouverymuch.\n\nHer breath caught in her chest when she met his gaze. Understanding that what she saw written so clearly on his face was a form of surrender, she bit her bottom lip to prevent herself from crying. She was always crying these days, it was ridiculous. But it was fucking hard not to.\n\nHunter had torn down walls of his own for her, making himself vulnerable so that she could see him, truly see him. She saw his pain, the anguish he'd been in while she'd been with Maverick. She saw the fear that had driven his actions and led him to her, his fear for her. His adoration and devotion.\n\nNo one had ever looked at her like Hunter was looking at her now. Like she was someone worth fighting for.\n\nSomeone worth coming after.\n\nShe brought her hand to his cheek, marveling at the way her skin contrasted with his. His darker, tanner, and rougher. He hadn't moved yet, simply held her still, his cock throbbing inside of her, and she knew he wanted to move. Knew he was holding himself back. She touched his lips, remembering the day he had stormed into her little med tent, all the way back in Torrin. The way his breath had skated across her face, the way she had nearly lost her balance when she'd experienced his intoxicating scent for the first time. How long ago that all seemed now.\n\nBefore she even realized what she was doing, she had leaned forward, pressing her lips gently to his. It was the first time she had ever kissed him before he had kissed her. Threading her fingers through his short, dark hair, she pulled him into her, deepening this spontaneous display of affection, wanting him to know what she couldn't even admit to herself.\n\nHe groaned into her mouth, finally moving inside of her, and the push and pull of it, as strong and overpowering as an ocean tide, was too much. It was too much, and she could do nothing except hold on. Hold on while he drove into her. Hold on while he took what she was finally ready to give. Hold on while he dragged her to the edge, and then she was tumbling over, crying out as little sparks of electricity crackled over her skin, and still he didn't stop.",
        "Dizzy from orgasm, Ivy found herself free from the wall at her back, her legs still wrapped around Hunter's thick waist. Walking across the room to the domineering four-poster bed, he laid her out gently, unwrapping her limbs from him like a garment. He was being so careful with her. Like she would break. Like she was already broken\n\n\"Hands and knees, Ivy,\" his breath fanned against her ear, her pussy releasing another gush of slick at the dark promise in his voice. She hesitated, but he did not. So different than the tender way he'd handled her just moments before, his rough hands ripped through the repugnant green material until she was free of the awful scrubs she'd been living in. She gasped, not from his sudden shift in his mood, but from the way her body suddenly released all the tension she didn't even know she was still holding onto. She hadn't realized until that moment how suffocated she'd felt, wearing the same clothes she'd been drugged, terrorized and nearly raped in.\n\nHunter pulled away slightly, and she saw his gaze scan down the length of her body, fury flashing across storm-cloud eyes like lightening as he took her in. She knew he was taking inventory of her injuries. His eyes tracked the bruises across her body. They wrapped around her neck where Maverick had nearly strangled her with his belt, spotted across her breasts, torso and hips where his fingers had dug into her during his rough handling, and joined the scrapes and split skin on her knees.\n\nHer thoughts threatened to drift to the friend who had sacrificed himself for her, but before they could, Hunter had her flipped over, tugging on her hips until her ass was raised in the air. Panic struck when he put a hand on the back of her neck and pushed until her cheek was pressed into the mattress. This was too close to how Maverick had arranged her just hours earlier. Just hours? \n\n\"No,\" she breathed, trying to shift her weight to flip around. Hunter shushed her, a soft purr accompanying the fingers stroking through her hair until she calmed.\n\n\"You are not there anymore, precious. You will never be there again. Only with me. You will only ever be with me. I promise you, Ivy.\" He waited until she nodded her consent, and she felt him push into her once more. Expecting him to rut, to fuck her, she was surprised when he moved slow, letting her feel every inch of his thick length as he pumped into her. Every time he bottomed out, he touched a place inside of her that drove her to the brink. She wriggled her hips, trying to goad him to move faster, but his hand on the back of her neck tightened, and she stilled. She got the message. The big bully was showing her that he was in control, that he would set the pace, and would quicken his thrusts when he was ready to, and not a moment before.\n\nThe impulse to submit, to hand herself over, warred with the desire to fight against his dominance. She couldn't be sure which side would have won. Before she could make a decision, his wicked touch worked its magic, expertly moving across her skin to manipulate her pleasure. With one hand remaining on the back of her neck, pinning her to the bed, his other reached around to fondle a breast. He pinched and rolled her nipple between his calloused fingers, and she felt the sensitive bud tighten and tingle. There was a bite of pain that only amplified the pleasure, and he expertly brought her right to the threshold, giving her just enough of what she could handle. When he moved down to strum her engorged clit, moving with the same torturously slow rhythm, she exploded again, stars dancing from behind her closed eyelids.\n\nShe whined in protest as she felt him pull out, the place where he had been replaced with a cold, hollow feeling, her inner walls still clenching around a suddenly empty space. A moment later, two thick fingers filled her, pumping in and out as he trailed a line of kisses down her spine. His fingers, now soaked with her slick, moved up until they were circling her other hole. Holy shit! \n\nHe pressed against that tightened ring, and she squirmed and panted, trying to move away. He'd tried this once before in Torrin, and yeah, okay, it had been kind of hot. But for him to do this now, when she was already engulfed in sensual overload, was too much.\n\n\"No, Hunter, I can't --\"\n\n\"Shhh. Relax for me, Ivy.\" He slipped back into her, the copious amounts of fluid gushing from her core easing his passage. Thrusting his hips a little faster now, he murmured reassurances and praise, all the while firmly pressing a slick-covered finger against the barrier to No-Man's-Land. His deep voice filled her up, blocking out everything else, until her world was made up entirely of Hunter and his total dominance of her body. The moment she relaxed, he pushed his finger past the tight ring of muscle, working it in to the first knuckle, and then the second, and then he was pumping one finger in and out of her ass in the same steady rhythm of the full, strong strokes of his cock. Too soon, she was coming again, crying out, her voice muffled as she buried her face into the mattress, tears leaving two small wet spots below her.\n\nStill, he didn't stop. Hunter began to quicken his pace, taking advantage of her pliant post-orgasmic state to add another finger, stretching her out just to the point of pain as he pistoned his hips. Digging the fingers of his unoccupied hand into her hips, he pulled her back as he drove himself forward, sinking the thick length of his cock deep into her as her pussy spasmed and pulsed around him. She tumbled from one orgasm to the next, both loving and hating the way he filled her up so completely. He was ripping her apart in the best of ways, and when she finally sensed him thicken and throb inside of her, when she heard the deep, masculine sound he made when he came and felt the knot at the base of his cock expand, she came with him, harder than she ever had before.\n\nComing back to herself slowly, she felt the fingers still lodged deep in her ass slowly slide out. Okay, so apparently, she really didn't mind having him breach that unexplored territory, although she'd die before admitting that. Back to his careful, soft movements, he gently jostled her until they were both tucked beneath the covers. He molded himself to her, his big body curling around hers, shielding her and protecting her. One strong arm wrapped around her middle while the other banded across her shoulders. His cock still pulsed inside of her, locked in place by his knot. She was so deliciously filled up by him, by the hot spurts of cum that her body continued to milk from him.\n\nAny other time, she'd bristle at the way he'd handled her. Any other time, she'd be annoyed and put off by his gentle treatment, like she was a baby bird. But after everything they'd been through, she just didn't have it in her to fight the way her body sank into his, drinking up his warmth and affection. Giving herself permission to take the comfort, safety and affection he offered, her eyes closed, and she murmured intelligible words of contentment.\n\nShe fell into the sweetest of dreams, one where his fingers played across her forehead, stroking her jaw, tucking loose strands of hair behind her ear. \"I love you,\" she whispered, just before the dream slipped away, tucking her into a deep, empty abyss of sleep.\n\n...........................................\n\n\"What am I looking at, exactly?\"\n\nPyle glanced at Fowler, exchanging an uneasy look with the rugged Alpha. All four of them were still dressed in their dark fatigues, alert and ready for combat, despite the safety of their location. Ivy was tucked into bed in the master suite of Fowler's summer cabin, which they'd been utilizing as a safehouse, sleeping soundly. Trevino's dark, almond shaped eyes watched them closely as he leaned against the fridge, as silent and brooding as ever.\n\n\"It's from her medical file. This is a record of the drugs they were giving to her.\" Pyle looked pointedly at Hunter, then back down at the thick manila folder on the counter. He removed the top page and slid the piece of paper closer to Hunter. There were more than a dozen medications, with doses and routes of administration listed by each one. Pyle pointed at the beginning of the list. \"These,\" he said, dragging his finger to about three-quarters of the way down the page, \"are all sedatives. Benzodiazepines, barbiturates, a few anti-psychotics. Your regular, run-of-the-mill sleepers.\"\n\nHunter nodded slowly, despite the scorching fury beginning to heat his skin from the inside out. He fucking knew something had felt off. When he had been able to feel her clearly through the pair-bond, something about her had felt... muffled. Muted. He had expected this, but it was no easier to stomach. \"And these?\" he asked, pointing to the last drugs on the list.\n\nPyle looked to Fowler again, who stepped forward. \"Now, just remember,\" he growled in the singular growling tone of voice he had. \"We're going to get this fucker, but all in good time. No need to go raisin' fuckin hell around the town, right? We stick to the plan. The girls need to rest, and we can't move them just yet.\" Fowler tugged nervously at his unruly black beard. Hunter felt hot strokes of anticipation dance up his spine, a sense of foreboding dropping an anchor in his gut. He placed his palms on either side of the paper. \"Tell me.\"\n\nPyle cleared his throat. \"It's a potent cocktail of synthetic hormones and fertility drugs.\"\n\nThe room was deathly quiet for two beats too long. Trevino cursed quietly from his corner of the kitchen. Aella's baby cried out from the other room. Hunter fell onto the stool behind him, too furious to even speak.\n\nMaverick had been trying to force her into estrous.\n\nHe had planned to impregnate her.\n\n\"Hunter.\" Trevino spoke coolly, his rich, deep voice sharp as shards of ice as he stepped forward. \"He had her for nearly two weeks.\"\n\nHunter narrowed his eyes at the sniper, not understanding.\n\n\"It didn't work.\"\n\nPyle exchanged a knowing look with Trevino, nodding as he turned back to Hunter. \"With the doses of the drugs they were giving her, it should have taken a day, maybe two, for her to have gone into estrous.\"\n\nIt didn't work. \n\nThe only reason it wouldn't have worked was if --\n\nThe thought was interrupted by a scream from down the hall. All four Alphas jerked and rushed forward, Hunter reaching the door to the master bedroom first, nearly kicking it off its hinges in his rush to get to the terrified Omega on the other side. Ivy looked up, her frantic jade eyes set deep in a too-pale face. When she saw him, that face cracked, and she began shaking violently. He quickly crossed the room and scooped her up, settling her back down on his lap as she nuzzled into his neck. He turned, thrusting his chin at the open door to silently signal the other men to leave them alone.\n\nFowler hesitated just before closing the door, turning to look back at the mated pair. \"I'll make a few calls. If it's true, Hunter... She needs care.\"\n\nHunter nodded, then looked down at the top of Ivy's head. Her chocolate-colored hair hung down her face in lackluster locks. Her too-frail body trembled against his. He was numb as he whispered words of comfort, purring gently until Ivy settled and stilled in his arms.\n\nThey stayed like that, Hunter's back pressed to the head of the bed with Ivy curled up against his chest, until mid-morning. The smell of sizzling bacon and French toast filled the air, and he felt her stir.\n\nThe whole time, two thoughts circled themselves in his head like a twin pair of dogs chasing their tails.\n\nIvy's voice repeated her whispered words over and over again. I love you. Always followed by Trevino's dark cadence, murmuring a revelation. It didn't work. \n\nI love you. It didn't work. I love you. It didn't work. I love you. It didn't work. \n\nIt didn't work. \n\n.................................................\n\nIvy awoke to a darkened room, knowing instantly that Hunter was no longer beside her on the big bed. She slowly wriggled out of the burrow of blankets and pillows she had arranged as she slept (vaguely remembering waking briefly to demand more of said items), holding a shaking hand to her head. She felt like someone was hammering sheet metal in her brain. Her skin was clammy, damp with cold sweat, and the room spun slightly when she dragged herself upright.\n\nWithdrawals. She should have expected this. They had been pumping her so full of shit back at the facility that certain uncomfortable symptoms were inevitable while all the junk left her system.\n\nFor a long minute, she just sat on the bed, dangling her legs over the side and looking down at the floor. Nausea roiled through her gut, and she focused on keeping down the breakfast Hunter had brought back into the room for her the last time she had been awake. She wondered if Aella had made it. She wanted to go talk to her friend. Aella had looked happy when she'd seen her last night, if not a little pale with a shadow of a bruise across her left cheekbone and a swollen lip.\n\nFinally feeling steady enough to stand, she hopped off the high bed and walked over to her torn and discarded scrub bottoms. Lifting them, she noticed something in the back pocket. An envelope with her name scribbled onto the front. What the fuck? \n\nCautiously, as if it might explode without warning, she unfolded the thick, creamy paper. She instantly recognized the scratchy handwriting. She had struggled to understand medical charting in that hand so many, many times.\n\nKentucky. \n\nShe slumped against the wall, slowly sliding down until her butt hit the floor as she read the last words she would ever get from her friend.\n\nPoison, \n\nIf you're reading this, it means I didn't make it out of that shithole alive. Don't feel bad. I knew there was a good chance I'd die trying to get you out, and my life for yours is an acceptable trade. As long as you're safe, just know that it was all worth it.\n\nI lied to you the other day, when I came into your room. I told you that I did what I did because they brainwashed me into thinking you and the Alphas were corrupt, terrible people. People who deserved to suffer. True, that was how I felt at the time, but it's not why I started hating you. Or why I thought I started hating you, because I could never truly hate you, Poison. \n\nThe awful truth of it is, I was so fucking in love with you, Ivy. I was just waiting for the right time to tell you, to make you mine. And then that Alpha barged into your life and destroyed everything I could have had with you, whisking you away to live in luxury by his side. I was hurt, and confused, and desperate. I wanted to get back at him. I wanted to get back at you.\n\nThe Torrins have been sending undercover agents into Chid for a while now. Well before Hunter showed up. They forged orders to join Rico battalion and have been spying on us from inside our own ranks. I really lost my shit after you were dragged away from us again, after I knew what he'd done to you, and what he was going to do. There was no way for me to protect you. I couldn't stop what was happening, and I guess I went a little crazy. It made me an easy target. \n\nI was approached by two Torrin Betas a few nights after you left. They told met they were plotting an attack on main base, to shake things up and put on a little show for Nelson. They needed someone who knew the layout, and when I agreed, they convinced me to help take you hostage. \n\nI was so wrong. I know you had as little choice in what happened as I did. I know how wrong I was. Believe me, I know. They convinced me to turn against the one person I've ever loved and respected, and I don't know how to live with myself. \n\nSo, I'm getting you the fuck out of here, away from Maverick, and away from Hickson. If I have to, I'll die trying to get you out of this horrible place. It's the only way I can make up for what I did to you. It's not enough, but my life is all I have to offer you, and I give it freely.\n\nI hope you're right. I hope your Alpha is still alive, and I hope you make it back to him safely. I hope that's where you are now. I hope he takes care of you. I hope he realizes what an amazing person you are, and never takes you for granted. And I hope you're happy, now and forever. \n\nI love you, Ivy. Please forgive me. \n\n-Brad. \n\nTeardrops smeared the ink at the bottom of the creased page, distorting Brad's signature. Ivy swiped a shaking hand under her eyes and read the note again. And again. And again. She had been overly emotional lately, and this letter was certainly not helping.\n\nHe knew. That asshole knew there was a good fucking chance he'd die trying to get her out, and he'd helped her anyway.\n\nIvy stood up slowly, using the wall to balance her suddenly heavy body, and tucked Kentucky's letter away beneath the mattress on the side of the bed she slept on. For some reason, she didn't want Hunter to know about it. She wasn't trying to keep secrets, but this felt... private. It felt like a confession, spoken in confidence.\n\nShe wandered into the attached bathroom, grateful to be able to shower in private, without the watchful eyes of distrustful, grumpy nurses. Hunter had already stocked the bathroom with shampoo and conditioner, body and face wash, lotion, and a few other hygiene items. She noticed that he had only brought her the things she had used back in the Alpha barracks in Torrin. Her lips curled up in a small, tentative smile.\n\nClean clothes, a hairbrush, and two fluffy white towels had been laid out for her on the side of the counter. Showered and rested, she slipped on the black leggings and oversized white t-shirt, brushed her hair out of its post-sex tangles and gathered it into a high ponytail. Her heart still ached for Kentucky and his foolish sacrifice, but for the first time in weeks, she felt comfortable and safe.\n\nShe had already forgiven him for what had happened during the raid in Torrin, but knowing that it hadn't all been a lie, that he truly did feel for her as she had felt for him, brought her a sense of peace and closure. She still planned on kicking his ass in the afterlife for knowingly sacrificing himself, though.\n\nA knock at the door startled her, and a terrible sense of d\u00e9j\u00e0 vu overtook her as Hunter walked in, stopping behind her to lock eyes with her in the mirror's reflection. He gently gripped her shoulders, placing a soft kiss on her temple, and led her back out to the bedroom. A slim, bespectacled Alpha stood by the door, dressed in a white coat. He was handsome in a plain kind of way, with a touch of grey sprinkled throughout his professionally styled dark hair. His features were soft and unimposing, fixed into a relaxed, non-threatening expression. He made no move toward them, but a small movement brought her attention to his hands as he shifted his grip on something she recognized right away. He'd brought in a medical kit.\n\n\"NO!\" she screamed, jerking herself out of Hunter's grip and running to the other side of the bed, scanning the room for anything she could use as a weapon. He was too close to the door for her to hope for an easy escape. If she could find something to smash the window with, she could be gone before he had the chance to reach her. Her pulse beat in a staccato rhythm. The room became blurry and distorted, and her hearing dulled as if cotton balls had been stuffed into her ears. \"NO MORE!\"\n\nHunter approached her slowly, calmly, as if she were a scared, skittish animal trapped in a corner. Ready to strike out. \"Ivy. Do you trust me?\"",
        "A broken sob was wretched from her chest as she yanked a lamp from the bedside table, clutching it to her, ready to throw or swing at anyone who got too close. How could he do this to her? How could he?\n\nHunter's soothing voice came again. \"Ivy. Do you trust me.\" It was less of a question now. More of a statement. A demand. A low, rumbling growl pulled her attention away from the doctor as she jerked around, warily eying her traitorous Alpha.\n\nDid she trust him? She had, right up until he'd brought the fucking white coat into her room without warning. Certainly, she did not trust the man holding the heavy medical kit, doubtlessly filled with drugs they wanted to pump into her.\n\nHunter took a tentative step closer, and she bared her teeth in a vicious snarl. Her hackles raised as his growl deepened and took on an angry cadence, and his reaction to her defiance only confirmed that she was right to be wary of him. He quickly molded his features into an expression of concern, but it was too late. She yanked on the cord of the lamp, pulling it from its socket, as she inched closer to the window on the left side of the bed.\n\n\"You promised,\" she growled in response to the strong purr that began emanating from her mate's chest, refusing to be placated. Her chest ached as the bond hammered against the confines of her traumatized mind with useless reassurances that Hunter meant her no harm. \"You promised, you said it was over!\" Her voice shook with emotion.\n\n\"It is over, Ivy. Come here.\" He held out his hand, and she scoffed. Did he really think that one was going to work?\n\nMovement at the door caught her attention, and her eyes darted over to where Aella stood, looking worried and distressed. \"Ivy?\" she took a step into the room, halting when she glanced over at Hunter.\n\nWith her attention momentarily distracted, Hunter lunged and reached for her, and in his fast, concise way, he picked her up, discarded the lamp, and settled her on his lap, her back to his front, all before she had a chance to realize what was happening.\n\nWell, shit. \n\nShe thrashed and struggled, fighting against his grip. The dark-eyed Alpha from last night appeared behind Aella, gently leading her away with a possessive grip on the back of her neck. Hunter just held her close, rocking her from side to side in his arms, until the fight began to drain out of her and her movements became erratic, but slightly subdued.\n\n\"No drugs,\" Hunter spoke softly, skimming the shell of her ear with his lips as his warm breath fanned across the side of her neck. Ivy shivered. \"I promise, Ivy. It's over. No more drugs. He's just going to take your blood. That's all.\"\n\nTears sprung to Ivy's eyes, unwelcomed, unbidden. \"Why?\" She croaked.\n\n\"You've been mistreated for weeks,\" Hunter said, still speaking softly and comfortingly into her ear. His hands stroked up and down her arms, the volume of his purr growing to ridiculous levels, as he rocked her gently from side to side. \"You may be malnourished, dehydrated, or sick. Just normal labs, Ivy. CBC, metabolic panel, lipid and liver panel.\"\n\nOkay. That made sense. The medical terms grounded her, allowing the rational part of her brain to take over. No drugs, he'd said.\n\nDr. Cole Wittaker, or just Cole, as he insisted, was actually a pretty decent guy. Obviously aware of her discomfort and the reasons for it, he'd removed his white coat and did nothing but chat with her and Hunter for ten minutes, allowing her time to accept his presence. When he finally did begin his exam, he explained everything in professional terms, noting how the familiar medical jargon seemed to calm her.\n\nHunter kept her on his lap, pressing her into his chest with an arm banded across her middle. He murmured comforting words into her ear as Cole drew blood into several large vials and took her vitals. When he was done, he asked if she could pee in the cup, and she obliged.\n\nCole joked around with her the entire time, and by the time he left, carrying his medical case with her blood and urine, she was relatively at ease.\n\nThe giant bully, the one she was still kind of pissed at for bringing Cole in without even warning her first, left her by herself for a while after the doctor left. He told her she could come out whenever she was ready. It didn't take her too long.\n\nFinding herself on the far end of a wide hallway, lit with warm yellow sconces spaced evenly between an endless collage of family photos, she followed the low hum of voices until she reached a large kitchen, surprisingly modern and a bit out of place among the rustic feel of the rest of the cabin. The entire house, or at least what she had seen of it, boasted gorgeous, dark stained hardwood floors. A tasteful rug, cream colored and patterned with dark brown trim, stood a few feet away from a massive grey-stoned island with a thick black granite surface. A table and four chairs sat in the center of the rug, and six stools sat tucked below the overhanging edge of the island.\n\nShe found Hunter leaning against the black stainless-steel refrigerator, his arms crossed over his chest, watching the small group of people gathered around the high-top table, speaking in low tones. His eyes found hers and he immediately came forward, wrapping his arms around her and kissing the crown of her head. Tucking her into his side, he led her back over to where he had been standing and pulled her into him, her back against his front, coaxing her to lean the back of her head against his chest with a warm hand pressed to her brow.\n\nYears of fear and distrust of the Alpha officers that she'd only ever watched from a distance was a hard habit to break. As three massive males turned their eyes toward her, she involuntarily shivered.\n\nThese are the good guys. Forcing herself to relax, she made it through the introductions without doing anything embarrassing, like throwing up or passing out, despite the unmistakable scent of virile Alpha permeating the wide kitchen area and the still-present nausea from this morning.\n\nFowler, the bear/man who had brought her to Hunter after her escape from the asylum, extended a giant paw that swallowed her hand and wrist to enthusiastically shake her... arm. This was the man in the dozens of family photos around the house. His voice seemed to be stuck in a permanent growl. He was wearing a black t-shirt that clung to his ridiculously muscled chest, and his bare arms were covered with tattoos. The way he had offered his hand for her to shake settled some of her unease. He wasn't treating her like a child, like an adolescent Omega; instead, he treated her like a real, live person with opinions and independent thoughts and the ability to shake a man's hand without crumbling like a salt statue in the rain.\n\nDespite his ludicrous size and the strength he very obviously carried in every inch of his body, something about the bearded, painted man comforted her, and she decided that this dude, he was all right. In a strange way, he sort of reminded her of her father. Clearly, they looked nothing alike, but the way his expression warmed as he introduced himself, his eyes crinkling with the warmth of the smile completely hidden by the wild mess of hair covering his entire head, face included, was distinctly affectionate in a fatherly way. She returned his smile with one of her own. \"Nice to meet you, Fowler,\" she said, a hint of amusement laced through her words. \"I'm sorry for that elbow to your gut... Thankfully, you're obviously a grizzly bear who somehow figured out a way to change into human form, and it seemed to not affect you at all.\"\n\nThe thunderous rumble that emanated from Fowler's chest might have been a laugh, she wasn't sure. She pressed her lips together and chided herself for, once again, letting loose any and all thoughts without considering whether or not they should be spoken aloud.\n\n\"I knew I was gonna like you, kiddo,\" the bear/man rumbled, reaching forward to ruffle the hair on the top of her head until Hunter's warning growl promised to detach the offending limb, should Fowler choose to continue touching her. She rolled her eyes at her mate's possessiveness, and Fowler bravely winked at her before moving away.\n\nThe second Alpha stepped closer to them, filling in the space Fowler had just vacated, sitting back on one of the high-backed, grey-cushioned seats surrounding the table. The chair creaked under his weight, and she was surprised it held up as well as it did.\n\nPyle, the slightly younger man of the four, with the crooked front teeth that somehow endeared him to her, was the one who had snuck Hunter out of Torrin. He looked a bit uncomfortable at Hunter's praise as he described how Pyle had piloted jets and helicopters to bring him back to Lostra. Catching on to his awkward fidgeting, she steered the conversation away from Pyle's heroics to ask about the models and capabilities of the different aircrafts he was able to pilot. Showcasing his crooked teeth with a wide smile, he regaled her with his knowledge and expertise on military aviation. He wasn't as big as Hunter or Fowler, but she could see through his army green coveralls that he was similarly built, with thick arms and a muscular chest.\n\nAfter introductions, the only one who still made her a little nervous was the physically smallest of the four Alphas in the room. Despite his size, the simple presence of this dude was overwhelming, and waves of darkness and danger emanated from him. She had the feeling that out of the four, Trevino was the most lethal.\n\nBy no means was he a small man, but Hunter, Fowler and Pyle could probably be scientifically classified as giants. Comparatively, Trevino was slightly shorter and a bit narrower. She could see the tight, defined muscles through his fitted mock-turtleneck. He'd been standing off to the side, his hands in the pocket of his black fatigues, watching them closely during introductions. He only offered a small nod in her direction after Hunter introduced him. However, he was the one who had saved Aella, and she would have hugged him if she hadn't been afraid of stabbing herself on one of the several weapons he carried on his body, and told him so. That had earned her a very subtle twitch at the corner of his mouth. Not the friendliest guy on earth, but whatever.\n\n\"Where is Aella?\" she asked eagerly, when all the introductions had been made.\n\n\"Right here!\" a silky voice called from the hallway. It didn't escape her notice that Trevino jerked upright at the sound of her voice. The slightly older, stunningly beautiful Omega gracefully glided into the kitchen, holding a laptop, trailed closely by the boy Ivy had seen sitting on the bed the previous night. \"Eva is resting,\" she proclaimed, placing a small video monitor on the granite island next to her computer. On the screen was a tiny, sleeping human, rolled up in a yellow blanket like a baby-taco.\n\nEva. The infant had a name. Ivy smiled wide, sinking deeper into Hunter's embrace. He wrapped a hand around her upper arm, grazing her skin with his thumb.\n\n\"Ivy, this is Cody, my little brother,\" she said, gesturing to her human shadow. His hands were stuck in his pockets, and his shoulders were slumped. Aella mussed his hair, earning a groan and a swat from the boy. \"He's shy,\" she said, smiling.\n\n\"Nice to meet you, Cody,\" Ivy said, holding out her fist. The kid didn't really seem like a hand-shake kind of guy. A corner of his mouth lifted, and he pulled a hand out of his pocket, softly fist bumping her back. Ivy smiled.\n\n\"I have something to show you,\" Aella announced, turning and stepping between Fowler and Pyle to set her computer atop the kitchen table, facing a warmly lit living area. A massive, deep blue sectional acted as a barrier between kitchen space and living space, and a matching recliner sat a few feet from the long end, facing a large flatscreen TV mounted on the far wall. As there was no wall to separate the two areas, they could all clearly see the flat-screen. Aella pulled a small remote from the pocket of her ripped jeans (and holy hell, that garment was an unexpected choice for the prim and proper Omega), and pushed a button. The TV sprang to life, reflecting the screen of her computer.\n\nSettling into one of the cushioned chairs with her laptop in front of her, her fingers began to fly across the keyboard as she worked to bring up several documents filled with seemingly random words and numbers. \"Hickson is one sneaky son of a bitch,\" she started. Ivy sucked in a breath, shocked at the sound of an actual swear word on the tongue of the innocent, blonde haired, glacier-blue eyed Omega.\n\n\"He keeps all of his files and e-mails encrypted,\" Aella continued. \"His bank accounts are locked down and almost impossible to trace. He keeps his money in about two dozen different places around the world. He must pay someone to erase all records of his wire transfers. But...\" She pressed a few keys, bringing up additional documents on the TV screen. These pages were filled with lists of names and dollar amounts. Insane dollar amounts. \"I'm better than whoever he hired.\"\n\nShe looked at Ivy, whose mouth was hanging open, her chin nearly touching the floor. She offered a shy smile before continuing. \"This next part will be... difficult to watch. The video I recovered will bring him down for good. But it might be something you don't want to see.\" She was quiet, waiting patiently while Ivy collected herself.\n\nShe cleared her throat. \"Whatever it is, I want to see it,\" she told her friend, Hunter's arms wrapping around her and bringing her in front of him, so her back pressed into his solid chest. Together, they faced the screen and waited. Aella pressed a few more keys, and suddenly, two side-by-side images appeared. Hickson was in one, and Maverick was in the other. Ivy tensed, her pulse suddenly pounding in her ears. Hunter's arms tightened around her.\n\n\"Are you sure you're ready?\" Aella asked, holding the remote in front of her. \"You don't have to do this.\"\n\nIvy swallowed hard and nodded. \"Yes, I do. I'm ready.\"\n\nAella sighed and turned to face the TV. With a press of a button, the images sprang to life.\n\n\"Bring her to me.\" Hickson's voice, her biological sperm donor, since he had never truly been her father, was the same gravelly tone she had recognized when Maverick had brought her before him. Bile rose in her throat.\n\nIvy snarled as Maverick started talking on screen. \"And her mate? Hunter will certainly be a force to be reckoned with. Especially considering the fresh pair-bond. He will fight to his death to protect the little trouble-maker.\" She bared her teeth at the TV, wishing she could jump through the screen and attack him. She'd show him a trouble-maker, all right...\n\n\"Then fucking kill him!\" Hickson shouted, making Ivy flinch, and then growl. \"You have weapons there, I assume? You have an entire fucking army at your disposal, do you not? Or are you really that fucking inept?\"\n\nMaverick bristled on screen. \"Most of the Officers on base are... quite loyal to the Lt. General.\"\n\n\"What are you telling me, Maverick?\" Hickson asked. \"Get to the fucking point.\"\n\n\"I want the girl.\"\n\nIvy blanched.\n\n\"Unless my memory has failed me, I seem to recall that you have an Omega already,\" Hickson said. \"A pregnant one. That you insisted on dragging to Torrin with you.\"\n\nOut of the corner of her eye, she saw Trevino move toward Aella until he was standing directly behind the cushioned chair she was perched on. His hand, so much darker than Aella's pale skin, wrapped loosely around her neck, stroking her jaw with his thumb, as he leaned down and spoke softly into her ear. Ivy cocked her head curiously, but her attention was dragged away with Maverick's next words, and the half-finished thought concerning her friend and the scary Alpha was lost.\n\n\"I never claimed her, sir,\" Maverick drawled. \"And quite frankly, she... bores me. Ivy has a bit more... fight in her.\"\n\n\"Enough,\" Hunter growled, stepping around her until her view of the screen was blocked. She heard the video click off. The room was silent.\n\n\"I have more,\" Aella said softly. Ivy looked up at her, nodding for her to go ahead. She glanced across the kitchen at Trevino, who had moved away from Aella and was standing silently in the far corner. She didn't think he'd taken his eyes off the gorgeous Omega since she walked into the room. His posture appeared relaxed, but his body was coiled tightly, like a spring ready to snap. His intensity sent a shiver down her spine. She dragged her attention back to her friend.\n\n\"Before we left for Torrin,\" she started, pulling a small thumb drive from her pocket and sliding it into the laptop, \"I made copies of all the encryption software Maverick uses. He thinks his IP address is nearly impossible to track and locate, and all of his online activity shows up as anonymous.\" She smirked and gestured to the TV. \"I know where he is.\"\n\nAella looked around the room, meeting every pair of eyes, settling at last on Ivy. \"I didn't bother collecting any dirt.\" She looked at Hunter and nodded, then turned to look straight at Trevino. \"I figured he wouldn't be around long enough for us to need it.\"\n\nIvy couldn't take it anymore. \"Okay,\" she almost shouted, bringing Aella's attention back to her. \"Who the fuck are you?!\"\n\nAella chuckled. \"Maverick has been my captor and tormentor for seven long, horrible years. I'm the girl who's going to help you bring him down.\"\n\nIvy continued to stare at her, a grin slowly spreading across her face. \"Oh girl,\" she said, breaking away from Hunter to walk over to the Omega she apparently didn't know at all. \"I might be in love with you.\"\n\nFowler snorted, trying to hide his grin when Hunter and Trevino both turned to glare at him.\n\n\"All right, so what's the plan?\" Pyle asked, bouncing on the balls of his feet. He was like a little kid, and the excited energy he radiated was infectious. \"Your secret's out, boss. He knows you're alive, and he knows we're coming for him. He won't stay there forever.\"\n\nWithout hesitating, Hunter answered with a voice that was an octave or two lower than his normal, deep timbre. \"There's no reason to wait.\" Ivy watched as his eyes darkened, his face a mask of pure fury. She shivered involuntarily. It was so easy to forget how very lethal her mate actually was. \"We make our move tonight.\"\n\n\"Excellent!\" Ivy, still by Aella's side, struggled to suppress an excited squeal. \"I'll just need another change of clothes, and some weapons.\" She shot a glance over her shoulder where Trevino still lurked. \"Think you could spare me a gun? Or a knife maybe? I promised him I'd chop off his balls and shove them up his ass with a large pair of salad tongs.\"\n\nFowler and Pyle both made a weird choking sound, as they abruptly found the floor extremely interesting. Suddenly, Hunter was behind her, his massive arms wrapping around her torso in a possessive lock. \"You aren't going anywhere, little Poison.\"\n\nIvy struggled to shift around in his arms in an attempt to shoot him a scathing glare. \"What the hell? Yes, I fucking am! I'm the one that bastard kept for weeks, manhandled and drugged and... and...\" she swallowed hard, looking down. \"I deserve to be there.\"\n\nWithout another word, Hunter shifted her in his arms, lifting her and carrying her to their bedroom before she had a chance to rebel. Depositing her on the bed, he took in the murderous glare and rigid posture of his mate with an impassive stare. She was enraged, her hands curling into tight fists when he started purring, threading thick fingers through her hair.\n\n\"Don't,\" she growled, the promise of a threat aimed at a male who could crush her with a snap of his fingers.",
        "Hunter crouched down in front of her, taking her hands as he leveled a resolute, unrelenting look at her. A flash of pain crossed through storm-cloud eyes before settling back into an uncompromising stare. \"I understand, precious.\" He reached up, stroking his knuckles across her cheek as he tucked a stray strand of hair behind her ear. \"He hurt you. He took you away from me, drugged you, manipulated you...\" He swallowed hard, his eyes darkening to the color of stormy midnight. \"Violated you. Touched you. I'm so fucking sorry, Ivy. I should have taken you far away from him the moment I realized he was dangerous. I failed you, and I will never forgive myself for it.\"\n\nHer eyes were watering, and not for the first time, she wondered why it seemed impossible for her to keep her shit together lately. \"You didn't --\"\n\nAn almost comically large hand covered her mouth, cutting off her words. \"I did. I thought I could keep you safe, I thought we could stay long enough to finish what I had started in Torrin. I was a fool for taking that chance. But Ivy, you must understand. That will never, ever happen again.\" His thumb stroked soothing circles across the inside of her wrist. \"He will never lay even his fucking eyes on you again. And you will never be taken from me again. You will not fight me on this. You and Aella are staying here, under Trevino's care, until I return.\"\n\nThe hell she was. Her lips twisted into a frown, but she remained silent. Still, he could read the defiance in her eyes. \"You will not win this one, little Poison.\" Suddenly, he was on his feet, lifting her up and further onto the bed. The maelstrom of emotions that had flashed across his eyes during their little chat was replaced with one of pure, predatory hunger. Ivy swallowed hard, her body instantly responding to his heated gaze. Her nipples peaked, and her breasts became heavy, aching for his touch. Heat pooled deep in her core. It was fucking crazy, how he could turn her on like a switch, with nothing but a lustful look.\n\nHer breathing grew rapid as he peeled down her leggings and panties, his knuckles dragging down her thighs and calves, goosebumps following in his wake. His hands traveled back up her legs, parting her thighs as he crawled closer. Surrendering to the wild storm he was stirring inside of her, she gazed up at the ceiling, fisting the sheets as his thumbs parted her folds and his tongue swept a heated trail from her anus to her clit. She gasped, feeling her mind disintegrate, her anger and indignation falling away as his tongue flicked and swirled and lapped up the slick her body was generously supplying.\n\n\"You're the sweetest thing I've ever tasted, Ivy,\" he murmured, the vibration of his voice against her clit making her arch her back, her hips bucking up to seek out more friction as he slipped two fingers into her tight, wet channel. Soft squelching sounds began to emit from her pussy as he pumped the thick digits in and out of her.\n\n\"Be still,\" another command slipped past his lips as he lightly nipped at her engorged clit. It was an impossible command to follow, especially when he curled his fingers to tap against that magic button he always found so easily as he simultaneously sucked her overstimulated pearl into his mouth. A steel band of an arm fell across her hips, holding her in place as his fingers picked up the pace, fucking her in earnest, while his mouth continued sucking and nipping and flicking that sensitive bundle of nerves. \"Hunter!\" she gasped. What the hell was up with that sultry, lustful voice? Had that really come out of her? Maybe she was possessed. She certainly felt like someone else had taken complete control of her body. Her head thrashed from side to side, her breaths coming in desperate pants as she strained against the arm holding her down, desperate for more, fucking more. \n\n\"Come for me now, Ivy,\" he commanded, demanded, and her traitorous body rushed to comply. The pressure that had been building split apart and spread flames all the way through to the roots of her hair and her fingertips. She cried out, cursing and screaming his name, her pussy clamping down on the two fingers still moving inside of her, as he whispered and crooned words of praise and let her ride out her climax.\n\nThere was a pause, his thick fingers sliding out, leaving her empty and cold. Dizzy and breathless, she glanced down, watching as her mate undressed, baring himself to her. Once again, she marveled at the sight of her Alpha looming over her, the pair-bond stroking her lovingly as it whispered how strong and beautiful her mate was, how his broad chest and chiseled abs and strong arms would protect her always. She sighed, lost to her instincts, as he entered her in one strong thrust. Her fingers lazily traced a crescent shaped scar on his shoulder as he slowly slid out, making her gasp when he thrust back in.\n\nHe started slow, grinding his pelvis against hers every time he pushed forward, burying himself to the hilt. His hungry mouth found hers, his tongue gliding across her lower lip, coaxing her to open for him. When his efforts paid off with a soft, pliant parting of her lips, he wasted no time, fucking her mouth with his tongue to the same rhythm his cock was thrusting into her. He was exploring and demanding and possessing. He hooked a leg over his shoulder, driving back into her, hitting a spot that made her cry out, and his mouth greedily swallowed her screams. She clutched onto his shoulders as he sped up, losing himself to the rut.\n\nCradling her head in his palms, he soothed her cries, praised her and whispered sweet words as he tunneled into her with a strength she wasn't used to. She felt his cock grow and pulse inside of her, knew he was close, and she waited, the storm inside of her swirling, the pressure building. He slammed into her, once, twice, then stilled, and with a menacing growl, his knot caught the little female beneath him, locking her to him as he held her in place. Gasping, she spilled over into her own release, coming to the feeling of his hot seed filling her up and the knot pressing against her walls.\n\nBreathing heavily, Hunter draped his powerful body over her. She felt safe and warm, surrounded by him, the pair-bond thrumming pleasantly beneath her sternum. As he always did, once they caught their breath, he flipped them over so that she was resting her head on his chest, limbs lazily spread out around them. She nuzzled into him when he began to purr, happily leaving all thoughts behind.\n\n.................................\n\n\"That dirty motherfucker,\" Ivy cursed, jumping out of the bed where she had been tucked naked, under the covers. He'd left her. He'd fucked and subdued her, waited until she was mindless and sedated by her stupid hormones, stupid instincts, and then he'd gone off to kill the one person whose blood she thirsted for like no other.\n\nShe stomped around the room, picking up her discarded clothes and pulling them on in angry jerks. Storming out into the hallway, she spotted Aella seated at the kitchen island, her laptop open in front of her as her fingers flew across the keys.\n\n\"Hey,\" she called out, sliding onto a stool beside her friend. Aella turned to her, beaming, and Ivy felt her chest squeeze at the sight of her genuine, happy smile.\n\n\"Did they leave?\" Ivy asked, already knowing the answer. \"About fifteen minutes ago,\" Aella confirmed, checking the simple white watch on her delicate wrist. Ivy cursed, pounding her fist against the counter and making her friend jump.\n\n\"I'm sorry,\" she sighed. \"I'm just... Do they ever get less... Alpha-ish?\"\n\nAella chuckled, closing her laptop and turning to fully face her. \"You really want to go?\" she asked, her deep blue eyes sparkling conspiratorially. Ivy's curiosity piqued. She could almost smell the sweet scent of mischief in the air. \"What do you have in mind?\"\n\nThe stunningly beautiful Omega, the first one she had ever met, the one she'd thought of as a perfect, docile, prized Omega when they had met in Torrin, pulled her flowing blonde hair into a pony tail and grinned deviously. \"Trevino's got the keys to the suburban in the garage. But...\" she bit her lip, glancing behind her shoulder to make sure no one was there. \"We don't really need them.\"\n\n............................................\n\nIvy watched, stunned, as Aella's expert hands manipulated wires and connectors under the dash of the black suburban. A rush of adrenaline spread through her veins when the engine roared to life, and both girls looked at each other, excitement blocking out the slight feeling of dread that had begun to settle in her gut. Hunter didn't want her there, but she was going anyway. He was going to be pissed, and she was dragging her friend into it. But Aella deserved to be there as much as she did, perhaps even more so.\n\n\"So... what's your story?\" Ivy asked once they were settled on the road, a good distance away from the safehouse.\n\nAella shrugged, brushing a strand of hair from her eyes. \"You really want to know?\" She glanced at Ivy.\n\nIvy threw her a look that said, Obviously. \n\n\"Okay,\" Aella sighed. \"My parents died when I was very young. I don't remember much about them, they were hardly ever around. We lived in this little trailer, me and my two brothers, and we just learned how to take care of ourselves. Supposedly, they died during a botched drug deal, but with everything they were into, who knows what really happened.\"\n\nShe sighed again, melting into the heated leather seat. She'd had to pull the steering wheel all the way down, and the driver's seat all the way up, and she still had to raise herself up slightly to see the road in front of them. She was adorable.\n\nShe was also just about the same size as Ivy. Of course, the men watching over them would never let them drive anywhere anyways. Kinda messed up that they needed a fucking booster seat (which came in the form of detached chair cushions) to drive the only vehicle available to them, but whatever.\n\nAella started talking again, and Ivy brushed off her annoyance. She genuinely wanted to learn more about this lovely Omega who had survived seven years with a monster, and who knew how to hack into electronic records of some of the most powerful men in the country, and knew how to hotwire a car.\n\nI mean... This girl was the shit.\n\n\"We'd heard horror stories about going into foster care, kids disappearing, or getting beat up, or used, or... you know. So, when our parents died, we just left the trailer. No one ever came looking for us. Sometimes it felt like no one even knew we existed.\n\n\"We lived down by the docks. Derrick, my older brother, rented out this shipping container there.\" She was quiet for a while, her eyes glazed over, lost to her memories. Ivy waited patiently for her to continue.\n\n\"Derrick had a thing for computers. He was crazy smart and knew everything about them. He taught me how to... well... do what I do. And we used those skills to pay for what we needed. At first, it was just little amounts. We targeted big companies who wouldn't miss a couple hundred dollars here or there. Just enough to pay for rent, if you could call the monthly fee to keep the shipping container rent, and clothes, and food. Then, he taught me and Cody how to pick-pocket. Derrick kept the extra money, started putting it away. He said we were saving up to buy a house.\"\n\n\"I loved both of my brothers. I knew I'd never have been able to do some of the things that Derrick did for us, to make sure we were safe and fed. And I was grateful for everything. But the older he got, it was like he had this terrible pain stuck inside him, and the only way he knew how to get it out was to...\"\n\nAella trailed off, biting her lower lip until Ivy saw a drop of blood at the corner of her mouth.\n\nShaking off whatever terrible memory she'd been stuck in, Aella rubbed a hand over her face and sighed again. \"I'm going to skip over a few parts, okay? I just... can't. Long story short, Maverick was a target. He caught up to me, discovered I was an Omega, and just... took me. He... He kept Cody too. But not with us.\" She glanced over to Ivy, who had stiffened in her seat.\n\n\"He used your little brother to control you,\" she said softly. Aella nodded, averting her eyes. Maverick had used Cody, just as he'd used Eva and Aella to restrain and subdue Ivy.\n\nThey both sat in silence for the rest of the ride, and oddly enough, it felt comfortable. Ivy's mind kept circling back to the stuff Aella skipped over. It wasn't hard to fill in some of the blanks, but she had a terrible suspicion that what had happened to her friend, was worse than Ivy could even imagine.\n\nThey had both been used, manipulated by the monster waiting at the end of this little road trip. One night with that monster had been enough to drive Ivy into a very dark place. Aella had spent seven fucking years with this psycho. Her strength gave Ivy hope. Their silence was filled with a mutual understanding. It was... Reassuring.\n\nAs they approached the house, Aella cut the lights and rolled to a stop a block away. They were in a suburban fucking paradise. The grass of each lawn was exactly the same height. The same color flowers adorned each doorstep. The place looked like a movie setting. Something set up to look nice for the cameras, but not real. Ivy rolled her eyes. He was living here? Of all places?! Like he was some kind of fucking soccer dad?! The thought made her furious.\n\n\"Let's go,\" Aella called, snapping Ivy's attention back to the present moment. They found the house, nestled comfortably in a cul-de-sac, a motherfucking gnome out on his lawn. \"What a fucking tool,\" Ivy muttered, as they observed the house from a crouched position behind a perfectly clipped shrub. A small movement caught her eye. Just a ripple of fabric, like someone had brushed by the curtain.\n\n\"So? What do we do?\" Aella whispered, her eyes wide with excitement. Ivy shrugged, thinking it over. \"There's no point in sneaking in. We're here, and they'll find out anyway. That's the whole point. So, I say we just go in through the front door.\"\n\nAella smiled wide, showing her perfect, pearly white teeth. Ivy couldn't reconcile the childhood Aella had described, growing up in a fucking shipping container, with the beauty queen she was now. Albeit, a beauty queen with a little wild streak.\n\n\"Let's do this,\" Ivy said, giving Aella an impulsive slap on the shoulder, making her friend giggle. Together, they marched confidently toward the front door. Approaching it, Ivy reached out to grab the knob, and --\n\nThe door swung wide open before she could even try it. There, towering over the two females, a dark and deadly presence, a lethal energy flowing off him in waves, was the last Alpha Ivy had expected to see.\n\n\"Trev,\" Aella breathed, licking her lips. \"It's not --\"\n\nBefore she could finish that sentence, the dark-eyed Alpha reached out and grabbed her arm, tugging her into him, wrapping his other arm around her waist, trapping her against him. He cupped her chin in his palm, lifting her face to look at him. Leaning down, he whispered something Ivy couldn't hear, but whatever it was, it made Aella start to shake. A burst of protective anger spread throughout Ivy's chest, and she charged at the brooding Alpha holding her friend.\n\n\"You leave her the fuck alone,\" she snarled, her hands clutching the fabric of Aella's shirt, trying to pry her away. \"It's my fault, I made her come here! Now get off of her you fucking psycho!\" At this point, she had shoved her arms between the two and was attempting to separate them with sheer will, but of course, nothing was happening.\n\nFucking Alphas.\n\nThe dark one looked down at her, his sable eyes flashing with anger as he cocked his head to one side, like he was trying to decide what to do about an unruly puppy. \"It's okay,\" Aella gasped, but she was breathless, and Ivy was not convinced.\n\n\"You are a loyal friend,\" he said softly, finally easing his grip on Aella. His voice sounded as dark as he looked, a velvety, smooth sound, like shadows caressing bare skin. It was the first time she'd heard it, and it sent chills up her spine. \"But you are also disobedient, and defiant, and your actions have put both you and Aella at risk. I cannot allow that.\"\n\nIf those words had come out of Hunter's mouth, Ivy would have rallied against them, finding an argument as to why they should be there. But coming from Trevino? This dark and scary man, who rarely spoke and reached down into your very soul when he did? She wanted to hang her head in shame. Instead, she lifted her chin and squared her shoulders. \"We have a right to see this through to the end. We are not delicate fucking flowers with glass fucking petals. Let us in.\"\n\nTrevino silently regarded her for a long, uncomfortable moment. Ivy felt her chest constricting. It was becoming hard to breathe, despite the crisp, cool air. \"Your mate did not want you to see this. You've been in battles. You've seen bloodshed and death. This is not the same. What is happening in there, it will taint your soul.\" He redirected his scathing gaze to Aella. His expression immediately softened. \"Do you trust me, Stella meus?\" His voice was soothing, enticing. How did he do that? How did he change his voice so drastically when addressing Aella? It was like a fucking magic trick. He'd sounded cold and detached when he'd lectured Ivy, but as soon as he turned to Aella, his voice retained that dark, velvety smooth sound, but it took on a rich warmth.\n\nAella nodded, her wide eyes glistening in the moonlight.\n\n\"Then let me take you home.\" He held out his hand to her, and she immediately took it, letting herself be drawn back into his arms. He planted a kiss on her brow, and Ivy felt like someone had knocked a shovel over her head.\n\nFucking duh, she chastised herself. She'd seen him in her room when she first got to the safehouse. Had seen how he watched her in the kitchen when they discussed their plans. She definitely should have put that one together a lot sooner.\n\nIvy pressed her lips together, crossing her arms over her chest stubbornly. With Trevino and Aella off in la-la land, the front entrance was left unguarded. This was her chance. Darting around them, Ivy barged through the front door, turned the corner and froze.\n\nThe scene before her was, indeed, something that would have tainted her soul, if it hadn't already been ruined from what she'd endured during the past few months. Maverick was positioned in the middle of the room, draped over a black leather padded bench, his hands and feet tied down to each corner of the square contraption. The whole scene was something she might have expected to see in those super-secret, kinky sex clubs, but she highly doubted her Alphas had given him a safe word. Hunter, Fowler and Pyle surrounded him, and Pyle was pumping something... something big... in and out of Maverick's naked ass. The man who had held her captive grunted and cried out with each thrust, cursing and begging and sobbing like the fucking coward he was.\n\nShe tore her eyes away from the scene in front of her and found Hunter's furious, storm-cloud eyes locked onto her. She gulped, resisting the urge to take a step back. Instead, she took an exploratory step forward, closer to the ruined, corrupt General. When Hunter didn't stop her, she kept going, gaining confidence with each step. He was infuriated with her, but now that she was here, now that she had seen the worst of it, he wasn't going to prevent her from doing what she had to do.\n\nPyle, watching Hunter closely, kindly stopped the ass-pounding for a moment while she crept closer to her tormenter. Maverick looked up through swollen, puffy eyes, and she saw a flash of hope cross his face.",
        "\"Baby girl,\" he croaked, his voice broken from all the screaming. Kind of how she'd sounded after he'd strangled her. \"Tell them to stop this,\" he pleaded. \"Tell them how good I was to you, my baby girl, tell them how good I made you fe-\"\n\nStartled, Ivy jumped back when Hunter came out of nowhere, crouching down in front of his prisoner, his hands gripping Maverick's dyed blonde hair. A strip of duct tape was slammed over his mouth, with much more force than was truly necessary for the task. Hunter's threatening growl reverberated throughout the entire room, rattling even her bones. Still gripping his hair, Hunter came face to face with the monster, almost until their noses were touching.\n\n\"You will pay dearly for that,\" Hunter snarled. \"No more talking.\"\n\nWith that, he stood up and took several steps back, standing out of the way, but closer than he had been before. Ivy crept back up into Maverick's line of sight.\n\nBile rose in her throat as she looked at the man who had caused her so much grief and pain. She truly thought she would be sick to her stomach as she crouched down and peered into his shit-brown eyes, remembering the dulled, lifeless eyes of Kentucky, staring at nothing as she'd escaped the asylum. She remembered the scream he'd pulled from a very pregnant Aella, all just because she had gone to talk to the injured soldiers at medical. She remembered the pain of watching as he'd emptied three rounds into Hunter's chest. She remembered the marks of abuse on Aella, bruises and cuts he'd delighted in pointing out to her in order to ensure she stayed compliant. And she remembered the feel of his belt cinched around her throat, cutting off her ability to breathe as he shoved his cock down her throat, and she had to swallow a few times before she found her voice.\n\n\"You prey on those smaller and weaker than you,\" she said softly, trying to keep the enraged tremor from her voice. \"Because you're a fucking coward. You manipulate, and cheat, and lie to get what you want. You kept Aella and her brother prisoner for seven years!\" Her voice was growing in volume, a low, feminine growl erupting from her chest. \"You tried to kill my mate!\" she seethed, getting closer, her hands curled into fists. \"You endangered both the mother of your child and your newborn baby in order to control me. You drugged me. Touched me. Beat me. Forced me,\" she whispered, blinking back angry tears. \"And you killed my best friend.\" She was face to face with him now, staring at the puffy-eyed, duct-taped fool who had been starring in her nightmares.\n\nShe glanced over her shoulder, to where Hunter was standing guard just a few feet away. His gaze was scorching, beyond furious. But when they locked eyes, he softened, and gave her a small nod.\n\nShe turned back around. \"I believe I made a promise to you, Mav. And unlike you, I'm not a traitorous, cowardly fucking liar. I keep my promises.\" Maverick looked up at her, his eyes wild. His screams were muffled by the duct tape, but she was glad to know that he remembered exactly what she had told him she'd do.\n\n\"I need a knife.\" Her tone brooked no argument. She felt Hunter's hesitation, his apprehension and fear for her. Fear that she couldn't handle this. But none of this was really about her, was it? This was Maverick's big day. Ivy didn't have an impressive social circle. Hers was small, and relatively new, but it didn't make her any less protective of those in it. Today, Maverick was paying for the pain he'd inflicted on the small group of people she cared about. It didn't matter how or who collected his debt.\n\nMaybe it made her evil, or royally fucked up, but this was not something she would carry on her conscious after she walked out that door.\n\nAfter another moment of silence, a long, army standard issued knife was placed into her upturned palm. She glanced up to see who had allied with her, because the rush of anger she felt through the bond told her it definitely hadn't been Hunter. Instead, she was confronted with Pyle's goofy, endearing, crooked grin. She offered him a small smile, and he winked at her. \"Make this good, sweet pea,\" he said softly, then scooted away to avoid Hunter's wrath.\n\nShe walked around to the coward's swollen, fucked asshole. Okay so yeah, this was kind of gross. But she'd never have this chance again, so she bucked up, took a big breath, and stuck the knife between her teeth while she undid her ponytail to release her hair tie. She knelt down, grasping the fucker's ugly scrotum. Maverick's panicked struggles rattled his restraints, but they held fast, and despite his efforts, she quickly applied the hair tie-slash-tourniquet to the base of his balls. She sat back for a few moments, waiting for Mav's struggles to die down some.\n\nAs soon as they did, Ivy brought the blade up with one hand while she grasped the pervert's testicles in the other, and with one smooth slice, Maverick was castrated.\n\nHis back arched up as he released a pained, slightly-muffled scream. Ivy shifted her grip on the knife and skewered his manhood, then stood up and walked back around to face him.\n\n\"Now, I know I told you I was going to shove these up your ass with a pair of salad tongs, but unfortunately, I don't have any on me at the moment.\" She leaned down to grip a corner of the duct tape covering his mouth and yanked it off in one hard pull. Maverick's scream was cut off when she shoved his own balls between his lips and toward the back of his throat, tugged the knife free, and slapped the piece of duct tape back over his mouth.\n\n\"What do you think, Mav? Is this a fair compromise?\"\n\nShe gripped the fake blonde hair of the ruined tormenter. Brought her knee up into his face. Felt the crunch of bone, the warm gush of blood soaking her leggings. She jumped back, disgusted. Maverick dropped his head, blood dripping from his broken nose to the floor. She crouched back down, gripping his hair again, forcing him to look at her.\n\n\"Fuck. You. Fuck you, Maverick. Fuck you to death. Actually, I think that's exactly what's going to happen. And it's exactly what you fucking deserve.\"\n\nShe released his head to let him slump forward. Ivy stepped back, took a deep breath, and turned around. Hunter came forward, wrapping her up in his arms, leading her away, out of the room, out into the cool night. She looked up at the man enveloping her entirely, as if to protect her from anything and everything, using his own body as a shield. His face was impassive, but she knew he was angry with her. Oh yes, she would be hearing all about it later. He would fuck her senseless, so she would know who she belonged to. She wanted to roll her eyes at his over-the-top Alpha-ness, but right now, she was just grateful. She nuzzled into him, breathing in his intoxicating scent, letting it calm her rattled nerves.\n\n\"Thank you,\" she said quietly. When she looked up at him, she could have sworn she saw a flash of pride in his strange, tempest eyes.\n\n....................................................\n\nHunter leaned against the far wall, watching the scene play out in front of him. He had known Ivy would try to come, despite his warning not to. He'd told Trevino to be prepared, and sure enough, shortly after they had started in on Maverick, Trevino had texted to inform him Ivy and Aella were on their way. The sniper had a man waiting nearby to watch the safehouse, made sure Eva and Cody were taken care of, and had raced to the picture-perfect suburban neighborhood to arrive there before the girls did.\n\nOf course, Ivy wouldn't have accepted being denied entry. But Trevino was dead set against Aella being anywhere close to Maverick. Obviously, there was something serious going on between those two, but so far, Trevino had been unwilling to talk about it, and Hunter hadn't pressed him.\n\nIvy had handled herself well, and while he disapproved of the entire affair, it seemed to provide her with some closure. Of course, Pyle was halfway in love with her for castrating the prick, and talked for a solid twelve minutes about how good she would be at interrogation. He would have kept talking about it had Hunter not thrown a left hook the pilot just barely dodged.\n\nIvy's continued defiance both infuriated and thrilled him. Unsure of how to handle her blatant, repeated disobedience, he considered his options as he watched Pyle continue to work on the sorry excuse for an Alpha who had caused his mate such pain and anguish.\n\nThe thought of punishing Ivy, as many Alphas would do to their Omegas to ensure obedience and submission, had somehow become distasteful. He worried that in Ivy's case, it would do more harm than good, straining the pair-bond that had already suffered from their unwilling separation. While biologically, Omegas were considered the submissive, docile dynamic, Ivy presented a complex dichotomy. Raised by a Beta father who wanted her to be strong and independent, Ivy was willful and proud. She would never forgive him for forcing her to suffer through the humiliation of a traditional punishment.\n\nAt the same time, she had retained her Omega instincts, despite her father's attempt to drive it out of her. Her submissive side simmered just beneath the surface, and Hunter had found ways of coaxing it out of her. Perhaps he could find a way to use it to his advantage, without resorting to more conventional disciplinary techniques.\n\nMaverick was an important step in this plan, but a fairly easy one. When they began going after Ivy's father, things would become much more dangerous, and a spirited joyride shared between two rebellious Omegas could turn into his worst nightmare.\n\nHe focused his attention back on what was happening in front of him. What Ivy had seen was just the beginning of a long, long night for Maverick. Pyle was one sick son of a bitch, and he was taking his time, tearing the guest of honor apart, piece by little piece. Maverick had stopped screaming a long time ago, his voice hoarse and his body exhausted. Fowler stood by, his thick arms crossed across his chest, watching Pyle work.\n\nPyle had just taken out the blow torch and was happily dancing around the mostly-dead Alpha, bringing him back to consciousness anytime Pyle saw him slipping away with a streak of flame crisscrossing his back.\n\nThe night had been satisfying. Hunter had exacted his revenge, had taken his pound of flesh. More than a few pounds, actually. It wouldn't be long now. Still, whatever torture they had inflicted onto Maverick's decrepit soul tonight, nothing could make up for the years of torment he had subjected innocent women and children to. Fresh anger bloomed and burned across Hunter's chest, making him wish they could bring him back, whole and alive, just to rip him apart, again and again.\n\nHis phone buzzed, and he pulled it out of his pocket. He glanced at the time. 0503. They had better start wrapping up. A text message from Cole told him to call him back, immediately. His pulse sped up. Hunter found the doctor's contact and pressed the phone to his ear.\n\n\"Hunter.\" Cole's thick, authoritative voice answered.\n\n\"Cole. You have news?\"\n\n\"I do.\"\n\n\"And?\" Hunter growled, impatient.\n\nThere was a pause on the other end. Hunter was gripping the phone so hard he thought it might crack. His pulse pounded in his ears.\n\n\"It's positive.\""
    ],
    "authorname": "ReckingBall",
    "tags": [
        "alpha",
        "military",
        "omega",
        "omegaverse",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/poison-ivy-ch-08"
}