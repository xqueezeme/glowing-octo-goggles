{
    "title": "Cocks Ch. 01",
    "pages": [
        "Junior year was proving to be the best time of college so far. I was now into my major and taking lots of courses in writing and literature. I had three great roommates and several girls who were friends, and who all got along together. I was soon to find out that it was to be the best year of my life--in terms of erotic experiences. It was also the best year since I met the love of my life.\n\nNone of us dated each other. We were good students who wanted to succeed in college so we could do the same in the real world. We found that by hanging out together, we could avoid the tension and pitfalls that many of our classmates seemed to find. We found sexual outlet with people outside our circle or by ourselves with a tried and time-tested form of release in the privacy of our rooms.\n\nI was getting ready for the homecoming football game when Ashley stopped by my room. She was probably my best friend, at least among the girls. We connected on many levels, often finding ourselves talking into the early morning hours. She had recently broken up with a guy she'd been dating since freshman year. Ashley was the exception to our gang getting into serious relationships. She told me she pulled the plug when she felt he was getting too demanding.\n\nShe followed me into my room and folded herself down on the floor gracefully that somehow girls seem to master, and that remains a mystery to me and every other guy. She sat cross-legged on the floor and explained why she and her boyfriend broke up.\n\n\"He wanted a blow job every morning before class,\" she told me as I was finishing getting dressed. \"I mean I don't mind blow jobs, but this was becoming a bit too much. Don't you think so?\"\n\nI was standing in boxers and a long-sleeved tee shirt. Seeing each other in underwear was a barrier we had crossed long ago.\n\n\"Ashley, this may come as a surprise, but I've never had a conversation with a girl about how many blow jobs she gives, nor what time of day she gives them.\"\n\n\"Oh, TMI?\"\n\n\"A bit,\" I said. She smiled and pulled on her pony tail.\n\n\"Do you like morning BJs?\"\n\n\"Plead the fifth,\" I said, and turned to look for my jeans before Ashley saw the tent forming in my boxers. Although we weren't in a sexual relationship, that didn't mean I didn't appreciate how pretty she is. And the image of her soft lips wrapped around a guy's cock was having an effect. I pulled on my pants, adjusted my semi-hard cock down along my thigh, zipped up and then added a long Henley shirt. I hoped it was long enough to cover the bulge. As I laced up my Timberlane boots, Ashley continued her story.\n\n\"He has a decent cock,\" she said. \"Not the biggest, but it wasn't bad. It wasn't like I hated his cock, it was just that he seemed to be demanding--not asking for--the blow jobs. Made me ask myself if that is what I want in a relationship. I guess the answer is no, because I told him we were through.\"\n\n\"How'd he take it?\" I said and wondered how I could rearrange my boner without Ashley noticing.\n\n\"Funny, he didn't react all that much. Said maybe it was for the best, we could remain friends, blah, blah, blah. He asked for one last blow job, though.\"\n\n\"Wow, that was nervy.\"\n\n\"Think so? I thought it was only fair.\"\n\n\"So you did it?\"\n\n\"Of course, and I think it was one of my best. I had him begging me to bring him off. I kept him on the edge like for ten minutes. Kept sucking his balls. Do you like that?\"\n\n\"Ball sucking?\"\n\n\"Yeah.\"\n\n\"Actually, never had it done.\"\n\n\"No shit. Gotta try it. At least from what Gordon said. He loved it. So did Arnie, as a matter of fact. Gerald put up with it, but didn't seem as into it as the others.\"\n\n\"How many balls have you sucked?\"\n\n\"Well, I've had oral with six guys since I came here. And one in high school, so that'd be fourteen, no, make that thirteen. One guy only had one ball.\"\n\n\"And, in the BJs, did you like...uh...\"\n\nAshley laughed. \"Swallow?\"\n\nI nodded.\n\n\"Tell me, Adrian, when you go down on a girl, do you taste her cum?\"\n\n\"Sure.\"\n\n\"Then why wouldn't I swallow? Some girls make it a big deal that they don't. It's like they're some holy saint or something. I tell them, 'Girl, you have a cock in your mouth. You ain't no saint.'\"\n\nI looked at Ashley sitting on the floor. Her light brown hair was pulled back into a ponytail. When it was loose, it fell to her shoulders. I liked it both ways. She had a light coating of freckles across her nose and spilling onto her cheeks. Blue-eyed and with soft pink skin, she wore minimal make-up, and always looked so fresh, clean and cute. Her body seemed compact on her long frame. She rarely wore anything except jeans and her butt always looked good in them. As I sat across from her, I realized that I never acknowledged how attractive she really is. As I was imagining her naked while inhaling my cock, the real thing inside my pants jumped. I knew we had to leave before I sprung a leak.\n\n\"Where're we meeting the others?\" I asked.\n\n\"We're in the student section, Row 10. Britty is going to try to save some seats. We better haul ass.\"\n\nThe weather was mild, and we sat in the fall sun and cheered for our team. They lost as was expected, but we all had fun. Britty was hosting an after-game pizza and beer party in her suite later that day. Her three roomies had all gone home. They were total science nerds and hated the football homecoming drama.\n\nI went back to the dorm and finished a paper that was due on Monday. We had a suite like Britty, with each of us four guys having a separate bedroom. There was a large common room hosting a sink, microwave and fridge. Plus, we had our own bathroom with a sink and toilet. There was a group shower down the hall. We got along and had agreed to keep the common spaces and bathroom relatively clean.\n\nAfter I printed my paper, and did a last edit, I stretched out on my bed and figured I'd nap before the party. I thought about Ashley and her blow job stories. I recalled how cute she looked sitting on my floor. I remembered how she grabbed my arm to pull me to her for a kiss when our team scored its only touchdown. Her breast pressed into my bicep. I mostly thought about how I pictured Ashley naked and sucking my cock. I undid my jeans, fished my boner out, and started stroking. I realized I was super horny and had been that way since Ashley's visit.\n\nI pulled my shirts up high, my pants and boxers completely off, and was just at the point of exquisite release when there was a knock at my door, and it opened. I was past the point of no return and started cumming all over my stomach. I looked up to find Aliyah staring at me.\n\n\"Not expecting company?\" she said. She then smiled and add, \"Or where you?\" She came in and closed the door. She spotted a box of tissues on my dresser and pulled out a handful. Giving them to me, she sat on my bed.\n\n\"Awkward,\" I said as I dried myself.\n\n\"Hey, I've three brothers and dated a bunch of guys. The fact that guys jerk off is not news. Believe me.\"\n\n\"Yeah, but I'm not accustomed to have someone watch me.\"\n\n\"No big deal,\" she said and covered her mouth. \"No, Adrian, not like that. Actually, it's kinda a nice size.\" She touched my cock in what I could only describe as a friendly and non-sexual way. Though having any girl touch my cock was to me quite sexual. \"I like watching a guy jerk off. It's sexy.\"\n\nI had a difficult time getting my mind around the fact that she had just watched me orgasm and was now chatting as though it was the most normal thing in the world. The fact that my cock was slowly going limp, while still exposed, seemed not to bother her.\n\n\"So, is there a reason you're here?\"\n\n\"Other than watching you deposit a load on your abs? Probably was,\" she said and giggled. \"Right now, I can't remember it.\" She looked at my totally limp member as it lay between my legs and gave it another soft tap.\n\n\"You're not circumcised. This is a first for me. Can I touch it some more?\"\n\nBeing an English major, I was tempted to correct her by saying of course she had the ability to touch it since she had fingers, and therefore she \"can\" do it. She should have said, \"May I touch it?\" Being a guy with a pretty girl wanting to hold his cock, I simply said, \"Yeah.\"\n\nShe took hold of my cock. This time it definitely was not non sexual. \"Feels good. I haven't held one in a while, and never an uncut one. Do you mind?\" She added her second hand to hold my shaft while she worked my foreskin back and forth. \"This is so cool. When I came in, it was hard and you couldn't tell. I like the look.\" If I hadn't already had a large orgasm, I'm sure that she would have been able to observe it once more with the foreskin retracted. Instead, she seemed content to move it back and forth.\n\n\"Is it more sensitive?\"\n\n\"You mean not having part of my dick cut off?\"\n\n\"Ugh, when you say it that way it sounds gross. But yeah, that's what I meant.\"\n\n\"Couldn't tell you. I've only known it one way.\"\n\n\"This is strange,\" I said as she continued to play with me. \"We're friends,\" she said.\n\n\"You saw me jerking off and shooting all over myself. What if I had walked in on you while you were masturbating?\" She squeezed my cock and laughed. \"I'd tell you to take cover before you got sprayed.\"\n\n\"Sprayed?\"\n\n\"I'm a squirter,\" she said. That image, in addition to her constant fondling, was working to overcome the effects of an orgasm. My cock filled with blood. Aliyah suddenly pulled her hands away. \"So, yeah, I have a reason for coming here.\"\n\n\"Other than to fondle me.\"\n\n\"Yeah, that wasn't part of the plan. It was fun though. I've got a favor to ask, and after what just happened, I'm thinking you might just say yes.\"\n\n\"I'm listening.\"\n\nMy room was warm and Aliyah stood up to pull off her sweatshirt. Underneath, she had a light blue long-sleeved tee shirt. As the sweatshirt cleared her head, I stared at her breasts, moving freely underneath the thin cotton. By the looks of the nipple points, I assumed she was braless. I also assumed that her breasts were large. Truthfully, I had noticed that before today.\n\nAliyah wore her hair in tight braids. This style was recent. Before that, she had grown her afro out to look like a woman from the 70s. Not that I go around smelling women, but being close to her, it was impossible not to appreciate her scent. It was both musky and light. Once when we were sitting together in the back of Ashley's car on a road trip, I became a true believer in pheromones. I think I was hard the entire time just breathing in her exotic aroma. Then, as she sat next to me, with her breasts swaying under her shirt, I had to reach down and readjust myself inside my jeans.\n\nAliyah's skin was smooth and the color of milk chocolate. She often wore light blues and yellows and always looked fantastic. She is the shortest of the girls in our group, but she is perfectly proportional. Her breasts are large and look good on her because she has broad shoulders and a slim waist. Her legs are shapely, though not long. Her butt is a work of art. I think Ashley's is the best butt in jeans, but Aliyah's is close behind.\n\nShe had freed her head from the sweatshirt and caught me staring at her.\n\n\"What?\"\n\n\"You're so pretty. And, I really like your, uh, your hair this way.\"\n\n\"Honest? I wasn't sure about doing braids, but keeping my 'fro looking good was taking way too much time and effort. When I was home last time, my brothers were all over me 'bout my hair. Told me I looked like I was on work-release. I think they were just teasing, but it made me a little insecure. Now a good-looking guy tells me he likes them. All good.\"\n\n\"Even if he's a white guy?\" Early on Aliyah found out we could discuss race. She said she found black guys the most attractive, but had dated a couple white dudes. She and I could talk openly about how blacks and whites looked at the world from different perspectives. After a while we realized that everyone looked at things from a unique perspective. So, my question to her was not out of bounds.\n\n\"True, you're a white guy. But you're a cute white guy, and one with a very nice cock. So, I'll accept your compliment.\" She leaned in and kissed my cheek. Her scent made me want to rip her clothes off.\n\n\"At first I thought you were going to talk about my boobs, the way you were staring at them.\"\n\n\"No, I wasn't staring at them.\"\n\n\"Really? 'cause I had the distinct feeling you were. What's the matter? Don't you like them?\"\n\n\"My god, Aliyah, they're awesome. I just didn't want you to think I was a pig or something.\"\n\n\"Just busting your balls, Aidan. By the way, love your balls, too. Though I think a bit of manscaping down there would be in order. \" She cupped my sac.\n\n\"Too hairy?\"\n\n\"Think jungle vines.\" We both laughed.\n\n\"You like my boobs, really?\"\n\n\"From what I can see, they seem to be, well, spectacular.\"\n\nShe grinned and pulled her sweatshirt off. Her large breasts bounced as her shirt cleared her head. They were slightly lighter in color than her regular skin tone and topped with nearly black areola and nipples, which stood out nicely. She cupped them, seeming to weigh each round globe.\n\n\"Still think they're spectacular?\"\n\n\"I'm lost for words.\"\n\nAliyah thanked me and reached for her shirt. My dick had returned to full mast. Aliyah ran her finger up the underside of my erection. As she ran her fingertip around my tip, she leaned in. Before her lips touched my skin, she sighed and sat up straight. \"Maybe you should cover up before we do something dumb.\"\n\n\"A little dumb once in a while could be fun,\" I said.\n\n\"Yeah, but right now I think we should pass.\" She grabbed my erection and moved up to kiss me. Her bare breast brushed against the tip of my dick and I thought I might lose it. She sat back on her heels and pulled her top back on. Reluctantly I got my erection back in my underwear and tugged my pants back up. We stared at each other before Aliyah spoke,\n\n\"So, returning to the favor I mentioned. Tilda has to do a senior thesis project.\"\n\nI nodded. Tilda was the only senior in our group. She was a Fine Arts major and often dressed the part. She was the tallest of us, at around six feet two. Rail thin, she usually wore overalls and a red bandana around her long neck. Although she had beautiful blue eyes, you had a hard time seeing them behind the heavy-rimmed red-framed glasses she wore. She shunned all make-up and kept her nearly white blond hair in a buzz cut. This style only emphasized the multiple ear piercings. She had a stud in one nostril, and I heard some sort of tattoo on her lower back. That last piece of info came from Ashley. In spite of Tilda's attempts to make people think otherwise, she was magnificent. Her skin was like pale china. She had high cheekbones and a slight dimple on her right side that could melt your heart when she smiled--which was infrequent. With the clothes she wore, you couldn't tell much about her figure. With a face like hers, though, the body came in at a distant second place.\n\n\"She's really shy, especially around guys,\" Aliyah said.\n\nI knew that, but found Tilda to be relaxed and open in our group. I said so to Aliyah. \"We're all like family. She knows you guys and can relax. Put her in a situation with lots of outside people, and she shuts down. And none of you guys try to hit on her. I don't know if she's ever had sex, but being able to hang around guys who aren't trying to get her into bed is what she can handle.\"\n\nI understood what she was saying. When you got to know Tilda, you found she had a sharp sense of humor, and a satiric look at most of college life. Many times she and I spent hours just talking. I enjoyed talking with her. We hit no awkward pauses or ever ran out of topics. She was well read and offered both insight and opinions on most things. Judging from how she reacted, I think she liked me as much as I did her. I once thought about asking her out, but since none of us dated within the group, I never acted on my impulse. Because of her shyness, I hesitated to cross the friend-sex line with her, although I admitted to myself that I was attracted to her in a sexual way. Plus, she was so cool and aloof; I figured she'd not want anything to do with me.\n\n\"So. this favor has to do with her thesis?\" I asked.\n\n\"Yep. She's doing a photo project. She's calling it 'Cocks' and needs a bunch of subjects.\"\n\n\"And I suppose she's not referring to male chickens.\"\n\n\"Nope. Male meat would be more exact. She has this concept of photographing cocks in a number of different ways. She'll explain it all when you get together.\"\n\n\"You're assuming that I will agree to be naked for her and let her take pictures of my cock.\"\n\n\"Yep, that's right.\"\n\n\"Kinda weird, don't you think?\"\n\n\"Weird that I'm asking, or that she wants to take cock shots.\"\n\n\"Both.\"\n\n\"Adrian, she's too shy to ask guys to do this. Me, well, I'm not shy. After what I just witnessed, you've got nothing to be embarrassed about.\"\n\n\"But I'll be nude in front of a friend.\"\n\n\"Friends,\" Aliyah said, emphasizing the \"s\".\n\n\"How's that?\"\n\n\"Me, Ashley and Britty are going to be helping her.\"\n\n\"You want me to be nude in front of all my friends?\"\n\n\"Now you've got it. Are you in?\"\n\n\"Who else for guys?\"\n\n\"Our gang, I hope. You're the first I've asked. If you say yes, I think the other guys will do it.\"\n\n\"That's four including me. How many does she want.?\"\n\n\"Wants a dozen cocks,\" said Aliyah with a smile.\n\n\"That's a lot. Where will you find the rest?\"\n\n\"Ashley was going to ask Gordon, but you heard they broke up. I think I can recruit my brother, Dwayne, to do it. Since he's a senior, he knows Tilda. His roomie plays football, and I bet he can convince him. That would make six. Then I was hoping you could ask Henry.\"\n\nHenry was the co-editor of the literary magazine with me. We didn't socialize much, but got along fine working together.\n\n\"I don't think he's ever dated, and so probably never had a girl look at his dick. He might not want to do it.\"\n\n\"Talk him into it. Despite looking like a bookworm, he's cute and has a skinny bod.\"\n\n\"If he says yes, that leaves five more.\"\n\n\"We're working on it. Tilda mentioned that Professor Adams could do it.\"\n\n\"The art teacher? You think he'd pose for a student?\"\n\n\"In class, he told them he had posed nude when he was in school. Said there was no shame in it, and it helped him pay tuition. Of course, Tilda is too shy to ask him, so I'll do that.\"\n\n\"And the others?\"\n\n\"Ashley and Britty have to pull their own weight.\"\n\n\"I'd have thought that Ashley...oh, never mind.\"\n\n\"You thought that Ashely would ask you.\"\n\nI nodded. \"She was going to do it today. But she said when she was over this morning before the game you got a big hard on, and she chickened out.\"\n\n\"Shit, she knew I was hard?\"\n\n\"Told me it was easy to spot it. Said it looked like it was half-way down your leg. That sorta' helped me decide to be the one to ask you. Worked out great for me.\"\n\n\"I guess I can do it. What's this project called?\"\n\n\"A Dozen Cocks,\" said Aliyah, \"what else?\"\n\nShe asked me to talk to Henry and I agreed. We both stood. Aliyah looked at the bulge in my jeans. Her hand slid along my crotch. \"I think this is gonna' be lots of fun,\" she said. As the door closed to my room, I thought we might have different views on what constituted fun. As she was leaving, she said there was going to be a meeting with Tilda and all the participants next Thursday night in the Fine Arts building. She wanted to have everyone committed by then. We agreed to meet each other later at Britty's party. She was now off to talk with her brother and his roomie. She figured they'd be in their dorm, since the football player was probably trying to relax after the game. She was also going to invite them to the pizza party.\n\nI sat alone in my room, wondering how my world had changed so quickly. I smiled, thinking that I was going to be standing naked in front of Ashley. Somehow, that image brought me back to full hardness. This time I locked the door before stripping and treating myself to another monster orgasm, thinking of Ashley. It didn't hurt that I was also fantasizing about Tilda, Aliyah and Britty also being there. Then the image of Aliyah's bare breasts flashed in my brain. As I was cumming, I realized it was Tilda who was foremost in my mind.",
        "It was seven-thirty when I arrived at Britty's suite. Ashley and Aliyah were already there and talking with Tilda. One of my roommates, Gavin, was having a beer, and talking with Britty and a tall, black guy. I pulled a beer from the fridge and walked over to the three women. Tilda blushed when I said hi to her. Aliyah and Ashley each kissed my cheek and said they were going out for the pizza. Tilda and I stood there in silence.\n\nFinally, Tilda spoke. \"Aidan, thanks for agreeing to do this.\"\n\n\"Do what?\" I said.\n\nTilda turned a brighter shade of red. \"Oh, I thought that Aliyah said that you agreed to, uh, help me with my thesis.\"\n\n\"Oh, you mean stripping off, and letting you take pictures of my cock?\" Tilda couldn't hold my gaze.\n\nI felt I teased her too much. \"I'm just kidding. You're a great friend and I'm honored you'd want me in your project. I'm nervous, but cool with it. We've become good friends, at least I think we have.\"\n\n\"We have. I feel more comfortable with you than any other guy and we have great conversations.\"\n\n\"It might be a little weird being naked in front of you.\"\n\n\"Have any of our group seen you naked?\" Tilda asked.\n\nI hesitated and said, \"Sorta.\"\n\n\"What kind of answer is that?\"\n\nI explained how Aliyah caught me.\n\n\"She saw you, uh, touching yourself.\"\n\nI laughed. \"I was doing way more than just touching myself. I had an orgasm.\" Tilda shook her head in amazement as her skin turned pink.\n\n\"I can't imagine that,\" she said.\n\n\"Are you trying?\"\n\n\"What?\"\n\n\"Trying to imagine what Aliyah saw?\"\n\n\"Aidan, this is the strangest conversation we ever had. I don't talk about sex with anyone. I'm not sure I'm comfortable talking about it anymore.\"\n\nI told her we didn't have to. \"Can I ask you why you chose this theme?\"\n\n\"I've had an idea for a while. Look, I'll be explaining everything on Thursday. Would you mind if I waited until then to talk about it?\"\n\n\"Sure. Who's in?\"\n\n\"Aliyah's brother is in, along with his roomie. So is Gavin. Ashley is asking Max and Felix.\"\n\nMax and Felix are my other roomies. I found it interesting that Ashley was asking them. They both had a semi-crush on her. I think she knew that and probably was going to use that to her advantage.\n\n\"So, you're half-way there.\" Tilda nodded. I again noted how deep her blue eyes were. If she chose contacts instead of her red glasses, I doubt if anyone could ever pull their eyes off her face.\n\n\"You're staring at me,\" she said. \"Do I have like salsa on my face or something.\"\n\n\"I'm looking at your eyes. They are mesmerizing.\"\n\n\"Mesmerizing! That's not a word I hear often,\" she said with a short laugh. \"And never in context about me.\"\n\nI grinned. \"I'm an English major. Need to show off sometime. Besides, your eyes are mesmerizing.\"\n\n\"Then I'll have to keep you under my spell until the project is done. Now, if I can just have the same effect on other guys.\" She smiled.\n\n\"I'm sure you will fill your quota. It seems to be moving along.\"\n\n\"It's going better than I thought,\" she said. \"I never thought guys would be this cool about it.\"\n\n\"We'll be naked in front of a beautiful woman,\" I said. \"That's pretty sexy.\"\n\n\"You're funny.\"\n\n\"Why do you say that?\"\n\n\"Calling me mesmerizing and now 'beautiful'.\" She shook her head in amazement.\n\n\"Tilda, you are. I think you have one of the most beautiful faces I've ever seen. I'm talking in life, in movies, anywhere.\"\n\n\"How many beers have you had, Aidan?\" Her cheeks were ablaze.\n\n\"This is my first, and it wouldn't matter. Beauty is beauty.\"\n\nTilda surprised me by leaning in and kissing my cheek. \"Thanks. I appreciate it, even if you're just doing it to be nice.\" She smiled and turned to go talk with Britty. I caught her arm. \"I am telling you the truth. And here's a secret.\" I leaned in close to her ear. She smelled of soap. \"It's very erotic to think I will stand nude in front of you and you will take pictures of my cock. I hope you won't be disappointed.\"\n\nTilda's face was crimson. \"I, I won't be disappointed.\" I kissed her cheek. Then, I went over to where Gavin and Aliyah's brother were standing. I introduce myself to Dwayne. \"Yeah, my sister told me about you. You're the first one to sign up for this crazy idea.\"\n\n\"Guess so. What do you guys think?\" Dwayne said he couldn't say no to his sister and his roommate, Charles, just laughed, and said why not? Gavin said it was kinda' kinky being naked in front of someone like Tilda. I told him about the three other girls being there.\n\n\"No shit,\" Gavin said. \"You mean Aliyah will be there? No offence, Dwayne, but she is like the hottest girl on campus.\"\n\n\"I should beat the shit out of you for sayin' that,\" Dwayne said. He then smiled, \"But she's all that.\"\n\n\"Will it be weird for you to be naked in front of her?\" Gavin said.\n\n\"Don't get any wrong ideas,\" Dwayne said, \"but we have a three-bedroom apartment at home. My parents have one, my twin brothers have the other and Aliyah and I share the third. At this point in our lives, there ain't nothing she hasn't seen.\"\n\nI recalled Aliyah telling me about having brothers and knowing that they masturbated. I think both Gavin and I wondered if he saw his sister naked as well. I can't speak for Gavin, but that thought sent a rush of blood below my belt.\n\nAshley and Aliyah returned, carrying boxes of pizza. Right behind them were my other roommates, Max and Felix. Soon some other students from the floor wandered in. While we were eating, a large black guy arrived. Dwayne went to greet him, and then brought him over to introduce him as his roommate, Charles.\n\nOther than thinking about being nude in front of four of my best girl friends, the evening turned out to be like any other college dorm pizza party. There were lots of laughs and storytelling. We broke up around midnight when Ashley pulled me aside.\n\n\"Thanks for agreeing to help. Tilda is thrilled.\"\n\n\"Be a first for me,\" I said. \"I hope I don't embarrass myself.\"\n\nAshley punched my arm. \"From what Aliyah said, you've nothing to be embarrassed about.\"\n\nI'm sure she could read the surprise on my face. \"Girls talk, Aidan. That's what we do. She also confirmed what I thought I saw this morning. Said it was quite a nice package.\"\n\n\"You were telling me these stories about giving blow jobs and, yeah, I got excited. I didn't think you spotted it. Sorry.\"\n\n\"Sorry? For what? Guys have boners. Already knew that. And about noticing? Aidan, that thing was way down your leg. I honestly thought you stuffed a sock or something in there.\"\n\n\"Now I'm beyond embarrassed,\" I said. \"What comes after that--mortified?\"\n\n\"How about sexy?\" said Ashley and gave me a hug. \"Can't wait for the live show.\"\n\n\"You're nuts,\" I said, hugging her.\n\nI walked back to the dorm with my roommates. The topic of our upcoming modeling filled up all the time. By the time we arrived at our suite, we all agreed we were crazy. We also were in unison that it was going to be a sexy adventure.\n\nOver the next few days, we learned that the girls struck out recruiting additional participants. When I brought the subject up with Henry, my co-editor, I thought he was going to faint. He declined using every word for no that was in a thesaurus.\n\nI called Ashely to break the news. \"It's just as well,\" she said. \"We have six of you committed. Tilda has decided to re-title it 'A Half-Dozen Cocks.' Having one more would make it uneven. So, we'll see you tomorrow night at seven?\" I told her we'd be there.\n\nWhen I told my roomies that we were down to six instead of twelve, Max expressed relief. \"At least I'll end up having the smallest cock out of six and not a dozen.\" We tried to assure him that no one cared. \"God,\" he said. \"I hope it's not true what they say about black guys. I want to be in at least the same ballpark as the rest of you.\" Although we were roomies, we never saw each other naked. Felix broached the subject in his normal graceless way. \"Max, how the hell small are you?\"\n\n\"When I'm soft, it's about three and a half. Hard it gets to a little over four.\"\n\nI knew I was considerably more than that. I had read somewhere that the average penis size is around four inches and told that to Max. \"I can live with being average. I just don't want to ruin a chance to be with one of the girls at some point.\"\n\nGavin told him he already had zero chance of being with any of them, no matter the size of his cock. That led to a round of general abuse among us trying to put each other down. By the time we went to our rooms, I knew I would not be the runt of the litter. I didn't want to admit it, but that had worried me.\n\nOn Thursday evening, we all gathered in a small studio at the Fine Arts building. The six guys and four girls sat on stools formed into a circle. Knowing how shy Tilda is, I wondered how she'd handle this situation. To my surprise, she was cool and relaxed. It must be that she was comfortable in her own world--an art studio.\n\n\"First, thank you guys for volunteering. This is part one of my senior thesis project. I will do another one next semester.\" She looked around the room and smiled. \"Yes, it's going to be called 'Boobs Plus'. I think you can guess the rest.\" We laughed, and I chanced a glance at Ashley. She winked.\n\n\"Here's the broad context of what I'm trying to show,\" said Tilda. \"In today's society sex is discussed all the time. There is sex all the time--on TV, in the movies, in advertising--you can't get away from it. Then there's the whole politics of sex. Is there discrimination against same-sex partners, homosexuals, transgenders? Can transgender people use the bathroom of their choice, or will they be forced to use the one that corresponds to their birth sex?\"\n\nTilda read our reactions. By the nods, she knew we understood what she meant. Tilda was flushed, but it was with excitement and not embarrassment. \"We have sexual harassment in the workplace. Even here at our school, we've had both faculty and administration guilty of sexual harassment. In all but one case, it was a male harassing a female. And the majority of the harassment seemed to center around the guy exposing himself, stroking his cock in front of a woman, or making her touch, suck or fuck his cock. So, cocks are the common theme. For many women, cocks symbolize male dominance. Some women demonize cocks.\"\n\nAnother pause to determine if we were still with her. With nods and murmurs, we let Tilda know she had connected with us. Taking a deep breath, she continued. \"In some ways we have the 'Evil Cock'. But that's not all that a cock is. It's not just a symbol of oppression. Without cocks and what comes out of them, the human race would cease to exist. Cocks are also a symbol of procreation and survival of the species. Some women say they can obtain sperm from a bank to become pregnant without ever having to deal with a cock. That's true, but someone has to donate that sperm. In order to donate it, you need a cock. Here we are back to the truth of sex that cocks are necessary. A cock shooting sperm is a symbol for the future of our world.\"\n\nSome women giggled, and Tilda asked if they disagreed. Aliyah said, \"Most guys don't think they're saving the future of the world when they're shooting their stuff. I think they're just thinking how good they are, and how good it feels.\" She got high fives from Ashley and Britty.\n\n\"We're talking symbols,\" said Tilda. \"And a hard cock shooting sperm definitely represents our future. There's a third aspect to cocks that I want to explore. Unlike women, whose breasts are highly visible sexual markers, men hide their cocks. We don't know what sort of cock we're getting until we're engaged in some sex. Guys, on the other hand, may want to initiate sexual activity based on the size and appearance of a woman's boobs--even though they may be covered.\"\n\nBritty said, \"There's no 'may' that they're attracted to boobs. I'd put it at one-hundred percent.\" We all laughed.\n\n\"Not going to argue that, either,\" said Tilda. \"But the fact remains that as women we know little about a guy's cock until we've had some sort of sex. Talk about buying a pig in a poke.\" More laughter. \"Plus, there's this sorta' double standard about showing cocks. In film, you look at women naked all the time. Topless and full frontal are in so many films. It is rare to have a guy naked.You hardly ever see a cock in mainstream movies. Even on the few times there is a cock, it's never hard. I think it's because guys direct most of the movies, and guys run the studios. Anyway, cocks, especially erect ones, are one of the last big taboos in entertainment. I want to focus on cocks, and that goes against the grain. That's why the first part will be naked guys, and the second will be naked girls.\"\n\n\"So, getting back to my premise, I want to show three aspects of cocks. One will be the power symbol. I'll have close-ups of cocks, soft and hard. Imagine a frame of a picture with just a cock. Two, I'll want to show the procreative aspect of cocks by capturing them as they orgasm. I'll use super-fast speed settings to catch the moment.\"\n\n\"With some of the guys I've known,\" said Britty. \"You definitely need super-fast speed.\" That cracked up all of us.\n\n\"The third aspect is the relationship between attractiveness and cocks. I'll have the closeups of the cocks but also head shots. Then I'll have women first arrange the head shots in order of their preference for dating. Now, guys, don't be freaked out. Just as there is a girl for every guy, there are guys who ring different bells for different girls. You all are objectively good-looking men. I'm sure each of you will earn your share of admirers. Then, I'll have women arrange the pics of cocks and faces in a preferential ranking. After they've made their choices, they will have to answer whether the face or the cock will be their final determinant. They will make their choice--face or cock. Finally, I'll have full body shots. The women can determine if their preference for cocks is greater than their choice of faces.\"\n\nTilda paused and let her words sink in. I now realized that people would not only see my cock, but my entire body. I thought maybe it would just be the cock and viewers wouldn't know whose it was. By the looks on the other guys, I thought they might have the same concerns.\n\n\"Tilda, I didn't think people could identify which cock went with each of us,\" I said. \"I thought it would be sorta' anonymous.\"\n\n\"I thought about that, too,\" she said. \"The thing is that as symbols, cocks could standalone, so to speak. But when we evaluate attractiveness, I really believe that we need more than a cock. I am curious if a woman changes her opinion on whom she'd want as a sex partner after she sees which face goes with which cock. Does facial or total body attractiveness outweigh the attractiveness of a cock by itself? I don't know the answer, but I want to pose the question and observe what happens.\"\n\nI nodded that I understood what she said. I was still uneasy about the full body poses. \"How are you going to display the photos?\" I asked.\n\n\"We'll have an exhibit of photos in the gallery upstairs,\" she said. \"I'll also post the project online and have women make their selections that way. At the exhibit, I'll have the full body shots and underneath I'll show how many preferred the face, how many the cock, and how many switched their preference when they looked at the entire body.\"\n\n\"Maybe we should have the guys standing there in the nude,\" said Ashley. \"That'd be way cooler than pictures.\" I could feel my balls shriveling at the thought of being naked in front of a gallery full of students and faculty.\n\n\"I hadn't thought of that,\" said Tilda. \"It gives me something to think about. So, do you guys have questions?\" No one said anything. \"Did I scare you off?\" asked Tilda.\n\n\"Nah,\" said Dwayne. \"We're cool.\" I nodded, and soon all six of us agreed.\n\n\"I've asked our friends to help,\" said Tilda. \"I will shoot in color and use top quality printing. They'll help with make-up and stuff.\"\n\nGavin said, \"Never had anyone powder my dick before.\" That cracked everyone up and eased some of the tension that had been building.\n\n\"What about grooming?\" Aliyah asked.\n\nTilda turned red. \"Yeah, I forgot to bring that up. How many of you guys do something down there?\"\n\nI kept my hand at my side, as did Gavin and Felix. Charles, Dwayne, and Max raised their hands.\n\n\"Uh, could you tell us what you do? If you don't mind,\" said Tilda. Her blush now extended down her beautiful neck until it was hidden behind the red bandana.\n\n\"Smooth as silk,\" said Charles.\n\n\"Same here,\" added Dwayne.\n\n\"Keep it trimmed and short,\" said Max. \"Except for my balls, they're smooth.\"\n\nTilda took in all the information. \"I think we need to have an equal playing field. Since there isn't time for the others to grow out their...their stuff, I'm asking the other three if you would consider going smooth. And, Max, could you do the same?\"\n\n\"This is really becoming stranger,\" I said. \"But what the hell. I'm in.\" All of us agreed.\n\n\"If anyone needs help,\" said Aliyah, \"I'm sure we can lend a hand.\" The other girls laughed. Ashley looked at me and once more winked.\n\n\"Been doing it while,\" said Dwayne. \"I think I can manage.\" \"Same here,\" added Charles.\n\n\"Too bad,\" said Britty. \"If you change your mind...\"\n\n\"If any of you want some help, I'll leave it to you to work it out,\" said Tilda. \"Thanks again. Meet you all on Saturday at nine in the morning. Please plan to stay all day. I may need one more session, but I'm hoping to have all the photography done on Saturday.\"\n\nThis was a bye week for the football team, so Charles could be there. The rest of us said we'd be there at nine. Tilda stayed to do some stuff in the studio, and the rest of us walked out together.\n\n\"Anyone up for a beer?\" asked Britty. My roomies, Dwayne and Charles agreed. I begged off since I had a paper due the next day and had to finish it. Ashley said she was going back to her room. The others headed to an off-campus pub. As Ashely and I walked back to our dorms, she slipped her arm through mine,\n\n\"Second thoughts?\" she asked.\n\n\"If it were anyone except Tilda, I think I mighta' bailed. The thing is, she seems so sincere that I want to help her. Besides, she's one of us, and we don't let each other down.\"\n\n\"You're a great guy, you know that? And, I think you are attracted to her.\"\n\n\"I don't know about being a great guy and I'm not attracted to her. She's a friend.\" She kissed my cheek. \"Sure.\" We walked on for a bit and then Ashley said, \"Aidan, if need help with what Tilda said, I can do it. I had to do it for Gordon.\"\n\n\"He liked to be smooth?\"\n\n\"No. I liked him smooth. I hated getting those stupid hairs in my mouth. Got pretty good at it.\"\n\n\"Would that be weird,\" I said. \"Us being friends and all.\"\n\n\"I'm going to be there when you're posing, so I will see you naked and with a hard on, plus shooting your stuff. Consider this a sneak preview. Anyway, Aliyah said she touched you.\"\n\n\"Yeah, she did. Okay. I'd probably cut myself, anyway. When?\"\n\n\"I'll come over Friday night. I'll bring a couple subs and we can eat while I do some cleaning.\"\n\n\"Brings a whole new meaning to friendship,\" I said.\n\n\"Sounds good to me,\" Ashley answered. \"And, when it's time for next semester's project, maybe there will be ways you can help me.\" Imaging doing anything with a naked Ashely had me straining inside my jeans.\n\nBy the time Friday afternoon rolled around, I was a bundle of nerves. To add to my anxiety, Max asked if I minded if Ashely finished trimming him while she was here. I rationalized that we all would be naked together on the next day, so why not? I texted Ashely and she replied no problem. At six Ashley showed up with a bag full of steak and cheese subs and a six-pack. We ate in the living room. Gavin and Felix were over at Aliyah's. She and Britty were taking care of shaving them. After we finished eating, Max and I kept looking at each other. Ashley understood we were on edge.",
        "\"Guys, relax,\" she said. \"It won't take long and I promise not to accidentally cut off too much of your dicks.\"\n\n\"That's not helping,\" said Max.\n\n\"Just kidding,\" said Ashley.\n\n\"Max is a little sensitive about his dick, and I emphasize the word little,\" I said.\n\n\"Thanks, asshole,\" said Max.\n\n\"Yeah, asshole,\" said Ashley, \"leave him alone. Max, relax. Guys come in all sizes, just like girls' boobs. As long as it works, all is good.\"\n\n\"It works fine,\" said Max with a shy smile.\n\n\"Then we're good. Now you guys go into Aidan's room and strip off. I brought some stuff, and I need some warm water from the bathroom.\"\n\nShe carried her backpack toward the bath, and Max and I went into my room. We looked at each other and broke up. While laughing, we started pulling our clothes off. When I dropped my boxers, Max let out a sound.\n\n\"Shit, Aidan, I'm going to look like the totally deprived one next to you.\"\n\n\"You heard what Ashley said. She's cool and won't be judgmental.\"\n\nHe dropped his underwear. Maybe it was his anxiety, but his dick barely registered beyond his closely cropped pubic hair. His balls looked shrunken. He looked down and cupped his crotch.\n\n\"Shit, this always happens when I'm uptight. Ashley's going to laugh her ass off.\"\n\n\"I'll do nothing of the kind.\" We turned as Ashley walked in carrying a basin of water, a towel draped over her arm, and her backpack over her shoulder. Max stood with his hands cupped in front. Ashely put the basin on my nightstand and sat on the bed. She took a quick look at my naked body, and a smile cracked her lips.\n\n\"Max, relax. I don't care what size you are. I think you are really good-looking and a terrific guy. Plus, you have lots of balls to participate in this project. Come on over here, and we'll clean you up.\"\n\nMax took a deep breath and dropped his hands. His dick still looked like it was trying to disappear inside his body. Slowly, he walked toward Ashley.\n\nShe put her hands on his crotch. \"I'm just going to warm you up a bit. It's kinda chilly in here, and that makes things shrink. You don't mind that I touch you?\" Max said he didn't mind at all. As she was fondling his package, Ashley talked with him. \"You know, Max, that different size dicks are good for different things.\"\n\n\"Really?\" he said.\n\n\"Sure, take oral, for example. If a guy is too big, a girl has trouble getting it all in her mouth. Some people claim they can deep throat, but that's probably a myth. A man like you would be great for oral.\" Ashley moved her hand around his groin, pulling his shaft with her thumb and forefinger. \"I bet women like doing oral for you.\"\n\n\"I guess.\"\n\n\"Never had it done?\" she asked. He shook his head.\n\n\"Maybe when this is over, someone might be inspired to show you.\" Max grinned as his dick grew a little.\n\n\"It's looking better already.\" Ashley dipped a clean washcloth into the warm water and held it against Max's balls. As she softened the hair, she kept talking.\n\n\"Of course, another advantage of a cock like yours is anal. I bet you would be perfect in a girl's butt. Have you ever done anal?\"\n\n\"Fuck, Ashley, I've never been laid.\"\n\n\"Imagine all the girls missing out on this cute dick.\" She stroked his dick a few times.He became hard. She then pulled the cloth away to squirt a snowman of shaving cream into her palm. She spread it around his balls before covering his remaining pubic hair.\n\nShe pulled the skin tight on one ball and carefully dragged a razor over the flesh. She repeated this step until she had removed all the stubble from his balls. She wiped him clean with the damp cloth and ran her fingers over his flesh. \"Great,\" she said.\n\nWith one hand on his erection, she shaved his pubic region, moving the shaft back and forth to gain access to one spot or another. After wiping him clean, spent a few minutes cleaning up some spots she missed, all the time gently stroking him. Finally, she had Max sit on the bed and lean back, raising his legs. She shaved his taint and all along his crack.\n\n\"You are good to go, Max. If you need to go to your room, I'll understand.\" Max was sweating. He picked up his clothes and hurried from the room.\n\nAshely looked at me. \"I don't think that'll take too long.\" I was semi-hard from watching her.\n\n\"By the looks of you, I don't think I need to warm you up like Max.\"\n\n\"I could run outside in the cold,\" I said.\n\nWe both laughed. \"Why don't you lie down on the bed? It'll be easier.\"\n\n\"Why?\" I asked as I lay on the sheet.\n\n\"Because you're a lot bigger than Max, and I can manage better this way.\"\n\nI put my hands behind my head and tried to relax. \"That was nice what you did for Max. He was really freaking about his size. I think you allayed his fears.\"\n\n\"I guessed as much. It wasn't that much that I did. And, Aidan, before we start, I want you to know that it's all right if you become excited. Don't be embarrassed if that happens.\"\n\n\"I'm pretty sure it will,\" I said. \"It always seems to happen when a beautiful girl plays with my dick.\"\n\n\"You think I'm beautiful?\" I thought, what is it with these girls? First Tilda and now Ashley. These are the two most beautiful women I've ever known.\n\n\"I hate to say this as English major, but words fail me. I could stare at you all day.\"\n\nAshley dropped her head as she took in a deep breath. \"For the record, Aidan, I really, really like you. You're so handsome and so nice. To think that you find me attractive is overwhelming.\"\n\n\"You never knew I liked you?\"\n\n\"Yeah, sure, as a friend.\"\n\n\"As a friend and as a woman. I dream about you, Ashley.\"\n\n\"Were you thinking about me the other day when you got hard?\"\n\n\"Yeah. I was imagining your perfect mouth wrapped around my cock, like when you were describing how you like oral. That's what I was thinking about later when Aliyah caught me jerking off.\"\n\nAshley lifted her head and our eyes met. \"You were jerking off to me?\"\n\n\"Yes, and it was one of the best orgasms I ever had.\" I didn't mention that Tilda occupied part of my fantasy. \"I hope that doesn't gross you out.\"\n\nHe shook her head. \"Thanks, Aidan. This is the best cock I've ever seen.\" She placed her hand on my shaft. \"I never saw an uncircumcised one before. Aliyah described it, but it so much more erotic in person.\"\n\n\"She described my cock to you?\"\n\n\"Sorta made her,\" Ashley said with a giggle. \"Better get to work, though. Max will be wondering what we're doing in here.\"\n\n\"Max is probably jerking off for the fifth time right now, but go ahead. Just be careful.\"\n\n\"I would never want to hurt this.\" Ashley bent and kissed my tip.\n\nBlood poured in, and my shaft thickened.\n\nLike with Max, Ashley held a warm cloth to my balls. As she did so, I could feel her fingers probing, and playing with each nut. My dick rose. She pulled the cloth away and covered my sac with cream. She did not spread any on my public hair. She pulled the skin of my scrotum and shaved the hairs away. By this time, I was totally hard and pointing to the ceiling.\n\nShe remarked that I was quite hairy and took a long time to make me smooth. She had me pull my legs apart and shaved my taint. Her finger ventured to my butt hole and her fingernail brushed the opening. A small drop of pre-cum appeared on my tip. After cleaning along the crease of my groin, Ashely pulled scissors out of her pack. \"Need to trim some of this away before we can shave.\" Her hand brushed against my erection. She sighed, put the scissors on my stomach and began to stroke me.\n\n\"When your foreskin pulls back, I can look at how big your cap is. Do women love it when it goes inside?\"\n\n\"I'd rather not talk about other women right now,\" I said. Ashely stroked me with long, slow movements.\n\n\"I can barely fit my fingers around you at the base. This would fill up a woman.\"\n\n\"Only thinking about one woman at the moment.\"\n\n\"Tilda didn't go into details, but when she wants to show shots of ejaculations, she knows the guys might need help. If you do, I want to be the one to jerk you off. Would you mind?\"\n\n\"Ashley, I would love it. And if you do this much longer, we're going to have a trial run.\"\n\n\"Sorry,\" she said, and pulled her hand away. She pulled up my pubic hair and snipped away. When she was satisfied with what was left, she covered my public area with cream and shaved me until only smooth, shiny skin was showing. After wiping off the cream, she bent and took my cock in her mouth. She eased herself down until my entire shaft was in her mouth. My tip moved into her throat. I was being eaten alive by this beautiful girl. My sexual senses were on overdrive. Just when I thought I would lose it, she slowly pulled off.\n\n\"I thought you said deep throating was a myth?\"\n\n\"Let Max think so,\" she said. \"I could live on this cock.\" Her head moved back toward my tip when Max banged on the door.\n\n\"You guys almost done?\"\n\nAshley pulled away and sat up. \"Yep, all done. Come in.\"\n\nMax was naked and walked in. He looked at my erection.\n\n\"Goddamn it,\" he said. \"I was just starting to feel good about this.\" He pointed to his limp dick that was no longer shriveled and hung down. \"Then I discover that thing. Life is so unfucking fair.\"\n\n\"Max, did I not tell you I liked your cock? What good does it do to compare yourself to someone else? You will never have a cock like Aidan's, and I will never have boobs like Aliyah's. So, that's life, fair or not. Finding yourself while enjoying who you are is what's important.\"\n\nMax looked down at his now erect dick. \"Okay, little guy, we have to find some life.\"\n\nAshley motioned him to come to her. She grabbed his dick with one hand, mine with her other hand. \"Look at me,\" she said. \"Luckiest girl in the world with two fabulous cocks. Ain't life great?\"\n\nWe all laughed. Ashley stood and gave Max a hug. She told him to get dressed because she was taking us all out for a beer. He left, and I stood. Ashley came into my arms. We kissed, and her hands held my butt and pulled me tight. My erection was reaching up between us.\n\n\"After this project,\" she said, \"I want to fuck you.\"\n\n\"Won't that mess up our friendship?\" My cock throbbed with the thought of a new level of friendship. \"I think we can handle it,\" Ashley answered as her hand ran the length of me erection.\n\nThe night was a blur. We had beers and laughed about what lay ahead. I walked Ashely back to her dorm. As she paused at the door, I kissed her. She responded, and soon our tongues were getting acquainted with each other quite well.\n\n\"Remember, after Tilda's done, you owe me a fuck,\" she said.\n\n\"I pay all my debts,\" I answered. Her hand ran up and down my shaft, standing up inside my pants. \"I'm really looking forward to this.\" She squeezed my dick, kissed me, and went inside. A nice, long masturbation session helped me sleep that night. I was up early in the morning and down to the showers by seven-thirty. Gavin was just getting out. We looked at our newly shaved areas and laughed.\n\n\"Crazy, man,\" he said.\n\n\"Got that right,\" I replied.\n\nThe four of us stopped by the dining hall to grab a bite and were soon standing in the studio at the fine arts building. Tilda, dressed in white overalls, white tee shirt, neon green sneakers and red bandana, greeted us. Dwayne and Charles, along with the three other girls, were also in the room.\n\nTilda started talking to us as we milled around. \"Thank you for coming today. Let me outline our schedule.\" I tried to quiet the butterflies in my belly and wondered if the other guys were as nervous as I was. We all maintained a cool exterior, but the thought of stripping in front of my best female friends was making my scrotum contract.\n\nTilda said we would begin with the head shots. We would need to take our tops off because she wanted to include the top of our shoulders. After that, she said we would begin the full body pictures. She pointed out a small posing platform with a neutral background. She had set up lights and told us that the girls would hold reflectors to give a view without any shadows.\n\nAfter that we'd break for lunch. Tilda had arranged for pizza to be delivered, and she pointed out two coolers in the back of the room. She had stocked them with ice, water, and soft drinks. She apologized for not having beer but told us it was against the university's rules. After lunch she wanted to do the erection shots. She explained she would take several of each man from various perspectives. Finally, she would want the ejaculation series. Even though she tried to be cool and professional, Tilda was beet red when she covered this area.\n\nAs she was speaking, I heard the studio door open and close. I turned as another girl came in. I sort of recognized her from around campus and thought she was a freshman or sophomore. When Tilda had stopped talking, she motioned to the girl to come up.\n\n\"Everyone, this is Gretchen. She's a sophomore and has been a studio assistant this year. She'll be helping me with cameras, lighting and other things. She also has been a figure model for our photography classes this year and did nude modeling for a drawing class last year, too. So, guys, she knows what it's like to stand naked in front of other people. I'm sure she'd be happy to talk you through any nerves.\"\n\nWe all said hi and Gretchen waved to us. She was pretty, with a warm smile. \"No problem,\" she said. \"You just take off your clothes. That's something you do every day. Believe me, after a couple minutes, you'll even forget you're naked. So, have fun.\"\n\nI'm not sure that her words calmed me, but she seemed so cool about posing nude that maybe it wouldn't be so bad. Tilda pulled me out of my thoughts when she asked the guys to take off our tops. After first looking around at each other, we shed our shirts. Charles, the footballer, looked like a block of black granite. He had muscles on top of muscles. The rest of us were average, no one heavy, with Max on the skinny side.\n\nGretchen placed a stool in the middle of the posing platform. Tilda asked Charles to sit. Tilda directed him to lift his head and turn it slightly to the right, but keep his eyes on the camera. Gretchen gave large rectangular reflectors to Ashley and Britty and positioned them to balance the light on Charles' face. Tilda gave a few directions to adjust the lighting and began taking pictures. For something so simple, she spent over fifteen minutes taking pictures of Charles. By the time she finished with all six of us, it was after ten in the morning.\n\n\"Guys, we're going to do the full body nudes now,\" said Tilda. \"You may think it would be easier if you kept your clothes on until the moment you had to pose, but I think it will be better for everyone to strip now. That way you will be more comfortable being naked, and more relaxed. You can get undressed in the back and leave your clothes on a chair. Also, feel free to sit if you want or have something to drink. There are some towels to sit on. If you have to use the restroom, which is down the hall to the right, please put on one of the robes that are hanging over there. It's not cool to walk around the building naked.\"\n\nWe listened, and when Tilda stopped talking, we kept looking at her. Finally, Gretchen spoke. \"Guys, take 'em off.\"\n\nThis was the moment. Do it or leave. Gavin unbuckled his belt. The rest of us followed his lead. In seconds, six guys were standing around in our underwear, all boxers. Dwayne laughed and said, \"What the fuck.\" He pushed his boxers to the floor and stepped out of him. The girls stared, and then one by one started clapping. Dwayne smiled and took a bow. The rest of us were nude within ten seconds. This time there were cheers to accompany the clapping. I tried to avoid eye contact with Ashley. I didn't want to react with an erection.\n\nAs I avoided Ashley, I looked at Tilda. She faced me, but her eyes were definitely cast below my waist. Her blush was more prominent than I could ever remember. I think she felt me looking at her and raised her head. I smiled, and she put her hand to her mouth. She turned and walked to her camera set-up. I think I was like the other guys, curious but not wanting to openly check out each other. Gretchen stood in front of us.\n\nGuys, this is probably the first time you've been in a situation like this. Sure, you've been in showers, but this is different. I know because I've been there, just like you. It's okay to feel a little uncomfortable. Let me say, though, that you all are attractive, and have pleasing bods. I also know from some of my guy friends that you are afraid to look at another guy's dick for fear that the others will think you're perving. Get over it. Look at each other. There are six great cocks, and it's not gay to look at them. Do it now and get it out of your system.\"\n\nGretchen stood there, hands on hips, waiting. One by one, we looked around. I found out that Dwayne was a little bigger than I was, but I was bigger than the others, plus I was the only one not circumcised. Max, true to his prediction, had the smallest package. It was not as shriveled as when he first let Ashley see him. Being guys, we just laughed as we looked at each other.\n\n\"Dwayne, since you were the first to be naked,\" said Tilda, \"How about we have you pose first?\"\n\nHe walked up onto the platform. Tilda directed him to stand with his feet spread apart shoulder-wide. She wanted his hands to hang down with his palms facing forward. She checked her viewfinder and then directed Britty and Ashley on how to hold their reflectors. Tilda ran off a couple shots. She had a laptop set up on a table next to her and checked out the pictures on the screen. She called Gretchen over. They conversed in low tones before Gretchen grabbed a small bag from one of the tables at the back of the room.\n\nGretchen walked over to Dwayne. \"We have a couple reflections,\" she said. \"Do you mind if I put a little makeup on?\"\n\n\"Nah,\" he said.\n\nGretchen opened a compact with dark-colored powder. She dabbed some on his forehead and patted it in with her fingers. She used a small towel to wipe his chest free from perspiration and added some powder. Finally, she bent and added some powder to the top of his dick. She turned to look at Tilda, who looked in her viewfinder and snapped one off. She checked the monitor and gave Gretchen a thumbs-up. Tilda repositioned the reflectors and ran off a dozen or so shots. She tried some with Dwayne smiling, and others with a neutral expression. She also had him turn his back to her. Gretchen used the towel to dry his back and applied powder to his back, butt, and calves. Before Tilda was through with Dwayne, it was close to noon.\n\nTilda said we should take a break because the pizza would be here soon. She also apologized for how long it took with this first body pose. \"I tried a bunch of different settings and lighting options. I think the rest of them will go more quickly.\"\n\nThere was a knock at the door. Gretchen went over and opened it to find a delivery girl with our pizzas. Gretchen asked her to put them on the table. The girl did a double take when she looked at six naked guys. She smiled and carried the boxes to the table.\n\n\"Photoshoot,\" Gretchen explained. \"Hope it doesn't bother you.\"\n\n\"Not at all,\" she said. \"I'm studying drawing, and this is sorta' normal. Usually we don't have so many models. What's this all about?\"\n\n\"Cocks,\" said Gretchen.\n\nThe girl looked around. \"Got a lot of material to work with.\" Gretchen paid her, included a good tip.\n\nWe all dug in. I'd have to say this was the most unusual lunch I ever had. Eating pizza in the nude with five other naked guys did not happen every day. Well, it never had happened before. As I finished my second slice, I realized Gretchen was right. I had almost forgotten I was naked. When we finished, Tilda asked Charles to pose. Gretchen came and stood next to me.\n\n\"Aren't you going to help?\" I asked.",
        "\"Tilda and I decided to split up the group. I have Dwayne, Felix and Max. Aliyah has the rest.\"\n\nI watched as Aliyah powdered Charles's dick. \"I guess it would have been awkward to have her have to do that to her brother,\" I said.\n\n\"Exactly,\" said Gretchen. I looked at her. She was really pretty, and her body appeared nice. She wore jeans that were tight enough to allow me to admire her butt. On top, she had a long-sleeved tee shirt and did not appear to wear a bra due to the free motion of her breasts.\n\n\"Yeah,\" said Gretchen. \"No bra.\"\n\n\"I, uh, wasn't...\"\n\n\"Sure you were,\" she said and smiled. \"It's natural. Just like me admiring your dick. I like the uncut look. I am using all the restraint I have not to pull back your foreskin.\" My dick acknowledged this attention by thickening and lifting a bit. Gretchen smiled. \"Nick dick trick,\" she said. We both chuckled.\n\nTilda finished with Charles before calling for Max. I think Max blushed almost as much as Tilda had done earlier. Gretchen moved forward. She grabbed a big towel from the table and wiped down almost his entire body, since Max was sweating heavily. She leaned in and said something to him. He laughed and took a deep breath. Gretchen wiped down his back.\n\nGretchen had a different compact with a lighter colored powder in it. She didn't need Tilda's direction to see all the shiny spots. She covered them, and Tilda positioned the lights and reflectors. After some test shots, she directed Gretchen to touch up some spots. In addition to his forehead, Gretchen had to use the towel on his groin, especially in the crease of his thighs and pubic area. She dabbed powder on his thighs and balls.\n\nMax grinned at the attention Gretchen was showing. When Tilda finished with him, she called for Gavin. Ailyah dried and powdered him before helping him strike a pose. We moved along without delay. I was the last to be asked up to the posing platform.\n\nAliyah whispered in my ear that it was good to see an old friend. She dried and powdered me. I wasn't sure my dick needed as much attention as she showed it, but I didn't complain. Ten minutes later, Tilda and Gretchen were reviewing the shots and talking in low tones.\n\nAshley came over to me. \"Erections and ejaculations are next.\"\n\nI felt my scrotum tighten. \"Remember, Aidan, I'll help you.\"\n\nTilda called us back together. It was almost four o'clock. \"Guys, this has taken a lot longer than I had planned. We'll never finish the rest tonight. Can you all come back tomorrow? Let's begin at nine. We have the erections and ejaculations left to do. I plan on doing each guy with an erection and moving immediately into the ejaculation. When you're finished you can leave, although feel free to stay.\"\n\nWe all said we could come back. Charles asked if he could go first, since they had a short team meeting around lunch time. Tilda agreed, and Dwayne said he'd be next, and would leave with Charles.\n\nWe broke up, and people were heading out. Ashley asked me to stay. It was just me, Ashley, Gretchen, and Tilda remaining. Ashely said she wanted to go out for drinks with me. I helped put things away in the studio. Tilda and Gretchen were reviewing the day's shoot. I came up behind them. My cock was on the screen.\n\n\"It's so beautiful,\" Tilda said. I cleared my throat, and she spun around. Her face fell and turned brilliant red at the same time. \"Oh, my god, Aidan, I didn't know you were there. I'm so sorry.\"\n\n\"Tilda, having you think I look good is nothing to apologize for. I'm flattered.\"\n\n\"Well, here's to flattery,\" said Gretchen. \"I think it's one of the best cocks I've ever seen.\"\n\n\"Here, here,\" said Ashley, who was now standing next to me, and looking at the screen with my manhood on it.\n\n\"Stop it, you guys. I'll get a swollen head.\"\n\n\"We could only hope,\" said Gretchen. We all cracked up. Ashley pulled me away, and we said goodbye to Tilda and Gretchen. I got dressed, and we left.\n\n\"I think those girls want to fuck you,\" said Ashley when we were outside. We stopped by the steps to talk.\n\n\"Doubt it,\" I said. \"Do you think Tilda's ever had sex?\"\n\n\"From what she's said from time to time, maybe not. But, she'd like to go to bed with you.\"\n\n\"No way.\"\n\n\"Yes. She told me that she was exceptionally excited that you were going to be posing. She confessed to being curious about how you looked naked. From what we just heard, I think she's pleased with the results.\"\n\n\"That's kinda embarrassing,\" I said.\n\n\"Don't you find Tilda attractive?\"\n\n\"Definitely,\" I said immediately.\n\nAshley punched my arm. \"You don't have to sound so excited, asshole.\"\n\n\"I meant, well, yeah she is. Of course, not as much as you.\"\n\n\"Nice recovery. I was busting your balls. I think she is hot, too. Ever wonder what she looks like out of those overalls?\"\n\nIf Ashley saw my cock in its current state, she'd have her answer. \"Maybe.\"\n\n\"I think it's more than maybe, Aidan. I have.\"\n\n\"Have what?\"\n\n\"Seen her naked. Well, pictures of her naked.\"\n\n\"When? How?\"\n\n\"She and Gretchen posed together for a photography class once.\"\n\n\"Both of them? Together?\"\n\n\"Seem to have a problem speaking in sentences, Aidan.\" Ashley squeezed my bicep as she said that.\n\n\"Sorry. that'shat's a provocative thought.\"\n\n\"If you mean fucking hot, then yes, you could call it provocative.\"\n\n\"She showed you the pictures?\"\n\n\"Yeah. She was really embarrassed, but wanted to talk about next semester's project that will feature females. We got talking, and she admitted she once posed. I finally got her to show me.\"\n\n\"And...\"\n\n\"You mean you want me to describe her body to you?\" she teased.\n\n\"Nope.\" Ashley stopped walking and looked at me.\n\n\"I want you to describe both of their bodies.\"\n\n\"You are such a pig,\" said Ashley while laughing.\n\n\"So?\"\n\n\"Well, Gretchen is really pretty. She's got great proportions. Naked, her legs look long, and her upper body sets on top of those legs perfectly. She has medium-sized breasts, but they look firm, and sit on her chest well. Nice nipples.\"\n\n\"Color?\"\n\n\"Her areolas are a dark brown and her nips are darker still. They were erect in the pics. Looked tasty.\"\n\n\"Tasty? Have you ever...?\"\n\n\"That's for another conversation. Do you want to hear about the rest, or not?\"\n\n\"Forgive me for interrupting. I will pursue that other question later, though. So, what does the south state look like?\"\n\n\"A nice trim strip, dark like her hair. She trims or shaves along her thighs and lips. Sexy looking.\"\n\nAshley let her eyes fall to my front. She smiled at the obvious bulge.\n\n\"Also, she has a great butt. Tight, round and firm.\"\n\n\"Sounds hot.\"\n\nAshley hip-checked me. \"I'd say hot. You interested?\"\n\n\"I have other things on my mind,\" I said, letting my eyes roam over her body.\n\n\"I did make a commitment,\" she said.\n\n\"I'm gonna' hold you to it.\"\n\n\"I'm looking forward to holding it, myself,\" she said with a grin.\n\n\"What about Tilda?\"\n\nAshley was quiet for a bit. \"Aidan, that was about the sexiest body I've ever seen.\"\n\n\"Tell me more.\"\n\n\"You can see how tall and lean she is. What we don't see is how unbelievably toned and shapely are her long legs. She has great definition, and her calves are like sculpture. Smooth skin, no blemishes. I heard she had a tat and come to find out she has two. One is sort of a tramp stamp just above her sweet butt. Firm buns by the look of them. The other is a colorful butterfly on the inside of her right thigh. It's just an inch below her sex. She has a close-cropped band of white blond above her C. Nice, tight, smooth and bare lips, nothing from the inside showing. You'd love it. The other surprise was the nipple ornament in her right breast. Just a small silver bar. Looks erotic on her. Her breasts are not large, smaller than Gretchen's but they sit high on her chest and have a slight upturn at the ends. Bet you'd like them, too.\"\n\n\"Obviously smaller than yours,\" I said.\n\n\"I have great tits. You're gonna love 'em.\"\n\n\"I'm sure I will. There isn't anything about you I don't like.\"\n\n\"Do you mind that I've given a lot of blow jobs?\"\n\n\"It surprised me,\" I said, \"more than bothered me.\"\n\n\"Why?\"\n\n\"You have this whole innocent thing about you.\"\n\nAshley remained quiet for a while. When she spoke, she looked directly at me. \"I've told you about the cocks I've sucked. I've only slept with one other guy besides Gordon. I'm telling you this so you don't think I'm some slut, and an easy fuck.\"\n\n\"Ashley, I think you're one of the best people I've ever met. It doesn't matter to me what your sexual history is.\"\n\n\"Really? How many girls have you fucked?\"\n\n\"Just girls?\" We both cracked up.\n\nI put my hand on her shoulder. \"I've slept with three girls, had oral sex with two others, and am now waiting to make love to the most beautiful girl I've ever known.\"\n\nAshely pulled me to her in a huge hug. \"You're a good guy, Aidan. I promise we'll have fun in bed.\"\n\n\"Fun is good. Exhausted would be better.\"\n\n\"Deal,\" said Ashely. \"I'll fuck you until you can't remember your name.\"\n\n\"And, I'll fuck you until you cry for mercy,\" I said.\n\n\"Sounds like a good deal,\" came a female voice behind us. We both turned to see Gretchen standing there.\n\n\"Uh, you weren't supposed to hear that,\" said Ashley.\n\n\"Yeah, but I did. I can imagine you two would look great together. And, if when Ashley calls for mercy, maybe I could help. Actually, I could help either of you--or both of you.\" Gretchen slapped my butt and walked off toward the quad.\n\n\"Did she just intimate that she'd be up for a three-way?\" I asked.\n\n\"I think it was more than intimate,\" replied Ashley. \"It's an interesting thought, though.\"\n\n\"Have you ever...?\"\n\n\"After I fucked your name out of you, we can have this conversation,\" said Ashley while running her hand along my erection hidden inside my pants.\n\n\"But you'll be too fucked to talk,\" I said.\n\n\"Yeah, ain't life great.\" We walked back to our dorms.\n\n(This is the end of Chapter 1. Next time we'll pick up for the remainder of the photoshoot. I hope you enjoyed the story so far.)"
    ],
    "authorname": "AltheaRose",
    "tags": [
        "nude modeling",
        "caught masturbating",
        "masturbating",
        "group nudity",
        "cfnm",
        "shaving genitals"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/cocks-ch-01"
}