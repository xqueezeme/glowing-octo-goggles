{
    "title": "Not My Type: Adele Ch. 09",
    "pages": [
        "Nate removed his hand from beneath my skirt and drew my blouse closed, all without looking at me. He kept his eyes cast downward as he stood and didn't turn around right away. Instead he took a few deep, steadying breaths and began doing up his own buttons.\n\n\"Could you please give us a moment, Mrs. Macintyre?\" he said asked in a very tight voice.\n\nThough he blocked my view of the doorway, I felt her disgust and imagined the angry expression on her pudgy, squinty face. My sensual high had been snatched away so swiftly I felt like I'd been hit by a truck.\n\n\"I most certainly will not!\" Mrs. Macintyre huffed. \"What in heaven's name are you doing?\"\n\nI would have thought it was fairly obvious. I tried to meet Nate's eyes, but his chin had sunk to his chest and he wouldn't look at me. He released a weary breath and squared his shoulders.\n\n\"Nate?\" I implored but he didn't respond. \n\n\"I wasn't really asking, Mrs. Macintyre.\" Nate's voice hardened as he directed it towards the woman standing in the doorway. \"Give us a moment.\"\n\nI heard an indignant huff before the study door slammed shut. \n\n\"Are we in trouble?\" I whispered when I found Nate looking down at me. I watched as he wilted. \"I don't know.\" He let out another tired sigh and ran his fingers through his hair. \"We shouldn't be, but the Macintyres do like to blow things out of proportion.\"\n\n\"Macintyres? Plural?\"\n\nNate nodded. His forehead creased as he scowled. \"I'm pretty sure I saw Jenny lurking in her aunt's shadow.\"\n\nDamn.\n\n\"Do you want me to stay or go?\" I asked softly, knowing the women on the other side of the door were more than likely doing their best to listen.\n\nNate considered me for a moment as I sat up and wiggled myself back into my bra then began doing up the buttons on my blouse.\n\n\"Because I'll stay if you want me too. We're in this together,\" I reminded him.\n\nNate stuffed his shirt-tails back into his pants. \"You should go. You don't have to put up with their dramatics. I can handle it.\"\n\nThere was a sinking feeling in my belly. Nate did know the Macintyre ladies much better than I did, but I was just as culpable as he was and I had no problem taking some heat for the situation. Plus, I was the one who had left the front door wide open. It was disappointing to think he didn't want my help.\n\n\"Go, Adele,\" he prompted me gently. \"You can sneak out through the dining room, into the kitchen, and out the back door.\"\n\nI shook my head. \"I am not sneaking out, Nate,\" I whispered, feeling suddenly stubborn. \"We've done nothing to be ashamed of. I won't run with my tail between my legs.\"\n\nI came to my feet and slipped them back into my heels.\n\nNate nodded curtly. \"Go. I'll call you later.\"\n\nI collected my purse and my jacket, both of which I had dumped inside the door when I'd rushed in earlier, proclaiming my love. That moment seemed like it happened years ago. \n\n\"I love you,\" I whispered over my shoulder. Nate didn't answer and when I looked back he was already behind his desk, straightening the papers that had been crushed beneath us.\n\nI bit my lip. The sharp pain banished the tears that threatened to bubble to the surface. I turned the door knob and wrenched the door open. Both Mrs. Macintyre and her niece Jenny were huddled close to where the keyhole had been only moments before.\n\n\"Ladies,\" I said with a cool, polite incline of my head. \"Good afternoon.\"\n\nI tried to sail gracefully out of the house but I had no idea if the gesture had its intended affect. Mrs. Macintyre bustled into the study, her shrill voice rattling the mood in the house. Jenny slunk out of the manse behind me. Her clammy fingers closed around my wrist.\n\n\"I told you I would ruin you if you slept with him,\" she sneered. \"Didn't I warn you?\"\n\nI stopped my long stride down the front walk and shook off her grip on my arm but she refused to let go. \"I didn't sleep with him,\" I pointed out. The words were useless seeing as the damage had been done, but I had to defend myself.\n\n\"Harlot!\"\n\nI almost laughed at the archaic accusation. This girl was so absurd. \n\n\"Liar,\" she continued.\n\nI looked down into Jenny's round, scrunched up face, glad for once that I was tall enough to tower over someone. \"I swear to God I didn't sleep with him.\"\n\n\"God?\" she scoffed. \"God? Don't go bringing Him into it! You clearly don't know a thing about Him!\"\n\nThat did it. My temper snapped like a thin thread. I pulled my arm forcibly from Jenny's pinching grip. She stumbled, taken by surprise.\n\n\"You don't know a thing about me! You don't know what I believe! You have no right to judge me or to judge Nate. That's God's job, not yours. What happened in their between Nate and I was private, and it wasn't wrong, and I am not afraid of you and your prudish aunt. I told you months ago I wasn't going anywhere but in case you've forgotten; allow me to repeat myself...\" I drew up to my full height, all five-foot-eleven inches of it. \"I. Am. Not. Going. Anywhere.\" \n\nHer eyes narrowed into dangerous slits. \"He will lose this church. He will lose everything, all because of you!\"\n\nMy mind whirled at the idea that she could be right. I struggled to keep my face blank. Nate and I were two consenting, single adults. We'd broken no laws, done nothing wrong but the accusation alone could do irreparable harm to his reputation.\n\nJenny stood there looking so smug and triumphant that my stomach lurched. She was so damn righteous I wanted to smack the expression off her face. I mentally counted to ten, willing my temper to subside. \n\n\"I have nothing more to say to you.\" My voice sounded cold and far away, as if it came from someone else's lips and not my own. I turned and made my way down the walk to where I left my car parked by the fence. It wasn't until I'd driven past the church that I had the courage to look back in my rear view mirror. Jenny was gone.\n\n~*~\n\nThere were two messages on my voice mail when I got back to my house. I held my breath, hoping one was from Nate. One was from Lilly, the other from Rhi, both asking how things had gone between me and Nate. I couldn't call them back.\n\nI waited until after dinner and when I still hadn't heard from Nate, I called him. There was no answer at the manse. It took every ounce of will I had in me not to keep calling until he did answer. I left a message. He knew I was home. He would call me when he was ready.\n\nHalf a bottle of Riesling before bedtime didn't help me sleep the way I hoped. When I wasn't reliving the way Nate's hands felt skimming over my body, I replayed the awful confrontation with Jenny over and over in my mind. Everything had been so perfect and then it had been ripped so cruelly away. It was so damn unfair.\n\nWhen the morning sun poked through the curtains of my bedroom I dragged myself into the shower. There was no question in my mind of my plans for the day. It was Sunday. I was going to St. Andrew's and I didn't care what happened once I got there. I had no doubt the Macintyres had spent the night doing their best to spread whatever rumours they could. There was no way I'd leave Nate to face the whispers and innuendo without me.\n\nI chose one of my court suits to wear\u2014a tasteful, tailored number that I'd paid way too much for at Rhiannon's shop. My blouse was modest; my skirt was a respectable knee-length. I took the time to get every ringlet of hair to lay in perfect order. Lilly had once called my court clothes my armour -- she couldn't know how close to the truth she was.\n\nI arrived earlier than usual, hoping I could catch Nate before Service, but he wasn't at the church although the doors had been unlocked and thrown open in the warm spring air. I was shocked to realize that after all the time we spent together I still didn't know what he did before Service on Sundays. I didn't want to march up to the manse and just knock on the door for fear of interrupting his ritual. He'd have a difficult enough time of things without that. Instead, I just slipped into the pew I'd been sharing with the Brewster's for the past few months and focussed all my energy on calming down.\n\nThe first parishioners to arrive wouldn't as much as look at me. None of them returned my cheerful \"good morning\". It was quickly apparent that the story had been embellished greatly overnight. Hurt, I raised my chin another notch and began counting the squares of coloured glass in the window. I'd gotten to thirty-seventh glass square when I heard the tromp of little footsteps and a gleeful giggle.\n\n\"Adele!\" Madison Brewster came rushing down the length of the pew as quickly as her five year-old legs could carry her. She plopped down beside me and rested her head on my arm. \"Hel-lo,\" she said in a sing-song voice.\n\nI couldn't help but smile. \"Good morning cherie.\"\n\nHer legs were so short they didn't touch the ground and she swung her feet happily. \"I got new shoes,\" Maddy informed me.\n\nI looked down at the bright white patent Mary Janes she wore with mismatched socks -- one pink with stripes, one purple with polka dots. The little girl had style.\n\n\"They're very nice,\" I replied automatically. From the corner of my eye, I saw the rest of the Brewster's approaching and I prayed they wouldn't forsake me. A knot formed in the bottom of my stomach. I didn't dare look up out of fear of rejection. The Brewster's were the first friends I'd made at St. Andrew's. If they didn't back up Nate and me then no one would.\n\nThe Brewster boys, Tom and Jamie, filed into the pew wearing hesitant smiles. I couldn't imagine they'd been told anything, but unlike their younger sister they must have sensed something was wrong. I took a deep breath, looked up and caught Lucy Brewster's eye.\n\nShe smiled at me a little shyly. \"Good morning\" she said in a warm tone loud enough for everyone in the church to hear. \n\nIt felt as if a weight had been lifted from my chest and I could breathe again. Behind her Ed echoed the greeting with an even bigger grin. In fact, the large man looked downright pleased. I tried not to blush.\n\nBy the time Service was just about to begin it was clear that the parishioners of St. Andrew's were almost equally split in two. For every dirty I look I got there was one cheerful greeting or bashful smile. Every entrance by a new person frazzled my nerves so that by the time Nate stood at the front greeting the parish, Maddy had to take the hymnal out of my shaking hands just so she could pretend to read the lyrics of the opening hymn.\n\n\"You're wobbly,\" she said in a mock whisper.\n\nI was wobbly. My gaze was drawn instantly to Nate, but he looked everywhere but at me.\n\nHis vestments were perfectly pressed, his blond hair neatly slicked down. He looked so impeccably professional standing behind the pulpit and exuded the same calm he always had. I marvelled at how he managed it. Basking in the serenity he projected, I could almost forget that he hadn't called me; almost forget that I spent the night fearing my heart was about to be broken again.\n\nThe first half of the Service flew by. Nate's voice never wavered as he moved us all skilfully through the sequence of worship we knew so well. There was comfort there in the unchanged customs. I hadn't realized until that moment just how much it had begun to mean to me.\n\nNate came to the pulpit to deliver his sermon. He paused and studied his parishioners, a good half of whom I feared thought less of him at that moment than they did the week before. \"There are a lot of passages in the Bible that I quite like.\" \n\nA sudden tightness clamped across my chest and swept up to my throat. Surely after the events of yesterday he'd change the topic from love to something a little less contentious.\n\n\"There's a lot of poetry in that book and a lot of good advice. For me it is a great comfort to sit down with my Bible when I'm struggling with something, because I know that no matter what page I open it to, what chapter I end up reading, I know that somewhere in there is the answer I'm looking for.\"\n\nHe didn't falter, not even when our eyes finally met. He didn't smile at me, he just held my gaze.\n\n\"The other day I was wrestling with a question I had, with something that would undoubtedly change my life, and at a loss for the correct course of action I picked up my Bible and opened it -- just opened it to a random page in hopes that my prayers for guidance might be answered. This is what I read.\"\n\nFrom up the wide sleeve of Nate's vestment he pulled a thin, tiny black Bible I'd never seen before. It looked dog-eared and well-loved. He cleared his throat and although he opened the small Bible, he didn't need to read from it. He quoted from rote.\n\n\"Now I will show you the way which surpasses all the others. If I speak with human tongues and angelic as well, but do not have love, I am a noisy gong, a clanging cymbal. If I have the gift of inspired preaching, and with full knowledge, comprehend all the mysteries, if I have faith great enough to move mountains, but have not love, I am nothing. If I give everything I have to feed the poor and hand over my body to be burned, but have not love, I gain nothing...\"\n\nNate smiled as his gaze moved from mine to sweep over his church. \n\n\"Paul's first letter to the Corinthians, chapter thirteen, verses one through four. I suspect many of you know the remainder of this chapter - it might even have been read at your wedding, I know it will be read at mine. It goes like this:\n\n\"Love is patient; love is kind. Love is not jealous, it does not put on airs, it is not snobbish. Love is never rude, it is not self-seeking, it is not prone to anger; neither does it brood over injuries. Love does not rejoice in what is wrong but rejoices with the truth. There is no limit to love's forbearance, to its trust, its hope, its power to endure. Love never fails.\"\n\nHis smile cracked his cheeks as it grew. \"I like that,\" he confessed. \"'Love does not rejoice in what is wrong but rejoices with the truth.' That's a nice thought, isn't it? That's the one that comforts me at night, to be honest, because we all know how I feel about truth.\"\n\nNate paused and my heart stopped in my chest. I saw Jenny Macintyre in the front row lean forward, eager to listen.\n\n\"So here's the truth, plain and simple... in front of God and all of you...\" He crossed his arms on the pulpit and leaned over it, relaxed and engaging. \n\n\"I've found love. Those of you who are lucky enough to have found it for yourselves remember what that's like don't you? How heady it is, how magical. It's like everything good in the world is wrapped up in one person. It's like God has given you the most special gift you ever could have wanted but were afraid to ask for. I've always thought that God rewards our goodness by giving us a person who in turn brings more good to our lives, and if that's the case I must have done something very, very right. For those of you with a love of your own you know how breathtaking an honour that is.\"\n\nNate's face sobered as he said, \"And for those of you who haven't had the privilege to experience love for yourselves I can only say this: you will, I promise you that you will, but only if you sow seeds of good in your life. Nothing kills hope faster than spite and malice and lies. They are the opposite of love and as long as they live in your heart you will never find what you seek. They are the dark and love is the light.\"\n\nHe opened the little Bible again. \"'If I have faith great enough to move mountains, but have not love, I am nothing....' Now I don't know if my faith is enough to move mountains\u2014I'll let Him decide that\u2014but I know now that I am not nothing and you must know how wonderful that feels.\"\n\nNate closed the Bible with reverent hands. No one in the congregation dared to move, to breathe. Even Maddy sat still beside me. I watched Nate with my heart in my throat and no air in my lungs while his gaze focused on the parishioners spread out before him. He smiled at them, at each and every one of them, with kindness and love.\n\nThen his eyes met mine.\n\nAnd he winked.\n\nMy knees felt ridiculously wobbly. It was good I was sitting down. \n\nThe Service continued, just the same as it had every week before, just the same as it would every week in the future. The air had lightened and brought me a sense of relief. I felt unburdened. When Maddy sang along loudly to the remaining hymns I joined her whole-heartedly, not caring if anyone else noticed I was dreadfully off-key.\n\nI made it a habit over the past few months to stay seated after Service was over. It wasn't until Nate was finished chatting with his parishioners that I approached him. That was his time to socialize with them and anyway, I knew I'd have him all to myself for the rest of the afternoon. This time however, Nate came around to the end of my pew before anyone else left their seats to file out into the sunshine. He offered me his elbow and I rose to my feet and took it.\n\nBewildered, I followed Nate outside to the church steps. He tucked my hand into the crook of his elbow and gave it an encouraging little squeeze as his congregation approached us.\n\nWe were greeted politely, though some parishioners remained wary. Others, like the Brewster's, were enthusiastic and positive. Bolstered by that show of friendship, I found myself able to smile at Mrs. Macintyre and Jenny as they filed past. They were the only ones who didn't stop to shake Nate's hand.\n\nI sensed by the tension in Nate's arm that it bothered him, but to his credit his smile didn't falter. \n\nBy the time the last of the parish had loaded themselves into their cars and begun the long drive back up the peninsula road, I sagged with relief. My cheeks ached from smiling politely. I reached up and massaged them.\n\nI glanced over to find Nate smiling at me.\n\n\"I love you,\" he said simply.\n\n\"I love you too.\" \n\n\"So, I'll get changed and then we'll have lunch?\" \n\nI nodded, happy that our tradition could continue. This time though, Nate didn't shoo me off towards the manse, instead he kept my hand on his arm and brought me back inside the church. \n\n\"Lilly asked me the other day if she and Adam could have their wedding here,\" he said as we made our way up the aisle.\n\n\"That's fantastic! I'd love to see a wedding here, I bet it's beautiful!\"\n\nNate guided me to the right of the altar and up into the vestry beyond. I'd never been back there before so he gave me a few minutes to take in the small room. I let go of his arm and he moved to the wardrobe in the corner. The doors opened to reveal a tidy row of different coloured robes. He removed his long, heavy vestments and without knowing quite what I was doing, I rushed to help, hanging each piece carefully after he removed it. I smoothed out the wrinkles as best I could.\n\nUnderneath Nate was wearing his usual dress pants and shirt. He reached up, pulled his collar off, and undid the top button with a happy sigh. Nate moved about the room, explaining what things were and where they went. He carefully counted the collection of coins and small bills the parish had made that day and jotted it down in a ledger set aside for that purpose. There was a small safe in the corner and he opened it to put the money inside. \n\nWith everything tidied up and in its place, we walked back through the silent church and out into the sunshine. I waited as Nate locked up, then the two of us meandered hand-in-hand to the manse. \n\n\"They set a date, you know,\" Nate said as we stepped across the threshold.\n\nI gasped. \"Lilly and Adam?\" She hadn't said anything to me about it.\n\n\"When they asked about the church, they asked if September fourth was open. It is. So that looks to be the day.\"\n\n\"That's less than four months!\"\n\nNate chuckled. \"Considering Rhi and Joe's wedding was planned in less than twenty-four hours, I think four months should be plenty of time.\" ",
        "I couldn't help but laugh with him. \"I guess you're right, four months is more than enough time. I doubt the guest list will be very big.\"\n\nHe led the way to the kitchen at the back of the house. Esther sat in the sunlight, waiting patiently for her lunch.\n\n\"The Tanner brood and you,\" Nate said with a smile. \"And Adam did say he wanted to invite his sister and some of the Langoustine gang.\"\n\nHe opened the fridge and started pulling out lunch ingredients. Without asking, I began to piece together sandwiches.\n\n\"Actually, I'm glad it's not very long between now and September fourth,\" Nate mentioned. He glanced over at me with a flicker of apprehension on his face.\n\n\"Oh yeah?\" I murmured when it was clear he wouldn't continue unprompted. \"Why's that?\"\n\nNate put down the knife he was using to slice cheese, but he still didn't turn to face me. Instead he reached for the mustard. \n\n\"Because I don't want to announce our engagement until after they're wed. I don't want to take away any of their thunder.\"\n\nI grasped the edge of the countertop, suddenly dizzy. It wasn't a panicky dizzy though, so much as the gleeful kind.\n\n\"Our engagement?\" I echoed. When I glanced over at the tall, lean man standing beside me, my heart knew and saw one thing: my husband. \n\nHe was still fixing lunch but there was a gentle smile on his face. \"You will be my wife, won't you?\" \n\nI tried to calm my excitement and think logically. I knew what marriage could be like, what sorts of disasters befell couples. I'd lived through it; I saw it all the time at work. I couldn't bear the thought of going through all that with Nate.\n\nBut he would never let that happen. He was a man who understood truth and hope, who respected goodness and love.\n\n\"I think there is something we should talk about first,\" I said softly. I wanted to return his honesty and goodness. It was only fair that I did. \"If you're expecting to have children...\" I faltered, unsure of the best way to phrase the fear in my heart. \"I mean, if that's part of your plan... there's a very real possibility that I'm not able... that I can't...\"\n\nI stopped talking. It still hurt so much to say it aloud, especially to Nate, whom I loved so much. \n\nThis time Nate did turn to me. His hands came down to cup my elbows. His brown eyes were kind and earnest.\n\n\"Adele, sweetheart, not being able to get pregnant does not make you a less worthy wife in my eyes. Nor does it make you less of a woman, if that's your fear. I would like a family, yes -- just as you would. I see how you are with the Brewster children and with little Sophie -- you would be a phenomenal mother. There are plenty of women in the world who have children who shouldn't, and plenty who should that do not, so you are not alone. We will find a way, if that's what you want.\"\n\nAnd although I didn't think it was even possible, I loved Nate more in that moment than I had ever before.\n\n\"Really?\" I whispered, still in disbelief.\n\nNate cupped my cheek. \"Really,\" he promised. \"Somewhere out there is a child who desperately needs a good home and we can give them that.\"\n\nMy heart expanded, full of a possibility I never considered before.\n\n\"So let's get married,\" he said. \"After Lilly and Adam have their day we can have ours. A big wedding, a small one, just you and I at City Hall, I don't care as long as you say you'll be my wife.\"\n\nI nodded into his hand, too emotional to speak.\n\nWe sealed our pact with a kiss.\n\n~*~\n\nLa Langoustine Fachee was the fanciest restaurant on the Island. I'd been there a few times for work\u2014it was a great place for the law firm to bring important clients\u2014but I'd never seen it done up for a special occasion and I had to admit it was breathtaking.\n\nThe private glass conservatory was home to a long table set for eleven - the Tanner brood, Adam, Nate, and myself. It was a warm night and the doors were thrown open to the darkened lawn beyond. The entire conservatory was lit by the candles on the table and the myriad of tiny twinkling fairy lights hung from the ceiling. The setting was magical.\n\nAfter the chilly reaction Rhiannon had originally received from Lilly's parents, I'd been secretly worried that they wouldn't be a fan of Adam either\u2014not with the sort of past he had. But there didn't seem to be any basis for my fear. Pat and Gerard Tanner looked as if they adored their eldest daughter's tall, dark fianc\u00e9. Or maybe it was Adam's doing; he was so patently charming, they couldn't help but love him.\n\nThe wine and laughter flowed as the courses of food kept coming. To my right sat Violet, practically bouncing in her seat with energy, to my left was Nate, calm as always. He wore a light grey suit with a cornflower blue shirt and matching tie. I'd never seen him look more handsome. It took all my energy not to ignore the other people in the room and just stare at him.\n\nBeneath the table his hand rested on my knee, just below the hemline of my dress. I'd chosen to wear a modest A-line black dress with a simple draping neckline. But there was no way I'd outshine Lilly anyway\u2014she glowed with happiness in her sexy blue sheath dress and while I tried to hide my appreciation of Nate, Adam didn't even attempt to hide his of Lilly. He couldn't keep his eyes off her.\n\nI lost track of the courses of the meal. I only knew each one was more exquisite than the next. My wine glass never seemed to empty either so that by the time dessert was served I felt giddy. Having Nate's fingers curled around my thigh didn't help either.\n\nSilence finally descended on the table as Adam rose to his feet.\n\n\"I would like to thank you all for coming tonight to help us celebrate our engagement,\" he began with a broad grin. \"I'm so pleased you could all share this with us.\"\n\nAdam took his wine glass in hand and gazed fondly down at the redheaded woman beside him.\n\n\"It's been an interesting year,\" he admitted with a chuckle. \"I knew the second I saw Lilly across that crowded bar that she was someone special, except I couldn't have predicted then just how much of a difference she would make in my life.\" \n\nAdam glanced over at Rhiannon and Joe. \"I couldn't have predicted I'd make new friends.\" \n\nHis attention skipped over to Nate and me. \"Or the joy I'd find in watching my best friend find happiness in much the same way I have.\" \n\nHe smiled at the circle of Tanners surrounding him. \"And I never in a million years would have thought I'd finally find a family who would love and accept me.\"\n\nAdam swirled the glass of wine in his hand. The burgundy liquid caught the light and glowed. \n\n\"I've never been happier than I am right now. And that's all because of one person.\" Adam reached for Lilly's hand and pulled her to her feet. He leaned down over her small frame and told her, \"I love you and you can never know how honoured I am that you've agreed to be my wife.\"\n\nBeneath the table Nate squeezed my knee, quietly communicating the same sentiment with me. Tears welled up at the corners of my eyes. I would have dashed them away except I wasn't the only person in the room crying. Violet sniffed into her napkin and at the head of the table the tears flowed freely down Lilly's freckled cheeks.\n\n\"I love you too,\" she said to Adam, her voice thick with her tears. \"And the honour is all mine.\" \n\nI laid my hand over Nate's, continuing our silent conversation.\n\n\"To Lilly.\" Although his words were meant for the room at large, Adam's gaze never left her pretty face as he raised his glass to toast the woman he planned to marry. \"And therefore, to love.\"\n\n~*~\n\nThank you all for coming along on this journey with Lilly and Adam, Rhiannon and Joe, and Adele and Nate. Each of them has grown to mean so much more to me than fictional characters should. They are like friends, like family, and the way you have embraced them all has been a gift to me.\n\nThank you again for your continuing feedback and emails. I keep each one so I can reread them when I'm having a bad day and remind myself that the struggle of writing does not go unappreciated.\n\nThere is more to come for the Tanner family... after all, there are still three siblings who have yet to find their special someone. I hope you will all continue to make a place for them in your heart. Felicity's story is already in the works and it is one which I hope you will love as much as I do.\n\nAgain, thank you.\n\nAll my love,\n\nfirstkiss  "
    ],
    "authorname": "firstkiss",
    "tags": [
        "romance novella",
        "drama"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/not-my-type-adele-ch-09"
}