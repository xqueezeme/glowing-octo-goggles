{
    "title": "Broken Breast Pump Ch. 02",
    "pages": [
        "The rest of the day Gina knew that a line was crossed and there was no going back. Her heart felt alive again knowing that Tom wanted her and that they made love. She felt a slight fear knowing her guard was down and that Tom ending it with her would destroy what she had built up since the divorce. Going forward with him was what she needed to do and she felt it was worth trying with him.\n\nAs the day wore on, she could feel his love seed escaping her sex and pooling in her panties while covering her love folds in a slimy mess. The wetness of his sperm in her panties was like a constant reminder of having sex with him every step and movement she made.\n\nGina knew she needed to clean herself but the wetness in her panties as it clung to her sex was only making her more excited from the erotic thrill of not tending to it. She felt the wet fabric against her clit and sex folds which was only adding to her desperate need to get off again as it reminded her that Tom orgasmed inside of her. His love juices were still inside of her which made her feel like she was being kinky by keeping it in her panties.\n\nWhen she felt her pussy become so slippery and slimy it was like she kept reliving the sensation of Tom's member claiming her honey hole for what it was meant for. The sensation and knowledge that her sex was dripping sperm kept the memory of knowing a man had taken her sexually and ejaculated inside her. She felt like it sparked a fire in her libido and she could not quell it with anything other than more sperm.\n\nNear the end of the day she did not know if she should run to the bathroom or pull down her panties and rub her love button to a fiery finish. All she could think about was how it felt for a cock to explode deep in her and for her to have a man that wants her like that.\n\nIt was the end of the day that she finally had the time to handle matters and all she thought about was how Tom's warm fertile seed was pumped into her. The thought of danger was there but she could not help but love how her body was almost forced to accept a man finishing inside of her. Like her body's only purpose was to be for a man put his warm baby making cream into. That Tom wanted her and wanted her body in such a way that only lovers could understand. She knew that his need for her was exactly what she wanted as she felt her soul accept that a man wanted her like that.\n\nOnce in the bathroom, she finally pulled her panties down to see it was like she pissed herself her panties were so soaked, almost dripping. There was so much of his cum and she could faintly smell the musky aroma of his sperm. She pulled open her love folds only to feel more of his sperm was making its way out of her sex like there was a hidden reservoir of sperm that her body had held onto. The danger of what was happening was more than the fact she let Tom finish inside of her but of getting caught.\n\nGina felt the dormant urge of excitement back in her body like never before. Little lightning bolts of sexual energy sexual were flowing through her now, wanting more of Tom's love. She knew she should feel guilty or at least be concerned that Tom unloaded a large load of semen in her, but she could not stop wanting it again. \n\nShe felt the guilt about the location only and not that it was Tom putting his seed in her. She just wanted to be thrown down, fucked hard and to be told it was her job to take his cum deep in her like a loving woman should. To have a willing and good man to make her be the object of his sexual satisfaction made her want him even more.\n\nWhen the last bell sounded a horde of students rushing to get home made walking in the hallway like crossing a raging river. She stared at Tom as he ushered students out of his class. She wondered what to say to him and how she should approach him now.\n\nWhen the hallway became clear enough Tom stepped inside her classroom. \"I don't know if that was the most amazing thing or the most dangerous thing,\" he stated as she wanted to just kiss him and do it again.\n\nGina could see in his face that he was torn, but she also felt her heart beating fast. She wanted Tom to know that she liked him to the point of wanting a relationship but also felt scared that he could damage her so bad.\n\n\"Why?\" she asked, fearing that he did not want to continue.\n\n\"We could have gotten caught.\" \n\nGina breathed deep in relief as it was that problem and not that they made love or that they were kind of involved now. \"Do you want to talk about it tonight at my house?\"\n\nShe knew she was offering more than just a talk and hoped he did too. She felt the urgent need to be with him again and confess that she wanted him to be with her in a couple's role more than just a sex fling one.\n\n\"I can't tonight. I have too much work that needs to be done tonight. Can we do it tomorrow night?\"\n\n\"Talk, or do you want to come over for dinner?\" Gina asked, trying to gauge his interest.\n\n\"Anything you want. I would love dinner. I think we are past talking at this point though.\"\n\n\"You want more of what we did to be something more?\" Gina asked finally throwing herself out there in trying to find out what he wanted.\n\n\"I would love something more,\" Tom answered smiling.\n\nGina moved in kissing him quickly on the lips before moving away knowing that there were teachers still in the building and getting caught was a real threat. Students in after school were still wandering about and that was a deep fear in her and the only reason why she did not offer herself to him again.\n\nShe let him leave and then texted him about last night asking about his relationships and what he wanted in one. Reading his texts about wanting a family only made her think that she was doing the right thing with the right person. The fear that he was just fooling around with her was not there as she felt that they were already in a somewhat committed relationship.\n\nGina held back admitting she came so hard and wanted it again badly. She also did not want to tell him that she enjoyed him sucking from her breasts more than normal women should or that she wanted him to just take her. She also did not want to tell him that she was wet thinking about him and that if he asked her to just come over for sex, she would let him and eagerly spread her legs for him. In her heart, she knew that she would not even say no or stop him from unloading another dose of possible pregnancy in her either.\n\nThe next morning Gina felt her breasts hurting more than normal. She was feeding Simon and noticed that when he was done that she was still full and needed to be pumped too. She figured it was the fact that Tom was draining her as well as her own child and her body was responding by producing more. The thought about letting her breasts produce more milk now came to her as it was an erotic thrill that Tom was nursing from her too.\n\nGina texted Tom asking if he was going to be early. She did not want to be so bold and tell him that her breasts had milk in them or that she wanted to fool around more. She just hoped he could understand her needs. \n\nDriving in she thought about being in a relationship and how Tom would be. She felt her heart warm and then beat fast in excitement knowing Tom was seemingly perfect for her. She wanted to tell him she wanted a serious relationship, but also felt weird asking as if it should be him wanting it. \n\nWith a swipe of a card she was in the building and walking towards her classroom. Once she saw the light in Tom's room on, she knew things were going to get sexual and fast. She stepped into his room first smiling. \"Hey there.\"\n\n\"I wanted to text you this morning, but I also wanted to ask you in person.\"\n\nGina walked closer smiling and feeling the need in her sex moisten with anticipation of what was to come. The fullness in her chest was there as she knew she was going to need to change nursing pads after this.\n\n\"I want more than just a fling with you. I want to talk about progressing further.\"\n\nGina could not help it and then moved in kissing him as she felt expressing herself with a kiss was more important then using words. It was what she wanted to hear and the speed he did it made it perfect for her. She thought it would be weeks, maybe a month before he wanted something serious and now it was the next day.\n\nHis tongue was against hers and she allowed her mouth to be explored by his tongue. His hands were on her hips and then moved to her chest. She felt her nipples harden with excitement and then the moistness in her sex get to the sensation of needed attention.\n\nShe could not take it anymore and needed to feel him inside of her and let him know she was ready for him. She turned around and lifted her skirt up to her waist. Her ass was now against his waist as she reached and slipped her blue panties down exposing her sex to him, offering her love tunnel to him too.\n\nTom quickly unbuckled his pants as Gina stared at him smiling. She was breathing hard already needing him inside of her quickly. \"Fuck me. I need you to fuck me.\"\n\nGina unbuttoned the top three buttons to her blouse exposing most of her breasts so they could spill out. She then pulled down her bra exposing her elongated dripping nipples as the excitement of what was to come made her feel like a broken faucet that was just leaking out her mommy milk. She then felt the tip of his member already rubbing against her sex entrance ready to penetrate her depths. \n\nTom wasted no time as she felt his male rod pierce into her like a spear. His swollen member filled her love sheath quickly as she felt the fullness of a man inside of her once again. All of the memories of the other days came to her in a flash again as her sex immediately responded by clamping around his girth like a vise in a fit of pleasure now that a penis was once again inserted in it.\n\nShe felt his hands grip her hips as his waist bumped against hers. She felt his manhood spear into her as her own sex spasmed again in sheer delight from the intrusion. The urgent need for him to take her was overwhelming as she wanted nothing more than to be a willing victim for his male sexual needs. All she could think about was a man she wanted to fuck her into submission and hopefully leave her with a hefty load of sperm right where it needed to be.\n\nTom was going faster and then faster; she pushed back against him urging him to go faster. She put her hands on the desk as she felt her breasts swaying wildly from the motions of their bodies. His thrusts were in rapid succession making her tits bounce off her body as if she was running bare breasted.\n\nShe felt her nipples leaking even more from the excitement in her pussy. The knowledge that her milky tits were out in the open and bouncing around while she was being fucked only made her feel taken. Her body was so exposed while he was taking her from behind that it made her sex muscles clench in ecstasy.\n\n\"Am I going too hard?\" Tom uttered softly as he was breathing harder.\n\n\"Noooo....just keep going. Go as fast as you want,\" Gina moaned out, wanting him to be forceful as she had a need to be weak and to be taken by him in a moment of sexual surrender.\n\nThe need to stop being a mommy resounded in her as she wanted to be taken by a man. She wanted him to be in control and to do as he wanted. The little bit of domination from being bent over a desk and being pounded made her sex feel like a fountain as it was so wet and already leaking.\n\nShe could feel his erection just pounding in and out of her now as he was not going slow and easy with her. The sensation of being taken sexually now came to her as did her pussy as it was clenching with yet another orgasm. She felt her sex close and spasm around his girth almost making his dick feel bigger as she orgasmed.\n\nWith his hands guiding and forcing her body to be taken the sound of their bodies slapping against each other filled the room. She had no idea how much milk she was leaking but knew it was a constant drip from both nipples now. Tom's love rod was just sliding in and out of her wet sex hole like it was a sheath for his cock now.\n\nWhen he pulled her hair back she felt her wet sex immediately collapsed around his member again. \"OHHHHH, God YESSSS!\" she moaned, feeling a big orgasm wash over her like the tide.\n\nAs Tom pushed his love stick through her clenching sex walls as she felt like her vaginal hole was too small for his cock, she knew her entrance was tightening up from her orgasm. When his manhood continued, she felt like her body was surrendering to him and she felt another orgasm already on the way.\n\nShe could not ever remember having so many orgasms so fast. She felt that she was finally being taken and fucked properly by a man who wanted her. No more was she in charge as Tom's erection seemingly owned her wet, juicy peach now.\n\nHis hands went to her tits cupping them as Gina felt her pussy trying to expel his male intruder as another spasm of pleasure hit her. As she felt her pussy muscles try and push him out, the sensation of his cock being bigger hit her again as she could feel her sex trying to close up around his shaft. The fullness of his member pushing through her orgasm only made her want more of it.\n\nHe was grabbing her fat tits squeezing them as she saw the spray of milk shoot out all over the place. She felt powerless to his male member and his will to have her as a sex object now. The desire to give into anything he wanted was the only thing she could think about.\n\nAs his body pounded away she felt her ass absorb the blows from his hips and then wondered where he was going to ejaculate. Where was he going to cum? Her mind raced with options and dangers of where his dangerous creamy male seed would go. She knew that her body was fertile and that last time was playing with fire. \n\nAs she thought about where his sperm would go, she knew she wanted to surrender to him completely. The danger of having him decide and forcing her to accept the dangers of it made it even more erotic. His manhood was just gliding through her wet sex and she could feel his tip just nudging away near her cervix. The thought of danger was there but she could not stop wanting to give her entire body over to him.\n\nAs his hands squeezed more of her leaking fleshy globes the spray of her nurturing milk was almost like a water gun now. She could feel his rod going in and out of her like a machine as she could do nothing but take it as her white milk sprayed out on the desk and floor. She finally surrendered to the choice of allowing him to take her completely. \"Cum anywhere you want.\"\n\n\"Can I cum in you again?\" Tom asked almost breaking the spell of being forced. \n\nGina knew she needed to get him back in the grove of taking her and not asking. \"Anywhere...just don't ask. Just tell me to take it...OHHH shit. Make me take it,\" she moaned almost sounding like a porn star.\n\n\"Are you on birth control?\" he asked as his body was still crashing against her as she felt his swollen erection going deep each time.\n\n\"Nooo. But I don't care,\" Gina moaned as she felt her willpower truly surrender to him and that there was a chance he could flood her womb with pregnancy. She also had a fear that he would pull out and that she would not be worthy of his baby making sperm. \n\nThe thrill of giving up sexually hit her as she felt her love cave collapse around his manhood. His body was not stopping though as she felt her sex just being pumped again and again with his erection. She secretly wanted to feel the sudden warm gush of male fluid in her so it could claim her womb. The act of being forced to accept his fertile seed only made her sex spasm even more.\n\n\"Anywhere?\" Tom asked but in a slightly forceful tone as if he was not really asking.\n\n\"Ohhhh God....anywhere,\" Gina cried out as she felt her legs getting weak.\n\nTom let go of her breasts and moved his hand to her hips again. His body was pounding against her hard as she felt his member spear deep into her almost nudging open her cervix. She knew deep own she was going to get a pussy full of his sperm now. She also felt her orgasm was waiting on it as if his spunk was the trigger to her pleasure.\n\n\"Ohhh...YESSSS,\" Tom grunt as she then felt his girth push deep and hold it. \n\nAs his thrusts got shorter, they also got more forceful like he was trying to make sure his bloated knob was right where it needed to be. She felt a few pulses of his member as she knew it was the telltale sign a man was about to ejaculate in her. She reminded herself that she was being taken bareback and that his warm fertile sperm had a real shot of making her belly grow again.\n\n\"Oh, God....oh God...Ohhhhh God. I feel it,\" Gina moaned as she felt she wanted to scream too. She knew that she was seconds away from feeling his creamy orgasm being pumped into her snatch. \n\nGina opened her mouth to moan but nothing came out. She finally felt his warm impregnating seed spray into her. \"Ohhhhhhhh YESSSSSS,\" she moaned, instantly knowing that she was getting Tom's fertile nectar right at the opening of her cervix as he was deeply implanting a chance at life in her.\n\n\"Ohhh...God...I feel it...so warm....it's so warm in me,\" Gina moaned as her eyes closed from the intensity of what was happening. She wanted to look at his eyes to see that man that was giving her pleasure, but she felt her pussy just trying in vain to push out his erection with no luck.\n\nAs she felt her sex hole close down around his shaft trying to push it out, she also felt it trying to suction all his fertile sperm up into her reproductive system at the same time. Her orgasm was in full momentum as she felt her nipples spraying away from her body being in such a state of excitement. \n\nThe surrendering of her choice of telling him where to blow his load was more exciting than she expected. His warm creamy nectar seemed to be sucked up by her body as she felt a second spray deep in her. It was like her vaginal walls were massaging his shaft, coaxing out more of ahis swimmers to join the hunt for her nestled egg. There was no stopping it either as she knew his manhood was firmly planted in her sex like it was making sure the job was done.\n\n\"Ohhh God...Ohhhh God it's so deep in me,\" Gina moaned out, finally feeling her orgasm hit on overdrive as the sensation of his sperm was all she could feel inside of her.\n\nTom pulled out and then backed away quickly. \"Are you mad?\"\n\n\"Noo. I wanted you to take control,\" she admitted and yet felt like her orgasm was not fully completed since he pulled out, making her feel like her pussy did not get the full dose.\n\n\"Oh. I didn't know if I did something wrong,\" Tom answered back as he was picking up his pants.\n\n\"Here let me,\" Gina said as she reached into her bag to grab seem wipes. She also did not want to tell him that she came so hard from him finishing that she was thinking she could go down on him to taste his cum too.\n\nAs she pulled out the small package of wipes, she looked at him, still feeling the euphoric effects of having him flood her sex with sperm. \"I like it when you are a little controlling.\"\n\nGina leaned down to wipe herself and then noticed that her nipples were still dripping steadily. She got up quickly and looked at him. \"Do you mind?\"\n\n\"Oh sure,\" Tom replied and leaned in.\n\nShe felt his mouth latch right onto her nipples and begin draining her. The soothing sensation of being nursed came to her as did the sensation that her milk was being released. She felt his lips form a perfect suction as he pulled her milk right from her breasts.\n\n\"Ohhhh that's it,\" Gina cooed as she felt her milk being sucked out by him.\n\nTom continued sucking as she felt the pressure finally subside. Tom switched to the other nipple and did the same. She felt the pressure realizing she could feel his lips sucking and sucking that she knew he was drinking her motherly milk right from the source.",
        "\"Ohhh thank you,\" Gina said as Tom finally released and stopped suckling.\n\n\"I don't care if it happens by the way. I really do want to be with you.\"\n\n\"What happens?\" Gina asked as she then handed him some wipes to clean up.\n\n\"You know. I came inside of you.\"\n\nGina reached down with wipes of her own and noticed that most of Tom's load had yet to escape her sex. She wiped away and then looked up at him. \"I don't think we should do it again though. I think we are safer if we start using protection. I can't use birth control, so it will have to be condoms.\"\n\n\"Okay. I don't mind. I just want you to be happy.\"\n\n\"You are too sweet, and I loved that we had sex. Can you make it tonight for dinner?\" Gina asked, wanting him to see her house and her family hoping that it would be the first step in a relationship.\n\n\"I can. What time do you want me?\"\n\n\"You can come by at six, but it might be takeout since I don't always have time to cook,\" Gina answered, knowing that cleaning the house and feeding the kids took a good deal of time and cooking for another adult might have them eating way later than normal.\n\n\"I can come early and help cook if you want.\"\n\n\"You want to come early and cook? I will be taking care of my kids, you don't want that,\" Gina stated as she felt that no guy wanted to be there for someone else's kids. She knew her ex hated playing dad and would hide when it came to taking care of the kids.\n\n\"Yeah. I want to help. I don't mind doing the cooking if you are doing the other things,\" Tom said with a big smile.\n\nGina could not help but smile back as she knew that Tom was sincere and his gesture was extremely romantic. \"If you come early...I might be breastfeeding though...then sometimes I pump if I have too much.\"\n\nGina knew she was flirting and hoped he got the hint. She knew deep down that she was offering her breasts and her warm nurturing milk as a reward for him. She knew it was kinky, but also knew that it was their kink.\n\n\"I guess I am going to have to come hungry then,\" Tom replied smiling and moving in to kiss her forehead.\n\n\"You better come hungry then....best you come ready for other things too,\" Gina offered knowing that the simple dinner date had now progressed into a guarantee of sexual intercourse. \n\nThe day passed as Gina could not stop thinking about Tom and what she wanted to do with him. She could not shake the feeling that he was going to be turned off by the fact she had two kids though and one of those kids was still an infant. The nagging fear would not leave her as she felt he was going to reject her or that he would just want her as a side piece at work.\n\nShe waved to him and spoke about work throughout the day but got scared about mentioning anything else. She wanted to tell him a bunch of times that she wanted to be taken again and that her love nest was his to have at his will. She just wanted to feel that she was worthy of a man and her body was still capable of being attractive.\n\nRushing home and texting Tom to come over at four, she figured she had enough time to get ready the best she could. She laid out what he was to cook and then cared for her kids quickly. Simon was fussy and was not hungry as she felt her breasts needed to be drained bad.\n\nSince Tom was coming over she knew that he was probably going to do it for her and then felt kinky that her breast milk was going to be drained by an adult male. Gina wanted to feel weird about it but could also feel the thrilling excitement of knowing that her breasts were going to be nursed by Tom.\n\nLooking in the mirror, she gauged herself and wanted what needed to be primped and prodded for a night she knew was going to include sex. She ran her hands down her belly and could see that the stretch marks were still there and the few extra pounds were not lost either. She turned to see that her ass that was wide as her hips were full and her thighs were no longer that of a slim woman.\n\nGina hated that she did not regain the shape she had had and as she put on a different bra she realized that her full breasts hung a little as they seemed absolute huge to her. She threw the bra away she wanted to wear as her cup size had grown and she knew that whatever bra she was going to put on would most likely need lots of nursing pads from the excessive leakage she had now. She then gave up and put on the large plain white nursing bra.\n\n\"I am a fucking cow.\" She said out loud as she could see the few droplets of milk that seemed never ending now and wondered if Tom was going to get bored of her forever leaking tits.\n\nThe doorbell rang and she realized that all she was wearing was sweatpants and a very loose fitting bra. She wanted to cry that she was not dressed up and she ran out of time. Not wanting to have him wait, she rushed downstairs mortified that he would find her unattractive or homely.\n\n\"Hey there,\" Tom announced when she opened the door to see him in a nice shirt and tie.\n\n\"Come in...come in. Please...please forgive the mess. I also still need to get changed,\" Gina announced loud as she felt like she was begging for forgiveness.\n\n\"Ohhh please. I think you look really pretty.\" Tom replied, stepping inside the house as she then closed the door standing next to him.\n\n\"Are you serious?\" Gina cried out sarcastically.\n\n\"I love that you dress down. I think you look so freaking hot right now I could kiss you,\" Tom said as he stepped closer as she saw that he was inches away from actually kissing her.\n\nGina looked quickly at the kitchen and saw her daughter playing nicely and Simon still asleep and before she knew it his lips were against hers. She shot her eyes to him and succumbed to his lips and then his tongue. She let her mouth open as the tongue kiss progressed. His hands were on her hips now as she felt weak; she felt real weak to his demand of affection.\n\nShe knew Tom wanted her and she could not help but give him anything he wanted. The desire to be taken like this and to be a woman for him was too much. She backed up and allowed his hands to explore her body.\n\nAs she felt his hands on her breasts, the pain of them being full hit her. She backed away feeling that they needed to be drained now and not later. \"Rrrr. They are painful right now. I need to pump.\"\n\nTom pulled her by her hand and then abruptly sat on the couch looking up at her. \"Let me help.\"\n\n\"Right here? You really want to?\" \n\n\"Yes. I want to.\"\n\nGina looking around to see if the blinds were closed reached around to unclasp her bra. She looked down in horror that her stomach was now visible to his eyes and that her post baby belly still had its winkles and stretch marks.\n\nShe quickly covered her stomach feeling the fear of rejection strike her. Tom then moved her hands away and ran his fingers over her stomach and then moved to her hips caressing her skin the entire time.\n\n\"You look very sexy.\" Tom said softly as he then moved his hands up to her breasts cupping them.\n\n\"I don't like that I haven't lost some of the weight,\" Gina admitted as she allowed her breasts to be fondled.\n\n\"I think you are perfect just as you are now,\" Tom replied as he then lifted his mouth and took in her right nipple.\n\nShe felt his lips on her engorged nipple and then felt the familiar feel of his mouth drawing her nourishing warm milk right from her tit. It was both relaxing and erotic as she felt his lips nursing from her full breast, pulling the milk from it and releasing the heavy pressure.\n\nGina ran her hands through his hair over and over again as she was breathing heavy from his mouth as it continued to suckle the milk from her chest. Over and over she felt his lips just latched on perfectly. She knew she was feeding him and felt that it was the most erotic thing too.\n\nShe thought about telling him to pull out his manhood and stroke it but knew she was in no position to help since he was sitting down and she was standing up. She desperately wanted to please him and finally pulled away.\n\n\"Do you want me to sit down so I can jerk you off?\" she asked, feeling that she needed to please him and give him pleasure.\n\nTom said nothing and began to unbuckle his pants. She watched helpless needing to see the cock that had been in her twice and gave her one of her best orgasms. As she saw his erection freed from his boxers, she felt her sex get a bit slippery from just the sight. \n\nAs he pulled his pants completely off and kicked his shoes away Gina was about ready to sit on the couch next to him. When he held her in place, she looked confused. \"I need you now.\"\n\nAs he pulled down her sweatpants she felt the cool breeze hit her sex. She was not wearing panties and had yet to change into what she was suppose to wear. Putting out and having sex with him was not what worried her, it was the timing of it. They had yet to cook and all of a sudden sex was about to happen.\n\n\"You sure...do you want to wait?\" Gina protested, but not really fighting it as she wanted it just as badly.\n\nTom moved her closer and then pulled slightly for her to sit on his lap. She did and felt his erection touching her sex but not in position to enter her. She then lifted up and guided his crown right at her love entrance and then moved her hips down letting her weight force his erection inside of her.\n\n\"Ohhhhh,\" Gina cooed as she felt the fullness of his manhood deep inside her.\n\nTom kissed her breast and nipple before smiling at her. \"I will pull out when I am close.\"\n\nGina caressed his face feeling the need to tell him that there was a high chance that she could conceive a child since she just gave birth not too long ago. \"If you don't, there is a good chance something might happen.\"\n\nTom moved to kiss the other breast that was full and untouched and then moved his hands to her hips and ass. \"I will do whatever you want. I just want to be with you.\"\n\n\"Do you really want to be with me like that?\" she asked feeling her heart flutter with emotion.\n\nShe wanted him to be happy and feel the pleasure of ejaculating inside her pussy and knew it was the most ultimate expression of love to her. The idea of giving in to a man again who knew that there was a chance that it could end badly scared her as she would have to deal with another fat belly for nine months. \n\n\"Yes...I want all of you.\"\n\nShe felt Tom was different and his cock had already felt the pleasure of cumming deep in her twice. The idea of not giving him a chance to be the perfect man would be a travesty just as would not letting his erection finish in her again tonight as it felt so amazing inside of her now. She wanted him to know that she was ready for this even though she had a bit of fear.\n\n\"Please....know what you are doing,\" Gina moaned out as Tom began grinding his hips, forcing her sex to deal with his throbbing erection.\n\nShe looked at him, but he instinctively went to her nipple and began suckling again. She moved her hands to his head holding him as she felt her love hole become stimulated by the rocking motion of their sex.\n\nTom was suckling hard as she felt her milk was in full letdown as it was spraying hard into his mouth. She closed her eyes loving the sensation of his lips nursing from her breast as his manhood was firmly and deeply rooted in her sex. \n\nTom continued to suckle and then switched off to her other tit. She looked down and saw that the one he just drained was dripping a bit. Not stopping to deal with it, she just let it leak like a broken faucet as she gyrated her hips wanting his erection to please her love hole.\n\nAs he drew more and more of her sweet warm milk from her heavy breasts, Gina could not help but move her hips hard, grinding into him. She needed more and more of his erection to please her. It was a slow passionate lovemaking, but she wanted to be taken harder and told herself that she was going to be a mommy again.\n\nThe thrill of letting a man fuck her and giving up now became an erotic thrill. She knew he was not a controlling man but forcing him to be one made it feel like she had power too. Surrendering her love hole to him only made her produce sex juices too. She needed to be fucked by a man that was determined to plant his love seed so deep in her that her body had no choice but to let it be claimed.\n\nNot being able to stand the slow lovemaking Gina got up and bent over the edge of her couch. She presented her ass right towards Tom and now grabbed the ledge of the couch. \"Fuck me like this. I want you to do it hard like before.\"\n\nShe felt the cushions move as he was getting into position behind her. She felt her tits hanging down low as she propped herself up by her hands. She then felt the familiar sensation of her entrance being taken by his prick. Her mind fluttered with thoughts and emotions as she felt his helmet pierce through her slick love folds and claim her love canal with his member yet again.\n\nHis hands were on her ass as he began bumping into her feeling her backside absorb his thrusts. Each time he thrusted into her she felt her sex dealing with his girth as he was fucking her. She loved how he was guiding her with his hands and yet pounding into her too. She felt his manhood deep in her and then retreat only for it to do it again.\n\n\"Ohhhhyesssss. Yes....yes...yes,\" she moaned out not caring now. She needed him to know he was pleasuring her pussy and that she was his to take.\n\n\"I love you,\" Tom moaned back making her feel an instant connection to him.\n\nHis admission as he was pounding away at her was now the tip of the iceberg. She felt she needed to reward him, that she needed to give him everything in return. She knew he was telling the truth and was everything she wanted in a man. A man that she knew she needed now and a man that was promptly stuffing her sex with his hard rod.\n\n\"I love you too,\" Gina moaned back, admitting that she did love him. She loved him for awhile and knew now she needed to admit it. \n\nTom was not slowing down as she felt her sex muscles closing and trying to push out his love stick. Her orgasm was hard and yet it was no use as his erection prevailed and pushing through her slippery love channel making sure his crown nudged at her cervix. \n\nShe did not know if he was close but it was so overwhelming for her. His hard shaft was like a machine in her and she loved how her ass was taking his thrusts like a champ. She felt her body just being fucked. Her tits were swaying fast as they were slapping against each other. She reached down feeling that she was expressing milk just as fast as she now saw a steady stream of her mommy milk spraying wildly.\n\nOhhh...fuckkkk....Ohhh God...oh God,\" Gina moaned again, feeling yet another orgasm come over her. She wanted it so bad and as her pussy clamped down in a spasm she loved that her man was taking her.\n\nShe knew now Tom was her man. He had his erection far into her and was using it bareback with full permission to unload everything his male body could give her. The thought that a man like him wanted to be with her drove her emotions wild. She had a feeling that he probably wanted children with her too. His massive love rod was doing just what nature intended it to do and it was her job to make sure it happened.\n\nShe looked back over at him. \"Cum in me. I want you to do it.\"\n\n\"You surrre...ohhhh...shit. Are you sure?\" Tom answered back moaning and yet not stopping his thrusts deep in her.\n\n\"Yes...push it deep too,\" she cooed back feeling that his bloated member was close.\n\nTom thrusts were going deep and she knew that her body was about to be flooded with his creamy finish. She knew she needed that and once it happened, she would orgasm too. Her mind was only focused on the idea that a man who loved her wanted to cum inside of her. She felt she could not deny a man that loved her a shot at knocking her up. Her mind only thought that the moment she felt his semen in her that everything would be complete.\n\nGina pushed back now forcing his member to go deep. She did not want him pulling out of finishing with only half of his cock in her. She wanted to ensure that the knob of his cock was right where it needed to be so her cervix had no chance but to take in his cum. There was going to be no half tries she thought; he needed to make sure she had a belly full of his child.\n\n\"Oh, God...I am cloooosee,\" Tom moaned.\n\nGina instantly pushed back making sure she felt the full length of his erection as he was now fucking her slow but extremely deep. She felt that she was stuffed with his erection and then she felt it.\n\n\"Ohhhhh yessss. Yes...cum deep in me. Don't pull out,\" Gina cried out the split second she felt the warm nectar a man has flooded right where it needed to be.\n\n\"Ohhh fuck...it's deep,\" Tom moaned as she felt his cock bursting with his first initial blast of fertile DNA inside of her.\n\n\"It's okay...Ohhh it's okay. Don't pull out. Just keep it deep in me. Ohhhh I feel it.\" She smiled and moaned. She could feel his cock was throbbing as yet another burst of his seed was on its way to claim her body. The tingling feeling of her own pleasure still not subsiding.\n\nShe gulped hard feeling her pussy clamp down in pleasure from feeling his warm seed seemingly filling her up. The sensation was both erotic and wildly emotional as she knew she was purposefully trying to get pregnant. She could not help but feel it was the right thing to do. She felt that the sensation of a cock inside of her as it ejaculated was so intensely intimate.\n\nTom gave her a look like he was helpless in the choice. She needed him to know that his orgasm was for a purpose and her need to be with him was for real. \"Are you okay with this?\"\n\nTom did not pull out as she still felt his erection had strength and was probably dribbling out the last of his orgasm inside of her. She wanted to tell him that she didn't mind having a baby with him or that she loved him dearly. She felt scared a bit that if he said no that she would be dealing with a third child. She could feel her sex nicely full of his erection and now that he was properly drained the chance for something not happening was slim.\n\n\"I am. I really want this with you. I am not lying about loving you,\" Tom admitted as she felt warmth in her heart that she did the right thing and let him finish inside of her.\n\n\"You really want me to be a mommy again? You really want to commit to this?\" she asked, wondering how far down the rabbit hole he wanted to go.\n\n\"I want to be with you so bad. I wanted to ask you out last year, but I knew you were going through a lot.\"\n\nTom began to pull out and Gina pushed back and then grabbed his waist making sure he stayed deeply planted in her. She could feel his erection had not died down and loved feeling it in her still. \"If we are going to do this, then you need to keep it in me longer.\"\n\nTom smiled wide. \"You serious?\"\n\n\"Mmmmm....yes. Now keep your dick in me. Need to make sure I get all of your cum,\" Gina answered back smiling, feeling a bit kinky that she was both letting him and admitting it to him.\n\n\"Oh, God. I can't believe we are doing this,\" Tom said smiling and yet not moving his dick out.\n\n\"Tell you the truth the other day might have done it. You came so much in me and I don't think all of it came out. I mean you really came deep in me too.\"\n\nAs Tom's erection softened and then slipped out, Gina stood up seeing that her breasts were covered in the spray of her milk and she felt some of Tom's seed escaping down her leg. \"Shit, I need to clean. There is stuff for the dinner in the kitchen, you can start.\"\n\nTom picked up his pants giving her quick kiss. \"Of course.\"\n\nGina went to the bathroom quickly to clean up and pee before going into her bedroom to put on some clothes. She skipped the bra and panties as a pair of leggings and a t-shirt was quick and easy with a child needing her attention. She wanted to get dressed up, but she figured Tom was going to have to see her being Mom and that certain ascetics of her had to wait.",
        "She handled her children making sure they were attended to and then pleasantly saw Tom making dinner and then helping her clean up. It was like having a second pair of hands. Then she saw a smile on his face as his helping out was something she did not expect. She recalled her ex always complaining about helping out. Looking at Tom smiling while doing it made her think that he was seemingly perfect.\n\nThe meal went well as she liked his cooking and she listened to how he loved having a family and how he could not have one with his own ex wife. She left him to clean up while putting her son and daughter to bed all while wondering how wonderful it was to have a man in her house that really wanted her in such a way.\n\nWhen Tom did leave, she gave him a kiss that lasted for more than five minutes; she even slide her hand down to feel his member. She loved how she thought of his cock as hers to use and how she felt that their new relationship as almost too good. \n\nEven texts at night confirmed that he loved being with her even when she apologized for not giving him attention after dinner. His only comment was how he just loved being with her family and how it felt like home.\n\nGina knew Tom was going to be gone most of the day for a field trip and then her own schedule made it impossible for him to come over. The next time she could see him was Friday night and that was two days away. She already missed him, and he was home for only a few hours. She reached to bunch up her blanket imagining it was his body that she could cuddle next to.\n\nThe next morning Gina was running late and hated that she could not be at work early to be with Tom. She felt the urge to feel him inside of her again and the secret thrill of wanting him to cum in her again. She did not know why she wanted it so bad, but just the thought of his sperm being in her sent tingles to her sex like it was waking it up from being dormant for so long.\n\nRushing to work she saw that she had fifteen minutes before the bell rang and the rush of students coming through the halls. She already told Tom she was running late and that she was upset they could not do their thing. \n\nShe got into his room and saw him dressed up for the field trip. Wearing his blue jeans and a shirt compared to her skirt and a nice blouse. \"I am sorry. Simon got finicky and it took me forever.\"\n\n\"It's fine,\" Tom answered as he approached to give her a kiss.\n\n\"Here I have some milk left for you,\" Gina joked as she reached to lift up her blouse.\n\n\"You don't have to. I don't want to seem weird about it,\" Tom said softly.\n\n\"Ohhh please. I think we are way past weird. Besides, I like doing it with you. I like letting you nurse from me.\"\n\nTom moved his head as she opened up her bra exposing just the areolas and nipples from her nursing bra. She then reached over to pull him closer to her chest. \"Just suck baby...just relax and suck.\"\n\nShe felt his mouth latch on as she knew that her milk supply was fully capable of feeding him as well as her son. His lips were nice and puckered as he had a good suction as he began to draw out her nourishing baby milk. She then breathed heavy as she felt the pressure in her tit start to subside a little as he suckled.\n\nNot wanting him to feel left out and wanting to be a girlfriend that did not take care of her man, she reached for his zipper. \"MMMMMM,\" Tom moaned out as she fished out his member and smiled feeling that he was already erect.\n\nShe slid her hand the length of his shaft to his tip feeling how thick he was and how he needed release. She keep stroking with long subtle strokes letting his member feel her hand and enjoy the sensation of getting a hand job.\n\n\"Just cum for me darling. I want you to get off while you are nursing,\" she whispered in his ear, feeling kinky that she was using the word nursing.\n\nTom moaned again as she kept stroking. She then drooled some spit in her hand and covered his crown with it right before she began rubbing it. She could not get over how erotic it was to have him suckling as she stroked him. The feeling of his manhood in her hand as she slide her hand up and down the shaft was making her sex wet.\n\nShe felt it throb and then his body stiffened. She then realized that he was going to shoot his cum all over her dress if she did not cover the tip with her hand. The danger of walking with his cum stain on her skirt was too much.\n\nShe used her other hand and lifted her skirt up. With a quick motion she reached down and pulled her panties down a few inches. She then moved a few inches closer to him and went back to stroking his member. With being close, she then rubbed his tip right against her wet folds as if to tease him that he could enter her.\n\nWanting it to last came to her as she felt her own sexual needs building. She could feel the tingles in her sex as she rubbed his helmet up and down her slippery sex folds desperately holding back from trying to get him to enter her. His mouth was suckling hard and she felt he was getting all of her milk too.\n\nThe warm sensation on her clit and then her entrance came to her. \"Ohhhhh that's it....keep cumming.\"\n\nShe kept stroking feeling his warm creamy orgasm cover her clit and her pussy. She felt a second and third glob of his cream hit right on her clit as she now felt her sex was completely covered in his warm sperm.\n\nTom pulled away from her breast and she looked down to see her entire pussy covered in his sticky orgasm. Pulling up her panties, she just covered it knowing full well that she was going to be walking around feeling wet the entire day.\n\n\"Did you just pull your panties over it?\" Tom asked, shocked and yet smirking.\n\n\"I can get a little dirty from time to time,\" Gina admitted. She did not want to go further trying to gauge if he was going to think less of her.\n\n\"I can see that,\" Tom said as he cleaned himself up.\n\n\"Does it bother you?\" she asked, wanting to know if she crossed a line.\n\n\"Noooo. I like that you get dirty. I love that we have our kinks. And here I thought you were weirded out by me sucking your breasts.\"\n\n\"Ohhh that. I really like doing that with you. I thought it was kind of weird at first, but now I really like it. More than I should, but I love that we're are doing it.\"\n\nTom adjusted his jeans more and then sat down at a seat near her. Gina straightened her skirt and fixed her blouse all while feeling the wetness on her sex. It was like she peed herself but she loved knowing that it was his cum that was in her panties.\n\n\"So what other kinky things do you like?\"\n\n\"Well if you must know. Your nursing from me is now my favorite thing, but I also love feeling your cum in my panties,\" Gina answered, cringing a little wondering if Tom was going to judge her.\n\n\"I think that is hot though. I can do it again if you want, but I also like having sex with you.\"\n\n\"Well there's that too. I liked feeling you cum in me. I know I should be worried about what we did, but for some reason it turns me on that you came in me.\"\n\n\"You serious?\"\n\n\"Depends. Are we in a relationship or are you just wanting me to be pregnant?\" she asked needing to hear it again. She felt deep down that she needed to be told over and over that she was worthy to be someone's girlfriend. The rejection by her ex hurt too much.\n\n\"I do. I want the whole relationship. I want the family with you and everything that goes with it.\"\n\n\"Ohhh my. You are really jumping in there. Do you want to sleep over this Friday so we can talk about this?\"\n\n\"I would love that.\"\n\n\"Look, I am not one to bring guys around my kids and I have not been with a guy since my divorce. I don't mind you sleeping over this weekend, but you have to be serious about this.\"\n\n\"I am very serious about you.\"\n\n\"Okay. I have just been hurt,\" Gina said instantly thinking about how she fell apart when her ex left her for a stripper, a stripper that looked like a Playboy model.\n\nWhen Tom got up to hold her,she felt like bursting into tears. She held it together as she wanted him to be as perfect as he already was. She felt that letting her guard down as much as she did would devastate her. She also knew that Tom was the greatest guy to her and she should not let him go.\n\n\"Do you want me to sleep over the entire weekend or just Friday night?\"\n\nGina fixed herself making sure she did not ruin her makeup. \"You can stay the weekend if you want. Just know that having two kids is hectic at times.\"\n\n\"I know. I love being there for you.\"\n\nTom looked at the time and then Gina did instinctively. She knew they only had a few minutes. With a package of wipes in her hand, she made sure that there was no evidence left on the floor or anywhere else. Explaining away how errant sperm was on the floor was something she did not want.\n\nShe rushed into her classroom once the sound of the day was there. She fixed her things to start the day even as she moved, she felt the wetness in her panties. The kinky wet sensation of feeling his sperm was right on her clit and sex folds making her even more turned on. The constant reminder that Tom's love seed was making a slimy mess in her panties was there every step she took.\n\nShe debated going without panties and then debated rushing to the bathroom to rub her clit to an orgasm. She could feel her sexual desire at full speed as she thought about Tom making love to her. She felt her sex clench a few times as her panties clung to her pussy lips as it was a constant reminder that Tom's sperm was there on her. She thought of it as a badge of honor that her man left her with his hot sperm in her panties.\n\nGina felt it was a bad idea to try to make it through the day with cum covered panties. It was not the fact she felt slimy in an erotic way either. She felt she could not take the constant need to rub her pussy as her panties rubbing against her pussy reminded her that she wanted Tom to fuck her again.\n\nWith a free period early in the day, Gina now was without panties as it seemed to calm her sexual frustration down. She still thought about Tom though but the constant contact with soiled panties against her sex was not there. She now counted down the hours until she was going to be with him.\n\nThat night Gina dreamt about Tom just walking in the door and taking her. Letting him have his way with her and making her sleep in his arms with a pussy full of his seed. She rubbed her sex hard thinking that she should have bought a sex toy on the way home as she needed release so bad. \n\nShe texted Tom who she knew was away and thought for a moment that they could possibly have phone sex. She knew he was with students on a trip but felt that her sexual needs were more important. The responses she got back were loving but not perverse.\n\nThe next day she was still without Tom in the morning and her breasts hurt bad. She needed to pump and then pump again feeling like a cow that was forever producing milk. She knew that the amount she was pumping was way more than she was doing weeks ago. She just closed her eyes imagining it was Tom's lips sucking her breasts dry and not the lifeless pump that was now working double time.\n\nShe spent the day texting him back and forth, loving that he was acting like they were a couple. He talked about what she wanted for her birthday and when he asked what her children liked, it was like she found the man that wanted the same things she did.\n\nShe rushed home knowing Tom was going to be there shortly. She wanted to look nice for him but also needed to attend to both Mary and Simon who were acting up. The need to get dressed up was there but also to clean the house from the billion toys and other items that were strewn about. It was like there was a million things to do and not enough time to do half of them.\n\nThe shower she did take was right when she knew Tom was going to come over too. She rushed through it putting her hair up and not caring for anything other than making sure she was out of the shower to be there to let him in.\n\nJust as she put her robe on she heard the doorbell. Not wanting him to wait, she rushed down to open the door. She saw that he was in simple jeans and a polo, but to her she felt like a cow housewife who was naked under her robe with her wet hair up and no makeup.\n\n\"Come in...please don't mind the mess. I didn't have time and the kids were acting up. Have a seat on the couch and I will be down in a bit,\" Gina said, fast thinking she was just going to throw on some panties and a bra with leggings and a t-shirt, hoping it was enough to keep him from thinking she was the realm of being with sexually.\n\n\"I think you look good just like that. That and I can start cooking for you as you get ready,\" Tom commented as his smile seemed to melt her willpower for any rebuttal.\n\nGina knew he was either lying or being nice. \"Ohhh please...I look like shit now.\" \n\n\"Noo, I am not joking. I don't think you need to get ready at all.\"\n\n\"I am in a freaking robe.\" Gina laughed but could not hold back her smile as she liked that Tom was being sweet.\n\n\"I know. I like you in a robe. I think it's hot. Wear it while we cook. If you want to get ready after, then you can while I clean up from dinner.\" \n\n\"You joking? You want me to not get ready and just walk around in a robe?\"\n\nTom put down the bag he was carrying and kissed her lips quickly. \"I do. I see you dressed up everyday and now I can see you like this. It turns me on knowing that I can see you vulnerable like this. It makes me feel that I have something that nobody else does.\"\n\nGina was still smiling from the quick kiss. Her voice sounded demure as she felt that her man wanted to see her like this. \"Okay. For you, but I still plan on getting dressed up tomorrow.\"\n\n\"Tomorrow, I would like to take you out to dinner,\" Tom stated as he walked with her into the kitchen.\n\nGina quickly thought and then realized that she had complications. \"I don't have a babysitter.\"\n\n\"You don't need one. I want to take everyone out. The four of us,\" Tom offered with a smile on his face.\n\n\"That would be nice. I haven't been out to eat since Simon was born, other than fast food.\"\n\nTom put his hand on the small of her back, guiding her out of the way as he began to prepare dinner. She thought about jumping in and helping or getting ready. The idea that she had a choice made it feel awkward. She decided to just keep her robe on and just help in the kitchen.\n\nAs they ate, she felt it was weird but not in a bad way. Tom seemed eager to take the role of partner for her as he handled dishing food out and even moving plates to the sink after. The idea he would just jump into the family role felt strange as she thought he would just retreat to the couch and relax leaving her to clean up as her ex always did.\n\nThe strange and yet exciting feeling of having Tom help her and be near her only added to her wanting him. She knew that he was sleeping over and she was going to open her legs for him. She wanted to please him sexually so bad that she knew she would say yes to anything sexual for him.\n\nSimon began to cry and she knew that he needed to be fed and then put to bed. She walked away from Tom to handle it. She soothed him and then offered her breast to him to feed wondering how much would be left over. The last three days he was not even coming close to draining her tits and that she needed to pump even after feeding.\n\nWalking downstairs she saw Mary sitting nicely watching tv in the living room and the kitchen spotless and everything done. It was now cleaner than before as she saw Tom diligently working on cleaning up. \n\nGina quickly got behind him and then put her hands on his waist. \"Sit down,\" she ordered in a demanding and yet loving tone.\n\nAs Tom sat down she gave him a deviously sexy look. She then reached towards her robe exposing her breasts to him. With no bra supporting her heavy milk laden breasts, they sagged down a bit showing off their size and weight.\n\n\"I am full still,\" she cooed, moving closer so that her nipple was moving towards his mouth.\n\nHer nipples felt like they were almost elastic as they were stretched out from the constant sucking that was done to them from having back to back children and never stopping her lactation. The sexual excitement of knowing that Tom was going to suckle made her nipples stick out as to make it easy to suck from.\n\nTom instantly latched on and began to suck. \"Ohhhh yesssss,\" she moaned softly as her fingers ran through his hair comforting him.\n\nHis mouth had a perfect latch on her right tit, and he was drawing milk fast as she felt her letdown in full swing. She could feel him just draining her breasts of all its liquid nourishment. He was drinking fast too as she felt him suckling faster too as if he was hungry for her milk.\n\nThe tingling sensation in her sex was there as was the relaxing feeling of having her breasts drained of the pressure of carrying so much milk around. Her left nipple began to drip and Tom quickly moved over to latch onto that nipple. Her right tit was not completely drained and she saw the droplets of her white mommy milk still leaking.\n\nNot stopping it, she just let her tit leak out while Tom continued nursing her other breast as she felt the pressure start to dwindle. The other tit still had milk, but she liked the feeling of having her breasts out in the open for him to choose which tit to suckle from. The knowledge that she was feeding her man her warm breast milk gave her tingles of sexual jolts as she could feel wetness in her sex already.\n\nTom switched back to the other breast quickly covering her long nipple with his mouth. She then felt that he was now latched on and began to suck her nipple and was pulling on it with his lips in an erotic way. He then quickly switched back to the other nipple doing the same, making her nipples feel teased in a sexual way.\n\nWith having longer than normal nipples now the sensitivity increased. Having Tom pull on her nipples with his mouth while also feeling him drain her chest made her sex pulsate. \"Ohhhhhh,\" she moaned as he was just playing with her nipples now.\n\nShe finally pulled away feeling her nipples were like arrow points they were so hard and pointing out. \"Let me put Mary to bed and then I want you.\"\n\nShe quickly went into the living room already seeing her daughter passed out sleeping. The notion that this was going to be an easy tuck in made her happy. She rushed quickly putting her daughter to bed and then walked downstairs to see Tom at the bottom of the steps waiting for her.\n\n\"Bedroom or right there on the steps?\" he asked, grinning wide like he would really do it right there.\n\nGina stood at the top of the steps and just dropped her robe exposing her nude form to him. Her large breasts hung down for him to see the nipples that were excessively long and easy to suck on. Her hips gave her an hourglass shape and her stomach showed obvious signs it carried children recently.\n\n\"Come upstairs and have me,\" Gina called out in a sexy voice, feeling confident that he liked her looks and that her body was attractive for him.\n\nAs Tom walked up the steps she stared at him knowing that this man was hers now. She felt the connection to him as if he was hers. When he got close to the top step, she walked slowly to her bedroom making sure that he had a clear line of sight of her ass as she walked. The erotic feeling of knowing his eyes were on her ass made it seem sexy to her.\n\nOnce inside, she turned to him and waited for him to come in. The moment he was in, she closed the door and took his hand, guiding him to the bed. She then pushed him down so he was sitting and she was standing before him.\n\nGina went to her knees and then went to his pants to get them off of him. She looked up at him smiling as she was pulling down his zipper. \"You hard for me?\"\n\n\"Yes. I was hard when I was sucking.\"",
        "\"Bet you liked just sucking my milk out like that,\" Gina answered as she pulled his pants free, seeing that his boxers were already showing that his erection wanted out.\n\n\"I did. I love that you are lactating so much. I know it's weird, but I just love it so much.\"\n\nGina pulled free his boxers as they were now thrown across the room so she could see his manhood standing firm and proud before her eyes. The tip of his member was fully enlarged and ready to enter her. His shaft was firm and making his manhood seem like it was a weapon for pleasure.\n\nShe smiled and engulfed the tip, feeling the soft spongy texture of a penis in her mouth. She wrapped her lips tight around the head and then slid down to midway on his shaft letting her mouth lubricate it in her salvia. The fullness of his member in her mouth only made her want to drool more on his shaft.\n\nBack and forth she slid her mouth on his sex tool. She loved feeling it fill her mouth as she gave his crown a few licks just to taste the precum. Gina then pulled it out and licked the entire length of his shaft only to go back to sucking it. She then moved her hands stroking him as she sucked. \n\nBefore she could really get into giving him oral pleasure he moved her away. She looked up, wondering why he would stop her from giving him a blowjob. \"My turn now,\" he said, making her realize that he was going to go down on her.\n\nGina switched places with him and began to slide further up on the bed. Tom then stopped her and pulled her to the edge so her legs and most of her ass was hanging over the edge. \"You are going to love this.\"\n\n\"Really.\" \n\nAs Tom's tongue swiped upwards she felt his tongue press against her sex lips as it made its way up her entire sex. His mouth was pressed against her open love hole as his hand held her leg up like she was being examined. She then felt his tongue go up and down the entire length of her love folds and then inside of her.\n\n\"Ohhhhh dammm,\" Gina moaned as it had been over a year since she felt a tongue touch her more intimate area and it was never like this.\n\nShe could tell Tom was not shy about what he was licking and how he was doing it. His tongue went back down the length of her sex, pressing hard against her love petals giving her the feeling that her love was being properly attended to by his mouth. She felt he was daring and cared only for her desire for pleasure as his tongue even went past her love opening to her anal entrance giving that attention too.\n\nAs his nose pressed against her clit and his tongue pushed in her entrance, she felt at a loss to do anything else other than to enjoy it. His tongue then swiped upwards again sucking on her folds only to then suck on her clit quickly. Tom's tongue then quickly licked downward, pressing hard against her lips to her entrance so his tongue could push in, making her feel penetrated by it.\n\n\"Ohhhhhhh....God...ohhh God,\" Gina moaned as she felt she could not control her orgasm from coming on strong.\n\nShe could feel her legs trembling as her orgasm was building to this giant momentous event. She could not do anything other than grab onto his hair and hope she was not going to scream. She felt his tongue lapping around her clit hard only to quickly dart down the length of her sex lips to her entrance and dive into it yet again.\n\nAgain and again Tom's tongue was making its way up and down her love petals and even sucking on her button, pulling it from its protective hood. She then felt his tongue tease it and work back down her sex right to her opening and push in. She did not know what was going to happen and felt the trembling get more and more.\n\nShe felt her sex getting wet and then wetter as his mouth was having a field day giving her oral sex. His tongue pressing hard against her sex petals making them open and flower was nothing she experienced before. She could feel the wetness just oozing from her sex as Tom was not stopping.\n\n\"I am goinnnng...cum,\" Gina cried out as she finally felt her sex spasm followed by a wet sensation expelling from her hole. She knew she was wet but she felt it just flow out of her.\n\nTom kept licking as she felt her pussy spasm to the point of being too much. She instantly pushed down to escape putting her feet down on the floor and moving her ass on the bed for support. She looked down to see that Tom's mouth was covered in her juices and that her orgasm was more severe than she expected.\n\n\"Oh Jesus...That was good,\" she admitted, feeling the aftereffects of her orgasm still making her shake slightly.\n\n\"We are not done yet,\" Tom announced as he stood up and then reached for his pants on the floor.\n\nGina happily opened her legs and moved her body so her sex could easily be taken by him. She could see his erection ready to enter her and a thrill ran through her body knowing more was still to come. \n\nTom got on the bed and then positioned himself between her legs. All she could think about was how amazing it was going to feel having Tom slide his member in her. She knew that her wet sex was desperately craving a male erection inside of it.\n\n\"Oh, shit. I got condoms in my bag if you want me to use them,\" Tom said looking back.\n\n\"I think we are past using condoms. Just put it in me,\" Gina moaned not caring about anything other than feeling his size in her.\n\nAs Tom slipped past her wet sex petals, she felt the fullness of a man being in her. The satisfaction of feeling his manhood claim her washed over her as she felt the sexual excitement course through her yet again. \n\nTom pushed his erection in and out as she felt it was almost sloshing inside of her she was so overly excited. Between the thrill of sex and his mouth pleasing her, she knew that she was so overly excited for him. All she could think about was how it was going to feel to have him once again finish inside of her.\n\nHis mouth was locked on hers as she felt their tongues swirling around each other's. His hips continued pushing down as she felt his member go deep each time, making her feel her sex muscles spasm in pleasure from the intrusion. He was going deep enough to make her feel full and yet fast enough to feel that she was being properly taken by a man.\n\nWhen her love walls contracted around his girth, she could not help but push out feeling more wetness in her sex. It made no use as she felt Tom push through her contractions making sure he was deeply imbedded in her love hole each thrust he gave. Over and over she felt that his love rod was doing its job so perfectly.\n\nHe broke the kiss and leaned back as she kept her legs wide for him. Her breasts were to the sides as she felt her body laid out for him to fuck. With the fullness of his erection firmly implanted inside of her sex, she knew she was being loved like she was his woman.\n\n\"Fuck me hard baby. I want to really get fucked tonight,\" Gina urged him on, feeling the need for her pussy to get pounded again.\n\nTom smiled and then she felt his hips slam into her. She swore his member felt like steel inside of her as she knew he was so hard. He was pounding away as she loved how her sex could not do anything other than take his manhood each time in glorious defeat. \n\nWith her tits moving back and forth, she grabbed a hold of them pinching her nipples and watching them spray his body. When he smiled from being covered with her milk, she pressed harder on her fleshy globes until she had a constant hard spray on him.\n\nWhen Tom finally moaned while kissing, Gina knew it was about to happen. Wrapping her legs around his waist she wanted him to know that her love hole needed to have his sperm nice and deep. The idea that he was about to cum inside her again made her baby neck hairs stand straight up as she knew she was giving him full access to her life giving potential.\n\nTom grunted as she thought she had more time and a few more thrusts. The flow of warm fertile semen flowing inside of her seemed to quench her need for a finish. She felt a calming sensation in her as her orgasm quickly clamped onto his shaft making sure that all of the creamy sperm was properly deposited right where it should be.\n\nGina smiled not able to speak as she felt his member pulse inside of her. It was like a confirmation that he was really doing it. That he was truly loving her to the point that his fertile swimmers were now on the hunt for something to find inside of her. \n\nBefore Tom could move she held onto his arms feeling them and looking him in the eyes. She still felt her orgasm going as his manhood felt bigger knowing she was clenching from pleasure still. \"Don't pull out yet. I want to feel it in me for awhile.\"\n\nTom smiled back not moving. \"Did it feel good?\"\n\n\"Ohh God yes. I loved feeling it,\" she admitted as she knew it wasn't a lie. She loved how his cock pulsed inside of her and how his warm cum seemed to fill her up.\n\nTom kissed her softly nibbling at her lips. Gina continued stroking his arms, letting him play with her lips. She felt his member properly wedged deep in her, giving her a nice full sensation in her sex. The warmth of his seed still lingered as she knew that his balls were drained into her body.\n\nWhen his member went soft and slipped out she felt at a loss and secretly hoped that he could get hard again and do it all over. Tom finally moved off of her but then reached towards her, pulling her into his arms. Gina sighed deeply loving that she was being held like this.\n\nShe wanted to talk to him and tell him all her worries and problems and then tell him that she was in love with him. The need to tell him that she wanted something more with him could not seem to come out. She felt the exhaustion of sex mingle with the love of being held in such a way.\n\nThe next day Gina was up and looked over to see Tom sleeping. Waking up in his arms sent emotional shivers through her body. She felt it meant more to her to be held while she slept than to be spoiled with jewelry. As she made her way to the bathroom, she just wanted to run back and curl up in his arms as she felt it was the safest place in the world.\n\nLast night's sex needed to be cleaned up. She found that a shower was needed because of how wet she was and how much sperm was put inside of her. Washing her hair and cleaning herself she found that her fingers were already getting her excited thinking about how Tom was going to make love to her again.\n\nTwo kids needed to be attended to and her own pleasure needed to be put aside. Simon needed feeding as his cry could wake up the house if left unattended to. Her daughter was sleeping soundly but she knew she needed to feed her son.\n\nChanging him and opening up her robe as she sat down wondering what it would be like to have a man in the house again. She thought about Tom sleeping in the bedroom and felt that it could happen. The desire to have a full family again came to her as she wondered if Tom wanted it too. \n\nGina wanted to go back to sleep but she did not want to waste the morning. She was still in her robe making breakfast hoping that she could get a head start on taking care of her kids and entertain her man that was sleeping in her bed.\n\nCoffee was made and a nice breakfast spread done when she heard Tom making his way downstairs. \"Morning sleepy,\" she announced, smiling as she saw him wearing only his boxers and a t-shirt\n\n\"I normally get up earlier.\"\n\nGina poured him some coffee and then went to get a plate to start putting food on it for him. She turned to him smiling as she knew the reason he did not get up sooner was because he fucked her last night. \"Guess you needed some sleep after last night.\"\n\n\"I guess so,\" Tom replied with a laugh as he sat down at the table.\n\nGina walked over putting the plate in front of him and leaned down so they could kiss quickly. \"Tomorrow you might have to sleep in again.\"\n\n\"Is that so?\" Tom laughed at her as she smiled back at him.\n\nShe grabbed his coffee and then held it for him as she stepped closer to him. \"It is. Depending upon how tired my kids are, you might be needing a nap this afternoon.\"\n\n\"Oh wow. I guess I am going to need to get my energy level up.\"\n\n\"You better. You want milk in your coffee?\" Gina asked, feeling kinky and knowing that she was about to surprise him with what milk she was going to put in his coffee.\n\nTom nodded his head and Gina opened her robe with her free hand exposing her right breast to him. \"You serious?\" he asked with his eyes looking right at her elongated nipple.\n\n\"Do you want it?\" Gina said with a devious smile on her face. She knew she was going to spray her mother's milk into his coffee and then possibly let him suckle from her after.\n\n\"Yes. You know I love it.\"\n\nGina then grabbed her breast squeezing it as the spray of her milk made a sound of it being squirting into the black coffee. She squeezed again and again as her spray of milk loudly squirted into the coffee. \n\n\"More baby,\" Tom softly said as she could see his eyes were locked onto her breast.\n\n\"Mmmm...okay,\" Gina said softly with a big smile.\n\nShe gripped again squirting and then again as the spray of her milk was heavy and was now mixing with the coffee. She kept squeezing to the sound of squirting. She had no idea how to gauge how much but as the coffee finally turned a lighter color, she felt an erotic thrill that he was drinking her milk like that.\n\n\"God, you turn me on so much.\"\n\n\"I better. I don't want to think my man isn't into me,\" Gina answered, sitting down but not moving to cover up, just letting her breasts be exposed to him.\n\n\"So I am your man now?\" Tom asked as he stirred his coffee and then took a big sip.\n\n\"You don't want to be?\" Gina asked, wondering if he was playing with her or that he was not into her, but figured he was teasing her again.\n\n\"Ohhh, I want you. I want you more than anything else.\"\n\n\"Good...I want you to want me,\" Gina answered feeling wanted as the warm sensation of getting someone in her life came to her.\n\nShe felt a wet drop hit her stomach followed by another one. She looked down to see both of her nipples leaking slightly from the excitement and from being squeezed. She then looked up at Tom who was staring right at her. \"I need to pump. I am producing more than normal since we have been fooling around.\"\n\nAs Gina got up from the chair, she saw Tom motion for her to come over. She knew that he was going to feed from her breasts again. The excitement of knowing he was going to suckle from her non-stop leaking tits made her sex moist.\n\n\"You want to feed?\" she cooed seductively at him wanting to feed him.\n\nTom did not answer but just opened his mouth taking in her nipple. He latched on quickly as she felt him drawing milk from her tit. \"Ohhhhhh yesss,\" she moaned instantly as she felt he was nursing the last of her nourishing milk from her tit.\n\nTom made quick work of the one breast and then latched onto the other and began suckling it fast. She could feel her sex responding to his sucking as she just put her hand on his head comforting him as he pulled the last of her milk from her.\n\nWhen she felt that her breasts no longer needed attention, she backed away breathing hard and smiling. \"I can't believe I like that so much.\" \n\n\"You are not the only one,\" Tom replied, taking a sip of his breastmilk coffee.\n\nGina made a plate of food and sat across from him. She felt kinky not covering her chest but just letting her large breasts hang in front of him for his eyes to stare at. She did not feel like wearing a bra as she wanted him to see her without anything and for him to know her true size.\n\n\"I am holding back just bending you over and having sex with you,\" Tom said as she could see he was heavily distracted by her bare chest with her long nipples just waiting to be sucked on by him again.\n\n\"I would let you if Mary was not about to wake up soon,\" Gina admitted as she continued eating, smiling as she felt the coldness from her breasts being exposed.\n\nShe thought about letting him just bend her over the sink and letting him have his way with her but did not want to risk her child walking in. She just asked questions about him while they ate all the while feeling kinky about having her hanging tits out for him to stare at.\n\n\"I can't believe we are doing this,\" she said, knowing she was questioning both breastfeeding him and allowing him to enter her life like they were already a married couple.\n\n\"I can't believe I waited this long to tell you my feelings. But what can't you believe?\"\n\n\"You know I had no idea you had feelings for me. I didn't think anyone would want a single mom with two kids and breasts that won't stop leaking milk.\" She then laughed knowing she was admitting to liking her tits being sucked on by him. \"I also had no idea I would like breastfeeding you so much either.\"\n\n\"You're not the only one. I like you being a mom though. I think some women are born to be great moms and I love the fact you are one. I find it sexy that you are a mom.\"\n\n\"You're weird. You find it sexy that I have a belly pouch from childbirth and tits that milk?\" she questioned, wondering what he liked and yet secretly liking the fact he did.\n\n\"You were so sexy pregnant. I stared at you all the time. I love that you are such a great mom and love the way you look right now. Although I really think you would look sexy pregnant again.\"\n\nHis comment shocked her but not in a bad way as she could not help but smile. The idea that they could be so candid about pregnancy was weird but also calming as she felt it was sexy too. The thought about doing it was lingering and she felt strange as a week before she would have dismissed it so easily.\n\nShe heard something in Simon's room and quickly got up from the table and headed towards there. She saw the look on Tom's face as he seemingly knew that she was in mommy mode and was going to handle it. She got to his room and saw that he was sleeping soundly. She then peered into Mary's room and saw that she was passed out too.\n\nAs she walked back to the kitchen, she realized that she did not move her robe over and that her tits were out for anyone to see. She debated covering herself but knew Tom was in the other room and it felt so erotic that her chest was exposed for him.\n\nOnce in the kitchen, she saw Tom standing and cleaning his plate at the sink. She walked over to him wrapping her arms around him kissing his neck. \"I am really happy you stayed the night. I thought you were handsome when we first met.\"\n\nTom turned around and kissed her lips as his hands caressed her breasts before sliding down to her waist. \"I really meant what I said. I think you are so perfect right now and you looked so beautiful pregnant. I think you were made to be a mommy and I love that about you.\"\n\nShe loved feeling his hands and kisses as if her body demanded the intimate attention only a man could give a woman. She looked into his eyes seeing the passion he had. \"You are sweet, but I doubt you want to see me with a big fat belly again. Plus you would have to deal with the children too.\"\n\nTom kissed her lips again as she felt weak to his mouth. His hands reached to untie her robe and then pulled it open exposing her sex to him. \"I never did tell you that I wanted a family so bad. I want to have one with you so bad.\"\n\nShe felt his hands then caressing her stomach and belly feeling it like he was a lover bent on exploring every inch of her body. His fingers reaching around to her ass gripping it and opening it so her sex could open slightly. Feeling so exposed to him as his hands owned her body, making her heart pound with the excitement made her feel so weak to his demand.\n\n\"You really want me to be pregnant again? Ohhh...you don't know what you're asking,\" she moaned, not knowing if she should say yes or no to him as he jumped over months of relationship talk and went right into family planning.",
        "\"I want you in my life forever. I don't ever want to leave you,\" he said right before kissing her.\n\nThe option of saying no was gone as his words chiseled through any defenses she had up to guard her from having her heart broken again. There was no saying no as his words, kisses and touch now controlled her. All that was left to do was give in. She felt her heart warm as it thundered away from knowing she had a man that wanted everything she did and would never leave her.\n\n\"Ohhhhh fuck...Ohhh shit,\" she moaned as his kisses went to her neck making her pussy feel like a water park now.\n\nHe slid his hand down and when he got to her sex she knew he had her. She knew that he felt her wet juices ready to take in his manhood. There was no denying it to him now as she felt him slip inside of her wetness letting him feel her willingness.\n\nHer robe was pulled down by his other hand and then his mouth kissed her again, sealing the deal that she was about to be taken. She then felt his hands turn her around so her ass was now presented to him like a Christmas gift. Bending over slightly and moving her legs apart so her sex could be entered easily, she knew she was giving in and that he was going spray his sperm all up in her.\n\nHis hands caressed her ass as she felt his strong hands on her. They rubbed her butt cheeks and then moved to her hips before sliding down her legs. Her heart was beating fast as she knew this was going to happen. It was not the prospect of sex she was giving into, but the idea that this man was going to be hers forever.\n\nTom moved closer and then pushed apart her ass crack again as she then felt his tip wanting entry into her sex. Gina leaned down making it easy for him. She then felt it. His hard member slipped into her wetness as the full feeling of a man being inside of her once again washed over her.\n\nHis erection was so hard she thought and now it was buried deep in her love hole. Her wet sex made it easy for him to conquer her as he pushed in and out of her too. With his hands on her hips too, she knew that he was taking her just the way she wanted to be taken.\n\nTom bumped his body against her ass hard now as she felt his hard manhood push deep into her love canal again and again. He was going deep each time confirming to her that she was truly being taken. He made no mention of protections and with all his talk she knew he was on a mission to make sure she conceived.\n\nHer hands were on the sink as she felt his body now pound against her ass. Her tits were swaying back and forth as she felt them hit her chest. Tom was not going slow and she felt he knew what she liked. Her mind raced with the memory of how she orgasmed from feeling him explode in her last time.\n\n\"Ohhh God...Ohhh God....feels so good,\" Gina moaned, giving into her first orgasm as it came faster than she realized.\n\nHis body was going faster as she felt his erection just sliding in and out of her love tunnel. The sensation of her wet sex being filled with his member felt like it was scratching a sexual urge in her. She could not believe how good it felt to give in to him and just let him take what he wanted.\n\nAs much as she knew she was giving in, she knew that he wanted to give her something. It was not the sex that she felt was giving her the pleasure but what and who she was doing it with. Her mind quickly flashed with the thought that he was going to be in her life forever and that he was madly in love with her. The bond she felt with him made the sex feel almost overwhelming.\n\nThe more he pushed into her and pulled back on her hips the more she felt her hanging breasts bounce from it. The feeling of his hard organ just plowing through her sex made her realize that she was going to be loved like this all the time. She felt she was his in every way and that surrounding to him was what she needed to do.\n\nGina put her hands on the sink and pushed back feeling his manhood go deep as she adjusted herself. She arched her back and looked back at him just as he slowed down his thrusts. His hands went to her breasts holding them as she felt his fingers squeeze just right.\n\n\"Are we doing this?\" Gina moaned out her question, wanting to hear what he wanted, and needing to hear him confess what his desires were. \n\n\"I have to ...I need this,\" Tom moaned back as he pulled out and pushed back in making her feel his size confirm that he was as deep as he could go giving her the full sensation her pussy loved.\n\n\"Ohhhh...fuck...do it then,\" Gina moaned loud feeling her body giving in to another spasm of ecstasy.\n\nTom never released her breasts, holding onto them as his body bucked against hers. She felt his member swelling too. She did not know if his male tool was preparing to unload its load or that her sex muscles just clenched around his shaft.\n\nWhen his body began going faster Gina knew he was about ready to finish. She felt another orgasm coming as his rod pushed through her sex again and again. She wanted to time her orgasm so when she felt his cum gushing in she could cum with him. She wanted this to be perfect so they came together.\n\n\"Ohhh fuck...I am about to cum,\" Tom moaned as Gina began to let go of her will power to let herself do the same.\n\n\"Do it...make me a mommy again. Ohhh dammm...ohhh yes. Give it to me. Ohh yess...cum deep in me,\" Gina replied in a moan, knowing that it sounded dirty but also knowing it was the truth.\n\nShe felt him bury his erection deep into her. When it swelled up slightly she felt her orgasm take control. It was like her vaginal muscles closed in around his shaft locking it in place. She swore her love muscles in her pussy tightened up to the point they were literally holding his member inside of her as she felt a sudden warm sensation filling her up.\n\n\"OHHHHH yesss....I feel it...you're Ohhhh GOD, you're going to get me pregnant,\" Gina moaned, unable to hold back her thoughts.\n\nTom grunted hard not speaking as she felt the warmth of his sperm pumping more into her. Unable to release his member, she felt her orgasm rip through her like a storm. She could not breathe as she felt her sex just holding onto his erection. Her mind still focused on the fact his manhood was deep in her and that her orgasm was probably sucking up his seed into her womb to find something to fertilize..\n\nWhen her sex muscles spasmed it was just enough to feel his erection pull out slightly. Tom pushed back in a bit making sure his member was buried deep again as she felt his body firmly pressed up against her backside.\n\n\"If it happens, I won't leave. If it doesn't happen, I still won't leave.\"\n\nGina turned to him feeling him go soft a little but still holding it deep in her. \"I want this, but I am still scared.\"\n\nTom's member slipped out as his penis lost its strength to stay in. Her orgasm was still lingering but she felt her ability to think straight again. It was as if she was back to being sober and her sex was not lingering in control even though the sexual stimulus was still coursing through her body.\n\n\"Please don't be scared. I want to be with you so badly.\"\n\nGina pulled down her robe and watched Tom pull up his shorts that he was wearing. \"It's just that we are going so fast. Ohh god, I can't believe I told you I wanted to be a mommy again. I sounded like some slut.\"\n\n\"Haaa.\" Tom laughed and moved in kissing her lips. \"You did sound like a dirty slut, but I came when you said it. I loved that you get like that.\"\n\n\"You are weird, but after what we did this week, there might be a chance,\" Gina replied, knowing that she was highly fertile at this time and that sex with him all of those times ended with her taking his sperm deep in her with no precautions after.\n\n\"To make sure, we should do it again tonight,\" Tom joked as she saw him smile wide.\n\nWith her smile just as big as his she said, \"You are so bad.\"\n\n\"I am serious.\"\n\n\"I know you are. Let's just make sure nobody walks in on us though,\" Gina answered, knowing tonight she was going to feel more warm sperm in her in an effort to be pregnant again.\n\nWith a trip to the zoo and a nice place to eat afterwards, the day seemed like a holiday she never had. A fear she held was that the next man she had in her life would not get along with her children. That there would be some conflict and that she would lose a man over not accepting her children. That fear was quickly demolished when she saw Tom around her children. It was like they were his kids and they were the center of attention.\n\nWhen Tom stayed over the weekend it was expected but Gina felt that she wanted and needed more of him. Sunday turned into Monday and then before she realized it Tom was moved in within a week. She had no idea she would want it to happen but felt she could not live without him after a week. \n\nWaking up to feeding both Tom and her son was weird and yet erotic at the same time. After the first week she asked Tom what he wanted, and his only answer was everything. Asking him to stay another week was one of the easiest things she ever did. Having a man love her overnight was like a dream she never woke up from. When Tom proposed within a month, she knew deep down that he was the right man.\n\nShe felt like it was a whirlwind romance but loved that it happened. When she was late, she felt joy and not fear that it was Tom that put a baby in her. Gina never considered stopping her lactation as she felt it was their kink and secretly loved doing it more than she let on. \n\nAfter the second child with Tom, Gina broke the news to him that she wanted to go on birth control as having four children was enough for her. As a compromise she told him that she would not stop lactating. She did not want to admit to him that she never considered stopping at all as she loved how it felt to feed him throughout the day.\n\nGina figured that her breasts were going to get larger and Tom loved that she would go without a bra on the weekends for him. After four children her nipples grew large and more accustomed to being suckled by her husband making her wet each time it happened.\n\nHaving a husband who suckled from her tits all the time sounded weird and she never told any of her friends that she was feeding Tom or that she was still lactating years after the birth of her fourth child. She did tell her friends that Tom loved her being bare breasted on the weekends and would bend her over at random times to fuck her. \n\nGina knew admitting to it sounded crazy that her husband did these things, but she loved when he did it. She loved how wet she got when he suckled her or how she orgasmed like crazy when he took her from behind only to feel his orgasm finish in her every single time.\n\nGina did love it when Tom bought her a new house and a new car while her ex-husband lost his stripper girlfriend after a year. She loved knowing that Tom did absolutely everything she could ever want and adored her no matter what. Even as time passed Gina never stopped thinking that Tom was perfect for her or that she should stop feeding him her breast milk.\n\n \n"
    ],
    "authorname": "Jay626",
    "tags": [
        "breast milk",
        "creampie",
        "insemination",
        "lactation",
        "milk",
        "pregnancy",
        "suckling"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/broken-breast-pump-ch-02"
}