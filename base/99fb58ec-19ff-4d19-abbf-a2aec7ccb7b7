{
    "title": "Hot Chocolate for Christmas Eve",
    "pages": [
        "Paul\n\n\"HOW COULD WE forget to make sure we had hot chocolate? It just won't seem like Christmas Eve without hot chocolate.\" Connie Hansen was so upset her voice was starting to quiver.\" Paul had agreed the first time she said this an hour ago. The second time, not 15 minutes ago, he had impatiently told her they would just have to live without it.\n\nThis time, with barely an hour left before it was time to go to Midnight Mass, he lost his temper. \"If you're so upset about no hot chocolate, Connie, why the hell don't you go get some? There's bound to be a Starbucks open somewhere!\"\n\n\"Fine! I'll do just that, but I'm damned if I'll bring you any!\" With that she leaped up and headed for the kitchen door.\n\nWhy are we fighting like this? The damn chocolate isn't that important. He wasn't about to give in, though, not if she wouldn't. As she tore down the driveway, he was dismayed to see it had started snowing, snowing hard. He tried to call and ask her to be careful, but it went straight to voice mail. She must have turned her cell off.\n\nWould we have such a silly argument on Christmas Eve if we had any children? But three miscarriages in less than three years\u2014the last one putting her in the hospital for two days\u2014had caused Connie's Ob-Gyn to strongly advise a hysterectomy.\n\nAfter much soul searching and many tears, they had agreed and gave up the dream of family. The two years since then had been difficult. Sometimes Connie was moody, even snappish. A few times he came across her crying for no reason, but she said it was nothing and wouldn't talk about it. He sat and stared out the living room window, watching the snowfall through the reflected lights on the Christmas tree and worrying that they were growing apart.\n\nFr. Mike\n\nFR. MICHAEL MURPHY (please call me Mike), pastor at Our Lady of Sorrows Catholic Community, walked across the sanctuary making sure all was ready for Midnight Mass. As usual, a few were already in the pews, even though it was just past 8:00 and Mass didn't start until 9:00. Why do we still call it Midnight Mass? We haven't started that late for what, 45, 50 years? People just don't want to stay up that late any more.\n\nThe Family Mass at 4:30 on Christmas Eve was by far their best attended Christmas Mass. The church was packed with people who came for the procession with children costumed as the characters from Luke's beloved tale, the familiar carols, the re-enactment of the birth in the stable that took the place of the homily. He chuckled quietly at the last thought. I wonder who's happier about no homily, them or me?\n\nAs he walked down the aisle to make sure extra Christmas offering envelopes were available next to the bulletin, he shook his head at the irony of how important the Christmas collections were to the parish budget. But our Received Wisdom still insists that the crass commercialization of Christmas is because holiday shopping is so important to merchants' bottom line.\n\nHe returned to the sacristy to vest, hoping the snow that had started falling would stop soon. They had plenty for a white Christmas and he wanted those who came to Mass to have a safe drive home.\n\nConnie\n\nCONNIE SAT in her idling car at the Starbucks drive-through window, clutching and releasing the steering wheel in frustration. Hurry up! I need to get home and apologize. And get ready for Midnight Mass. Just as she was about to leave without getting her two hot chocolates, the barista\u2014who looked to be more Connie's age than a recent high school or college graduate\u2014slid open her little window and held out the two paper cups.\n\n\"I'm sorry it took so long. It's hard to find someone to work on Christmas Eve, and I'm the only one here. I won't charge you for them. I hope you have a very merry Christmas.\" Connie took the cups without comment and the barista started sliding the window shut.\n\nCome on, Connie, it's not her fault. Quickly putting the cups in the holders, Connie turned to the window. \"Wait!\" The barista stopped, then slowly slid her window back open. \"I didn't thank you. I'm sorry. I was rude. I know it's not your fault. Thank you very much. I wish you a very merry Christmas, too.\"\n\nAs she drove back toward the street, she didn't notice a pickup in the oncoming lane spin out. She carefully nudged onto the snow-covered street, only to watch in helpless horror as the slowly spinning pickup slammed into her right front fender, knocking the car against the curb.\n\nConnie lowered her head to the steering wheel and visualized her mantra. I am not going to cry. I am not going to cry. The man driving the pickup got out and walked over to Connie. She lowered her window.\n\n\"Are you okay?\" She nodded, still too upset to talk. \"I'm really sorry. Once it started spinning I couldn't control it. It's so damn slick out there. I'll call 911. Are you hurt? I've got insurance. Shit\u2014oh, sorry\u2014I've really messed up your Christmas. I'm so sorry. I hope you can forgive me. Are you really okay?\" He said all that without seeming to take a breath.\n\n\"I'm fine, but I really have to get home. Could we just exchange information without waiting for the police?\" Just then a police car approached slowly with flashing lights. The cop carefully walked over and commented on how slick the streets were.\n\n\"I saw it happen, no one was driving too fast for the conditions, there's not much damage, was anyone injured?\" They both assured him they were fine. \"It's Christmas Eve, why don't you just exchange insurance information and go home?\" He wished them Merry Christmas and started to leave, then walked back to Connie.\n\n\"Your car looks drivable, but the tire took a pretty good hit. Better be real careful driving home.\" She thanked him and started driving off before he reached the cruiser. The fellow in the pickup had already left. After she had driven less than three blocks, there was a loud noise from the right front and the steering wheel started shaking. Oh no! She pulled to the side and got out. The right front tire had blown.\n\nShe opened the trunk, but it was empty. She didn't know where the spare was, or even if they had one. She tried her mantra again. I am not going to cry. I am not going to cry. This time it failed. Tears welled as she took out her phone to call AAA. When she found it turned off, she remembered turning it off just after she left because she was so angry at Paul. Stupid! It was getting really cold, so she got back in and called AAA.\n\nConnie realized she hadn't called Paul yet to tell him what happened. She called, not knowing whether he had left for Mass yet, but there was no answer, then it went to voice mail. \"Please forgive me, Paul. I'll be home as soon as I can get there.\" She started crying, but regained control long enough to finish. \"It was all my fault. I love you so much. Please forgive me.\" Please God, forgive me. Intending to end the call, she accidentally turned the phone off.\n\nWhen AAA showed up, she thanked the driver for being so quick. He shrugged. \"It's Christmas Eve, not many people out and about. What's the problem?\"\n\nShe got out and showed him the flat tire. He went around to the trunk and lifted the floor, revealing a small tire and tools. He replaced the blowout with the toy spare, put the flat back in the trunk, and asked her to sign the paperwork. Suspicious of the tiny tire and unnerved by the slick streets, she took 30 minutes to drive home.\n\nPaul\n\nPAUL WAITED until 8:30, tried one last time to call Connie, then quickly wrote a note and taped it to the kitchen door. Grabbing a jacket from the hall closet, he reluctantly went out to his Prius and headed for the church, not noticing that he had left his phone on the kitchen counter. Snow was starting to stick to the streets, and what was usually a half-hour drive took closer to 45 minutes.\n\nHe got to Midnight Mass late, just as Fr. Mike started reading the Gospel. He kept looking where Connie should be sitting next to him, but for the first time in almost 10 years she wasn't there. He couldn't get into the spirit of the Mass, the rote prayers and responses faded to the back of his mind. Why'd I have to lose my temper tonight? What a stupid argument, about hot chocolate on Christmas Eve!\n\nThe sound of people standing and starting to shuffle down the aisle for Communion roused Paul and raised his anxiety level. Why didn't Connie come home? Is she still angry? Where could she be? She was a good driver, he wasn't especially worried about the snowy streets, but she could be stubborn. Just like me.\n\nHe received the wafer, passed by the cup, and with a slight twinge of conscience left before the Mass ended. Sometimes he complained to Connie when others did this, but this was different. I've gotta get back to Connie and apologize.\n\nConnie\n\nWHEN CONNIE pulled into their drive, she was dismayed to see the tracks Paul left when he drove to Mass, already half-filled with fresh snow. She found his note taped to the kitchen door: SORRY I WAS SUCH A STUBBORN IDIOT. PLEASE DON'T COME TO MASS IF IT'S STILL SNOWING. GOD WILL UNDERSTAND. I LOVE YOU.\n\nShe was torn. Mass had probably already started, but she was anxious to apologize. She'd been a bigger stubborn idiot. Ignoring his plea to stay home and her unease about the weather, she set out very carefully for the church.\n\nPaul\n\nIT WAS SNOWING harder now. He was anxious to get home, and County Road 21 was almost five miles shorter than his usual route. He seldom drove that way because the road was so poorly maintained, but with everyone going so slowly tonight it would be a quicker trip. Besides, he wouldn't be going fast enough for the potholes to matter. He pulled out of the church parking lot and turned left instead of right.\n\nStill upset about their argument, he drove too fast. The black ice on the curve caught him by surprise. The anti-lock brakes chattered when he hit the pedal, but the Prius just kept skidding across the road until it came to a dry patch at the edge. It flipped, rolled twice while plunging 50 feet down the steep, snow-covered slope. Still sliding fast on its tires, it slammed into a large pine at the driver's door.\n\nWhen it rolled, the windows shattered and the air bags deployed. The collision with the tree slammed Paul's head into the door frame and he lost consciousness. When he came to, he wasn't sure how long he'd been out, but he was already cold. His left arm and leg were pinned by collapsed sheet metal, his left eye didn't seem to be working very well. Everything hurt.\n\nIt hurt the worst above his left eye. He reached up with his right hand to explore, but snatched it back at the explosion of pain when he touched his forehead. His fingers were wet with blood, he could feel blood flowing down the left side of his head. He drifted back into unconsciousness.\n\nConnie\n\nFR. MIKE WAS locking the side doors when she walked into the church. It had taken Connie almost an hour to get there; she was still rattled by the fender-bender, and the snow got heavier. \"Connie? What...why was Paul\u2014\"\n\n\"It's a long story, Father, and embarrassing. We had a silly argument...how long ago did Mass end?\"\n\n\"Paul left right after Communion, which he hardly ever does, but I figured it was probably because of the snowstorm. That was about 15 or 20 minutes ago. Would you like me to get you Communion\u2014\"\n\nNo, no, I have to find him. \"No thank you, Father. I'll come to Mass tomorrow morning. Maybe. It all depends. Right now I want to find Paul and apologize to him.\"\n\nFr. Mike blessed Connie and made the sign of the cross on her forehead. \"Be careful, Connie. The roads must be pretty slick by now.\"\n\n\"Thank you, Father, I will.\" Bless Paul, too. She went back out to her car and turned right out of the parking lot. She drove part way home, then took her foot off the gas. There were no other cars on the street. If he's as sorry and upset as I am, he's in a hurry to get home. I'll bet he took the shortcut. She slowly pulled to the edge of the street, made a U-turn, and departed for home another way, toward CR21.\n\nFr. Mike\n\nFR. MIKE LOCKED the front and side doors, then walked back to the sanctuary. He picked up the Book of the Gospels from the ambo to return it to the sacristy, but it slipped from his hands. When it hit the floor it flew open to Epiphany. The Gospel reading was verses 1 through 12 of the second chapter of Matthew. As he picked up the book and closed it, he read the last two lines: And having been warned in a dream not to return to Herod, they departed for their country by another way.\n\nHe put the book in the sacristy, removed his vestments and put on a jacket, then went out and locked the door behind him. As he walked to the rectory, something nagged at his mind. He stopped to think\u2014And having been warned in a dream not to return to Herod, they departed for their country by another way.\n\nHe shivered with a chill that had nothing to do with the cold and snow. Hurrying the last few steps to the rectory, he quickly unlocked the door, went to the phone on his desk, and dialed the sheriff's office.\n\n\u2014Mineral County sheriff, how can we be of service?\n\n\"Are you the dispatcher?\"\n\n\u2014Yes. Who is calling, please?\n\n\"Oh, sorry, this is Fr. Mike Murphy from Our Lady of Sor\u2014\"\n\n\u2014Hi, Fr. Mike! This is Donna Shepard! I was at the Family Mass this afternoon. How come you're calling on Christmas Eve?\n\n\"This might sound strange, but are deputies on patrol tonight?\"\n\n\u2014Yes, but only two. Things are usually pretty quiet on Christmas Eve, thank heav\u2014\n\n\"Would you please ask the one closest to the church to meet me at the front door? And ask him, please, to hurry. I'm afraid a parishioner might need help.\"\n\n\u2014Well, sure, Father. Can I ask\u2014\n\n\"I'll explain later, Donna. I'm pretty sure it's very important. Could I stay on line while you call him?\"\n\n\u2014Of course, Father.\n\nShe radioed both units and asked for their location. Deputy Sam Goode's response made him several miles closer to the church, so she asked him to meet Fr. Murphy on the front steps of Our Lady of Sorrows and please hurry, but no lights or siren. He replied that he was turning around and would be there in 20.\n\nAfter Fr. Mike heard both sides of the transmissions, he thanked Donna and hung up. Please, dear God, let me be wrong. He headed back to the church to wait.\n\nPaul\n\nPAUL'S MIND didn't seem to be working right. He was having trouble guiding his thoughts. Where's Connie? Why is it so cold? Why does my head hurt so bad? He started remembering the evening, a quiet dinner, arguing with Connie about not having any hot chocolate...Connie! Why didn't she come home? Did something happen to her, or maybe she's still mad...no, that can't be, not over some silly argument over not having any hot chocolate. The thoughts just tumbled forth beyond his control, racing so fast they seemed to crash into each other.\n\nThere had to be something else bothering her, something that hurts her, something really strong...what else could be bothering her, especially on Christmas Eve? What, ...oh God, it's probably babies! She can't have any more babies! I was so busy feeling sorry for myself I didn't pay enough attention to how it was affecting her.\n\nNot just thoughts, but images, too. Connie in her hospital room after the surgery. She said \"You'll never have a son or daughter, Paul. I'm so sorry.\" And I said \"That's okay, Connie, the only thing that's important is for you to get better.\" I figured that would make her feel better.\n\nBut that was a lie, it wasn't okay with me. I was very unhappy. She knew I was lying. It made her feel worse, not better. We've had something in common ever since then: We both feel sorry for me.\n\nOh God, Connie, I'm so sorry I didn't think about you in my self-pity.\n\nAnother image, almost a year later, after a wonderful candlelit dinner, a very nice Cabernet Franc, coffee and brandy in the living room after. \"Paul? You've been awfully quiet the last few days. What's troubling you?\"\n\nYes, I'd been quiet. I'd been troubled. I'd been thinking about adopting. Connie would be a wonderful mother, and I would welcome the chance to be a father. Sure, it would be better if they were our own flesh and blood, but they'd be next best. And after a while they wouldn't be next best, they'd be the best. At least that's what the storybooks said.\n\nBut I was afraid to bring it up with Connie. Wouldn't that mean that every day she'd have to face her inability to have babies? To mourn the loss of her womanhood? How can I ask her to do that? My selfish desire to be a father overcame my worries about Connie. It's obvious now that I wasn't worried about Connie's feelings, I was worried she'd say no. That's why I fixed that wonderful dinner with candles and wine, then coffee and brandy in the living room.\n\nI tried to make it her idea, not mine. \"Connie, have you thought about adopting?\" Her look told me immediately that my worry was right, she wanted no part of it.\n\n\"Adopt? N-no, I really haven't...\" She looked frightened, like she'd heard a strange noise in the night. \"Have you?\" She looked at me, terrified to hear my answer, her eyes willing me to say anything but yes.\n\nI was immediately overwhelmed with shame. I knew that I had hurt her badly. I knew it would hurt her when I planned that dinner to soften her up. When I chose the wine and brandy to seduce her into making my wants more important than her grief. So I said what she wanted to hear, and we've spent the past two years growing a little bit apart every day.\n\nWhat did we do, God, that you would punish us like this? Oh God, Connie, I love you so much! I'm so sorry!\"\n\nThe flicker of consciousness faded, and Paul's body continued to shut down non-vital functions. It's only job now was survival.\n\nConnie\n\nCONNIE DROVE slowly along CR21, barely aware of the potholes that, thanks to the snow, were mostly invisible and much less bone-jarring. As she approached the curve where Paul skidded off, she thought she saw headlights down off the other side of the road. She took her foot off the gas and touched the brakes, but the road was very slick.\n\nSlowly stopping without pulling over, she turned on the flashers and got out. Leaving the engine running and the door open, she hurried as best she could across the road and saw Paul's car bashed up against a tree. Oh dear God, let him be okay, please let him be okay!\n\nShe took the phone out of her jacket pocket and started to press 911, when a wave of dizziness made her lose her balance. She flailed her arms, flinging the phone from her hand. Her feet flew out from under her and she slid face down to the bottom. Snow forced its way under her jacket and blouse, her face bounced along the frozen ground beneath the mantle of snow.\n\nShe kept sliding fast, until her left ankle wedged in the snow under the passenger-side rear tire of Paul's car. The trapped ankle stopped her, but her leg twisted and she heard something snap. Pain shot from her foot to her hip. It was so intense her brain blocked all sensory inputs. For a few moments she lay senseless in the snow.\n\nSam\n\nMINERAL COUNTY Sheriff's Deputy Sam Goode turned left in the all-wheel drive SUV cruiser. I wonder what a priest wants if there's no emergency? Oh well, it might be more interesting than this. There wasn't much excitement this Christmas Eve. He went around the block and headed for the church.\n\nThe priest was waiting outside by the front door, even though the temperature was down to 10\u00b0 and still falling. He described his concern and asked Sam to please hurry. Sam thought the story sounded pretty unlikely, but he looked forward to driving CR21 back to the other side of town. At least it'll be more interesting.",
        "He radioed dispatch that he was leaving Our Lady of Sorrows. \"I'll drive back to town on CR21, then go by the guy's house. Got his address?\" Donna got back to him a few minutes later with Paul and Connie's address.\n\nConnie\n\nCONNIE ROUSED and tried to stand on her right leg, but collapsed from the pain. Even though the windows were gone, she hadn't heard a sound from Paul since she slammed into the car. She was frightened for him and in pain, but she didn't need her mantra. I need to be strong for Paul, not to cry.\n\nHer light jacket was poor protection against the cold. It made things worse, in fact, because it was getting wet as the snow inside it began to melt. Gritting her teeth against the pain, she managed to get up on her right knee and open the door. but could only open it a few inches; she was in the way and couldn't move aside. Don't panic! There's gotta be a way.\n\nShe lay back face-down in the snow planning to swing the door open over her, but the door swung open by itself. That was good, but she didn't have the strength to get back up. She just lay there worn out, racked with pain and shivering uncontrollably.\n\nAfter a few minutes rest, she managed to push herself up on her right knee and turn toward the car. Trying to ignore the worst pain she'd ever felt, she put her palms on the door sill and levered herself up. Using her right leg, she pushed herself into the car. She was exhausted, but her love for Paul gave her the strength to get up on her right knee again. Still more pain, but she was next to him. She could touch him, but there was no way she could reach the door to close it.\n\nThough her pain was overwhelming, she refused to give in. Enough light from the headlights was scattered by the snow that she could see Paul's bloody head and face, an ugly wound over his left eye. His left arm and leg were trapped by some metal. He was unconscious, but breathing. Talk to him. Tell him how much you love him. Keep him alive.\n\nShe reached down and took his cold hand. \"I found you Paul, I knew you'd take the shortcut. This was all my fault. I had to go on and on about that damn hot chocolate.\" She stopped when a surge of pain took her breath away, but had to keep talking. \"I can't believe how stubborn and stupid I was. It wasn't just the hot chocolate, of course.\" If only I could stop shivering. It's time to tell him. This may be my last chance.\n\nSam\n\nSAM SAW a car in the road. Turning on his overheads, he coasted down and parked behind the Camry. He noticed headlights off the other side as he radioed the license number. Walking over, he confirmed the car was empty and closed the door. I'll bet this is the wife's car, and she went down over there.\n\nTaking the big flashlight from the cruiser, he walked to the roadside above the wreck. He saw where Connie had fallen and slid, then crawled to the passenger door, which was open. He radioed what he found and called for two ambulances and a wrecker. This is going to be tough. \"Better add the rescue crew, these folks are down a pretty steep slope and it's slicker than snot.\"\n\nConnie\n\nKEEP TALKING, keep talking, maybe he can hear me, maybe it will help him live. \"Oh God, I'm so sorry, Paul. It was so hard for me to accept not being able to give you children. You'd be such a good father, you want so bad to be a father. You deserve children.\" The shivering was slowing a bit, but she was having trouble thinking of what to say. Be strong, for God's sake! He needs you!\n\n\"That night when you asked me if I'd thought about adopting, my heart stopped. All I could think about was how I'd failed you, how I couldn't give you what you wanted more than anything else, how adopting someone else's child would make my failure permanent. When I said no and asked if you had thought of it, I was more afraid than I ever had been in my life. When you said no, I almost fainted from joy.\n\n\"But as time went by, I had to admit that you had said \"No\" for me. You were putting my selfish wants ahead of your natural needs. The guilt got to the point that I finally decided that if I really loved you so much, I should leave you so you could find a woman who could give you children.\n\n\"But I just couldn't...couldn't...I still can't imagine living without you. I couldn't do it.\" She was almost wailing, had to stop and rest. Come on! I can do this!\n\n\"I was too selfish. I love you so much, Paul, I wish so desperately that you could have the family you deserve. But I didn't love you enough to set you free. I promise that now I'll do whatever it takes to make you happy, even if that means giving you up.\" Despite her resolve, the tears finally came. But I'm afraid all I can do is die here with you. Goodbye, my love.\n\nPaul\n\nHE WAS vaguely aware that someone was talking, but his brain wasn't working very well, he didn't recognize the voice or make out the words. All he wanted to do was sleep. The pain seemed to be fading. He wished he could see Connie to apologize, to tell her that he loved her, to say goodbye.\n\nSam\n\nSAM LOOKED at his watch and made a decision. Going back to the cruiser, he carefully maneuvered it to the roadside above the Prius, then crept down the slope in low gear low range. It slid the last 10 feet or so. Looking back up to the road, he sighed. Shit. I sure as hell can't drive back up.\n\nHe walked over to the Prius and leaned into the car. Jesus! But they're still alive. At least I hope he's still alive. A woman was leaning against the seat, her head down on her chest, her left hand gripping the hand of the driver. \"Ma'am, can you hear me?\" She looked up, but her eyes were unfocused and she didn't seem aware that he was there.\n\nThe driver was unconscious, blood soaking his coat, his face bloody, a bad wound on his forehead. Gotta get her into the cruiser first. \"I'm going to lift you out of here, ma'am, and get you warm.\" He lifted and tried to drag her backwards, but she screamed in pain.\n\n\"Stop, stop, my leg! Who are you? Why did you hurt me?\"\n\nOh shit! \"Sheriff's deputy Sam Goode, ma'am. I'm sorry I hurt you, but I've got to get you out of this car to someplace warm. Your left leg, is it?\"\n\n\"Yes, I think it's broken. Happened when I smashed into the car.\" He must help Paul first! \"But my husband is much more...seriously injured! You've got to help him first!\" She tried to raise her voice, but it came out a croak.\n\n\"Ma'am, I have to get you out of here before I can help him. The car is up against that tree and I can't get to him as long as you're in here. Can you work with me?\" He thought he could probably reach the man from the back seat, but he had to get her warm before her hypothermia got worse.\n\nConnie thought for a bit, then nodded. She was speaking more slowly now. \"Maybe with your help I could turn...over on my back. That would make it be easier for you to...to get me out of the car. But please don't forget, I can't...do anything with my left leg.\"\n\n\"Now help me turn over. To the...right, my left leg hurts so bad.\" She took a deep breath. \"Put your hands...on my hips.\"\n\nFeeling awkward about it, he put his hands on her hips. I sure hope this is the right thing to do. When she said \"Okay\" he twisted her body to the right while she pushed against the seat back. She cried out twice in pain, but wound up on her back. She took a few deep breaths. \"Now what?\"\n\nHe remembered that accident victims did better if they believed they were being helped by someone who cared about them. \"Why don't you tell me your name? You look too young for me to keep calling you ma'am.\"\n\nShe almost managed a smile. \"It's Connie. Connie Hansen.\"\n\n\"I'm Sam Goode, Connie, and we're going to take care of both of you.\"\n\n\"Thank you, Sam\" She sounded a fraction less stressed.\n\n\"Wait one, I'll be right back.\" He went over to the cruiser and opened the door, then came back to the Prius. \"I'm going to carry you over to the cruiser and put you in the driver's seat. I'm afraid it'll hurt, but we've got to get you warm.\" He put one arm under her and the other under the small of her back and lifted. She bit the collar of her jacket trying not to scream.\n\nIt didn't go smoothly and obviously hurt a lot, but he managed to get her in place behind the wheel. His hands and coat were wet, though, and she had almost stopped shivering. He knew she had to get out of those wet clothes even though he had turned the heater on max. He closed the door, went around and got in the passenger seat.\n\n\"Connie, you're going to have to take off those wet clothes. You're awfully close to hypothermia.\" She was already in mild hypothermia and worsening to moderate, but she didn't need to know that.\n\n\"Are you sure? The heater feels...pretty good.\" Her voice was dull.\n\n\"Yes, you'll keep losing body heat in those wet clothes. Please, Connie, take them off.\"\n\nShe was able to unzip her jacket, but pain and cold hands made her unable to take it off. \"I'm afraid you're going to have to help me.\" He took off her jacket as gently as he could, but he could tell it still hurt. She tried to unbutton her blouse, but her fingers wouldn't work properly. \"I'm afraid you're going to have to do it all.\" She sank back in defeat.\n\nThere was no way he could get her out of her clothes, especially her wet jeans, without causing great pain. He got the trauma shears from the first-responder bag\u2014this isn't going to be fun for either one of us\u2014and cut the rest of her clothing off. Tugging them out from under her caused some pain, but it couldn't be helped; she had to get dry. He wrapped her in a blanket from the emergency kit and made sure the heater vents were aimed at her.\n\n\"When I leave, don't keep the blanket wrapped around you. Hold it out to funnel the warm air to you. Trust me, Connie, it'll get you warm faster.\"\n\nShe slowly nodded again. \"Okay.\" She opened the blankets without waiting for him to leave. He's already seen everything there is to see. The heat felt so good. \"Now please save Paul.\"\n\nHe took the first-responder bag and the last two blankets over to the Prius. Before getting in, he radioed dispatch. \"Bad situation here. Both victims are injured, one seriously, both hypothermic. The paramedics won't be able to bring the victims up to the ambulance, the slope's too steep and slick. They'll have to use the rescue litter and winch it back up to the road. Two trips.\" Donna assured him that the rescue truck was with the ambulance, ETA less than 10.\n\nHe got in the Prius and closed the door. \"Can you hear me, sir?\" No response. It was obvious he couldn't get the man out until the car was moved away from the tree. He propped the flashlight on the dash and examined the forehead wound. It was still seeping blood, the whole area felt a bit spongy. Even though the man was unconscious, he groaned as Sam probed around the wound. He applied a field dressing as gently as he could, all the while speaking soothing words.\n\nAfter treating as best he could, he tucked both blankets around him. At least his clothes are mostly dry. He wondered about trying to start the car and running the heater, but smelled gas. He wasn't familiar enough with the Prius to risk fire, so he shut down the ignition but left the headlights on. They were starting to dim, but had lasted long enough. As an afterthought, he took off his heavy jacket and added it to the cocoon of blankets.\n\nJust as he was about to return to go back and check on the woman, he saw the overheads of the ambulances and rescue truck reflecting off the snow-covered trees. Thank God! I hope they're not too late. He got out to wait for the medics.\n\nAlmost immediately after the ambulance stopped, a paramedic skidded down to the wreck with her bag. Sam didn't recognize her. She much be new. Kinda pretty. He turned control over to her and gave a hurried briefing. \"Woman's warming up in the cruiser, looks like broken left tib-fib, some shock, mild-to-moderate hypothermia. Man is pinned behind the wheel, unconscious, serious head injury, blood loss, also hypothermic.\"\n\nShe quickly got in the Prius and opened her bag. After checking the head wound\u2014\"Nice job with the field dressing\"\u2014she checked Paul's vitals, then got on her radio. She repeated Sam's briefing, then her voice turned urgent. \"I need somebody else down here right now! We've got a head injury with significant blood loss, BP 80 over 55, temp 97.1, pulse 125 and fluttering. We need to get him up there soonest so we can start IVing Ringer's and warm him up.\"\n\nSam started to say something about winching up the rescue litter, but she was way ahead of him. \"Tell the rescue crew get the litter ready and winch it down. The hypothermic woman with broken tib-fib is warming up in the Sheriff's cruiser. She'll go last.\"\n\nSam was reluctant to interrupt, but figured he ought to complete the picture.\"Ummm, I had to cut her clothes off, they were wet from melting snow.\" The paramedic looked at him, then grinned.\n\n\"Tough job. Didn't perv on her, did you?\" When he frowned, she backpedaled. \"Of course not, we're all professionals.\" Before Sam could respond, the second medic arrived. The first stayed in charge.\n\n\"Okay, first we get this guy out of the car. The three of us oughta be able to horse the front end away from the tree.\" It took a bit of grunting and heaving, but they managed to slide it far enough away to open the door. The door was jammed shut, but Sam got the tire iron from the cruiser and managed to pry the door open, then clear the panel that was pinning Paul's arm and leg.\n\nThe rescue litter made two trips up and down the slope. Both victims were wrapped in blankets and strapped in. Each was carried to an ambulance where they were stabilized. The wrecker arrived just as the second ambulance left for the ER. After rigging for tow, the driver dragged the cruiser up backwards carrying Sam and the medics. Sam waited to make sure the Prius was secured to the wrecker, then left for the ER to thank the medics and check on the victims.\n\nAt the ER\n\nSAM SAW the paramedic standing by the nurses' station he as soon as entered the ER. She saw him, smiled sheepishly, and walked over.\n\n\"I'm really sorry about the perv crack. We see so much bad stuff we use a really shitty sense of humor as a shield.\" She had trouble keeping eye contact with him.\n\n\"Yeah, I get it, so do we. I just wasn't expecting it\u2014\"\n\n\"Why, because I don't belong to your tribe? Or is it because I'm a girl?\" She held eye contact for a moment, almost challenging, then turned and walked out of the ER. Damn! I'd like to see that without the baggy uniform.\n\nHe shook his head and went over to the nurses' station to ask about the accident victims. The charge nurse walked up a couple a minute later. They knew each other from too many ER get-togethers like this.\n\n\"How're they doing?\"\n\nShe leafed through a few papers on a clipboard and replied without looking up. \"Still alive.\" She managed a rueful smile. Sam recognized more self-defensive humor.\n\n\"Mr. Hansen has a severe skull fracture. He's lost a great deal of blood, received two units, probably get at least one more; his left humerus is broken, left shoulder dislocated, he's mildly hypothermic. An orthopod and neurosurgeon are on their way, they oughta be scrubbed up and ready by the time he's prepped.\" She referred back to the clipboard.\n\n\"X-rays\u2014we used the portable\u2014don't' show whether there's any bleeding on the brain. Need an MRI for that.\" She checked more pages. \"The radiologist raised a red flag because the blunt trauma broke loose a free-floating section of skull. They'll deal with his head before the arm and shoulder.\n\n\"An official condition hasn't been released, I'd call it critical. Depends on what the neurosurgeon finds.\" She looked up. \"That's not for public consumption, of course.\"\n\nSam nodded. \"Of course.\" He knew that, and she knew he knew that, but she was a professional, too, like the paramedic. Sam started to ask about Connie, but she beat him to it, talking without looking up from the clipboard.\n\n\"Mrs. Hansen is still in X-ray. Leg's obviously broken, her face is pretty well beat up from the face plant.\" She looked up at him without raising her head and was relieved not to see any disapproval of her glib description of the injury. \"She's only mildly hypothermic, thanks to your cop-car-heater therapy.\" She gave him a sidelong look. \"Probably helped your temp\u2014\"\n\n\"We're all professionals, I'm told. Never mind my temperature.\" He grinned briefly to let her know it was okay and she grinned back. He returned to serious mode.\n\n\"She was in a lot of pain. Did you give her anything for it?\"\n\n\"Yeah, but that's one tough lady. That leg had to be killing her.\"\n\nSam nodded. \"It was. She's a damn sight tougher than me.\"\n\n\"I'm pretty sure her leg will need surgery, too. The orthopod's kids might have to deal with a pretty cranky Santa this morning.\" She tidied the clipboard.\n\nHe chuckled, thanked her, and headed for the doors. He wasn't looking forward to the paperwork at the end of his shift. What the hell\u2014gives me something to do. It's not like I've got anything else to do on Christmas Day.\n\n<center>\u2014 \u00a7\u00a7 \u2014</center>\n\nEpilogue\n\nIT TOOK two months for their bodies and spirits to recover. They repeated what they had thought or said during those painful, freezing hours, reassuring each other of their love. Now they would face the future with one mind and spirit.\n\nThey chose not to adopt right away. Each came up with the idea of trying foster parenting first. Everyone told them how hard it would be, how badly they could be hurt, the risks they were taking. There seemed to be no end of tales of disappointment, frustration, theft, even violence, heartbreak when children that foster parents had bonded with were taken away. Still, they felt called to do it.\n\nTheir first foster child was the five-month-old son of a drug addicted mother. Forty years earlier, Ethan would have been called a \"crack baby,\" the term soon discredited by more valid and comprehensive studies.\n\nWhich is not to say Ethan was an easy baby. Neither got a good night's sleep the first two weeks. Connie took a leave of absence from the accountancy where she'd been a CPA for the past eight years so she could devote full time to the struggling baby they brought into their lives.\n\nEthan's world had been unpleasant and unloving his whole short life, but Connie's unstinting attention and love finally broke through. After four months of loving care, he was sleeping through the night, the hours of crying during the day replaced with baby games and peaceful naps. His face, once contorted with pain and anger, now more often than not wore a smile.\n\nSocial Services followed Ethan's development, of course. One day the case worker marveled at how much he had changed, then spent several hours asking detailed questions about how they had dealt with Ethan, what their typical days (and nights) were like. After the interview, Connie and Paul feared this baby boy they had come to love so much would soon be taken away.\n\nA few days later, the case worker called to tell them that Ethan's mother had been found dead of an overdose. No one had any idea who the father was. Now they were convinced they were about to lose their baby.\n\nAfter Mass that Sunday, they expressed their sorrow to Fr. Mike's successor, Fr. Alberto Banuelos. He didn't react at all the way they expected. He thought for a minute instead of simply expressing sympathy or offering to pray with them, then suggestion a solution. \"Why don't you adopt him? You've loved that baby to happiness. I can't think of better parents for him. I'd be delighted to tell anyone that, in writing if that would help.\"",
        "Because they had chosen foster parenting over adoption, adopting Ethan hadn't occurred to them, but thanks Connie's growing bond of motherhood and Paul's love for both her and Ethan, the notion of adopting Ethan held no terrors. Early the following Monday morning, they got an appointment with the case worker to discuss Ethan's case.\n\nThe case worker was taken aback by their proposal to adopt. She had seen similar situations in the past end badly for everyone involved, and didn't think it was wise. She expressed her reservations, ending with what she assumed would be the telling factor. \"And the payments from the state would stop, of course.\"\n\nAt first they couldn't believe that this woman thought they were mercenaries, caring for Ethan just for the stipend. Starting the very first month, they had deposited the checks in a savings account just for Ethan, thinking of it vaguely as a college fund. Their disbelief soon turned to outrage.\n\nThe case worker watched the emotions play across their faces, and wondered if she had made a mistake. \"Well, um, I mean, you know...the added expense of a child, especially one with such behavioral problems\u2014\"\n\n\"Shut up.\" Connie's voice was menacingly calm.\n\n<center>\u2014 \u00a7 \u2014</center>\n\nPAUL WAS startled. He'd never heard her speak that way to anyone. She continued talking quietly in a monotone.\n\n\"You have no idea what Ethan means to us. I could try to explain it to you, but I shouldn't have to. Besides, I'm not sure you'd understand. Your job is to do what is best for that baby, and we're what's best for Ethan. I know it, Paul knows it, our pastor knows it, you should know it. Hell, I think Ethan knows it, and he isn't even a year old yet.\"\n\nShe took a deep breath, and rushed on before the woman could respond. \"Now, let's try again. Paul and I love Ethan as much as if he were our own son. We love him so much, in fact, we want him to be our own son. We want to adopt him. Would you please do your job and tell us how to proceed?\"\n\nRinging endorsements came from Fr. Alberto, their pediatrician, even from Sheriff (no longer just Deputy) Sam Goode and his wife. In less time than usual, the paperwork and legal steps were completed. And so it came to pass, Ethan became Ethan Hansen, and happiness reigned in the Hansen home.\n\nAlthough they were happy that Ethan was their son, they were still upset about the case worker who so badly misjudged them. They wrote a letter to Social Services explaining why they were no longer interested in being foster parents.\n\nThe faceless bureaucrats who ran Social Services responded in their usual enlightened fashion: unable to fire the case worker because of her union contract, they reassigned her to a distant office where she spent her days compiling detailed monthly reports that no one ever read. They didn't try to persuade Connie and Paul to resume foster parenting.\n\nThat all changed with a phone call a week after Ethan's third birthday.\n\n\u2014Mrs. Hansen, this is Roger Miller, the new Regional Manager of Social Services. First, please accept my apologies for the insensitive treatment you have received. That most certainly did not reflect how grateful we are for the selfless dedication of each and every one our foster parent volunteers.\n\n\"Thank you, Mr. Miller. We were pleased to be able to help, and Ethan is a greater reward than we ever could have imagined.\" Now, what do you want?\n\n\u2014We're delighted your experience has been so good, and wish only that all our cases would turn out so well.\n\nHe waited for her to respond without giving a reason for his call. I've played this game before. She fell back on her experience in tax audit negotiations with the IRS: let silence prod him to get to the point. It worked.\n\n\u2014You're probably wondering why I'm calling.\n\nConnie still didn't respond. No shit, Sherlock.\n\nHe paused again, but briefly.\n\n\u2014Would it be possible for you and Mr. Hansen to come to our office sometime this week? There's a matter I\u2014well, some of the staff and I\u2014would like to discuss with you. It really isn't something we want to discuss over the telephone.\n\n\"I'm not sure, I'll have to speak with my husband first. I'm sure you understand, our last experience with your office wasn't the most pleasant. That's an understatement.\n\n\u2014I quite understand. Please call me and let me know your decision.\n\nShe was curious what they wanted to talk about and so was Paul, so she did call back. Two days later, they drove to the Social Services building. The receptionist ushered them almost immediately to a small conference room. Miller, another man, and a woman stood up.\n\nMiller greeted them and introduced the others: Sharon Fleming, a psychiatrist, and Glenn Williams, the training manager. They all shook hands and sat down. Miller had picked up on Connie's negotiation experience during their phone call and got right to the point.\n\n\"We have a child in desperate need of the wonderful talents you showed with Ethan. After three failed placements with her, we're running out of options. We\u2014\"\n\nConnie couldn't contain herself. \"What? You placed a baby with three different families?\"\n\n\"No, Rose isn't a baby, she's seven years old, almost eight. She was sexually abused by a succession of her mother's boyfriends for over three years. She doesn't trust anyone can't stand to be touched, and doesn't speak.\"\n\n<center>\u2014 \u00a7 \u2014</center>\n\nHE TURNED to Sharon, cuing her to describe the situation. \"None of the other families could deal with Rose, even though we did our best to explain what they could expect. The longest placement was four months. The constant change has exacerbated Rose's defense mechanisms. She's upset by most physical contact, especially from men. She eats reluctantly but only sparingly, and hardly ever speaks.\n\n\"She exhibits many of the behaviors of autism, but more likely she's suffering from a form of PTSD. Several therapists, including me, have tried to help her, but she doesn't co\u00f6perate.\" Sharon opened the laptop in front of her.\n\n\"We shot several videos of her interaction with two of the foster families during placement, her response to therapy sessions, and just sitting alone. With your permission, I'd like to get us all some coffee or tea or soft drinks, then watch about 20 minutes of edited video.\"\n\nConnie\u2014What, no popcorn?\u2014and Paul looked at each other and nodded. Paul responded for them. \"Sure, that would be fine.\" Glenn asked what they wanted, then came back shortly with a tray of drinks and pastries. Sharon started the video, which appeared on a large screen at the end of the room.\n\nIt was unsettling, to say the least. There was no violence, no shouting or crying, just scene after scene of a solemn little girl seemingly unaware of the people who talked with her, offered her gifts, or set food before her. She flinched whenever a woman touched her, although she would finally permit some contact, but curled into a fetal position whenever a man would even come near her. Except for the occasional sound of adult voices, it may as well have been a silent movie.\n\nPaul spoke first. \"What makes you think we could accomplish anything if all these others, even the professionals, have failed? We have no training, we're not miracle workers.\"\n\nGlenn joined the conversation. \"Your experience with Ethan has become the core of one of our major training modules. Your identities, of course, including Ethan's, aren't revealed, but the progression from an almost-permanently anxious and unhappy baby to an apparently normal infant boy is clearly illustrated.\n\n\"The training exercises include examples of how you both, but especially Connie, used soothing words, loving care, and patience to bring him back to being a happy baby. Especially the patience. That had to have been the hardest\u2014\"\n\n\"No, it wasn't hard.\" Connie was adamant. \"Love is patient, love is kind. We didn't have any alternative, really. Ethan was hurting, so we did everything we could think of to help. We'd wait, then do it again, and just kept at it until it got better. I'm not saying it was easy, just...it was the right thing to do because we love him.\"\n\nTheir heart had gone out to the solemn little girl they saw in the video. When they said they were inclined to accept the responsibility, Sharon said Rose would need significant therapy in addition to their love and care, but assured them the state would pay the entire cost. She started to add \"in addition to\u2014\" but Roger quickly interrupted to avoid any repeat of the earlier faux pas about foster parent stipends.\n\nSharon took them to see Rose in a nursery room filled with bright colors, child-sized furniture, toys and games galore. A nature show played quietly on a television in one corner, but Rose was sitting in a chair facing a wall that bore only a poster of a circus clown. She didn't acknowledge their presence.\n\nSharon spoke to her gently. \"Hello, Rose. You're looking well. These people would like to meet you.\" Rose didn't respond. Sharon asked Connie to face Rose. \"This is Mrs. Hansen. She's the mother of a little boy named Ethan.\" She gestured for Paul to do the same. \"And this is Mr. Hansen, Mrs. Hansen's husband. They both love their son very much\" Again, no reaction from Rose.\n\nDespite all the discouraging signs, Connie and Paul again felt a calling and agreed to take Rose. It would take a couple of days to get her ready, including several sessions with Sharon to prepare her for yet another change and set the stage for ongoing therapy sessions. When they went to pick Rose up two days later, Sharon led her out to their car carrying a suitcase. Rose was wearing a small backpack and carrying a doll.\n\nWhen she was strapped into the car seat, Connie turned around to speak to Rose. \"We're so happy you're coming to our house for a while, Rose. You'll have your own room and books to read and a television, even a computer if you want to use it.\" The response was the silence Connie and Paul would soon give anything to be broken by Rose's voice.\n\n<center>\u2014 \u00a7 \u2014</center>\n\nTHEY FELT like they were lost in a foreign land and didn't know the language. Rose stayed in her room except to go to the bathroom. She never spoke, never smiled, never gave any indication she was aware of their presence. As Sharon had recommended, for the first two weeks Connie brought Rose's meals to her room, then left so Rose could decide what to eat (or not eat) without anyone pressuring her.\n\nThe first week, she ate bits and pieces of the food, but always drank the milk and occasionally ate the dessert if it was sliced apples or bananas. She was getting enough nourishment to keep Connie and Paul from worrying too much.\n\nDressing, undressing, bathing, and bedtime were even more challenging. The first night, following Sharon's advice, Connie showed Rose where her clothes were, where the bathroom was, how the bathtub worked, her towels, toothbrush, and toothpaste. They returned to Rose's room, where Connie laid out a pair of pajamas, then said goodnight, left, and closed the door.\n\nConnie checked three times to see if Rose was okay, but no matter how quietly she opened the door the hall light would reflect off her wide-open eyes and Connie would quietly close the door. In the morning, Connie found the bed made, the pajamas and clothes Rose had worn neatly folded by the pillow.\n\nMonday, Wednesday, and Friday mornings Connie drove Rose to the Social Service building for her therapy sessions. After each session, Sharon would give Rose a box of juice and take her to the playroom, where Rose would sit facing the wall with the clown poster. Connie and Sharon would then share a cup of coffee and talk about how things were going.\n\nIt didn't fool Connie. She knew the coffee klatches with Sharon were thinly disguised therapy sessions, but didn't mind. She welcomed them, actually. Rose's continued silence was unnerving, and Connie was beginning to doubt whether she and Paul could ever help Rose.\n\nToward the end of the second week, Rose was eating almost everything. On Friday, she brought the dinner tray back to the kitchen and returned to her room without speaking. Connie wept for joy. Paul held her, stroked her hair, then murmured \"Maybe love does conquer all.\"\n\nFor the next couple of weeks, Rose continued bringing her trays, soon from all three meals, to the kitchen. Up to this point, Connie had been following their bedtime routine. Encouraged by what she considered a breakthrough with the trays, Connie waited one evening until she saw Rose's bedroom light go off, then opened the door. Rose was getting into bed and looked startled when Connie came in.\n\n\"I wondered if you'd like me to read you a story before you go to sleep.\" Rose hesitated, then nodded and got under the covers. Connie brought over several books. Rose pointed to one, then Connie put the others back and read until a few minutes after Rose closed her eyes. She tucked Rose in, kissed her gently on the forehead, went out into the kitchen and cried more happy tears.\n\nAs they were getting ready for bed, Paul took Connie's hands. \"Maybe it's time we invited Rose to eat with us, maybe tomorrow night at dinner.\" They made gentle love that night, then got the best night's sleep they had since Rose arrived.\n\nThe next day, after Paul came home from work, Connie went into Rose's room and asked her if she'd like to eat dinner with them. Rose looked frightened and shook her head, slowly at first, then faster and faster. Finally, she walked around the bed, sat on the edge, and stared at the blank wall. Connie was devastated. It took Paul almost an hour to calm her.\n\n\"Why did you make me invite her to eat with us? It ruined everything! We rushed it, just like Sharon warned me about. Oh God, Paul, what have we done? We're never going to help her, we're going to be Rose's fourth failure.\"\n\nAfter a flood of bitter tears, she hugged Paul. \"I'm sorry I said that, Paul, you didn't make me do it. It wasn't your fault. Neither one of us knows what we're doing.\" The tears continued, though less devastating, but no matter how soothingly Paul spoke she cried herself to sleep.\n\nThe help they needed came from a source they should have anticipated, but didn't. Ethan had been curious about Rose since she first showed up, but when she didn't respond to his talking and jerked away from his touch, he had started avoiding her. The next morning, he heard Connie crying again, and listened as she repeated her fears to Paul at the breakfast table. She was so distraught during the day she didn't notice that Ethan wasn't underfoot, but would come into the kitchen once in a while for a cookie or glass of juice.\n\nConnie's gloom faded a bit when Rose brought her tray into the kitchen and went back to her room. Paul put Ethan to bed, but Connie didn't try to read to Rose or tuck her in. They went into the living room with cups of tea and started reading, he in his recliner and she on the couch. She wasn't really reading, just staring at her book and trying not to think about failing Rose. A few minutes later, her world came into the light.\n\nCarrying one of his books, Ethan led Rose by the hand into the living room, both in their jammies. He got up on the couch, then asked her to sit beside him. \"I asked Rose to read my best book to me. She said she would because she likes me, and I told her I like her, too.\"\n\nBoth adults held their breath when he snuggled up to her so he could see the pictures, but Rose looked at him...and smiled. The parents\u2014for suddenly they dared to feel like parents\u2014tried not to gasp or cry as she began reading Goodnight Moon as if it were the most natural thing in the world.\n\nShe had trouble with a few of the words, but Ethan helped; he had heard his best book at least a hundred times and pretty much memorized it. By the time she finished, Ethan's eyes were closed and he had sagged against her. She looked directly at Connie. \"I think he's asleep.\" These were the first words Connie and Paul heard her speak. She closed the book, didn't shy away when Connie picked up Ethan, and silently trailed after as Connie carried Ethan toward their rooms.\n\nRose didn't suddenly turn into a normal little girl, of course. For the next year and a half it was usually one step forward and one step back, but once in a while it was two steps forward before the step back. Sharon continued the therapy sessions, but had started to encourage Connie during their therapy sessions both pretended were just chit-chat.\n\nMuch of the progress was due to Ethan. Rose would carry on long conversations with him, but still spoke only a few occasional word or two to the adults. Two or three times a week, Ethan and Rose would join Connie and Paul in the living room, Rose would read a book to him, then Connie would put them to bed.\n\nOne evening after several months of this, the two children came into the living room as usual, but Ethan gave the book to Paul. \"Rose wants you to read to her.\" He may as well have said \"Rose has been accepted to Harvard.\" He went back and sat next to Rose. Paul read the book, trying to act as if it were the sort of thing he did all the time.\n\nConnie, still thunderstruck by this development, put them to bed as usual. Then she and Paul had a glass of wine and spent the next hour trying to understand what had just happened and wondering how to proceed. Ethan told them much later that it was his idea, he had to ask Rose four times before she agreed to let Paul read to her. She finally agreed when Ethan told her that Paul was unhappy because he was the only one who didn't get to read to her.\n\nSharon was astonished when Connie told her what had happened. She quizzed Connie for almost an hour and took copious notes. The following week she told Connie that, with her and Paul's permission, she wanted to write a paper on the remarkable therapeutic effect of Ethan's interventions.\n\nAs with the training program, none of the principals would be identified. Connie and Paul insisted that neither Ethan nor Rose be interviewed. Sharon agreed, and said she was going to wait a bit to see how things developed before submitting the paper. Yes, they could read it before she submitted it; they could suggest changes, but Sharon didn't have to follow them. After a lengthy discussion, Connie and Paul agreed, with the proviso that they could rescind permission anytime before it was submitted.\n\nAs months passed, Ethan became their unofficial advocate to Rose, especially for Paul. Gradually she grew more comfortable around him, thanks to Ethan's nonstop stories of how kind and smart Paul was. The culmination of his efforts came one evening over a year and a half after Rose joined the Hansen household. \n\nEthan and Rose walked into the living room, Rose carrying one of her books. As usual, Ethan got up on the couch and Rose walked up to Paul in his recliner. \"Would you please read this to me, Paul?\" When he agreed, she handed him the book, but instead of walking back to sit next to Ethan, she crawled up into Paul's lap. \"Is this okay?\"\n\nPaul resisted a near-overwhelming urge to hug her, and managed to say \"Sure\" without squeaking. Connie covered her mouth with her hand, her eyes filled with tears. Ethan grinned. Paul started reading. When he finished and closed the book, Rose hugged him, said \"Thank you,\" and kissed him on the cheek.\n\nHe look to Connie for guidance, but she shrugged and mouthed \"I don't know.\"\n\nPaul finally held his open arms out to Rose without touching her. She smiled and snuggled up against him in as tight a hug as she could squeeze. Paul hugged her back, very gently. \"I love you, Rose.\" Despite his best efforts, his voice broke.\n\n\"I love you too, Paul. And I love Ethan, and I love Connie. Thank you.\" Connie, Paul, and Rose shed tears of joy. Ethan grinned.\n\nSharon started winding down the therapy sessions. She decided not to submit the journal article, because she didn't want to risk violating the Hansens' privacy. On the second anniversary of Rose coming home with Connie, they adopted Rose and the Hansen family was complete.",
        "<center>\u2014 \u00a7 \u2014</center>\n\nChristmas Eve 20 years later\n\nPAUL AND CONNIE sat on the couch before the fireplace with their cups of hot chocolate. There'd been quite a turnout again at Midnight Mass. Father Mike was right, changing the start time to 7:30 was a wise move. It was good that he lived long enough to see the results.\n\nConnie never went back to work. Ethan got his AS degree in Automotive Technology from the local junior college and had a good job at the local GMC dealer. Rose finished the RN program at the same JC, then won a scholarship to go on for her BS in Nursing at the nearby state college. She was an ER nurse at the same hospital where Paul and Connie were patched up, and rumor had it that soon she might be promoted to Charge Nurse.\n\nBoth were looking forward to a wonderful Christmas Day. The kids and grandkids (two for Rose, one for Ethan) were coming for a mid-day Christmas dinner. Pies were baked, Santa's presents for the grandkids were wrapped and tucked away\u2014no assembly required, thanks be to God. Connie put her cup down and lifted Paul's left arm to snuggle up; she saw him wince. \"Shoulder bothering you tonight?\"\n\n\"A little. Nothing hot chocolate and a little loving won't cure.\" Connie tried to wiggle even closer, then sighed.\n\n\"Sometimes I see God's grace when I look at Ethan and Rose.\"\n\n\"Me too. Who knew that terrible Christmas Eve would bring us such blessings?\"\n\nThey finished their hot chocolate, turned off the Christmas lights, and went upstairs to give each other an early Christmas present.\n\n<center>\u2014 30 \u2014</center>"
    ],
    "authorname": "A_Bierce",
    "tags": [
        "christmas eve",
        "hot chocolate",
        "hysterectomy",
        "midnight mass",
        "miscarriage",
        "no sex",
        "snowy streets",
        "starbucks",
        "stubborn"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/hot-chocolate-for-christmas-eve"
}