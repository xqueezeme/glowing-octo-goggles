{
    "title": "Sweet Feet",
    "pages": [
        "Chapter 1\n\nThe First Meeting\n\nI have had to admit for many years now, at least to myself, that I have a mild form of foot fetishism. I say it's only mild because although a woman's feet are often the first thing I notice and I am certainly very strongly attracted and aroused by them and what they can do for me, I am also turned-on by the other, more normal female physical attributes. But, although I can have a normal relationship with a woman without having to include her feet in our sexual activity, they do feature strongly in any truly memorable love-making.\n\nThe emotional connections I have with feet obviously go back to sometime around my first actual memory, which is in fact of my Mother playing 'This little Piggy' with my toes. Then, when I was still relatively young, something must have happened that strongly reinforced that early and perhaps latent tendency. From what I have since read on the subject it seems to me that feet became not only linked with emotional well-being but also became an integral part of my overall sexuality, that feet, love and sex somehow became inter-linked.\n\nAfter I left school I got a job in a leading department store and having spent time in a number of different areas became a salesman in the men's shoe section. I worked hard and did well but quite soon found that my interest was being drawn more and more to women's footwear - which I'm sure I rationalised at the time as being because of the greater opportunity for career advancement. I was attending night classes in fashion and modern design and let people know of my preference and, after some time, I applied for and was successful in getting a job as an assistant buyer in the women's shoe department.\n\nBut I had only been in the job a few weeks when I began to realise that my interest involved something deeper than just a job or my career - to my initial concern I found that I was in fact being aroused by women with particularly attractive feet and sometimes by just some of the shoes themselves.\n\nAt first I was worried that I was turning into some sort of pervert until, quite by accident I read an article about fetishes that included something about foot fetishism. Once I knew that such a thing existed I read up everything I could find on the subject and began to understand more about myself and my unusual interest.\n\nWith that better understanding I became much happier in myself and began to give freer rein to my activities. I started a collection of women's shoes that had a special appeal for me, as well as some other, associated things, stockings, garters and such. The collection gave and still gives me enormous pleasure, both intellectually and emotionally and, from time to time when my need is particularly strong, sexually too - and many a lonely evening has been made more pleasurable by polishing and handling certain pairs of shoes before using one or more of them while I masturbate.\n\nBut, like any other male, I still had girl friends in the normal way - and of course my work gave me plenty of opportunity to meet women, after all I was both working with and serving them all day long.\n\nI could, and still can, honestly be described as 'a man who truly loves his work'!\n\nI have had a number of what might be called 'adventures' that resulted from girls and women I met through my job but what turned out to be the most exciting of them all actually began in a very ordinary way. It was one of those quiet mornings that you sometimes get in any business, my boss was on holiday and as there had been few customers I let the other two assistants go off to morning tea together, leaving me alone in the department.\n\nI noticed her the moment she walked in - she was beautifully dressed and I knew, from just the way she walked, that her feet would be lovely too. A quick glance at them confirmed that, and the shoes she was wearing also caught my eye - neat, obviously expensive court shoes, of an unusual design that I guessed had probably been bought overseas. I tried to imagine just what her tiny feet would be like and quietly prayed that she actually wanted to try on some shoes, so I could get to actually handle them!\n\nLooking up I took a quicker look at the rest of her - a dark suit, superbly tailored to show off her trim figure, the skirt just short enough to display slim, well-shaped legs - above that; an oval face, framed by short, dark hair - a generous mouth and wide-set, dark brown eyes - that, as mine finally reached them, I found were sparkling with amusement at my very obvious inspection of her.\n\nI felt myself colouring, smiled back and wished her - 'Good-morning' - then asked. 'May I help you - or would you prefer to browse a little first?'\n\nAnd was delighted to hear her positive response. 'You may be able to help me. I'm actually looking for a style similar to these I have on, but in a light blue, or perhaps a grey. Do you have anything like that?'\n\n'Not in the same quality of shoe as those.' I answered, then asked her. 'But may I ask what you are planning to wear them with?'\n\n'They're for a wedding actually, to go with a linen suit, why?' she answered with a quizzical expression.\n\n'So you probably wouldn't be wearing them on a regular basis, for business for example.'\n\n'Probably not.' she said, beginning to understand my line of thought.\n\n'Well, if it's a question of colour rather than durability I think the shoes I have in mind will be very suitable.' I explained and, not forgetting either my sales skills or my growing need to actually feel her foot in my hand, added. 'If you would like to take a seat, I'll just check your size - a four AA isn't it?'\n\nHer eyebrows rose as she heard my estimate of her fractional fitting. 'It's a four - but just a four A. But how could you tell?'\n\nI smiled. 'Let's just call it the result of professional interest - but I'll check it anyway, that is if you don't mind. You have lovely feet and we certainly wouldn't want to mis-fit them.' I added - and was thrilled to see that my little compliment actually brought a slight flush to her cheeks.\n\nI led her to a seat and sat on the fitting-stool in front of her and, as she removed one shoe and then lifted her foot into my waiting hand, flicked my eyes up and gave her a small, nervous smile, noticing that her face seemed almost as tense as I was feeling. In passing I caught the briefest glimpse of her nylon clad leg but I really only had eyes for her foot and, as I felt the warm smoothness of it resting lightly on the palm of my hand, felt my heart start racing a little faster. I sat there, just holding it for several seconds - and slowly became aware of a stirring of a different sort, deeper inside myself. But then I also became aware of her staring down at me and forced myself into activity, measuring and checking with unnecessary accuracy the various contact points. Doing my best to disguise the fact that I was doing anything that would delay the moment when I would have to put her foot down again.\n\nFinally I looked up at her and said. 'I think we'll find that the double A will be a more comfortable fit, in this particular shoe anyway - but I'll bring both for you to try.'\n\nEven through my own growing excitement I couldn't help noticing that her tension seemed to have risen too. I was suddenly worried that I had made her nervous by holding her foot for as long as I had. So, with reluctance I put it down and got up to fetch the shoes I had in mind.\n\nWhile I was in the stock-room I took the opportunity to try to calm myself, taking several deep breaths, telling myself that I mustn't be stupid, this was a customer, I was the sales assistant. But my pep-talk wasn't too successful and I could still feel my heart racing as I walked back towards her with the two pairs of shoes.\n\nHaving sat down in front of her again I helped her on with the first pair, she stood and walked around a little, getting the feel of the them, then we repeated the process with the second pair - and I could tell from just the way she walked that they were, as I had anticipated, noticeably much more comfortable.\n\nShe looked straight down into my eyes, smiling, as she said in a surprised tone. 'You did know didn't you? You were quite right, these are definitely a better fit.'\n\nI was thrilled - but tried to hide my reactions as I smiled back at her. 'I'm glad. How is the colour?'\n\n'It's almost exactly what I had in mind. They will do perfectly. Thank you, I hadn't expected to find a pair so quickly.'\n\nThat was that - it must have been one of the fastest sales I had ever made and I only had one more, all too brief moment of pleasure as I helped her out of the new pair and back into her own shoes. As I did that, thinking I might never see her, or her feet again, I just couldn't resist the temptation, and, as I eased off first one and then the other shoe, I ran my hand right along each foot - almost caressingly stroking the delicate arches between her toes and her heels - and as I did so feeling my head momentarily swimming.\n\nFor a split-second I thought I detected a faint tremor run through her as my fingers lightly traced the outline of the curve - but though our eyes met briefly, neither of us said a word and the moment passed. Then as I wrapped the shoes I tried desperately to think of a reason to detain her, of something I could say to her and though I had often 'chatted-up' customers, with her I found I had become totally speechless. To make things worse she paid in cash, not with a charge card, so I had no single point of contact and knew that once she walked away the chances were that I would never see her or her feet again.\n\nAt home that night I thought of her - and of her feet - and after spending a long time cleaning and fondling a similar pair of shoes, I relieved my pent- up need with them.\n\n<BR>\n\nChapter 3\n\nShe Came Again\n\nSeveral days passed, the memory of her had stayed sharp and clear but I had really had no reason to believe she would ever be anything more than that, a memory - until I saw her coming into the department again, almost a week later. As luck would have it, when she did I was already serving another customer - but, as our eyes met briefly and then, when she saw that I was busy, I was surprised and delighted to see that instead of heading for another assistant she began to browse amongst our displays. I hoped, yet at the same time I didn't dare to hope - and thought of all the reasons why she should want to see me rather than someone else. There was something wrong with the shoes, they didn't fit after all, they were the wrong colour, they had a flaw of some sort. The sort of things customers use all the time to justify their return of a purchase - which is when they usually want to see the same assistant as the one they bought from.\n\nI had actually managed to convince myself that I was going to hear her giving me one of the standard excuses - but, as soon as I was free and she headed towards me, I knew from the expression on her face that something was different, she was smiling, shyly.\n\n'The shoes I bought are wonderful, they are so comfortable that I wondered what else you might have, that are similar. And I especially wanted to wait for you - you took so much care in fitting me - so I also wanted to thank you for your help.'\n\nI felt sure that the stress that I thought I had heard in her voice when she said 'fitting', was something my own brain had added, not something she had actually meant and while I stood there, grinning like a village idiot, I desperately hoped that the grin successfully masked the actual, violent churning that was going on inside me - and it was only with great difficulty that I managed to respond in a voice that at least sounded fairly close to normal. 'Thank you, I was only too pleased to help. As a matter of fact there are several pairs I would be very happy to - ' I paused briefly, carefully watching for her reaction as I completed the sentence, ' - to fit, for you!' \n\nI was thrilled to see her reaction to the slight stress I added to the word 'fit' - I was convinced that I saw not only a slight arching of her eyebrows but also, I thought, a brief gleam in her eye. Evidence, no matter how slight, that I hoped indicated at least a faint interest in what I had in mind - so, I continued quickly. 'If you would like to take a seat and give me a few minutes, I'll bring several pairs for you to try on.'\n\nI held my breath and I'm sure my heart actually stopped for a second or two, then she answered, in almost a whisper. 'Yes, I would like that - very much. Thank you.'\n\nShe turned away and, as though she already knew exactly where she was going, made for a group of three chairs that faced the back wall of the department, and putting her hand-bag on one and her suit jacket other, then sat on the one in the middle.\n\nOnce again I used the time in the stock-room to try to take stock of the situation. Was I reading things into her actions that were simply figments of my imagination or my unusual needs? Was she simply returning to someone who had been able to better identify the fitting her feet needed? Or, had my handling of her feet aroused something inside herself - something that perhaps she hadn't previously been aware of!\n\nI hoped, yet I didn't dare to hope...\n\nI returned, carrying several boxes of shoes, pulled over a fitting-stool and sat in front of her and then, without my asking her to do so, she lifted one foot for me to take off her shoe and in doing so treated me to a brief glimpse of the inside curve of her thigh. It may have been only brief but it was still long enough for me to see the dark welt that marked the top of her stockings - she was wearing stockings, not pantyhose!\n\nThat, plus the warm suppleness of her foot resting in my hand were more than enough to get me going, I couldn't help myself - I gently pressed her small, evenly spaced toes with my fingers, then curved my hand up around the well-formed arch of her foot. This time there was no doubt about her reaction, this time I definitely felt a tremor run through her!\n\nI looked up into her eyes and, making an effort to control my rising excitement quietly said. 'You have truly exquisite feet - I hope you take extremely good care of them.' Then, as I gave her a small, shy smile, added. 'Or, have someone who does it for you.'\n\nThe colour in her cheeks deepened a little but I was happy to see just the trace of a smile playing at the corners of her mouth as she answered. 'Yes - and - No. But - I really think I should try on some shoes, don't you.'\n\nI nodded, fumbling amongst the boxes with one hand, the other not prepared to let go of its prize.\n\nThere were a couple of pairs that I felt sure she wouldn't like and I showed her those first, not surprised when she shook her head at them - but the third pair took her eye. 'Yes, they look nice, may I try them on please.'\n\nWe must have spent at least twenty to thirty minutes at what by then I felt sure was a mutually stimulating activity, she giving me the pleasure of handling her stockinged feet with growing intimacy between each pair of shoes she tried on. Me giving her - what, I wondered? My answers ranged all the way from - a game of 'let's tease a shop assistant today', to 'at last I've found a man who loves handling my feet' - feeling sure that the answer was in fact somewhere closer to the former than to the latter. But I didn't care, I was in my own private heaven, almost oblivious of everything but the feel of her beautiful feet. \n\nEverything but her feet and my accompanying erection that is!\n\nBut sooner or later the real world had to intrude of course and I was suddenly pulled out of my reverie by her looking at her watch, pointing to a pair of shoes and saying. 'I hadn't realised the time, I must dash. I'll take those, the navy blue pair, please.'\n\nThat was it, she was then in such a rush that try as I might I couldn't delay her for any reason and, once again I watched as she walked out of the department - perhaps out of my life!\n\nMy mind was in a whirl and my body was vibrating like a piano string. Somehow I felt sure that she loved what I did as much as I loved doing it, so why had she just dashed off like that? Why hadn't I got her name, phone number, something? I had been so caught up in the pleasure of the moment I hadn't even thought of asking - 'I'm such a fool!' - I said, cursing myself. 'The chance of a lifetime and you just let her get up and walk out!'\n\nThat night, even more strongly than the previous time, I replayed the half hour of bliss in my head, over and over again. The feel of her toes and feet in my hands, the picture she made as she took a few trial steps, of her tiny ankles and the sweet curve of her calves, the brief glimpses she had given me of the warm, stockinged curves higher still. And again I had to be content with emptying my aching balls alone, just one or two of my favourite shoes doing the work, while I fantasised that it was actually her exquisite feet that were doing it for me.\n\n<BR>\n\nChapter 4\n\nA Fitting\n\nThe next few days were a disaster, I spent each one watching for her; praying she would suddenly appear, convincing myself she had, only to find it was someone else that didn't even really look at all like her. I was inattentive with my customers, short with my colleagues, very nearly rude to my boss and it was only after that episode that I realised what a fool I was being - and gave myself a good talking to, making a determined effort to try to put her out of my mind.\n\nI wasn't completely successful of course and the fact that she returned to my thoughts and stimulated my lonely activities each evening didn't help much.\n\nTwo weeks went by like that - then she returned. It was late afternoon, with less than an hour to go before our closing time and the department was relatively quiet. I had been tidying up one of our displays in the front section when I saw her approaching and this time, unlike the others I positively knew it was her. Glancing around behind me I saw that my boss was busy preparing an order for one of our suppliers, one of the assistants was serving the only other customer, and the others were nowhere to be seen - so I approached her, smiling nervously.\n\n'How lovely to see you again. May I help you?'\n\nI could see how tense she was and for one dreadful moment I thought she was going to turn and walk away, she didn't but her own nervousness showed clearly in her voice when she answered me. 'Good afternoon. I was passing, I mean I was, well that is, I was wondering - about some shoes. Something a little out of the ordinary. But then I don't suppose you have any.'\n\nI tried to calm her. 'Why not take a seat and I'll see how I can help, I'm sure I can.'\n\nShe just nodded, gave me a tiny smile and once again headed for the group of three chairs where she had sat previously. As before, I sat on the stool in front of her and was thrilled when, again without my asking and even before she had told me what she was looking for, she lifted one foot into my waiting hand. I carefully slipped off her shoe and I heard myself give a small sigh of pleasure as once again I held the warm softness of her foot.\n\nNeither of us said anything for a minute or two but as my fingers held and explored the curves made by her instep and toes I looked up at her, her eyes were staring down at my hand but as I fondled her I could see the faint lines of tension vanishing from her face. I broke the silence.\n\n'Just what kind of shoe were you looking for please?'\n\nI saw her mentally shake herself before, in a very small voice she answered. 'High heels. Something with high heels - I mean very high heels.'\n\nA picture instantly flashed into my mind; a picture of her standing in front of me, her lovely feet inside a tiny pair of glossy black shoes, shoes that had impossibly high heels - and I felt my hands grow damp with excitement. Then I ran through what I knew we had in stock; some but not too many shoes with ultra-high heels, nothing like what I had imagined of course - in her difficult fitting? I thought there were a few.",
        "'It depends just what you mean by 'very high' of course - but let me get what we have in your fitting. But, if we don't have just what you are after I can always get a special order in for you of course.'\n\nIn a way I hoped that what we had in stock wasn't what she wanted, I was determined that this time she wasn't going to just get up and walk away without getting something that either brought her back or which gave me at least a tenuous link with her, and a special order was a perfect way of doing that.\n\nOnce again I left her while I searched through the stock-room, even more nervously than the last time and this time I returned with fewer boxes.\n\n'Not too much to choose from I'm afraid. But -' I went on quickly. '- they may help to give me an idea of just what you would like, then I can order a pair in for you. Of course if they didn't turn out to be suitable you wouldn't be obliged to buy them.' I added, removing that possible excuse for her not being prepared to commit herself.\n\nOnce again we quickly slipped into what I hoped had become our private world. She allowing me to lightly caress her feet in between removing and helping her into shoes, then standing, taking a few paces, turning, testing the fit of each pair, becoming more visibly relaxed as time slipped by. In between, allowing me occasional glimpses up along the line of her legs and lower thigh as she lifted her foot into my palm. Glimpses that seemed to me to become more frequent and a little more blatant each time - and by the time we were down to the last two pairs to be tried I had not only seen that she was again wearing stockings, I had also been treated to a brief glimpse of the pale curving creaminess of her thighs, immediately above the top of them.\n\nNeither of us had spoken a word to each other, we were both too absorbed in what we were each experiencing. Obviously I didn't know just what was going on in her head - but had become very aware of what was happening to my own body. The constant stimulation I was getting from holding, caressing, fondling her feet, plus the brief displays of her legs above, had quickly started an erection, an erection that had got steadily bigger as time went by until I felt sure she must have noticed the uncomfortable bulge in the front of my trousers.\n\nThen there was only one pair left and the other shoes and boxes were scattered around me - I had taken off the pair she had just tried on and still had hold of the other foot. As I half turned to pick up the final pair I somehow lost my balance on the stool and started to slip sideways, twisting, falling awkwardly - and as I did, my hand pushed up the foot I was still holding, pushed it high.\n\nIn the split-second it took me to regain my balance I found that I had an unobstructed view straight up under her skirt. There was no doubt about what I saw - up past the sheerness of her stockings, across the dark welts, on up over the smooth curve of her thighs - right on up to where they joined, where I saw a mass of dark, curling hairs. \n\nUnderneath her skirt she was naked!\n\nAs I regained my balance, our eyes met and I saw that her face was now vividly flushed - but not, I thought, with embarrassment, the look I saw in her eyes, was excitement!\n\nStill neither of us said a word, each only able to guess what might be passing through the other's mind. But she confirmed my thought that her display was in some strange way as exciting for her as it undoubtedly was for me by putting both feet up on the stool, so that as I lifted each foot to ease on the final pair of shoes, for a second or two I was again treated to that provocative view of her - and I felt my cock getting even longer, harder.\n\nAfter I had fitted the shoes she again stood, took a few paces in them, a turn or two, flexed each foot and ankle, smiling as she read the growing excitement in my eyes then returned to offer her feet to my waiting hands. By this time my cock was at full stretch of course and, sitting as close as she was, I had no way of hiding from her the solid bulge it made in the front of my trousers.\n\nI took off the right shoe first and as I did, saw her take a quick look around behind her, then, apparently satisfied that there was nobody in the immediate vicinity, she again lifted both feet up on to the stool and as I went to take off the other shoe too, she again parted her knees. Naturally my eyes automatically flicked up to take another look at what she was offering me and, as I did that, she slid her right foot up between my legs, until her toes found and explored the hard length of me.\n\nI held one foot, fondled her toes and, as I thrilled at the feel of it, my eyes were fixed on the triangle created by her pale rounded thighs and the dark curls nestling at their apex - all this time feeling my cock being gently pressed and squeezed by her other foot - I was in heaven!\n\nThen suddenly, from the other side of the department I heard my name being called and looked up with a start, to see one of the girls coming towards us. Luckily we both moved equally quickly, she pulled her foot from where it had been giving me such thrills, while I tried to cover the grotesque bulge in my trousers by searching around the discarded boxes around us for her own shoes. The assistant's question was easily answered but it had broken the erotic atmosphere and instantly brought us both back to reality.\n\nBut by then I was absolutely desperate to find a way of seeing her again - in more private surroundings - so as I was trying to put the various shoes back in their boxes I risked everything on the fact that she had been just as excited by what we had done as I was, and indicating the boxes on the floor, said.\n\n'I'm sure none of these are what you were actually looking for. We do have a supplier of somewhat more specialised footwear, for special occasions or outfits, you understand. If you would like to trust my judgement, I'm sure I could arrange for several pair that would interest you.' Hearing my voice gain confidence as I spoke, I went on, more quietly. 'It's so difficult to choose this way, with people around us I mean - I would love to help you make your selection, perhaps at your home? I could easily bring them over for you, one evening.' I added quickly.\n\nI waited patiently, guessing the turmoil in her mind - I wasn't really sure just how I expected her to answer - but finally she gave me a smile, leaned forward and said softly. 'That would be most helpful of you. How long would you need, to arrange for the shoes I mean.'\n\nI felt my heart pounding as I considered the likelihood of the supplier I had in mind actually having what I was thinking of in stock, in her size. I took another chance and answered. 'Oh, a week, perhaps a little longer - no more than two at the most.'\n\n'Ah! If you'll give me your card I'll see what I can arrange - I'll give you a phone call in, let's say about ten days.'\n\n'Perhaps I could ring you,'\n\n'No, I think it better that I phone you. You do have a card?'\n\n'Certainly.' I answered, digging in my inside pocket for one of the blank cards supplied to us by the company. I carefully wrote my name and the department's phone number, handed it to her and stared longingly into her soft brown eyes - although she returned the smile, she turned on her heel and again walked away.\n\nAlthough I was bitterly disappointed that I hadn't been able to get her to give me her number - and of course I still hadn't the faintest idea what her name was - at least there was now hope. If her reactions had been even half as strong as mine had been there was a good chance I would hear from her again. If she hadn't meant to stir me so much why had she left off her panties? If she enjoyed the 'game' as much as she appeared to wouldn't she want to play it again?\n\n<BR>\n\nChapter 5\n\nSpecial Shoes\n\nI spent most of the following morning ringing the few suppliers I knew of who specialised in theatrical and other kinds of speciality footwear. I knew what I was after, it was a question of finding one that had not only the right shoes - but the right shoes in the right size - and that was prepared to send them to me 'on consignment', so the company I worked for didn't get billed for them unless I actually sold them.\n\nAfter about seven or eight calls I finally got lucky, a small, interstate supplier who was obviously impressed by and probably saw $$$ signs when he heard the name of the company I worked for, who not only had the shoes I described, in the size I needed but was prepared to ship me a pair of each, 'no charge', obviously in the hope of getting us as a regular stockist. Try as I might to tell him it was a 'one off' customer, he was obviously convinced that was just my way of testing his service - and our business would have made such a difference to his that he was literally falling over himself to prove how efficient it was.\n\nSo, just two days later I had the shoes, almost identical with what I had described to the supplier, all I had to do was wait - how long? - for a phone call.\n\nI admit the shoes themselves weren't wasted! They were quite beautiful and, to a man with my somewhat unusual tastes, they were as stimulating as most other men would find the arrival on his doorstep of the latest film or TV star - naked and panting!\n\nI managed to smuggle them out past the security people and although I spent the days waiting and the evenings hoping that the following day would be the one she called me, in between I used the shoes - and almost more importantly, the memories of what she and I had already shared - to masturbate myself, some nights quite furiously!\n\nIt was exactly six days after the shoes arrived, that meant a total of eight days, not ten, when, just before closing time I happened to answer the phone and heard the voice I had been waiting for - I was both stunned and elated when I heard her say. 'Is that you Peter?'\n\n'Yes. Ah, that's the lady with the exquisite feet isn't it.'\n\nShe laughed softly. 'I suppose I have to say 'yes' to that don't I. Can you talk?'\n\nI looked around and saw that as luck would have it one of the assistants was completing a sale right behind me, so I had to answer. 'Not really - but please go ahead.'\n\n'I understand.' she said. 'But I would like to take you up on your suggestion, if the offer still stands - and if you have been able to obtain the shoes you had in mind.'\n\nMy heart was literally pounding with excitement! My hand shaking - and heard the nervous tension in my voice as I answered. 'It certainly does - and yes I have. When did you have in mind?'\n\n'You mean you have the shoes already?'\n\n'I've had them for almost a week now.'\n\n'A week!'\n\n'Yes. But that doesn't matter now does it. Just tell me where and when - and I'll be there.'\n\nI could hear the suppressed excitement in her voice and my hand was trembling so much I could hardly write down her name, 'Natalie' and the address she gave me - which I instantly recognised as being in one of the expensive suburbs - but somehow I did and then asked her 'what time'.\n\n'Would around seven o'clock be all right for you Peter?'\n\nOf course I said it would be and then she simply hung-up on me, leaving me staring at the phone and the scribble on the paper in front of me - as my mind raced and I felt my blood pounding through my veins.\n\nI had plenty of time to get home, shower, grab something light to eat and change. Remembering the way she had come to me in the store - and with a touch of unjustified bravado, I made a point of wearing no underpants - then took a cab, arriving exactly at seven o'clock. The building had one of those security phones and I think it was only when I actually heard her voice in answer to my ring that I really believed all this was actually happening to me! \n\nAnother few minutes and I was standing outside her apartment door - which I found was already slightly ajar - so I pushed it open, went in and closed it behind me.\n\nThe short hall-way was in total darkness but ahead of me was another door, also partially open, through which I could see light. And, moving on and through it, I found myself in a very long room that was lit only at the far end and there, I could see Natalie, sitting, waiting!\n\nAs I walked slowly towards her I had to admire her sense of theatre - she was sitting in the centre of a small pool of light on a carved, high-backed chair. In front of her, a low foot-stool, obviously meant for me. One of her legs was extended to rest on the floor beside the stool, the other was bent high, the heel of her shoe resting on the edge of the seat of her chair.\n\nShe was wearing a tailored white blouse and as I came closer I could see, through the clinging fabric, not only the outline of the curve of her breasts but also the tell-tale points to her nipples. Her skirt was black with small, tight pleats and the way she sat stretched it taut between the thigh of her extended leg and the high pointing knee of the other. Sheer black stockings flattered her long legs and I noticed that she was wearing the same court shoes that she had on the first day she had come into the store. But in spite of the mouth-wateringly attractive display she had of herself it was the memory of how she had previously done that for me that flashed back into my mind - and I felt positive that if were able to see beneath her skirt I would again find she was not wearing panties. \n\nI felt my palms grow moist with anticipation as I recalled the fantasies I had already created around our brief meetings and slowly walked the length of the room towards her until I finally stood directly in front of her. As neither of us had said a word until then I decided to play the 'game' by her unspoken rules - at least to begin with.\n\n'Good evening Natalie. I have obtained a few pairs of shoes that I think will interest you. And it will be my pleasure to help you try them on.' I said as I put the boxes down on the floor beside her.\n\nShe just smiled and nodded. But, as I sat down on the stool, she shifted her legs so I was denied the view I had been looking forward to, then as I settled down, she lifted one foot to rest it on my already outstretched palm.\n\nAlthough I had now done it many times before, this was the first time I had touched her when we were totally alone and I began to tremble as my fingers felt first the smooth hardness of the leather and then the soft warmth of her foot inside it. Using one hand to support her ankle, I eased off the shoe and gently enclosed her foot in the other.\n\nKeeping my eyes lowered and focussed on her foot I began to speak; slowly and quietly - explaining the beauty of a well structured foot and attractive toes, the points that were the marks of a foot that, when compared with others indicated that it was well cared for and the various ways there were of doing that for feet as lovely as hers. All the time lightly massaging and caressing her toes, the well defined arch of her instep and the delicately narrow ankle joint.\n\nI was in heaven again!\n\nI don't know for sure how long my caressing monologue continued before I felt the first, positive tremor running down through her leg and into my hands - when I felt that, I rested her foot on the stool between my legs and reached for the first shoe box.\n\nThen our game began in earnest - and progressed with tantalising slowness. I took my time, caressing each foot in turn before easing it into a shoe and, when I had fitted both, just as she had in the store, she stood and took a few steps around me, testing the fit and the feel of them, before returning - so I could start again with another pair.\n\nI purposely began with a pair that were only mid-height and gradually introduced her to shoes that were progressively more sophisticated and which had increasingly high heels. Sitting there, thrilling at the feel of her feet, finally being able to watch her walk around in the various shoes I had chosen and then fitted for her, soon had me wound up like a clock spring - and my cock spontaneously jerking.\n\nThe second last pair I had brought for her to try were a dark, cherry red colour with very high, stiletto heels which looked fantastic against the sheer blackness of her stockings and I took my time fitting them, feeling my cock swelling to full size as the excitement of the combination of the shoes and handling her feet grew to almost unbearable proportions. When I finally let go of them she stood, looking down at them for a moment and, before taking her short walk, her eyes travelled across to my crotch. I saw a small, tight smile appear on her lips as she obviously saw the results of the effect she had had on me.\n\nWhen she returned and sat down so that I could take off the shoes, she stretched out one foot and, lifted the other, repeating the pose I had seen her in when I first came into the room and, as I fumbled to slip off the first shoe, my eyes travelled up the long line of her legs. Up, past her stockinged thighs, up, up to where I could see the dark welts of the top of the stocking, up along the pale smoothness of her upper thighs and, higher still, to where, as in my memory, I saw the triangular shadow that drew attention to her sex.\n\nMoistening my lips at the thought of what might still lie in store and, without taking my eyes from the sight she was offering me, I removed first one, then the other shoe - and reached for the last, the very special pair of shoes. They were the kind of shoes that were usually only used for display purposes - brilliantly highly-polished, made from a bright scarlet leather, cut high at the heel and low at the toe - and, with incredibly high heels!\n\nFew women could stand in shoes like that and walking in them was definitely an art. As I balanced one on my hand, letting the light reflect from its high gloss surface I dragged my eyes away from the view of herself she was still offering me, looked up into her eyes and saw that her reaction was as I had hoped it would be - both longing and delight!\n\n'Ooh, ooh - yes!' she finally said, quite breathlessly.\n\n<BR>\n\nChapter 6\n\nHeaven\n\nI put the shoes on the floor beside me, where she could still see them while I put the previous pair away and while I was doing that she lifted her foot up on to the stool and slid it forward between my legs until she found what she was after, curling her toes over the top, while the sole of her foot pressed against the already rock-hard length of it. When she found that as I had no underpants on, she could move it about quite freely, her eyes stared hard into mine and she gave me a small, tight smile. \n\nI sat quite still, enjoying the thrills that ran through my body as she played with me, rolling the length of it back and forth across my stomach, squeezing it as best she could with her toes, slipping her foot up and down the length of it - and I felt the ache in my balls growing and a surge gathering deep inside me.\n\nBut, exciting though it would have been, I had no intention of simply coming in my pants, as I knew I would if I allowed her to continue - so, gently removing her probing foot from between my thighs I picked up the scarlet shoes. \n\nI felt the tremors that had been running through her increase as I eased on first one and then the other - then when I had finished, she sat there for several minutes, just looking down at them.\n\nWhen she did stand it was immediately obvious that she was no stranger to ultra high heels, her poise and balance were perfect and when she moved it was gracefully and with confident ease. Their height of course stressed her ankles, calves and pelvis, forcing her into a stance and creating lines that feature in most men's fantasies. Then when she finally looked up from the shoes and our eyes met again I saw that hers had become quite heavily misted, then she looked down to where my cock was dramatically outlined - and moistened her lips suggestively.",
        "She began to slowly walk; this time not just in circles around me, but down the length of the room, and I watched with mounting excitement both the tightness of her buttocks and roll of her hips beneath the slowly swinging motion of skirt. She walked with a classic mannequin's walk, placing each foot directly in front of the other, and, in those shoes the effect was guaranteed to arouse even a celibate monk - and I certainly wasn't one of those! Her return was, if anything even more sexy - watching her walking straight towards me, with her eyes locked on mine, a determined smile playing on her lips and, through her blouse, the shape and swaying movement of her firm, sharply-tipped breasts.\n\nWhen she had covered just about half the distance back to me she paused, turned slowly and walked back down to the other end of the room again - and then, disappeared around a corner!\n\nShe was only gone for only a few seconds but when she returned I was both stunned and ecstatic - she had removed her skirt! She posed for a second or two then, slowly, very slowly, began to walk back towards me again.\n\nShe was quite utterly breathtaking!\n\nLeaving her blouse on only seemed to accentuate the nakedness of her lower half. Nakedness that was made even sexier by the lacy black suspender belt, the sheer stockings and of course, those incredible shoes. I felt my mouth go dry as I stared at her - the long, tapering lines of her legs, the sweeping curve of her hips, the faint roundness of her stomach and, beneath, the thick, dark curling of her neatly trimmed triangular bush.\n\nIt's impossible for me to fully describe either the way she looked or the overwhelming effect she had on me. Even as I look back I can still see her; frozen in mid stride, the shoes scattering light from their brilliantly coloured, almost mirror-like surfaces.\n\nWhen she reached the mid point of the room she again paused, stood there with her feet slightly apart, her eyes staring, almost challengingly into mine - and spoke again. 'Undo your zip Peter - get it out, let me see you too'\n\nI did as she asked, for some reason not pushing my trousers down but simply struggling to get my rigid cock through the narrow gap of the fly - watching her eyes widen and her lips part wetly as she saw the already knotted length and bulging purple head. My balls were tightly, achingly full, but somehow I managed to also get them through, feeling the sharp teeth of the zip biting into the soft folds of skin beneath. Then I slipped off the stool, sat on the floor and leaned back, supporting myself with my arms behind me, so that my dramatically quivering and jerking cock and balls were displayed for her enjoyment. \n\nWe stared silently at each other for a while until I beckoned to her and said. 'Come over here Natalie - I want to give you even more pleasure!'\n\nShe came without hesitation to stand beside me, until I beckoned her again when, understanding my intentions, she smiled and lifted one foot across to straddle me and, as I looked up, I saw the wet pinkness of her sex. Apart from the neatly curling mat covering her pubic mound, she was shaved!\n\nShe reached out to grip the back of the chair for support as I lifted one foot and the gloss on the shoe clouded as I brought it close to my mouth and I smelt both the leather and the fainter, musky odour of her sex above me.\n\nRunning my lips over the hard surface of the shoe and then the silky warmth of her stockinged foot within it, I kissed it from toe to ankle before swinging it to one side and placing it on the stool beside me. Then, easing myself forward until I was directly beneath her, I stretched up, brushing the warm silkiness of her thighs with my cheeks and reached for her with my tongue.\n\nAt first, with just the tip of it, I licked her, lightly, every now and then probing a little way in between the moist folds. Natalie moaned softly and then, some time later, when I pressed my mouth against her, I tasted the increasing wetness there and gently sucked the flow. Then, with the earthy odour of her arousal filling my nostrils I pushed my tongue stiffly between up between the puffy lips, pushing it deep, and feeling her pushing herself down against my mouth and probing tongue.\n\nFeeling and hearing her mounting excitement, I slipped it out and slid it up over the ridge of her swollen clitoris and then, as she groaned louder and began to shudder, used one hand to hold her steady. And, as I began to flick my tongue faster and faster over the hard, sensitive flesh, I found I had to grasp her even more tightly as her body spasmed in response.\n\nThen suddenly, she grabbed hold of my head and clasped it tightly against herself and, as I felt her body becoming rigid, I found my mouth full of her freely flowing juices. Shifting my position I reached up and firmly gripped her by both buttocks and sucked hard; thrilling at the sound of the delighted cries that were echoing all around us, thrilling at the feel of the tensed muscles in my hands and the violently spasming body that was filling my eagerly sucking mouth to overflowing as her orgasm rolled on from peak to peak.\n\nI continued until her body's reactions slowed and I could tell that - even though she still gasped for breath and my hands still felt the occasional shiver run through her - she was slowly regaining control of herself. Then, after a minute or two, she moved back a little and I looked up to see that she was staring down, staring wide-eyed, at my cock.\n\nI had never seen it so grotesquely engorged! Rearing strainingly high - its head grossly swollen, the drum-tight skin glistening from the pre-cum that had already oozed out, the veins in the shaft below it standing out sharply as blood continued to surge into them. Beneath, constricted by the zipper, my balls overflowed, the aching pressure within making their normally wrinkled skin drum-head tight.\n\nNatalie held on to the chair for support as she lifted one leg back across me, turned herself to one side then again raised her foot and this time held it, poised above me. She created another scene that has remained clear and sharp in my memory - the shoe, her foot inside it and her ankle and calf above, my quivering cock, straining upwards, its head almost as glossy as the shoe. And the turmoil inside me that went with the picture - the almost unbearable longing, longing to feel her touch me, feel her touching my raging cock with that shoe!\n\nShe put me out of my misery soon enough, swinging her foot across to rest against the shaft, the hardness of the leather feeling cool against the over-heated skin and her ankle-bone sending electric shocks through me as it lightly touched the taut skin of my cock-head. Then I felt the sharpness of the tip of the heel slowly grazing up the length of the shaft and my hips jerked up involuntarily in response to the sensations she sent shooting through me - and I heard myself beginning to groan from the intensity of the pleasure she was giving me..\n\nWhen the tip of the heel reached the deep groove below the bloated cock-head, she paused, then circled it, before scraping back down the shaft and I jerked my arm across my face, biting hard on the back of my hand to stifle my cries of agonised delight. With the heel pressed down against the muscles of my belly, she paused again - then once more, raked upwards, slowly circled and then slid the curved side of the shoe downwards, intently watching my face for my response to what she was doing to me.\n\nAgain and again she repeated the delirious torture, every now and then shifting the heel-tip to prick the balloon-like sac and balls beneath it, before sliding the shiny instep of her shoe back up the length of my frantically jerking cock. The effect she was having on me was quite simply unbelievable - I had never, in my wildest fantasies imagined experiencing such electrifyingly powerful sensations. Sensations that just seemed to go on growing stronger the longer she continued doing what she was - and as she gave no indication that she was growing tired of doing it I began to wonder if she planned on keeping me in that helplessly delirious state all evening long.\n\nI wouldn't have cared - I was in such a state that she could have done anything she liked with me!\n\nBut, when I finally I felt I simply couldn't take any more I opened my eyes and looked up at her, to see that she was staring down at my almost bursting cock - and from the look on her face I could tell that she was in some way getting almost as much pleasure herself as she was giving to me. She must have become aware of me looking up at her and shifting her gaze she stared down into my eyes, saw their pleading look and, recognising the signs, took one last, brief look at what she had done to me, then again stepped astride me.\n\nHolding my cock steady with one hand and her pussy open with the other, she slowly lowered herself down on to it - and after the feel of the electrifying hardness of the shoe, the wet warmth of her sex slowly absorbing me was simply fantastic!\n\nLittle by little, as she squatted lower and lower, she took me deeper and deeper into herself - and that time even gnawing on my hand couldn't muffle the sounds of my reactions. Then I felt the slight weight of her bottom pressing down on my thighs and knew she had engulfed the entire length and mass of me - and in the same moment, heard her own moans of pleasure mingling with mine.\n\nThe combination of what we had been doing since I arrived and more especially what Natalie had done to my cock with her foot had already taken me to the very brink of my climax and once she had my cock inside her welcoming pussy there was just no way I could delay it for as long as I wished I could. It was probably longer - but in the state I was then in it seemed to be only a minute or two before I felt an almighty surge building up inside me. Natalie must have felt that unstoppable pressure building too - because just then she began to bounce up and down on me more quickly and I felt her body gripping me rhythmically as she urged me and, as her increasing sounds of delight soon made obvious, herself too - on towards what was then inevitable.\n\nIt may have only been a few minutes - but though the time was short we managed to cram in an age of magical sensations. Certainly the way she rode me did for me, in turn I was sure that the sheer size of my massively over-engorged cock and the way I thrust it hard and high up into her plunging pussy, did the same for her. Then, all too soon we both felt that momentary pause that signalled my climax - followed a moment later by the pulsing swelling of my shaft, as semen began to gush up through it.\n\nI couldn't help the even louder cry that broke from my throat as I arched upwards, muscles locked, the dense, creamy jets shooting high into her - then felt Natalie grinding herself down on to me as my exploding hardness, pumping successive loads deep into the heart of her, triggered another orgasm for herself.\n\nIt was totally, utterly draining - I had never, ever experienced anything like the power and intensity of that climax, I probably came very close to actually passing out from it, certainly my recall of things becomes hazy at that point. I remember her bending forward to kiss me - and thinking - 'How strange - this is the first time we have actually kissed each other!'\n\nLater still, as we sat and talked properly for the first time, we learned a lot about each other and more about our common predilection. For Natalie, her toes and feet were her strongest, secondary erogenous zone - but she had rarely found anyone who could understand or supply the somewhat peculiar caresses she needed. Shoes and shoe stores had become a sort of substitute. So, meeting a man like myself was in fact, her ultimate fantasy.\n\nThe rest of the night has an almost dream-like quality about it, it seems to me that I spent hours massaging, caressing, sucking, kissing and just playing with her toes and feet. \n\nSometime during the night we began to exchange a few of our individual fantasies and in the weeks and months that followed we often used those as the bases for some of more unusual love-making. I could go on and on about the joys Natalie and I found and experienced together, enough to say, without any doubt at all, the most sexually fulfilling times of my life were those I knew with her."
    ],
    "authorname": "TonyDowse",
    "tags": [
        "foot fetish",
        "she fetish",
        "high heels"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/sweet-feet"
}