{
    "title": "Look the Other Way",
    "pages": [
        "(Revised 7/26/2021)\n\n\"Devo\" here.\n\nWe saw a comment posted on another short which inspired this \"tail\" (no, not \"tale\").\n\nIf it seems familiar and obvious to you because you've already read The Card Game, which involves the same characters, this one aims at the idea from the other side.\n\nThis is meant only as a humorous sideline, and a bit of a diversion from our normal stuff, even though the characters are in several stories now.\n\nThe origin story of these characters is related in It Only Took Twenty Years. If you've not read that one, this short won't make much sense. At least read the last part of that story first.\n\nI hope you enjoy:\n\nLook the Other Way\n\n<hr>\n\nFriday, June 5, 2020\n\n\"Jeez, Will!\" said my VP of IT Security, holding his hand up, visibly requesting I curtail my interruption, \"but this can only make sense if you let me finish.\"\n\n\"Okay. Start from the beginning. I'm still not tracking because you ran right past me. Explain it to me like I'm in kindergarten.\"\n\nHe took a deep breath, then folded his hands with his fingers laced together in front of his laptop keyboard.\n\nEveryone in the room remained silent and focused. We'd all been summoned to the emergency meeting by my chief information security officer, Nick Recker.\n\n\"Two days ago, our cloud service firewalls alerted an uptempo in hits on a particular probe packet which was identified by the NSA late last week. They advised the security community that they suspect there's a new campaign originating from either Russia or North Korea.\n\n\"So, we started gathering data and sending the port-knock packets into the honeypot for analysis. We noticed they were all coming from onion router exit nodes. Making sense?\"\n\n\"Yeah. I'm following.\"\n\n\"But that's when it started getting weird. Julia, that really sharp gal that works my Sec-Ops group, noticed a pattern in the TCP handshake sequence numbers, okay?\"\n\n\"If you say so,\" I said. I barely remembered the basics of the protocol, even though I was an expert troubleshooter decades before. Different job responsibilities required different focus, and I hadn't ridden that particular bicycle in more than a decade.\n\nI noted that Nick started fidgeting in his seat.\n\n\"She'd noticed the same pattern in our new data center's security monitors but didn't realize what she was looking at yet.\"\n\nThat chilled me to my core. \"Whoa. Are you telling we've been compromised?\"\n\n\"Yeah, Will. Probably during last month's cut-over between the old data center to the new one, but there's more to it than that,\" he continued.\n\nHe reached for a cable at the center of the table, then connected it to his laptop. \"She told me that the patterns of the numbers reminded her of RGB bitmaps. You know, X/Y coordinates and colors?\"\n\nI was too fogged to follow the specifics. I was quaking inside.\n\n\"She watched and collected the patterns until she saw the same pattern repeat again and again. Kinda like in that old Jodie Foster and Matthew McConaughey movie about the aliens.\n\n\"She plotted them all, and came up with this,\" he said, pointing at the screen I then turned to face.\n\nI think my heart failed to beat the entire time it took my CISO to bring the image up. I envisioned myself being summarily shown the door after being dressed down by the CEO and board of directors for allowing a nation-state to gain access to our systems on my watch as CIO of a twenty billion dollar enterprise.\n\nWhen the image appeared, my heart didn't resume beating until my brain made sense of what I was looking at on the huge OLED display.\n\n\"I'm going to kill you,\" I groaned over my shoulder.\n\nAll seven of my direct reports, including Nick, burst into uproarious laughter.\n\nThe screen displayed a portrait of me. It was a rather old one, presented as a meme. The picture was the one which was printed on the first ID badge I'd been issued when my employment at the company began.\n\n\"HAPPY ANNIVERSARY!\" was boldly written underneath it in the \"Impact\" font.\n\nMy heart started beating again, but it took me a few more moments to allow myself to chuckle, then full-on laugh with them.\n\n\"You okay, Will? You looked like you'd seen a ghost,\" Nick asked with a broad, accomplished-looking smile on his face.\n\n\"Wow. Every single one of you are evil incarnate!\" I laughed. \"That was cruel!\"\n\n\"Cheryl really wanted to be here to see it,\" Nick said, referring to the CEO of Extecha.\n\n\"She did send her regards, though,\" he added, flipping to the next slide.\n\n\"Gah! Will you all please just stop?\" I whined in embarrassment.\n\nIt was a photo of her holding a print of that same mugshot in her hands, looking at it with a doting expression with her other hand against her cheek as if I were her long-lost grandchild. I thought I looked like the absolute child I appeared to be when I'd graduated from college.\n\n\"How'd y'all even get that picture?\" I asked.\n\n\"C'mon, Boss! I'm your CISO. I can find anything,\" Nick chuckled.\n\nI turned to face him.\n\n\"Just kidding. We asked the manager of site security if they had older badge photos of you, and he shot that to me within an hour.\"\n\nThat didn't surprise me. Employees' badge photos were not kept behind lock and key. They were even used in our corporate internal directory website. I was only surprised, though, that they archived older ones for so long.\n\nMy administrative assistant wheeled in a cart carrying a small cake, a half-gallon of Bluebonnet French Vanilla ice cream, plus disposable bowls and spoons.\n\nThe cake was decorated with the exact same juvenile-looking photo.\n\n\"Elaine! You traitor! You were in on this, too?\"\n\n\"No, Will,\" she said innocently. \"It was my idea.\"\n\n\"Wow. Nothing on my silver service anniversary last year, and now this,\" I laughed.\n\nEveryone gave me a congratulatory handshake or a \"professional\" hug.\n\nAfter I sliced cake and scooped ice cream for the nine of us, we sat back at the large table where I was encouraged to reminisce about days long ago when I wore the badge that bore that embarrassing photograph. It was a good laugh, a well-deserved prank, and a great time. It made me feel pride in the team I'd led for the prior few years. It was a great way to end the workday.\n\n\"Hey, Devo,\" I said, greeting my wife of three years with a kiss on her cheek and a gentle stroke of her bottom.\n\n\"Hi, Baby!\" she turned, smiling at me. \"How was your day?\"\n\n\"You're not going to believe what my team did,\" I began, then gave her a rundown on the trick they'd played on me.\n\n\"Oof,\" she groaned. \"That's cold!\" she grimaced before laughing.\n\n\"Right? I thought it was pretty funny, though,\" I said, bending to pick up our son who'd come into the kitchen on hearing my voice. \"Hey, kiddo!\" I grinned, blowing a zerbert onto the side of his neck when I hugged him.\n\nDawn gave me a rundown on her busy day, regretting it didn't conclude with cake and ice cream as mine had. When I showed her the picture, she laughed, taking my phone from my hand.\n\n\"Oh, wow, Will! I barely remember this guy!\"\n\n\"Yeah,\" I scoffed. \"Yet, look at you. Your first badge picture and the one you have now look pretty much the same.\"\n\n\"Aw, you're so sweet,\" she said, giving me a yummy kiss.\n\nMine wasn't a dishonest compliment at all. Dawn looked half her age of forty-six. She was still the phenomenally well-built raven-black-haired almond-eyed beauty I'd distantly fawned over for almost two decades before she left the company at which I still worked.\n\nI sat Aaron in his booster at the table, and Dawn plated the dinner I'd brought home on the way from work.\n\n\"A package came for you today,\" she said.\n\n\"Yeah? What is it?\"\n\n\"Not sure. I didn't open it. I put it on the desk.\"\n\nAfter we finished dinner, Dawn said, \"I'm going to get Aaron cleaned up and put him to bed.\" She drew him from his booster and placed him on his feet.\n\n\"Give Daddy a hug!\" she encouraged him.\n\nI loved hearing those words from his mother, and I scooped him off the floor. He tried to blow a zerbert on my neck but hadn't yet figured out how. I gave him another. I'd heard my son's belly-laughter months and months before, and I constantly sought new ways to elicit such joy from him. The raspberries on his neck, belly, or the backs of his knees were sure-fire successes, but I sought more every single day. A toddler's belly-laugh is a silver bullet to a parent's heart.\n\nI never thought I could love another human that way until I saw his eyes moments after he was brought into the world. I even felt shame that I didn't love his mother more until that point. She nurtured him in her womb. He was our baby boy. He was the product of my adoration of the woman I'd loved forever but refused to admit until only a few years earlier.\n\n\"G'night, Handsome,\" I said, sending him on his way on legs he'd only known how to employ for a few months. His second birthday would be the following month, and watching him walk gave me an incredible sense of pride.\n\nI cleaned the kitchen then went to the study. I sifted through the mail on the desk, tossing about three quarters of it into the recycle bin. I put the bills in the caddie, then pulled the strip through the top of a yellow envelope which was sitting separately in the desk chair.\n\n\"What the hell?\" I asked myself, looking inside and seeing something which looked like a chamois cloth. There was an envelope inside the bigger one, and I removed it first. After I untucked the flap, I removed a single sheet of high-quality parchment paper which had two simple words printed on it.\n\nHi there.\n\n\"Weird,\" I said.\n\nI began to remove the remainder from the bigger envelope, and when I began to realize what it was, I dropped it on the floor, darn near certain I didn't want to be holding it, not knowing where it'd been.\n\nIt was a pair of underwear. A large pair of women's underwear, probably best described as \"granny panties,\" fell to the floor.\n\n\"Uh, Will?\" Dawn said from the door, seeing the wad sitting on the floor at my feet with me holding the yellow envelope in my hand with a shocked look on my face.\n\n\"What the hell?\" I said again.\n\n\"Did someone mail you their panties?\"\n\n\"Dawn&mdash;\"\n\n\"Do you have something you need to tell me?\"\n\n\"God, Devo! I have no idea!\"\n\n\"Whose are they, Will?\" she asked with a scarily even tone.\n\nI stammered in defense of myself, frantically searching the shipping label and finding nothing except my name, address, and a tracking number.\n\nI scuttled to the other side of the desk and wiggled the mouse to wake up the iMac. I brought up the shipping company's website and typed in the label's tracking number.\n\nThey'd been overnighted from...\n\n\"Huh? Lansing, Michigan?\" I said.\n\n\"Will, who lives in Lansing?\" my wife asked.\n\n\"Devo. You have to believe me. I have no idea,\" I said, closing the browser.\n\nDawn held the bravery I lacked. She leaned to the floor and carefully picked up the garment by an edge, letting it unfold. She cautiously completed gravity's job with her other hand, finding the other side of the waistband. She held them out in front of her and her eyebrows changed to mild amusement. \"Sexy,\" was her only statement.\n\n\"Uh, no,\" I said in revolt. They were far larger than any I'd ever seen.\n\n\"3XL. Want to keep these?\" she asked with arched eyebrows.\n\nMy answer was to hold out the wastebasket toward her.\n\nShe dropped them in. I took the basket out to the driveway and emptied it into the trash cart.\n\n\"This has to have been a mistake, Dawn. Wrong address or something,\" I said when I came back inside.\n\n\"Your name was on the label, but whatever,\" she said, chuckling.\n\nI dismissed the whole event, until I returned home the next day.\n\nMy wife was standing in the middle of the kitchen with yet another package in her hands. \"I tracked this one myself. This one's from Flint.\"\n\n\"Flint? Michigan?\"\n\nShe nodded.\n\n\"Just throw it out, Devo. I don't even want to know.\"\n\n\"Then I'll open it.\"\n\n\"No!\" I barked a little more aggressively than I intended.\n\n\"Will? Are you trying to hide something?\"\n\nI'd backed myself into a corner. \"Oh, okay, fine,\" I surrendered. Whether either of us knew what was inside the box was irrelevant. The mere arrival of it stood on its own.\n\nDawn's eyes held mine as she pulled the strip through the end. She waited a moment before she looked inside.\n\n\"Well, there's a note,\" she said, removing an envelope identical to the one before. She untucked its flap and withdrew a piece of parchment. She unfolded it while watching me, then turned her eyes downward to read. \"The rest of the set. Love, from Michigan.\"\n\nShe peered into the cardboard box, cautiously removing its contents.\n\n\"Hmm,\" she said, unfolding a brassiere which appeared it could have matched the discarded item from the day before. She unfolded it.\n\nMind you, Dawn is a rather petite woman standing five feet two inches tall, weighing perhaps a little more than a hundred pounds, and wears a size 30/32B bra. She'd been a 30A before she became beautifully pregnant with our son.\n\nI also knew from watching her when she'd pack for a trip that each cup of one of her bras could hold an entire carefully-folded one if it didn't have wires. When she held up the garment before me, I imagined that one could hold half her lingerie drawer.\n\n\"Looks like you've got a fan,\" Dawn said, then turned out the label on the very wide band. \"48F. You have a big fan.\"\n\nI remained quiet. I almost slapped myself when I thought what I thought.\n\nThe thought sprang to my mind that a nicely-designed and stylish bra of that size could look rather nice on a curvy, voluptuous woman, but not that overly-utilitarian sixty's-vintage boulder-holder Dawn had hanging from her pinkies. I wondered how her dainty little fingers could support the weight of the thing that had to have weighed pounds considering the amount of metal in its underwires and its box-staple sized clasps.\n\n\"Toss it, please?\" I begged. \"I have no clue what's going on. No... shred it. Yeah! Shred it!\" I begged, pointing toward the door to the study where such an appliance capable of destroying polycarbonate DVD-ROMs stood ready.\n\n\"Okay, fine,\" she said, and started walking.\n\n\"No! That'll destroy the machine!\" I said when I realized it might happen.\n\nShe tossed it into the garbage bin in the kitchen.\n\nI tried to dismiss the whole thing, but it actually kept me awake late that night.\n\nI knew there'd be no surprise the next day, because it was Sunday, and that shipper didn't deliver on Sundays. That single fact gave me at least enough solace to avoid an entire night of insomnia.\n\nAfter Sunday Lunch, we decided to take our kiddo to the park. It was going to be pretty hot, so we dressed as light and loose as we could, knowing our pool would be available to cool in when we returned.\n\nBefore we left, Dawn asked, \"You know what might be fun on a day like today?\"\n\n\"Tell me, Babe.\"\n\n\"We should fill a bunch of water balloons and use that booby-sling to fire them at the kids at the park. They'd love it as warm as it is. One of mine might fire tennis-ball sized ones, but that one could catapult big ones,\" she said.\n\n\"Jeez, Devo!\" I sighed. \"Would you please, please stop?\"\n\n\"I will if your big fan stops,\" she said.\n\nI only groaned.\n\nWe spent about an hour at the park, enjoying watching Aaron scramble around the splash pads.\n\nWhen we returned to the house, we lounged around in our own backyard pool sipping ice-cold Arnold Palmers. Iced lemonade and tea? Whodathunk such a combination could be so refreshing and yummy.\n\nI tentatively came home Monday, expecting another delivery. I'd arrived before Dawn. Her aunt and uncle (who lived in the guest house we built for them) greeted me with our son. We spent a good hour in conversing as I prepared dinner for four and a half. I knew Dawn would be about two hours later than usual due to her \"first Monday of Every Month\" pattern.\n\nHer aunt and uncle, whom she'd always thought of as parents since she'd been raised by them, equally considered our son to be their grandson instead of a nephew of distant order. They absolutely adored our child, and took incredible care of him while his mother and father worked.\n\nNo package had arrived.\n\nNo package arrived the entire week, and I began to hope the whole thing was over.\n\nBut no.\n\nNo.\n\nI'd signed up for advance notification alerts with the shipping company that'd delivered the prior two parcels. Their service ensured I'd be alerted to any delivery sent to my home address.\n\nYeah. I received a text on Saturday of a package to be delivered the following Monday.\n\n'Why won't this whole business just stop?' I thought to myself.\n\n\"Devo, another something is coming,\" I told my wife.\n\n\"Will, you need to figure this out,\" she cautioned me.\n\nI logged in and noted that the package had originated in Detroit.\n\n\"Oh, god,\" I mumbled.\n\n\"What, Baby?\"\n\n\"This one was shipped from... uh... \"\n\n\"Where?\"\n\nI couldn't answer because my throat was too tight.\n\n\"What secret are you hiding?\" Dawn asked. \"Where, Will?\"\n\n\"Dawn, please believe me. Nothing happened.\"\n\n\"Why are you being so elusive?\"\n\n\"It was shipped from Detroit,\" I answered.\n\nI noticed her eyes flicking between mine, and her rapid blinks.\n\n\"Detroit? You were in Detroit three weeks ago.\"\n\n\"Yeah,\" I sighed. \"Baby, I have no freaking clue!\"\n\n\"Yeah, I'm sure you don't,\" she dismissed me. \"Now come to bed.\"\n\nI tried, but I couldn't respond to Dawn's initiation of intimate relations. I was simply too distracted.\n\n\"Devo. God. You don't believe me, do you,\" I whimpered, laying naked but limp next to her.\n\n\"I do, Baby. You're such a hottie it wouldn't surprise me if you have women throwing their undergarments at you in every port.\"\n\nI sighed. \"It weirds me out, Honey. I'm seriously spooked.\"\n\nShe gave me a soft kiss then turned out all the lights.\n\n<hr>\n\nJuly 14, 2020\n\n\"Devo, I love you. Only you. You know that, don't you?\" I asked, just having put our kiddo to bed.\n\n\"I do, Baby.\"\n\nShe held yet another yellow cardboard envelope out to me.\n\n\"Also from Michigan,\" she said.\n\n\"Figures,\" I groaned.\n\n\"Open it, Will.\"\n\n\"No, Dawn, I don't want to! It doesn't. Mean. Anything!\"\n\n\"Do it.\"\n\nI took the envelope from her.\n\nI slowly stripped the cord and looked inside.\n\n\"What's in there?\" she asked.\n\nI didn't answer. I just pulled the red ribbon I saw first. It was looped through another piece of parchment paper sans envelope, and the ribbon continued into the package.\n\nI read the paper.\n\n\"Happy Fourth Anniversary, Baby,\" I read the message aloud.\n\nI was surprised Dawn didn't offer any rebuttal, considering our anniversary was almost seven months away, and I tried to think of any other person for whom that date might have held significance. I came up blank.\n\n\"Whoever is sending this stuff doesn't know what they're talking about. Our anniversary isn't until February.\"\n\nThe ribbon continued, and what came with it shocked me again. It was another pair of panties. Not granny-panties. Size small. Briefs. Cotton. White. I recognized the brand.\n\nI heard a subtle jangle in the back of my mind.\n\nDawn was watching me carefully.\n\nThe memory crept from the back of my mind and slammed into the inside of my skull at my forehead.\n\nI clutched at the soft, tiny undergarment and closed the distance between my wife and I, quickly embracing her in my arms as she began to laugh.\n\n\"What the hell, Devo?\" I whimpered.\n\n\"You remember?\"\n\n\"God, yes! July 14, 2016, Bluefire Grill. Lexington, Kentucky.\"\n\n\"And now you're my husband. I love you so much, Will,\" Dawn sighed into my chest. \"I thank God every single day that you didn't just look the other way when I gave those to you four years ago.\"",
        "\"No, Baby. No,\" I whispered, my eyes moistening in joy at the recollection of the gift she'd given me that night to reveal, very, very overtly how attracted she was to her friend of decades. It was the moment that began a series of events in the first chapter of our together-lives.\n\n<hr>\n\nJuly 20, 2020\n\n\"Hey,\" Dawn whispered into my ear. \"Do you remember what I was wearing exactly four years ago tonight?\"\n\nI wordlessly nodded. I'm sure I wore a knowing grin.\n\n\"Well. As soon as you give Aaron a bath and get him to bed, you can see if what I'm wearing tonight brings back even more good memories.\"\n\nUnlike the night weeks earlier, I had no problems rising to the occasion as my wife and I celebrated. It was a milestone couple of weeks those years before, when we finally had been open, honest, and wonderfully intimate with each other. Our careers and, well, yeah, probably a lot of mutual stubbornness kept us distant from each other even though were were only arms-lengths apart.\n\nMy beautiful wife ran her hand through the hair on my chest.\n\n\"Devo, what the heck did the granny panties and the rack-sack have to do with all this?\"\n\nShe laughed easily.\n\n\"You had no idea, did you,\" she giggled.\n\n\"I've seen all your pictures from before we met. It's impossible you were ever that... large.\"\n\nShe smacked my hip with a slap before she laughed. \"Will, come on, Love! It's called a dodge. A misdirect. I wanted to get your mind doing cartwheels just like you did to me in San Jose last year. But I think mine was better.\"\n\n\"Oh, crap!\" I laughed. \"Yeah! I had no earthly idea! I really thought I'd scored a stalker!\"\n\n\"You did. It was me. I bought those first things from a vintage costume shop, packed them all in the shipping boxes, then packed them all together and sent them to a place in Michigan that then shipped them to you on a specific timeline.\"\n\n\"Wow. You put a lot of effort into it!\"\n\n\"Would our lives have turned out differently if not for that night?\"\n\n\"What do you mean?\" I asked.\n\n\"You were a dirty man.\"\n\n\"Ack!\" I barked, feigning a stab to my chest. \"You wound me!\"\n\n\"Yummy dirty. I mean, what if I'd worn a thong that night instead, and you saw a whale tail?\"\n\n\"The way you were bending over? I might have left my seat and flossed that gorgeous little butt of yours with it,\" I chuckled. \"You know I like them when you're wearing yoga pants. That is an entirely different story.\"\n\n\"You make me feel beautiful when you say things like that,\" she whispered.\n\n\"You don't need to hear it, do you? You have to know that you are the most beautiful woman that's ever walked the face of the planet, don't you?\"\n\n\"Of course I need to hear it from you. Only from you.\"\n\n\"I love you, Devo. Happy weirdo anniversary.\"\n\nShe laughed so hard that she snorted.\n\n\"You are the most bestest part of me. I love you, too, Will.\"\n\n<hr>\n\nI hope you enjoyed this brief \"whale tail!\"\n\nIf you haven't read it yet, It Only Took Twenty Years is the origin story of Dawn and Will."
    ],
    "authorname": "WillDevo",
    "tags": [],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/look-the-other-way"
}