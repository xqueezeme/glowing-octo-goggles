{
    "title": "Jackie Makes Things Right",
    "pages": [
        "It had been a very long time since the last really good sex for Jackie. What was the guy's name? Oh, yeah. _Brandon._ Spring break Brandon. Miami Beach Brandon. Nice, thick, seven-inches-of-delectable-hardness Brandon.\n\n\"Mmmmm,\" was Jackie's unconscious response to the memory as she idly flipped through the pages of the current _Vogue_ in her tiny Atlanta apartment to the soundtrack of _E! News_ on her TV. The pictures of haute couture clothing passed before her unfocused eyes, and the latest celebrity mama drama faded to mental white noise as she went to Miami Beach in that part of mind where this yummy memory resided.\n\n\"You like it when I lick your clit, don't you, Jackie?\" Brandon had said, raising on his elbows to look at her with gorgeous, deep brown eyes that she loved gazing into. He was lying on his stomach between her splayed legs, the thumb of one hand tugging back the hood of her clitoris to expose the pink, erect point of pleasure where his tongue had seconds before been lapping insistently. She was reclining against the headboard in her hotel room. \"You like being eaten, don't you?\" he grinned, his middle finger sliding up and down the slippery folds of her pussy lips.\n\nThe pseudo-anonymity of spring break, the knowledge that the next day everyone would go back to Whatever U., and no one would have to answer for previously unthinkable shared intimacies with strangers made spring break flings possible. That and plenty of tequila shots.\n\nBut Jackie had never experienced anything like what Brandon had done to her the evening before with his cock and so far that night with his tongue. It was only midnight. What else would he do?\n\nShe wanted to find out, and knowing that neither of them would ever see the other again vaporized the normal barriers, the normal embarrassment of such actions with people met only the day before. She smiled at him, reaching her hands to her hardened nipples, and rolled and tugged on them shamelessly before she answered.\n\n\"You lick pussy great, Ace\" she said, using the nickname she'd heard one of his friends call him earlier in the day. \"Damned right I love it. So don't stop!\" she giggled, releasing one nipple to reach a hand to the back of Brandon's head and push his face back to her crotch.\n\nHe resumed his delightful task. The brief break interrupted Jackie's closed-eyes experience of pure pleasure while Brandon's tongue worked its magic, and now she gazed at the smooth globes of his pale, muscled asscheeks contrasting against the ruddy darkness of his tanned back. He slid a finger inside her. He sucked her distended clit back into his mouth and raised up, reaching a hand beneath his torso to readjust his cock. Jackie saw the muscles in his glutes flex with the movement.\n\n_Damn!_ she thought. Brandon was a hell of a stud. Too bad he had turned out to be such a perv.\n\nAnd that thought brought Jackie back to her current reality, back to the sad state of her love life and its post-graduation succession of inept lovers and/or jerks. Back to her post-graduation life in Atlanta, her job doing copy editing on a neighborhood newspaper, and her modest--\u2014very modest\u2014--living quarters as she whiled away yet another evening alone.\n\nIf only she knew then what she knew now about the difficulty of finding men good at sex, perhaps she would not have written off Brandon so quickly. Maybe he was a party boy, but wasn't everybody on spring break? Maybe he was a little arrogant about being a stud, but didn't he live up to his own reputation? Maybe he was from Minnesota where no one sane lived during the winter even though he said he loved it, but couldn't he be persuaded to move?\n\nAnd maybe, just maybe, that last night in a Miami Beach hotel room, she should have done what he asked her to do after his skillful oral manipulation of her pussy and clit brought her to an intense, satisfying climax.\n\n\"You want me to what?\" she had said, thinking she must surely have misunderstood Brandon's request.\n\nLooking up after rolling the condom down his stiff cock, he raised a knee over the mattress and prepared to position himself for a classic missionary humping. \"Slide your finger up my ass when I'm fucking you,\" he said, his hard cock bobbing as he jostled onto the bed. \"Use some of that lotion on the nightstand.\"\n\nShe didn't do it, and his cajoling only distracted her, spoiling what would have been a great fuck, if Brandon's performance the night before was any indication.\n\nWhy had she been such a prude?\n\n\"Eeeewww,\" said her best friend Melanie as they drove back to Atlanta the next day. \"That is so gross!\"\n\nTabitha spoke up from the back seat. \"Did he go down on you?\"\n\n\"What's that got to do with it?\" Jackie asked, looking in the rearview mirror at the junior who lived across the courtyard in their apartment complex next to campus. Tabitha's money added into the trip's pot meant the two close friends had been happy to bring her along in spite of not knowing her that well.\n\n\"Was he good at it?\" Tabitha pressed.\n\n\"He was fucking great at it,\" Jackie said, looking at Melanie and laughing.\n\n\"So there you go,\" said Tabitha nonchalantly. \"Any guy who eats me and is good at it--\u2014good enough to make me come\u2014--can get me to put my finger up his ass any day, any way. Hell, if he's really good at it, I'll lick his asshole, too.\"\n\nJackie and Melanie had just looked at each other. They didn't have to say a word to know what the other was thinking: Freak. Tabitha was freaky.\n\nMaybe because her best friend felt the same way Jackie did, Tabitha's comment was a non-factor and did nothing to prompt any thoughts that penetrating the male ass was anything but disgusting. So the forbidden zone\u2014--a guy's asshole--\u2014remained off Jackie's radar for fantasies as well as for the frustratingly few sexual encounters she'd had since graduating last spring.\n\nSo Jackie had not given it much thought after that. She was open-minded about most things sexually (well, some things, mostly), but sticking her finger in a guy's butthole? No way, Jos\u00e9. Wasn't gonna happen.\n\nBut, what if . . .\n\nAt that moment the words, \"Craig Ainstock\" broke through her mental musings, and she looked at the TV, always interested in seeing this newly anointed sexiest man alive. One of _E!'s_ anchors was talking about the paparazzi's just-published photos of Ainstock's romp in the surf with his latest squeeze, and those pictures were displayed on the screen.\n\nJackie was happy to play voyeur to the photographer's \"candid\" shots (surely these things were staged, right?) The setting sun cast the right mix of shadow and illumination on Ainstock's lithe yet muscular body. His board shorts were down just far enough to tantalize with the hint of firm glutes rounding out as the material of his shorts clung to his cute butt under the spray of water he was kicking up.\n\nIt was a very short mental step for Jackie to imagine Ainstock nude, his naked ass on display for her. It would be muscled, but not too much\u2014--just enough to be firm yet still delightful for grabbing and squeezing.\n\n_That's it, darling Craig,_ she thought as what she saw on the TV screen prompted the poses she wanted to see of this gorgeous man in the nude. _Oooh, yes, very nice like that. You have a beautiful cock. Can you let me see how big it gets when you stroke it?_\n\nAnd then the next story flashed into rotation, Anchordoll Two took over from Anchordoll One to ooh and aah over a different celebrity couple. Jackie sighed, disappointed that there wasn't an interview on the beach with Ainstock. That would have been nice fantasy material, too. He would, in her imagination, be naked on that beach as he spoke to her.\n\nSuch was the incongruous nature of Jackie's sexuality. She delighted in the visual aspects of sex, of seeing men naked, and that made her very much a modern woman. Modern women realized that they _were_ turned on by seeing attractive naked men and that it was _not_ \"inappropriate\" to think of sex in terms other than romance novel euphemisms. Twenty-first century American women college grads had grown up in times that made access to most sexual interests relatively easy (except, thankfully, for the exploitive crap like bestiality and child porn).\n\nMale strip clubs? On occasion for Jackie, the modern woman. No-strings sex? Definitely, when the opportunity arose but the guy wasn't long-term material. Role-playing? She would consider it, though the opportunity hadn't thus far presented itself. Porn videos for women? She had a modest collection (not that much good stuff out there, after all), and she enjoyed watching them as she played one of her vibrators across her nipples and clitoris during especially arousing scenes. _Playgirl_? Not a subscription but the occasional purchase with a thank-you-yes-I-look-at-the-pictures smile when handing the clerk her credit card. Internet sites showing naked men with hard cocks smiling into the camera, even masturbating? Jackie had a few favorite sites bookmarked (though, again, not that much good stuff out there that was meant for a female audience). A threesome? Well, maybe . . ..\n\nSo why not finger-fucking a guy in the asshole? Go figure, but Jackie had always steered clear of even thinking about it before Brandon's surprise request. Her conversation with Melanie afterwards reinforced her attitude toward the activity, and the occasional mention of it in the \"Letters\" section of _Playgirl_ or on a web site was easy to skip without a second thought.\n\nAt least until several months passed without any sex near as good as she'd experienced with Brandon that first night. What if he had wanted to stay in touch, maybe visit her in Atlanta after graduation? What if he turned out to be a decent guy? What if she had done things differently that evening? Would the fucking have been even better than the night before? \n\nThe questions nagged at her.\n\nJackie's education was launched with those questions. A week later, in spite of clubbing with a group of co-workers over the weekend, the only upcoming dates on her calendar were with guys she knew she would never sleep with (but whose money would pay for a very nice meal at a nice restaurant in exchange for a good-night peck on the cheek after which she would feign a wicked headache from the wine at dinner). \n\nFrustrated, Jackie spent one night with a vibrator and the DVD _Miranda's Search_ from her collection, then a second night in a soothing bubble bath, her fingers roaming over her breasts, belly, and gently massaging her hardened clit. Her thoughts drifted to Brandon's luscious cock as her fingers became more insistent. What if? What if on that second night in Miami with him, while he was humping her the way he did the first night\u2014that first, glorious, satisfying night\u2014she had done what he wanted? Lotion on her finger. Sliding her hand between his muscular glutes and into the valley between his firm flanks. Then, god . . . touching it. His asshole. Working the tip of her finger inside . . .\n\nShe allowed herself a small, teasing orgasm, then rinsed and rose from the tub to step onto the thick rug in front of the mirror in her small bathroom. \n\nAppraising herself in the mirror, Jackie struck different poses after toweling herself dry. Sandy hair, green eyes, workout-toned body, she was proud that she had never put on the \"freshman 15\" pounds in college. Thrusting her tits forward, nipples protruding with a satisfying hardness, she lifted her B-cup breasts up and forward, offering them to the reflection in the mirror. _I am hot,_ she thought, turning to a side pose and running her hands down her ribcage and onto her hips. Arching her back and shimmying slightly to make her firm tits jiggle in a manner she knew would drive a guy wild, she nodded approvingly. _Very hot._\n\nSo where were the guys who would appreciate this body by being damned good in bed?\n\nMoist from her orgasm tease, Jackie drew on a robe, went into her bedroom, and sat down at her computer. Typing \"anal sexplay\" into the search engine, Jackie hit \"Enter\" and was immediately presented a dizzying array of possibilities.\n\nMaybe it would be easy to figure out Brandon's kink.\n\nJackie started web surfing at 9 PM, and even though the clock on the computer advanced minute by minute, hour by hour in her peripheral vision, she couldn't stop reading through the accounts from blog posters about how thoroughly they enjoyed asshole play and how they did it.\n\nThere certainly seemed to be a lot of people into it, both men and women.\n\n\"The first time he asked,\" one woman posted, \"I was grossed out. But he promised me that I would _love_ a gentle asshole massage\u2014--no entry, just a sensuous and light caress to relax me. He wanted me to find out how much the asshole is an erogenous zone if you let go of your hang-ups.\"\n\nThis sounded like someone who had taken a very different course of action than Jackie had taken with Brandon.\n\n\"He let me know that he wasn't asking to do it because he was kinky or into weird scatalogical activities. He wanted me to experience as much pleasure as he could give me. So I let him, and let me tell you, it was fuckin' great. I felt like a queen when he played with me there. It was sexy in an intimate, naughty way, and it felt wonderful.\"\n\nJackie's thighs unconsciously pressed together as she continued reading, moving to a different description, this one from a woman describing the first time she put her finger up her boyfriend's asshole.\n\n\"So I did what he wanted. I had absolutely no idea what would happen or how it would feel up inside him. It was tight and warm and a real power trip to actually penetrate him. Not a power trip like I wanted to dominate him or anything, just a feeling of being able to cause and control his pleasure like that.\"\n\n_Jesus,_ thought Jackie, _this is way different than how I've thought about it._\n\n\"Maybe he didn't tell me on purpose, but when he came from the handjob I was giving him at the same time, his asshole spasmed and gripped my finger\u2014--gripped and released, gripped and released, just like I know my pussy does around his hard cock when it's buried to the hilt inside me and I have one of those intense orgasms that feel so good. That just blew my mind! My man was taking my finger inside him and I could feel his orgasm in a way I'd never felt it before. It was incredible!\"\n\nThat description moistened Jackie's pussy.\n\nAfter riffing through a couple more confessionals on the web site, both of which fell into the \"fuckin' great!\" category, Jackie's sexual discoveries about the male anus and the way women use it blasted into completely new territory.\n\nBefore tonight, the thought of women doing men with strap-ons . . . well, that was so far beyond a finger in the ass during a BJ or fucking that Jackie didn't even have a frame of reference for the possibility. She'd probably seen or heard mention of such a thing in a magazine or a blog somewhere along the way, but it must have created the same reaction for her as seeing an article about quantum physics: nothing except an automatic, uninterested focusing of her attention on something else.\n\nYet, tonight . . .\n\n\"I had wanted her to do it to me for so long, but I was always afraid of what she'd think. Finally, though, I got up the courage and just blurted it out one night after we'd made love and both had great orgasms. I guess I figured that was as good a time as any. And I gotta tell you, it was a completely different response from her than I expected. She said she'd do it! A couple weeks later after the strapon arrived from the online store where we bought it, I was naked and face-down on the bed with my ass up and my beautiful wife behind me, dripping lube between my flexed open cheeks (lots and lots of lube, we found, is a very good thing). When she slid that strapon inside me, it felt every bit as good as I had been fantasizing about for years. After a little bit of getting the hang of it, my wife was soon really stroking into me, withdrawing, and then plunging the strapon back in all the way to the bottom. She grabbed my hips and really started fucking me, and I could tell by her breathing that she was heading to a climax just like I was. She came with a yell, and that pushed me over the edge. I spurted buckets, and she collapsed on top of me, the strapon slipping out in the process. We lay panting like that for a couple of minutes, trying to focus on anything but the stars in our heads brought on by that first, incredible time when she screwed me in the ass.\"\n\n_Damn!,_ thought Jackie, _what must it have been like for that woman, her man naked in front of her like that? Talk about a doggy style role reversal . . ._\n\nFingers up the guy's ass when he came. A strapon cock harnessed onto a woman's crotch in order to fuck her guy in the asshole . . . and then coming as a result of doing it. These were things that Jackie was starting to see in a whole different light.\n\nWith her new interest, she went ahead and clicked on some of the hotlinked videos on the pages she was surfing. Most were . . . interesting, but not her cup of tea\u2014--too much \"Take my cock, bitch!\" stuff where the women weren't really into it as a means of bringing themselves and their men to orgasm but were on some kind of power trip/BDSM-type of thing.\n\nBut there were a couple that warranted more than only a single viewing, especially when she somehow clicked through to a site purporting to be \"FOR WOMEN BY WOMEN WHO LOVE STRAPON-FUCKING THEIR MEN.\" Jackie immediately bookmarked the URL.\n\nOne video was a 3-minute clip from a DVD that the site was selling. _Allison and Jeremy, Vol. 3_, was most assuredly a title she would add to her collection:\n\n\"Ummmm, baby, you look so hot like this, naked in front of me. I like that your cock is really hard,\" said the woman in the video, fully clothed in office attire, her auburn hair stylishly up in a manner that communicated professionalism keeping tight rein on smoldering sensuality. \"Let me see that pretty hard cock bob around in front of you when you move. You know that excites me.\"\n\n_Oh, my,_ Jackie thought, watching the action in the frustratingly small frame on her computer screen, _he does look sexy moving around with his hard cock bobbing in front of him like that._\n\nThe woman then reached out and grabbed the guy's erection, wrapping her fist around it as she smiled at her naked male. She turned and led him by his cock to their bedroom as the camera followed. \"I've been eager to get home to you, hoping so much that you'd already be back from your conference by now and waiting for me naked like you said in your email yesterday. It was a tough day dealing with clients, and I thought about our playtime tonight more than once right in the middle of a meeting. Why don't you help me with my strapon?\" she said, releasing him and standing expectantly at the foot of the bed. \"You know where it is, don't you?\" she asked with a sly grin.\n\nThe guy in the video was really hot. He had a tanned, toned body, and the camera caught the sexy way his asscheeks moved as he walked to the chest of drawers in the room in order to open a drawer and pull out a dildo and a harness. \"No, Jeremy. Why don't we try the other one in the drawer tonight?\" the woman said, shaking her hair loose behind her and then unbuttoning her teal-colored silk blouse. She drew the bottom of the blouse out of her black skirt.\n\nThe guy stood nude, strapon and harness in hand, a puzzled look on his face. \n\n\"I love seeing my strapon slide into you,\" the woman said, shrugging off her blouse, \"and if it's the longer one I bought last week as a surprise for you, then I'll get to see that happening even more, don't you think?\"\n\nThe woman had placed one hand on the bed to steady herself as she lifted a leg behind her in order to slide off one of her shoes. She was looking at Jeremy naked in front of her, his cock hanging heavy between his legs. He was still frozen in place after hearing the words, \"the longer one . . ..\"",
        "\"That's right,\" the woman said, reading his face as she removed the other shoe. \"Get the new toy I bought us out of the drawer. It's probably under a scarf or something.\"\n\nThe guy was actually swallowing hard, his face ashen, and he was nervously shifting his weight from one foot to the other\u2014--all the while completely nude, with the camera unflinching in its appraisal of every inch of him in the full frontal shot.\n\n_Now this is my kind of video,_ thought Jackie, her moist pussy experiencing a rush of warmth. She unconsciously slid a hand to her crotch, slipping it easily under her robe to place a fingertip on her hardening clit, pressing there and squirming a bit underneath the delicious sensation.\n\nThe guy turned around hesitantly, laid the dildo he had originally pulled out on top of the chest of drawers, and then rummaged in the drawer to find the other.\n\n_Mmmmm,_ thought Jackie, _yeah, that's nice, Jeremy. Very nice. Love your butt. Great story. Willing to please your woman. Willing to take the one she wants you to take---_\n\nJackie drew in a breath when she saw what he had extracted from the drawer. It was indeed larger than the first one. Not overly large but, oh, it looked so satisfying\u2014--what, maybe the size of Brandon's gorgeous seven inches?\n\n\"Yes, baby. That's the one,\" purred the woman, now reaching behind herself to unclasp her bra. Her tits spilled forward, with her long, hard nipples speaking volumes about her arousal. \"I am so very much looking forward to this.\"\n\nThe guy's expression registered an endearing nervous grin. Jackie would have grabbed him in a tight hug, pressing her tits hard into his chest, and slid her tongue into his mouth in a passionate kiss if somehow he had materialized in her bedroom at that instant.\n\n_Damn, would I love to get my hands on him_, she thought, her fingers now more insistently working on her distended clit.\n\nThen, disappointingly, the video clip moved forward through brief snippets of the action that followed: the guy on his knees in front of her, sliding the harness up her legs; the woman slipping the dildo into place on the harness; the guy's mouth on the fake cock as the woman stroked his hair and whispered, \"God, you don't know how hot it makes me to see you doing that, babe. Oh, I'm gonna fuck you so good tonight\"; the woman again wrapping her hand around the guy's dick, this time leading him to the bed with HER cock bobbing sexily as she positioned him on all fours, head down and ass up, on the mattress; a very arousing visual of her behind him, phallus protruding proudly from her crotch as she snapped back the lid on the bottle of lube and drizzled liquid at the top of his ass crack and then using her finger to advance the liquid toward his exposed rosebud.\n\nAnd then it ended with only a few seconds of, first, a woman's-point-of-view shot showing the tip of the dildo entering the guy's crinkled opening as the liberated, lusty brunette said, \"Ummmm, sexy, babe, so very sexy. I love seeing you take my cock,\" and then, in maybe the most erotic coupling Jackie had ever witnessed on a video (at least, after seeing the set-up that preceded it), the woman's lovely breasts jiggling as she held onto Jeremy's hips and thrust into him, fucking him in a way that left no doubt she had done this many times before. For his part, Jeremy squirmed back against her to take her cock deep, emitting a low man-growl of pleasure before huffing out in a masculine voice the only words he said during the entire videoclip:\n\n\"God, you're gonna make me come so hard, babe. I love it when you fuck me!\"\n\nJackie played the clip three times because she knew with no doubt that seeing the woman give it to him with her strapon was just what she desperately wanted as the view in front of her eyes when she crashed head-long into a major, quaking orgasm.\n\nWhich is precisely what happened. The orgasmic aftershocks rippled through her nipples and her pulsing pussy as her eyes glazed over staring at the empty black frame on her computer screen where Allison had just fucked Jeremy in the ass.\n\nAfter a few moments of recovery, Jackie stood to stretch. She noticed the clock in the system tray of her computer display: 1:21 AM.\n\nShe had been surfing for over four hours!\n\nNot caring much\u2014--her boring job doing copy edits tomorrow was sleep-walk work anyway--\u2014she nevertheless marveled at how time had telescoped down into what seemed like minutes instead of hours that evening. Shuffling to the bathroom to brush her teeth, she wondered what it all meant.\n\nHer just-earned B.A. in Psychology\u2014--a major reason her first post-graduation job was copy-editing for a small publication, the demand for psych graduates being less than overwhelming--\u2014meant she did a little self-examination with a psychological bent:\n\nIs my current fascination with doing it to a man in his asshole something that has been bubbling in my subconscious ever since Brandon? Maybe longer? Have I always subconsciously wanted to do this but wouldn't give myself permission, and that's why I was consciously so repulsed by it for all these years? Did I have some \"playing doctor experience\" when I was a little kid that I don't consciously remember but that I repressed strongly because I was caught in the midst of an anal exploration with a playmate and severely punished?\n\nOr am I just turned on by the idea of man-fucking?\n\nStill musing as she turned out the light and settled into bed, Jackie drifted to sleep, wondering if she would have a really good dream before morning's light.\n\nShe did. It started just as the videoclip had started, but she was the woman, not the actress portraying the female protagonist. However, Jeremy morphed into Brandon in short order.\n\nShe awoke, horny, tired, and hungry. \n\nThe tired and hungry would wait. The horny would not. Back to the computer, back to the bookmark, back to the video, and, as before, Jackie had a satisfying orgasm watching Allison fuck Jeremy in the ass. The frustration, though, of knowing she was seeing only teaser excerpts that didn't allow her to truly be there in her imagination with Allison and Jeremy quickly convinced her not to delay her purchase.\n\nShe ordered the DVD as the last thing she did before leaving for work, and the three-for-the-cost-of-two offer made it easy to get Volumes 1 & 2 in the _Allison and Jeremy_ series, as well.\n\nHer self-education about anal play, man-fucking, and strapons continued over the next days and weeks. She graduated to discovering that men had something analogous to her own G-spot (at least in terms of a hot button inside them that was reachable by a partner's fingers or a well designed toy). Jackie's fascination with everything related to the idea of penetrating a guy in a sexual role reversal created a depth of research that would have rivaled graduate study about the mind-fuck that was the whole strapon experience from a male perspective. The psychological allure was described in numerous blog postings from guys who tried to explain why the act was such a turn-on for them.\n\nThat part was fascinating. Her background in psychology drew her to the guys' explanations of why they were so aroused by being sexually penetrated by a woman. She quickly took it for granted that the men posting these explanations all thought it felt great (reason enough to engage in any activity). But the mind-trip they took as they anticipated being taken seemed to layer itself on top of their physical pleasure, and the combination took them places they all swore they would never get to otherwise. She learned a great deal about the psychological attraction of being taken in the ass by a woman from Bill, a blog denizen posting a typical comment:\n\n\"I don't know what it is. Part of it must be connected to some kind of crazy thrill I get from the embarrassment of it all. I guess I get turned on by being 'forced' to do this really embarrassing thing connected to the woman seeing\u2014--and using--\u2014a part of me that you're supposed to keep hidden (I'm not talking about forced like a BDSM-thing; it's more like, 'Oh please don't make me do this because it's SO embarrassing, but I truly hope you DO make me do it.'). That is just a crazy, intoxicating mix of emotions. Then there's the idea of 'being naughty, being bad on purpose' that I find erotic somehow. I mean, showing my asshole, exposing myself like that\u2014that's something you get spanked for as a little kid, right? (Hmmm, am I into sexplay spankings, too?) Finally, there's the anticipation of hoping that she WANTS me to show her my asshole because it turns her on to know that I will surrender it to her, but not knowing for sure if I'm going to get her hot, and dreading that she WON'T be turned on and WON'T do me. When she does take control and lets me know in no uncertain terms that she's going to fuck me because she's hot to do it and wants to make herself come as a result, I get this great big relief inside that quickly turns back into anxiety because she IS going to fuck me in the ass. What a roller-coaster ride! Like I said, it's hard to explain. All I know is that a woman who pushes all these buttons along the way to finally bending me over, spreading me open, and plunging her strapon deep into me in order to fuck me as a way to get herself off\u2014--well, that woman is a sex goddess to me. In fifteen years of having these feelings, I've found only one sex goddess, and I married her.\"\n\nJust as intriguing for Jackie were the women's explanations, which were hot and arousing in ways the men's descriptions could not duplicate (the guys could never know how it felt as a woman to take a man, to fuck him as the one doing the penetrating\u2014--a complete turnaround of all the cultural conditioning of woman as receiver). The women's posts talked about things like how intimate the act was, how much they adored that their men would\u2014--literally and figuratively--\u2014open up to them like that during lovemaking. The women intimated that the symbolic act of surrender by the male (no, they didn't use that language, but Jackie's psychology filter translated it that way) was as big a factor in making them crazy with lust to fuck their men silly as any other single aspect of the act. Having the power to give a man an orgasm by penetrating him, by being inside of him and driving him crazy BECAUSE he had surrendered and opened up to them in a way that involved total trust was powerfully erotic and addictive for many of the women.\n\nContinuing her self-education was a given. It was a fascinating and truly enjoyable erotic curriculum for Jackie.\n\nShe enjoyed all three volumes of the _Allison and Jeremy_ series immensely. She found that the production company affiliated with the by-women-for-women site sold other top-notch fantasy material for women who wanted to probe the male asshole as well as the male psyche. Though her love life continued on a rather rocky, unfulfilling pathway, her fantasy love life grew prodigiously in scope and variety.\n\nBy now she was beginning to understand the attraction the act held for so many people, and she wondered if she would actually find a guy who would go for it. Her regular dating life, though, had been turning up a series of losers who were either quickly discarded after only a couple of dates as way too into themselves or complete jerks or both, or who were simply not worth the investment of time to find out if they were good in bed. Frustrated, she continued on the lookout for quality men who might actually be a pleasure to date, to get to know, and ultimately, to have sex with.\n\nAt the same time, she also continued indulging herself, tutoring herself, enjoying herself with stories, blog postings, videos, and just good ol' clit-frigging fantasizing about what it might actually be like to finger a guy during a blow job or to feel the back end of a fake cock strapped to her crotch press into her when she squirmed against some guy's naked ass, giving him a thorough screwing that would launch her into a royal orgasm. \n\nIt was inevitable that she would eventually find the site with the associated blog where she saw the posting.\n\nAn immediate tunnel-vision sensation momentarily disoriented her when Jackie read the words written by \"mpls_ace\":\n\n\"I've always loved it when a chick slips a finger up my backside when I'm pumping away on top of her. I can't really put into words why or how, but it feels fantastic. The first girl who did this to me was into piercings, tattoos, and scoring 'righteous weed,' so I guess I shouldn't have been surprised that she might be a bit, um, 'adventurous.' (And how the hell I ever hooked up with her is still a mystery to me.) But she really opened my head to some new experiences. For sure. I've been lucky enough to find a couple other women who got into it, but most of the chicks I've had sex with just freak out when I even suggest it.\"\n\nJackie blinked hard, an ominous yet seductive tug starting at the back of her subconscious.\n\nMpls_ace continued: \"Like this one chick. Man, she was smokin' hot, and we hooked up during a great spring break trip. The first night with her was abso-fuckin'-lutely great. She was truly good between the sheets, and she was cool to hang out with, too. I would have liked to get to know her better. But the next night I guess I must have been overconfident about how she would react, and I asked her to put her finger inside me when I got on top of her. BIG mistake! She was not down with it, and things pretty much sucked (in a bad way) after that.\"\n\nThere. There it was, the tug again, and it broke from a subconscious nudge to full-blown recognition.\n\n\"Mpls,\" as in, \"Minneapolis.\" \"Ace,\" as in his nickname. Spring break. Two nights doing the nasty. The second night spoiled by the chick's aversion to doing what \"mpls_ace\" asked.\n\nBrandon!\n\n_Oh, my god!_ Jackie thought, her hand covering her mouth as she sat in front of the computer screen in her bedroom.\n\nShe stood up. Paced. Ran both hands through her hair, blowing breath through pursed lips and looking back at the screen in disbelief.\n\nJackie walked back to the chair at the little desk where her computer sat, but she didn't sit down.\n\nShe leaned forward and re-read the post. \n\n\". . . smokin' hot . . .\" \n\n\". . . cool to hang out with . . .\" \n\n\". . . would have liked to get to know her better . . .\"\n\n\". . . things pretty much sucked (in a bad way) after that . . .\"\n\nStunned, she eased back into the chair and started searching the site's blog posting archives.\n\n\"Mpls_ace\" had apparently discovered the site only a month or so ago, but he had made it clear in his several posts during that time that he loved the sensation of a woman's finger sliding inside him during sex.\n\n\"During a blow job is one of the best times to feel it,\" he said in one post. \"I've been lucky enough to have three different girls do it to me (and, trust me, I can remember the exact number and who they were because a girl making a guy feel that good means he will NOT forget her). I hope to feel it again\u2014--a lot\u2014--in the future. I'm working on it, and I'll find another girl into it, I know.\"\n\n\"Find me!\" was Jackie's mental exclamation. \n\n\"The last post was great,\" mpls_ace wrote on December 12th in response to a posting by a woman who was describing how, and why, she fucked her boyfriend. \"You wrote a great description of why it gets you hot to do a guy like that. Makes me want to try out being on the receiving end of a strapon one of these days.\"\n\n_No way!,_ Jackie thought, jumping up in excitement.\n\nFingertips trembling on top of the keys, she scrolled through all the posts, not wanting to miss any of the threads to which mpls_ace might have contributed. Doing so brought her to the bottom of the current month's threads, where she saw the \"post a response\" box just above the link reading, \"Need to register?\"\n\nShould she?\n\nConfused, excited, stunned, aroused, anxious . . . Jackie's reaction was an incredible mix of conflicting emotions.\n\nShe X'd out of the site.\n\nAFTER bookmarking.\n\nShe shut the computer down and went into the kitchen to fix a cup of hot tea.\n\nCurling up in her favorite chair with the cup of tea, Jackie blew across the steaming liquid to cool it down before sipping.\n\nMpls_ace. Brandon. What were the odds?\n\nShe shivered in spite of the steam rising from the cup held close to her face.\n\nRegister on the site? Post something to see if he responded? If he did, might he offer his email address? If he did THAT, would she contact him?\n\nHer thoughts ran away into multiple potential scenarios:\n\nHe would ask her immediately to get together.\n\nHe would call her a bitch and tell her to leave him the hell alone.\n\nHe would reply with a sweet yet sexy message that hinted he would love to repeat what they had done in Miami Beach.\n\nHe would say he was not interested in ever hearing from her again.\n\nShe remembered his gorgeous brown eyes, how she had loved looking into them. She remembered his laugh, his sense of humor. Then she remembered his body, his lovely cock, the way he had used it to give her the best orgasm she'd ever had with a guy.\n\nWhat if he didn't even respond to her post?\n\nAn idea came to her, and she rushed to her computer. However, no amount of searching\u2014--Facebook, Google, MySpace, anything\u2014--turned up \"mpls_ace\" as a term that connected to a site where Brandon (if Brandon and mpls_ace were really one in the same) could be contacted. Disappointed that she could not find him some other place on the web besides a site dedicated to strapon fucking and ass play, she slumped back in the chair at her desk.\n\nIt would have been so much easier to have found him on some (non-sex) site and then figure a way to explain to him in an initial email how she had \"stumbled\" onto his site. With her new knowledge that he thought she was hot and would have liked to get to know her better, and with her recently developed eagerness to experience man-fucking, Jackie could have continued in that initial email with something like, \"I've regretted many times that I wasn't more adventurous or open-minded that night,\" and gone on to smooth things over and maybe re-ignite their connection.\n\nBut the easy way was not to be.\n\nIt was after midnight by this point. With no other avenue available for contacting mpls_ace, Jackie knew what she must do.\n\nRegistering at the blog was quick and simple, but she spent time considering how to identify herself. Finally settling on, \"new2this,\" it was less than a couple seconds later that she was into the site with posting rights.\n\nShe typed: \"It's been a real education reading the posts in this blog. I'm new to the whole asshole-as-erogenous-zone thing, so the discussion here is helping me understand some stuff (and turning me on like nothing else!). As a woman who for her whole life has been grossed out by anything even remotely close to anal play (but who nonetheless absolutely adores sex!), I'm now really wondering what it would be like to--\u2014gosh, I can't even type it without blushing!\u2014--well, you know, wondering what it would be like to slip a finger inside a guy. There, I said it, and it got me hot.\"\n\nJackie had no idea where the ruse originated in her head. Of course she could type it without blushing. She could read about it without blushing. She could watch it without blushing. And she desperately wanted to DO it, during which time the only blushing happening would be that brought about the sexual flush of excitement that naturally causes things like engorged, extra pink pussy lips and a slight extra pinkness on her chest right above her breasts.\n\nShe went with the flow as she continued to type.\n\n\"And to the guys who have posted here about bad experiences with women who were clueless about what I've been learning and thinking about lately from reading this site and others, well, don't be so hard on those women. They were just ignorant. Some of them, with a little loving instruction, would probably turn out to be eager to fulfill every one of the arousing fantasies I've read here.\"",
        "Relieved but feeling guilty about the deception of portraying herself as an innocent newbie only recently having discovered the idea of doing a guy in his asshole, Jackie hesitated a moment before clicking \"Submit.\"\n\nWas she really doing this?\n\nHer finger tip eased down on the \"Enter\" key, and in a split-second it was too late to think anymore about whether she should or should not send her electronic note in a bottle into the virtual sea from which she was hoping mpls_ace would pluck it.\n\n**\n\nWaiting to see a reply from mpls_ace to her posting was enormously nerve-wracking for Jackie. Every morning she checked the blog. Two or three times a day she took a break at work to walk around the corner to a coffee shop with free wi-fi to check her laptop, anxious to see if a reply had come in (she did not want--\u2014ever--\u2014for the site's URL to turn up on her work computer). Every night she checked her computer as soon as she got home and then at least two or three times before going to bed.\n\nThis went on for five agonizing days.\n\nThen, on a Wednesday night right before she would have gone to bed, she saw it:\n\n\"Glad to hear that you've taken a more liberated attitude to pleasing a man in this way, new2this. Don't worry about it if the first guy, or the second or the third, doesn't go for it when you try to ease the suggestion to him. You'll find someone who'll adore you for doing it, I promise. There are lots of guys like us out there.\"\n\nJackie's stomach did a flip-flop reading the words that mpls_ace had posted.\n\nThe clock on her computer's system tray read \"11:26 PM.\" She checked the time stamp on mpls_ace's post: \"10:57 PM.\"\n\nHe might still be at the site!\n\nBecause she had waited through five long, anxious days, she had prepared a response ahead of time. Indeed, she had re-written the response maybe a dozen times. Now it was easy to quickly type her message.\n\n\"Just saw your words of encouragement, mpls_ace. I have actually been in a situation where I spoiled the evening when a guy asked me to put my finger inside him. That was before I became more curious and accepting. (Guess reading this blog is a pretty good indication of my change of mind, huh?) Anyway, I will take your advice and see if I can eventually find a partner who wants to let me try to take him to sexual highs doing the things I've read about on this site. I'm worried, though, about being inexperienced and saying or doing something foolish as I try to become a good lover in this way. Though I've had my share of sex (not enough of it really GREAT sex though!) and guys tell me I'm good-looking and they like having sex with me (and I don't want you to think I'm out there with tons of different guys, because I'm not), I'm still just in my mid-20s and haven't had any experiences with guys who were adventurous like that tattooed lover who was the first one for you to, well, um, you know.\"\n\nAfter a quick read to ensure she had correctly typed the message she had so painstakingly composed, Jackie was satisfied that her email said what she had rehearsed in her head so many times. Her writing and re-writing of the message in the previous days resulted in just enough information to let him know she was a good lay (without saying it like that) and hot. The careful wording, though, also played up the novice-who-wants-to-try-this angle, adding the implication that she was still so embarrassed about doing it but so turned on that she couldn't NOT do it. Jackie thought that might be a big turn-on for Brandon.\n\nShe waited. She got up and paced, coming back to look at the screen every few seconds to refresh. She chewed her lip in--\u2014what?--\u2014worry? Excitement? Fear? Sexual anticipation?\n\nShe stamped her feet in frustration. \"Come on. Please come on!\" she said under her breath.\n\nThen it popped up after a screen refresh.\n\nHis reply.\n\n\"Before every other unattached guy reading this blog makes the offer, new2this, what if we pretend we've just had the equivalent of an online, 5-minute speed-dating encounter and that now the woman can decide if she wants to ask the guy to call her. I know that the internet can be a creepy place, though, so I'll send you an email using the anonymous messaging feature to let you know how to find my Facebook page. Check me out, and if you're interested, email me.\"\n\nAnonymous messaging? Huh?\n\nJackie immediately searched the site. In her eagerness to join after reading that first post from mpls_ace, she hadn't really read through the terms and conditions, and she hadn't really checked out other things the site offered. She totally missed the site's ability to let members send anonymous feedback to other members. Brandon (god, please let it be him; after all this, let it be him!) could use the feature to send her an email and in the email include his contact info.\n\nOf course. This protected site members from having other members get their email addresses.\n\nWhen she navigated back to the postings page, mpls_ace had signed off.\n\nDamn!\n\nShe re-read his suggestion, though, and realized she needed to check her email. NOW!\n\nHer inbox had one new message. It was his.\n\n\"Please believe me, new2this, when I say I've never done anything like this. You know, offering to get to know someone better after meeting them on the internet. And god knows that I'm REALLY nervous about this, about what you might think of me, given the subject matter of the blog. But I'm hoping that since you've been on the blog you're at least not turned off by what I've said there AND you'll understand that I'M new2this RE internet hookups. Anyway, don't hold it against me that I'm a typical male, interested in meeting a good-looking woman who's interested in sex. But if you go to my Facebook page and learn more about me (and, yes, the pictures are recent, and they are actually of me) and want to talk some more online, I'd like the opportunity to learn more about you.\"\n\nWell. The message definitely did not create the impression of a leering internet sex-addict looking to lure a woman into a one-night stand (or worse). There was something about it that Jackie interpreted as sincere, as decent.\n\nIn spite of the fact that both of them knew that he wanted her to slide her finger deep inside his asshole, and she wanted to do exactly that. Repeatedly.\n\nHe left information about how to find his site, which did not involve the string of letters, \"mpls_ace,\" in any fashion.\n\nJackie wasted no time going straight to mpls_ace's personal web presence. She was incredibly anxious to find out if it really was Brandon.\n\nThere it was\u2014--his picture.\n\nBrandon.\n\nAn exhalation that had been building for five days whoosed from Jackie's lungs, and she sagged into the chair in a mixture of exhilaration and exhaustion. She was a tightly strung wire from which the load had been released, and she did nothing for several minutes except smile to herself and gaze at the first photo which had come up on Brandon's Facebook page.\n\nIt was him!\n\n**\n\n\"Yeah, I live in Atlanta,\" Jackie typed several days and numerous email exchanges later with Brandon. \"I like the South, the weather and the laid-back feel here. But this is a big city, too, and there are cool things to do, like the annual jazz festival that I love to attend.\"\n\nTheir email interchanges had gone well. Jackie was alert to verifying the things she had already known and liked about Brandon (including the picture he'd posted of last summer's day at a beach somewhere with friends for a barbeque; he was definitely the Brandon-body she remembered). She also learned new things about him, things she liked: plans for an MBA in order to be well positioned for a faster rise in the business world, a shared love of Diana Krall's husky vocals and killer jazz piano skills, that he liked to cook several different kinds of dishes.\n\nHe seemed to like that she was an intellectual who was comfortable with a good novel or non-fiction title but who also enjoyed an action flick at the movies or a half-hour spent wall climbing at her local gym.\n\nThey purposefully stayed away from the thing they already knew the other was into.\n\nIt took only a few days, though, before Brandon asked what Jackie knew he would ask: \"Can you email me a picture?\"\n\nIt was the moment she dreaded because, after the few days of discovering more about him, she was REALLY starting to like him, especially knowing what she already knew: beautiful brown eyes, muscular yet lithe body, good sense of humor, skilled with his tongue and his cock. And that cock\u2014--it was beautiful, delicious, and he knew exactly how to use it. God, after all this, she was tempted to employ some ruse that would guarantee the continuance of their online relationship even if it meant making things harder to explain in the future.\n\nKnowing that his request for a picture was inevitable, Jackie had thought a great deal about what to do when Brandon asked. One strategy would be to send a photo of someone else, then hope he would still be interested enough to meet her.\n\nThat would clearly not work. He would surely feel tricked when\u2014--if--\u2014they finally met. She had already disappointed him once in Miami Beach. Tricking him would not make things better, no matter how famously they might have hit it off via email conversations.\n\nShe knew she had to be up front and honest. That being the case, the best picture would be one Melanie had taken of her in Miami Beach. Brandon would recognize the setting because the shot was in front of the club where Jackie had met him. At least she looked really good in the picture, and the sexy outfit she was wearing probably had something to do with why Brandon approached her later that night.\n\nShe had also considered what the email should say. As with her written and re-written response put together ahead of time in case he answered the post she had put up on the blog, this email, too, was crafted very carefully. She revised it after every email exchange they had, trying to add or tweak based on the totality of information she had about him at that point.\n\nIt became harder and harder to re-write it after each exchange because she was truly enjoying their relationship and communication. The last re-write before his request for a picture was at the ready in the \"Brandon\" folder on her computer. She pulled it up, copied it, and pasted it in:\n\nBrandon, here's the picture you requested. I can't even begin to say how much I hope you still want to write to me after finding out that I'm Jackie from the wonderful time we had together during Spring Break in Miami Beach. At least, it was wonderful until I ruined it, and you'll never know how many times I've kicked myself for being such an idiot that second night with you. I've learned a lot since then, though, and your comments on the blog where we met gave me courage. You'll also never, ever know how much I hope that I will get the chance not only to resume our physical relationship, but to continue getting to know you. What I've learned about you since we began emailing makes clear that there are many, many reasons I want to spend time with you besides desperately wanting the chance to make you feel really good in exactly the way you want me to. It is the very least I can do for someone who is such a fantastic lover and who absolutely blew my mind, giving me the most intense orgasms I've ever had. Please write me back. ---Jackie.\n\n_Please don't let this end it,_ Jackie thought to herself as she attached the picture to her email and hit \"Send.\"\n\nThen she waited.\n\nFor two days she waited, thinking the worst. Scared to death it was over.\n\nHis email finally came. When she opened it, though, there was nothing in it, and the email didn't even have a subject line.\n\n\"Shit! Shit, shit, shit, shit, sh-i-i-i-i-t!\" she screamed, knowing he had sent a very clear message by NOT sending a message.\n\nThen she noticed the attachment.\n\n_Probably a picture of him giving me the finger,_ Jackie thought glumly.\n\nHopes and desires completely dashed, she clicked open the image.\n\nIt was a picture of two tickets to the Atlanta jazz festival and a plane ticket reading, \"MPLS to ATL.\"\n\nJackie blinked, the image momentarily confusing her.\n\nThen . . . FANTASTIC!!!!!\n\nShe breathlessly, immediately replied to Brandon's email with one word: \"Yes!\"\n\n**\n\nHer excitement at getting his email meant Jackie missed the implications of what Brandon had done until she had finally calmed down the next morning after a near sleepless night spent thinking about all the possibilities of resuming an in-person relationship with him. Over her morning bowl of cereal, though, she realized something about the picture he had sent. Those jazz festival tickets were not print-outs of an online purchase; they were real, bought-at-a-ticket-office tickets. And the same was true of the plane ticket\u2014--it was a ticket sold by a ticket agent behind a counter at an airport or bought at a travel agency.\n\nBrandon had worked very hard to arrange things. He had gotten in his car, driven around, spent money, (maybe even having to order the concert tickets over the phone, with the ticket agency overnighting his purchase to him), and then laid out the tickets on his desk in order to take the picture with his digital camera and email the photo to her. For that matter, the tickets were for seats way better than the seats she had, so she knew they cost a lot of money\u2014she had actually inquired about that section of seating on the grounds of the park where the concert was held when she bought two tickets months ago (hoping that by the time the concert came around she'd be seeing a guy she would like to take to the concert). No matter now; she'd give her tickets to Jane, one of her friends at work.\n\nBrandon was very eager to see her!\n\nJackie's extreme desire to make things great between her and Brandon, coupled with a near desperate horniness to do what he wanted done during sex, meant that she went into high gear on numerous fronts. It was only two weeks until the jazz festival.\n\nHer after-work gym visits would be extended. Though she stayed in great shape anyway, two weeks of extra work and cutting back on carbs even more than her regular diet already did would mean she would be in fantastic shape to be seen nude by Brandon. \n\nHair. She arranged the salon visit for a couple of days before he would arrive. It would give her time to tweak the styling if she needed to.\n\nMake-up. Jackie arranged an in-home visit by a make-up artist one of her friends at work had recommended. Her friend said the professional's recommendations about make-up, as evidenced by the make-over given as part of the visit, created a dramatically new, sexy look for her. Jackie wanted to see if a new look might add even more sex appeal to her features. Combined with a new 'do, she would look fantastic.\n\nOutfits. Everything she wore during Brandon's three-day visit would be selected specifically to accentuate her best features, to look great on her, to cause Brandon to be proud of the hot woman he was with.\n\nIt would stretch her meager copy editor pay, but it would be worth it.\n\nBut the most fun, the most arousing preparations involved getting ready to explore Brandon's snug, warm asshole with her fingers and with a strapon dildo. That she would also be playing with his gorgeous cock, feeling it inside her as he stroked her to a killer orgasm, well, that in itself was enough to make her randy beyond belief. Their re-meeting place\u2014--a blog about man-fucking\u2014--assured all of it, though--\u2014all of the various kinds of sex they would have, including the nasty, erotic, mind-blowing, first-time-for-Jackie sexplay that she knew was going to make her a basket-case of exhausted satisfaction with a man who might turn out to be THE ONE.\n\nHer online education meant she had long since decided on the dildo she would get--\u2014a feeldoe--\u2014and the harness was also chosen based on multiple recommendations from women posting about their choices for man-fucking equipment. But now there was a reason to go ahead and buy everything she would need. The next-day delivery charge was worth it, and Jackie bought TWO bottles of an anal lube that had been recommended by several women, all of whom agreed with the saying that \"too much lube is just enough.\"\n\n_Oh, my, oh, my, my MY my my,_ thought Jackie the first time she slipped the bulbous end of the feeldoe dildo into her pussy. It felt so good in multiple ways. The delicious, filling sensation was wonderful, and the little ridges strategically positioned for clitoral stimulation were a thoughtful, arousing enhancement. \n\nShe looked at herself standing before her bathroom mirror, the phallus extending from her crotch, held securely by the muscles in her pussy walls. The recommendations she had read about the feeldoe all advised a harness when fucking as insurance that it stayed in place, but for gentler action\u2014--like giving the man a visual he would never, ever forget the first time he saw his woman sporting a deep purple erection\u2014--harness-free activity was a delight.\n\nJackie agreed, standing before the mirror and moving this way and that to see what effect the motions had on the cock sticking up from her crotch. It felt . . . certainly good physically, but good somehow psychologically, too. The power trip explanations in women's descriptions of why they enjoyed strapon fucking their men immediately came to mind the first time Jackie moved around with a hard-on. It broadcast her ability to penetrate her partner, to be the one going inside of him. In that instant, the erotic allure of donning a strapon to become the one with the large, erect sex organ who would use it to fuck her partner's surrendered orifice became crystal clear for Jackie.\n\nWhat a rush! It felt fuckin' great!\n\nShe left the dildo in place and practiced walking around a bit, seeing it bounce in front of her and adjusting to what she needed to do with her pussy to grip the end that was nudging against her G-spot. \n\nOh, it felt REALLY fuckin' great.\n\nShe wasted no time heading into her bedroom to lie back on the bed, legs hanging over the side, and grasp the base of the shaft sticking out of her pussy. She began to handle the fake cock so it caused an internal message just the way she liked it. Some of the women said they used the feeldoe to masturbate . . .\n\nThat thought prompted her to pause her self-pleasuring for a moment and retrieve one of the bottles of lube. She poured some into one palm and coated her cock. (By now, in an amazingly short time, the dildo had become \"her cock.\") Excited, she walked back to the bathroom, enjoying her rapidly increasing facility in moving with the dildo, and again looked at her nude body in the mirror. This time, though, she stroked HER COCK the way she had seen countless guys in videos do it, sliding her fist up and down the stiff shaft. \n\nWhat would Brandon think when he saw this? It sure as hell was turning Jackie on to see it. The sight plus the sensations inside her pussy really revved her up. Knowing she would be back in front of the mirror to practice, right now it was impossible to do anything but head back to the bed, re-position herself as she was before, and resume masturbating. Getting used to the dildo and how to use it for her own pleasure were going to be very, very important. \n\nWhen she fucked Brandon in the ass, she wanted to bring herself to a blinding orgasm. The act itself, even completely divorced from any physical sensations, would be incredibly arousing and a total psychological rush. But being practiced at moving in ways that intensified her physical, sexual pleasure meant she would be able to double-dose on the supremely erotic nature of the act.\n\nJackie blew into the first orgasm unexpectedly. The thought of seeing him in front of her on all fours, spread open, with the dildo sliding deep into his asshole pushed some kind of automatic trigger that meant even a little physical stimulation would have brought on an orgasm. Added to the incredible sensation of the bulb end of the dildo bumping against her G-spot as she manipulated the end protruding from her crotch, the mental image set off sizzling fireworks. ",
        "She screamed in pleasure at the surprisingly intense orgasm which had so quickly been triggered that it caught her totally off guard. Curling into a fetal position as wave after wave of spasms coursed through her body, she panted in an effort to simply stay conscious.\n\n_Shit! That was beyond incredible,_ Jackie realized, finally coming back to her senses enough for a coherent thought to form in her head.\n\nIf doing herself with the dildo caused that kind of orgasm, what would it be like to do Brandon with it?\n\nThe rest of that evening was lost to anything else except learning to handle HER COCK in the ways she wanted to use it with Brandon. She slid the harness on, buckled in after slipping the protruding end of the feeldoe through the hole in the triangle which would be situated against her crotch, and noted with satisfaction the way it anchored the dildo in place. She turned sideways to the mirror and gazed at the reflection, imagining Brandon on his knees in front of her, his mouth on the end of the dildo as he gazed up into her eyes and slid his lips down the shaft until he backed off before gagging.\n\n\"Brandon, baby, you'll learn to take more of my cock down your throat for me, won't you?\" she would ask, stroking his hair.\n\nStill sideways to the mirror, she practiced the thrusting motions she would use when fucking him in his asshole. Women posting comments about the fine art of man-fucking were pretty much in agreement that it took a while to get the hang of fucking WITH a cock instead of fucking by TAKING a cock. The dildo was still slick with the lube, and she wrapped both hands around it, one fist on top of the other to form a tight tunnel. Holding her hands in place, she moved her cock in and out of her grasp.\n\nYeah, that felt really nice. It looked sexy, too, she realized, watching in fascination as the muscles in her hips worked, causing the side of her butt to contract sexily and round backwards slightly on the in-thrust before relaxing on the out-thrust. She could see the way her tits jiggled with the movements she was making. Nice! Her thrusting motions also verified the descriptions she had read of how man-fucking with a dildo like the one she was stroking into her fists could cause such pleasurable sensations. When she thrust in, the bulb's seating against her G-spot lessened dramatically. This sensation would happen at the same time as seeing the shaft of the dildo sink into her man's asshole. Then, as she backed out, the front side of the bulb nudged strongly against her G-spot, creating a fantastic feeling. When stroking repeatedly, the pressure-release-pressure-release on her G-spot became a massage that she could control by the way she stroked the shaft in and out of the tunnel she was making with her fists. \n\n_Oh, my god, this is gonna make me come again!_ Jackie realized, watching herself in the mirror as she started to become more adept with the motions. The climax hit within about 30 seconds of the first thrust.\n\nFalling back onto the lid of the toilet after the second orgasm of the evening blasted through her, Jackie caught her breath. Out of nowhere came a thought that made her laugh out loud: _Didn't even last a minute\u2014--guess now I understand that whole 'premature ejaculation' thing!_\n\nThe rest of the evening was spent fine-tuning, practicing, teasing herself into a series of small, almost-orgasms in order to build up to the one she wanted right before going to bed. That one was going to be off the hook, she knew. She was quickly mastering this new technique and toy, but she hadn't yet REALLY taken them into fantasy-land where a naked, eager Brandon would be waiting for her, his stiff cock pointing skywards in obvious desire to be taken.\n\n\"Jackie, you look . . . I don't even know how to describe it,\" he would say the first time he saw her with HER COCK bobbing sexily in front of her. \"Every fantasy I've ever had of the first time a woman takes me is absolutely nothing compared to this. You look incredible!\"\n\nMoving toward him slowly as the dildo inside her squirmed against her G-spot, she would reach out, grab his hard cock in one hand, and look into his eyes. \"Baby, your fantasies are about to come true. I'm going to bend you over in front of me on your hands and knees and then push your shoulders down to the mattress. Then I'm going to spread your naked asscheeks wide apart and tell you to open up to my cock. And when I see your cute little asshole beckon me inside, I'm going to put the tip of my cock right in the center of your hole, and I'm going to push it slowly, insistently into you until every last millimeter is buried inside you. Then you're going to reach back underneath and grab your cock because I want you to jack off while I'm fucking you. When I know I'm going to come from stroking into your tight, hot asshole, I'm going to tell you to spurt your load so I can have my own orgasm at the same time.\" She would lick her lips, then put her other hand on the back of his head to pull his face to hers, sealing her lips to his mouth and kissing him deeply, passionately. \"Can you handle that?\"\n\nJackie exploded into her final orgasm of the evening as her mental avatar spoke those words to fantasy-Brandon.\n\n**\n\nHe would arrive on a Thursday night, having taken off from work on Friday (as would Jackie), and he would return to Minnesota on a Sunday night flight.\n\nThree nights. Jackie figured that meant a natural, exciting, build-up peppered along the way with pleasures that would be outrageous in their own right.\n\nOn Thursday night she would pick him up at the airport by taking MARTA from the stop close by her apartment complex. She considered driving to get him, but then thought of the hassle of parking at the airport and navigating the always congested Atlanta freeways. Too, dealing with the excitement of seeing him and knowing what was going to happen that weekend would probably cause her to miss her exit, take a wrong turn, or rear-end somebody on the drive home (she giggled at the thought because, yes, she WOULD be rear-ending somebody that weekend).\n\nBut the thought that driving meant she would not be able to snuggle next to him, to feel his body next to hers on the way back to her apartment, was the deciding factor. True, MARTA's light rail cars did not create a romantic setting, but at least she could look into Brandon's eyes as they talked.\n\nShe could whisper naughty things into his ear, too.\n\nMARTA it was.\n\nShe especially appreciated that Brandon had asked if he could stay at her place while he was in town instead of at a hotel because he wanted to cook a couple of meals for her. They would go to the grocery store so he could buy the ingredients to make dining at her apartment a wonderful experience. That would not be possible at a hotel.\n\n_He wants to pamper me,_ Jackie thought. A satisfying warmth coursed through her body. He was demonstrating how special she was to him.\n\nShe would demonstrate how special he was to her.\n\nJackie planned to really push Brandon's buttons during his visit. Her self-education in the pleasures of man-fucking had been thorough, lacking only the \"field work\" part of the research. Her psych degree had come in handy, helping her intuit things that posters to the blogs she read weren't always good at saying. She came to understand how powerfully erotic the idea of surrendering control could be for a man but how vulnerable he realized he would be in that state. There was a trace of alluring danger in the mixture\u2014--a sexy cocktail which also included the visual stimulation of seeing the arousing incongruity of a nude woman wielding the unambiguous sexual means for going inside of his body AND his soul. Her time spent reading the descriptions, the explanations, the stories about men who derived sexual pleasure from opening and surrendering their assholes for their ladies' fingers, tongues, and strapon cocks would pay enormous dividends.\n\nShe watched the three _Allison and Jeremy_ DVDs again, even going so far as to slow-motion the action to discover the finer points of Allison's technique as she thrust into Jeremy's ass. Oh, yeah\u2014grabbing his hips for leverage; she almost forgot how hot it was to see Allison doing that as she screwed Jeremy. Jackie would love doing it to Brandon, guiding him back on her cock and then sealing her crotch against his ass in order to grind and squirm against his flanks so that the shaft buried inside him would nudge repeatedly against his prostate while the end inside her would press and rub her G-spot.\n\nShe would tease Brandon unmercifully, knowing he wanted her to do it. She would tell him what was going to happen, describe it in exquisite detail as she stroked his cock, and then ask if he really wanted her to do it. She would plumb the depths of his sexual fantasies to create the hottest, most gut-clenching moments of pure physical arousal ahead of a tease-stop-tease-stop torture that would build until he begged her to make him come by fucking his ass as hard and deep as she could.\n\nHer pussy moistened every time she thought of it.\n\nAnd during all of it she would love being with him, hugging him next to her as they walked to the concert, kissing him passionately as she gave up control to him, spreading her legs for him to stroke his hard cock into her pussy as she would stroke hers into his asshole before the weekend was over.\n\nHad any woman been in such a position before? Her guy had already admitted to her his most intimate fantasy--\u2014at the START of the relationship. What other woman had THAT? Jackie was going to spend the weekend with a man she already knew was great in bed, a man who wanted to be with her and who had already said he found her hot and sexy, and a man she knew wanted her to engage in a fantasy they both shared\u2014--for her to fuck him in the ass.\n\nHer situation gave Jackie the freedom to let loose, to become\u2014--at appropriate times\u2014--the one who would completely control the scenario, who would orchestrate the action, who would play on her partner's desire to be taken, to surrender, to take her inside him. And at other times she would delight in all the other ways she wanted to be with Brandon\u2014--the Hallmark-cards-chick-flick-love-story ways that two lovers spent time with each other.\n\nShe was falling in love with him.\n\n**\n\nThen it was Thursday afternoon.\n\nTHE Thursday afternoon.\n\nThe new hair style and tinting were perfect. The new make-up did an even better job of emphasizing the fact that Jackie was cover model material. Reinforcing the impression was her body, which was in the best shape of her life. She chose a snug pair of designer jeans matched with a top that was cut just right to display the cleavage created by the push-up bra she had bought specifically for Brandon's first look at her when she met him at the top of the escalator at the Atlanta airport.\n\nHer apartment was immaculate. Clean sheets would feel cool but comforting when they slipped between them that night. Everything was ready.\n\nHis flight was to arrive at 8:30 PM, but Jackie was already at the airport by 8:10, checking the big board in the terminal to verify (for what, the 30th time that day?) that the flight was on time. She sat for a bit on one of the many uncomfortable seats in the terminal, rose and paced for a while before returning to her seat, then went to the bathroom for a final check of her hair, make-up, top and cleavage, and then walked to the top of the escalator as the time approached when she would see Brandon appear among the throng of people rushing to cabs or baggage claim or into the arms of waiting loved ones.\n\nThere he was!\n\nBrown hair, handsome face, the gorgeous brown eyes she had never been able to forget--\u2014it was Brandon, all right. He was carrying roses in one hand and pulling his rollaboard in the other. He smiled when he saw her, releasing the bag to wrap an arm around her waist and pull her to him, kissing her lightly and saying, \"You look amazing, Jackie!\"\n\nRoses. A compliment. A hug and a kiss. Things were going to be wonderful.\n\n\"And you're the handsome guy I remember from Miami Beach, Ace,\" she said, smiling at him.\n\nLaughing, Brandon said, \"No one's called me that in a long time, but I guess I'm not surprised you remembered. It was probably what tipped you off to my 'nom de plume,' right?\"\n\n\"I'm just glad I found you, no matter how it happened,\" she replied, taking his arm and grabbing the extended handle of his luggage in order to roll it behind her as she guided him through the maze of people toward the airport's MARTA station. \"And roses! How did you get them to stay so fresh during the trip?\"\n\n\"I told the flight attendant I was bringing them to a very special lady and I wanted them to be as beautiful as she is when I gave them to her.\"\n\nJackie released his arm to take the flowers, stopping in front of the turnstile leading to the stairs up to the train platform. She leaned up to his face and kissed him, then whispered in his ear, \"But surely you didn't tell the flight attendant that your special lady had planned to be very, very naughty with you, did you?\"\n\nGiggling at his expression, she jostled his luggage through the turnstile, swiping her card across the reader, then handed him the card she had bought for him when she got to the airport. Once they were both on the other side of the turnstile, he took the suitcase from her to carry it up the stairs, grinning the entire time.\n\nSettling into the hard plastic seats on the train as it waited at the platform, the harsh lighting of the car at least illuminated Brandon's handsome features and made it easy to look into his beautiful eyes. Jackie snuggled against him and laid the flowers down on the seat next to her. She took his hand in hers, and said, \"Brandon, I want this weekend to be unforgettable for you. I want you to have the best time of your life, and I hope you'll like spending time with me. But you set any boundaries you want. I don't want you to feel any pressure about anything. I've screwed things up once before between us, and I'll not do it again. Deal?\"\n\nHe looked at her and smiled. \"A lot of that little speech is what I had planned to say to you, Jackie. The 'no pressure' part, especially.\" Turning in his seat to more easily look directly at her, he said, \"And I hope you have the best time of your life, too.\"\n\nA bedraggled businessman in a rumpled suit trundled his suitcase past them toward the suitcase stowage area of the rail car. Brandon lowered his voice a bit. \"And I know you've been curious and eager, what with your 'change of heart' and all,\" he said with a wry smile, \"to find out how it would feel to do what I asked that night in Miami Beach.\" Searching her eyes, he said the words that made her shiver with excitement: \"My boundaries are your boundaries, Jackie.\"\n\nShe held his gaze intently for several seconds, then kissed him passionately. \"Let's get to know each other better,\" she said, smiling as she gazed at his handsome face.\n\nThe train ride wasn't long, but at the end of it Jackie knew much more about Brandon than what they had talked about by email and then in their phone conversations after that. She was very much enjoying the discovery process.\n\nThey arrived at the door to her apartment. Turning the key, she ushered him in.\n\nSetting his suitcase to the side after she shut the door, Brandon took the flowers from her hand and laid them on the back of the sofa which was only a few steps away. Turning back to her, he swept her into his arms and embraced her tightly as he kissed her deeply, his tongue probing inside her mouth. He held the kiss, intensifying his hold on her, communicating in no uncertain terms his desire for her.\n\nJackie pressed into him, thrusting herself hard into chest, delighting in the sensation of her breasts trapped against him. She lowered one arm from its place wrapped around his shoulders as she returned his hug, and snaked her hand down his back to rest on one cheek of his ass. She squeezed his backside through the material of his khakis, noting with satisfaction the firmness of the muscular globe underneath.\n\nBreaking the kiss, Brandon looked into her eyes and said, \"I guess we've both thought about the fact that this point in our relationship is very different from the way things normally go between a man and a woman. What you already know about me is . . . well, a lot more than a girl knows about a guy on the first date after a spring break fling.\"\n\n\"Yeah, I have definitely thought about that,\" Jackie replied, her hand still resting on his butt. She squeezed again to emphasize the liberties she would take with him based on their knowledge of each other at this early point in the relationship.\n\nHe continued, moving his face to nuzzle into her soft hair, and said, \"But the fact that you know I am crazy in lust with you doesn't mean that I don't want to find out everything else about you, to really get to know all about you. I've been looking forward to this weekend for that reason, too.\"\n\n_Oh, my handsome Prince Charming, you are saying all the right things to make me crazy about you,_ thought Jackie. \"Mmmmm, Brandon, that sounds really, really good to me, too.\" She released her grip on his butt and stepped back just a little from his embrace. Toeing off one shoe, then the other, she walked toward the door of her bedroom to stand in the doorway, slipping the metal button at the side of her jeans through the buttonhole. \"Can we start learning everything about each other by letting me show you that I have made my pussy slick and smooth just for you?\"\n\nBrandon's fingers were instantly at the buttons of his shirt, undoing them as he walked toward her. \"That is definitely one of the things I want to find out about you, Jackie,\" he said, grinning.\n\nTheir lovemaking was incredible. Brandon began by palming her breasts with his strong hands, then tugging on her nipples in ways that produced tingles of electricity that coursed through her body. He sucked her nipples, releasing them regularly to move his mouth to hers and kiss her, whispering to her how hot she was, how much she was turning him on.\n\nHis gorgeous cock was rigid in mute testimony to his claims. Jackie delighted in running her fingertips across the plum-like head, feeling the velvety texture, then opening her hand to feel it pressing into her palm as she closed her fist around it. She slid her hand down the shaft, noting with satisfaction in some important corner of her mind that his cock was bigger than hers, that in spite of what she would do to him, Brandon would always be the man, the strong protector.\n\nHis cock slipped from her grasp as he scooted lower, trailing his tongue down her belly to her navel. Jackie was crazy with lust, knowing how good his cunnilingus skills were that spring break night and not having experienced anything like it since.\n\nShe actually whimpered with desire as he laid his hands on the V of her crotch and pressed outwards, indicating that she was to spread her legs open for him.\n\nThen he pulled back the folds of her pussy lips and lapped slowly and gently along the length of them, pausing occasionally to murmur a near inaudible expression about how good she tasted or about how soft her pussy lips were on his tongue. Then he pulled up the hood of her clit to expose the pink, engorged nub that was home to a bundle of nerves evolved for the sole purpose of sexual pleasure.\n\nHe sucked her clit into his mouth and rolled his tongue across it. Sealing his lips tightly around the moist slickness at the top of her pussy, he flattened his tongue and pressed it firmly against the distended and throbbing ecstasy point that was Jackie's clit. Then somehow he was able to start a slow, insistent, almost pincer-like manipulation of her clit with his lips and tongue. He was gently squeezing-releasing-squeezing-releasing in a way that created the purest experience of sexual ecstasy Jackie had ever experienced. ",
        "\"Oh, god, Brandon,\" she panted, her arms extended stiff at her sides, hands gripping the sheets tightly as a way to hang onto reality for just a few more seconds in order to let the anticipation build even more. \"That is driving me wild. Don't stop, baby, PLEASE don't stop doing that!\"\n\nAt that instant he put her clit into a velvet vise between his lips and thrummed it rapidly with the tip of his tongue.\n\nJackie arched her back as the orgasm hit, then thrashed her legs uncontrollably as she shuddered through orgasmic waves of pleasure so intense they took her breath away. Brandon slid his hands underneath her hips and pressed his face tightly into her crotch, not letting his tongue slip from the contact it had on her clit. At the exact instant when it became critical to back off in order to prevent the sensations from becoming unbearable, Brandon lifted his face from her crotch and slid up to embrace her, holding her tight against his chest as the final shudders of her orgasmic release dissipated.\n\nThrowing her arms around his neck, Jackie wrapped her body completely around him, pressing him tightly to her. Finally catching her breath, she let the afterglow of the orgasm spread into every cell of her body.\n\nThey lay quietly in each other's arms for a few moments. A tear of utter joy and happiness formed itself in the corner of one of Jackie's eyes and rolled down the side of her face. She brushed it away, hiding from Brandon the degree of her contentment and happiness in his arms.\n\nThat happiness made her want to produce for him the same kind of sexual ecstasy he had just produced in her. \"Baby,\" she whispered in his ear, \"I want my mouth on your cock.\"\n\nHe rolled to the side, and she quickly placed a hand on his erect dick. \"Ummmm, Brandon,\" she purred, \"the first time I saw this gorgeous penis, I wanted to explore it, feel it, taste it, and lick it like a lollipop until you came.\" She languidly drew her fingertips down the length of his hardness. \"I want to take it all the way down my throat. Right now.\"\n\nBrandon could only moan, his cock twitching in anticipation underneath her fingers.\n\n\"Sit up on the side of the bed,\" Jackie said, scooting off the edge of the mattress in order to get down on the floor. On her knees in front of the spot where she wanted him to sit, she said, \"This will be a better angle for me.\"\n\nIt was rewarding to see how hard and erect he was, his cock throbbing in anticipation. It looked like the best thing she could ever put in her mouth. In spite of her deeply satisfying orgasm of only minutes before, Jackie felt a warmth of blood rushing to her crotch as she watched Brandon swing his legs in place in front of her and squirm into position, legs splayed apart to offer her free access to his naked cock and balls.\n\nShe closed a fist around the base of his shaft and slipped the other hand palm up underneath his ball sac. Gently cradling the precious orbs in her grip, she used the other hand to slowly drag the underside of his dick across her bottom lip. She tongued him there, lubricating with a bit of saliva the area of his cock that she was rubbing across her parted lips. \"This is such a yummy toy,\" she teased, looking into his eyes as she held his cock in front of her pouting lips, with the tip of her tongue darting across the sensitive bundle of nerves right under the head of his pulsing dick. \"You're going to let me play with it this weekend, aren't you?\"\n\nHe was leaning backward slightly, arms stiff to brace himself as he watched what she was doing. \"You know I will, Jackie. My hard cock is yours, baby.\"\n\nThose words thrilled her, and Jackie immediately slipped the head of his cock between her lips, eager to fully experience the sensation of his hardness down her throat. Many of the descriptions she had read on the sites dedicated to male ass play\u2014--from both men and women--\u2014highlighted how fantastic it felt to have the guy's cock completely buried in the woman's throat when she finger-fucked him in the ass. Though Brandon wasn't in a position at the moment for Jackie to reach his anus, that was fine\u2014--she wanted to demonstrate her ability to deep-throat him as he watched.\n\nShe had practiced deep-throating a dildo, knowing from her reading that taking the guy's cock completely down your throat was one way to ramp up the intensity of the experience when burying a finger in his asshole. There was no taste of rubber now, though, as she slid farther and farther down Brandon's shaft. Remembering from spring break the size of his cock, she had searched a local sextoy shop to find something similar, settling on a realistic-looking fake cock of about the same length and girth. (There was no way she would forget his cock from spring break and what he did with it or where the end of it bumped against the inside of her pussy.)\n\nExcited at being able to demonstrate her cock-sucking skills for her handsome lover, she slowed her descent, adjusting to his size and calming the gag reflex as she had trained herself to do in the previous weeks with the fake cock. Finally having him completely down her throat, she sealed her lips briefly around the base of his cock and manipulated his balls slightly at the same time. He groaned loudly.\n\nKnowing she had to come up for air, Jackie backed off, slurping up the saliva created in the process, and popped his cock out of her mouth with an audible gasp. She sat back on her haunches, his cock and balls still in her hands and looked at him.\n\n\"Like?\"\n\n\"Goddamn, Jackie!\" Brandon exclaimed, squirming in her grasp. \"That was amazing. Just SEEING you do it can make me come, to say nothing of how it feels.\" He leaned forward slightly to run one hand through his hair and drew in a big breath. \"You're fantastic!\"\n\nSmiling, Jackie rose from her knees, releasing him in the process and stepped to the nightstand at the head of the bed. Opening the drawer, she pulled out the bottle of lube and said, \"Do you think it might feel even better if my finger were inside your asshole at the same time?\"\n\nBrandon's lips parted, and he drew in a breath of lustful anticipation. Jackie saw him shudder, which was incredibly exciting. What turned her on even more, however, was the slight blush that crept into face.\n\nWas he embarrassed? Did he not to want to admit his desire out loud now that he was here, face-to-face with a woman who would do what he said he enjoyed in his posts on the web site?\n\nJackie hoped at least a little of that was the case. His embarrassment aroused her.\n\nThough he hadn't seemed shy when making his request during spring break, maybe that was because he expected never to see her again, and therefore asking for such a nasty, naughty act was not something that bothered him.\n\nHe HAD said that his experience with anal play had been initiated by tattoo girl. Maybe the other two women who had done it to him had also not been prompted? This new thought turned Jackie on. Maybe Brandon was really ashamed to admit he wanted to be her assboy.\n\nGod, how hot was that!\n\n\"I was really surprised at how slick and silky smooth this anal lube is,\" Jackie cooed, holding the bottle a little higher than necessary above her cupped palm so Brandon would clearly see her drizzling it into her hand. The lube glistened in the light cast by the table lamp on top of the nightstand as it fell from the bottle top. \"It feels wonderful, baby. I have been eager to spread it on your cock and slide my hand up and down your hardness while I take this finger,\" and she rolled a finger of her other hand through the lube in her cupped palm after setting the bottle down on the nightstand, \"and slide it slowly inside your asshole.\"\n\nBrandon swallowed hard, his eyes wide watching Jackie coat her finger.\n\nHis engorged, stiff cock was throbbing, pulsing with the racing beats of his heart.\n\n_This is so-o-o-o-o hot,_ thought Jackie, settling back down on her knees in front of him. She grabbed his cock and slid the lubricant up and down the entire length of it, sighing in satisfaction at finally feeling Brandon's erection in her hand, knowing she was going to give him a hand job he would never, ever forget.\n\nShe pulled his cock toward her, making him stand up in a crouch at the side of the bed. \"Here, turn around and get down on your knees on the carpet and put your chest on the mattress,\" Jackie said, spinning out the directions she had planned ahead of time for stroking his cock while finger-fucking his asshole for the very first time. \"Spread your legs, too,\" she said, moving to the side of him. \"I want free access to everything, baby.\"\n\nBrandon laid his head on the mattress. Was that a whimper she heard?\n\nJackie released her grip on his cock, having lubed it thoroughly. Then, in an improvisation prompted by the reaction she interpreted as embarrassment, she said in a husky voice full of portent, \"Reach back and spread your cheeks open for me, Brandon. Show me where you want me to put my finger.\"\n\n\"Oh, shit,\" he mumbled into the mattress. At least, that's what it sounded like to Jackie. It was hot. But he did what she asked.\n\n\"Oooh, baby, I love it when you show me.\" She closed her fist once more around his cock. \"Have you ever shown it to anyone else?\"\n\n\"You're teasing me, aren't you?\" Brandon said out of the side of his mouth, straining to turn his head enough to look back at her.\n\n\"Absolutely. That will make it more fun, don't you think?\"\n\n\"God, Jackie, you are amazing!\"\n\nShe touched his asshole with her lubricated fingertip.\n\nHe flinched.\n\n\"There, there,\" she purred, resting the tip of her finger in the center of his hole, \"this will feel really good, baby.\" Jackie started circling his crinkled opening with her fingertip, stroking him there. \"Let me pet you for a while,\" she said breathily as she started to run her finger from slightly above his asshole then sliding it gently downward in order to stroke him lovingly all the way down to the spot just behind his ball sac. \"That feels good, doesn't it?\" She repeated her actions but now combined them with the movements of her fist up and down his hard cock, catching the pre-cum that was leaking from the head and mixing it with the lube coating his shaft.\n\n\"Tell me what you want me to do now,\" she said softly, continuing her petting and her stroking of Brandon's asshole and cock. \"But arch your back a little bit first. I like that. It makes it easier to see all of you.\"\n\n\"Please, Jackie, please do it now. I'm about to come!\"\n\n\"Do what, baby?\" she asked, stopping her actions on his dick in order to clamp a bit more firmly at the base of his shaft. \"What do you want me to do?\"\n\n\"Bury your finger in my asshole! Please!\"\n\nHer ministrations on his asshole and the copious amounts of lube she had deposited on her finger made the action easy and a total pleasure. Jackie watched in fascination as her finger slid into him, feeling the snug warmth envelope her digit as he gripped it with his asshole. She bottomed out, her entire finger buried inside him, and then she released her grip at the base of his cock in order to begin stroking him again.\n\nIt was a marvelous sensation. It was like she was playing some kind of strange, living, sexual instrument. She wanted to become a virtuoso at toying with Brandon like this.\n\nThen she wiggled the finger that was buried deep inside him, searching with the pad of her fingertip for the little knot she knew was his prostate. Tapping there very gently in the tight confines of his anal passageway, Jackie concentrated the strokes of her other hand on the top third of his cock, knowing the combination of sensations would force the ejaculation she wanted him to have.\n\nShe was eager to experience the sensations of his asshole spasming around her finger in time with the contractions of his cock that would force spurts of come to jet from the end of his dick.\n\nThat is exactly what happened. She had to lean down on top of his lower back to stay inside him as he released his grip on his asscheeks and groaned loudly when he came. The powerful contractions were thrilling for Jackie. She held her finger deep inside him, wanting to experience the gripping motion of his spasms along the entire length of her finger throughout the agonizingly time-protracted seconds of his climax. As the last spasm died way, she slowly and carefully extracted her finger, sliding gently out of him as Brandon moaned in utter, spent satisfaction.\n\nJackie reached up and pulled a hand towel from the still opened drawer of the nightstand. Wiping up the puddle of cum that had pooled in the spot where she had directed his spurts as she handled him, she folded the towel over and wiped off her finger and the palm of her other hand. Rising and walking to the bathroom, she washed her hands and rinsed out the towel in hot water, bringing it back into the bedroom in order to wipe off Brandon's twitching asshole, deflating cock, and all the areas where she had smeared lube.\n\nTossing the towel into the corner, she levered him up from his spot lying on his chest on the mattress, and pulled him into bed alongside her. He seemed almost drugged in a post-orgasmic high.\n\nWhispering into his ear as they settled against each other, she said, \"I still owe you that deep-throat blow job while I slide my finger inside you, lover.\"\n\nThey cuddled into each other's arm and were asleep within minutes.\n\n**\n\nJackie woke with two hungers, and so did Brandon. Hunger for breakfast had to wait, though, as his morning wood pressed against her thigh. She giggled, grabbed for his naked cock, and rolled him on top of her. \"Rub the tip of your cock across my clit,\" she said, reaching for the lube on the nightstand. \"Put some of this on my pussy to make me nice and slick.\"\n\nHe obliged, marvelling at the consistency and feel of the slippery liquid as he rubbed a glob of it over her clit and between her pussy lips. Then he positioned his cock so that it was lying in the furrow between the folds of her pussy and began to rub it up and down, the underside of his hard dick making contact as it slid up to her belly and back down again. Then he lifted himself from her body slightly, wrapped his fist around the base of his cock, and used it to direct the plum-like head back and forth across Jackie's aroused clit.\n\nIt felt wonderful to her. She hugged his strong shoulders as he continued teasing her clit with his cock.\n\nJackie's pussy was rapidly getting wet, and she could finally take no more action on her clit without also feeling him inside her. She rolled him over and straddled him, looking into his face and smiling. \"Good morning, Brandon,\" she said, rising on her knees and reaching back behind her to grab his stiff rod and point it skyward. She impaled herself on it, sliding down onto him easily given the wetness leaking from between her lips. \"I'm going to ride you to a fantastic wake-up orgasm,\" she said, adjusting his cock inside her. Then she began fucking herself on his lovely, stiff prick.\n\nBrandon put his hands flat on her ribcage underneath her breasts. She leaned against his hands comfortably, now situated with the perfect angle to bounce up and down, riding him like a jockey rides a thoroughbred stallion.\n\nHe was watching her breasts move up and down as she rode him, the taut, distended nipples jutting forward invitingly. She was stunning, and he curled upward in order to capture one of her nipples in his mouth, sucking on it greedily while she continued fucking herself on his stiff pole.\n\n\"Oh, yeah, Brandon, suck my nipples just like that. It feels fantastic,\" she panted, knowing that his attention to her nipples at the same time she was riding his cock would quickly push her over the edge. \"God, I love your big, hard cock, baby. I just love it,\" she said, her head thrown back in order to thrust her tits forward as much as possible, feeding him her nipple, giving it to him with utter abandon.\n\nThen the electric tingles started. They ran from the nipple he was sucking down through her belly and into her pussy, swirling around her clit before making the return trip to the nipple he was now tugging on between his teeth. \"Oh, baby, don't stop, don't stop. I'm gonna come. Please make me come!\"\n\nJackie jerked upright when her orgasm hit, pulling her nipple free from his mouth. Brandon flopped back onto the pillow and gripped his hands around her hips. He began slamming her up and down on his cock like a rag doll as the orgasmic spasms shot through her. Jackie's moans and climax noises spurred him on, and he grunted and pressed her down onto him, pumping powerful spurts of semen against her cervix and grinding into her in order to add even more stimulation to her clit.\n\n\"Unngh, ohh, ahhh, jeeez, Jackie, you are . . . you are incredible,\" he huffed, laboring the words out of his chest as his body allowed only that in addition to the intense orgasm he was experiencing.\n\nShe shuddered as the last waves of pleasure rippled through her. Rolling forward to lay against Brandon's chest, she breathed heavily and deeply as they entered post-orgasmic bliss together. For five minutes neither spoke and their breathing synchronized into a counterpoint of satisfaction.\n\n\"Gotta pee,\" Jackie said, rolling off Brandon, his softened cock popping from her pussy. She went to the bathroom and relieved herself, pausing in front of the mirror on the way back to check for bed-head straggles of hair sticking up and to swish a bit of mouthwash before returning to Brandon. He had turned on his side, propped himself up on one elbow, and was watching her pretty breasts jiggle as she walked the short distance back to the bed.\n\nShe crawled on the bed next to him, kissed him lightly, and asked, \"Hungry?\"\n\n\"For you? Yes. For breakfast? Yes to that, too.\"\n\n\"Good answer,\" Jackie responded, bounding from the bed and over to her closet. She wiggled her ass at him in the process, turning to look over her shoulder and say, \"I'll fix us some breakfast, and you can think about my cute little bottom while you get a shower.\"\n\nSo started Friday. It was wonderful. They went to the market later in the morning for the food Brandon bought to fix the meals he would prepare for them during the weekend. Jackie showed him around the tony neighborhood where she lived (smallness of her apartment notwithstanding) after lunch. They discovered more and more about each other during it all.\n\nDuring a mid-afternoon snack of cups of gelato as they sat at a small, round metal table on the patio area of the gelato shoppe, Jackie leaned close to Brandon. Looking into his eyes as she spooned a small amount of the cool treat into her mouth, she sucked the spoon clean and asked him, \"You were nice and tight last night, Brandon. Have you felt anything larger being slid up your asshole than just a woman's finger?\"\n\nHe choked on the little spoonful of gelato he had just deposited in his mouth. \"What?\" he sputtered, coughing to clear his windpipe.\n\nShe grinned conspiratorially, glancing around them quickly to ensure no one else was in earshot of her soft inquiry of him. \"You know, have you ever experimented? Maybe a butt plug?\"\n\nHe was caught totally off guard. He was speechless.\n\n\"It's okay. And I'm interested. It excites me.\" She continued looking into his eyes. \"Your posts on the blog made me think that you had . . . well, maybe you had tried to familiarize yourself with the sensations if you like them so much when a woman does that to you.\" She looked down at her gelato cup, spooned up some more of the pistachio-flavored concoction, and smiled at him expectantly as she first extended the tip of her tongue into the mound of light green refreshment on her spoon before slipping it between her lips and sucking it dry.\n\nBrandon put his cup and spoon down on the table. Still silent.\n\n\"I'll bet you're getting a little hard right now, aren't you?\" she asked him, her eyes not leaving his.",
        "He looked away, then back at her. \"I knew it would be really different with you, Jackie, getting together after what we did in Miami Beach and after you finding me talking about the things that are the subject of that blog. But it's really---\"\n\n\"Anal erotica, Brandon,\" she interrupted. \"You can say it. The blog is for people interested in things like finger-fucking a partner in the asshole\u2014--just like we did last night\u2014--and about why women like to fuck guys in the butt with a strapon dildo.\" She paused, holding his gaze intently. \"And why the guys like it.\"\n\n\"Holy shit, Jackie!\"\n\nShe smiled sweetly. Innocently.\n\nBrandon finally continued. \"Look, as I was saying, I knew it would be different with you because you know about my kinks already at this stage in our relationship.\"\n\n(He said, \"relationship,\" noted Jackie.)\n\n\"So I expected things to be, well, interesting on this trip. And, yes, it excited me.\" He scooted his chair a little closer to hers, the metal legs scraping against the concrete of the patio. Continuing in a lower voice, he said, \"But I still worry that you might think I'm here only because of that and---\"\n\n\"Because you'd like me to fuck you in the ass,\" Jackie whispered into his ear, resting one hand on his thigh below the black metal mesh of the table.\n\nBrandon rolled his eyes. \"You're not going to let me get through this until I have a full-blown boner, are you?\" he asked, a hint of exasperation coming through.\n\nShe gave him a \"Who? Me?\" look then smiled warmly.\n\n\"Here's the deal. Look at me right now and tell me that you understand I'm here as much\u2014--more--\u2014because I want to be with you, to explore the possibilities of 'us,' as I am for reasons related to our shared curiosity about, about---\"\n\n\"About me fucking you in the ass with a strapon,\" she interrupted again with a whisper close to the side of his head, grinning through her words. This time she followed the comment with a light nibble on his earlobe.\n\nBrandon threw his hands up in frustration, but Jackie quickly grabbed one of them in her own, looked into his eyes and said, \"I'm teasing you to make you hot, baby, but you've made me hotter than you'll ever know with what you just said. Yes, I understand that you're not just here to find a woman who'll play with you in a naughty way. I understand that you're here to be with me, and I love it. I truly love it.\"\n\nHis eyes softened. He leaned forward and kissed her on the lips, lingering there. When he pulled away he picked up his cup of rapidly melting gelato, pulled a dripping spoonful to his mouth, and said, \"And, no, a woman's finger is all I've had up there, but I'm dying to find out what it would feel like to take it to the next level.\"\n\nBrandon finished the gelato, put down his cup, and looked again at Jackie, who was sitting back in her chair, twirling a strand of hair behind her head and drinking in every detail of him, feeling like she was the luckiest woman in the world.\n\nThey teased each other like a couple of teenagers as they left the gelato shoppe and walked among specialty stores, coffee shops, clothiers and the like in the area. Before heading back to her apartment, Jackie detoured them to the bus stop. \"One more stop before we get back to the apartment,\" she said.\n\nBrandon shrugged his shoulders. \"You're the tour guide, Jackie. Lead on.\"\n\nShe said nothing about the destination and quickly engaged him with questions about Minnesota when they found seats on the bus. After a few minutes Jackie said, \"This is our stop,\" grabbed Brandon's hand, and pulled him along with her down the steps of the bus and to the sidewalk. \"About a block and a half away,\" she said, still silent about the destination. \"You were saying?\" she asked, linking one arm in his and moving them along as she urged him to pick up the stream of conversation he had going on the bus.\n\nThey rounded the corner of the block and Jackie released Brandon's arm to slide her hand down into his and walk resolutely toward the entrance of _Tricia's Emporium_ two doors down.\n\n\"When we go in, Brandon, will you look for a nice leather cock ring? I think you'd look really, really sexy in one. I'm going to find a vibrating butt plug that will be a good size to help get you prepared for Saturday night when I'm going to fuck you with my strapon.\"\n\nShe didn't wait for an objection, for a hesitancy, for anything. Her fingers still interlaced with his as they held hands, she opened the door with her other hand and strode into the shop, pulling him inside next to her.\n\nOf course she had checked out the shop, the location, the merchandise. The place was not seedy, and it was staffed by helpful personnel who didn't make you feel like it was anything out of the ordinary to be buying a half-gallon of anal lube, an inflatable butt plug, and leather restraints.\n\n\"I think the cock rings are over there,\" she said to Brandon, pointing. She released his hand and started off in the opposite direction.\n\nHe followed her. \"Jackie! What?\"\n\n\"You know. A cock ring. I think you will look so hot with the kind that is a leather strap with a series of metal snaps on it wrapped around your balls and the base of your cock. I can't wait to see you in it.\"\n\nShe was talking in a normal tone of voice, which was way too loud, thought Brandon, given the guy who was browsing magazines one aisle over.\n\nJackie continued walking, obviously knowing where she was going.\n\nBrandon trailed after her. Now they were approaching a couple who were looking at furry eyemasks and plastic ball gags.\n\nShe stopped, and he almost bumped into her. She moved very close to him and whispered, \"I want to buy us something that will stretch your cute little butthole open just a bit for me. I want you to be prepared and comfortable when I finally slide my strapon cock deep into your asshole. A vibrating butt plug should do very nicely. As for the cock ring, it gets me really hot thinking about looping that cock ring behind your balls and up to the base of your cock, where I'll snap it closed and then run my fingertips over your trapped and heavy ball sac hanging down underneath that glorious cock of yours. Then I'm going to use that lube we played with last night to bend you over and grease you up good, pushing lots of the slick liquid into your tight little hole. After that, you're going to watch me coat the plug with the lubricant, and you're going to know the whole time that what I have in my hands is going to go deep into your ass. Then, Brandon, I'm going to put the plug on a footstool I have at the apartment that should be just the right height and size for you to straddle and lower your way slowly onto the plug until it's buried inside you. And finally, I'm going to kiss you while I stroke your cock and balls until you're just about crazy to come, at which time I'm going to turn on the vibrator in the butt plug and see how long you can stand it before I unsnap the cock ring and have you spurt a big load of cum onto my naked tits. I want to taste your cum, Brandon, so I'm going to have you collect some on your fingers by rubbing them on my breasts and nipples, and then I'm going to suck your come off of your fingers as I slowly dial down the vibrator buzzing in your asshole.\"\n\nShe stood looking into his eyes, searching for his reaction.\n\nHe turned and hurried away in the direction where she had indicated the cock rings would probably be found.\n\nFor her part, Jackie strolled to the place where she knew the butt plugs were lined up on shelves just the way WalMart lines up coffee makers in the part of the store where they sell kitchen gadgets. She tarried, picking up various plugs, reading the descriptions printed on the cards that were packaged inside the clear hard plastic containers that are always so hard to cut open.\n\nShe was waiting for Brandon to come back to her, cock ring in hand.\n\nHe finally rejoined her, carrying the cock ring she had described. He held it out to her.\n\n\"Is this the one you meant?\" he asked quietly.\n\n\"Oooh, yes, baby. That's exactly the one,\" she answered, loudly enough for the couple shopping for bondage gear to hear. \"I can't wait for you to model this for me.\"\n\nBrandon looked sheepishly around and noticed the couple looking at them.\n\n\"Now,\" Jackie continued, \"I think this is the butt plug I want you to use tonight,\" she said, handing him a package which contained a pink, cone-shaped jelly plug. It was maybe five inches long when you included the short stub at the bottom which was meant as the part of the plug around which the insertee's sphincter would close after opening much wider to allow the flared-out base of the cone to pop into the anal canal. A wide base would ensure the plug would always be safely seated and able to be pulled out. \"It looks like it'll do the trick to get you ready for my strapon.\"\n\nThe couple was obviously staring now, smiling at them.\n\nBrandon was blushing a deep red.\n\nIt was very, very arousing to Jackie.\n\nThough his face was red, Jackie knew Brandon was turned on by the whole scenario. She saw him adjust himself, repositioning his cock so that the erection he was developing would not be trapped at an uncomfortable angle.\n\n\"Let's go,\" Jackie said, mercifully ending Brandon's futile attempts at trying to hide his face and his embarrassment from other store patrons. But when she started walking toward the check-out counter, it was very slowly, and she stopped numerous times along the way to comment on the merchandise and ask his opinion of certain articles.\n\nFinally they reached the counter, and a young woman of maybe 25 was at the cash register.\n\n\"This is my treat,\" Jackie said, smiling to the store attendant briefly before looking at Brandon. \"As much fun as we're going to have when I use these on you, it's only fair that I pay.\"\n\nThe girl behind the counter looked up from scanning the items to see Brandon's embarrassed expression. Finishing the pricing and moving on to swipe Jackie's card, she smiled at Brandon then handed the card back to Jackie, saying, \"You're very lucky.\"\n\n\"I know,\" said Jackie, taking her card back and sliding it back into the small purse she had carried with her on their afternoon outing. \"My guy is the handsomest, sexiest, best lover I've ever had, and he can make love to me in ways that just drive me absolutely crazy.\"\n\nTaking the bag from the clerk, she wrapped an arm around Brandon's waist, and walked the two of them out of the store.\n\n\"Damn, Jackie!\" said Brandon once they were outside the store, \"what the hell were you doing?\"\n\nHer arm still around his waist, she hugged him even closer to her as they walked back to the bus stop. \"Just testing out a theory, that's all.\"\n\n\"What?\" A couple pushing a baby stroller squeezed past them on the narrow sidewalk.\n\n\"Testing to see what kind of things might get you aroused. Things you probably didn't even realize would have that kind of effect.\" She was smiling at him and leaning against his shoulder, happy to be out and about walking with her man.\n\n\"What kind of effect?\" Brandon asked, guiding them through a group of kids in school uniforms being herded in the opposite direction by a couple of obviously frazzled grown-ups. \n\nNow standing at the bus stop, Jackie turned to embrace Brandon, hugging him tightly, and said softly, \"You got a hard-on in the store, didn't you?\"\n\nHe looked at her, his arms around her waist, the plain plastic sextoy store bag hanging from one of her arms as she hugged him.\n\nShe prompted again. \"Didn't you?\"\n\n\"You don't miss anything, do you?\"\n\nJackie grinned at him. \"No, I don't. But didn't anyone tell you it's not polite to answer a question with a question?\"\n\nBrandon released her from their hug and said, \"I'll tell you when we're on the bus,\" motioning with his eyes toward the advancing city bus which was rapidly approaching the stop.\n\nWhen they got to their seats, Brandon maneuvered her in first so she was sitting next to the window. Sliding in next to her, he made one of those practiced man-movements learned during puberty when boys figure out how to adjust a growing erection within the confines of their pants and must do so in an unobtrusive manner because there are other people around. Once seated, he took her hand and placed it on his thigh, patting it into position before laying the bag with their sextoy purchases on top of it. This effectively hid her hand from view. Then he reached his arm around her shoulders to pull her close to him and whispered into her ear as he looked out the window.\n\n\"You are a naughty little girl, Jackie, teasing and embarrassing me like that in the store. But you're right. It turned me on. I don't know why, but it turned me on. When you told me what you were going to do to me tonight with the things we were buying, well, your description almost made me come right there. And now, sitting here in this bus as I'm telling you these things, my cock is most definitely getting hard, as you'll easily be able to feel.\"\n\nJackie smiled broadly as she looked straight ahead, knowing that Brandon was still looking out the window as he whispered to her. She moved her hand to his crotch, jostling the bag of toys in the process. \n\nHe was definitely getting an erection.\n\n_We're going to have so much fun tonight,_ she thought.\n\n**\n\nBrandon cooked salmon and made a large spinach salad filled with sliced hard-boiled eggs, cherry tomatoes, slivered yellow squash, and mixed through with sliced almonds and herbed croutons. It was a delicious meal, though not a heavy one--\u2014both of them were eagerly anticipating an evening in which neither would want to be lethargic due to an overabundance of food.\n\nFollowing a delightful after-dinner conversation about college friends, cranky professors, and lessons learned since graduation, Jackie rose from the couch, Brandon's hand in hers, and led him to the bedroom. She undressed him, frequently kissing him as she unbuttoned, unzipped, and untied garments and shoes. Having him naked in front of her while she was still dressed gave her a little thrill, a tingle, a shiver\u2014--it emphasized the role reversal and the control she had as the one who was going to fuck, to penetrate, the other.\n\n\"Oh, Brandon, I knew you would look hot in that cock ring, but I didn't know you would look THIS sizzlin' hot!\" Jackie exclaimed, stepping back from between Brandon's legs as he sat on the edge of the bed. \"Stand up and let me get a better look.\"\n\nThe previous five minutes had been delightful for Brandon. After stripping him and sitting him on the bed, Jackie had dropped to her knees in front of him and slid his cock down her throat, slurping hungrily in order to get it completely hard. It had not taken much of her cocksucking to accomplish that goal. Then, with his dick pointing to the ceiling, she looped the strap of leather back behind his balls as he scooted far forward on the edge of the bed. She brought the ends of the thin strap up over the base of his throbbing shaft and then performed the very enjoyable task of gently tugging his ball sac downward in order to pull as much of him below where the strap would encircle his equipment in order to allow her to snap the two ends together on the top of the base of his cock.\n\nIt had taken a little doing, but she loved it, and so did he.\n\nWhen he stood up, the black strip of leather studded with a row of three round metal snaps at the end really make clear why it was called a \"cock ring\"\u2014--the leather circle formed a ring, and on one side of the ring was Brandon's beautiful cock and his heavy, cum-filled balls, and on the other side of the ring was the base of his abdomen.\n\nWhat Jackie adored, however, was that the cock ring very clearly sent the message, \"I'm on display for you. See how I've used this tiny leather garment\u2014--smaller even than the tiniest woman's thong\u2014--to put my cock and balls on display for you, making them prominent and the focal point for where and how I want you to look at me. My cock and my balls are yours to play with.\"\n\nThe visual made Jackie incredibly horny. She reached out her hand, cupped her palm, and placed it underneath Brandon's balls. She ran a fingertip behind his sac and across the leather, feeling its sensuous texture. What she had wrapped and snapped into place on his naked body was a clear indication that this man's aroused genitals were her playthings for the time he accepted her declaration of ownership as symbolized by the cock ring.\n\nDamn! That was an erotic thought!\n\n\"How does it feel?\" she asked him, palming his balls up and down and watching how the slight motion made his cock sway. \"Is it comfortable?\"\n\n\"It's okay,\" Brandon said, his arms hanging at his sides but his fingertips drumming nervously against one thigh.\n\n\"It looks so-o-o-o-o hot,\" Jackie purred, dragging her fingertips up the underside of his cock. \"Your cock and balls are just so . . . so _out there_ somehow. It's almost like you're thrusting them out for me to take,\" she said, now sliding her hand up and down his erection, looking at him and smiling.\n\n\"Glad you like it,\" Brandon said, moving closer to her for a hug and a kiss. Jackie kept one hand on his hard dick as she sealed her lips to his.\n\n\"Remember what I said in the store?\" she asked, breaking the kiss. \"What I said I was going to do to you?\"\n\nHis cock twitched in her hand.\n\n\"Yes.\" His simple answer was somehow full of eager anticipation.\n\nReleasing her grip on Brandon's erection, Jackie toed a small footstool from underneath the bench at the end of the bed. Dragging it with her foot several feet away from the bed, she said, \"This is going to be just the right height.\" She reached down and patted the seat of the stool. \"Come sit here, baby. Let's practice the position I want you in. It's important that all the parts of you I want to handle during our playtime are freely accessible to me.\" She licked her lips slightly as she looked at him. \"I've been masturbating to this fantasy for weeks.\"\n\nNoting that the cock ring heightened the visual enticement of Brandon's bobbing erection as he walked over to the footstool, Jackie was extremely aroused. She knew what was coming, the intensely erotic tease that she would be putting her guy through this evening, and the anticipation was searing. She chewed her lower lip as her gaze focused on the handsome man before her who was naked except for a sliver of black leather and metal studs which she had wrapped around his genitals to emphasize their display.\n\nThis handsome naked male had agreed to a delicious anal training session of her own design. He had admitted he wanted HER to do it to him, to prepare him so that SHE could take his anal cherry. As hot and sexy as he looked naked except for the cock ring, knowing he wanted her to take him was the most erotic thing about the whole situation. \n\nAdding the fact that the guy was Brandon\u2014--now \"her new guy\"--\u2014into the mix of the events that were about to unfold had Jackie in a state of fevered anticipation that was enormously difficult to manage. She loved everything about this man, loved every minute they had spent together this weekend, and wanted to be with him day and night in the coming weeks, months, years.\n\nIt was love for Jackie, and at this intoxicating stage of romantic attraction, she already knew about his deepest sexual fantasy. That she was about to make it happen created a situation almost unbearably wonderful: Falling in love + natural sexual attraction and sexplay that happens when falling in love + (HUGE plus) diving immediately into the kind of sex that would not ordinarily otherwise happen for probably years + (HUGE plus) knowing that he WANTED to discover the intense fantasy sex of his masturbatory imaginings with HER and that SHE would be the FIRST to do it to him . . .\n\nWell, Jackie had discovered a romantic love/fantasy sex/virginity-taking/mind-fuck heaven with a handsome man with a ripped, toned, fantastic body, a gorgeous cock, and a desire to make her come.",
        "This kind of stuff didn't happen in _Playgirl_ or _Penthouse_ letters. This kind of stuff didn't happen in romance novels. This kind of stuff didn't happen to anybody Jackie knew. This kind of stuff just didn't happen. Ever.\n\nUntil now. For her. With Brandon\u2014--his body, his mind, and his soul.\n\nThe crotch of Jackie's panties was soaked.\n\nWhen Brandon was situated to her satisfaction (\"Slide forward a little\u2014--your balls aren't quite completely off the edge of the stool, and they must be for me to stroke and fondle them in the way that I know will have you begging me to make you come.\"), Jackie started to strip for him. She kept his eyes on his, wanting to see his gaze roam up and down her body as she revealed more and more to him.\n\nWhen she had stripped to her panties, Jackie approached Brandon. He was grinning widely.\n\n\"Let's check something,\" she said, planting a foot on either side of him as he straddle-sat on the small stool, his knees in contact with the floor. Reaching a hand out to the back of his head, she drew his face to her crotch. \"Perfect, baby. This is the perfect height for you to lick my pussy. Do you see how wet you've made me already? Look at my panties.\"\n\n\"I'll do better than that,\" Brandon said, leaning the final inch toward her crotch to plant his mouth against the wet fabric and push his tongue hard against it, searching for a way to insinuate his tongue in between her pussy lips by pushing the material into her sopping cunt.\n\nIt felt great, and Jackie would have been perfectly content to stand there until she had a satisfying orgasm as Brandon proved his oral skills even with her panties still in place. She was too eager, though, to feel his hard cock once more in her hand. She stepped back, skinned off the soaked panties, and stood before Brandon naked.\n\n\"Now let me get some lube,\" she said slowly, reaching for the bottle on the nightstand, \"and let's see how your hard cock feels being stroked while you're my little boytoy on display for me.\"\n\n\"You really like this cock ring, don't you?\" Brandon asked, smiling. He was comfortable in his position and was looking forward to whatever Jackie did to him.\n\n\"For more reasons than you know, Brandon. Yeah, I really, really like seeing you nude except for that tiny bit of material which exists for the single purpose of emphasizing how much you want me to have what's being served up.\" Jackie had poured a small amount of the anal lube into her palm. She dropped to her haunches, scooted forward to be in the perfect spot in front of him, and placed her hand on his steel-hard cock. \"Mmmmm,\" she intoned, leaning close to him and pausing with her lips millimeters from his, \"you have the perfect cock, baby, and I absolutely love stroking it like this. I love it that you're giving it to me to play with tonight.\" She pressed forward against his lips, driving her tongue between them, and devoured him.\n\nThe sense of control was more than intoxicating. It was instantly addictive. Owning his cock like this, causing him intense pleasure but denying him a release. Jackie wanted to play with Brandon like this forever.\n\n\"God, Jackie, you'll give me the biggest case of blue balls in history if you keep this up. This damned cock ring will make it hard to come,\" Brandon said as Jackie leaned back, still slowly stroking his erection.\n\n\"Exactly,\" she replied with a smile. \"You'll be hard for quite a while before I unsnap your little garment tonight and allow the spurts of cum to shoot out of you and all up and over these pretty breasts. Do you like them?\" Jackie asked, thrusting her chest forward and wiggling to make her shapely, firm mounds move seductively in front of him. \"My nipples are really hard, don't you think?\"\n\nBrandon just groaned. \"You have masturbated thinking about this, haven't you?\"\n\n\"Many times,\" she replied, slowing her strokes on his cock to a tantalizing tease. \"And over the many times that I've enjoyed thinking about doing this to you when I was masturbating, I refined the fantasy, thinking up more and more ways for it to be tortuously intense for you and for me. I'm going to work you over good tonight, Brandon, and have you begging me, pleading with me to unsnap the cock ring and let you come all over my tits.\" Jackie removed her hand from his cock, which was throbbing visibly, the head having taken on a deeper pink color than the shaft. \"Would you like that?\"\n\nBefore he could answer, Jackie continued, again reaching for the bottle of lube. \"Let's try a little bit of lube on your lovely balls. I've come at least a couple of times during this part when I played with myself during the fantasy.\"\n\n\"Jackie, how much more are you going to tease me? Making those kinds of comments while you're playing with me is messing with my mind in crazy ways. You're making me desperate to just get up off this silly stool, grab you and throw you onto the bed, and fuck you hard until we both come. Is that what you're trying to make happen?\" Brandon looked like he WAS just about to get up and do exactly that.\n\n\"Shhhsh,\" she answered, the lube now in her palm. She quickly reached out and cupped his balls as she wrapped her fist around his dick with the other hand and resumed her stroking while now sensuously cradling and caressing his balls with the other. \"Now you know why it's better like this for right now\u2014see how good this feels?\"\n\nBrandon closed his eyes and savored the sensation.\n\n\"Don't be an over-eager horny little boy right now, baby. I know what I'm doing to make you hot. Yeah, I love it when you grab me and fuck my brains out. You do that great. But this is my fantasy right now, and I've worked hard at it just so it feels good to you.\"\n\nJackie was really manipulating Brandon's genitals. The lube was a phenomenal find because it stayed slick without drying out and getting tacky. This allowed her to experiment with her actions on his cock and balls over several minutes, gauging his reactions when she took a slight twisting action with the wrist that was underneath his balls, judging whether that was more intensely arousing for him than drawing the balls forward a little and sliding her middle finger across his sac in between his two plum-like orbs. Then she wanted to know whether that felt better to him than circling the top of his scrotum with a thumb and forefinger and pushing down ever so slightly at the same time she was sliding her fist upward on his shaft.\n\nThe lube let her study Brandon's shameless reactions to the way she was playing with him. He liked it a lot when she closed both fists around his cock and slid them up and down his hard shaft. (Jackie giggled when she did that\u2014--it felt in her hands a lot like how the feeldoe dildo had felt that first night she tested it out with a similar approach to phallus-in-a-double-grip pleasuring.) He liked it a lot when she put one palm underneath his balls and the other palm on top of them, trapping his precious boys the way she might have held a trembling kitten: gentle but firm.\n\nJackie was a sexual explorer, investigating every rise and fall, every furrow, every intimate contour of Brandon's brazenly displayed sex.\n\nHe loved it, and it was getting her too hot to do anything but the next action that she had imagined numerous times as she stroked herself to a masturbatory climax.\n\n\"Lean forward on your knees now, baby,\" she said, abruptly releasing his cock and balls. \"Just tip forward and land on your hands, then put your chest to the floor.\" She stood up in front of him, her beautiful breasts jiggling in the process as Brandon's eyes followed her upward. \"I think you know what's coming next.\"\n\nThe head of his cock was approaching a kind of purple in color, and his erect penis was pulsing in excitement and clearly leaking pre-cum. A droplet oozed out and lolled its way down his shaft toward his balls. He groaned in anticipation, excitement, lust.\n\nJackie was punching every single sex fantasy button that existed in his imagination of what this evening would be. Her teasing, explicit description in the sextoy store of what she was going to do to him tonight had not been far from his consciousness in any single second since she told him in that seductive voice that she would plug him tonight.\n\nNow he was to offer up his ass for the plug.\n\n\"That's my boy,\" Jackie cooed, retrieving the bottle of lube to set on the floor next to the stool. Her eyes riveted to Brandon's naked pose of asshole surrender, she walked around him, dragging fingertips over his proffered asscheeks, and picked up the vibrating butt plug from where it lay on the bed. \"I have the butt plug in my hands, Brandon, and I'm really turned on thinking about watching it slide into your ass in a few minutes.\"\n\n_All those postings from guys who said how much the mind trip was a key part of a man-fuck were right,_ Jackie thought. _But they couldn't know how arousing it is for the woman, too._\n\n\"Oh, Jackie,\" was all Brandon was able to say in response. She saw goose bumps rise on the base of his spine, just above his ass crack. That triggered a fresh flow of pussy juice from the walls of Jackie's vagina.\n\n_God, I LOVE doing this,_ she thought.\n\nPlug in hand, Jackie recreated Brandon's earlier position on the footstool. It put her at the perfect height and angle behind his naked, upturned ass to toy with him for an extended period of time without being in an uncomfortable position.\n\n\"Ooooh, baby, you look really hot like this. I like seeing you naked in this position in front of me.\" She flipped open the cap of the lube. \"Do you like being in front of me like this?\"\n\nBrandon mumbled something into the carpet. Jackie knew it meant, \"Yes! Hell, yes! A thousand times yes! I fuckin' love it yes!\"\n\nHer mental translation was dead-on accurate.\n\nShe hovered the bottle of lube over the valley between his firm, pale glutes and watched in absolute lust as the shiny liquid fell onto the top of his asscrack, causing him to flinch. \"That's lube, Brandon. I'm using it to get your asshole ready for what I'm going to do to it with this plug.\"\n\nAnother unintelligible sound into the carpet. This sound had a bit more of a whimper to it.\n\nJackie again translated in her mind: \"Please be gentle with me. I'm so excited that I can't even trust myself to be sane as you take me, Jackie. But, yes, I am so ready for you to push that plug into my asshole, baby.\"\n\nHer translation turned her on even more--\u2014something she didn't believe was possible. Whether Brandon was thinking those words or not didn't matter. In Jackie's head, he was SAYING them.\n\nShe settled comfortably into position for an extended tease of his anus, putting both the plug, with its attached wire and control mechanism, and the bottle of lube beside her on the floor. She placed a finger between his cheeks and coated it in the lube that was puddling there. Then she ran a fingertip sensuously around the perimeter of his opening, feeling every crinkle. Brandon sighed.\n\n\"Like you've imagined, huh?\" Jackied asked.\n\n\"Mmmm,\" from Brandon was his affirmative response.\n\n\"I did this to you last night, but tonight is different. I'm in a nice comfortable position. You have a cock ring on that'll keep you hard and not able to come very easily until I snap it off.\" She placed her other hand on one of Brandon's cheeks and began to massage it. \"But the most important difference from last night is that tonight the reason I'm doing this,\" and she tapped in the center of his asshole, \"is because I have a perfectly-sized vibrating butt plug that I'm going to push inside you as a way to open you up a little bit so that when I fuck you tomorrow night with my strapon you'll be ready and eager for it, knowing that I've lovingly and completely prepared you to take my cock in your asshole.\"\n\nJackie was afraid, in spite of the cock ring, that her words had pushed Brandon over the edge. She saw his ball sac contract up toward the cock ring, and his cock jerked several times underneath his belly. He groaned in frustration\u2014--a sound that was NOT mumbled into the carpet. Brandon had pulled his head up off the floor to give voice to his extreme state of lust and the torturous denial of release.\n\n\"God! Jackie! Dammit, dammit, dammit!\" He shook his head side to side like he was trying to clear stars from his vision after being punched in the face by a heavyweight fighter. \"Be careful! Just your dirty talk alone can make me come in this state, and I do NOT want that to happen with this cock ring trapping my dick and my balls.\"\n\nHer heart melted. She really was driving him crazy with lust. It was clear he had just suffered through an orgasm that had been short-circuited.\n\n\"I'll be more careful, I promise,\" Jackie said, a quaver in her voice as she resumed petting Brandon's asshole. \"I just need a little practice in taking you right to the edge but not pushing you over it.\" She stroked his asshole a little more firmly now, the pad of her fingertip making and then dipping into a depression in the center of his starfish. She purposefully did not push past the sealed entrance, but she sent an unmistakable message that she was going to do that very soon.\n\nBrandon settled his chest slowly back to the carpet.\n\n\"Your asshole is so pretty, Brandon. I like seeing it.\" Jackie continued stroking him as she tantalized him with her dirty talk. \"It's so pretty that I'd like to see it more often. Would that be okay?\"\n\nShe started pushing her finger into his hole.\n\n\"The thought of spreading you open to look at your cute little anus makes me hot, baby.\" Her finger was in his asshole up to the first knuckle, and Jackie continued to press firmly into his bottom. \"Knowing that nobody else but me can see it turns me on, and that makes me want you to show it to me even more.\"\n\nHer finger was all the way in Brandon's asshole.\n\nShe withdrew completely in one motion. It was a shock to him.\n\n\"Damn, Jackie! Don't surprise me like that!\"\n\n\"Greedy for my fingers?\" she teased. \"If felt good when I was inside you, and you didn't want me to leave, did you?\" She had picked up the bottle, snapped open the cap, and now was drizzling lube on the finger she had just extracted and on her forefinger, too.\n\n\"Those three girls whose fingers have been inside you, Brandon--\u2014I'll bet they only put one finger inside your tight little hole, didn't they?\"\n\nBrandon's cock jerked three times in rapid succession, and Jackie had her answer.\n\n\"Well, I want to do a really good job of preparing you. I want the sensation of my strapon cock sliding into your ass to be wonderful, and that's why I'm going to plug you in a minute. The plug will be a great way to get you used to having something a bit bigger than just a girl's finger up your ass.\" Jackie leaned forward, draping herself over Brandon, her wet crotch pressing down on his upturned ass. She was able to whisper in his ear in this position. \"But I think you need two of my fingers inside you to prepare you for the plug.\"\n\n\"God, just do it, Jackie. Please stop teasing me like this!\"\n\nShe levered herself up off Brandon's back and resumed her position on the footstool behind his ass. Laying her middle finger on top of her forefinger and squeezing out one more dollop of lube onto the digits that were going to invade his snug, warm, welcoming anus, Jackie advanced her fingers toward his asshole.\n\n\"I'll slide these two fingers inside you as soon as I see a little opening invite me in,\" she said, tapping the place she wanted to see relax open for her. \"If you knew how hard I came when you did this in my imagination as I was masturbating, baby, maybe you'd start to understand how hot this is for me. Show me how much you want me to finger-fuck you, Brandon.\"\n\nJackie held her fingers above his hole, watching. It took a few seconds, but the little opening she wanted to see finally appeared as Brandon sucked in a big breath and pushed his ass just a tiny bit higher.\n\n\"Oooh, so hot. That is so-o-o-o hot, my little toy. Keep it open for me. I want to just look for a minute.\" Jackie reached her other hand to her crotch and began pressing and rolling her hard clit underneath her fingertip.\n\nWhat was going through Brandon's mind? Jackie thought she knew, but right now, rubbing her clit and looking at him open up for her, she was on auto-pilot, aroused and wanting her own orgasm badly. She continued stroking her clit as she placed the tips of her lubed fingers on his anus and pressed them firmly downward, filling him and feeling him squirm as she reached bottom.\n\n\"Unngh,\" he moaned, still squirming. \"Oh, my god,\" he gasped, \"don't move, Jackie, please don't move them. Let me get used to being so full like this.\"\n\nJackie could not help laughing. \"After all the anal scenes in porn that I know you've seen, Brandon, you feel 'so full'?\" She wiggled her fingers a little. \"Did those porn starlets moan and beg not for the guys to move their big, hard cocks in their assholes? Brandon, I've only got two of my fingers in you.\"\n\n\"You know what I mean,\" he answered, moving his ass in reaction to the movements of Jackie's fingers. She liked that, and she moved her fingers again, watching in satisfaction as he reacted with both the motion of his ass and with a soft, \"Ummm,\" as he accommodated to her invasion.\n\nShe began slowly sliding out, then pushing back in.\n\nJackie was finger-fucking Brandon with two fingers, preparing him to receive the butt plug.\n\n\"Now, baby, I'm going to stop stroking in and out with my fingers. I want you to fuck yourself on my fingers while I hold them still.\"\n\n\"Huh?\" moaned Brandon, now breathing heavily from the aggressive finger-fuck Jackie had been giving him in the ass. \n\n\"I'm holding my hand still. Raise up on your hands and knees and start rocking backward and forward so you're fucking yourself onto my fingers.\"\n\nJackie really wanted to turn him on with dirty talk about how eager he was to be fucked. As he set up a fucking motion, Brandon adjusted quickly and was soon giving himself a thorough ass-screwing on her fingers.\n\n\"That's it, baby, use my fingers to fuck yourself. I love seeing it, seeing you push your ass back to me in order to get my fingers deep into your asshole. You're such an eager toy for me, and that gets me so hot that I'm frigging my clit right now, Brandon. God I'm going to come watching you fuck my fingers like this.\"\n\nAgain Jackie withdrew her fingers, this time quickly and unexpectedly. Brandon was left in mid-thrust, meeting no resistance.\n\n\"Jackie! That was cruel! Don't do me like that. It's too frustrating.\" Brandon dropped his chest again to the floor. \"Isn't it time for you to push that plug into me?\" he asked, his anus twitching at his own request.\n\n\"I'm way ahead of you, baby,\" she answered, drizzling lube from the bottle onto the pink, cone-shaped vibe. \"But you were really fucking yourself good then, weren't you?\"\n\n\"Don't be such a tease. Of course I was fucking myself good. It felt fantastic. You shouldn't have--\"\n\nBrandon gasped in surprise and jerked up as he stiff-armed the floor in shock.\n\nJackie had, in one strong push, buried the butt plug in Brandon's ass. She rose from the footstool as he panted through the sensation and walked around to squat down in front of him. \"I thought you were ready, and you were,\" she said to him, looking into his eyes, which still showed the aftermath of the shock he had received. She stood, pulling him up in the process until he was on his knees in front of her, and she eased him back on the footstool, having him sit as he was before, with his ball sac hanging off the edge.\n\nThis time, though, he was impaled on the plug.\n\n\"Get comfy, Brandon,\" Jackie said as she walked to the bathroom to wash her hands. \"I'm going to jack you off now and make you come.\" Walking back to him and settling into position to work him over, she again retrieved the bottle, squeezed some into her palm, and grabbed his stiff cock. \"But you're not going to come until I find out how much you like the vibrator. With her free hand, Jackie thumbed the wheel on the little control box at the end of the wire coming out of the bottom of the plug.",
        "This time, Jackie got to see the shocked, excited reaction in his eyes and on his face. The buzzing of the vibe triggered a squirm that looked almost comical as Brandon sought the most comfortable position to experience the sensation.\n\n\"Feels good, doesn't it?\" she asked, looking him right in the eyes as she stroked his cock. \"This is going to make you come, Brandon,\" Jackie said, releasing the vibe's control box, the setting on \"medium,\" and placing both hands on the cock ring in order to unsnap it. When she did, Brandon gasped, and Jackie quickly resumed jacking him off. She turned the vibe up to high and scooted close to him, knowing it would be only seconds before he would erupt.\n\n\"U-u-u-n-n-g-h-h,\" Brandon moaned, looking at Jackie in wild-eyed desperation. \"Oh, shit! That's gonna make me--\"\n\nJackie aimed his cock at her tits and watched as he shot jet after jet of warm cum up onto her naked breasts. She could feel the contractions of his cock in her hand, watched his expression of agony-ecstasy as he shuddered through an intense climax.\n\n\"That's it, Brandon, come for me, baby.\"\n\nStreams of cum were running down her tits and belly, glistening in the light She grabbed one of his hands as he was finally coming back to his senses after his explosive orgasm. Pulling his hand to her breasts, she directed one finger into a rivulet of cum and dragged his fingertip through it. \"I want to taste you, baby. I'm gonna lick this delicious cum off your finger.\"\n\nShe drew his hand to her mouth and slid his finger between her lips, sucking greedily.\n\nBrandon watched in fascination as she cleaned his finger.\n\n\"More, baby. More,\" she said, releasing his finger. Brandon repeated the action, but this time as he advanced his fingertip toward her mouth, Jackie caught his hand and guided the fingertip to her lips, spreading his cum over them like a silky, transparent lipstick sheen before sucking his finger into her mouth to savor the remaining liquid.\n\nHe pulled his finger out her mouth. \"Jackie, you have completely blown my---\"\n\nJackie leaned forward quickly and interrupted him by grabbing the sides of his head and drawing his mouth to hers, sealing her lips tightly against his, and kissed him lustfully, savoring every sensation, including Brandon's quick surrender to this most intimate manner of tasting him by kissing his cum off his lips.\n\nShe broke the kiss quickly and stood up. \"That's it, baby. That is absolutely it\u2014--I can't stand even one more second of delaying the orgasm I have GOT to have right now. I'm dying to come, baby. I'm going to explode if I don't come this second.\" \n\nStepping up to him as she had earlier while still wearing her panties, Jackie grabbed the back of his head and pushed his face into her crotch. \"Suck my clit, Brandon. Suck my clit and eat my pussy. I'm going to hump your face, baby. Make me come. Make me come!\"\n\nJackie ground herself onto his face, using him as a masturbation tool. She squirmed against him, directing his tongue exactly where she wanted it, pushing on the back of his head to hold him in tight contact with her pussy.\n\nIt took no more than fifteen seconds of this, and Jackie's knees buckled as the most incredible orgasm of her life shot through her. She dropped to her knees and sagged forward against Brandon, panting heavily, shaking and moaning in huge, gasping gulps of air as she tried to keep her grip on reality.\n\nBrandon hugged her tightly to his chest, reaching to the side of the stool to find the vibration control and turning it off. A satisfying fullness filling his bottom, he rocked Jackie in his arms as the final aftershocks of her orgasm played themselves out.\n\n**\n\nSaturday morning found the two lovers cuddling in bed, talking for an hour after awaking, content to simply experience reality in each other's arms.\n\nThe intensity of their sex the night before meant they were both more than happy to reserve the morning for leisurely puttering in each other's company\u2014Brandon with the newspaper, Jackie gossiping with a friend on the phone (and raving about her \"new guy\" as Brandon smiled behind the paper).\n\nThe jazz concert that evening was in a beautifully landscaped city park on the north side of town. They'd had a light brunch and only a snack at an organic market in the afternoon, so they were hungry and ready for the nice meal at a restaurant Jackie liked which served inventive, tasty dishes. She guided Brandon to a selection she knew he would love (he did), and they had a wonderful, early dinner before heading to the park and the concert.\n\nThe event lived up to its billing. It was a romantic setting\u2014--the sound system for an outdoor concert was amazingly good--\u2014and gazing up to see the lights of passing planes or the stars above them was the perfect counterpoint to the mix of small-group, intimate jazz and the ending act's roaring big band bravura. They left contented, knowing their memories of the concert would stay with them for many reasons.\n\nThat it was the prelude to the night's sexual activities was not the least of the reasons that this was a memorable concert for Brandon and Jackie.\n\nShortly after they returned to her apartment, Jackie put on some quiet, romantic jazz--\u2014the artist was one who had performed at the concert--\u2014and she drew Brandon into her arms to sway with him to the music, dancing in small circles in the little area in front of her sound system and TV.\n\n\"This has been the best weekend of my life,\" she said, looking into his eyes as they moved to the strains of \"Corcovado\" as played by the jazz quartet on the recording. \"To think that I was so silly during that night in Miami Beach and that I ruined what might have been this kind of connection way before now, well, I am so lucky and happy that I found you again, Brandon.\"\n\n\"Even if the way you found me was, let's just say, 'out of the ordinary'?\" he asked with a sly smile.\n\n\"Every time someone asks me how we met, I know I'll say, 'On spring break,' but every time I say that, I know I'll also be thinking, 'On a blog where people discuss sliding their fingers up their partner's asses and the women strapping on dildos in order to fuck their men in the butt,'\" she giggled, pressing her head against his chest. \"The luckiest thing in my entire life was finding that web site.\"\n\n\"You never told me,\" Brandon said, nuzzling into her hair, \"why you got into surfing for sites dedicated to the idea of women doing it to men.\"\n\nShe drifted one hand down to his butt and placed it there, feeling the muscle flex as he moved in their swaying, tightly confined dance. \"Because of you, baby\u2014--all because of you. Nobody did it to me like you did, before or after that night, and I couldn't forget your beautiful brown eyes. I began to seriously regret being such a prude and wished that I'd done what you asked.\" She looked up at him, pausing their physical interpretation of the melodic sounds coming from the sound system. \"That's what made me interested, made me start to re-think my judgment of your request. I wanted to know why you had asked, what it would have felt like to you and to me if I had slid my finger up your asshole while you fucked me.\"\n\nHe was smiling into her gaze. \"And what did you discover?\"\n\n\"Amazing stuff,\" she replied, replacing her face against his chest and resuming their sensuous swaying to the smooth sounds. \"When I read what the guys said about how good it felt to them, and then when I read what the women said about how incredibly hot the feelings were for them, too, well, I got hooked really fast on the idea. But when the guys AND the women both talked about how seductive the mind trip part of it was, well, that got me so horny that I knew I'd never be satisfied until I'd tried it myself.\"\n\nBrandon drew her away from him, holding her at arm's length, and asked, \"So did you ever do anything with some other guy---\"\n\n\"God, no!\" Jackie interrupted. \"As hot as I was to experience it, I knew that finding a guy to try it with would take a long time, and then it would take even longer into the relationship to bring up the idea without freaking him out.\" She shook her head slowly, in small movements, and said, \"Do the math. That's, what? One and a half years, at least. It's only been a year since we had our Miami Beach spring break.\"\n\n\"So you're just a natural fast learner, huh?\" he asked, teasing her.\n\n\"Let's see how fast and how well I've learned,\" she answered, pulling him into the bedroom.\n\n\"Undress. I want you naked because I want to see your cock the next time you get sight of me,\" Jackie said over her shoulder as she walked into the bathroom and shut the door.\n\nThe dildo was hidden in its suede-like pouch in the cabinet underneath the sink. Retrieving it and undressing quickly, Jackie thought, _I won't need any lube in order to slip it inside, that's for sure!_ She was wet with the self-lubrication of sexual anticipation.\n\nStanding before the mirror, nude and with the purple shaft protruding from her crotch, Jackie did a quick touch-up to her hair and the light make-up she'd worn for their casual, informal night out to a concert in the park. Still, she looked stunning: the extra effort in the two weeks before Brandon came to Atlanta had been worth it, and her body, face, hair, everything combined to create a picture of incredible, healthy sexuality in a female form. Her nipples were erect, pointing forward proudly, ready to be sucked into Brandon's mouth. Her taut belly and shaved-smooth pussy yelled, \"Eat me!\"\n\nBut it was the erect, purple phallus jutting up in front of her that incongruously intensified the image reflected in her bathroom mirror. The total impression was that of seductive female beauty and sexuality adorned with a surprise power symbol that portended her ability to fuck her partner, to enter him, to use his opened orifice as a means to bring him to climax and herself in the process.\n\nShe opened the door.\n\nBrandon stood up from the side of the bed when he heard the door open, eager to see what Jackie had prepared for him.\n\n\"Oh, my god . . . Jackie . . . holy shit, Jackie . . .\" he scanned her body but quickly fastened his gaze on the phallus jutting from her crotch. \"Damn. I can't even think what to say. It's so---\"\n\n\"So you like my cock?\" she asked, leaning against the doorway.\n\nBrandon's cock provided the answer before he spoke it. Jackie watched in satisfaction as it lengthened, hardened from its already semi-erect state. \"I've seen women with strapons in pictures and videos, but none as beautiful or arousing as what I'm looking at right now.\"\n\nJackie noticed, too, that a slight flush had crept up his face.\n\n\"Well,\" she said, swaggering out of the doorway and over to where he stood, \"if you like it that much, why don't you suck it?\" She pushed him to his knees in front of her. \"Having you suck on my cock will make the end that's inside my pussy move in a way that I just know is going to feel really good, Brandon.\"\n\nHis eyes widened, and he looked at the junction of the spot where the dildo jutted forward between her pussy lips.\n\n\"Yeah, there's a nice-sized bulb on the other end of my cock, and it's feeling fine inside my pussy,\" Jackie said as she placed one hand on the top of Brandon's head. With a slight pressure backward, she indicated that she wanted him to look up at her. When their eyes met, she smiled at him and cooed, \"You've never sucked cock, have you?\" He shook his head firmly, indicating his eagerness to let her know that he would only be man-fucked by a woman with a strapon, that her strapon was going to be his first, that the only woman who would take his ass was her, and that even though he was a novice, he would work hard at sucking her cock well. \n\n\"Well, baby, that's good. Here we are with you never having sucked cock and me never having had my cock sucked. We're both virgins, and that gets me horny.\" Jackie shimmied her tits a bit in order to ramp up the erotic sight before Brandon's eyes. \"But of the two virgins in this room tonight, Brandon, I'm the virgin with a cock that's never been inside anybody, and I'm the virgin with the cock that's going up your ass. First, though, I've been dying to see how much of it you can get down your throat before I slide it into your eager little hole.\"\n\nShe pressed his head forward until his lips made contact with the end of the dildo, then she reached down and wrapped her fist around the base of the shaft in order to move it in a way that would press the bulb against her G-spot when Brandon took the few inches on the other side of her fist into his mouth.\n\nJackie wanted an orgasm while Brandon sucked her cock.\n\nSlowly, tentatively (and, Jackie noted with satisfaction and with lust, in a state of extreme arousal as evidenced by the stiff dick she could see jutting up from his crotch as he was on his knees in front of her), Brandon slid the end of the dildo between his lips.\n\n\"That's it, baby,\" she encouraged, \"you look so sexy doing that.\" Jackie was manipulating the end of the dildo inside her pussy in just the right way to massage her G-spot. \"You're getting turned on by being my personal cocksucker, aren't you, baby?\"\n\nJackie was taking a risk. The blog postings from guys emphasized the role reversal aspect of man-fucking being intensely erotic. Some of the posters mentioned getting turned on by every aspect of such a reversal, including sucking the woman's fake cock. Some of the posters didn't mention it.\n\nBrandon was becoming a bit more enthusiastic in his oral attentions to her cock. Jackie relaxed a bit and intensified the massage of her G-spot.\n\n\"How far down your throat can you take me, baby?\" she asked in a husky voice. \"How deep can you go?\" She released her grip on the shaft, sending Brandon the signal that he could go for broke if he wanted to.\n\nThough he only got to within an inch of where the dildo protruded from between her lips, seeing him work to take it down his throat for her was so erotic, such a turn-on, such a power trip, that Jackie came when he backed off. The movement he made on her cock when he withdrew, stifling a gag with his hand on the shaft, pushed the dildo firmly into her G-spot. That, along with the most erotic sight she had ever witnessed in her life (and that was saying a lot given her time with Brandon in the last 48 hours), pushed Jackie into a trembling orgasm. She hugged herself through it, pushing her lovely tits up over her forearms, the hard nipples dappled with goose bumps around her areolae. \n\nComing down from her climax, Jackie looked down to see Brandon sitting back on his haunches, looking at her lustfully, his eyes darting to the way the dildo bounced and bobbed in reaction to the shudders her orgasm produced.\n\n\"You suck cock good, baby,\" she purred, smiling at him. \"I like to see you doing it. That was so hot I know I'm going to replay that sight over and over in my mind, and every time it's possible, I'm going to be masturbating when I do it.\"\n\nBrandon grinned at her, licking his lips in an exaggerated display of how much he liked the taste of her fake cock. \"And what about the other times\u2014--the times you can't masturbate?\"\n\n\"You mean like when I'm daydreaming about this in the middle of the day at work?\" she giggled.\n\n\"Uh-huh,\" he answered, looking up at her and rising from his knees, his own cock bobbing in the process. \"What will you do then? Will you put your hand down your panties and rub your clit when you're at work?\"\n\n\"I'll tell you all about when I do,\" she whispered. \"Because I know I will. I'll have to.\"\n\nShe kissed him, then turned and walked to her dresser. Pulling the harness from a drawer, she said, \"I'm going to be enthusiastic when I fuck you in the ass, Brandon, and I want to make sure your fucking goes well. This harness is going to keep my cock firmly in place so I can give you a good screwing and keep the end of this dildo right up against my G-spot.\"\n\nShe stepped into the harness in front of him. \"Help me with the straps?\"\n\nJackie didn't really need the help. She had worn the harness many times, practiced the motions she would use tonight to fuck Brandon. Getting his assistance, though, was part of the mind-fuck: he was helping her prepare to take his anal cherry.\n\n\"Get the lube and put it on my cock.\" Her tone was so commanding it surprised her. \"Please,\" she said, a small smile forming at the sides of her mouth.\n\nSeeing Brandon walk to the nightstand and pick up the bottle gave her chills. He was about to commit completely, to send her the unmistakable message that he would give his virginity to her tonight. Helping her make the final preparations for fucking him was such a gut-clenchingly erotic moment for Jackie that she shivered, goose-bumps rising all over her body. His actions right now said clearly and powerfully that he was hers to take.\n\nHe poured lube into one palm and advanced toward her.\n\n\"No, baby. Get behind me and reach around me to put the lube on my cock.\"\n\nA puzzled expression on his face, he stepped behind her and pressed up against her back.\n\n\"Now you see why I want it like this,\" Jackie said, reaching behind her and grabbing his butt cheeks to pull him tight against her. \"I like feeling your hard cock against me like this.\"\n\n\"You have planned every last detail, you little masturbator,\" he whispered into her ear. \"You weren't kidding about refining your fantasies.\"\n\n\"Put both hands around me, love,\" she said, not addressing his comments about her fantasies. (He was right!) \"Put the hand with lube around my cock, and put the other on my tit and tug my nipple forward and play with it when you stroke and lubricate what's going up your asshole in just a few minutes.\"\n\nBrandon's breathing let Jackie know he very much liked, and was very turned on, by what he was doing.\n\nShe loved it. The sight of his strong hand stroking the phallus sticking up from her crotch was mesmerizing, and the sensations created by what he was doing with her nipple were delicious. She pressed him more tightly against her back and ground her ass back against his erection, directing it to a place where the harness straps were out of the way and not preventing her from feeling the skin of his dick on her asscheeks.\n\nThe sounds the slick lube made as Brandon stroked her cock were erotic and arousing. Jackie soon got into a rhythm, pushing forward slightly as his fist slid down toward the base of the dildo protruding through the hole in the harness, and backing toward his cock pressed against her as his hand slid upwards. The rhythm perfectly matched the sounds created by his practiced, masculine jerk-off motions on her fake erect dick.\n\nThen it was time.\n\n\"On the bed, Brandon. Head down, ass up, legs spread. I'm going to fuck you in your asshole.\"\n\nHe slowed his fist on her cock and released her nipple.\n\n\"And be sure to put the lube on the nightstand. I'm going to use it to put my fingers inside you to get you nice and slick and ready for my cock.\"\n\n\"Jackie, I can't believe this is really happening. All the times I've wondered what it would be like. All the times I've jerked off imagining a woman doing this to me.\" He grabbed her in a tight embrace and kissed her. Breaking the kiss, he said the words that both made Jackie love him beyond all measure AND made her so hot to fuck him that she couldn't stand it: \"And I'm the luckiest guy in the world to have found you to do it to me.\"\n\nHe stepped to the bed, put the bottle of lube on the nightstand, and clamored into position, eager to be fucked. His cock was hard and bobbed beneath his rippled abdomen. His ball sac was already tightening up against his crotch.\n\nJackie climbed onto the bed, grabbing the lube in the process, and reached under Brandon to cup his balls. \"You have to promise not to come until I say you can, baby,\" she said, giving the gentlest of squeezes. \"But when I say you can, I want you to reach under yourself and stroke your hard cock until you come.\"",
        "Brandon mumbled his assent into the pillow. He arched his butt up to her touch when she laid a palm on one cheek. She popped his ass with her open hand. Not hard. Just enough to tease.\n\n\"There. Now I have to kiss it to make it better,\" Jackie said, leaning over and planting her lips on the spot she had just smacked. \"Maybe a little French kiss?\"\n\nShe quickly dropped the still capped bottle of lube on the bed, pulled his asscheeks apart, and drove her tongue straight into his asshole.\n\n\"Oh, my god, Jackie. Oh, my god, Jackie, what are you doing? Oh, god, that's feels incredible. Baby, baby, oh, my god . . .\"\n\nBrandon was squirming his ass under her assault. She sealed her lips against his crinkled opening and began fucking her tongue in and out of his hole. Reaching underneath him, she clamped her fist around the base of his cock to make sure he didn't come as she continued spearing him with her tongue. After a few more strokes, Jackie eased out, licking all around his pink opening, caressing him with her tongue. Slowly, she released her grip on his twitching cock.\n\nJackie leaned over him, her cock nudging up against his balls in the process. Pressing her tits into his back as she maneuvered her mouth close to his ear, she whispered, \"First my tongue in your asshole, and now my cock.\"\n\nBrandon moaned. Jackie saw his hands grab the pillow and close into fists, symbolically trying to hang on for the screwing he knew was coming.\n\nShe leaned back up, grabbed the lube and squirted a generous amount between his upturned cheeks. She plunged a finger inside quickly, knowing he was ready to take it.\n\nJackie loved being inside his asshole. It felt so warm and tight. She loved being able to elicit the moans and other sounds he made when she finger-fucked him. She loved the control of his pleasure she had when he surrendered and let her inside him.\n\nShe slid a second finger in alongside the first.\n\n\"Oh, good, that feels good, baby,\" Brandon whimpered. \"That feels so good.\"\n\n\"Then I'm going to keep doing it,\" she answered, picking up the pace a bit and thoroughly enjoying the fucking she was giving him.\n\nPulling her fingers out and noting with excitement that he had relaxed open to her, a small circle of entrance to the depths of his surrender showing in the center of his asshole, Jackie directed even more lube into the opening, knowing that not much would drip in. She pushed a big glob inside him to make up for that.\n\nDropping the bottle to the mattress, Jackie stopped her attentions to Brandon's ass. She wanted to just look, to drink the sight in and burn it onto the screen of her mind. She would come back to this picture repeatedly, she knew.\n\nBrandon arched his ass up, indicating his impatience.\n\nSmiling to herself, Jackie scooted behind him and aimed the tip of her purple cock right at the center of his asshole. In a single, practiced motion (thank you, Allison, for all the DVD hours I've spent watching you screw Jeremy in the ass!), Jackie drove the dildo all the way into Brandon's asshole.\n\nHe yelled in a deep, chest-rattling man-sound, sucking in a loud breath immediately afterwards. He buried his face in the pillow, moaning and groaning, and at the same time arching his butt upwards in a clear indication that he wanted her to pull out and do it again.\n\nJackie did. She set up a rhythm, and was soon levering her cock repeatedly in and out of his opened asshole, fucking him deep and then withdrawing in order to plunge completely back in. She grabbed his hips in order to pull him back against her as much as possible when she bottomed out in his asshole.\n\n\"Oh, baby,\" she grunted as she screwed him, \"this is so hot. This is so sexy. This is going to make me come so hard.\"\n\n\"Me, too,\" panted Brandon out of the side of his mouth. \"Fuck me good, Jackie. I love it when you fuck me like this.\"\n\nShe gripped him tighter on his hips and squirmed against him. This made the bulb end of the dildo slide repeatedly across her G-spot. \"Oh, shit!\" she exclaimed. \"That's gonna do it. That's gonna do it!\"\n\nHer motions became frantic. Her grip was tight as she sealed her crotch against his flanks and ground herself hard into him. \"Jack off now, Brandon. Do it now! I'm coming! I'm coming!\"\n\nShe slammed hard into him for a final time, reached up to grab his shoulders as she pressed her tits tight into his back, and she wiggled her ass rapidly as a way to get the dildo to rub repeatedly and rapidly across that incredible spot on the front wall of her pussy.\n\nJackie yelled as she came, and Brandon's fist was a blur as he jacked himself hard. He spurted, the contractions along his stiff dick matching the contractions around Jackie's cock buried in his ass. She hugged herself to his back, shuddering and crying in intense pleasure as Brandon collapsed down to the mattress, pinning his still spurting dick beneath him.\n\nThey jerked and spasmed together as the post-climax tremors rippled through them.\n\n**\n\nJackie tearfully hugged Brandon in a tight embrace at the airport Sunday afternoon. Her eyes wet, she looked up at him. \"This weekend was incredible,\" she said. \"I don't want you to go.\"\n\n\"I don't want to leave you, either,\" he whispered into her hair, holding her firmly and protectively against his chest.\n\nThey stood in a tight embrace under the rotunda of the airport's center gathering area, knowing the inevitable moment when he had to walk toward the line queuing for the screening stations was only seconds away.\n\n\"Jackie, I'll find a way to get back to you fast,\" Brandon said. \"I promise.\"\n\nShe smiled at him hopefully.\n\n\"And I'll call. And email.\" He kissed her. Again.\n\n\"My company has an office in Atlanta,\" he said.\n\nJackie yelped in glee.\n\n\"It might take awhile, but---\"\n\nLiterally jumping up and down in excitement, Jackie interrupted him. \"But until then, you'll call, write, visit, and,\" she hugged him tight and whispered in his ear, \"you can think about the deep-throat blowjob with a finger-fuck that you still haven't gotten.\""
    ],
    "authorname": "escriterra",
    "tags": [
        "strapon",
        "man-fucking",
        "anal training",
        "femdom strapon",
        "feeldoe",
        "cock ring",
        "embarrassed",
        "butt plug",
        "finger fucking",
        "teasing"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/jackie-makes-things-right"
}