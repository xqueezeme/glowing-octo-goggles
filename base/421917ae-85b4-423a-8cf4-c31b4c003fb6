{
    "title": "Dindi Pt. 05.5",
    "pages": [
        "Hello!\n\nSo, Dindi is back (and for the last time!)\n\nI don't do this, come back with a story once I'm done with it, but I received A LOT of requests for a Dindi epilogue, so here it is. Specially for you who asked for it. \n\nI'm working on my current story, though my time is much shorter now my Summer break is over. I'll finish that as soon as I'm able. In the meantime, have fun with this.\n\nXOXO,\n\nNana.\n\n*****\n\nMORENA\n\nThe reason why sex is so good? \n\nBeing pregnant is bloody awful. AWFUL.\n\nYour body goes bananas. Suddenly you have to pee all the time because there's a foot kicking your bladder. Your tits get enormous -which would be a plus if they didn't hurt like a fiend. Your fingers turn into sausages. Your feet swell. You get fat, weird, moody, unattractive. All that while your husband remains the same. Just the same. Perfect and hot as ever. And that is the worst part.\n\nWatching Travis walk around half, and sometimes completely, naked -because he can't be bothered to wear pants and a shirt when he's home- as I got bigger and bigger each day was torture. It got even worse when I reached that stage where you're not supposed to have sex anymore. \n\nHe was wonderful. Lovely. No woman could ever wish for a better husband. Still, it was his fault I got pregnant. Therefore, he had to deal with my bitchiness. And he did. Without complaint. I blamed him for existing. For being a man. For being so ridiculously good-looking and so, so good a man I felt terrible every time my hormones got the best of me. \n\nIt was such a relief when I finally gave birth to Marvin almost 4 months ago. Of course the pain had been too absurd to mention, but, oh my god, I had the cutest, most perfect and adorable baby in the world. He looked so much like Travis it was disgusting. \n\nTravis was such a good father I discovered I was, after all, capable of loving him even more. Every night, when Marvin waked us up with his howling, Travis was out of bed and headed for the baby's room before I had time to fully arouse from my sleep. He literally fought me to be the one to change his diapers. Mind you, I'm not crazy about baby poop, but one day out of five Travis and I disputed Marvin's dirty tawny bum.\n\n\"Dindi, you have done so much already. Rest now. Let me do this.\" He'd ague.\n\n\"Travis, I don't mind doing it. I'm his mother. I have to clean his bum too!\" I'd throw back at him.\n\n\"No, honey. I can do it.\"\n\n\"But I want to do it, Travis!\"\n\n\"You did it yesterday!\"\n\n\"I did it three days ago!\"\n\n\"You can do it tomorrow.\" And before I could say more he was halfway done with the diaper changing.\n\nHe was the perfect father. The perfect husband. Except he wasn't fulfilling his husbandly obligations to me.\n\nMy doctor prohibited sex when I was about 8 months in. Then Marvin was born and I had to go through the obligatory period of postpartum healing. In about six weeks the healing period was over, then Travis and I had had a rather disastrous attempt at having sex again. After that, though, he treated me like a was a leprous. He wouldn't touch me for the world! It was like he was King Midas afraid to touch his beloved and turn her into solid gold.\n\nThe night would mark mark the four month anniversary of the last time my husband had dared fuck me. I was about to climb up the bloody walls. \n\nEvery time I tried to begin something he would find an excuse to slither away from me, saying he had work to do, someplace to be, that he didn't feel well. This one time he ran from me. He straight out ran. I was on my knees all to willing to suck him for all I was worth, but he ran, and locked himself in his damned dark room while I cried, rejected. What kind of a man runs from a free blowjob?!\n\nWe've been married for over two years, and happily so. He never, ever gave me any reason to be dissatisfied with anything in our life together, but now he wouldn't touch me. He was denying me the very thing that had brought us together in the first place. And I, as a woman who had pushed a person out of her body, secretly blamed myself. I knew it wasn't my fault, not really. But I felt as if it were. I felt untouchable, undesirable, neglected. I was beginning to feel a little down, too. Unloved.\n\nHe treated me as well as always. He was attentive, lovely, thoughtful, but he didn't seem to want me anymore. He didn't want me. And to think the whole reason why I was his wife today was because, once upon a time, he'd wanted me so much, he'd even acted crazy to get me.\n\nMy body wasn't the same. Pregnancy changes a woman. Inside and out. I had slightly wider hips now -what should please him-, not to mention much bigger breasts, a trait which was temporary and he wasn't enjoying it while it lasted. But those were good things. \n\nI had countless new stretches which all the almond oil in the world wasn't able to prevent. I've never been too skinny, but not too chubby either. Now my body was somehow rounder, softer. My belly wasn't as flat as it used to be. The woman who looked back at me from the mirror reflection didn't possess the unabated security I used to have. And it was all Travis's fault!\n\nParenthood is not kind on you. By the end of each day I'm ready to sleep like the dead. Marvin's cries for attention are the only things powerful enough to wake me up once I lay my head on my soft pillow. One rare night, though, a week ago, I awoke around 2 a.m. to find Travis wasn't asleep by my side. At first I thought baby Marvin had woken him, but I dismissed that first assessment. It simply wasn't plausible that Marvin would wake his father and not me. If he had cried I would've woken up too. The little thing grew inside of me. I had an alarm in my head, ready to sound the minute he opened his mouth to let the first cry out. \n\nI dragged my exhausted body to the baby's room. Didn't find Travis there. I checked our bathroom. Didn't find Travis there, either. Then I began to worry. Call it silliness, but my husband used to be a whore. He used to fuck anything that moves before he met me. Then suddenly, he had a wife with a loose vagina with whom he hadn't had any sex in almost four months. That little speaking worm burrowed itself farther into my brain as though it were a juicy apple.\n\nHe's gone out. He's out there with some leggy model with a tight pussy who can give him what you haven't given him!\n\n\"Shut up!\" I said out loud. Clearly the lack of sex was beginning to affect my brain too.\n\nAs a husband, Travis had never done a thing to make me distrust him. But then again, before the baby, we had enough sex to leave me sore five out of seven days.\n\nDistantly, I heard a muffled grunt that made my heart jump in my chest. Back in the room, I found the baseball bat George had given me for my last birthday. He'd been mugged a month earlier, and started thinking the whole world was in imminent danger of being robbed too. I had thought it such a useless gift. What would I ever hit with that blasted thing? I certainly wouldn't try to hit a guy with a gun pointed at my face.\n\nAnother grunt. \n\nThis time my ears were able to locate the sound. It seemed to be coming from downstairs. I went down, stepping on the creaking boards of the old house staircase as lightly as a cat. Another grunt. This one unmistakably a male sound coming from the library. My brain, that being the brain of a person who's lately only read fantastical infantile tales, began to work.\n\nWhat if it is a burglar? What if he's got Travis?\n\nOn light feet I approached the library doors. Travis and I had moved out of his loft when I was about 3 months pregnant with Marvin, wanting more space and a garden. That library was my favourite place in the new house. One of the double doors was slightly ajar, although the lights were off. \n\nA burglar wouldn't bother turning on the lights, Morena!\n\nStatuesquely, I stood outside the library listening to the thumping of my heart sound in my ears. My trembling hands were clutching the baseball bat with such force my knuckles were white. I took in a deep breath, mentally counting to three. \n\nOne Mississippi, Two Mississippi, Th-\n\n\"Ah! Shiiiiit.\" I heard coming from inside the room. My heart skipped a beat or two. I knew that voice. I knew those grunts. \n\nCarefully, I tried a peek through the slice of opened door. It was dark, but the moonlight coming through the windows was clarifying enough. And in a any case, I wouldn't need much light. I would have recognized that naked back anywhere. Outlined by the moonlight, facing a bookshelf, was my dear, loving husband wanking off. \n\nMy breath caught in my throat. My hands around the wooden bat started to shake.\n\n\"Oh, fuck, FUCK!\" Travis hissed again.\n\nBASTARD! BASTARD! THAT ROTTEN BASTARD!\n\nI would've liked to say I went in there in beat the shit out of him, but I didn't. Instead, I returned to the bedroom. I put George's bat back in its place and lay back in bed to cry. I didn't know which emotion was stronger; if my anger towards Travis, my anger towards myself, or the abysmal self-loathing that hooked itself to every fiber in my body.\n\nYou see, Morena? He would rather fuck himself than you! You always knew, deep, deep down, that he was too much for you. You always knew he'd eventually get tired of simple, little you. Now he's just having a wank! Next time he might get one of those pretty models to play with!\n\nTrying to ignore my own stupid-self, I made my best to cry as silently as silence would allow me to. Travis came back to bed some fifteen minutes later. I successfully pretended to be asleep. He lay by my side, planted a soft kiss on my nape, then fell asleep, blissfully happy and at least mildly sexually satisfied while I felt like the most hideous woman in the world.\n\nDid I talk to him about what I'd seen? No. \n\nDid I try to give him real, physical sex after that? Yes. \n\nDid he want it? No.\n\nFortunately for both Travis and I, I had reached my limit. He would fuck me today or he would end up murdered by his sexually frustrated wife. That would make for a nice headline for tomorrow's paper, anyway.\n\nTravis was in his dark room working, which was a term presently known as another-excuse-not-to-shag-my-wife. I went in silently so as not to startle him. He didn't see me get in. Didn't hear me closing the door. He was only made aware of my presence when I wrapped my arms about his bare torso, pressing my cheek to his warm and sweaty back. He never wore a shirt when he was in that stifling room.\n\nI heard his chuckle before he spoke. \"Hey you, big mama.\"\n\n\"Can't call a woman who just had a baby big, mister.\" I said, my lips brushing his salty skin as they moved.\n\nHe spun around and my mouth moved from the spot between his shoulder blades to his chest. I could hear his heart beating, slow and steady. \n\n\"Where's Marvin?\" He asked, all concerned.\n\n\"Asleep, Daddy.\" I tilted my head back to give him a fierce look. \"Do you honestly think I'd leave him alone and unattended?\"\n\nHis eyes, in turn, were soft and amused. \"Of course not. I'm just asking.\" He bent down and kissed my forehead. I almost dissolved with the little contact. He rarely kissed me these days. \"It's my paternal instinct.\"\n\n\"Our club is fine.\"\n\n\"Are you fine?\" He asked, eyeing me knowingly. \n\nNo, Travis. I'm not fine. I'm terrible, actually. I hate you. I need sex. Now, if you please.\n\n\"I'm alright.\" I lied.\n\nHe cupped my head with his big man hands. \"Are you?\" He asked, gently forcing my head back like a doctor about to examine my throat. \n\nI lowered my eyes, ready to put my plan in action. \"I am. But,\" I looked up at him, tentatively. \"I could be better.\"\n\nThe corner of his mouth lifted with that little smile that begged me to kiss him. \"How?\"\n\nIf you fuck the shit out of me right now.\n\n\"If you, say, took me to dinner tonight.\" I dropped the idea with care.\n\n\"What about Marvin?\"\n\nI sighed. \n\nI loved my son. My god, how much I loved him. My chest tightened just to think about his chubby little legs, full of little creases. The smell of baby in his head and those little eyes that were still deciding what colour they'd like to be. I loved him. He came out of my body. But Travis was such a mother hen, it could be annoying sometimes.\n\n\"I talked to your mother. She said she'd be happy to watch him for us.\" There was no better nanny than grandma.\n\nA few months before Marvin was born, Evelyn showed up at the door begging me to forgive her for the way she had treated me in the past. She still looked at me funny sometimes. But I could see she was really trying. Besides, she loved my little boy, however brownish he might be. And Travis was so, so much happier now his family was complete again. \n\nTravis considered me for a moment. I was able to hear the engines working inside his head. She wants sex.  I hoped his mind was telling him. Your wife wants you to fuck her, Mr. Keegan. I crossed my fingers behind his back, hoping he'd listen to that little voice.\n\n\"Please, Travis?\" I whispered, pleadingly. \"Please?\" \n\nHe looked down at me, all uncertainty. My body was practically vibrating in anticipation. Say yes. Say yes.\n\n\"Will Italian do?\" \n\n\"YES!\" I squealed in my excitement. \"YES! YES! YES!\"\n\nI stood on the tips of my toes and kissed him. He tensed, his hands frozen on my sides. I let my own hands slide up his back to his neck and brought his head down, so he would be closer, easier to reach. Travis exhaled through his nose, making a deep sound in his throat. I rejoiced in that sound. It was defeat. He started kissing me with more fervour. Really kissing me. His hands travelled south and, for the first time in months, he allowed himself to grab handfuls of my ass. He squeezed the cheeks as if assessing how much bigger my backside was now. My fingers raked through his hair, that wasn't quite as long as when I first met him, but it was still soft and long enough to tug at. \n\nBetween us his cock came to life. I felt it hard and demanding, pressing against my stomach. He still wants me. He still wants me. A gasp, that was a mingle of pleasure and happiness, escaped through our kiss. His tongue was dominant inside my mouth. That kiss alone spoke of four months of physical neglect.\n\nTravis whirled us round and, suddenly, I was seated on the cool surface of his working table and he was in between my legs, sucking on my bottom lip. My entire body shivered. I felt exhilarated, enough to cry. I wrapped my legs about him, squeezing his sides with my thighs, wanting him closer and closer. He wasn't gentle with me. My lips hurt, I registered the mild pain in some dark corner of my mind, but fuck that. I only cared about Travis's hands running over my thighs, Travis's mouth on my neck, Travis's grunts in my ear. He still wanted me. He wanted me.\n\nLosing patience with all the kissing, I let one hand slide down his strong abdomen until I was palming his glorious length, sadly constricted by his pants and underwear. My thumbs and forefingers were fumbling with the button of his jeans when he pulled away from me. He did so so abruptly, I leaned forward slightly and had to grab the edge of the marble table not to fall face down on the floor.\n\nHe stood as far away from me as he could. Back pressed against the opposite wall. His chest was heaving. Even under the intense red lights of the room, that only a second ago were making me feel ethereal, I could see how flushed Travis was.\n\n\"Morena, I...can't...\" He breathed.\n\nI felt that little pinch inside my nose that precedes tears. \"Why?\" \n\n\"Well, I...\" He stopped, ran a hand down his face. \"I have to work.\" Old, used excuse.\n\n\"You what?\"\n\n\"I have to finish this, baby. I have to deliver this pictures first thing tomorrow.\" He had a miserable pleading look on his face. \"If I don't finish this today I can't take you out to dinner. You want go to dinner, right? It will make you happy. You said it would.\" He spoke about the bloody dinner as though it were the solution to world hunger. \n\nIt was on the tip of my tongue, Why don't you fucking say the truth? That you don't want me? I refrained from making such a fool of myself.\n\n\"I understand, Travis.\" I said, fighting my tears so hard I almost choked.\n\nHe nodded nervously. \"Make yourself pretty for me tonight.\" He said it like he cared. As if it would make a difference to him what I fucking looked like.\n\n\"Of course.\" I jumped to the floor, readjusting my dress over my hips. \"I'll go check on Marvin.\" I said, and left the room without looking back.\n\nI closed the door behind me, making sure the baby monitor was in my hand, and sprung into a run. I ran outside, where I could breath fresh air. Travis's dark room smelled of his sweat and his rejection of me. In the garden, there was a little shed I had visited only once since buying the house. I thought that a good place to hide my sobs. I pushed the creaking door open, set myself on a little dusted upside-down bucket and let my tears flow. \n\nI cried like I never cried in my life. Not even when I saw that nasty bitch kissing Travis 3 years ago. I made loud, ugly sounds because I couldn't cope with breathing properly and crying at the same time. There was a tightness in my chest that wouldn't let my lungs fill when I drew breath. I looked down at my breasts to see two perfectly circular smudges on my dress. One for each nipple, darkening the cloth. Milk leaked when Travis had pressed me to him. \n\nI was being loud, but there was no helping that. I was exhausted of having to beg my husband for his touch. I was tired of trying. I felt so worthless, so unhappy. To think Travis couldn't get enough of me only a while ago. Now he physically made himself pull away from me, preferring to jerk off in the middle of the night.\n\nThe creaking of the wooden door startled me, and I looked up to see Travis had found me. He stopped by the door looking at me with such a pained expression I had to look away, taken aback by another wave of shuddering sobs.\n\n\"Dindi.\" He crouched in front of me, trying to take my hands in his. \n\n\"Go away.\" I sniffed.\n\nHe put his hands on each side of my face and had to press the tips of his fingers into my skull to make me look at him. \"What's-\"\n\n\"Now you want to touch me?\" \n\nTravis's clear, blond brows knitted together in a look of confusion. \n\n\"Leave me alone, Travis.\"\n\n\"No. I won't leave you. Talk to me-\"\n\n\"Fuck off, Travis!\" I unleashed all of my anger and frustration on him. He only stared at me, wide eyed. He was crouched so near to me that he almost fell backwards when I stood to my feet. I made to leave, but he grabbed my ankles. Both strong hands pinning my feet to the ground. \n\n\"Morena, what's happening to you?\" He asked in a voice that suggested he had not a clue about what was happening to me. Or what wasn't happening.\n\n\"What's happening to me?!\" I snarled. With that strength rage gives you, I shook out of his hold and stepped as far away from him as I could. \"What do you imagine might be happening to me, Keegan?!\"\n\nHis expression was blank. He seemed to really not have the slightest idea of how much he'd hurt me. \"I have no idea wha-\"\n\n\"Go fuck yourself, Travis!\" I yelled, interrupting him. \"Oh, no! Wait a minute! You already do that, don't you, darling?!\"\n\nHe frowned at me.\n\n\"Huh!\" His apparent ignorance had me angry enough to actually murder him \"I heard you, you bastard! I saw you!\" At this his blue eyes widened. \"You son of a bitch! I hate you!\" \n\n\"Baby,\" He got to his feet, a pacifying hand extended my way. \"I-\"\n\n\"YOU would rather fuck you bloody hand than me!\" I shouted.\n\n\"What?\"\n\n\"You haven't touched me in months! Months! And all this time, you've been sneaking off to have a wank in my library! In the middle of the fucking night!\"",
        "\"Morena.\" He said my name with a hint of that condescending tone he sometimes used. It made me see red.\n\n\"WHAT? You little vermin! I hate you! Stay away from me!\" He was coming at me, getting closer with each step of his long legs. \"Don't you dare fucking touch me now!\"\n\nTravis grabbed me by the shoulders and shook me a little. \"Listen to me, woman.\"\n\n\"I don't want to listen to you!\" I yelled. \"Let go of me, Travis! Let go! Use your hands for a better purpose, why don't you?! You can wank yourself off to death for all I care!\"\n\n\"Are you crazy, Morena?!\" Travis's voice rose and the tips of his fingers burrowed in the flesh of my arms.\n\n\"Crazy?! Don't you dare deny it! I saw you, you fucking bastard!! I should've have hit you with that damn bat! You bloody well deserved it for being such a-\" Travis shook me again, making my teeth rattle.\n\n\"Will you shut the fuck up and listen to me, Morena!\" Travis shouted. \"Listen to me, goddammit!\" My mouth fell open. He had never spoken to me that way before. \n\nI wouldn't listen to him. That insecurity that had rooted inside me was telling me he'd say he didn't want me anymore. That he would never touch me, ever again. \"Listen to you?! Listen to what?! You've already made things clear!\" I put both my hands on his chest, trying to push him away. I thought I was using all of my strength but he didn't even move. \"Take your filthy hands off of me, Travis! You don't even want me anymore!\"\n\nHe gasped, incredulous. \"What?! You think I don't want you anymore?!\"\n\n\"Well, do you?!\"\n\n\"Morena, how can you think I don't want you?\" He made it sound like the most unfathomable thing in the universe.\n\n\"How? How? You've just rejected me five minutes ago! You pull away when I kiss you! You even ran from me, Travis! You ran! What kind of man runs from a fucking free blowjob!? When was the last time you willingly touched me?! It's been four fucking months! You barely even kiss me anymore! I know my body is different. I'm not the same, but it's not my fault! You did this, too! I didn't get pregnant with my magical mystery finger! Your prick-\"\n\nBurrowing his fingers deeper into the soft flesh of my arms he yanked me forward causing me to almost hit my nose on his chest. \"So you think I don't want you, uh?\" He hissed. \n\nI opened my mouth to call him every foul name known to man, but the crash of his mouth against mine didn't let me. It wasn't a kiss as much it was an assault, one that forced my tongue to welcome his relentless one. He was kissing me. Kissing me willingly, violently. \n\nThe air was knocked out of me when he practically threw me against the wooden shed wall. I gasped, not really having time to catch another breath because Travis's mouth was on mine again. His body was so firmly pressed against me it became impossible for me to expand my chest to breathe, anyway. My overly sensitive breasts throbbed with pain. I could feel the dampness from the milk I was leaking soak my bra. I fisted a good amount of his hair and pulled mercilessly at it. My body was conflicted between the need to kiss him more and the need to breath. \n\nJust as abruptly as he had kissed me, he drew back, panting, giving me an opportunity to fill my lungs with fresh air. \"I'll show you just how much I don't want you, Dindi.\" As he spoke, his hands were already bringing my soaked underwear down my legs. He threw them over his shoulders and, with both hands under my ass, lifted me up. Despite myself, my thighs pressed against his sides and my ankles clasped together on the small of his back.\n\nMy body had been tricked into thinking Travis would fuck me in his dark room and it made me ready for him. He didn't waste time on preliminaries. He didn't stop to make sure I was wet enough, he already knew I was. He was an expert on the workings of my body. He simply reached a shaking hand between us, let his pants drop to his ankles, positioned himself at my slick entrance, and pushed in.\n\n\"Agh!\" I screamed, both in pain and pleasure, as his cock went inside me parting delicate tissues. \n\nHe stilled, resting his head on the crook of my neck, allowing both our bodies to relish on his invasion. Then, after what felt like forever, he moved in me. Groaning something like extreme relief, he delivered me a powerful thrust of his hips that caused my head to bump on the wall.\n\n\"Oh, god, Travis!\" I cried out as he drove his cock in so deeply I could've sworn he hit my womb. \"Oh, yes!\"\n\n\"Is this what you wanted, Dindi?\" He whispered hotly in my ear. \"Is it?\"\n\n\"Yeah! Ye-\" Another stroke cut me off. \"Yes, Travis! Yes!\"\n\n\"Then take it!\" He picked up speed, giving me what I wanted, what we both wanted, knowing none of us would last very long. My body jolted up with the sheer force of his hips striking his delicious cock in, then fell down again seeking the incredible sensation he gave me.\n\nI grabbed his shoulders and squeezed him with my thighs, trying madly to rub my clit against him. He thrusted faster, harder, elevating me to the edge between exquisite pleasure and a species of pain I gladly welcomed. He felt so good inside me I had an unbearable urge to cry. I had him back. I sunk my teeth on his trapezius to try to contain a shiver that came from deep inside of me. Deep where his cock was relentlessly pounding.\n\nI wanted to hold on to him forever, but my own body betrayed my wishes. I felt it began to give in to Travis's angry fucking. Something coiled in my belly, a feeling that made my legs tremble around him. When he hammered his cock into me one more time he hit that dark spot that made my world shatter. \n\n\"Oh god, Travis! I-I'm-\" One big hand grabbed my hair, then pulled at it, forcing my head back. \n\n\"Come on, baby.\" He fixed his eyes on me, knowing well enough that doing so would make lose control even faster. I was right there on the edge of coming around him. My walls clutched at his pulsing cock and, with another long and deep motion from him, they spasmed. All of my being was pouring into that orgasm. The first I had in fucking ages.\n\nStill, he thrusted in, forcefully, deeply. His testicles were pressed against my pussy, just under the place where we were joined. I was able to feel them contract just before he came inside me. His release filling me up.\n\n\"Agh! Godammit, Dindi!\" He encircled his strong arms around my ribs. His whole body shook against mine, but he still didn't stop. Through my own chest, I felt the crazy thumping of his heart, hammering against his rib cage. He pushed his hips in more slowly, in a circular motion, still moving, still filling me up. He gradually slowed down until he stopped completely, groaning in my ear.\n\nA laugh, coaxed out by my satisfaction, made my body shake, stirring our abating connection.\n\n\"Oh my gosh, Travis!\" My hoarse voice was pure joy. \"Ah! Now I remember why I married you!\"\n\nTravis laughed tiredly, still recovering. \"God! I missed you.\" He pulled himself out of me and helped me down on wobbling legs. \n\nMy back was bruised from constantly hitting the wall. I kept my arms around Travis, pressing my cheek to his heaving chest. There was a sweet smell, mingled with the scent of his sweat. Tentatively, I let my tongue out to lick the spot where my breasts had been squashed against him. \n\n\"I'm leaking.\" I observed, tasting my own milk.\n\nTravis glanced down at me, his expression grave all of a sudden. \"I didn't hurt you, did I?\"\n\n\"Hurt me?\" I laughed. \"If that was hurting me then by all means, hurt me again!\"\n\n\"I'm serious, Morena. I've hurt you before.\"\n\n\"You what?\"\n\n\"Oh, come on. You remember.\" He said. \"You even screamed in pain!\"\n\nI shook my head, about to call him a crazy man when I realized what he was talking about. Six or seven weeks after Marvin was born, I was all healed up and ready to party again. With all the hormones coursing inordinately through my body, plus the time I had been forced to abstain from my husband's body, I was all too eager to resume my sexual life. Way too eager. I had rushed things. I hadn't given myself enough time. And Travis, on the other side of the same problem, was a man who'd gone over two months without sex, too. He had hurt me, yes. A lot, truth be told. But that had not been his fault. I was to blame. It was my body. I should've taken things slower, but I rushed him. I urged him to make the move that eventually hurt me bad enough to make me scream in a plea for him to stop. \n\n\"Travis...\" My voice was all guilt and softness now I understood him.\n\n\"I'm sorry if I hurt you again. I shouldn't have done it. But you drive me fucking crazy!\" \n\nI took his hands in mine. \"Oh my god, Travis. Stop saying nonsense! Of course you didn't hurt me!\" \n\nI felt like such an idiot. If only I had talked to him. But no. I kept throwing myself at him instead of trying to communicate to him, in words, what I wanted. And Travis, he wanted me. I could only imagine what it had costed him to refrain from touching his wife, as he rightfully could, because he was afraid to repeat a mistake that hadn't even been his.\n\n\"Oh, I was so bloody stupid! It was all my fault!\" I said. \"I was thinking you didn't want me anymore!\" \n\nHe laughed a tired, humourless sound. \"Are you insane, Morena? Look at yourself! How could I not want you? You're beautiful.\"\n\n\"But I,\" Fresh tears streaked down my face. \"I thought you didn't want me anymore because my body is weird and my vagina is loose.\"\n\nThere was complete silence from Travis for a few seconds. He merely looked at me as if I had a horn coming out of my forehead. Then he burst into laughter. He laughed for a long time, bending his body at the middle. The sound was infectious and, soon, I found myself laughing through my tears.\n\n\"Don't laugh at me, you tosser.\"\n\nTravis, still not recovered from his attack of laughter, sat down on the nearest upside down bucket and set me down on his lap.\n\n\"My god, Dindi. The things you say, woman.\" He brushed my hair away and placed a kiss on the hollow of my temple. \"Listen. I've been going crazy without touching you, baby. All I think about is fucking you. Day and night. It's you I think about when I jerk off, you know.\" I laughed, feeling ridiculous. \"You scared the shit out of me that night. I couldn't bare to think I could hurt you again. But I want you! Of course I want you. And your body, I think I love it even better now. Even though you think your...\" A laugh made him trail off. \"...your vagina is...\" Another laugh. \"...lose!\" A louder laugh. \n\n\"Shut up!\" I gave his shoulder a playful punch.\n\n\"Hey,\" He took my hand and brought it to his lips. \"Your vagina is as perfect as ever. I can atest to that.\" He pressed his mouth into a line, clearly trying not to laugh again. \"And if you can promise me I didn't hurt you again,\" He eyed me expectantly. I nodded to ascertain him he had not. \"then I would be glad to fuck you as much as you want me to. If you can promise me you are absolutely certain you're okay.\"\n\nI nodded again. He laughed again.\n\n\"...don't want you...\" He spoke to himself, shaking his head. \"That's about the most stupid thing I've ever heard, Dindi.\" He said to me.\n\nLike a child who can't explain why it did the naughty thing it did, I stuttered \"I-I'm sorry.\"\n\n\"Don't be stupid. You don't have to apologize for anything, honey. We're both to blame. It takes two to tango.\" He moved his legs from side to side, making me sway on his lap.\n\n\"Why are you so bloody perfect!? I hate you!\"\n\nHe laughed. \"I can't help it, baby. Same way you can't help being so beautiful even though you have snot running down your nose.\"\n\n\"What? Ewww.\" I took the hem of my dress and bend to wipe my nose on it. \"Is it better now?\"\n\n\"No, it isn't. You look terrible.\" He said.\n\n\"Wow. Thank you, honey. What a lovely thing to say.\"\n\n\"Well, you do. I'm your husband. I'm supposed to be true to you. I can't lie.\"\n\n\"Wanker.\"\n\n\"I think I need to give you a shower. What do you say?\"\n\nOh, yeah. I loved that idea. To get naked and wet and have him touch me? Yeah. \n\n\"Fuck, yeah. Let's do it.\"\n\n***\n\n\"Ahhh! Travis, you're a god! I fucking love your cock!\" I lay sprawled on our bed, smiling dumbly at the ceiling. Limbs heavy and pussy sore with overuse.\n\nTravis was lying in between my legs. Head of mussed blond hair resting on my stomach while I gently worked my fingers through it. \n\n\"Had enough already?\" He teased, his warm breath blowing on my navel.\n\n\"What? Are you mental? You have four months of neglected sex to make up to me. You better start taking your vitamins.\"\n\n\"I think you're the one who needs her vitamins, Mrs. Keegan.\" He started to crawl up my body, letting his tongue mark his way up.\n\nI squirmed under him, body arching towards him. Soreness be damned. I'd gladly be fucked again. \n\n\"Mmm, Travs...\" I moaned as his lips brushed my jaw.\n\n\"Come here, Dindi.\" He reached my mouth and claimed it with his. Travis laced our fingers together and guided my arms over my head. It drove me crazy because I wanted to touch him so bad, and he wouldn't let me.\n\nHis tongue was slowly rolling over mine. He was being gentle, careful, knowing I was sore. But, just as his hard cock brushed my thigh...Marvin started to howl. Travis pulled away immediately.\n\n\"Nooooo!\" I whined in frustration.\n\nTravis smiled down at me. \"Marvin knows we're working on giving him a sister. That's why he's crying.\"\n\nHe made me laugh, in spite of myself. \"Ohhh, I can't get up. My legs are jelly. You're the one who wants three babies. You go.\" \n\n\"Yeah, I'll go.\" He said it in mock annoyance, as though he wouldn't follow me if I went myself. \"But you better put this mouth to use when I get back.\"\n\nI reached a hand between us to hold his warm, hard cock in my hand. \"If you can manage not to run from me I will gladly do so.\"\n\nI gave him a gentle squeeze and he groaned, taking my hand away. \"I love you, you know. Even though your vagina is loose.\" \n\n\"WHAT?\" He was up and out of bed before I could murder him.\n\n\"Imagine what it's going to be like after baby number three!\" He touched the tips of his index fingers and the tip of his thumbs, making a large circle between his two hands. \"Good thing my dick is so big.\" He said, eyeing me through the circle.\n\nI threw a pillow at his grinning face. \"You know what? I think you should get reacquainted with your hand. How about that?\"\n\nLaughing with that large, kissable mouth he had, Travis knelt on the bed. \"I love you, Dindi,\" He said. \"And even if you had the largest vagina in the world I would still fuck you.\"\n\nI stared into his sky blue eyes. Those eyes that, some years ago, made me fall in love with him. I pulled his mouth down to mine.\n\n\"Stop this vagina talk, Travis.\" I sucked on his bottom lip. \"Please. Or I won't give you any.\"\n\n\"Don't be mean, woman. And keep your legs open for when I get back.\"\n\nHe gave me a final kiss, then left to attend to Marvin's cries. From our bed, I could hear Travis talking.\n\n\"Hey, there, little man. Hush now, Daddy's here. Do you want to hear a story? Yeah, you do! Let me tell you the story about the beautiful warrior princess Dindi and how she made a big, bad dragon fall in love with her.\"\n\nLying in bed, sore and satisfied as I hadn't been in months, I listened to my husband tell our gurgling son a fucking princess story, trying hard not to fall asleep. In the end, sleep won me over. I let it come, knowing I could have more of Travis later. Knowing he would have no reservations about fucking me senseless.\n\nTravis's voice, grave and even, plus my baby's happy gurgling sounds, carried me under. And even as exhausted as I felt, even as weird as my body was and as achy as my breasts were, Travis was such a good father and such a perfect husband, I'd have ten more perfect howling babies with him.\n\nI loved the bastard.\n\n***\n\nTHE END."
    ],
    "authorname": "Nanaya",
    "tags": [
        "interracial",
        "love",
        "black woman",
        "white man",
        "romance",
        "romantic"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/dindi-pt-05-5"
}