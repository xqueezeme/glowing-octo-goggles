{
    "title": "The Huntsman",
    "pages": [
        "Note: This is the complete story with all 11 chapters. I have previously posted three excerpts from this book entitled Pleasing the Huntsman, Breakfast Served, and Something Desired. I hope you enjoy getting the broader context of the story and about the stupid hyphenated words - they're not done intentionally by me, but occur when I copy/paste the text over. I have tried to eliminate them, but I have likely missed a few.\n\n*****\n\nCHAPTER ONE\n\nHard Days\n\n'Keep your head down, don't make eye contact, and above all don't do anything to look pretty.'\n\nIt was a daily litany of routine that I could barely stand anymore that was rivaled only by having to deal with how bad I smelled. Even the slop in the battered tin that my hands were wrapped around was almost beyond my ability to cope with in terms of smell or taste. \n\nI wasn't entirely positive as to what it was that I was eating, but I had prayed over it and I hadn't been told by my God not to eat it so I ate it. Every cursed hack worthy bite of it each day I was blessed to even be fed. \n\nI found my secret spot in the barracks where for a few moments each day I was fortunate to be out of sight of anyone. So far I had never been bothered here yet, but things could change. So far today the record seemed to be in no threat of being broken. \n\nShivering, I dipped the battered spoon I kept hidden in a pocket into the runny broth and brought a bite up to my lips. It was at least warm, that much I could say about it, but otherwise having to daily consume it was like being in some proverbial dimension of hell. Being imprisoned, as I was, only made the aspect of being in hell more so in terms of appearance. \n\nWe were told though that the conditions outside were even worse. I'm not sure I believed the guards on that one entirely, but before being rounded up I had seen unspeakable things take place. Things I would never have believed possible. Things that no matter as bad as this forced incarceration had been could not equal. \n\nStill, I wanted to be free of this place, with its tall barbed wire walls and guards that would grab a hold of a boy or girl and haul them off to be raped by the whole squad watch as a sort of payment for protection services. No this place was hell and however bad as it had become on the outside in the last 2 \u00bd years I didn't care so long as I managed to at least die or live with dignity free from this daily torment of fear and expectation of pain. \n\nThe meager portion in the bowl was gone and I tucked it and the spoon away within my tattered cloak for tomorrow providing if whether we would be fed or not. As of late that wasn't always the case. In fact the days of missed feedings were getting more and more frequent. The population of three thousand or so refugees only grew sicker and more malnourished because of the missed feedings. \n\nI was the healthiest person I knew and yet in order to survive I had learned the wisdom of acting like I was sick and partially out of my mind in order to fit in with the rest of my inmates that I would barely classify as being human anymore. Precious were the moments of the day when I could be alone and not having to pull off an act of half addled craziness. In these few blessed moments I often took the opportunity to speak to God, who in effect was my only surviving companion in this place of hell on earth. He was the only one keeping me sane. Truly, with-out Him I would be as lost as the rest of these poor souls. \n\nClosing my eyes, I clasped my hands together and said, \"Lord, you got me through another day. I... I'm grateful for the food I've been given.\" A single tear streaked down my face, it was hard to choose to be real and not someone embittered by life's circumstances. \n\n\"I hope for something a lot better soon, but if that's not the plan then so be it. I'm still your girl. The people here are getting sicker and sicker and I fear where this is going. I've tried to speak to some of them of You, but no-body wants to listen. They're all so bitter and full of hate because of how they've been treated. Please keep me from becoming like them. I don't want to give up on my hope that this will change and get better, but oh God you've got to help me! I... I'm falling... I can't...I...\"  \n\n\"Shhhh.\"\n\nImmediately I hushed as the presence of my creator washed over me and suddenly everything was made better, even though my surroundings remained the same. I waited for God to speak to me either audibly or through the Spirit, but nothing came. I was on the verge of asking Him why He'd told me to be quiet when a disturbance at the door of the barracks caused me to hunch further back into my hiding spot. \n\nTwo guards came in and immediately my breathing sped up and yet I did my best to halt the rapid rise and fall of my chest. If I was found here by them it wouldn't matter how ugly I had made myself to appear as they were nothing but something worse than an animal in their treatment of those they supposedly guarded. I had learned from new arrivals over the years that had been moved in from other FEMA camps that the conditions imposed were universal, if not worse in other places. \n\nThe government, it was clear, had fully intended for this type of treatment of its citizens and it seemed to me an act of cruelty that they hadn't just lined us up and shot us on the day we had arrived. Maybe that was the point. Someone or something wanted us to suffer. \n\nThe guards came closer and with shock I saw that they weren't the usual motley crew. These guards were dressed rather a lot finer and their weapons and boots were shiny. One spoke in perfect English, which was an-other shock as all the guards were foreigners formally of UN core divisions. The purpose of which was to ensure that they had no qualms in enforcing camp strictures be-cause after all to them we were but foreigners being held within the bounds of our former country of America and thus nothing for them to be concerned about in terms of our welfare or peace of mind, as the stories of what had been done in this facility were unlikely to make their way home across the Atlantic Ocean. \n\nThe guards were some distance off from me, but I made out their words clearly, \"This place should have been burned a year ago like the others. What a complete waste.\" \n\n\"Yes, why resources have been allocated this long is beyond me. It's going to end, though.\" \n\n\"Tomorrow?\" \n\n\"Yes, I heard the order. Tomorrow we take them all out in the forest and shoot them.\" \n\n\"Shoot them? Why waste bullets on the likes of these scarecrows? Why not just crowd them into these flea holes and light them up?\" \n\n\"It's the order is all I can say. Gives us an excuse to at least have a little fun tomorrow though doesn't it.\" \n\nThe other guard snorted, \"I haven't seen one of these relics fit enough to run faster than a two legged cow with milk fever!\" \n\nBoth men laughed and then left the barracks. I stayed where I was staring wide-eyed into nothingness. At long last I was getting my wish. I would be leaving Earth tomorrow by a means other than my own hand and I would see God and know no more pain. I'd made it to an honorable end! \n\n\"No, Tamara.\" Came the response from within the corridors of my soul. \n\nMy sudden found peace stealing away from me, I choked out with, \"What?\" \n\n\"Tomorrow you run child.\" \n\nShaking I looked about the barracks. Run? Run to where? \n\nNo further instruction came and my time away from the others was up. I got up and made to rejoin the pended in citizenry of a once great nation now reduced to talking monsters in uniform and avokeless slaves at the mercy of cruelty's destiny. \n\nTomorrow I would run. I had never been one for exercise and truly the last time I'd probably run was when I had been a child. \n\nI definitely didn't weigh as much as I had before. Truth be told, my condition of being overweight going into this setup of forced incarceration might be one of the chief factors in why I was in as decent health as I was. How ironic that was. \n\nAll the years I'd struggled with body image and weight that wouldn't come off was now a thing of the past and yet the means by which I had reached the present. In this world of the moment, though no such vanity of times past mattered a hill of beans. \n\nIn fact, I could see the benefits of being a little fat now as opposed to the ultra-lean magazine imagery I'd always been striving for. The question was did I possess the stamina to make a clean getaway tomorrow? \n\nWhether I did or not that was what had been asked of me and so that would be what I would do. I left the bar-racks and rejoined the act of fitting in with the rest and acting like I was half brain rotted. \n\nAll the rest of that day, though an air of excitement tinged my perceptions of what was around me. That night, though it all changed. For hours I lay awake in my cot, listening to the tormented dreams discontented sighing of those I had been imprisoned with. \n\nTears streaked down my face as the abject truth of my failure to reach any of them with the saving Gospel, the truth of Jesus Christ, made its impact upon me especially hard. I had tried to witness, but I had never succeeded and right now the bitterness of my failure and being unprofitable for the Kingdom of God was crushing. \n\nTomorrow all of these people were going to die! \n\nI felt like waking them up and speaking to them right now, but I knew it would do me no good. In a way I knew it wasn't my fault that no one had listened, but the knowledge of the future for these already tormented souls broke my heart even more than the loss of all my friends. \n\nBefore everything had come to an end and America had ceased to exist as a nation I had been part of a traveling gospel choir. We had been on tour and had just left Pittsburgh when the lights had gone out and the old church bus had come to a rolling stop.  \n\nIn the weeks that followed we had scavenged for food and fought to protect each other as best as we could. That said, the utter depravity of humanity unchained and given over to abject paranoia had been staggering. Desperate people did desperate things. \n\nThe men of the group eventually left the older women that couldn't keep up and those younger ones like me who wouldn't leave anyone behind. Things had gone from bad to worse without any men to help us and one night we were attacked by people so hungry it had driven them over the edge enough so that they crossed every frontier of saneness in order to feed upon their own kind. \n\nI and three other girls had fled barely escaping with our lives. We were picked up soon after that and ferried by the government to this place. \n\nAt first it seemed like the reprieve of all reprieves, until after about six months when we all realized that we had arrived in a place of hell on earth. It had been too much for the other three. \n\nOne girl got so weak because she refused to eat the food given to us that she became ill. In a matter of a month she was gone and her body thrown into the camp incinerator. A month after that Ellie tried to make an escape through the barb wire, but got hung up in the wire. The guard towers had shown no mercy on her. \n\nThere were still nights I woke up in a sweat hearing the sounds of the gunshots and seeing the way her body had jerked about as the bullets landed. Worst of all they had not removed her body from the wire. \n\nShe had been the first to attempt an escape in the FEMA camp and it was made clear to one and all that she had better be the last. Her body was left to rot and day by day the crows picked and tore at the carcass until all that remained were shreds of cloth and a bone pile on the ground. From that point onwards no one was left uncertain as to the reality of imprisonment we found ourselves all locked in. \n\nAbout that time the American guards were shifted out and foreign speaking ones had been moved in. Most of them were Polish with the remainder coming from other Baltic nations. With their arrival is when the rapes began. \n\nEllie's death in the attempt to escape affected me and Sissy, the last girl of the three, in an entirely different way. I remained content to bide my time for a better chance of escape, but Sissy gave up on the very idea of freedom being possible at all.  \n\nShe had done the impossible in my opinion by turning her back on her faith, one day and going to the guards. They had a standing offer of better accommodations and rations to any who would play the whore for them. \n\nFor a year Sissy had taken part in being used as a dishrag day and night as well as cleaning the guard com-pound, until in emptiness of spirit she'd taken her own life. Now I was all that was left of the South Carolina Gospel choir that had gone too far north and couldn't find its way back when darkness had fallen. \n\nTomorrow I would run. Whether to my death or for continued existence I did not know, but I would do my best, even as I had done my best to survive to this day. Tomorrow was all that I had left that I could lay claim to in life and it was firmly clenched in my mind. \n\nI rested the rest of the night and then as the morning began I did nothing but breathe deeply. What I lacked in terms of energy and conditioning maybe could be offset by having extra oxygen to burn. \n\nMy father had been a pro athlete and after his career, he'd gone into sports medicine and I had picked up a lot of things just from hearing him speak. He had loved me, but always I could tell he was disappointed in the fact of me being overweight and not following in his footsteps like my younger brother and older sister had. \n\nNow, however, I was lean and while I wasn't sick or emaciated like many of the others here with me were. However, I was still at a complete lack of vitamins, minerals and above all protein.\n\nCouldn't be helped. What I did have in bountiful supply was air. I had no limit to how much of it I could gulp down. I fed myself on air and over the course of the morning I completely de-acidified my body and actually felt a lot better than I had in a long time. \n\nWhy hadn't I done this before? \n\nI'd never had a reason to hope before was the answer to that one. Knowing the likely fate of everyone else though continued to burden my soul. Just why was God giving me a heads up to run? Didn't He care about anyone else here? \n\nI felt immediate contrition at that thought. I knew bet-ter.\n\nSoftly came the voice of my Maker into my thoughts, \"None have listened, save one. None have obeyed My commands, save one. One is enough.\"\n\nNumbly I stood shivering in the cold with the rest of the compound. We had been rousted out of our barracks and had been pushed and shoved out into the muddy yard. No explanation had been given and as it was we had been standing here for over two hours of which most of that time it had been lightly snowing. \n\nIt was colder feeling than usual today because I had removed several layers of clothing that I had collected from the departed over the course of my long stay here. If I was going to run I needed to be free to move and not en-cumbered with extra baggage.  \n\nAlso in these frigid conditions I needed to avoid all possibility of a chance of sweating. Better it was to be cold and dry than cold and wet, but right now as my teeth chattered I sorely missed my missing layers of clothes. In a way it had felt like taking layers of armament off, an armament of filth anyway. \n\nI perked up my head as a metal screeching sound was heard from the nearby forest. I'd heard the sound off and on over the last two hours, but this time the cause of the noise came into view. It was a bulldozer. I swallowed. \n\nThere was a flurry of activity and the gates of the compound were thrown open. The coughing shivering massed throng that I was a part of looked from the open gates to an American speaking guard with a bullhorn. He was one of the two from yesterday in the barracks. \n\n\"Attention everyone we are closing this camp. We're taking you to a safer place where you will be better cared for. Now please proceed in an orderly pace through the gates and down that track into the forest where you saw the dozer just come from. There will be food stations left along the way.\" \n\nLike a pack of lemmings destined for a cliff face mass suicide the crowd of incarcerated citizenry eagerly took off in the direction they had been ordered to go. The combination of being half addled and the mention of food along with the idea of being anywhere but here took out any better sense of reasoning they might have otherwise formerly possessed. \n\nI moved along with the pack, but purposefully I hung back towards the rear. I felt doing that offered me the best chance of cutting and running when the time came. We were well into the grove of trees and I was on the verge of making my break, when an iron fisted grip seized about my upper arm and swung me around violently. \n\nI gasped and gripped at the imprisoning hand, even as I took in the sight of the foreign guardsmen that had a hold of me. He was looking me up and down with interest and in that moment I realized that I looked far different than I usually did. In despair, I heard him ask in broken English, \"Why I don't see you before? All pretty ones gone, long time ago.\" \n\nI said nothing and with a little shock suddenly realized that the column had moved on without me. I tugged upon the man's grip in order to rejoin the others, but he wouldn't let go. The departing guards at the rear snickered and one called back in a Slavic language and made the motion of firing a pistol. \n\nThe one that held me grunted in affirmation and with despair, I saw the column disappear around a bend and I was left alone with the guard, as the falling snow began to pick up in earnest. The guard's hold on me tugged abruptly and I found myself forced down to my knees at eye level with the man's belt buckle. \n\nBreathing shallow I stayed where I was as the man undid his pants with his free hand and let them fall. I made to get up and move away, but he gripped a hand into my hair cruelly and held me in place. With his other hand, he drew his revolver out and cocked back the trigger of it and brought the muzzle of the gun to press into the side of my head. \n\nHe laughed and with a cry of anguish I looked up at him, not believing that one could be so evil as this. He fully intended to blow my brains out the moment I finished sucking him off. His grip on my hair only grew tighter. He shifted his engorging penis closer to my lips and with a grin said, \"Open.\" \n\nI'd rather die and to that end my teeth remained clamped shut even as he pushed his manhood that reeked of foulness against my lips. He grunted angrily and pulled my hair so painfully that I was forced to cry out and he was just on the verge of capitalizing on my slipup, when screams rang out from the forest only to be suddenly drowned out by the rapid percussions of heavy gunfire. \n\nThe noise distracted the man and on desperate instinct I acted. My hands came up and gripped at the hand that held the gun and with all my strength I moved his hand to position the gun against the man's own belly and with effort I managed to depress the man's finger on the trigger. The gun went off loudly. \n\nThe man cried out in consternation and his grip on my hair grew slack and I threw myself away from him. He collapsed down to sit crosslegged in the snow and stared on in horror at the blood pouring freely out of his body. \n\nHe began exclaiming expletives in his own language, as well as English, and I took my chance and ran for it. He turned the gun after me and started firing even as he screamed obscenities. \n\nI dodged and a bullet slammed into a tree in front of me blowing bits of bark that stung my cheek painfully. I kept dodging and the gun finally clicked empty or maybe the man was dead, but I was alive! \n\nI was free! ",
        "I ran clumsily through the forest in a direction that took me away from both the compound and the scene of genocide further off to the right in the forest. Dully it registered to me that I was headed north. I didn't much care where it was as long as it was away. \n\nGasping for breath I looked back. There was no visible sign of pursuit and best of all the snow was quickly making my earlier passage through the forest disappear. As the miracle of the obscuring snow became realized for the true blessing that it was I looked heavenward and gasped out in praise, \"Thank you God!\" \n\nI was quite warm for the moment, but I needed to keep going. I moved forward still out of breath, but I didn't run this time. I walked as quickly as I was able to, but as the adrenaline wore off over the course of an hour I feared that my time of freedom would soon be over.\n\n\u2003\n\nCHAPTER TWO\n\nDivine Providence\n\nI was done.\n\nStumbling with fatigue I caught myself up against a tree. I had escaped, but I wasn't going to make it any further. Closing my eyes, I whispered out brokenly, \"Please God. Please I... I...\" \n\nI shook my head and opened my eyes as I tried to ex-press how I wanted to live, but had nothing more to give. A bright color out of place in the snowy forest caught my eyes. \n\nIt was a truck! Not an army truck, but a regular, ex-tended cab truck. It was a bright blue, but it was covered with leaf debris and a fallen branch lay over the back bed of the truck denting in both side panels. It looked like someone had just left it there and it had sat out in the elements for a long time. \n\nCautiously I approached the truck. Peering into the bed of the truck I saw that it was filled about halfway with split wood that had weathered on the inner faces. This truck had been here since the EMP attack that had fried all the computer modules on modern vehicles. \n\nI went to the driver door and opened the latch. It moved and with a tug the door came open. The interior of the truck looked like it had never seen a hard day's use ever. I opened the back door and saw several items laying on the seat. One of them was a wool blanket. \n\nI looked around, but saw nothing as the falling snow covered everything with an ever-increasing layer of white powder. Looking heavenward, I felt tears come to my eyes. Words failed me and truly it didn't seem that they were needed. \n\nI crawled up into the backseat and shut the door. Even though there was no heat, I felt warmer. The interior of the truck still smelled new. It was a good smell. It had been a long time since I had smelled something good. \n\nI wrapped the wool blanket around me and began looking into what else the truck had in it. My hand came out of a box on the floor holding an energy bar. I stared at it in my hand for a long moment and then with as much reserve as I could muster, I opened the wrapper and had my first bite of real food in two and a half years. \n\nTears flowed down my face as the flavor of the bar exploded in my mouth and reminded me of how life had once been when a bar like this would have been nothing but a snack to me, but now served as the finest of all dinners. Truly the experience of life was a matter of perspectives. \n\nI ate the bar and though I wanted to eat more I made myself wait. I continued looking and found a pair of hiking shoes, a pair of blue jeans, several T-shirts and a heavy over-shirt. I found more food bars and two bottles of water. I swigged down one bottle of water on the spot and felt the betterment of it almost immediately. \n\nI had everything I needed within this truck. The only thing that felt out of place was me or better put the smell of me. The clothes would be baggy on me but they would work and I made the decision with sudden energy that not only was I escaping from my captors this day, but also from my smell. \n\nI opened the door of the truck and got down. The snow had let up and sudden afternoon sunshine lit up the glenn I was in. The sight of the sun sparkling through the snow was beautiful to behold and for the first time in a long time I took in the wonder of creation. \n\nThe strength of the sun's rays against my cheek emboldened me and I started stripping off everything I had on. I let the soiled and tattered garments fall to the snow and taking a step I got on top of them and leaned down and undid the binding cloth that was all that held my shoes together. I felt worn out all over again from just the act of undressing. \n\nFinally, my feet were free and I threw the repulsive worn out shoes far from me. Straightening I stood up and breathed in. It was an odd moment as I hadn't seen myself unclothed in almost 2 years. \n\nI looked nothing like I used to. I actually looked good! \n\nGazing down past my surprisingly still full breasts I beheld in wonder the lack of extra weight hanging on my hips. Wonderingly my hands coasted down my lean sides to flare out over my wide hips. \n\nI let my hands coast around behind me and with surprise, I felt at how well formed my rear felt. It no longer jutted out beyond me as it once had, and while it wasn't small it was less than half the size it had once been. \n\nLeaning forward at the waist I gazed back at myself and with shock beheld the fact that I actually had a gap between my thighs now. My thighs no longer touched and yet they were still quite full looking! \n\nIn no way other than my sunken in cheeks and visibly outlined rib cage did I look like I'd been cooped up in a concentration camp for over two years. Gradually my brain realized upon what my eyes were seeing and my hands were feeling. I was beautiful! \n\nTears came down my cheek and I shook my head. Why did being beautiful even matter? \n\nSomehow though it did. I looked now like I'd always wanted to. I looked like my older sister that my father had always taken such pride in. \n\nI raised my hands and cupped my full breasts. In fact, I looked better than she had. For what purpose had I been preserved into such a state? Truly, looking down upon myself, it was as if I stared at the body of someone else and not my own. \n\nLooking up I asked, \"Why God? Why?\" \n\n\"Why not? You were made to be beautiful and truly you have always been. The beauty you now see is not what I've seen from the beginning. You are a faithful soul and you have remained constant in relationship with Me through great adversity. It is out of that relationship with Me that your beauty flows and truly it is nothing for me to make the outer form of you to reflect only in partial form the beauty that I see within you. Today may be the first time you think of yourself as beautiful, but from the day I formed you in your mother's womb, I have never thought any different of you. Now wash the outside, even as you are a possessor of a clean spirit within made so by the blood of My Son sacrificed for you and by which you have truly been set free and now there is nothing impossible for you to achieve.\" \n\nShaking I reached down and grabbed a handful of soft wet snow and began to scrub away the grime. It was the most invigorating bath that I'd ever had. By the time I was done I was completely chilled to the bone and my teeth were chattering, but it was worth it. I was clean! \n\nShakily I pulled myself up into the backseat of the truck and feeling too tired to even dress I wrapped myself in the blanket and lay down across the seat. Warmth and contentedness spread through me and for the first time in a long time I felt myself smile. It felt good. \n\nMy eyes opened and I pondered on something. Sleepily I spoke, \"Nothing is impossible for me?\" I felt an assurance from all I knew about the Bible to know that was the truth. \n\n\"God, I fully submit myself to Your plan. It is clear to me now that You have a plan. I may be able to do any-thing with Jesus's help, but I'd rather You do what You want with me. Even when I don't understand it.\" \n\nMy eyes closed and I was soon lost to the world as vivid dreamery descended upon me. Somehow I knew I was dreaming, but I just let the thoughts and impulses flow, trusting in God to protect me. There were nightmarish moments and then peaceful moments and then some-thing else. The feeling of being touched. \n\nIn startlement I woke up. Everything was quietly, still in the truck and it was completely dark outside. Nothing had touched me, but I had felt it in my dream as if it were real. \n\nMy heart beating heavily I lay back down. Closing my eyes, I felt myself pulled back down as if drugged and the dream came back in full force. The touch I had felt was a man's. I couldn't see him. \n\nHe was always out of my sight like an invisible phantom and it would have been nightmarish if it weren't for the fact that his touch felt good. Very good! \n\nIn shock I looked down to see my breasts held by this phantom man. I tried to turn and look at who held me so intimately, but he was always gone and yet his hands remained on me and moved across my flesh in a way as had never been done before. \n\nThe presence of the unseen lover was strong, even as he mastered me in some deep way that caused me to feel like endlessly surrendering to as if it was something I had always longed for and I finally found. Whatever he wanted I would do. Anything! \n\nIn shock I felt him in me moving and I exploded with orgasm. Crying out I reared up on the truck seat and my eyes looked for the man who'd just been aggressively owning me in a deeply sensual fashion that I had never actually experienced in the flesh as I was still very much a virgin at 22 years of age. \n\nI flung the blanket from off me and I stared down at the apex of my thighs in shock. It had been so real. My whole body still shook with the vibrations of the orgasm that I'd had while still in my sleep. \n\nLooking around in a daze, I blinked as I took in the bright sunlight shining through the dirty windows of the truck. It was morning, but it was lost on me as all I could do was reflect on how real the dream had been. \n\nReaching for a clean rag on the floor I wiped the co-pious amount of fluid that had come out of me and was bathed across my inner thighs. It was almost as if I'd peed myself only it wasn't pee. \n\nShakily I brushed some of my hair out of my face. For a moment my eyes closed and when they did the imagery of the dream assailed me with what it had been like before I had come awake. My eyes shot open again as I looked for the man, but I was alone. Whatever did this mean? \n\n\"God... I... What's this about? You know every-thing... Do I need to worry about this?\" \n\n\"No.\" \n\nI lay back down upon the seat, wishfully hoping for a much more detailed answer than that. \n\n\"Embrace My plans for your life and it will go well for you Tamara.\" \n\nI stared wide-eyed at the ceiling for a long moment. All I had seen of the man had been his hands. They had been strong and capable and yet I remembered receiving no pain from them. They had been burnt brown by the sun, swallowing as, I searched through the dream for re-membered imagery I realized that they had been the hands of a white man. There was no doubt in my mind that God was telling me something. A great deal really. \n\nI bit my lip from questioning Him on why as I re-membered my own words of surrendering my future from the night before for God to do with me as He wished to over any disposition of my own will. He'd said as much to me just now. \n\nHow could I doubt what He meant when it had been made so clear? What would my mother say? \n\nWhat did it even matter, if what God wanted for me was something different, besides it was highly unlikely that my mother was even still alive, let alone any of my family. The good Christian lady that she had been she had still looked down on anybody whose skin wasn't as black as her own. It had been one thing to tolerate the presence of a white person at church or around town, but the concept of her daughter being with a man of such color would've awakened every last nerve in her. \n\nI had always found her prejudice distasteful, especially when it had come to who my friends could be and could not be. I'd had my share of white friends in school despite her objections and now as the future seemingly was already planned out before me it would appear that God's Word was true in that He was not a respecter of persons for surely He was discarding many a prayer said by my mother in regards to me and any future candidate for husband. \n\nMy father had been more ambivalent about matters of race, but he wouldn't have liked what God seemed to have planned either. I wasn't sure how I felt about it either, when it came to that, but in the end it didn't matter. \n\nI was going to honor God's wishes to the fullest and that was that. I sat up on the seat and awakened need for food assailed me almost instantly. Fortunately, I had food and I made a point of thanking God for it before I gobbled down three of the bars and drank the last bottle of water.\n\nCHAPTER THREE\n\nSavior or Executioner?\n\nNippy wasn't the word for it. A cold, blustery wind cut through and around the tree trunks in an endless bar-rage of coldness. It was only late afternoon, but already the sky had darkened up and I feared that a storm was coming. \n\nThe stiff, cold, I could handle as long as I kept moving, but if it started to snow and I got wet I would be doomed. In vain I looked about for a place of refuge, but none was offered. \n\nI would have to make camp out in the open if I didn't find something quick. There were no evergreens here, though. I had found them to be the best places to stop for the night because of the coverage the branches offered. \n\nIn the distance through the sparse forest naked of leaves I saw a green belt of color up ahead and huffing out exhaust I headed for it. It had been three days since I'd left the truck and the best I could say was that I was managing. \n\nI had eaten the last food bar this morning though, and the bleakness of a cold night without food was already settling heavily upon me. At least I would have a fire. That was something. \n\nAnd I was free. That was the main thing. I could be grateful for both, even if other needs, namely my stomach weren't being satisfied. \n\nI reached the pines and searched about for a likely spot. I untied the handsaw I had brought from the truck and quickly cut a hole in the understory of a pine no more than 15 feet tall. I made a teepee out of it, sort of. \n\nI then interlaced some of the cut branches overhead of the opening to act as a bit of an awning and the rest of them, I piled up against the base of the tree to serve as my bed. That done, I went about gathering wood, even as snowflakes began falling all around. \n\nIt had gotten much darker and I feared for the night I was in for. I gathered twice as much wood as I had the other nights. \n\nWith the driest pieces of wood I set about trying to get it lit with some trash from the truck and a cigarette lighter I had found in the glove box. Even though I was sheltered in against the tree as I was, it was still difficult to get the flames to catch hold with the wind currents milling around making strange turbulences. The flames did catch though, just about the time my fingers holding the lighter felt ready to fall off. \n\nWorriedly I fed the flames and the fire got bigger. An inch of snow had fallen outside already. Did I have enough wood? \n\nWorse yet, how many more fires would I be able to make with the lighter? It had started to flicker on me at the end. Did it have enough in it for even one more fire? \n\nThe fire well ablaze I huddled back from it and sat up against the uncomfortable surface of the tree trunk. I covered my legs as best as I could with the blanket and sat shivering, waiting for the fire to do the miraculous and make me warm. With time it began to happen, but it was a painfully slow process. \n\nShaking I clasped my numb fingers together and buried my face against my knees and cried as the snow piled up outside now in earnest. I'd fought a silent war against God in the past few days. \n\nI'd been making out for myself so well the thought of staying on my own had presented itself as a wish in the back of my mind. I hadn't asked God to make it become a reality, but I had been entertaining the thought. Now however that wish was dead and done and over with. \n\nI didn't want to be on my own anymore. I wanted to be with the man with warm hands. At the very least, of all he might offer me, I knew that he would at least keep me warm. Sobbing against my knees I begged, \"Please God, send him to me quickly! I... I don't want to be alone!\" \n\n\"You weren't created to be alone Tamara and yet, in your own way, you have been for far too long. I've heard your plea and already answered it. Tomorrow, stay where you are and do not leave until it is time to follow.\" \n\nBlinking, I gazed bleary-eyed into the fire. As bad as things got my God never left me. He was always there with me, helping me, a constant encouragement. He hadn't always saved me from my predicaments, but when He hadn't He had at least enabled me to get through them. \n\nI threw some more wood on the fire and waited for tomorrow already feeling much warmer in anticipation of it.\n\n**********\n\nI stared anxiously at the forest edge off across an abandoned field. Nothing moved, but I felt something menacing just the same. Looking away, I paced my path through the snow back and forth as I had been for the last two or three hours. \n\nIt was getting on to midday and the sun was shining. About a foot of snow had fallen overnight and it looked so fresh it seemed good enough to eat, but it was just water. Stopping I held my hand to my stomach as hunger roiled through me. \n\nMovement caught my peripheral vision and I glanced up at the distant forest edge of the clearing I had unknowingly camped beside last night. With startlement I took in the sight of five individuals running across the field to-ward me. Something was not right! \n\nApprehension knotted up in me and then coalesced into sheer terror. For starters, there was supposed to be only one man and these men running across the snow covered field had the appearance of animals in the way they moved rather than that of a human. \n\nA wolf pack on the hunt would be a better perspective of describing them. I turned to run as fear over-whelmed me with the certainty that I might soon be eaten alive. \n\nI made it to the end of my paced line in the snow and stopped as if some invisible force had caught me. A sudden reflection of the evening before reminded me that God had told me to stay put. \n\nI glanced back and saw the men dangerously closer. Surely this couldn't be God's plan? \n\nEverything within me screamed to run, but faith said to stay. Faith in God was the only thing I had of value. If I ran I would lose my faith. If I lost my faith, I would lose God. Life without Him simply wasn't worth living. \n\nShaking badly I turned back and went to my woodpile of the night before. I picked up a heavy broken off branch and stepped back over to my patch of beaten down snow. This was it. This was everything put on the line in hope and faith that God would deliver me from a situation I could never hope to do so on my own. \n\nMy gaze took in the enemy and I quivered in spirit at the sight of what happens when people stop being human. The bug eyed and glassy vacant gazes of cannibals washed over me with both the desire to mate me and eat me at the same time. Judging from the stories I'd heard they would likely do both. \n\nPanting heavy with mouths open wide like dogs they surrounded me. They were dressed in little more than rags and in their hands they held an assortment of weaponry ranging from dirty machetes to simple pieces of heavy metal for the purpose of clubbing. \n\nThey grunted and snorted and mumbled unintelligibly and in shock, I realized that they had even lost the ability to form words. One of them darted in toward me and I twirled about and swung the branch. ",
        "The heavy branch caught his hand clutching a kitchen knife and I heard the bone break. Howling like a demented lunatic he leaped back from me and I turned warily in a circle ready to hit again. \n\nThe one I took to be the leader of the pack grinned wolfishly and stuck his hand into the rags he wore and of all surprises pulled out a handgun. He pointed it directly at my head and laughed and the others did so with him. \n\nI was dead, it was as simple as that. In supreme anguish I waited for the bullet. \n\nSomething whistled past my ear and in a daze, I thought for a moment he had missed me at point-blank range, but instead I received the shock of my life when I took in the stunned cross eyed gaze of the cannibal holding the pistol, who now had an arrow sticking through his forehead. He dropped to the snow and with two more harrowing whistles of foreboding two more of my assailants fell with grunted gasps of dismay. \n\nThe other two broke and ran in a bid of desperation to escape. An arrow found the neck of one and he pitched forward with a squeal into the snow as blood sprayed out across it in a wide arc. The last one took an arrow to the hip and collapsed to the ground growling with both anguish and rage. \n\nNumbly I stood as I had been with the club gripped in my hands staying absolutely still. Slowly I turned my head and saw the figure of a man approaching at a swift pace that had woodsman written all over it. \n\nHis pace eating stride had him on the scene in no time and tomahawk raised he hacked it down repeatedly upon the wounded cannibal until his cries stopped. Completely shook to my core by the situation and the violence of it, I wasn't prepared for when the man straightened from his grisly task and threw his tomahawk straight at me. \n\nAs it whistled by me by the narrowest of margins and I was just seizing on the reality that the man meant to kill me too, when I heard the bone crushing smack of steel connect with human flesh. With a start I dodged out of the way as one of the first victims fell back down to the snow with the hatchet stuck fast in his chest, which this time had finished the job that the arrow hadn't completed the first time. He'd been coming up behind me to no doubt use me as a hostage or just kill me out of spite. \n\nI turned back around only to behold the man who had dispatched five cannibals, in what seemed like just as many seconds, standing less than 10 feet away from me. Slowly then he began to approach and I almost felt like screaming, but there was no one to save me. \n\nComing close he gripped the club I held and tugged and I let it go. I cried out softly then with startlement as he pushed on my shoulder, which caused me to fall back-ward into the snow, only to land sitting on a boulder that I hadn't seen was there. Shaking and not sure what was about to happen, I sat still. \n\nThe man turned away and started pillaging whatever was of interest to him from the dead. Still dazed, I glanced away from him and my gaze landed on the gun lying in the snow not far from me. \n\nI wanted to grab it and shoot the man as he completely terrified me, but in effect he had saved my life and even as wild as he was he had nothing of a cannibal in appearance about him. However, that was no assurance that he wouldn't rape me though. \n\nBe that as it may, I let the gun lay where it was. I looked to the man and contemplated my options. \n\nIn effect I was at the end of my rope. I needed food, well, I needed everything. I had done alright up till now, but truly I did not know how to survive on my own in the forest let alone in wintertime. \n\nI needed help and like it or not this man had helped me. Would he help me again? \n\nAt least he hadn't killed me yet if that was any assurance of his intentions. Looking down his tall frame I noticed his hands that were now free of the gloves he had been wearing earlier. \n\nThey were very strong looking and articulated as if used to doing fine tasks. As a whole the man was very well put together and while he wasn't what many would call handsome, he had dependable, hard worn strength written across his features, and in this upturned world where survival was everything he struck me as being extremely desirable. \n\nHe would father strong children. My children. \n\nThe truth was plain to see for me as his hands were the ones from my dream of several days before. Not knowing how to accept and deal with the situation, I prayed quietly for strength to come and firm me up to the inevitable that had my insides feeling like jelly. \n\nDone with his task of looting the dead, he came to-ward me and I felt an even higher pitch of nervous apprehension radiate through me as I fully took in this man who I knew according to God's plan would soon possess my body and daily control my fate. Stooping, he picked the gun up. He'd known it was there all along I suddenly realized. \n\nHolding the gun out to the side, he pulled the trigger repetitively and emptily the hammer clicked down in repetition. The gun was empty! \n\nHow had he known that? Had he been testing me? \n\nSlowly his fingers reached into a pocket and pulled out a captured bullet and he loaded the gun with it. Raising the gun he aimed it directly at my head and shuddering I fell forward onto my knees in the snow and closed my eyes and waited for the inevitable. Nothing made sense at all! \n\nI waited, but no shot came. I opened my eyes slowly only to see that the man was gone and that the gun was lying on the rock that I had been sitting on. Glancing about wildly I saw the man fading away into the forest and be-fore I could think better about my actions I grabbed up the gun and ran after him. \n\nCatching up to him completely out of breath I came to a stop as he turned to me with a knife in his hand. Breathing heavy I extended the gun out to him handle first and said, \"You forgot this.\" \n\nHe stared at me incredulously for a moment, then taking the gun he pitched it away into the forest. Then he spoke for the first time, \"Are you crazy black bitch whore!\" \n\nFeeling a calm that I did not claim to possess in and of myself, I said, \"I can assure you that I am not a bitch and while I am black I am not a whore, because if I was a whore I would still be in a camp cozied up to a guard and better off food wise than I have been, because of sucking off every sadistic excuse of a man this world seems to be populated with. You sir, however, are not sadistic and that is a relief as is the fact that I'm pretty sure you haven't eaten anyone.\" \n\nHis initial rage with me seemed to have departed and now almost dispassionately he asked, \"What do you want?\" \n\n\"I want to come with you.\" I managed to force out past my lips even as I felt that I had spoken a lie and yet I knew it was the truth. \n\nHis face was completely closed off in terms of readable emotion or at least anything that seemed favorable to me as he said, \"I don't need a woman.\" \n\n\"I'm not offering to be your woman as you put it. I do however want to be your wife.\" \n\nSuddenly his face was nothing but emotion as he ex-claimed, \"What!\" \n\n\"You heard me. If that doesn't suit you then please kill me now. I can't survive on my own out here any longer and starving to death is not to my liking or for that matter being eaten. Also, I intend to be no man's whore as I was raised to be a lady and I've kept myself as such and if you find me to be any less than virgin you have my per-mission to slit my throat. While it's obvious that you are a prejudiced man against people of my color I can assure you that as a female of the same species that I'm still quite beautiful as is attested by the fact of how erect you are right now with the desire to have me even though you deny it with your words.\" \n\nThe man's hard gaze shifted away and he looked at a lack for words, as it was impossible to deny how tented out the front of his pants were and the reason for it. In a softer voice I said, \"I want you to know that I respect you.\" \n\nHis gaze came back and with it the force of his presence as he asked, \"Why?\" \n\n\"We are out here alone and there is no force of law or any stricture holding you back from doing whatever you want with me and yet you were going to leave me un-touched despite the fact of how much you want me. I know what I've said is weird, I mean about being your wife, but everything in this world is different now and I'm just trying to do my best to survive with dignity.\" \n\nTears falling down my cheeks, I continued on with, \"I don't want to die, but I'm not going to give up my faith in Jesus or be someone's whore just so I can see one more day's light.\" \n\nI stopped talking and a long moment passed by. In desperation, then I asked as the cold wind burned against the tear trails on my face, \"So how about it?\" \n\nHe'd never stopped staring at me, but now he broke eye contact and looked away. His head gave a nod and in surprised shock, I heard him say, \"I accept.\" \n\nHe'd accepted! \n\nOh God, what had I done! \n\nNot saying another word he turned away from me and headed off quickly into the gathering shadows of the for-est. As if coming out of a trance, but not really believing yet that he had accepted my proposal of marriage, I hurried after him in order not to be left behind. Oh God, what had I done? \n\nTo some effect that remained to be seen, but I was sure of two things. Soon I would have food and tonight I would be warm. \n\nThere was also one more thing that I was sure of. Soon I would know exactly what it felt like to have a man inside of me. \n\nWith a quiver that surprisingly spoke more of anticipation than of fear I did my best to keep up with the stranger who had just accepted the responsibility of looking out for me from this day forward. Maybe he wasn't the man my mother had wanted for me to marry, but he was the best example of a man that I had seen in a long time and while I didn't know much about him, in some ways I knew enough. \n\nI had no sooner than caught up with him when he stopped causing me to bump awkwardly into his back. He was quite tall and solid as a rock. Both of my breasts tingled from where they had smashed into the hard plain of his back. \n\nAwkwardly, I stepped back and shyly brushed at my hair very much unprepared for the reality that soon this man would be touching the very areas of me that now tingled as if on fire with just the briefest of contacts. \n\nExtending his hand he offered me a clump of plucked pine needles and said, \"Here chew on these. Lots of Vitamin C in them, which you're likely depleted of.\" Silently I took them from him and placing them in my mouth I chewed as he had directed. \n\nSpeaking around the needles I said, \"Thank you.\", even as the rich flavor of pine burst freely across all my senses to an almost overwhelming degree. He grunted and moved on even as I experienced the feeling that maybe things weren't as crazy as I thought they were.\n\nCHAPTER FOUR\n\nHonesty First\n\nAbout the time the pine needles were gone from repetitive chewing upon them the man stopped briefly and reached into a pocket and pulled free a handful of dried meat cut into thin strips. I stared at the dried meat that he had offered out to me. It was simply too much to take in. \n\nYes, I'd known he was going to feed me, but I hadn't expected him to do it so unasked for. He wasn't making me beg for anything. \n\nNumbly I reached out and took the dried meat, even as several tears made their way down my cheeks. Overcome as I was emotionally it was still all I could do not to tear at the meat like a vicious animal, but instead to bite it off and chew in a controlled fashion. \n\nHe grunted and I forced myself to make eye contact with him. His gaze was enigmatic as he said with a voice that sounded rusty from lack of use and all the more gruff because of it, \"This is the second time you've impressed me. Most people as hungry as you are would gobble that down in two seconds.\" \n\nHis expression, then turned quizzically curious then as he asked, \"Why on earth are you crying though? I assure you that that isn't human you're eating right now if that's what's got you so concerned.\" \n\nI shook my head and quickly wiped at my tears as I said, \"No, I know it isn't human. I've had deer jerky before. It's just this is the first real food I've had that came directly from nature and didn't smell horrible in a very long time. Thank you for sharing it with me!\" \n\n\"Where have you been held up?\" \n\nI hesitated to speak the answer not feeling entirely sure of him, but God had chosen him so I had to trust him like it or not, \"A FEMA camp.\" \n\nHis one eyebrow rose, \"And you're still a virgin?\" \n\n\"Yes, I am.\" I responded steadily with assurance as I met his gaze head on. \n\nHe nodded and asked, \"How did you get out?\" \n\n\"I heard two guards talking. They were going to take us out of the camp and shoot us the next morning. I went along the next morning, but I hung to the rear of the group.\" \n\n\"And made a break for it?\" \n\n\"Not exactly.\" I whispered before quickly looking away. \n\nHe stayed where he was and it was clear to me that he wasn't moving until I told him everything. Twisting my hands together nervously, I said not looking at him directly, \"In the camp in order to avoid interest I made myself look bad with extra clothes and I gave myself a hunch and well anything to make me look... unappealing. Because I knew I had to run that morning I took most of my outer clothes off and I guess I wasn't paying attention to how I walked or acted because a guard noticed me. He held me back and the others went on without us. He forced me down onto my knees and it was clear that he wanted me to use my mouth to suck his... thing, but I wouldn't open. He had his pistol pressed to the side of my head and I knew he intended to shoot me as soon as I'd done what he wanted me to do, but that didn't matter as I would as soon as die anyway. The other guards had started to shoot the people further on away from us and he got distracted by that and when he did, I grabbed his hand and turned the gun into his belly and I managed to pull the trigger. He let go of me and I ran for it and here I am four days later.\" \n\nI took a quick peek at him and was surprised to see something close to admiration being reflected in his icy hard eyes. We stared at each other for a long moment and then he asked, \"Did he get it in past your lips?\" \n\nI flushed completely red at his question and face burning I whispered, \"No.\" \n\n\"So tell me Princess will you open your mouth up for me?\" \n\n\"Yes.\" I said numbly even as I acknowledged that I was experiencing one of the most embarrassing moments of my life. \n\nHe stared at me for a while longer and then as if to himself, he said, \"That's the third time you've impressed me.\" \n\n\"Because I didn't let him use my mouth?\" \n\n\"No. It's because I don't think you've lied to me yet. You don't know me from Adam, but you know I'm your only chance at survival and yet it's hard to admit to having been in a FEMA camp or almost being raped. For all you know I could be a government agent. I respect you for not lying to me. My biggest word of advice to you is never do it. Got that honey?\" \n\nI nodded, even as I saw firsthand that honesty meant a lot to this man. He turned to go and I asked, \"What was the first time? The first time you were impressed with me.\" \n\nHe glanced at me and said, \"When you didn't run. You faced your enemy head on. I respect that. If you'd run I wouldn't have intervened to save you.\" \n\nMy breathing stopped and gathering in air shallowly I breathed out, \"Why wouldn't you have saved me, if I'd made a run for it?\" \n\nHe gave me a hard look and said, \"Because this life is full of victims, but short on fighters. You staying put told me that there was something worth saving in you, even though you are black. Now enough talking Princess and let's get going.\" \n\nHe turned forward and calling out I said in a surprisingly good mood, \"My name is Tamara.\" \n\n\"Okay, Princess.\" He grunted in response and far from being offended I smiled softly. \n\nI'd never had any man call me Princess before, but that wasn't why I was smiling. No, I was smiling because he had just confirmed my faith all over again. \n\nGod had said not to leave until it was time to follow and that was exactly what I'd done. The broad strides of the man ahead of me breaking trail were easy to follow because I knew for sure that it was a path God was leading me down. The man was scary to be sure, but God was in control. \n\nSuddenly, what had been a terrible day had become a good day. I nibbled on the jerky and did my best to keep up with the quickly evolving future.\n\n*********\n\nI had thought myself proficient the past few days at making myself cozy shelters, but this man's efforts put me to shame. For starters, he had a tent. A very small tent. \n\nThere were no wasted moves on his part, as he went about making camp. For such a big man he moved with the grace of a cat. He asked for no help from me and so in order to be productive, at least in something I went about gathering firewood. To which at the completion of he seemed marginally pleased with. \n\nI was finding him to be a very hard man to read and what was available to discern was that he was short on temper and quick to be wrathful. I did not want to be on this man's bad side to be sure. The problem though was did he have a good side? Time unfortunately would tell the truth of that one. \n\nHe already had a fire going and a broth of some sort brewing in a metal cup held over the flames to which he continued to add items to. Several of the items were those which I had seen him stop and forage for today. \n\nAwkwardly, I squeezed by him into the far side of the tent, which wasn't saying much as I was still right beside him. Trepidation at what would occur tonight was high, but I was committed. I was his wife for better or worse. \n\nHe was certainly doing his part to care for me and so I would care for his needs. I waited silently in surrender for what would come. \n\nThe smell of the broth was pungently awful and I wrinkled my nose at the herby smell of it. He'd taken it off the fire and was stirring it. He stopped stirring it and turning to me he handed it out to me. I didn't want it, but I took it. I starred at the dark, strong smelling fluid and then glanced up at him. \n\nHis expression was surprisingly rueful in appearance as he spoke, \"Given the diet you've had and the poor quality of water along with close proximity to diseased people it's highly likely that you've picked up some parasites along the way. You need to get rid of them and that broth will do it in short order. I'm not going to lie to you; it tastes worse than it smells.\" \n\nI glanced down at the cup. I'd had worse. Softly I said, \"Thank you.\" \n\n\"For what?\" \n\n\"Caring for me.\" I didn't wait any longer, but bringing the cup to my lips I drank from it. \n\nOh, it was awful! Apple cider vinegar tasted better! \n\nI had to do it though, and half gagging I got the whole cup down. I did something then very unladylike and belched quite loudly. He chuckled even as I felt complete mortification. He was handing me something and feeling very much sick to my stomach I took it as I focused on not throwing up all over everything. Fighting to keep the vile stuff down I glanced at my hand to see several clean looking rags lying across it. What were they for? \n\nI glanced at him for an explanation, but right about then it occurred to me exactly what they were for. Oh God! \n\nI forced my way past him as only a desperate woman in need of a bathroom could be. I made it a grand total of 20 feet to some larger bushes before I had one of the most painful experiences of my life. \n\nI was there for a long time during which time I think I died several times over. When it was finally over though I knew one thing for sure. I was very clean inside and in a way that made me feel better. ",
        "Weakly I made my way back over to the tent and again, I awkwardly squeezed by him and sat down in the open area on the other side of him. Weariness assailed me and suddenly I was fighting to keep my eyes open. \n\n\"Still want to thank me?\" \n\nI nodded my head. I was still too embarrassed to meet his gaze though. \n\n\"Lay down and go to sleep Tamara.\" \n\nImmediate relief shot through me and I collapsed over onto my side and I think I was asleep in the same moment as my head hit the ground.\n\n*********\n\nWyatt's Perspective\n\nWyatt Richards, as he had been known in a former life, reached over and lifted Tamara's head and slipped his pack beneath it. She never woke up. \n\nHe let go of the knotted together tresses of her hair. Never in all his days had he imagined himself hooking up with a black chick, but now as he looked over her he wondered why on earth not. The clothes she wore were baggy and obviously meant for a man, but now as she lay on her side her hourglass proportions were clearly outlined. \n\nShe was beautiful. She was his. \n\nHow had that happened? \n\nHe'd gone from ambivalently waiting in shelter to watch her die to stepping in and rescuing her. Anyone who had enough guts to turn and face an enemy the way she had done deserved a chance at life. Somehow things had gotten a lot more complicated after that though. Heck, he'd married her! \n\nShaking his head Wyatt stared into the flames for a long moment. Was he finally losing it after being on his own for so long or was he actually regaining some of his sanity? \n\nSome previously forgotten aspect of humanity to willingly risk one's own life and care for others. Time would tell. \n\nWhether it was right or wrong he was going to enjoy her. His gaze lifted from the fire and took in her face. \n\nShe needed some filling out, but somehow through the depravity of not having good food her lips were still full and very soft looking. His loins ached painfully. \n\nAll afternoon he'd been partially erect at just the presence of her near him. Something about her cried out to him to be beastly and mate her repeatedly. Again and again. \n\nHe would do it too. Tomorrow, though he would start with her lips. \n\nThey'd fallen open in her sleep and idly he fantasized about what it would be like when they formed wetly about his shaft tomorrow. He'd fill her mouth and more with himself. \n\nHe did not doubt that she was as virginal as she claimed to be. She had such an honest, forthright demeanor about her that he knew he could trust her. In truth, he had never sensed that about another woman be-fore, except for maybe his mother, but that had been a long time ago. \n\nSighing, he glanced away from her lips. It was going to be a long night. \n\nHe lay down and was treated to the sight of her pressed together thighs. He groaned as his shaft got all the harder for the anticipation he felt for what it would be like to pull her thighs wide and slide into the relief of her tight sheath where no man had ever been before. \n\nSweat broke out on his brow as he warred within himself to keep from waking her up on the spot and taking her. It was hard coming to grips with being thoughtful of another person's needs again. In a way it was good to see that he still possessed some finer qualities and he exercised them strenuously all night by refusing to so much as touch her.\n\n\u2003\n\nCHAPTER FIVE\n\nPleasing the Huntsman\n\nI woke up abruptly. The first thing that occurred to me was that I felt really good. The second was the deer jerky and the cup of water sitting on the ground in front of me. \n\nLast but not least was that my man wasn't in the tent. Hurriedly I ate the jerky and drank the water, noticing as I did so, that I wasn't as hungry as I would've thought I would be. Maybe I'd had a few parasites after all. Asta la vista was all I could say to that! \n\nGetting out of the tent I noticed it was broad daylight and surprisingly warm. He'd left me sleep in and I was very grateful for that. I saw him then and I stopped. \n\nHe was facing away from me and something about his demeanor echoed tenseness bordering on wrath. A hitch of fear squeezed about my heart. How was I ever going to manage such a man? \n\nI whispered a prayer for myself and this man and had immediate relief as I felt an answer from above sweep through my soul, \"It is within your ability to ease him. Go to him and be his wife and care for him. I tell you truly that he will come to love you for your efforts. Don't make him take what he wants, but instead give it to him and together be fruitful and multiply. Love him, even as I have loved you, before you knew to love Me in return.\" \n\nNodding in acceptance I took courage within my spirit and oddly felt relaxed as I softly approached the man that would have me from this day forward. I came up beside him and glanced over at him. He looked at me intensely and I smiled. \n\nHe was like a wild animal ready to spring to the attack and yet calmly I said, \"Thank you for letting me sleep. You've waited far longer than I thought you would and I want you to know that I'm grateful for it. Now, however, I would like to please you. I ... how...what would you like me to do?\" I managed to get out at the last even as I blushed profusely. \n\nI never broke eye contact though, and for that I was proud of myself. He blinked and wiped away sweat on his brow. He looked away, seemingly more tensed than even before. I glanced down him to take in the heavy press of his shaft against his pants. God had married me to a stud to be sure. \n\nI had no doubt that this man and I would have many children. I simply knew that it would be so. \n\nWith a feminine desire to please my man I stepped around in front of him and got down on my knees. His big hands knotted into fists and looking up I met his gaze even as my hands rose to his belt buckle. \"Can I...?\" I breathed out not able to fully ask for what I intended to do. \n\n\"Yes!\" He said passionately. \n\nLowering my gaze, I undid his pants and was surprised to see no underwear. The pressure of his shaft against his pants fairly unzipped his pants for me. Completely startled I took in the reality before me. \n\nI'd not really seen to many adult male penises before, but my lack of experience in that regard didn't let me down in the fact that this man was a stud if ever there was one. The musky odor of his scent wafted over me strongly and powerful though that it was I strangely didn't mind it. Somehow it suited him. \n\nShyly I cleared my throat and pushing his pants away from his groin only succeeded in having them fall to his calves from the weight of everything he had in his pockets. \n\n\"I ...uhh... if I don't do something right, let me know, okay?\" I whispered, as I let my hands settle on the man's muscular hips that were warm and covered in curly black body hair. \n\n\"Tamara.\" \n\nI forced myself to look up. His voice was the gentlest that I'd heard it so far as he said, \"You're likely not going to like the taste of me at first, but when I cum I want you to swallow it. I want that just for myself, but the reality is you need the nutrition gained from doing so as well. There are lots of minerals as well as the fact that it's mostly protein.\" \n\nI couldn't help myself, I smiled. Here I was on my knees in front of a stranger, who was my husband, about to suck on a huge cock that I knew would soon be ramming away in me wherever he could get it and he was concerned about my nutritional intake? Oddly the fact that he would even think of that was touching. \n\n\"I'll do my best.\" I said in response. \n\nHe nodded and looked away and my gaze returned to the fully engorged aspect of raw masculinity that strained before me at eye level and had begun to dribble a steady stream of clear fluid. \n\nEyes open I leaned forward and opening my mouth, I swirled my tongue around the head of his shaft. The essence of him exploded across all the taste buds of my mouth. \n\nHe was very much wrong about something. I loved the taste of him! \n\nWetly I moved my head forward still and closed my lips around his shaft. The farther I took him into my mouth the wider my lips were stretched apart. He was groaning for some reason and the sound of pleasure emanating from this stoically controlled man only inspired me to seek to give him more. \n\nGingerly I reached up my hand and cupped both of his testicles. They were swollen and hot and I realized something. He'd wanted me last night, but suffered pain instead in order to let me sleep. \n\nI pulled my head back till just the head of his shaft was in my mouth and pausing I glanced up, even as I gently squeezed his testicles lightly. He was staring down at me with a look of such fierceness that it was startling. \n\nKeeping eye contact I began to suck. He cried out passionately and I felt his pent-up need for orgasmic relief begin. I sucked harder and then the inside of my mouth was painted with jet after jet of his hot seed. \n\nBoth of his hands gripped my head hard and I couldn't have moved if I'd wanted to. His seed was not the greatest tasting, but I swallowed it. The hardest thing in the moment was not choking on how much of it there was. \n\nHis orgasm came to a close and he pulled free from my lips with a wet pop and I gathered that my touch had become too much in the aftermath of his orgasm in terms of sensitivity. He was breathing hard and so was I. \n\nHis cock was still hard and wet from both my saliva some of his seed. With an instinct to please I reached up and formed my hand around the base of his thick shaft and held it still. His hands fell from off my head and free to move I brought my head forward and licked his shaft clean. He was salty and very earthy tasting and yet I liked it. \n\nI let go of his shaft and let my other hand fall away from massaging his heavy testicles and feeling the urge to do it, I turned my head and pressed the side of my face against his groin area and let it rest there even as for sup-port I let my arms move around his hips so my hands could grasp onto the back of his thighs. \n\nOne of his hands came down to play on the side of my face that was free to the warm morning air and slowly it massaged my cheek. Instantly I was reminded of the dream and how good his hands had felt. \n\nWe stayed that way for a long moment and then I pulled my face away and looked up. He was staring down at me and we just stared at each other for a long moment, sensing a shared connection that was both unexpected and yet seemingly natural. \n\nOne of his thumbs reached forward to stroke across my lower lip and as it lay there in possession of it I spoke, \"What's your name?\" \n\n\"Wyatt.\" \n\n\"What's my last name?\" \n\n\"Richards.\" He said gruffly and then he was pulling me up to my feet and then to my great shock he was kissing me. It was the first time I'd ever been kissed by a man and I instantly liked it, but I think it was more because of him being the one doing the kissing than anything else. \n\nIt wasn't long before his tongue was where his shaft had just been and I confessed to liking that too. I opened my mouth fully in surrender to the plundering of his tongue even as I found my hands gripping hard upon his powerful shoulders. \n\nHis hands coasted down the long arch of my back only to settle upon the halves of my bottom. He gripped hard and a new thrill swept through me as I was dominated by this man's touch upon me. \n\nMy eyes opened with shock as I felt his big shaft resurrected to full hardness once more and pressing in against my belly. With a groan, he left off kissing me and growled out, \"We need to go, but tonight I'm going to shatter your tight cherry apart Princess!\" \n\nMeeting his gaze was hard as the frankness of his promise was simply too real of a threat. Breathing hard I whispered, \"You're so big that I don't think it would be possible not to be shattered.\" \n\nHe groaned and closing his eyes, he leaned his fore-head down against mine. Curious as to his actions I wait-ed. He drew his head back and gave me a deep look, which I met and gazed back at him as openly as I could muster even as it felt like all my nerves were beginning to unravel. \n\n\"You're really something Princess.\" \n\nI blinked and was surprised when he leaned forward to kiss me again. It was a short kiss, but it was good and when he pulled away, I opened my eyes as I heard him say, \"Thank you for what you did.\" \n\nSmiling shyly even as I ducked my head down I said, \"Any time you want me to just let me know.\" \n\nI glanced at him only to see him give me a strange look before going about pulling up his pants and fastening them together with difficulty. It was in that moment that I made a discovery of my own. The insides of my thighs were bathed with wetness. Apparently pleasing him made me ready to be pleased myself. \n\nThe question though, was would I be screaming with pleasure tonight or pain when he made good on his promise to shatter my virginity apart. Shuddering inwardly I turned away even as the realization was that I would not know the answer until the moment of occurrence. \n\nStill, I had hope. Actually, I had hope about a lot of things. \n\nI helped him take the tent down and pack it away and then we were both off again moving through the forest. I didn't know where he was taking me and I didn't ask. I was with him for the journey of the rest of my life and where he led I would follow.\n\nIt was getting on towards dark and the terrain we were navigating was far more rugged than any we traversed so far. Both the trees and the rocks were bigger. \n\nThe wildness of the area was actually a bit scary. Kind of like the man ahead of me. \n\nI had followed his lead all day and for the most part little had been said between us. In general he seemed to be a man of few words where as I had nothing but questions. \n\nI remained silent, though in respect to the way that he seemed to prefer things. I didn't want to annoy him and I recognized that concentrating on the trail and my surroundings was more important at the moment anyway than any questions that I could ask. Still, it was hard to stay quiet. \n\nOverriding everything as the shadows darkened was this man's promise about tonight. Closing my eyes briefly, I tried to visualize the size of what I'd had in my mouth only partially and with some effort on my part suddenly rearranged and being shoved within the core of my body. \n\nI shook my head to free it of the imagery that far from scaring me only seemed to make the perpetual dampness between my thighs get damper still. I wanted him. I wanted him deep. \n\nIn a way I felt like I'd been asleep all my life to the true reality of being a female. I wanted to be mated. \n\nNot by any man, but by this man alone and yet I hardly knew anything about him. I did know that I was safe with him, as well as the fact that I was where God wanted me to be, in a way that was a lot for a girl to know. \n\nWyatt abruptly headed into some huge rocks and reluctantly, I followed behind him. Big rocks became mossy fissures as upthrust rock ledges towered up around us until the fading light of the day was mostly blocked out. We went down a narrow canyon and I stayed close behind him. So close that I bumped into him when he stopped suddenly. \n\nHe glanced at me in the dim light and I stepped back awkwardly. My nipples felt like there were on fire from having made contact with him again the way I had yesterday. \n\nHe smiled and said, \"We're home Princess.\" \n\nI glanced from him to the stone wall before us. We were at a dead-end. This was where he lived? \n\nHe reached into some ferns growing up the sheer face of the rock and grasped a hold of a grapevine. He shook it and a length of rope fell from some 30 feet further up. I gasped with surprise and looked on with wonder as he went about making a loop in the end of the rope. He motioned to me and I put one shoe into the loop, while holding the rope with my hands. \n\n\"Hold on Princess.\" He said and I did as even with abruptness he started hauling on the other end of the rope. An unseen pulley up above somewhere groaned and I was born quickly up the face of the cliff by Wyatt's strong arms which was impressively fast.  \n\nReaching the top I shakily reached out and grabbed a hold of a tree growing there and pulled myself away from the edge. Free of the rope I quickly moved away from the edge and moments later I heard Wyatt pulling himself up. \n\nI turned around and among the rocks and boulders of this canopied spot of seclusion I saw the mouth of a cave opening. A cave opening that had a door fastened into it. \n\nAwareness of the capableness of the man I belonged to shot through me. This man was a survivor. \n\nWhat stories did he have to tell? Likely not many fit for the faint of heart. \n\nI turned and saw him stowing the rope away. No one was getting up to this secluded spot other than us. We were alone and even if I had wanted to make a run for it, I wouldn't have been able to. I have no desire to run though, but the hungry look in his eyes right now had me anxious. \n\nHe moved on and said, \"Come along Princess and inspect your new home. Not the finest perhaps, but in the present state of things not too shabby either.\" \n\nI followed along after him quickly as the coldness of the night drove away the warmth of the day, but truly that wasn't why I was shaking.\n\n\u2003\n\nCHAPTER SIX\n\nNo Escape\n\nThe door opened smoothly without even a squeak and I stepped through into the cave. My hand came up to my mouth as even in the dim shadowy grayness of the room, I could see an interior I hadn't expected. \n\n\"Just a moment.\" He called out from the darkness. \n\nA match flared and then a lamp was coming alive followed by several candles. The cave or as much of it as I could see was now bathed in light. \n\nA sitting area with carpets on the floor and of all things a leather couch was directly before me. Two shelves filled with books were lined up along the cave's sides behind the couch and on the opposite wall was a fireplace that even as I gazed upon it was coming alive as prepared tinder caught flame. \n\nBeyond the sitting area was a kitchen area and gazing in that direction I realized that some of the residual daylight in the cave was coming from a skylight in the ceiling above the kitchen table. Up till now I had been breathing, but I stopped as my eyes took in the shelves loaded with canned food and other items. This man had more food than a small mini Mart! \n\nBeyond the kitchen I recognized the outline of a bed. My eyes darted away from it and back to the fire that was now blazing and casting its welcome heat into the room. \n\nCould all this really be possible? Was this a dream? \n\n\"Tamara?\" I glanced up startled and blinked away my dazed confusion as I met Wyatt's eyes. \n\nI couldn't help but feel as overwhelmed as I did and as usual emotion did not let me down by not making its presence known. I rubbed away at a tear and asked him point-blank, \"Is this place for real?\" \n\n\"Yes, it is. I about broke my back to get that couch up here. Strangely, at the time it never occurred to me to take it apart in pieces and reassemble it, until I already had it in the cave. It would seem I am a bit dense minded at times.\" \n\nI glanced from him to the bookshelves. Somehow I doubted him as being any form of dense when it came to intellectuality. My gaze ran over the titles of books on the shelves with interest as in a way they were keys to under-standing the man who stood before me. \n\n\"Are you hungry?\" \n\nMy gaze came back to him meaningfully and he shook his head with a rueful expression, \"That was a stupid question wasn't it.\" \n\nHe started away for the kitchen and softly I asked, \"You don't mind sharing all of this with me?\" \n\nHe looked back at me and said, \"With you, no, with someone else probably. That said, as much of a loner as I have been in life, I've been going crazy without anyone to talk to. Tell me have you read any of those books on the wall?\" ",
        "\"Yes.\" I whispered before then adding, \"My job in school was serving as an assistant to the librarian. I love books. The right books anyway.\" \n\nSomething I saw as pleasure crossed his face and softly he said, \"You are an ever evolving surprise Princess.\" \n\nSo was he, but I left that thought unsaid. I gravitated his way, taking everything in and yet still doubtful that it all could be real. Had God really landed me down into this oasis nestled in the midst of a wilderness? \n\nI didn't deserve this! So many had died and sitting down in one of the kitchen chairs I said as much out loud. \n\nIn a way I didn't know I'd said it out loud until Wyatt responded with, \"Actually, as things go it seems that what we deserve in life is rarely what we get.\" I wasn't sure where he was going with that and at the moment I was really just too embarrassed by having dispersed my thoughts out loud to respond to his statement. \n\nA bowl of food that actually smelled like food and looked like food was set down before me. All thought of everything else disappeared. \n\n\"I'll have hot coffee in a few minutes.\" \n\nI looked up at him. He had to be joking! \n\nNo, no he wasn't, as I took in the sight of him fixing a pot over the fire in the other room. Forcing restraint I prayed over my meal as I always had, but this time I did it silently.\n\nHe took notice, but said nothing and with relish I began to eat. The bowl of food was soon gone and for the first time in years I had the relish of having consumed vegetables, so what if they'd been canned vegetables. I was actually still hungry, but I would not ask for more. \n\nI started to get up, but a hand on my shoulder obstructed the action. Another bowl was put down before me that had steam lifting off of it even as his voice so near to my ear that it sent shockwaves through me said, \"A stew made with deer meat.\" \n\nHe'd put quite a bit of emphasis on the deer part. I stared at the bowl before me only moments later to see it joined by a cup of coffee. \n\nHe set a jar of what I took to be sugar down beside the coffee cup. I was struggling and glancing up I met his gaze that was perhaps the warmest I had yet seen it and heard him say, \"Eat up Princess. You haven't made it this far by not being a survivor, so don't stop now.\" \n\nI took a hold of the spoon and getting a bite I ate it. The stew was the best I'd ever had in my life. I ate it quietly and I drank the coffee. When I was done, I glanced up at him again. \n\nHe'd been staring at me the whole time and meaning every word with all my heart I said, \"Thank you. This... this is all very unexpected. I... I can never repay you for sharing this with me.\" \n\nHe shrugged and said, \"I'm not asking you to, but I do want all that you have to give.\" \n\nI nodded and honestly said, \"I'm yours.\" \n\nHe nodded all the while staring at me intently, only to simply say, \"I know.\" \n\nHe got up and said, \"Come with me.\" \n\nI got up and followed with nervous anticipation for what I thought was to come. He headed for the bed that was now quite well illuminated, but diverged from it and down a narrow tunnel. He held a candle and stopping he held it out to me and I took it. \n\nIt was quite cool in the hallway, but I was warm from a belly full of good food and from the heat of the fire in the other room. He gestured to the hallway ahead and said, \"Follow this until you find the water. Everything you will need will be there.\" \n\nUncertainly, I nodded and moved off down the tunnel alone. Soon I heard water and then I saw light. The lighting was dim, but during the day it must be quite a bit brighter. With a gasp of surprise, I took in the showering cascade of water falling from fishers in the sky lighted ceiling up above. It was going to be cold, but I didn't care. I set the candle down and took in the sight of the towels and soap bars neatly stacked on a table out of the way of the water splashing down onto the floor. \n\nGlancing back the way I'd come I saw nothing. Quickly I got undressed and grabbing up a bottle of sham-poo I did what I'd ached to do for so long. I washed my hair. \n\nIt was all tied in knots in order to keep manageable and while I knew I couldn't get it fully clean I could at least get the surface along with my scalp clean. I stepped into the water and about had a heart attack. It was cold!! \n\nBreathing hard I stayed put though and let it cascade over me. I scrubbed the shampoo through my tresses to the point of my hair falling out and at last I washed the suds free from it. Breathing heavy and my body wracked with shivering, I turned to reach for a soap bar only to go completely still as one slid down the length of my side even as a warm hand settled over my other hip. \n\nI stayed still under the water as the hands, I had dreamed about became a reality upon my bare flesh. The soap bar cruised across my flat stomach and upward to encircle my breasts and wash in between them. \n\nI made a decision then and it was a choice to relax. In the process of relaxing I leaned back against the very much naked form of the man standing behind me. \n\nThe warmth of him was overwhelming in comparison to the coldness of the water splashing down upon me. The passionate part of him that made him male pressed into the small of my back even as his hairy chest was the support for my shoulders to rest against. \n\nHis soapy hands twisted massagingly over my nipples and in surrender I pressed my breasts into his palms even as I accepted his touch in whatever way he wanted to give it. Suddenly his warm lips were against the side of my neck and then his teeth closed over my skin with a firm-ness that was somewhere between painful and exhilarating. \n\nI couldn't help it as a deep moan slipped from my lips. Everything felt so right! \n\nI pressed back into him and then I tried to turn, but he held me with his teeth to stay where I was. Then his biting hold released and his hands moved on as he washed the entirety of me. \n\nAs cold as I was I blushed as he washed me in places no man had ever touched. He even got down on his knees and washed my legs and feet. At last the whole of me was clean and he pulled me from the showering drops of cold water that despite the passion I was feeling were turning me into a block of ice. \n\nIf he'd asked I would've laid down on the wet floor and been his right then and now, but instead a towel came over my head and began to vigorously dry my hair. When he was done with my hair, he dried the rest of me even as I stood still, other than for the shivering of my body. \n\nI stood before him as naked as the day I had been born and I felt no shame. His voice gruff he said over the sound of the falling water, \"Go warm up by the fire.\" \n\nHe draped a dry towel around me, but I stayed where I was. I couldn't help it. I reached forward and hugged him as tightly as I could. Awkwardly his arms hung out to the side as if he was unsure what to do and before the moment got any more embarrassing I let go and headed up the hall I had come down previously. \n\nHurrying past the bed I made it to the fire that was now a literal blast of heat and I thanked God all over again for the comforts being afforded to me. Tiredness struck me and I lay down on my side on top of the plush rug before the fireplace. \n\nDazedly I watched the flames flicker and half fell asleep in the process of the fire's heat driving all the coldness from my bones. My eyes opened fully though as his presence became known to me as I felt him lie down on his side behind me. \n\nI scooted over a little and laid over on my back and met his gaze. The towel I had been holding about me, I let go of even as I let my hands fall to my sides. The towel slipped and one of my breasts slid free from it buoyantly and watching him move I took in the visual of his stubbled face descending over my breast even as within the next moment his lips opened to encircle my rigid nipple with the heat of his mouth. \n\nMy back arched up off the floor as he began to suck-le and gasping I lay there his prize on the floor. His teeth grazed my nipple to the point of pain, then in a second his sucking clasp was gone only for me to feel him capture my other breast and subject it to the same torture. \n\nPleasure radiated through me that was so extreme it was hard to reconcile with. I reached for him, but he was already moving. My thighs parted for him and wideeyed I stared up into his gaze as he said tensely, \"I'm sorry Princess, but I can't wait any longer.\" \n\nI nodded, even as I felt the wet head of his shaft nuzzle its way into the tight folds of my sheath. His exploration went deeper and my breathing stopped as the thickness of his invasion into me met with resistance. \n\nI felt him tense up and then all my breath escaped me on a cry of pain as he did exactly as he promised he would. He shattered me! \n\nCrying out, I turned my head to the side as I felt the thickness of his shaft force its way all the way to the gates of my womb. There was nothing gentle now about the man who had washed me clean, but a little while ago, as even now I lay a prisoner to his savagery. \n\nMy breasts were crushed flat against his chest and his breath came puffing in and out against my ear like a freight train. His shaft was buried at the core of me in one moment only to be drawn back to be rammed back in seemingly deeper. \n\nI did nothing to fight him, but crying softly I lay open to him even as he savagely had his way with me. I prayed that it would soon be over, but as I prayed I noticed my body beginning to rise up off the floor to greet his heavy thrusts into me. Though my eyes were wet with tears, my lips opened on a surprised exclamation as the length of his shaft slid into me once more. \n\nSomething felt completely different and in the next moment pleasure radiated across every parameter of my being as his pelvis ground down upon me. It was too much and my body convulsed about the length of his cock that filled the whole of me. \n\nHe cried out savagely and shoved all the harder into me, but I was already lost in the waves of passion that had come over me like a rising tide that wouldn't stop. How was pleasure like this possible? \n\nI heard something only to dimly realize in some corner of my mind that it was me screaming. With a savagery of my own I held on to him with my hands and legs welcoming the pleasure he brought me out of the midst of pain. \n\nI felt the heat of his seed course into me and I groaned all the harder as if hungry for it in some deep way. His deep thrusts stilled and shuddering my heart began to calm as I continued to hold on to him even as his breaths for air sounded loud against my ear. \n\nHis weight on me made it hard to breathe, but I didn't care, even as I took in the feel of what it felt like to have the length of my husband's cock still rock hard buried inside of me. Was this life from now on? \n\nThe presence of him in me was like sheer nirvana now that I knew the pleasure that could come from it. Still breathing heavily, he propped himself up on his elbows and air rushed back into my starved lungs. \n\n\"Sorry.\" He huffed out, but in the next instance, still panting heavy myself I leaned up and kissed him. It was the first time I had kissed him and awkwardly I gave it my all. \n\nAfter a long moment I let my suddenly weary head fall back down to the plush rug. We stared at each other as my sides still heaved in and out and I felt sweat dribble off of him to land with a splash down upon me. \n\nI was so his and smiling I tried to express it, but words failed me. His shaft had softened and he pulled it free of me only to lay over on his side beside me. \n\nThe fire was warm and so was I and in blissful satiation I let my eyes close as I took in the moment of how oddly completed I felt. There was silence in the warm cave except for the crackle of the flames. I'd never been so content to stay in one place before as I was right here on the floor. \n\nI was drifting off to sleep, when I heard him say, \"You're beautiful.\" \n\nI opened my eyes and turning my head I smiled at him as his words radiated throughout me. No one had ever said that to me before. Granted, at the time before the at-tack on America I had looked far different than I did now, but the here and now was all that mattered. \n\nHis gaze lifted from off the gentle swells of my up-lifted black breasts to my face. Wanting to please him as he had me, I shyly said, \"You're so strong and... big.\" \n\nI blushed slightly as the memory of him lit me up with a strange ache to feel him in me again. I was tired though and my eyes began to drift shut, only to open as he once more spoke, \"I never imagined myself being with a black woman.\" \n\nThis was important and I wanted to hear what he had to say, but oddly, I found myself speaking, instead, \"You were raised to be prejudiced against people of my color?\" \n\nHe nodded his head as once more his gaze was focused on my chest and then more towards my nether regions. \n\n\"I was raised the same way in regards to white people.\" I said honestly. Then I added, \"But as you can see, though different on the outside, we still fit together quite well even as God intended for it to be. Even though I was raised to be prejudiced against white people I never accepted it or made it to be my creed in life. You don't regret having a black wife do you?\" \n\nHe shook his head no and said, \"I would be a fool if I did.\" \n\nI warmed all over again and shyly I reached my hand out to hold his and his fingers curled around mine in re-turn. \n\n\"Thank you for not lying to me.\" He whispered. \n\n\"About what?\" \n\n\"About anything so far.\" \n\nI nodded and said, \"Lying is a big issue for you isn't it?\" \n\n\"I've been lied to my whole life. Even when it comes down to you. You're a real person and I like you.\" \n\nI smiled softly and said, \"I will never lie to you Wyatt and though I am as weak natured as the next person is at times I pray right now that God helps me keep this promise.\" \n\nHe met my gaze and said, \"You still believe in a God after all that's happened to you?\" \n\n\"I believe in thee God and to answer your question yes I do. He's the only reason I'm alive. He kept me going when I could have given up long ago. You call me a survivor, but truly I am a weak woman and all I have for strength is a faith that my God is real and He proves Him-self to me all the time.\" \n\n\"How so?\" Wyatt asked skeptically. \n\n\"He gave me you.\" He blinked and I continued, \"He told me to wait, that's the only reason I didn't run from those cannibals. The only reason! He's been with me every day and if I don't daily hear from Him I feel lost. I'm nothing without Him. This place of refuge, you, this moment, all of it is a gift from Him and I thank Him with all my heart for everything that He has suddenly showered me with in the form of you and this place, but mostly you.\" \n\n\"You don't even know me or any of the things that I've done.\" He said gruffly. \n\n\"You're wrong there honey. No, I don't know your past history or the things that you've done wrong, but I can see that you're sorry for them and I can tell you that I'm no saint either, but I serve a God that forgives us de-spite whatever we may have done and gives us good things in spite of whatever we think we deserve. I don't know what you think of God, Wyatt, in terms of relation-ship, but I can tell you that He loves you and if I've been a comfort to you then know it's because of God because He is the one who gave me to you. I don't want to preach to you and turn you off, but you need to know that I'm a woman of faith and as much as I now belong to you I belonged to Him first and I'm never going to change what I believe or throw away the redemption I have through Grace because of God's perfect Son dying on a cross for me and taking my place and washing me free from all the sins I ever committed. This is who I am. I can't be any more open or honest with you than I have been just now.\" \n\nHe nodded and I relaxed as I saw that I hadn't made him angry. That he was at odds with God was obvious, but positively that also showed that he believed that God existed. I would have said what I had even if he'd yelled at me in the quick-tempered way he had about him some-times, but he was relaxed and I thanked God for it. \n\nHis gaze met mine and he said, \"I like the way your breasts shake when you speak with passion.\" Shyly I tried to get used to the intimacy of being with a man that was seeing literally everything about me. \n\nSoftly I whispered, \"They used to be bigger. You keep feeding me like you are and they're likely to shake more.\" \n\nHe chuckled and said, \"I like the sound of that. We have a deal.\" \n\nBiting my lip for a moment, then I let go of it and made a confession, \"In the time before everything fell apart, I was quite... fat... no one ever called me beautiful not even my own mother or father. I promise you Wyatt that no matter however much food you make available to me that I will always do my best to stay beautiful in your eyes.\" \n\nHe was quiet for a long moment and then he said something completely unexpected and something that brought tears to my eyes, \"The more I know you, the more unique among women you become. Whatever you may have looked like in the past or for that matter the future, I am in no doubt that you will be beautiful, because there's a lot more to you than what's seen on the surface and frankly I just want you to be you. I've been alone for a long time, most of my life, and in two days you've made things a lot better. I very much appreciate the blessing of you.\" \n\nTears were streaking down my face and I wiped at them, but it did no good and suddenly I was sobbing. His warm hands that were no longer a dream, but a reality pulled me onto my side and up against him and I pressed my face against his neck even as my nipples found a home nuzzling into his thick chest hair. \n\nHis hands stroked down my side and back and I found comfort and love in the arms of a Huntsman that had rescued me from something worse than just death. Slowly my sobs came to a halt as the peace of how good God was enveloped me. \n\nI relished the comfort of this man's touch upon me. His teeth nibbled at my shoulder and tiredly, I opened my eyes even as I felt the evidence of his passion nuzzle up against the front of my thigh. I was so tired and chuckling he seemed to sense that and whispering into my ear he said, \"I'm not going to let you go to sleep yet Princess.\" \n\nClosing my eyes, I smiled in response and said nothing. Whatever he wanted I would do. With surprise, I felt him press me gently over onto my belly. I turned my head to the side and gazed at the fire still burning hotly even as his big hand coasted down my back to stroke over the contours of my bottom. \n\nIt was really something to feel his touch on an area touched by no one else before and shyly I buried my face into the plush fur of the rug I laid upon as he swept my knot beaded hair strands away from the back of my neck and began to kiss his way down the length of my spine. He rubbed his hands firmly into the small of my back only to then sheet them off to the sides and form them over my wide hips. He pulled and my knees bent. \n\nMy body followed his directions and I found myself on my knees bent over with my thighs split apart to make room for him kneeling behind me. I started to push up off the rug to straighten, but one big hand pressed my head back down to the ground and when he did that I knew exactly what he was about to do. \n\nShyly I let my body remain in the position that his hands had directed it to assume. My fingers curled into the rug as his big hand pressed down on the small of my back and instinctively my back arched downward even as my bottom turned up higher into the air. I had never felt so exposed before and yet I felt no shame. \n\nHis hand left my spine to grasp my hip even as his other already did so to my opposing hip. I felt him settle back onto his heels even as his hands stroked down the back of my thighs to then rest over the back of my knees and then my calves. ",
        "His breathing was heavy and gruffly he spoke into the stillness of the moment, \"Honey, you're beautiful as a whole, but your butt is absolutely gorgeous!\" \n\nAt his words, my face flushed, but I stayed where I was. No experience that I'd ever had in life could have prepared me to face this moment and yet here in the now I felt a sense of pride in knowing how impassioned I had made my man by him simply looking at my butt. His hands returned back up my thighs and I felt him trace the creases beneath my bottom cheeks and then both of his thumbs swept down the cleft of my bottom even as his fingers dragged over the firm cheeks of my rear. \n\nOne of his big fingers pressed into the wetness of my sheath even as the other one anchored with a firm grip over my hip. His finger penetrated all the way into me and I moaned at the feeling of just how big it alone felt. \n\nHe was far larger than his finger and the openness of my position was both titillating and concerning. I was very sore, but I said nothing as he rubbed his finger against the front wall of my vagina. His massaging touch had made something inside of me turn hard and I wondered at what that might be about even as I heard him say, \"I'd like to say that I will be gentler with you this time than last time, but I'm afraid not.\" \n\nHis finger left me and I swallowed as it was replaced with the head of his shaft. The time before he had slammed it all the way in, but this time he did not. With my hips anchored in place he slowly slid his cock into me. \n\nHe got bigger the farther down the shaft he went and opening my mouth, I cried out and bit the carpet even as my fingers curled even tighter into it as I was spread apart by his thick shaft. Breathing heavily I blinked repetitively as the core of me was filled with him and the soreness that he had caused the first time was stretched out to the max. \n\nHis groin pressed into me and I felt his heavy balls come up against my slit. He was all the way in and it was deeper this time than before. He was breathing heavy and tightly he said with passion, \"You are one hot tight wet slide of pure pleasure Honey!\" \n\nI barely had time to register his words as half of him left me only to be slammed into my wet depths with a force that shook me and pressed my face into the rug. It didn't stop! \n\nThe ribbed form of his cock plundered me more deeply than the first time he'd taken me and my voice was one long exclamation of both wonder and shock at what I was feeling. The friction of his shaft in me and the elemental savagery of his taking stroked something alive in me that was similar but different than before in terms of pleasure. \n\nHis balls slapped forward onto my clitoris and I clawed at the carpet completely overcome as my body crested over into extreme pleasure and got impossibly tighter about his buried shaft only for me to feel him slide free and force his way back in through the heart of my orgasm. I cried out his name over and over as wave after wave of pleasure swept through me in a high tide that just wouldn't die.\n\nMy insides were made hot by him and soon his seed was spraying within what felt like must be my womb. Crying out, I begged him to go harder and he did and I crashed. \n\nCognitive thought fled from me and I felt his thrusts come to an end. I was beyond comprehension in the moment. Breathing hard and listening to the sound of my own heartbeat, I felt him still with his shaft within me pull me down to my side. \n\nHe lay behind me and yet still within me shallowly. My eyes closed as out of breath sounding he said as if from far away, \"Now you can go to sleep Princess.\" \n\nI did just that, still feeling him hard within me and the presence of him all about me. It was one of the best moments of my life.\n\n\u2003\n\nCHAPTER SEVEN\n\nBreakfast Served\n\nI awoke dreamily as if from some pleasant place. Idly my eyes took in the small fire burning in front of me. Sudden comprehension of reality took hold then and I opened my eyes fully and looked about. \n\nMost of the light in the cave room was coming from several skylights I hadn't noticed last night and not from the fire. The cave as a whole was rather well lit, but was empty of what I wanted to see most. He was gone. \n\nCarefully, I pushed upright to sit on the floor and when I did the wool blanket pooled around my lap. I shook my head and held my hand to my lips as memory of literally everything came shooting back to me. \n\nI closed my eyes for a long moment, enjoying the memories that were now part of reality. In the stillness of the cave I said, \"You know God, You're amazing! I never knew such pleasure was possible and that You preserved me for him...just him... I thank You so much! I don't know where he's at right now, but I just ask that You would bless him and I thank You for blessing me with far more than I could ever deserve or imagined to desire. Thank You that last night went like it did and that it was with Wyatt and not some dirty guard using me.\" I'd said the last with tears in my eyes as I reflected for a moment on just how well God had preserved me even in the midst of feeling at that time as if He hadn't done anything to help me. \n\nSummoning courage to face how stiff and sore I felt I made the attempt to get up off the floor. Gaining my feet I realized that I was full. Completely full of his seed. \n\nThere was no doubt in my mind that with a stud like him I would be pregnant in short order and I was completely fine with that. In a way that was exactly what God had ordered men to do. To be fruitful and multiply and have dominion over the face of the earth and in this moment I couldn't think of anyone I'd rather be doing that with other than Wyatt. \n\nGingerly, I walked towards some cloth I saw and taking a piece I wiped away the semen and even the leftover traces of some blood caked to my thighs. I was well and truly not a virgin anymore. It felt like it too. \n\nStanding naked within the room came at a whole new level of awareness. There was no other way to put it other than to say I liked how I felt and I wanted him in me again. Blushing at my own thoughts I ignored my rampant hunger and looked about for something to wear. \n\nHis clothes were all I found and they were hopelessly big. Thinking on some inspiration I focused less on getting dressed and more on looking...well... ready for him. I felt that he was near. It was hard to say how I knew that, but I just did. \n\nI pulled a white T-shirt out of a drawer. For a moment I imagined how snug fitting it would look stretched out over his muscles and an awareness of sensual desire for my man swept through me. I put the shirt on. \n\nIt hung big on me and was a bit of a tent except for where my breasts pushed it out and my nipples at the moment were rock hard despite the warmth of the room and it showed through the shirt. The best way I could reconcile it was that I wanted his touch and every last part of me didn't want to be left out. \n\nIn a single night I had come to crave the thought of being with him. Was this how God had made a woman to be in the beginning? \n\nIt must be, because it felt so right. The shirt barely covered the apex of my thighs and my bottom was but barely covered. He would like that, after all he thought my butt was gorgeous and that I knew was no lie. \n\nIt was strange the reversal that had been made in life. I'd gone from never being comfortable in my own skin to suddenly loving it. \n\nThe door opened and I looked up. It was bright and snowy outside, but my gaze was on him. He stared across the room at me as if I was a smooth chocolate drink he wanted to drink down in one gulp. Some feminine part of me, never before accessed, bloomed forth and with a shy but confidently felt smile I walked across the room, letting my hips roll as much as I had suddenly mastered the art of doing. \n\nComing face to face with him I leaned up on tiptoe and kissed him. His lips were cool and in appearance, he was as hard as a statue as if frozen by the sight of some-thing inspiring and that inspiration was me. \n\nI leaned back and said, \"Good morning Honey.\" \n\n\"Good morning.\" He mumbled in reply and I felt like laughing as I took in the look emblazoned across his eyes that was one of shock and desire. \n\nHe was literally tongue-tied. It was awesome and both humbling at the same time to see the power that I could employ. Smiling, I turned away and as I did I felt the T-shirt ride halfway up my bottom before settling down again. \n\n\"Have you had breakfast?\" I called out not looking back. No answer came. I neared the kitchen table that was brightly lit up by an overhead skylight and turning back, I saw him come unglued from his place beside the door and drop several bags to the floor. \n\nHe was coming my way now and taking off winter clothes as he came. I turned away with a smile. It felt good to smile so much. \n\nHe was close when he said, \"No, I haven't.\" \n\n\"What would you like? I'll get it for you.\" His hands came about my waist and a thrill shot through me at the contact of him with me. \n\n\"That's all right Honey, I've already found it.\" \n\nIn a mixture of curiosity at what he'd said combined with pleasure at being called 'Honey' by my man I half turned to ask, \"What?\" \n\nHe completed my turn and seemingly without any great effort lifted me up and I found myself sitting on the table to the rear of me. Blinking, I watched his hand claim a chair and setting it before me he sat down with a grin as he said, \"I like my shirt on you, but it's in the way of eating my breakfast.\" \n\nWhat he was doing and saying did not compute in my brain. Why was he sitting down? \n\nHis hands came up my thighs and gripping he pulled my lower half towards him. The T-shirt stayed with the table and I had to catch myself with my hands or I would've fallen back onto the tabletop. \n\nIncredulously, I watched his head descend between my legs even as his hands deposited my legs to lay over his shoulders. He did then exactly what he'd said he would. He feasted on me. \n\nI bucked from the contact of his lips on my most sensitive areas and moaned as the broad plain of his warm tongue made its way through my folds discovering every-thing. He licked his way through them and then paused to press heavily upon what I knew to be my clitoris. \n\nMy eyes crossed and I collapsed backward onto my elbows and let my head fall back as the sensations of what he was doing poured over me. I had heard of this, but never had I expected it to be done to me. His tongue licked and glided. Swept into me and back out only to press again and again upon my clitoris. \n\nThe waves of pleasure he was invoking coalesced and crested higher and then he suckled. Screaming I crashed and fell to pieces. Wave after wave crashed until I was a nothing but a mass of shivering jelly with my whole body vibrating under overloaded sensation. The orgasm had ended, but he hadn't. \n\n\"Oh God!\" I whispered and gave up trying to support myself and fell flat to the table as the cycle of orgasm began all over again. From somewhere far away, I heard him chuckle only to feel two of his fingers spear into the heart of my second orgasm, and their movements along with that of his mouth brought on a third orgasm. \n\nThrashing within his grip I hoarsely begged, \"Please, Wyatt! Stop! I... I'm going to die if you don't!\" \n\nAgain, there was that chuckle that I felt vibrate through my most sensitive places and then his mouth left me and I was pushed further onto the table. Dazed and worn out by pleasure so extreme it had hurt, I opened my eyes as I heard something hit the floor. It had been his pants. I met his gaze even as he lifted my still shaking legs into the air by grasping them at the ankles. \n\n\"I quite enjoyed my breakfast Tamara. I've never had a sweeter drink, then you.\" \n\nI didn't know what to say and then there was nothing to say as he was once more inside of me and everything became emphasized and out of proportion. Crying out, I panted heavily as he stroked in and out of my sheath with such a passion of ownership that it melted me. \n\nHe still held my legs up and helplessly I opened my eyes to look at him as I felt orgasm number four or was it five begin to rip through my body. Was it possible to die from too much pleasure? \n\nHe did something, then that confirmed that yes, it was possible. He switched grips on my ankles while being fully embedded within me and then he pulled my legs together until they were crossed over each other. The huge feel of him inside of me already was doubled as he compressed my body onto his shaft at the moment of orgasm. \n\nI screamed and clawed at the table, but he didn't listen instead he withdrew and shoved into the compression of my sheath and it felt so good and yet the pleasure was so much it hurt. I couldn't get away and then my legs were let down and in weak relief my orgasm ended. \n\nHe slid from me, only for me to feel his hands in the next instance flip me over. His actions were passionate and my cheek bumped into the tabletop none too gently even as direct sunlight shone down upon me. I felt him reenter me from behind in a heavy surging thrust that had me moaning and standing on tiptoe. My fingers curled over the edges of the table and I groaned loudly as I took in again how different he felt when he was in me this way. It was good! \n\nHe took no mercy, but slammed into me, forcing my thighs to hit up against the table again and again. It was a good pain. I gave over once more to orgasm even as I felt his shaft bloom hot seed all over within me. \n\nThis life I was living was the stuff dreams were made of. At last he came to a stop and breathing heavy he stayed in place still fully pressed into me and said, \"I... I don't mean to be this rough. I... I just can't help myself.\" \n\nTurning my head, I glanced back at him and said, \"I'm not complaining Honey. Do your will with me. I'm yours baby.\" \n\nAnd to add emphasis to that I pushed back onto his still hard shaft rooted deeply in my body and wiggled in a sensual fashion that no one had ever taught me so much so that it was simply feminine instinct to do. He groaned deeply and pulling free of me he picked me up off the table. Carrying me, I soon found myself flying through the air as he tossed me onto the bed. \n\nSettling down over top of me he started to kiss me and that was pretty much how the rest of our day went. I never did get breakfast, but we did feed each other lunch and for dinner we shared each other orally.\n\n\u2003\n\nCHAPTER EIGHT\n\nConfession Time\n\nA Week Later\n\nThe sunlight had faded and only the dim burning glow of the fire in the fireplace lit the room. The cave was actually chilling off a bit, but I was warm. My cheek pressed into the curly chest hairs of my man, even as my thigh lay sprawled across him. One of his hands held me by resting on the small of my back while the other one played. \n\nIt stroked down my side. Stopped to stroke my breast that was spilled out in compression against his chest. It slipped on down the road to stroke my hip only to rise back up to my face. \n\nI closed my eyes as his fingers massaged behind my ear and then into my scalp and across my head. What he was doing felt wonderful and if I could have purred, I would have. \n\nI nuzzled my face into him contentedly and lay there relishing his touch. The feeling of his touch was a constant echo of the fact that he found me beautiful. His shaft rose to full erection against my thigh and I lifted my head and chuckled richly. \n\nIn the dim light I could see him smile only to hear him say, \"I know, I know, you're still too sore.\" \n\nI was, but I didn't want to be. \"I'm sorry.\" I said softly. \n\nHe lifted his hands and brought my head down and kissed me. It was a short kiss and then he was moving on and off the bed and throwing more wood on the fire. I stretched and lay luxuriously upon the bed. \n\nHe came back and got on the bed and pulled the covers up and I snuggled into him all over again. Eventually I turned and spooned back against him. He was still hard and his erection pressed wetly against my bottom. \n\nHe growled against my ear, \"You little temptress are you trying to make me overrule my good sense?\" \n\nI laughed, but stayed where I was even as his hands came around me and my breasts were palmed by his big hands. My eyes closed as my chaffed nipples rubbed into the calluses on his hands. It hurt good. \n\nWhispering I said, \"All my life I've wanted to lie like this with my husband on a cold dark night and just be held by him. You're a dream come true for me.\" \n\nHe didn't say anything, but I felt him thinking. Eventually he spoke and it was with reluctance, \"I'm not a good man. I've done things. Bad things. If you knew them you wouldn't want me holding you right now.\" \n\nI shook my head softly and said, \"That's not true Wyatt. You wouldn't have just told me what you did if you thought it would push me away. The truth is you want to justify yourself as a bad person and have me agree to it so you can convict yourself of the guilt you feel for what-ever it is that you've done. I'm not going to do that. You're a good man Wyatt. You've been more than good to me and well, I've come to, in a very short time, love a lot of things about you. You're not going to scare me off.\" \n\nHe was silent for a long moment before finally saying, \"You are quite a woman Princess.\" \n\nSoftly I said, \"I'll listen if you want to talk.\" \n\nThen perhaps in the most emotional tone that I'd ever heard from this man to date, he said, \"I don't want you to know about me and what I've done! What I am!\" \n\n\"You asked me to never lie to you Wyatt and with God's help I never will, but I can only get as close to your heart as you let me. I'm not going anywhere. You're my man. I won't respect you any less, because my respect for use is based out of what you are now.\" \n\n\"I don't deserve that kind of open grace from you!\" \n\n\"Neither did I. I almost murdered someone once, Wyatt... my sister.\" I managed to get out at the last as my voice became choked off with emotion. \n\nHe became very still and it was clear that he was listening to see if I would continue. I had never told anyone what I was about to before, but it was high time that I did. \n\n\"We were very different. Despite how I look now I looked very different back then. She always got the best of everything, whether it was clothes, a car, boyfriends, you name it. I was jealous of her. Most of all I was jealous of how it seemed my mom and dad loved her more than me. That inner bitterness grew and grew in me until one day I was at a gardening seminar that was being hosted in the library I worked in as an assistant. It was on house plants and always being interested in knowledge of one variety or another I sat and listened. One topic of the conversation was in regards to plants to be cautious of due to them being highly poisonous. One of the flowers they mentioned my mother happened to have a lot of at the time. I planned and debated about what to do for three days after the lecture. Finally, I did it. I squeezed the juice out of enough plants to get an amount that would've knocked an elephant off its feet. I had a plan. She always went for jogs at the track on Saturday mornings, but before she went she would drink down a glass of orange juice. I spiked her glass full of the stuff counting on the orange juice to cover the taste. Minutes later she would be in her car driving and when she crashed, I thought people would just assume it was from the crash and not bother to do an autopsy.\" I stopped talking as old emotion rose up in me. \n\nWyatt held me tighter and softly asked, \"You stopped her from drinking the poison?\" \n\nOn a sob I breathed out, \"No.\" \n\nI cried for a while and he only held me tighter. Still crying I said, \"I left the room as she started to drink. I didn't do anything to stop her!\" \n",
        "\"What happened?\" \n\n\"My little brother came bounding into the house just then and he bumped into my sister and she spilled the whole glass of orange juice across the kitchen floor. They were soon laughing as they cleaned up the mess, but I was in my room crying. I couldn't believe what I'd just done! It's only by the grace of God, she didn't die that day! It was there and then that I got serious and started pursuing God. He helped me become a better person, actually a completely different person. I let go of the bitterness and jealousy I had toward my sister, but the hardest thing of all and what took the most time to do was to forgive myself for what I had done. Wyatt Richards, I tell you right now that if God can forgive me for what I did then He can forgive anything you've done too!\" \n\nI lay there crying all the while feeling comfort radiate throughout me by his holding clasp about me that had cherishment written all over it. It was good to finally share the greatest tragedy of self willed choice that I had enacted in my life. \n\nI'd been right with God for a long time, but it felt good to be open about it at long last with someone. My worst day and moment in life was finally serving some good as it served as an example of just how forgiving God could be. \n\nI'd settled down some when I felt him nuzzle his lips against my ear and say, \"Thank you for telling me that. In a way all you've done is make me love you even more than I've already come to do.\" \n\n\"Ohhh!\" I exclaimed, and wheeled around in his arms. \n\n\"Do you really mean that? You love me?\" \n\n\"I do.\" He said affirmatively and I attacked him. My lips were all over his and I acted the aggressor and speared my tongue into his mouth. His shaft had become soft as we had talked, but that wasn't the case now. Grabbing a hold of his hips I pulled him over on top of me only to pull him closer as my thighs and calves wrapped around him. \n\n\"Tamara...\" He started to say, but I cut him off and passionately said, \"Shut up honey and take me! The only pain I don't want right now is the absence of not having you in me as deep as you can be!\" \n\nHe slid into me and with a groan I pulled him further still with my legs even as I kissed him with all I had. Crying I made love to this man, still in some ways a stranger, and yet more intimately aware of me and what I was about than anyone else ever had been. \n\nI came suddenly and screamed his name in my passion, even as my fingernails sank into his back deeply. God was so good! \n\nHe'd saved me, redeemed me, kept me, set me free, and now He'd given me a love I'd never expected, but never wanted to do without.\n\n\u2003\n\nCHAPTER NINE\n\nFaith Experienced\n\nFour Months Later\n\nAnxiously I waited by the door looking out. Wyatt had not returned. \n\nHe was late. \n\nHe'd been late before. \n\nHe'd never been three days overdue before though. \n\nSomething was wrong. \n\nHe'd specifically forbidden me to ever come after him, but what did that matter when love said to do otherwise. I let my hand settle down over the gentle rounding of my abdomen that was the living evidence of life growing within my womb. \n\nNot only did I need Wyatt, but so did our child. I turned back into the room decision made. \n\nI was going out after him. He'd be angry, but he'd get over it. \n\nI dressed appropriately in muted colors that would fit in with the greening up of the springtime environment outside. Going to a drawer, I pulled out my insurance policy. \n\nThe pistol gleamed dully in the dim light of the cave. It was a last-ditch occurrence only that would necessitate the use of the gun. Firing a gun in these perilous times could be more perilous for the attention the noise brought than for any benefit the bullet served. \n\nI closed the door of the cave securely. I hoped to re-turn to this little place of heaven that so many good things had occurred in, but the future was uncertain. \n\nWas I doing the right thing? I didn't know. \n\nWere pregnancy hormones addling my perceptions? There was only one way to know the truth of the matter. I sank to my knees and brokenly asked, \"God am I doing the right thing? Is there any benefit to me going out or should I for the baby's sake stay here?\" \n\nI couldn't bring myself to ask if Wyatt was even alive for fear of what the answer might be. A breeze blew and I had a feeling course through me that accumulated into one felt emotion that echoed across my entire being, \"Go!\" \n\nI got up and armed with hope I made my way down from our protected sanctuary and started running in the direction that I felt led to go. The running lasted for an hour and then I settled into walking even as I scanned about for evidence of any kind. I found none. \n\nI searched the rest of the day and into the shadows of evening. I had come to the point of having to stop my quest for the night when I found something. \n\nKneeling in an area of wet ground I felt about in the mud at an impression made by a boot. It had recently been made. Very recently. \n\nWyatt had done a lot to teach me over the past several months and in the darkness I felt at the sharp crisp edges of the boot impression in the mud. The impression had been made by a new boot with full tread. That was not good. Not good at all. \n\nThe only men with boots like that were those who worked for the killers of society. Everything else in the world of survival had become aged and worn with use, but the hunters sent out to eliminate those few who had survived had only the best of everything with which to do their grisly task with. \n\nI had seen a squad of them from a distance about a month back with Wyatt when we had been berry picking together. Since that occurrence, he'd made me stay in the cave. I left off feeling the boot imprint and following an urge of sudden caution I eased my way along the ground to the sheltering protection of some understory growth and there I silently waited listening. \n\nIt was a force of will, not to hold the gun with my finger on the trigger. I could afford no mistakes and giving away my position would be the worst one of all if I should pull the trigger by accident so I left the gun tucked into my waistband. \n\nIt was too dark to see much, but I heard movement at long last. The movement stopped then and a voice said, \"Hey Ed?\" \n\n\"Yeah?\" Came the response from somewhere not very far behind me. If I'd been holding the gun as I'd wanted to I truly would've pulled the trigger out of sheer fright. Stuffing a hand over my mouth, I stilled any possible exclamation from occurring. I mustn't make a sound! \n\n\"Have you picked up anything with your scanner?\" \n\n\"No, this mist rolling in ain't helping anything either.\" \n\n\"Yeah, I know. Did you get this area in between us or do I need to go over it?\" \n\nMy heart stopped beating and my hand closed over the handle of the pistol. They had infrared scanners and night vision goggles no doubt. If they scanned where I was I'd light up like a Christmas tree in the dark. Relief shot through me though, as the other said, \"Yeah, I already got it. The only place left is the ridge over there. Let's double up and get it scanned and then we can get back to camp. If he's not up there, then he's died in a hole somewhere, because that's the only other reason we haven't picked him up with these Chinese pieces of junk.\" \n\n\"Sounds good to me amigo.\" Responded the first voice and the two headed off together through the brush. \n\nTears were spilling off my face and in the dark I fought to stave off panic. The thought of my man dead or laying somewhere badly hurt was tearing a life sized hole through my heart. \n\n\"Please God! Please God!\" I whispered over and over as I fought for control. \n\nI had to think! \n\nWhat would Wyatt do? He was wounded. He knew they had scanners. He couldn't run. \n\nI gazed off towards the dark promontory of a ridge lifting up in the distance that was now highlighted by star-light. It made no sense that he would go in that direction and expend precious energy climbing. \n\nMaybe, if he didn't have me to think of. Without me involved he very much might have climbed up to a likely spot and made a last stand, but no, he wouldn't have done that. He would work hard at surviving in order to return to me and the baby. \n\nThe ground was damp. There had to be flowing water nearby. Again he knew they had heat scanners. \n\nHe had to disguise his heat signature somehow. Surely they would have searched the water first for that very reason. It didn't matter, it was the best plausible solution I could come up with and I headed toward a low-lying area I suspected of having water. \n\nSoon I heard water and then as a half-moon made its way up into the sky and glinted off the surface of the stream I followed it. How would I find him? \n\nHe could be anywhere. He could be dead. \n\nI stopped and crying emotionally I looked up into the night sky and brokenly whispered, \"Don't you care?\" I looked down feeling instantly ashamed of myself and yet completely bereft of knowing what to do. \n\n\"Step out into faith daughter.\" \n\nI glanced up and my emotions stilled for a moment. A faint glimmer of hope gleamed to life within my soul and wiping at my tears I did as asked and stepped forward. \n\nIt was hard going as I had sunk into some sandy mud that formed part of a sandbar that ran alongside the river. Pulling my foot free of the sucking mud I stepped forward again. I stepped on something! \n\nGasping, I stepped back and knelt down and dug away at the mud. A hand! His hand! \n\nIt was cold. \n\n\"Oh God, please, no!\" \n\nI tore at the sandy mud and uncovered more of his arm and then gingerly felt for his head. My fingers coasted over the surface and I found a stick poking up through the sand. It wasn't a stick, but in fact was a hollow reed! \n\nNot wanting to, but having to I leaned close to the end of the reed. I felt nothing. Despair lit up within me and then a slight exhale of moistness against my cheek lit me back up with hope. \n\nWorking fast I dug around where his face would be and quickly uncovered it. Relying on instinct I followed its dictates as I leaned down over his nose and sucked as hard as I could. My mouth was filled with mud and I spit it out and sucked again. \n\nFeeling at his cleared nostrils, I felt an exhalation of breath and that confirmed I pulled the hollow reed from between his lips. Everything of him I touched was cold and wet. \n\nGoing to the water I cupped my hands full of it and washed his face clean. The moon was brighter now and I saw the instant his eyes opened. I waited for him to be angry, but instead he whispered, \"Thank God you came!\" \n\nCrying I leaned forward and with effort pulled him up out of his muddy self-imposed grave. He was mumbling something, \"I told God if He would just let me see you again that I would believe. I do. I can go now its okay.\" \n\nPulling back, I looked him in the face and shaking him fiercely I said, \"You're not going anywhere, but home! You have a child to raise and a woman to love! I didn't marry a quitter! I married a survivor now get up!\" \n\nWeakly, he tried to even as he mumbled out, \"Yes, ma'am.\" The last four months of good food and steady daily exercise and erotic action had been good for me, but it was adrenaline more than anything else that gave me the strength to pull him up out of the mud and get him on his feet. \n\nHe leaned heavily upon me and I took the weight. I held on tight to the arm dangling over my one shoulder even as I wrapped my other one about his back. I started off slogging through the stream. \n\nOh God give me strength! \n\nI was out of breath by the time I got him out of the stream basin and just about then it started to rain. He was moving better, but what little he was managing to do only echoed to how bad off he was. \n\nAny other man would be dead, of that I was certain. I had to get him home! \n\nThe rain fell and I hurried as much as I was able to in the darkness as the rain beat down. Dimly, as I fought for breath, it registered to me that with this much rain the stream level would rise and it would wash away the disturbance in the sandbar. God was good, but why hadn't He made me stronger? \n\nI was what I was though, and as bad as I wanted to quit I wasn't going to. We stumbled through the night as the rain poured down. \n\nI wasn't sure if he was conscious or not, but his feet kept moving as proof of life and I kept fighting. I prayed that I wasn't hurting our baby as much as I prayed that my man wouldn't die. \n\nOh God, I couldn't stand to lose one let alone both! \n\nI bumped into something and as dawn's gray light lit the rainy sky up I saw that it was the cliff face. The enormity of the impossibility of what lay before me had us both collapsing down to the ground. \n\nHurting inside I looked at the cliff and cried out openly in bitterness, \"God, I can't do it!\" \n\nHow had I not realized the impossibility of this moment the whole way here? What was the point of the struggle when God had known all along that this moment would come? I didn't understand! \n\nIn anger I screamed, \"God!!\" \n\nAnd then once more in utter despair, I moaned, \"God?\" \n\nI sat crying in the rain as my man perished beside me and as my womb began to heave painfully. Completely inconsolable, I cried as the pain of my baby about to die tore through me with more aggression than 10,000 swords ever could have. \n\nA hand formed over my hands clasped over my womb and warmth radiated throughout me and an instant feeling of healing occurred even as the pain of my miscarriage stopped. Shaken, I looked up into the face of what I knew to be an angel even though he appeared to me as a man. \n\nHe spoke, \"Peace Tamara, your baby will not die.\" \n\nI felt the truth of his words even then within me and crying out I reached forward and hugged him fiercely. \n\nWhat was I doing? I didn't care. \n\nHe spoke warmly, \"When you can't go on any farther, you have but to call out to the source of all creation, the Father. He knows His children and He watches over them night and day. Nothing is impossible for the Ancient Of All Days. No, not anything. You will not doubt that any longer Tamara.\" \n\nI pulled back from my embrace of him and he stood up, only I wasn't at the foot of the cliff any longer. I was on the floor of the cave and my man was beside me and the fire was already lit in the fireplace before us. I watched as a second angel stepped away from Wyatt and whispering I said with all my heart, \"Thank you!\" \n\n\"Do not thank us for we are but emissaries of the Father's love poured out for you. It is His will that we do and His words are simple to you and they are these, 'Be still and know that I am God. Stay by your man, of which your faithful love of has helped to restore him to one-ness with Me through My Son Jesus. In the days to come be fruitful and multiply and have dominion once more over the land now empty of inhabitants. Your enemies will soon be no more, but they will be as the hunted vermin of the earth and wholly detestable to every living creature.' These are the Father's words to you. His eyes are ever upon you, even as His Spirit resides strongly now within you both. Let there be peace in this house. Now attend to your man.\" \n\nI looked to Wyatt and glanced back to the angels, only they weren't there any longer. Putting my hand over my heart, I whispered, glancing heavenward, \"Your servant praises You Master! Thank you for the life of my child and that of my man! Glory be to You forever!\" \n\nWiping at my tears I reached forward and did as the angel had said to do. I undid Wyatt's shirt and with a gasp took in the oozing bullet hole down low on his left side. Then, before my eyes the wound moved and something came out of it. \n\nI reached down and picked up the smashed piece of lead from off the rug. I looked back to see that the wound had closed over and was gone from even being a wound. Still unconscious Wyatt's chest rose and fell strongly as he breathed in and out. \n\nCrying with praises to God, I clutched onto the evidence of a miracle that I held in my hand and lay down to press my cheek against my mate's chest so I could listen to his heart beat. A heart that was now right with God! \n\n\"Thank you Jesus!\" I whispered out as I fell asleep listening to the beat of life echo strongly within the man I loved.\n\n\u2003\n\nCHAPTER TEN\n\nThe Past Revisited\n\nWith a start my head lifted up. He was awake! \n\nHis hand had been stroking my cheek, but he let it fall to his chest now. With concern I gazed down at him. He was staring up at the ceiling and he was crying. Not loudly, but a steady stream of tears was making their way down his cheeks. \n\nHovering over his face I looked down into his eyes and whispered, \"Are you all right honey?\" \n\nThe sight of him crying broke my heart. He nodded and lifted his hand to my face. I pressed my cheek into his palm loving the feel of his touch. His hand was warm again. He was still crying. \n\n\"Are you sure you're okay?\" \n\nHe nodded and then said, \"Physically anyway. I... I don't feel so good otherwise. I ...\" \n\nHe was struggling and I offered leadingly, \"Met Jesus?\" \n\n\"Yes!\" He said, nodding forcefully. \n\nI smiled down at him, but still the tears came and the look in his eyes was one of hopeless brokenness. There was something not being said. I wanted to speak, but held back from it. \n\nWith hesitation, he finally said, \"There's something I need to tell you.\" \n\nI nodded. His eyes closed and with determination, he said, \"Years ago I was one of them. One of the killers.\" \n\nHis eyes opened and they had a question, which I answered by leaning down to rest against his chest so I could more comfortably listen to him. Questions were every-where within his gaze and leaning forward I kissed his lips wetly. \n\nPulling back slightly I gazed once more into his hurting eyes and said, \"Baby, I'm not going anywhere so stop going wherever your mind is leading you, because I ain't leaving you Baby.\" I said in my best southern drawl. \n\nHe visibly relaxed and I speared my fingers into his hair and combed through it repeatedly, \"Honey, I'm here if you want to talk about it, but truly all I care about is the man you are now.\" \n\n\"I see that. It's hard to believe, but God truly gave me the best gift in life when He put your irresistibly beautiful self in front of me.\" \n\nSmiling, I said softly, \"You always catch more flies with honey, don't you know.\" \n\nThere was a long moment of silence and then he said, \"When the EMP event happened I was one of those who rounded people like you up and put them in the death camps, but even before that happened I was on a special squad. We were tasked with eliminating people before the event occurred who were of a preparedness mindset, along with people who were known leaders, especially ex-military.\" \n\nI chimed in softly, \"The EMP strike was staged?\" \n\n\"Yes, 100%. The ruling class of this world wholesale slaughtered the population of most developed nations. Things didn't go off exactly as planned everywhere, but in my own way I played a part in the death of millions if not billions.\" \n\nHe stared at me as I remained silent, still stroking his hair and then he burst out with, \"Does nothing of what I'm saying appall you?\" \n\nI shrugged, \"You were once a wicked man Wyatt. I told you my story.\" \n\n\"I've personally killed dozens of harmless good people Tamara!\" \n\nI nodded my head and softly said, \"Yes, I wish you hadn't done that. There's no going back and fixing it though Wyatt. All we are is what we are at the moment. I thank God that he doesn't look at me as I once was, as the way that I'll always be. I've been forgiven. So have you. Now stop trying to scare me away.\" \n\n\"I just want to be honest with you. You've come to mean everything to me and the thought of losing you is an unbearable one.\" \n\nNow it was my eyes dripping with moisture as I listened to him talk. ",
        "\"As I lay there in the mud dying God spoke to me. He said, 'What's it going to take Wyatt?' I told Him I wanted to see you one last time and He made it happen. I believe now everything that was ever told to me about Him by my mother. I just couldn't believe that not only could He forgive me for what I've done, but that somehow you could too. I could have easily been one of the guards mistreating you Tamara.\" \n\nI shook my head, \"No, not even close. You didn't stay where you were Wyatt. Tell me how many of them did you kill during this time that you've been out on your own trying to make up for the bad things that you've done in the past?\" \n\nHe turned his head away, but I turned it back and staring into his eyes I said, \"You are a good man. And I for one am committed to telling you that over and over until you finally believe it. It's time to put the past behind you and focus on the new life before you that you now have because of what Jesus did for you. He sacrificed Himself for all of us wicked sinners. It doesn't matter the crime. We were all guilty one way or another. All sin separates us from God, but your redeemed now Wyatt. Honey, you've asked for forgiveness right?\" \n\nHe nodded. \n\n\"Well, now you need to forgive yourself.\" \n\nHe nodded and growling I said good-naturedly, \"Do it!\" \n\nI watched him do it then and I saw it reflected in his eyes. Leaning forward I kissed him. His hands came up and held me even as my hands held his lips to me. Finally, I broke away enough to have the space to say, \"So that there is no doubt ever in your soul Wyatt I want you to know that I forgive you for the things you did in the past. Okay?\" \n\nHe nodded emotionally and smiling tenderly I eased up from off his chest. I let one hand slide down the expanse of his hard stomach and moving back further, I used it to open his pants along with help from my other hand. \n\n\"Now darling, I want to celebrate the miracle that has seen us both restored to life and put back here in our little sanctuary from the crazy world outside.\" \n\nHe had a look of wonder on his face and with the in-tent to hear him cry out with pleasure and with the zest of living I leaned down to what my hands had exposed. He was still flaccid. Purring out in as sensual a tone as I felt myself to be in I said, \"Okay big boy. Therapy is over. Mama wants to play.\" \n\nHe chuckled and his one hand curved over the growing mound of my stomach as I kneeled off to the side of him. I took the head of his cock into my mouth and with pleasure felt it come alive. Wetly I licked it to full strength and squeezed my hand around the thick, turgid length of my man's desire for me. \n\nI gave the tip of his shaft a wet kiss and licked away the bead of precum that had bubbled to the surface. I let go of him then and stood up. \n\nQuickly I stripped myself free of everything and once free of clothing I stepped astraddle of him and came down to my knees over top of him. With a hand to his shaft I directed him into my sheath and with a groan I sank down wetly upon him until he filled the whole of me. \n\nDreamily I opened my eyes to look down at him and whisper, \"You're such a stud.\" He pulsed larger within me in response and grinning sensually at the power I had to influence him I rode him with pleasure. \n\nHis hands rose and found my breasts. They were so much fuller now and with relish and my pleasure induced haze of ecstasy I took in the adoring fascination within his gaze as he played with them. \n\nI leaned forward and he captured one of my nipples and suckled. I moaned at the intenseness of the sensation and even though it bordered on pain I held steady for his lips. \n\n\"Not too much longer Honey and you're going to have to share those.\" I breathed out with as I rose and fell down upon him in an endless back-and-forth slide of pleasure. \n\nHe growled and I laughed. He bucked upward into me then and I came in a fit of moans and pleas for more. He kept surging upward into me lifting my whole body, even as a hand pressing on my lower back held me tight to his invasion. \n\nIn complete surrender I moaned with pleasure as I felt him explode inside me. Our orgasms ran the course of each other's and weary of pleasure I slid off of him and snuggled into his side. His arm was about me and I slept in the peace that was all about me in our little haven even as the world continued to go through hell outside.\n\n\u2003\n\nCHAPTER ELEVEN\n\nSomething Desired\n\nIt was late fall outside. The leaves had mostly fallen and the chill winds of an early winter had already begun to blow. That was all right. We had enough wood stored away for two winters and food on top of that for years to come. \n\nGod had been very gracious to us. Hunting had gone well, a garden patch had fared even better and foraging had never been more successful. \n\nIn addition to all that Wyatt had found some more canned food in an abandoned house about a day's journey away. Best of all though the hunters were gone. \n\nNo more drones flew overhead and no search and kill parties combed through the forest and abandoned fields. Whether they thought everyone was dead or they had met with hard times themselves, we didn't know or much care about, although that said my hope was for the latter. \n\nThe big thing though was that they were gone and that was what mattered most, because it meant my mate always returning home to me had never been more likely to hap-pen than it was now. Life in general was beyond good. \n\nGod had given us a beautiful baby girl. Delivery had gone amazingly without any complications and more and more we increased in awareness of the assurance that we could survive just about anything, and what we couldn't, well God was enough so we relied on Him and He'd never let us down. \n\nSometimes it was a struggle, but He was always there with us in the midst of it and He always brought us through to the other side without fail each and every time. Little by little Wyatt and I were learning to trust Him and His plan for us more and more by the day. \n\nThe baby made a noise and I lifted my head from off the sheets. She was stirring in her sleep fitfully. \n\nIt would seem Wyatt's actions were proving a bit too boisterous as he shook the bed with the in and out plundering of my sheath from behind. I didn't mind the rough-ness of his taking. I loved it when he took me in this way. \n\nApparently he too noticed Sarah's fitfulness and his surging passage into me stilled to a gentler in and out glide. I propped myself up on my elbows and glanced behind me and smiled as I took in the sight of him powerfully positioned behind me with his gaze rooted on my bottom that I held arched upward for the taking against his groin. \n\nHe moved the oily finger, he had buried in my ass then and I blinked from the unexpected pleasure of it. Oh, I knew what he wanted. \n\nDuring late pregnancy he had begun to play with the opening of my ass. I hadn't said anything about it or told him to stop. \n\nHis playing had become more advanced to include the insertion of a finger and then sometimes two. From the beginning, it was clear where things had been headed and as I would never deny him anything I had patiently waited for the day he would slide his cock up my ass. \n\nI couldn't say it was something I specifically wanted to have happen, but he wanted it, and it pleased me to please him and so I willingly took the insertion of his fingers and sometimes even his tongue and said nothing to oppose his enjoyment of this last virgin part of me. \n\nTwo things had become clear, though over the past several months. For one, I had come to love the feeling of his fingers inside my ass, because it made him feel even bigger within me and my orgasms were even more intense than before. The other thing was that he intended to go no further until I told him it was okay to do so, which made me feel very special and deeply cared for. \n\nI'd been waiting for the right day. Today felt better than okay. \n\nHe stayed buried to the hilt within my sheath as his oily finger withdrew and pressed in again and again. I groaned deeply at the sensations he was evoking and held steady to his plundering touch of my bottom. \n\nHis free hand clutched one of the cheeks of my bottom in a clear statement of the way he adored this part of my body, even as his other hand plundered the tightness that lay between my cheeks. \n\nShyly I called out to my stud of a husband as the very real desire to feel something far bigger than his finger within the warmth of my rear passage occurred to me for not the first time, \"Hey baby?\" \n\nHis finger stopped and he looked across the plane of my arched back to meet my gaze. I wiggled my bottom back into his groin and feeling the pleasure of him within me to the hilt along with all I felt for this man gave me the courage to say, \"I've never said no to anything you've wanted and I have no intention of ever doing so. You don't have to wait anymore. Take what you want of me. I'm yours honey.\" \n\nHis shaft swelled even bigger within me and with some trepidation and even more excitement I focused on keeping eye contact with him. Just how was all of that possibly going to fit in my ass?\n\nGruffly he asked, \"Are you sure?\" \n\nI nodded my head. \n\nHe swallowed and then asked, \"But do you want me to? Please be honest.\" \n\nMeeting his gaze I spoke the truth, \"Today I do. I don't know about tomorrow, but right now I want every thick inch of your cock as far up my ass as you care to drive it. Descriptive enough for you Sugar?\" \n\n\"Yes.\" He said gruffly and withdrew his cock from my sheath. A cock that felt like it had increased to never before seen proportions. \n\nI let my face fall back to the mattress as I waited for him to make my ass his. His free hand pulled on my hip and I freely folded backward over my knees until the opening of my rear still pierced with his finger was at a level for his cock to better surge into. \n\nNervously, I focused on breathing deeper and with reassurance Wyatt said, \"I'll be gentle.\" \n\nI knew he would be and knowing that held me poised in position as his finger withdrew from my well oiled rear passage leaving me empty for a moment. It was only a moment though, as I then felt the wet head of his cock soaked with my juices begin to press into my ass. \n\nI let my breath go out and I pushed as I had learned to do in order to better accommodate the entry of his fingers. I gasped with surprise as I felt the entire head of his shaft squeeze inside of me and past the tight outer rings of my opening.\n\nEyes wide open I breathed hard and fought for control as more of his cock began to slide in. He was big! \n\nI closed my eyes as the discomfort became such that I wanted to tell him to stop. For his enjoyment sake, though I didn't want to tell him to stop. \n\nMore of his shaft eased in and I gasped and clutched at the sheets. The problem with my husband was that he only got thicker the further down his shaft you went. \n\nIt had never been a problem until now. He was built like a tree trunk and that's just what it felt like was invading me from behind. \n\nI couldn't do it! \n\nBreathing heavy I was on the verge of telling him to stop, when the baby cried out. Her cry cut through the dis-comfort I was feeling and I looked up. Her cry told me she was hungry. \n\nI heard Wyatt sigh heavily and his shaft began to withdraw from me. He'd never felt as engorged as he did right now and even though he was doing what I had been about to ask him to do I no longer wished for it. One way or another this man was going to have the pleasure of my ass that he so clearly desired to enjoy. \n\nRaising up slightly I reached back with one hand and grasped at his thigh. Not looking at him I said, \"Stay where you're at honey.\" \n\nHe stayed and leaning forward slightly I grasped Sarah's swaddling blanket and gently pulled her to me across the sheets. Smiling down at her angry cry face I said, \"What's wrong sugar? Hungry?\" \n\nShe only cried harder. Chuckling, I eased her beneath me as I held myself up with one elbow, \"It's alright baby girl. Mamas got milk for you. Lots of it, see.\" \n\nHer greedy lips found my nipple and latched on aggressively even as her small hands rose to grasp and repetitively kneed my breast in order to make my milk flow even faster. I hovered over her playing with her fingers and stroking her cheek as she ate noisily with great gusto. \n\nShe was such a good baby. Time went by and eventually my nipple popped free of her latch and she burped loudly. Laughing softly I wiped at her face, as she sleepily closed her eyes once more completely satiated. \n\nIn two more seconds she was fast asleep and, gently I eased her away from me and farther up the bed. Some-thing had been happening during this whole interlude. I had been adjusting to the size of my husband's cock placed most of the way inside of my ass.  \n\nThe presence of his shaft did not feel bad at all now and the discomfort that I had felt was no more. I glanced back over my shoulder at him with a smile. Immediately I laughed upon seeing how every blood vessel in his face was ticking with tension. \n\n\"Oh, honey!\" I soothed shaking my head and then breathy voiced I said, \"Make me yours.\" \n\nI brought my face forward and exclaimed loudly as he did exactly that. He slid all the way to the hilt in me and it had only brought me pleasure this time. Purring I pressed back into his deep claim of my ass and his control snapped just like I wanted it to. \n\nI wanted to be taken and my mouth fell open as the sensation of feeling him withdrawn almost out of me only to be rammed all the way in again registered across every nerve in a deep guttural fashion that had me moaning in anticipation for the next surge.  \n\nI couldn't explain it. The experience had gone from being a source supreme discomfort, even pain, to a feeling like no other. He kept surging deeply and his stroking possession of my ass began sparking an orgasm entirely different than any I'd ever had before. \n\nIt ripped through my body and left no prisoners. I couldn't help it, I screamed and through it I heard him cry out passionately, even as I felt his seed shoot into me deeply. \n\nWhat we had done was so very different and yet in the aftermath I liked it. Gradually reality returned and slowly as if with great reluctance Wyatt pulled his shaft clear from my ass's tight clasp of it. \n\nI felt so empty! \n\nHe collapsed down to the bed beside me opposite of Sarah. Breathing heavily, he looked at me with wonder in his eyes before stating, \"You are simply an amazing woman Honey!\" \n\nSmiling, I eased over him as I felt the muscles of my rear passage contract down until I was closed, with only his seed sealed within me. Far from feeling worn out I felt ready for more. In fact at this moment I had energy I couldn't even begin to explain.\n\nMy wish for more though wasn't going to happen, as I could see my man was completely worn out. Smiling into his gaze I said, \"The last half of that was pretty amazing.\" \n\nHe nodded, not saying anything and continuing on I said, \"Maybe we could work on making the whole process as nice as the last part was?\" \n\n\"Tomorrow?\" He breathed out with an air of hopefulness in his tone. \n\nChuckling, I leaned forward and against his lips I said, \"Darling, you can start tonight for all I care.\" We kissed deeply for a long moment and then pulling back, I said as I eased up higher in the bed, \"But in the meantime I was wondering if you could help me with something. I have a baby who only likes to nurse on one side before she falls asleep. Think you could take care of this other side for me tonight?\" I teased as I positioned my milk en-gorged breast so that my nipple, already leaking warm sugary milk, fell across his lips. \n\nHe groaned and swatted me lightly on the rear as he muttered something like, \"I don't deserve you!\" Before his lips closed over my nipple and took my breath away even as my milk flowed freely into his mouth, giving him sustenance that I delighted in doing even as I delighted in the fact that I had pleasured him deeply tonight by letting him have my ass. \n\nI stroked his face and hair with my hand and watched him. He may not think he deserved me, but the truth was that neither of us deserved all that had been given to us. \n\nIt was truly a blessing to be a beloved child of an all-powerful God who knew how to and even relished in the giving of good things to those who put their trust and faith in Him. God was everywhere, but looking heavenward, I whispered, \"Thank you for everything.\" \n\nPeace rained down upon the moment and with my milk gone, I lay over onto my back. My man cuddled into my side and laid his big hand spread across my belly in a statement of possession that I loved and in turn I moved Sarah in close to me on the other side. The cold of approaching winter weather blew strongly outside, but the cave was warm and cozy. \n\nBefore long I was the only one awake as I continued to hold both of my family members to me. Tear after tear coursed down my face to disperse into my hair and damp-en the pillow beneath. \n\nMy tears weren't tears of sorrow, but of joy. I had everything any woman could ever ask for. \n\nJoy spread throughout my whole being and with fondness I looked back over my life and took in the reality of how God had been with me from the very beginning always working things to the good. My life had harsh moments far from the joy of this moment, but this moment of true happiness was only possible because of the hard things I had gone through and the decisions I had made along the way in order to reach this moment. \n\n\"Thank You for leading me and sustaining me to see this day, God. I trust You with as many or as few days as may remain of my life knowing that You're in charge and that You've always had a plan for my life.\" \n\nThat said, I drifted off to sleep in the warmth of the peace that I had that all things would work out to the good for those who love God and kept to His ways. It was a truth hard to see sometimes, but nevertheless a fact of reality, because it said so in God's Word and my life was nothing but a living testimony of it coming true.\n\n***\n\nI hope you enjoyed the full story."
    ],
    "authorname": "AedanSayla",
    "tags": [
        "interracial love",
        "bwwm",
        "clean erotica",
        "apocalyptic romance",
        "christian erotica",
        "aedan sayla"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-huntsman"
}