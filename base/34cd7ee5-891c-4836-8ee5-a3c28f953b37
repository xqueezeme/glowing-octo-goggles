{
    "title": "The Quislin Factor",
    "pages": [
        "I suppose it all goes back to my including Shazandra in my pantheon of gods. Well, that and making Shazandra the goddess of playful debauchery. The actual entry I typed up and distributed to the players in my little D&D campaign read, \"SHAZANDRA the Libertine, the Prankster, the Adventurer, the Debauched, the Playful, the Merry. Easily the most accessible and easy-going of the main deities, chaotic neutral Shazandra often joins in (or meddles in) the affairs of mortals, just for the fun of it. Her order emphasizes having a good time without seriously injuring anyone. Her clerics are up for a good old orgy or risking their lives on a wild adventure. She is normally depicted as a slender young woman with short red hair, but she can, and does, appear however she pleases, but most often with red hair.\" \n\nThe next piece fell into place when Carol, who was the last of the group to generate her character, decided to be a cleric. The party needed a healer, she reasoned, and she had a point. Then she looked over the list of deities I provided and looked up at me, over the black frame of her glasses and said, \"How about Shazandra? Can I be a priestess of Shazandra?\"\n\nI really should have seen that one coming. Not only does Carol have red hair, which she wore short, but she also has a decidedly mischievous mind. She's quiet until she gets to know you, but once she comes out of her shell a bit, she becomes something of a flirt, with a dirty sense of humor. She's a short, thin woman with small breasts and a tight little ass. We had been best friends for several years, but nothing had ever happened between us, despite quite a bit of innuendo to that effect. Somehow it seemed that our moment just never came around. We told each other everything and knew each other better than anyone else in the group.\n\nOf course, I let her play as a half-elf priestess of Shazandra, but I said she'd have to really take to the part. With a laugh and a twinkle in her eye she promised she would. I should have, but I really didn't appreciate what I had unleashed.\n\nCarol's character, Quislin, was described to the rest of us as \"a redhead with long legs and full tits - both attributes she likes to flaunt.\" The half-elf priestess joined Tohl, a generally nondescript big human fighter with a friendly but quiet personality, Shift, a fairly generic adventuring halfling thief, \"with a thing for taller women,\" and Rayna, a dark haired, slender female elf ranger of serious demeanor. But since this story isn't really about a bunch of D&D characters, I should probably tell you a bit about the players, besides Carol.\n\nBen, who played Tohl, is a tall, generally quiet guy with short brown hair and a lanky build. Though he certainly isn't built like you'd expect a big fighter to be, he had the right height for it. Dale, who played Shift, is a somewhat short guy (just a bit shorter than me) with wire frame glasses, shaggy black hair and a playful, sometimes snarky attitude. He's actually rather shy, but covers it up with his sense of humor. Finally, there's Annie, playing Rayna. She's usually quite shy, but very smart. She has thick, dark hair that falls down around her shoulders, a graceful, slender neck, full hips, narrow waist and long legs. As for myself, I'm the oldest of the group, by a couple of decades, actually. I'm about five eight and not in too bad shape. I've got shortish brown hair and blue eyes. The five of us had all met in grad school and discovered a mutual love of D&D. Somehow, I was the one who got roped into running the game.\n\nThings went along in a typical enough fashion for the first few sessions - you know, the usual fetch quests and dungeon crawls - but eventually the party of adventurers found themselves in the big metropolis, and center of civilization and decadence, in my world. Here the adventuring took on a more urban and social flavor. The party had to interact with non-player characters in more ways that trying to kill them. Until now Carol's Quislin had lived up to her mischief mandate by engaging in playful banter and innuendo, which frankly was not too terribly different from Carol's normal persona. I'm not sure the other players had any idea that Carol was engaged in much actual role playing, and to be honest I had nearly forgotten our conversation about her playing a priestess of Shazandra. All of this changed when the party had to acquire a particular magical goblet from the private office of one Baron Bashlik. \n\nUnfortunately, there was at least one guard between the party and getting into the office. Due to the civilized environment, the fact that the Baron was a powerful and more-or-less respected personage, and, as Annie/Rayna observed, the guards were just normal guys doing their job, the party did not really have the option of simply doing away with any guards. Dale suggested that Shift should be able to sneak into the office and secure the goblet if the guard, or guards, were distracted sufficiently. Without a moment's hesitation, Carol volunteered Quislin, and proceeded without any further discussion, to say...\n\n\"Quislin loosens the top of her bodice a bit and saunters up to the guard.\" (Carol had made a point of specifying that Quislin's leather armor included a bodice that displayed her cleavage to maximum effect.)\n\nRolling with it, I responded, \"The guard eyes you suspiciously but is obviously impressed by what he sees. As you get closer, he tears his eyes off your chest and manages to say, 'I'm sorry, ma'am, but this part of the mansion is strictly private, even to the Count's guests.'\"\n\n\"Quis moves in close and bats her eyes at the guard, leaning forward a little, and says, 'I'm sorry, I had no idea. It's awfully quiet up here; you must get terribly bored.'\"\n\n\"He glances down at your breasts and says, 'Well, yeah, but that's the job.'\"\n\nShift began his stealthy approach to the Count's office door and to unlock said door.\n\n\"Quis smiles and winks at the guard and says, 'Ever sneak your girl in so you can have a bit of fun when no one's around?'\"\n\n\"The guard swallows and says, 'Uh, no, ma'am... never did anything like that.'\"\n\nShift managed to open the lock and slipped into the office, beginning his search for the goblet.\n\nCarol continued her flirtatious distraction, \"Quis reaches out and touches the guard's chest and says, 'Wouldn't your girl go for that?'\"\n\nI was already past the limit of what I had worked out for the background on this guy, who was just \"Guard 1\" in my notes, but I improvised, saying, \"He smiles and says, 'Don't have a steady girl, ma'am.'\"\n\n\"Quis inches a little closer and says, 'Keeping your options open, eh? I like that. A strong, handsome man like you ought to have lots of girls.'\"\n\n\"He blushes and laughs a bit.\"\n\nAt this point Dale managed to critically fail a search check, and I ruled that he knocked over a bookend or something. \"The guard hears the sound and looks toward the office door.\"\n\n\"Quis says, 'I think you should have some fun on the job, at least just once.'\"\n\n\"He's still looking toward the office,\" I said.\n\n\"Quis drops to her knees in front of him and starts undoing his... armor? What's he got?\"\n\nA bit distracted by the abrupt turn of events, I stammered, \"Um, a chain shirt and trousers... buttoned trousers.\"\n\n\"Okay,\" Carol said without a pause, \"I unbutton his trousers and pull his cock out.\"\n\nI glanced around at the other players who were all looking at Carol. No one seemed upset, just a bit shocked. I said, \"Well, he's certainly not looking at the office anymore.\"\n\n\"Good, I start to give him head.\"\n\n\"Carol!\" Annie gasped, choking back a laugh.\n\n\"Well, we need to get that goblet, and clumsy over there is banging around, so...\"\n\n\"We want details,\" Dale grinned.\n\n\"You've never gotten a blowjob?\" Carol smiled over at him. \"Anyway, maybe you should concentrate on finding that goblet.\"\n\nWith a raised eyebrow, Dale proceeded to detail how Shift was looking for the goblet. However, a number of very low dice rolls and some stray guesses resulted in the process dragging out a little longer than expected. So, I decided to turn up the heat a bit.\n\n\"A second guard comes around the corner and sees Quislin giving head to his companion.\"\n\n\"Uh oh,\" Annie said. Ben had not said a word during all of this but was paying very close attention.\n\n\"Um...\" Carol mused, \"hell, I beckon him over with a smile and a wink.\"\n\nI caught Annie looking at me with an expression that was equal parts shocked, amused, embarrassed, and titillated. I smiled at her, shrugged, and said, \"Alright, he comes over, and unbuttons his own fly.\"\n\n\"Quis reaches out and starts stroking the new guy's cock,\" Carol said.\n\nEven Dale was struck silent for a moment, but then Annie surprised me by asking, \"How big are they?\" \n\nThough the question was directed at Carol, she turned her eyes to me; as the dungeon master, such issues were up to me to decide. I opened my mouth, shut it, tossed a few dice and said, \"The first guy is about average, but the second is pretty well endowed.\"\n\n\"Oh?\" Carol smiled. \"How well endowed?\"\n\n\"Uhh...\" I rolled a twelve-sided dice, not knowing what I would do if it came up with a low number, and said, \"ten inches and pretty thick.\"\n\n\"Nice,\" Annie whispered.\n\n\"Quis starts sucking on that one while stroking the other,\" Carol announced.\n\nWanting to see how far Carol, or Quislin, would take things, I said, \"They're pawing at your body, reaching into your bodice and squeezing your tits.\"\n\n\"Quis is really getting into it, moaning on their dicks as she moves from one to the other.\"\n\n\"They're getting into it too,\" I laughed. I rolled a die again and said, \"The second guy is moving around behind you and kneeling on the floor, squeezing your butt under the skirt of your leather armor.\"\n\n\"I... I mean, Quislin rises up a bit, while continuing to suck on the first guard.\"\n\nNobody seemed to be upset or annoyed, so I continued, \"The guy behind you starts fucking you from behind.\"\n\n\"Is that the one with the big cock?\" Annie asked.\n\n\"Yes,\" I nodded.\n\nCarol bit her lip and said, \"Quis rocks back and forth between them, sucking and fucking.\"\n\n\"Damn!\" Dale breathed. Ben just nodded in agreement.\n\nNot knowing what else to do at that moment, I tried, \"Shift has found the goblet by now and quietly slips out of the office. Of course, he hears all the sex going on and sees what's been going on.\"\n\n\"After watching for a bit, Shade beats it down the... Ha! No, he escapes quietly down the hall. He'll beat it later,\" Dale managed.\n\nI looked to Carol, who said, \"Well, I can't just get up and leave... Quis stays until the job is done.\"\n\n\"Where do they come?\" Annie asked Carol, who looked to me for an answer, but I just shrugged as if to say it was up to her. Annie's particular attention and questions was almost as hot to me as Carol's character's behavior.\n\n\"The first guy comes on Quislin's tits and the second guy comes in her pussy,\" Carol said.\n\n\"And did Quislin come?\" Annie wanted to know.\n\n\"Oh, yeah,\" Carol laughed. \"She loves her work!\"\n\nThe session went on for another hour or so and, surprisingly, the group managed to behave themselves almost as if nothing unusual had happened. Carol seemed to deliberately cut back on the sex jokes, and instead helped Annie and Ben keep everyone on track. \n\nWe were wrapping up for the night when I saw that Annie had texted me to say \"Wow!\"\n\nI responded with, \"Yeah, I didn't see that coming. You okay with it?\"\n\nAfter a moment, I got back, \"That's what she said!\" and then, \"Yeah - it was hot!\"\n\nI sent back, \"I'm glad you think so. :-)\"\n\nThen Ben, Dale and Annie were packing up and heading out the door. Carol stayed behind, as usual, to help clean up and chat. However, when I came in from saying goodnight to everyone and seeing that their cars started and all that... (Okay, I'm not exactly sure why I always do that; it just seems polite.) When I came back into the house, I found Carol in the living room taking off her clothes! Her glasses and top were on the table by my laptop. She had just unfastened her bra and dropped it to the floor. \n\nShe saw the look on my face, laughed, and said, \"Are you just going to stand there looking at my tits?\"\n\n\"I just might,\" I smiled. They were perfect; small but ideal, with pink areolas. But then I stepped up to her, catching her pretty face in my hands and kissed her. It started out as a tentative, tender kiss at first, but quickly grew more passionate. She slipped her arms around my waist and pulled me close. \n\nWhen our lips parted, she grinned and said, \"That was nice; now get naked.\"\n\nMy t-shirt, shorts and underwear were off by the time Carol was able to peel herself out of her own shorts and panties. She grabbed my hand and pulled me toward the sofa. I was only barely able to put my own glasses on the table. Carol promptly sat down on the front edge of the couch. Without the slightest hesitation, Carol sucked me into her warm mouth. In less than five minutes, I had gone from being strictly platonic friends with Carol to kissing her, being naked with her, and having my cock in her mouth. The way she was moving her mouth up and down on my shaft and the way her tongue pressed against the underside and played with the head were clearly intended to get me as hard as possible as fast as possible, and it worked like a charm. In fact, I would have had an exceptionally hard time not being rock hard in those circumstances. \n\nShe didn't stop with getting me hard, though, but kept enthusiastically sucking and pulling on my cock. She wrapped one hand around the base and started stroking my balls with the other. \n\n\"You're going to make me come,\" I found myself groaning.\n\n\"Mmm-hmm!\" she hummed around my thick, hard, wet cock without slowing down in the slightest.\n\nI reached out and held her head gently as I leaned back a bit and slowly fucked myself in and out of her eager mouth. I couldn't believe this was happening, but it felt so amazing! Looking down at my beautiful best friend, naked and giving me such vigorous blowjob, I thought to myself this was too good to be true... Then I was coming. I threw my head back and let out a long, low groan as my body clenched and I felt a long stream of cum pumping out of me into Carol's mouth and down her throat. My whole body was trembling, and I felt her swallowing every drop.\n\nAs I slowly came to my senses, I looked down to see her smiling up at me impishly. Her hand was still wrapped tightly around my cock and she had the head still in her mouth. She let it pop out at last and said, \"Delicious! Up to fucking me now?\"\n\n\"Oh yes, but first...\" I grinned as I got down on my knees in front of her. I gave her a quick kiss on the lips and then said, \"Lie back.\" She smiled broadly and leaned back, moving a pillow to rest her head on. I bent down and kissed her exposed pussy, then lightly ran my tongue up over her. I repeated this a couple of times as I ran my hands over her firm thighs. \n\n\"No need to tease me,\" Carol murmured.\n\nThough she was clearly not complaining, I pressed my mouth more firmly against her, then used the tips of my fingers to part her lips, letting my tongue slip between them, tasting her and flicking over her clit. She shuddered a bit and scooted a bit down, pushing herself toward me. I pushed my tongue in deeper, up into her dewy sex, then pulled it back to run over her clit. After a few more of these tongue strokes, I eased one of my fingers up into her and began to work it slowly in and out of her as my licking concentrated on her clit, moving slowly at first, but with gradually increasing pressure and tempo. When Carol arched her back, pushing herself still further down into the couch and toward me, and cupped her breasts tightly in her hands, I decided to push a second finger up into her. I started to turn my head from side to side a bit as licked steadily at her clit and I twisted my fingers together inside her, making sure to rub my knuckles against her g-spot. It didn't take much of this before she let go of one of her tits and grabbed my head to pull it to her, making sure I didn't stop doing what I was doing with my tongue. I was only too happy to oblige, licking and sucking hungrily at her until she was arching her back dramatically and squeezing my head between her thighs. As she clenched and groaned, I sucked her clit into my mouth and pulled on it, while keeping my fingers still inside her.\n\nWhen she finally lowered herself back to the couch, I slowly released her clit and gave it a kiss.\n\n\"Wow!\" she breathed. \n\nI gave her clit a gentle lick to which she responded with a long \"Mmmmm,\" but then added, \"No, I need you to fuck me now.\"\n\nLaughing a bit, I drew back and said, \"Well, if I must.\" I moved up over her but kept my fingers inside her, moving them in and out a bit as I paused to kiss each of her nipples and then her lips. I felt her hand grasping my cock, which was still very hard and ready, and directing it to the mouth of her waiting pussy. I looked deeply into Carol's eyes and moved forward. As my sensitive head penetrated her I was swept away by the heat of her, and then I was sinking into her tight, wet embrace, feeling her soft but strong muscles squeezing and pulling at my cock, which felt harder and bigger than it ever had before.\n\nI was still looking into Carol's eyes, as I felt her legs wrap around my hips and her arms slip around me, reaching for my ass to pull me into her. I sank into her slowly, filling her up. I knew where this was going, but I wanted to enjoy the journey. As I felt myself hitting her cervix and grinding against her clit, I rocked my hips a bit before drawing back out. I came almost completely back before pressing in again. \n\n\"Fuck yes!\" Carol breathed. \"That feels good.\"\n\nI took my time at first, moving in and out, with long, deep strokes, reveling in the feelings of being inside her. But gradually my passion, and the fact that Carol was urging me on with her flexing legs and hands on my butt as well as her mostly inarticulate vocalizations, won out and I began to plunge into her with increasing force, drawing back less, fucking her with shorter, faster, harder strokes. My body was grinding against her clit with each thrust, and my cock was filling her, sliding in and out vigorously. Our faces were only inches apart and we were still looking into each other's eyes, until we weren't... Suddenly she closed her eyes and threw her head back as she arched her back underneath me. I felt her pussy clenching and pulling at my cock as she came shuddering and groaning. Her fingers were digging into my ass while I shoved into her, keeping pressure on her clit, my cock all the way inside her grasping sex, as Carol rode her orgasm as long as she could.\n\nIt felt like a long time before she opened her eyes to see me smiling down at her. It was my turn to say, \"Wow!\"\n\n\"Shut up!\" she laughed. \"Did you come?\"\n\n\"Again? No, but that's fine.\"\n\n\"Not on my watch, buddy!\" She began to rock her body underneath me, encouraging me to go back to fucking her.\n\nI chuckled and said, \"Maybe we should take this upstairs.\" \n\nCarol smiled, \"But that means you'll have to pull out.\" Then she was pushing me back, saying, \"Let's check out your bedroom.\"\n\nQuite some time later... And I admit that I was really enjoying prolonging things. Carol was as enthusiastic and energetic as Quislin would be. We tried at least a half dozen positions, and none of them briefly, before I was again looking down into her eyes, holding her wrists up over her head as she shuddered with another orgasm, then I was coming too. The world fell away as my cock swelled inside Carol and I flooded her with hot cum. I clenched my teeth and groaned deep in my throat as my body contracted and shook from head to toe. \n\n\"Damn!\" she groaned as I carefully extricated myself and rolled over onto my back next to her. \"Why did we wait so long to do that?\"",
        "\"Hell if I know!\" I chuckled.\n\nUnsurprisingly, our relationship changed after that night. While we continued to be the best of friends during the day, and many nights, whenever she felt the urge Carol would spend the night, and a long night of sex followed every gaming session. If Ben, Dale, or Annie noticed any changes they never let on. Meanwhile, Carol and I got to know each other exceptionally well. She learned all about my few predilections and I learned about her interesting past. Life was good.\n\nThat would be a sensible place to stop, I suppose, but the story's not over. Carol, and Quislin, weren't done causing mischief.\n\nA few gaming sessions passed without further incident. The next moment of heightened sexual tension came when Tohl managed to save Quislin's life (he killed a hobgoblin who seemed about to take her last hit point). \n\nIn true Quislin fashion, Carol voiced, \"'Thanks, big boy, you'll have to let me thank you properly.' She runs her hand over Tohl's chest and bats her eyes up at him.\"\n\n\"Um,\" Ben struggled for words, \"we're all covered in hobgoblin blood.\"\n\n\"'I don't mind if you don't.' She starts to undo her bodice.\" Carol flashed me a quick smile and wink.\n\nBen was actually blushing a bit, but managed to say, \"Uh, no thanks. Just doing my job.\"\n\n\"Quislin pouts but accepts her fate. Oh, and casts a healing spell on herself!\"\n\nLater that night, when Carol had my already hard cock in her hand and was kissing the side of my neck, she asked, \"Do you think Tohl will give it up to Quis?\"\n\nI squeezed her ass, laughed and said, \"He'd be a fool not to!\"\n\nShe straddled me, moving my cock into the right position, and slowly sank down on me. I groaned as I felt her body enveloping me. My hands moved along her strong thighs and up over her torso, reaching for her breasts.\n\n\"I think she wants to see if his cock is as big as the rest of him,\" she said as she wiggled a little there on top of me. \n\n\"Does she?\" I smiled up at her. \n\n\"Oh, I'm sure,\" she nodded before bending to give me the briefest of kisses. Then she continued, \"I mean all that time with nothing between her legs but her own fingers, and that strapping warrior right there. How could she not think about it?\"\n\n\"I can see that,\" I murmured, pinching her nipples a bit.\n\n\"Do you like the thought of pretty little Quislin getting fucked by big Tohl?\" she asked as she began to move up and down on my cock, her hands splayed on my chest for support. \"Maybe on her hands and knees by the campfire, or bent over in the corner of a tavern?\"\n\n\"It does sound hot,\" I agreed, pushing up into her. \"You might want to check with Ben about all this, though, before you have Quis jumping him in front of the others.\"\n\n\"Mmm, I can work with that,\" she murmured and then focused her attention on less imaginary sex. \n\nThe next session was uneventful, but the one after that featured the addition of Eileen, Annie's little sister. An athletic nineteen-year-old college student home for the summer, Eileen was a bit thinner than Annie and wore her longer hair in a ponytail most of the time. She enjoyed wearing skimpy clothes, and I don't think any of us minded... well, maybe Annie did. \n\nBefore we really got started, I managed to corner Annie in the kitchen and ask her if she had warned her sister about Quislin's antics.\n\n\"Yeah,\" Annie laughed. \"I think that only encouraged her. You might have two troublemakers on your hands. She promised to behave but let me know if she causes too much trouble.\"\n\nTrue to form, Quislin greeted the new tiefling warlock, Misery, into the party with flirtation and innuendo. Eileen immediately flirted back, throwing herself into the roleplay right away. Dale tried to get in on the flirting, particularly with Eileen, but it became quickly obvious that she had his number from the start. There are few better ways to keep a young man's attention than by flirting with everyone but him.\n\nThings were going well, until once again, Tohl managed to save Quislin from a particularly dangerous owlbear (and, to be honest, some really bad dice rolls on Carol's part). Naturally enough, Carol played this up a bit.\n\n\"'You really must let me thank you properly,' Quis says, batting her eyes up at Tohl, and pushing her tits together.\"\n\n\"Doing what now?\" Dale asked.\n\n\"Like this,\" Carol got up, and bent forward over the corner of the table to face Ben. She proceeded to squeeze her upper arms together, squeezing her breasts together so they looked like they might spill out of her top.\n\nBen turned a bright red but didn't take his eyes off Carol's cleavage.\n\n\"I don't get it,\" Dale feigned confusion, though he was sitting right next to Ben and clearly had a great view. \n\nCarol took the bait and turned a bit to give Dale the full treatment.\n\n\"Oh!\" Dale said, \"Got it.\"\n\nAnnie and Eileen laughed, but as soon as Carol resumed her seat at the end of the table Ben changed the subject, \"We killed the owl bears, shouldn't we skin them to take them back to town for our reward?\"\n\n\"Or just take their heads?\" Annie offered.\n\n\"Okay, but when we get back to town, you'll have to let Quis show her gratitude,\" Carol grinned.\n\nWhen they got back to the town and had taken up a spot in the local tavern to wait for the mayor, Quislin promptly sat on Tohl's lap, and proceeded to do everything in her power to distract the big fighter. Naturally, this meant that Carol was peppering the group's discussion with things like, \"Quis wiggles a bit to get comfortable,\" and \"Has Tohl been carrying another weapon between his legs, because something's poking me?\"\n\nWhile Annie seemed to be ignoring all of this, and Eileen seemed quite amused, it was Dale who finally cracked. Maybe it was his frustration at not getting more of Eileen's attention, but he was the one who finally grumbled, \"Why don't you two get a room already?\"\n\n\"Good idea!\" Carol said. \"Who does Quis talk to about getting a room?\"\n\n\"Uh, the barkeep,\" I decided on the fly. I could already tell that things were about to get a bit crazy.\n\n\"I go and ask how much for a room for the night,\" Carol smiled.\n\n\"It's a silver piece.\"\n\n\"Oh, no problem, Quis pays the man...\"\n\n\"It's a woman, but okay. 'Second room on the right up the stairs,' she says.\"\n\n\"Quis grabs Tohl by the hand and leads him toward the stairs.\"\n\n\"If he'll go,\" I reminded Carol with a smile.\n\nEveryone's attention turned to Ben. \n\n\"Uh, well, it would be rude not to, right?\" Ben asked, clearly intrigued but still a bit flustered.\n\n\"That's right, big guy,\" Eileen chimed in quickly. \"I wish I'd saved her life.\"\n\n\"Oh my!\" Carol grinned at her new friend. \"Maybe next time.\"\n\nAnnie rolled her eyes at her sister, then went back to paying attention to Carol and Ben.\n\n\"So, Quis leads Tohl upstairs, while you guys take care of less interesting business,\" Carol said smugly. She looked down the table at me. The ball was in my court.\n\nI had a bit of a problem on my hands. I didn't like to try to deal with a split party, and I didn't like having people at the table who were just waiting around for something to do. Also, I planned for the mayor to not only show up and pay them their reward, but to introduce them to a new character who would set up the next quest. I thought this would take probably twenty to thirty minutes. Complicating things a bit, I saw an unmistakable mischievous glimmer in Carol's eyes. I could change my plans for the encounter, of course, or call Carol's bluff, if you could call it that. I reached a decision.\n\n\"Okay, well, if you're going to split the party, Carol and Ben have to leave the room for a bit. Go on upstairs and wait until I call you back. Okay?\"\n\n\"Sure!\" Carol grinned and got up. I noticed, not exactly for the first time, that she was wearing a short skirt this evening, and it was not lost on me that there were only a bathroom and my bedroom upstairs. \n\nBen looked around the table quickly, but then stood and followed Carol up the stairs.\n\nI think I did a pretty good job of playing it cool as I turned to the remaining three players and told them the mayor had arrived and brought along someone wrapped in a dark cloak. Things were going well. When Carol and Ben had headed upstairs, I felt a pang of apprehension, between possessiveness and titillation, wondering what Carol might try to get up to, but over time I was able to focus on the game. Everyone was doing a good job of focusing on the encounter, but there were questions, and before I knew it almost half an hour had passed. It was about this time that we started hearing sounds from upstairs.\n\nAt first it was just the odd, hard to pin down noise, but then there was an unmistakably rhythmic creaking of the ceiling beneath the bedroom. A hush fell over the table as all of us suddenly strained to hear more. Carol gratified us all with some low moaning, and I swore I could hear flesh slapping flesh. I could feel my heart pounding in my chest.\n\n\"Well!\" Eileen grinned.\n\n\"They're just putting on a show,\" Dale scoffed.\n\n\"They're certainly doing that!\" Eileen laughed.\n\nAnnie was looking at me intently, \"Do you think they're really...?\"\n\nI shrugged and tried to seem nonchalant. With a bit of effort, I got them to focus on wrapping up their business in the tavern. As this was going on, I realized that I wasn't jealous, I was wildly turned on! I didn't want to stop what was going on, I wanted to see it!\n\nMy phone buzzed in my pocket. It was a text from Annie: \"Do you think they're really having sex?\"\n\nMy reply was tapped in hurriedly and a bit absently: \"Maybe. What do you think?\"\n\nWe wrapped up the encounter, and the noises from upstairs had stopped. I called out, \"Okay, you guys can come down now.\"\n\nI glanced at my phone and saw Annie's response: \"It's hot!!\"\n\nBen came down first. Everyone noticed that he wouldn't meet anyone's eyes. Finally, Eileen said, \"Well, how grateful was she?\"\n\nEveryone, including Ben, burst out laughing, over which I could hear the upstairs toilet flush. Carol came down the stairs and it was quite clear that her hair was considerably messier than before. \n\n\"Sorry we took so long,\" I said, trying to hide the fact that I was peering at Carol intently. \n\nShe just smiled and said, \"Oh, no worries. We managed to pass the time. What did we miss?\"\n\n\"I think we'd rather know what we missed?\" Dale grinned.\n\n\"I'm sure you would,\" Carol winked at him and smiled. \"You'll just have to save Quis' life, I guess.\"\n\n\"Dibs!\" Eileen giggled.\n\nIn a valiant effort to regain some measure of control over the situation, I made Annie, Dale, and Eileen explain what Carol and Ben had missed. Then, as it was too late to start the next quest, we wrapped things up. I tried to act casually as I did the usual post game routine. Annie lagged a bit behind the others, so I took the opportunity to say, \"I hope that wasn't too much for Eileen.\"\n\n\"I wouldn't worry about her! I'm the one who's all wound up,\" she smiled and blushed at the same time, turning to quickly head for her car.\n\nTrying to not so obviously hurry back inside, I hurried back inside. Carol was moving around the living room tidying up, studiously avoiding meeting my gaze. I leaned against the wall and watched her with a cocked eyebrow and an amused look on my face. \n\n\"Yes?\" she finally stopped and looked up at me. She was obviously trying to look completely innocent but was having a very hard time not looking quite pleased with herself. \n\n\"Well? What happened?\" I asked.\n\n\"First, you're not actually mad, are you?\"\n\n\"No,\" I laughed, partly at myself. \"I'm really not, but I am very curious.\"\n\n\"Oh, well, come on then, I'll tell you.\" She switched off the downstairs lights and led the way upstairs. \n\n\"We came up here and I turned on this lamp over here, then I sat down here on the end of the bed like this and patted the bed here so Ben would sit down next to me.\"\n\nI followed her lead, sitting where I was bid. I'm pretty sure my cocked eyebrow hadn't wavered a bit yet.\n\n\"I said, 'How do you want to do this?' and he said, 'Uh, do what?'\" Her impression of Ben wasn't too bad, really.\n\n\"I said, 'Well, we're supposed to roleplay Quis and Tohl, right?' 'I guess so, yeah.' 'Well, what would they do?' 'Um, Tohl would follow her to the room, and, uh, shut the door behind him.' I didn't shut the door though; I wanted you to hear if things got loud. Anyway, I said, 'Good, then Quis would turn around and start undoing her bodice, taking her time but looking Tohl in the eye all the time.' 'Um, I guess Tohl would take off his armor.' 'Good, what's he wearing under all that?' 'Uh, undergarments? Like a shirt and breeches, I suppose.' 'Kind of like what you're wearing now?' 'Yeah, kind of.' 'Nice, so, Quis finishes undoing her bodice and then pauses to make sure he's looking at her... Wait, stand up here.' And I pulled him up and had him stand right here like this. Yes, exactly.\n\n\"'So, she looks up at him and takes off her top like this,'\" Carol continued and illustrated exactly what she did by pulling her top up and over her head, tossing it to the side of the bed. \n\nAutomatically, I reached out to caress her bare breast, but she stopped me. \"No, he just stood there, gaping at me. I smiled and said, 'Do you like them? I've noticed you looking at them. You earned the right to touch them, you know. You saved my life, so you can do pretty much anything you want with me.' He just kept staring at me, mostly at my tits, so I reached out and took his hand and put it on me, like this.\"\n\n\"Lucky you were weren't wearing a bra, eh?\"\n\n\"What a crazy random happenstance!\" she winked.\n\nCarol's nipple was hard under my palm, and I gave her tit a loving squeeze.\n\n\"Yes, he did that too. I took a step closer, like this and pushed his shirt up, but he caught on and took it off. Yes, good. I could tell he needed more encouragement, so I leaned in and kissed each of his nipples like this.\"\n\n\"And were you doing what you're doing there with your hand?\" I asked.\n\n\"Mmm-hmm,\" Carol nodded. \"He wasn't as hard as you are, though. I asked him, 'Will you let me show you my gratitude?' He managed to nod, and I got down like this and started undoing his pants, like so. He tried to stop me and asked if you'd be upset. At the time I thought he knew about us, but now I think he was just worried about using your room. You kind of told us to come up here, though, right?\"\n\n\"Uh, yeah, I did.\"\n\n\"Exactly,\" she smiled smugly. My shorts were down around my ankles and my cock was straining in her hand. \"I told him I'd make it up to you later, and then started doing this.\"\n\nShe knelt there in front of me sucking up and down on my cock, slowly. I was already as horny as I remember ever being! I managed to focus a bit, partly to avoid coming right then. \"I take it he didn't object?\"\n\n\"Mmmm, no, but he did take longer to get hard. He must have been nervous. But when I got him about as hard as you are now... I smiled up at him and said, 'How do you want me, my hero?' He didn't seem to have any ideas, so I stood up, dropped my panties, and bent over like this.\" Carol acted out her words, kicking her panties to the side and spreading her legs as she bent over at the end of the bed, butt high and head on her crossed arms. \"Now, hold on! He didn't just jump right in, but he ran his hand over my ass, pushing my skirt up. Yes, like that. He got behind me and ran his fingers over my lips. Mmm, good, yes. Then he pushed his fingers into me... uh huh, right... then he was, um, using his thumb in my cunt and his fingers on my clit. Fuck! You're good at that!\"\n\nI chuckled, \"Then what happened?\"\n\n\"He pushed himself into me,\" Carol said and then pushed back against me as I pushed my cock down and slid it home into her very wet and hot pussy. \"God, that feels good.\"\n\n\"And he fucked you like this,\" I asked, rather hoping the answer was a simple yes. I really needed to give in and have my way with her.\n\n\"Uh, no, he's too tall... The angle wasn't working, so I, um, got up here like this on the bed and he got on his knees behind me... yeah, right... and then he fucked me. Yes, just like that. He fucked me hard, baby. Just, yes, fuck me!\"\n\nI didn't need to be told twice, I held onto her hips through her bunched-up skirt and drove into her hard and fast. I could hear the slapping of her butt cheeks against my lap every time I pulled her back on my engorged cock. I didn't care that Ben had fucked her earlier, in fact, I liked it. As if she was picking up my thoughts Carol started saying, \"God, I'm such a slut! Do you like me being such a slut, baby?\"\n\n\"Fuck yes, I do!\" I groaned, slamming into her violently. I heard the floor creaking louder and faster than it was earlier. I felt Carol's fingertips brushing against the base of my cock; she was stroking her clit furiously. Then she was crying out incoherently and I was coming so hard I almost blacked out. It felt like I must have pumped a year's worth of cum up inside her. When we finally stopped shuddering, I collapsed and pulled her down with me, holding her against me, my cock still inside her overflowing pussy.\n\nFinally, I was able to croak out, \"So that's what happened, eh?\"\n\nShe chuckled, and then said, \"Actually, no.\"\n\nThere was a long pause filled with the sound of our rapid breathing and beating of my heart, but I finally asked \"Well?\"\n\n\"He stopped and had me turn around so he could come on my tits. I think he really likes them.\"\n\nI laughed and cupped her breasts in my hands again, \"He's not alone.\"\n\nShe wiggled her butt against me, then asked, \"Seriously, are we okay?\"\n\n\"Do you want to stop sleeping with me so you can have Ben's big cock?\"\n\n\"No, and it's not that big.\"\n\n\"How big...? No, never mind. Look, I have to admit this was very hot. I figured you were up to something like this, and it turned me on. I'm sure I'm not the only one, either.\"\n\n\"Oh really?\"\n\n\"Yeah... hey, that was the first time you called me 'baby'!\"\n\n\"Oh, did I do that?\" she asked coyly, but I could feel her smiling to herself.\n\n\"Let's make a deal,\" I thought about adding 'baby,' but it felt forced or silly, and I wanted to be serious for a moment. \"If this kind of thing happens again, we need to end up back here like this at the end of the night.\"\n\n\"Exchanging stories?\"\n\n\"Well, yeah, of course, but I meant together like this.\"\n\n\"Mmm, good. Deal!\" She snuggled back against me a little tighter. Then after a long pause, she asked, \"So, you're cool with more of this kind of thing?\"\n\n\"Yeah, but I want in on some of the action.\"\n\nShe twisted around to look at me. This time her eyebrow was cocked. \"You sound like you have something in mind.\"\n\n\"Maybe I do...\"\n\nCarol grinned at me, \"Well, tell me all about it, baby.\"\n\nWe had to wait two weeks until the next session, and nothing happened then, but I planted the seeds for the next session's quest. The party needed to secure passage through the Dragonfang Pass, but that was guarded by an impenetrable fortress, ruled by the mysterious Count Black. When we convened the next week, I had them jump through a few quest hoops before they were granted an audience with the count.\n\nWhile they were trying to persuade the count to let them into the pass, I made a bunch of fake rolls and then announced that the count was eyeing Annie's character, Rayna. They finally caught on that the count's palace had a decidedly decadent feel to it. \n\nCarol picked up on things quicker than the rest, because she was in on my scheme, and she said, \"He likes you, Rayna, time to turn on the charm!\"\n\n\"Oh, um, okay, I move closer to his throne and, uh, bat my eyes a bit. This really isn't Rayna's thing...\"\n\n\"Channel your inner Quislin,\" Eileen suggested with a cheerful smile for Carol.\n\nAnnie laughed a little, turned to me and said, \"Count, we need to go through the pass, is there anything - anything at all - we can do to convince you to let us pass?\"",
        "I leaned back in my own chair and said, \"He leans back in his chair and looks you up and down, then says 'Anything?'\" I tried to put as much lasciviousness into that word as I could. It must have worked because Annie blushed a bit.\n\nShe looked to everyone else, \"We need to get into the pass, right?\"\n\n\"Seems like it,\" Dale nodded.\n\n\"Looks like you're going to have to take one for the team,\" Eileen smirked at her sister.\n\n\"Does that mean everyone has to leave the room...?\" Annie offered weakly.\n\nI laughed and said, \"Let's not get ahead of ourselves. The count says, 'It's hard to be sure what you're offering with all of that armor in the way.'\"\n\n\"Oh, um, so I guess I start taking my armor off,\" Annie said.\n\n\"I help!\" Carol chimed in for Quislin.\n\n\"So does Misery!\" Eileen jumped in.\n\n\"I think Shift is just going to get a good view of the show,\" Dale grinned.\n\nBen leaned on the table and said, \"What he said.\"\n\nAnnie laughed and said, \"Fine, with the girls' help I step out of my armor, wearing nothing but my underthings.\"\n\n\"He makes a gesture with his hand, like this.\"\n\n\"Oh, he wants you to take off the rest,\" Eileen grinned.\n\nAnnie swallowed, almost as if she was about to take off her own clothes, then said, \"Okay, well I take off my clothes and stand there naked - in front of everyone.\"\n\nDale couldn't resist the urge to whistle.\n\n\"Count Black smiles and licks his lips a bit, and then asks, 'So, did you have any ideas what sort of 'anything' you might offer?'\"\n\n\"Oh, um, we could, you know spend the night together...\"\n\n\"'Nightfall is hours away,' he says. Then he gestures to one of his servants who goes out a side door. 'Come closer, child,' he says to you.\"\n\n\"I move closer - right up in front of him.\"\n\n\"The count runs his hand over you, brushing his thumb over your nipple and then moving his hand down between your legs. Without asking for permission, he touches your sex, stroking it with his fingers.\"\n\nAnnie was blushing hard now, but managed to say, \"Rayna whimpers with pleasure. It's been a long time...\"\n\n\"The count smiles at your reaction and then stands up in front of you, his robes falling open revealing that he's naked underneath them and his cock is right there in your face.\"\n\n\"Oh my!\" Eileen whispered.\n\n\"Uh, I reach out and run my hand over it. Is it very big?\" Annie asked.\n\n\"It is,\" I nodded. \"It begins to swell a bit at your touch.\"\n\n\"I lean forward and kiss it, then, um, I suck on the head a bit.\"\n\nI caught Carol's eye and she gave me a quick smile. I went on, \"It's getting harder now.\"\n\n\"I hold it in my hands and start sucking it more seriously.\"\n\n\"Go, sis, I mean Rayna!\" Eileen urged.\n\n\"The count's servant comes back into the room followed by four more who are bringing a large bed with them. They set it up in the middle of the chamber like it's something they do all the time. When they're done, the count bends down and picks Rayna up in his arms and carries her to the bed.\"\n\n\"I guess we're going to get to watch,\" Dale pointed out.\n\n\"The count puts Rayna down on the edge of the bed and kneels between her legs. He lifts each one up and puts them on his shoulders before leaning in to start licking Rayna's sex.\"\n\n\"Oh, wow, um, Rayna leans back and enjoys what he's doing.\"\n\n\"Seems like we've got nothing to do but watch,\" Ben quietly grumbled.\n\n\"Oh, well, we can't have that, my hero,\" Carol said. \"Quislin goes over and gets down on her knees in front of Tohl and helps him get his cock out. That is if it's alright with him...?\"\n\nThis time around Ben was much less reticent, grinning, \"No, that's alright.\"\n\n\"Now what's poor old Shift supposed to do?\" Dale wondered.\n\nI could see Eileen thinking about jumping in, but Carol beat her to it, saying, \"Quis beckons Shift, 'Bring that bad boy on over.'\"\n\n\"Oh, cool,\" Dale laughed. \"Shift goes over to Quis, undoing his pants as he goes.\"\n\n\"Now hold on,\" I said. To be clear, Carol and I hadn't planned all of this out. She just knew that I was going to put Annie on the spot and see what happened when we turned up the heat. I was quite eager to see how all this would play out, and what Carol would do in particular. So, I said, \"I'm pretty clear about what the count and Rayna are doing so far, but what's going on over there?\"\n\n\"Here,\" Carol said cheerfully, \"I'll show you.\" She took off her glasses and shoved her chair back away from the table as far as it would go, and then gestured for Ben and Dale to get up and join her at that end of the table. She got down on her knees facing me and the table and positioned the guys in front of her, Ben on her right and Dale on her left. She could have just left it there, having shown the basic idea, but of course she didn't. Carol reached for Dale's crotch and began to undo his shorts. Ben didn't wait for his turn but started undoing his pants right away.\n\nIn another moment, Eileen, Annie, and I were watching Carol sucking on Dale's cock while stroking Ben, and then switching.\n\n\"Oh,\" I said, trying to sound as if this was nothing at all unusual. \"So, the count pushes his fingers rudely up into Rayna as he licks and sucks at her clit.\"\n\nAnnie tore her eyes off the sight at the end of the table and looked at me. I almost laughed at the mix of arousal and confusion in her expression. \n\n\"Damn,\" Eileen breathed before getting up out of her chair and moving over to the comfortable armchair in the corner where she could get a better view of Carol and the boys.\n\n\"Uh, um, Rayna reaches down and holds the count's head in place, urging him to keep licking her,\" Annie finally managed.\n\nAt the end of the table, Carol stopped sucking and stroking long enough to quickly pull her top up and over her head, throwing it in the corner. \n\n\"The count's fingers are pumping in and out of Rayna's pussy hard and deep. And she can see out of the corner of her eye what Quis and the others are doing.\"\n\nOver in her chair, I noticed that Eileen was unbuttoning her tight little shorts. \n\n\"Um, Rayna cries out as she comes hard. She doesn't care who hears or sees her.\"\n\nI smiled, \"The count rises up, keeping your legs on his shoulders and pushes his very hard, very thick cock up into you.\"\n\nEileen had one hand in her shorts and the other grasping one of her breasts. Carol had both guys erections in her face, sometimes licking and sucking them both at the same time. Annie couldn't stop watching Carol, but she seemed to be hanging on my every word.\n\n\"He's fucking Rayna hard and deep.\"\n\n\"God,\" Annie breathed.\n\nJust then, Ben groaned and sprayed a long stream of cum over Carol's face and then a second and third over her heaving tits. Dale couldn't hold back any longer and he was coming too, but Carol's mouth was on him, so he filled her mouth to overflowing with his jizz. She grinned up at him as it ran down her chin to drip down onto her breast.\n\n\"Fuck yes!\" Eileen murmured. Then she was quickly tossing off her top and kicking her shorts aside before scrambling over next to Carol. I was surprised to watch as the young woman kissed Carol's cummy mouth eagerly, and then bent down to Carol's breast to lick and suck up some of the cum the guys had left there. \n\n\"Eileen!\" Annie gasped.\n\nEileen just ignored her sister and went on making out with Carol as the two guys stroked their still hard cocks over them. Meanwhile, I rolled my own chair back and got up, moving around to stand over Eileen's shoulder. I quickly and quietly got undressed, my very hard cock springing out in front of me.\n\nBen bent down and ran his hand over Eileen's shoulder, and she turned to look up at him. In another moment she had her mouth on his cock, sucking it avidly. Wiping a bit of cum off her forehead and depositing it into her mouth, Carol grinned at me and then pulled Dale down to the floor with her. \n\nI leaned down and brushed the hair away from the side of Annie's neck before kissing it. Feeling as much as hearing her groan, I reached down to cup her breast in my hand. She groaned, \"Yes, finally!\" In another moment she had turned around in her chair to suck my cock into her lovely mouth. As she was doing this, I saw Carol mounting Dale who was lying flat on his back on the floor and Eileen leading Ben over to the chair in the corner. While her little sister was busy impaling herself on Ben's generous cock, I helped Annie get out of her clothes in record time. Together we made it over to the couch where I proceed to treat her just as the count had treated Rayna. It took very little time for her to be gasping and shaking with her first orgasm of the evening, and I didn't wait long to be driving my cock into her with her beautiful long legs up on my shoulders. \n\n\"Come inside me, please!\" she begged as I drove into her again and again, my lower abs grinding against her clit with each thrust. She was climaxing again, her pussy clenching and pulling on my cock when I boiled over, pumping gout after gout of hot cum up inside her. As we came to our senses and caught our breath, we heard both Carol and Eileen crying out in ecstasy. Having come already for Carol, the guys were able to keep going for quite a while, much to the ladies' delight.\n\nI held Annie as we watched Carol get up and cross over to tap Eileen on the shoulder. \"Switch?\" she suggested. Eileen laughed and slowly climbed up off Ben's cock and lap, to move over to Dale. Carol bent over first to suck Ben's cock a bit before turning around to sit down on it facing out to the rest of the room. I caught her eye and we shared a quick smile. Ben's hands came around to cover and squeeze her tits as she began to bounce up and down on his cock. Eileen was already on her back with Dale fucking her intently.\n\n\"Looks like you're stuck with me for now,\" I smiled at Annie. \n\n\"Good,\" she grinned. \"Let me up so I can get on my hands and knees, I want you to take me from behind.\"\n\nI was more than happy to oblige, and soon I was driving into Annie from behind, hands on her narrow waist, pulling her back on my cock, as we watched the others play. Ben's hand dropped down between Carol's legs to play with her clit, which brought her off again in short order. Eileen and Dale were still going at it, kissing passionately as they fucked. Again, Carol started shifting things around, going back over to Dale and pulling him up to kiss him while he kept driving into Eileen. Carol coaxed him up further and managed to work herself in so that she was straddling Eileen's face and Dale could fuck Eileen while sucking on Carol's nipples.\n\nThis left Ben with nothing to do, so Annie gestured him over. He got out of the chair and came over to sit on the arm of the sofa, offering his hard cock to Annie's mouth. I kept fucking her as she sucked on Ben. She was moaning and quivering between us all the time, and I suspected she was having a long series of little orgasms. I added to her sensory overload by wetting my thumb and then pressing it against her tightly puckered ass. When I pushed my thumb into her, she let go of Ben's cock and let an intense, very loud orgasm have its way with her.\n\nI was so intent on fucking Annie I was a bit surprised when I felt Eileen's hand running down my chest and then her mouth on mine. I could taste Carol on her lips. When we parted, she said, \"How about you give me a ride on that?\"\n\n\"Well, I suppose that's only fair,\" I chuckled. Annie whimpered a bit as I pulled out of her, but she was soon pulling Ben down onto the sofa under her, straddling his cock and then riding it enthusiastically.\n\nMeanwhile, Eileen had pushed me back on the couch, so that I was almost lying down with my butt close to the edge. She bent over me again to kiss me and reached down to guide my cock into her waiting pussy. She sank down on me with a sigh and I pushed up into her tight, slick embrace. I thought for a moment about the age difference between us. Relatively speaking, she was easily the youngest woman I'd ever been with, and I had to admit it was very nice to have her young, supple body grinding against my body so eagerly. She leaned back on me, feeling my hard cock rubbing against her g-spot as she rubbed her clit against my body. I reached up to cup her small, firm tits in my hands, and let her use my body for her pleasure. \n\nNext to us, Annie was climaxing again, and apparently this was too much for poor Ben to withstand. Eileen and I watched his thick cock swell and then white cum leaking from Annie's pussy. \n\n\"Damn, that's hot!\" Eileen grinned. She went back to working herself on and against my body, but then, when Annie was momentarily left collapsed on the couch next to us with a happy smile on her face, Eileen whispered, \"Oh, I can't resist this!\" She rather abruptly hopped off my cock and worked herself down between her sister's lovely legs. Annie didn't know who was licking her pussy and sucking the cum Ben and I had left there, but she was clearly enjoying it. I just lay there watching as Annie smiled and reached down to hold her sister's head to her. In a moment she realized she was touching someone's ponytail and her eyes flew open.\n\n\"Eileen!\" she gasped, \"What are you doing?\"\n\n\"I'm eating your pussy, sis, what do you think?\"\n\n\"But, you...\"\n\n\"Hush,\" Eileen said sternly. \"Lay back and enjoy it.\"\n\n\"Oh hell!\" Annie sighed and dropped her head back. Soon she was smiling again and rocking her hips against her sister's mouth. \n\nI saw that across the room Carol was on her hands and knees between Dale and Ben, sucking the first and fucking the second. Damn, she's hot, I thought to myself. \n\nI coaxed Eileen up a bit, so that she was kneeling on the couch while she went down on her sister. I then started slowly fucking her from behind. I had no plans to come again but was just enjoying the amazing feeling of being inside Eileen's sweet pussy and the incredible view of her slender, muscular back followed by Annie spread out and enjoying what her sister was doing.\n\nWith a new idea, I leaned over and whispered in Eileen's ear, \"Do you think she'll give as good as she's getting?\" Her \"mmm!\" told me she got the idea and wanted to find out. So, I pulled out of her and helped her pull Annie into position on the couch. Annie didn't resist at all but watched with a bemused smile. Then Eileen promptly got up over her in a 69 position, promptly lowering her mouth back to her sister's pussy, while spreading her legs so that her own sex came down to Annie's mouth.\n\n\"Oh my god!\" Annie groaned to herself, but she shuddered with pleasure and began to lick and suck at her little sister's clit. \n\nI stood back and admired the view, \"Now that's fucking hot!\"\n\nI decided to leave the sisters to it for a bit and moved around the table to get a better view of my sweet Carol. Ben seemed very intent, but after two orgasms already I doubted he would be able to produce another. Dale, on the other hand, might be about ready. I decided to cut in. I tapped Dale on the shoulder and said, \"You might want to go play with the sisters.\"\n\n\"Oh, okay, cool,\" he grinned. \n\nI grinned at Carol and got ready to take Dale's place, but it seemed that Ben wanted to get in on the sisters-action, too, and he quickly but gently drew out of Carol's pussy and moved around the table.\n\nI was a bit worried I'd just ruined her fun, but Carol smiled up at me and said, \"Thank God! My knees are killing me! Help me up, baby.\"\n\nIn another minute, I was sitting in the corner chair, with Carol curled up in my lap, both of us watching the others. Without interrupting the 69, Dale got behind Eileen and started fucking her. This and her sister's clit licking drove her into yet another intense orgasm. This led to a change of positions... soon Ben was fucking Eileen intently while Dale plowed into Annie, the two sisters holding hands all the while. \n\nA bit later, Annie let Dale know that she wanted to try something different, and in another minute or two she had Ben on his back as she straddled him again, taking his thick cock in her pussy. Then, Eileen got Dale's cock nice and slippery with her spit and then he pushed his cock into Annie's tight ass. This sent Annie off into a loud moaning that was intense to watch. The two men fucked in and out of her steadily. \n\n\"I think she needs another cock,\" Carol breathed in my ear.\n\n\"You think?\" \n\n\"Shut up and let her suck you,\" Carol laughed as she slipped off my lap. As I moved to the couch, Carol caught Eileen's wrist, saying, \"I owe you something, my dear.\" \n\nI got up on the arm of the couch and pushed my cock down. Annie caught it in her mouth immediately and started sucking on it hungrily. I just held still for a moment, but then started gently fucking it in and out of her mouth and throat. I had had no idea she was such a wild woman! I was only dimly aware that Carol was lying on her back on the floor next to the couch with Eileen sitting on her face, when Annie began coming in a long, loud explosion. As we slowly withdrew, she laughed and said, \"Thank you, boys. That's it, I'm done!\"\n\n\"Aw sis! Quitting already?\" Eileen laughed.\n\n\"I haven't seen you taking all three of them,\" Annie scoffed with a smile.\n\n\"Challenge accepted! But first, hold on... yes, fuck, yes, keep doing that... Yes!! Fuck!\"\n\nWe all watched as Carol licked Eileen to a long, shuddering orgasm. Then, it was Eileen's turn to take on the guys. This time I was on my back, looking up at her perfect body swaying above me while she rode my cock, as she gagged on Ben's thick cock, and Dale took her ass. I caught her tits in my hand and pinched her nipples as she shook between us, moaning and whimpering. I felt Dale's cock swelling inside her ass as he came deep inside Eileen's bowels. Then, surprisingly, Ben was coming again, and I watched as her throat expanded and contracted as she tried to swallow his load. I was able to hold off a bit longer as she gave herself up to her last orgasm of the evening. It was an impressive one that seemed to roll on for minutes. When she was done, and the other guys had pulled back, Eileen lay on me and agreed with her sister, \"Okay, yeah, I'm done!\"\n\nI kissed the top of her head and gently rolled her over so I could get up. I then saw that Carol and Annie were curled up with each other in the corner chair, and the two guys had collapsed into chairs at the gaming table. \n\nI cleared my throat and said, \"Okay, so yeah, the count says you can enter the pass.\"\n\nEveryone laughed, and Carol grinned and called me a \"dork.\" Then she waved me over, saying, \"Here, let me take care of that for you.\" The rest of the gang watched as she gave me a slow intense blowjob, and I ended the evening as it began, by shooting my hot cum all over Carol's neck and tits. Naturally, Eileen hurried over to help her clean up the mess.\n\nAfter everyone else had finally staggered out the door and to their cars, I lay in bed with Carol's head on my chest and her hand on my cock, in a relaxed but mildly possessive grasp. \n\n\"Well, how do you think that went?\" I asked with a smile.\n\nShe laughed and gave my dick a squeeze. \"You have a problem now, though.\"\n\n\"Oh?\"\n\n\"Yeah, now you're going to have to work sex into all our adventures.\"\n\n\"Oh, poor, poor pitiful me!\" I laughed.\n\n\"I'm thinking Misery needs to get gangbanged.\"\n\n\"Not Quislin?\"\n\n\"I thought Quislin's need for a gangbang was implicit.\"\n\nI smiled, \"It was, baby. It was.\""
    ],
    "authorname": "BradentonLarry",
    "tags": [
        "best friends",
        "blow job",
        "cum",
        "cunnilingus",
        "double penetration",
        "group",
        "mmf",
        "orgy",
        "sisters"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-quislin-factor"
}