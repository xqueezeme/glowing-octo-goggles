{
    "title": "Alex & Alexa Ch. 04",
    "pages": [
        "Chapter 4- All-Consuming Desire \n\nI woke early, knowing that Alexa was likely also up. It was also my parents' day off together, so they would sleep in. Better still, they were both sound sleepers, so we could make a little noise in the house without arousing suspicion. \n\nI looked over at my laptop, which sat on a small TV tray right by my bed and saw that Alexa too was stretching and waking up. She saw me looking at her and came forward to her screen, kneeling on all fours, her lovely breasts wobbling below her. She smiled serenely and blew me a kiss. \n\n\"How'd you sleep, lover?\" she asked in a soft voice. \n\n\"I slept well, thank you,\" I said, rolling onto my side to look at her. \"My dreams, which I remember well, were very entertaining and totally Alexa-centric.\" \n\n\"Mmmm, glad to hear it,\" she said warmly. \"Because I dreamed of you and I have the morning dew to show for it...\" \n\nShe reached under herself and played her pussy for several seconds and then brought her fingers back up to display for me, demonstrating how sticky they were. She stuck them in her mouth and licked them off, making a moaning sound and then smiling at me wickedly. \n\n\"That was all you,\" she cooed. \"You made me this wet and today you're going to have to finish what you started.\" \n\n\"Looking forward to it.\" I said, pointing the webcam I'd attached to my laptop down at my cock, which I was stroking to hardness. \"Oh, and just so you know? My parents have the day off and will sleep in til around ten. And they're also sound sleepers, you'd have to fire a cannon in their room before they wake up on days off.\" \n\nShe considered what I was saying and disappeared from her screen. Seconds later, I heard her quickly and quietly padding down the basement stairs and she appeared, wearing her robe that she had wrapped around herself. She threw it aside when she reached the bottom step, once again naked and collapsed onto the bed with me, kissing me hungrily. We rolled about, squirming and groping, swallowing one another's tongues, my rock-hard cock pressed to her wet pussy. \n\n\"I want you so bad...\" she whimpered, biting my lower lip. \"Alex, I need you. But I want you all wild and pent up for the grove...\" \n\n\"I want you too,\" I growled, gripping her fiercely as we ground our bodies together. \"I want to fuck you until we scream and pass out. But we'll be strong, Alexa. For our trip to the grove. Let's not cum until we're there. Then you can have all of me.\" \n\nShe kissed me feverishly for a while longer before rolling off me and lying on my bed, looking at the ceiling, her chest rising and falling as she tried to control herself. One of her hands clasped mine, fingers entwined. I know how she felt, my cock was standing straight, throbbing with need. It was going to be an icy shower I took in a bit. \n\n\"This is crazy,\" she murmured. \"I've never wanted- no, needed someone this bad before. I don't know what you've done to me, Alex, but... I need you inside me. I can hardly explain it. How the hell are we going to make it until Karen and Mike wake up?\" \n\nI pondered that issue for a moment and looked at my alarm clock. It was officially after eight am, so city by-laws and ordinances about noise were no longer in effect. I got an evil smile on my face and turned to look at her. She turned into me and snuggled close, her breasts squashed to me and her body flat to mine. My cock poked between her legs and ass cheeks. She seemed determined to hold me here until she was satisfied with whatever my solution was. \n\n\"I'll go into the backyard and start mowing,\" I said, nodding in confidence. \"This'll wake my mom and dad up. When they ask why the hell I'm doing it at such an ungodly hour, I'll explain that I wanted to get it done early so I could devote the rest of my day off to gaming. They get annoyed and you interject and tell me that you're not letting me stay indoors on a beautiful day and you're making me take you on a picnic. My parents will love it because it gets me away from the games and they are home alone and can misbehave all they want.\" \n\nShe giggled and crushed herself to me, giving me a wet kiss. \"It sounds perfect, they'll definitely go for that!\" \n\nAs a sign of her approval of the plan, she took my cockhead and toyed it against her pussylips, pressing the head just a tiny bit inside, enough to make us both tremble. She nodded and looked at me steadily. \"Soon, lover. This is what we're both waiting for.\" \n\nShe pulled away from me again, centering herself so that she felt more in control. She sighed finally and looked at me. \"Shall I make everyone breakfast?\" \n\n\"That works,\" I said, nodding. \"I can say that your cooking woke me up and I decided to get the yard work done before breakfast was ready so that I'd built up an appetite. Check to see what we have and make some European breakfast if you can.\" \n\nShe rolled over top of me and kissed me deeply one more time before putting her robe back on and heading up to her room to get some pajamas on. I laid still for some time, watching her make a show of dressing for me and then heading downstairs. Meanwhile, I put on some ratty jogging shorts and a tank top and my sneakers, things I'd wear to mow the back lawn. \n\nAs I came upstairs, Alexa and I passed one another at the kitchen. We hugged and kissed as we spun around one another and kept going. We were getting good at this. \n\nI made my way out to the back and went into the large shed. I knew that Alexa needed time to get some food started, so I pushed it out onto the lawn and did some stretches to limber up and get me going. I wasn't surprised to see her taking pictures of me from the kitchen window. \n\nOnce I saw her give me the thumbs up, I fired it up, the engine growling loudly. My intent was to wake mom and dad, of course, and I wasn't terribly worried about incurring the wrath of the neighbours, since on one side it was an elderly couple who were mostly deaf and sat on their front porches all day and on the other it was a house that had been divided up into student lodgings and they knew better than to complain to the professors who lived next door. Our back fence abutted a long slope down into the ravine, a place I intended to take Alexa when I finally could. \n\nWe had a riding lawn-mower, but this one was louder and gave me a bit of a workout by pushing it around. Having gunned it, I then began pushing it back and forth across the lawn, causing a great deal of noise. I didn't look directly at my parents' window, but after about ten minutes I saw it open and then my dad was calling to me. I couldn't hear him, of course, and just kept on with my project. \n\nSoon enough, dad was downstairs on the deck, dressed in his robe and giving me a very stern look. Mom was standing not far behind, as if keeping dad between her and myself was the only thing that was ensuring my continued existence. Upon seeing them I turned off the engine and looked at them both. \n\n\"Alex, what, in the name of Helmholz are you doing?\" dad demanded of me, louder than he needed to because he clearly hadn't adjusted his volume from when the engine was running. \n\nI shrugged. \"Thought I'd get an early start on my chore for the day. Seemed reasonable.\" \n\n\"No, as a matter of fact, it was d\u00e9raisonnable, the exact opposite of what you thought you were doing,\" mom growled, exasperated at being pulled from her slumber. \"Your brain really takes a vacation during the summer, doesn't it? You woke your father and I up with that racket on the one day we get to sleep in. Please explain how your life is not forfeit.\" \n\nAt that moment, Alexa trotted out to join them on the deck, cheerfully wishing them each a good morning and giving them a hug. She then apologized and claimed fault, saying that it was entirely possible that I'd been awakened by the smell of the breakfast she was making for everyone and that once she'd explained it would take a while still, I came out here to do something useful. \n\nDad seemed mollified but mom was still determined to blame me. Alexa coaxed her inside and offered her a nice cup of strong coffee. I said I'd keep going with the mowing to finish it off. \n\n'What? No!\" dad exclaimed, looking at me liked I'd grown a second head. \"Did you rattle your brain out when you started mowing with that relic? Get in here, we're going to have breakfast.\" \n\nI shrugged and walked inside, joining everyone around the kitchen island. My eyes bugged out at the size of the meal Alexa was preparing- sausages, bacon, thin European pancakes, potato latkes, scrambled eggs, muesli, crumpets and muffins, grilled tomatoes, saut\u00e9ed mushrooms, cheeses, baked beans, honey and berries. \n\n\"Z\u01d4zh\u00f2u...\" I muttered, looking on in astonishment. \"That's amazing.\" \n\n\"I just wanted to show my appreciation for everything you've done,\" Alexa said, smiling warmly. \"So I put together kind of a polyglot of European breakfasts. Hopefully there's enough.\" \n\n\"I'd say so,\" dad mused, looking at everything. \"Your sister'll be in a coma for a week.\" \n\nAlexa giggled and shooed us all toward the dining table, making sure we each had full cups of coffee before returning to get the food. She'd already laid out bowls and plates and silverware for everyone and then began serving us. \n\nDad and I ate a lot of everything. It was amazing and I couldn't get enough. Mom had a little of everything, since she wasn't the voracious eater dad and I were. Once we'd all been served, Alexa sat down and tackled her plate, demonstrating an impressive appetite once again. More coffee was served and Alexa insisted that no one help her, this was her thank you to us. \n\nAll the food was gone, to my amazement. Every plate was completely empty and even most of the condiments gone. We drank coffee and talked for some time, which was infinitely pleasant. Once she'd started a second pot, Alexa began to clear the table and I sharp look from mom told me I was helping her. I dutifully began stacking plates and bowls and bringing them to the sink. Alexa rinsed them while I loaded everything in the dishwasher. Once it was done, mom turned in her chair and assessed me casually. \n\n\"So, what's got you so fired up to finish your chores?\" she asked, looking at over the rim of her mug. \n\nI shrugged. \"I wanted my schedule for the day clear. I was planning on getting online and playing some co-op kill on Call of-\" \n\nMom cleared her throat, indicating that I was done talking. \"Am I to understand that you woke your father and I up at least two hours early with that infernal racket so that you'd could hide in the basement all day and get your ass handed to you by twelve year-olds in a video game?\" \n\nI said nothing initially but Alexa snickered. \n\n\"Let's look at this from another angle, shall we?\" mom said levelly. \"If we were up here making a royal din while you were trying to play one of your games, what would you think of us? And don't try to tell me that you'd have headphones on, because I know you busted yours last week and haven't replaced them yet.\" \n\nI sighed. \"Sorry, I guess I've been looking forward to this all week and didn't think things through.\" \n\n\"No, Alex, Napoleon didn't 'think things through' when he invaded Russia; this is worse,\" mom replied. \"What on earth makes you think I'd let you spend all damn day in the basement, ignoring the rest of us?\" \n\n\"She does make a valid point,\" Alexa chimed in. \"It is rather selfish.\" \n\n\"Yeah, I guess it is,\" I said, admonished. \"I'm sorry.\" \n\n\"That's a good start,\" she continued. \"But there's still amends to be made, both to me and to your parents.\" \n\nMom and dad looked at her quizzically, wondering when exactly they'd handed her the reins but then just sitting back and seeing where this would go. \n\n\"So,\" Alexa announced. \"You may take me out and show me more of the city I now live in. I intend to find the shopping malls, the markets and any boutiques that might catch my fancy. I have no driver's license yet, that makes you my chauffeur. Agreed?\" \n\n\"Alright.\" I replied, sighing loudly. \n\n\"It also has the added benefit of giving my sister and Mike the day to themselves,\" she pointed out, which put a smile on my mother's face and a big grin on dad's. \"I'd say this is a win-win for everyone, right?\" \n\n\"No argument there,\" dad said, standing up. \"Alright, it's settled. Mom and I are doing nothing all day while you're biffing off and making sure Gollum here gets some sunlight. Let's go back to bed, Kar.\" \n\n\"Right behind you, big man...\" mom almost purred as she followed dad up the stairs. We heard her giggle and then squeak right before their door closed. Alexa turned and looked at me, a huge, expectant smirk on her face. \n\n\"Did we just win?\" she asked in a whisper. \n\nI nodded. \"Big time.\" \n\nShe glided into my arms and kissed me, an almost molten expression of affection. We were still in one another's arms when I heard their door open and froze. \n\n\"Oh, and Alex?\" dad called down. \"We're turning our cellphones off, so call the house phone if anyone's dying. Have fun playing chauffeur!\" \n\nThe door shut again. \n\nWe both exhaled and laughed quietly, foreheads and noses pressed as we hugged. She trailed a finger down my chest. \"There's still stuff to do, in terms of getting ready,\" she said, smiling at me. \"I have to shower and pick the outfit I want to have you take off me and then we need to shop a little to make this authentic...\" \n\nI chuckled and kissed her nose. \"You are priceless, Alexa. Take whatever time you need and we can still see one another on the webcam anyway. I'll talk to you real soon.\" \n\nWe parted ways and I headed downstairs to find the clothes I would wear for her. I found myself being strangely thoughtful on the matter, since I would normally just wear whatever didn't completely mismatch. But his mattered to me. I turned and looked at my laptop screen to check on her- she was moving around her room, naked, examining various items of clothing. She saw me looking, smiled and waved before returning to her task. \n\nI finally had my attire picked and then went to shower, cleansing myself but then leaving the water as cold as I could take it for the last thirty seconds, to shock my body and keep me ready. I found myself checking over things needlessly, like I was nervous to go on a date. I shook my head and sat down on my bed, watching Alexa in her room. \n\nShe too had showered and was getting ready, still naked. It was a sight that made me smile and I knew I would never tire of it. She was wholly beautiful and I didn't want to stop looking at her. But then she caught me staring and smirked, waving a finger at the screen before closing it. I'd just have to wait. So I went upstairs and sat on the couch in the living room, the one we'd been naked on the day before, making out and teasing ourselves into a frenzy. I turned on a History Channel show and waited for her to come down. \n\n\"Thanks for waiting, Alex...\" said a soft voice from behind me. I turned off the TV and turned around to look at my aunt- she was stunning. That's all I could say about her. She was wearing a light blue sundress, one that flowed around her and hugged her curves just right, sensual and elegant but not to be worn by someone with a less spectacular figure. Her golden hair spilled over her shoulders and back in waves and I couldn't wait to see it in the sunlight. Her sapphire eyes glinted expectantly, waiting for my judgment of her appearance. \n\nApparently my gaze and inability to speak told her everything because she smiled and mouthed the words 'thank you' before coming forward and taking my hands in hers and looking into my eyes. \n\n\"Are you ready?\" she asked, looking into my eyes. \"I know I am.\" \n\nI nodded and smiled. \"Let's go. We've got a wonderful day ahead of us.\" \n\nAlexa snuggled herself into me for a second before turning to the side and holding out her cellphone, taking a picture of us together. She also filmed a quick video, telling her phone about how today was the day I was going to make love to her. She indicated a large picnic basket she intended to bring, along with some girl's bag or satchel that weighed about 3.8 metric tons. I went outside and put the supplies in the back of my car while she strolled slowly toward my vehicle, seeming pensive. As I pulled out of the driveway, I took her hand and gave it a squeeze. \n\n\"You okay?\" I asked. \"You're unusually... reflective.\" \n\n\"I'm fine,\" she said, smiling at me, her eyes shining. \"I'm just happy, I guess. Happy to be out with you, happy to have a new life, happy to do what we're about to do. I guess I'm just feeling blessed somehow. Karen was asking me if I was alright, you know, with our mom dying and all the upheaval. But I'd had plenty of time to come to terms with it, while we were in Cardiff. You've all made it so much easier. Especially you, my lover. It was unexpected but so welcome.\" \n\n\"I can identify with that,\" I mused. \"How often can a guy say the perfect girl came along and truly mean it?\" \n\n\"Even though... I'm your... even though we're related?\" she asked in a very quiet voice. \n\n\"I'll be honest, Alexa, I have no idea what to do about that,\" I said honestly. \"Like none. But that doesn't mean you're not the most amazing and perfect girl I've ever met. Like you said the other night, you were dropped in my lap for a reason.\" \n\nShe smiled and was silent for a while longer while I drove into the downtown core, where I knew lots of places she'd been keen to shop awaited us. She grew more animated and more of her normal, cheerful self as we got downtown. I pointed out many stores and boutiques and she kept making small verbal notes on her phone about visiting them. \n\n\"Where shall we go first?\" I asked. \n\n\"Well, I did tell Karen I wanted to go shopping, so I'd best find a new dress, at the very least,\" she stated. \"After that, we'll find a deli and some other food stores so we can make a picnic.\" \n\n\"I'm amazed you can eat at all after that titan breakfast,\" I laughed. \"Mom's not gonna eat for a week!\" \n\n\"But not surprisingly you and your father can,\" she pointed out, smirking. \"God save you two if your metabolisms ever slow down. And as for me, well, I need my energy to keep up sexually with a young buck like you.\" \n\nI laughed so hard I almost lost control of the wheel. I look at her, my eyes almost stinging from tears. \"You? Having to keep up with me? That is the most flattering lie I've ever heard. I need those breakfasts so I'll be able to satisfy you.\" \n\nAlexa giggled. \"I might have a bit of a sexual appetite.\" \n\nShe pointed out a store we were passing by and I pulled in and parked, opening her door for her. I found myself especially eager to accommodate Alexa, to be polite and gentlemanly for her. And it wasn't just because we were going to finally make love that afternoon, this was something more. I wanted to make her happy, to feel special. It was a compelling need that I couldn't readily explain. \n\nOne good thing about Alexa was that she wasn't one for endless dithering in clothing stores. It's not that she was like a man, where she knew what she wanted, bought it and left, but she moved efficiently, assessed her options and opinions, tried things on and made decisions, all the while exuding an air of romantic merriment. Watching her shop was... fun. \n\n\"I'm beginning to think there's nothing you can't make pretty,\" I said as I watched her hold a dress in front of herself. She looked at me and smiled. \"I meant that I normally hate clothes shopping,\" I explained. \"But you, I could watch you do it forever. Damned if I'm not enjoying myself.\" \n\nShe smiled. \"You sure love earning those Dutch kisses, don't you?\" she purred. She looked side-to-side, making sure no one could hear her. \"Are you looking forward to sneaking into and making love in a change room one day as much as I am?\" she whispered to me. I nodded, loving how involved I felt in her happiness. ",
        "She found a pretty dress and purchased it, one she promised we'd be using a lot in the future. We then visited a farmer's market, where we picked up the supplies for our picnic. Lastly we purchased some wine and some small glasses before we began our trek out to the nature trail. Our grove awaited. \n\nWe arrived and parked quickly, with me pulling out the picnic basket and also the heavy tote of other goods. Alexa took the basket from me and we began our walk. We took pictures along the way and I smiled and squeezed her hand. \n\n\"You sure do love pictures.\" I said to her. \n\n\"I'm usually not overboard about it like this,\" she said, pausing to take one of the two of us. \"But this is my new life and I want to remember it in its infancy. I've only been here four days and look at how wonderful things have become- I have a loving family, a prestigious university to attend...\" \n\nShe turned to look at me now. \"And a wonderful lover.\" \n\nI smirked, hoping what I was about to say wouldn't break the moment. \"I guess I'm the extra-loving part of your family.\" \n\nShe pressed her forehead to my shoulder and giggled. \"You are so funny...\" she whispered. \n\nWe resumed our walk along the trail, just talking about whatever came to mind until we arrived at the little path that veered down the slope. It was mostly obscured by branches and thicket, so we were quite certain people hardly ever noticed it. We walked down it, hand-in-hand. I subtly looked at my watch and began timing our trek through the tangle of trees until we arrived at the grove nine minutes later- today was a perfect day, balmy and blue skies. The thick canopy of leaves over us allowed those magical rays of sunlight in while the emerald grass was soft and springy beneath us. The stream's crystal waters bubbled happily on their way, accompanied by the song of birds. There were low-growing patches of blue and white flowers everywhere. A large, sturdy and flat rock anchored one corner of the clearance. \n\n\"It's even more beautiful than it was yesterday,\" she breathed. \"Have you ever seen anything more beautiful, Alex?\" \n\n\"Answering that question will earn me a Dutch kiss marathon, but yes, it's absolutely wonderful.\" I agreed. She smiled at me, blushing and squeezed my hand. She put down the basket while I dropped the big tote and she open it to remove a large blanket. We kept this aside for our picnic, when we were finally hungry. \n\n\"I don't think we'll need it before then,\" she said, smiling at me. \"This grass looks and feels wonderful.\" \n\nWe'd put everything down and aside and stood silently for a moment. Alexa looked up at me shyly and a naughty smile then played over her face. \"Are you ready to make love to me, Alex?\" \n\nI nodded and she stepped up to me. We put our arms around each other, kissing deeply and without holding back. There was a sense of relief this this kiss, like we were finally free. We steadily pulled my shirt off, followed by unbuckling and taking off my pants. She nuzzled her cheek against my boxers for a moment before pulling them down and giving my swelling cock a single kiss. \n\nI raised her to her feet and then gently pulled her sundress over her head, leaving her gloriously naked. She hadn't been wearing a bra or panties and I almost shivered in delight at the sight of her body. We wrapped our arms around one another and kissed again, happy to be naked together. Our tongues tangled as our hands wandered and caressed. \n\nAlexa broke the kiss and then slid slowly down my body, dragging her soft breasts over my skin as she kissed and nipped her way toward my hips. She squeezed her breasts around my throbbing hardness for several seconds, massaging it and kissing or licking at the head as it poked through. Finally she took him in her mouth, sinking all the way down to the base, where she held me and hummed gently. My fingers caressed through her golden locks while I closed my eyes and reveled in the sensation of this goddess pleasuring me. She bobbed back and forth slowly, caressing her breasts along the underside of my shaft while she sucked on me. \n\nI then took her by the shoulders and gently laid her back in the grass. I knelt over her and kissed her neck and shoulders, making my way down to her breasts. I kissed and teased her nipples with my tongue, making her squirm and giggle while she looked at me with heavily-lidded eyes that glinted with total desire. I kissed down her torso, nipping at the skin of her flat stomach before arriving at her hips. She smiled and spread her legs for me, allowing me easy access to her pussy. She was already wet, so I slid my tongue slowly up and down, causing her to shiver and moan. She reached down and pulled her thick lips apart, showing me her glistening inner pink. I snaked for tongue inside her, tasting her and she pressed her hips against my face, moaning again. \n\nBut then she pulled me up her body, because we hadn't come here to tease one another with oral sex, we were long past that stage. I laid on top of her and we kissed deeply, while she shifted herself beneath me, parting her legs. My cock flattened itself against her pussy and I slid it back and forth in a final tease. We both sighed at the sensation. \n\nI took her hands and pressed them down beside her head, my fingers knotting with hers. She looked up at me, a dreamy smile on her face. My cockhead was pressed to her lips, parting them ever so slightly. \n\n\"May I?\" I asked. She nodded gently. \n\nI slowly pushed the head inside and she bit her lip in anticipation. She was wet enough that I didn't need to be cautious and with a slow, firm push of my hips I slid all the way inside her. She shuddered and arched her hips against me, taking me in to the hilt. She sighed loudly at my penetration before looking at me, her eyes shining. \n\n\"Alex..\" she said softly. \"We're making love...\" \n\nI kissed her again and she squeezed her wet, tight pussy around my cock while she pressed up against me. I pushed down with my hips and she sucked in her breath and groaned. \n\n\"God, you're the biggest I've ever had...\" she gasped. \"Only my dildo... feels this big, oh God, Alex...\" \n\n\"You're so tight, Alexa...\" I whispered in her ear. It was true, I'd never felt anything like it. Being inside her was rapture. \n\n\"Yes, fuck me, Alex...\" she sighed. \"Deep in me, make me cum for you...\" \n\nI released her hands and she wrapped her arms around me as we kissed, tongues plunging again. I could feel her surrendering to the pleasure we shared, surrendering herself to me. She was giving me her body for our mutual ecstasy. I pushed my cock back and forth inside her while she worked her hips against me in churning circles, matching my rhythm. I could feel her squeezing her pussy muscles around me with each thrust. I was like nothing I'd ever felt before. \n\nHer pussy stretched around my invading cock and her fingernails in the skin of my back sent shivers through me. She shuddered and bit my shoulder before wrapping her legs around my waist. The soft, springy emerald grass felt cool against my skin. Aside from her breathing and soft moans, all I could hear was the stream, a gentle wind and the singing of the birds around us in the miracle of nature. \n\nHer legs were still wrapped around mine and her hands clutched my back. She pressed her forehead to mine, her eyes closed. Her breath was coming in gasps. Her pussy was squeezing tighter and tighter. It was slippery, warm and soft, yielding before me iron-hard shaft. \n\n\"Alexa...\" I breathed, looking down into her eyes as I propped myself on my hands to look down at her beautiful face. \"Tell me... can you cum more than once?\" \n\nShe looked back at me for a moment before nodding. \"I usually... I have- oh, God, yes... I usually have a few in me...\" \n\n\"Good,\" I said, smiling. \"Because I want to make you cum several times before I do, I want you to feel everything you deserve.\" \n\nHer eyes shone and she caressed my cheek, even as we fucked. \"Alex, darling, you don't need-\" \n\n\"I want to,\" I panted, pushing in harder to convince her to agree with my plan. She shuddered at my thrust and groaned. \"I can keep from cumming, or at least I'll try to. Normally I can, but you feel so much better than any girl before. But I want you to cum hard and often...\" \n\n\"Okay, Alex,\" she murmured. \"I love that idea. You're so generous...\" \n\nI began moving faster, sinking my cock down into her and fucking her harder. She reacted by shivering and moaning again, churning her hips against me, pulling on my butt to get me in deeper. Sweat was forming on our bodies as they tangled, our breath coming in gasps and pants. Her skin was starting to flush, growing warmer as she got closer to orgasm. \n\n\"Alex...\" she whimpered. \"Oh, God, Alex. I'm going to cum for you, love...\" \n\nShe crushed crushed herself to me and kissed me fiercely, her body shuddering beneath me and her pussy clenching my cock like a vise as she came. She moaned loudly into my mouth, fingers almost raking down my back. I could feel how wet she was, bathing my groin in her ecstasy. I rocked and pumped against her, not letting up. Her body was wracked with pleasure as she came. \n\nShe broke the kiss and flopped back against the grass, her chest heaving and her eyes glazed. Her arms were spread out to the side and she seemed almost dazed. I kept sliding back and forth inside her but slower, letting her relax and catch her breath. She finally focused her gaze on me and smiled. \n\n\"That was amazing,\" she said softly, reaching up and caressing my hair. \"I've only ever cum that hard maybe twice before today that I can think of.\" \n\n\"Glad you like it,\" I replied, grinning as I continued to sink my cock into her squelching depths. \"Sure you've got another in you?\" \n\n\"Oh, hell yes,\" she said, nodding vigorously. \"If that's what you're offering, give me more. Alex, break my cunt with that beast of yours.\" \n\n\"Okay, how would you like me to fuck you now?\" I asked. \n\nShe giggled. \"I don't think my legs'll be working quite yet... how about we spoon?\" \n\nI nodded and rolled off her, my dick coming out of her still-tight pussy with a loud, wet 'pop!' that made her squeak and shiver before giggling and slowly rolling onto her right side. I moved up behind her and she snuggled back against me, her soft behind against my hips and my cock between her thighs. She turned her head and kissed me lovingly while I reached around and fondled her perfect breasts, causing her to sigh into my mouth in pleasure. \n\nWe just cuddled like this for a minute or two, enjoying our unrestrained affection before she winked at me and reached down to stroke her gooey pussy for several seconds. She brought the fingers up, showing me how wet she was and I kissed them. She purred as I sucked on her fingers for several seconds while caressing her breasts. When she was ready, she reached down and used two fingers to pull her netherlips apart, inviting me in. I used my free hand to place my bulbous head at the entrance and then slowly pushed into her. She sighed the whole way until I was up to my hilt again. She reached back and put a hand on my cheek as she kissed me, murmuring how much she loved the feel of me inside her. \n\nSlowly, gently, I began to move my hips back and forth. She sighed again in pleasure and kept her fingers pressed to her slit, feeling my cock as it slid in and out of her. Slippery and tight as before, she felt incredible to be inside. The cool grass beneath more provided a wonderful contrast to her liquid warmth. \n\n\"It's amazing how you fill me up, my love,\" she said softly, snuggling back against me as I fucked her slowly. \"I'm certain, yours is the biggest cock that's ever been inside me, probably as big as my biggest vibe or dildo.\" \n\n\"I'm glad to hear that,\" I said, trying to keep the swelling pride out of my voice. I was her biggest. \"I'd survive if I wasn't, I promise.\" \n\n\"Yes, but I'm being truthful,\" she said, taking my hand that was caressing her breasts and bringing it down to her mons. She pressed it to her wetness, her hand on top of mine. \"Feel that? You can feel your cock pushing back and forth inside me, under the skin that's over my pussy.\" \n\nI shivered involuntarily at the thought of that being my cock I could feel moving inside her. \"I can feel it,\" I said in a quiet voice. \"That's crazy.\" \n\n\"Mmmm, not if you're a girl,\" she purred, smiling back at me. \"It's one of the most amazing feelings in the world, having your cunt stretched by a lover, who penetrates you in ways almost no one has before. This, Alex, just proves my point. Other girls should be throwing themselves at you for this.\" \n\n\"Their problem,\" I replied, pushing farther inside her and making her shudder and gasp. \"I've got you to please, to hell with anyone else.\" \n\n\"Gnnnnnn, baby!\" Alexa gasped as I began fucking her hander. She rubbed her clit as my hand went back to squeezing and massaging her breasts, pinching and pulling on the nipples. She bit her lip and keened, trembling at the delicious sting. I bit her neck and she gasped, pressing her ass back against me in a desperate bid to get more of my cock inside her. \n\nShe ground and churned her hips against me, squeezing and gripping me with her pussy rhythmically as I fucked her. She was so wet now I could hear the sounds of us making love, the slick, sucking sounds her sex made as I slid in and out with increasing speed. \n\n\"Holy shit... holy shit... Oh, God, Alex...\" she panted, pressing her ass back against me desperately and arching her torso forward. \"Oh, God, it's gonna... fuck...\" \n\nShe squeaked and strained desperately before she groaned gutturally, coming hard on my cock. Her hands had reached behind my ass and now her fingernails dug in as she writhed a squirmed through her orgasm. \"Ohhhhhhhhh my God!\" she screamed through clenched teeth. \n\nWithout warning, she now rolled over and pushed me onto my back. She straddled me and sank down onto my cock, hissing as she took me all the way in. Her golden hair spilled over her shoulders onto my chest as she looked down at me, her sapphire eyes glinting fiercely. \n\n\"And now I want you to cum,\" she said, her voice quiet but laced with iron. \"I want all that cum inside me, Alex. And I want you to use all that strength in that amazing body too. I'm not a doll, fucking wreck me...\" \n\nI nodded and she began churning her hips on me, grinding on my cock before sinking up and down, groaning and panting shamelessly. No one could hear us but the stream and the trees. She gasped as I reached up and squeezed her breasts, her fingers digging into my pecs. I bumped my hips up and down, battering her tight insides with my throbbing cock. She wanted me to cum and I wasn't going to control myself. I was surrendering to the pleasure, just like her and we would cum together. Hard. \n\nI pulled her down by her breasts and she lay against me while I sucked hungrily on her nipples, swirling my tongue around them before biting and tugging. She keened almost in pain, still impaled on my cock and moving back and forth against it since she was lying flat on top of me. She bit my shoulder, causing me to squeeze her breasts even harder. \n\nI pushed her up to sit on me again and she bounced lustily, unrestrained. Her breasts jiggled and wobbled and she let out a sudden cry as I slapped one of them. Her eyes flashed as she looked down at me, shocked by my boldness but not mad. I slapped the other one and she hissed and squeezed my cock tighter. I looked down between us and watched her pussy greedily swallowed my shaft, making loud slurping and sucking sounds. \n\nAlexa leaned back slightly, resting her hands behind herself on my thighs. She humped her hips and we both moaned as the angle of penetration changed. Watching my cock slide in and out of her pussy, glistening with her wetness was hypnotic. One of my hands reached down and massaged her clit with my thumb and she mewled and bit lip. \n\nThan I slapped her pussy and she juddered, crying out again. I pushed up strongly with my hips, driving deep inside her. She fell forward again, her claws digging into my pecs. She panted and ground like she was possessed, her blue eyes flaring with lust as we gazed hungrily at one another. \n\nShe smashed her mouth into mine, tongues tangling wildly as we fought to hold on. My hands found her ass and squeezed it, pulling the cheeks apart as I rammed my cock deep inside her. Her tight walls clenched around me, tighter and tighter. I could feel the boiling warmth in my balls beginning to spread, the unreal tingling shuddering through me... \n\nI pressed up savagely with my hips as I came, crushing her to me and strangling a shout of unreal pleasure. Alexa almost screamed, biting my shoulder as she came with me. We writhed and humped shamelessly as I filled her ever-tightening pussy with my ropes of molten cum. It felt like I was on fire, right up to my throat. My head was spinning and explosions of sparks in unreal colours nearly shattered my mind. \n\nI don't know how long we were cumming, nor how long we lay there afterward, spent and utterly exhausted. I could say with all honestly I had never cum like that in my entire life. I held her loosely, the two of us panting like we'd run a marathon. I could barely feel anything at the moment, just an exquisite undercurrent of pleasure that helped pin me to this universe in some manner. \n\nAlexa finally stirred, her face still resting against my neck and shoulder, where she seemed to have passed out. She sighed and slowly raised her head, which was beautifully framed in by her golden tresses. A weak smile was all she could manage. \n\n\"Hey...\" she said softly. \"You alive?\" \n\n\"I think so,\" was my reply. \"That was the most intense thing that's ever happened to me.\" \n\n\"Me too,\" she cooed, raising a hand to caress my cheek lovingly. \"That definitely was the crowning event of my sex life, no lie. That orgasm nearly broke my brain.\" \n\nShe pulled her face wearily to mine and we kissed, a final consummation of our lovemaking. She snuggled her cheek to me collarbone now and lay still, content to just exist with me. My cock was still buried inside her, pinning Alexa to me. \n\nShe sighed and kissed me pectoral and collarbone affectionately before pausing as she looked at my shoulder. \"Goodness,\" she said softly. \"I guess I'm a biter...\" \n\nI turned my head slightly to look down at where she was staring- indeed I had a set of teeth marks in the tender flesh of my shoulder, deep and starting to bruise. And the bottom and top rows of marks were not that close together, so she must have really tried to take a bite out of me when she came. \n\n\"I don't feel it yet,\" I said, waving it off. \"Don't worry about it, all I want to do is fuck you in half and I'm sure I'll leave some marks on you before we vacate this place.\" \n\n\"Mmmm, I'd love that,\" she purred, hugging me again. \"I might need a little bit before I'm ready to go again, because that took a lot out of me.\" \n\n\"Me too,\" I sighed. \"Pretty sure you're going to drown me when you pull my cock out of you.\" \n\n\"Oh, yes, there is that,\" she agreed, giggling. \"Don't worry, we'll let you roll me onto my back first so you can pull out without a flash-flood. God, you cum a lot.\" \n\n\"Always have,\" I replied, caressing her neck and shoulders with both hands, making her wiggle sensuously like a cat. \"I've zombie-masked a few girls in my day. And the girl I fucked in the ass? She couldn't walk right for almost four days.\" \n\nAlexa snickered. \"That probably had more to do with trying to fit that monster of yours inside her ass than getting greased. But I can't wait to feel your cock deep in my ass. I'm really wanting it.\" \n\nShe then snuggled to me and sighed. \"But not just yet...\" \n\nShe was silent for some time and then giggled. \"Can you believe we did this? God, you're my nephew. It doesn't gross me out or anything, I mean, I've had sex with two sisters before and cousins, but I never pictured it happening to me quite so intimately.\" ",
        "\"I know what you mean,\" I said, holding her and look up at the green canopy of leaves overhead, even as I continued to gently slide in and out of her. \"Before you, my only basis for comparison with incest would have been mom. Bam. Instant libidoectomy right there.\" \n\n\"Oh, pretty sure Karen's more attractive than you think and just hides it well,\" Alexa said softly. \"I doubt your dad would let her be the potato she tries to portray, she probably does it for professional reasons.\" \n\n\"Okay, granted, but still, ew.\" I said, banishing it form my mind. \"Not that I'm scared about it, but... why would happen if you, you know, got pregnant because of us?\" \n\n\"Oh, don't worry, I'd have it covered,\" she purred, looking up at me and smiling. \"And to be honest, I'm more concerned with how we hide this bite mark I left on your from your parents...\" \n\n\"Hm, yeah,\" I mused, looking down at it again. \"Guess I won't be going around the house bare-chest or in tank-tops for a bit.\" \n\nShe pressed her lips to the wound and kissed in gently, whispering in some language I didn't know. Her eyes were closed and she nuzzled her cheek to it before finally smiling at me, her eyes serene. \"How are you feeling, lover?\" \n\nI considered. \"To be honest, hungry. Fucking you gives me a big appetite.\" \n\nShe giggled and kissed my chest again. \"Me too, I just was hoping you'd say it first. Okay, roll over on top of me so you can pull out, since you're still semi-hard.\" \n\nI nodded and gently rolled, putting her beneath me. She shivered as my weight pressed down and my cock moved a little further inside her. She giggled and nodded. I knelt up between her legs and slowly withdrew from her pussy. The entire length of my manhood was glistening and sticky but nothing followed out immediately. \n\n\"You must've really cum deep inside,\" she mused as she felt nothing either. \"Bring him here for a moment?\" She held out her hand, beckoning for my cock. I placed it in her palm and she tilted her head forward and sucked our mingled cum off it diligently, determined to taste our mingled pleasure. \n\n\"Oh, you and I taste really good together,\" she purred, smiling as she stroked her hand along my shaft. \"It's sweet and tangy, just the right amount of musk.\" \n\n\"I didn't know you were such a cum connoisseur,\" I laughed, kneeling by her head. She bobbed her hand back and forth a few times, swirling her tongue around for extra effect. \"Glad you like it, though.\" \n\n\"Mmm, you straight boys don't know what you're missing,\" she said as she finally released me. \"Alright, let's see what happens here...\" \n\nShe carefully sat up. She opened her legs and used two fingers to spread her pussylips for me to see clearly. \"Anything?\" \n\nI shook my head, smirking. \"Nope.\" \n\n\"At this rate, I'll be sneezing it out,\" she muttered. \"Oh, and I really have to pee.\" \n\n\"That something I should be filming?\" I asked with a wry grin. \n\nShe looked at me with wide eyes but she was more amused than shocked. \"And why the hell would you think I wanted that filmed?\" \n\nI shrugged. \"Saw pics of you and other girls peeing outdoors, mugging for the camera. I'd hate to break a streak for you just because you moved to the colonies.\" \n\n\"Well, you got me there,\" she admitted, smiling. \"I'm not at all squeamish about it. I'm a little surprised you're such a perv, though.\" She looked around the grove. \"I don't want to pee here, what about behind the rock?\" \n\n\"Works for me,\" I said, nodding. \"That could be our designated area whenever we're back here.\" \n\nShe giggled and took her phone out of her purse and then slowly stood. \"I love that you're seeing this as our little place now. I can't see it any other way, to be honest.\" \n\nShe put her hand in mine and we walked over to the large rock on the edge of the grove, one side of which had an almost flat surface on an angle that must have been over two meters long. We went behind it and she set up her phone to take pictures and video while squatting down with her legs apart. She made faces while I snapped the pictures and then I knelt and began recording while she finally got ready to pee. She massaged her pussy and spread it, shivering as she began peeing but also moaned as her slit made a sploosh noise and copious amounts of cum began dribbling out of her. \n\nI moved up and down her lovely form, catching the look on her face and also how she massaged her breast while she peed. The other hand still kept her pussylips spread wide so the camera could see everything. I was rapt, I'd only ever watched a girl do this once before and it wasn't any where nearly as erotic as this. Everything Alexa did was erotic to me. \n\nEven after she eventually finished peeing she stayed squatting, letting the cum continue to cum out. I kept recording until she seemed to run dry. She looked at the camera and grinned. \"Well, I guess anything left is mine to keep...\" \n\nShe stood and sighed, obviously feeling relieved and refreshed. We walked back to our original spot, hand-in-hand and she pulled out the large blanket she'd brought for us to sit on while we ate. She sat on her side, legs together as she looked up at me coyly, twirling a lock of hair around her finger. \n\n\"So, shall we have our picnic dressed or naked?\" she asked softly. \n\n\"Oh, naked, I think,\" I said, smiling. \"I can't get enough of seeing you naked. I'll see you plenty in clothes all the rest of our time, together, but when it's just you and me, I think this is how we're happiest and want to be.\" \n\n\"You know me like a book, seemingly.\" Alexa replied, nodding. \"Allow me to put our little picnic together, but would you do something while I am?\" \n\n\"Of course.\" I said, nodding. \n\nShe pulled a small hardcover book out of the bag and handed it to me. I looked at the title. \n\n'Nana', by Emile Zola. \n\n\"I love the sound of you speaking French,\" she said softly, as if she was confessing to something and a slight blush to her cheeks. \"Could you read this while we eat and before we make love again?\" \n\nI nodded, unable to deny Alexa anything, seemingly. I opened the book to the first chapter and took a moment to skim ahead. I'd inherited my father's gift for compelling narration and felt a slight tingle of excitement at the prospect of reading for Alexa, perhaps making her like me even more. \n\n\"A neuf heures du soir, le corps de la maison au Th\u00e9\u00e2tres des Vari\u00e9t\u00e9s \u00e9tait encore tout, mais vide. A quelques individus, il est vrai, \u00e9taient assis attendant tranquillement dans le balcon et les stalles, mais ceux-ci ont \u00e9t\u00e9 perdus, pour ainsi dire, parmi les gammes de si\u00e8ges dont les rev\u00eatements de cardinal velours tiss\u00e9s dans la lumi\u00e8re tamis\u00e9e de l'\u00e9clat qui br\u00fble encore.\" \n\nAlexa listened quietly, almost reverently, as I read, spreading out our fare on the blanket. We had cheeses and hearty breads, plums and deli meats on little paper plates. She also opened the wine and poured as each a glass. She sat back on her side and listened to me reading while we nibbled at our food. \n\n\"Au m\u00eame moment, les nuages \u00e0 l'arri\u00e8re de la sc\u00e8ne ont \u00e9t\u00e9 fendu en dehors et V\u00e9nus sont apparus. Excessivement grand, tr\u00e8s fort, pour ses dix-huit ann\u00e9es, Nana, en tunique blanche de sa d\u00e9esse et avec ses cheveux blonds simplement coule d\u00e9tacha sur ses \u00e9paules, est descendu \u00e0 la rampe avec une certitude tranquille de mouvement et un rire de saluer le public et frapp\u00e9 jusqu'\u00e0 son grand chansonnette: 'Quand Venus erre au cr\u00e9puscule.'\"  \n\nHer eyes were shining as she listened, but she often closed them as well, as if being transported into the world I now described, that of a lowly courtesan in Paris who would become the greatest lady of that city's elite circles. I was so happy to be reading for her, eager though I was to make love again. I never wanted our afternoon to end, just being here with her, enthralling her and making love to her. \n\nI paused for a spell to eat some more and she fanned herself, smiling. \"We need to teach you Italian so that you can read The Decameron to me.\" she said, smiling. \"I'd die of ecstasy if you could do that.\" \n\n\"I loved reading that book,\" I replied, remembering it fondly. \"But yes, being able to read it in Italian would be pretty awesome.\" \n\n\"Got a thing for erotic literature?\" she purred, looking at me, her eyes glinting with desire. \"Like I could find you any hotter.\" \n\nMy cock was swelling and I couldn't stop it. We'd barely finished our picnic, as we stared at one another. I could see one of her hands slip subtly down between her legs, beginning to stroke her pussy. Her eyes traveled to my hardening shaft and she bit her lip. I could tell she was on the verge of sweeping all the food from the blanket in her eagerness to get at me, so I stood and pulled her to her feet. I walked her over to the large rock and she pressed me down on my back against the flat surface. She then bent down and took my cock in her mouth greedily, I moaned and tangled my fingers in her hair, loving the feel of her warm, wet mouth around me. She had my legs over her shoulders as she fucked me with her mouth, her hand pumping along my shaft as it followed her eager lips. \n\nI couldn't take much more and I pulled her off me and stood up. I then pushed her onto the stone on her hands and knees, facing away from me. She purred and squirmed lustily as I positioned her, looking back at me, eyes wild with desire. The angle of the flat surface was almost forty-five degrees and I pressed my hips to her to keep her in place. \n\n\"You don't need the blanket?\" I asked as I pressed my throbbing tool against her ass. \n\n\"No,\" she said huskily, shaking her head. \"Some knee and elbow scrapes to remember this by will be welcome. And don't be gentle, Alex. Let's fuck, hard...\" \n\nI could feel how wet her pussy already was and shoved my head inside her. She groaned and I let the angle she was kneeling at help her sink down onto me. We both sighed loudly as she took me in. This position felt so good now, better than I'd ever known it to before. I squeezed her hips and she ground against me, but at this angle, reaching her other parts was also easy. I wrapped her hair in my fist and and pulled, causing her neck to crane back. \n\n\"Gnnnnn, Alex!\" she moaned, clenching herself around me. \"Fucking impale me! Oh my God...\" \n\nMy hand not wrapped in her hair reached under and squeezed her breast, making her shudder. I fucked her, hard, because she was going to make me cum soon. There was no way I could avoid it unless I pulled her off the rock and away from this position and I doubt she'd let me do that. \n\nFortunately, she seemed to be not far from orgasm either, as she was panting and shuddering with the effort of holding on. We were both sweating already, lost in one another's bodies. We humped and writhed against each other, Alexa's pussy clenching me fiercely. I pumped and pressed deeper and she gasped and cried out as she smacked her ass, shivering. I slapped her cheeks again and she gritted her teeth as she ground against me desperately. \n\n\"Alex!\" she hissed. \"Oh, fuck...\" \n\nI jammed myself up against her as I pulled back on her hips, driving deep inside her. She pushed back on her hands and we both shook uncontrollably as we came. I pumped my sperm inside her and felt her pussy slathering me with her lust. I came so hard I thought I'd pass out. I grappled onto her, needing to feel as much of her against me as possible. \n\nShe collapsed forward onto the stone, taking me with her. I lay on top of her, breathing heavily and still deep inside her. She did not be bothered by my weight, which I was glad for, because moving seemed nearly impossible. \n\n\"Oh, God, Alex...\" she murmured finally. \"Incredible...\" \n\nI nodded wearily against her ear, kissing it and eliciting a purr of pleasure at the sign of affection. \"Turn me over and kiss me, lover...\" \n\nI slowly leaned back and bent her right leg gently and then used it to turn her over onto her back without my cock ever leaving her pussy. We both wanted it right where it was, deep inside her. I looked down at her beautiful body for a moment and she smiled back at me dreamily, her lustrous golden hair spread out like a corona around her face. \n\nI laid back down on her and she wrapped her arms around me while we kissed rapturously, lost in one another. She hummed into my mouth, fingers kneading the flesh of my back. My hips undulated gently against her, sliding my cock slowly back and forth inside her. We ended the kiss and looked into one another's eyes, just staring. \n\n\"I can't imagine ever getting tired of this,\" she said gently, caressing her fingers through my hair. \"And to be honest, I don't want to.\" \n\nI smiled as she cupped her breasts, presenting them to me. I kissed and licked them lovingly but then she shuddered and seized up, gasping and whimpering as I bit down on the swell of her tender skin, clenching it between my teeth for several seconds. When I released her, she gazed back at me, her eyes wide and a touch of tears to them. But then she looked down at the bite mark I'd left on her tender breast and smiled warmly. \n\n\"Oh, Alex...\" she purred, caressing me. \"Good call, my love. You got it just right.\" \n\nI nodded, relieved. \"You said not to treat you like a china doll and I took a chance. I have a feeling we'll be marking one another a lot.\" \n\nShe giggled and wiped at her eyes, brushing away the sting tears. \"I love it. Any time you want to mark me, I'm game for it.\" \n\nI nodded, still moving gently on top of her, both of us enjoying the feel of my cock sliding back and forth slowly inside her, even though we both had cum hard. We kissed again, caressing and nuzzling, not a care in the world. A few minutes later I raised myself up and pulled slowly out of her, allowing her to sit up. She shivered and giggled as my cum started to burble out of her pussy wetly, oozing against the rock below. She drew her knees up to her chest, causing another squishing noise that made us both laugh and she stared examined her legs and arms. \n\n\"Been a while since I've scraped my knees and had chalky elbows from fucking,\" she mused, seeming pleased. \"That's some good sex if that happens.\" \n\n\"So slivers in your back and ass from being fucked against a tree is good too?\" I quipped, making her laugh. \n\n\"Wouldn't be the first time,\" she replied, standing now and nestling against me. \"Mmmmm, we still have so much time today to be together, Alex. What should we do now?\" \n\nI smiled and then kissed the bite mark I'd left on her, making her shiver and giggle. \"Well, you cleared up a lot of space on your phone, we could take lots of pictures here in our little kingdom.\" \n\n\"Ooh, very true,\" she said, thinking of what I said, biting at her fingernail while she looked around the grove. \"Want to film me in the stream?\" \n\nThe water was cold, but Alexa did not hesitate, walking into it like it was the hot tub back home. She giggled and shivered as she stepped into the center of the stream. The water came halfway up her shins and I snapped pictures and film as she waded in. She smiled prettily as she knelt, her legs spread wide, showing me her pussy. She scooped water into her hands and poured it over her body, her nipples hardening instantly as it trickled down her lovely form. \n\nI got into the water with her, kneeling to take pictures from different angles and sides. I stood over her and filmed from above, from behind her so that I could see her incredible ass. She looked back at me and winked, pulling her cheeks apart and leaning forward to let me see her pussy. \n\n\"You enjoying yourself, big guy?\" she asked, looking at me seductively. \n\n\"Hell yes,\" I replied, clicking away happily. \"It's like having my own private Kate Upton.\" \n\n\"Mmmm, high praise indeed,\" she purred, sitting back on her ass with her hands behind her and her legs spread for me. \"She makes me so wet.\" \n\n\"Well, if we ever meet her then we'll fuck her together,\" I replied cheerfully. \n\n\"Love how you think,\" she sighed as she massaged her pussy for me while I leaned in for a close-up. \"Bring your cock here...\" \n\nI continued filming while she bobbed back and forth on my shaft, causing it to swell. I was too tired to be hard yet, but if felt good to have her mouth around me. She hummed happily, seeming like this was the most natural thing in the world. \n\n\"I'd better get out before my clit freezes and snaps off,\" she said, laughing. \"Summer or no, this water's fucking cold.\" \n\n\"Yeah, it is, isn't it?\" I agreed, reaching out my hand to help her stand. She wiggled out of the water and walked over to one of the trees and we took several more pictures while she posed, leaning against it. Then we went to the rock we'd fucked on earlier and she took up several more erotic poses for me, smiling naughtily. She laid on her back, legs wide and used her hands to spread her thick lips for me. She stroked her fingers up and down slowly as I filmed. \n\nI led her to a perfect spot on the grass and she rolled around in various poses while I filmed. She stretched her body sensuously, looking at me seductively. \n\n\"Do we have any wine left?\" she asked, smiling. I nodded and went over to get the bottle, bringing it back to her. She crawled toward me on all fours, eyes glinting. \"Now... pour it on me, lover...\" \n\nI kept filming as she knelt in front of me, looking up expectantly. I tipped the bottle and poured it slowly over her lower face and lips, over her chin and down her collarbone. I moved it over her breasts and she moaned lightly, cupping them together to catch the offering. Lastly, she knelt and laid back, her shoulder blades touching the grass. I poured it over her tight stomach and then her pussy. I couldn't resist and kept filming as I knelt beside her and began licking the wine off her breasts, then her stomach and finally sliding my tongue against her womanhood. \n\n\"So good...\" she sighed, running her fingers through her hair and squirming beneath my tongue. \"You make me feel so good...\" \n\nI massaged the inside of her pussy with my tongue as I teased the lip of the bottle over her taut belly. I loved the taste of her mixed with the Reisling she'd chosen. I still couldn't believe this goddess was making love to me, that she desired me and wanted to pleasure me. \n\n\"Let me show you something...\" she said, raising herself back to her knees and smiling wickedly. \"May I have the bottle?\" \n\nI gave it to her and she traced the opening over her body slowly, eventually bringing it to her wet slit. She gently eased the mouth between her lips while I filmed intently and then sank down on it, moaning as she did so. \n\n\"That's so hot...\" I murmured as I filmed. \"Don't you worry about it breaking, though?\" \n\nShe shook her head distractedly as she began squirming up and down on the bottleneck. \"No... I chose this wine because the bottle is made of thick glass. It can take it, trust me...\" \n\nI nodded and kept filming, rapt by the show she was putting on for me. She groaned and pulled the bottle out finally, sliding her tongue up and down the glistening neck. I could tell she was getting horny again and my body responded instinctively. She smiled wickedly as she saw my cock starting to swell. \n\n\"That's just want auntie needed...\" she said huskily as she crawled toward me again. She knelt and took my cock in her mouth, bobbing back and forth. I was hard almost instantly, still filming as she sucked hungrily. \n\nShe pulled herself up my body and hugged me, her face to mine, eyes smouldering with lust. \"Fuck me...\" she hissed. \"Push me up against that tree and fuck the hell out me...\" \n\nWithout waiting I carried her backward and almost slammed her against the tree. She snarled as she hit the trunk, gripping me tightly and wrapping her legs around me. I held her tight with one arm as I continued filming. My cockhead split her lips and with a shove I slid deep inside. ",
        "\"Fuck!\" she almost shouted, gripping me tight with her legs. We kissed feverishly, desperate to feel one another's passion. I pumped against her strongly, pointing the camera down between us, showing my cock sliding in and out of her pussy. God, she was so fucking tight... \n\n\"Fucking give it to me, Alex!\" she growled, her hands in my hair. \"Shred my cunt, lover...\" \n\nI pumped into her harder. If I went any deeper I'd bruise her brain stem. Her slippery tunnel clutched around me, a wet vise I could not get enough of. Our tongues wrestled as we fucked, the rhythm increasing steadily. I could barely concentrate on holding the camera and she thankfully took it from me, filming for us now. We were slick with sweat again, bodies squirming and grinding heatedly. \n\n\"I love it,\" she whispered, kissing my ear. \"I can't wait to cum with you. Oh, God, your cum in me...\" \n\nIt wasn't far off and we both knew it. We panted and moaned as we kissed and nibbled one another's lips. Bodies trembled and writhed as I pressed her back harder against the tree. She gasped and strained against me, clenching me tight, pushing me over the edge. \n\nWe came together, with Alexa pressing her face to my shoulder and crying out, shuddering in pleasure. I moaned loudly as I pressed into her, cock pulsing as I came deep inside. She didn't bite me again but kissed me eagerly, across my shoulder and collarbone and then finally my face, smothering me with a hungry affection. \n\nI held her up by her ass cheeks, stroking slowly in and out as we came down from the orgasm, melded in a state of exhausted bliss. Her thumb finally pressed the button to stop recording and she put her tired arms around me, kissing me deeply. We were both completely spent and knew it. She sighed into my mouth, her voice little more than a whisper. \n\n\"The grass...\" she murmured. \"Take us back to the grass if you can... I need to lie down...\" \n\nI nodded and gently pulled away from the tree I'd had her pinned against. I slowly pulled my cock out of her and we both shivered as it popped wetly from its tight confines. I scooped her into my arms and carried her like a bride back to the flat expanse of grass not far from the stream. I knelt and set her down gently, chuckling as I saw all the red marks on her back from the tree's rough bark. \n\n\"Yeah, I'm okay with that,\" she said, smiling. \"Take a picture so I can remember it.\" \n\nI used her phone to snap a few pictures and then she lay down, sprawling out and stretching deliciously. I just watched her, totally enchanted. I lay on my side next to her and caressed her soft skin. Even thought we were no longer making love, I wanted to feel her skin against mine in some capacity. I was well and truly addicted. \n\n\"Mmmmm, look at that mark you left on me,\" she purred, gently cupping her breast and looking at my teeth marks in the soft skin. \"That's a good one, it'll stay for a while. Just like the one I put on you. It's so erotic when a lover leaves their mark on you.\" \n\nShe turned on her side to face me, tracing her finger over her bite mark on my shoulder. \"I wish we could show off our marks. God, I'd love to be able to do that.\" \n\nI chuckled. \"And I'm trying to picture a world in which we wouldn't be assassinated for doing that.\" \n\n\"True,\" Alexa sighed. \"So not fair. Boy of my dreams and he's not even taken, he's my sister's son. Talk about lousy.\" \n\nShe took the camera and nestled herself around on top of me so that the bite mark on her breast was right next to the one on my shoulder. We both grinned for the camera as she took the picture, then pressed her bite mark directly to mine for another. \n\n\"It's like they've kissed now,\" she said cheerfully, setting the phone aside to give it a rest. \"I can't believe how many pictures we've taken today.\" \n\n\"It's been a blast, for sure.\" I agreed. \"We've definitely christened this place and made it our own.\" \n\n\"I feel like it was meant to be ours,\" she said softly, looking off at the crystalline waters of the stream. \"It's not even a man-made spot, you can tell it's completely natural.\" \n\n\"It feels like it was made for us, yes,\" I said, nodding. \"Just you and I, Alexa. This is our refuge from now on. Whenever we want to be alone, we can come here.\" \n\n\"It's perfect, my love...\" she cooed as she rolled onto me and kissed me lovingly. \n\n*** \n\n\"So did he say more than ten words while you were out?\" mom asked as she watched us bring in and unload everything from the car. We'd stopped and bought some more things for Alexa, just to make our outing more convincing. \n\n\"He did well,\" Alexa replied, smiling. \"You've got a charming young man here, Karen, when he chooses to be.\" \n\n\"Well that's good to hear,' dad chimed in from his place at the kitchen island. \"How was the picnic?\" \n\n\"High Park is a wonderful place for a picnic,\" Alexa said, mentioning a large park we had stopped by briefly on the way back. \"We stopped by the market and got supplies for a picnic and I bought a dress, along with some other small clothing items.\" \n\n\"Sounds like you had a busy day,\" mom agreed. \"We, on the other hand, did absolutely nothing, and it was glorious.\" \n\n\"Well, nothing we'd discuss with you two, that is,\" dad added, smirking at mom. She gave him a wry smile and a swat on the shoulder. \"Sounds like the kind of day we all needed.\" \n\n\"It was good,\" I declared, yawning. \"I'm gonna help unpack this stuff and then take a nap. Keeping up with Alexa can wear a guy out.\" \n\n\"Sounds good, sport,\" dad said, taking a sip from his beer. \"After you finish the lawn you started this morning. Can't leave it half-done.\" \n\nI looked at him in exasperation. \"Seriously?\" \n\n\"Hey, it's still light out,\" he reasoned. \"Go ahead and knock it out and then you can do whatever you like.\" \n\nI sighed and nodded, knowing better than to argue. Plainly my parents were happy that Alexa and I had gotten out of their hair today, but there was still the matter of my atoning for waking them up so damned early. I scooped up the shopping bags with Alexa's purchases in them and tromped upstairs, trying to look annoyed. I put them down on her floor and returned to the kitchen, where the three of them were talking cheerfully about what we'd seen. Alexa seemed to have an eidetic memory, because she described several places we had seen just in passing but could make it sound like we'd been there. \n\n\"Well, let me go and get this over with.\" I muttered, heading out to the back. I've no doubt that if she could have, Alexa would have watched, but keeping my parents engaged seemed more relevant, in fact. She didn't want to seem like she was focused on me for reasons we dared not explain. \n\nI returned the push mower to the garage and brought out the rider, which was considerably quieter, if you can believe that, and also would take far less time. Now that I didn't need my parents annoyed with me, like I had this morning, I just wanted this over and done with as quickly as possible. \n\nHalf an hour later, I was pushing the rider back into the large shed and the sun was westering. I sighed and figured there was not much point in taking a nap since night would soon be upon us. I went inside and found them still chatting away in the kitchen, discussing her accreditation. \n\n\"Did I miss anything?\" I asked in a tone that indicated my general lack of interest in an answer. \n\n\"Nothing to worry your pretty little head about,\" mom said, holding a glass of wine. \"You going to be interested in supper?\" \n\n\"I could be persuaded,\" I replied, not terribly hungry but not wanting to appear like anything was abnormal about my behaviour. \"Picnic food was good, but there's always room for more.\" \n\n\"Spoken like my son,\" mom sighed. \"Alright, why don't you three mosey on somewhere out of my kitchen while I whip something up?\" \n\nDad, Alexa and I sat in the living room and watched TV for about half an hour before mom summoned us back to the dining room, where she'd laid out dinner, which consisted of a stir-fry. We ate and discussed the coming week's plans- mom and dad had papers to grade and then would begin their summer theses, so they would be gone a lot. Since my grades had been excellent, dad and mom had agreed I did not need to get a job for the summer, but I was obligated to keep the house in shape and also stay in practice for swim team. \n\nThis left the matter of Alexa, who's status was still up in the air, concerning not only her schooling come the fall but also the finalization of her residency and citizenship. If Alexa was indeed worried about these things, she didn't express it, showing remarkable confidence and aplomb. \n\n\"Unless you need him for anything else,\" she mused as she finished her plate. \"I was hoping I could borrow Alex again to go downtown and get a local phone number. I could also use some more supplies and the sooner I get all these things done, the less reliant I will be on having him take me everywhere.\" \n\n\"I don't see why not,\" mom reasoned. \"It beats sitting here watching him play video games. Alex, will you please take your aunt to the mall tomorrow? Get an early start, we don't know what she might need.\" \n\nI nodded. \"Yeah, I can do that. I should start going back to the gym on campus once this is all done, I haven't worked out for a few days now.\" \n\n\"True,\" dad said. \"See if you can get Alexa a membership, she was mentioning something about using the university's gym while you were mowing. You'll have a workout buddy then.\" \n\n\"Okay.\" \n\n\"Try not to sound so enthusiastic about having a girl as a workout partner,\" mom chided, fixing me with a look. \"May do you some good.\" \n\nI helped clear the dishes and then went downstairs to shower. The bite mark was a little sore now, especially under the hot water, but nothing I couldn't handle. I looked at it in the mirror and had to admit that I was rather proud of it now. \n\nSitting on my bed, watching TV, my computer finally notified me of a Skype call. I opened the window and was rewarded with the sight of my beautiful aunt, smiling happily. I was thrilled when she blew me a kiss. \n\n\"Think we'll get any time together tonight?\" she asked, giving me a naughty wink. \n\nI nodded. \"They'll turn in around ten because they have to be up early. If you wait til eleven, they'll be passed out, both of them.\" \n\n\"Good,\" she said, looking very pleased. \"Because I need you. I don't want this day to be done yet.\" \n\n\"Me either, Alexa,\" I agreed, meaning it. I wanted to feel her again. \"Just let me know when you can sneak down and we'll wrap up our special day properly.\" \n\nShe nodded. \"I'll keep my screen up, but I'm going to relax until then. See you soon, lover...\" \n\nI nodded to her and went back to watching TV, every once in a while looking over at my computer screen to see my sensual goddess, laying on her bed, reading or sorting small items from her luggage. She was wearing sensible pajamas, in case my parents came by her room. But I knew that the moment they were gone, so were the pajamas and her glorious body would once again be mine. \n\nAnd it seemed so right. \n\n*** \n\nAlexa squirmed in my lap, facing away from me, my cock deep inside her pussy. She had her face turned to me and we were kissing needfully, tongues slithering and probing. My hands wandered over her warm, soft skin, caressing every bit of her, tracing gentle circles around the bite mark I'd left on her lovely breast. \n\n\"Alex...\" she murmured quietly, her arms reaching back around my neck as she churned on my cock, our bodies locked together in our lovemaking. I shuddered as she squeezed her muscles around my shaft, responding by tilting my hips to penetrate further into her and she gasped softly. We were on my bed with me sitting up propped against all my pillows and her nestled into my lap. She had come downstairs as soon as it was safe, melting into my arms and kissing me. Our bodies reacted to one another as if we were born lovers. \n\nShe hissed and bit my lower lip as I fingered her clit, making her grinding down in lusty circles on me. This was not a marathon fucking session, we wanted to cum together, to feel me deep inside her. The thrill of my parents being a mere two floors away was an unspoken taboo, but it was still there. \n\n\"Mmmmm, I needed this...\" she whispered against my lips, caressing my cheek. \n\n\"At least we've gone hands-free now.\" I replied, causing her to giggle. Indeed our phones were recording, from a TV table at the bottom of the bed, looking straight on at us, where every single moment of my penetration of her was wetly visible. One of the phones was even zoomed in, to make sure we missed nothing when we watched later. \n\nIt was much longer before we were writhing and squirming heatedly, moaning into one another's mouths and then shuddering as we came, my cock throbbing madly as I released my essence deep inside her. Her pussy clenched me hard, milking every last drop out of me until we just went still, hearts thumping and chests rising and falling. It was the perfect end to a day we had both desperately needed and looked forward to repeating as often as possible. \n\nIt was a day of great relief for both of us. \n\n***"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "attraction",
        "aunt",
        "nephew",
        "secret"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/alex-and-alexa-ch-04"
}