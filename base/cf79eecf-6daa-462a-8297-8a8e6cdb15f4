{
    "title": "The Morgan's Babysitter Ch. 01",
    "pages": [
        "The man of the house is hot!\n\nIt is impossible to concentrate. Mr. Morgan is sexy, flirty, and smells amazing. Just the scent of him as he climbs into the car next to me and says in that gravelly voice, \"So, Jenna, shall we blow this pop stand?' makes my pussy tingle. He had that affect when I was 16 and he still has it now, 2 years later. \n\nHE has tats and piercings -- the kind that make you wonder where else they might be. He shaves his head and wears cool clothes -- he looks young and is really cool but every now and then he gets this commanding tone and you know that he's a grown up. The tone is kind of hot too now that I think of it. \n\nMrs. Morgan is cool too. She doesn't look like she's a mom. She has a pierced nose and a helix (upper ear cartilage) with a captured bead in it. She wears a toe ring and a thumb ring too -- but I know she had the rings and the helix since high school -- way before it was cool. They are both like that. They are just... themselves.\n\nI think she knows I have it for her husband. Sometimes I wonder though because if she thinks I'm hot for him then why would she let him drive me home every time? I guess it's because they still kind of think of me as a kid. \n\nWhatever the reason, it works for me because it means every time I sit for them I get an hour in the car alone with him - half hour drive to their house and a half hour back to mine. It gives me time to inhale his scent and listen to his voice. \n\nOne night, my boyfriend, Steve, surprised me by dropping by their place while I was sitting. He tapped the glass of the sliding door off the deck and I practically jumped out of my skin. I slid the door open and slapped his shoulder as he laughed at me.\n\n\"DON'T do that! It's so dark out there I can't see who it is -- you scared the crap out of me!\" \n\nHe slid his arms around my waist, grinning and said, \"I'm sorry baby, I was trying to make sure I didn't wake up the kid!\" \n\nHe nuzzled my ear and laid soft kisses against the side of my neck. That is a very sensitive spot for me and soon I was smiling and leaning into him.\n\n\"Ok,\" I said sounding reluctant, but grinning. \"I forgive you.\"\n\nHe twirled me around and waltzed me across the room to the couch. \n\n\"So,\" he said suggestively, \"When the old folks going to be home?'\n\n\"Around 11, they said, and they can't find you here or I'll be fired and this is good money.\" \n\n\"They won't! I promise I won't get you in trouble. I know you like this gig.\"\n\nHe grinned and raised his eyebrows as he patted the spot next to him on the leather couch in front of the TV. I went to him and curled up with my legs over his and my back against the arm. \n\nWe kissed a while and soon Steve was pretty hard. He slid a hand down the front of my pants and cupped my pussy. I shivered and he grinned. He stroked the outer lips a couple of times before he slipped his middle finger over my mound and onto my clit. He rubbed it gently at first, sending sparks shooting across my skin and then, just as I was getting into it he moved his hand away and whispered in my ear, \"Take it in your mouth, baby. I need to feel your tongue on my cock.\" \n\nI loved when Steve said dirty things. He was the first guy I had ever heard it from and it made me go crazy -- and he knew it. \n\nI slid off the couch to kneel between his legs and he moaned, knowing what I intended. \n\n\"That's it! Kneel before me and worship my cock.\"\n\nI almost rolled my eyes at this but the need to feel his cock in my mouth prevented me from criticizing his commentary. \n\nI undid the zipper of his jeans and folded back the ends like I was peeling him. I stroked his hard cock through his underwear and pulled the waistband down to cup his balls. His cock jumped in answer and I slowly licked his velvet head and watched him shudder. \n\nI laid long, slow, very wet trails from his balls to the head of his cock, teasing him and occasionally flicking my tongue against the cleft under the head. Every time I did that Steve moaned so loudly I thought I might cum right there. I loved hearing his noises of enjoyment. Everything about giving head made me crazy horny and incredibly wet. \n\nBy the time Steve was ready to blow his load, I was moments from cumming myself. \n\nI slid his whole length down my throat, nearly gagging, and knew every time his head hit the back of my throat he was closer to blowing. \n\nIt took about three more swallows before he grabbed the arm of the couch and bucked his hips, driving his cock further down my throat. \n\nI felt his cum hit the back of my throat and swallowed every burst with a moan. \n\nI climbed onto the couch straddling his legs and gently rubbed against his wet cock suggestively as I kissed him but he pulled his head back. \"Geez, Jenn! You just swallowed cum, baby. I don't want to taste that.\"\n\nI looked at him for a long second and then he smiled, patted my hip and deposited me on the couch while he went to the bathroom. I waited, slightly impatiently, for him to return. \n\nAfter a minute or so, he did return - re-dressed and reaching for his shoes.\n\n\"What are you doing?\" \n\nHe looked up at me curiously, \"Putting on my shoes so I can get out of here.\"\n\n\"What?!\"\n\n\"Well, you said I had to be gone before 11 and it's a quarter to.\"\n\nI checked my watch and sighed. Well, huffed was more like it. It was true, but really, it would have been like this anyway. \"Sex\" with Steve was always just enough to get him off and get me all worked up. I had only gotten off twice with him and they had been purely accidental on his part. It was very frustrating. \n\nI kissed him goodnight and let him out the sliding door before I locked it up again. \n\nI sat on the couch and flipped channels restlessly while I waited for the Morgan's to get home. I started thinking about Mr. M and how he probably never let Mrs. M go frustrated. I wondered if it was just that Steve was young. \n\nMaybe you needed to be a man with experience before you knew what to do for a woman. \n\nWith my frustrated state, thoughts of what Mr. M might do to Mrs. M went to thoughts of my ride home with Mr. M and quickly became thoughts of what he might do to me. I couldn't take it. \n\nI checked my watch again. 11:00 on the dot. I couldn't take care of it myself at this late hour; they'd catch me as they came back. \n\nI waited and flipped channels. 11:10. they must be running late. \n\nAt this rate I was going to be so close that I'd probably cum sitting in the car with him. That thought was too much for me and I leaned back on the couch and slipped my hand into my pants and fingered my clit. The jolt was incredible. There may be something to this deprivation thing... provided it didn't last too long.\n\nI slipped my pants off and a charge went through me at having my pussy exposed in their den. I put the pants on the couch and sat down on them, spreading my legs wide. I thought about him as my fingers slipped over my dripping pussy. About what it would be like to feel his rough chin against the inside of my thigh or his pierced tongue against my clit. I thought about how wet I would get kneeling in front of him and taking his cock in my mouth. \n\nI was sure he'd have a perfect cock. And before he came he would lay me back and slide his perfect cock into my dripping pussy, over and over again until I came. With that thought I came in a hard, shuddering orgasm. \n\nI eventually stood and checked my pants for wet stains. There were none. My knees were rubbery but I managed to make it to the bathroom and clean up a little. \n\nI had just managed to gather my wits when they came home. \n\nThe next time I sat for the Morgan's, was so they could go to a friend's club opening. I had been ready when Mr. M pulled up so I just called out to my parents that I was leaving. I slid into the passenger seat and looked over at him. He was dressed in a mesh shirt, a leather vest and leather pants. My pussy clenched and in my mind I saw myself straddling his lap and raising my skirt so I could feel his leather clad thighs between my bare ones. I stammered a hello.\n\nHe grinned and looked down at himself and said, \"Yeah. Scary seeing the old folks dressed in leather, huh?' He laughed.\n\nI shook my head. \"No! You aren't old and you look good so why not?\"\n\nMy head was swimming he looked so good. \n\nI tried to keep up the chatter as we drove but it was so hard to concentrate. \n\nWhen we arrived we entered just as Mrs. M walked down the stairs. She was dressed in a leather vest that laced up the front and pushed her breasts high and round and a leather mini skirt that showed off her legs perfectly. Her heels were at least three inches and her hair and make-up were awesome. I wanted to look that good and that daring at her age - hell, I wanted to look it now. \n\nI looked at her with my mouth hanging open and Mr. M whistled as he stepped toward her.\n\n\"You look amazing.\" He took her hand and kissed the open palm.\n\n\"Why thanks you old flirt, you look pretty hot yourself.\" She grinned at him and I thought about how cool they were together. My parents never teased and flirted with each other. It was cool and I felt a little low for wanting her man.\n\n\"You really do look great, Mrs. M\" I assured her. \n\n\"Thanks Jenna, nice to have a nonbiased opinion.\" She winked at me and we smiled at each other. She really knew her man was hers. I was beginning to think she was as interesting as he was.\n\nThey left promising not to be too late but assuming it would be later than their usual 11 pm. I told them not to worry about it and wished them a great time as I locked the front door after them. \n\nI went to the den and sat there thinking about the Morgan's and how good they looked. As cool as they were I never expected them to wear leather but then I realized that once I saw it I wasn't really surprised either. Suddenly I really wanted a look at their closet. \n\nI checked on Oscar and saw that he was sleeping like the dead. Good. Once he was that sound asleep an earthquake couldn't wake him.\n\nI went quietly down the hall to their room and slipped inside. \n\nI had never done this before and I felt my adrenaline pumping like I was a burglar or something. I turned on the small bedside lamp and looked around. \n\nThey had huge four poster iron bed with tons of pillows, a wall covered entirely by shelves crowded with books, a wall unit that I assumed contained the TV, and a private bathroom. I was impressed, but it was the closet I had come to see. \n\nI walked over to it and opened the doors wide. The left side was clearly hers and the right side was clearly his as each side had work clothes etc. I put a hand into her closet and slid those forward on the hangers so I could get a better look at the far end of the closet. \n\nSure enough there hung a few more leather pieces. I ran my hands over them and was amazed by their soft suppleness. I wondered how they would feel against my skin. My hand settled on a mini dress with straps that looked like leather belts and zippered all the way up the front. I took it down and held it against myself and looked into the mirror on the inside of the door. It was very short and very deeply cut at the top and I loved it. \n\nI quickly took off my own t-shirt and mini skirt and tried the dress on. Mrs. M clearly had bigger breasts than I did but it still looked good. There were bands of elastic running down the seam on each side that allowed for a difference in shape -- which worked nicely since Mrs. M was nice and curvy while I was less so -- but the look wasn't right with my bra so I took it off and repositioned the straps before looking in the mirror. \n\nThere! I stood in front of the mirror admiring the dress and how it looked on me. I slid my hands down the front and the sides smoothing the leather against my skin. It was smooth and supple under my hands but it felt almost like suede against my bare skin on the inside. As I moved, my nipples rubbed against the soft grain of the leather and I felt the shocking cold of the zipper. It was a very interesting sensation and I was beginning to feel very horny standing in a dress that felt like someone's hands were moving over my skin. \n\nThe thought occurred to me that Mrs. M had worn this dress and that Mr. M had probably gotten hard looking at her in it. He had probably walked slowly up to her, pulled her roughly to him and kissed her hard as he slid the zipper down to expose her nipples first to his hot gaze and then to his tongue. \n\nWhat had he been wearing when this had happened? I wondered. I turned to his closet and examined the leather I found there. Chaps; real ones -- nothing but legs and a belt. I thought I might faint. More leather vests, a pair of leather pants, and a leather shirt. The last hanger held an organizer; it had five rows of pockets hanging down and three pockets across on each row. In the pockets I found silk g-strings with leather lacing up the front, a couple of leather cod pieces that looked like they were from the Batman costume. \n\nI could see him wearing the chaps, a cod piece, and the leather shirt as he stood there looking at Mrs. M in this dress, only, in my mind, it was me he was looking at standing before the mirror. The thought occurred to me that maybe I could find a way to make that happen.\n\nThe thought made me more than a little wet and I decided it was time to get my mind off it and my own clothes on.\n\nOnce I had changed into my clothes and put everything back the way I found it I checked on Oscar again and headed back to the den.\n\nI flicked channels trying to distract myself but I was finding it hard to get the image of the Morgan's out of my head -- especially the one where Mr. M sees me in that dress and does to me just what I imagined he had done to Mrs. M. \n\nSuddenly I was very aware of the feel of the leather against the backs of my bare thighs. I stood up and pulled my skirt under them and sat down again. \n\nNothing on TV could distract me so I went searching for a movie. \n\nI found one I thought would distract me and put it in the changer.\n\nI found the remote and pressed play. Nope, wrong movie. I pressed the button to change the disk and onto the screen jumped a picture of their den. I looked at it puzzled and watched for a moment. There was a man on the couch watching TV. Then I realized it was Mr. M. I looked closer to see what he was doing and gasped as I realized I was watching Mr. M. stroke his cock through his pants while watching something on TV - So much for being distracted. I couldn't look away.\n\nIt was a fairly tight shot so I could see when he took his cock from his pants and started stroking it. I was mesmerised by it. My pussy clenched and I wanted desperately to have something inside me -- preferably his cock. \n\nCuriosity made me look to what he was watching that made him so horny. It took me a second to recognize it but he was watching me masturbate the night Steve had come over. \n\n\"Oh CRAP!\" I said aloud. I was torn between embarrassment and arousal. Mr. M. was masturbating while watching me masturbate. That meant Mr. M. thought me masturbating was hot. It made him horny. He wanted me just like I wanted him! Suddenly I was weak kneed and sat down heavily on the edge of the couch. \n\nA plan formulated as I sat there watching him stroke his thick hard cock for me.\n\nI hunted for the recording device and realized it was a sitter cam on the fireplace mantel. From the disk, the angle was good but I looked for a way to zoom in just a little. There; on the bottom near the back. I zoomed in a little and hoped it would work. \n\nI slid my panties off seductively and dropped them theatrically to the floor so he couldn't miss it in the replay. Then, I positioned myself in the way I thought would give him the best view. I opened my shirt enough for my tits to spill partly out of my blouse, and pinched my nipples erect. Then, I slowly ran my fingertips up my thighs until they raised the front of my skirt to the top of my mound. \n\nI pressed play and watched him masturbate for me as I tugged on my nipples and teased my clit. I slid down to a slouch and felt the cheeks of my ass touch the leather as my skirt rode up. I wondered if that's what it would feel like to sit on his lap when he was wearing his chaps. I imagined that was all he was wearing as I slipped two fingers into my burning pussy and rubbed my thumb against my clit. \n\nI watched him slowly slide his hand over the head of his cock and tug on his balls. \n\nI slipped a third finger inside my pussy, watching that thick cock and wondering where he would cum and how it would feel. I pressed my g-spot and flicked my thumb across my clit as Mr. M wrapped his fingers around the base of his cock and spit on the shaft slowly spreading his spit to lubricate his cock. I imagined how hot it would be for me to spit on his cock like a slut and use my dripping spit to jerk him off. \n\nI watched Mr. M get up and walk over to the TV and sit in front of it, stroking his cock the whole time, then, he blew a crazy big load that landed right on the screen -- right on my exposed pussy. \n\nI came right then. I came so hard sitting on that couch feeling the leather under my ass that I saw stars. \n\nAs I was lying there recovering I watched Mr. M clean up his cock and hands and then wipe the TV screen. As he turned I saw his smile and then the disk went to black. Odd. Then I realized; he had meant for the cam to record him jerking off. He had also obviously edited it so that the disk was only that 15 minute excerpt. \n\nSuddenly I was no longer concerned that my plan was risky. I just knew I wanted it to work.\n\nShortly after 1 a.m. The Morgan's arrived home. They were in good spirits and laughing quietly as they came through the door. Nothing different except that now I knew something I hadn't before. \n\nWe chatted as I got my shoes on and grabbed my coat and Mr. M kissed his wife and promised to be home soon. \n\nThe drive to my house was tense for me but appeared to be the same as usual for Mr. M. He chatted as if nothing had changed and I almost began to believe that the disk had been left on accident. At least, I almost did until he turned to me and asked, \"Watch anything good tonight?\"\n\nI was startled into speechlessness for a moment so he smiled and said, \"Never much good on during the weekend so I always end up watching something on disk.\"\n\nI gathered myself and replied casually, \"Yeah. I found a good disk and watched it.\" I looked at him closely and added, \"It was a little short but very good.\"\n\nHe smiled and nodded. \"Good.\"\n\nI didn't know where to go with that so I left it. He pulled into our driveway and I said goodnight and got out. I got three steps away when he rolled down the passenger window and called me, \"Jenna.\" \n\nI turned back and leaned down slightly to see in the window, \"Yeah Mr. M?\" I said. \n\nHe smiled suggestively and said, \"Next weekend I'll try to leave you something good to watch.\" \n\nI smiled back as I thanked him but he had rolled up the window and was pulling out already.\n\nThe next weekend, he picked me up like old times. No mention of anything sexual at all. Not even a hint. \n\nI was disappointed because I had been looking forward to this all week. My legs were freshly waxed, my pussy freshly waxed, and a manicure and a pedicure had been done that day. I had been very careful with my hair and make-up too. I wore the mini skirt that made my legs look great and the blouse that had a hook and eye closure all the way up the front. It made my tits look amazing. I was sure I looked good. \n\nAt least he had noticed that. When I got in the car he smiled and told me I looked very nice, but then asked if my boyfriend was coming over. I said he wasn't that I had just felt like looking after myself today. He smirked as he told me a woman should never hesitate to look after herself. I nearly jumped. Was that a subtle reference? Maybe it wouldn't be a total loss after all.",
        "There was nothing suggestive after that and before I knew it I was alone in the den again. I went straight for the changer and turned it on. I backed toward the couch and sat down hard as the disk started. \n\nA shot of the den but closer than before, with the TV on. Mr M. walked into the shot and sat on the couch. He was wearing a dark coloured satin robe. He moved to the changer remote and clicked it toward the TV. Steve and I jumped onto the screen and I gasped in surprise. It hadn't occurred to me that there was a recording of that but of course there was! Mr. M. stroked his cock through the robe as he watched me swallow Steve's cock. He cupped his balls as my solo performance began and tugged gently on them. As he watched me slip a finger onto my clit he pushed back the robe and stroked his cock. I watched it stiffen and my pussy ached. \n\nNext was my performance from last weekend. He seemed to really like this one because he let his head drop back as he pulled long smooth strokes along his cock. Oh how I wanted that cock in me! I couldn't bear it any longer. Knowing he was probably recording this as well, I slid my skirt up to reveal to the camera that I had no panties on. I opened my shirt to expose my nipples and they hardened instantly. \n\nI spread my legs wide and stroked my pussy lips. I moaned aloud and then I heard the echo.\n\nStartled, I looked up to find Mr. M standing there in the flesh. I closed my legs and he smiled as he said, 'Oh but the view was so nice. Please open them again.\" \n\nShocked I didn't move. His smile faded and he repeated in that stern tone, \"Open them again, please\". \n\nI spread my legs again and felt the pussy juice spill against my lips. I had never been wetter in my life.\n\nHis voice was quiet but firm every time he spoke to me. \"Very good. Now, how do you like my editing work?\" he said with a motion of his head toward the TV. \n\n\"Very good,\" I almost whispered. He was walking toward me with a smile. \n\n\"I've waited a long time for this and I'm very happy to have caught you. I was hoping it would be like this.\"\n\nHe reached the couch and dropped to his knees. \n\n\"Where is Mrs. M.?\"\n\n\"Oh, she had other things to do this evening and I claimed to have things as well so here we are. I dropped her off and returned here in time to catch you pleasuring yourself while watching me do the same.\" \n\nI looked down and saw that he was very hard and his pant zipper was straining. I desperately wanted to be fucked. \n\n\"Will you let me look after this for you now?\" he said looking at my dripping pussy. Without waiting for a response he bent his head and began tongue bathing my pussy. I gasped at the exquisite jolts surging through me and he smiled and moaned against my thigh. \n\nHis tongue snaked in and around my clit and traced broad flat strokes along my pussy lips but never gave direct pleasure to the clit. After what seemed like hours I was bucking my hips to his mouth nearly crying with frustration. Then, he flicked my clit with his tongue. Sharp, short flicks with no real rhythm but I was losing my mind. I moaned recklessly and he stopped. \n\n\"You DO know good girls don't cum without permission, don't you?\"\n\n\"I know.\"\n\n\"Good girl.\" He smiled broadly and returned to alternately tracing and flicking my clit with his tongue. Suddenly my clit was pressed against the front of his teeth and the pleasure almost overwhelmed me. I grabbed his head digging my fingers into his skull and begged, \"Please! I need to cum! Please just let me cum!\" \n\nHe chuckled and pressed his tongue down hard on my clit as he flicked it and I came. A scream ripped from me that sounded like some animal in the dark woods. I clutched his head and bucked involuntarily against his tongue as I came over and over again. I felt my cum spurting out of me, soaking his face. I rocked and bucked against him until the last sensation left me spent and panting, too weak to lift a hand.\n\nI looked at him and could think of nothing to say, how do you thank someone for such a thing? So, I sat up and turned him to the couch and knelt before him to take his cock in my mouth. He moaned when he realized what I intended and I smiled. I knew he would be vocal. \n\nI swirled my tongue over his head and spit copiously on the shaft to make him very wet. He moaned and said, \"Yes! That's a good girl. A good dirty little slut.\" I almost came again. \n\nI tugged on his balls, as I had seen him do, as I slid his cock head to the back of my throat. I repeated this a few times and then pulled him completely out of my mouth and merely flicked the ridge and sucked deeply on only the head. Then, I quickly sucked it into my mouth and pressed it into the back of my throat again. He moaned in a growling whisper, \"Yes! That's it! Good girl.\"\n\nI was no longer thinking. I was simply engrossed in sucking his magnificent cock and listening to the dirty things he said to me. \n\nHe tangled his fingers in my hair at the back of my head but didn't push my head against him; he just followed the thrusting of my head. \n\nI was totally absorbed in my \"work\" so I was surprised when he grabbed me by the shoulders suddenly and stood up, taking me with him. \n\nHe spun me around so my back was to him and he thrust me forward onto the arm of the couch. \"There you dirty little tease,\" he growled. My nipples pressed against the leather, my cheek on the cushion he kicked my legs apart with his foot and stepped between them.\n\n\"Now, I will fuck this hot little cunt like it should be fucked\" he said as he grabbed my hips and plunged his cock deep into my pussy until I felt his balls against me and then he pulled back and thrust into me again. He picked up speed so I felt his cock flying in and out of my cunt. I could hear myself moaning but I couldn't stop myself. I had never felt like that before.\n\n\"Cum for me!\" I cried to him. \"Fill my cunt with your hot cum.\" I heard myself shout and then my pussy quivered and clenched and I had an orgasm that felt like I had been holding it back for years. I cried with the release of it. \n\nHe moaned and I felt his balls tighten and then the hot spurt of his cum spilled all over my pussy lips and ass. \n\nMr. M. collapsed on the end table near the couch and I slowly turned over so I was sprawled on the couch.\n\n\"Wow!\" was all I could say.\n\nHe grinned, \"I'm glad you liked it.\"\n\n\"Like hardly begins to describe it.\" I stated and blushed quickly ay my lack of experience. He laughed as he got up and started to walk away and then turned to me. \"I'll be right back. Don't move a muscle.\" I wasn't sure I could have if I had wanted to.\n\nHe returned with a warm wash cloth and a towel for me and cleaned me up wherever it seemed necessary. The warmth was wonderful on my freshly stretched and \"abused\" parts. I felt deliciously bruised and aching. Like I had used muscles that needed to be used but hadn't in a long while. It was wonderful! He was very gentle and I felt awkward but aroused by him cleaning me. I looked for something to say to hide my discomfort.\n\n\"So...\" I started and he looked up at me. \n\n\"So?\" \n\n\"So I guess this means I should find another babysitting job. I don't want to cause problems with you and Mrs. M.\"\n\nHe grinned, \"You can't cause problems with us. Besides, if you do that then how will we explore other things together?\"\n\nI grinned and my pussy clenched as I asked \"Like what?\" \n\nHe handed me the towel and grinned, \"I have a few ideas... are you free next Saturday?\" "
    ],
    "authorname": "Mysticalvixxxen",
    "tags": [
        "sitter",
        "watching masturbate",
        "masturbating",
        "leather",
        "video camera",
        "older man"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-morgans-babysitter-ch-01"
}