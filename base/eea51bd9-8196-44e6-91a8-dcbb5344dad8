{
    "title": "Back in Our Old Doorway",
    "pages": [
        "Judy and I are both in our late forties and so we're not exactly spring chickens, but Judy is as slim and gorgeous as the day we met and that was getting on for thirty years ago. She's tall too, only an inch shorter than me, with the sort of willowy figure that exudes sex appeal. During our years together we've built a solid and satisfying sex life about which neither of us can have any complaints, except perhaps that it's been a little unadventurous. But that kind of changed just recently.\n\nIt began when we'd been to a theatre one warm summer's evening a little while ago and we decided to take a short cut through an unlit back lane to the place where we had left our car. It isn't a very well known route, running along the back of some shops and through an area of small businesses, and we knew it only because we used to go there for a quiet kiss and cuddle as teenagers before we were married and before we went to our then separate homes. I have to say though that we never got up to anything really naughty, in fact we were still virgins when we married. But this particular evening as we were cutting through our old courting grounds a sense of mischief came over me and on pure impulse I grabbed her hand and pulled her into the same little doorway almost hidden in the dark that we'd used all those years before. It is the rear entrance to a multiple shoe shop and so is never used after closing time, and we spent hours cuddling there, oblivious to anyone who might walk past. For a moment she jerked back in alarm this time, but then she remembered, giggled and came into my arms.\n\n'Aren't we getting just a little bit old for this sort of thing?' She asked, a gleam in her eye and laughter in her voice.\n\n'I hope we're never too old.' I told her as our lips met.\n\n'Me too.' She whispered and kissed me again, her tongue finding its way into my mouth.\n\nAs I have said my wife is still as beautiful and as sexy as when we married and she can still turn me on at the drop of a hat, and that is just what was happening as we kissed and pressed ourselves together that evening. Suddenly she twisted her mouth away and burst out laughing.\n\n'I can tell you still fancy me then?' She had felt my erection through the light clothing we were wearing. \n\n'Well, what do you expect?' I whispered back, feeling just a little embarrassed as well as turned on.\n\n'Just as much as in the bedroom I think.' Her hand went down between us to fondle my cock through my slacks.\n\n'Hey behave, woman.' I was laughing now too, as well as enjoying her light-hearted touch, and I didn't pull away.\n\n'It's all right for you.' I complained with a grin. 'Men can't hide it when they're turned on, but there's no easy way to tell with women.'\n\n'That's all right then.' She giggled, stroking my cock through the fabric. 'Because I'm not turned on at all.'\n\n'I bet you are,' I countered, my hand going down to the front of her summer skirt and gently rubbing her pubes through her clothes.\n\n'You can do that all you like.' She told me blithely, her fingers pulling on the toggle of my zip. 'But you still won't find out.' As she spoke she gently worked her way into my slacks and began stroking my cock through the thin material of my boxers. \n\nTwo can play that game and my fingers gripped the material of her skirt and slowly pulled it up until I could reach beneath it. She mumbled a half-hearted complaint into my ear and then sighed softly as I wheedled my way into her panties and pushed through her soft nest of curly hair to find the top of her pussy.\n\n'Don't go any further.' She breathed into my ear. 'Someone might see us.'\n\n'Sshhh' I tried to placate her, wondering all the time just how far I dare take things. We'd never, ever done anything like this in public and, although this was a quiet, almost lonely, spot, it was still public. But I was getting almost too turned on to care. I pushed my fingers a bit further down, encouraging Judy to spread her legs just a little so that I could find her wetness.\n\n'You see.' I told her triumphantly. 'You are turned on; it just takes a little more investigating.' \n\n'You randy bastard.' She groaned in my ear. \n\n'You started it.' I reminded her, my hands moving to her waistband to try and ease her panties down over her hips.\n\n'Don't.' She complained but made no attempt to stop me. 'Someone might come.'\n\n'They won't.' I whispered, tugging at her underwear, suddenly unsure quite how far I wanted to take things. 'And even if they do it's too dark for them to see anything.'\n\nOf course, the moment I assured her that nobody would disturb us, someone promptly did. Another couple, teenagers this time, came wandering along with their arms around each other, giggling and kissing and heading for the very doorway that we were occupying. It was nice to know that our canoodling spot still served the new generation, but right then I wished it didn't. It was embarrassing to put it mildly for a couple our age to be caught like that by a couple of kids.\n\nOur hands were snatched out of each other's underwear and we rammed ourselves against each other so that the gaping fronts of our clothes wouldn't get seen. Fortunately the couple saw that their spot was taken as they got closer and they wandered away, still giggling, still kissing, but now looking for another quiet spot. As soon as they were out of sight and earshot we looked at each other and giggled ourselves, then straightened our clothing out and went back to the innocent kissing with which we had started, both of us wondering just how far we might have taken things if we hadn't been interrupted.\n\nOur close shave seemed to have had an unexpected affect on both us. We were both now highly aroused because of it and it wasn't long before my hand was cupping her breast and she was pressing her pubes against me and breathing heavily into my ear. I figured we would soon need to break off and go home where we could finish things in private, but then Judy gave me a suddenly serious look. \n\n'If we hadn't been disturbed, how far would you have gone?' She looked directly at me. 'Would you have gone all the way?'\n\nI knew exactly what she meant by 'all the way' and so I answered with a deflecting question that invited a negative reply. 'Would you have let me?'\n\nHer answer surprised me. 'Probably.'\n\nWe didn't say anymore for the moment, it was as if we'd shocked ourselves into silence with that exchange, but we did carry on kissing and touching until she pulled her face away. \n\n'If that couple had caught us actually doing it.' She began again abruptly. 'Would you have wanted to stop?'\n\n'No.' My answer was as blunt and as instinctively simple as that.\n\n'Even if they could tell what we were doing?'\n\n'Even if they could tell what we were doing.' I affirmed, nodding and smiling down at her. 'It's too dark for anyone to actually see anything, so it wouldn't matter if they knew.'\n\n'Wouldn't it bother you at all?'\n\n'Probably not.' I didn't know what else to say, and so I said nothing more for a few minutes, all the while listening to Judy's increasingly loud breathing as I insinuated my hand into her bra and played with her nipple. After all these years when we'd always tried to keep our private life private the thought of being a little more adventurous, a little more public, was definitely becoming more of a turn on for both of us. I was thinking about what we'd said and I wanted to press Judy a little further.\n\n'Do you want to be watched having sex?' I asked, pinching her nipple between two fingers.\n\n'No.' She gasped, wriggling against my grip. 'Not watched.'\n\nThat confused me; I thought that was what she meant. 'What then.'\n\n'I don't want to just put on a show.' She replied, looking at me. 'But I'd like to risk being caught.'\n\n'You'd like to be 'accidentally' caught?'\n\n'No, not actually caught.' She paused. 'Well maybe yes. I mean, it would be exciting wouldn't it, if someone did see us?'\n\n'How much would you like them to see?'\n\n'I don't mind.' She glanced over my shoulder at the empty lane and smiled.\n\nI stood there thinking about that. Taking it to the extreme, would I like a stranger to watch my wife getting fucked, to see her pussy with my cock in it? I was beginning to believe I would. 'Would you like keep going and see how far we dare go?'\n\n'Yes, please.' She gasped. 'I think I'd like you to fuck my brains out, right now.'\n\nThat was it for me, I was really turned on now. She very rarely says anything quite as explicit as that, but when she does it really gets to me. We would do it, I just knew we would, and I knew right then I would prefer us to get caught.\n\n'Do you want us to stop if someone comes?'\n\n'I don't think so.' She hesitated. 'I'm hoping that if we do get caught then someone seeing us will probably give me an extra buzz.'\n\nWe were simply standing there now staring seriously into each others eyes, me with one hand cupping her breast and the other around her back while she just had her arms loosely around me.\n\n'Wait.' She commanded abruptly, stepping back out of my embrace for the moment and looking quickly up and down the lane before hurriedly reaching under her skirt and pulling her panties down. 'Commando is so much sexier, don't you think?'\n\n'What are you doing that for?' I asked, shocked by her action.\n\n'Because if we do get that far, taking them off in the middle of things is so inelegant and not at all erotic.'\n\nAnother rapid look up and down and she reached under her top, working her bra straps down under the sleeves of her top and pushing it into her bag alongside her panties. 'There.' She giggled. 'Now I'm ready for action.'\n\nShe came back into my arms and we kissed again, each of us very aware of what was likely to happen.\n\n'I hope we know what we're doing.' She commented suddenly.\n\n'So do I.' I agreed. 'What are we going to say if a policeman catches us?'\n\n'Well we could ask him if he wants to join in.' She laughed.\n\n'No, seriously.' The comment made me frown, partly because of its frivolity and partly because I wondered if she meant it.\n\n'We're just going to have to say that we got carried away on such a warm summer's evening and hope he's laid back about it.'\n\n'I hope so too.' I pushed her right into the doorway and flat against the door behind her and kissed her long and hard, enjoying her response as she wriggled against me and let her tongue dance with mine.\n\n'Wow. I think things are working.' She said, pulling her head away for the moment and looking meaningfully downwards to where my returning erection was pressing against her. 'That's good.'\n\nWe kissed again, just as passionately, my hand making its way between us to cup her breast before working its way under her top. Just for a moment I sensed her eyes darting each way, instinctively checking in case someone was near, but then she remembered that was what we were there for and she shivered with excitement and kissed me even harder, pulling back just enough for me push the top up and out of the way. My hand found the soft flesh beneath, fondling her breast and running my thumb over her hardening nipple. That night was the first time in all our married life that I had touched her like that knowing and not caring that we might be seen. Even though nobody was actually watching at that moment it sent a surge of adrenalin through me.\n\n'Two can play at that game.' She murmured as her hand worked its way down to fondle my cock through my slacks, running a finger up and down each side of my shaft. \n\nNow it was my turn to check if anyone was approaching, not from fear, but from the thrill of it. And there was! Another couple was walking along the lane towards us, she with her arm through his, chatting quietly to each other as they approached. I squeezed Judy's breast, trying to get her to make a noise, but without success and the couple walked past without as much as a glance.\n\n'You bastard!' She hissed, a smile belying her words. 'I know what you were doing.'\n\n'I thought you wanted people to know?' I grinned back.\n\nWe kissed again and as we did so I felt Judy's fingers pulling down my zipper and then seeking a way in. I pulled back an inch or two to let her find her target and gasped softly into her mouth as she gently gripped my hardened cock and worked it out into the open. Almost of its own accord my hand left her breast and stroked all the way down her body until I could feel her pussy again through the thin material of her summer skirt. I thanked whichever gods were watching that she wasn't wearing her panties and then I began to walk her skirt up and up with my fingertips. Now it was her turn to moan softly and to kiss me even harder in anticipation as the hem of her skirt rode up her thighs.\n\nAs soon as her skirt was high enough I let my hand stray under it, finding her pubic mound and then, as she spread her feet just enough to let me in, her pussy. She couldn't hide the fact that she was turned on this time, she was absolutely soaking wet and slippery, and in any case she gasped into my ear as if to confirm it as I began to run my finger along her slit to find her clit. We played with each other like that for what seemed like ages, all the time looking along the lane for anyone else, partly in fear of being caught and partly in excited hope that we might be. Soon we were both gasping and groaning quietly from arousal, until Judy took her hand from my cock and wrapped both arms around my back.\n\nShe shook her head regretfully. 'I'd love to make you come, but then you wouldn't be any good for the main event. But you can make me come if you like.' She giggled brightly at the last part.\n\n'You harlot you!' I chastised her playfully. 'Always wanting the best end of the bargain, eh?'\n\n'You'd better believe it - oh!' She gasped loudly as I deliberately flicked her clit with my finger tip.\n\n'Just wait 'til we have visitors.' I told her, repeating the action with the same noisy result. 'Then they'll hear exactly what we're doing.'\n\n'Keep doing that.' She gasped, wriggling against my finger as I did it again. 'And they'll catch me in the middle of a full blown climax.'\n\nI carried on playing with her button, sometimes rubbing it gently, sometimes not so gently and sometimes flicking it hard with my fingertip. She had her arms around me, clinging to me, her face buried against my chest in an effort to mute her pleasure noises. And that is when I spotted the lone man coming along the lane in our direction.\n\n'Company coming.' I warned her, smiling to myself and rubbing her cit just that little bit harder. 'Is he going to catch you in the middle of that full blown climax?'\n\n'Probably.' She gasped, looking over my shoulder to watch the man coming nearer. 'But let him, I don't care.'\n\nI could feel her fingers tightening around my shoulders and her thighs trembling against my hand. She was getting closer and closer as our potential spectator approached, and she was making no attempt at all to hide what was happening. In fact she was doing quite the opposite, deliberately wriggling sideways slightly so that her raised skirt and my moving wrist became visible to anyone looking, and then attracting them to look by her unmuted gasps and moans.\n\n'He's watching.' She whispered, excitement clear in her voice as she gazed at him over my shoulder. I risked a quick glance behind and sure enough the man, looking rather older than us and clearly entranced by what he was seeing, was staring straight at us, his eyes fixed on Judy's raised skirt. Perhaps we were reviving memories of his own younger days. \n\n'Let him.' I told her, holding her tight with one hand while I reached a little further between her legs and thrust two fingers deep inside her. She jerked forward in surprise and moaned loudly deep in her throat\n\n'He can see, and I'm coming.' Her voice was breathless and urgent.\n\n'Good. Isn't that what you wanted?'\n\n'Yes.' \n\nThere were no words after that, she jerked and juddered against me, gasping harshly, her legs parting further so that my hand could press harder against her pussy. All the time she was staring over her shoulder, watching the man watching her until finally she gave one long groan and slumped against me, her climax over.\n\nSuddenly I heard the man's footsteps abruptly hurry quickly away and Judy burst into giggles.\n\n'What's funny?' I asked her, letting her skirt fall back into its normal position. \n\n'I've just had a strange man watch me have an orgasm in front of him.' Judy laughed breathlessly, still clinging to me for support. 'And now I think I've scared him away.'\n\n'Why?' I asked. 'What happened?'\n\n'I winked at him.' She dissolved into gales of laughter and I couldn't help but laugh with her. 'He took one look and ran off.'\n\n'Are you fit to be let out in public?' I laughed.\n\n'I think so.' She was still giggling. 'And I'm fit to have sex in public.' She added. 'Especially as he's already out and waiting.' She'd reached between us and found my cock again, stroking it gently to bring it back to full mast.\n\n'As long as you don't start winking at any other spectators, just in case they might want to join in.'\n\n'Oooh, I might.' She replied mischievously.\n\nThere was no one in view for the moment and so I swung her around so that I was the one wedged up against the door and she had her back to the lane. Then I pulled her skirt up again at the front and pushed my feet between her slightly opened legs so that she was sort of straddling me.\n\n'Now you can't wink at strangers.' I told her with a grin.\n\n'Spoilsport.'\n\n'Now, are you ready?' I asked. 'Do you really want to do it in public I mean?'\n\n'Oh yes please,' She looked at me very seriously. 'I think I've been waiting for this ever since we arrived, so I'm very ready.'\n\nShe was too. I ran the tip of my cock along her moist slit before I found her entrance and eased my cock into a very slippery hole.\n\nJudy moaned softly as I pushed into her and then she put her mouth next to my ear and whispered very quietly. 'We're doing it now, aren't we? We're actually having sex in public where anyone might see us.'\n\n'Yes.' I whispered back as I began to thrust into her, a little awkwardly because of the angle, but nice and deep anyway. 'And I hope somebody does.'\n\n'So do I.' She shuddered against me with excitement.\n\nWe took it easy, not rushing, making it last so as to have the best chance of someone seeing us. I thrust steadily into her, listening to her little gasps and groans of pleasure, feeling that wonderful sensation of having her moist and warm tunnel around my cock. I kept glancing along the lane, but there was nobody in sight. Typical, I thought, when you want to be disturbed you get left alone. \n\n'I hope someone comes soon.' Judy whispered after a few minutes. 'Or I will.'\n\nI didn't answer; I just began to thrust up into her harder and faster, intentionally trying to tip her over the edge. It didn't matter if she came, that would just add to our pleasure, so long as I didn't. She could orgasm more often than I could.\n\n'Oh my god.' She gasped as her orgasm approached. 'You're doing it on purpose aren't you?' \n\nI didn't speak; I just grinned wickedly at her and nodded.\n\nShe surrendered to my thrusts and her body, gasping harshly into my ear as she gripped me around the shoulders, her fingertips digging into my flesh. Soon she began to move, rapid little jerks of her pelvis revealing that her climax was looming ever closer. And then she was there, her body grinding into mine as she let out a long groan of pure pleasure before slumping against me, trembling and gasping for breath. I stopped moving and just stood there, leaning back on the door, holding my wife tight around the waist with my cock still resting inside her. I didn't want to come right then, knowing from experience that Judy would soon be ready again. ",
        "While we stood there my hands dropped from her waist onto her bottom and grasped hold of the folds of her skirt. She looked at me questioningly for a moment, but then her expression changed to one of mixed excitement and alarm as I began to pull her skirt up, revealing her bottom to the world. I didn't know if anyone behind her would be able to see my cock spearing up into her, though I kind of hoped so. I could feel the breeze cool against my overheated flesh, the feel sensation seeming to amplify our exposure, caressing our skin as we stood and waited for an audience. The night was moonlit now, but although it would be difficult to recognise faces, there would be no mistaking what we were doing. It was the ideal time for our novice exhibitionism.\n\n'Oh my god,' She whispered, breathlessly repeating herself, 'I can't cope with this. I've never felt so bloody turned on.'\n\n'I guess this is the adult version of our old teenage kiss and cuddle.' I chuckled. 'Do you like being grown up?'\n\n'God, do I?' She responded rhetorically. 'But I wish there was someone to see us.'\n\nWith impeccable timing it was just at that moment I heard two sets of footsteps turn into our lane and start walking along towards us. \n\n'There is.' I whispered to Judy, pushing my cock more firmly into her sodden pussy and bracing myself against the door ready to start again. \n\nIn a way I regretted stopping, for we had both gone off the boil a little and I knew we wouldn't come in time for the approaching couple to witness it. Not that it really mattered, but that would have been the icing on the cake and it had subconsciously become our target. Now I began thrusting into my wife once more, setting up a hard quick rhythm that had her clinging tightly to me and gasping each time my cock plunged into her. I could hear the footsteps getting nearer now and Judy was burying her face in my shoulder, as if wanting to hide from sight.\n\n'Have they seen us?' She asked me in a kind of gasping whisper.\n\nI looked over her shoulder, watching as the couple approached. They were walking along hand in hand, not speaking but just quietly enjoying the dusk. At first I assumed that holding hands they were young, but when they got closer I could see that they were about our own age, maybe even a little older. \n\n'Not yet.' I told her. 'But they soon will.' \n\nI started fucking her harder, making her gasp more loudly, figuring that the pale globes of her bottom were bound to attract attention as they got close. Suddenly I saw the woman nudge her partner with her elbow, pointing us out to him. For a moment they stopped dead and stared, but then, having got over the surprise of seeing a couple having sex in front of them, they pretended not to notice and resumed walking slowly along the lane, ostentatiously looking the other way as they passed.\n\n'They've seen us now.' I whispered. 'But they're pretending not to have.'\n\n'It doesn't matter,' Judy whispered excitedly between gasps, pushing herself harder onto thrusting cock each time. 'There's someone else coming now.'\n\nI'd been so busy watching the couple that I hadn't noticed a man walking alone some way behind them, but Judy, unable to look directly behind her at them, had spotted him as she looked sideways.\n\n'Fuck me harder.' She demanded loudly, deliberately trying to make sure that this time we'd be seen earlier. 'Make me come.'\n\nOur position wasn't easy, but I did it as hard as I could, quick fierce jabs of my cock upwards into her pussy, while holding her skirt up out of the way to make sure he would see as much as possible.\n\n'I won't be long.' She whispered into my ear, making her earlier loud request sound possible. \n\n'Neither will I.' I was feeling the first telltale signs myself and I was wondering just how soon we would both climax, and if we might just manage it together with someone present. That would be brilliant.\n\nBut the man was getting nearer quite quickly, and he definitely knew we were there because I could see him peering into the gathering gloom, trying to confirm what he thought he was seeing. Then, as he came closer he began to slow down and I realised that he had been walking quickly to get to us before we finished.\n\n'I think he's going to watch us.' I whispered to Judy, feeling her give a shiver of excitement against me.\n\n'Mmm, I hope so.' She pushed down onto my cock, taking as much as our standing position would allow. \n\nHe stopped about ten yards short of us, openly watching us from a diagonal angle and obviously not about to move on. This was just what I wanted and, I was sure, just what Judy had hoped for. My climax was building and I just hoped I wouldn't finish before my wife. She turned her head to the side and we both watched our audience as we climbed towards our peaks. Thinking about it afterwards I knew that it was the biggest thrill of my life, having someone see me making love to the most beautiful woman in the world - in my eyes anyway.\n\n'I'm going to come.' She announced suddenly and loudly, as much for our audience as for me.\n\nSo was I, although I didn't say so right then. We were, it seemed, going to climax together in front of a stranger. He would see and hear my wife in her throes of orgasm, shaking and juddering as she gasped loudly, and hear me groan just as loudly as I poured my cum into her womb. I couldn't think of a more fantastic end to the day.\n\n'I'm nearly there.' She told me urgently, this time saying it quietly for my attention alone,\n\n'Me too.' I replied, watching the smile spread across her face as she understood.\n\nWe didn't quite climax together, she beat me to it by a matter of seconds, jerking and jolting on my cock as I rammed myself into her and got closer and closer to it. She didn't make any attempt to be quiet about her orgasm either, gasping and moaning loudly, interspersing her gasps with loud sibilant 'yes's' as if to make sure our watcher understood. Soon she was done and she slumped into my arms, hardly able to hold herself upright while I came inside her. But then I was there too and I made my usual sounds of exquisite agony as I shot up into her, flooding her pussy with my cum in great long spurts, jerking up deep inside her with each one until slowly my thrusts slowed and my flood subsided, and then I too had to lean back against the door until I could recover. \n\nAll the time our man had stood silently and watched, making no move to interrupt us or to make any comment, but now I heard him say the words 'what a show' under his breath, not realising that in the quiet of the lane we would hear him. We both looked and smiled at him and I let Judy's skirt fall back into place, a curtain falling at the end of the performance. He smiled back and then he walked away without as much as a glance back.\n\nMy god.' Judy gasped out as he receded. 'We have to do this again. It was wonderful.'\n\n'Yes.' I nodded, still feeling breathless. 'We will, we definitely will.'"
    ],
    "authorname": "Otazel",
    "tags": [
        "exhibitionist",
        "exhibitionism",
        "voyeur",
        "voyeurism",
        "wife",
        "husband"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/back-in-our-old-doorway"
}