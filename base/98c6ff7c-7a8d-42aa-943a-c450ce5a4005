{
    "title": "Dry, No Lube Ch. 04b: Mutiny",
    "pages": [
        "There's a whole series of these; while each one can stand alone, I think that if you like Pixy and her people, it's probably best to read all the rest. You'd definitely benefit from reading Desperado, of which this is a direct continuation.\n\nEnjoy!\n\n* * *\n\nPixy waited impatiently, eyes welded to the chrono above the Main Dock with the shuttle sticking off the side of the Desperado like a stubby little dick. \"Five minutes,\" she muttered to the Boarding Officer. \"Five fucking minutes, I want that thing off the ship.\" It felt like a cancer, like a useless appendage. She turned irritably to her deputy. \"Fuck. Where's your buddy Mr Delmer? He and the captain are overdue to be aboard.\"\n\nWelson blinked at her through his old-school glasses. In the two months she'd been aboard he'd never impressed her even once, but then the man who gets assigned to be Deputy Executive Officer on a Fleet frigate in the farthest reaches of the whole goddamn galaxy is not exactly likely to be the brightest sublieutenant in Fleet. He'd just signed off from Delmer's voxbox. \"He says he's enroute, ma'am.\"\n\n\"With the captain?\"\n\n\"I'll check.\"\n\n\"Check? Jesus H Buddha, you fucking shitbird. His entire job now is to get Captain Ledecki from Point A to Point B. What the hell else do you think I wanted you to vox him about, the size of his turds?\" She held herself back from smacking the guy, aware that as long as Ledecki was aboard, corporal punishment was a no-no.\n\nAnd aware, too, that subcommanders weren't supposed to smack sublieutenants.\n\nHer own voxbox buzzed at her belt. She glared down at it. \"Yeah? Pfeiffer here.\"\n\n\"Hi!\" It was her steward, irrepressibly energetic, her voice pitched high enough to make everyone at the Main Dock grimace. Pixy turned the volume down. \"Remember, you've got that FD hearing at 0900. Petty Officer Hume?\"\n\nFuck. Pixy had forgotten completely. \"Yes, Juno, obviously I remember,\" she lied. \"I'll be there, you whiny little bitch. You don't need to keep nursemaiding me.\" She had not the faintest clue why the unfortunate Hume was about to get a Fleet Directive from the XO, but clearly he (or she? Or it?) had done something bad. Juno, who was also the ship's legal clerk, would tell her what the right punishment was. \"I'll be there. Did you post the Officers' Call in the wardroom at 0930 like I told you to?\"\n\n<br >The pause from the voxbox was enough to give everyone time to look away; everyone aboard knew it didn't do to piss off Juno. \"You don't need to keep nursemaiding me. Ma'am,\" came the icy reply. The older hands nodded knowingly at each other; Juno had been a steward for a long time. The last XO, Jedwin, had pissed her off frequently. And now Jedwin was dead, a suspiciously sudden and unanticipated \"fall\" out the airlock that looked like an accident. Or suicide, the Big Step some people took out into space when they were just sick of it all.\n\nPixy owed her job to that unfortunate encounter with the airlock. No, more than just her job: this slot was an incredible opportunity for her. Senior officers didn't usually transfer from Service to Combat, and when they did they lost a few years while they made the connections and gained the experience needed to become an XO, then a CO. Pixy had short-cutted that by taking a gig out in the middle of nowhere after seducing an Assignments Officer with several antique dildoes.\n\nPixy was a woman who did what she had to.\n\nBut she was also a woman who made the most of her opportunities. Already the Desperado, with its vapid crew under a captain who spent all her time prepping for Parcheesi tournaments, had been whipped into a ship she'd felt comfortable taking into an encounter with an enemy spyship. And blowing that ship to smithereens. Now the captain was off to her next tournament, taking along the First Officer Pixy loathed, and things were definitely looking up. Way, way up.\n\nIf only her fucking Deputy would start acting like a fucking Deputy.\n\n\"So, Mr Welson,\" she told him now, the captain safely on her way with Delmer; the launch clock read 3:44... \"your next task once the shuttle leaves is going to be to go apprehend Petty Officer Hume and bring him to my dayroom.\"\n\n\"Her.\"\n\n\"What?\"\n\n\"Her, ma'am.\" Goddamn, Welson hated her. She could see it in every glance her sent her way, though in fairness she'd never been anything but hateful and dismissive toward him. Where subordinates were concerned, Pixy believed in tough love: she loved to be tough. Some just couldn't handle it. \"Hume is female.\"\n\n<br >\"What the fuck ever. It changes nothing. Wrae Juno is setting up the FD sheets right now. Give me ten minutes to get back to my office and familiarize myself with the charges, then have Hume at my hatch. Comprehend?\"\n\n\"Aye aye, ma'am.\" He kept himself from giving a public eye-roll, which was something. \"What should I do about the midshipmen? Do they come to the Officers' Call?\"\n\n\"Oh! Them.\" Pixy had forgotten, the three youngsters frothing out of the hatch from the shuttle just moments ago on their Academy cruise. \"Sure. In fact, why don't you be their babysitter? Keep them out of trouble.\" She chuckled. \"That should be a full-time job, Mr Welson.\" Good. She'd been wondering what she could decently do with him, a job that wouldn't be too obviously a slight. He was Delmer's main crony.\n\n\"Aye aye, ma'am.\" It came out as a surly mutter and Pixy turned to wipe the sneer right off his face, but now Golightly was peering down the corridor toward the captain's suite. He cleared his throat.\n\n\"Attention for the captain!\" he called, and everyone snapped to. Lina Ledecki came regally up the hallway with Delmer behind her hauling her duffel case, the brand-new Ship's Commendation sparkling at his breast. Pixy's doing, with the spyship, and rumor had it she herself was about to get a Bronze Cross to go with her two silvers. Ledecki waved lazily.\n\n\"At ease, everyone.\" She nodded pleasantly to Golightly. She always nodded pleasantly to younger male officers. \"Thank you, Brantley.\" Pixy, as always, set her teeth on edge; she hated captains who used first names, and it bothered her that Golightly had a pussy name like Brantley to go with a surname that sounded like a strip club. \"I'll miss you.\"\n\n\"Ma'am.\" Golightly's blush clashed with his orange Engineering uniform.\n\n\"And you, Pixy.\" She beamed at the XO. \"Do let me know if anything goes awry, yes?\"\n\n\"Of course, ma'am.\" Pixy let herself unbend slightly, smiling as pleasantly as she could.\n\n\"Naturally, I won't be answering my voxbox, but Chonny will get me all your messages.\"\n\n\"Ma'am.\" Pixy glared hard into the smug bearded face of the looming Delmer, knowing it would be a cold day in hell before she let any messages go through his conniving ass. He and Welson were muttering off to the side now, whispery like a high school clique at the Promenade, and Pixy suppressed an urge to smack them while simultaneously smiling at the captain. It took some doing.\n\n\"Safe voyage, ma'am, and, uh, bring home the trophy!\" She had no idea what one competed for, in high-level Parcheesi.\n\n\"It's a cup, Pixy. The Celestial Cup.\" She sniffed, then nodded vaguely around at the whole Dock. \"Farewell, Desperado. I'll be back soon.\" And then she was through, her cape swishing through the docking ring with the crew member from the circuit ship standing off to the side, pretending not to look at his chrono. Pixy suddenly grew impatient.\n\n\"Hey. You. Mr Delmer.\" The whispery pair broke off, staring. \"You're traveling as the captain's aide. So why the fuck is she aboard the shuttle and you're still here?\"\n\n\"Uh huh.\" He, at least, did not choose to dispense with the public eye-roll, and Pixy congratulated herself for the eightieth time on her success in getting him the hell off this ship, since the captain wouldn't let her kick his teeth out. His disdain for her background in Service Command had been sharply apparent from the first day they'd met. \"I'll miss you too, Commander.\"\n\n\"Don't let the hatch hit you in the ass as you leave,\" she muttered. \"And, while you're gone, maybe you should reflect on whether your continued assignment aboard this vessel is really in everyone's best interests.\" She gave him a mock-encouraging smile as she pushed him not too subtly through the docking ring, then raised her voice. \"Good luck in the Celestial Cup, Captain Ledecki. Three cheers for the captain!\"\n\n<br >The little knot of people assembled at Main Dock dutifully roared their encouragement, but Pixy was already thinking about the rest of her day. Because there were changes coming to the Desperado. Soon.\n\n* * *\n\nShe watched Hume leave with no pleasure at all, the Captain's shuttle still a twinkle visible on the optical scanner outbound; Pixy did not believe in wasting time, especially on an FD hearing that was as cut-and-dried as this. Juno had done her homework thoroughly; she was always thorough about everything, the annoying little bitch, whether it involved legal research or making sure Pixy's uniforms were unwrinkled. Now, the little redhead sniffed. \"It's fine, ma'am,\" she shrugged. \"The penalty is set in stone for a 33A. You can't go less than three years in the clink.\"\n\n\"Yeah,\" Pixy grunted shortly, and she knew what was bothering her: this was the first time she'd had to do an FD on her own authority. Officers handled legal shit all the time, of course, but the Fleet Directives were the duty of captains, not first officers or even executive officers.\n\nUnless the captain was off the ship.\n\nMost of the time, the XO doubled as the ship's legal officer; whatever the XO said, the captain typically signed off on. It was the XO's responsibility to do an investigation, interview all the people involved, and work with the legal clerk to make sure everything was halal. But still, always, the commanding officer had the final say.\n\nToday, that commanding officer was Pixy.\n\nFD 33A was a simple regulation, regarding disobedience by enlisted sailors. It wasn't always prosecuted; most officers gave sailors two or three chances to decide to obey orders, or they just beat the shit out of them and called it good. But Captain Ledecki didn't like corporal punishment, so in just a few months aboard Pixy and Juno had found themselves dealing with three 33As already. Hume had gotten caught dealing drugs outside the semi-authorized market, had been told to stop, and had disobeyed. So she'd be getting three years imprisonment, starting the next time a circuit ship came by to get her; until then? Pixy had no idea what to do with her.\n\n\"Three years.\" Juno shook her head. \"Worse for her clone, though.\" Fleet personnel convicted on an FD lost their clone, meaning no spare parts if anything went wrong in the future. Getting a clone was the one real, tangible benefit of enlisting; indeed, it was the sole reason why a lot of people joined up, along with plenty of food and a guaranteed wardrobe of sentient clothes. Now Petty Officer Hume's clone, whiling away the time on some Clone Farm planet somewhere, would be pulled out of her group and summarily liquidated. \"Seems unfair.\"\n\n\"Yeah.\" Pixy had made runs to and from the Farms in her Service days, and she'd never enjoyed it. You never knew how to act around the clones. \"Well. They're clones. It's why they're there. Anyway, that's a question for philosophers. I'm just a fucking XO.\"<br ><br >\"No, you're not.\" Juno's eyes shone with excitement. \"You're the acting CO, now. Which makes me a captain's steward.\" She rubbed her hands together in glee. \"You'll be getting more money, effective today. Command Stipend. For things like entertaining and shit.\" She giggled. \"Your steward gets to control most of that, ma'am.\"\n\nPixy smiled despite herself. \"You just want to get one over on Payne.\" Payne was Captain Ledecki's steward, currently hiding himself in her suite during her absence. Pixy had noticed the two stewards loathed each other, but then Juno loathed most people.\n\n\"Fuck yeah, I do.\" Juno glanced at the paperwork, back in Legal Clerk mode, gnawing at her lower lip. \"I'll proof these and get them off to Fleet. What are you going to do with Hume before we can send her off to the brig?\"\n\nPixy flipped dismissively with her hand. The FDs gave her the right to do almost anything to Hume while she was waiting to go to jail. \"I'll deal with that shit later. Off to the wardroom now.\" She glanced to make sure the hatch was closed; there were things she said to Juno that she didn't like to be overheard. \"Got to go yell at the fucking officers. The vice on this ship needs to pick up, big-time.\"\n\n\"Yeah?\" Juno raised an eyebrow. \"More whores?\" Ledecki limited prostitution aboard.\n\n\"Maybe. And the drugs. Definitely, we need to get a handle on the ODs. And then there's other things.\" She licked her lips. \"Beatings are coming back, Juno. Tell a friend.\"\n\n\"Nice.\" Juno liked beatings.\n\n\"Anyway.\" She rose. \"I'm off. Butter-tea after my meeting, Juno.\"\n\n\"Aye aye, ma'am.\"\n\n* * *\n\nPixy had been in charge before; anyone who'd ever been a First Officer or XO had, at times, when the skipper was off for meetings or whenever. But this was her first time in sole command of a warship. With orders saying so, even if only temporarily, and she was nearly trembling with excitement as the departmental officers stood in the wardroom to give their reports to her.\n\nHer deputy, Welson, took notes as they went: McZylenko, Acting First Officer while Delmer was off with the captain, talking about weapons inventories: they were almost back up to full complement after taking out that Cathos Vremein spyship. Paulus, Second Officer, with Pixy's bedwarmer Jeyne giving him whispered support as the moron talked about comms. From Engineering came the cool competence of Cheeley Prowne, her voice clipped and confident after the tentative sluggishness of McZylenko and Paulus.\n\nCaptain Ledecki hated Prowne, and Pixy hadn't ever figured out why.\n\nCertainly she needed no help from her assistants, Golightly and Dwart, sitting there in their orange utilities. Then came Vecque, the Fourth Officer, on supply and logistics, followed by the Tygon Zuus and his assistant Praaskinen. Zuus was one of Delmer's disciples, so Pixy always watched him closely, but ever since she'd put him in charge as OOD during the spyship chase she thought he kind of liked her. Still, he was a Tygon; you never really knew. Pixy nodded, then shifted back to Vecque. \"Where's Mr Charlatul?\" Vecque's assistant was the ship's Junior Officer. \"I had some things to discuss with him.\"\n\n\"He's OOD right now, ma'am.\" Vecque was a moron, but courageous and loyal.\n\n\"Huh. Well, based on our last supply swap, I'm going to be asking you to let him take the lead on all future swaps.\" The table stirred. Many of the officers there had served in Supply before, as Pixy had for three years on the Pulver, and getting demoted from swaps was a big deal. \"He really did a good job sealing the deal last time. I think he's got potential.\"\n\nVecque frowned. \"'Sealing the deal,' ma'am?\"\n\nPixy stared at him. \"He was able,\" she explained in her clipped tone, \"to bargain for new supplies by exchanging sexual favors with the supply officer on the Maida Vale.\" That he'd done so while Pixy herself was exchanging sexual favors with the captain on the Maida Vale didn't need to be brought up. \"That's the unwritten job of all supply officers, Mr Vecque, a job that you should have been doing. But he was good enough that you won't have to.\" She glanced around. \"Anyone here interested in helping Mr Charlatul do even better? The reports were encouraging, but there's always room for improvement; does he have a bedwarmer?\"\n\n\"He's the JO, ma'am,\" Prowne put in mildly. \"JOs almost never have bedwarmers.\"\n\n<br >\"I'll step up, ma'am.\" That was Submajor Origami, the Marine officer, who'd been present in this very room when Pixy had quizzed Charlatul about his sexual abilities. She grinned now, feral. \"I think I can make a man out of him. I've seen the raw material.\"\n\n<br >\"Perfect. I mean, far be it from me to force an officer to warm anyone else's bed, but this is different.\" She sniffed. \"This is professional development. Thank you, Major.\"\n\n\"Ma'am.\"\n\nPixy stirred then, the topics now more sensitive. \"Surgeon. Anything to report? Sergeant Plovsek's legs? Private Ghyll?\"\n\nEveryone shifted uncomfortably. Ghyll was dead, nothing now but a lump of cerebrum in the surgeon's freezer, awaiting resurrection when his clone arrived... if that cerebrum could be transplanted. It was an awkward topic. Plovsek's legs were a lot easier, the platoon sergeant stumping around on prosthetics meanwhile. \"Order's in, ma'am. Combat priority.\" He licked his lips. \"I'm optimistic about Ghyll.\"\n\n\"I'm not.\" Origami sniffed. \"He was kind of a shitty Marine, frankly.\"\n\n\"Anyway.\" Pixy said it sharply, dripping with sarcasm. She'd been shocked, coming aboard, that the captain didn't hold officers' calls, so she'd started doing it herself; Ledecki had never seemed to mind her taking initiative. She nodded to her deputy. \"Next item, Mr. Welson?\" She was starting to lose track, to speed up the meeting; she had to pee.\n\n\"Only three more items,\" he soothed, his fingers skating across his tabslate. \"The midshipmen.\"\n\nPixy sighed, leaning back on her chair, and nodded at the three young people standing rigid against the forward wall. \"Those things?\" They looked equal parts scared shitless and eager. She glanced at them, mulling. \"Mr Welson here is going to be your babysitter,\" she announced, seeing Welson twitch forward out of the corner of her eye. \"You'll be his main duty,\" she went on, \"and he'll make sure you get a taste of each department. You're here for, what, three months?\"\n\n<br >\"Yes, ma'am,\" one of them said after a pause. He was short and thin, with slightly pointy ears.\n\n\"We're from the Academy,\" another one blurted, bigger and with a redder face.\n\n\"No shit,\" Pixy snapped. \"Is that what 'midshipman' means? Nobody ever told me. What's your name, ass-kisser?\"\n\nThe red-faced guy blinked. The third one was a woman, fresh and dewy-eyed in that Fleet Academy way. \"I'm Skyler van Shaughnessy, ma'am.\"\n\n\"You?\" Pixy nodded at the first kid. \"You, with the pointy ears?\"\n\n\"Nergui Smith-Aliyeva, ma'am.\"\n\n\"So many syllables.\" The other officers were grinning. \"I'll just call you Shitbird. How about you, with the vagina?\"\n\nThe girl stiffened to attention. \"Dahlia Wollz, ma'am. Third Quadrant Tae-Kwon-Do champion.\"\n\n\"I could give two shits.\" Pixy nodded mildly toward her deputy. \"Within an hour, you'll assign Kissass, Shitbird, and Vagina to different departments to improve their commissioning prospects. Next fucking item.\"\n\nHe swallowed. \"Corporal punishment, ma'am.\"\n\n\"Yeah. That's an easy one.\" Pixy raised her eyes, glaring fiercely around the table. \"Tell your people that although I support and appreciate Captain Ledecki's orders and directions, she's off the ship for three months minimum.\" She frowned. \"Probably more like six. So I owe it to her to hand her back a ship that functions as an awe-inspiring, death-dealing combat machine. I think that's best done the old-fashioned way: by kicking the shit out of slack sailors.\" She noted many smiles around the room, but paid more attention to the frowns. \"From this point forward, beatings are back on the menu at individual officers' discretion. Sublieutenant and higher, or any section chief.\"\n\n\"Nice.\" Prowne was smiling for the first time Pixy could recall.\n\n\"Junior Lieutenants, if your supervisors approve, you can kick ass too. But if it goes wrong, your superiors are responsible.\" She paused, meeting the frowners' eyes. \"To me.\"\n\nPraaskinen, a frowner, cleared his throat. \"So. Officers can get, uh, punished too?\"\n\n\"Only if I want them to, Mr Praaskinen,\" Pixy purred, letting the chuckles settle. \"Okay. Last one, Mr Welson.\"",
        "He frowned, pushing up on those silly old-fashioned glasses he insisted on wearing. \"Vice, ma'am.\"\n\n\"Oh! Yes.\" Pixy brightened, smiling. \"It's come to my attention\" from Juno \"that morale aboard this vessel could stand to improve. That two sources of stress are the woefully inefficient black market in unlawful narcotics, and the limited availability of whores in the official Fleet Prostitution Program.\" The three midshipmen stirred, Vagina's mouth dropping open, but this was why the Academies sent them out here: to learn about the Real Fleet. \"I've noticed some anomalies in the drug trade aboard, so I'll be meeting with Mr Vecque to make some changes.\" She caught the supply officer's eye. \"Right after this, Mr Vecque. Won't take long.\"\n\n\"Ma'am.\"\n\n\"Good. Now. Fleet Prostitution Program.\" She sighed. \"As you all know, the FPP offers sailors the opportunity to earn extra money by negotiating sexual services with other sailors.\" She smirked. \"And officers, on some ships. All of this is subject to the commanding officer's regulations.\n\n<br >\"Well, Captain Ledecki believes it's important to regulate FPP carefully. So she put Mr Delmer in charge and limited the number of active whores aboard to three, at any time, in a set rotation.\" Glances flitted up and down the table. The unavailability of regular sex had been a problem in many departments. \"Her goal there was to eliminate distractions within the departments, but that hasn't worked. So? I'm changing things up.\" Her eye found the new Second Assistant Engineer, Junior Lieutenant Dwart, short and compact and fiery. \"Ms Dwart.\"\n\n\"Ma'am.\" Fuck. Even her voice was sexy. She'd do.\n\nWelson cleared his throat under the eyes of every other officer in the room. 'Um, ma'am, are we sure that's wise? Captain Ledecki -- \"\n\n\" -- isn't here,\" Pixy snapped. \"And no, we are not sure it's wise. But I am. Now quit interrupting. Ms Dwart? I'm putting you in charge of the Program, until Mr Delmer returns. No limits. Recruiting, pricing, and availability? All yours.\" She caught a smile on the woman's face. \"I'll expect improvement within two weeks, or I'll want to know why. As Captain Ledecki says,\" she added, \"when you're in charge? Be in charge.\"\n\n\"No worries, Commander.\" The woman had a sweet body. \"Can officers volunteer?\"\n\n\"What, to be whores?\" Pixy frowned. \"Give me a few days to decide on that. I'm inclined to say no. Wanna fuck? I'm sure plenty of people would love for you to warm their beds.\" Bedwarming was the more socially acceptable alternative to FPP, the way officers were expected to get their needs met. But she'd been on ships where officers whored, and sometimes it could work out okay. \"I'll get back to you, Ms Dwart. Okay. That's all. Unless you're Mr Vecque, I'm done with y'all.\" She raged at herself, the Arian accent showing again, a sign that she was comfortable. Or stressed.\n\nLister Welson ushered the officers out under the severe glare of Wrae Juno, always present, and once the hatch closed the steward laid a bowl of butter-tea beside Pixy's elbow. \"Ah. Thanks, Juno.\" She glanced over at the supply officer. \"Can Juno get you anything? Coffee?\"\n\n\"No thanks.\" Vecque sat there, his burly arms crossed below his Silver Cross ribbon, a brave sailor promoted way past his abilities. Charlatul was the JO and he was already a better supply guy than Vecque was. But Pixy could read people. She knew this guy could be useful; she just had to figure out how.\n\nNot with the drugs, that was for sure. She glanced down at Dr Borowicz' report and launched in without preamble. \"The fuck is going on with the ODs? Fifteen this week, as of this morning.\"\n\nHe hung his head. \"I dunno, ma'am. I'm keeping track of my sales, and it's just not matching up. There shouldn't be that many ODs.\"\n\n\"Damn right, Mr Vecque. The whole point of illegal onboard drug sales is to not kill your customers.\" She tapped her foot beneath the desk. \"So. Here's the deal. For every new OD, you're going to pay me a fee. On an ascending scale.\" She'd been on the receiving end of a \"deal\" like this one early on in her Pulver tour, when she'd gotten a little too carried away with her sales. Densborg had brought her up short. \"You pay me five percent extra for every new OD. Compounding.\"\n\n\"Dammit, ma'am! I won't be able to make a profit.\"\n\n\"Yes, that's the idea.\" She'd turned aside to her 'slate, letting Vecque know the conversation was over. \"And you will make a profit. As long as you stop the overdoses.\"\n\nHe wasn't happy. But Pixy knew that you couldn't be a good XO unless almost everyone was pissed off at you. The problem came up again a couple days later as they maneuvered frantically in a battle problem with the Mata off one flank and Commander Skinner's Maharamia leading a mock attack against the massive cruiser Jetu, where Captain Lashka flew the Rose Nova Squadron pennant. Dziarmo, skipper of the Mata, routinely objected to steering anywhere near Desperado with Pixy in charge, but Dziarmo could go fuck himself as far as Pixy was concerned.\n\n\"Right turn to forty-seven by eight squared, at my mark,\" Pixy called crisply, measuring the angles on the scope, watching closely as Maharamia took off on a strange little angle. Skinner's sense of maneuvering was... imaginative. No doubt the reason she'd been banished out here. The OOD, Jeyne, echoed her command as Pixy swiveled her chair slowly around to face Dwart. \"Well, you'll just need to compensate Tirado for your whore's inability to perform, that's all.\"\n\n\"Aw shit, ma'am,\" Dwart whined. The woman knew how to keep her voice down, at least. \"I already spent the money, is the thing.\"\n\n\"Well,\" Pixy shrugged, \"pimpin' ain't easy. As acting CO, however, it's incumbent on me to ensure that all my sailors receive value for their money.\" She glanced at the scope. Pixy disliked correcting her officers on the bridge, during maneuvers, but she disliked wasting time even more. \"Five seconds, Mr Jeyne, then make your turn.\"\n\n\"Five seconds, ma'am. Aye.\"\n\n\"Do you know, Ms Dwart,\" she went on, the ship groaning around them as Jeyne's helmsman made the corrections, \"how pissed I'll be if Petty Officer Tirado comes to me with an official complaint?\"\n\n\"Yes, ma'am,\" Dwart sighed, miserable. She ran a hand through her luxuriant blue hair, the kind of hair just made to be grabbed and held while jamming her up the ass or something. Dwart was truly gorgeous.\n\n\"Look,\" Pixy reasoned, her eye back on the scope. Fucking Skinner. The attack was going to fail; she could see it already, and Jeyne was now glancing back worriedly to see what Pixy wanted. Stick with the Maharamia and get wasted, virtually, when Jetu chose to open fire? Or abandon Maharamia and take Mata in on a successful attack that would get Pixy chewed out for disobedience, Ship's Commendation or no? It was an impossible choice, but such was life among the bungling senior officers of Outer Parabolic Station Four. \"If Tirado wants a refund and you can't pay, he gets something else. A freebie? A threesome next time?\" Dwart still looked upset. \"What? What's he asking for instead of a refund?\"\n\nThe officer glanced around. \"He wants me, ma'am.\"\n\n\"Ah.\" Pixy nodded. \"And I didn't give you permission for officers to whore out.\"\n\n\"Exactly, ma'am.\"\n\n\"Right. Hold on.\" She spun the chair around, bored now. \"Just conform to Maharamia's movements, Mr Jeyne. I know; it'll get us killed. Just make sure all your maneuvers are logged, and hopefully Commander Skinner will learn something from the debriefing.\" She sighed. \"Look, this is a special case, Ms Dwart. Customer service is the key to successful pimping, so if he wants to fuck you? You may fuck him.\"\n\n\"Thank you, ma'am.\"\n\n\"No problem.\" The ship creaked some more, the gravity straining to compensate as Jeyne yelled at the helmsman. \"The bigger concern? Why your whore didn't make it to Tirado's appointment. What are you going to do about that?\"\n\n\"Yeah.\" Dwart licked her full lips. Pixy caught sight, behind her, of a weapons tech blatantly checking out the engineer's ass. \"It was Clory. Vespa Clory? Works in the commo shop? She was high as a kite and lost track of time.\"\n\n\"Fuck.\" Drugs again. Pixy nodded. Skinner was shouting over the speaker, getting all excited as Dziarmo publicly questioned her maneuvers. \"Do you need me to tell Mr Vecque not to sell to her? Until you give the okay?\"\n\n\"Well, that's the thing, ma'am.\" Dwart braced herself against a railing as the ship swung. Virtual torpedoes began to register hits on the shields; Mata was breaking off to avoid getting hit, which Pixy couldn't blame Dziarmo for. \"Caskey says he didn't sell to her this week.\"\n\n\"Caskey?\" Pixy glared. \"It's Mr Vecque, you stupid twat. We're not friends here. We don't use first names.\"\n\n\"Sorry, ma'am.\"\n\n\"Collision alarm!\" Jeyne sounded stressed, the exercise nearly over; the simulator would blow the ship up soon, she knew. She'd taken forty-seven hits, and still Maharamia was bearing doggedly in. Dumb bitch. \"Destruction imminent!\"\n\n\"Calm down, Mr Jeyne.\" Pixy yawned. \"The outcome was preordained as soon as Commander Skinner was assigned out here. Don't worry!\" she called to the entire bridge as her ship disintegrated around them in the simulation. \"If we ever have to fight for real, I'll shoot Maharmia myself and then we'll do our own thing.\" She saw nodding heads, the crew already confident in her, and with a satisfied glow she turned back to Dwart. \"This is a problem. If it happens again, boot Clory out of the program. You've got enough whores, right?\"\n\n\"Oh yes, ma'am. Recruiting hasn't been a problem.\" She'd had ten signups the first day, and was working her way through. She brightened. \"I even got a male!\"\n\n\"Wow.\" Men didn't often sign up for FPP. \"Which one?\"\n\n\"Korayle, over in Weapons.\" She made a face. \"He's sort of ugly, but Fleet rates are probably about what he's worth. He can fuck, at least.\"\n\n\"Good enough,\" Pixy muttered. She lolled her head around, squinting at the scope. \"We're dead, Mr Jeyne. Log it and then halt the ship.\"\n\n\"Halt the ship aye, ma'am.\"\n\n\"We can watch and see whether the Mata has any luck, solo against a cruiser,\" she snickered. She would not: as a warship captain, Commander Dziarmo's defining characteristic was timidity. Pixy sighed. \"Manage your whores, Lt Dwart,\" she muttered. \"And, at the least, see to it that I don't get any FPP complaints from Tirado.\" FPP complaints had to be reported to Fleet.\n\n\"Ma'am.\"\n\n\"Whatever it takes. If you have to give him that lush ass of yours? Grit your teeth and give it up.\" Pixy sniffed. \"Serves you right. The Prostitution Officer should always be prepared to lead by example.\"\n\nWelson, standing off to the side, cleared his throat. \"Ma'am, are you sure we should be talking about this now?\"\n\n\"We're not talking about this, Mr Deputy XO,\" Pixy grated back. \"Go fuck yourself.\" She returned her attention to Dwart. \"Well?\"\n\n<br >\"Of course, ma'am.\" Dwart paused, weighing her words. \"Um, other than me letting Tirado have my asshole for free, did you make any decision about whether the other officers can, y'know, join the program?\"\n\nA roar behind Pixy announced the simulated destruction of the Mata, wiped from existence by a virtual sortie of four Type 11 torpedoes on a tight-V spread launched almost negligently by the Jetu's auxiliary tubes, the pennant cruiser showing off: look at us. We don't even need to use our primary tubes to deal with your impudent ass! Those torpedo crews would be getting extra rum tonight. Pixy hesitated. \"You've been approached? Which officers want to be whores?\"\n\n\"Um. I think I'd rather not say, ma'am.\" Dwart was flushing scarlet, but Pixy approved; she wouldn't have ratted them out, either. \"It's only two, so far.\"\n\n\"Okay. But keep a lid on it. No more than two,\" she decided, and at once Dwart's eyes took on a crafty glint: she'd make money hand over fist, letting enlisted sailors fuck officers. \"But nobody can fuck within departments. Right? I don't need people swapping fluids with their bosses for money.\" Dwart was nodding. \"And keep a fucking eye on your Clory. I'm serious. Cut her off whenever you feel like it.\"\n\n\"Aye aye, ma'am.\"\n\n* * *\n\nPixy kicked the wardroom hatch, leaving a smear of blood behind; she'd just gotten done showing the crew that corporal punishment was now an important part of her plan for overall ship morale and discipline by kicking the shit out of a sailor named Bellows, whose bloody teeth now rattled along the deck near the interphaser housing. Bellows had been saucy toward his chief, so the next thing Pixy had done was nail the chief to the wall for not beating Bellows herself.\n\nBut now her boot was a bloody mess, and the wardroom sink was the nearest spot to get some water. She held up as soon as she stepped into the wardroom. \"Aw, hell no!\" she sighed. \"I told you not to fuck over the goddamn table!\" Four eyes stared back at her, wide and white in a pair of sweaty faces. Submajor Origami was bent severely over the wardroom table, her upper body squashed nude against its chip-veneer finish by the strong young arms of Charlatul, who looked like he was balls-deep in her. \"JO! Why are you doing this here?\"\n\n\"Uh.\" Origami's voice sounded quite uncharacteristically strained, even subdued. \"It'll just be a moment, ma'am. It's my fault.\"\n\n\"Looks pretty mutual to me.\" Pixy found her lips going dry as her moisture went... south. Both Origami and Charlatul were in great shape, their bodies flushed and flexible and sheened now with sex-sweat, the whole room stinking of pussy and cock.\n\n\"No, um, I'm paying him...\" Pixy saw the handprint on the woman's ass now, an ugly bruise already starting to form. Her eyelids fluttered as he did something inside her. \"Oh god.\"\n\nPixy's nipples twitched in her brafield. She'd seen Charlatul's dick before, his balls hanging low and full, and she took a breath at the idea of seeing him in action. She found his eyes at last. \"You joined up with Ms Dwart?\"\n\nHe shrugged easily, not at all the diffident and tentative Junior Officer he usually was. She'd heard that after the supply swap, his taciturn manner apparently dissolving into hard, competent confidence as soon as he got his dick into a woman. The guy seemed to be a natural. \"You blame me, ma'am?\" His lip curled into a smirk, Origami gasping again beneath him, and Pixy definitely felt dampness in her drawers now. \"And you did tell her to help me out, remember.\"\n\n\"Well.\" She sniffed, looking away. \"Don't let me interrupt, I guess.\" They started up again, totally ignoring her as she made her way past the coding station and the classified duffel slot, glancing over as she went. Bestial. That had been the word used by the awed supply shop, who'd seen him perform during their supply swap with the Maida Vale, when his unexpected sexual prowess had secured the Desperado five extra bales of pelding and half a ton of fresh vegetables, at the cost of nothing more than a load of his semen in their supply officer's ass. \"Looking good, JO,\" she put in, scraping her boot off and lifting it into the sink.\n\n\"Fuck!\" A sharp yip from Origami, and Pixy looked over to see Charlatul glaring down at her, jamming his cock hard into her with vicious, stabbing strokes. His shirt had given up and slunk off his hairy body, and now every muscle stood out in sharply corded relief as he leaned his forearm on the Marine officer's neck. \"So good,\" she quavered.\n\n\"Take that dick, you slut.\" Charlatul's voice was a low, silky hiss. He clearly wasn't paying attention to anything but the woman around his cock. \"Move, ma'am,\" he spat. \"Move your fucking hips.\"\n\n\"Ugh.\" She groaned, humping desperately back toward him, her face scarlet when she managed to get it up off the cheap table. He was driving hard, showing no signs of slowing down or letting up or blowing his load, his face fixed on where his dick was sliding into her. Pixy thumbed the blood off her boot, trying to ignore the two officers fucking on the table, and she'd just decided to politely ask them to take it to her quarters when the wardroom hatch slid open.\n\n\"Dude, I'm telling you, the fucking crowd went wild.\" It sounded like Prowne, speaking in her usual calm Engineer tones, discussing sports. \"The tekong was mouthing off to the referee and everything. All because the takraw ruptured.\" She trailed off just as Pixy swung around with her boot in her hand. \"Holy shit, Jami,\" she sighed at Origami, \"you're putting out for the goddamn JO?\"\n\n\"Wow.\" Zuus had come in with her, and now looked curiously over at the table. Tygons often mocked human sex because Tygons had prehensile dicks, and Zuus' eyes narrowed critically. \"Cool.\"\n\n\"I was just about to tell Mr Charlatul and Major Origami to take their little party someplace else.\" Prowne cocked her head, nodding thoughtfully, while Zuus strolled over to the refrigerator as though nothing unusual was happening. \"Like, someplace where their fellow officers don't eat,\" she went on pointedly.\n\nCharlatul raised his eyebrows, his fingers interlaced within Origami's thick hair. He was arching her cruelly backward now, her breasts quivering as she panted. \"Almost there,\" she gasped, her eyes closed. Zuus was peering into the fridge.\n\n\"Anyone know whose chipa these are?\" he asked, fingering some little cheese rolls.\n\n\"Hey. Zuus.\" Prowne's head was still cocked. \"You still owe me forty credits. Double or nothing he can make her cum in less than three minutes?\"\n\nZuus rolled his eyes and popped a chipa past his fangs. \"Tygons don't do sex bets,\" he pointed out smugly. \"We can cum on command. It's not that interesting to us.\"\n\n\"Huh.\" Prowne glanced doubtfully at Pixy. \"Ma'am? Ten credits? Over-under of two minutes? I'll take the under, if you like.\"\n\nPixy glared over at her. \"Shame, Ms Prowne. This isn't a gambling opportunity. This is professional development for Mr Charlatul.\" She let her boot put itself back on. \"Were you ever a JO?\"\n\n\"I'm an engineer, ma'am. We don't really have to worry about that kind of thing.\" The Junior Officer got hazed mercilessly, by tradition, until someone more junior arrived. Every shit job aboard was the JO's responsibility.\n\n\"Oh. Well.\" Pixy flexed her toes, trying to tune out Origami's gaspy moans. \"Mr Charlatul is lucky if fucking for supplies is all we make him do. Let's go, JO!\" she called, leaning back against the counter. \"Either wrap this up, or go find a rack somewhere. It's undignified to have officers rutting in the wardroom.\"<br >\n\n\"Fuck,\" Origami whimpered. He was tearing her apart.\n\n\"Aye aye, ma'am.\" Charlatul paused, set his feet more widely apart, took a tighter grip on the Marine's naked hips, and really started to pound her. \"Come on, you skank,\" he muttered.\n\n\"You should assfuck her, Mr Charlatul. You know what they say: dry,\" Prowne snickered, her eyes shining, \"no lube.\" Pixy watched her with interest. Prowne was always calm, always imperturbable, but now the engineer had a bright flush spreading up from her chest out of the orange utilities. On the other side of her, Zuus popped one more chipa in his mouth.\n\n\"See y'all later,\" he tossed over his shoulder. \"Ma'am,\" he added, with a cold nod toward Pixy.\n\n\"Ten credits, Ms Prowne,\" Pixy nodded unexpectedly. \"I'll take the under.\"\n\n\"Aye aye, ma'am.\" They shook solemnly, then sauntered over to get a better look. \"Having fun, Jami?\" Prowne sat comfortably in the chair opposite the Marine's blotchy, sex-swept face.\n\n\"Guhh,\" she blurted in reply, gasping, her thighs slapping loudly against Charlatul's. Pixy was alongside, watching his nude butt flex as he drove into the helpless Origami, and when she leaned over to look down between the Marine's asscheeks she saw it, thick and long and glimmering with her juices, sawing without mercy into her.",
        "\"Better make her cum, JO,\" Pixy murmured into Charlatul's straining ear, her hand resting lightly on his taut ass. She'd definitely started to tingle down in her own pussy, her mind wandering toward the duty roster: was Jeyne on shift? She felt like summoning him to her quarters and making him forget his wife. \"Trust me. I can make your job a whole lot worse if you don't.\"\n\n\"No fair, ma'am!\" Prowne protested, frowning. \"That's undue command influence! Fleet Directive 22!\"\n\n\"Blow it out your ass, Ms Prowne.\" Pixy rolled her eyes, unable to take her gaze off that plunging cock. She found herself envying Origami. \"You're going to bring the Legal Officer up on an FD? Right.\"\n\n\"Hang on, Jami,\" Prowne urged, gripping the major's chin and forcing her to focus. \"Hear me? Hold out. Don't you dare cum.\"\n\n\"Cum, bitch.\" All at once Pixy felt it, her competitive juices rising in time with her sexual ones, the sight and smell of Charlatul and his swinging hips mixing with the cunning look in Prowne's eyes to leave Pixy dry-mouthed and tingling. His butt flexed and surged in her fingers, her other hand swatting viciously down to add her own handprint to Origami's ravaged flesh. \"Cum!\"\n\n\"Hold on, Marine!\" Prowne barked, her fingers tight on Origami's face, and all the while Charlatul plowed hard and deep, the smell of sweat rising in the room with Origami's sharp cries until, at last, she sighed out a ragged, strained moan, her reddened body collapsing onto the tabletop. \"Goddamn it,\" Prowne muttered, checking the chrono. \"You win, ma'am.\"\n\n\"I know. I'm in charge.\" An almost sexual thrill was running through her, too, standing so close as this big-dicked man loomed over the conquered Marine, now sprawled weeping and orgasmic on the wardroom table. \"Of course I win. Good work, JO.\" He was still thrusting, a gloating smile spreading across his mouth. \"Clean my table when you finish; if there's even the slightest cumstain on my deck, I'll come kill you.\" She nodded at the engineer. \"Put those ten credits against Mr Zuus' debt, Ms Prowne. And make sure he fucking knows I told you to.\"\n\n\"Aye aye, ma'am.\" Prowne released the shuddery Origami's tear-streaked face, then wiped her hand on the tablecloth in disgust.\n\nPixy turned to go, still tingly, her eyes sweeping across the duty roster on the wall. \"Hey. Major!\" she called to the slack Marine as her hips still thudded against the edge of the table, \"you're on duty at the Main Hatch at 1600. Better shower before then.\" She nodded to the room. \"At ease, everyone.\" She left them, Charlatul still dutifully machine-fucking Origami. The hatch closed behind her scampering form, the duty roster telling her what she wanted to know: Jeyne was off-shift. \"Juno!\" she barked into her voxbox. \"Are you in my quarters?\"\n\n\"Yes, ma'am.\" She sounded as unperturbed as ever. \"Why? What's the deal?\"\n\n\"Summon Mr Jeyne. And then make yourself scarce.\" She hustled past a knot of sailors working on the plus-ups, hastily returning their salute. \"We won't be long.\"\n\n\"Shit,\" Juno laughed. \"Why not make it last? I can join you...\"\n\n\"Fuck off, Juno,\" she snarled. \"Follow orders. I'll be there in six minutes.\"\n\nJeyne was there in seven, his long face blinking away sleep as he kicked her hatch. \"You rang, ma'am? Need a nap?\"\n\n\"No,\" Pixy snarled, \"I need a cock.\" She caught Juno's knowing smile as the tiny redhead flitted out through the hatch, the thing grating closed behind her saucy little ass. \"Recalibrate your thinking, Lt Jeyne. I'm not in the mood to nap.\" No, she was in the mood to make someone cum, like Charlatul had, but she didn't tell him that. He'd find out tout fucking suite, and realization began to dawn as she knelt before him. \"Just shut up.\"\n\nHe drew a deep breath as he looked down at the top of her head, her fingers flickering his code into the staytab, and then she was rocking back on her heels with her lower lip between her teeth, her violet eyes staring up through long lashes. Her fingers climbed slowly up his smooth thighs while his trousers worked their way dutifully down toward his boots, his shirt climbing away to reveal a dick already starting to surge. \"Ma'am,\" he began, but he left off as Pixy leaned in, her eyes drooping shut, to smell his balls.\n\nHe'd been such a lucky choice to warm her bed, crashing in like a rock through a window, completely unexpected. He'd been everything she needed: calm, cool, tall, warm, patient. His voice was deep and his penis good. He let her please him without insisting on pinning her down and taking her; even now, five months after meeting her on the transport out to this godforsaken part of the galaxy, he'd only made her cum a handful of times. Her call, not his.\n\n<br >He'd learned her need: to make others happy. And she'd been happy not to have to wait around for weeks while he figured that out.\n\nAnd his smell. He was rich and sweaty and manly and warm, and he sighed above her with his hands light on her scalp as she buried her nose beside his balls. Jesus H Buddha, he was warm; the heat radiated off his flesh, reached out to her, wrapped up her mind, juiced her pussy. Pixy felt her breath gust out in a long, even sigh, Jeyne's body reacting already; even before she eased her eyes up to see his cock growing, she felt it in his hands on her head.\n\nShe kissed his inner thigh, twice, craning her neck so her lips could reach the bottom of his scrotum, the back of his balls. He tasted like he smelled, the sweat of a long shift on the OOD station. He hadn't showered, hadn't even used a drywipe. \"Fuck, Pixy,\" he murmured, but her eyes told him to shut his mouth, that this wasn't the time. That she needed closeness, not talk.\n\nNot that she could say anything on her end, regardless; his testicles filled her mouth by then, her tongue prodding between them. She felt the bumps on his skin, the little scraggles of hair his depilator had missed, then let her tongue cradle his sack as she brought her lips up to the root of his penis.\n\nHe twitched, his dick lurching out another half-inch, letting her please him. She used her lips now, little nibbles up along the velvet flesh where his cock was hardening. One of her hands trailed up, up alongside his groin, past his hip, up to his chest. She smiled around his shaft when his strong fingers laced into hers, and she had her closeness then, his body in her control now.\n\nShe'd bring herself off, and hard. Hell, she'd prune her fingers with the force of her orgasm. But not until she'd sucked the cum from these balls she'd left glistening with her spit, these balls she now cupped with greedy fingers while her tongue dragged up, up along his erection until she licked the sensitive skin at the underside of his head. He twitched some more, his hand moving hers across his chest, over his nipples. She could feel his heart now, shuddering his chest as her lips stretched around to take his smooth head between them.\n\nShe tasted salt at once, his precum sprouting already onto her tongue, and the flavor drove a low, throaty moan out of her. She tightened her lips just below the flare of his cockhead, her tongue lashing at his tip, the taste driving her higher and higher until her hand came off his balls and went diving down her own pants, a second sharper moan washing from her mouth over his dick when her fingers found her slit and clamped hard on her clit, the orgasm already nearly there before she'd even touched herself.\n\nBefore she'd even sucked him.\n\nI should watch my officers fuck more often, she thought vaguely, but then Jeyne's firm hand pulling her down his cock drove all thought from her head, her senses alive to him once more. She sure was sucking now, her lips and tongue firm against the trembling ridges of Jeyne's cock, bobbing her head up and down on her slender neck even as her fingers pinched her own clit harder, painfully so, banking her own fires until she could please her man.\n\nHe was starting to move, too, fucking her face, letting her know he liked it. Needed it, just as she did, and before long they'd established a rhythm, all grunts and groans and slick wet smells and his balls lightly striking her chin. He pushed her hand down along the ripples of his abdomen, to the root of his cock, and when her fingers curled around it he gasped. She gripped him tightly with hand and mouth, feeling him tense up, and she bobbed faster and faster, the grip of his fingers on her hair a distant sting in her scalp spurring her to do more for him, always more...\n\nJeyne came hard, the salt-thick cum boiling fast and hard into her mouth without any more warning than a low, guttural sigh deep inside him, the man riding out his orgasm in a series of powerful spastic spurts that Pixy found herself swallowing steadily, hungrily, needing them. Needing his joy, the sudden release of the tension in the muscles she pressed her face against, the body she'd given this to.\n\nAnd still she held herself back, knowing she'd cum like a tornado when she let herself.\n\nHe emptied the last of himself down her throat, his cock still hard even as he pulled it out all gleaming and stared down at her with that look of awed wonder men sometimes get. \"Fuck.\"\n\n\"Yes.\" She swallowed again, his semen warm in her belly, her body flashing a sharp red alarm to her sex-heated brain. \"Now get the fuck out,\" she managed thickly. Pixy knew she often frustrated her bedwarmers, that they sometimes wanted to make her cum just as badly as she wanted it for them, but tough shit. She usually didn't like it when people saw her let go, and she definitely didn't feel like it now. Her pussy screeched at her. \"Now. Juno will be right outside; tell her to give me five more minutes.\" His eyes narrowed above his heaving chest, and she patted his hip softly. \"Go, Felix.\"\n\nHe was nodding already, unwilling, but he'd started to understand whose bed he'd volunteered to warm. \"Okay.\" He left her with one last light feathery touch of his finger along her cheek. \"I'll come back tonight.\"\n\n\"Yes. But go now.\" He turned, his clothes doing themselves up over his hard cock, and the hatch had hardly closed before Pixy fell back hard to the carpeted deck, her own clothes flying off, her hand finding herself at once.\n\nWhile, out in the corridor, Juno watched Jeyne's retreating ass and nodded approvingly as Subcommander Pfeiffer screamed inside. She liked this XO. The last one, Jedwin, had been an asshole until, one day, he hadn't been an asshole anymore. He hadn't been anything anymore. That day he'd taken the Big Step out that airlock.\n\nJuno had to assume nobody had figured out she'd been there in the airlock when it happened. If they had, they'd have asked her about it by now.\n\n* * *\n\nThe circuit ship caught up with them just past Plaster Nebula, the robot buttfuckers steering it on their endless route to and from this part of the galaxy's supply dumps and administrative centers. \"Docked, ma'am.\" Zuus was OOD, joined at the hip to Midshipman Kissass. The kid watched everything with rapt, deep-set eyes.\n\n\"Good. There'll be official mail. Tell the Boarding Officer to have anything from the Admiral brought to my dayroom.\"\n\n\"Ma'am.\" Zuus gave Kissass a furious hand-signal and the big kid scampered off, watched thoughtfully by the two officers. \"I have no idea why they send them out here,\" Zuus mused. \"Useless mouths to feed.\"\n\n\"They have to get experience somewhere.\" Pixy glanced up from her tabslate, the paperwork endless: ship captains never had to worry all that much about administrative nonsense, largely because their XOs worried about it instead. \"A truly amazing Fifth Officer would be able to turn young Kissass there into a shit-hot genius, Mr Zuus.\"\n\n\"Maybe,\" he nodded sourly. \"Too bad my Executive Officer gives me such poor mentorship, ma'am.\"\n\n\"Yes, isn't it?\" Pixy sighed. \"That's why we're here on Outer Parabolic Station Four, I guess. We all fucking suck.\" She reached out and flicked her finger at Zuus' shiny new Service Cross, the award she'd gotten him for being OOD when she'd ordered them against that Cathos Vremein spyship. \"Your XO sucks so bad, she gets you medals and stuff.\"\n\nHe arched an eyebrow. \"Seems the captain should get credit for what the ship does, ma'am.\"\n\n\"Yes,\" Pixy snapped, tiring of this game, \"that's why I got her a Silver Cross. For sitting in her quarters. Get your midshipman back up here and get busy, Mr Zuus.\"\n\n\"Aye aye, ma'am,\" but then Kissass was slipping quietly back up to the bridge with an odd look on his face.\n\n\"Official mail is in your dayroom, ma'am,\" he squeaked.\n\n\"What the hell's gotten into you?\" she demanded. \"You look like someone just tried to fuck your mother with a rusty dildo. What's wrong?\"\n\n\"Nothing, ma'am.\" Van Shaughnessy hesitated. \"Well, that is, Mr Golightly seemed a little shaken, ma'am, and I guess it sorta rubbed off on me.\"\n\n\"Sorta rubbed off on you?\" she chuckled. \"What's this, a fucking knitting club? Man up, Kissass.\" She frowned. \"What was he worried about?\"\n\nThe midshipman looked away. \"The parts got here. For the surgeon.\"\n\n\"Parts?\" Pixy frowned until his meaning dawned on her. \"Oh! The clones Dr Borowicz was waiting on? For the Marines?\" She leapt to her feet. \"Fuck. You should have said so. Take charge, OOD.\"\n\n\"Ma'am.\" Zuus tucked the traditional telescope under his arm and then made his way behind the helm while Pixy hastened out. Clones. They made people skittish. She'd seen it a million times when she was Third Officer on the Jezail and then Second aboard the Pulver, both ships making constant runs between the Fighting Fleets and the Clone Farms during the Severus Offensive. Having clones aboard just made people queasy, and this clone would be even worse.\n\nThis clone was about to die.\n\nClones had been around for centuries, and people had long ago started using them as spare parts for themselves. With a clone, as long as you kept your cerebrum intact and in the hands of a capable neurophysician, you could live a few hundred years... if you could afford enough clones. They were very expensive, but Fleet grew one clone for everyone who enlisted.\n\nPixy had two; one had been created when she'd joined up, and that's whose cochleas she was wearing now. The other had been a reward, part of her Army Combat Cross, and as far as she knew it was still intact at some farm somewhere, growing quietly, ready to start supplying her with spares in about ten years or so. She didn't like to think of her original clone, now deaf. But though that clone didn't realize it, things could have been far worse: when Pixy had been nearly blown in half during that first fight, the 447 Engagement, any decent surgeon would have waited til after the battle, put Pixy in the freezer, and just transplanted her head onto her clone.\n\nThat's how bad her body had been damaged.\n\nBut there'd been no time, the bridge aslosh with blood and conductor fluid and people dying all around her while the Pulver chugged gamely to the attack in support of the Shaka. Someone had to be in charge, and Pixy was that someone. So she'd stopped her own screaming long enough to command the surgeon to stuff her guts back inside, stick her spine back together, and zip up her lower back.\n\nBut Pfeiffer! If I zip you up, I won't be able to replace the parts later! That had been old Doc January, a pediatrician by training, now conducting butcher-shop medicine on a flaming bridge, and Pixy had screeched at him until he'd complied.\n\nRough day, that.\n\nSo clones made people nervy. They reminded them of death and destruction and carnage, and nobody wanted any of that on peoples' minds. So Pixy was heading down to the sickbay to make sure Doc Borowicz got Ghyll's poor clone sorted out before anyone else could meet it.\n\n<br >She found the thing sitting nude on Borowicz' exam bench while the surgeon prepped in his pharmacy cupboard, already surrounded by a small knot of curious sailors peering in from the vestibule window. Most were familiar, but on a ship of almost 750 souls, she'd not yet had the chance to meet everyone. Her eyes swept the area for anyone with authority, finally settling on Midshipman Dahlia Wollz sitting tensely in the corner where the surgeon had put her. \"Hey. Vagina. You're working down here in sickbay this week?\"\n\nShe leapt to her feet. \"Yes ma'am!\"\n\n\"Okay. Well, part of being a leader is making people do things they won't like you for. I assume they've taught you that at the Academy?\"\n\nHer vacant eyes told Pixy she wasn't really listening. \"Yes ma'am.\" A corner of those eyes were staring fixedly at the clone, as curious as the sailors outside.\n\n\"Hey.\" She snapped her fingers in the girl's face. \"Pay attention. You need to make those sailors clear the fuck out of the vestibule. I'll give them a head start, but it'll be on your happy ass to keep them out. Comprehend?\"\n\nThe eyes were huge now. \"Uh. Yes, ma'am.\"\n\n\"If even one sailor gets in here to mess with this... this person,\" she murmured, jerking her head back at the clone, \"I'll make sure you get some very lengthy face time with the acting captain's foot. Right?\"\n\n\"Oh fuck. Yes, ma'am.\"\n\n\"Go.\" Pixy watched as the little bitch scurried off, not liking the kid's chances: a 20-year-old Academy cadet vs a crowd of off-duty sailors addled on drugs was not a recipe for victory, so Pixy gave them her promised head start. \"Hey. Sailors. Get the fuck away from the window and back to your duties. Now.\" The tone was low, almost conversational, her violet eyes flashing as Vagina gestured the crowd meekly out of the vestibule before she turned them on the clone.\n\nWho sat there glumly, showing neither fear nor curiosity. He looked precisely like what Pixy remembered vaguely as Ghyll, but then of course he did; he was the man's clone. And as soon as the surgeon could get to it, he'd be Ghyll, the dead Marine's brain sloshing around in its new, identical skull, while the clone's brain... Pixy cleared her throat. \"I'm Commander Pfeiffer,\" she said haltingly. \"Welcome to the frigate Desperado. We'll, uh, take good care of you.\" And they would, too, ripping his brain out and ejecting it into space. She wondered whether the clone knew that, but could think of no way to ask. \"Can I get you anything before you start? Water?\"\n\n\"No.\" The clone spoke slowly, his affect flat and relaxed. Pixy wondered whether he was drugged. \"Thank you.\"\n\n\"Yeah. Sure.\" She hid a shudder, thinking of her own Prime Clone wandering around her Farm in a soundless world, then looked away. \"Doctor Borowicz will be here shortly.\" She wondered whether the clone knew it had a name, but supposed not. \"Just, like, relax.\" The surgeon picked that moment to pop back into the room, thank Buddha, cradling a portable Stellar Marine-issue haemodrive, frost-covered from his stasis cupboard. Pixy looked at the thing with a queer sense of dissociation. \"That's, uh, Ghyll?\"\n\nBorowicz glanced at the clone, then studied her face carefully. \"Why don't you leave us, Commander?\" His voice had that fake sincerity doctors reserved for crazy people. \"I'd appreciate it if you'd send someone to fetch Sergeant Plovsek; I'll be taking care of her after this.\" He nodded toward a much bigger haemodrive in the corner, meaning there was now some Marine clone someplace getting used to having no legs. From out of some corner came the corpsman, Kimmage, who would not have looked out of place with two sisters around a cauldron. \"Go on, ma'am.\"\n\nPixy didn't say anything as she spun to go, but as she glanced back at the clone she noticed it was staring hard at the little haemodrive with Ghyll's brain inside.\n\n* * *\n\n\"Juno!\" Pixy's yell rattled through the XO's suite, her dayroom, the cramped little office, and her quarters out hullside. \"Get your fucking ass in here!\"",
        "\"Yeah?\" She bounced in, her bright smile advertising the amazing benefits of caffeine and bumtab. And a stim, too, most likely; the drug problems had not decreased since Pixy's meeting with Vecque, and she was on the teetering edge of reminding herself that maybe, just maybe, this was yet another aspect of Vecque's job he was just incapable of doing. Though, he was a full lieutenant and she had no other slot for him, the reassignment of an officer being something even she knew she couldn't do without being the actual captain. \"I was prepping your tea.\"\n\n\"Oh. Well, this shouldn't take long.\" Pixy frowned at the official notice, the draft of the order dated a month ago. \"Do you talk to your fellow legal clerks? Like, on the other ships in the squadron?\"\n\nJuno cocked her head. \"Why do you ask?\"\n\n\"Just answer the motherfucking question, steward,\" Pixy growled. If this order was legit, there was trouble coming. \"I'm not in the mood to play grab-ass with you today.\"<br ><br >Juno sat down unbidden at the conference table. \"Too bad, too,\" she sighed. \"Well. So me and the other stewards have a Phaceboox chat group, but you know well, ma'am, that what happens on Phaceboox stays on Phaceboox.\"<br ><br >\"I don't care about you and the other stewards bitching about me and the other XOs. I need to know about this.\" She waved the order, traditionally printed on actual parchment. \"This references a previous Squadron Directive that came out before I got here. I need to know what the fuck.\"\n\n\"Which one?\" Juno had her minislate out, tapping quickly at the screen.\n\n\"Diretive #47A?\" Juno was frowning as she paged through the chat. \"Something about bedwarmers. Something really, really bad.\" The redhead looked up sharply. \"Like, a truly bad idea on the Admiral's part.\"\n\n\"He's an Admiral, ma'am,\" Juno said slowly, the sarcasm thick. \"If you imply he's capable of an error, I may have to report you.\"\n\n\"Fuck off.\" Pixy watched as the girl shook her head at her minitab, then slid the order across the table to her. \"Take a look at this. Maybe it'll jog your memory.\" She watched carefully as Juno paled, the freckles standing out on her face like stars popping out on a dirtside evening. \"Yep.\"\n\n\"Ma'am?\" Juno looked sharply up. \"Does anyone know about this?\"\n\n\"If it's not in a group chat among the squadron's legal clerks?\" They looked hard at each other, the steward shaking her head.\n\n\"He's fucking insane.\"\n\n\"No,\" Pixy corrected quietly, \"he's an Admiral. If you imply he's capable of an error, I may have to report you.\"<br ><br >\"Fuck.\" She tossed her red bangs back. \"If he tries to enforce this shit?\" She brushed the order aside. \"I mean, people are going to go push him out an airlock.\" She held up her hands when she noticed Pixy looking at her strangely. \"What?\"\n\n\"Fleet Directive One, Steward Juno,\" Pixy muttered. \"The big one. Watch your mouth.\"\n\n\"Yeah, yeah. Mutiny.\" Juno read the order again, shaking her head. \"Well. What are you going to do, ma'am?\"\n\nPixy gave a dry laugh. \"Do? I'm Acting Captain of a Fleet warship.\" She nodded toward the voxbox by the door. \"Get me Mr Paulus and Mr Jeyne. Now. And then call Mr Welson and have him pass the word for the senior officers to meet in the wardroom again. No, actually,\" she corrected herself as Juno got to her feet. \"In here. It's more secluded.\" Paulus and Jeyne were the commo officers. She needed to block off the ship, beam silence, no comms with any other ship, and she knew every other captain in the squadron would be doing the same. She wondered how far word had already spread. \"Tonight.\"\n\n\"Ma'am.\"\n\n* * *\n\n\"So.\" The officers, Sublieutenant and higher, sat crammed around the little conference table after chow. There were utilities, workout clothes, even a set of pajamas on Paulus, and Pixy had laid out some coffee. \"We've got a problem, people.\"\n\n\"Is the captain coming back early?\" Major Origami, with an attempt at humor that died as soon as Pixy let her glare linger a moment longer than it needed to. \"Shit, ma'am. Just trying to lighten the mood.\"\n\nPixy nodded evenly at her, aware the major and the JO were now established bedwarmers, at least when Charlatul wasn't whoring himself out. She'd been Jedwin's old warmer too, according to Juno. \"Just wait, Major. You're not going to like this. So Admiral Shonzey's just issued an order that I think will cause a little grief among every ship in the archsquadron. This afternoon I directed our comms shut down, which is why Phaceboox has been blocked.\"\n\n\"Oh.\" Vecque leaned back, relieved. \"I figured the WiFi was just shitting the bed again.\"\n\nPixy waved the paper in the air. \"Yeah, well, this is the kind of thing that's going to be trouble. Seems the Admiral has banned bedwarmers, effective Monday. Fleet Prostitution Program is suspended as well.\" She was prepared for the gaping silence that followed. \"And it's not even April Fools' Day.\"\n\n\"Wait.\" Prowne was shaking her head. \"You're serious?\"\n\n\"Serious as a case of morliosis. I had the clerk follow up through her legal channels, and I got confirmation from the Admiral's chief of staff.\" She sighed. \"It's real.\" There was gossip, too, involving Shonzey's visiting wife and a run-in she'd apparently had with the Admiral's own, younger and more buxom warmer. But Pixy left that aside. \"I'm already applying for a waiver, as I'm sure every other ship is.\"\n\n\"Morale is going to crater,\" Zuus sighed.\n\n\"Worse,\" Origami muttered, red-faced, \"I won't get laid.\"\n\n\"Ma'am,\" the surgeon blurted, \"the benefits of customary sexual contact, particularly within a semi-regulated framework, have been established over a thousand years of space travel.\"\n\n\"No shit,\" Pixy snapped. \"I think the Admiral is well aware of that. I also think he doesn't care.\"\n\n\"Commander,\" Welson said quietly, \"you know you can't possibly enforce this order.\"\n\n\"Do I, Lieutenant Welson? Do I really know that?\" Pixy had no clue what she was going to do, but there was no need for her subordinates to know that. \"I'm not telling you people anything you don't already know,\" she went on tightly, \"when I remind you that officers aren't typically assigned out here in the middle of nowhere due to their overall excellence and leadership acumen. We're all here because we're fuckups in some way.\" She made slow contact with every eye at the table. \"We're transfers from the Service Command. Or we've crashed shuttles, knocked up Senators, or been caught drunk on duty.\" She allowed a small smile as she quoted some of their service records. \"Or we're actually Parcheesi players, playing at being sailors. The point is that I'm sure Fleet's finest commodores and admirals aren't out here, either.\"\n\n\"Shonzey,\" Paulus sighed, shaking his head, \"was got caught embezzling Fleet funds, I think.\" Paulus had been the one pinched while drunk on duty. Worse, he was incompetent as a Second Officer; Pixy could easily name half a dozen of her former Service colleagues who'd do a better job than him.\n\n\"So. Here's what. We absolutely will enforce this order, Mr Welson, subject to the result of my waiver request.\" Pixy hesitated. \"Which I assume will be denied. But we don't get to pick and choose which orders we follow, even the pointless ones. Right? I mean, I know how I would feel if Captain Ledecki or I outlined some sort of procedure for this vessel and had one of you fine, upstanding officers just decide not to follow it.\" She turned to her deputy. \"How would I feel, Mr Welson?\"\n\n\"You'd be most displeased.\"\n\n\"No, I'd feel like tracking you down in the Main Bay and kicking your fucking teeth out into the airlock. And that's just for starters.\" She paused. \"And that's even if had a pretty good sense that my order was maybe not the best in the galaxy. Like, I know I'm not perfect. But fuck, people. Fleet runs on discipline. So? As of Monday? No more bedwarmers. We'll try it and see if we can make it work.\" She shrugged. \"What's the worst that could happen?\"\n\n\"Mutiny. Officers murdered in their bunks, ship left drifting in the void,\" Prowne murmured. Welson looked away.\n\n\"Which Major Origami will make sure her people guard against,\" Pixy added smoothly. Marines were always thought of as mutiny-proof. \"See to it, Major.\"\n\n\"Oh. With great relish, ma'am,\" the Marine sighed.\n\n\"You don't lie convincingly, Major. Work on that.\" She hesitated, then looked back down at the table. \"I don't know a good way to put out the word. I don't want to get on the intertube and bark at people. Not until Monday. I think it would be less disruptive to have you people gather your departments and let them know this is coming. I'll call the whores in and Ms Dwart and I will handle them myself, but the rest of you? Spread the word. I don't want this to surprise anyone when I lay down the law on Monday.\" She glanced around the room. \"Comprehend?\" There was a murmur of disgruntled assent before Pixy shooed them all away. \"Then go. I've got Dwart coming in five minutes.\"\n\nOrigami allowed a momentary pause before she laid down the punchline. \"It usually only takes her two or three minutes, ma'am.\"\n\n\"Get the fuck out, Major.\"\n\n\"Aye aye, ma'am.\"\n\n* * *\n\nPixy looked unhappily at the FPP sailors, completely awed that they were in the XO's actual dayroom. Off to the side lurked Welson, his tabslate everpresent; he'd urged her to disregard this part of the Admiral's order too, but Pixy just couldn't. Dwart seemed to have chosen her sluts well so far, five women and two men, the Junior Lieutenant almost pathetically excited that she still had ten more applications to sift through. \"I know Ms Dwart's only been running this program for a little more than two and a half weeks,\" she began, \"and she and I are extremely pleased with what you people have done for morale aboard the Desperado. But I'm afraid I've got bad news.\"\n\nHer implant had the roster there as she scanned the line, names and faces. Delayoye and Peacock from Systems. Yayler Illiacco, proud possessor of the ship's most massive pair of tits. Furtive little Joie Taiwan from Commo, who really didn't seem like the type. And then Vespa Clory at the end of the line, the one with the drug problem. Her eye passed with interest over the man, Korayle, who seemed so ugly. Must have a massive dick, she reflected, scanning his package before nodding at Lt Charlatul. \"JO.\"\n\n\"Ma'am.\"\n\n\"So I can't sugarcoat this,\" she bustled on, taking a seat, \"but Admiral Shonzey has suspended the Fleet Prostitution Program, effective Monday. That gives you guys two more days to... um, to maximize your profits. All I can do for you is to authorize Ms Dwart to lift any and all restrictions on your activities, but that's up to her. As long as she's satisfied with your performance and your earning capabilities, then as far as I'm concerned y'all can fuck whoever you want, however you want, as many times as you want before Monday.\"\n\n\"Um.\" Illiacco raised a hand, the motion making her chest jiggle most pleasantly. To be fair, though, almost everything she did made her chest jiggle most pleasantly. \"Including our own officers, ma'am?\"\n\n\"Fine by me,\" Pixy nodded. Her implant told her Illiacco worked in Weapons. She looked frankly at Illiacco. \"I'm sure Mr Delmer is unhappy to be off the ship at the moment, but if you wish to entertain Mr McZylenko, feel free. Or, whatever, Chief Heller; she seems like she'd enjoy you. Yes, Taiwan?\" she went on, nodding at the Commo tech.\n\n\"Does that mean I can fuck Lt Jeyne?\" she demanded, and Pixy got a sudden urge to smack the saucy grin from her face. \"I mean, I know he's your bedwarmer and all, ma'am, but...\"\n\n\"Watch your mouth, sailor!\" Welson, in the corner was doing a good impression of an irate officer, but Pixy didn't need him; she held up a hand.\n\nPixy stared up at the insolent little bitch. \"If you're implying I've got any say in where Mr Jeyne slings his meat, Taiwan, you're way off base,\" she snapped evenly, \"though your concern is noted.\" She paused, then realized it didn't matter; the word about Shonzey's fucked-up order had undoubtedly already spread. \"Hell, might as well let you know: bedwarming is not authorized after Monday either.\"\n\n\"Fuck that!\" blurted Illiacco.\n\n\"Ah.\" Pixy nodded, her suspicions confirmed: these women had been planning on becoming more or less permanent additions to their officers' beds. It was why she'd been banning sex in-department. It never went well, sleeping with your direct subordinates; everyone in Fleet figured that out eventually. \"Yeah, I should have mentioned that. So I guess you won't be entertaining Mr McZylenko after all?\" A ripple of cynical laughter fluttered through the group. \"Any other questions?\"\n\n\"What, um, should we tell our customers? About the future?\" Colvey Delayoye seemed more clever than her companions; Pixy's implant told her the woman was taking correspondence courses, and had accessed applications for Officers' School. She nodded in approval.\n\n\"You'll be the first to hear if my waiver gets approved,\" she sighed, \"but for now? Tonight? Tell them not to worry about it. It's out of their control.\" She rolled her eyes. \"Besides, Delayoye, if your johns are thinking about anything but your pussy, you're doing it wrong.\"\n\n\"Or your ass,\" Taiwan added helpfully.\n\n\"Whatever. Point being, you people have made remarkable progress in a short time, and I'm personally sorry to have to enforce this order. What I'm not doing,\" she finished loudly, \"is announcing any intention to crack down on black-market prostitution in the future. If you know what I'm saying.\"\n\n\"Wink, wink.\" Delayoye was nodding. \"Nudge nudge.\"\n\n\"Though, of course, that would be an open market with no Fleet immunity from prosecution for things like pregnancy or disease, no protections from rival pimps, no monopoly on pimping for Ms Dwart, and no cap on any official rates those other hypothetical pimps might charge. And if I do catch you, you're dead meat. You get the idea.\" Pixy scanned them. \"Y'all are dismissed. Have a productive 48 hours.\" She watched as they shuffled out, then thought better of it. \"Oh. Delayoye? Taiwan? Stay back a moment.\"\n\n\"Ma'am?\" Delayoye glanced coolly back. Pixy actually had nothing to say to her, but she certainly had something to say to Taiwan. Delayoye was her camouflage.\n\n\"Nothing much. It's just that your record indicates you're doing well in your courses.\" Pixy was making this up; she had no idea how the woman was doing. \"If you want to pursue a commission, I'd be happy to write a recommendation for your application.\"\n\nThe woman's eyes narrowed. She did not live in a world where officers wanted to help anyone do anything, but then she worked for Lt Zuus. Made sense. Taiwan shifted her weight off to the side. \"Um. Thanks?\"\n\n\"Just something to think about.\" Pixy put on her most maternal smile. \"Don't let me keep you.\" She watched with Taiwan as the hatch closed, then Pixy turned the same smile on the other woman. \"Are you good at fucking, Taiwan?\"\n\n\"What?\" She was attractive enough, Pixy supposed, but she didn't have that sex-oozing confidence that most whores had. No, Taiwan tended to be a lot less subtle. Now, she drew herself up with her head cocked. \"I don't get a lot of complaints, ma'am.\"\n\n\"I'm glad to hear it.\" Pixy yawned elaborately. \"Mr Jeyne is not my husband. He already has a wife, back on some random moon of Javete VII? I think?\" She leaned forward, her chin resting on her hands. Taiwan looked uncomfortable now. \"You want to be my bedwarmer's little cocksleeve? Be my guest. But you better give him the ride of his life, you little slut, because I already have. So if you don't think you can outdo me?\" She let a slow smile spread. \"I'll hear about it. And I don't tolerate mediocrity. Comprehend?\"\n\nTaiwan swallowed. The whole ship knew that the XO liked to enforce standards by kicking the shit out of people. \"Aye aye, ma'am.\"\n\n\"Good. You may go. Oh!\" she added suddenly as Taiwan whirled. \"Almost forgot. Mr Jeyne is a shitty tipper, too. So there's that.\"\n\n\"Thank you, ma'am.\"\n\n* * *\n\n\"I just don't get it.\" Vecque was shaking his dumb head across from Pixy's desk. \"The numbers don't add up.\"\n\n\"And when you're the supply officer, numbers adding up is a big problem.\" She glanced over at the surgeon. \"Especially when one set of numbers indicates a fucking health crisis.\"\n\n\"Oh, I wouldn't call it a crisis, per se.\" Dr Borowicz was not that interested in drug problems, when it came right down to it, and it had taken him awhile to realize how his numbers were spiking.\n\n\"You almost had a sailor die,\" Pixy snapped, \"and that's a crisis.\"\n\n\"Not from my drugs.\" Vecque strained forward in the chair as if to charge across the desk. \"The testing shows that it was a stronger dose than what my people sell, ma'am!\"\n\n\"Whatever.\" Borowicz waved a lazy hand. \"Maybe she hoarded her supply, or something.\"\n\n\"Hoarded her supply.\" Pixy traded a skeptical glance with Vecque. \"Have you met the sailor in question, Doctor? She's a flat-out junky.\" Vecque was nodding, and Pixy considered, staring at him. \"What's your explanation then, Mr Vecque?\"\n\n\"People are buying more drugs,\" he shrugged, \"because they're pissed that they can't fuck.\"\n\n\"An incisive analysis, Mr Vecque.\" Pixy rolled her eyes.\n\n\"But see, that's increasing demand beyond where my guys can supply it.\" He glanced at the doctor, and Pixy understood.\n\n\"You can go, Commander Borowicz,\" she said loftily. \"Got that second operation scheduled for Sergeant Plovsek, right?\"\n\n\"Well, not anymore,\" he groused, rising slowly to his feet. \"Now I have to deal with another one of Vecque's ODs.\"\n\n\"They're not mine!\" Vecque bleated.\n\n\"Whatever.\" The doc strode out, and Pixy nodded thoughtfully.\n\n\"What did you want to say, Mr Vecque?\" Pixy felt sorry for the guy. Nobody liked being a Supply Officer, but some people were just flat-out unsuited for it. It wasn't his fault he sucked at it. \"You seem to have something you want to add...\"\n\n\"Someone else is selling, ma'am.\" It came out bluntly, like a stubby cock. \"It's the only thing that makes sense.\"\n\n\"A black market,\" Pixy breathed. It was the bane of every supply guy. \"Who?\"\n\n\"I'm trying to find out,\" he sighed, \"but I'm having trouble.\"\n\n\"Of course you are. You're a senior lieutenant with a small supply shop and not a lot of sailors.\" Plus, he was also a lumbering, unsubtle ox, loyal and brave and not much else. \"You have no line on what's happening in other departments.\" She pondered, her eyes wandering out toward the stars. \"Stand by. Juno!\" She shouted the name into the intertube. \"Get in here.\" Pixy nodded at Vecque. \"I think the ship's legal clerk should be able to ferret out any inconsistencies in the criminal dealing of hard drugs, don't you?\"\n\n\"Uh, yes ma'am.\" The hatch hissed, and Juno appeared there in the nude, all lithe supple limbs and smooth skin.\n\n\"You need me?\" She glanced over at Vecque, who stared back.\n\n\"Where the fuck are your clothes, dammit?\" Pixy demanded.\n\nThe steward shrugged. \"Catching up; I came as soon as I could.\" She simpered over at Vecque, the little slut. \"I was napping.\" He looked pointedly away as, sure enough, her clothes came loping into the dayroom and started to put themselves on. \"What's up, ma'am?\"\n\n\"You might be the least appropriate human being I've ever met,\" Pixy muttered, waiting while her staytab chimed. \"So. Desperado's got an issue, and it's drugs.\"\n\n\"Yes ma'am.\" Juno slid into Pixy's other office chair without being asked. \"I know.\"\n\n\"You do?\" Pixy and Vecque raised their eyebrows.\n\n\"Of course I do,\" the girl shrugged. \"The whole ship knows. The syndicate run by that Tygon Marine is undercutting the supply Mr Vecque and Mr Charlatul sell. Stronger stuff, cheaper price.\" She frowned at the two officers. \"Fuck, ma'am. Did you guys really not know that?\"",
        "\"Well, of course we did,\" Pixy lied, \"but I need proof before I can go forward.\"\n\nJuno laughed. \"Just take a blood sample off Vespa Clory or some other whore and run it through a spectro. Done.\"\n\nPixy nodded, improvising furiously. \"And that kind of materials analysis would constitute proof? From a legal standpoint?\" This was all just cover; all she wanted to know was who else was selling the drugs, but now it was vital to conceal her ignorance from her steward.\n\n\"Yes ma'am. Fleet Directive 14.\" She hesitated. \"Only, it might not be the best idea to start cracking down on drugs right now.\"\n\nPixy grunted. The little bitch was right, of course. Just a week the ship had been without any reliable sexual outlets, and people were whining at each other all over the place. Just yesterday, Pixy had had to snap-kick Chief Jernacki after he'd pawed one of the commo techs. When questioned through a bloody mouth, he'd admitted he just missed touching someone.\n\nPixy could relate. She'd always prided herself on being a woman who needed nobody and nothing, but she was starting to feel the empty space in her bed. Just the day before she'd been in the command chair with Jeyne on OOD, the two of them trading increasingly stricken glances.\n\nHow easy it would be, her mind mused, to just ignore the admiral's order...\n\nShe blinked the thought away, then looked sourly at Vecque. \"Our arrangement continues, Mr Vecque, but I'll refund your... your contribution for the overdoses of the last few days. I'll put a stop to the Marines. Just keep doing what you're doing.\" She sniffed, cocking an eyebrow at Juno. \"And tell Major Origami to get her ass up here.\" That Tygon Marine, Juno had said so blithely. They only had one Marine officer who was a Tygon. \"She's got some regulating to do.\" She and Juno stared at each other as the hatch closed.\n\n\"You're not going to put the Marines out of business, ma'am, are you? Their shit is really good. Prime stuff.\"\n\n\"I can't have people ODing left and right, dammit.\"\n\n\"Then take over.\" Juno shrugged. \"You were a supply officer; you must know how to sell hard drugs.\"\n\n\"Jesus fucking Buddha, you dumb twat, they're hard drugs. Anybody could sell them. That's the fucking point.\" Pixy brooded, wishing suddenly she'd told Origami to wait. \"Hell. You could sell them.\"\n\n\"Fuck yeah, I could,\" the little redhead muttered, her eyes lighting up. \"And I wouldn't let anybody OD, either.\"\n\n\"And,\" Pixy went slowly on, nodding now, \"you'd be able to benefit from the mentorship and expertise of an experienced drug pusher. Me.\" Juno was smart. Capable. Clever. Ruthless.\n\nThis might work.\n\n\"For which, obviously,\" Juno smiled, \"I'd be pleased to contribute at least half my profits.\"\n\n\"For which, obviously,\" Pixy corrected, \"you'd be pleased to contribute sixty percent of your profits, given that your devoted mentor is going to be spending lots of time and effort keeping the Marines from smoking your ass.\" She paused, her glance hardening. \"And no. Fucking. Overdoses.\"\n\n\"Not a one,\" Juno breathed, scarcely able to believe what was happening. She was a twenty-year-old dropout; she was about to become a druglord. The hatch shook to Origami's heavy knock. \"Not a single fucking one.\"\n\n\"Good.\" Pixy nodded. \"I'll try to flat-out confiscate the drugs, but we might have to buy them. If so, you'll chip in your forty percent.\" The steward nodded, understanding it wasn't a request. \"Then skedaddle. I've got feathers to unruffle.\" She turned to the hatch and raised her voice as Juno scrambled out into Pixy's quarters. \"Enter!\"\n\n* * *\n\n\"Oh, one more thing, ma'am.\" Origami had taken the meeting surprisingly well, Pixy thought, considering she'd just confiscated all her inventory in trade for an insulting 5%. Pixy was amazed she'd settled for so little, though she'd sweetened the pot quite a bit by allowing her to keep doing Charlatul. Clandestinely, she'd stressed; if the crew knew that she was allowing officers to continue fucking, there'd be hell to pay and her blood staining the deck. Pixy looked up.\n\n\"Yeah?\"\n\n\"My people are hearing mumblings. Whispers. Sailors stop talking when a Marine or an officer shows up, that kind of thing.\"\n\nPixy felt a coldness in her gut. \"What are you telling me, Major?\"\n\nOrigami returned a level stare. \"You know exactly what I'm telling you.\"\n\nPixy shook her head. \"Just bad morale. It's in the toilet.\"\n\nThe Marine nodded and leaned back in her chair. \"Fleet knew what it was doing with the bedwarmers. Space is cold. No cheer. Everything aboard a ship is all hard angles. Metal. Graphene. Chemicals. Every moment is harsh.\" She met Pixy's eyes. \"People need some contact. Someone to feel close to.\"\n\nPixy hesitated, her social history with other officers a long and painful thing. \"You... you were the old XO's bedwarmer, right?\" It sounded fake to Pixy, artificial, like small talk always did, but Origami didn't seem to mind talking.\n\n\"Yes.\" She smiled, her look a little wistful as she glanced out the hull at the everpresent stars. \"He had some problems. Nice guy, a little clingy. I ended it, and then he decided to fuck around with regulating the bedwarmers too.\" She glanced quickly at Pixy.\n\n\"Wow.\" Pixy shook her head. \"Hell hath no fury like a bedwarmer scorned.\"\n\n\"Everyone went to the captain. Said she had to rein him in, but... well.\" She glanced up, already treading close to the technical definition of mutiny. \"You know the captain, ma'am.\"\n\n\"Yes.\" Pixy thought of it, a group of officers arriving, senior leaders and division heads, cap in hand to appeal the XO's order; Payne, all cold politeness, claiming she was indisposed. Studying. Everyone aboard knew that Lina Ledecki's value to Fleet lay on the PR value of her Parcheesi board. \"I didn't know you'd... stopped warming for him.\"\n\nOrigami allowed herself a smile. \"I'm a good bedwarmer,\" she shrugged, \"and he wasn't happy. But nobody thought he'd off himself, though.\"\n\n\"Nobody ever does.\" It happened on every ship at least once in any voyage, the routine and isolation getting to be too much for some peoples' minds, and the airlock was quick. Easy. Accessible. Suicide could be difficult in their world, the clones always waiting to undo any attempt that didn't obliterate the cerebrum, but the Big Step out the airlock into the cold hugeness of space was absolute. Instantaneous.\n\n\"He didn't like space. He always kept the hull opaque in here.\"\n\nPixy grunted. The irony. A man who hated space joining Fleet. Then dying out there, his last brief sight the cracking of the outer hatch, the stars waiting to engulf him. \"This is hard,\" she admitted haltingly, \"but we don't get to decide whether to follow or ditch orders.\"\n\nOrigami shrugged. \"I'm glad you're in charge and not me. Were you planning on letting Phaceboox back up?\"\n\nPixy rolled her eyes. She'd been in touch with the other captains, and they knew that if they let the sailors communicate, there'd be a mutiny in moments. A big one. \"The crew knows why I'm jamming it. I'm aware it's not sustainable.\" She took a deep breath. \"Fuck. People are really, really disgruntled. The other captains are all worried about... about Fleet Directive One.\"\n\nFD 1. The mutiny directive. Pixy couldn't even utter the word.\n\n\"People want to get laid, ma'am,\" Origami said bluntly. \"They want to feel like their fucking Admiral understands reality. Did that second waiver go anywhere?\"<br ><br >Pixy scowled; she'd submitted the waiver appeal right after the first was turned down. \"Fuck no.\"\n\nOrigami paused, looking down at her uniform, picking at the threads there. \"Ma'am,\" she began carefully, \"I know it's not my place, but have you given any thought to... like, I don't know, 'forgetting to enforce' this order?\"\n\nPixy stared levelly at the Marine. \"No,\" she replied slowly, savagely, \"but I have given thought to forgetting that my Marine commander suggested I back off a direct order from the leader of the whole fucking Archsquadron.\" She stopped, her lip curling. \"Comprehend?\"\n\n\"Of course, ma'am.\" Pixy wasn't worried about Origami. The Marine liked her: liked her combat record, her skill with her feet, her aggressiveness. But she had to be shown there was a limit.\n\n\"I hear that shit again, Submajor Origami, and you'll follow your former bunkmate out toward an airlock.\" She sighed, the threat empty; she clearly wasn't going to murder her own Marine officer. But Pixy had done the unthinkable: nobody ever addressed subs by their full rank. It was like your mom using your middle name.\n\n\"Sorry, ma'am.\" The Marine sighed heavily. \"But... shit. Dry. No lube. That's the way we do everything in Fleet.\"\n\n\"Yes. Everything is harder than it needs to be.\" Pixy gave a short laugh. \"Especially now that we can't have whores anymore.\"\n\n* * *\n\nThe crew, as Pixy stalked toward the gym, was all very suspiciously quiet, their eyes flickering away from hers even as they offered grudging salutes. Amazing, she reflected for the thousandth time over her career, how quickly a vibe could spread aboard a ship. Moods moved fast on the GP ships she was used to, their tentacles worming into every passageway and compartment; Desperado was three times larger, but the spread was just as fast.\n\nEveryone. Everyone was pissed off. They were pissed off at the Admiral, but the Admiral was far away aboard the mighty Mithras and even the captain was away on Harbin IIb, moving tiles around on a board. Leaving her, Subcommander Pixy Pfeiffer, as the face of the order that had kept all the beds cold.\n\nShe was finding it acutely uncomfortable.\n\nShe'd thought about having Origami start presence patrols, groups of Marines stalking the ship with smiles on their faces, but she'd rejected the idea after Welson had convinced her it would just piss people off more.\n\nPixy sighed as she slotted herself into the hoverjag stepper, the machine launching silently into motion, ready to punish her muscles as it did every day. The ship had figured out early that the new XO liked to exhaust herself on the 'jag, and Pixy's habit was to keep pushing until her tight back could take no more. Usually, that was about ninety minutes on the stepper, glancing around the gym at the rest of her fellow health freaks.\n\n<br >Easy enough in this day and age to keep fit through genetic engineering or dietary recursion, but Pixy preferred the old-fashioned way: sweat.\n\nSomething nagged at her as she passed her eleventh minute, and then again about seven minutes later; she squinted through the steamy air of the gym, the sailor on the front right stepper staring down.\n\nAt his minislate.<br ><br >Pixy felt a cold weight on her chest, squinting hard, her eyes picking up the distinctive green and purple screen of a Phaceboox Intergalactic homepage. The homepage she'd had blocked from the ship's commo system, using Captain Ledecki's own coding gun. Her mind raced as the stepper began its endless churn, but her brain wasn't anywhere near the machine. It was on that sailor's fucking 'slate. Pixy felt her mouth go dry, but it wasn't the usual rage-cue that would normally have sent her off the stepper, seething, to beat the sailor into oblivion. No, this was a different emotion: this was fear.\n\nIf a sailor was Phacebooxing in the gym, that meant someone had disobeyed orders. An officer. A commo officer, changing the coding, allowing the sailors to Phaceboox...\n\nThat was mutiny. And it scared her to death.\n\nShe kicked the 'jag's power switch and eased out of the box, putting on her most pleasant smile as she strolled casually past the man. \"Ah!\" she exclaimed, wiping imaginary sweat from her forehead. \"Great! Phaceboox is back up!\"\n\nHe glanced over, annoyed, then stiffened suddenly when he saw who he was talking to. \"Ma'am.\" His voice rolled out, wooden, his thumb closing the app at once. \"Just, uh, catching up with news from home.\"\n\n\"Yeah? Where you from?\" She was keenly aware of her body in the workout clothes, the lack of a bra-field, but his eyes never strayed from straight-ahead military formality. That alone told her something was deeply wrong; sailors never missed a chance to check each other out.\n\n\"I'm from Kylekin B, ma'am.\"\n\n\"No shit!\" She laughed, improvving furiously and, she guessed, badly. She knew her face had gone scarlet. \"You're from an asteroid! Cool. So how long as Phaceboox been back up?\"\n\n\"Um. I wouldn't know, ma'am.\"\n\n\"Like, who fixed it so that we could receive it again?\" Pixy knew she was pushing, but her mind was filling with awful images: mutinous hordes overrunning the wardroom, the officers tied up, lunch late... \"Any idea?\"\n\n\"No, ma'am.\" The sailor remained gun-barrel straight, his answers snapping out, and Pixy felt a sudden urge to run and find the commo officers.\n\n\"Well, no problem. I'm glad to see it's up and running.\" Her smile grew so big it began to hurt. \"Have a good workout, sailor.\"\n\n\"Ma'am.\" The acknowledgement was a low, surly murmur at her back as Pixy whirled toward the door, her implant flashing her the quickest route to the commo shop, down through the engine room and across from the navigation shop, but she suddenly felt she needed to be on the bridge.\n\nJeyne glanced back at her as she burst through, the OOD's telescope tucked beneath his arm. \"Attention on the bridge!\" he called, glancing quickly at her workout clothes as he launched into a formal report. \"Ma'am, current course is five-eleven by twelve and a half thousand, point three, no superscript, velocity factor six. Scope is...\"\n\n\"Shitcan it, Mr Jeyne.\" Her voice squeaked tightly out, eyes scanning the bridge with urgency. Everything looked completely normal up here. Zuus manned systems, watching her curiously as she leaned in close to whisper with Jeyne; she knew the rumor would spread like an oil burst, the XO in her shorts muttering with her old bedwarmer, but it couldn't be helped. \"Why the fuck did you and Paulus unjam the Phaceboox?\"\n\n\"Ma'am?\" It hadn't occurred to her that Jayne would be mutinous, but as his hard green eyes met her purple ones she decided she probably should have thought of that. \"You used the captain's own coding gun to jam it. And you ordered that it stay jammed. It's still jammed, as far as I know.\"\n\n\"It's fucking not,\" she insisted. \"I saw a guy in the gym using Phaceboox. So obviously the system is wide open now.\" She glanced at the plot, the other ships in the squadron floating around, all those disgruntled sailors there, cooped up, no proper human contact for weeks... \"We're fucked,\" she added softly.\n\nJeyne was beckoning to his commo section. \"Maybe, maybe not.\" The midshipman, Vagina, was over there. \"What's the status of the ship's WiFi, Ms Wollz?\"\n\n\"Functioning normally, sir.\"\n\n\"Okay.\" Jeyne had a calm air about him, very nonchalant. \"Did Chief Poole teach you how to access the comms log?\" She nibbled at her nervous lip, then nodded. \"Cool. Go on back to the console and find out who enabled Phaceboox, and when. Should have been within the past few hours.\"\n\n\"It would have to be your or Paulus,\" Pixy muttered, watching the midshipman's retreating ass. \"You two are the only ones with coding guns.\"\n\n\"And Mr Welson,\" Jeyne whispered back. \"He's got the First Officer's gun with Delmer off the ship.\"\n\n<br >\"Fuck.\" Pixy bit it out as a savage whisper. \"Fucking Welson.\" She slapped the intertube and spoke into the mic, her voice ringing through the whole ship. \"Deputy XO to the bridge, please.\" She nodded tensely at Vagina. \"Tell her to stop. There's no point anymore. It was that fucking weasel Welson. You clamp that fucking jam back on the signal, and do it now.\"\n\n\"Ma'am.\" He hesitated. \"Damage is already done, though. You know it.\"\n\nPixy was nodding to herself, considering, the possibilities converging in her head just as the squadron was converging on the scope... \"What the fuck.\" Jeyne followed her gaze. \"Where's everyone going?\"\n\nDesperado and Maida Vale held their spots, with Jetu farther off actually turning away, out of formation. Every other ship in the archsquadron was an angry red blot, moving toward the flagship. \"Did we miss a signal?\" Jeyne wondered.\n\n\"You're the goddamn assistant commo officer,\" Pixy snapped. \"You'd know. And where the fuck is Welson?\" Her deputy had made no appearance, and all at once Pixy felt cold fear gnawing at the back of her neck. She glanced at Jeyne. \"Phaceboox is jammed again, right?\"\n\nHe nodded back just as Vagina turned a worried gaze their way. \"Uh, Sir? Lt Jeyne?\" Her lips were puckered in an odd little sneery pout. \"Someone's coding gun keeps undoing the jam.\"\n\n\"Whose?\" Jeyne barked.\n\n\"It's Welson,\" Pixy grated. She glared hard into Jeyne's eyes. \"Who the fuck knows what he's doing. Look, Mr Jeyne, lock the hatch behind me and don't let any motherfucker in.\" The decisions were shaping themselves now without any conscious input from Pixy's mind, her mouth shaping the words on its own. \"Chart a speed course for the flagship. Tell Major Origami to get to my quarters, and fast.\"\n\n\"Ma'am?\"\n\n\"That,\" Pixy nodded at the screen, the maneuvering ships, \"is a full-scale mutiny in progress. Admiral Shonzey's in deep shit, and we might need to pull him out. But first I have to find Mr Welson and beat the shit out of him.\"\n\n\"Uh...\"\n\n\"No time, Mr Jeyne.\" She squeezed his arm, the contact electric after so many weeks without. She missed him. \"Nobody comes onto the bridge. Get us to the flagship. Hey!\" She raised her voice. \"Vagina! Keep jamming manually. I'm going to find that coding gun and shut it down, but let's have no ambiguity: I want Phaceboox off my ship. Comprehend?\"\n\n\"Yes, ma'am.\" The girl's finger tapped at the jam hammer, keeping the signals out in space where they belonged. A shame the rest of the squadron hadn't figured that out, Pixy told herself savagely as she stalked from the bridge. Every red blur headed toward the Mithras was a captain who'd lost control of his or her ship, a career wrecked, maybe an airlock opened for an instant.\n\nPixy preferred not to think of that last bit. She didn't feel like dying today.\n\n* * *\n\nShe had no idea where Welson was holed up, but she was assuming the wardroom; his coding gun would only have its full capabilities there, at the coding table in the corner, but she had no doubt he'd have his buddies down there too: Zuus, Paulus, all the old Delmer crew, probably all locking the hatch against her while they figured out how to get onto the bridge.\n\nSo Pixy would need her master access badge, now dangling from her mirror beside her light-lizard. She scrambled through corridors unnaturally silent, assuming at any moment that she'd hear cries, scuffles, maybe even flash-rifles down the deserted side passages. Every now and then she'd pass a transparent patch of hull, the stars deceptively peaceful, the ship groaning around her now as Jeyne squared away on his new course for the flagship.\n\nShe crept along, the sense of unreality growing. She'd never been in a mutiny before and had no clue what it was supposed to sound or feel like, but this was giving her a sense of detachment, almost dissociation, like she'd never experienced. She almost felt she was outside the ship, staring in at a mannequin version of herself, slinking along through the heaviness of the ship in her skimpy clothing, eyes and ears wide. Her own hatch finally loomed before her at the very end of the Senior Officers' Corridor, and Pixy licked her lips before she lifted a hesitant foot and kicked it open.\n\nThe vastness of space through the graphene hull bored down at her through the darkness of her quarters, and even as her hatch swept quietly closed behind her she sensed she wasn't alone. \"Juno?\"\n\n\"Don't panic, ma'am.\" The voice came from near the kitchen. \"Zuus will be taking over the bridge around now.\" Fuck, she raged at herself; he'd been up there. That was right... \"You know Shonzey's full of shit. Ma'am.\"",
        "When Pixy found her voice, it came out in a harshly controlled rasp. \"Mr Welson,\" she began, \"whatever the hell you're talking about, you can stir it down the fucking latrine. How dare you enter my quarters?\"\n\nHe replied with a most un-Welson-like laugh, and she got it then: he was not himself. He was in mutiny. He'd crossed that mental bridge. \"You've got bigger problems than that, ma'am. The whole squadron's decided. Time for Shonzey to go. Feel free to join, ma'am, but you're probably better off saying no.\"\n\n\"What are you talking about?\" She was trembling, every nerve twitchy now. She heard danger in that voice. Mutineers were not safe people. She cleared her throat. \"Fucknut? Light.\"\n\nThe sudden soft wash of reptilian light showed that odious little twat Lister Welson in her chair, at her desk, with her master access badge twirling from the fingers of his left hand. And a fucking gun in his right. Pointed at her. \"You're looking good, ma'am.\" They both started as the engines kicked, shuddering the whole ship. \"That's Zuus, heading for the flagship with the others. Like I was saying, you're better off not joining us.\"\n\n\"You're damn right, Mr Welson.\" Pixy's voice was a tightly coiled spring of rage. \"Because you're in mutiny. You'll all fucking hang.\"\n\nHe laughed at her. \"The whole archsquadron? I don't think so. Every ship is in motion.\" They both glanced over at the plot repeater over the bed, the dots converging but for a few stragglers. \"Well. Most of them. Join in and your career is toast, but refuse and I'll shoot you.\"\n\nShe found herself laughing at him. \"You wouldn't dare.\" Her body went cold all of a sudden, his eyes behind the glasses telling her that yes, he just might dare. \"Just so we're clear, Mr Delmer, regardless of how this all works out, you're in mutiny. So no matter what the Admiral or Fleet ends up doing to the rest of the ships? I don't give a rat's ass, you will hang.\" She nodded toward the gun, her rage a reckless crescendo in her brain.\n\nBut he laughed. \"No. Don't worry, Commander Pfeiffer. I'll kill you, but I've got a haemodrive here and you've got two clones someplace. You'll come back. Might take a year or two, and I expect we'll all be exonerated by then. Fleet won't want the PR hassle.\" He giggled. \"Who knows? Maybe I'll fuck up the brain salvage and you'll wind up a vegetable.\"\n\n\"You better fucking kill me,\" she breathed. \"All the way dead, you miserable shit.\"\n\n\"Maybe. You won't know,\" he shrugged amicably, getting slowly to his feet. \"I should head up to the bridge, anyway. The ship needs someone nominally in charge, since you won't be around.\" Pixy felt herself tensing, the muzzle of the gun not trembling at all as Welson stretched it toward her chest. She felt nothing as she waited for him to fire, just a vague excitement that now, finally, after so many close calls, she was finally going to find out what dying was like...\n\nShe was not ready when his eyes went wide, an odd squeaky little gasp making its way out of his mouth as his whole body seemed to shudder. The muzzle drifted, wavering, off to the right, Welson's finger spastic on the trigger to send a flash sizzling through Pixy's mattress as he toppled liquidly to the ground. Pixy started for it at once, her tension sweeping out from her body as she kicked the gun spinning across her deck, her other boot driving hard into Welson's ribs; he grunted, but there was no comprehension on his shocked face.\n\nWrae Juno stood there in the shadows, looking down at the deputy XO with a strange smirk, her custom Sajusake chef's knife held easily in her hand. Her bloody hand, the shining blade soaked in thick red. \"I do well with kidney,\" she snickered, \"sliced fine.\"\n\n\"Fuck.\" Pixy felt her lungs expand slowly, like flowers opening, the breaths unexpected. \"You okay?\"\n\n\"Better than him.\" Welson curled himself into a tight gasping ball, his face sheeted with sweat as the bloodstain spread over his lower back. \"He's in shock. Maybe he'll bleed out?\" She didn't seem concerned. \"He's Fleet Directive One, anyway. He had a gun on you. Mandatory death penalty.\"\n\n\"I've got to get back to the bridge,\" Pixy blurted.\n\n\"Yes ma'am.\" Juno set her knife carefully in the sink. \"He'll be gone as soon as I can get to an airlock.\" Her eyes met Pixy's with a sly gleam. \"I've had experience with officers in airlocks.\" If Welson understood what they were saying, he didn't show any sign; he'd begun to shake now, horrible full-body shivers as his skin went grey. \"Go.\"\n\n\"Fuck,\" Pixy grated again, glancing once more at Welson's writhing form; Juno was studying his face with interest. \"Uh, carry on then.\"\n\nHer workout clothes hung off her body drenched in clammy, stinking stress-sweat when Pixy swept her pass, busted open the locked hatch, and cannoned back onto the bridge with Welson's flash-pistol gripped in her hand, ready to take out Zuus and anyone following his orders. She was expecting chaos, crewmen dead or tied up, angry shouts and slurs.\n\nShe didn't find that.\n\nEvery eye in the place glanced at her, then back to their consoles. \"Hi. I just sent some Marines to go find you.\" Jeyne's voice, weak from the command chair where the surgeon crouched beside him.\n\n\"What the hell?\" Pixy pivoted her head slowly around the space, the lights blinking just as normal while the flagship grew in the forward scanner. Jeyne looked pale, his eyes huge, Dr Borowicz working at his abdomen with a suturing iron. \"Where's fucking Zuus?\"\n\n\"Over there.\" Jeyne nodded weakly across to the systems console, where Midshipman Vagina had her thighs locked around the Tygon's neck, his green face turning yellow. Pixy gaped, her implant reminding her the girl was some kind of martial-arts sorceress. Jeyne's voice came out slowly, breathy. \"Ms Wollz has it covered.\"\n\n\"Get Mr Jeyne to your sick bay now, Doctor,\" Pixy snapped.\n\n\"There are mutineers in every corridor, Commander,\" the surgeon protested quietly. \"That's what Mr Zuus said before he started shooting.\" Pixy let herself look, then, at the ugly, burnt-meat tear at Jeyne's side. She swallowed. \"I didn't want to move him until the Marines...\"\n\nPixy glared once more over at Zuus, throttling slowly. Her voice rang over the consoles. \"Can you kill him, Ms Wollz?\"\n\n\"Ma'am?\" The midshipman seemed to be under no strain at all. \"Should I?\"\n\n\"He's a mutineer. If you don't, I will.\" She grunted, sick of all this, Jeyne growing paler and paler as she smacked the intertube key. \"Enough of this shit,\" she muttered, making sure the settings would send her voice flowing throughout the whole ship. \"Listen up!\" she barked. \"This is the XO. Effective immediately, all bedwarming and prostitution limitations are rescinded. Fleet personnel are encouraged to resume all prior restricted relationships without penalty. Thank you!\" She tossed the mic back into its little rack while applause started up from the navigation pit. \"Get him moved, Doctor. I don't think there will be any more mutineers now.\"\n\n\"Ma'am.\"<br ><br >Pixy sighed. \"Just hold Mr Zuus there, Vagina.\" She was going to kill him, but she could hardly do it here on the bridge, in the middle of a full-scale mutiny. \"If you could make him go unconscious, that'd be great.\"\n\n\"Aye aye, ma'am.\" The cadet shifted her hips, her thighs twisting briefly, and then Zuus groaned to a limp puddle on the floor. \"All set.\"\n\n\"Good.\" She hesitated, then turned to Chief Poole over at commo. \"Get Major Origami the fuck up here, as quickly as you can.\" She was tapping at a tabslate, checking all the airlock logs and unsurprised to find that one was currently pressurizing. Number Four, the lock nearest her quarters. \"And summon my steward, as well, when it's convenient for her.\"\n\n\"Ma'am.\" The chief raised a hairy eyebrow. \"Not immediately?\"\n\n\"Petty Officer Juno is busy at the moment,\" Pixy murmured, that airlock almost at 100%. \"She'll be free soon.\" She gazed at the flaccid Zuus, thinking another airlock would be depressurizing shortly. Pixy took a deep breath, shaking as she held it, then let the strain go. \"Okay. Let's relax here, motherfuckers,\" she called to all the bridge personnel. \"We've got work to do. I'll need Mr Praaskinen up here to relieve Mr Zuus, who won't be around long. Chief Poole, you stay on comms.\" She studied the plot board. \"Another four percent on power, Helm.\"\n\n\"Four percent, aye.\"\n\nThe flagship was visible now in the foreport, glittering in the middle distance. \"We need to be the second or third ship there. When we get up to the Mithras, lay us along her forward lower clobbet.\" Her implant told her that's where dreadnoughts kept their hatch closest to the bridge. She nodded to herself, smacking the intertube once more. \"Forward bay. Who's down there?\"<br ><br >This would tell a lot. If her crew were still mutinous, nobody would speak up. If the reply was surly, that meant they were still pissy back there. Instead, the reply was a normal drawl. \"This is Chief Jernacki. Is this the XO?\"\n\n\"It is.\" She listened closely.\n\n\"Okay. All good down here, ma'am. So normal it's virtually abnormal. What are your orders?\" Pixy let out a sigh of relief and wondered whether the chief could hear the smile in her reply.\n\n\"Clear away the Marines' shuttle, please? It won't need its shields charged. They're going to board the flagship.\"\n\nA hesitation at the other end told her Jernacki had been prepared for someone else boarding the flagship, but as long as she obeyed orders now, Pixy was ready to ignore that. \"The Marines. Aye aye, ma'am.\"\n\nPixy nodded to herself. \"It appears the squadron is mutinying, Chief. Our Marines will stop it.\" The pause stretched at the other end. On impulse, Pixy's implant told her who Chief Jernacki's bedwarmer was. \"Oh, and Chief Jurrin tells me to let you know he can't wait to see you later. Your quarters.\"\n\nStaticked silence broke the pause. \"Excellent, Commander. We'll get that shuttle fixed up for you right away.\"\n\nPixy waited for her voice to settle before she sent her answer. \"Thank you, Chief.\" The plot showed the distance to the flagship closing rapidly. A cruiser, the al-Fatih from the Inner Sector, was already there; so. Probably, mutineers were already aboard the flagship. The Marines would need their rifles, then. Behind her the hatch hissed open, Origami stepping through ready to kill something. \"Hello, Major. I've got a job for you.\"\n\n* * *\n\nThe investigator was a cool customer, a tall human with the unusually dark eyes that, coupled with the scar on his upper lip, made him look like a real killer. Like the kind of guy who wasn't wearing all his medals. The kind of guy who Knew Things. He'd introduced himself as Subcolonel Smith. \"That's not your real name,\" she'd accused.\n\nHis smile had been thin. \"Subcolonel Jones, then, if you'd rather?\" He sounded like he came from the Andromedas, but he also seemed like the kind of guy for whom accents were malleable.\n\n\"Why is the Army investigating this?\" she'd asked him bluntly.\n\n\"Because when Fleet investigates Fleet,\" he'd shrugged, \"Fleet usually comes out looking great. And also because Fleet doesn't have a classified investigative service and the Army does. Won't you sit down? We've got a lot to go over.\"\n\nAnd they had, for three grueling days, as the stars wheeled around outside the hull and techs swarmed over Mithras just within sight. Unfortunate, the hole Origami had had to blow in the side of the flagship, but Pixy felt it had been unavoidable. And she knew that if she couldn't convince this mysterious Army colonel of that, Origami would be in seriously deep shit. \"I'm telling you,\" she stressed, \"my Marine deserves a medal.\"\n\n\"Well, she's not going to get one,\" the man shrugged evenly. \"If what you're telling me is true, you and her successfully stopped a mutiny and saved an entire archsquadron from getting executed; you know Fleet. They'd hang thousands.\"\n\n\"They would.\"\n\n\"So? Now they won't. Let that be your reward, you and this... Jami? Jami Origami? You saved peoples' lives. Good enough, right?\" He cocked an eye across the dayroom table. \"Well. Most lives. Not your Admiral's.\"\n\n\"Admiral Shonzey was clearly under great strain once he realized the gravity of the mutiny,\" Pixy explained again. \"Is it really surprising he chose to, ah, succumb to despair?\"\n\n\"The Big Step.\" Smith cracked a smile. \"That's what you guys call it. When people take a leap out of the airlock.\"\n\n\"It's not really a leap, per se. I'm told,\" Pixy replied softly. Juno had told her. \"Just a moment of cold. Then? You just sort of drift out...\"\n\n\"Tell me again,\" he interrupted softly, shuffling back a few pages. Like he'd forgotten something, though he hadn't... \"Why did your steward accompany the Marines on their boarding party?\"\n\n\"My steward,\" Pixy explained, thinking of the Admiral's airlock, \"is the ship's legal clerk. My feeling was that she should ensure events aboard the flagship were... handled. Properly.\"\n\nHe shrugged carefully. \"It's just that the flagship cameras caught her gaining access to the admiral's quarters.\" He smiled. \"Her hair was very distinctive on the footage.\"\n\n\"I did tell her,\" Pixy confessed quietly, \"that, if she had the opportunity, she should get some fresh vegetables for my pantry. I'd assume that's what she was doing around the Admiral's quarters.\"\n\nThe Army man looked at her oddly, a long moment of quiet judgement. \"So,\" he went on, glancing back at his tabslate, \"just to make sure I've got this right. You went on your ship's intertubes and contravened the Admiral's order.\"\n\n\"To keep my crew from tearing the ship apart,\" Pixy stressed, and Smith nodded.\n\n\"Yes. It does seem rather calm here,\" he reflected; he'd interviewed crews on four ships by that time.\n\n\"Probably because everyone's getting laid,\" Pixy sighed. \"Look. I was against the order all along; everyone was. But we still enforce them, and I had been. In that moment, though?\" She stared hard at the soldier. \"I was about to lose my ship.\"\n\n\"Captain Ledecki's ship,\" he reminded her.\n\n\"No, fucking my ship.\" Pixy held her stare. \"You don't see her around, colonel, do you?\"\n\nHe allowed another slow smile. \"My understanding,\" he murmured, \"is that she's just made the quarterfinals in her tournament. Chess, right?\"\n\n\"Parcheesi.\"\n\n\"Sure. Whatever. She might be coming back here after all this.\" He knew who he was dealing with, Pixy reminded herself; he'd glanced at her Army medal when they met, and a man like him would have obviously read her record. \"You don't care.\"\n\n\"No. So I saved my ship.\"\n\n\"But not two of your officers? Lieutenants... Zuus and Welson?\" He studied the 'slate again. \"More difficulties with the airlocks.\"\n\n\"Tragic,\" Pixy snapped.\n\n\"Quite.\" He sat loosely in the conference chair, waiting her out until Pixy sighed.\n\n\"They're not a problem anymore. They mutinied, with witnesses.\" She tapped the pile of sworn statements she'd collected in the furious days after the Mithras had been attacked, while the other ships waited around uncertainly and the few who hadn't mutinied stood guard. \"Everything here was duly notarized by the ship's legal clerk. Mutiny is death, every time. No questions asked. If those two fine officers chose to take their own way out, what am I supposed to do? Go scoop them up out of the void so I can send their freeze-dried corpses back to their families?\"\n\nHe showed no emotion. \"And the Admiral took his own way out too.\" The colonel frowned. \"Your legal clerk shows up in a lot of curious places in these accounts,\" he added softly.\n\nPixy felt a chill run down her spine. I'll take care of it, ma'am, she'd said, removing her nametag before padding coolly into the shuttle behind the Marines, and next thing anyone knew the Mithras' airlock had opened. Nobody had asked, after that. Shonzey's staff had quietly rescinded the no-bedwarmers order, things had calmed right down, and then it had all been over except the affidavits. \"She's very capable, sir,\" Pixy sighed.\n\n\"You know her well, Commander?\"\n\n\"I inherited her when I came to the ship. It's only been a few months.\" The Marines had docked hard, Pixy swinging Desperado around to bear on the flagship with no idea what she'd do or why she'd do it. Mutinous ships had been streaking in from the far side, guns out, and Origami's commo loop had told the rest of it: al-Fatih sending their own boarding party onto the flagship through the great dreadnought's aft hatch, Pixy praying they weren't Marines; she had no idea whether Origami would fire on her own, and she very much needed Origami to fire.\n\nOr the whole archsquadron would hang.\n\nPixy cleared her throat, her mind clear. \"I made my intent clear, sir, to all hands. Including Juno, including Major Origami, including my weapons officer. Helm. Everyone.\"\n\n\"And that intent was?\"\n\nThe stars winked at her through the hull. \"Confront the mutineers. Eliminate resistance. Protect the flagship.\" She felt her lip curl contemptuously. \"Save the Admiral.\"\n\n\"Well.\" The colonel's dark eyes glittered. \"Three out of four ain't bad.\"\n\n\"None of my people did a goddamn thing to the Admiral.\" Her hand smacked the stack of statements once more. \"All the witness statements agree on that.\"\n\n\"And all of them, checked and notarized by Petty Officer Wrae Juno.\"\n\nPixy felt herself flush. \"We put down a fucking mutiny.\"\n\n\"You hated Shonzey's order. You thought it was a bad order.\" He watched as Pixy fumed, pushing her. \"Didn't you?\"\n\n\"It was, colonel. It was a ridiculous order. A pointless order. But it was a fucking lawful order, unfortunately.\"\n\n\"Fleet Directive... what, 33?\" the soldier mused. \"Obedience to officers.\"\n\n\"Exactly so, sir.\" Pixy felt herself unclenching. She was almost sure, at last, that this mystery man wasn't after her at all. She'd done well. No, he was curious about Juno. The death of a Vice-Admiral was pretty serious. \"I obey orders. So do my people.\"\n\n\"Your ship didn't mutiny?\" Smith smirked. \"Not even a little bit?\"\n\nPixy thought of Chief Jernacki, down in the hold, expecting someone else on the intertube. Expecting Welson. \"Not even a little bit,\" she snapped. She could handle it herself, and she could handle Juno as well. \"There are plenty of other ships here with plenty of other problems, sir. Perhaps they need your attention.\"\n\nThe colonel nodded knowingly. \"I wasn't expecting tact from you, Commander Pfeiffer. Your record suggests otherwise. So if you want to tell me to fuck off, just tell me to fuck off.\"\n\n\"Fuck off, sir.\"\n\n\"Mmhmm.\" The colonel shrugged. \"Just one last thing. Was it really necessary for your Marines to blow out a whole buzz-lift panel aboard the Mithras?\" He frowned at his tabslate. \"I mean, shit, what do I know? I'm just Army. But that seems like an awful lot of damage.\"\n\n\"They're Marines,\" Pixy pointed out, tired of all this. \"They cause damage. Look, seriously, can we be done here?\" Her work stretched ahead of her, a crew to put back together, to weld back into a cohesive whole, to send against the enemy. To give back to her undeserving captain, better than she'd found it. \"You can get back to me if you need to. Right?\"\n\nThe colonel nodded precisely, his mouth tightening. \"Yeah, I guess.\" He glanced around at her dayroom. \"I suppose you can get back to work, XO.\" He rose to his feet. \"I have some more questions for your Juno, but I don't suppose you'll let me talk to her.\"\n\n\"No. I won't. She's busy.\" Pixy hesitated, her mind screaming at her that this might be a useful man to know. One day. \"I'll put her in touch with you. Subcolonel Smith.\"\n\nHe smiled back at her, the devious kind of smile you got from pimps and the sleazier sort of supply officers. He nodded to himself. \"It's actually Rennels. Schwick Rennels.\" He winked. \"That's a name you'll find in the Army Directory, anyway. Get in touch; I'm always happy to come on out here. To the fringe of nowhere.\"",
        "\"Yeah. Nowhere.\" She gestured toward the hatch. \"But we're past the fringe, I think. Nice chatting with you. Sir.\"\n\n* * *\n\nHe was still sore, the incision whining at his hip every time he had to move his leg. \"Getting better, though,\" he grimaced, the stars staring in from beyond the hull.\n\n\"Shut the fuck up and quit complaining, Felix,\" Pixy husked. \"Do I need to show you my scar again?\" Weeks it had been before she could do anything more than stand and sit. The Pulver's surgeon had glued her back together in mid-battle, and once it was all over Pixy hadn't been able to understand how she'd kept functioning.\n\nHe smiled at her. \"Sure. Your stories always put me to sleep.\"\n\nShe chuckled at him, the closeness back: this was what she'd been missing. What the whole squadron had been missing. And Commodore Krynne had understood that quite well; the moment she'd heard of Admiral Shonzey's unfortunate suicide, she'd promptly nuked his order. Pixy had thought it prudent not to mention to her new commander that she'd already rescinded it aboard the Desperado; a medal ceremony didn't seem quite the time for a technical discussion on the timing of orders.\n\n\"Really?\" she'd murmured to the diminutive old Commodore, fingering the new medal dangling off her boob. \"A Gold Cross, ma'am?\"\n\n\"Shut the fuck up, Pfeiffer,\" the Commodore had snapped. \"You stopped a mutiny. Take the medal. Just smile and wave.\" She'd confessed to Pixy during the award reception that she was angry about having to move from her ship, the Billy-o, to the Mithras until Fleet got around to sending out a new Admiral. But they were hardly going to do that just to accommodate her; she was out here not because she was incompetent, but because she was irascible. \"Learn from my mistakes. You piss off enough people, you wind up in acting command after a mutiny.\" She'd eyed Pixy. \"You remind me of myself. That's not a good thing.\"\n\nBut that was in the past, Pixy lounging as gingerly beside Jeyne as she could. \"Look,\" she whispered in the starlight, \"I'm sorry you got shot. And I'm glad you didn't die.\"\n\n\"Why, Pixy!\" Jeyne smacked lightly at her nude ass. \"Don't go getting all emotional now.\"\n\n\"I'm serious.\" She was, too; bedwarmers had to be careful not to fall in love, especially when your bedwarmer was a subordinate. And happily married. But Pixy had never been able to be cold about warming beds. She liked Jeyne. \"The amount of paperwork I'd need to fill out on an officer, shot dead on the bridge...\"\n\n\"Well,\" Jeyne said softly, after a pause, \"Plan B might have worked: just have Juno push me out of an airlock.\"\n\n\"Not funny,\" Pixy snapped. \"You need to keep your mouth shut about that kind of thing.\"\n\n\"What?\" His fingers resumed stroking her back, idly, along her scar. \"The whole ship's talking about it. She's good at it.\" He grimaced again. \"Nobody minds. No one but Delmer liked Welson, and Zuus shot me in front of witnesses.\"\n\n\"Delmer.\" Pixy tasted the word as though it bothered her. \"He'll be on his way back soon. Captain lost the semifinal.\"\n\n\"If he gives you any trouble, Juno will take care of him.\" Pixy laughed despite herself.\n\n\"I'm worried. I don't want her to get a taste for murdering officers. She's punted four people out the airlock. I don't want to be Number Five.\"\n\n\"She loves you.\" He sighed as her fingers traced along his wound. \"Just like the rest of the ship.\"\n\n\"Fuck that.\" Pixy was not a believer that an officer should try to be popular with the crew, and she'd never understood that that was the very reason her crews loved her. \"I don't need love.\" Her wrist brushed along his cock, and she felt a spasm there. \"What the fuck, Felix? Dr Borowicz said no physical activity for three days.\"\n\n\"I'm not very active,\" he replied, his whole body relaxed on her bed. Except his penis, which began pulsing more strongly against her arm. \"Look, it's been weeks. Don't blame me.\"\n\n\"Control yourself, Sublieutenant Jeyne.\" Pixy was smiling in the starlit darkness, though, her hand moving down until she felt the warm fullness of his scrotum in her palm. He was warm and comforting under her hand. \"One would think you missed having a bedwarmer, or something,\" she chuckled.\n\n\"I don't think I was the only one, Subcommander Pfeiffer.\" He was right; he could feel her pussy dampening his thigh as she rubbed her leg along his. \"People have been very happy about the order being rescinded.\" She kissed his chest, her tongue soft on his nipple. \"Dwart's whores have never been busier.\"\n\n\"I'll bet.\" Pixy didn't care much about Dwart's whores just then, though, not with her mind full of Jeyne lying wounded on the bridge deck and his cock hardening beneath her searching fingers. \"It... would have bothered me. If you'd died.\"\n\n\"Yeah,\" he sighed. \"Me too.\" The felt it, the spasm, rippling up the soft skin of his penis as it lurched harder, thicker. \"Pixy...\"\n\n\"Felix,\" she told him softly, evenly, speaking past a thickness in her throat, \"there's nothing you can say right now that could possibly be as important as me, taking care of my wounded bedwarmer. Right?\" She smiled to herself, loving this, the knowledge that he was enjoying it: she felt it in the fingers of his hand, stretching into her hair; she felt it in the waves of shivering that tensed his muscles; mostly, the felt it in the twitch of his dick as her fingernails crept up to his his head, to the very tip, swirling the precum there.\n\nHe was smart enough to keep his mouth shut, and Pixy was reminded that was one of the reasons she liked him: he understood the value of silence. He smelled like sweat and antiseptic and the slipstream bag where they disinfected all the medical laundry. The smell invaded her mind and groaned back out of her mouth, her breath shivering his pubes, and then her lips were on him.\n\nHe gave a long, eager sigh as she felt him sag into her mattress, the suspense broken by her lips closing softly around his skin, her scalp prickling just a bit when he tightened his grip. She loved this, doing this for him, for anyone: she needed to please, and his fingers in her hair told her she was.\n\nHe hunched up, his head nudging against the back of her mouth like a dog digging into a fox den, but Pixy backed swiftly off in a string of spit. \"Fuck no,\" she snapped at him, wiping her chin. \"Don't you dare. No exertion, Mr Jeyne. I mean it.\"\n\nHe groaned, licking his lips above her. \"Then maybe you should go faster. Ma'am.\" She chuckled at that, her lips spreading once more, welcoming him into her as she began to suck hollow-cheeked. She savored his hissing moan, the scent of his pubes, the flavor of his skin. \"Or? Hell. Just do...whatever.\" Her answering giggle set his cock spasming, and once more he rammed his head back into the pillow.\n\nHer scalp was definitely pinching, now.\n\nShe sank over him slowly, at her own pace, just letting him enjoy it. He lay sprawled beneath with his whole body spread for her, so she brought her small-fingered hand back up to weigh his balls, rubbing softly, bringing him all the pleasure she could. And when her saliva rolled down his shaft to meet her hand, she slicked it all back upward, twisting his dick, her fingers meeting her mouth as Jeyne groaned.\n\nSo she swallowed, her own body getting into it now, the fluid starting to gum her upper thighs where her butt arched high above him on the bed. His head slipped past her tongue just like that, popping through and then sliding deeper as she sank down, pulsing him with her hand and her throat, head drawing back lazily. She could keep this up all day, she knew, bobbing her head for him; she'd have to, too, since the doctor would kick her ass if she let him fuck her.\n\nWell, no matter. She could take care of herself later.\n\nHe'd not last long. He never really did, with her, and this first time with her after almost a month with nothing but his hand? Already he was moving underneath her, restless as he groaned toward his orgasm, so Pixy smiled around his shaft. She sucked him steadily, seriously, deliciously, her nimble fingers back at his balls. Pixy had convinced herself that she could feel it there just before he came, and now he was moaning louder with his hand gripping her hair, so she kept her mouth clamped firmly around his meat and sucked harder.\n\nHis cum flooded her mouth with its thick, salty heat, spewing straight into her throat while she was already in mid-swallow. She bore hungrily down, sucking, her hand pulling insistently at his root now, making sure every drop left his surging balls and spurted from his twitchy dick. \"Fuck,\" he murmured low, thickly, his body melting.\n\n\"Mm.\" She swallowed some more, her belly feeling full already, then rose up off him with the last trickles of semen still boiling out of him. \"Not today, Felix.\"\n\n\"Such a tease.\" He released her hair and smiled at her, his hand finding her ass with the ease of long familiarity when she fell back alongside him. \"Too bad.\"\n\n\"No argument here.\" She wiped her lips on the back of her wrist, then sighed happily into the crook of his neck. \"I'll let you fuck me as soon as the doc says so. Believe me.\"\n\nHe snorted, tweaking her butt. \"I'll bet I could get Delayoye to fuck me,\" he mused. \"Or little Taiwan...\"\n\n\"I'll claw their eyes out and stuff them into their vaginas,\" Pixy snapped, and they laughed as the stars drifted past.\n\n* * *\n\nThanks! I hope you enjoyed this one. "
    ],
    "authorname": "Voboy",
    "tags": [
        "blowjob",
        "casual sex",
        "combat",
        "pixy pfeiffer",
        "science fiction",
        "space war"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/dry-no-lube-ch-04b-mutiny"
}