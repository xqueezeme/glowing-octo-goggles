{
    "title": "Miss Callahan Ch. 10-12",
    "pages": [
        "Chapter 10\n\n\"You can't be serious.\"\n\n\"Oh, but I am, Ems,\" Lauren says as she looks at her reflection in the car mirror and fixes some hair that has fallen out of her band. \"I'm very serious.\"\n\nShe looks over at me with a playful smile, which starts to turn more serious as her eyes rake down my body, settling on my still-bare tits.\n\n\"I think maybe you'll need a shirt on to go back into the office,\" she says as she leans into the backseat for my folded blouse.\n\n\"You're the one who took it off me in the first place,\" I say back.\n\n\"Are you mad about that, darling?\"\n\nLauren reaches over to help me pull my blouse over my head and gives me a quick peck on the lips before attempting to smooth down my disheveled hair.\n\n\"You know I'm not,\" I say as I look at my own reflection in the passenger seat mirror.\n\nWhen Lauren texted me on Thursday to \"grab lunch,\" I had a feeling where things would lead. The truth is I hadn't been able to concentrate that entire morning anyway. Images of the night before kept rolling around in my head, making work impossible.\n\nSo, when Lauren texted, I didn't hesitate to leave the building and jump into her car. When she parked in a secluded lot near the office, we didn't waste any time getting each other undressed.\n\nBut now it's Friday and we're back in her car. I know we should be more careful, but when I'm around Lauren, all logic flies out the window. I just hope people haven't started to wonder why we both come back from lunch around the same time, smelling like each other's perfume.\n\nToday we didn't even get a full hour. With the development team happy hour for Lauren happening later, and the strategy meeting we're having with Jackie soon, we couldn't take as much time as I would have liked.\n\nOnce I'm satisfied with my reflection and I'm sure that there's no trace of having just been fucked, I look back over at Lauren who's casually leaning against her steering wheel with a challenging look on her face.\n\n\"Why won't you do it?\" she asks.\n\n\"Because it's a work event,\" I say like it's the most obvious answer in the world.\n\n\"No,\" she says in a light tone. \"It's a work party. Celebrating me, I might add. So, you should do what makes me happy.\"\n\nShe leans over to my side of the car and brings her left hand up so she's cupping my cheek. She then slowly brings the same hand down my face and lets it rest lightly on my throat.\n\nLike the other night, she doesn't squeeze, but just the feeling of it there causes my breath to catch and my still-wet undies to get even wetter.\n\n\"I promise nobody will know. But having you submit to me in public like that, will please me very, very much. Don't you want to please your mistress?\"\n\nHer mouth is next to my ear as she speaks and she hasn't removed her hand. I can feel my chest rising and falling rapidly with every word she speaks and if she put her hand back into my pants, it wouldn't take long for me to come again.\n\nI turn my head slightly so I can look into her eyes. Eyes that a minute before had gone back to their original green but are suddenly dark once again. And as I look at her face, I know that I'll say yes. Because even if this is something I would have never done just a few weeks ago, pleasing Lauren now feels linked to my own pleasure.\n\n\"How does it work?\" I ask in a quiet voice.\n\nShe moves her thumb and fingers over my neck in soft movements as she leans in and gives me a long, slow kiss. After a moment, she moves so she can reach and grab something from her glove compartment.\n\nAnd there is no mistaking the object she pulls out for anything other than a sex toy. Not only is it bright pink, it looks exactly like a standard vibrator, with the addition of a rounded antenna on the end.\n\n\"You're just driving around with that in your glove compartment?\" I ask.\n\n\"No, silly girl. I bought it yesterday and put it in here today so I could give it to you,\" she says as she hands me the vibrator.\n\n\"Pink?\" I say as I turn it around in my hands.\n\n\"They didn't have blue,\" she replies before taking it from my hands. \"You slide this part inside of you,\" she says as she holds up the egg-shaped part on one side. \"This part,\" she says as she points to the antenna, \"will rest against your clit.\"\n\n\"How do you control it?\" I ask.\n\n\"From an app on my phone.\"\n\n\"You have an app on your phone for a remote vibrator?\"\n\n\"Not yet. But once you agree to wear this, I'll download it,\" she says as she plays with the ends of my hair, something I've noticed she seems to enjoy.\n\n\"You mean you haven't used this before?\"\n\nI don't look at her as I ask the question and I know my forced casual tone sounds just that\u2014 forced. I hope the jealousy I feel at the thought of Lauren playing this game with someone else in Austin isn't coming through.\n\n\"Ems, look at me,\" she says quietly.\n\nWhen I look up, her eyes are looking softly at me and she moves her hand down from my hair to hold my hand.\n\n\"I know this dynamic is new for you. But you should also know that I'm generally a monogamous person. I'm not saying we're there yet. But I'm also not sleeping around.\"\n\nI'm embarrassed she even had to say something. I'm not usually insecure about women, but I also feel lighter after hearing her words. The thought of Lauren touching another woman makes me irrationally anxious.\n\nI look down at the vibrator in my hand again. I want to please Lauren and the thought of being at her mercy while in a bar is becoming increasingly sexy and erotic.\n\n\"Will anyone be able to hear it?\" I ask, feeling too many things to address her comment on monogamy.\n\nShe gives me a long look but doesn't push the topic.\n\n\"No, it's practically silent. Especially in a bar.\"\n\n\"Okay,\" I say in a low voice.\n\n\"Yes?\" she asks.\n\nAdorable would never be the right word to describe Lauren's facial expressions, but the hopeful look she's giving me now makes her look youthful and I can't help but smile at her and nod.\n\n\"I'd wait until the bar to put that in. I would assume walking with it is a bit uncomfortable,\" she says.\n\n\"Yes, Miss Callahan,\" I say in a low voice as I slip the vibrator into my work bag.\n\n\"You'll send me a text confirming that you're putting it in.\"\n\n\"Yes, Miss Callahan.\"\n\n\"And you won't give any indication that it's in. Not to anyone.\"\n\n\"Yes, Miss Callahan.\"\n\nShe leans into me again, puts her hand behind my neck and pulls me in for a deep kiss. She wastes no time sliding her tongue into my mouth and I'm instantly moaning into hers. But she only lets it last for a few seconds before she pulls her face away so our lips are inches from each other's.\n\n\"Good girl. I'm very pleased. Now we need to get back. We have a meeting to get to.\"\n\nLauren leans back to the driver's side of the car, gives herself one last look in the mirror and pulls out of the parking space we were in.\n\nPart of me can't believe I'm two blocks away from my office building, agreeing to use a sex toy at a company event.\n\nBut this isn't the first time I've done something out of character in the name of Miss Callahan and I'm sure it won't be the last.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\n\"Michelle want to see us,\" Jackie says as she pops her head into my office. \"And then do you want to grab lunch?\"\n\nI turn my attention to my computer instead of make eye contact with Jackie. Lying to her about Lauren is starting to get to me, but I also can't tell her I spent my lunch hour getting fucked by the woman in her car. Not to mention yesterday's lunch hour.\n\n\"No, I ate already, but thanks. What does Michelle want?\"\n\n\"Not sure. I ran into her in the kitchen and she asked if we could both come chat with her. I'm guessing it's about Ellison.\"\n\nI move around my desk and to the door where Jackie is standing. As I move past her so we're halfway into the hall outside my office, she puts a hand on my shoulder and it feels much more intimate than a normal gesture from Jackie.\n\n\"You look nice today,\" she says as she looks down the length of my body. \"It seems to be a new trend these days.\"\n\nShe doesn't move her hand and when I look up into her eyes, they don't seem to hold their usual warmth. She's also standing much closer than seems necessary or normal for us.\n\n\"That feels like an insult, Jack. Are you implying I normally look like shit?\"\n\nShe instantly moves her hand off my shoulder and takes a step back so she's fully in the hallway.\n\n\"Of course not. I was implying\u2014\"\n\n\"I know exactly what you were implying. And I'm over it,\" I say, cutting her off before she can finish her sentence.\n\nI look down the hall to make sure we're alone. I don't want to have this conversation at work and now we're not even in the sanctity of my private office. I know as well as anyone that what happens in an Altitude hallway definitely doesn't stay there.\n\n\"Enough jabs about Lauren. Whatever is going on between you and me, it has nothing to do with her.\"\n\nI stop talking as someone from the client services team rushes down the hallway giving us both a quick hello as he passes.\n\n\"Look, this isn't the place for this. Let's talk outside of work,\" I say in a lowered voice.\n\nI know I'm being a hypocrite considering the things I've gotten up to with Lauren in this very office and right outside of it, but I just can't have an emotional fight with Jackie while we're supposed to be talking to our boss.\n\n\"Tonight? After the happy hour?\" she asks and I feel a sudden rush of guilt at the hopeful expression that's on her face.\n\nMy mind also goes to Lauren. I assumed we'd spend the night together, but I also know that I need to talk to Jackie. I don't want to lose my friendship and lately it feels like that's been slipping away.\n\nMaybe I can meet up with Lauren after that. Or maybe I'll live if I take one night off of sex. I force myself to concentrate on the conversation at hand before thoughts of sex with Lauren threaten to cause a blush that I don't need Jackie seeing in this moment.\n\n\"Sure. We can grab a drink somewhere,\" I say. \"Come on, Michelle's probably waiting.\"\n\nIt's not uncommon for Jackie and me to end up back at one of our apartments after work events to hang out and or watch a movie. But I suddenly feel uncomfortable at the thought of being alone with her. That probably shouldn't happen until we have a conversation about whatever it is that's going on between us. Getting a drink at a bar seems like a much safer bet.\n\nSetting plans for later seems do the trick to thaw Jackie's mood and by the time we get to Michelle's office, she seems to be her old self again.\n\nGuy is sitting inside Michelle's office when we arrive so we wait outside until he's done. Jackie leans against the wall across from her office.\n\n\"Did you know Michelle has a boat?\" she asks me as we wait.\n\n\"Everyone in Seattle has a boat,\" I reply.\n\n\"Yeah, but she named it Higher Altitude. If that isn't drinking the company Kool-Aid, I don't know what is.\"\n\n\"She seriously named her boat that?\"\n\n\"Yep. Think if I change the license plate on my car to Alti-Dude, I'd get a promotion?\"\n\n\"No. But it might get you an invite on Higher Altitude,\" I say back with a smile. It feels nice to be bantering with Jackie again.\n\n\"I'm sure Guy's gotten an invite,\" she says with a mischievous waggle of her eyebrows.\n\n\"For the last time, they're not sleeping together. Guy's gay.\"\n\n\"Guy's never said he's gay. Look at them in there,\" she subtly points to the window of Michelle's office. \"They're probably discussing their next tryst on Higher Altitude.\"\n\n\"First of all, I'm going to get you a thesaurus for the modern decade so you stop using words like tryst and floozy. Secondly, Guy came to the office dressed as a glitter bomb for Halloween. I'm pretty sure that was his coming out to us.\"\n\n\"That's homophobic, Ems,\" Jackie says as she points her finger at me.\n\n\"To say that glitter is gay?\"\n\nAt that moment, Michelle's office door opens and Guy is walking out of it with his perfect suit looking as crisp as ever. Guy gives us both a big smile as he leaves and I'm glad he has no idea what we were just talking about.\n\nMichelle is behind her desk in her huge corner office when we enter and we both automatically take the cushy chairs across from her.\n\nMichelle has been with Altitude for more than 15 years. She's definitely earned this office and I have a lot of respect for her in general. She's been a great mentor to me over the past two years and my fast trajectory is partly due to the projects she's given me.\n\nI don't know how old Michelle is, but she seems like she's close to 50 and I can't help but wonder if it bothers her that Lauren is now her boss. I don't know how old Lauren is exactly, but I'm guessing she's only a bit older than my own 35.\n\nI can't help but be impressed with how far Lauren has come at such a young age. I also know that right now is not the time to let my mind wander there. Any time I think about Lauren I have a tendency to blush uncontrollably.\n\n\"Thanks for the last-minute chat,\" Michelle says with a warm smile on her face.\n\n\"No problem, what's up?\" I ask.\n\n\"First of all, I hope you'll both be at the happy hour tonight to welcome Lauren. It'll be important for you both to create a relationship with her. She may not be your direct manager, but she will be leading our practice for the whole west coast.\"\n\nOut of the corner of my eye I can see Jackie give me a quick look before turning her head back to Michelle. I'm utilizing every tactic I ever learned as a kid in community theater to just sit still and not fidget at Michelle's words. Create a relationship with her. I'm pretty sure Michelle wouldn't condone the ways I've done that so far.\n\n\"We'll be there,\" Jackie says and I'm thankful that she jumped in since I suddenly seem incapable of speech. \"It's at Bell Town Brew?\"\n\n\"Yes, I've asked the team to gather there around 5. Should be a nice time,\" she says and her tone doesn't imply any resentment towards Lauren.\n\nMaybe Michelle is like everyone else in the company and also thinks Lauren walks on water. Even if she is her new boss.\n\n\"Now, on to business,\" Michelle continues. \"Some details around the Ellison pitch have changed.\"\n\n\"Well that's never a good thing,\" Jackie says, her words mirroring the feeling in my own stomach.\n\n\"No, it's fine. But they want to be here for the pitch. Same timeline, but the Ellison team will be here in person for it. We won't be going to Austin.\"\n\nMy mind starts going in all kinds of different directions. We usually prefer it when a client decides to come to our office for the pitch\u2014especially an office as impressive as Altitude. It's good for them to see the culture they're buying into.\n\nBut I've never heard of an out of state client traveling to the agency. It's hard even getting local clients to agree to come here. They almost always expect us to go to them.\n\n\"Why?\" is all I manage to ask.\n\n\"We don't know. They didn't tell us. But it seems their new CEO, Richard Ellison's daughter, is fairly hands on. She probably wants to see how this office differs from our Austin office.\"\n\nJackie looks over at me again and I'm sure she also picked up on Michelle's reference to Olivia as \"Richard Ellison's daughter.\" It seems we're all going to just continue to pretend Olivia doesn't have strong ties to one of our own.\n\nI also can't help but think back to my dinner with Lauren and what she said about Olivia needing to control things. Coming to Seattle to intimidate her ex-wife seems like just the thing someone like that would do. It's not lost on me how defensive I feel towards Lauren in this moment. But Olivia Ellison has no reason to travel here just to hear our presentation.\n\n\"Are they going to the other agencies' offices?\" I ask.\n\n\"We don't know for sure. But my contact over at Donnelly in San Francisco made it sound like they were still heading to Austin.\"\n\n\"Who will be here besides Richard Ellison's daughter?\" Jackie asks, emphasizing the last part.\n\nMichelle looks at Jackie for a beat before answering and I can't tell if she picked up on her tone, but she moves past it.\n\n\"Olivia Ellison, her PR lead, three board members and possibly some other more junior people. We'll get the official list sometime next week. Ultimately nothing about our process will change. But I wanted to give you both a heads-up since it may impact how we do things day-of. We can talk about it more next week.\"\n\nIt's clear the meeting is over so we both get up and head out of the office. I look at the time on my phone and see that we only have five minutes until our strategy session with Lauren and my stomach suddenly erupts in butterflies.\n\nBeing in a room with Lauren and Jackie alone for two hours isn't my idea of a fun Friday afternoon.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nMaybe one day seeing Lauren won't make my body instantly vibrate with the need to touch her, but today is not that day. Even after our \"lunch\" in her car, seeing her sit at the conference table in Anchor still makes my heart rate increase.\n\nLauren's dress looks impeccable, as if it just came from a dry cleaner. There's no sign at all that she just had sex in a car. Though I was the only one in the car who got truly undressed. Lauren's dress slid up her legs easily, negating that necessity in our rushed timeframe.\n\nAs Jackie and I move into the room, I know I should offer a casual greeting, but my eyes are busy feasting on the bare, gorgeous legs I can see under the table. Apparently, Lauren didn't get the memo that Fridays at the Seattle office are more casual, because she looks like she's ready for a pitch in her tight, professional looking black dress.\n\nI just saw the woman, just had her fingers deep inside me, and yet I can't stop staring. Her hair is still up and right now she has on the same glasses I saw her in earlier this week. She's the height of sophistication and sex and as we sit down, I finally force myself to tear my gaze away by fussing around with my laptop.\n\nWhen I look back up, Lauren's eyes are trained on me and I can't do anything but stare back. I can feel whatever is growing between us getting stronger with every moment we have and hiding it is starting to become impossible.\n\n\"Olivia will be here in person for the pitch,\" Jackie says, breaking the spell Lauren and I seem to be under.\n\nIf Lauren is annoyed by Jackie's lack of a greeting, she doesn't show it. She looks like her normal, confident self, sitting back in her chair with her legs crossed. She moves her eyes slowly from mine over to Jackie's.\n\n\"The pitch isn't in Austin?\" she asks.\n\n\"Nope. She'll be right here, in our office,\" Jackie says and to me, her tone implies that she's altogether too happy about the turn of events.\n\n\"Not just her,\" I finally say. \"The whole deciding team. Her internal PR lead, and a couple of key board members. We'll have names by next week.\"\n\n\"I see,\" Lauren says. \"We should probably stop talking about details. I don't want you to betray the NDA.\"\n\nI've gotten to know the different facial expressions of Lauren to know she's not happy with the information she was just given. Jackie probably can't tell like I can, but the slight shadow that comes over her face at any mention of Olivia just got darker.\n\n\"The pitch team isn't part of the NDA. I figured it was important information for the purposes of this meeting,\" Jackie says back with the usual bite she has when speaking to Lauren.\n\n\"Michelle just told us,\" I add and I feel like I'm forever trying to diffuse the tension between these two women.\n\n\"Even so, we have other things to discuss,\" Lauren says.\n\nShe hands us both a document.\n\n\"I've outlined the major players at Ellison in this document. I've also emailed you both a link that includes the ongoing PR work we've done out of Austin for Ellison, as well as the specialized campaigns. Please review those and we can go over them in more detail next week. But for now, I want to focus on this,\" Lauren says as she points down to the document she just handed us.",
        "Over the past two days, Lauren hasn't talked about Ellison much and because I'm trying to keep my relationship with her separate from this pitch, I haven't brought it up either. But seeing the detail on the page in front of me is just another reminder of Lauren's severe ties to this account.\n\n\"There are a few different decision makers at Ellison, some of the board are just as important as the executive team and we need to play to those men. We've already lost Olivia\u2014\"\n\n\"We?\" Jackie asks with a harsh laugh, cutting Lauren off.\n\nLauren turns her stare onto Jackie and it's one I've never seen. I've seen her be authoritative and serious, but I've never seen the scorching look she's giving Jackie.\n\n\"Jackie, think what you will of me on your own time. But I'm an Executive Vice President in this company and you need to respect that. If not, we'll have to find someone else who will.\"\n\nThe comment wasn't directed at me and yet even I still feel a tremble roll through my body at Lauren's words. Jackie doesn't answer but does give a small nod and scoots back in her seat. That seems to be enough for Lauren who continues.\n\n\"As I was saying, Olivia is a lost cause. But there are two big players who aren't. Alan Simpson is the Chair of the Board of Directors. You could say he doesn't always agree with Richard's direction of the company. Alan has been a huge influence on the company when it comes to sustainability issues. He'll care about this pitch and who they choose.\"\n\n\"And he'll for sure be in the room for the pitch?\" I ask.\n\n\"I guess we'll know next week, but every pitch I've ever done for Ellison's business, he's been there. But he's only one piece. His son, Simon, will most likely also be in the room. He's new to the board, but he owns a slew of companies in Austin, including one that makes electric trucks for larger manufacturing companies. That company hired Donnelly &amp; Schneider for their launch and rumor has it that Simon wasn't happy about the results.\"\n\n\"And what about their PR lead?\" Jackie asks, and her voice is noticeably less combative than it was before.\n\nLauren sighs before she answers. \"Unfortunately, from what I hear, the PR lead that we've worked with for years is being replaced by Olivia. We don't know who the new hire is, but we can guess that whoever it is, sits firmly in Olivia's corner. My guess is that she'll hire Madeline Rosario. Maddy is Olivia's right hand in her consultancy company. They're close and she's very talented.\"\n\n\"So our best bet is to appeal to these two men?\" Jackie asks, pointing down at the page. \"That's our secret weapon?\"\n\n\"No. But we can win those two over. They won't want to change PR agencies just to please Olivia. In fact, Simon will fight her if she makes a strong case for Donnelly, who's our biggest competition in this. But that intel is not our secret weapon.\"\n\n\"Then what is?\" Jackie asks.\n\n\"Emma,\" Lauren says, directing her gaze back onto me. \"If we have any chance of winning this, it's because we have Emma in the room.\"\n\nJackie looks like she wants to respond, but after Lauren's reprimanding earlier, she just sits there.\n\n\"Do you disagree?\" Lauren asks in a challenging tone when Jackie continues to just stare down at the document.\n\nFinally, Jackie looks up with her own steely gaze. \"No. Emma is the best there is.\"\n\nLauren's smile is so slow that it seems to take a full minute before her lips curve up, but despite the smile, her eyes still hold a challenge as she stares Jackie down.\n\n\"Yes, I know.\"\n\nI can't tell if I'm reading into things, but it suddenly doesn't feel like they're talking about PR anymore. After they continue to just stare at each other, I decide to put an end to the meeting.\n\n\"She's also sitting right here and isn't a fire hydrant. You don't both need to pee on me to claim ownership.\"\n\nI pick up my laptop and the document Lauren gave me and walk out of the conference room to my own office. I know I shouldn't have said that and just walked out. Even if I am sleeping with her, Lauren is an EVP and pretty much my boss. But the two of them have been like this since they met and I've about had my limit.\n\nIt's not the most ideal situation, but it would be so much easier if my kind-of-girlfriend and my best friend got along. Though I suppose everything would be easier if said friend didn't also have feelings for me.\n\nBy the time I get back to my office my head hurts. I fall into my chair and dramatically put my head against my desk. Maybe I can just sleep for the next hour until I have to go to this damn happy hour.\n\nIt's not long though before I hear someone come into my office and over to my desk. It only takes a second for her perfume to hit me to know that it's Lauren.\n\n\"Ems,\" she says sitting in the chair across from my desk. This is the first time she's ever actually used one of my office chairs.\n\n\"I'm sorry,\" I say. \"I shouldn't have just walked out like that.\"\n\n\"No, I'm sorry. I was childish. I was annoyed and I acted unprofessional.\"\n\n\"You weren't the only one. I'm going to get a drink with Jackie after our happy hour to talk about things.\"\n\n\"Things?\" she asks with a raised eyebrow.\n\n\"About what's going on with her feelings. Not what's happening between us,\" I say pointing back and forth between our bodies.\n\n\"Us, huh? I like the ring of that,' she says with a playful smile. \"She doesn't know then?\"\n\n\"She knows about the first time in your hotel. Not that we...reconnected,\" I say and I can feel a small blush shade my cheeks.\n\n\"You are so cute,\" she says, casually leaning her elbows on my desk. \"Are you planning to tell her we reconnected?\"\n\nI appreciate that Lauren is asking me instead of just demanding that I keep quiet like she did when I first found out about Olivia. Even though I also know that we do need to keep this quiet for now. At last until after the pitch, and even then, I don't know what we'll do. Office relationships aren't exactly condoned by HR.\n\n\"No. I don't want to lie to her, but I think after the talk we're going to have tonight, it wouldn't be kind to tell her. And selfishly, I don't want to risk the ramifications of anyone here finding out yet.\"\n\n\"Do you think she'd tell?\"\n\n\"Until you came into town, I thought she was over me. So, I honestly don't know. Do you think I'm a bad person for not telling her?\"\n\nLauren's eyes soften before she answers. \"No, Ems. Granted, I'm biased in this too since it wouldn't be good for either of us if this got out before the pitch is over. But all you've ever expressed to me is an immense care for Jackie. I don't think you're a bad person at all.\"\n\nWe both look into each other's eyes tenderly for probably way too long considering where we are. Finally, Lauren gives her head a slight shake as if bringing herself out of a daydream. She gets up from the chair and leans over the desk.\n\n\"I'm riding with Michelle to the bar. See you there?\"\n\nI simply nod up at her.\n\n\"Good. And don't forget to bring our pink friend,\" she says with a wink, leaving me blushing in my office as she walks out.\n\nChapter 11\n\nLauren: Where are you?\n\n \n\nMe: So needy. \n\n \n\nI laugh at my own text. Which isn't even funny, but I'm already feeling a little tipsy from the glass of champagne I downed when I first got to the bar. I'm here before anyone else from our team since I needed a moment alone before I had to socialize. In general, I believe champagne should be sipped, but I'm full of nerves right now and I needed something to calm them.\n\nLauren: Cheeky. Don't forget whose mercy you'll be at tonight.\n\n \n\nAnd there it is. The reason for my nerves. Well that, and my impending conversation with Jackie. But those are a very different set of nerves. This game with Lauren is making me nervous, but also incredibly excited. I'm thankful I wore loose pants today or I don't even know how this would work.\n\nMe: I'm at the bar.\n\nI send the text accompanied with a photo of myself and my glass.\n\nLauren: You look cute. And slightly drunk. How many drinks have you had?\n\nMe: Just one. But someone made me skip lunch. Are you in charge of my alcohol consumption now?\n\nI don't know if it's because of the alcohol running through my system or if I'm just more emboldened with Lauren in general, but I feel more confident than I usually do over our texts and I'm in the mood to push her a little.\n\n \n\nLauren: So sassy tonight. Would you like me to be in charge of that darling?\n\n \n\nI don't respond right away. I take the final sip of my drink as I look down at her question. I know she's playing, but her words also make me think.\n\nHaving never been involved in any dynamic like the one I have with Lauren, I don't know how far it extends outside the bedroom. But even with that ambiguity, I still feel a rush of excitement over the possibilities that being with Lauren holds. I decide not to address her comment directly.\n\nMe: I'd like for you to get here. When is that happening?\n\nLauren: Now who's needy?\n\nI can see she's still typing so I wait.\n\nLauren: I'm leaving the office now. Are you ready for me?\n\nI know exactly what she's talking about and my eyes subconsciously move over to the bag that's holding the vibrator.\n\nMe: Not yet...\n\nLauren: I suggest you do that soon. Michelle says there's a table under her name you can grab for us.\n\nMe: Michelle knows we're texting?\n\nLauren: She thinks we're coordinating. She doesn't know how naughty you're about to be.\n\nMe: I'm not the only naughty one here.\n\nLauren: Now I'm starting to get the impression you're trying to get a spanking.\n\nI can't even tell what I feel more strongly\u2014 the wetness that just pooled in my panties or the blush that I can feel heating my cheeks.\n\nI'm careful not to press any of the keys on my phone in case she can see my indecision on how to answer. I wasn't specifically aiming for a spanking, but now that she's mentioned it, my mind is almost hyper focused on the memory of her hand coming down on my ass.\n\nMe: Is it working?\n\nLauren: Go to the bathroom and get ready for my arrival. We'll talk about your blatant sass later.\n\nI smile at my phone and suddenly the idea of inserting a vibrator she has control over isn't as nerve wracking. It's fucking hot. In the back of my mind I know it's probably a bad idea with Jackie's imminent arrival and our plans for after this. But like so many things right now, pleasing and playing with Lauren overrides all other thoughts. I send Lauren a final text.\n\nMe: Yes, miss. Going now. See you soon.\n\nI pay for my drink and head to the bathroom before I find the hostess so I can grab the reserved table. Every step that takes me closer to the bathroom makes my pussy throb harder.\n\nLuckily the bathrooms in this bar are private so it won't be hard to get what I need out of my bag. As I take out the vibrator, I shake my head and smile again at Lauren's vibrant color choice. She never seemed like the pink type.\n\nI shouldn't be surprised how easily the vibrator slips into my pussy. Her texts about spanking me did its job to give me all the lubricant I need. In fact, I think I've been in some kind of perpetual state of wetness since Lauren arrived back in Seattle.\n\nIt's not as uncomfortable as I thought it would be but I'm also anxious to get to a seat so I don't have to stand or walk with in for too long. I'm suddenly incredibly thankful I got to this event so early.\n\nAs I head back out to the front of the bar, I don't see any of my colleagues and assume they're still not here yet so I l give Michelle's name to the hostess who takes me to a long table in the back of the room.\n\nMy nerves spike again as I sit there and wait for the others to arrive, which doesn't take long. Michelle and Lauren stride up to the table first, but I can also see Jackie and two other designers entering the front of the bar at the same time.\n\nWhatever confidence I found in the bathroom as I was putting the vibrator in, vanishes the second I look up at Lauren and see her teasing smile.\n\n\"Thanks for grabbing the table, Emma. We had a briefing call with the San Francisco office that went over,\" Michelle says.\n\n\"No problem. I got here early.\"\n\nLauren doesn't say anything as she takes the seat at the head of the table, but she hasn't lost that smile. It gets slightly bigger as she sets her phone on the table, looks at it pointedly, and then brings her eyes back up to mine.\n\n\"Are you ready?\" she asks me.\n\nMy mouth opens and closes and to Michelle, I must look scandalized by the question. But Lauren quickly follows up her statement with another question. \"Or have you already ordered yourself something?\"\n\nThe teasing smile still hasn't left her face and I can tell that she's enjoying how much she's making me squirm.\n\n\"No. I haven't but the server should be by,\" I say, looking at Michelle instead of Lauren.\n\n\"Good. I could use a large glass of wine,\" Michelle says as she settles into the seat next to Lauren.\n\nIt's not lost on me that Lauren's seat at the head of the table, gives her the perfect cover to text or play with her phone. It would have been a lot harder if Michelle was sitting right next to her.\n\nSoon Jackie and the two designers I saw enter with her are at the table and taking their seats. I'm not surprised but am slightly annoyed that Jackie decides to sit right next to me. Which is irrational since we always end up sitting next to each other at team happy hours.\n\n\"Hey,\" she says to me as she slides onto the chair. \"You left the office early.\"\n\nHer tone is tentative, almost nervous. And I'm sure she's thinking about our plans later. Or maybe she's still feeling weird about the way I left Lauren's office earlier.\n\n\"Yeah, I decided to head out after my last call,\" I say back.\n\n\"Hey guys,\" Jackie says to Lauren and Michelle across the table.\n\nAnd that was probably the friendliest greeting I've ever heard her deliver to Lauren. Either she's listening to what Lauren said earlier or she's behaving in front of Michelle, but either way I'm grateful we can get through this happy hour without tension. Well, a certain kind of tension. I certainly feel a very different kind of tension from the woman sitting two chairs down from me.\n\n\"Hey Jackie,\" Michelle says with a smile on her face. \"If this place isn't good, I told everyone they can blame you for the recommendation.\"\n\n\"And if it's good? Do I get an invitation on your boat?\"\n\nI have a feeling Jackie's trying to make me laugh, given our conversation earlier about Michelle's boat name, but I just look ahead. The last thing I want is for my boss to know I was making fun of her.\n\n\"Not a chance, but keep trying,\" Michelle says back with a wink.\n\nThree more people from our team filter into the bar and take seats at the table before the server comes over to take our drink order. After I ask for my usual glass of champagne, I notice Lauren put her phone in her lap out of the corner of my eye.\n\nSarah Alvin who leads our research team and was involved in the Interplay pitch is the last to arrive and takes the chair next to mine. Besides Jackie, Sarah is probably the person I know best at Altitude. The three of us are the only lesbians in the office and the rare times I go out to lesbian parties, it's usually with them.\n\nI've always appreciated Sarah's style and swagger. She's much more masculine than Jackie and I are and fits in with the cool, hipster Seattle vibe that I've never managed to adopt.\n\n\"Sorry,\" she says as she puts her motorcycle helmet on the seat next to her. \"Wanted to find a secure area to park my bike. This street is sketchy. Who chose this bar?\"\n\n\"That would be Jackie,\" Michelle says back. \"She claims the bars I choose are too corporate.\"\n\n\"Sarah just loves an excuse to remind people that she rides a motorcycle,\" Jackie says.\n\n\"I don't need to tell people that, Jack. I have a helmet,\" Sarah says as she points to the chair next to her.\n\n\"You could just carry that around,\" Jackie quips back quickly.\n\n\"Who would do that?\" Sarah asks with a laugh.\n\n\"You'll have to excuse them,\" Michelle says to Lauren. \"These are my Three Musketeers. Research, strategy and design. I can't take them anywhere. If they weren't so good at making us money, they'd have been fired a while ago.\"\n\n\"I think there was a compliment in there somewhere,\" I say back to Michelle with a playful smile.\n\n\"I can see that,\" Lauren says to Michelle. \"I'll keep an eye on them.\"\n\nDespite her use of them word \"them\", her eyes are settled on me. Luckily, it's in this moment that the server comes back with our drinks.\n\nAs I reach up to grab my drink from the woman, I suddenly feel a very light vibration hit my clit. Even with the knowledge that it was coming soon, the feeling of the activated vibrator makes me jerk my hand as I grab my flute, causing some of the champagne to spill over. The intake of breath that suddenly escapes my mouth doesn't help hide my surprise.\n\n\"You ok, Ems?\" Lauren asks but her voice sounds anything but concerned.\n\n\"Yeah, how many did you have before we got here?\" Jackie asks.\n\n\"Just one,\" I say and I can feel that my face is bright red as I take the closest napkin to wipe up the spill.\n\nThe vibration stops and I can feel my pussy throbbing for more.\n\n\"Leave her alone,\" Sarah says as she grabs another napkin and helps to wipe up some of the champagne for me. \"Have you seen the server? I would have spilled too.\"\n\n\"Ok, enough objectifying women in front of your bosses,\" Michelle says, but I can tell from her tone that she's not serious.\n\nThe agency world can be an interesting culture. What constitutes as \"professional\" topics of conversation at a normal company are pushed in this world. But usually you keep those conversations to your own level so I also understand Michell's comment. Sarah and Jackie often just don't care about the hierarchy or politics of the agency.\n\n\"Yeah, yeah,\" Sarah says with a wink to Michelle.\n\n\"How about a toast before Emma loses any more of her drink?\" Lauren says with a smile to me.\n\nI still haven't recovered from the first vibration and can only give her a tight smile back. I hope she's not expecting me to be the one to give a toast. Considering the effort I'm putting into not breathing heavily, speaking is completely out of the question.\n\nI can see Lauren's hand move under the table as she holds up her drink with the other hand and I don't even have time to prepare myself before I feel the vibration back on, only slightly stronger this time.\n\n\"Thank you all for giving me such a warm welcome these past few weeks. I know it's not always easy having someone new come in, but I'm very excited to be working with you all. I think we'll do some great things together,\" Lauren toasts, landing her gaze on me.\n\nAs she stops talking the vibration stops again. Everyone puts their glasses in together and once I've taken a sip, I have to put my hands on my legs because I can tell they're shaking slightly. I close my eyes for only a second and breathe in slowly through my nose.\n\nThis is such a strange sensation. My mind is aware that I'm surrounded by co-workers, but my body is buzzing with arousal and every time the vibration starts, I can feel myself getting even wetter. I feel like I'm physically sitting there, but mentally, I'm on an entirely different plane than anyone around.\n\nI'm barely aware of the conversation that unfolds naturally around me. I'm vaguely aware that they're discussing Lauren's move, but the details of what's being said don't land anywhere solid in my brain.\n\n\"That was the one that Emma presented at actually,\" Sarah says and her use of my name jars me from my hazy, orgasmic thoughts.",
        "\"What?\" I ask.\n\n\"Thanks for joining us, space cadet,\" Jackie says while giving me a strange look.\n\nI have no idea how long I was just sitting there, but everyone's eyes are suddenly on me.\n\n\"The South by Southwest presentation you did,\" Sarah says. \"Lauren's team hosted the SXSW Altitude party that year.\"\n\nMy eyes go to Lauren who isn't even trying to hide the amusement in her own bright green ones.\n\n\"But I didn't get a chance to see your presentation,\" she says to me, not breaking eye contact.\n\n\"She was amazing,\" Sarah says. \"The room was packed and they had her in one of the large conference rooms. It was the first time I got to see Emma on stage and man, she's good.\"\n\nIf I wasn't so focused on Lauren's face, I probably would have blushed at Sarah's words. But as it is, I can't even manage to say thank you.\n\n\"I've learned that for myself since being in Seattle,\" Lauren says as she breaks eye contact and looks over at Sarah before bringing her eyes back to me. \"What was the presentation on?\"\n\n\"Basically, it was\u2014\"\n\nThe vibration starts again and this time it catches me even more off guard than the last time since I didn't notice Lauren's hand slide down to her lap.\n\n\"Um,\" is all I'm able to get out after that.\n\nI put my hand up to my forehead for a moment and take a breath through my nose. The vibration setting is too low to get me to an orgasm, but just strong enough that I'm losing all ability to form words.\n\nJackie moves her hand up to feel my forehead and presses her fingers in before she brings them down to push some of my hair behind my ear.\n\n\"Are you feeling ok? You look like you're burning up.\"\n\nI look back to Lauren whose eyes are narrowed slightly as she stares at Jackie's hand now resting on my shoulder, playing with the ends of my hair.\n\n\"I'm fine,\" I say to Jackie, shifting so she has to move her hand. \"The champagne just went to my head for a moment.\"\n\nThe vibration continues but I'm not going to let Lauren completely win this game so I grip my leg as I look back to her. I take in a breath before I attempt to speak.\n\n\"As I was saying, the presentation was about how agencies can leverage data to be better storytellers. And the ways we can use insights to do that.\"\n\nMy presentation was far more complicated than that, but that's about as much as I can get out as the vibration continues at a steady beat against my pussy. I breath through my nose again and give her what I hope, is a subtly pleading look. If she doesn't turn it off, I'm going to come.\n\n\"Very interesting,\" Lauren says back and I can't tell if she's talking about my presentation topic or how clearly flustered I am.\n\n\"That's the only time I've been to Austin,\" Sarah chimes in again and I'm grateful she's able to keep the conversation going as I try to hold off an orgasm. \"What's the office there like?\"\n\nMichelle is always a little bit awkward at company events and Jackie seems to close up any time Lauren is around. Luckily Sarah seems oblivious to anything being amiss and seems happy to drive things along. For an analyst, she's surprisingly skilled in social situations.\n\nFinally, I see Lauren's hand go down to her lap and the vibration stops again. I let out another breath that I hope everyone doesn't notice.\n\n\"Well, Austin is very different outside of March when all the South by Southwest activity is happening. It's a lovely city though. Great food. The Austin office has much of the same feel as Seattle. A more casual, laid back vibe than you'd see in one of our east coast offices.\"\n\n\"Oh, so most of the senior men are sleeping with the junior women in Austin too?\" Sarah asks.\n\nI can see Jackie glance my way, but I ignore it. What Sarah is referring to isn't the same at all as my situation. There's only one level in between Lauren and me. Sarah is referring to the many married men who sleep with women far too young for them at company retreats and things like that.\n\n\"You know we have a strict fraternization rule,\" Michelle scoffs.\n\nI hear Jackie laugh beside me. \"Come on Michelle, it's not that strict.\"\n\n\"Yeah, you should tell that rule to the creative team,\" Sarah jokes.\n\n\"How did the creative team get brought into this?\" Jackie asks with mock offense. \"We're too busy with our coloring books. Tell it to the development team,\" she adds, nodding her head in my direction.\n\nLauren, who only moments before was smiling at the quick banter, has a sudden crease between her brow. I turn my head to Jackie and give her a subtle look that I hope conveys my need for her to shut up.\n\n\"Emma, defend your honor. You can't let a lowly designer throw you shade,\" Sarah says, clearly not aware that the joke is over and the table is tense.\n\n\"Emma, you don't need to defend anything. Lauren is going to start to think we're all as unprofessional as these two,\" Michelle says as she points to Jackie and Sarah.\n\nJackie lets out a harsh laugh at Michelle's comment. \"I'm sure Lauren isn't that delicate.\"\n\nLauren gives Jackie a slow smile. \"No, Jackie. I'm not.\"\n\nI can't take the tension anymore and my pussy feels like it's on fire so I stand up. The others at the table look at me expectantly and I can see that Jackie looks concerned again.\n\n\"I'm going to get a glass of water from the bar. Our server hasn't been by in a while. Any one need anything while I'm up?\"\n\nWhen nobody does, I leave the table without looking at Lauren or Jackie. The bar is close to our table, but luckily there's a wall in between so I can have a moment to myself. I ask the bartender for a glass of water and sit with it for a moment before I head back to the table.\n\nAs I down the last of the water, I feel the vibration pick up again, but this time it's strong. I can't do anything but sink back onto the bar stool and put my hands on the top of the counter to grip.\n\nLuckily, it's still early and the bar is relatively empty. Not that it would matter with how fast paced the vibrations are coming in. No amount of people near me would be able to stop the orgasm that's about to hit me.\n\nAnd hit me, it does. I close my eyes and just hope the bartender stays busy at the other end. I'm sure to anyone watching, I look like I'm about to be sick. I can't help but lean forward and rest my head on my hands on the bar as I let the familiar wave roll through me.\n\nIt's not as intense as when it's Lauren's own fingers or mouth, but the fact that I just came sitting at a bar alone while my co-workers are just feet away, has my pussy throbbing harder than it has, maybe ever.\n\nI'm about to go to the bathroom to take it out when the vibration finally stops. And I'm thankful because I couldn't handle the sensation anymore and I honestly have no idea where I would have hidden it in the bathroom. The last thing I want is for some poor bar employee to find my vibrator in a fake bathroom plant.\n\nAs soon as I feel like I can walk again, I leave the empty glass on the bar and head back to the group. Lauren is now down the table talking to some of the other people that have filtered in. She barely looks up at me when I come back in, which I'm thankful for because my face is already red enough.\n\n\"All good?\" Jackie asks as I sit back down.\n\n\"Yes, much better,\" I reply.\n\n\"Do you want to stay here longer or can we cut out?\" she asks.\n\nIt's not unusual to go to an office happy hour for just one drink so I know we won't look rude if we leave now, especially on a Friday. I subtly look down the table to see that Lauren is still engaged with the others. Her phone is now on the table so I'm guessing our game is done. Which is good since I can't handle another public orgasm.\n\n\"Let's go,\" I say. \"Where?\"\n\n\"There's a dive bar at the end of the street I've never been to. Want to grab a drink there?\" she asks as we stand up from the table.\n\n\"Sure. Let me just run to the bathroom really quick.\"\n\n\"I'll wait outside for you.\"\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nWashing the vibrator doesn't do anything to lessen my arousal. Even with the orgasm I just had at the bar, the whole scenario has only made my hunger for Lauren stronger. Submitting to her like that was so hot and erotic and I want to push it further. I want to explore so many more sexy scenarios with her.\n\nAs I'm drying the vibrator, I hear a text come into my phone and I instantly know who it is.\n\nLauren: All situated in there, darling?\n\n \n\nMe: I'm so turned on still I may come just walking to the next bar.\n\n \n\nLauren: Without my permission again?\n\n \n\nI pause before answering. I assume Lauren knows that the setting she put the vibrator on when I walked away from the table earlier would make me come. But I decide to play along.\n\n \n\nMe: Again? I have no idea what you could mean.\n\n \n\nLauren: Next time I have an orgasm, I'm going to call it \"going to the bar for a glass of water\"\n\n \n\nBusted. Though to be fair, that was probably what Lauren was aiming for when she put that thing on full blast. She sends a follow-up text when I don't respond.\n\nLauren: I'll take your silence as confirmation.\n\n \n\nI may have had an orgasm, but it wasn't enough. I need more. Drinks with Jackie won't take all night, in fact, it might not take much time at all depending on how it goes. And I know I won't be able to think about much else if I don't get to see Lauren again tonight. Alone, with no time constraints.\n\nMe: I want you to come over. Later.\n\nI quickly send a follow-up text, knowing my first request would be seen with harsh words if I don't ask nicely.\n\nMe: Please.\n\nLauren: Is this a preemptive booty call?\n\nI don't have much time to banter as I leave the bathroom and head to the entrance. I don't want Jackie to see who I'm texting so I stop at the front door of the bar.\n\nAs I lean against the wall so I can finish texting, my eyes catch Lauren's across the other side of the room. She's still sitting with Michelle and Sarah and I can't see her phone, so it must be nestled in her lap. We maintain intense eye contact for a moment before I go back to my phone.\n\nMe: I need you, miss.\n\nI bring my gaze up from my phone to see Lauren looking down to her lap. When she brings her eyes back to mine, her face looks serious but there's also a hint of something I've become familiar with\u2014 arousal. She picks up her phone to text and a moment later, it comes into my own.\n\nLauren: Text me your address. Let me know when you're on your way home.\n\nMe: I will, miss.\n\nLauren: See you soon, baby.\n\nI don't look at her again as I push off the wall and head out to meet Jackie. I have to remind myself that this conversation with Jackie is important and she needs my undivided attention.\n\nMy throbbing pussy and demanding Miss Callahan will have to wait.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\n\"What did Guy do?\"\n\n\"He put the poor kid on suspension. But he didn't fire him.\"\n\nJackie takes another long drink of her beer before she continues with her story.\n\n\"But the client apparently sent the whole team a photo of Zach sleeping on camera and said he won't be paying for that meeting.\"\n\n\"Wow. I mean, I did some stupid stuff when I was first starting out, but nothing like falling asleep on a client video call.\"\n\n\"Yeah, so that's how my day ended. How was yours? You get through the competitive analysis for Ellison?\"\n\nI take a sip of my own beer and give a small shudder. I don't generally drink beer, but I also refuse to order champagne at a dive bar.\n\n\"Yes, and I started working on those slides for the pitch. Based on what Lauren told us, I think we'll really need to emphasize for the board members present just how much Donnelly has failed sustainability messaging in the past.\"\n\nJackie nods, looking at her beer, but doesn't say anything. I know we're not here to talk about work and bringing up Lauren's name just now probably didn't help. I'm stalling but I'm also scared to talk about what we need to talk about.\n\n\"When will the pitch rehearsals start?\" she asks.\n\nApparently, Jackie isn't eager to broach the subject of our relationship either.\n\n\"Two weeks. We'll spend the rest of next week finalizing the campaign ideas and research. Then we'll start on the presentation with your brilliant touch, of course.\"\n\nShe gives me a tight smile before looking back to her beer bottle.\n\n\"Do you think you'll stay at Altitude?\" she suddenly asks.\n\n\"I haven't really thought about it lately. I don't have any reason to leave and my trajectory is good. Why? This isn't your way of telling me that you're quitting is it?\"\n\n\"No,\" she says with a real smile and it's nice to see one cross her face again.\n\n\"Because if that's what's going on\u2014\"\n\n\"It's not,\" she says, cutting me off. \"I guess sometimes I wonder why you stay at Altitude. You could easily have Michelle's job and probably even Lauren's. You're more talented than both.\"\n\nWhat starts as a compliment quickly ends as another jab at Lauren and I've officially had enough. We came here for a reason and I'm going to get to that reason.\n\n\"So, is that it then? You're upset I work at Altitude?\"\n\n\"What? No,\" she says quickly.\n\n\"Then can we talk about the real issue? Whatever it is you've been feeling lately.\"\n\nShe continues to play with the label on her bottle so I lightly put my hand on her wrist.\n\n\"Jackie, come on. I know there's something going on and I wish you would just talk to me.\"\n\nShe looks down at my hand for a beat too long, so I move it back. I don't want a simple touch to give her the wrong idea. She brings her eyes up to mine and has a serious, un-Jackie-like expression on her face.\n\n\"There's nobody I enjoy spending time with more than you, Ems. I guess lately I've been feeling that more and more. And I thought maybe the reason it ended with us before was because we work together.\"\n\nShe doesn't look at me as she says it and instead moves her eyes back the now empty bottle in front of her.\n\nI look at her profile before I answer. Jackie is beautiful. When I first met her, I was completely taken by her long dark hair, equally dark eyes and full eyebrows that seem to show every emotion she feels. Jackie's parents are both Brazilian and were more than generous in the genetics department with their only daughter. And if beauty was enough, then Jackie would be perfect.\n\n\"It didn't work for a lot of reasons, but I don't think our jobs were the issue,\" I say carefully back.\n\n\"Then what was?\"\n\n\"I just don't think we have the right chemistry. We're too similar.\"\n\nI don't know how to say what I really feel. I don't even know how to put it to words. Lauren has opened my eyes to so much and I know that Jackie and I are just not compatible that way.\n\n\"Isn't being similar and having things in common a good thing in a relationship?\" she asks.\n\n\"I guess so, but not in all ways\" I say, fumbling over my words. \"Jackie, I love spending time with you too. And we make amazing friends. But there isn't fire between us. I need that.\"\n\n\"Is this about Lauren?\" she asks, spinning her stool towards me.\n\n\"No, this has nothing to do with Lauren. That's what I've been trying to tell you.\"\n\n\"How can you say that when I can literally see the sexual tension brewing between you two?\"\n\n\"Stop it. You're not seeing anything.\"\n\n\"How about the way she was eye fucking you all through that happy hour?\"\n\n\"Jackie,\" I say on a sigh.\n\nMy mind races back to my conversation this morning in Lauren's car about people at the office finding out. Lauren certainly didn't help things by looking at me like that all through the happy hour and I'm not surprised Jackie noticed. But it's also none of her business and I'm sick of having to defend myself.\n\n\"Ems, please tell me you're not stupid enough to sleep with her again?\"\n\n\"Seriously, Jackie? You buy me a drink, tell me you have feelings for me and then finish that up by calling me stupid?\"\n\n\"Come on, you know that's not what I meant.\"\n\n\"No, I'm pretty sure that is what you meant.\"\n\nI take a few deep breaths before I continue. Jackie's face looks shattered, but I also know what I need to say to her. I don't want to say it angry, even though her comment still upsets me, so I take the last sip of my beer before pushing it aside.\n\n\"I don't have the same feelings you do. I love you very much. But just as a friend. My best friend, Jack. But that's all it will ever be and who I decide to sleep with, is just none of your business.\"\n\n\"So that's it then,\" she says in a flat voice I'm not used to hearing from her.\n\nShe moves off the bar stool and puts on her coat.\n\n\"Jackie, wait. Please don't leave like this.\"\n\nShe walks a few steps towards the door and then turns around. Her face looks hard and the voice that comes out matches it.\n\n\"This is the problem with being exes, co-workers and friends. I have to see you on Monday no matter what, we do work together. But beyond that, I need space.\"\n\n\"If that's what you want,\" I say back quietly.\n\n\"It is,\" she says as she takes one small step back in my direction. \"She's just using you. Probably to get back at her ex-wife. I'll try not to say 'I told you so' when she breaks your heart.\"\n\nShe turns back towards the door and leaves the bar. I turn on the stool and stare at the wall for a few minutes thinking. I could order another drink, but I know that won't help anything.\n\nIt's obvious Jackie meant to hurt me with her last comment, but all it did was make me want to prove her wrong. And there was one way to do that. I pick up my phone and send a quick text before leaving the bar.\n\nMe: On my way home, miss.\n\n \n\n \n\nChapter 12:\n\nI'm just putting on a comfortable pair of shorts and a tank top when I hear the knock on my front door. I didn't change my panties, knowing Lauren would probably steal those for whatever collection of mine she has.\n\nI take a deep breath before pulling open the door. I'm tired from the emotional conversation with Jackie, which went way worse than I thought it would, but I can't help how excited I am to see Lauren again. While my mind may have been occupied for the last hour, my body has not forgotten the thrill from the vibrator experience.\n\nI open the door to see Lauren standing there in a long black coat that goes down to her ankles. I can see an incredibly tall pair of stilettos sticking out from the coat and in her hands is a black duffle bag. But what makes my heart rate quicken is the dark, authoritative look she's giving me. I don't' need to be told that this isn't Lauren anymore, this is Miss Callahan.\n\n\"As nice as this hallway is, you could also show me the rest of the apartment,\" she says and pushes her way past me without an invitation.\n\nI embarrassingly follow her into the living room as she walks through the apartment like she's been there before.\n\n\"Can I take your coat?\" I ask her.\n\nShe turns suddenly on the spot and gives me a pointed look.\n\n\"Miss?\" I add quickly.\n\n\"Better,\" she says with a quirked eyebrow.\n\nShe slowly moves her hands up her long coat and begins unbuttoning it, top to bottom. As it slides off her shoulders at a painstakingly slow pace, I can finally see what's under the coat.\n\nI feel like I stop breathing as I look at Lauren standing there in a pair of leather pants that are so tight, they look as if they were painted onto her body. On top she's only wearing a bra that looks like soft leather with three metal snaps on the front of it.\n\n\"I love the way you look at me,\" she says in a low voice as she brings me her coat.\n\n\"You are really hot, miss,\" I say back as I take the offered coat.\n\nAt that she gives a low chuckle. \"Eloquent as ever, darling. Go put that away.\"",
        "\"Would you like a tour, miss?\" I ask when I come back into the room from the hallway closet.\n\n\"Maybe later. For now, take me to your bedroom.\"\n\nI'm glad I had a few moments when I got home from the bar to straighten up my room. I didn't know we would end up here when I left for work this morning and my usual mountain of discarded clothing options were all over.\n\nWhen we get to the bedroom, Lauren puts her duffle bag down by the door and then goes to grab a pillow from the head of the bed. She places the pillow on the ground by the foot of the bed.\n\nI notice that Lauren doesn't even bother to give my room an appraisal the way most women would upon entering a lover's room for the first time. Lauren is on a mission tonight and I'm just happy to be the target of it.\n\n\"Take your clothes off and get on your knees.\"\n\n\"Yes, miss,\" I say as I quickly take off my shorts, panties and tank top, fold them, and put them on my dresser on the other side of the room.\n\nWhen I get down on my knees, Lauren doesn't say anything. She simply moves over to me and begins to gently pull my hair into a ponytail again. I close my eyes as the feeling of her fingers in my hair sends goosebumps down my spine.\n\nOnce she's done, she moves her fingers gently down my face and puts both hands on my shoulders.\n\n\"When we're in a play session, this is how I want you to begin each time. Clothes off, hair up, on your knees, and hands behind your back. Understand?\"\n\n\"Yes, miss,\" I say back.\n\nShe leans down and slides her tongue into my ear before moving to nibble on the lobe. The sudden feel of her hot tongue against me elicits and instant moan from the back of my throat.\n\n\"Do we need to review our rules or do you remember them?\" she asks and I can feel her mouth against me.\n\n\"I remember them,\" I whisper back with my eyes closed. All I want is to feel her tongue lap at my ear again.\n\n\"Say your safe word out loud,\" she says as she comes back around to my front.\n\n\"Gaston, miss,\" I say, looking up at her.\n\nHer serious expression is broken for a moment and I can see the edge of her mouth lift slightly in a smile.\n\n\"Good girl,\" she says as her face resumes its serious expression.\n\nFrom this angle, Lauren looks so powerful and sexy. Her outfit isn't what I imagine a stereotypical dom wearing, but of course, most of my knowledge comes from bad TV and movies. Lauren's outfit is simple but makes her look like the epitome of control and sex.\n\nI can hear her move over to her bag, but I can't see what she brings out of it. When she comes back around to me, she's holding a riding crop. I've ever used one, but I'm also not too sheltered to recognize what it is.\n\n\"Do you know what this is?\" she asks.\n\n\"A crop, miss,\" I say back.\n\n\"Good,\" she says as she brings the tip of the crop slowly down my arm and then moves it to the other arm to repeat the motion. \"We need to discuss what happened at the bar when you left for water. Tell me.\"\n\nI close my eyes and let out an involuntary moan as she moves the crop down my front. She starts at my neck and then slowly brings the tip down my torso, careful not to let it touch either tit. Once she reaches my pelvis, she stops and presses the tip more firmly into me.\n\n\"Or maybe, you enjoy this too much,\" she says as she takes the crop completely off my body and takes a step back.\n\nShe extends her arm so she can move the tip of the crop under my chin and gently lifts it so I'm forced to make eye contact with her.\n\n\"I forgot that my sweet girl isn't good with distractions. Now tell me. What happened at the bar?\"\n\n\"I went to get a glass of water,\" I say in a whisper. \"As I was finishing it, the vibrator came back on. I sat back down on the stool and came right there. At the bar.\"\n\n\"And what were you thinking about as you came?\" she asked, not moving the crop from my chin.\n\n\"You, miss.\"\n\n\"Get on the bed,\" she says, moving the crop from my face. \"On your back. Hands above your head.\"\n\nI don't waste any time doing what she asks. As I lay there with my hands above my head, she unbuttons her pants and slowly begins to remove them. And I don't know how she's able to take off pants like that so gracefully, but she is. She quietly folds them and places them on my dresser.\n\nShe leaves the leather bra on and when I look down at her panties, I can see a ring around the crotch. It takes me a moment to realize that her underwear is actually just a black harness in pantie form.\n\nShe moves closer to the bed slowly. The crop is hanging from her hand and I'm craving the feeling of its soft leather on my body again.\n\n\"I want to make something very clear,\" she says. \"This crop isn't a form of punishment. It can hurt a bit, but knowing how much you enjoy impact play, I think you'll find the sensation enjoyable. Tonight, I'll use this to get you ready for me.\"\n\nShe comes to the bed and presses the tip of the crop into my left thigh as she leans above me.\n\n\"But if you move those hands in any way, you will be punished,\" she says darkly. \"Understand?\"\n\nWhen all I do is nod, she quickly pulls the crop off me and brings it back down on my inner thigh with a loud smack.\n\nAnd fuck. If I thought a basic spanking made me drip, that little slap causes a flood. I can't help but close my eyes and moan at the sudden sensation.\n\n\"Answer,\" she says firmly.\n\n\"Yes, miss. I won't move them,\" I pant out and I can't even try to hide how much this is turning me on.\n\nShe moves the tip of the crop down my leg and to my calf, and then brings it back up my body so it's resting on the opposite thigh as the one she just hit. She presses it into me again.\n\n\"Mmm fuck, yes,\" I say and my voice is so guttural, it almost doesn't sound like me.\n\nLauren lets out a low, seductive laugh.\n\n\"My girl likes her pain,\" she says before bringing the crop up and giving me two small smacks on my thigh.\n\nI let out another low moan. It's as if I can feel every smack of the crop straight in my pussy and the sensation is intoxicating. The slight sting only exemplifies the pleasure.\n\n\"Where would you like this now, baby?\" she asks as she brings the tip of the crop up to my neck and back down my middle.\n\nI'm breathing heavy now but the last thing I want is for this to end so I answer quickly.\n\n\"My tits, miss,\" I say.\n\nLauren doesn't reply but simply brings the crop down to my left tit and presses it into the side.\n\nEven in my heightened state of arousal, I can tell that by pressing the tip of the crop into my skin, she's giving me a warning of where she'll hit next. Lauren's focus on rebuilding my trust isn't something I can analyze right now but having that in the back of my mind is making this even hotter.\n\nSuddenly, she brings the crop down on the side of my tit and I have to grab on to the pillows above me to keep my hands there.\n\n\"Did that feel good?\" she asks.\n\n\"Yes, miss. More, please, again,\" I beg.\n\nShe circles my left nipple with the tip of the crop, causing me to writhe ungracefully under it, before she brings it over to my right tit and presses the tip into the side. She brings it back down twice in quick succession, smacking harder than last time.\n\n\"Yes, more please, harder,\" I cry out.\n\nShe brings the crop over that nipple before dragging it down my body again and pressing the tip into my pelvis. She brings it up and down, smacking even harder. The crop now feels as much a part of Lauren as her hands or mouth and I know I'll crave this feeling long after tonight.\n\nWhen I open my eyes from the last two hits, she's standing above me. She brings the crop up my body and gently places the tip on my throat. She presses down only slightly and is looking at me as if she knows just how much control she has in this moment.\n\nShe moves some fallen hair out of my face with the hand not holding the crop and gently caresses my cheek. The dichotomy of the crop on my throat and her hand gently touching me is making it hard to lay still in my already turned on state. But the intense look in her green eyes keeps me in place.\n\n\"I need to know so I don't hurt you. Have you ever been fucked with a strap on? You may nod yes or no,\" she says in her low, commanding voice.\n\nI nod.\n\n\"Do you enjoy it?\"\n\nI nod.\n\nShe smiles at me for a moment before continuing. \"And you thought you weren't a bottom.\"\n\nI guess I never equated being fucked with a strap on with one of my ex-girlfriends as bottoming. But none of them ever took control like this so it probably just didn't feel like it.\n\n\"Would you like me to fuck you with one, darling? There is no wrong answer.\"\n\nI can feel another block of trust fall into place with her gentle words. I don't trust my voice so I simply nod again.\n\n\"Show me that you're ready for me.\"\n\n\"May I move my hand, miss?\"\n\n\"You may.\"\n\nEvery time I submit so willingly to Lauren, I can see what I now recognize as arousal flash across her face and getting that look out of her has become an addiction.\n\nI move my right hand down to my pussy and give an internal prayer that when I touch it, I won't come immediately. I try not to touch my clit as I move my fingers into my folds. I'm so turned on right now I'm afraid even the smallest of grazes on that sensitive bud will send me over the edge.\n\nMy intake of breath must have been noticeable to Lauren, but the wetness coating my fingers is so much more than I would have expected considering the woman hasn't even really touched me yet. We haven't even kissed yet.\n\nI move my two glistening fingers back up and show them to her.\n\n\"Clean them,\" she says, maintaining the same intense stare. She hasn't moved the crop from my throat.\n\nI move the same two fingers into my mouth and make a show of swirling my tongue around them, licking off every last drop from my pussy.\n\n\"Good girl,\" she says and her voice is so low and gravelly that I can tell she's fighting off her own intense arousal. \"Hands back up.\"\n\nI put my hands back over my head and wait as I watch her move over to her bag. She pulls out a dildo and a small bottle and walks back to the bed, this time without her crop. Suddenly she looks bare without it.\n\n\"Sit up, Ems,\" she says as she crawls onto the bed and stands up on her knees.\n\nShe hands me the dildo, which I can't help but smile at as I take it into my hands.\n\n\"Pink? Is that your favorite color for sex toys?\"\n\n\"Would you like to discuss color pallets or would you like me to fuck you?\"\n\nThe smile on my face disappears immediately as I look up into her stern one. Apparently now is not the time for banter. I take the dildo and move it to her harness so I can put it in. Lauren keeps her hands at her sides and waits patiently as I maneuver it into her underwear and get it in place.\n\nOnce I'm done, I sit back and look at her on her knees, hands still calmly hanging by her sides. She takes one hand and lightly grabs the pink shaft.\n\n\"You seem fairly wet so I'm not going to use much of this,\" she says as she grabs the small bottle she had set next to her on the bed. \"But I also want this to feel really good. And lube can help with that.\"\n\nIf Lauren keeps being so damn considerate with every move she makes, I'm going to end up saying something I'm not ready to say. While sexy, domineering and giving may be words that automatically come to mind when I think of Lauren, gentle, sweet and loving are new words that keep cropping up in my head.\n\nShe puts a small amount of lube straight from the bottle onto the dildo and then looks up at me expectantly. We've learned each other enough that I know what she wants.\n\nI move my right hand to her shaft and begin to stroke the lube up and down it as slowly and seductively as I can. When I look up at her, her eyes are half closed so I push in a bit so the base of the dildo hits against her pussy. Her eyes fully close for a moment as she seems to relish the feeling.\n\n\"Enough,\" she says in a whisper. \"Lay back down. Hands above your head.\"\n\nShe moves so she's between my legs, but still on her knees. While she's looking down at me, she slowly unbuttons the three metal snaps on the front of her leather bra and takes it off. She folds one side over the other and lays it on the foot of the bed.\n\nAnd now all I can do is feast my eyes on the gorgeous, naked body above me. Her nipples are so hard that my mouth is almost watering to taste them. But she doesn't give me the chance.\n\nLauren moves over me and puts both of her hands on top of my own above my head. With her knee, she spreads my legs apart farther and when she's between them, simply stays there, hovering over me.\n\nI can feel her tits grazing my own, but she doesn't press her body down. We're staring into each other's eyes, but I don't dare say anything in case I ruin the moment.\n\n\"Ask me,\" she demands.\n\n\"Fuck me. Please, Miss Callahan. I want you to fuck me,\" I say back, knowing exactly the kind of sexy consent she's after.\n\nLauren moves one hand off my own and down so she can put a finger into my folds. She moves it inside of me before adding another. I'm practically panting now, but I'm so ready for her to fill me that two fingers just doesn't feel like enough.\n\nShe pumps her fingers in and out a few times before she adds another one.\n\n\"Fuck, miss, please. Fuck me. I'm ready. Please, I want to inside of me.\"\n\n\"I can tell you're ready, baby,\" she says as she pushes her fingers in even deeper. \"Kiss me first.\"\n\nI lift my face up so I can capture her lips without moving my hands. Without any way to anchor myself, the kiss isn't graceful but we both clearly don't care. She removes her fingers so she can press her hands into my own again and slides her tongue against mine. I can feel a moan almost rip out of her as she takes my mouth like she's never going to get to kiss someone again.\n\nAll I can do is allow her to press my hands into the mattress and move my mouth with hers. As she continues to kiss me, I can feel her remove one hand from mine and move it back down to my pussy. She uses her fingers to open me up and then slips half of her pink cock inside of me.\n\nOur mouths break apart, mainly because I can't help the loud noise that suddenly emanates from me. For a moment she just looks down at me, her lips are red from our kiss and I can see her chest rising and falling more rapidly than normal.\n\n\"More, miss,\" I cry out. \"Please, I want to feel all of you.\"\n\nShe moves so she's all the way inside of me and begins a slow thrust of her hips, pressing my hands into the mattress each time she pushes in.\n\n\"Oh god, yes. More, please,\" I pant out, not even trying to hide how fucking turned on I am.\n\nHer movements turn more powerful as she sinks her body into mine and pushes into me harder. I can feel her tits against my own and her breath against my neck, which is coming in hot and fast.\n\n\"Do you like this, baby?\" she asks near my ear. \"Tell me how much you love me fucking you.\"\n\nI let out a long moan before I can answer. She picks her body off mine and pushes in deeper and harder than before.\n\n\"Yes, miss. I fucking love it. Harder, please, please.\"\n\n\"You want it harder, darling?\"\n\n\"Yes, miss, please.\"\n\nInstead of doing as I begged her to do, she slows her movements until she's completely still and is looking down at me. I do my best not to let out a pathetic whimper, but I can feel an orgasm beginning to approach and I just need her to fuck me.\n\n\"I want you on your hands and knees,\" she says.\n\nShe doesn't move and just waits for me to reply. When I nod, she gently removes herself from me and allows me to situate myself so I'm on my knees. I bend down on my elbows a bit so my ass is towards her and she can easily slip back inside of me.\n\n\"So beautiful,\" she says as she lightly caresses my ass cheeks with her hand. Suddenly, she gives both cheeks a quick slap, one right after the other. \"And so naughty.\"\n\n\"Please, miss,\" I beg again.\n\nI feel empty and the only remedy is to feel Lauren inside of me again. She seems to sense my desperation and moves over so she's right behind me. She doesn't tease me this time and slips herself back inside my pussy.\n\nShe also doesn't go slow this time. She pushes herself in as far as she can go, so her body is up against my ass before she brings herself out and thrusts back in again.\n\nIt felt amazing to have her on top of me, fucking me like she was, but this\u2014 this may feel better than anything I've ever felt. Lauren's soft hands are grabbing my hips, driving herself into me over and over again and I have no awareness for what expletives or noises are coming out of me at the sensation.\n\nAs she keeps fucking me at an unrelenting pace, I can hear Lauren's own moans and sounds joining my own and the sound, mixed with the feeling, is sending me towards my orgasm fast.\n\n\"Miss, may I come? Please, fuck. I'm going to come if you keep fucking me like that.\"\n\n\"Not yet,\" she says in a breathy voice. \"I'm close.\"\n\nThe idea of Lauren coming with me is enough to hold off my orgasm as she drives herself into me. I grab onto the sheet underneath me so I can push myself up more and allow her to thrust herself further into my pussy.\n\n\"Yes, yes, yes! You feel so good.\"\n\nI can hear myself screaming, but there's little I can do to quiet myself now. Lauren lets out a sexy moan as she grabs on to my ponytail and pulls slightly.\n\n\"Come with me, baby,\" she pants out.\n\nThe moment the words leave her mouth, I can feel my orgasm overtake me. She lets go of my ponytail, grabs my hips and I can hear the sound of her own, unmistakable orgasm. Without her hands there to hold my head up, it falls into the bed as I continue to feel my orgasm course through every inch of my body.\n\nLauren stays inside of me for what feels like minutes as both of our bodies come down from their respective orgasms. Slowly she moves her hand down so she can gently remove herself from me. Even with how slow she does it, I can't help but suck in air as I feel her leave me completely. I can't handle anymore right now but I also feel a loss once she's out.\n\n\"Lay down and relax, Ems,\" she says as she moves off the bed and over to her bag.\n\nI sink into my mattress as I lazily watch her take off her harness and bring over a new bottle. She crawls back onto the bed so she's next to me. Without saying anything, she begins to apply lotion to my body. I notice she takes extra care to massage any part of my body that she hit with the crop.\n\n\"Are you ok, darling?\" she asks as she puts the lotion on the bedside table.\n\n\"More than,\" I say back.\n\nI feel so spent that I don't think I can articulate much more than that. She smiles as she moves her hand so she can take out the hair thing holding my ponytail in. Once my hair has fallen down, she begins the familiar gesture of lightly playing with the ends of it.\n\n\"I'll answer your question now,\" she says.\n\n\"Which question?\"\n\n\"I don't have a thing for pink sexy toys. I got all this yesterday and it was all the store seemed to carry.\"\n\n\"It's fine,\" I say up to her with a grin. \"I won't tell anyone that pink is your secret favorite color.\"\n\n\"Oh sure, it's easy to be sassy after you've had a mind-blowing orgasm,\" she says teasingly as she pinches my nipple.\n\nThe move was supposed to be playful, but the touch of her fingers on my nipple turns them hard immediately and I can feel a shiver run all the way down my body. It's not lost on Lauren who gives me a smile as if she's won a prize.\n\n\"My girl is so insatiable,\" she says.\n\nShe moves her body so that she's lying next to me and I turn so we're facing each other. The position is almost reminiscent of how I would sleep with friends during sleep overs when I was young, but with Lauren's naked body on display, it feels anything but friendly.\n\nNobody speaks for a few minutes as we lay there looking at each other. The silence should feel awkward, but it feels more intimate than anything else.",
        "\"How did it go with Jackie?\" she finally asks.\n\nI almost forgot that even happened tonight. Happy hour and my drink with Jackie feel like so long ago. My stomach tightens at the thought of how it went.\n\n\"Not well,\" I say back.\n\n\"I'm sorry to hear that. Do you want to talk about it?\"\n\n\"Not really. She just needs time. I need time.\"\n\n\"That's understandable.\"\n\n\"She's convinced I'm sleeping with you or going to sleep with you. She seems kind of obsessed with the idea.\"\n\n\"I gathered that. Her little jab at happy hour wasn't lost on me. Do you think she'll be a problem?\"\n\nI sigh thinking back to Jackie's harsh words in the bar. I don't feel like I need to repeat them to Lauren mainly because I don't want her to think I need that kind of validation. If she wanted to get back at Olivia, I really don't think sleeping with a random woman in Seattle is the best method. Jackie's logic has jealousy splashed all over it.\n\n\"I don't think she'd say anything at work about it. But I'm also not planning to tell her. That's why I think it's good that we have some time apart. I need to focus on the Ellison pitch.\"\n\n\"Is that all you need to focus on?\" she asks and moves a hand so it's lightly resting on my hip.\n\n\"At work, yes. You've already distracted me enough,\" I say in a playful tone and move my own hand so I can push her fallen hair over her back. \"Besides, it would be bad for both of us if it got out.\"\n\n\"I know,\" she says quietly and I wish her brow didn't look furrowed suddenly. I want to go back to the post-orgasm bliss we were sharing just a moment ago. \"We wouldn't be the first couple to emerge in the agency world, but we should be careful.\"\n\n\"Tell that to the woman who texts me for lunch quickies,\" I say back, which finally brings back the smile to Lauren's face.\n\n\"I can't help my cravings,\" she says. \"Enough serious talk. You need to sleep. I plan on waking you up soon for round two.\"\n\n\"How soon?\" I ask as I turn around so she can put herself in our normal sleeping position.\n\n\"Go to sleep and you'll find out,\" she says as she nuzzles her face into my hair and pulls me into her body.\n\nI can feel my body relax into her embrace and I know it won't take long to fall asleep after the week of orgasms produced by this woman. As I'm about to drift off, I can hear Lauren's voice through my sleep fogged mind.\n\n\"Ems,\" she says softly.\n\n\"Mmhmm?\"\n\n\"Go on a real date with me.\"\n\nMy mind registers her words and my stomach does a little flip, as if I was just asked out for the first time.\n\n\"When?\" I whisper back.\n\n\"Tomorrow night.\"\n\n\"You don't give a girl much time to prepare,\" I say back sleepily. \"But tomorrow sounds nice.\"\n\n\"You don't need to prepare anything. You're perfect.\"\n\nShe kisses the back of my head and settles into me again. The sleep that was so close to taking over is no longer present. Her words roll through my head over and over again. You're perfect.\n\n\"So are you,\" I whisper as I close my eyes finally and force myself to go to sleep.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nThe morning I left Lauren's hotel room while she was still sleeping, I noticed that the woman is a heavy sleeper since she didn't even wake up to my alarm or when I moved about the room getting ready.\n\nNow as I wake up on Saturday morning to a banging on my front door, I know for sure she is. Sprawled on the other side of the bed with her hair falling all over the pillows, I can't blame her for sleeping in\u2014 we did wake up numerous times throughout the night.\n\nAt times when we woke, we would fuck again. Hard and passionate, like we were starved for each other. Other times it was slow and innocent with just us kissing and caressing each other. But no matter how we did it, Lauren brought me to more orgasms than I've ever had in one night.\n\nI rub my eyes as I hear the knock again, which sounded much more like a bang in my sleep. It's probably my landlord who has a tendency to drop by to make innocuous announcements to each tenant.\n\nI move out of the bed as quietly as I can so I don't disturb Lauren and quickly grab the shorts and tank top that are still folded neatly on the dresser.\n\n\"Ems!\"\n\nI can hear a shout from the front door and as I hear it, my steps slow down and my heart starts racing. That's not my landlord.\n\nI steel myself before I answer the door, knowing just who that shout came from. I can't pretend I'm not here or she'll just assume I'm at Lauren's hotel, which might be even worse. All I can hope for now is that Laure stays in the room.\n\nI open the door to find Jackie standing in my hallway, two cups of coffee perched carefully in one hand.\n\n\"Hey, Ems. Can we talk? I bring coffee,\" she says with a hopeful expression on her face.\n\n\"Jackie,\" is all I can manage to say as I stand there just staring at her dumbly.\n\n\"Can I come in or what?\" she asks when I don't move.\n\n\"Seriously, are you always this loud on a Saturday morning?\" I hear from behind me.\n\nI turn on the spot to see Lauren coming into the room, putting on the robe I had on the back of my bedroom door. She stops immediately when she sees Jackie in the doorway. I turn back to Jackie who's staring us both down.\n\nShit.\n\n \n"
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "bdsm",
        "dominance",
        "erotica",
        "girlongirl",
        "lesbian",
        "romance",
        "sex",
        "strap-on",
        "submissive"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/miss-callahan-ch-10-12"
}