{
    "title": "Post-Noir: The Return of Light",
    "pages": [
        "This is a sequel to my \"Nude Noir\" stories, using the few characters who survived to the end of the series. A few readers commented on the darkness of the closing chapter of \"Nude Noir.\" There is darkness in this story too, but also redemption. This piece will be difficult to follow unless you have read the Nude Noir stories or, at least, Nude Noir Chapter Five.\n\nThis story is a work of fiction. It mentions or implies some real places and institutions. Those are used fictitiously here. As far as the author knows, no real person affiliated with any of those places or institutions has done anything akin to what is described in this story. Any similarities between any character in this story and any real person are coincidental and unintended. I encourage comments on this story, both favorable and unfavorable. Thank you for reading.\n\n_______________________________________________________________\n\nI didn't respond to Paula Taft's suggestion that she could help me run Bougainvillea Cove. I didn't have anything against Paula. She was physically very attractive and had seemed an engaging and intelligent girl when Laura and I had met her in Jamaica. I simply had no interest in interacting with people after Laura's killing and the events that followed it. I blew Paula off saying something about The Cove having a manager. I don't recall exactly, but it was not meant to be encouraging.\n\nAbout ten days after Paula called, a woman on the front desk called to tell me there was a \"young lady\" in reception to see me. That was perplexing because no one came to see me anymore, least of all young women. It must have been one of my better days because I went to the reception desk instead of ignoring the visitor. I didn't bother putting on any clothes though. When I walked into the office, a slim woman with shoulder-length blonde hair was standing with her back to me. Two nice legs extended below her shorts. \n\nHearing the door, the woman turned. The wide mouth broke into a smile and the blue eyes twinkled. \"Hello Ian,\" she said. \"It's good to see you still dress like you did in Jamaica.\" I was shocked and speechless. It was Paula! She looked more beautiful than I remembered from Jamaica. That may have been because she was by herself. When we were in Jamaica, Laura was always with us, and she outshone everyone.\n\n\"I, uh, uh, what are you doing here?\" I asked.\n\nGretchen walked out from the back before Paula could answer. I suspect the woman at the desk had called Gretchen. I don't think The Cove staff trusted me to handle anything appropriately at that time. \"Ms. Taft,\" Gretchen said, \"it is nice to meet you after talking to you on the phone.\"\n\n\"You two know each other?\" I asked.\n\nMaybe there was something in my voice. In any event, Gretchen said, \"Ian, may I speak with you in the back for a moment?\" To Paula, Gretchen said, \"excuse us. This will only take a minute or two.\"\n\nI followed Gretchen into her office. \"Did you invite her here?\" I asked.\n\n\"No,\" Gretchen said. \"She called. She said she had a marketing background and was looking for work, that she was interested in Florida and nude recreation. She said she had talked to you, and you had told her to talk to me. We talked for a half hour or so. Paul and Lillith relied on word of mouth. That doesn't do it anymore. We need to do marketing. Ms. Taft's been working in marketing at a large university up north. So, I told her to stop in if she was in the area. She also talked about meeting you and Laura in Jamaica. You apparently made a strong impression on her.\"\n\nI started to say something objecting, but Gretchen cut me off. \"Ian, you've just shut down. You aren't doing yourself or The Cove any good. This sure as hell isn't what Laura would want. There's an intelligent and attractive woman in the next room who apparently came here because of you. Don't you dare hurt her, yourself, and The Cove by running her off.\"\n\nVarious of my few surviving friends had given me similar lectures before. It hadn't had any effect. Something in what Gretchen said, however, hit me. Maybe it was because Gretchen and I weren't really friends. I'd become her boss when I inherited The Cove from Paul and Lillith. Gretchen seemed more concerned about The Cove than me personally. I didn't feel much anymore, but I did feel a duty to The Cove.\n\nI walked back into reception. Paula smiled again, stood a bit straighter, and put a hand on her hip. She did look beautiful. \"May I stay?\" she asked.\n\nGretchen told the woman at the desk, \"see what we've got open that Ms. Taft can stay in for a few days.\" \n\n\"No,\" I said. To Paula, I said, \"you can stay with me in Unit 7. There's a guest room.\"\n\n\"Great!\" Paula said. \"Where do I go?\"\n\n\"Go right out of our lot,\" I said. \"Follow that street past the end of the tall fence then turn right again. That will put you at the entrance to resident parking. I'll come out and open the gate for you.\"\n\n\"Thanks,\" Paula said and started outside. I turned back towards the door into the resort.\n\n\"That's the best decision you've made in months,\" Gretchen said.\n\n\"It's the only decision I've made in months,\" I shot back.\n\n\"True,\" Gretchen replied.\n\nEvery part of Paula's Japanese sedan except the driver's seat was loaded with stuff. \"Is that everything you own?\" I asked.\n\n\"I told you on the phone I needed to get out of Ohio,\" she replied.\n\n\"So, you loaded all your stuff in the care and hoped you could stay here?\" I followed up.\n\n\"Pretty much.\" Paula said with a smile. \"I figured it would be harder for you to put me off in person than on the phone.\"\n\nI had to admire her moxy. \"What do you need right away\" I asked. \"This lot is very secure. Your stuff will be safe. We can get the rest of it later.\" \n\nPaula opened her trunk and pulled out two suitcases. \"If you'll carry those,\" she said, \"I'll get this.\" She lifted a smaller overnight bag. I led her to Unit 7, opened the door, and set her bags down. Paula followed me inside. We went into the living room. \"May I take my clothes off now?\" she asked. I nodded. She slipped off her sandals, pulled her tee shirt over her head and tossed it in a chair. She unhooked her bra and let it slide down her arms. She tossed the bra on top of her shirt. She undid her shorts and pushed them and her panties down her legs together, then stepped out of them. She tossed them on the chair, the straightened up. \"You can't imagine how much I've been looking forward to this,\" she said. \"I haven't enjoyed wearing clothes since Jamaica.\"\n\nWe had spent a lot of time nude with Paula and her friend Jen in Jamaica. At Laura's direction, Paula and I had done more than just spend time. I remembered her as an attractive young woman. I did not remember her being as beautiful as she looked standing naked in front of me that day. \"You look wonderful,\" I said.\n\n\"Thank you,\" Paula responded. \"Candidly, you look better than I expected given all that's happened to you.\" She was being kind. I'd lost my motivation to exercise after Laura was killed. After I shot the woman who made that happen, I'd also stopped eating regularly. I did still wash, but I looked like shit and knew it.\n\n\"Paula,\" I said, \"it is, truly, good to see you. I don't mean to be rude, but why are you here?\"\n\n\"May I sit down?\" she asked.\n\n\"Of course,\" I answered.\n\nShe sat on my sofa. She patted the empty space next to her. \"Please sit next to me,\" she said. I slowly moved to the sofa and sat several inches away. \"Ok,\" she said, \"this isn't easy to explain. There's a big reason I'm here and some other important reasons.\"\n\n\"What's the big reason?\" I asked.\n\n\"In a word: you,\" Paula responded. \"I've not had the best luck choosing men. The men I've had relationships with all seemed to see me as something to give them pleasure. In Jamaica, you were different. When we had sex, you seemed more concerned about me than you. It wasn't just the sex. You're just, well, considerate. Laura and I talked often after we got back from Jamaica. She said you treated her the same way. Uh, may I have a glass of water?\"\n\nI got up, went to the kitchen, and came back with a glass of ice water. I handed it to Paula and sat back down on the sofa. She took a long drink.\n\n\"Sorry,\" Paula said after a second long drink, \"this isn't easy. I sound like a little girl with a crush. Maybe that's not that far off, although what I have is a lot more than a crush. We connected in Jamaica. I felt it and I'm sure you did too. Talking to Laura and listening to her talk about you just reinforced what I felt for you. I loved Laura too and I'd never have tried to get between the two of you. When you told me she was, well, gone, I decided I owed it to both of us to try for a relationship. I also owe it to Laura. She loved you too much to want you to be alone. She recognized there was something between you and me. She told me she did, and she thought that was good.\"\n\nThis was almost surreal. A beautiful 24-year-old woman was telling me she had come all the way to Florida to hook up with me and that she had my late wife's blessing. Still, there was something in what Paula was saying. It was Laura's idea for me to make love to Paula in Jamaica. Laura talked about Paula often after we get home. The two women had bonded. I stalled. \"What are the other important reasons?\" I asked.\n\nPaula seemed slightly crestfallen that I hadn't responded passionately to her expressed desire for me. \"Like I told you on the phone, I need a job. My boss at the University has connections so I'm unemployable in Columbus, probably all over Ohio. I discovered in Jamaica that I like being naked. I did research on The Cove before I knew what had happened to Laura. It seemed like a wonderful place with a lot of potential. That was trying to reach Laura when I called you. I wanted to know who to talk to about a job here. After I talked to you, I worked on some specific ideas to market The Cove. I cold-called Gretchen and talked to her. She seemed to like my ideas.\"\n\n\"The Cove needs marketing,\" I said. \"It historically relied on word-of-mouth. The regulars built up that way are aging. We need younger guests. I'm a retired cop, not a marketing person. Anyway, I've been pretty useless since I inherited The Cove.\"\n\n\"No offense,\" Paula said. \"You still look great to me, but you don't look as vital as you were in Jamaica. Losing Laura hit you really hard?\"\n\n\"It isn't just Laura,\" I said. \"In a few awful minutes, I lost all my close friends: Paul, Lillith, Beth Potter, Sally Stancik. Months later, I shot to death the woman who had them killed: Paul and Lillith's daughter. The whole time I was with Chicago PD and the FBI I never fired my gun except at the practice range. Losing Laura was a huge part of it. She was so perfect!\"\n\nPaula slid next to me on the sofa. She took one of my hands in hers and looked me straight in the eyes. \"I can't promise perfect because I know I'm not perfect, but I will promise you damn good,\" she said. She looked so beautiful and so sincere. I'd been emotionally dead since Laura died. Suddenly, I was feeling emotion again. I felt very drawn to this gorgeous young woman. The thought entered my mind that it was just because I was a lonely, horny old man.\n\n\"I'm a lot older than you,\" I said.\n\n\"That wasn't a problem in Jamaica, and it isn't a problem for me now,\" Paula replied. She grinned and added, \"I've heard some older guys like younger women.\" We looked at each other for a long time. Finally, Paula said, \"Ian, give me a chance. I'll make sure you never regret it.\"\n\nWe sat on the sofa facing each other, with our bare legs touching, for a long time. I told Paula all the details of what happened to Laura and the others. I explained that I was afraid of a new relationship because I'd catastrophically failed people I loved. \n\nWhen I finished, Paula said, \"Ian, I don't know what you could have done better. You didn't know Pam Westerfeld was out of prison or that she was coming after you. I'll, well, I'll give you an example of bad judgment. It's the other reason I needed to get out of Columbus.\"\n\nMy curiosity was piqued. I had difficulty imaging Paula doing anything dumb and said so.\n\n\"I did,\" she said. \"Just after I graduated, I hooked up with this guy. Nick Mancuso. He'd played football at the University. I'd heard of him. Big guy, strong, very good-looking. He was working for an insurance company based up there. He had nice clothes, an expensive car, a Rolex watch.\"\n\n\"Ok, I said, \"what was dumb about that?\"\n\n\"We went out a few times before we started fucking,\" Paula replied. \"He'd been very kind on our dates. He got a bit rough, though, when we had sex. Initially, I thought 'well, some guys are like that' and it added a little more excitement. Then Nick wanted to spank me. I didn't like that, him pulling my pants down, bending me over his knees, and swatting my bare ass. But I went with it. It stung more than really hurt and it seemed to turn him on.\"\n\nPaula took a deep breath before she continued. \"We'd been dating about six months and fucking for five and a half. Nick got drunk. He wanted to spank me, so I let him; except he used a little whip this time. That hurt. I told him to stop. That pissed him off and he started whipping me harder. It really hurt and I could feel my ass bleeding. I screamed at him. He picked me up, he's an extraordinarily strong man, stood up, and threw me against a wall, hard. I hit a low wall topped fake granite which had an edge. The edge went into my ribs. I've never felt anything that hurt so bad.\"\n\nPaula paused again. \"I should have known better than to stay with him by then.\"\n\n\"What happened?\" I asked.\n\n\"Nick kept drinking and passed out,\" Paula said. \"I grabbed my clothes and my purse and got out of his condo. I couldn't drive so I called Jen. I was standing in the parking lot with no clothes on, scared Nick would wake up and come out and get me. Thank God Jen showed up. She took me to the Emergency Room. I had broken ribs. The nurses called the police. I told the police what happened. They arrested Nick. He made bond and kept calling me telling me to drop the charges. The moron didn't understand that, in Ohio, that wasn't up to me and that I would be held in contempt and jailed if I didn't testify. He was set for trial about a month before we went to Jamaica. I'd planned that to recover from the trial. He did a plea deal just before trial and got 18 months in prison. If he follows all the rules, he can get about four months off that, so he's likely to be out before long. He'll come back to Columbus, and I sure don't want to be there when he does.\"\n\nPaula stood up. \"You can still see the scars on my ass,\" she said. She turned away from me and bent over. The beauty of her ass was marred by some scars, mostly where her thighs and hips met. They were not very noticeable when she stood. That someone would damage such a beautiful body made me angry. That was the first time I'd felt anger, or any emotion, in months.\n\nI knew from my time in law enforcement that Paula's experience was not unusual. It is easy to criticize the woman after the fact, to say 'she should have seen it coming and gotten away from him sooner.' I knew it wasn't that easy for the woman living it. \"Paula,\" I said, \"you didn't screw up. Nick did.\"\n\nShe straightened up and turned back to face me. There were tears in her eyes. I stood up from the sofa. We held each other for quite a while.\n\nIt had become late afternoon. Paula finally broke our embrace and said, \"I'm hungry. What have you got to eat here?\"\n\n\"Not much, I'm afraid,\" I replied.\n\nPaula went into my kitchen. I followed her. She looked in the refrigerator and the cabinets. \"Damn,\" she said, \"you don't have anything.\"\n\n\"The resort has a restaurant,\" I said. \"It will be serving dinner in about an hour.\"\n\n\"I'd rather not eat in a restaurant,\" she replied. \"Not tonight. Is there a grocery close by?\"\n\nWe dressed and took my car to a Publix about a mile away. I let Paula pick out veggies and breakfast food. The store had some decent looking snapper fillets, so I got those and some herbs. Laura and I had enjoyed cooking together and I thought myself a passable cook. I hadn't cooked at all since Laura died. Now, I found myself wanting to make something that would impress Paula. We also got a couple of bottles of wine, although I had plenty of booze at home.\n\nAt home, we stripped off again. I baked the fish in foil with herbs and lightly sauteed the veggies Paula had gotten. Paula sat on a stool in the kitchen watching me. When everything was about ready, Paula said, teasingly, \"Do I need to dress for dinner?\"\n\n\"Please don't,\" I replied.\n\n\"You like me naked?\" she asked.\n\n\"Very much,\" I said.\n\nPaula got off the stool, walked to me, put her arms around me, and said, \"I like you naked too.\"\n\nPaula seemed to like the meal, which made me feel good. We cleaned up dinner and then sat together on the sofa drinking wine and watching a Rays game on TV. Paula was a knowledgeable baseball fan. When the game ended, I said, \"the old man is getting tired. I think I'll go to bed. The bed in the guest room is made up if you'd prefer to use it.\"\n\n\"I'd prefer to sleep with you, if that's ok,\" Paula replied. I guess there are men with the willpower to say no when a beautiful, naked young woman says she wants to sleep with them. I'm not one. Paula and I slept together naked that night. There wasn't any sex. We fell asleep holding each other. \n\nWe were still holding each other when I awoke the next morning. Paula was still asleep. I've always thought that the truest test of a woman's beauty is what she looks like asleep. Laura had scored high in that category. Paula did too. Another special thing about that morning was Paula opening her eyes, looking at me, smiling, and saying \"this feels good.\" I felt better that morning than I had any morning since, well, you know when.\n\nI used the eggs, ham, and veggies we'd bought the day before to make omelets. \"I could get used to a guy cooking for me real fast,\" Paula said, \"especially when the food's this good.\" I was almost uncomfortable at how happy that comment made me. Happy was an unfamiliar experience.\n\nI told Paula I usually met with Gretchen at 10:00 a.m. and was going to shower before I went to the office. \"May I join you?\" she asked. That was a no-brainer.\n\nI had made love to Paula, on Laura's instructions, when we'd been in Jamaica. That had been almost a year earlier, and I hadn't seen Paula again until the day before. We explored each other's bodies in the shower like it was the first time we'd been together. Even with her scars, Paula was, I thought, incredibly beautiful and in great shape; much better shape than me. That didn't seem to bother her.\n\nWe dried each other and went downstairs. I put on flip-flops and asked Paula, \"are you coming?\"\n\n\"You don't get dressed for the meeting?\" she asked.\n\n\"It's a nudist resort,\" I answered.\n\n\"Cool!\" Paula said.\n\nAfter I'd locked the front door to Unit 7, Paula took my hand. We walked naked, holding hands, out of the residential area, past the pools and pool bar, and into the office. I'd had these meetings with Gretchen more-or-less five days a week since I'd inherited The Cove. I never paid attention. I just said yes to whatever Gretchen wanted to do. I'd been too lost in my own agony.\n\nThe first meeting Paula went to was different. I was actually listened and asked questions. Gretchen finally asked, \"What's up Ian? You're much more engaged than usual.\" She looked at Paula and understood, I think, what was up.\n\nGretchen made a financial report. Paula asked what seemed to me astute questions. I sensed that Gretchen had been impressed too. Gretchen asked Paula to talk about her marketing ideas. Paula did that for about fifteen minutes. She thought we needed to get pictures of the better-looking parts of The Cove, preferably with good-looking people in them, and run ads in select \"lifestyle\" and travel magazines. She estimated a cost for that which Gretchen opined we could afford. It all made sense. There was more to Paula than just physical beauty.",
        "As we left the office, Paula asked, anxiously, \"how'd I do?\"\n\n\"You impressed me,\" I said sincerely.\n\nJust then, Gretchen leaned out the door and said, \"Ian, may I talk to you for a moment?\"\n\nI left Paula standing outside the office and went back inside with Gretchen. \"Paula did very well,\" Gretchen said.\n\n\"You ok hiring her?\" I asked.\n\n\"Yes,\" Gretchen answered.\n\n\"Can we afford it?\" I asked.\n\n\"Yes,\" Gretchen said. \"She told me what the University paid her. I think we should start her ten grand a year above that. Our cost of living here is higher than Ohio.\"\n\n\"What's her position?\" I asked.\n\n\"How about 'Director of Marketing and Assistant General Manager?'\" Gretchen replied.\n\n\"Assistant GM?\" I asked.\n\n\"Yeah,\" Gretchen said. \"I think she can help with more than just marketing and that gives her broader authority. You know I'm not going to stay forever. Let's audition Paula to be my successor.\" Gretchen was not a nudist and had worked in mainstream resorts before coming to The Cove. I thought she probably wanted to get back to mainstream clothed resorts. \"Are you on board?' Gretchen asked.\n\n\"Yeah,\" I said. \"Paula's impressed me too.\"\n\nGretchen smiled a meaningful smile. \"That's good,\" she said.\n\n\"May I tell her?\" I asked.\n\n\"Please,\" Gretchen replied. \"She'd prefer to hear it from you. Just make clear she reports to both of us.\"\n\nI went back outside to Paula. \"Congratulations,\" I said. \"If you accept, you are now Director of Marketing and Assistant General Manager of Bougainvillea Cove.\"\n\nPaula shrieked \"thank you!\" She threw her arms around me and kissed me. An older couple walking by looked at the nude young woman hugging me and smiled.\n\n\"It was Gretchen's decision as much as mine,\" I said. \"You made a good impression on her. We're both your bosses.\"\n\nPaula gave me a grin. \"I'm happy to be under you any time. We've already done that. We both enjoyed it.\" \n\nJoining Paula's spirit, I said, \"you've been on top a couple of times. That was pretty nice too.\"\n\n\"What do you do every day after the meeting?\" Paula asked.\n\n\"Not much, really,\" I said. \"I should get actively involved if I'm the owner.\"\n\n\"I want you in the office with me,\" Paula said. \"Now, please show me around. I want to see the whole place.\" That was easy. I knew every inch of The Cove from having overseen its security for years. We spent nearly two hours going over the entire property. There were many things that Paula thought needed to be repaired, upgraded, or re-designed. In each instance, I could see she was right. That was on me for having been an absentee owner, even though I lived there.\n\nAs we finished the tour, I asked, \"What are you going to do about a place to live?\"\n\nPaula's face clouded a little. \"I was hoping I could live with you,\" she said.\n\n\"That's what I hoped you had in mind,\" I replied. Paula didn't shriek with glee his time. We just came together, hugged, and kissed each other. Finally, I took her hand and we walked back to my Unit. Once I had closed the door, Paula wordlessly took my hand and led me upstairs to the bedroom.\n\nIn the bedroom, we started kissing again. Paula stroked me. When I got a little hard, she stopped kissing, knelt down, and took me in her mouth. She was good. Well before I was ready to come, I stood Paula up. I gently backed her to the bed where she lay down. I spread her legs, crawled between them, and started licking. I moved to sucking on her clit. I was reminded how wonderfully responsive Paula was. Soon, she said, in an urgent tone, \"Ian. In me. Now!\"\n\nI moved up the bed until I was above her. Aroused, Paula was even more beautiful than she was usually. She grasped my dick firmly and I let her guide me into her vagina. I hoped I remembered what she liked best and immediately tried to do that again. I was rewarded with a breathy \"you remembered.\"\n\nPaula was, I was also reminded, a highly active sex partner. Her hands played with my ass. She licked my neck. She rubbed her nipples against my chest. And she pushed back at me almost as hard as I pushed into her. I'd forgotten some of the sensations of making love to Paula Taft. She reminded me that day. This was, however, more than what we'd done in Jamaica. There was a new tenderness and caring on both sides.\n\nI did remember how Paula's hips sped up and moved more forcefully as she approached orgasm. I remembered how she yelled \"Oh GOD\" as she came, with her voice rising an octave on \"God.\" I remembered, and experienced again, how she induced a powerful orgasm in me.\n\nAfter we both came, I pulled out and lay beside her. There was another of those moments when we just looked into each other's eyes. I liked Paula's eyes. She finally said, \"thank you.\"\n\n\"You still want to live here?\" I asked.\n\n\"If we can do that at least daily,\" she answered with a smile.\n\n\"At least,\" I said. A voice in my brain said I was a sorry, lonely old man who had become infatuated in twenty-four hours.\n\nPaula seemed to read my thoughts. \"Ian,\" she said, \"you know this didn't start yesterday. Our relationship started in Jamaica almost a year ago. What let us get back together is sad, but I'll never be sad that we are together.\"\n\nI was happy to be with her again, too. That caused a feeling of guilt that I was being disloyal to Laura.\n\nAgain, Paula read my mind. \"You're not being disloyal. Laura's not here anymore. She enjoyed life and wanted you to enjoy life too. I don't have the slightest doubt that she approves of what we're doing.\" Maybe it was rationalizing, but I chose to think Paula was right. More realistically, I also thought at this point it makes no difference to Laura whether I stay celibate or not.\n\n\"You start work tomorrow,\" I said.\n\n\"We still haven't emptied my car!\" Paula responded. There was no point in showering again because we'd be sweating carrying her things from her car in the Florida heat. We wiped off the most obvious remnants of our lovemaking and went outside.\n\nAfter we had Paula's things put away, we spent the remainder of the afternoon by the pool. That evening, she let me take her to the restaurant. Paula was excited by her first restaurant meal in the nude. I hadn't been in the restaurant in months. I knew all the staff. I think they were pleased to see me back and pleased to see me with someone.\n\nThe next morning, Paula and I showered. She asked, \"do I have to wear clothes to work?\" Gretchen and the women who staffed the front desk did, but I was also going to the office (for the first time since inheriting The Cove) and I didn't want to go dressed.\n\n\"As the owner,\" I said, \"I think I have the authority to let staff work in the nude. So, let's do it.\" The problem with Paula and me going to the office was not that we went in the nude. The problem was office space. Gretchen had her own office. I wasn't going to make her move or share. Paul Westerfeld's old office was in the back of the building. It had been closed since Paul died. We decided Paula and I would share that office. It took a couple of days to get an extra desk and get computers set up. Paul had hated computers.\n\nBefore taking pictures for ads, we had to deal with the things that were shabby, old, or broken so The Cove looked inviting. Paula took charge of that. I was impressed that she had no qualms about going nude when meeting with contractors. \"I don't care if they're staring at my ass so long as the job gets done,\" she declared. Instead of having to beg contractors to come out, we were now turning the away.\n\nIt took a couple of months to get The Cove truly presentable. I can't fault Gretchen. Paul and Lillith had chosen to let some things slide and I'd been too preoccupied with self-pity to notice. \n\nPaula found a photographer she liked, but we had an issue with models. \"Not to be judgmental,\" Paula said, \"but whoever we use is meant to depict a guest here. We need people prospective guests want to be around. We don't want strippers or anorexic fashion models.\" In the end, Paula modeled for the first shoots. She posed in places where she could be obviously nude, but not show anything; like the pool or sauna, or partially concealed behind a plant. \n\nI thought the first pictures were good. Along with copy Paula wrote, the pictures appeared in ads in carefully chosen national and international publications. Within weeks, our bookings started trending up and the people booking were younger. Having Paula model for the pictures saved us money, but there was a cost, as we learned later.\n\nPaula and I were together 24/7 for days at a time. We seemed to enjoy each other more the more we were together. Our sexual relationship also got more adventurous.\n\nThe Cove's clientele was exclusively adult. However, Paul and Lillith had a rule against overt sexual conduct in the public areas. That rule was violated often. I'd violated it myself more than once. However, it was still stated policy. Paula and I started by making love beside the lake after dark, which had risks beyond just getting caught in Florida. \n\nWe progressed to making love by the lake in broad daylight. We were caught a time or two. When an older couple caught us, they didn't say anything because, I guess, I was the owner. But the couple never came back. One younger couple, first time guests, caught us and watched until we came. Afterwards, they introduced themselves and told us how much they had enjoyed watching us. Paula told them, \"Making love outdoors in the sun is a special experience. You should try it.\" I hope they did.\n\nPaula began pushing for The Cove to become a more \"sex friendly\" environment. \"Younger people,\" she said, \"don't accept that social nudity and sex must strictly be kept separate. A nude couple enjoying their nudity may be inspired to enjoy each other. They don't want to fear being thrown out if they act on that.\"\n\nI understood Paula's point. Gretchen did too. Our older regulars, who had come to The Cove for years and were friends of Paul and Lillith, would not. We finally bit the bullet, sort of. We changed our rules to prohibit \"ostentatious\" sexual conduct in public areas. We instructed staff that \"ostentatious\" meant most sex was ok unless it got more than one or two other guests angry or was in an utterly inappropriate place, like the restaurant. Humping in the hot tub was usually ok.\n\nA challenge was making our new attitude known to potential guests without being so blatant we drew unwanted attention. Paula produced what I thought was, if not a stroke of genius, a damn good idea. We would run new ads showing couples together, nude, being openly affectionate with the sexual conduct implied. \n\nAgain, models were a problem. Paula thought it would work best if our models were a real-life couple. We weren't going to get that by calling an agency. Paula and I had been together for months by then and, motivated by her, I'd been working out. We were discussing the issue in a meeting with Gretchen when Paula said, \"Ian, I think we should be the models. We're hot for each other. That will come across. We're completely comfortable anywhere in The Cove. I've modeled for our ads before and you're looking great these days.\"\n\nBefore I could say anything, Gretchen said, \"I agree.\" \n\nPaula and I posed in the pool hugging each other. The picture we used was shot from the side. Our asses were both under water, but the positions of our arms made it clear we were each holding the other's bare ass. Another picture had us in the hot tub. I was sitting with my back to the camera. My back and shoulders covered Paula's body, but it was clear she was facing me, probably sitting in my lap. A third was by the lake. I was lying on my back in the grass. Paula was lying face down on top of me. The picture was taken at about ground level from the side with the lake in the background. A plant concealed our hips, so the picture showed her bare legs on top of mine and her bare torso on top of mine. We were kissing so only the sides of our heads showed. Posing with Paula was great. We had prints of some of the pictures made and framed. We hung them in Unit 7.\n\nOur bookings continued to go up and our demographic got younger and more affluent. We added tennis courts where only shoes could be worn. We rebuilt the sand volleyball. We added an outdoor basketball court. We expanded and upgraded our gym. We added racquetball courts. The percentage of previous guests returning rose significantly.\n\nPaula's mother, who is a story unto herself, visited us at The Cove. Her college friend Jen Proffitt visited a couple of times. I still thought about Laura, almost every day but that ugly, empty feeling was gone. I reveled in waking up next to Paula each morning. Paula coming to The Cove had been a success by every measure.\n\nAs we approached a full year of waking up together, I quietly visited the lawyer Paul and Lillith had used to set up Bougainvillea Cove, LLC, the entity which formally owned the resort. I was sole member of the LLC. \n\nWe had our \"first anniversary\" dinner at The Cove's restaurant. We had to eat that dinner in the nude. I had made arrangements. Along with desert, Shelly, our server, brought out an envelope. I handed it to Paula and said, \"open it.\"\n\nPaula opened the envelope and pulled out a legal document. She read for a few moments, then stopped. She looked at me. \"Ian, this says you and I each have a 50% interest in the LLC,\" she said in a perplexed tone. \"You're the sole member, you own The Cove.\" \n\n\"Under the old operating agreement,\" I explained, \"I had the unilateral power to amend it. I used that power to give you a 50% interest.\" \n\n\"Why?\" Paula asked.\n\n\"Well,\" I said, \"partly because you've done such an excellent job here, you've earned it. Mainly, I did it because I love you.\"\n\n\"Ian!\" Paula said. \"I've been here exactly a year. We live together. We've made love hundreds of times. That is the first time you've ever said you love me.\"\n\nI was embarrassed. I'd decided I loved Paula not long after she showed up. I felt something of a shit for not saying it before now. To cover, I said, \"If you don't want to be a 50% member, I can have it changed back. I should have asked you first.\"\n\n\"Ian,\" Paula said. \"You know I'm thrilled to be half owner of The Cove. You realize, though, this means I'm never leaving.\"\n\n\"I was hoping to produce that result,\" I replied.\n\n\"Ian,\" she said, \"I love you too.\" As I thought about it, Paula had said many affectionate things to me, but I couldn't remember her saying \"I love you\" either.\n\nPaula had arrived in the spring. It was spring again, and warm out even at night. After dinner, we walked to the lake. We stopped under the one light around the lake that stayed on all night. We hugged and kissed. Paul ran her index finger around the head of my dick. I ran my finger over her lips and then slowly pushed it inside her. Being with her, giving her pleasure and getting pleasure from her, made me feel so good!\n\nPaula said, \"as your partner, I want you on the grass on your back.\" I complied. She straddled me. While I held my dick at a right angle to my body, she very slowly lowered herself and I very slowly slid inside her. That was the best start to a lovemaking session I've ever experienced. It got better from there. Paula on top let her set the pace. She could do what she felt like. I got to look up at her chest and her gorgeous face. I'm not sure we really did anything different that night, but the mutual \"I love you\" over dinner made it seem better.\n\nPaula's voice went up more than an octave when she came that night. I was still shooting inside of her when she lay down on top of me. Looking at the night sky, I saw a shooting star. Maybe that was a message from Laura.\n\nWe kissed for a very long time before Paula got off me. When we both stood up, I heard applause. About half of the restaurant staff was standing a little way off watching us. I was proud people had seen me make love to a woman as great and beautiful as Paula Taft. We walked back to the pool area with the clothed staff. They went back to closing the restaurant for the night. Paula and I washed each other off under an outdoor shower.\n\nWalking back to Unit 7, I made another decision. \"Paula,\" I said, \"may I ask you something?\"\n\n\"Sure,\" she replied.\n\n\"Will you marry me?\" I asked.\n\n\"What? Are you serious? Really?\" Paula exclaimed. She looked at my face. I meant it and she saw that. \"Yes Ian, I'll marry you,\" she said. \"There's one thing.\"\n\n\"What's that?\" I asked.\n\n\"Since we were nude when you proposed, we must get married in the nude,\" she said. I'd done that once before and enjoyed it\n\n\"Absolutely,\" I said. We hugged and kissed for a very long time. I was as happy and excited as I'd been when Laura said \"yes\" several years before.\n\nWe wanted to have the wedding soon. That idea ran into a snag when we couldn't reach Paula's mother, Elaine, for days. Paula finally got an e-mail from Elaine saying she was in Malaysia working on a story and would likely be there another month or two before going on to Thailand. Elaine was a freelance writer/journalist. It was not unusual for her to be on another continent for an extended period. Paula had never met her father.\n\nWe decided to have the wedding the following May. Paula thought that would give Elaine enough time to work it into her schedule. \n\nWhen we told Gretchen, she replied, \"serendipity. I've been offered a job as co-general manager of a ski resort in Colorado. The man who is currently GM is overloaded, and he is an old and very special friend. I told him I'd probably need a year to wrap up here and he was ok with that. If you agree, I'd like to use the next eleven months training Paula to replace me. I'll stay through your honeymoon. Paula can take over when you get back.\" Paula and I agreed to Gretchen's plan.\n\nPaul and Lillith had a rule that The Cove did not admit unaccompanied men. That was also changed on Paula's recommendation. We started allowing single men in, but they could not stay overnight. At the same time, we enhanced security. \n\nI'd persuaded Paul and Lillith to install security cameras covering the perimeter of the property. We now installed cameras covering all the public space inside the resort. Since I'd developed a friendly relationship with the Pasco County Sheriff's Office, we made a deal to always have an off-duty deputy present monitoring the feed from the cameras. The deputies stayed in uniform in the security office watching the monitors. For obvious reasons, we did not routinely save the feed from the cameras. However, if a deputy saw something wrong, she or he could press a button and save the feed from the specific camera starting two minutes before the button was pushed. \n\nA month after Paula and I got engaged, we were walking through the resort's pool area. We were both nude, of course. It was a Saturday afternoon, and The Cove was crowded. Suddenly, a large nude man jumped up from a lounge chair and grabbed Paula's arm. I pulled the man's arm off her, and he swatted me away like I was a fly. As I regained my balance, I got a better look at the man. I was close to my Chicago PD weight of 195. This guy was, at least, seventy pounds heavier, and it looked to be all muscle.\n\nThe man grabbed Paula a second time, around the waist. Paula yelled \"Nick!\" I didn't have time for that to register. I grabbed the meaty arm around Paula with both of my hands and wrapped a leg around the man's leg closest to Paula. My idea was to trip him.\n\nPulling backwards with all my strength and my bodyweight, I was able to pull the guy's arm off Paula a second time. The big guy and I fell on the concrete pool deck. I yelled, \"run Paula.\" The big guy shook me off as effortlessly as he had the first time. He got to his feet and went after Paula. Despite my size and strength disadvantage, I couldn't let him get to her. I went after the guy. ",
        "The man had just grabbed Paula from behind when I tackled him. It was like tackling a building. Paula slipped out of the man's grasp as I pulled him to the deck again. Before I could get any leverage, the man was out of my grasp. He sat up and swung at me. His first punch hit me in the chest and knocked the breath out of me. If he could throw a punch that forceful from a sitting position, I was in deep shit. I tried to lunge at his torso, thinking I would knock him onto his back. I have a fuzzy memory of the guy's right fist approaching my left eye.\n\nI regained consciousness in the Emergency Room. With my right eye, I could see Paula standing just inside the curtain around my bed. She wore a short terrycloth robe. I just knew she was naked underneath. I couldn't see anything with my left eye. When Paula saw I was awake, she said \"my hero.\"\n\nThe hospital kept me for a day because I had a concussion. When the swelling went down, vision returned in my left eye. About ten days later, I had surgery to reposition broken bones around my eye socket. My chest had a nasty bruise. It and my head hurt like hell for a while.\n\nPasco County Detective Glen Knowles visited hours later, after I'd been moved to a room. Glen and I were, sort of, friends. He was investigating the assault on Paula and me. \"The guy,\" Glen said, \"is Nicholas Mancuso. He was a college football player up in Ohio and, more recently, a guest of the Ohio Department of Corrections. Paula told me what landed him in prison up there. He's been out a couple of months. Mancuso recognized Paula in one of The Cove's ads he saw in a magazine. He says he came down here just to see her. He won't say what he intended to do when he attacked her.\"\n\n\"He was a lot more than I could manage,\" I said.\n\n\"I've seen the video,\" Glen replied. \"Our off-duty deputy started it before she ran out of the office. You did ok. You kept Mancuso off Paula. You paid a price though.\"\n\n\"How did it end?\" I asked.\n\n\"A couple of your male guests started toward the fight, to break it up they said,\" Glen answered. \"When Mancuso put you out, they had second thoughts. You're lucky Mancuso was more interested in getting to Paula than punching you. The off-duty deputy came on scene as Mancuso was getting to his feet. She says she ordered him to stay still but he ignored her. She tased him, twice before he went down. Once Mancuso was down, your guests regained their nerve and kneeled on him while the deputy cuffed him. She backed off about a yard and held him at gunpoint until on duty officers arrived and took him to jail.\"\n\n\"Jesus!\" I exclaimed.\n\n\"Mancuso will get to compare Florida prisons with Ohio's,\" Glen continued. \"The DA's charging him with sexual assault on Paula and attempted murder of you. I'm not sure about attempted murder, but there's no doubt he goes down for assault causing severe injury. He'll be spending a few years somewhere nice, like Raiford.\" \n\nPaula came into the room as Glen left. She still had the terrycloth robe on. Smiling, she said, \"I don't need this now that he's gone.\" Paula took the robe off. She was naked underneath. She looked perfect.\n\n\"Thank God, he didn't hurt you,\" I said. \n\n\"He scared me shitless,\" she replied. \"It was terrible watching you get hurt protecting me. Using me as the model in our ads wasn't such a great idea after all.\"\n\n\"We couldn't have anticipated this,\" I replied. \"I'm just sorry I'm more badly damaged now than when you agreed to marry me.\"\n\nPaula moved to the edge of my bed. She lifted my arm that didn't have an IV in it and put my hand on her bare ass. She bent down and kissed me on the lips. Straightening, she said, \"you don't get out of it that easy. I've never wanted you more.\" That was when a nurse walked in."
    ],
    "authorname": "HStoner",
    "tags": [
        "public nudity",
        "public sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/post-noir-the-return-of-light"
}