{
    "title": "The Twelve Vitali Ch. 30",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they continue to mean the world to me and have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n\"What sort of mother could I possibly be?\" Cat said desolately. She sat with David, talking quietly on the edge of the front porch overlooking the ocean, enjoying having her brother to herself, if only for a few minutes.\n\nRicco had moved quickly after Cat's break down the morning after receiving the letters from her grandfather, and after a brief conversation with Matteo, they had left the city for the house on the hill. They had left the staff to pack and follow them to the country. Both Matteo and Ricco had been attentive, appearing to have left their work in the city and relaxing with her as if the three of them were on holiday. They spent two days alone, with only the discreet household staff and the small initial security team with them. The weekend, though, brought many visitors, including David and his girlfriend.\n\n\"You raised me, and I turned out okay,\" David said honestly.\n\n\"I think that has more to do with Frankie and the football club rather than anything I did. You were hanging out with Ned's cronies before Frankie came along,\" Cat said sadly, admitting that any success David had now was not due to her influence.\n\n\"You don't think I would have done all that in the beginning if you didn't make me?\" he asked incredulously. \"You came to every training night, every game, even when you had to work a double to get the time off to come! You don't think I realised how important it was to me for you to do that? You don't think I realised all the sacrifices you made to make it happen?\"\n\n\"I just showed up, David. You put in the effort, and Frankie made it possible for you,\" Cat sighed. \"That wasn't me, it was all you.\"\n\n\"You're wrong, you made it possible!\" he sighed and held up his hand. \"I'm not going to argue about it with you, just trust me, I know you are going to be the best mother ever, because you already are. On top of that, you and I both have a very clear picture of what a bad mother looks like, and I know you would never do that to your own child.\"\n\n\"I'm pregnant,\" she blurted, knowing that David was talking, as she always had, in the far away someday kind of way.\n\n\"Wow, you didn't waste any time!\" David looked at her in astonishment. \"That's awesome; I'm gonna be an uncle for real! I suddenly have all these new in-laws, but being an uncle, that's gonna be awesome! I promise I will be there for him and teach him how to play footy! It's gonna be great!\" David said enthusiastically, giving his sister a tight hug. \"You are going to be the most awesome mother, because I'm going to be around to make sure! Whatever you need I'm gonna do it, not just for the kid, but for you! I'm surprised Matt hasn't been handing out cigars to everyone in sight!\" David chuckled.\n\n\"It's early days; we were just going to wait for a little before making the announcement. You know, to be sure about it,\" Cat admitted.\n\n\"Be sure about what? It's too late now, Cat!\" He looked at her aghast. \"You couldn't just get rid of it because you're scared! For fuck's sake, you wouldn't, would you?\" He asked in horror, surprising her. \"Just because our parents were fuck ups doesn't mean we will be! And look at the man you married, he's a great guy, perfect father material! Your kids are not going to want for anything, especially love, if I have anything to do with it!\"\n\n\"I'm not worried about Matt, or anyone in this huge family, it's me. What if I can't do it? What if this baby comes and I don't love it enough, or can't feed it, or...\" she stopped herself from voicing her concern that, like her mother, she would hate her children enough to ignore them and let them starve or fend for themselves.\n\n\"Then we get you the help you need to get over it. No one ever did that for our mother. No one cared enough, I guess. She cared more about her next fix than fixing her problems or us. You aren't like that, and I know Matt would never let you or a child of his suffer like that!\" David said with absolute conviction. \"You're not her, Cat, you were never like her. You made sure I had what I needed every time before worrying about yourself. There is no need to be scared, trust me, you are nothing like her.\"\n\nCat burst into tears again, her anxiety ebbed slowly under the onslaught of her brother's words, and he held her tightly again. David hadn't expected the tears, and he wondered if he had been too quick in dismissing her fears. He'd been a shit to her in the past, and just when he believed he had got himself together enough to help her out, the Vitali's had come along and swept her up in their powerful family. He didn't want to let her down now.\n\nCat had decided she wasn't going to tell David about the mysterious grandfather, at least not until they had done some investigations of their own and proved it to be true. The fact they probably didn't have the same father weighed heavily on her when he spoke of their parents, and made her cry all the more. She hated crying, but she found since the abduction that was all she seemed to do lately when in serious conversations. Maybe she did need to confide in Isaiah and find out if the sudden constant teariness was really caused by her messed up hormones.\n\nNow that she had told David, she felt a little better about the pregnancy. While he had dismissed her concerns, he hadn't dismissed the memory of the woman that made her question her own ability to parent, and had validated those feelings. She hadn't told Matteo or Ricco of her fears. They had their own issues where their mother was concerned, she knew, and didn't want to burden them with her dark thoughts.\n\nIt was David's girlfriend, Tracey, that eventually found them still sitting on the front porch and interrupted the siblings. The house on the hill teamed with people. Knox and Hugh, along with the security team and household staff, had taken up residence in the guest's rooms on the first floor. The house was, Cat realised, far too small for the family with their extra responsibilities, just as Matteo had said. She considered once again if the proposition of creating a whole new house, rather than renovating and adding onto the house, was a better idea.\n\nThe house was already immense, in her opinion, or at least she had always thought of it that way before coming here with the addition of several family members and their ever-growing staff and security. She looked out over the rolling sea and sighed. If they built anywhere else, they would never have this view. The view she loved and so inspired her. The view that was the main reason she had wanted to keep the house instead of letting Matteo sell or demolish it because of his memories of Nik being here.\n\nArturo and Logan had arrived on the Saturday with some of her art supplies, as well as the building plans for the house as it was now, and she had smiled. The supplies and plans the two younger men brought with them were just what she needed to truly consider the enormity of the task they were about to undertake. Now she just had to find a way to get the men that she loved to give her a little alone time to think without worrying that she would fall to pieces again.\n\nShe had known that, although he never looked at it in front of her, Matteo's phone constantly buzzed in his pocket, and she was sure Ricco's was the same, though his didn't buzz so obviously. She felt bad that she was keeping them from their work and their family, but each time she tried to reassure them that she was happy and content to watch a movie or go horse riding with Bradbury while they worked they had shaken their heads and offered to do those things with her themselves. They exhausted her each evening, even without the red room and all the equipment it contained. She slept deeply enough each night that she didn't know how late they had both stayed up going through the messages and emails they had received that day and talking in late night conferences. She knew they were relying on the other men of their family to follow up on all the investigations required following the revelations in the files her grandfather had sent them.\n\nSaturday had also brought Lucca, who had chafed at being left behind until Zachary had cleared him to travel. Isaiah had come with him to ensure he would rest his leg and not overdo anything after his head injury. The house took on a party atmosphere, and all Cat's plans for having some alone time went out of the window as she greeted guests and was forced to be sociable. She was glad to see David arrive and have their conversation about parenthood. Each time she saw him she wished she could spend more time with him. They had always been so close, so dependent on each other, and now it was as if a great chasm was widening between them that she couldn't stop.\n\n\"Here you are,\" Matteo said. \"The food's ready, come and eat something,\" he said, gently approaching where she sat with David and Tracy.\n\n\"Great,\" David grinned. He came to his feet, taking Tracy's hand as if to walk away without another word, but stopped. \"Tell him what you told me, Cat. He deserves to know. You didn't create that on your own, remember.\" With that, he walked away.\n\n\"Tell me what?\" Matteo asked, walking forward. He truly liked Cat's brother, and knew he always spoke his mind without beating around the bush, regardless of the consequences to himself, and he could see that Cat was not exactly happy with what he had just said.\n\n\"I don't think I could ever get tired of this view,\" she sighed. \"This was the main reason I wanted to keep the house, now I'm wondering if it's even going to be possible to renovate enough to make it work for your huge family.\"\n\n\"Our huge family,\" he rebuked mildly. \"You're the reason Ricco and I are in the position we are. You are the heart of our family. Without you, Ricco and I could never be the men we are destined to become.\"\n\n\"No pressure?\" she gave him a crooked smile.\n\n\"None what-so-ever,\" Matteo grinned and wrapped his arms around her. \"I just want you to be happy, Cat. Lately, with everything else going on, you seem to be smiling less, and I would do anything to see you happy and smiling again. Tell me what David meant, please.\"\n\n\"I am happy, honestly. I couldn't be happier. I married the man I love, and I have the love of his best man and brother as well. We are planning our future here, together, as well as a family of our own. You and Ricco never fail to make sure I know how much you both love me. How could I be anything but happy?\" Cat asked.\n\n\"That's precisely what I'm asking,\" he chuckled, trying to make the conversation lighter. \"You know we can be a little thick sometimes. You can't be subtle if you want something; you have to hit us over the head with it!\"\n\n\"What's for dinner?\" she asked, abruptly changing the subject. \"I'm suddenly starving. Will you still love me when I am as big as a house?\" she asked, smiling.\n\n\"Even more,\" he grinned. \"I'm very excited about it, to tell you the truth. When we redesign, do you think we should give the nursery an ocean view?\"\n\n\"The nursery,\" she mused. \"There is so much to think about with this house. I think I might be in over my head!\"\n\n\"That's why we have professionals to help us. You can trust Logan to bring it all together. He knows what he's doing,\" Matteo assured her. He'd said all of these things over the last two days, but he felt the need to say them again. \"Tell me,\" he said seriously, not letting her put him off again. \"David obviously thinks I need to know something you told him, and I have to wonder what you could tell him that you felt you couldn't tell me,\" Matteo said sadly. \"Didn't we agree to tell each other everything? To be honest about everything?\"\n\n\"We did,\" Cat agreed, as her insides cringed with the sadness in his voice. She turned to look back out at the view. \"I'm scared,\" she whispered softly so that it was barely audible to Matteo. If he was surprised, he didn't show it.\n\n\"You are safe here,\" he stood behind her, wrapping his hands around her waist and drawing her back against him. He couldn't blame her for being scared, with all of the dramatic events that had plagued them since she agreed to be his. If he was surprised about anything, it was that she had finally admitted it. She had seemed undaunted by everything the family had thrown at her time and time again, and, if he was honest, she only seemed to grow stronger and more confident with each test of her will.\n\n\"No, you don't understand,\" Cat said in an impossibly quiet voice. \"I'm scared of this,\" she took his hands and placed them over her belly.\n\n\"The baby?\" he asked. Now he was surprised. This was the one bright spark of good news they had received recently, despite how they had found out about it.\n\n\"What if I'm like my mother and have no maternal instinct? What if the baby is born and I feel nothing? What if I can't do it?\" she asked, her eyes filling with tears again.\n\n\"Are you planning on becoming a drug addict in the near future?\" he asked, furrowing his brow and watching her turn to look up at him. \"The drugs made her that way, you know that,\" he said patiently. \"You and David are perfectly healthy, which means she wasn't an addict when she had either of you. I would bet she wasn't always the way you knew her. Your fate is in your own hands, Cat. I would hope that no matter what happened you wouldn't turn to drugs or alcohol, but would turn to me if life got too overwhelming. Your mother didn't have the luxury, if the letters are true. Your father died when you were a baby, leaving her alone.\"\n\n\"My grandmother was there,\" Cat said, considering what he was saying.\n\n\"Would you be equally as happy with Theresa's support instead of mine or Ricco's?\" he countered. \"The comparison you are making isn't fair. Your life is nothing like your mother's. This child is going to have more parents to love it, more uncles, more aunts and more cousins than it will be able to count. Trust me, this child will have the best mother in the world, because you won't repeat the mistakes of the past, just as Ricco and I won't repeat the mistakes of our parents.\"\n\n\"How can you be so sure?\" she blinked a wayward tear to her cheek.\n\n\"Because I love you, and I won't let you down. Not now, not ever, and if anything ever happened to me, Ricco would be there. Maybe if your mother were surrounded by people who loved her, she wouldn't have become an addict or treated you and David the way she did. Love conquers all, as they say,\" Matteo smiled and kissed her lightly. \"This little one will be the luckiest kid in the world, because he has us, all three of us, to make sure he will have the best life possible.\"\n\n\"What's up?\" Ricco asked, coming through the front door onto the porch. \"Everyone is starting to worry about you.\"\n\n\"The enormity of impending parenthood is starting to hit home,\" Matteo said softly.\n\n\"Terrifying, isn't it,\" Ricco agreed. \"Still, we can't do any worse than our parents did, and we have each other to make sure that doesn't happen.\" He said simply, as if he had given it a great deal of thought. \"Let's face it, it wouldn't take much to be better than either of our mothers, and we've all turned out okay. So how hard can it be?\" He chuckled. \"Together, we can do anything.\"\n\nCat looked startled for a moment, then laughed softly with him. David had been right to force her to talk to them, she did feel better, and she felt far less reluctance to talk to Isaiah about her pregnancy now.\n\n*****\n\nIn the middle of the night, Cat was woken by a soft shake from Matteo, who sat on the edge of the bed fully dressed. She blinked into the dim light from the hallway that seeped through the crack in the bedroom door.\n\n\"What's going on?\" she asked groggily.\n\n\"Ricco and I have to go back to the city with Isaiah. Maryanne is in labour, it will probably be a while, Knox will bring you into the city in the morning. It's important that we are there to support Cobi. More so Ricco and Isaiah,\" Matteo explained.\n\n\"It's important Matt is there too,\" Ricco said softly. \"This is the first of the next generation of our table, so we need to welcome him into the world properly.\"\n\n\"Give me a minute, I will come with you,\" Cat whispered, struggling to get up.\n\n\"Sleep now, it will be hours yet. Knox will bring you and Logan up tomorrow when it's closer to the actual birth,\" Matteo assured her. He had argued with Ricco about taking her with them tonight, but he had lost that argument when Isaiah weighed in on her behalf. Cat had talked to Isaiah about her pregnancy and the rollercoaster of emotions she seemed to be on. He had admitted he would have been surprised if she wasn't on a roller coaster with everything going on in her life, and prescribed more rest, which he was happy to enforce that tonight.\n\n\"It will only take me a minute to grab some clothes, I feel fine. I'm awake now!\" Cat said anxiously.\n\n\"Doctors orders,\" Ricco said gently, seeing Matteo about to give in and let her travel with them. \"You need proper rest, beautiful. Please, sleep, Knox will bring you into the city in the morning. We will call when it looks close to the birth.\"\n\n\"Sleep, Kitten,\" Matteo whispered, leaning forward to kiss her and move her back down to the bed. \"We need you to start thinking about our baby and rest properly. Sleep, we will see you in a few hours.\"\n\n\"I'm pregnant, not injured or sick,\" she protested softly.\n\n\"Sleep, beautiful,\" Ricco said, leaning down to kiss her as Matteo moved away. \"It will ease my mind knowing you are here and safe and looking after yourself.\"\n\n\"Okay,\" she sighed. \"Call me, though, I don't want to get there too late for everything.\"\n\n\"We will,\" they said almost in unison, and left the room, closing the door and plunging Cat back into darkness.\n\nHer thoughts went to the life growing inside her. David's words had eased her fears, and, she had to admit, talking with Isaiah had made the pregnancy seem more real, despite feeling no different physically. She rolled onto her back and placed her hands on her belly. Theresa was wonderful, and Cat thought of her as a mother-figure, but she wished she had someone, anyone in her own family to ask how they felt, if the pregnancies were worry-free and what their labours had been like. She wished she knew her family's medical history. What if there were syndromes or disorders in her DNA that the child could inherit? How would she or the doctors know what to check for? There was so much that could go wrong.\n\nThere was possibly one person who could tell her stories that would relate to her. Her grandfather, if he truly was her grandfather. It occurred to her that she had never spoken to Bradbury about that one strange comment on the last night of the Gathering. He had said she reminded him of someone and had stared at her as if trying to place where he knew her from. Had he known the woman in the photo? she wondered. Could he possibly know her grandfather and how to contact him? The thought made her anxious for the sun to rise so she could ask him.\n\nHer mind wondered about the man who had written her the letter, and the words rolled in her mind. Apologetic and kind, the man had seemed upset by the discovery of her existence, and she wondered how he couldn't have known that his son had a child, or at least got her mother pregnant. She tried to remember what her grandmother had told her about her father, but the memory kept sliding away. Had he been alive when she was born? She couldn't even remember if her grandmother had told her how he had died. Her mother had barely spoken to her, so she knew no information had come from her.\n\nAt some point Cat had fallen asleep again, her dreams filled with strange men in suits and large country manors, like seen in turn of the century movies. It was a cosy and warm place, and she felt content there. The dream morphed into a more modern house, and the men in suits became the men she loved. As she came to wakefulness, she smiled. Determined to use her time alone this morning to her advantage, she got up and went to shower and dress for the day, checking the clock and seeing that it was almost seven.",
        "Logan and Lucca were already in the kitchen when she arrived, and she smiled, putting her phone on the table before taking a seat with them and helping herself to a stack of pancakes that sat in the middle of the table.\n\n\"Nothing yet from the hospital?\" she asked, reaching for the maple syrup.\n\n\"Not yet, but that's not unusual, these things take time,\" Lucca said as if he was an expert on such matters. Cat raised an eyebrow at him but said nothing. \"Fine, I called Mama this morning, and she told me that.\"\n\n\"Well, her, I believe,\" Cat laughed lightly.\n\n\"Catriona, would you like fruit and yoghurt this morning?\" Lisa asked quietly, surprising Cat with her proximity.\n\n\"Some strawberries would be lovely to go with the pancakes. They are just what I felt like this morning!\" Cat enthused.\n\n\"I'm sure I can find you some,\" Lisa assured her, and moved away again.\n\n\"It's exciting to have a nephew arriving. I'd like to go in this morning whether they call or not, but I'd also like to have a quick talk with Lisa and then Bradbury first,\" Cat spoke casually as if this was something she always did, when she tended to avoid Bradbury unless he was shadowing her. Logan looked at her curiously, but she cut off any question he might have by continuing. \"Do you think we could have a quick look at the house plans before we leave so we can chat about that on the way in?\" she asked him. \"Not just the house, but the property boundaries as well, so I can see how much room we have to work with?\"\n\n\"Sure, I was hoping we could get to that today,\" Logan agreed easily. \"Will Arturo travel with us?\"\n\n\"I guess that depends, Knox is driving me, so Hugh could bring him and Lucca, unless we all want to be cosy in the back of the car,\" Cat laughed lightly, again showing her good mood. Her dream had left her feeling good, and she felt as if she wanted to get on to the house quickly, given the time constraints her pregnancy would add to the renovations of the main house. \"That would make it hard to talk about the house plans though, and I had an idea I'd like to run past you.\"\n\n\"Sounds good,\" Logan said. \"We can use Matt's office if he's not here.\"\n\n\"Do you mind if I sit in?\" Lucca asked. \"I've been going a bit stir crazy with Matt's ban from any work,\" he admitted.\n\n\"I don't mind, but Logan's the go-to guy for this project, so it's up to him,\" Cat agreed and made sure Logan knew she had his backing for any decision he wanted to make regarding the project.\n\n\"You can sit in. As to whether I let you speak is a different question entirely,\" Logan teased in a deadpan voice, as if he wasn't sure about his cousin's ability not to get overly invested in the project.\n\nIt was almost eight thirty by the time she pushed her plate away and excused herself from the table, telling the two men she would meet them in the office after she had spoken to both Lisa and Bradbury. At the last minute she added Arturo to the list of people she needed to speak to.\n\nArturo was already aware of her plans for the day and had planned to follow her to the hospital with Hugh. He went over a few details for the week, but he had committed to nothing, having expected to find out today how long they would be staying at the house on the hill. He asked if there was anything she would like from the penthouse while they were in the city, and called Bradbury to meet with Cat before leaving to attend to the myriad of emails that came in from extended family members and charity organisations that were keen to have the new Mrs. Vitali patronise their events.\n\n\"If you and Hugh could talk with Lisa about her needs, and any shopping she can't order online that you could pick up for her on the way home this evening, that would be wonderful,\" Cat suggested to Arturo, as Bradbury came into the room. \"Can you give me a few minutes with Bradbury now, please?\"\n\n\"I'll go and check with Lisa,\" Arturo agreed and walked away, wondering why Cat would want to talk to the tall, silent security man.\n\n\"Please, have a seat,\" Cat indicated a comfortable chair near where she sat in the living room.\n\n\"You wanted to see me?\" Bradbury asked quietly, confused as to why she would suddenly want to talk to him privately like this.\n\n\"I did,\" Cat said uncomfortably, not knowing how to broach the subject and deciding just to get to the point. \"In the elevator during the gathering, you said I reminded you of someone you once knew. I was wondering if this was the woman I reminded you of.\" She passed him the photo of Katinka that had arrived with her letter from the person claiming to be her grandfather.\n\n\"It could be,\" he said, looking at the picture. \"Matteo already showed me this picture and asked the same question. I couldn't say for sure. The woman I knew was a neighbour, and she disappeared when I was quite young. I remember she used to bake the best cookies, and always give me a small pile. That particular night, the way you wore your hair and the red dress, just reminded me of her.\"\n\n\"She disappeared?\" Cat frowned.\n\n\"Yes, the police came to ask my parents questions after she was reported missing,\" he explained. \"She was a nice woman, their house was always full of people, and they had large, rowdy gatherings every weekend, so my parents were quite happy when she went missing, and the parties stopped. The rest of the family eventually moved away.\"\n\n\"I see. And you told Matt all of this?\" she asked, watching him nod. \"You're not sure the woman in the picture is the same woman?\" Again, he shook his head after looking at the photo again.\n\n\"Okay, here's the thing,\" Cat took a deep breath. \"If you do know the family, and for some reason don't want to say, that's fine, I won't push it, but I never knew my family when I was old enough to ask important questions. I'm planning a family of my own, and I guess I'd like to know if there are any complications or health concerns I should know about. So, if you suddenly remember who these people were, or if you know and just don't want to say, for whatever reason, could you let them know I would desperately like to ask a few questions, just to ease my anxiety about becoming a mother myself? It's hard when I know nothing about my own family.\"\n\n\"I have already told Matteo everything I can remember about the woman I knew,\" Bradbury said stiffly, not denying that he may know more about the woman's husband or family. \"If I remember anything more I will tell you both, but it was so long ago, I barely remember more than how she looked and the smell of those cookies.\"\n\n\"Speaking of which, I have been craving a chocolate slice that Lisa made for me once from just a description of something I had tasted as a child. It's amazing, I might get her to box some up for Maryanne, if there is any left,\" she grinned. \"Thank you for talking with me. If you remember anything, or can relay my message for me, I would be grateful for any information.\"\n\n\"Will you be leaving for the hospital soon?\" Bradbury asked.\n\n\"If they haven't called by ten thirty we will go to the hospital and wait with them,\" she said, looking at her watch as she came to her feet with Bradbury. \"I'm just going to meet with Logan for a little while. We'll let you know when we are ready to go.\"\n\n*****\n\nLogan had been excited by the ideas Cat had, and they talked enthusiastically, holding the drawing between them. When they got to the city, Logan went to his office, telling her that the immediate family was a big enough crowd and that the cousins would be expected the following day.\n\nThe baby had arrived early in the afternoon, much to the relief of those that had arrived in the middle of the night, along with the mother to be. Having done their family duty and welcomed the little man into the family two weeks early, Cat and Matteo left the hospital for the long drive home to the house on the hill. Ricco was staying in the city to be with Cobi and celebrate the birth of his first child. The twins had become close again over the last month and had begun enjoying their shared bond again now that Cobi had accepted his place within the new table.\n\nArriving home, Cat frowned as she walked into the quiet house. The lighting was soft, and it appeared that the staff and guests who had been there with them over the last few days had all disappeared. She looked up at Matteo, but before she could formulate the question to ask what was going on, he dipped his head and kissed her.\n\n\"It feels like forever since we have been alone together,\" he murmured softly. \"Come with me,\" he smiled and took Cat's hand.\n\nShe looked at him curiously but said nothing as she followed him through the quiet house. As they approached the bedroom, she could hear water running softly, and flickering light emanated from the master bathroom. Soft music filtered about the sound of the slow running water, and she was surprised to know he had set this up without her realising. She hadn't seen him use his phone as they approached the house, but that didn't mean he, or Knox, more likely, didn't let Lisa know when they were close by.\n\nMatteo's arms wound around her as he stood close behind her, taking in the romantic scene. His hands moved to unzip and help slide the dress from her shoulders and down over her hips. He nibbled at her earlobe before kissing down her neck and over her shoulder as he helped her shed her clothes, smoothing his hands gently over each inch of her exposed flesh.\n\nCat turned in his arms as her bra came away and she leaned up against him to kiss him. Bending down, he slid her panties down her long legs, his hands gliding over the soft skin and placing a kiss on her thighs before standing again with a smile. Wordlessly, he took her hand and helped her into the bath and watched as she sank down into the fragrant water. She watched as he stripped quickly, luxuriating in the warm scented water and having the bath to herself while he put on a show for her. He went to an ice bucket, and as she began to open her mouth to remind him that she couldn't drink champagne, he grinned.\n\n\"It's cider,\" he said softly, and poured the golden bubbling liquid into champagne flutes. \"Just relax, Kitten, and enjoy the moment.\"\n\nCat took a sip of the icy cool liquid, refreshing with the humid warmth of the bathroom. She smiled and moved to make room for him to sit behind her in the bath. The water sloshed and slowly calmed around them as she settled back against him. She purred softly as his hand curled around and slid over her chest and tummy as he sipped his cider.\n\nMatteo placed his glass on the wide edge of the bath against the wall and began to bathe her. He soaped his hands, working up a thick lather and ran them over her shoulders and arms before paying attention to her chest. He caressed her breasts and teased the pointed peaks of her nipples until she was purring loudly for him. It was a sound he never tired of, and he nibbled her ear, moaning softly with her.\n\nHis hands slid down her body, rubbing in circles. As each circle was completed, the following circle moved slightly lower in a teasingly slow descent toward her pussy. His fingers brushed through her pubic hair and down into her slit as she moved her legs to make room for his hand. Her breath became quicker as he teased her clit, and she gripped the edge of the tub so as not to sink down into the water as she pushed against the pressure of his fingers. His fingers moved lower, cupping her pussy while his thumb remained on her clit. His other arm wrapped around her body, holding her to him, trapped as he brought her to orgasm, her body shaking. Her shaking seemed almost violent as the water rose in small waves around them, and she cried out, arching against the arm wrapped around her waist.\n\nCat could barely contain herself; the orgasm seemed to last forever as his fingers didn't slow their movements, forcing her body to continuously react to the excruciating torture. Only when she thought she couldn't take anymore and begged for mercy did he stop cradling her in his arms as she came down from the high.\n\nWhen he was sure she was at least partially recovered, he moved from behind her and stepped from the bath, encouraging her to lie back as he dried off. Matteo then helped her from the bath and wrapped her in a large fluffy towel and pulled her against his body once again. He held her tenderly, letting the towel fall open so he could feel her breasts pressed against his chest. He kissed her then, deepening the kiss and allowing her to feel his desire and passion for her. Picking her up while still kissing her, he walked into the bedroom, laying her on the bed on her tummy.\n\nCat felt the soothing cream that Ricco usually used when she was marked in a scene in the red room against her skin as Matteo began to massage her shoulders and neck. She melted, wondering why she was getting such soft sensual attention tonight. Not that she was complaining, but they hadn't ever done anything like this before. Their lovemaking was usually hot and needy and full of passion and pain. This seemed somehow oddly sweet and sensual. She purred loudly and floated on a cloud of endorphins left from her orgasm in the bath.\n\nMatteo allowed himself the indulgence of slowly getting reacquainted with every inch of her body as she lay relaxed and content below him. He worked down her back and legs before finally allowing himself the pleasure of fondling and massaging the perfect globes of her ass. He had been restraining himself, but the feel of her ass and knowing how close he was to being in her and feeling that ultimate closeness to her, he moved and gently encouraged her to roll over.\n\nCat felt heavy and lethargic as she moved, but purred happily when she felt his skin against hers as he slid up beside her on the bed. He placed a finger under her chin, turning her head to kiss her, lengthening and deepening the kiss as his fingers trailed down her neck and over her shoulder to once again cup her breast. Her hand slid down his body, taking her time, moving in the same slow, languorous pace he had set. Reaching their destination, her fingers curled around his cock. Her fingers slid over the head, rubbing precum into the soft flesh there.\n\nMatteo groaned and lifted his head from the kiss as she played with his cock. His head moved down to capture one of her nipples in his mouth. He sucked hard, scraping his teeth over the turgid flesh and revelling in her small whimpered purr. He grimaced against forcing her hand away from him as he moved down her body, kissing her flat belling, marvelling that his child grew within this amazingly sexy woman. She was going to give him the greatest of all gifts, and he couldn't believe how lucky he felt. This night was going to be about spoiling her, the way he should have when they found out about her pregnancy, instead of causing the additional drama and the breakdown that brought them to this house together. He drew a breath as he moved between her legs, widening them and watching the lips of her pussy part like an opening flower. He moved forward, enjoying the scent of her arousal, and licked the length of her slit.\n\nCat squirmed, gasping as sensation shot through her like an electric current. He rolled her hips and rocked them toward his mouth as he licked and nibbled, teasing her before using his hands and fingers to add to the sensations she felt. After the first orgasm, it didn't take long for her thighs to begin to tremble around his head, and he clamped his lips around her clit as his fingers thrust into her, making her cry out and buck her hips against him.\n\nUnable to wait until she came down from the high, Matteo crawled up her body and thrust into her hard and deep, making her cry out again as he loomed above her, watching her pleasure filled expression. He rapidly got into a steady rhythm ploughing into her, wanting her to come again with him this time. His pushed one hand into her hair and pulled her head back, arching her body below him and giving her the touch of painful pleasure he knew she enjoyed and needed from him. She cried out, gasping open mouthed, and he lost the battle he had been fighting with himself. His cum pumped in long bursts from him, and he groaned loudly, his eyes closing. He felt, rather than saw, her pussy contracting around his cock, milking at him as she came with him, her body straining in its arch against his.\n\nMatteo stayed frozen in that position for long moments, revelling in every sensation and the feel of being so closely bound to the woman he loved more than anything else in the world. He had needed this moment, this slice of time away from his brothers and cousins and extended family. Away from Ricco, even though he hated to admit it. Finally, he fell to the bed beside her, wrapping his arms around her and nuzzling into her neck.\n\n\"Wow,\" Cat whispered.\n\n\"Mm, wow,\" Matteo murmured, feeling exhausted and wrung out. He needed Cat more than anyone knew, including Cat. She was his lifeline and his solace, and claiming her this way, making love to every inch of her, gave him a sense of contentment he couldn't find anywhere else. They had been in the house for days, possibly the longest amount of time the three of them had spent continuously with each other, and he had needed this. He considered bringing up the conversation of date nights again. Ricco had to be feeling the same way, and it occurred to him that neither of them had asked Cat how she felt about date nights or being with them both all of the time. Their lives had been so full with one drama after the next that the issue had never presented itself before, and he realised that managing their relationship was going to take more effort and diplomacy than he had bargained on, if only for his own sanity.\n\n*****\n\nDuring the following week, Matteo and Ricco commuted between the city and the house on the hill with Cat making the trip twice in two different helicopters that the men were test driving, so to speak. When in the city, she spent her time with Maryanne and the other Vitali women, cooing over the new baby boy who seemed to be the most contented child Cat had ever seen. Maryanne, herself, was glowing, and overflowed with happiness and pride.\n\nWhen at the house on the hill, she met with Logan, an architect, and an interior designer to create the space she had envisaged in her dream before presenting the plans to Matteo and Ricco the following week. Time just seemed to race past her, and her days were filled with a variety of tasks and activities that left her little time to worry over the looming shadow of a grandfather and the family's investigation into him, or her concerns over her pregnancy and her fitness to be a mother.\n\nIt was part way through their third week at the house on the hill when the plans for the future of the house were ready to be shown to Matteo and Ricco. She sat nervously in the background as Logan and the two others presented computer-generated pictures of what the house would look like, and ideas for the surrounding area now that they had obtained contracts for three of the surrounding blocks of land. Cat had wanted to maintain a stable, and she was keen to keep the meadow of wildflowers, despite the size of the house they were presenting.\n\nThe house stood like a jewel atop a ring of buildings behind it. There were no renovations being made to the exterior of the existing house, and only minor alterations being made to the layout inside. Most of the work on the inside would be cosmetic to reflect the three people who would live there. The ring of smaller buildings would include an Athenaeum, a meditation retreat, an art gallery and studio, as well as a cosy retreat for the ladies of the Vitali, guest suits, staff quarters, and a building to house the server and generator that would be necessary to ensure constant contact with all of the family. The inner green space of the ring would host gatherings of the family and allow for small wedges of space to incorporate a kitchen garden, a Zen garden, and play equipment for children. To the right exterior side of the ring would be the helipad, a large garage, and room to create a small landing strip, if Matteo still wanted it alongside the helipad. To the left side would be a stable and training area for the horses.",
        "\"It's a big undertaking, but if we get the house done first you could live here while other works were being completed,\" Logan said. \"We've got at least six months or so before you need to be able to move in?\" he looked at Cat, who nodded her agreement and blushed. \"Most of the heavy lifting can be done by then, if you're not squeamish about the cost and the weather holds.\"\n\n\"There's a large gym as well, next to the meditation retreat. We could move it, though, if that doesn't work for you.\" Cat said quickly, as Matteo looked at the plans in deep concentration while he listened to the explanation from the three professionals.\n\n\"These buildings would all be relatively uniform and compliment the house?\" Matteo asked, not one hundred percent sold on the exteriors shown in the drawings.\n\n\"We thought so. But what did you have in mind?\" Bryce, the architect, asked.\n\n\"There are some new environmentally sound products I'd like to try,\" Matteo considered. Building had always been his first love, and building this house had been a labour of love for him in more ways than one. He felt he needed the change to be more pronounced than it was, but he was reticent to say so directly because he had given the house to Cat and promised her she could do as she liked with it. It wasn't that Nik haunted this house as he thought she would, but rather the fa\u00e7ade was hard and angular and cold almost, just as Nik had been, and he felt Cat needed something softer and more natural. \"But it would be up to Cat in the end.\"\n\n\"I think I'd like a more natural look,\" Ricco came to Matteo's rescue. He hadn't given Cat the house or promised her not to interfere. \"These greenspaces and natural areas that have been incorporated into the design don't quite gel with the glass and carbonate of the exterior. I think cedar or some sort of environmental save the world type stuff that Matteo loves using could soften the coldness but keep the view.\"\n\n\"I guess,\" Cat said, feeling forced to speak, and Logan and Bryce looked at her for confirmation. \"Do you all mind if I chat with my husband alone for a moment. We won't be long.\" She started to lead the way toward where his large office stood. She was suddenly mad, and she didn't want to fight in front of all those people. As soon as the door closed behind them, she wheeled around and glared at him, \"What the hell was that about?\"\n\n\"What was what about?\" he asked, shocked by the fact that she was angry with him. He'd made a suggestion, that was all.\n\n\"Good grief!\" she flung her hands up in the air.\n\n\"I was just suggesting a change to the exterior. It's your house, you can do what you want with it,\" Matteo said, confused by how angry she was with him.\n\n\"That's just it! It's not my house, it's our house, and you're the one with the expertise, not me! I don't know anything about building or materials or whatever!\" she threw her hands up again. \"I just didn't want you to knock it down! Now, suddenly, you're acting like I will explode if you make a suggestion in front of everyone!\" she said hotly. \"You've spent the last months telling me it's our family, our home, our money, our life, but suddenly I have to take responsibility for this house on my own when I don't have the foggiest clue what I'm doing, or even if it's possible when you so obviously want to be involved! How is that our anything? I'm getting more honesty and input from Ricco about this house than you, and you're the man with a construction company!\"\n\nMatteo stared at her dumbly. He couldn't work out whether she was mad because he had made a suggestion or if she was mad because he hadn't been more involved in the process.\n\n\"Look, I took all this on because I didn't want the house demolished because of your ex! I didn't want you unhappy here because you were reminded of her, but you have told me several times you haven't even thought about her while we've been here! So why aren't you helping me? It will be our home, not mine! You obviously talked to Ricco about it!\" Cat raged. \"Why are you acting like I'm some sort of control freak that won't let you make the changes you want? You don't think I have enough to deal with at the moment and that I need the stress of trying to read your mind about what you want for this as well?\"\n\n\"But I gave it to you,\" he said quietly. \"The house, I gave you the house the day you agreed to marry me.\"\n\n\"So you're saying what's yours is mine, and what's mine is mine too?\" Cat asked, trying to show how dumb that statement was. \"We got married, no prenup, no agreements! You keep telling me everything is ours! Why is this house different?\" She challenged him.\n\n\"It will be our house,\" he let out a frustrated breath, \"I want you to have what you wanted. Not a house I designed and built before I even knew you. I already did that with the penthouse. I wanted to knock this house down and build you a house of your own; you are the one who wanted THIS house.\"\n\n\"It's a great house, I would have asked for the same, if not similar, and the penthouse is wonderful because you created it and let me have input into the interior. This is what you love; construction and building materials, and all the things that make me glaze over with the details. The bigger idea's; the concepts, the interior feel, I'm good with, but I don't care enough about the difference in density of brick compared to stone and how they expand and contract in different weather cycles. I just want it to look pretty, Matt,\" she finally sighed. \"I want a home we can bring up our family in. I don't really care about its construction, that's your thing. I know I should be more interested, but the facts and figures and graphs go over my head. Can't you just build it now that I have said what I want?\"\n\n\"You don't want to be involved at all?\" he asked, not really understanding what she was saying.\n\n\"I do, but only on the surface level, I am happy to choose materials from how they look, and colours, but I don't understand half of what goes into the logistics of building a house this big. I can't do this, and Logan needs more guidance than I can give, and I need you to stop acting like I have to make all the decisions!\" Cat flopped back into the chair having run out of steam and anger. \"I don't want the pressure or responsibility for this to rest solely with me. I'm not even sure if what I have asked for is entirely possible, or if Logan is just humouring me. I have no idea what I'm doing, and everyone seems so worried that I will start crying again if they tell me the truth.\"\n\n\"She's right, you know,\" Ricco said from just inside the door. He'd come in during the heated diatribe of Cat unnoticed and had just stood, taking it all in. \"You were acting weird in that meeting, we all noticed it.\"\n\n\"I'm weird?\" Matteo asked, turning to look at his brother.\n\n\"Matt, you're a control freak. A lovable one, but a control freak non-the-less, it's how you've been so successful in business. Seeing you seem tentative to even make a suggestion is weird. Cat's exhausted from doing all of this alone, and you're being weird about it, so she can't ask for the help she needs when you are the one guy she should be able to turn to,\" Ricco lectured. \"I'll admit I didn't realise how pressured she felt either, but I don't know about this stuff, aside from the legal issues, but this sort of law is more Cobi's domain anyway. If Cat decides to sue you for undue hardship, then I'm her man.\"\n\n\"There's a thought,\" Cat grinned. \"How much do you think I could get?\"\n\n\"As everything is our money and our assets, you would get exactly the same as you have now,\" Matteo grinned. \"Everything.\" He walked to where she sat and picked her up, sitting down in the chair and pulling her into his lap.\n\n\"Okay, I'm listening, tell me what it is you want and how involved in the construction you want to be and I will get it done,\" he kissed her lightly. \"Logan will still be project manager, but I will oversee the grand design and details.\"\n\n\"Can you talk to him about a playroom? I just couldn't,\" she blushed. \"Both of you, if you want elements in the meditation space, like the one you have now.\"\n\n\"We can do that,\" Matteo said. \"Anything else?\"\n\n\"I'd like to see any changes to the design as you make them, I just don't need to know the minute details of why one cement is better than another cement. It's cement, it's hard and cold and grey. What's to know?\" Cat asked sincerely, making Matteo chuckle.\n\n\"There's a bit more to it than that, but I get your point,\" he continued to chuckle.\n\n\"Great, because I'd like a date day with Cat after most of the family and staff have returned to the city. We'll just keep Hugh and Bradbury for the day,\" Ricco said. \"I'd like to have a picnic in the meadow with the wildflowers before it gets lost under the construction machinery. Just the two of us,\" he explained further as Cat looked questioningly at him.\n\n\"Sounds good, even if we haven't made a decision on the type of cement, we can have a team in here marking out the construction and levelling the ground next week,\" Matteo nodded. \"I can meet with the guys again tomorrow and make some of those decisions on specifications for us,\" he said. \"I'll let you know if we change any details of the design.\"\n\n\"Thank you,\" Cat smiled and kissed him lightly. \"Can you tell the guys to come in here, they can show Matt the computer graphics that he can fiddle with.\"\n\n*****\n\nRicco laid out several lengths of the specialised rope he had ordered weeks ago when he had first taken Cat to his meditation room at Uncle Salvatore's house. He hadn't planned to have this moment with Cat so soon, but with the building on the site about to begin, he had no choice. He had sat in his office day after day staring at the paintings of wildflowers and planning the scene in his head. He had ordered the equipment he needed and, luckily, it had come in on time.\n\n\"Arturo and Lisa just left, we have the place basically to ourselves now,\" Cat said, coming into the office space where Ricco was laying out the strangely shaggy green rope.\n\n\"Hugh and Bradbury are in the security alcove?\" he asked.\n\n\"I think Bradbury is doing a perimeter check first and making sure the driveway gates are locked,\" she said, but knew that he would return to the security alcove when he returned.\n\n\"Good, it's been a while since we've had time alone,\" Ricco said softly, and moved to her, kissing her with a passion that belied his smooth, calm voice. \"I told you once I had an idea for Matteo's birthday, which isn't until November, but, not knowing how much of the field will survive, I need you to trust me now and help me with this,\" he began.\n\n\"You planned a photograph like the one in your retreat?\" she asked, looking again with new eyes at the equipment in the room with them.\n\n\"Yes, now I think it will be for my birthday next month by the time we check the proofs and decide on size and framing options,\" he answered a little anxiously. He worried that Cat mightn't want to be photographed in such a way after her reaction to the threat of public binding before the wedding.\n\n\"So, it would just be you and me out there, and the only people who will see the photos are you and Matt?\" she asked, considering what he had said.\n\n\"Yes, unless you say otherwise. Even the ones Matteo sees, you will have final say over,\" he reassured her.\n\n\"It's a little different now that I'm pregnant, my breasts are really tender,\" she prevaricated.\n\n\"I have noticed the small changes in your body,\" he chuckled and kissed her again. \"I love this body and know every little piece of it very well. I am looking forward to seeing your belly grow and change with our baby, as well as your breasts grow and fill with milk. I want it all. Every experience we can possibly have together, I want them all, including today. This is possibly our last chance to take these pictures of your body before it changes. It might be nice to take them again in a few years and show how being loved so much has changed you. You would never have to worry about what to get me for my birthday if you posed for me each year.\"\n\n\"I get to see them before anyone else, even Matteo?\" she asked. \"I would get the right of veto?\" she asked. He nodded, a small grin starting to curl his lips. \"I guess enough people know about the playroom that a picture in your gallery wouldn't raise too many eyebrows, as long as it was artistic and not pornographic,\" she said softly.\n\n\"Did you think anything in the gallery was purely pornographic?\" he asked, a little hurt by the comment.\n\n\"No, but I am the mother, it would matter if other people saw it and knew it was me,\" she sighed.\n\n\"Trust me, with the shot I have in mind no one would know for sure if it was you or not,\" he grinned wider as he knew she was saying yes now that she had expressed her concerns. He kissed her again, deepening the kiss and peeling off her shirt and bra as they stood close together beside the desk where the rope he planned to use lay.\n\n\"It's cool outside this morning, so I'd like to do most of the binding here, and then, once the sun has warmed the ground, we will go out,\" he murmured, running his hands over her tender breasts. \"Will you call me Master today?\" he asked in a husky voice, making her look up at him.\n\n\"Yes, Master,\" Cat whispered. She hadn't seen the darkness in his eyes to this degree for some time, and a quiver of anticipation ran through her. True to his word, he had never pushed his darkness onto Matteo, and, as he had said, they had little opportunity to indulge his pleasures over the last weeks since the gathering and wedding.\n\n\"Thank you, beautiful,\" he captured her lips again, his kiss becoming more demanding and possessive now that he had her consent to truly dominate her today. He moved to the dock where his phone nestled and turned on the device, and quiet, soothing music that had natural notes through it started playing. He brought forward a stool for her sit on as he worked.\n\nHe took up the first rope and stood before Cat. Starting with a loop of rope, he draped it around her neck and then began a series of intricate and decorative knots with the shaggy green rope. It was softer than the rope he usually liked to work with, and he made small adjustments as he created highly decorative patterns between her breasts and around her waist and up her back to the collar of the rope at the nape of her neck.\n\nWhile he worked, he kissed and teased her skin. The chest harness almost complete, he had purposely left her breasts untouched between the strands of rope. Once they moved outside, he would add the finishing touches, which might cause her sensitive breasts some discomfort. Due to the pattern and style of Karada he had designed, he didn't want to bind her breasts or hands until she was in position so that it would not be an overly long time, which would cause her more discomfort than he was willing to have her bare due to her pregnancy. He kept this to the forefront of his mind, despite becoming excited at the fact that she would suffer for him today. These initial ropes could be done here before they moved on to the fun and games of what he had planned for them today.\n\nTying off several strands, when he stepped back she had several long ropes hanging down from the chest harness she now wore. He'd been planning this for weeks, and, as he looked at her critically and tilted his head, he made several small adjustments.\n\nCat took his outstretched hand and stood obediently as he undressed her, completely discarding her skirt and underwear. Ricco picked up another length of rope and, with practised care and firm hands, he bound her waist, creating matching intricate patterns with the rope over her hips and loosely between her legs, nestling beside the lips of her pussy rather than between them. He kissed her then, rubbing against her and showing his desire for her, but not acting on it before breaking the kiss and moving away.\n\nThe music played softly, and neither of them had spoken for the longest time as he prepared her as much as he could before taking her out to the meadow where he planned the photo shoot to take place. Picking up a pale blue kimono, he helped her into it and gathered up the long ends of the rope, tying them in loops to the waist of her Karada.\n\nCat slipped on some flat shoes and held the kimono tightly closed as they exited the house, with Ricco leading her out to where he had set up what he needed. Cat had to admit she was amazed by his preparation. The cameras and a tripod were set up on and around a thick picnic blanket on a small patch of clipped grass in the middle of the meadow. An insulated picnic basket stood to one side of the blanket, and she knew that Lisa would have prepared something sumptuous for their lunch. Large bunches of the wildflowers and grasses that had once stood on this clipped grass lay around the blanket.\n\n\"This is lovely, Master,\" Cat whispered, keeping to her submissive role, but finally feeling the need to speak and tell him of her appreciation of the scene he had set.\n\n\"You are lovely,\" he pulled her to him, kissing her. Breaking the kiss, he stroked her face. \"You're so beautiful,\" he whispered, and kissed her again, pushing the kimono from her shoulders, exposing her body to the cool air of the day. Winter had been late in starting, but there was still a slight crispness to the air. \"Now the fun begins,\" he murmured, his eyes flashing darkly at her as he stepped back again.\n\nRicco moved again to start on the lengths of rope that hung from her waist rope. He knotted two of the lengths together, his fingers working nimbly as he drew it from the back to front over her shoulder. He positioned the knots above and below her nipple, pulling the hard, pink nub between the two strands of rope, trapping it as if in a rope clamp before continuing the knots back down to the waistband. He repeated the process on the other side before running a rope between her legs, knotting it at her clit and anus to rub and titillate her each time she moved.\n\nCat's body, which had begun responding to what was happening when she had first seen the darkness in his eyes and whispered the word Master to him, went into pure need as the ropes caressed and teased her most sensitive parts. He took her hands, binding them behind her to the chest harness so that they were bent at the elbow and her forearms rested side by side within the spiral binding. This had the added effect of pulling her shoulders back and thrusting her breasts forward, making the bindings trapping her nipples pull against the pink flesh and cause her to whimper and squirm, which only put more pressure on the rope between the lips of her pussy and ass cheeks.\n\nRicco enjoyed the sight and sound of Cat as her breathing quickened noticeably and the small panting whimpers escaped her mouth. She was perfect, so utterly perfect. He crowned her head with a circle of wildflowers and smiled. Kissing her neck, he swept her hair over one shoulder and walked her forward into the long grass.\n\n\"Don't move at all,\" he murmured as he moved around her, placing wildflowers and grasses to blend with the green rope bindings. He had created props with a mixture of rope and bamboo, and, as he set the first shot, it looked as if the meadow itself was reaching out to claim her. He undid and repositioned her arms down and backwards with her hands about a foot from her body, her wrists wrapped in restraining green rope and grasses. He placed a soft pad beneath her, then he took up his camera.\n\n\"Kneel!\" he commanded, and took pictures rapid fire as she lowered down into the meadow. He went to her then, caressing and kissing her exposed skin as he repositioned not only her but the props and grasses around her. This was the specific shot he wanted and had envisaged... A girl in a meadow surrounded by nothing but blue sky, sun, and the meadow which bound her with love. He moved around her, taking shots. He lay on the ground as well as stood over her, giving instructions for movements of her head.",
        "He had her lift her head to the sun, then had her bend all the way forward as if worshipping nature, and he continued to move and manipulate her, enjoying that she was becoming more and more turned on by the situation. His own cock was straining heavily against his pants when he lay her on her back and positioned the props and nature to look as if it was making love to her, caressing her trapped breasts and exposed thighs, pulling her legs apart. Moving back to his equipment, he retrieved an egg and smiled, as he had no need of lube to insert it in her pussy.\n\n\"Enjoy the feel of it, beautiful,\" Ricco murmured, leaning over her, \"I want you to come for me right here like this with the rope and the meadow caressing you like a forbidden lover. I want to see you explode into a million pieces for me and float away on a cloud of those pieces.\"\n\n\"Yes, Master,\" Cat nodded, beside herself now after all of the titillation and the egg buzzing rapidly inside her.\n\nRicco alternated between hovering over her and lying beside her to capture the moment, when it all became too much, and she arched up, straining against her bonds, a look of pure passion on her face as she gasped and cried out, her body shaking. Unable to stay passive any longer, Ricco tossed his camera to the side and practically tore his pants off. He released the ropes between her legs and pulled out the egg quickly as another spasm wracked her body, and then entered her hard and fast. He pulled the hard nipples from between the ropes, clamping them tightly, and left the rope lying on the flesh beside the throbbing nipples, revelling in her cries of painful pleasure.\n\nCat felt his urgent need of desire as he took her, and she cried out for him as he fucked her as if he was possessed by the darkness within him, her tortured nipples sending her over the edge again. She lay almost immobile in the bindings he had placed around her. It was only a matter of moments before she came again, and he groaned, coming with her, letting go of all of the self-control he had imposed on both of them over the hours they had spent creating what he hoped would be the hottest pictures he had ever taken.\n\nRicco carried her back to the blanket and placed her on her knees. After a few moments where she looked unsteady, she drew a deep breath and knelt up, straightening her back and looking at him passively.\n\n\"Thank you, Master,\" she said softly, as he seemed to consider her as if waiting for the words.\n\n\"I'm finished taking the photographs, but I am by no means finished with you. How are you feeling?\" Ricco cupped Cat's chin and looked into her eyes seriously. \"I do not wish to unbind you until I have checked the proofs. Are you comfortable for now?\" He knew, having released the crotch and nipple ropes, that none of the other bindings should cause her undue discomfort, although her shoulders and arms would begin to ache.\n\n\"I am fine, thank you, Master,\" Cat said in the same soft voice she had used since he had asked for her submission. \"I am thirsty. If I could have a drink, please, Master?\" she asked.\n\n\"Hungry as well?\" Ricco asked, as he opened a bottle of water and, placing a straw in it, he held it to her lips, allowing her to drink as she needed. He unpacked several items from the basket and hand fed her bites of food as he connected his camera to his tablet and viewed the proofs, ensuring he had captured the specific shots he had wanted.\n\nCat knelt silently, curious about the photos he was viewing on his tablet as she ate the small delicious morsels from his fingers. It was rare they had moments like these where she reverted back to the submissive she had been during her training as a Kept. It didn't feel wrong, but it didn't feel quite right either without the sex involved, and she began to wonder how long he would make her kneel there instead of just relaxing into the moment and clearing her mind. A chill breeze had begun, and she shivered, the movement causing her shoulders to begin to ache.\n\n\"Yellow,\" she said softly, making him look up from the tablet and regard her for half a second before the word fully registered, and he moved immediately to undo her arms and wrap her in the light kimono. Had she been a Kept he would have berated her for letting her boredom get the better of her instead of keeping to her place. He knew she was more than likely uncomfortable, but she wouldn't have been in pain. Still, she wasn't a Kept, and, as much as they may play with the roles on occasion, she wasn't equipped to maintain the role outside of the scenes he constructed as much as he would like her too.\n\n\"You're cold!\" he said, surprised, taking her hands in his. He had felt the breeze, but thought it nice as it stirred the grass around him. He hadn't felt a chill in it, or he would have dressed her sooner. He felt immediate guilt for his earlier thoughts. He loved this woman, and he knew he had to keep the dark master within him in check. These times couldn't be casual, he needed to place limits on these scenes and himself. She had made it clear that she would submit in a scene, but not in all area's of her life, at least, not to the extent he wanted.\n\n\"I was starting to feel cold, but I am fine, I just needed to move from the breeze,\" she said quietly.\n\n\"Cat, I love you. Nothing is more important to me than how you feel when we play like this. You should have spoken before your hands became ice. You can tell me when I am an idiot, and it seems I am an idiot more often than not when I get carried away with being your Master.\" He spent time talking to her to reassure her. Then he warmed her while she reassured him.\n\n\"I did speak, I said yellow because I was starting to feel the ache in my shoulders. I didn't say red, because I could handle it, and you seemed so engrossed in the photos at the time. I just wanted to let you know that I couldn't kneel like that for much longer,\" she said honestly.\n\n\"I'm sorry I got lost in the photos,\" he apologised, again pulling her against him and holding her tight. \"Come and look,\" he turned her so that she sat between his thighs, and pulled her back against his chest, kissing her head before showing her the photos, or at least the ones he had selected from the many he had taken to consider further.\n\n***** "
    ],
    "authorname": "xelliebabex",
    "tags": [
        "shibari",
        "kinbaku",
        "brothers",
        "menage-a-trois"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-30"
}