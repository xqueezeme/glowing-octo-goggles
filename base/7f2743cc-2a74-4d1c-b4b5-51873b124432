{
    "title": "Lady in Red Pt. 02 Ch. 18",
    "pages": [
        "Never one to drink very much, Steve totally abstained from alcohol when the wedding party reached the old castle for the brief wedding party reception. He escorted Gwen to the various food stations while he observed his surroundings. He thought it odd that the wait staff wore heavy work shoes that were badly in need of polish. He had imagined that the wedding of the son of the Russian President would have more rigorous standards.\n\nAs Gwen, with a plate in her hand, stepped up to the man carving steak, Steve noticed the man's nervous actions. His hands shook slightly while perspiration seemed to roll down his neck and face, even though the room was air conditioned. He was also doing a rather poor job with the cuts of meat in his charge.\n\nSteve heard a sudden, loud yell, but he kept his focus on the man positioned between him and Gwen. Although Steve was very alert, he was still caught off guard when the man suddenly made a lunge for Gwen. He had grabbed her bodice with his right hand and pulled Gwen toward him as he brought the knife in his left hand upward and directly toward Gwen's chest.\n\nSteve slammed his fist hard into the man's shoulder, causing the knife to miss its mark. The attacker clung to Gwen's gown as he staggered backward, ripping most of it from her upper body. He quickly regained his balance and started for Gwen again. Without any compunction whatsoever, Steve drove the butter knife he had recently been using into the man's throat and pushed him away. \n\n\"Steve! Look out!\" warned Gwen as another waiter moved in from behind. Steve kicked his new assailant in the knee to slow down his approach. When he turned to face the man, Steve was faced with another carving knife being utilized as a weapon. The man suddenly lunged forward in an attempt to stab Steve in the lower stomach. Steve parried the attempt with his left arm. That move momentarily left the man off balance. Before he could recover, Steve slammed him in the jaw with his right foot. The knife wielding man went over backwards, cracking his head on the stone floor. Steve saw blood begin to seep across the stone as he turned his attention to the bedlam in the banquet room. \n\nIt was immediately apparent that all of the wait staff, male and female, was intent on killing the members of the wedding party. Two of the bridesmaids were already slumped on the floor, as well as a very bloody groomsman. \n\nA burly man pulled his knife from the chest of a downed bridesmaid and turned toward Steve. Watching the man closely, Steve wrapped his tuxedo jacket around his left arm. He used it to blunt the man's attack. As he blocked a thrust with his left arm, Steve felt a fist smash into his right eye. Knowing that time wasn't a luxury he had, Steve once again used a kick to back the man up. Before Steve could pursue his advantage, someone struck Steve from behind with a serving tray. \n\nUnwilling to take his eye off the man he was fighting, Steve dared not risk a glance backward. From the corner of his vision, he saw Gwen move in to engage his attacker, allowing him to concentrate on his immediate adversary. The attacker rushed him, swinging his knife back and forth as he moved. Once again, Steve parried the knife thrust, although he felt a burning sensation on his left arm under the jacket. Deeply concerned about Gwen fighting with a knife wielding man, Steve ignored the pain and drove a fist into the man's face. Blood spurted from the man's nose and he staggered slightly. Seeing his opening, Steve grabbed the man's knife arm and forcefully pushed the blade back into his body. When he felt his fist come in contact with his assailant's stomach, Steve yanked the knife upward and into the man's heart. \n\nStill worried about Gwen, Steve dropped the already dead body and swung his attention to the struggle behind him. He was relieved to see Gwen holding another woman by her hair as she delivered several vicious jabs to her face. Gwen released her grip and as her opponent began collapsing to the floor; Gwen delivered a hard, barefoot kick to her jaw!\n\nSteve once again assessed the situation in the room. Two of Vlad's groomsmen were in the Russian Army. They had apparently teamed up to take three male and two female assailants out of the conflict. To his left, he saw Vlad struggling with a large man wielding yet another knife and he quickly moved in that direction. Anna was cowering behind her new husband, her white gown covered in blood. Before Steve could reach them, the man plunged the knife into Vlad's chest! Steve approached the attacker from behind. He simply grabbed the man's head and viciously twisted it. Gwen heard the bones break as the man dropped in a heap.\n\nVlad was clutching the knife in his chest when the only assailant still standing, a woman, swung a heavy serving tray like a horizontal guillotine that struck a vicious blow to Vlad's throat. She was pulling it back to deliver another blow when Steve's right foot connected with her jaw. Her head bent back at an unnatural angle as she dropped the large tray and collapsed to the ground.\n\nSteve quickly grabbed Vlad and lowered him gently to the floor. Blood leaked from his upper chest, but Steve was more concerned about the fact that the son of the Russian president was turning a dark blue as he now clutched his throat.\n\n\"Get me a sharp knife and a straw!\" demanded Gwen as she dropped down by President Novokov's only son. Steve scrambled a short distance to pick up a steak knife, and then removed a plastic straw from a drink glass. He quickly returned to Gwen and knelt next to her as she took the knife from his hand. Steve held Vlad's hands away from his neck as Gwen ran her fingers over his throat. Once she was satisfied that she had found what she was looking for, she carefully made an incision. Then Gwen took the straw from Steve and cautiously slid it into the small opening she had made in Vlad's neck.\n\nSuddenly a loud gasp came from the straw as air once again found its way into the young Russian's lungs. Within seconds, his coloring began to improve. That was the moment when Russian police poured through every door of the dining room with guns drawn and pointed everywhere, and at everyone!\n\nGwen's friends and family had been enjoying delicious hors d'oeuvers, excellent wines, and very good beer as they waited for the actual reception to begin. They were seated at a two large tables not far from the bar. As they enjoyed the food and drink, numerous Russian dignitaries smiled and nodded to them. Those that knew English would stop and exchange greetings. Everyone was having a good time, when police suddenly entered the large dining hall and closed all exit doors.\n\nThey shouted orders that caused the guests to become extremely agitated. \"Please tell us what's happening,\" implored Paula to a young man that had been chatting in English with Stephanie. Paula's stomach had begun to spasm nervously as she felt the anxiety level in the room increase by the second.\n\n\"There's been a terrorist attack on the wedding party! We're in lock down until it's determined if we are safe here. There have been fatalities.\"\n\nPaula felt icy fingers squeezing her chest as her breathing became labored. Ted pulled her close and tried to console her. Jason and Chip did much the same with Lisa and Kate. Ashley began sobbing in Richard Drake's chest while little Ingrid became increasingly frightened. Jared was the first to comment as he wrapped an arm around Naomi.\n\n\"Okay, we know that there was an attack. Haven't Gwen and Steve been involved in them before? Don't they always pull through? We need to hope for the best here. I know that Steve will protect Gwen with his life.\"\n\n\"We have these international cell phones,\" pointed out Naomi as she held up her phone. \"Let's call them!\"\n\nAfter numerous attempts over several minutes, the group finally accepted the fact that Steve and Gwen were not answering their phones, for whatever reason. Their imaginations and worse fears began to resurface once it became clear that their loved ones could not be reached. \n\nSuddenly, Naomi's phone rang. She checked the caller ID and answered immediately. \"Yes, Senator Mason? We're removed from the scene by 30 clicks or so. It was a reception for the wedding party. We've been told that we're on lock down until our safety can be guaranteed. The word is that there are casualties. We don't know who, or how many. Yes, Senator, both Gwen and Steve would have been involved. If we hear any more, I'll let you know immediately. Madam, if you'd do the same for us, we'd appreciate it. Thank you, Senator Mason.\n\n\"That was Senator Mason wanting to know what's going on. This could become a very serious international incident if Novokov's son was killed, or seriously injured in the attack. All of our intelligence agencies are pulling in every favor, and talking to every contact they have.\"\n\n\"Let me just add that there'll be pure hell to pay if anything has happened to Steve and Gwen,\" promised Chip through gritted teeth. \"I didn't drag his ass half way across Iraq to have some nut take him out now!\"\n\n\"Chip! We're taking Jared's suggestion,\" insisted Kate. \"We're talking about freaking Steve Hammer! He'll never let anything bad happen to Sis. I'm sure of that.\" \n\nJust then, Lisa's phone rang. \"It's Gwen! Hello, Gwen? Are you okay? Yes! Thank God! Oh, no! Okay, but call as soon as you can. We love you and Steve! Bye!\"\n\nEveryone was on the edge of their seats as they waited for Lisa to explain what she had learned. \"Gwen and Steve are alive! She couldn't talk long and wasn't supposed to say anything about the attack. They were monitoring her call. They've both been injured, but Gwen says not too seriously, whatever that means. They're being transported to a Russian hospital. She doesn't know which one. She asked that we be patient and wait for one of them to call.\"\n\n\"That was all\" asked Chip. \"How bad were they hurt? Were they shot? Hurt by an explosion? What's the closest hospital?\"\n\n\"Gwen did say one more thing. 'Steve came through for me again' were her exact words. You can decide for yourself what she meant, but I think we all have a pretty good idea.\"\n\n\"I'm getting a text from Cheryl!\" exclaimed Stephanie. \"I'd forgotten about her being there! We received permission for her to attend the wedding party reception as a photographer, as long as she remained in the balcony area and didn't mingle with the guests.\"\n\n\"Here's what she texted. She was scared to death, but she videoed the entire attack. It was very bloody. The attackers used knives. There were men and women posing as waiters and waitresses that were trying to kill the wedding party. Gwen actually beat up some skank! Steve killed four or five of the terrorists with his bare hands! Both Gwen and Steve were bleeding, but she thinks they're okay. Novokov's son was stabbed, and Gwen actually operated on him at the scene! She isn't sure exactly why.\n\n\"She's sending some photos from her phone and then erasing everything. The police are taking all cameras and phones. They'll be taking hers when they get upstairs. She's switching memory chips in the camera and sending what pictures she has on her phone before she deletes everything. She's a smart girl!\"\n\n\"Let's see the pictures!\" insisted Jason. \"Gwen was in a fight with a terrorist? I hope she wasn't badly hurt. Knife fights are awfully bloody!\"\n\n\"I'll forward the pictures to your phones,\" promised Stephanie. \"Don't let the Russian authorities see them or they'll take away all of our phones. I've got to get a laundered version of this out to FaceBook and Twitter, so friends and family know that Gwen, Steve, and Cheryl are doing okay.\"\n\n\"Look at the third picture,\" insisted Kate as she stared at her phone. \"Look at the blood and all of the bodies. You can See Steve and Gwen kneeling by a bloody male. It must be Vlad! Cheryl couldn't get close or even zoom much with her phone, but it shows the entire room and you can zoom your picture in a little and make out faces. Gwen's in her underwear!\"\n\n\"It looks like two of the bridesmaids are either badly wounded or dead,\" observed Naomi. \"I see two groomsmen down and quite a few waiters and waitresses, or terrorists as we now know them to be. I've got to pass this information on to my superiors right now!\" \n\n\"I see Gwen's dress in this picture!\" gasped Paula. \"One of the dead waiters is gripping it. It looks like he paid with his life for that bit of poor judgment.\"\n\n\"It looks like blood on Gwen's arm and her hands,\" offered Ashley. \"Steve's arm is bleeding. His shirt looks quite red. I hope he wasn't stabbed!\"\n\nNews organizations were in a frenzy to learn more about the attack. When Lady in Red's FaceBook page reported that Gwen and Steve were injured but alive and expected to recover, it swept across the internet and TV air waves almost immediately. \n\nCheryl's parents were stunned when their morning TV news program suddenly switched to a reporter in Moscow for breaking news of a terrorist attack on President Novokov's son and his wedding party! Cheryl's mother was unsuccessfully fighting back tears when her cell rang.\n\n\"Mrs. Baxter? This is Helen. I work for Lady in Red Productions. I have to ask if you've seen the news this morning. I can tell by your crying that you have. I've been told to call you to let you know that your daughter is unharmed and that you should not worry. We realize that isn't easy to relax, but the company owners on the scene in Russia have asked me specifically to inform you that she was not directly involved in the terrorist attack and was not harmed in any way. Your daughter is perfectly safe.\"\n\nGwen was still leaning over Vlad, holding the steak knife in her left hand when the Russian police barged into the dining hall. Two officers approached her and demanded that she put the knife down. Gwen realized how tense the officers were and immediately placed the small knife on the floor and raised both her hands.\n\nSteve watched the policemen closely as their eyes traveled over Gwen's chest. Her push-up bra was performing admirably, and with the loss of her gown, Gwen gravity defying breasts were on display. However, the situation was far too grave for the officers to dwell on the treasures contained in Gwen undergarments. \n\nBetween sobs, Anna Suchkov managed to explain how Gwen had restored Vlad's breathing, but he needed to be transported to a hospital immediately. He had been stabbed in the chest! \n\nThe officer in charge spoke into a hand held device as his men moved about, checking the terrorists for signs of life. Medics of some kind appeared within seconds and rapidly moved to treat Vlad. They nodded approvingly when they saw the makeshift throat stoma Gwen had just completed.\n\nThey immediately placed Vlad on a gurney and hurriedly wheeled him from the room. Gwen was concerned about the lack of assessment and treatment by the medics, but realized the futility of suggesting alternative actions. \n\nSteve was not surprised when it was determined that all of the terrorists were dead, except for the woman that Gwen had rendered unconscious. His intent at the time of the struggle had been to render his enemies incapable of continuing the fight. He had pulled no punches and given no quarter.\n\nSeveral of the more seriously injured people were placed on gurneys and wheeled from the room. Gwen and Steve had somehow suffered fewer injuries than the others. They were escorted to a police car where they were to be transported to a hospital. Before they left, Gwen insisted that Cheryl go with them. She was not willing to leave the frightened teen in a strange place, especially when she didn't speak the native language, and the old castle reeked of death.\n\nThe police apologized about not having enough ambulances as they drove the three Americans to a hospital. On the way, Steve requested that they be allowed to speak with their family. After some discussion and a quick phone call by the apparent government agent riding next to the officer driving, it was agreed. But nothing could be said about the attack, who was involved, and who was injured. The government agent told them he spoke English fluently, and he would monitor the conversation.\n\nThe agent returned Gwen's phone to her and she immediately called Lisa and explained the situation while avoiding any discussion of the attack or the aftermath. Then she returned the phone to the Russian as soon as she ended the call.\n\nSteve had ripped what was left of his shirt into bandages and had placed one on Gwen's arm where she had a nasty knife cut. Then Gwen did her best to bandage his arm and stomach where an attacker had come very close to disemboweling Steve. \n\n\"I want to be there when you get stitches,\" insisted Gwen as she looked at his injuries. \"I think we can prevent scarring if the doctors are careful and have the right sutures. You'll need ice for your eye and it feels like I will, too. Is my right eye discolored? It's beginning to sting.\"\n\n\"It's all bloodshot and looks sore as hell,\" confided Steve as they checked each other's battle wounds. \"Your left eye is starting to develop a nice shiner. When you're in a fistfight, you're not supposed to let the other guy, or girl, hit you like that.\" \n\n\"Look who's talking,\" chided Gwen. \"You already have a black eye, along with a nice knot on your forehead. And you shouldn't let people cut you when you're in a knife fight.\"\n\n\"A knife fight, as I understand it, means that both adversaries have a knife,\" replied Steve with a bit of a grin. \"I was in a 'knife attack' and people do get cut up when that happens.\"\n\n\"I guess I'm proof of that,\" acknowledged Gwen as she glanced at her bandaged arm. \"You were great, Steve. I saw that knife coming at my chest. Then you slammed that guy and made him miss. You saved my life.\"\n\n\"I was a little slow with my reflexes, Gwen. I should have taken him out before he even got close. I feel pretty bad about that,\" admitted Steve as Gwen kissed his cheek gently. \"You sure kicked the living crap out of that woman what was smacking me on the head from behind. That saved me. I didn't dare take my eyes off the guy trying to knife me to do anything about that crazy witch behind me. At least she's alive and they'll get everything that she knows out of her pretty quickly. They won't be asking her nicely, either.\"\n\nPhotographers had been set up near the entrance to the castle where the wedding party reception had been scheduled. They had to leave when the police arrived on scene and demanded they put the cameras away. Unknown to Steve and Gwen, or the police, a few paparazzi that had more international experience had set up farther back, on a hill that overlooked the old castle location.\n\nThey were unseen by the police, but their telephoto lenses gave them great images of whatever, and whomever, left the castle. Before Gwen and Steve even arrived at the hospital, photographs of the famous couple emerging from the scene of the attack were traveling at near light speed across continents and oceans. Cheryl was seen on the other side of Steve from Gwen in the pictures.\n\nIn one photo, Gwen's face was clearly shown and it was apparent that her left eye was discolored. It was also readily apparent that she no longer wore her gown. Her strapless red bra performed admirably as her ample breasts rode high and firm on her chest. She had some blood on her cheek and considerably more on her hands, stomach, and chest.\n\nSteve's left eye was already turning colors and a large purple bruise was visible on his forehead. His shirt was barely hanging from his shoulders with most of the front gone. Two red lines could be seen across his stomach, and blood covered his left forearm and hand. His right arm was placed protectively over Gwen's shoulder. All three Americans appeared to be looking directly at the camera.",
        "As Gwen and Steve were arriving at the hospital, Stephanie was once again receiving texts. This time they were from the company's web people back in the states.\n\n\"Oh! Look at this! There are photos of Gwen and Steve, with Cheryl, on the internet from just after the attack. They sure look like they were recently in a terrorist attack. Gwen has blood on her face, her hands, and running down her arm. It looks like her right eye is bloodshot, and her left eye is discolored, too!\n\n\"I'll forward the pictures to your phones. Steve's stomach has a couple of nasty looking slashes. He has a black eye forming and blood running down his wrist and hand.\"\n\n\"How does Gwen manage to lose her clothes during these incidents?\" wondered Charlotte. \"But if I looked like she does in my underwear, I'd never get dressed.\"\n\n\"I hope they let us out of here pretty soon,\" complained Ted. \"I've lost my appetite and it's obvious the bride and groom won't be making an appearance. I'll feel better when I can see Gwen and decide for myself how she's doing.\"\n\n\"I never thought anything like this would happen when I boarded the jet to fly here,\" admitted a concerned Beatrice Patterson. \"I hope that Gwen and Steve aren't badly injured. It must have been a horrible few minutes.\"\n\n\"Your grandson is a regular lightning rod for terrorists,\" offered Naomi. \"I don't know why. They don't seem to last very long when he's around. You'd think they'd avoid him at all costs.\"\n\n\"That's why they keep trying,\" explained Jared. \"Imagine if they had been able to kill Vlad, Steve, and Gwen in one swoop. I'm going to have a discussion with him about being smart, and safe. Just being friends with him is dangerous to some degree, not that I'd ever want to stop being their friend.\n\nEverything was finally sorted out and it was determined that there was no threat at the banquet hall. Attendees were offered the option of enjoying the excellent reception dinner, or simply leaving. Several high ranking officials had indicated that they very much wanted the Americans to stay and enjoy the meal.\n\n\"I think we're representing the U.S. here, especially now that Gwen and Steve are temporarily unavailable,\" suggested Jordan. \"I'm not an expert in international affairs like Steve is, but I do know that guests are expected to be gracious and considerate. I think we should stay and eat, and try to be good company.\" \n\n\"Jordan is correct,\" assured William Patterson. \"This has been a huge embarrassment to the Russian government. If we leave now, we'll send a message that we're unwilling to help them attempt to save face, at least to some extent.\"\n\nIt turned out that the banquet was enjoyed thoroughly by all of the Americans. They were served seven courses and each one of them was perfectly prepared and delicious. \n\n\"Have you noticed how happy they are when we ask for seconds and smile a lot?\" asked Billy. \"Being in the food industry, I can tell you it's a great feeling when customers express their pleasure with the meal in a sincere fashion. This has been a great meal!\"\n\nAlmost four hours after the wedding ceremony, the American contingent was delivered back at their hotel. Ted invited the men to stop in at the hotel bar for one drink. Surprised since Ted was not the type to have more than a couple drinks at a party, the guys quickly agreed. The ladies decided to change their clothes and meet in Paula's room to await news from Gwen. When they reached the eleventh floor, where their rooms were located, Paula decided that she would check to see if Gwen and Steve had returned.\n\n\"They gave me a key to their room, in case Ted and I wanted to enjoy the view, or other amenities while the kids were out,\" declared Paula with a slight blush as she made her way to their suite.\n\nThe possibility of seeing Gwen and Steve and hearing about their adventure was too great an attraction for the rest of the ladies to resist. When Paula swung the door open and entered the suite, the rest of her group was following closely.\n\n\"Please be quiet. If they're in, they could be sleeping,\" whispered Paula as she lightly knocked on the bedroom door. A scream from within suddenly pierced the silence. With great concern, Paula pushed the door open and rushed into the room, followed by as many others as could squeeze into the room behind her.\n\nGwen and Steve had been given VIP treatment at a local hospital. They were attended to immediately upon arrival. Gwen had watched the doctors work on Steve's cuts and was impressed with their skill level. It seemed unlikely that he would have any significant scarring on two cuts across his abdomen and several slices on his arm above his wrist. \n\nThey examined her eye and gave her drops to use as well as an eye patch. She was told to wear it for a week to protect her eye from light. It had been gouged in her struggle with the terrorist that she had eventually subdued. Gwen and Steve were both told that they could try ice on their blackening eyes, but the discoloration pretty much had to run its course.\n\nLess than two hours after entering the hospital, the same policeman was giving Gwen, Cheryl, and Steve a ride back to their hotel. \n\n\"I have to get on my laptop and write to my parents and friends, and tell them that I'm okay,\" announced Cheryl. \"They took my phone, so I can't call, but I can Skype from my room. Boy, will they be happy to hear from me!\"\n\nSteve and Gwen went directly to their suite, where, with Gwen's help, Steve carefully showered. The hospital had given Gwen some waterproof bandages which she skillfully taped over the stitches in Steve's abdomen and forearm. She then directed Steve as he placed a bandage over the stitches in her arm.\n\nForty minutes after reaching their hotel, the couple was naked on their king-size bed. It had been a traumatic day and the couple used each other to relieve their pent up stress. Their heightened emotions from the struggle earlier in the day increased their already healthy libidos. They eventually wound up in the classic 'sixty-nine' position with Gwen on top.\n\nPerhaps because of the stress of the previous few hours, Steve brought Gwen to one of the most intense orgasms she had ever experienced with his fingers and tongue. She took his cock from her mouth to sound her great pleasure before quickly spinning around and positioning it at her very slick opening and enveloping him in one quick motion. She was aware that Steve was very close to an orgasm and she wanted his hard cock inside her when he came, knowing it would give her a second and even more intense orgasm. Unknown to either participant, Gwen's family and girlfriends entered the room at that exact moment.\n\nSteve reached up and pinched her left nipple while he engulfed her right breast in his mouth and bit down on that bud as he pounded his cock upward into Gwen's quivering body. On his third stroke, Gwen exploded, and after a few more strokes, Steve joined her with a climax of his own. \n\nThat was the scene that greeted the women that had barged into Gwen's bedroom. Every last one of them stared in awe as Gwen appeared to howl as her body jerked, twitched, and trembled. Even as she was experiencing an incredibly intense orgasm, the group coming through her bedroom door vaguely caught her attention.\n\nThey watched as Gwen turned to face them, although she didn't appear to actually see them. She wore a patch over her right eye, while her left one appeared to have a deep purple color around it. The strangest thing was that her eyeball was turned upward in her skull as it fluttered opened and closed. She gave no indication that she knew they were there as she continued to moan and tremble in Steve's arms.\n\nAll good things eventually come to an end. After what seemed like a minute of enjoying la petite mort, Gwen dropped down on top of Steve and went quiet as Steve's left hand gently came around to caress Gwen's back and buttocks. After several seconds, Gwen lifted her head slightly to once again gaze at her stunned audience with her blackened, but uncovered eye.\n\n\"Darling, we have company,\" observed Gwen in a stage whisper.\n\nSteve's face was completely hidden by Gwen's long hair. He suddenly stopped his caresses and asked, \"What do you mean by company? Did you hear someone knock on the door?\"\n\n\"Actually, our bedroom seems to be full of people; like my mother, your grandmother, Jordan, Naomi, Stephanie, my sisters,... well you get the idea.\" \n\n\"Do they look angry, or upset?\" \n\n\"If I had to describe their appearance, 'stunned' would be the word I'd use,\" replied Gwen with a grin as she found Steve's lips and kissed him long and hard.\n\n\"Hey, get a room!\" demanded Kate. \"Oh, never mind. I guess you already have one, crowded as it may be.\"\n\nLike a dam bursting, the women all suddenly decided to rush over to Gwen as they asked her a dozen questions at once. Steve felt the bed bounce as people began perching on the edge of the mattress.\n\n\"We're trying to talk to Gwen,\" laughed Lisa as her gaze swept over Steve's nude body. \"I don't know what you think you're doing here, Steve, but you need to get that thing covered up and go someplace with the guys. I just hope my sister hasn't suffered irreparable brain damage!\"\n\n\"What brain?\" asked Ashley. \"I think Steve just screwed her brains out!\"\n\n\"Did everyone see Gwen's one eye flutter and turn up into her skull?\" asked Jordan. \"That was scary!\"\n\nUnable to pull the sheets up to cover himself with so many women sitting on them, Steve simply eased to the end of the bed, stood up, walked to the bathroom, and closed the door.\n\nThe ladies had gone silent as they watched Steve's retreat. \"Gwen, you're the luckiest woman in the world!\" proclaimed Stephanie with a blush.\n\n\"The guy that just sauntered to the bathroom came from your gene pool, Beatrice\" observed Charlotte. \"Even with the bandages and bruises, he's still quite pleasing to the eye, at least to most females.\"\n\n\"He certainly is masculine, isn't he?\" agreed Beatrice as her gaze lingered on the door Steve had just closed. \"I think he must have inherited that physique from his father, who I never met because I was a foolish woman placing social position above love and family. I'm fortunate that Gwen believed that I should have the opportunity to redeem myself, however late it may have been.\" \n\n\"I'm sorry that we intruded on your personal time, Gwen\" apologized Paula as she changed the subject. \"Are you annoyed at us? We were all worried about you. You didn't tell Lisa very much about the attack, or your injuries.\"\n\n\"Annoyed?\" grinned Gwen. \"I feel extremely mellow and, I guess 'satisfied' would be the term. I don't think anyone could spoil my mood right now. Besides, you guys are here because you love me and worry about me. That makes me feel pretty good.\"\n\n\"Here are some tissues, Sis,\" offered Kate. \"You might want to clean up a little down there. Steve's hogging the bathroom. I'll find a shirt and panties in your luggage so you won't scandalize Steve's grandmother.\"\n\n\"Don't worry about me, My Dear!\" responded Beatrice Patterson. \"This reminds me of the Christmas my parents decided to secretly leave presents under our tree the first year we were married. They had a key in case they needed to get into our apartment for any reason. William and I were up early that morning and my parents caught us in 'flagrante delicto' on the living room carpet. I reacted much like Gwen just did. It was our home and we sure weren't going to apologize for our actions. Luckily, I was also feeling quite content by the time we were interrupted, if you know what I mean.\"\n\n\"Were you howling at the moon and rolling your one eye back into your skull like Sis just did?\" teased Kate.\n\n\"I remember being quite vocal, but I doubt I ever had a climax like we just witnessed. I never knew it was even possible,\" admitted Beatrice. \"I thought it was dreamed up by romance writers.\"\n\n\"Could we forget about the great sex and find out how badly Gwen's hurt, why she's wearing an eye patch, and exactly what happened to her and Steve this afternoon?\" asked Paula impatiently.\n\n\"It's pretty obvious,\" chuckled Ashley. \"They were role playing. Gwen was a pirate wench being punished for not swabbing Steve's deck properly.\"\n\n\"But she did surrender her booty!\" pointed out Kate as everyone broke into laughter.\n\n\"Yeah, she had a treasure buried pretty deep,\" added Lisa to even more laughter.\n\n\"And did I hear Steve call those big boobs his pleasure chest?\" teased Naomi.\n\n\"I have never been around so many jealous, catty women in my life!\" responded Gwen as she struggled to keep a straight face. \"Next time we'll sell tickets. If you want to learn how it's done correctly, it's going to cost you.\"\n\n\"I want season tickets!\" replied Stephanie immediately. \"That was amazing. I'd love to watch and learn how to make those noises and roll my good eye back into my head.\"\n\n\"Which brings me back to Gwen's eye,\" insisted Paula. \"Why are you wearing a patch? Did you get a serious injury? You have stitches on your arm! How badly were you hurt? And no more jokes!\"\n\nAs Paula finished her question, Steve walked out of the bathroom fully dressed. He walked over to Gwen and leaned down to kiss her as the other ladies watched closely. He gave her left breast a little squeeze as he stood back up, nodded to everyone, and started for the door. Paula caught him before he was able to leave the room.\n\n\"It looked like you were annoyed at our poorly timed intrusion,\" began Paula. \"We never meant to embarrass you and Gwen, but the road to hell is paved with good intentions. We were concerned about how badly you two were injured. When Gwen made those 'sounds', I thought she was hurting and rushed in. It was my fault and I apologize.\"\n\nSteve studied Paula's face for a few seconds before he responded. \"You're a wonderful mother, as well as a beautiful woman. I can't stay upset with you, or the other girls. I was irked for a little while, but I heard everyone joking with Gwen and I see how happy she is with her friends and family around her. You gave me Gwen, and I'll never be able to repay you, so tease and embarrass me as much as you want. I'll never feel anything but love for you.\"\n\nSteve bent and kissed a surprised Paula on the cheek and left the room. Paula touched her hand to her cheek as she slowly turned to face the other women in the room.\n\n\"Mom! Do I see your eyes rolling back into your head?\" asked Kate to the delight of everyone else. \"I'd go apologize to the big lug, but I know I'd probably wind up howling and embarrassing myself.\"\n\n\"I'll say it again. Gwen, you're the luckiest woman in the world,\" blurted Stephanie. \"Aunt Paula's still recovering.\"\n\n\"He's amazing, isn't he?\" agreed Gwen before she turned serious and began relating that day's events.\n\nSteve stepped into the hallway just as Ted and the others were stepping off the elevator. They quickly followed Steve back into his suite, but avoided entering the bedroom where the women were chattering loudly.\n\nChip caught bits of the conversation and began to make wisecracks about Steve and Gwen's recovery efforts. Soon Jason and Jared joined in, busting Steve's balls. \n\n\"Guys! Gwen's father is sitting right there. Would you show him some respect and change the subject,\" requested Steve, hoping to end the wise cracks.\n\n\"Don't let me spoil your fun,\" laughed Ted. \"I can go back to my room and take a nap or something.\"\n\nRealizing that Steve had a point about Ted being Gwen's father, Chip decided to end his jokes. He didn't want Kate's father to think poorly of him. \"Are they knife wounds on your stomach and forearm?\"\n\nThat was all it took to get the men discussing the events at the bridal reception. Steve made sure to stress how Gwen had beaten up a female terrorist and saved Vlad's life by performing a tracheotomy. Everyone was properly impressed. \n\n\"This seems like a good time to bring up something I think you need to take even more seriously,\" stated Jared. \"The wall is being built around our homes back in Sparta, and that'll help keep our ladies safe when they're home, but I think you need a security detail. Chip and Pete do great jobs, but they're only two guys and we have a lot of wonderful ladies that we want safe all of the time.\"\n\n\"I've been thinking about that, too,\" agreed Steve. \"We need enough people that we're able to have all of the women, and kids, protected. I was thinking of asking Chip to look into hiring enough good people to keep everyone as safe as possible.\"\n\n\"I'd like to make a suggestion,\" offered Jason. \"I feel pretty capable of taking care of myself, as well as my family when I'm with them. It's when I'm not with them that I worry. I don't think any of us guys needs, nor wants, any special security, but we feel the women and kids need it.\n\n\"I think all of our loved ones should have self defense lessons, as well as learn to use firearms and become permitted to carry. I also think it would be best if we hired mostly females for the security. We have some beautiful women in our group. In fact, they're all beautiful. I don't want big, macho guys hanging around Lisa and Theresa. I'd prefer capable females. They could travel into bathrooms and bedrooms with them and we wouldn't have to worry that we might have the proverbial fox watching the hen house.\"\n\n\"Or, in this case, some jerk watching the foxes,\" added Jared. \"I agree with Jason. We men don't need security, but the women do and I'd feel better if Naomi didn't have a bunch of men being paid to eye her up every time she bent over to pick up a pen.\"\n\n\"All of a sudden I have this image in my head,\" admitted Billy. \"I can't seem to shake it. Seriously, though, I've been carrying a gun for years. We push a lot of money through our business and it pays to be prepared. I never had the pleasure of learning any fighting skills in the service, so I took some classes. I couldn't take out any of you guys, but most muggers and thieves would regret taking me on.\"\n\n\"This is a great time to make some changes,\" stated Chip. \"I've been talking to my Dad and I've agreed to help him with the family business. I love Kate to death, but just hanging around her, even if it's protecting her, isn't a real job for me. It's like being paid to be her boyfriend.\n\n\"Dad wants to expand into the Sparta area and across the state. I've agreed to be in charge of the expansion. I want Kate safe, but hate to think of a bunch of guys hanging around her. I guess I sound insecure,\" admitted Chip.\n\n\"Since Chip's starting a new career and he's going be busy, do you think you'd have the time to head up this project, Charlie?\" asked Steve. \"I know how much you have on your plate, but this is pretty important. What do you think?\"\n\n\"I'd be glad to take the lead on this, to be honest,\" responded Charlie. Jordan's going to tell the girls that she's...\"\n\nLoud screams and cheers from the next room suddenly drowned Charlie's voice out. Grinning, he waited for the noise level to drop before he resumed speaking.\n\n\"My guess is that Jordan just announced that she's pregnant,\" stated Charlie with a crooked grin. \"We're going to back way off on touring this year and concentrate on the movie, writing music, and maybe some TV shows and commercials.\"\n\nThat was as far as Charlie managed before he was mobbed by his friends. They clapped him on the back and shook his hand. \n\n\"That's really great!\" praised Steve. \"You two will be the best parents possible. Our family keeps getting bigger. I bet Jordan's over the moon happy. This is going to make Gwen jealous. She's afraid that everyone's going to start a family before we do.\"\n\n\"Well, if that pathetic performance I heard the ladies discussing is any indication, the poor girl will never get pregnant,\" stated Chip with a straight face. \"I hate to be the one to tell you this, but you don't have any idea how to make love to a woman. I should take you under my wing and give you some pointers.\"",
        "\"He'd be a lot better off getting pointers from Charlie and me,\" insisted Jason. \"We've proven ourselves capable of getting the job done. Your track record isn't anything that would enhance a resum\u00e9.\"\n\n\"We're going to have to work on that resum\u00e9, aren't we, Chip?\" asked Kate from the doorway. You'll have to get me rolling my eyes back and howling before you'll be allowed to comment on Steve's technique.\"\n\n\"Kate! Your father's sitting right there! We shouldn't be hearing things like that from our daughter,\" insisted Paula. \"Besides, he needs to hear me carry on like Gwen did, and I expect him to work on that until he perfects it.\"\n\n\"Yeah. What do you call that move, Steve?\" demanded Lisa. \"Have you patented it yet?\"\n\n\"Actually, I'm the one that makes that move,\" corrected Gwen with a huge grin. \"It was with Steve's help, of course. I call it 'The One-Eyed Wonder'.\"\n\n\"You're confused again, Gwen,\" laughed Lisa as she sat down next to Jason. \"Steve has the one-eyed wonder. You simply borrow it!\"\n\n\"Charlie, did you tell the guys what you did to me?\" asked Jordan as she took Charlie's hand.\n\n\"He sure did!\"answered Steve. \"Congratulations! I can't tell you how happy I am for you both. It's going to be a very special and much loved addition to our family.\"\n\n\"Thanks, Steve!\" responded Jordan as she wrapped her arms around him. \"You and Gwen took me in when I really needed friends. You showed me how people should conduct themselves, and how to treat others. You introduced me to Charlie, but he never would have been interested in the old Jordan Quick. She was a selfish, addicted bitch. He fell in love with the Jordan you and Gwen forged from the old one.\"\n\n\"Actually, I think Charlie would have been interested in the old Jordan,\" argued Billy. \"She was a bitch alright, was she was smokin' hot!\"\n\n\"Now both Lisa and Jordan are ahead of us,\" complained Gwen. \"It's getting really hard to wait until I get my MD before we start a family.\"\n\n\"But wait, you will,\" insisted Paula. \"I want you and Kate both to have a ring on your finger before you have our grandkids. We've dropped all of the other requirements about sleeping with boyfriends for all four of you girls, counting Jordan, so please follow Lisa's and Jordan's good examples and have the wedding before the baptism.\"\n\n\"We have to find out if we're sexually compatible,\" responded Gwen. \"The honeymoon is the wrong time for nasty surprises.\"\n\n\"Really? How can you possibly suggest there's any doubt after what we saw and heard a short while ago?\" demanded Paula. \"If you two were any more compatible, you'd burst into flames from spontaneous combustion or something.\"\n\n\"Is that a compliment? Or was it meant as a warning?\" asked Steve with a straight face.\n\n\"I think that Jared and I will call it a day, after we stop and see Cheryl. I have superiors that are interested in any photographs or videos of today's attack. They want me to deliver a memory stick rather than try to send anything over the internet. For some reason, governments don't think that all internet transmissions will reach their intended target. Steve's trip to Iraq drove that point home.\"\n\n\"Thank God Cheryl wasn't with us when we walked in on Gwen and Steve,\" chuckled Charlotte. \"I don't know it would've increased her crush on Steve, or frightened her to death.\"\n\n\"I've been thinking about that eye patch of yours, Gwen. How about we find some red cloth and make it a red patch,\" suggested Stephanie. \"Lots of pirates and some others wear black ones, but the 'Lady in Red' should wear a red patch. We'll get several different shades of red so we can match your different outfits.\"\n\nThe next day, the group traveled to the future location of the new hospital. It had taken some effort to get the Russian government to agree to the site chosen by Lady in Red Productions. It was in a poorer part of Moscow. Lady in Red Productions was able to acquire two old warehouses that covered a block and a half of the city. The Russians had tried their best to get Lady in Red Productions to purchase property in an upper class neighborhood. Coincidently, friends of President Novokov were willing to sell the land, but at a rather inflated price.\n\n\"It wasn't easy, but Steve finally explained that we'd build the hospital here or not at all,\" stated Jordan as she told the others the story of the difficult purchase of the property. \"The reality is that the Russian government can make some sort of claim that the hospital is important to the national interests of Russia and assume possession of it at any time. We aren't going into this venture with rose colored glasses. As long as we're able to operate it, we'll help people all that we can. That's our only long term plan here.\" \n\nTelevision, internet, and newsprint reporters formed a large group as they waited for the ceremony. The attack on Novokov's son at his wedding was the big news story of the day. Information on the attack was sketchy, at best. Novokov had announced the prior evening that both Vlad and Anna were expected to recover from injuries received, but didn't elaborate on his son's condition or the attack in any way.\n\nShortly before the ground breaking ceremony was scheduled to begin, a procession of black limousines pulled up at the site. Numerous military suddenly appeared on the nearby streets and on roof tops in the area. No one emerged from the vehicles for several minutes. Finally, the drivers stepped out and opened the limo doors for the occupants. \n\n\"They've really stepped up security for Novokov,\" observed Jason. \"I heard today that he and his wife were supposed to be at the wedding party's reception yesterday, but he had to attend to some international situation and was running late. It would have been a lot worse if Novokov was injured or killed.\"\n\nPresident Novokov led his wife to the area where the ground breaking was to be held. Cameras rolled as Mrs. Novokov walked directly up to Steve and hugged him tightly.\n\n\"This young American helped save my son's life. He fought like a true warrior against the cowardly jackals that attacked my son and his wife. My husband and I are personally indebted to him. We wish him a speedy recovery from the injuries he sustained in the attack and his defense of innocent victims,\" declared Mrs. Novokov to the many reporters in her native Russian.\n\nThen she let go of Steve and moved to Gwen and embraced her. As the two women hugged, Mrs. Novokov whispered her thanks into Gwen's ear. Then she released Gwen and again turned to the waiting reporters.\n\n\"This young American woman saved my son's life. He had been stabbed in the chest, and then had his throat crushed by those savages. Thankfully, Gwen Anderson was able to use her medical training to quickly make an incision in Vlad's throat and insert a simple drinking straw. I've been informed by the doctors caring for Vlad that, without question, this procedure saved his life.\n\n\"She did this after defeating a terrorist that had attacked her. She wears a patch over an injured eye, carries a bruising around the other eye, and stitches in her arm from a knife attack. After suffering these injuries, she still knelt by my dying son and saved his life! \n\n\"Now we are here to break ground for a new hospital for the people of Moscow, especially the children. These wonderful people beside me represent the good that still exists in the world. They are donating their money, their talent, and their time to help others. This type of message is so much stronger and more effective than terror and death. They offer good health and life. That is the path to lasting peace.\n\n\"Thank you for listening to a worried, but much relieved mother. I apologize if I spoke out of turn, or said something wrong, but it was all from my heart,\" concluded Novokov's wife as she wiped tears from her eyes.\n\nWithout thinking Gwen once again gathered the woman into her arms and hugged her tightly. Then the two women turned to the reporters and smiled with tears trickling down their cheeks as they held hands.\n\nPresident Novokov stepped closer to Steve and shook his hand firmly. Then her hugged Gwen and kissed both of her cheeks. He proceeded to hug Kate, Lisa, Jordan, and Paula before shaking hands with Jason, Chip, Charlie and Ted.\n\n\"We have been asked to not linger here too long this afternoon, \"stated Novokov to the assembled reporters and public. \"I can only reaffirm what my wife just stated so eloquently. Efforts like this hospital by private industry should be more common. Sadly, and regardless of nationality, companies always look for more profit, rather than helping the very people that make them a success. I hope that Lady in Red Productions' generosity and humanity encourages others to perform similar acts of kindness.\"\n\nNovokov then stepped back from the microphones and gestured to Steve and Gwen that it was their turn to speak. Gwen stepped forward and addressed the gathering in Russian.\n\n\"My friends, family, and I are delighted to be here this afternoon,\" began Gwen as cameras constantly whirred and clicked. \"Jordan, Charlie, Kate, and Lisa were behind Steve totally when he called to explain that he had agreed to build a hospital here. That's the kind of people I surround myself with. They're generous, caring, talented, and supportive.\n\n\"We want to thank Mr. and Mrs. Novokov for their kind words. We wish Vlad and Anna complete recoveries and a long and blessed marriage. Our hearts go out to the families and friends of those seriously injured or killed in yesterday's terrorism. We are thinking of them in this difficult time.\n\n\"Finally, I want to publicly thank Steve for saving my life yesterday. Make no mistake about it; his courage and skill were the difference in that battle. He's the reason I'm able to stand here today. I love him dearly and I'll spend the rest of my life showing him just how much.\"\n\nTelevision, internet news, and entertainment sites played Gwen's speech constantly. Gwen Anderson had delivered a speech in Russian the day after an attack that nearly cost her life. She had a very black eye and wore a red patch over the other one. She still looked beautiful, but very different. Photos of her bruised face were on newspapers around the world, as well as the story of how she calmly saved the life of the Russian president's son.\n\nIt was huge news back in the U.S., especially since she had so recently gone through a hearing before the ethics committee. Barely a week later, she was involved in a fight for her life and then managed to save the son of one of the most powerful men in the world. No one in the Senate or the House had offered anything but praise, and even awe, for the actions of Gwen and Steve. \n\nNo one was more thrilled than Cynthia Rosen. With Moscow time a full seven hours ahead of the east coast, she watched the morning news with great interest. She listened to Mrs. Novokov speak in glowing terms about how the young Americans had saved her son's life. \n\nThe account of the terrorist attack was beginning to take shape. Steve Hammer had apparently suffered some injuries as he fought the attackers. Even Gwen had bruises, cuts, and was now wearing an eye patch. It was becoming very obvious that the couple had been involved in the attack and had made an excellent accounting of themselves. Their international sphere of influence was increasing quite rapidly, and they had made a point the previous week of telling America that Vincent Rosen was their friend! \n\nVincent's poll numbers had jumped after he appeared at the rally with Steve and Gwen. He had won two primaries in the week that had just passed and he was increasing his lead in the polls in several other states with approaching primaries. It was beginning to fall together and Cynthia Rosen had no doubt that being seen as friends of Gwen and Steve had greatly improved the public's perception of his candidacy.\n\nVincent was scheduled to appear on a Sunday morning talk show and Cynthia made a mental note to remind him to mention how proud he was of the actions of his friends, Gwen and Steve, in the recent Russian terrorist attack. \n\nAmber Stahl was also up early. She had a weekly Sunday morning news program from Washington. She attempted making phone calls to Gwen and Steve to ask if they would appear on her show via satellite. She was frustrated that none of her calls were answered. Finally, in desperation, she called Paula Anderson, who answered on the second ring.\n\nAmber made her request for Steve and Gwen to appear on her program, which was still three hours from broadcast. She mentioned that she was unable to reach Gwen or Steve. Paula explained that they had not had their phones returned yet, but she would have them contact Amber as soon as possible.\n\nA short time later, Gwen called Amber and the interview was scheduled. Vincent Rosen was told that he'd lose some air time on Amber's program because Gwen and Steve had agreed to appear via satellite from Moscow. He and Cynthia were delighted. Once again, people would have reason to associate Vincent Rosen with Gwen Anderson and Steve Hammer.\n\nAmber's interview with Gwen and Steve only ran for a few minutes, but it was quite informative. When Amber first introduced the couple, viewers had their first close-up look at their faces. Gwen's red eye-patch matched her dress perfectly. The other eye was blackened and sore looking. Gwen's sleeveless dress revealed a bandage covering her upper left arm.\n\nSteve also sported a very dark shiner along with a purplish knot on his forehead. His left arm below the elbow was covered in bandages. Amber began the interview with the obvious.\n\n\"Gwen and Steve, can you tell us how you're feeling? It's readily apparent that you've been involved in an altercation. How is your eye, Gwen? How badly were you two injured in the attack?\"\n\n\"We're doing fine,\" replied Gwen seriously. \"My eye was gouged a bit but the patch is simply a precaution. I have to put drops in it several times a day and avoid light for a week or so. It's already feeling much better. \n\n\"Steve and I both received cuts from knife wielding terrorists that required stitches, but the doctors here did an excellent job and it's quite likely that there will be minimal scarring, if any at all.\"\n\n\"Can you tell us what exactly happened in that banquet room yesterday?\" asked Amber.\n\n\"Without being too graphic, I can tell you that the wedding party was suddenly attacked by what we all thought was the wait staff. They had been closely searched for weapons, so they utilized the cutlery available with the food as weapons. It was an extremely vicious and bloody few minutes. I think there were ten terrorists and all but one was killed in the attack. \n\n\"Sadly, four members of the wedding party, two groomsmen and two bridesmaids were killed. All of the rest received injuries during the fray. As everyone is aware, Steve is a U.S. Navy SEAL and is trained in hand-to-hand combat. Let me simply say that his skill and training saved the day, as well as my life.\"\n\n\"Mrs. Novokov praised you for saving her son's life with an emergency tracheotomy, which you performed after you had been injured in the attack. That demonstrates incredible concentration and discipline. Were you at all concerned about not getting it right? You were, after all, performing emergency surgery on the son of the president of Russia.\"\n\n\"It was a procedure I have assisted with in my medical school training. It was also Vlad's only chance to survive. I simply did what I've been training to do for the past three years,\" replied Gwen modestly.\n\n\"Steve, you're very quiet today. Gwen has alluded to you having to use your skill set as a Navy SEAL. Only one terrorist survived the attack. Can you tell us about your part in the struggle?\"\n\n\"We were attacked by men, and women, many of whom were using carving knives as weapons. It was a bloody, extremely unpleasant situation. It was a battle to the death. It isn't something I care to go into detail. Gwen and I were in extreme danger, as were other innocent people. We were fortunate to emerge with relatively minor wounds. Gwen and I both relied on our training yesterday, as different as that may be.\n\n\"I will say this. Gwen was extremely cool under a great deal of pressure,\" added Steve. \"She'll be a great doctor!\"\n\n\"Changing gears slightly, Vincent Rosen, who will be appearing on this program next, won two primaries last week while you were in Russia. Many political observers think that when you so publicly thanked him for supporting you in the ethics hearing, his candidacy received a huge boost. Are you supporting him for president?\"\n\n\"Gwen and I consider Secretary Rosen and his wife, Cynthia, to be good friends,\" replied Steve when Gwen looked to him. \"There are several fine people running for the office and certainly Vince Rosen is to be counted as one of them. We are not supporting anyone for president at this time, but by the same token, we have no doubt that Secretary Rosen would make a very capable president.\"\n\n\"That's a close to an endorsement as you can get without actually making one,\" observed Amber. \"Gwen, will you be adhering to your schedule and leave for Ukraine tomorrow. I have heard that you may attend memorial services for those slain in yesterday's attack.\"\n\n\"Our group will stay in Russia an extra day. We'll be attending the memorial service for those unfortunate victims of the recent terrorist attack tomorrow. We'll land in Kiev sometime Tuesday and prepare for the dedication of the new hospital and our concert. They're still scheduled for Saturday,\" revealed Gwen.\n\n\"I have one last question for you both. This latest incident, coupled with your triumph at the ethics hearing, your building of new hospitals and funding them, your success in films and music, and the fast response your company has shown for assisting in disasters have all combined to create an incredible amount of favorable publicity for your company, and especially for you two. Many people consider you to be the most powerful couple in the world. How do you feel about that power, as well as the responsibility?\"\n\nGwen again glanced at Steve to see him nod at her to handle the question. \"We really don't think much about things like that. We're a couple, but we're also part of a team. My parents, sisters, family, friends, and Steve's grandparents are our support group. The millions of regular people that work, pay taxes, obey the laws of the land and volunteer to help with little league baseball, football, hockey, Girl Scouts, Boy Scouts, libraries, churches, and charities are all heroes in our book. We're simply trying to help and encourage them to keep on doing the right things. \n\n\"We're doing what we love and we're making money doing it. But what responsibilities go with success and fame? We have more than enough money to last us the rest of our lives. But we don't have enough to build hospitals around the world. We don't have enough to assure every person that wants a decent paying job that they can have one. We don't have enough to fund a cure for the diseases that claim so many lives every year. We'll continue to work to raise money to achieve as many of our goals as we can. I think that people respond to that, so any influence that Steve and I may have is because we're trying so hard to help those that need it. The more we give, the more everyone gives back to us. It's that simple.\"\n\n\"What a great way of putting things in perspective,\" praised Amber. \"Thanks for taking the time to be with us today and stay safe on your journey.\"\n\nThe next day saw Gwen and Steve, along with the other Lady in Red Productions' owners and family attend a memorial service for those that had died in the attack the previous Saturday. Representatives of many nations attended the service held in St. Basil's Cathedral. In a departure from diplomatic protocol, Gwen and Steve sat next to President Novokov and his wife.",
        "As the memorial neared the conclusion, Gwen and Steve were asked to speak. They each spoke briefly about their personal grief the attacks caused.\n\n\"I don't know if it's appropriate in Russia at memorial services, but we think it should be, if it isn't,\" stated Gwen near the end of her statement. \"I'd like to ask Jordan and Charlie Burns to come up and help us.\n\nAs she spoke, Jordan and Charlie rose and made their way to the front of the church as Steve and Gwen waited. Once they reached the altar, Charlie and Jordan took seats at a huge piano that was located off to the side. Gwen placed a microphone in front of her friends and held another to share with Steve.\n\nJordan and Charlie played the introduction and then Jordan and Gwen began singing 'Bridge over Troubled Waters' in beautiful harmony. Charlie and Steve simply filled in background for them. Once they finished the song, Jordan and Charlie continued playing while Steve joined Gwen in singing the song in Russian. Those attending the memorial were moved to tears long before the song ended.\n\nThe two couple then proceeded to use the same formula for 'Let It Be'. By the time they finished the song, Gwen and Jordan had tears streaming down their cheeks and Charlie and Steve were seen rubbing their eyes. The service was broadcast across Russia and the performance by the friends further endeared them to the entire nation.\n\nMrs. Novokov was shown on screen sobbing into a handkerchief as she embraced both couples when the service was over. Many of the representatives from other countries stood in line to speak to the four friends. \n\nSenator Chatham sat in the Oval Office with President Hanson as they watched the televised proceedings in Moscow. \"Mr. President, I'm not telling you anything you don't already know, but those kids are far and away America's best ambassadors to any place on the globe. Can you imagine any other couple managing what those two did during that attack? Steve was unarmed and took out five terrorists, including the one trying to stab Novokov's son to death. Gwen fought off a crazy woman and then operated successfully to save Novokov's son's life!\"\n\n\"I haven't heard any complaints about them from Congress lately,\" chuckled President Hanson. \"They never dreamed that Steve would flex his political muscle so strongly when they threatened Gwen. Steve destroyed Simpson and word has it that Clark has wisely decided to not seek another term. Steve's learned to speak the language that Washington understands. They aren't innocent kids anymore. They're beginning to understand both the power they have, and the responsibility that goes with it.\"\n\n\"I know very well that they deliberately lifted Vince Rosen out of the political doldrums. They're going to make him president,\" predicted Senator Chatham. \"That'll put them in a great position to expand their power base. Where will this all end?\"\n\n\"That's the question, isn't it?\" asked Hanson rhetorically. \"I don't think there's any ceiling for them right now. They'll manage to achieve whatever goals they may have. I can't see anything stopping them at this point. They'd have to screw something up pretty badly to derail their future.\"\n\n\"Should we be concerned about that kind of power?\" asked Chatham. \"I can't imagine how much they'll have in fifteen or twenty years, if they manage to stay alive. They seem to live on the edge a lot.\"\n\n\"Concerned or not, don't try to stop them,\" warned Hanson. \"Nothing short of death or a huge miscalculation on their part will bring that train to a halt. I can't think of anyone that I'd rather see have the power their gathering. They're basically very good people. I'd suggest that you remain friendly with them and watch your career soar.\"\n\n\"That's pretty much what I've decided,\" admitted Chatham. \n\nLanding in Kiev on Tuesday afternoon, Gwen, Steve, and company were whisked through a gate that was closed to the public at the airport. They boarded a waiting bus and were taken to their hotel. That's when the surprises started.\n\nAs the bus pulled up in front of the hotel, hundreds of teen girls stood on the sidewalk cheering and giggling as teen girls do. The surprise was that they were all wearing red eye patches! Looking closer, Gwen noticed that many of them had also darkened around their other eye.\n\n\"Are you seeing what I'm seeing?\" asked Kate as she stared out the window of the bus. \"All of those kids want to look like Gwen, even when she looks like she was hit by this bus. You really have some serious fans here, Sis.\"\n\nWhen they exited the bus, Gwen, Jordan, Charlie and Steve, much to the delight of the fans, walked into the crowd and began signing autographs. They spend half an hour shaking hands and answering questions as they signed all sorts of objects handed to them. Steve had to chuckle at one older girl that pulled her arms through the arm holes in her shirt. Soon she produced a bra for Steve to sign. That immediately gave her friend the idea to ask Steve to sign her chest just above her breasts. Steve politely declined, pointing out that there were a large number of younger fans present that did not need to see that type of behavior. \n\nOnce they made their way inside the hotel, Steve once again found Nadiya Mitsko jumping into his arms. \"The big, brave American saved more lives? This time in Russia? You and Gwen are legend now! Ukraine is very excited that you will once again 'rock our town'. There are already many tourists and visitors in Kiev in anticipation of your concert.\n\n\"Gwen, do you want me to help Steve relax while you get your eye patched or something?\" teased Nadiya as Steve's friends broke into laughter.\n\n\"Thanks, Nadiya,\" replied Gwen with an exaggerated frown. \"Let me think. Should I allow my boyfriend quiet time with one of the most beautiful, sexiest women he's ever seen. A woman that appears to be seriously in lust with him? Forgive me, but I think not. But thanks for the offer.\"\n\nWith Gwen's response, Nadiya gave her friend a warm hug. \"I have been waiting for another chance to kiss Steve and help you two make up. I am beginning to wonder if that opportunity will ever come again.\"\n\n\"I learned my lesson,\" replied Gwen. \"I'm not going to be pushing Steve into any woman's arms, and especially not a beautiful blonde bombshell.\"\n\n\"You have the nicest way of letting me down gently,\" laughed Nadiya as she began welcoming the other members of the entourage. \"Thanks so much for coming, everyone. I especially want to thank Jordan and Charlie for performing with Gwen and Steve Saturday night. This is a very big thing for our country!\"\n\n\"All of the teen girls have begun wearing eye patches in honor of Gwen's ordeal and her heroism in Moscow. Younger girls are placing patches on their dolls and pretending that they are Gwen. It's so cute,\" smiled Nadiya.\n\n\"Oh, wow!\" responded Stephanie as she quickly pulled her cell phone out. \"We've been missing a huge opportunity! I'm sending a text back to home to have our people develop some sort of Gwen, Steve, Jordan, Charlie and friends' action figures, dolls, or whatever, that kids can play with. We need these on shelves by Christmas!\"\n\n\"That's a great idea!\" agreed Paula. \"I bet they'll be extremely popular.\"\n\n\"I may buy a few if the ones of Gwen are anatomically correct and life size,\" allowed Billy as Charlotte punched his shoulder.\n\n\"Does that mean that you'll retire the blow-up dolls you have now?\" asked Jared with a straight face.\n\n\"Hell yes!\" laughed Billy. \"It's a no-brainer!\"\n\n\"You will not be having any life size dolls of my friend,\" stated Jordan flatly. \"Besides, I was hoping you'd want to collect the 'Jordan' dolls.\"\n\n\"Don't worry about that,\" replied Billy. \"I want the Jordan, Lisa, Kate, Naomi, Becky, Ashley, and Nadiya dolls. Will they have likenesses of the mothers, too?\" \n\n\"I don't know if I should slap your face, or give you a hug for that comment,\" admitted Paula with a blush.\n\n\"I want to place the first order for the 'Charlotte' doll,\" insisted Steve. \"That one will be a collector's item.\"\n\n\"Thanks, Steve!\" gushed Charlotte as she hugged Steve. \"Why wait for the doll when you have the real thing right here? It's obvious that Billy doesn't appreciate what he's got.\"\n\n\"I refuse to allow any dolls with your likeness to be sold! I shudder to think about what these horny, sick puppies would do with one. There'll be no Charlotte dolls,\" insisted Billy as the others laughed.\n\nOnce Nadiya finished greeting the Americans, she turned to Gwen and Steve again. \"I want you to meet a special friend. He's a deputy ambassador to Ukraine from Germany. I've been dating him for a little while.\"\n\n\"I'd be glad to meet him!\" enthused Gwen. \"Maybe I'll be able to trust you around Steve if you have your own boyfriend.\"\n\n\"Don't be that foolish!\" laughed Nadiya as she took Gwen's hand and led her to the other side of the lobby.\n\nA tall blonde man stood and moved to greet Nadiya as she approached with her friends. \"Hans Mueller, this is Gwen Anderson. The gentleman next to her is Steve Hammer.\"\n\nSteve liked the man immediately. He was friendly, intelligent, and not overly impressed with Gwen and Steve's fame. Nadiya beamed when she saw how well Steve had accepted him. As the two men chatted, she pulled Gwen a short distance away. \n\n\"Do you think that Steve likes him?\" asked Nadiya quite seriously. \"I was hoping that he would, but I'm not sure if he's just being nice because Hans is my friend.\"\n\n\"The best way to find out is to ask Steve,\" replied Gwen as she studied Nadiya's face. \"You really like this guy, don't you? Do you think that he might be the one? He's certainly tall and good looking. Be sure to bring him around a lot this week so we all get to know him better. Steve will tell you what he honestly thinks if you ask him. He thinks the world of you and wants you to be happy. If Hans makes you happy, and treats you with the respect that Steve feels you deserve, they'll become good friends.\"\n\n\"Thanks so much, Gwen. You've been a great friend to me. I am ashamed to admit that I had thoughts of winning Steve away from you when we first met. That was before I realized that I never would be able to do that,\" admitted Nadiya. \"You two belong together and everyone can see it.\"\n\n\"I knew how much you liked Steve right from the start,\" revealed Gwen. \"I never blamed you for it. He's something special, but I've finally come to accept that he loves me totally. He'll never abandon me. I don't know if I could drive him away, but I'm sure not going to try. I hope to have a house full of his kids someday!\"\n\n\"I'm so happy that Hans and Steve are getting along so well,\" beamed Nadiya. \"Would you like to visit the hospital you so generously built for the people of the Ukraine? It is complete and we are preparing for the grand opening Saturday. This is a very exciting time for us Ukrainians.\"\n\nLater that afternoon, the Americans, along with Hans and Nadiya arrived at the newly constructed hospital. The six owners of Lady in Red Productions had debated for weeks on what to name the hospital. They discussed various clever names, saints' names, famous Ukraine names, and even geographically pertinent names. They finally decided to simply call it 'Lady in Red Children's Hospital of Kiev'.\n\nWhen they were still a few blocks from the new structure, the group could easily read the name in large letters on the face of the building. \n\n\"Look!\" cried Jordan as she pointed out the window of their bus. \"It has our company name in huge letters across the front, along with our logo. I've never been so proud of anything before in my life. Can you believe that we built this?\" \n\n\"Look at the tears on Gwen's face,\" pointed out Kate. \"I still remember the night she invited us to her room to tell us that she wanted to build a hospital here. I wasn't an owner then, but I sure was proud of you guys!\"\n\nAs the bus pulled up to the front of the building, the group noticed a couple dozen people gathered in front of the building, a hundred feet away from the entrance. They had blankets, a few chairs, and a few small cots along the wall.\n\nAs the Americans stepped off the bus, a very well dressed man rushed up to greet them. His English was excellent, with only a hint of an accent.\n\n\"Welcome! I'm Gerard Binak, the hospital administrator. I've gathered the entire staff, including maintenance, IT, and clerical. You're scheduled to address them in half an hour in the auditorium. Everyone's very anxious to meet the famous and very generous Americans!\n\n\"Why are those people over there?\" asked Gwen as she pointed at the small gathering nearby. She couldn't help but notice the rather poor condition of the clothing and blankets the people had with them. \n\n\"They started lining up yesterday for the opening on Saturday,\" explained the administrator. \"They heard that everyone will be given the best possible care, so naturally the poor people show up first.\"\n\n\"Nadiya, would you please come with me,\" requested Lisa. \"The rest of you go on in and meet with the staff. We'll be in shortly.\"\n\nGwen gave her sister a smile and a quick nod before speaking to the Binak. \"Lead the way, Sir. We're all very anxious to see what $300 million can buy these days.\"\n\nThe group was very impressed with the first floor of the building, but that was all they had time to see before the meeting with the employees. The auditorium was state of the art, like everything else in the hospital. It was wired for audio and video presentations, with comfortable seats that even reclined.\n\nGwen, Kate, and Jordan each spoke to the packed room about their expectations for the hospital and how it would benefit the people of Kiev and much of Eastern Europe. As Jordan finished her brief speech, Lisa entered the room and stepped to the podium.\n\n\"We need to establish something right here, and right now,\" stated Lisa firmly as everyone suddenly sat straighter in their seats and many even leaned ahead. \"The sole purpose of this hospital is to treat the sick and injured people that come to its doors. That means every last one of them. No patient receives less than total respect and attention. \n\n\"If there is ever any doubt about the treatment, always do the best for the patient, regardless of cost. I want to be very clear here. If we receive any complaints that anyone connected with this facility did less than their absolute best for a patient, there will be an inquiry. If the complaint has merit, people will be fired.\n\n\"At this moment, we have an even dozen very ill children waiting with their parents outside the doors. These parents intend to wait until Saturday to get their children treated as soon as the doors open. Those doors will open in ten minutes, not in a few days! We are opening for business right now! I want everyone to report to their stations and be prepared to treat anyone in need. If that's a problem with that directive, come up and see me or one of the other owners immediately.\"\n\n\"But we didn't plan to open until Saturday,\" protested the administrator. \"If patients are allowed in now, there will be people and equipment in the way when we have the grand opening. It would go much smoother without these dirty, poor people cluttering up this beautiful building.\" \n\n\"That will NO longer be your problem!\" snapped Lisa. \"You're fired! I've spoken to security and they'll be waiting at your office. You're allowed to take personal property, but nothing belonging to the hospital.\"\n\n\"You can't fire me!\" protested the shocked man. \"My cousin is the mayor! He'll shut this place down before it even opens. You can't just waltz into our city and take over. I don't take orders from you, or any other stupid cunt...\"\n\nThat was as far as the man got before Jason had him by the throat and pinned to a wall. \"You never speak to a lady like that, and certainly not to my wife,\" snarled Jason as he shook the man like a dog would a rat.\n\n\"Get him out of here,\" demanded Lisa. \"Jason, you stay next to me. I don't want you getting into trouble. Nadiya, can you get the mayor's phone number for me?\"\n\n\"You are in luck,\" chuckled Nadiya. \"He is one of my phone contacts. I will call him right now and give you the phone. He speaks English quite well. I do not believe he will be backing up his relative's boast.\"\n\nNadiya spoke briefly into her phone and then handed it to Lisa. The conversation was short and very much to Lisa's liking. As she handed the phone back to Nadiya, she spoke to her group.\n\n\"Mayor Plusko assured me that his 'second cousin, through marriage' was not speaking for the city, or the Mayor's office. He apologized for Binak's behavior and asked that we not allow it to cloud our opinions of his city and its appreciation of our efforts.\"\n\n\"My God, Lisa!\" managed Kate once Lisa finished speaking. \"You tore that guy apart. He had it coming, though, if he had sick children waiting days for the hospital to open. That was pretty lousy, to say the least.\"\n\n\"Thanks for setting him straight,\" added Jordan. \"When Gwen asked about the people waiting by the wall, I had a bad feeling about it. Then that pompous ass dismissed them as unimportant! I never saw that tough side of you before. I'm impressed.\"\n\n\"My job is to run everything that isn't part of the entertainment portion of Lady in Red Productions, more or less. You guys work so hard to earn all that money to help these kids that I feel like I'm not pulling my weight at times. I knew Gwen was upset, but it shouldn't be up to her to do everything,\" reasoned Lisa. \"I could tell she was troubled and I knew why. I felt it was my job, so I did it.\"\n\n\"You were great!\" praised Gwen. \"I was stewing about what to do when you indicated that I should attend the meeting and let you handle the situation. I'm really proud of you, and not just for taking the lead. You have a complete understanding of what we're trying to do with these hospitals. It isn't about good press and winning public opinion. It's about doing the right thing, especially for the less fortunate.\"\n\n\"All I could think about was how I'd feel if Theresa was sick and I had to wait days for a hospital to open so she could be cared for properly. No parent should have to do that and no child should suffer that way,\" insisted Lisa. \n\n\"You probably didn't notice the looks of approval from the doctors, nurses, and other staff members when you reamed out that asshole,\" reported Billy. \"Hey, I made a joke! Anyway, they were grinning and nodding when Lisa sent Numb-Nuts packing. I have the feeling he wasn't very well liked here.\"\n\n\"You really have a way with words,\" observed Charlotte drily. \"Reaming out assholes and numb-nuts? I never realized you were an English major.\"\n\n\"I speak the universal language of 'macho men'. All the guys understood me perfectly, and so did you,\" pointed out Billy. \"I call 'em like I see 'em.\" \n\nThe group spent the rest of the day touring the entire facility. They tried to speak with everyone connected in any way with the hospital. Many of the staff members thanked Lisa for ridding them of Binak. He was held in contempt by almost everyone.\n\nGwen and Charlotte spent a lot of time with the patients, as well as their parents. Nadiya translated for them as each and every parent expressed their gratitude. They had difficulty believing that their children were being treated in a facility so superior to anything that had ever seen before. \n\nLater that evening as the tired group was bused back to their hotel, Gwen spoke with obvious emotion to her friends. \"That hospital is the finest thing I've ever been associated with, other than you people here with me right now. We've given those children hope. Their parents finally have hope. We gave that to them. They were trying to thank us for giving their children a chance to live beyond the next few days. Can you imagine what they were feeling as they waited on the street with their suffering kids this morning? Lisa, you probably saved some of their lives when you demanded they be treated immediately.\"",
        "\"It wasn't me. You guys built the hospital! And it's incredible! I'm very proud of my three sisters, Charlie, and Steve. It's got to be one of the best hospitals in the world,\" praised Lisa.\n\n\"I think I've solved our immediate problem created when I gave that ass, Binak, the boot today,\" added Lisa. \"Nadiya has agreed to serve as the administrator of the hospital temporarily. That'll give us time to either find someone else for the job, or talk her into doing it fulltime.\"\n\n\"After everything Lady in Red has done for Kiev, how could I refuse? You do realize that not very many women in Ukraine have important positions. There may be complaints from some men that don't like the thought of women doing men's work,\" added Nadiya.\n\nSteve had been silent during most of the conversation. He seldom spoke if he didn't have something to say. He decided to join in.\n\n\"I don't think many men want to test Lisa's resolve in the matter, but if anyone challenges your authority or ability, Lisa, feel free to give them my number. I'll be glad to set them straight, but somehow, I think Jason will be all the support you need. I still chuckle when I remember how he shook that little toad around.\"\n\nTed also decided to voice his opinion. \"I was pretty upset about what he called Lisa, but I didn't even have time to consider doing something about it before Jason had him by the throat. That's the sort of thing I was thinking of when I gave you 'the talk', as it's now known,\" laughed Ted. \"You did exactly what you needed to do. I'm proud to have you in the family.\n\nGwen spent the next few days visiting at the hospital when she wasn't rehearsing for the big concert. Charlotte was her constant companion as they familiarized themselves with the hospital, the staff, and employees. Since they were finishing up their third year of medical school, they were extremely interested in all aspects of operation of a large, modern hospital.\n\nThe time in Kiev seemed to fly by for the Americans as they were warmly welcomed everywhere they went. Saturday found them at the hospital early to greet and mingle with those that came to tour the new facility. Gwen, Jordan, Lisa, Kate, and their friends made extra efforts to make those guests that obviously had less material wealth feel welcome. \n\nThey were often seen hugging ragged children and their parents, taking them on tours, and always ending up in the cafeteria where an ice cream bar was set up. They were sending a message to the staff that every child was important and would be treated with love and respect. By late afternoon, the hospital staff had seen enough to know that it was no act. Most of them felt relief to be able to give care to patients without concern for social or financial status. \n\nKate and Chip had disappeared for an hour before noon. When they returned they had dozens of gift cards for a local department store. They delighted in handing them out to the children and their parents and watching the surprise and joy in their faces.\n\nThe ceremony to officially open the hospital went very well. When Nadiya was introduced as the administrator of the hospital, the applause and cheers were loud and long. Lisa knew then that she had made a good choice in asking her to take over the job.\n\nAs the clock approached seven, Gwen and Jordan led the band onto the stage, which was once again set up at Independence Square. The crowd was even larger than the one that attended the first concert years prior. \n\nWith her performance in the last Washington concert, Gwen had shown the band that they had not been leaving everything on the stage. Jordan, Steve, and Charlie, had to step their efforts up a notch to keep up with her. When they had performed in Moscow, all four remembered the intensity they had felt in D.C. and worked to maintain it for the fans in Russia.\n\nNow they were determined to deliver the best possible performance to the cheering crowd in Kiev. The driving drum beat of the always popular 'We Will Rock You' began as Gwen strutted around the stage waving to the huge crowd as they cheered and screamed her name. Many of the females in attendance wore red eye patches and cheered especially long and hard for their heroic female role model. She was the woman that fought and defeated a crazed terrorist with her bare hands and then proceeded to operat on a man to save his life, all within a couple minutes time!\n\nGwen was once again pumped as she saw the sea of red patches and realized they were meant as support of her actions in Moscow. Her performance reflected her emotions right from the start. They had barely begun when Charlie caught Steve's eyes and rolled his own, as if to say 'here we go again'!\n\nBecause Gwen's recording of Joan Jett's 'Hate Myself for Loving You' had been so popular in Eastern Europe, the band moved into that song as soon as they finished 'We Are the Champions' and the crowd loved it. Gwen looked incredible in a red leather bustier and short leather skirt and a red leather patch over her eye. \n\nShe played to the crowd as she sang and gyrated to the music, always moving around the stage, and singing the song better than she ever had before. Steve and Charlie pranced in back of her as they made their guitars practically scream the chords out. The driving beat and Gwen's great performance had the fans cheering and yelling as many of them danced and shimmied while they voiced their approval.\n\nFour hours later, the last song was sung and the tired crowd began to filter out of the square. Jordan, Gwen, Charlie, and Steve joined their group at their hotel for a late dinner, but it was obvious to everyone that they were exhausted.\n\n\"You guys have given some great shows, but I think you may have just delivered your best ever,\" stated Naomi to her friends. \"The fans were really into your songs and you seemed extra emotional tonight. It was something to watch.\"\n\n\"I'm hearing that the pay-per-view ratings were record setting, which is really amazing considering you started the show before noon in most of the U.S.,\" reported Stephanie. \"The internet is buzzing about the concert. The eye patch thing is becoming a worldwide fashion statement, if you can imagine that. Gwen's supposed to be able to stop wearing it Monday, but she may have to leave it on forever so her fans aren't disappointed.\"\n\n\"Sorry about that,\" chuckled Gwen. \"My eye is doing much better and the patch will be gone in a couple of days. Everyone's going to have to find a new craze and hopefully, it won't involve me, bandages, and pain.\"\n\nSunday morning found Nadiya and Hans joining everyone for breakfast before they traveled to the airport for the trip home. \"The media loved the concert! They are raving about how the best performers in the world came to Kiev to give us a free concert, and how much it means to our city and country. Your incredible acts of kindness and generosity have inspired our nation. We have a better sense of self worth and pride. I can feel it when I speak to people. Thank you so much for all you have done, and for being my friends.\"\n\nSoon everyone was hugging Nadiya as they said their goodbyes. Steve didn't escape without a rousing kiss from the gorgeous blonde and a warm handshake from Hans. \n\nOn the way to the airport, Cheryl smiled as she observed, \"This has been the most amazing trip of my life, by a mile! I saw three super concerts in three capital cities, a Russian wedding, a terrorist attack, an asshole being reamed, and a beautiful new hospital opening its doors early because some children desperately needed care. I didn't get to see Gwen's eye roll back into her head, but I heard about it from Stephanie. \n\n\"I can't wait to report all of this at a school assembly. Everyone's going to be so impressed with so many incredible stories, and they're all true!\"\n\n\"If you tell about my eye rolling back, your next assembly will be in Siberia,\" warned Gwen. \"I think it was all greatly exaggerated anyway.\"\n\n\"I don't think it was,\" offered Billy. \"Charlotte's been after me to make her scream, roll her eyes, and then pass out. She didn't make that stuff up. Besides, there were enough 'eye patch witnesses' there to verify the veracity of the story. And has anyone else noticed how all of the ladies have been looking at Steve lately? Once again, he's added to the legend!\" \n\nIt was a tired, but happy group of travelers that landed in Sparta ten hours later. Because of the time difference, it was mid afternoon. The travelers climbed into several helicopters to return to Sparta. \n\nGwen was surprised when the choppers put down near the high school rather than near their new homes in Asgard, as they now called their estate.\n\nOnce they landed and moved away from the landing zone, the choppers lifted off and locals began pouring across the field to welcome the travelers home. Gwen was surprised to see that many of the girls wore red eye patches over one eye. She turned to point it out to her sisters and friends, but then suddenly stopped in her tracks. Every last one of them, including Beatrice Patterson, stood smiling at her with one eye covered by a red patch!"
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "kiev",
        "moscow",
        "hospital",
        "terrorists",
        "concerts",
        "eye patch"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-18"
}