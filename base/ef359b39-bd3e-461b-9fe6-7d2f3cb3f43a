{
    "title": "The Creators Ch. 16",
    "pages": [
        "Chapter Sixteen: Reunion\n\nPrelude: Coming Ashore\n\nDIAMOND\n\nThe ocean washed over the desert. Like a biblical tide, it swelled ever forward, consuming sand and rock in a gentle tsunami. I rode it upon a ship made of water. The masts, the deck, the sails, the cannons, and the portholes were all shaped in aqueous detail, trapping the liquid in a prism-shaped by my mind. Even the great wheel was made of water, and I steered the rudder with a hearty pirate laugh, and a \"yo-ho-ho!\" I sailed my watercraft for miles and drew the ocean ever inland until I reached a chain of mountains. From my memory of what Passion had taught me, these were the Ogre Peaks, a northern uplift that crested the Gratoran Desert's Jenok Peninsula. Great civilizations lived within the vast caves that networked the rock, creating caverns so large they could house cities within them. I stopped my ship and wondered if I wanted to visit the place. I wondered if I wanted to stay there for a while. I loved my mom, truly I did, but the closer I got to her, the less I wanted to see her. I was coming to the realization that I would be perfectly happy to never see her again. I smiled. Nothing was stopping me from doing just that. Nothing but...\n\nI felt a tug on my mind. \n\n\"Not now!\" I growled. \n\nThe tug persisted. \n\n\"Hey!\" I yelled. \"I said no!\" \n\nThe tug stopped. There was a pause, then I felt something else. I became awash in an overwhelming desire to abandon my side-quest into the Ogre Peaks, and head straight for Droktinar without stopping. \n\n\"You don't get to tell me what I want to do!\" I hollered. \"I do what I want!\" I set sail for the Ogre Peaks, and shouted a defiant, \"yo-ho-ho!\"\n\nTo her credit, it took Corruption a long time before she crossed the forbidden line, and forced my desires southward toward Droktinar. Toward Mom. \n\nPart One: Exodus\n\nTERA \n\n\"Fuck me, you fucking ape!\" I snarled as I rode the orc, rolling my ravenous feminine muscles up his delicious length, taking gout after gout of his thick hot milk deep within my starving womb. \n\n\"Master, please!\" he croaked. Though his voice was sharp with terror, it was also rich with pleasure. He'd come to me in the morning as a hulking alpha male of four-hundred pounds. Now he was an emaciated husk of skin and bone, everything that was once hard and bulging now rendered to soft atrophied blubber\u2014everything, except one thing. He was pallid, and his flesh was yellowing. His organs were failing him, but I only needed one to work. I'd forgotten how thrilling it was to suck a man dry. \n\n\"Fuck me deep,\" I hissed, slithering my tongue across his face, \"fuck my tight little pussy. It's so wet just for you. Drown in it. Die in it.\" \n\n\"Please!\" he blubbered. \"I have children!\" \n\nI grinned. \"Any males?\" \n\nHe sealed his lips, and I giggled, and corkscrewed my pointed tail further into his ass, pressing the tip to his abused prostate and coercing it to give me more. He thrust and heaved, smashed his fat cock into me as though trying to split me in two, but my thighs were strong, and his soul was weak. In the end, he died with a smile on his face. \n\nI tidied myself in the mirror and basked in my vanity for a moment. I had never been so well-nourished in all my years. My hair had never been so luxuriantly black, my flesh had never been so supple and rich, and my curves had never been so bodacious. Even when I was Death Kiss, I hadn't fed so gluttonously. I did up my wavy black hair before my black and purple eyes, then stepped out of my wagon, and into the desert summer heat. \n\nI couldn't see the end of the caravan. The exodus was so enormous that the wagons and carts stretched to the horizon in every direction. Julia had spent a month gathering all the tribes of the Gratoran Desert. They came by the thousands, flocking like the sheep they were, simply adding mass to the momentum that barreled relentlessly eastward. \n\n\"Good morning, Aiko!\" I called merrily to the Breytan at the head of our column. \n\n\"And to you, Director,\" Aiko smiled politely back, not at all able to hide her contempt. She wore a white robe as a mark of purity, which put her a cut above the Breytans who wore red robes, denoting the loss of their virgin blood or whatever stupid shit Julia had thought up. If I was being honest, the only good idea she ever had was to make me the director of sin. It was a dream come true. I orchestrated sadomasochistic orgies, forced good-looking families into incestual debauchery, changed people's sexuality on a whim, and summarily executed weak men with my cunt. I was feared and revered, desired and hated, infamous and celebrated all at once. I sauntered from the steps of my extravagant wagon, walked past the line of muscle-bound slaves who pulled it for me and strolled up to Aiko. \n\n\"How's your mom?\" I asked her sardonically. \n\n\"She is recovering,\" Aiko answered smartly. \n\nI put my fingers against my nostrils and inhaled deeply. \"I can still smell her,\" I looked up at Aiko, and sniffed down to my elbow, \"I can smell her all the way here. She's such a deep woman, your mother. I touched her where you used to live.\" \n\nAiko turned red all over and bit her lip. The crescent-shaped scar between her brows turned vividly white with her rage, coaxing me to mock her more. \n\n\"My favorite part about ravaging her,\" I pontificated, \"was that moment she finally gave in to me. Her eyes rolled into her head, and she moaned things that no noble samurai woman ever should. She said\u2014well, you were there; I don't need to tell you the whole story.\" \n\nAiko shook with fury for a moment, then calmed herself with a deep breath, and smiled politely to me. \"Someday, Director Autumnsong, you will overstep yourself, and Sister Julia will make certain your screams are heard in the depths of hell. I will be very glad to bear witness to that.\" \n\n\"Careful, Aiko; there's a very good chance you'll already be waiting for me down there, and you'll have a very rude awakening when you see me crawl into Satan's lap, and give him a kiss.\" I grabbed her ass and squeezed until she gasped. \"You think you're untouchable? What if I have a few of my boys hold you down and pop that precious little cherry of yours, hmm? Do you think Julia will punish me, or you?\"\n\n\"You would need a hundred men to take me!\" she snarled, her hand twitching toward her katana. \n\nI chuckled. \"But I'd only need one of me. Go ahead and test me. You're no Jade Tao.\" I slid my hand through her crack, pushing the fabric deep between her supple cheeks until I could feel her little anus pulsing against my fingertips. Tears poured from her eyes, but she did nothing. \"That's right, little girl,\" I grinned against her cheek, \"I can do what I want with you here. No rules about this dirty little hole, are there?\"\n\n\"Please, Director,\" she hissed. \n\n\"Oh, now it's please?\" I giggled, and slid my fingers back and forth across her puckered little butthole, feeling it pulse beneath her cloak. \"Yes, you'll be saying 'please' quite a lot when I'm through with you. Just like your mother did.\" \n\nAiko closed her eyes, and fat tears rained down her face. \"Forgive me, Director.\" \n\nI circled her rim, pressing into the elastic center until I almost breached it through her cloth, and I sniffed deeply upon the musk of her unbidden arousal. \"Pay me proper homage, you pathetic worm,\" I whispered. \n\nThe caravans passed us, the joyful hymns were sung from a myriad of orcish lips, the bullwhips cracked, and the women screamed and moaned. The tortured sinners shrieked along the side of the road, the thousands of black banners billowed in the desert wind, and the millions of orcs with the crescent symbol burned into their brows marched to the east. These biblical scenes played out before me as Aiko got to her knees, and began licking my cunt. Though I appreciated the dichotomy of fear and hate that played across her eyes as she clumsily did her best, I didn't forgive her. I'd forgotten what forgiveness was. \n\nJULIA \n\nIt had been three weeks since I'd found Yuntok and his tribe, and two weeks since I'd found the last remaining highway of the orc empire, the Gratoran Road. I had walked all the way to the sea, where the melted ruins of Hektinar lay in great heaps of steel, and then I had turned south and begun my journey toward Droktinar. Many would die along the way\u2014many had perished already\u2014but those who fell would be carried into heaven, and those who stayed were blessed to do God's work. Those sinners who could not be absolved were nailed to the cross and ignited with my fire. Their shrieks of agony alerted me of their purification and confirmed that they would be jettisoned to paradise upon their passing. The Holy Mother was infinitely merciful. \n\nThough I walked upon the sand that steamed when water splashed it, my feet did not burn. I melted the earth beneath my soles, knowing that for millennia to come, millions upon millions would make the pilgrimage their ancestors once did, and they would seek to walk in my footsteps. And I did walk. Though many offered me a cart, and many even offered to carry me, I walked. Only when night blanketed this holy desert, did I dare rest. Only then did I dare look upon my imperfections, and succumb to the piece of the devil that lay within me. I had come to terms with the idea that I had unholiness in me. Sister Tera made sure I admitted it. \n\n\"Do you remember our first night together?\" the holy succubus sighed as she strolled beside me, hooking her arm into mine, resting her head upon my shoulder, \"You were so very frustrated. It was adorable. You just couldn't figure out a way to fuck me in a reasonable manner until I finally had to just... rape you.\" She giggled. \"Then it became quite clear how you liked it. Tell me, do you fantasize about the night while you're trudging through the day?\"\n\n\"To what do I owe the pleasure, Sister Tera?\" I muttered.\n\n\"I have some fresh-baked wisdom from the Holy Mother just for you.\" \n\nI narrowed my eyes at her. \"Perhaps you have wisdom, but I will be the judge if it is holy or not.\" \n\nSister Tera slinked before me, walking backward as I plodded ever forwards. \"Your red-robed priestesses need more training.\" \n\n\"You have already extensively trained them!\" I growled. \"And the impure priestesses are now more lecherous than they have ever been! I had to burn fifteen of them because they could not resist sinful copulation after swearing their celibacy to God!\" \n\n\"Their souls could not overcome the devil's touch. Do you really want priestesses who cannot bar the sanctity of their own womb?\" \n\n\"No,\" I sighed. \"You are right, of course, and you are wise, but I'm running out of Breytans. I have barely two-hundred left, and the flock they must shepherd is in the millions.\" \n\n\"Just because they have wings, doesn't make them angels. The Holy Mother gifted you with a clear focus of her path, but she gifted me with the vision to see the darkness in us all. Darkness must be brought to light, even if it is ugly.\" \n\n\"Wise words indeed,\" I said, and turned toward Jade. Though she was most certainly impure, she did not wear a red robe, but a black one. \"High Guard Tao,\" I prompted, \"what do you think? Can your soldiers endure more of Sister Tera's tests?\" \n\n\"If they cannot, then they deserve to burn,\" Jade said simply, then looked directly at Sister Tera. \"I trust that you'll make certain they are tested to the satisfaction of the Holy Mother. Any failings thereafter will be a blemish on your reputation, Sister Tera, not mine.\" \n\n\"Of course,\" Sister Tera smiled, unable to hide her uneasiness. She seemed to think everyone around her was nothing but a joke (including me), but not Jade. Not after the night of Jade's sacrament. I had written scriptures of flame across the High Guard's beautiful body, covering her from ankle to neck in passages of the Holy Mother. Though she screamed deep into the night, she endured it bravely, even asking me to continue my authorship until every last bit of her canvas was inked. However, I didn't think it was the burns I'd inflicted that so disturbed Sister Tera; it was the burns Jade had inflicted upon herself. For when I was done with my penmanship, Jade handed me an iron rod and asked me to heat it. Then, before the eyes of her brethren, the orcs of Gratora, and Sister Tera Autumnsong, Jade removed temptation from within. After that, Sister Tera could hardly stand to look at her. \n\nJade stared impassively at Sister Tera until she averted her gaze, and smiled charmingly at me. \n\n\"I best get to work then,\" she said and winked. \"See you tonight.\" \n\nI smiled back at her as she left, then scolded myself for doing it. She was right; I did think about her often as I plodded through the desert with nothing but my thoughts to keep me company. Too often. Her temptation had become so pervasive in my mind that it nearly eclipsed my meditations upon the Holy Mother. \n\n\"I am a weak woman,\" I muttered. \n\n\"You are the strongest woman I know,\" Jade assured me. \n\nI smiled up at her. \"You do yourself a disservice, High Guard. No one\u2014not even me\u2014has shown their devotion to God as you have.\" \n\nJade did not return my smile. She never smiled anymore. \"It as you say, Sister Julia: there can only be healing through pain. Enduring pain does not make one strong. It was my weakness that necessitated my pain.\" \n\n\"Indeed,\" I said, and looked to the sky, where way up in the glaring pale sun, a falcon circled ominously overhead. I wondered what sign the Holy Mother was giving me. Be ever watchful? Or beware of the opportunistic predator? Sister Tera was certainly that; and the more time I spent with her, the more I felt like her meal. \n\nANGELA \n\nI circled overhead as a peregrine falcon, flying so high that to those below I would be but a spec. Still, it didn't feel like high enough. My ocular vision could make out the shape of Julia and Jade in front of a massive dust cloud. When the wind blew just right, the dust cloud would thin to reveal a mass of people so vast that its ends couldn't be seen from even this high up. It had taken Julia Gendian three weeks to marshal the greatest force since the fall of the orc empire, and it had taken Justina and I just as much time to recruit exactly one Ionan to our cause. I adjusted my wings and flew toward the distant mountains. \n\nWhen I got to Iona, it was the late afternoon, and the office of Justina Autumnsong was woefully empty. Only the eminent ambassador herself sat at her desk, passively tossing darts at a board as she compulsively masturbated without any sense of zeal. There was a row of very large and ornate dildos littered across her desk, and I perched myself upon one with two heads separated about an inch from each other. \n\n\"Holy hell, did you bring all of these back from Drastin?\" I exclaimed. \"I knew you had a collection, but damn!\" \n\n\"These aren't mine,\" Justina said, examining one with passing interest. \"I found this treasure trove beneath Helga Sunscraper's bed.\" \n\n\"What?!\" \n\n\"They only get to lie with a man once in their lives; is it any wonder they build up a collection?\" Justina put the dildo down and pulled out the one that was inside of her. \"Helga told me Nona has a whole room full.\" \n\n\"No way.\" \n\nJustina shrugged. \"Conservative prudes are always the worst deviants.\" \n\n\"Says the open-minded liberal who wouldn't leave the bathroom for three days straight after she grew a penis.\" \n\nJustina smiled thinly. \"I was just testing to see if I could become a self-feeding biological system.\" \n\n\"We had to stage an intervention.\"\n\n\"Wow, who would've thought giving a succubus a penis would be a bad idea?\" she snorted derisively. \"Anyway, I won't be making that mistake again. Now, what news from Gratora?\" \n\n\"Looks like they're a day away from Droktinar.\" \n\n\"Droktinar is only four days away from Droktin's Pass.\"\n\n\"They'll stop for a while in the city.\" \n\n\"Droktinar was built to house a million people. Julia's followers eclipse that by an order of magnitude. They cannot stay for long. Any news of Diamond?\" \n\n\"I didn't see her down there. I don't think the god of water has much use for a desert.\" \n\n\"A desert is the perfect place for a god of water if you think about it. She'll show up soon.\" \n\n\"Have you put any thought into what we talked about earlier?\" \n\nJustina picked up her notes and scanned through them. \"The only logical explanation is that Diamond was always a Creator. She is spawned from Passion, who was the sister of a Life Giver, which means her lineage is right. She came out of Passion's womb as a late adolescent, which means she was likely in gestation for eighteen or so years. Perhaps she was conceived on the same day your brother and the others were. Like the other Creators, Diamond couldn't express her powers until she came under extreme stress or pleasure. As to why she doesn't carry her mother's patterns, perhaps only one Creator in a bonded pair can become the Bound One. It is obvious by the color of Julia's markings that Corruption's purpose in binding two gods was to hijack their connection. She must've gained some astral power from it.\" \n\nI scowled as best as a falcon could. \"It doesn't really help us to know any of this.\"\n\n\"We don't know anything, and you're right, it doesn't help us at all.\" Justina turned her notes over and ran her hand through her hair. \"Did you see any openings?\" \n\nI shook my head. \"Your mom never stays too far from Julia. No one will ever get close enough fast enough. Plus, Jade stays on Julia's shoulder like a fucking parrot, and even if she can't kill any of us, she can still delay us long enough. Assassination won't work. How's the recruitment going?\" \n\n\"Helga is our only volunteer to face Nona, and she's not exactly up to the task. The Ionan scouts are bringing back news of Julia's movement. As you can imagine, it's inspiring quite a bit of awe in the ranks of the Guard. Meanwhile, your brother insists upon staying absent for the sake of neutrality, whatever the good fuck that means. We need him here, Angela. We can't play by imaginary rules anymore.\" \n\n\"Brandon could make Helga invincible.\" \n\n\"You don't think the Ionans would notice that one of their lowest ranking warriors suddenly became the best swordswoman in the clan?\" Justina raised an eyebrow. \"If the point of Brandon's absence was to remove the idea of outside influence, then I hardly see how that'll work. My point is that we don't need to remove that perception! Have Brandon come in here and shoot a flock of seagulls out of his ass or something! Right now his absence is working against him!\" \n\n\"You know there's another reason he doesn't want to come here,\" I said, giving Justina a furtive look. \n\n\"Bianca,\" Justina sighed. \n\n\"The woman gave Brandon her daughter's virginity. He impregnated the whole Ofanian Guard. They're practically his family now.\" I ruffled my feathers. \"Brandon is... well, he's really loyal.\" \n\n\"To his dick,\" Justina grumbled and selected a new toy to play with. \n\nBRANDON\n\nI sat in a chair made of lilac flowers and watched a six-legged bear with the lower body of a mantis fight a snake with the underbelly of a centipede. The two horrific amalgamations of animals warped and transformed as the battle intensified. The bear-mantis became a dragon-tiger-wasp, and the centipede-snake became a spider-crab-jaguar. They collided in a ghastly display of fangs, teeth, mandible, and claws, then retreated once more. The dragon-tiger-wasp became simply a giant wasp with an exaggerated stinger, and the spider-crab-jaguar committed wholly to its arachnid body. The massive arthropods engaged in combat of flailing limbs and stinging underbellies. The spider managed to get its belly lower, and it shot upward and upside down to drive its point into the wasp's abdomen. The stinger bounced harmlessly off the insect carapace, and the wasp used the moment to take advantage. Clamping its horrific mandibles around the spider's head, it slowly began to squeeze. The spider trashed in agony, whipping this way and that, but the wasp wouldn't be thrown. It wrapped its legs around the struggling arachnid and turned it over onto its back. The spider thrashed for a few more useless seconds, then raised its forelegs in surrender. ",
        "A second later, Bianca was laughing as she released her daughter from the chokehold, the pair of them now back in their valkyrie forms. \n\n\"You tried to stab me!\" Bianca exclaimed. \n\n\"We have unbreakable skin,\" Arya grumbled. \n\n\"Something tells me you forgot that in the heat of battle,\" Bianca tittered, and hoisted her daughter to her feet. \"You went for a killing blow against your own mother. Should I be proud, I wonder?\"\n\n\"Maybe I'm just so used to sticking something into you,\" Arya sneered.\n\nBianca wrinkled her nose. \"Just remember that I once pushed your entire body out of me; the little bit you put back is but a pittance. Now,\" she grabbed Arya by the hair, and grinned wickedly down at her, \"we dueled, and you lost. You owe me what we agreed upon, so do your stretches, get your lotion, and wait for me in the tree with your wrists roped to your ankles. Mommy will come visit you when your timeout is over.\" \n\nArya tittered musically and flapped toward the tree. Bianca watched her go, then turned to me. \n\n\"Was the demonstration to your satisfaction, Your Holiness?\" \n\n\"It was utterly petrifying, so yes.\" \n\n\"Our enemies don't stand a chance,\" Bianca grinned wolfishly. \"We will crush the hordes of the Heat Bringer like ants! They will not make it a step past Droktin's Pass!\" \n\nI just smiled back and hoped my face didn't belie my terror. I had hoped that Julia would just meander in the desert for a while and then... I don't know... go away. Of course, even when she was uncorrupted, Julia had never been one to procrastinate, which made her the polar opposite of me. While the Heat Bringer amassed a horde larger than any had seen in thousands of years, I sat in Ofan, and vainly hoped some miracle would save us all. It kept me up at night realizing that to most people, I was that fucking miracle. \n\nNews of Julia's return had finally gotten east of the Gratoran Wall, and all the rulers of Balamora united under one flag to combat the coming menace. Just kidding. They all decided that the best course of action against this existential threat was to collectively shit their pants. The king of Grundinar ordered the invasion of what was left of Drastinar, the queen of Justinar then sacked Grundinar, the king of Brondinar evacuated his entire kingdom into the eastern mountains, and the king of Ruminar formerly declared himself to be a devout servant of the Heat Bringer and decided to commit genocide upon anyone who didn't follow the Maternal Path. The dwarven princedoms all decided that burrowing into their caves was the best course of action, the now nomadic nymphs disappeared into the northern wilderness, the centaur enclaves secluded themselves into the eastern mountains, and the elf empire completely shut down. \n\nIt was extremely obvious to me that I was supposed to reveal myself, unite the world under my banner of hope, and charge into the fray, but finding the deepest darkest hole in the ground to scuttle into was sounding more and more appealing. Angela insisted that our greatest weapon against Julia was that everyone thought I was dead. Cool, well that could also be my greatest defense. If it weren't for my sister, I probably would've been on the other side of the world by now, but for some damnable reason, the idea of seeing the disappointment in her eyes was worse than seeing the black evil in Julia's. And so, I was stuck in limbo, pissing away the last few days I had alive observing pointless training exercises and trying not to look like I was perpetually about to shit myself. \n\n\"Yeah,\" I smiled at Bianca, \"we're gonna... we're gonna fuck 'em up. Yeah.\" \n\nBianca, bless her sweet heart, just beamed radiantly, bowed, and flew after her daughter. \n\nGod, I wish I had that kind childlike confidence, I thought. \n\nYou really think she's that na\u00efve, Brandon? Angela teased in my mind. She's can tell you're one scare away from shitting yourself into the stratosphere, and she's trying to keep you together. \n\nI narrowed my eyes at the falcon who had fluttered into the garden. I didn't send you that thought. Did you learn to read minds? \n\nNo, I've just spent so much of my life looking at that stupid face of yours that I can read it like a book. Angela dropped from the tree, and transformed into her human self. \"You were supposed to go to the mountain peak two hours ago. You're avoiding me, you asshole.\"\n\n\"I am.\" \n\nAngela ran her hands through her strawberry hair and sighed. \"Brandon, we can't do nothing anymore.\" \n\n\"If I intervene, then they'll choose Julia.\"\n\n\"I can count on one finger the number of women who are willing to challenge Nona for your sake. Do you know why? Because these women train for generations to serve gods that come once every few thousand years. One god is marshalling the world's largest army to go on a holy crusade, and the other is sitting on his ass waiting for someone to suck his dick. Not really a choice at all, is it?\" \n\n\"Julia's corrupted!\" \n\n\"They don't care, Brandon! The shock-value of that revelation wore off weeks ago! You had a chance, you had Nona right here in Ofan, in the heart of her enemy's kingdom, ready to serve you because she was so terrified of a god Freydis had sworn her to, that she was willing to break Freydis's wishes if you would just prove that you could make a hard choice! They don't respect you for respecting them; they think you're weak because of it!\" \n\nI ground my teeth. \"I thought I was doing the right thing.\" \n\n\"Goddamn it,\" Angela rubbed her temples. \"Not everyone shares your weird hermit philosophy. Some people\u2014most people\u2014don't want to just be left alone. They want to be wanted.\" She looked up at the baobab tree, and shook her head. \"Bianca is doing everything she can to persuade you not to go to Iona. She wants to be wanted by you so badly that she'll damn the whole world. You're her very purpose in life. I know you know this, Brandon. I know you encourage it because you don't want to hurt her.\" \n\nI dropped my head, and ran my fingers against my brow. \"You're right. I'm weak.\" \n\n\"You're just too compassionate,\" Angela said, and planted a kiss on my head. \"I've read enough history now to know it's the curse of Life Givers.\" \n\n\"I can't just betray her, Angela. She saved me. She saved us.\" \n\n\"Well then,\" Angela said, and raised my face to hers, \"we're going to have to get a little mean.\" \n\nASTRID \n\nThe Sword of Iona was the most hallowed weapon on Balamora. It had survived for longer than every recorded nation, and had been passed down from High Guard to High Guard for hundreds of generations. I was the first non-High Guard to ever wield it, and fittingly, I was also the first Ionan to ever lose it to another clan. That would've once been a disgrace worthy of suicide, but now the sword that was once so heavy on my mind held very little weight in my heart. Now there was another sword on my back. It was an unfamiliar sword, and yet it felt like an extension of my arm when I wielded it. It was heavy\u2014I liked a heavy blade\u2014but it wasn't overbearing. The balance was so precise that I could've lain the crossguard across a pin, the edge was so keen that it could cut through rock like butter, and the blade was so strong that I could pry up boulders and never bend it. It was precious to me, but even this priceless weapon meant nothing to me compared to the other thing I held. \n\nI cradled Willowbud in my arms, not daring to breathe. She snored her divine snores, loud and grating enough to ring in my head, but each one trailing with the cutest little whimper. Her lips bubbled spit against my nipple, and she sometimes gnawed on it compulsively in her slumber. Now that my wings were jet black, I could block out the sun completely. The darkness in my cocoon of feathers was total, but I could see clearly in it with my nocturnal eyes. I didn't know how to classify myself. I was most certainly a valkyrie, yes, and anyone who tried to say otherwise would meet the hard end of my fist. I walked like a valkyrie, I moved like a valkyrie, and I flew like a valkyrie, but I could not deny the other thing that I was; the huntress. While I could still stand proudly in the sun with my wings unfurled and the wind whipping through my (now black) hair, there was something about the darkness that awoke me. While I could still dance with a blade in hand before the terrified eyes of my enemies, there was something extremely appealing about stalking my unknowing prey from above, and silently dispatching them without them ever being aware of it. I did not think that I, Astrid Skyborne, had changed; I thought there was just... something extra added to me. \n\nI frowned in the darkness. Well, that was wholly untrue. I, Astrid Skyborne, had changed tremendously, but my genesis hadn't come from Gloria's bite; it had come from Night Eyes' torment. I had become Angel, the winged gladiator, the hedonist and whore of whores. I had killed my mother on the sands of the arena just for my glory. But no, I wasn't her either. I had not stood in triumph over my mother's corpse but had stood in the horror of what I'd done. I had changed, and I could not say who I was anymore. Neither Angel, nor Astrid, nor something in between. I was someone else, someone... older. Perhaps I was lost, I did not know, nor did I care. Throughout the most tumultuous time in my life, there had been one constant. Willowbud. Maybe I couldn't see her when Corruption blackened her lenses, but she had been there. She had been there the whole time, watching me, waiting for me, and in the end, she felt for me the way I had felt for her ever since that beautiful day on the mountaintops. \n\nI dared to breathe, and my patterns thrummed alight. Symbols and shapes of mountains, canyons, and gorges decorated every inch of my flesh, marking me with her love. With her love! The very idea was so euphoric that it brought tears to my eyes, and I cradled my god deeper into my bosom, delighting in the way her teeth gnawed so roughly against my nipple. She had come back to me. She had saved me. There was nothing in the world more precious to me than this tiny little hermaphrodite with the white hair and the forest-green eyes. Now I knew there was nothing more precious to her than me. I wept with silent joy in my cocoon of feathers and cursed myself when an errant tear dropped from my chin and splashed Willowbud on the face. \n\nHer eyes fluttered open, and she gazed at me. I beamed down at her, wishing I wasn't crying like some madwoman. She grinned back up at me, my nipple still in her mouth. \n\n\"Is it still daytime?\" she whispered. \n\n\"It's almost evening,\" I whispered back. \n\n\"Then it's still naptime,\" she grinned, wrapped her lips about my areola, and began to suckle. Her eyes slowly closed, and little snoozes of contentment emanated from her mouth. I cradled her closer, and I savored the precious moment for a little longer.  \n\nWILLOWBUD \n\nGloria dropped a deer carcass between herself and Astrid, and the two of them went to town. The first night we were together, Astrid had been very bashful with her feeding. She tried to scuttle off with some food in her arms so that I wouldn't see her eat. I told her that I thought her animalistic feeding was a total turn-on. In retrospect, maybe I should've let her be a shy eater. The Huntress had not completely left my beloved valkyrie, and now she was encouraged to make a show of cracking open bones, sucking the marrow out, ripping great chunks of muscle from ribs so that the sinew and tendons strung and snapped. When she was thirsty, she'd imbed her fangs into the meat, and emit the most disgusting sucking sound as the meat dried to white jerky between her lips. Gloria, for her part, was a much more refined eater. The pretentious old bitch had actually brought a silverware set with her on her vertical trek a mile up the side of the Gratoran Wall. Now she quartered her meat into little cubes before eating it in four precise mouthfuls, watching Astrid's boorish consumption with obvious distaste. \n\n\"There's a jar of tofu in the sack,\" Gloria said, sliding her bag over to me. \"I got cabbage and turnips too. Those go together, right?\"\n\n\"Sure,\" I said. I sifted through the sack and pulled out a newspaper. It was the Grundin Journal, and the entire front page was an artist's rendition of the black-eyed Julia leading her army through the desert. Apparently, the self-proclaimed 'Flame of God' wasn't too stuck-up to do an interview. I opened the paper and scanned the article, my mouth moving with the words. \n\nHer Holiness, Julia Gendian lives a modest life. Every morning, she wakes up, prays to the Holy Mother, and then washes herself with a small basin of water barely large enough to fill a pot of coffee. As she does this, she explains to me that she can clean herself perfectly by just lighting herself on fire, but she prefers to wash herself with water so that she must suffer the same chafing and dry skin as her followers. The walk, she says, is one of atonement, and one cannot find atonement without suffering.\n\nSuffering seems to be a common theme in Julia's exodus. No one exhibits this more than High Guard Jade Tao, who wears the Sword of Iona like a trophy, but whose scars are beyond the counting. It seems that women especially are held to a brutal standard, and any who stray even a little from Julia's interpretation of the Maternal Path are punished severely. Director Tera Autumnsong, the formerly-infamous 'Death Kiss' and eminent of the late Brandon Sorensen, is tasked with punishing women who step out of bounds sexually. When I ask the director exactly why she chooses some of her perverse and heinous punishments, she simply taps her head and declares that if she wanted to do it, then it was God's will. She then enslaves and rapes me for several hours before telling me to leave. It is very hard for me to do so. Read my subsequent article, \"A Night with Death Kiss\" for the details.\n\nWhile walking beside Julia, I can't help but look back with pity upon some of the poor crucified orcs slowly roasting alive from the fire beneath their feet. Julia explains to me that their pain is their salvation and that they will be delivered to heaven in a golden chariot when they pass from this world. I ask her if she has ever doubted her interpretation of the holy word. She is surprisingly forthright with her confession that she sometimes is confused by God's message, but she vehemently asserts that she never doubts it. \"I am not my daughter,\" Julia explains. \"I am not blessed with the vision of god herself.\"\n\nWhen I ask about the whereabouts of Diamond Glendian, the 'Water Dancer' and the newest addition of the Creators, Julia smiles sadly at me. \"Where ever the Holy Mother has taken her, that is where she needs to go. She will come back to me only when the time is right.\"\n\nWhen I ask what Diamond's religious beliefs are, Julia refuses to comment.\n\nAfter my third day on Julia's trek to Droktinar, a fight breaks out amongst some of the citizens. The fight turns into an all-out brawl and soon escalates to lethal engagement. Julia has to break up the fight herself. She burns the murderers alive and scorches the palms of those who took up arms against their brothers. She then makes the entire congregation sit and pray for the burning men even as they scream. I watch as the endless tide of orcs kneels row by row all along the great caravan. For as far as the eye can see, the multitude stops, and kneels. Those that are miles away cannot know why they are bidden to kneel and pray, but they do so without hesitation. Such is the power Julia wields amongst her adopted people. Whether that power is born of fear, respect, or simply deific awe, I cannot say, but there is no doubt that she has it.\n\nAfter the prayer is over, Julia reestablishes herself at the front of the caravan, and continues her walk. She is visibly aroused. She does not shy away from the fact that she is sexually excited by the mortal agony of those she sends to heaven\u2014she is proud of it.\n\n\"At first, I was quite vexed that the Holy Mother had laid perverse temptations in my mind,\" Julia explains. \"It wasn't until Sister Tera came to me and unwound the complexity of my desires, that I saw clearly why it was the Holy Mother stirred my arousal when I enact her justice. If I am to purify sinners with hellfire, then I must have a little of the devil in me.\" Sister Julia smiles coyly at me. \"The penis is a man's organ, and men are of the devil's gender. I will not pretend to be a perfect soul, but I know that an imperfect tool can still be useful. The Holy Mother has made me her judge, her deliverer, and her high-priestess, but I am too impure to carry her gift. Only Sister Diamond carries God's true vision.\" Julia looks upon my body with obvious interest, and says, \"sodomy is not a mortal sin, you know.\"\n\nAs of the sending of this article to my publisher, the great exodus is but ten days away from Droktinar. When I ask Julia what she will do when she arrives there, she states, \"Sister Diamond will come\u2014I know she will. I will light the furnace, and she will water the desert, and God will provide the rest. The holy kingdom will be born, and all will bask in its radiance.\"\n\nWhen I ask her if she plans to stay in Droktinar for long, she simply smiles, and looks out at the distant shape of Droktin's Pass. \n\nI put the newspaper down and clasped my hands together to hide that they were shaking.\n\n\"I can smell fear, you know,\" Gloria said, eyeing me. \n\nI farted. \"Does it smell like beans?\" \n\nAstrid giggled, and Gloria scowled. \n\n\"We're all scared; only an idiot wouldn't be,\" Gloria muttered. She took the newspaper from me and scanned it. \"God, the world's falling apart. The human kingdoms are cannibalizing each other, the dwarves have dug underground, the nymphs ran to the mountains, and the elves locked down. It's nothing like the last time.\" \n\n\"You were there, weren't you?\" Astrid asked Gloria. \"When Droktin opened his pass?\" \n\nGloria nodded. \"It was Arbitrus who started it. He was a madman, make no mistake about it. He should've known what his horror would reap.\" She plucked a rib and nibbled on it. \"I was there when the mountains split, and the horde poured through. Droktin's Bound One had died, and the action killed him, but Halok\u2014I mean Wrath\u2014had cursed the horde with his mania. I fought them with the others. Men, elves, dwarves, centaurs, and nymphs; all of Balamora against the vengeful remains of the orc empire.\" Her eyes became distant. \"Have you ever walked Droktin's pass from end to end?\" \n\n\"I rode through it in a cart once.\" \n\n\"I flew... once,\" Astrid muttered, apparently still embarrassed about being captured. \n\n\"It takes nearly a day to get through it without breaking stride,\" Gloria said, cracking the rib between her fingers. \"After the first day, it was so choked with bodies that the sides were piled five stories high from end to end. The ground ran with blood like a river, and the flies swarmed like black clouds over it all. They were so thick that they blotted out the sun. It didn't matter what time of day it was when we fought between the mountains, it was always under a humid golden twilight that filtered through the buzzing clouds, all the smells marinating in that hot chasm. You'd crawl on top of a mountain of the dead all by yourself, not knowing where your friends just went, then a brute with red manic eyes would jump out of the corpses, rotten limbs and guts all spraying out of the steaming hole he'd made, and he'd charge you down even if you'd cut his legs off. On the third day, the bodies were so high that they overfilled the end, and created a ramp into the pass. I remember the faces of the fresh men and women that came up from the rear. They heard stories, but you can't believe it until you see it. There wasn't even really any army anymore; just a bunch of broken men and women with officer symbols on their helmets sending Balamora's youth into that boiling grinder. For weeks, we just kept adding to the pile until the pile was done.\" ",
        "She let the rib drop from between her fingers. \"We never knew when the war was over. The days blurred together until we came out of the other side. There was no one there waiting for us. Just a few dozen tents and some spoiled food carts. I remember the way the wind whistled over the desert, playing with the golden dunes, washing away any footprints that might've been there. It was like we'd been fighting a ghost.\" \n\nA tear ran down her cheek, and she wiped it neatly away. \"There was one man we found. An old orc, chopped to pieces, guts hanging out. His eyes were so red it looked like they were bleeding. He was the carrier of Wrath. I had my doubts, you know, about what Sentients were. I couldn't believe that Halok could become... that. But that old orc, whoever he was, he just kept trying to stab me with the sharp end of his snapped-off arm. When I looked into his eyes, I knew that there was nothing behind them that belied humanity. There was just madness.\" She looked up at me, \"This time, no one is going to hold the line\u2014not against her. When the orcs sweep through that pass, they will wash over Balamora like a surging tide, and there will be nothing left standing. Their hatred runs deep, and their memory is long, but they won't fight for restitution or reclamation. The legacy of Furok, Droktin, Gratora, and Hektin is gone, and these children they've left behind only know savagery. They will burn it all down unless someone stops them.\" \n\n\"I know what I have to do, Gloria. You don't have to keep trying to convince me.\" \n\n\"I'm trying to remind you. Convincing takes one word; conviction takes a lot more than that.\" \n\n\"If she said she'd do it, then she'll do it,\" Astrid said firmly and wrapped her arm around my shoulders.\n\nGloria smiled thinly at Astrid. \"As long as you will, she will.\" \n\nTERA \n\nIt was dusk when the procession halted. Julia lit a great black fire in the bowl of a large dune, painting the world in violent hues of white and black. She summoned the white-robed Breytans, and they dutifully flocked to her side and watched me with unmasked contempt in their eyes. That contempt turned to horror when I snapped my fingers, and the winged women were hauled out from the audience. They dragged their iron balls behind them, leaving deep grooves in the sand. They had been stripped of their red robes, and only wore the metal collars, cuffs, and shackles that bound them to their burdens. \n\nValkyries were strong. The iron balls had to weigh in excess of a thousand pounds to burden them sufficiently, but still, they dragged the great black weights toward their daughters. Only it wasn't to their daughters they went, for I had tormented these women for hours in advance of this ceremony, and what drove them to drag their great burdens was the row of naked stud-bull orcs that had stepped between them and their daughters. When they could no longer walk, they crawled in the sand, and their daughters gaped as they watched their uncaring mothers thrash like desperate animals to get to the organs they so craved. When they finally reached their men, they had devolved into such states of depravity that they took the organs deep into their gullets without even pausing to catch their spent breath. \n\nNever had I seen my venom work to such great effect. The impure valkyries worshipped the men they pleasured, some of them weeping with joy as they licked the shafts, cradled the balls, and consumed with relish. With a snap of my whip, the rows of men proffered the keys I had given them and detached the iron balls from the women's chains. Still wearing the iron clasps of their slavery, the mature winged warriors of Breyta willingly got to their feet and exchanged lips and tongues with their partners. The men grasped them by the waist per my instruction and turned the valkyries around. \n\nBefore the bulging eyes of their daughters, every impure woman willingly spread her legs, grasped her cheeks, and peeled open her crack for the throbbing organs beneath them. The looks of utter shame that the women wore were portraits of art to me, and the comingled expression of whorish surrender that crossed their faces when they were anally penetrated was even greater. One by one, the women opened their sinful apertures around the immense rods that threatened to impale them, and one by one, they willingly slid the men deeper, deeper, deeper. I could see the pain contort their faces, but the pleasure was too great, and my venom confused pain and pleasure to the point that they sought both. They took them all the way, crying out and singing to the sky, the monochrome flame painting their faces in stark contrasts, showing the euphoric lines about their smiling lips and bulging eyes, showing the light of pride die in their succumbing gazes. \n\nIt was only then that I dared to turn around and grin at Aiko. Tears were running down her face, but she kept her lip stiff as she watched her mother being ravaged. Aiko finally turned those beautiful almond-shaped eyes on me, and I saw what I was looking for. Oh, such hatred. The expression made me so lusty that I nearly joined the women before me, but I stayed my compunctions. I had to show Julia that this wasn't about me, even though it most certainly was. All of this rape and torture had to at least appear to be ceremonial, and I had to seem like just another servant of the Holy Mother performing her stoic duties. But Julia could not hide the erection that quivered between her legs, nor could she conceal the way her eyes darted to me from across the fire. I just smiled at her. She would come crawling to me tonight, and in a worse condition than these whores had been dragging their iron balls. I turned my gaze from her to the woman standing at her side. Jade Tao watched me with her dead implacable eyes. I shivered and looked away. \n\nJULIA \n\nI was quivering from head to toe when I walked up the steps to Sister Tera's wagon, Jade following dutifully behind me. The orcs guarding Sister Tera's door bowed their heads and blessed me, but I hardly noticed them. The steps creaked beneath my feet as I ascended, and I raised my shaking fist to knock on the door. I waited. She always made me wait. For tortuous seconds, I simply stared fixedly upon the cracked wood of the door. Though I was cloaked and hooded, I could still feel all the eyes around me as though they could see through the fabric. I felt their questioning looks; I heard their accusing thoughts. Sinner. Hypocrite. False prophet. I needed to be cleansed! Oh god, why did she make me wait so long?!\n\nThe door creaked open. I was greeted by a pair of smirking black eyes, the violet irises laughing at me, the heavy lids beckoning me in. The room was smoky and rank with indulgent sin. It was the kind of room I would've sprinted right out of when I was a nun. Pillows lined the walls, cushions covered the floor, satin sheets and velvet drapes adorned every hard surface. An opium pipe burned in the corner, incense burned in the window, and a cigarette burned from a long holder plucked delicately between her lush purple lips. There were two pairs of shackles on the floor. They were hard and rusted, the metal crude and jaggedly cut, the chains thick and coarse. My knees trembled at the sight. \n\n\"Wrists and ankles together, Sister,\" Sister Tera said softly, thick smoke cascading from her lips. She was wearing one of the white pure priestess's robes, but she'd mangled it for her blasphemous tastes. The white cloth was bound in black leather straps, and she'd cut the fabric for her breasts, midriff, and buttocks to protrude, making a mockery of my piety. She'd donned a nun's headpiece but had poked holes in it so that her horns showed from the top. Perhaps it would've driven me to rage outside of this wagon, but within this wagon, there was only one voice for the Holy Mother. In this wagon, the queen of sin was the priestess, and I was the unwashed whore needing to be cleansed from the inside out. I dropped to my hands and knees, and shackled the abrasive cuffs to my wrists and ankles, binding me leg-to-arm so that when I knelt, my hands were brought behind me. \n\n\"Bless me, Sister, for I have sinned upon this day,\" I whispered up to her. \n\nSister Tera selected a dagger from her belt and eyed the keen blade. \"Confess your sins, Sister,\" she said softly. So softly. \n\n\"I lusted for a man,\" I whispered.\n\n\"You wanted to sodomize him?\" \n\n\"At first, yes,\" I muttered, \"but the more I watched him, the more I wanted him... as a woman.\" \n\nSister Tera crouched before me and touched the point of the blade to my throat. \"Tell me very specifically what you wanted him to do to you,\" she said, her voice sonorous and calming, so disarming that it made my shoulders ease back, presenting my chest.\n\n\"I wanted him in my anus,\" I shuddered when the point of her blade dragged gingerly down my collar. \"It is disgusting to garner pleasure from such a place, but it is my weakness. But I am weak in other places, Sister. In my fantasy, he brutalized me from behind, ramming his phallus into my rectum until I was blubbering like some animal, but then he became tender with me. He picked me up off the ground, laid me on a bed, extracted himself from my filth, and entered my sanctity.\" \n\n\"That almost sounds romantic, Sister Julia,\" Sister Tera mused, letting the point of the knife slide easily down my left breast. \n\n\"It was,\" I gasped. \"What does it mean? What wisdom does the Holy Mother give you?\" \n\nSister Tera drew the knife to my areola and stayed there. She slowly circled my taut moist nipple, and gradually applied more pressure. So expert she was, that I did not even feel the slice into my flesh. I only felt the wonderful intensity of the point until it cut seamlessly into my dark areola, and a droplet of blood rolled down the bottom of my milky breast and splashed between my thighs. \n\n\"You miss Diamond,\" Sister Tera finally said, but I was so drunk with the sharp focus of her pain that I hardly understood the words she said. \n\n\"Yes,\" I muttered when my thoughts aligned themselves. \n\nSister Tera slid her knife along the black patterns that swirled my nipple, drawing the point precisely so that it cut only through the surface. She was a surgeon with that knife, an artist with it, and the entire focus of my being followed the edge of her blade as it delivered such an exquisite form of pain. It wasn't even really pain at all; it was... a heightening of sensation. I wasn't even breathing. I was just staring into her eyes as she watched her artistry with fascination, painting me with my own blood, opening me with barely a graze. My organ was engorged and throbbing; my womanhood was pulsing and salivating; my anus was winking and flexing. My sexuality was laid bare before her, and when her cruel black eyes finally connected with mine, I saw my enraptured and supplicant expression reflected in her lenses. \n\n\"You have more sins to confess to me, Sister,\" she sang with her honeyed voice. \n\n\"I have none,\" I murmured back, possessed of her. \n\n\"Oh, but you do,\" she hissed, and flicked the knife away from my flesh, \"and I will peel them out of you.\" She slid the knife back into its scabbard and proffered an iron collar with her hooked hand. A heavy chain trailed from it, and she made a show of wrapping her hand in the links and pulling it taut before my eyes. \"Woof-woof, doggy,\" she grinned. I bowed my head and sobbed. \n\nShe clasped the collar around my neck, so large was it that it touched me from collar to chin, holding my posture rigid. She stroked my hair like the good doggy I was, and I whimpered like a guilty pup and nuzzled my face into her crotch. My teeth gently bit into the damp fabric of her panties, and I slid them aside, dipped my nose and mouth into the heavenly miasma between her legs, and wetted my snout with her nectar. She purred as my tongue dutifully lathered her folds, and she eased back on the cushions to let me please her. She wrapped more and more links around her hooked hand and she drew me ever deeper between her thighs, pressing my muzzle into her slit until the lips gripped me. With each of my dutiful licks, she stroked me along the spine, raking her sharp fingernails so pleasantly, so possessively, down my backside. I had to inhale the pungent aroma of her femininity just to breathe, and it saturated my sinuses with its intoxicating odor, driving me mad, making me consume with boorish relish until I was lapping her pussy like a dog, slobbering through her folds, consuming her slit, smooshing my face deeper to deliver my lips and tongue until she went rigid with a gasp. Her orgasms were so subtle. I could feel the immense pleasure teeming through her, but she always maintained control over herself, and so she maintained power over me. \n\n\"Dinner time's over, little doggy,\" she said huskily and pulled me up sharply by the leash, making me squeak out a choke. \"Confess to me, you mangy mutt.\" \n\n\"I like watching women get raped,\" I choked out, my eyes bulging. \n\n\"I know; that's why I put on such a show for you tonight,\" she tenderly stroked my face. \"You don't care if it's divine justice, do you? You just want to see whores get put in their place.\" \n\n\"Yes!\" \n\n\"No,\" she giggled teasingly, \"no, no, no, because if that were true, then why would you be so aroused to see your disciplined, loyal, prim, and proper samurai women get fucked into slovenly sluts, hmm?\" She asked with a raised brow. \"Your encampment is filled with whores, Sister Julia. Even with the crescent burned between their brows, they sell their bodies in thousands of wagons every day, yet so few of them are punished. Why is it that you hurt those that are the most loyal to you?\" \n\n\"Because my priestesses should be held to a higher standard!\" I croaked, savoring every second of my strangulation. \n\nSister Tera touched her brow to mine, and stared deeply into my eyes, her violet irises swimming with amusement. \"You just want to watch someone's innocence get raped away. I get it. I love it too. There's nothing quite like watching one of god's pure children get fucked until their mind breaks!\" \n\nShe tossed me backward, and with my wrists bound to my ankles, there was nothing to stop my momentum from carrying me end-over-end. She stopped my roll with a jerk on my chain, holding me so that my buttocks were pointed to the ceiling, and my rigid cock was pointing accusingly down at my upturned face. Sister Tera examined my predicament and grinned evilly. She tightened the leash, grabbed my cock, and tightly wrapped the heavy chains around my manhood, circling to the base until all but the purple bulging head was visible. My back already ached from the position I was forced into, but I dared not stretch it now. I could only whimper up at Sister Tera with my eyes full of surrender, and plead for mercy I knew would never come.\n\n\"Oh, how I love it when a guilty dog begs,\" she chuckled evilly and slid her hands along the domes of my spread buttocks. She pressed her thumb and hook along either side of my favorite hole, and stretched my rim open. Her long reptilian tongue came out, and circumnavigated my coiled center, loosening the taut resistance, opening me, making me whine and whimper with need until my pelvic floor was popping with my sporadic clenches. \"You are so, so desperate...\" she crooned around a wicked smile, \"...oh, so, so, needy, aren't you, doggy? Will you woof for me, little puppy? Woof-woof?\" \n\n\"Woof-woof!\" I wailed, and Sister Tera cackled with delight, pinched her fingers together, and with naught but the spit she'd lathered me with, she pushed into my anus. I cried out in abject delight. Deeper and deeper she went, her fist disappearing inside of me, stretching my hole with her knuckles, popping each one in until I was clinging around the torturous girth of her hand. She held me there, keeping me stuck between heaven and hell, making me weep for pain and pleasure until she finally pushed through. Her hand squished through my clenching innards, her knuckles scored along my thin rectal flesh, and her fingertips opened my sphincters until they found the filthy heat deep within me. She twisted and turned inside of me, her malevolent gaze cast down upon me, and she made my hips move with the motions of her hands, sending me screaming in ecstasy as she passed along my tortured prostate. I was coming. The pleasure lanced through my loins, shot up my shaft, and slowly dribbled to a viscous halt within my constricted pipe. Sperm bubbled from the swollen tip of my cock, and a single droplet splashed onto my lips. \n\n\"Please, Sister!\" I whined desperately. \n\n\"Please... what?\" she giggled. \"Please let you come all over your own face?\" \n\n\"Yes!\" \n\n\"I want to hear you say it, Sister!\" \n\n\"Please let me come all over my face!\" I bawled. \n\n\"Mmmm...\" Sister Tera pondered me for a moment, then said, \"...no,\" with a giggle, and pushed my crotch forward. My back screamed in pain, my mouth opened to sound it, and the head of my own cock pressed against my lips. The muscles on my back strained, my hamstrings tightened, my eyes shot to hers, wide and trembling, begging her not to make me do what she was going to. She savored my pathetic expression, unwound the chain that constricted my shaft, and mercilessly pressed me forward. My objections were muffled as my own cock opened my lips, drooling my own filthy cream onto my tongue, touching the insides of my cheeks, stretching my mouth open to wrap around its girth. Sister Tera eased me ever forward, heedless of my protests, grinning sardonically with her malevolent eyes dancing in the candlelight. \n\nMy breasts squished against my chin, my belly folded in rolls of fat, and my penis reamed the opening of my throat. From such an angle, I could see Sister Tera's wrist being consumed by my taut white anus, stretching so terribly to accommodate her. The horrific sight aroused me, the sensations aroused me further, and the very idea of my terrible debasement aroused me even more. Forced to suck my own cock, twisted in a pretzel of bondage so that my grotesque shitting hole was presented to me as it birthed and enveloped Sister Tera's thrusting fist. It was what I deserved. After a day of piety, I had earned this abhorrent sin, this indulgence in my terrible truth. \n\n\"God, this is beautiful,\" Sister Tera whispered heatedly as she pressed hard against my prostate, expelling thick gouts of precum onto my tongue that dribbled down my opened throat. She ran the dull petal point of her hooked hand over my taped nethers, sliding it back and forth through the damp membrane until the tape was so wet that all my vaginal features were easily discerned. I could do nothing to stop her, and I didn't want to anyway. With a hedonistic moan, I rolled my eyes back and surrendered everything. I savored the way my cock tasted, and I relished the way my mouth felt. I sucked my own cock as Sister Tera ravaged me from within; pressing and prodding, rubbing and kneading, squishing my anal clit until ecstasy was lancing up my shaft, and bursting from my tip. \n\n\"Don't you dare swallow!\" Sister Tera snarled, milking my convulsing prostate fiercely, hovering over me with her teeth bared as I sobbed, mewled, and sputtered. Tears of shame ran down my cheeks, and the shame only elevated my euphoria, turning my brutalized nethers into a gelatinous sponge for her fingers to squish into. I filled my mouth with my nectar, and I hated and loved the taste of it. When Sister Tera was satisfied with my humiliation, she lowered my pelvis, hooked her metal hook through my leash, and brought me to her lips. She fed from me with gluttonous avarice, and I kissed her with compassion, giving her everything, enjoying every flick of her tongue and press of her moist lips until my mouth was empty. \n\n\"Have I been cleansed, Sister?\" I whispered upon her lips when we parted. ",
        "She smiled cruelly at me. \"Not even close.\" \n\nShe was very cruel to me that night. So horribly, wonderfully, cruel. Once my anus was sufficiently stretched by her fist, she invited a dozen of her slaves in to punish me. Bound as I was, and helpless to her sensual mastery over me, I could only pray that the blindfolds they wore obscured their vision well enough. I was put into stockades, and fucked from behind, one man after the other pounding into my rectum, bringing me to violent orgasm as they hollowed my tender innards and deposited their seed into me. Only the first man used lubrication. All others afterward used the hot milk of the man previous to grease his violation of me, pounding the slick nectar into a foamy froth that dribbled down my taint. There, the piece of tape with the crescent symbol drawn over it barely held my chastity, and Sister Tera tempted me tortuously with her skilled fingers caressing the sopping fabric. \n\nAfter the fifth man was done with me, my legs were quivering so terribly that I couldn't stand upright. After the sixth man, my legs gave out. Sister Tera had to release me from the contraption, and shackle my wrists and ankles together again. In such a position, it was easy for her men to pass me around in a circle, bouncing me off their crotches as I screamed and sobbed, my cock spewing sperm into Sister Tera's awaiting mouth as she relentlessly tortured my pussy. By the time they were done with me, my anus was prolapsed and would not close, and nectar leaked continuously down my trembling thighs. Sister Tera planted her face between my cheeks and drank from my reservoir.\n\n\"Shit it all out, you slut,\" she whispered so tenderly, \"give me what I'm owed.\" \n\nThough the orcs that surrounded me were blindfolded, they could still hear the wretched sounds of my ass sputtering, squelching, and farting to expel the thick volumes of cum into my priestess's mouth. It aroused me terribly to be so debased. I reached back and spread myself to give her easier access, and though I wailed and sobbed at my humiliation, I enjoyed every second of it until the last gout was shot from my rectum. Sister Tera never stopped caressing my pussy, and the tape had become so damp that it was suffused to my flesh.\n\n\"Now, Sister, you are clean,\" Sister Tera whispered, in my ear, and kissed me, making me taste the decadence of my own filth. Her disciples left the wagon, and I lay exhausted in the damp cushions, now rank with my lust. Sister Tera gently undid the shackles of my wrists and ankles and guided me with hook and hand to grasp her about the waist. She took me into her sucking purple anus, and rode me into the late hours of the night, sating herself with the last droplets of my sin until she collapsed beside me, and bid me to leave.\n\nI had to crawl out of the wagon, for my legs had no strength in them. My cloak dragged on the sand, and I eventually discarded it completely. There was nothing to be ashamed of anymore; my sin was gone. I crawled to the front of the caravan, where Jade was waiting for me. She bowed her head as I crawled past her, and I blessed her. The sand was cool upon my flesh when I snuggled into it, and I sighed contentedly to feel its abrasion against my soft skin. I lit a protective orb around me, extending the fire so that it did not melt the bed of sand I made, and I let the tides of exhaustion take me to slumber. \n\nLate in the night, I awoke. At first, I thought I had become a victim of incontinence, but the water that pooled around me was not warm. It was cool and salty, yet the sea was hundreds of miles away. I smiled and looked up. Through my dome of flame, a pair of black and green eyes was staring at me from above a childish grin. I knew she would return. She stepped through the fire, and without a word, she dropped to the sand beside me and snuggled into my embrace. \n\nInterlude One: Wrath\n\nCORRUPTION \n\nI pushed my hand into the astral soil and fished around in the dirt. My hand came upon a stone, and I pulled it out. The rock was pleasurably coarse against my palm, and I enjoyed the rough grain of it as I took its measure. This was not a real rock, and yet, it was more than just the idea of one; it was the understanding of a rock. Wisdom would've had to create a thousand trees of knowledge just to capture the surface complexity of this thing, but I knew it intimately for all its wonderful simplicity. Petranumen had been an Earth Former\u2014the very first, actually\u2014and she was the sentient embodiment of rock. She understood it because she was it. I turned the rock over in my hand, and by my will, it took the shape of a lamb, then a panther, then a whale. I formed a rake from it, then a shovel, returned it to the form it was most comfortable in, and set it in my carrying pouch. I ran my hand through my black hair and looked out at the vast calm waters. The stone paths branched from the water to show me the scope of the work yet to be done, and the lone mountain pointed to the starlit sky above, seeming to signal the heavens to me. \n\n\"Wrath,\" I muttered. The sky rotated upon the axis of the mountain peak until a deep red star settled above it. All the stone paths sank back into the water, but one remained. I took a steeling breath and reassured myself of my omnipotence and my purpose. I stepped into the water. Diamond appeared in her center. She was already crouched in a sprinter's position. She shot from her stance like an arrow and made a beeline for the iron box. Xaya yawned from her perch on a cliffside, stretched like a basking lioness, then launched. She tackled Diamond in a cloud of dust, and Diamond's shriek of frustration sounded from the underbrush.\n\n\"Get out of my head!\" she screamed at me. \"I hate you! I hate you\u2014\" and her voice was cut off. \n\n\"I love you,\" I whispered back, and wiped a tear from my cheek. I turned back toward the reflecting pool and stepped through the threshold.\n\nI passed other realms on my way to Wrath. Justice's wall was built of limestone with trimmed hedges lining the balconies and alcoves. Confidence had built his walls with garish flowers that created daring works of art. Honor had built her wall with proud grey stone and had filled her ramparts with stoic oak trees that wound together in a knotwork of wood. Right next to Honor, was Wrath. It was the smallest realm I had seen thus far, but what it lacked in size, it made up for in sheer intimidation. The black iron walls stood a mile high, the towers barbed with jagged hooks that seemed to stab at the sky, the ramparts filed to points. Enormous ballistae lined the top of the wall, but from such a great distance, they could only be discerned by their black gleam in the astral sun. The shadow of the wall darkened me, and its blackness became complete behind the dim solar luminance. The gate was wrought iron and imposing, flanked by soldiers that stared down at me with enraged snarls. I touched the handle. A deep boom sounded in the distance. I closed my eyes, took a long deep breath, and I opened the gate. \n\nWrath's world was one of contrast. The shadows didn't form a gradient but were immediately black beyond the garish red luminance of the astral sun. The only color here was red, and everything else was a monochrome of that hue, moving from white to black. The landscape was of dramatic rolling hills, all of them festooned with black iron fortresses that seemed to be tossed haphazardly upon the earth, for they did not stand upright. Countless statues of warriors littered the hillsides, all of them engaged in a still and silent battle. I stepped inside. \n\nMy foot touched the soil, but it wasn't soil at all. It was empty and void of nutrients, and it sank beneath my foot with a dry crack. No life flowed from the soles of my feet. No Corruption grew to uncage this mind. I felt a creeping horror move up my spine. Even in the most barren desert, one could find an abundance of life just beneath the sand. Not here. This place was dead. The sterile monuments of battle that decorated the hillsides were an homage to something their creator did not understand, for their faces were waxy and expressionless, contorted into mockeries of rage. It wasn't just that this place was dead; this place had never been alive. This place did not know what life was. My hand shook against the gate, and I squeezed it as though to juice the terror through my sweat. I lifted my backfoot from the watery oasis outside and stepped wholly into the realm of Wrath. \n\nThe gate slammed shut. A drum sounded. The statues shifted at once and stared at me. The drum sounded again. Wrath stood before me. He was a hulking beast, his flesh black, his muscles bulging with too many bellies and veins to be anatomically correct. His teeth were filed to saber points, and his eyes glowed red and without irises above his leering grin. \n\n\"Hello, Holy Mother,\" he said with a deep voice.\n\n\"Hello, Wrath,\" I answered back. \n\nHe cocked his head, stretching the veins and tendons that seemed to connect his ears to his shoulders. \"I always knew the day would come when my creator returned to me.\" \n\n\"I am not your creator.\" \n\nHe grinned wolfishly. \"On the third day, The Holy Mother birthed Wrath. 'You will be my forge,' The Holy Mother said to him, 'you will be the rage that sharpens man to my purpose. You will be the divider of the strong and the weak. You will be the wind of war.' That is what it says in the book of books.\" \n\n\"The woman who gave you that lie is dead.\" \n\nWrath cocked his head to the other side. \"I know all who step foot in my domain. Whatever you think you are matters naught. I know the truth in you.\" He ran his eyes up my body and grinned. \"Those who visit me are always tied to the plane below this one. It is their safeguard against the brutality that I deal with such relish, for their minds can sustain the punishment if their bodies are intact. But you, Holy Mother, are wholly of the mind.\" He inhaled through his wide nostrils and blew out a gout of smoke. \"What a day this is. Today, I kill God. Ah, but where are my manners? I have a guest, and I have not offered her food, nor drink, nor bed! Forgive me, Holy Mother.\" \n\nI was in a dining hall. Great platters of succulent chicken, moist turkey, and heaps of steak were piled atop each other in a mountain of dead meat. Wrath tore through his fifth helping of food and looked fondly upon me from across the table. \n\n\"How did I\u2014\" \n\n\"Long have I wondered how the Holy Mother would do battle,\" Wrath interrupted. \"Tell me, are you a nimble little fighter like the Untethered One, or are you a slasher like her mother? Do you hoist the morning star like Sun Man, or do you wield a greatsword like me?\" \n\n\"I don't know what you're\u2014\" I was standing in an arena. The stands rose around me, the stone crowd cheering silently, their faces fixed in the manic fervor of the contest. Wrath stood on the other side of the arena, each of his footfalls causing dust to erupt from the sand. The scraping sound of his greatsword against the sand echoed through the arena until he whipped the enormous blade up with lightning speed, and it sang out a pure metallic note. \n\nI was encased in black leather armor, and holding a rapier. I'd never held a sword in my life, and nothing about it felt natural to me. Nothing about it was natural at all. Even through the torture of fire and hammer, I could still feel a connection with the rock in steel, but this sword was not steel. It was a poor idea of steel; the dull luster, the weight, the sharpness, but there was no substance, no understanding. I could do nothing with it. \n\nWrath let out a roar and thundered across the arena. His rippling thighs propelled him five yards a stride, and he rocketed toward me behind a cloud of dust, his red eyes narrowing hungrily. I screamed and jumped out of the way just as he brought down his sword. It crashed into the wall of the arena, splitting three of the audience members right down the middle. I rolled awkwardly out of my dive and sprinted away. Wrath came charging after me, bringing his sword overhead for another strike. He swung down, I shot to the left, and his blade nearly clipped my heel. I stumbled into the sand, and my sword shot from my grip and slid away. Wrath's footsteps were much less urgent now. His thundering footfalls sounded slowly behind me, echoing in the arena until his shadow was cast over me. I curled into a fetal ball and whimpered. \n\n\"What is this?\" he growled above me. \"Why do you blubber and weep like a babe? Are you not omnipotent? Are you not GOD?!\" \n\n\"No,\" I hissed. \n\n\"Get up!\" he roared and sent a kick to my ribs. I shot into the air, spinning like a ballerina before landing with a sickening crack onto my side. I spat blood into the sand, and Wrath paced back to the far wall, got into position, and charged me. I could only lie there and watch him through my blurred vision; a black shape thundering ever closer, kicking a great cloud of dust in his wake. His greatsword flashed above his head, and he reared back to deal the final blow. I grasped around me for something\u2014anything\u2014to defend myself with, but my sword was lying in the sand twenty yards away, and there was nothing else. My desperate fingers fished into my pouch and brushed something coarse. The rock. As Wrath towered over me to cut me in half, I pulled the rock from my pouch and thrust my hand toward him. A thin line formed between my fist and Wrath's eye. It was barely the width of a needle. Wrath stared at me for a second, then his halves peeled away from each other. His bisected brain tumbled from his skull, his collapsed lungs hung from his split chest cavity, his intestines unraveled from his cloven midsection and piled onto the sand. The halves of his face held their smile for a moment, then parted to rest in the puddle of red he'd formed beneath him.\n\nI stood up and groaned as I touched my ribs. I had been fortunate to only have three of them broken, but it would still take me a long time under Xaya's care to recover from this. I closed my eyes, and shuddered at the prospect. There were two other Sentients who I would have to kill, and both would be much more dangerous than Wrath. If killing him had caused me so much damage, then surely\u2014I was sitting in a hot tub. Wrath was across from me, enjoying a horn of ale and laughing boisterously. \n\n\"...and that act you put on!\" he hollered as though in the middle of a long story. \"What a tactic! I have faced warriors who feigned weakness before, but never one who would risk so much to do so! Bravo!\" \n\nI blinked at him. \"I killed you.\" \n\n\"INDEED YOU DID!\" he roared happily. \"Dissected me like a lab rat!\"\n\n\"Why aren't you dead?!\" I screamed. \n\nHe looked amusedly at me. \"Am I not?\" He took a deep swig of his ale and sighed. \"It was a good match, Holy Mother, but I will not let you get off so easily next time. I always learn from my errors.\" He held up my rock and examined it curiously. \"What weapon is this? I have not seen one of its like.\" \n\n\"It's a rock.\" \n\nHe snorted. \"It is much more than that.\" \n\n\"The weapon doesn't matter.\" \n\nWrath gave me an approving smile. \"Indeed, Holy Mother, it is the one who wields it,\" he said and handed me the rock. I took it from his massive hand, but his fingers caught mine before I could retract them. I looked into his horrid red gaze, and he leered at me. \"I believe it's time for bed.\" \n\nPart Two: Hello Again\n\nDIAMOND \n\nThe iron box was only ten feet away, but I could barely see it behind the entropic hedges of thorns and branches that walled my realm into nonsensical paths, turning it into a delirious maze. Xaya held my hand loosely and sang to herself. Her melody was a discordant nonsensical thing, and no lyrics gave any meaning to it. She switched keys without thinking, followed no scale or harmony, but it was beautiful nonetheless. It was a wild song, some upwelling of her soul that poured from her mouth and announced the current state of her heart. When she was amid an intense crescendo, I seized the opportunity to run away from her. \n\nShe snapped her arm and wrapped me once again in her embrace. Her lips found the hollow of my throat, her fingers found the thing between my legs, and I sighed. Xaya was a creature of instinct, and I was her prey. Once she'd sated the desires of hunting, more carnal instincts took hold. She rode me on the floor of our conjoined minds and filled the hunger within her. I hated how much I enjoyed it. When she was done, she pulled me to my feet, held my hand, and began singing as we strolled aimlessly through the jungle. Her grip loosened on my hand, and her keen eyes snuck to their corners and dared me to try and run again. I had tried five times already, and I was getting quite sore. I didn't fall for it this time. \n\n\"You know you're all alone right now,\" I muttered to her. \"You're just floating by yourself in Voda. All your followers left you. The ones that survived, anyway. The worst of them.\" \n\nXaya just smiled. Though she was without language, it was obvious she could understand me. \n\n\"Oh, you think it's funny?\" I mumbled. \"Countless people died because of me, and it's just a hoot.\" \n\nHer smile broadened. \n\nI sighed and nodded. \"I guess I thought it was funny too. That's what Corruption does to us.\" I wiped a tear from my eye. \"That's what I did to Mom.\"\n\nXaya pouted her lips mockingly. \n\n\"You're just a jerk, you know that?\" I growled. \n\nShe stuck her tongue out at me. \n\nI whipped my head away and scowled at the floor. She was trying to get a reaction out of me, but I wouldn't have it. I was done playing her games. As we walked hand-in-hand through our endless minds, I pondered how I could use this moment to my advantage. Corruption was gone longer than usual, and time always favored those with tenacity. I would find a way to gain control of myself and save me and Mom before we did something unforgivable. Well, it was far too late for that, but perhaps I could save everyone else. \n\nTERA \n\nI took a deep breath through my nose, and my eyes flashed open. My brain processed millions of different odors in a second, collecting them from a wide radius to alert my primal mind of predators and prey. As a succubus, I had very few predators and a great multitude of prey. In this horde, I only had one true predator, and I'd managed to tame her. Now there were two, and there was no taming the young lioness. Perhaps Julia needed someone to validate her insanity at every turn, but Diamond Gendian wholly embraced her madness. My time in this biblical exodus of morons was at an end. I snatched my bag from the wall, stuffed the treasure I'd collected within it, and opened my wagon door. \n\nI was greeted to pandemonium. Every orc was surging toward the front to catch a glimpse of the foretold messenger of God, the Enlightened One, the Water Dancer. Julia had hyped her daughter up so much that Diamond had become a messianic figure before even meeting her flock, and now the sheep rushed right for the wolf while the crafty fox ran the other way. I pulled on a cloak, obscured my features, and disappeared into the crowd. Moving against the current with expert steps, I sinuously flowed between the orcs, making my way toward the end of the vast mass of people where no one would ever look for me. I'd select a few stragglers to enslave, hijack a wagon, and ride for the coast. After buying my passage overseas, I'd find a band of cutthroats and begin my new career as a pirate; shit, I already had a hooked hand. I just had to maneuver my way through the endless stream of orcs and kill the stupid Breytan who dropped right in front of me. \n\n\"Where are you going, Good Sister?\" Aiko asked me with a grin full of venom. Five more Breytans dropped around me, their hands resting on their katanas. \"Sister Julia requests your presence immediately. Either you will come with us, or I will inform the good sister that you have denied her command, and are abandoning this holy journey like the heretic we all know you are.\"",
        "\"Abandoning? Me?!\" I scoffed. \"I have been blessed by the word of god! Who are you to call me a heretic, you snot-nosed little ant?! I've proven myself a hundred times over!\"\n\nAiko glanced down at my shaking hand, and her grin broadened. \"There is no need for a true believer to prove herself, Director Autumnsong. Have some faith in the Holy Mother.\" Her gaze fell upon my dagger, just a few inches away from my fingertips. \"Do it,\" she whispered. \n\n\"So that your buddies can stab me in the back?\" \n\n\"I will stab you in the belly first, Sister Autumnsong,\" Aiko hissed. \"Before you even have a chance to touch your weapon, I will empty your bowels into the sand. You are no Jade Tao, Death Kiss.\" \n\nI assessed my situation, subtly reached my hooked hand into my pocket, and selected the pin of a terracotta hand-bomb. I knew I hardly stood a chance against one Breytan, and I stood none at all against six. Perhaps this was the end. Perhaps it was time to close the book on this long and twisted life and bring six angels with me on my way to hell. But no... no, I would find a way to weasel my way out. I always did. I was Death Kiss. \n\nI sneered at Aiko. \"Fine then. Bring me to Julia. By tonight, I'll be warming my hands in the fire she makes of you!\" \n\nAiko just smiled her polite Breytan smile. \"I will sleep soundly to the song of your screams, Sister Autumnsong.\" \n\nThey made the wise decision of escorting me by foot, not taking chances on flying me lest I enslave my steed. The stream of orcs became a stagnant sea of bodies all pressed together, and the white-robed priestesses parted it just for me. The closer we got, the damper the sand beneath my feet became until I was sloshing through deep puddles of saltwater. We trudged through the muck for what felt like forever, and then emerged into a clearing. The orcs surrounded the bowl of a dune. In the center of the dune, Julia was weeping over the body of her daughter. For a moment, I felt a great upswelling of hope that the crazy bitch was dead, but that hope faded when I heard her slumbering snores. Julia looked up at me, black tears streaking from her black eyes. \n\n\"She won't wake up,\" Julia whimpered. \"She came to me in the night, but now...\" she trailed off, and looked down at her daughter's content face. \"...it's like she's in another world.\" \n\nI stepped past Aiko and the rest and walked down the bowl of the dune. Within my cloak, there were over two dozen odorless and vaporless poisons. I selected one that would induce a fatal cardiac arrhythmia, and deftly unscrewed the cap. I stopped ten paces from Julia and awaited her invitation to come forward. I didn't dare look at Jade Tao, but I could feel her eyes watching my every move. \n\n\"You are said to be an expert in medicine, Sister Tera,\" Julia said to me. \"If there is a reason for the Holy Mother's blessing upon your sinful soul, then it is this. Please heal my daughter.\" \n\nI kept my face as impassive as possible, though I was trembling on the inside. \"Good Sister, the Holy Mother brought me to help you cleanse your flock, not to\u2014\" \n\n\"DO NOT SPEAK TO ME OF THE HOLY MOTHER'S INTENTIONS, YOU SINNING WHORE!\" Julia screamed, and erupted into black flame. I was blown backward onto my ass, a shockwave pulsed through the crowd, and the vultures overhead were sent reeling off course. The fire melted the very sand beneath the Heat Bringer, but it did nothing to the slumbering god at her knees despite the lack of patterns on her flesh. \n\n\"You will heal my daughter before dawn,\" Julia hissed, \"or I will know that you have been nothing but an interloper in my flock, and I will BURN YOU ON THE CROSS FOR WEEKS BEFORE I SEND YOU TO HELL!\" \n\n\"Did I deny that I would?\" I squeaked, cowering before her. \"I was only confused as to my purpose in your holy movement! I was not made aware of the change!\" I groveled before her blackened sand. \"The Holy Mother does not speak to me as she speaks to you, Good Sister. Forgive my ignorance!\" \n\nJulia's flame quelled, but it did not die on her body. It wreathed her like a black aura as she stepped toward me. \"The Holy Mother does not speak to me, Sister Tera, but she tests me. She has tested me every moment of my journey upon the Maternal Path, and though I have been led astray, I have never failed.\" She knelt before me, her heat radiating threateningly from her. \"You have been led astray all your life, but now you have found yourself upon the Maternal Path. This is your test.\" She reached out and touched my brow. Hot agony seared into my brain, but I dared not move as Sister Julia drew the crescent upon me. I only could grit my teeth through the pain, and hiss out the scream I blocked behind my teeth. When she was done, she let her flame die. \n\n\"I pray that you pass this test, Sister Tera,\" she said softly. \"I pray that I have not been led astray this whole time by one of the devil's shepherds.\" \n\n\"You haven't!\" I hissed. \n\n\"We will see.\" She stood up and addressed her audience. \"Why have you stalled?\" she asked them. \"This holy journey waits for no one! Walk with me, brothers and sisters! We will reach Droktinar before nightfall!\" \n\nJulia turned around and walked away with Jade following closely behind. She parted the crowd, and with her posture stiff with resolve, she continued her journey toward the mountains. A cart pulled up, and Aiko reverently lifted Diamond into it, then looked up at me, and beckoned with the smallest smile for me to get in. \n\n\"You will ride behind Sister Julia so that she can always turn back to see you,\" Aiko said. \n\n\"I need my tools. Medicine, ingredients, syringes\u2014\" \n\n\"We can pull your wagon along behind you,\" Aiko interrupted. \"Just tell one of us what you need, and we will procure it for you.\" \n\n\"I need to\u2014\" \n\n\"The Good Sister does not want you to be distracted by the novelties in your wagon. You will ask one of us to get you something, you tell us where it is, and then we will procure it for you, Director Autumnsong.\" \n\nAiko tittered musically, then snapped her fingers, and a few muscle-bound orcs picked up the handles of my cart and wheeled me behind Sister Julia. Twenty Breytans flanked my sides, all of them watching my every move. I looked down at the comatose deity and whispered a prayer to the Holy fucking Mother. \n\nJUSTINA \n\nDuring my stay in Iona, I had much time to take in its beauty. The snowcapped peak shadowed the enclave, which sat upon the last pasture before grass could no longer grow. It was easy to become short of breath this high up, and indeed, many adventurers who had dared to scale Iona had perished on the way up, but this high pasture contained special grass planted by Ofan himself, and it released enough oxygen in the surrounding area to make it livable. I walked through the grass, my fur-lined boots padding softly in it, and I made my way to the lookout. The world opened up beneath me, the spine of the Gratoran Wall sloping down to connect with Breyta in the distance, the sheer drop of Droktin's Pass creating a dizzying perspective right to the ground below. Clouds blanketed much of the landscape, but from this, the highest of vantage points, I could see east and west for hundreds of miles. \n\nIt was like seeing two different worlds collide, and the result of their collision was this wall. On one side, lush rolling hills cascaded upon each other, becoming small mountains that clashed against the shear wall; on the other side, great dunes as tall as their foothill counterparts formed static waves that crashed upon the cliffside. When I turned around, I was always slightly disappointed. Iona was a place of legend, a place so remote and so hard to get to that it was almost a myth. When Astrid described it to me, she must've done so through the lens of nostalgia, for there was nothing of this enclave that bespoke much majesty. Stone houses with no doors littered the village area. Horses and cattle grazed on the pastures and slumbered in barns that were pressed against the mountain. The keep of Iona was a squat castle barely large enough to be a Drastin hotel, and it was decorated with crude runes and washed-out flags. The place was the embodiment of \"practical.\"\n\nI wrapped the fur coat around myself and made my daily promenade through the enclave. I smiled and greeted each woman that I walked by, and they gave me the respect I was owed. Some smiled back, some struggled not to spit on me, but most just accepted my presence without any obvious opinion and endured my praises of Brandon until I was politely told to go away. They'd made up their minds weeks ago. Despite the discouragement, I finished my duties and then departed to my quarters. There, I started a roaring fire and took off my stifling clothes. Once settled into my chair, I opened my notebook and ventured to my latest page of observation. \n\nThe Western Highland Squirrel (partium superiorum inamabilis sciuris) is a precocious creature. The female utilizes her bushy tail as a tool, a weapon, and an alluring bait for males. That was as far as I had gotten in my latest study, but I had a feeling I was going to get a little further today. I drew my eyes to the window, where a pile of peanuts was tantalizingly placed for any squirrel to see. I sat back in my chair and waited. Sure enough, the scratching sounds of a scampering rodent met my ears a few minutes later. I sniffed the air and confirmed by the tang of its scent, that it was indeed, a male. Being a scientist meant that no experiment was too bold, and no lengths too far in the pursuit of knowledge, but I wondered at my sanity when I felt a flutter of excitement in my chest and an accompanying flutter between my legs. I hadn't even transformed yet. I hopped onto the windowsill, got into a crouch, and morphed into a female squirrel right as the male topped the ledge. \n\nHe stared at me. I stared at him. He twitched his head questioningly. I twitched my tail lasciviously. He looked one way, then he looked the other, then he hopped onto the windowsill. At first, he was much more interested in the food than he was in me, which was just typical. He devoured peanuts until his belly was distended, then he tucked as many as he could into his cheeks until his face looked like it might split down the middle. After turning over each extra peanut to ensure he had gotten the best ones, he turned to me, his gut stuffed, his face puffed out, his teeth smeared with peanut gore, and he emoted a single blink which meant, \"wanna fuck?\" \n\nGod, he was so hot. All those nuts jammed in his mouth... that fat belly all stuffed with food... the hunks of peanut sticking from between his buck teeth! Hnnngh! Here was a man who could survive the harsh winter, and still provide extra. Here was a man who knew exactly which peanuts were the best ones. Here was a man who could fit\u2014not four, not five, but six whole peanuts into his cheeks. This was the apex of masculinity. This was the Adonis of rodents. I flicked my tail. \"Yes, please fuck me!\" \n\nHe ran off. \"Bitch, don't you see how many peanuts I can stuff in my face? You ain't worth this dick,\" emoted his flicking tail as he scurried from the windowsill. I sighed and slouched against the frame. He was right, of course. I wasn't worth that dick. I would have to settle for a lesser male, one who could not fit nearly as many peanuts in his mouth, but I would never be satisfied with such a beta compromise. The thought made me want to leap into the fire. It took me a full minute to get over my rejection, and it took another couple of seconds before I remembered that I was actually Justina Autumnsong and not a dejected female western highland squirrel. I transformed back into my normal body and walked over to my notebook to jot down my observations. \n\nNote: tail likely not bushy enough. Perhaps I should accentuate the pouches in my cheeks more. Create fat deposits around the thigh region to show fertility? Side note: which do male squirrels prioritize: thicker fur, or pronounced fat deposits? It is speculated that the harsh winter would make thicker fur more attractive, but perhaps the ability to endure longer hibernations would be more attractive. \n\n\"I just want some squirrel dick,\" I mumbled to myself.\n\n\"Should I pretend I didn't hear that?\" Helga asked from the window. \n\nI scowled at her. \"How is it that you always manage to sneak up on me?\" \n\n\"You always got your head stuck in one of your books.\" Helga hopped through the window and selected a few peanuts for herself. \"How's the novel going?\" \n\n\"It's not a novel; it's a firsthand account of the mating habits of Gratoran species,\" I said, shutting the book.\n\n\"Oh yeah?\" Helga mused in her thick nordic accent. \"What have you got so far?\" \n\n\"Field mice, chipmunks, gophers.\" \n\n\"Starting small? Why not become a great eagle or a mountain lioness?\" \n\n\"I tried,\" I smiled bashfully. \"Apparently, I don't make a very good eagle or lioness. No, it seems that my temperament is much better suited for prey animals.\" \n\n\"Yeah, that seems about right.\"\n\n\"Thanks.\" \n\n\"I didn't mean it as a compliment,\" Helga said, not understanding sarcasm at all. She sat down across from me and tossed peanuts into her mouth as she regarded me with her steely blue eyes. \"You know why I'm here.\" \n\n\"To pull your support for Brandon,\" I muttered. \n\nShe gave me an apologetic expression. \"I'm really sorry, Your Eminence.\" \n\n\"That's alright,\" I smiled thinly at her, \"my last relationship ended when a wolverine ate my partner mid-coitus. I can handle a little disappointment. What convinced you to change your loyalties?\" \n\n\"I'm a scout. I see the force amassing in the desert every day. I see the great black flames and the banners waving in the wind,\" she opened her hands helplessly to me. \"Something amazing is happening down there, and I want to be part of it. I don't care if Her Holiness carries a Sentient\u2014well I do, but I'm willing to... you know... risk it. I can't just sit up here.\" \n\nI nodded. \"I get it, Helga. Thank you so much for sticking with me for this long.\" \n\nShe nodded back. \"I'll help you pack.\" \n\n\"Is Nona kicking me out?\" \n\n\"Not officially, but it would be best if you left before she is officially instated.\" \n\n\"Yeah,\" I sighed, \"I know.\" \n\nI sorted my goods into files and sorted my files into my pack. After stuffing all the research that I could into ten canvas sacks, Helga and I carried the load between us to the cliffside. Thankfully, all of the Ionans were in the keep eating the morning's breakfast, and I didn't have to endure their glare while I made my walk of shame. I got to the cliffside and set all my bags into a pile. Helga helped me lash them together with a knot fit to be carried with my eagle talons, then she opened her arms for an awkward, yet heartfelt hug. \n\n\"I'm very glad we met,\" she said into my ear, careful not to touch my flesh. \n\n\"So am I,\" I said back, and pulled away from the embrace. \n\nSomething in my face must've given away something because Helga's eyes flickered with confusion. \"What?\" she asked. She turned around, and I grabbed her before she could scream. \n\nNative only to the northern Winged Mountains of the Tenvalian continent, the Great White Dragon (or Albus Draco Magnus to be technical) is the largest serpent of its kind, and indeed, is the largest flighted terrestrial predator yet recorded. Spanning some two hundred feet from wingtip to wingtip, and a hundred feet from snout to tail, it is the most feared skyborne predator in the world, though there have only been ten documented sightings of them. There were fifty-six of them headed right for us.\n\nANGELA \n\n\"Don't you think this is a little excessive?!\" Justina yelled so far below me. \n\n\"No,\" I said as quietly as I could, and the force of my voice shattered the glass of every window in the Ionan keep. Justina's Life Giver-modified body quickly recovered from the shockwave I'd uttered, but poor Helga was blown right onto her back, blood pooling from her ruptured eardrums. Such was the life of being a great dragon. We'd had to glide into Iona from a half-mile away because the force of our flapping wings would've leveled their enclave. It was fortunate that all the shape-shifters present had extensive flying experience, or a few of us might've crashed right into the mountainside. Now, our behemoth bodies rested upon the cliffs with such mass that it was like we were part of the rock itself, and our necks towered five stories above the pasture, carrying great angular heads wreathed in majestic spinal crowns, and bearing eyes so blue they looked like the depths of the ocean. \n\nAfter a few seconds of thundering echoes, the moon doors of the Ionan keep flung open, and the two-thousand winged warriors poured out. For the first time in my life, I saw the fabled fighters of Iona stumble. When their steely blue eyes realized the great enormity of the beasts that surrounded their enclave, they balked. They smacked into each other, flailed awkwardly in the air, and steered wildly to avoid colliding into one of the mythical apex predators that stared down at them. Bianca made a point of looming over the keep so that her steady breaths created tornadoes of convection through the ranks of winged warriors, sending them spinning. They quickly reoriented themselves, aligned into an admirable formation given their dire circumstances, and waited behind a wall of shields and spears. \n\n\"Let me do the talking,\" Brandon said on my back. \n\nBRANDON \n\nAfter a long and undignified climb down Angela's spiny back, I dusted myself off and marched toward the keep. The Ofanians had created a dome of their joined wings above Iona, enclosing the entire enclave in a membranous shield that filtered in the soft morning light. The tactic had the intended effect on the Ionans. I could see fear in their eyes now that they realized that the sky\u2014the plane they had dominated for so long\u2014was filled with hostile snarling maws and teeth longer than their bodies. \n\n\"I didn't want to do this!\" I yelled up at the formation of valkyries. \"I wanted us all to work together. I still want us to work together.\" \n\n\"This is an act of war!\" Nona screamed. \n\n\"This is an ultimatum.\" \n\nGood line. \n\nThanks sis. \n\n\"We will not bow to the Ofanians!\" Nona screamed again. \n\n\"Did I ever ask you to?\" I yelled back. \"All I asked for was your cooperation against a common threat. Now I'm not asking. The Ionan Guard will bow to me.\"\n\n\"Or?!\" \n\nI shrugged. \"Or I'll take the elderly, young, and sick with me, and then I'll let the Ionan and Ofanian Guard hash out their differences.\" \n\nBianca snorted blue flame from her immense nostrils. \n\n\"When we last met, you told me that I had failed to make the difficult choice, and so it was your responsibility to do it for me,\" I said to Nona. \"Well, now's the time, High Guard. What's your choice?\" \n\n\"Do you think we fear death, Your Holiness? We train our whole lives for it!\" \n\n\"I know,\" I said, \"but your deaths won't even be a footnote in history, Nona Cloudwhisper. Cataclysmic events are unfolding, and they will shape stories that will be spoken of for all time. Will Iona's story be but a page in Ofan's epic?\"\n\n\"It will be Ofan's tragedy when the Heat Bringer comes!\" \n\n\"And you will be forgotten either way.\" \n\nNona's face twisted in rage, but she had no retort. Though the valkyries of Iona stared ahead with steely stares, I could sense the fading of their resolve. Angela had been right, of course. Valkyries didn't respond to humility, modesty, and subtlety. They were the servants of gods, and for the dedication of their entire species, they were owed something spectacular. Sensing the fight leave her Guard, Nona lowered her spear and dropped her shield. She flapped away from the formation and descended to me beneath the watchful eyes of the fifty-six dragons. She loomed over me, her scowl darkening her lined face. ",
        "\"I will never bow to an Ofanian,\" she growled. \n\n\"I will never ask you to.\" \n\nShe narrowed her steely eyes at me. \"We will stay in Iona.\" \n\n\"You will do whatever the hell I say,\" I growled. \"Now get on your knees before your god.\" \n\nThe lines on her face relaxed somewhat, and something akin to a smile stretched across her lips. She bowed her head, dropped to her knees, and prostrated before me. The rest of the Ionan Guard fluttered from the top of their keep, and one by one, they folded their white wings, descended to their knees, and put their brows to the grass. \n\n\"Holy Life Giver, god of flora and fauna; we are not worthy,\" Nona said, and then the rest chanted along in time with her. \"As winged-warriors of Iona, it is our sworn duty to serve you. We have oaths that we must speak to you and hope that you accept them. We are your sword, we are your shield, we are your armor. We are your watchers in the night, we are your wings in the morning, we are your eyes, ears, and mouth when you are not present to see, speak and hear. We will live for you, we will die for you, we will celebrate with you, and we will suffer with you. Your glory is our glory, your triumphs are our triumphs, and your life is our purpose. With these words, we pledge ourselves wholly to you. We will guide you in the ways of Iona, but we will never disobey you. We will show you the paths of righteousness, but we will not falter to enact your will. We will teach you the lessons learned by countless generations, but we will always heed the wisdom of your words. You are our light, you are our salvation, and you are our destiny in this life, and for countless lives to come. Oh Holy Life Giver, will you please accept these oaths?\" \n\nI touched Nona on the brow, and she raised her gaze to mine. \n\n\"I accept these oaths,\" I said softly. \n\nASTRID \n\nIona was empty. The fires in the hearths had been doused, the lanterns were all extinguished, and the food was all gone. The nursery was empty, the field house was barren, and the keep was desolate. The bells were silent, the bandstand was void of music, and the nightly woodcutters weren't there to add their percussive undertones to the evening song. The only sound left in my beloved home was the persistent winds buffeting against the high mountain walls. \n\n\"Where did they go?\" Willowbud whispered. \n\nI looked out at the Gratoran Desert. In the distance, we could see the lights of thousands upon thousands of fires glinting in the coming dusk. Some of the fires were black and seemed to absorb the light around them. \"Where else?\" I whispered. \n\n\"Shit,\" Willowbud muttered. \n\n\"They didn't have a choice. They have to serve,\" I wiped a tear away from my cheek. \"We were only hours too late. The lanterns were still warm.\" \n\n\"I'm sorry.\" \n\nI blinked up at the pointed peak of my mountain, and it blurred in my eyes. \"It is every Ionans dream to be the one who brings the Earth Former home. Do not be sorry for this moment, Willowbud.\" My lips trembled horribly, and I hissed, \"It is a dream come true.\" I collapsed into the grass and wept into my hands. Willowbud wrapped me in her arms and gave me a chest to shed my grief into. \n\nI didn't want to stay another second there, but we had nowhere else to go. Gloria had risked traveling in the sunlight, and at such altitudes, it was doubly risky for her. She needed the night to replenish herself, and hunt without the sweltering cloak she kept on to conceal her flesh. As for me, I didn't feel much like eating. My newly-heightened sense of smell carried the familiar scents of Iona into my mind and played cruelly with my memories. I'd won my first wrestling match in that ring. I was seven, and Mother had pitted me against a twelve-year-old, a big redheaded bruiser named 'Helga Sunscraper.' She was no match for me. I outmaneuvered her at every turn, used her own momentum against her, and tossed her clear out of the ring. Helga hated me after that; in fact, most of the other girls hated me. Mother always told me that was how I would know I was the best. My childhood was a peerless one, and my adolescence was one of fervent competition. I never lost a match; not in wrestling, nor archery, nor dueling, nor racing. I was simply the best. Eventually, toward the latter end of my teens, those who once hated me learned to respect me, but they never learned to like me. Perhaps if I'd had but one true friend, then I wouldn't have done what I did. \n\nI turned my gaze to the dueling ring. It wasn't even three months ago that Mother had berated me for fighting too fiercely against my sparring partner. I remembered vividly how it had enraged me. This was the woman who had always pushed me to be the best, and she dared tell me to hold myself back?! Without thinking, I challenged my mother right then and there. I knew the moment the words had come from my mouth, that I had made a horrible mistake. Each warrior was only allowed one challenge in their lifetime, and Mother was the greatest warrior in the world. I still had so much to learn, but it was too late, and the look of disappointment in Mother's eyes weighed heavy upon me even as she accepted my challenge. \n\nIt was right there. She was fast, but I was faster. I was skilled, but she was better. We dueled before the entire enclave from sunup to sundown, our sweat dripping from every pore, our bodies so fatigued that we could barely lift our swords. In the end, it was dumb luck that ended the match. One of the onlooking children had been stacking stones in her boredom. The stack fell over, spilled into the ring, and Mother slipped upon one. I struck the sword from her hand, and that was that; I had won. In my moment of glory, perhaps I had been too boasting\u2014no, I had absolutely been too boasting. I lorded my victory over my mother with a grin on my face, and for the first time in a thousand years, a loser issued an objection. There was a hearing, there was a panel of judges, and it was decided that I had rightfully won the Sword of Iona, but not the seat of High Guard. The next day, I left. The next month, I killed her.\n\n\"There are some places you can never go back to,\" I whispered to Willowbud. \"I left myself behind here. That girl is just a ghost in this place of ghosts.\" \n\n\"Seems like all we leave behind are ghosts,\" she whispered back. \"We killed our mothers; we can never go back home.\" \n\n\"I killed my mother, Willowbud. Corruption killed yours.\" \n\n\"No,\" she smiled ruefully at me, and a tear rolled down her cheek. \"It feels like freedom to blame everything on Corruption, but that's how she enslaved me. The only way to take off the shackles is to carry the load.\" \n\nI looked back at the desert, at the points of black flame. \"You told me Julia was stronger than you. How many times did she cast out Corruption when you kissed it into her?\" \n\n\"Five times.\" \n\n\"She can do it again.\" \n\nWillowbud shook her head. \"The woman out there isn't Julia Gendian. She's the Flame of God.\" \n\n\"You were Night Eyes; you came back twice.\" \n\n\"My mother and father are all it cost. Julia's parents are dead, her daughter is corrupted, and I killed the only person who could've saved her. Maybe Diamond could've done it. I don't know.\" She chewed on her lip and looked out at the desert. \"She saved me, and in return, I destroyed her. I saw it in her eyes when I killed Lucilla. If all it costs the world to save Julia is my life, I'd do it, but there's nothing to save.\" \n\nI nodded soberly. \"She was a good woman.\" \n\n\"That's why she's so evil.\" \n\n\"What do we do now, Willowbud?\" \n\nShe snuggled into my arms. \"Get some sleep.\" \n\nWILLOWBUD \n\nI woke up and sighed contentedly. There was no better way to wake up than between the robust pillowing tits of a raven-haired beauty. Astrid was already awake, as the half-vampire hardly needed sleep, and so a raise of my gaze greeted me to two sapphire irises with slit pupils. Those pupils shrank to normal circles as the sun crested over the eastern horizon, and cast dazzling sparkles in her eyes. \n\n\"Do you put me in this position every night, or do I roll into it?\" I asked, collecting my spittle from her pert moist nipple. Apparently, I'd been suckling again. \n\n\"I guide you into it; you do the rest,\" Astrid whispered. \"Even when you were Night Eyes, you used to suck your thumb when you slept.\" \n\n\"I wish you hadn't told me that.\" \n\n\"I don't mind,\" Astrid beamed down at me. \"I actually love it.\" \n\n\"You're not supposed to encourage this kind of behavior in a well-adjusted adult.\" \n\n\"You spent your entire time as Night Eyes enabling my worst vices,\" Astrid stuck her tongue out. \"Fair's fair.\" \n\n\"Who's enabling who? Even when you'd lost your goddamn mind, you were still trying to mother me.\"\n\n\"You're just such a cute little baby.\" \n\n\"You're such a crazy bitch.\" \n\nAstrid smacked me hard across my ass and cackled when I yelped. \"You will not talk to me like that anymore, Willowbud Autumnsong!\" \n\n\"Ow, fuck!\" \n\n\"No cursing at me!\" she giggled and smacked me across the other cheek. \n\n\"Goddamn crazy fucking...\" I tried to roll out of her hold, but her strength was astounding. She flipped me over, laid me across her lap, and delivered smack after smack across my little bronze ass. She hit me rhythmically, each strike stinging and numbing, sending tingles deep into my nethers, the cadence putting me into a trance until I was humming out a moan that was punctuated by her staccato slaps of flesh. My bronze cheeks became ruby and shiny. My cock swelled between her thighs. \n\n\"Huh,\" Astrid mused, patting my buttocks, \"you've suddenly gone very quiet. Did you learn your lesson?\"\n\nI looked up at her from over my shoulder and sneered. \"Fuck you.\" \n\n\"You're being a very bad girl.\"\n\n\"What are you gonna do about it?\" \n\nShe wound one hand in my hair and yanked it until my neck was craning. She didn't pull to the point of pain, but to that exquisite mark just short of it. Her face loomed over mine, curious and mischievous, and she studied my features with a little bit too much of her vampiric hunger. \n\n\"Willowbud, this is a very strange place for me to be with you,\" she said softly. \"I'm not the huntress anymore.\"\n\n\"I can be a good girl,\" I whispered back, biting my lip needfully. \n\n\"I know,\" she muttered, stroking my back, raking my spine pleasantly with her long nails, \"I watched Julia defeat you. I watched those men take you. It scared me to see you like that.\" She settled her soft gaze upon me. \"It excited me too.\" \n\n\"You'll be gentle?\" \n\n\"So gentle,\" she whispered, sliding her hand down the small of my back, pressing fingers into my crack, moving through my delicate pelvic floor until her fingertips rested against my puckered anus. She stared into my eyes. I stared into hers. I pushed against her with my anal muscles, and she accepted my invitation and pushed inside me. \n\n\"Oh my god!\" I gasped, my neck straining with tension as I savored the surrendering violation. She was infinitely tender, moving torpidly and purposefully through my tight sheath, finding my prostate with practiced ease and massaging with firm, passionate presses. I moaned and mewled for her, and her eyes danced with excitement, her plush lips opening to reveal her long sharp fangs. \n\n\"Can I have a taste?\" she hissed. \n\n\"You're not supposed to ask when you're a domme,\" I snickered up at her.\n\nShe grinned. \"Then I shall take what I want from you, Pet.\" \n\nCarefully, she unknitted her fingers from my hair, wrapped an arm around my chest, and turned me over until I was seated in her lap, my cheeks spreading between her thighs so that her seeking fingers could go deeper, my cock curving backward with engorgement. Her breath was on my throat, and I pulled back my hair and bowed my neck to give her full access to the artery. I didn't feel the pain of her bite; only the entrance of her fangs into my flesh, the puncture of the wound, and the intimate pleasure of being fed from. She sensually sucked from my throat as she painted circles into my rectum, and my hips rotated pathetically with her puppeteer's wrist, moans and cries emanating from my pitiful mouth. \n\nBefore I could reach the precipice, she extracted her fingers from my hole and drew both her hands up my body. Her fingertips trailed along my belly on the way to my breasts, then cupped and squeezed my modest chest until I was moaning for her. Her breath quickened against my ear, and she slid her hands up my chest, up my collar, and for a moment, she dared to clasp them around my throat. \n\n\"You can choke me,\" I whispered. \"I trust you.\" \n\nShe squeezed gently, and tingling electricity went through my body, rousing my desire once more. I gyrated against her, choking weakly around her gentle strangulation as my cock bobbed and throbbed between my quivering legs, then ejaculated violently without any stimulation. My back arched, and I croaked to the sky with my eyes rolled back. \n\n\"Become female for me,\" Astrid hissed into my ear. I didn't question her. I changed my gender, and let Astrid's free hand wander down my breasts, slide down my belly, and slip through my hairless pubic mound. \n\n\"I've never touched this side of you,\" she whispered heatedly, flattening my petals with her fingers as they ventured further down my blushing sex, \"but I learned much from Tera and Justina. Let me show you what they taught me.\" \n\nShe pushed her fingers inside me, passing each wonderful knuckle through my gripping slit, stretching me gradually open, spreading a euphoric lassitude deep into my nethers that compelled me to unclench, to let her inside me, to let her do as she pleased. My feet pressed into the grass, my legs spread out wide, and my slender thighs made a bridge of my body above her molesting hands, opening myself to give her everything. She touched her two hands through the membrane of my channels, drawing a felicitous line, forcing my back to deepen its arch so that I could tilt my pelvis forward. My head rested helplessly upon her breasts, and my mouth expired pitiful whimpers and moans as my hips moved by her compulsion. Slowly and meticulously, she violated me to perfection, her fingers becoming slick and webbed with my secreting nectar, pushing deeper and deeper into me, touching that spot in my center that made my legs quiver. My head fell back, and she took my supplicant kiss into her mouth, drinking of my pleasure as her fingers compelled me into a sobbing orgasm. \n\n\"Thank you,\" she whispered upon my lips when we parted. \n\n\"You did all the work, and I got all the fun; what the hell do you have to thank me for?\" I laughed against her mouth, gazing into those beautiful blue eyes. \n\n\"All the fun?\" she asked. \"Your pleasure was my pleasure. I came without even being touched.\" She blushed and tucked her chin insecurely. \"Even when you give me control, you have such power over me. I'm sorry.\" \n\nI touched our noses and brows and smiled into her predatory eyes. \"Dommes don't apologize, Astrid.\" \n\nShe smiled back and stroked my face. \"My pet likes to play such ponderous games, yes she does.\" \n\nUnfortunately, Gloria came back from her night of hunting, and she brought the worries of the world with her. The three of us sat in the shade of Iona and ruminated on how to proceed. \n\n\"Losing the Ionan Guard is a setback\u2014a huge setback\u2014but it's not the end,\" Gloria muttered and pulled a squirrel out of one of the metal traps I'd made for her. She casually snapped the rodent's neck and tossed Astrid the carcass. \n\n\"It's not like we had much of a plan anyway,\" I said. \"Just... go to Iona, and see what happens.\" \n\n\"You can't fight two gods on your own,\" Gloria looked gravely at me and pulled a fox out of a trap. \"Especially not two that are bound to each other.\" \n\nI frowned, recalling the vision I had in the astral plane. \"Why doesn't Diamond have Julia's patterns if they're bound to each other?\" \n\n\"I've been thinking about that myself.\" Gloria puzzled over the thought as she snapped the fox's neck. \"Binding is a mutual act of love, so in theory, they should carry each other's mark. I don't know. Something happened when Diamond went behind Corruption's door. Tera and Angela discovered so much, and learned so little.\" She stuck her fangs into the fox's throat and sucked until the poor beast was but a furry bag of bones. \n\n\"Why are Julia's patterns black?\" \n\nGloria shrugged. \"Corruption was trying to get you to bind to Brandon. Maybe if you had succeeded, the patterns he put on you would have been black.\" \n\n\"Can a Sentient be bound?\" \n\n\"Sentients have no souls; believe me.\" Gloria opened the last trap, where the fattest muskrat I'd ever seen was woefully stuffed between the bars of the contraption. \"What you saw in the astral plane was created by your mind. I'm fairly certain the real Corruption would've recognized you after the two of you had such a jolly long time together.\" \n\n\"I suppose.\" \n\n\"Besides that, Corruption doesn't matter anymore,\" Gloria said as she tried to shake the stuffed beast out. \"Right now we've got two gods we have to kill, one of which is a complete mystery to us, the other of which thinks she's preordained by god to burn everyone alive. So, if we could just...\" with a mighty tug, Gloria ripped the squealing muskrat out, \"...keep our eye on the proverbial ball here, and not get distracted with stupid fantasies like Tera and Justina did, then maybe we have a chance.\" \n\n\"We have more than a chance,\" Astrid beamed down at me, \"it is an absolute certainty. It is destiny.\" \n\n\"It's at least fifty-fifty,\" I smiled up at her, wishing that I could delude myself into believing I had any chance at all. \n\n\"We still have the element of surprise,\" Gloria said, wringing the muskrat's neck, \"In my experience, that is the greatest advantage you can\u2014\" The muskrat turned into my cousin. \n\nGloria screamed and leapt about seven feet in the air, Astrid brandished her sword, and I just blinked stupidly. Justina rubbed her neck, then winced when she lifted her arm. There was a massive contusion on her ribs from where my metal bars had been pressing against her. \n\n\"Fuck,\" she mumbled, \"two of them broken. Good thing I didn't try something bigger, or I would've been nothing but splattered goo between the bars. When I felt my rib crack, I knew who must've made the trap.\" She gritted her teeth, and her rib snapped back into place. The contusion drained back into her body, and she let out a sigh of palpable relief. \"Fuck, that was uncomfortable. Hey, did any of you see...\" she trailed off when she saw the squirrel carcass between Astrid's feet, and let out another sigh, this one full of melancholy, \"... of course. All of my romantic ventures end in heartbreak.\" She picked the animal up and snuggled it against her breast. \"Goodbye, Mister Peanut,\" she whispered, and a tear ran down her cheek. \n\nAstrid elbowed me, and whispered from the corner of her mouth, \"Willowbud, I believe I've just lost my mind.\" \n\n\"Nope,\" I muttered, \"I'm seeing it too.\" \n\nJUSTINA \n\nAngela and Brandon, get your asses over here right the fuck now! I broadcasted from my mind as I stared fixedly at the point on the horizon where Ofan was. Gloria Titus had extracted herself from the wall she'd climbed up in her fright, and was flanking me on the side. I didn't care. I was much more interested in the woman across from me. Astrid's hair was black, her wings were that of a raven, her incisors had become fangs, and her pupils transitioned from slits to circles as the sun's rays flickered between the conifer tree behind us. Her body was as beautiful and athletic as it had always been, but now it was decorated with intricate glowing markings shaped like geology. \n\n\"Jade has your sword,\" I said after we were done staring at each other. \n\nAstrid nodded. \"I have read the papers. I was so saddened to hear what happened to your mom.\" "
    ],
    "authorname": "White_Walls",
    "tags": [
        "elf",
        "bdsm",
        "orgy",
        "gangbang",
        "futanari",
        "valkyrie",
        "nymph",
        "anal",
        "vampire",
        "shape-shifter"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-creators-ch-16"
}