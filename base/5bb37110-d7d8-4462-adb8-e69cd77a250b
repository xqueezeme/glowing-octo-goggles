{
    "title": "Bifrost",
    "pages": [
        "All rights reserved. No portion of this book may be reproduced in any form without permission from the publisher, except as permitted by U.S. copyright law. For permissions contact author through profile.\n\n*****\n\nAztrit let the cape hanging off of her armour flow behind her as she stepped over muddied bodies soaking in their own blood. As the rain came down harder on to their blue flesh, she said a prayer to the Gods, \"Freyja let them join you in your afterlife to rest. Let my chosen, Odin, serve faithfully in Valhalla to await Ragnarok.\" She pulled longswords and arrows from their bodies as she prayed and blessed their bodies. When they were no longer defiled, she lifted her hands above the field and set the bodies aflame. The eternal flames didn't waver from the water falling from the sky. She had done this ever since the creation of slaughter. When men discovered the gruesome sport of merciless murder, they took to open fields, crowded cities, any place they could to utilize death as a strategy of negotiation. She pitied those left behind as their family burned, only to serve forcefully for the Gods' armies when it was time for this world to come to an end. Good men that had only dreamed of returning to safety. She was torn. As a Valkyrie, she knew death was not personal. Battle was honorable and necessary, but a part of her that she rarely cared to listen to, pitied those who took pleasure in it.\n\nA bright light descended in front of her, shining so intensely that she felt it force her pupils to dilate. It formed itself into a ball and levitated closer to her face. She reached out and touched its top, causing it to speak to her, \"Odin's request.\" It repeated over and over until she grasped it in her palm. Light engulfed her and she began to feel wind whipping harshly around her. Unafraid, she waited for the feeling to pass and opened her eyes. The porcelain throne room that now stood before her was more welcoming than the bloody gray field she had just left. The silver torches lining the walls shone as the blue flames in them danced in their holsters. Portraits of her family, decorated the ceilings and walls made entirely out of shining graphite. She didn't have a portrait of her own, and none of the subjects in those pictures looked like her. Her complexion was far from alabaster, like theirs. Like her fathers. She had never known her mother, but it was not off putting to assume she had skin just like Aztrit's. Smooth and brown with deep red undertones. \n\nShe removed her gold embroidered helmet and let her thick straight black her fall down her back. She held the metal to her hip as light swirled around the empty silver lined throne. She bowed as she saw Odin's body materializing. His scraggly blonde beard hung to his belly and his dark green armour rattled against the throne as he sat in it. He looked happy, just as he usually did when she come from collecting troops from their resting places. His laugh boomed as he got up just as quickly as he had sat and moved forward to embrace her. His white teeth and blue eyes shone as he called to her. \n\n\"Aztrit!\" His arms wrapped around her and lifted her off of the ground. Even in his humanoid form he towered over her. But most pure gods did. \"What a wondrous battle. The warriors are very talented from this day. I'm very pleased.\" \n\n\"I'm pleased you're pleased father, but I'm positive you have summoned me for something else.\" She patted him on the back as he put her down. His blonde eyebrows furrowed and nodded in agreement to her statement. His gold cape swept the floor as he retreated back to his throne.\n\n\"Firstly, I am glad you could pick the warriors at Haverslhab. This battle was very important to me. And as the lead of the Valkyrie, I could entrust this to no one but you, my daughter. I am continuously pleased with how strong you have become.\" He reclined and motioned for her to come closer. He took her hand in his and looked into her whiskey eyes. Her mother had the same. But Aztrit's lacked the innocence that her mothers had glowed with. A fact he was happy for. She had trained and fought valiantly over the centuries, building his repertoire and her own resilience. She was still young by immortal standards, but her ferocity was unmatched. She followed orders with no qualms and protected Asgard like he had seen no other do. She was different from his other children, and had he not have had sons, he would undoubtedly make her ruler when he left this world.\n\nShe squeezed his hand back and knelt by his feet. \"I am honored.\" Her father always had kind things to say to her. Odin was always willing to aid and shower her as she requested in return for her fealty. She had never questioned him. But something was amiss. He was usually more direct with her summonings. Never wanting to miss an event that could turn the tides of their standing before Ragnarok, when they would eventually use the souls they've placed in Valhalla to fight for the continuation of their society. \"What is it you really need father?\"\n\n\"There is a matter that I wish to ask of you. Something different then your typical tasks. A lord was at Haverslhab. He was not fated to die today, or ever, on the field. He is fated to live to old age and die naturally. But his efforts today were unmatched. He was more glorious than I have seen in quite some time. I want him for our army.\" He said easily, not expecting her to look so horrified.\n\nShe pulled her hand away and stood. \"If he is not fated, I would have to kill him personally. His death will not be honorable. Such a warrior will have earned a long life. Those I pick on the field are strength enough.\" It was unthinkable to take a life just for the purpose of coveting it. True, she did choose fierce warriors on the field, but she only took them if they were bested. A man who was never beaten did not deserve to be ill fated.\n\nOdin stood along with her and continued, \"Try not to be so unforgiving. We have prepared for eons. His life will help us in in our time of need, and there is no greater honor than that of serving Valhalla. Just as you fight, so must others.\" \n\n\"But he is not fated. You said this. Who am I to steal his life from him? We take who is offered, it would be unjust to take who is not. Their souls would be tainted, unloyal, wavering. Why would you wish for someone who may not fight for you?\" How could he ask her this? To be so deceptive to the fates and to take greedily? This was not inline with what her father valued. But she grew quiet as she thought about it. If he was asking her, he might have his own reasons. It was not her place to question what he asked, only to do what he wanted. \"What would you have me do?\" \n\nOdin laughed again with pleasure, \"That's my girl! Kirk Verdulke. Lord of Grothen. His lands are central in Karth. However, He is preparing for a war with The Elicit west of his lands. I do not want him until he has finished this. He will grow stronger because of the massacre and I want him at his peak. Live among them as a healer and continue to send soldiers from the battles.\" \n\nShe nodded in agreeance. \"And what of the fates? If he was destined for something greater, they'll surely intervene.\" \n\n\"This, you will not be worried about. Your brothers will take care of it. You just bring me my treasure.\" He smiled broadly as he began to dematerialize. With the gust of wind and light, he was gone. \n\n***** \n\nThe sun was bright in Karth. The human countryside was always beautiful. The people were diverse and flourished from trade with the dwarves and elves. Here at the marketplace in Grothen, the people bartered over fruits and farm animals, trading gold and silver for their purchases. She was always grateful to walk among them. In Asgard she was different, in Karth she looked just as a quarter of the people did. Most were anglo-saxon, but the people were balanced and peaceful. Humans of dark, light, and medium skin spoke amiably. When elves and dwarves were among them, peace still reigned. After the banishing of The Elicit to Froit, the kingdom to the west, prosperity became contagious. Clans of all origins still fought, but never again continent wide suffering. \n\nShe had long since changed from her Valkyrie Armour. She adorned traditional Grothen attire. Her dress was cream. The side was laced intricately like a corset from her hip to the crook of her arm. The slit in the side showcased one of her smooth sable legs and the gold bangles on both her arms matched the thick gold plate necklace hanging from her graceful neck. The dress hung closely to her curvy body, displaying her large hips, her slim waist, and her large bust. She was thankful she was no longer wearing the heavy armour. \n\nAztrit was greeted copiously by vendors offering her spices and perfumes. But she was uninterested, she still had to do what would disgust her. Others in the marketplace looked mournful as she came closer to the large stone castle at the end of the long row of carts. Children clung to their crying mothers and others spoke quietly to each other in comfort. She reached the heavy wooden double doors and pushed them open. The hall was filled with warriors laying on cots and tables. Most were bloody and bruised. Others coughed and gasped for air. The smell of their combined blood was unbearable and concentrated in the large hall. She looked at the table closest to her. A man was hanging haphazardly on the bench, seeming to be choking on his own blood. His eyes were wide from fear and his beard was matted from his fluids. This was the part of war which she hated. The suffering. The inevitable repercussions that came from facing your enemies with blades. \n\nShe glanced around the fire lit stone hall, seeing no one, she began praying over the bodies. She prayed to Frigg for their healing and safe keeping. As soon as she began the hall seemed to move and sway with her words. Healing was moderately new to her. Space around her would contort making it difficult for her to breathe as she healed. To do so on such a mass skill was also new to her, but it was a power she wanted to implement as much as possible. The tables shook as she choked on her words until she was no longer able to speak. She could heal without praying, but giving grace to the Gods for her gifts was always a priority for her. \n\nShe gasped for air as she finished. Thanking Frigg again she closed her eyes and took deep breaths. She suddenly sensed she was being watched. As soon as she turned her head to the right, an axe came flying from behind a pillar towards her head. Her gold shield materialized on her arm and blocked it. Her attacker wasted no time continuing to swing heavy blows at her that she blocked with her shield. She jumped back through the tables to put space between her and her assailant to look at who challenged her. He was tall. Staggeringly so. Taller than her human and Valkyrie form. His dark hair hung around his ears, and his silver eyes glared at her beneath a heavy scar marking his face from his temple to the top of his lip. His beard was well formed around his face and neck. He still wore his black armour as his chest rose and fell heavily. His shoulders were broad and his chest expansive. She could tell he was well muscled underneath his beaten armour. What interested her the most was that his blows had actually been heavy to her. She had barely deflected the axe before he had moved in again. If this wasn't the warrior her father wanted, she would be tempted to take him if he ever fell. \n\n\"Kirk Verdulke?\" She questioned lowering her shield. He ignored her and advanced again. She could have stopped him. But after witnessing his technique she was intrigued. She held her hand to the sky and with a flash of light summoned Hurink, her beloved onyx blade trimmed with gold. Her display did not cause him to waver he only continued and swung outwardly as she blocked him again. He swung with his long sword while she blocked and swiped Hurink down his chest as she stepped to the side. She had only cut his armour off to spur him on. She wanted to continue. It did anger him. She dodged his parries as he dealt them skilfully. If she wasnt Valkyrie, she might have died by his hand. But she sensed the warriors laying in the hall would begin to wake soon. So she cut to the chase. This time when he circled her and advanced she cut his bicep in one swoop. He fell to his knees in front of her as she held Hurink to his throat. He dropped his sword in defeat as he bled profusely. \n\nShe bent down to his face at her midsection and put her weapons away. She took his face in both her hands and looked deeply into his eyes. He was dying quickly from the blood loss. \"Kirk Verdulke?\" she repeated. \n\n\"Aye.\" He breathed out deeply. He could feel death rising in his throat. But her whiskey eyes soothed his pain. \n\n\"You are not meant to die today. Listen quickly. I don't know if you can tell, but you're dying much quicker than I intended. My name is Aztrit. I don't know how closely you know beings of Asgard, but I am-\" \n\n\"Valkyrie.\" He finished with a wheeze. His eyes began to flutter. \n\n\"Shit.\" She said hastily. She hadn't meant to cut him so deep. She was enraptured by their battle. She brought her face closer to his, close enough for their noses to touch gently. \"Hold still.\" She whispered against his lips and she kissed him softly. His lips were full and thick, and for a second she felt him kiss back. She tasted sweet mead on them. She was more enticed by the heat they were sharing then she expected. She pulled back when she could no longer breath. \n\nThe color began to return to his face as the blood backtracked into his body. He coughed and held his chest as she peered down at him. He had seen her on the field as his men rode away. They hadn't lost many, but many were injured. To see the power she held over the bodies as they burned angered him. They had not chosen to fight for Valhalla, but they all knew in battle they were offerings for Odin. \"Why, are you here?\" he managed to cough out. When he was feeling more balanced he stood. \n\n\"We need to talk somewhere else. Your men will wake momentarily. Before they know i'm here, we need to discuss our roles to each other. Is there someplace we could go?\" She looked around the hall as the resting bodies began to move. \n\n\"You didn't take them? For Valhalla?\" He was confused. He had never heard of a Valkyrie that would heal, only the type that stole lives away. When she motioned no, he nodded towards the stairs behind the banners on either side of the great hall. \n\nShe followed him as they moved quickly. They hurried up the stairs and down the long cold hallway, following the deep blue carpet to the end of the hall. He pushed open the wooden door and let her come in before shutting and dropping the latch to lock it. The room was grand. Banners of different hues of blue hung for the cities in Karth, With the Grothen Royal blue hanging the largest over the bed. The bed nearly stretched the entirety of the wall it was against. Book shelves lined every other wall and a desk sat close to the fireplace that reached all the way to the ceiling. It wasn't luxurious like Asgard, but it was the finest human room she had been in.\n\n\"Explain what the Valkyrie want with my men.\" His voice was calm. Unexpectedly so. She had just come close to killing him. She broke from her admiration and faced him as he sulked by the door. \n\n\"Odin has favoured you. I had heard you were quite impressive to him. This I could tell to be true from our battle. The short message, Lord Verdulke, is that I am to help you with your war against The Elicit. To make sure the war goes in your favour. If that doesn't hurt your ego too much.\" She walked closer to him and put her hand near the slowly healing wound. \"Sorry about the gash. I got caught up in the moment.\"\n\nHe raised his brows, \"That kiss? It healed me?\" Her head only came to his chest as she looked closely at it. She was more beautiful than anyone he had ever brought to his bed. Under different circumstances, he would take her too. But she was something dangerous. And she was undoubtedly keeping things from him. \n\nShe smiled up at him. She didn't need to kiss him to heal him. She just found that it worked better with physical contact. The kiss had been because he pleased her with his skills. \"In a way yes. But I didn't heal it long enough. I need to close it completely or you'll probably still die. It works better if it's reciprocated.\" \n\nAt first, he was hesitant. But her eyes coaxed him on. They drowned him in her heat. She saw him fighting it. His eyes turned into a darker steele as he relaxed his shoulders and bent his face to hers. She let him lead this time. Allowing him to feel her lips as he took her hair into his hands. She felt her body melt closely to his warmth. There the spark was again, fluttering in her stomach as his tongue dipped in between her lips. She placed a hand on his injured arm to find the wound sealed. Still, she allowed him to continue.\n\nHe knew his wound was gone, but he couldn't find the strength to pull away from her sweet plump lips. She was proving to be passionate for a murderess. She moaned softly on his tongue as he gripped her hair. He pulled away quickly, needing to put space between them before he forgot what she was. \"Do you make a habit out of kissing your victims?\" He said smoothly as he held her. \n\nShe stepped away and laughed before taking a seat on the desk. \"Only particularly handsome ones.\" She hadn't engaged physically with humans for a long time. But he was drawing her in much faster than the others. \n\nHe took a seat close to her at the desk. \"So what is it you're looking to do while you're here? If Odin believes I need assistance, I will not protest.\" \n\nShe sat up straighter and fingered her necklace, \"Ideally, I'll be under the guise of a healer you'll travel with.\" She opened her eyes wide as she remembered what had happened. Humans never remembered they were even injured after she healed them. None of the men would remember how they suffered. She had healed Lord Verdulke twice, and he remembered. \"Your men won't remember that they were ever injured, and they won't be aware of the powers I have. Do you identify as human My Lord?'' \n\n\"Yes.\" She caught the lie as it left his lips. But she would let him have his small victory. She would find out eventually. \n\n\"Of course.\" She said to him knowingly. \"What are the beginnings of your plan? You've already fought elicit today at Haverslhab. But you sustained a lot of damage. Surely you'll be gathering support from other countries?'' \n\n\"In two weeks time, we'll be traveling to Vertan to gather elvish support. King Derkot has already sent his approval back to me. But we need to meet to make it official. Until then, we rest. It was going to be time to heal, but you've taken care of that for us. We'll focus on training until then.\" He frowned as she stared deeply at his lips. \"Are you listening Valkyrie?\" \n\nThe way he said her warrior name made her anxious to sit on him instead of the desk. \"I'm being as attentive as possible, I assure you.\" She smiled through her words. \"While i'm in Grothen, I obey you. Two weeks is quite a bit of down time. Is there anything I could help you with while we prepare, My Lord?\" \n\nHe knew she was teasing him. He had read that Valkyrie had the capabilities to manipulate emotion in order to soothe their chosen as they die. But he would not succumb. She crossed her legs as he eyed them and leaned forward to let him admire her body. \n\nShe was teasing him. But she didn't believe in manipulating emotion. Everything had to be raw. It would be unfulfilling otherwise. She read his eyes when they met hers again. His voice poured over her like a hot bath, \"Are Valkyrie allowed to do this?\" \n\n\"We have a tendency to be a little overly passionate with others. It comes from the same place we passionately fight.\" She could usually control how she felt, but his smell was intoxicating, pine and sweat. She slid off the desk and unbarred the door, \"Care to show me where I'll be staying?\"",
        "***\n\nKirk led her to her chambers adjacent to his. The room was smaller, but he assumed their proximity would be necessary for their situation. He knew there was mutual distrust between them, but he still had many unanswered questions. Valkyries did not typically focus on any side of a war. They just took those they favoured from every side. If the Gods already knew about the war he was preparing for, why did she need to be here? She could just as easily observe from afar, never interacting with the participants. Other warriors of his often fought valiantly because they wished to be favoured. If they were to die, they could at least look forward to being blessed in Valhalla. But to him, their actions were thievery. Robbing souls of their resting place in the afterlife. \n\nBut their kiss was enlightening. He was hesitant to reveal what he was to her, but he was beginning to feel thankful for her help. If she had not healed the men in the hall, many of them would be dead, and his numbers would drop drastically. He cared deeply for his kinsmen. Their loss would be felt deeply throughout the war, and their families would feel the emptiness he did for their loss. But the war against The Elicit was quickly approaching. They had started to ignore their banishment and pour in from Froit. The only way to contain them was to begin fighting back. Derkot, the king of the elvish kingdom Vertan knew that if they allowed them to advance into Karth that it would only be a matter of time until they continued west to his kingdom. But Kloi, the dwarven king in the south, was not convinced that the attacks were even happening. Bulari would be unprotected, because of it's kings stubbornness. So they would ride to each kingdom and give their bid. Their casualties would be minimised because they would have a Valkyrie to aid them. \n\nAn attractive Valkyrie. He watched her as she looked around her room. She seemed so interested in the architecture surrounding her. He figured she didn't spend much time around humans or inside of their structures. Castle Grothen was unique. It was the center of Karth, and as The Lord of the biggest plot in the country, he was like a king. But never did he want to called such. His people were free. The other clans in Karth were as well. He would only step in if he was asked. \n\nThe fabric was tight to her body. He found himself repeatedly distracted with how it stretched against her rear. Her thick thighs peeped shyly from the side of her dress, and the curve of her hips would swing as she walked. But she was shorter than he usually preferred his women. She had looked taller on the field. \n\nShe could smell his desire growing behind her. Their interactions so far had been more interesting then she had imagined. His energy was so strong. She could tell they were both more enamoured than they could understand. Their energies were feeding into each other, playing off the passion they were harbouring from their battle. She turned back to him and gave a sheepish smile. \"You're feeling strongly, more than usual, aren't you?\" \n\n\"I expect that's your doing?\" He crossed his arms and leaned on the door, narrowing his eyes at her. He expected her to be manipulative. \n\n\"Actually, no. I'm just as shocked as you are. I haven't been so excited in a very long time. And never from a human. I don't believe in making others feel falsely. I value choice.\" She touched his chest. \"I think it's fascinating that you're fighting it so hard. You're very strong willed.\" She purred her last words and walked past him back to the hallway. \n\n\"Wait.\" He reached for her wrist while she walked away, preventing her from going further. \"The men you take during our battles, I want to know who before you take them.\" \n\n\"I can't do that Lord Verdulke. But I assure you, I do not take anyone who is not fated to die. I know you're close to them, but you'll have to take solace in the fact that they'll be well taken care of. If I don't take them, my sisters will, and they won't be as susceptible to your charms.\" With a blink of an eye she was gone. \n\n***\n\nThree days had passed since Kirk had seen Aztrit last. The only thing that assured him that she had actually been here, was that his men had all healed. And true to her word, none of them remembered even being injured. That night at dinner he had told them that he had acquired a healer to travel with them as they journeyed. He had expected her to be back for the introduction, but she hadn't come. \n\nToday was the day they began their training again. He shouted encouragements as he watched his men spar. Although they had won at Haverslhab, their endurance needed improvement. Their offense was unmatched, but they were slow to defend themselves. He thought about his own battle with Aztrit. The balance she had switching from protecting herself from his blows and lancing forward was the swiftest he had ever seen. But she had centuries of experience. Her stances were effortless. Never had he been bested in battle before her. \n\n\"You called?\" He heard a familiar voice from behind him. He didn't turn to face her. \n\n\"No.\" He said harshly. Three days she had disappeared for. He wasn't worried about her. But he was insulted. She came to him asking to be apart of his household, and then was absent when he tried to acclimate her. \n\n\"Kirk.\" She moved to stand beside him. \"I can tell you're upset. But I have my own warriors to keep track of.\" She understood his anger. She could feel it coming off him in waves. Their relationship was new, and she had left doubt in his mind that she was here to help. \n\nHe dropped the tension in his shoulders he was holding. Their involvement would be long, and if they weren't in unison they wouldn't be able to aid each other effectively. \"I didn't know Valkyries had healing powers.\" \n\n\"Only I do. It's hard for me to use. But I'm glad I have it. It's relieving to be able to sustain life instead of taking it away. There's something deeply satisfactory in it.\" She switched subjects as she watched the burly men clash shields and wrestle. \"Your men focus too heavily on attack. I don't know if you've noticed.\" \n\n\"We can't all be ancient warriors. Some of us only have one lifetime to perfect our skills in battle.\" He smiled down at her. \n\nShe laughed and focused on him. \"I get it, I'm old. Didn't your parents teach you to respect your elders?\" His smile was wide. It lifted his cheeks and made him look more handsome than he had before. \n\n\"They did. But they never told me the elderly and decrepit could look like you.\" He was more serious with his tone when he said this. He had thought about her frequently after they had met. He thought about how her lips had tasted and her intoxicating golden eyes. They looked like freshly poured honey. \n\nShe could tell he was no longer joking. She just hadn't expected him to begin giving into the attraction they both felt. She held his silver gaze while the world went on around them. Her body began to hum from the intensity of the connection they were sharing. \"You certainly know how to make an old lady feel good.\" \n\nWhile they continued to joke and critique the form of his men, a tall blonde man approached Kirk. Even he was shorter than the Lord. His body was slimmer, but he was equally muscled. His hair was longer and pulled together at his neck. His face was more welcoming even with the crooked bridge of his nose from a previous breakage. His green eyes were upturned with his smile. \"Lord Verdulke.\" He nodded to Kirk in greeting. The man looked between the two flirting people until he was introduced. \n\n\"Aztrit, this is Eric Verdulke. My second, and unfortunately, my cousin.\" Kirk whispered the last part to her making her laugh.\n\nEric knelt on the ground in front of her and took one of her hands in his. \"It's a pleasure to meet you my lady. We had begun to think he had made you up.\" He kissed her hand gently never breaking their eye contact. \"But you are far more beautiful then he described to me. If you would like, I could accompany you throughout your day to make sure our humble abode is to your liking.\" He cast a glance to Kirk, who looked at him with warning in his eyes. \n\n\"Wow.\" She said truly speechless at his blatant attempt to acquire her. \"Thank you, truly. But I think Kirk beat you to it.\" She looked to him and enjoyed that he was bothered by his cousins attempt. \n\n\"Shame.\" he said sadly as he stood and winked at her. \"You always get the pretty ones cousin. He tells us you're a healer?\" he said skeptically.\n\n\"I am. And if your men don't tighten the grips on their shields as they retract from swinging, you'll need me often.\" She didn't like to be challenged when it came to respect. She gave it and always expected it in return. \n\n\"Aye. That does need work.\" Eric said with embarrassment. \n\nKirk grinned at her retort. If Eric only knew who he was really talking to. He wouldn't have been so quick to dismiss her abilities. He clapped his red faced cousin on the back. \"One day, you'll learn not to say everything that comes to mind Eric. Focus on defense today. I have things to do in town and I won't be back until dinner.\" \n\n\"Understood.\" He turned and bowed to Aztrit, \"Healer.\" He said in farewell and rejoined the dueling men. \n\nThey all stopped to look at her. She gave a wave to hoard as they began chatting to themselves. \"If you're busy Kirk, I could come back before dinner?\"\n\n\"I'm not. I took care of everything this morning. I do however, wish to get to know you better Valkyrie.\" He took note of her attire for the day. Her long black dress split at both sides and hung tightly to her just as the other had. But instead of a conservative neckline like the other, she had a deep 'v' running down her chest to display the valley between her heavy breasts. Her thick hair was curly and framed her face nicely. He still found it hard that she could look so normal compared to the warrior he had seen on the field. The way she said his name was beginning to make him stir.\n\nShe inwardly cringed at his request. She had hoped over the days she was gone she would compose herself enough to not get close to him. The heartache they would both feel if he found out what she was here for, what she had to steal from him, would be unbearable. But the smile he wore made it hard for her to disagree. She was starting to see valkyrie as a pet name when it came from him. The way he said it lowly caused her thighs to heat and her face to flush. \n\nThey began their walk as they left the courtyard and crossed the stone bridge leading to the gardens. At first they only spoke about preparations Karth had been making to defend their borders. The wall was holding well, but factions of The Elict had started making pathways to cross discreetly. But through the gardens he told her about the plant life as they passed potted plants of blues and yellows as they swayed in the wind. Several large trees were here and there, their roots far beneath the stone walkways. When he began talking about the architecture of Castle Grothen, it was obvious he loved his home, and cared deeply about preserving it. It had been rebuilt after the civil war between the kingdoms. It had sustained heavy damages from elicit warriors and rebuilding it had taken years after the war had ended. \n\nThey stopped in front of a bench and sat next to the largest tree in the center of the garden. Its branches hung low, letting its leaves and its purple honey flowers drift with the current of the wind. \"What is it like in Asgard?\" He questioned hoping to distract himself from his craving to touch his lips to hers again. \n\nHe looked so good to her resting his back on the dark wooden bench. His black hair was still gently waving along his earlobes and thick neck, but his beard was cut much closer to his neck, allowing her to see his full pink lips closer. Looking into his silver eyes was becoming hard for her as she felt herself becoming slick from excitement. His eyes were focused on her lips and he subconsciously licked his own so quickly she could've imagined it. \"It is beautiful. The streets are paved with porcelain and trimmed with silvers and bronze. It sits on its own platform high above the world, surrounded by stars. The nights are my favourite part. The stars float so closely you can see into the spacious void around it. I used to sit outside of my village and stare up for hours watching them go by.\" \n\nAs she spoke flowers fell from the tree and landed softly in her hair. He reached out and plucked them gently from her, each time letting his hand linger near her face. She held her breath as he did this, hoping to savour each moment he touched her. When he reached for a third time, his hand went straight to her cheek and caressed her smooth skin. They leaned forward in unison, allowing their lips to meet again. It was soft and light at first touch. Letting them feel the pressure they were sharing again. But as she opened her mouth to let him slip his tongue in, it became desperate and warm. He pulled her closer by her waist and she clutched the front of shirt tightly in her fists. He placed a hand on her bare thigh and travelled upwards to grasp her bottom. She gasped at his firm grip and slipped a hand inside of his shirt to feel his chiseled abdomen. She slid her hands down to tease two fingers into the waist of his pants. She felt the trail of his pubic hair and continued until she felt the base of his member. \n\nHe let out a deep groan and lifted her onto his lap. She felt how hard and well endowed he was underneath her. As their tongues rubbed against each other he put a hand on her exposed chest and moved his hand inside the fabric to her hard nipple underneath. He gave a light squeeze and palmed her breast in his hand. Wanting more contact, he slid down her straps and exposed her chest to the wind. His mouth watered as he saw the brown peaks for the first time. They looked like candy on her chest, and he was willing to bet his life they tasted just as sweet as they looked. He ran a hand down one and dipped his head to flick his tongue across it. \n\n\"Kirk.\" She gasped as his wet tongue rolled and tugged at her painfully hard nipples. She buried her hands in his hair as he sucked harder. She let out a guttural moan as he continued to send pleasurable waves through her body. He put a hand underneath her dress and felt the soaked bare mound. She wasn't wearing anything beneath it. His cock swelled stiffly under her soft flesh. She shrieked as his fingers connected to her sensitive lips. He teased her creaming entrance and settled on her engorged clit. He rubbed two fingers around it as she squirmed on his lap causing friction against him. \n\nShe cried out as his long thick fingers slid up and down her slit only to circle again around her clit. He pulled away from her breast to look into her face. Her eyes were closed tightly and her lips were parted as she moaned for him. \"Open your eyes.\" He commanded, needing to see the pleasure in them. She lifted her heavy eyelids as her body vibrated from his touch. He drank them in as he moved back to her entrance and entered her with two fingers. Her eyes fluttered closed again. He hooked his fingers to feel for special spot. Upon finding the spongy bundle he massaged it back and forth as her wall throbbed around his fingers. \n\n\"Oh Gods.\" She whimpered. She had never felt anything like it. Her legs tightened as he changed paces over and over. Starting slow and building up to quick swipes with his finger tips. He kissed the bare crook of her neck and took in her scent. He suckled the flesh he found there and took pleasure in the noises she was making for him. He wanted to bury himself deep inside her every time she said called out for him. His pants had grown unbearably tight from his erection, but he was determined to pleasure her before he entered. \n\nHe hadn't planned on touching her like this when he kissed her, but her moans had lit an unwavering desire in him. She looked so beautiful talking about her home, he had forgotten what she was and opened his mind to her simply being a woman. A woman with dreams and intoxicating passion. He placed his thumb on her clit as he pumped, applying delicious pressure between her legs. \n\nShe cursed as he held down tighter. She was so close to coming undone in his arms. He held down, sending her into her release. Her pussy felt heavy as she began pulsating rhythmically. He bit down on her neck pumped faster as she let out a long moan. Her face was so hot from the strength of her ongoing orgasms she felt herself tearing up. Her legs shook violently as she came on his hand. She felt more liquid seep from her, down his wrist and onto his pants. She closed her mouth as she came down from her euphoria. He lifted his lips off of her skin and looked into her eyes as he removed his fingers from her heat. He uncovered his cock and wrapped the hand she had wet around his length and pumped as he kissed her. It took him no time to feel his release in his gut. He pumped quickly as he came and released his thick liquid onto her waiting chest. \n\nShe relished how his hot spurts felt on her chest as rope after rope landed on her nipples. She was disappointed it was not inside her instead. Their lips continued to dance while he composed himself. When they finally pulled away she looked down at her chest and laughed at the amount of come trickling down. \"Sorry.\" He said with a red face and moved her off of his lap. He took off his shirt. \"I know this might not be a preferred method but we don't have anything else.\" He began to clean her off with the fabric starting with her nipples and working his way upwards. When she was clean he set it on the bench next to them. \n\nThey stayed silent as they fixed their clothes, attempting to hide what they had done.He finished first and helped her lift the straps of her dress back over her shoulders. When she looked presentable again he stood, letting her see the scars from his battles on his sculpted chest. He put out his hand for her to take, and she placed her small hand in his palm. He pulled her in close and kissed her deeply. He may not have plotted what they had done, but he would never regret feeling her soft body. \n\nShe felt pangs in her heart as he held her. Never had she become so quickly attached to someone she had just met. But every time he looked at her, she felt as if he was looking right through her, seeing the entity instead of the warrior. She finally understood what mortals meant when they proclaimed their affection. She imagined that if he left this world, mortal or beyond, she would never again be able to stand by herself. His gentle kisses warmed her lips as the wind flowed through the tree and shook it softly. She knew then, that she would not be able to kill him."
    ],
    "authorname": "Irian",
    "tags": [
        "interracial love",
        "mythology",
        "interracial novella",
        "elves",
        "dwarves",
        "valkyrie",
        "norse gods"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/bifrost"
}