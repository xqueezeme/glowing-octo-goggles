{
    "title": "Telemarketing Turnabout Pt. 02",
    "pages": [
        "This is the second chapter in this series. If you haven't read the first one, I suggest you do, to catch up on how Becca entered 'my' life. I hope you enjoy this installment, and as always welcome your feedback. Let me know what you like, and what you don't.\n\n**********\n\nIt had been three weeks since Becca asked me to move in with her. Without a doubt, agreeing to do so had been the best decision of my life. She had quickly put me to work around the house, and she had an extensive 'honeydo' list, but the 'pay' was great, so I was more than happy to help. \n\nOne of my first projects was overseeing repairs to the backyard pool and deck, which had been out of use for about a year. Really, I did virtually nothing myself, but Becca didn't trust the contractor to give her a fair price, as a single woman, so my input was mostly time and supervision. And once the pool was fixed, we had another place to have sex! \n\nWith the deck fixed, Becca took full advantage, and I came home several times to find her in the backyard, sunbathing au natural, or in a string bikini so brief she may as well have been. I gotta tell you, despite her impending 46th birthday and drivers license to match, I still had a hard time believing my darling Becca was that old, especially when she had her string bikini on. She usually didn't have it on for long around me. \n\nThat birthday I mentioned was going to be big for me, too, as it would be my first time meeting Becca's kids, neither of whom had the faintest idea that their mother was involved with another man after the divorce, let alone a man closer to their age than hers. We hadn't met, but she had filled me in on all the details of her children. \n\nElizabeth, or Lizzie, was the oldest at 25. Yes, that's right, she was 1 year younger than me. She was in medical school, and took after her Mother in looks and attitude. Clayton, or Clay, was 22, and in college with an as yet undetermined major. He took after dad. That could be a bigger problem than Lizzie's age. Still, there was no use fretting over it until the time came. \n\nIn the meantime, Becca and I made the best of our non-wedded co-habitation, making love in every room of the house. Also the backyard, the pool, the hot tub, the garden shed... the hammock under the big tree... You get the idea. We were like rabbits. Very happy rabbits. \n\nThe party was going to be Saturday afternoon, with the kids arriving that morning. That was the plan, but that's not quite the way it unfolded. \n\nFriday afternoon, I arrived home after a long day of driving around, running errands and getting supplies, food, drinks, etc. for Becca's party. Even though 46 is not usually a milestone birthday, being the first of her new, post divorce life, and her first with me, she wanted a bigger celebration, despite the very limited guest list. I thought about getting a 'bouncy castle' as a joke, but knew we would just end up using it for sex. \n\nIt was a very warm day, and by the time I had unloaded all the stuff from the SUV, I was hot and sweaty. I sent a text to Becca, letting her know that I was back home safely, and went to the bedroom to get undressed. A quick dip in the pool seemed like a really good way to cool off, so I grabbed a towel and walked out of the bedroom and down the hall. I was alone, so clothing was optional, and I had opted for none. \n\nI rounded the corner from the hallway into the living room, and ran head on into... Lizzie! At least, I assumed it was Lizzie, as she looked like she could be Becca's younger twin sister, if twins could be different ages. She had the same cheekbones, nose, and cute freckles, although her eyes were more hazel-coloured. She had her earphones in and ipod playing, so that explains why she didn't hear ME, but SHE wasn't supposed to be here until tomorrow. \n\nI wasn't prepared for contact, so when we literally crashed into each other, we bounced off and tumbled to the floor a few feet apart. \n\nLizzie screamed. \"WHO THE FUCK ARE YOU? WHAT ARE YOU DOING IN MY MOTHER'S HOUSE?... AND WHAT THE FUCK ARE YOU DOING IN MY MOTHER'S HOUSE... NAKED?!\"\n\nOh yeah. Naked. Great way to meet someone for the first time, especially someone who might have another reason to dislike you. When I fell, my towel went... somewhere else. I didn't see it anywhere. \n\nLizzie's eyes were wild and angry looking, but that didn't stop them from giving me the once over, twenty-nine times. Trying to cover myself now seemed a bit 'too little, too late', but I gave it a shot anyway. She was still glaring at me as she stood. \n\n\"WELL? ARE YOU GOING TO SAY SOMETHING, OR SHOULD I JUST CALL THE POLICE?\" \n\nI couldn't help noticing that Lizzie also had her Mother's tits, as well as her nose and hair. She was wearing a bikini, having been sunning in the backyard, and while her suit was nowhere near as revealing as the ones her mother had been wearing lately, there was no way to hide her breasts, which looked quite comparable to Becca's F cup beauties. \n\nI turned a little, placing my back against the wall of the hallway, which freed one hand to hold up. The other one was still trying to hide my dick. \n\n\"Hello, Lizzie... \" I began, trying to sound calm. She wasn't calm. \n\n\"HOW THE FUCK DO YOU KNOW MY NAME?!\" she screamed. \n\n\"I'd be happy to explain everything. As you can clearly see, I have nothing to hide.\" \n\nHer eyes softened noticeably, and a very brief smile tickled the corner of her lips. She turned, and grabbed my towel off the floor behind her. She tossed it to me. \n\n\"Ah, that's where it went,\" I laughed. \"Thank you, Lizzie.\" She was still looking at me. \"I know you've already seen everything, but could I ask you to turn around?\" Reluctantly, she did, and I quickly stood and wrapped the towel around my waist. \"Okay, Lizzie... I'm decent.\" \n\nShe turned to face me. I guess the initial shock of crashing into a naked man unexpectedly in her Mother's house had begun to wear off. \n\n\"Okay, so you know who I am. That means you know my Mother. You're a friend of my Mother?\" she asked. \n\n\"A friend. Yes,\" I responded carefully. \"So, how's med school?\" I added, trying to deflect the conversation. \n\n\"You live in the neighborhood, nearby?\" she continued, ignoring my attempt to steer things down a less dangerous path. \n\n\"Near. Yes. In the neighborhood. You're here early for the party, aren't you?\" Please stop. \n\n\"You're coming to the party?\" she smiled, took a step closer, and tossed her hair. \n\nOh shit. I saw that. Play it cool. \"The party. Yes. Does your Mother know you're here early?\" \n\n\"No, I thought I'd surprise her, \" she replied. \n\n\"You sure surprised me,\" I laughed. So did she. \n\n\"You'd better get dressed and get out of here before she gets home. I don't want her thinking there's anything going on, here. Where are your clothes, anyway?\" She was definitely flirting with me. Yet another complication I didn't need. \n\n\"Um, yeah, they're in the bedroom, down the hall.\" Before I could do anything to stop her, Lizzie walked past me, checking bedrooms as she went. She reached the end of the hall, and turned back. \n\n\"Where? I don't see them.\" \n\nThe point of reckoning had arrived, a day earlier than expected, and without Becca for backup. Oh, well... here goes nothing. \"They're in the... um... the... they are in the hamper.\" \n\nI watched her face as she put two and two together. If it hadn't been so terrifying, it might have been funny. Her eyes flew open, and one hand flew to her mouth in surprise. \"Oh, my!\" she gasped, and pushed past me again, nearly dislodging my towel as she ran out into the backyard. \n\nWell, the cat had truly been set free from the bag, now. No point in making things worse by being half naked. I grabbed some shorts and a t-shirt from the drawer, put them on, and went to find her. \n\nAs I reached the living room area, the front door opened, and Becca came in, smiling her usual smile. \n\n\"Hey baby,\" she said, dropping her keys on the counter and swinging her hips sexily as she approached me. Before I could stop her, her lips were on mine, and her tongue was doing a few exploratory laps of my mouth. \n\n\"MOTHER!\" came the shriek from behind us. \n\nBecca was understandably startled. She looked over my shoulder to where Lizzie was standing in the doorway to the backyard, then back at me, shock clearly evident on her face. \n\n\"I was going to tell you, but you're too fast on the kiss,\" I whispered. \"At least you're not naked.\" She looked puzzled. \"I'll fill you in later. For now, suffice it to say, Lizzie and I have met, and she knows about 'us'. She came home early to surprise you. Are you surprised?\" \n\n\"Um... Yes. That's an understatement.\" She took a deep breath. \"Okay, I'll go talk to her. It's probably best if you stay out of it for now.\" \n\n\"Gladly,\" I replied. \"I'll start dinner.\" \n\n\"Good idea.\" She smiled. \"Wish me luck... \" \n\n\"Always, my darling,\" I said, kissing her softly. She walked out into the yard. \n\nI retreated to the safety of the kitchen, rummaging through the freezer for something the three of us might like. I finally settled on smoked salmon, crackers, shrimp cocktail... that sort of thing. I didn't hear any screaming, so I assumed things were going okay outside. I decided to take refuge in the bedroom, and watch TV for a while. It was meant to distract me, but didn't really do the trick. It had been about half an hour, and I needed to know. \n\nI peeked cautiously out the sliding glass doors into the backyard. Lizzie had her back to me, sitting at the poolside table. Becca was facing the door, and saw me. She gave me a very subtle nod, letting me know everything was fine. I took a breath, and went to join them. \n\n\"Do you mind if I sit,\" I asked. \n\n\"Not at all,\" Lizzie replied, \"and I want to apologize for earlier. Whether I knew it or not, you live here now, too, so I had no right to... you know. Sorry I surprised you.\" \n\n\"It's alright. No harm, no foul,\" I nodded. \n\n\"Nice dick, though,\" she laughed, sipping her drink. \n\n\"Lizzie!\" Becca snorted. I almost choked. \n\n\"Well, it's true, isn't it? I mean, really Mom, I am almost a doctor. I just call 'em the way I see 'em... and the way I saw it... well... there you go. Nice dick!\" Lizzie raised her glass, and winked at me. \n\nHoly shit! The earlier flirting was maybe understandable, but now she knows that I'm involved with her Mother, and she's still at it. Life just got much more complicated. \n\n\"So, Mom, just how big is it, anyway?\" Jeez, she doesn't give up, does she? \n\nBecca wasn't taking the bait, but her blush was answer enough for Lizzie. \n\n\"That big, huh?\" she played, looking back at me. \"Really?\" \n\n\"Alright, Lizzie. That's enough,\" Becca chimed in, putting an end to things, thankfully. \n\nThe rest of the afternoon and evening passed without incident. We ate dinner, Becca got Lizzie set up in her old room with linens and the like, and I made myself scarce, hiding in the bedroom, watching TV. Becca joined me soon enough. \n\nI filled in any blanks that she had about Lizzie and I 'meeting' earlier. She found a few of the revelations humorous, but tried to control herself. After a little more conversation, Becca decided she'd rather make out than talk. She was still wearing her office clothes; mint green silk blouse, and black skirt. Stockings had replaced pantyhose shortly after our first night, and now there was a thong covering her freshly shaven pussy most days. \n\nWe were engaged in some spirited tonsil hockey, and my hands were busy fondling her slippery, silk covered breasts, and her firm butt. She was moaning quietly, and stroking my hair. She rolled on top of me, hitching her skirt up so she could spread her legs further. Seconds later, she sat up, straddling me. She reached into my shorts, freed my stiff cock, and gave it a couple of preparatory licks, before moving up to hover over my crotch. She pulled her thong aside, and dropped her pussy onto my dick. She was drenched, so it slipped all the way in easily. \n\n\"Ooooooo fuck, yes... it really is that big, Lizzie... and it's mine,\" she groaned, kissing me hard. I started to unbutton her blouse, while she worked on the cuffs. It came off shortly after. She reached behind her back, and the bra fell away next. As soon as her fabulous breasts were bare, I latched on to one of her thick, erect nipples and began to suckle feverishly. She started to rise and fall, her pussy clutching my cock in a wet embrace. \n\n\"Oh god, baby... Yes!... Suck my tits while I ride this big cock! Oh!... Oh!... Oh!\" She was getting a little louder. \n\nA voice wafted in from the hallway, behind the closed door. \"I can hear you, Mother,\" Lizzie said quietly. \n\n\"I'm sorry, honey. I'll try to keep quiet... but you said it yourself... it's such a nice, big, hard cock!... He makes me cum so good, sometimes I can't help myself!\"\n\n\"Is this normal mother-daughter talk for you two?\" I whispered, certain I had entered the Twilight Zone. The hallway was quiet. Becca giggled, and started to bounce more energetically. I re-attached my lips to her breast. For about a minute or two, she managed to keep her audible emanations to a minimum, but I knew it couldn't last. It didn't. \n\n\"Oh... Oh... Oh... Oh fuck... Oh fuck!... Oh yes, your fucking cock feel so good all the way up my cunt!... \" Her volume slowly ramped up, then she caught herself. \"Shit! I'm getting loud again... \" she hissed, then lifted off me. She rolled over, removed her thong, and positioned herself with her butt high in the air. She buried her head in the pillow, and screamed. Satisfied that it would mute her cries, she wiggled her ass and peeked over her shoulder at me. \"Okay... Fuck me like you mean it!\" \n\nHer skirt was still up around her waist, giving me a handhold for leverage. The room filled with a rhythmic 'slap, slap, slap' as I pounded deep into her pussy. Becca was shrieking, but the pillow was doing a pretty good job of absorbing the sound. \n\nI heard something in the hallway, and slowed my pace. When I did, Becca heard it too. It was Lizzie, and she was worth listening to. \n\n\"Oh god... Oh god... Oh god... Oh yes! Yes! YES! YESSSSS! AHHHHHHHHHNNN!\" \n\nHearing her daughter cum, masturbating while listening to us, tripped Becca's switch. Her head came up, out of the pillow, and she screamed. \"Fuck me... Fuck me, hard!\" I complied, and soon both women were screeching through orgasms, and I was grunting and growling as I sprayed my cum deep inside Becca's twitching pussy. \n\nA few seconds later, we heard a quiet, slightly shaky \"goodnight\" from the hallway. \n\n\"Goodnight, Lizzie,\" I replied. Becca was crumpled in a pile, her face and chest down in the pillows, and her ass still up a bit. Her ravaged pussy was gaping open, and cum was starting to ooze out of it. She was too wrecked to speak, but she did wave, not that Lizzie would ever know. \n\nBecca and I helped each other into the ensuite bathroom, and cleaned up with a tandem shower, which quickly went from sanitation activity to a hot, wet, petting and kissing session. Somehow, the erotic situation managed to coax my dick to harden for another round, and soon Becca's pussy was stuffed full again, while the warm water cascaded over us. I had her leg over my arm, pinning her in the corner, up against the tile wall. She had developed a fondness for this position, ever since our halftime rendezvous at the football game, and told me it really did a number on her large, prominent clit. Personally, I liked the way her big tits moved, especially the wet, slippery look and feel of them against my chest. \n\nHer voice was a bit hoarse, but that didn't stop Becca from hooting and hollering her enjoyment. I reminded her that Lizzie could probably hear us. \n\n\"I don't care. We're all adults here, and this is our house,\" she said evenly, kissing me while I gently probed the depths of her cunt with my hard cock. \"Let her use her fingers, again!\" Another kiss. \"Please make me cum, baby. I Love your cock inside me,\" she begged. \n\nI kept slowly stroking into her, grinding on her clit. She started to vocalize. \"Oh yeah, that's it, baby... \" I had an idea, a somewhat dangerous idea, that I thought might really get her off. \n\n\"Tell her what I'm doing, darling. Tell her what you're feeling.\" \n\nBecca's eyes opened wider, and for a second, I thought I had crossed the line, but then her eyes closed and she smiled. \n\n\"Your cock feels so good in my pussy... Oh... Oh yes, grind my clit... Yes!... Yes!... Oh yes, fuck me harder, baby!... \" \n\nI leaned closer to her ear and whispered. \"That's it. You bad girl. You like knowing that someone else knows, don't you?\" \n\nShe gasped, and her breathing suddenly ramped up. I must have hit the right button. \n\n\"Oh fuck... Oh... Yes!... God... Fuck me!... Fuck... I am... so... fucking wet!... Your cock... So... good!... Uhnn!... UHNN!... AHHHHNNNNNN!... \" \n\nNow for the final push. \"Think of your daughter, listening to us making love. Think of her playing with herself, her fingers in her pussy, and on her clit... making herself cum again, listening to you scream. Your little girl, listening to you cumming.\"  \n\nMission accomplished. Becca's eyes flew open wildly, and she went off like a firecracker. \n\n\"OOOOOOOHHHHAHHHHHNN! OH FUCK!... FUCK YES!... I'M CUMMMMMMMMING!\" she screeched, throwing her head back and shuddering, nearly slipping from my grasp. Her mouth remained open. Nothing further came out, but her orgasm was far from finished. She continued to twitch and spasm, as my dick slipped out, and I held her, easing her down to the floor of the shower. At last, a final shriek of joy escaped her lips, and she wilted, collapsing on her side, and panting sharply. \"Oh... my... God,\" she giggled. \n\nI turned off the shower, and sat down beside her, lifting her to cradle her in my arms. She was like jello, but conscious, now breathing more normally. I kissed her forehead, and was greeted with a weak smile. \n\n\"You are a very bad girl,\" I whispered. \n\n\"Mmmm hmmm,\" she croaked. \"Is that a problem?\" \n\n\"Never, my love.\" \n\nWe slept very, very well that night. \n\nThe phone woke us, just before 9am. I almost answered it by reflex, which might have been a disaster. Becca picked it up. It was Clay, with bad news. His flight was cancelled due to bad weather, and he wouldn't be able to make it today. There was some talk about him making it for tomorrow, but she convinced him not to worry. It was 'just' her birthday, and they would get together another time. I listened to the rest of the conversation, which was mostly small talk, and she finally said goodbye. \n\n\"Lizzie?\" she yelled. \n\n\"Yes, Mom?\" came the distant response, a few seconds before the door opened abruptly. \n\n\"Manners, Lizzie... we might not have been decent!\" Becca laughed. We were under the covers, but just barely. I was hiding behind her back, peeking around her shoulder, and she was trying to keep her magnificent breasts from spilling out over the sheet.  \n\n\"After what I heard last night, do you really think that's important? Jeez, Mom!\" Lizzie was wearing a large t-shirt as a nightgown. It was an old one, a bit thin, and the neck was stretched out, making it drape off her left shoulder, which was bare. I couldn't help noticing a hint of a shadow in the areola area, and a nice bit of jiggle whenever she moved. \n\n\"Well... we heard you too, young lady, so don't play innocent!\" Becca admonished. I noticed that Lizzie blushed a little, and her nipples almost immediately perked up, becoming two little tents in her t-shirt. \"We can continue this conversation later. I called you to tell you that your brother can't make it here this weekend. Since the 'party' was really just going to be the four of us, maybe we should do something else, instead. Give it some thought. I'll be up in a few minutes to make us all some breakfast.\" Lizzie nodded and left, pulling the door behind her, but not quite closing it. ",
        "\"So, what's for breakfast?\" I asked, without expectations. \n\nI may not have had ulterior motives, but Becca did. She arched her eyebrows, licked her lips and pulled back the sheet. My dick was at half mast, and she wasted no time in gobbling it down. She immediately started her patented 'suck, bob, stroke, twist, repeat' action, with its accompanying wet slurping noises. Apparently, she was intent on getting a protein smoothie appetizer before breakfast. \n\nI was sitting up slightly, leaning back against the headboard, which gave me a view of the large mirror above the dresser, but my eyes were closed, enjoying the incredible sensations Becca was giving me. When I finally opened my eyes, I noticed that the door was slightly ajar, and while my attention was on the small sliver of a gap, I saw movement. Then the gap widened slowly, until it was about 4 inches wide. Now I didn't just see movement ; I could see Lizzie's eyes. The mirror gave her a perfect angle to watch her Mother sucking my cock without abandon. \n\nI know. I should have told Becca we were being watched. It may not have made any difference, but she had a right to know that her daughter was there. But, the horny guy in me made me keep my mouth shut, finding the thought of an audience even more arousing.\n\nBecca was moaning and slurping away, and it felt fabulous, but my eyes were glued to the gap, where I could now see a rapid, repeating motion, which I assumed was Lizzie's hand on her own clit. That's about when I made eye contact with her, and she disappeared from view. I thought I had scared her away, but I should have known better. She was her Mother's daughter, after all. Not only did she come back, she came back naked, and opened the door wider. Much wider. Like, at least halfway. \n\nRemember when I said she was her Mother's younger twin? It still stands. She was watching her Mother give me a glorious blowjob, and frigging her own clit furiously. The motion of her left arm transferred to her breasts, jiggling and rippling them wildly. Her tits were nearly as full and round as her Mother's, although her nipples were smaller, lighter in colour and not nearly as thick. Now, her right hand joined the left, with two fingers plunging into her presumably wet pussy. Her breasts were now pressed together more, and bouncing faster. \n\nBecca was yet to give me that private showing of her masturbation skills, but I felt like I was watching the video replay, as Lizzie sawed and stabbed at her cunt. Her mouth was open in silent agony as she approached orgasm. I was closing in on my own climax, with Becca's mouth working it's magic. I watched Lizzie's eyes, burning with passion. She was no longer watching her Mother's lips on my cock. Her eyes were locked with mine. \n\nI couldn't take any more stimulus. Becca's mouth combined with Lizzie's frenzied self-pleasuring, and her lusty visage, to push me over the edge. I grabbed Becca's head and held it tight, flooding her mouth with scalding white syrup. I howled loudly, while Lizzie had her own orgasm in virtual silence, shaking and spasming throughout. \n\nBecca was moaning her own joy as she swallowed my load eagerly, I looked down to see her cheeks hollow with her suction, that demanded every drop of my cum go down her throat. When I looked back in the mirror, the door was closing quietly. She smacked her lips when she released my exhausted dick. \n\n\"Mmmm hmmm! Thank you for the 'amuse bouche', baby! So yummy!\" she giggled, wiping her mouth with the back of her hand. \"Okay, you stay here and rest. I'll let you know when breakfast is ready.\" She wrapped her naked form in the white satin robe hanging on the back of the door, blew me a kiss, and left for the kitchen. \n\nI laid there, zonked after the blowjob and voyeur show. My mind was fuzzy, so I don't really know how long it was before there was a knock on the door. \n\n\"Yes?\" I answered. \n\nThe door opened slightly. \"Are you decent?\" came Lizzie's giggling voice, not quite as smoky as her Mother's, but still with sexy undertones. She stepped in and pushed the door closed behind her, still almost wearing the t-shirt as before. \"First, Mom says breakfast in five. There, official business out of the way,\" she whispered stepping closer, until she was right next to the bed. She leaned closer. \"Thanks for not busting me earlier. I gotta say, that was one sexy blowjob to watch.\" \n\n\"Well, you oughta try it from this end,\" I laughed, immediately wishing I hadn't phrased it quite that way. She leaned over more, allowing the loose shirt to gap wider at the neck. I could clearly see her full melons hanging seductively. I tried to catch my eyes, but it was too late. She was, after all, doing it intentionally, and watching for a response. \n\n\"Do you like my breasts?\" she breathed, now kneeling on the bed, and pulling the shirt lower. Her left breast swung free. \"Whose breasts do you like more?\" \n\nI may not be a genius, but I knew enough not to answer either of those questions. Becca's voice saved me, wafting in from the kitchen. \n\n\"Lizzie? Come here please.\" \n\n\"Yes, Mom,\" she replied, backing off the bed. She stood, left breast still hanging out the neck of her shirt as she backed away, and looked at me intently. It really was a very nice breast. \"Nice cock,\" she smiled, and tucked her boob back in place, heading out the door. \n\nI sighed, looking down to see the tent in the sheet. My own dick had betrayed me. Here I was trying to play it cool, and he goes and blows my cover. \n\nBreakfast was delicious, but frustrating. Becca was teasing, allowing her robe to 'accidentally' fall open several times. Her nipples pushed hard against the shiny satin. Of course, her torture was just the 'legal' half, as it was expected that bedmates would flirt. Lizzie, on the other hand, was using unauthorized seduction methods. Like flashing her bare pussy at me when Becca had her back turned, or grazing her stiff nipples through her shirt subtly. The two of them were combining to make me crazy. \n\nI survived breakfast relatively unscathed, but was still a little sleepy after Becca's attention, so I went back to bed for a little nap. The girls were gabbing away quite happily, so I knew I wouldn't be missed much. \n\nMy dreams were interrupted by the feeling of soft lips on my own. Oh god, I really hope those are Becca's lips, I thought, or I'm going to be in a serious pickle. I cracked one eye open cautiously. Whew! It was my girl. The robe was back hanging on the door, so she was starkers again, smiling down at me. I grabbed her and quickly pulled her onto the bed, rolling on top of her as she giggled gleefully. I kissed her hard and fast, my tongue caressing her lips. I just really wanted to kiss her, and kept going for several minutes. \n\n\"Wow... that was something different,\" she breathed, when I finally released her and rolled off. Her chest was rising and falling with her aroused breathing. \"I was coming in here to tell you that we have decided to go to a movie this afternoon, but now... \" \n\n\"A movie sounds great,\" I said. \"What time?\" \n\n\"Um... Five, I think. We were just going to get some sun by the pool until then.\" \n\n\"Naked?\" I ventured. If you can't beat 'em, join' em. \"I'm in.\" \n\n\"No, dear, not naked,\" she laughed, raining on the parade. \"Although, I do plan to get as close to naked as possible,\" she smiled. After a few seconds of rummaging through one of her drawers, she came out with what appeared to be a handful of strings, and disappeared into the bathroom. A minute or so later, she reappeared. \n\nI whistled. It was red. The bottom half, a thong, pulled up tightly into her camel toe, and I don't think it would have covered the bush of pubic hair she had when we first met. The top was not much bigger, barely concealing her areolas, with a single string bridging the gaping chasm of cleavage she displayed. \n\n\"Is Lizzie ready for that?\" I asked, thinking back to the woman who told me about her husband leaving her, and being worried she was too old to be attractive. \n\n\"I'm sure she'll survive it. You like?\" she asked, doing a little turn to show me everything. \n\n\"Hell, yes!\" I blurted. She nodded, and walked out giving me the full benefit of her firm ass wiggling, gloriously naked other than the thin string that vanished into her sexy crack. I quickly changed into my suit and trailed after her, finding her laid back on a lounge chair beside the pool. I dove straight in, coming up a few feet from her, and noticed she was peeking over her sunglasses in the direction of the house, with a stunned look on her face. I turned to follow her eye line. \n\nLizzie had pulled out all the stops. She was wearing a yellow French wrap suit, and my eyes nearly popped out of my head. For those who have never seen a French wrap, let me elaborate. A single strip of fabric passes behind the neck, like a halter top, widening as it goes down across the breast, then narrowing again until it meets the strip that did the same across the other breast. Now as a single, joined, narrow strip, it goes down between the legs, up the back like a thong, before splitting again and becoming long strings that wrap back forward and tie around the waist. The effect is a deep 'v' neckline, open all the way down below the navel, a completely bare ass and hip area, and breasts covered only in a vertical stripe over the nipples. I had never seen one on a woman as... 'endowed'... as Lizzie was. \n\n\"Wow!\" Becca gasped, \"that's some suit you're almost wearing, Sweetheart. A little more fabric and you could have enough for a pair of shoelaces!\" \n\n\"I could say the same about yours, Mother. It does look good on you though.\" She smiled, and turned to where I was hanging onto the side of the pool, praying that the cool water would squelch the erection that was trying to rip out of my bathing suit. \"No comments from you?\" \n\nWhat did she want me to say? \"I think your Mother covered it pretty well. Wow!\" I replied, then added, \"Nice tits, though.\" \n\nBecca cracked up, pointing at Lizzie and howling with laughter. Of course, she didn't know about the nude, hallway masturbation show from earlier this morning. \n\nLizzie laughed as well. \"Touch\u00e9,\" she conceded. She took a seat on the lounge next to her Mother, and laid back. \n\nI was still in the pool, facing them, and the water was losing the battle with my arousal level. From my vantage point, I could see both of their luscious bodies, side by side, and thanks to their extremely revealing attire, virtually naked. If ever there was an opportunity for comparison shopping, this was it. \n\nI was, of course, quite familiar with Becca's body, having explored it fully. 5 feet 8 inches tall, 135 pounds. 42 - 25 - 36, and those remarkable breasts fit perfectly into a 34F bra. \n\nCompared to her Mother, Lizzie was an inch or so shorter. Her waist looked maybe a little narrower, but her ass was a magnificent carbon copy. Her breasts were ever so slightly less full, but firmer and more prominent, as you would expect from a woman her age. \n\n\"So, Lizzie, just how big are those breasts, anyway,\" I laughed, having decided to play her game. \n\nShe raised her head, tipped her sunglasses down, and glared at me, before laying back again. \"Wouldn't you like to know!\" she giggled. \n\n\"You asked how big his penis was, dear,\" Becca reminded, \"It's only fair he ask about your breasts. Just tell him... don't make him go through your laundry.\" \n\n\"34... Double D,\" Lizzie finally replied, reluctantly. I think she was just feigning modesty for her Mother's benefit, having shown me her goodies on a few occasions already. 'Modesty' is obviously a relative term, as the only parts of her body not currently on glorious display in her banana yellow wrap were her nipples, which made their presence known by standing tall, and her pussy, which showed a delicious camel toe. \n\nI stayed in the pool, leering at the girls on occasion, and managing to keep my dick under control, mostly. The smell of the sun cooking cocoa butter on firm, sexy thighs, flat bellies, and bountiful breasts filled the air. I leaned back against the side of the pool, and tried to sort through my conflicted thoughts. \n\nI loved Becca, or at least, I thought I loved Becca. Up until yesterday, I would have bet on it. Then Lizzie showed up, and fucked up my well laid plans for a lifetime with her Mother. I really didn't understand why I was so attracted to Lizzie, unless it was just greed, a need to have ALL the tall, busty, redheaded sexpots. Maybe once she went back to school, things would go back to normal. \n\nTime ticked by, and soon it was time to get ready to go to the movie. Both ladies got up and headed for the shower, while I watched both incredible asses walk away. They really were virtually identical from behind, although Becca's hair was a little longer. As soon as they were out of sight, I extricated myself from the pool, and followed, still sporting a nearly full blown hard-on. \n\nBecca was in our shower when I made it to the bedroom, and I couldn't resist joining her. I stepped in behind her, and wrapped her in my arms, reaching around to cup her fantastic breasts with my hands. She was silky smooth and slippery from the bodywash she was using to remove the suntan lotion. I kissed her neck. \n\n\"Mmmm. Hello, darling.\" She turned in my arms, now pressing her soapy tits against my chest, and kissing me deeply. \"I'm glad to see you and Lizzie getting along so well,\" she said quietly between kisses. A bit too well, I thought. \"I was worried she might be a problem. She was such a headstrong child.\" Becca moved sideways a little, and my now rock-hard dick slapped her thigh. She looked down, and smiled. \"We did get to you, didn't we? I can't believe what she was wearing. Did you see that suit?\" \n\n\"Just barely. I'd like to see you in it, for as long as it took for me to get it off and fuck you senseless,\" I suggested, grinding tighter against her. \n\nShe giggled, and shook her shoulders, making her breasts jiggle seductively. A lascivious grin from her told me I was in for a treat. She slid her body down mine, dropping into a squat that put my dick within sucking range, which is exactly what she did. A few minutes of oral attention later, she reached up and grabbed the bottle of liquid bodywash, depositing a large dollop of the slippery soap in her cleavage before she wrapped her breasts around my shaft. \n\nI remember our first night together, when I first saw the little slice of heaven that was her cleavage, and wondered what those magnificent breasts would feel like surrounding my hard cock. Somehow, we had never gotten around to finding out. \n\nNow I knew. I could not possibly have imagined a sensation so exquisite, so divine... so erotic. Becca was one of those women who have a small flat spot on their chest, between their breasts, rather than a sharp V for cleavage. That flat area provided the perfect foundation for the soft embrace my cock now found itself being lovingly held in. Firm, resilient, yet somehow at the same time soft and silky smooth, I had found another one of Heaven's branch offices. \n\nShe began to slide her tits up and down my length, causing me to groan loudly at the feeling. I leaned back against the wall, and she kept it up. She was pinching her thick nipples as she squashed her boobs together, using them as handles and torturing herself at the same time. Every time she reached the bottom of her stroke, I felt her soft flesh surround my balls, and the head of my cock popped out the top of her cleavage, only to disappear between her pillows as she came up. It was bliss, pure and simple. \n\nI had a feeling this was going to be a pretty quick finish, given all the naked flesh I had been looking at today. I pushed my hips up, meeting Becca's movements, and together we quickly found a rhythm that had me on the verge of ecstasy within a very short time. I was panting and grunting, transfixed on the sight of her jugs bouncing and rippling each time I ploughed into that heavenly crease. My thighs slapped wetly against her forearms, adding auditory stimulus to the package. I was going to blow, big time. \n\nThe countdown reached zero, and somewhere, deep in the Mission Control of my mind, someone pushed the launch button. I roared, an animalistic scream that began in my toes, and exploded. A fountain of cum shot up, deflecting off the underside of her chin. Subsequent blasts went up her neck, before running back down onto her soapy tits. I bellowed again, and continued to spew, even though her breasts muffled most of the spray. \n\nBecca looked up at me, smiling at having provided such pleasure. I leaned heavily back against the tile, trying to catch my breath, and also to keep my knees from shaking. On a scale of 1 to 10, that orgasm was a 12. She released me from her breasts, and began toying with the slimy puddle of jism that I had left. \n\nShe rinsed herself off, then helped do the same to me. I was still a little wobbly when the water was turned off, but Becca wrapped me in a towel and sat me down. A few minutes later, I had recovered enough to remove the training wheels, and finished drying myself. I threw on a pair of khakis and a golf shirt, and retreated to the living room to wait for the ladies. I had no idea what to expect from Lizzie as far as attire goes, but Becca was busy in her lingerie drawer when I last saw her, so I figured it would be good. \n\nThe first one to join me in the living room was Lizzie, and she didn't disappoint. It was a simple, conservative outfit, but on her, it was,... well... not so conservative. A snug pair of faded jeans hugged her thighs and ass with maddening perfection. On top; a plain white blouse, starched crisply, and altered to fit her midsection closely, up to just below her bustline. That's about where she stopped buttoning it, as well, so a lot of cleavage was visible. The amount of motion under the fabric, and the lack of lines on her back, made it obvious that her 34DDs were going free-range today. She had on a sexy pair of high heeled sandals, that made her legs even longer. \n\nI looked at her, and she stared back. \"So... you like my tits, do you?\" \n\nAgain, I wasn't going to answer, and again, Becca saved me, by walking in this time. I wouldn't have been able to respond anyway, because her outfit had me speechless. \n\nIt was all black, making her hair even more distinctive. Six inch stilettos gave way to fishnet stockings. A tight, stretchy skirt started mid thigh, and was shrink wrapped to the curves of her ass. Above, a lace teddy with a deeply scooped neckline was stuffed to capacity by her breasts, and sheer enough that a lot of naked flesh showed through. On top of it all, a shiny, long sleeved satin blouse was tucked snugly into the skirt, but left totally unbuttoned. The monochrome look combined with her curves and cleavage to create one very sexy package. \n\nI had never been to a VIP theatre before. Honestly, I didn't even know such a thing existed. Rather than twenty or so rows of seats twenty or so wide, this theatre was ten by ten. The seats were leather, comfortably wide, and reclined, with headrests and footrests as well. They were set in pairs, with pivoting lap tables on each end of each pair, and a retractable armrest in the middle. Bar services were available to your seat up until the movie started. There was a separate VIP lounge and restaurant, and no kids were allowed. \n\nWe had a nice little dinner together, and the ladies each had a glass of wine. Then another. And one to go into the theatre with. By the time the movie started, they were both pretty tipsy. Becca had put the armrest up, and was snuggling into me just like on the couch at home, complete with her hand gently caressing my crotch. \n\nThe movie was a chick flick, but I was enjoying cuddling with Becca. About twenty minutes in, Lizzie shivered. The AC was pretty cool, so it may have been legitimate. Becca saw her daughter shivering, and motioned her over. There actually was enough room for both of them to squeeze in on either side of me, so suddenly I had big soft breasts pressing into my ribs on both sides. I wrapped my arms around both of them, and Lizzie's shivers soon stopped. ",
        "As the movie went on, I found myself getting nuzzled more by Becca. She pulled my hand from where I had it resting on her hip, up to her breast. Once my hand was gently fondling her soft flesh, she resumed her own exploration of my crotch. To my left, Lizzie rested her head on my chest. I had my arm in a safe zone, up around her shoulders, but pretty soon, she tried to reposition it in the same way her Mother had. I resisted, but she wouldn't take no for an answer. She begged me with her eyes. \n\n\"Please? I'm still cold,\" she whispered. I had a difficult time understanding how my hand on her breast was going to warm her up, but was pretty sure it would cause an overheating problem for me. She tried again, and this time, I relented, but she had a twist, slipping my hand inside the open neck of her blouse rather than on top. I froze when my fingertips touched her bare skin, which was about as far from cold as possible. Because Becca was facing into me, and Lizzie had turned facing out, Becca couldn't see where my hand was. Now Lizzie placed her hand over mine, and squeezed. \n\nOkay. Despite my reluctance to answer Lizzie's repeated questions regarding my opinion of her breasts, I now had to admit... she had really, really, really nice tits. Every bit as spectacular as her Mother's, and my hand started to fondle her breast reflexively. Her nipples were very stiff and erect, but I'm pretty sure the temperature had nothing to do with it. \n\nI had gone from hoping this boring chick movie would end soon, to wishing I could spend forever with my hands exactly where they were ; on two pair of the most magnificent breasts I had ever seen. I massaged their globes rhythmically with each hand, and both of them started to breath a little heavier. Becca returned the favour, increasing her pressure on my cock, which was like steel. \n\nAll movies must end, eventually, and before the lights came up, both girls took a few seconds to correct their attire. We walked out, arm in arm in arm, getting a few disbelieving looks from several of the other patrons. Upon arriving at the car, Becca gave me a kiss that could have started a forest fire. I would have loved to have handed the keys to Lizzie and climbed in the back with her Mother for a rolling quickie on the way home, but both of them had consumed a little too much alcohol to drive. So, I let them take the back and drove us home like a chauffeur, listening to them gossip, whisper and giggle all the way. \n\nWe made it home without any moving violations, despite the girls' best efforts. Once inside, Lizzie headed for the bathroom, and Becca grabbed me by the belt, dragging me into our bedroom. The door closed, and she was on her knees in seconds, dispatching everything that stood between her and my dick. A few minutes of frenzied sucking followed, then she grabbed my hard cock and led me over to the bed, pushing me onto my back. \n\nHad I known there was nothing under her skirt to block access to her dripping pussy, I would likely have taken advantage in the theatre. As it was, she simply speared herself, fully clothed as it were, right up her cunt in a single thrust. \n\n\"Oh fuck, yes! Yes! YES! YES!\" she screeched, grinding herself down onto me. She then started to lift herself, slamming down hard each time. Her boobs were still covered by a layer of lace, and a layer of satin, but they shimmied enticingly, demanding to be freed. Her urgency was contagious, so I reached up with both hands, grabbed the neckline of her teddy, and ripped it open. A loud tearing noise filled the room as the fabric reached its failure point, and her beautiful breasts bounced clear. \"OH GOD, YES! RIP MY CLOTHES OFF! TAKE ME!\" she cried. The satin blouse simply pulled out of her skirt as I pushed it off over her shoulders, but the lace teddy hung in tatters around her waist. \n\nHer breasts were dancing right in my face, brushing my cheeks as I thrust up into her. I captured one nipple as it quivered past, and sucked hard. Becca moaned loudly and grabbed my head, pulling me still closer. I grabbed her ass and stood, still sheathed fully in her juicy cunt and still attached to her boob, and dropped both of us on the bed again, but with me on top this time. 'Taking her' is exactly what I wanted right now. \n\nI reared up, bracing on my arms, and driving into her pussy without remorse. We were crashing together, and her giant tits were going wild, moving in every direction at the same time. I was grunting and moaning with animal passion, but could probably not even be heard over Becca's gleeful shrieks, a combination of expletives, directives, and blissful agony. \n\n\"OH GOD YES!... FUCK MY CUNT!... AHHHHHHHHHHHHN!... YES, YOU FUCKING, BASTARD!... \" \n\nHer head snapped back, and I knew what was coming... or rather, what was cumming. Her face was bright red, and a final shuddering scream signalled the onset of her climax. She bucked, shook and twisted under me, and a pussy that had been dripping wet suddenly flowed like a high tide, oozing warm juice down her crack onto the bed. I looked down at my darling as she gasped for air, and slowly returned to a colour that was less of a match to her hair. She patted my chest. \n\n\"Off, please... I need to breath,\" she panted, recovering gradually. I could wait. Her breathing was normalizing. \"Lizzie!\" she called. \n\nThere was no response. \n\n\"Lizzie, I know you're out there, I know you're listening to us, and I know you can hear me now!\" \n\nAn unsteady \"Yes, Mother,\" came from just outside the bedroom door. \n\n\"Come in here please,\" Becca said, and before I could cover up, the door opened. Lizzie was still dressed the same as she was for the movie, but her blouse was open a bit more. She stepped in, catching a view of my cock, rock hard and slick with her Mother's juices, before I could cover myself. \n\nBecca laid there, ravaged pussy oozing, breasts bare, and clothing torn. She didn't even move to hide herself. \n\n\"Your turn,\" she laughed."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "milf",
        "redhead",
        "busty",
        "tall",
        "flirting",
        "tit fuck",
        "shower"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/telemarketing-turnabout-pt-02"
}