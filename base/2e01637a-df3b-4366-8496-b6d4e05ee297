{
    "title": "The Sultanah Ch. 06",
    "pages": [
        "Dear Reader, thank you so much for reading this story. It has taken nearly a year of my writing life to get the whole thing finished. This is Chapter 6 of 14 chapters and the total is over 250,000 words. It is my Dirk Diggler/Jack Horner act of hubris: my attempt to write an erotic adventure story that pulls you in with a story you want to read, even when there isn't any sex going on (though there is a lot of sex. Crazy, weird, fun sex). It is the most ambitious piece of erotic fiction I have ever attempted. So I hope you enjoy it.\n\nWith that said, this book is not for everyone. It will be too long for many people (no shame in that, it is a big time investment). Some of the sex scenes are intense and include themes like hermaphroditism, non-consensual activity, incest, etc. For some people, that will likely be the appeal. In fact, while this story is definitely not for everyone, I think for a select group of people this story will essentially have everything you could ever ask for. So if that is you, congratulations, you found that thing you have been searching for. You can skip ahead to the sex and I won't be offended, but I think this story is more than the sum of its parts. If you read this whole story, you will not be disappointed. \n\nIn Chapter 1, our main character, Princess Varis, finds that her father has died and that, by virtue of the fact that she is a hermaphrodite and can father a child, she is now the Sultanah. In Chapter 2, Varis unearthed a conspiracy to destroy her Empire led by Rahip, the Cardinal of the \"New Religion\" and later she received her coronation. In Chapter 3, Varis humiliated the New Religion and raised the morale of her besieged people. In Chapter 4, Varis lifted the siege through a daring midnight raid. In Chapter 5, Varis survived an assassination attempt and visited her harem.\n\nSome recurring characters you might want by name are Varis (the Sultanah and narrator), Cin (the head priestess of Gunes), Arkadas (Varis' friend and servant), Kardes (Varis' older sister), Nislani (Varis' younger sister), Rahip (a Cardinal of the 'new religion'), Duke Hain (an important lord opposing Varis), Lord Sadik (a minor lord who has spoken in support of Varis); King Sican (the leader of Dusman, a rival kingdom), Prince Lider (Sican's son); King K\u00f6yl\u00fc (the leader of Temsilci, a rival kingdom); Agiz and Got (Subordinate Sun Priestesses); Saygili (Varis' guard); Soyguncu (a pickpocket and spy for Varis); Tutuklu (the head concubine of the harem). Further, Gunes is the name of the Sun God, Tanri is the name of the 'new god.' The city where the story is set is \u015eehir in the country of \u00dclke and the Empire of B\u00fct\u00fcn D\u00fcnya. If you need more...reread the earlier chapters.\n\nPlease, please, please, please, please tell me what you think after you read this. I put an embarrassing amount of work into this and I want to know what you think. Especially if it is good things.\n\n*****\n\nChapter 6: The Tiebreaker\n\n\"That would add an additional day to the trip and would offer what? A marginal decrease in the chance of being murdered by horsemen? Why not...\" the merchant said, pointing to the map that was spread on the table that I had asked to be brought into the throne room. He spoke loudly and gestured emphatically, but Soyguncu spoke loudly over him.\n\n\"Don't be a fool, that is just one part of a larger strategy...\"\n\n\"Don't call me a fool you stupid bitch, I have been traveling around this part of the world selling salt-pork since before you slipped out of your mother's arse...:\" the merchant retorted\n\n\"Call me a bitch again and I will cut out your eye balls and shove them up your arse...\" Soyguncu responded, reaching towards her belt. Cin was sitting next to her and she placed her hand on Syoguncu's knife, preventing the meeting from turning into a brawl.\n\n\"Shut up the both of you, I need to hear about the river crossing...\" Another merchant said over the din. I was sitting on my throne looking down at the meeting below. I was slumped in the chair, my head resting on my right hand. My left was still bandaged and slightly pained from the attack two weeks earlier, but my fingers we moving easily now and it appeared to be on the mend. That, essentially, was the only good news. Certainly this meeting could not have gone much worse\n\nMy entire Inner Council was present around the table, along with my scout, Soyguncu. There were about two dozen merchants either at the table or standing around it. They were discussing, if you could call it that, attempts we had made to increase the flow of goods into the city. Soyguncu had spent weeks attempting to find circuitous routes, easily defended passes, and clever camouflaging techniques to increase safety. We had invited many of the successful merchants who traveled regularly in the city to come and discuss these plans. Soyguncu had barely begun outlining the general impact of her plan when the objections had started. Her plans took too long, they would be less safe, if successful they would limit profits, and a half a dozen other objections of varying degrees of merit.\n\n\"Let's just stay focused on this...\" Cin stated, trying to maintain order.\n\n\"What about soldiers? I thought there had been talk of escorts...\" Everyone was talking at once now. I looked out the window at the city and sighed. Food shortages had grown slightly more acute in the last two weeks as Dusman's cavalry had increased their predations. The people in the city were growing hungrier by the day. Whatever hope I held for this meeting had quickly dissipated and now I was just waiting for it to end so I could formulate a new plan. Maybe bringing in seeds and earth to grow vegetables on rooftops...I supposed there were stupider ideas.\n\n\"Varis...Varis...I mean, Sultanah Varis,\" A voice called below. The crowd was still yelling loudly at one another at their tables and the various members of my Inner Council were trying desperately to maintain order. But as I looked down I saw, at the base of my throne, Arkadas. She was holding a piece of parchment in her hand.\n\n\"Yes, what is it?\" I asked. At the sound of my voice, all discussion around the table instantly ceased. The people standing or sitting around the table all turned and looked at me. I had underestimated the weight of my authority. I could have controlled the discussion with a good deal more closely if I had exerted myself. But it seemed like a useless endeavor anyway. I needed to remove the threat posed by the horsemen, not hide from it.\n\n\"A parchment has arrived from the Kongre, the Peers have made some sort of proclamation,\" Arkadas said, looking down at the notice in her hand with a knitted brow. I felt an intense sense of unease.\n\n\"I didn't call parliament into session. How have the Peers met without me? Under what authority? Why haven't I heard about this?\" I asked quickly. Arkadas looked up at me helplessly and shrugged. I looked over towards Cin. She was looking at me gravely and nodded her head.\n\n\"Gentlemen, the Sultanah would like to thank you for coming in today to discuss these matters. She has heard your various concerns and will likely re-evaluate this plan...\"\n\n\"We have not even begin to express our objections,\" One merchant said.\n\n\"We were told we would have an hour and a half of the Sultanah's time...\" another one began.\n\n\"My friends,\" I began, laying on the charm, \"I have heard what you have said here today. What is more, I have heard beyond that, to the core problems with my plan. I assure you that I am not satisfied unless you are satisfied. I do not want this meeting to drag on when we all know this will not work. It is a waste of your time. Let me get you back in here in a few days or weeks and we will discuss a new plan, something you will like more...\"\n\n\"It isn't going to get any better than this,\" Soyguncu shot back, crossing her arms in front of her breasts. Cin shot her an angry look but I ignored her.\n\n\"Please, tell my guard that I asked that you be taken to the reception hall for refreshment. It is the least I can do for all of the help you provided,\" I spoke calmly, soothingly in order to get the men to leave my throne room. But inside I was nervous. I had been resisting efforts to call a parliament for two weeks. I did not like the composition of the Peers and was nervous about who they would select as a Prime Minister. The fact that they met and had apparently produced some sort of document was disconcerting. It was not legal, in a strict sense, because I had not called a parliament. But it spoke to conflicts rippling below the surface.\n\n\"Well, I suppose we cannot argue with that,\" said one of the older merchants, one who was ostensibly elected as their spokesman, \"We know you are busy. We thank you for your time.\" Many of the other merchants tried to argue with him, but he waved them off. Apparently, he understood how to take a hint, even if they did not. He rose from the table and started to walk from the room. Reluctantly, the others began to follow him.\n\nIn a few moments, all of the merchants had left the throne room and were in the hallway beyond, arguing with the guard about the location of their meal. I barely waited for the door to close before I was bounding down the stairs of my throne, reaching for the parchment. Cin rose also, and was walking over towards me.\n\n\"What a bunch of fucking pansies,\" Soyguncu said, jerking her thumb in the direction of the door, \"They want complete safety with hazard pay. I mean this is a war, isn't it?\" she asked.\n\n\"Not now,\" I said, completely forgetting about the merchants. I took the parchment from Arkadas hands. In a few moments, Cin, Arkadas, Kardes, Soyguncu, Agiz and Got were crowded around me as I tore open the seal on the parchment. Some of them may not have understood the significance of this missive, but they could tell that I was concerned. Once I had it open, I felt the papers trembling in my hands as I tried to read. I was almost certain that it was a notice that I had been deposed and that some faction of the Peers had seized power. I could feel the blood rushing in my ears and the words seemed to make no sense. I read the parchment aloud, so that others would hear it and be able to explain it to me if I could not control myself.\n\n\"To our most honored and rightful sovereign, Sultanah Varis I,\" the parchment began. That was a pleasant start, I had not been branded a traitor or criminal. I felt some relief, \"on this, the 12th day of Eyl\u00fcl in the year 1298, the Community of the Realm convened at the Kongre to discuss matters of Imperial import.\"\n\n\"That is good,\" Cin said, sounding somewhat relieved. Many other eyes, including mine, turned to her curiously. She smiled, \"The Community of the Realm is the technical term to describe the members of parliament when not in session. They are not defying you. They simply called a meeting of their own accord. It is somewhat improper, but it is not treasonous.\" I felt my panic subsiding slightly and turned my eyes back to the back. Once again, I read aloud.\n\n\"We herein proffer the following resolutions: wherefore, we Peers constitute the Community of the Realm and consequently have a direct stake in matters of governance and; wherefore that Realm, B\u00fct\u00fcn D\u00fcnya, is currently at war on many fronts, with many enemies and; wherefore, that war and those enemies would tax the endurance of even the most skilled and experience war leader, and wherefore the Peers care deeply for the health and happiness of our beloved Sultanah and; wherefore the Peers wish to relieve some of the burden from the shoulders of the Sultanah, and wherefore the participation of the Peers in the prosecution of the war would enhance, rather than hinder, the prerogatives of the Sultanah, and wherefore the large number of Peers makes participation in unofficial congresses or official Parliament burdensome and inefficient, be it hereinafter resolved that the Community of the Realm shall establish and create an Executive Assembly consisting of five lords elected by the Community of the Realm and led by a Chancellor selected from among there number.\" \n\n\"Those worms!\" Kardes spat angrily as my voice faded. I dropped the parchment onto the table.\n\n\"What?\" Arkadas asked, \"They made some sort of committee or something? Who cares? That is what Parliament always does, right?\" Arkadas peered around the room. She was the only one who appeared sanguine (though, in fairness, Soyguncu was still just upset because her meeting with the merchants had collapsed).\n\n\"They aren't parliament now,\" I said flatly. Even if Arkadas didn't understand, I had learned a lot in the previous months. I could smell what was happening.\n\n\"They are usurping the Sultanah's authority. They called a meeting that she did not sanction and granted themselves a chunk of her power.\"\n\n\"It specifically says they aren't doing that!\" Arkadas shot back naively.\n\n\"Of course they did! Wouldn't you say that?\" Kardes responded.\n\n\"This is because of meeting, the meeting after the assassination attempt,\" I said, looking over at Cin. She nodded quickly and then spat on the floor. \n\n\"Who signed it? Have they already elected their Assembly and its Chancellor?\" she asked. I reached down and picked up the parchment again.\n\n\"Yes, it is signed by the Assembly, though no Chancellor has yet been elected from among their ranks. Though I should note that Duke Hain's name is first in order,\" I said, reading over the bottom of the document. The presence of Hain's name suggested to me everything that had occurred. After my outburst at the meeting, the Collaborationist party had poisoned the moderate nobles into thinking I was unfit for the task. I was overburdened and inexperienced. They had couched their intent in language of concern. They suggested forming a council to provide me with guidance and support. For fear of upsetting the Loyalists (and those on the fence) they could not come out and say what they were doing. They were usurping my power. Their goal was to make me a figurehead. Over a very gradual timeline, my importance would be downplayed to the point where I could simply be eliminated. \n\nI felt a white hot rage the likes of which I had not felt since the assassination attempt a few weeks earlier. Those men had been trying to take my life, but this was not much better. They were trying to eliminate me as a political entity, to strip everything about the Sultanah that made me greater than the young woman, Varis. It was a political assassination, if not a bodily murder. I clenched my fist, but felt impotent. How could I counteract this?\n\n\"Who else has signed?\" Cin said, keeping calm now even as my rage spiraled.\n\n\"Duke Hain, Lord \u00d6rnek, Sir Sak\u015fak\u00e7\u0131, Lord Sadik, Duke G\u00f6stermelik,\" I said, growing more enraged as I went, \"Sadik and G\u00f6stermelik! I thought they were Loyalists? Were they just waiting for the right time to throw in with Hain and his ilk? Trying to get a better deal? Am I totally isolated. And who is this Sir Sak\u015fak\u00e7\u0131? I have never once in my life heard of him.\" I was essentially frothing with anger now and many of the people around the table had taken a step back. Only Cin stayed nearby. She walked closer to me and placed her hand against mine. I felt her calming warmth and my heart rate slowed slightly.\n\n\"I think you may misreading the significance of those five names and the fact they have not voted for a Chancellor as yet,\" Cin said calmly. I looked at the names again, but I was still too angry to think. How could Sadik do this to me?\n\n\"I see an attempt by the Peers to steal my throne but let me still pretend to sit on it,\" I said sharply.\n\n\"Yes and I see a shrewd maneuver to counteract that attempt,\" Cin said. I furrowed my brown, trying to discern what Cin had gleaned from the parchment. I sat down at the table and the other approached closer.\n\n\"Explain it to me,\" I said. Cin nodded.\n\n\"I agree that this is related to your accusations against the Peers after the attack. The Collaborationists are scared of being treated as traitors. And many other Peers are likely afraid as well. But if that happened all those weeks ago, then why is this parchment just coming here now?\" she asked.\n\n\"Because the Loyalists were blocking it!\" Kardes said, leaning now more closely towards the parchment. Cin smiled at her and nodded.\n\n\"Exactly.\"\n\n\"Well what happened? Why did they give in?\" I asked.\n\n\"Numbers,\" Cin said, \"My guess is that you are outnumbered now, more Collaborationists than Loyalists. Hain and his party eventually threatened to set up Community of the Realm meeting and vote unanimously to form the Executive Assembly. They only need a majority of the Peers to make a claim to speaking for them. So the Loyalists agreed to the meeting.\"\n\n\"So what, the Loyalist then just threw in with them?\" Arkadas asked, more confused than angry. But I was starting to understand what happened and the significance of the lowly Sir Sak\u015fak\u00e7\u0131. I shook my head.\n\n\"No. They realized that if they didn't show up, that the Executive Assembly would be 100% Collaborationist, but if they joined, they could get a few seats,\" I explained, my anger subsiding now. I was still facing a challenge to my authority, but I was not alone.\n\n\"Why did the Collaborationists let them? If they could just set it up anyway and have 100% of the seats?\" Arkadas asked.\n\n\"It would look like a naked power grab. Now they have the illusion of consensus,\" I explained.\n\n\"They both got something out of it,\" Cin added, \"So it happened. It is not ideal for either of the parties. And that is where we have to seize the reins here.\" I was feeling better now, the wheels were turning.\n\n\"Well then who is who?\" Arkadas asked, confused. She was looking at the names on the parchment, obviously trying to remember who they were.\n\n\"Duke Hain and Lord \u00d6rnek are Collaborationists. Hain is in charge and \u00d6rnek does whatever he is told. Basically the same can be said with Lord Sadik and Duke G\u00f6stermelik; Sadik will have two votes on the Assembly,\" Cin explained.\n\n\"And Sir...whatever?\" Arkadas asked.\n\nSir Sak\u015fak\u00e7\u0131,\" I finished for her, \"I don't know anything about him. But I imagine he is a moderate. And probably a pliable one.\" \n\n\"How do you know he is not a Collaborationist or a Loyalist?\" Got asked. I did not have a chance to answer, Cin jumped in.\n\n\"If he fit in a faction, they would have already voted for a Chancellor. And if the factions were able to install their leaders they would have chosen Dukes or someone with a name. His obscurity speaks to the fact that he is in play. He has little money or position. He appealed to moderates because he didn't choose sides. But more importantly, he appeals to the Loyalists and the Collaborationists because they think he can be bought,\" Cin said, nodding in agreement, \"I know him slightly. I think the Sultanah's assessment is correct.\"\n\n\"Well how do we buy him?\" I asked and there was some nervous laughter around the room. Now that it was clear what was happening in the Community of the Realm, the course of action was clear. Rather than a threat, this could be turned into an opportunity. An Executive Assembly run by Collaborationists would steal my power and rule in my stead. An Executive Assembly run by Loyalists would give the impression that I was sharing power and flatter the pretensions of the moderate Peers, but actually continue to grant me a wide range of motion. If I could get three votes on the Assembly, then I was in a better position than before. The Collaborationists would suffer a self-inflicted wound. If nothing else, it would make my adversaries look incompetent. They had already allowed the matter to be thrown into the air by allowing a moderate on the Assembly, now I had to make them pay.\n\nFor a long moment after my question, there was silence. Everyone was trying to think of a way to ensure that \n\n\"Why get overly cute?\" Soyguncu suggested (having now slipped seamlessly into a discussion with the Inner Council), \"Collect a lot of money and hand it to him.\" I winced and shook my head",
        "\"First of all, that is what Hain and Sadik are going to do it,\" Cin replied, \"The Sultanah is the richest person in the Empire, but her wealth is mostly tied up in non-liquid assets. Further, the resources of the various lords together far outstrip her power.\"\n\n\"Well then we need to find out what he likes that money can't buy. What sort of office does he want? I am sure Duke G\u00f6stermelik would relinquish the Privy Seal if we ask,\" Agiz suggested.\n\n\"Maybe,\" I said, feeling that the offer was weak. I wanted something that the man could not resist. An office that came with real responsibilities didn't seem to fit the bill. I needed to know more about him personally.\n\n\"Sir Sak\u015fak\u00e7\u0131...\" Kardes said, as though she was thinking out loud, \"You don't suppose his wife is the Lady Kukla Sak\u015fak\u00e7\u0131, do you?\" Everyone turned and looked at my sister. Her brow was knitted and it was clear she was thinking deeply.\n\n\"It is not a common name,\" Cin replied, \"It is likely. Why? Do you know the Lady? Would she have insight into how the gentleman might be bought?\"\n\n\"I knew her somewhat what I left here years ago when she was a trouble-making child in the city. Just one of those little girls whose father worked in the palace. I have re-acquainted myself with her in recent months, just in passing. She is often at receptions and manages to get invitations generally above her station. I was a bit surprised to find her there at first. She is of low birth obviously, but perfectly charming and, in fact, quite beautiful. However, there are rumors at court amongst the married women and widows,\" she hinted. Now she was starting to smile slyly, it was clear she had something of substance.\n\n\"What about the rumors?\" I asked, sounding only slightly less impatient than I felt.\n\n\"If what I have heard is true (and some of what I have heard has come directly from the lady's mouth), it isn't Sir Sak\u015fak\u00e7\u0131 that you need to buy,\" Kardes explained. As she spoke, so confidently, I thanked Gunes for my older sister. Who would have known someone who, so recently, had been essentially a stranger, would eventually become such a necessary ally? Who else could infiltrate the ladies of the court? I was certainly no longer welcome there.\n\n\"What do you mean,\" Arkadas asked.\n\n\"I mean that in Sir Sak\u015fak\u00e7\u0131, the Lady holds the sword. Whatever she wants, she gets,\" Kardes explained devilishly. There was no way that Hain or even Sadik would dare to approach the man's wife. It would not be seemly. But the Sultanah? Well, a visit would be an honor and totally appropriate.\n\n\"I know a little something about the woman carrying the sword,\" I said, arching my eyebrows, \"I better find out what she wants so she can get it.\"\n\n* * * * *\n\n\"Gunes be praised, the Sultanah!\" a voice said through the small crack in the door. I ducked my head slightly.\n\n\"Please my Lady, keep your voice down. I am out alone,\" I hissed at her and looked around me. I was in a part of \u015eehir I traveled to only very infrequently. I was in a small neighborhood where impoverished nobleman rented small apartments for their stays in the city. Most of the people staying here spent most of their time, under normal circumstances, outside of the city on their farms. But circumstances had driven them here, to a dead end street near the Eastern wall. The apartment buildings here were four or five stories tall and made of dully, gray stone. The street itself was only four feet wide and the apartments essentially kissed one another across the short distance. It was night now, but it would have been dark in the daylight. Garbage choked the narrow streets and I could hear rats splashing through puddles and gnawing on scraps.\n\nI had arrived at one of these small apartment buildings just a few minutes earlier. I had received a report from Soyguncu that Sir Sak\u015fak\u00e7\u0131 had left with several other rural noblemen in the direction of a tavern they often frequented. I was assured that Lady Kukla Sak\u015fak\u00e7\u0131 was home and that her husband would not return for some time. I had been waiting, in disguise, in a different tavern nearby. I had been waiting most of the day for my opportunity and I had grabbed it immediately. I had rushed to the building (the location of which I already knew), in the alley I removed my disguise (exposing my normal, elegant robe in its place), and climbed the rickety ladder from the ground floor to the landing on the third story. This was the location of Sir Sak\u015fak\u00e7\u0131's front door. As I knocked, Soyguncu was standing in the alley below and Saygili, nervous and disapproving, was somewhere nearby with a cadre of loyal guards. Just in case. But I thought it necessary to humble myself before Lady Kukla Sak\u015fak\u00e7\u0131 and to come without a formal retinue. Also, it was better to surprise someone with the Imperial presence.\n\nIt is hard to say what I was feeling then. The situation was a major threat to my Empire and to my personal power. This was the strongest move yet that my internal enemies had made against me. But I felt somehow surprisingly calm. I was feeling more confident in my abilities than I had ever had before. I had faced dozens of challenges at that point. Even though I didn't know how I would solve this problem, I was beginning to expect that I would solve them. That confidence was essential. And besides, the afterglow of my trip to the harem had not worn off completely; I still felt more relaxed. In fact, I felt like I was simply taking more pleasure in my duties as Sultanah. There was no reason for my tasks to be a chore, so long as I did them well.\n\n\"Oh dearest me, I ain't no lady!\" the woman behind the door mumbled slightly. Her face was red with embarrassment and she seemed unwilling to meet my eyes. But she had recognized me simply by my face and the sound of my voice. My reach with the people was growing, \"I am Sir Sak\u015fak\u00e7\u0131's maid and such. Well, a good deal more than that of course. I watch the little ones and I clean and I...\"\n\n\"Hizmet\u00e7i, who on Earth are you talking to?\" a more youthful voice called from behind the slit in the door. The maid looked even more flustered.\n\n\"Well it is...\"she said loudly, then remembering my injunction, \"May she just come in my Lady? I am sure you will want her to...\"\n\n\"What are you talking about?\" Lady Kukla Sak\u015fak\u00e7\u0131 asked, sounding annoyed but as though she were used to her maid's odd behavior. The maid did not respond to the Lady's question. Her mouth just opened and closed like a beached fish. I looked around the dank alleyway and smelled the putrid smell of the garbage. I did not want to be exposed to the environment long because of the danger, but more so because of its filth.\n\n\"Oh fine, if it is a woman, then let her in,\" Lady Kukla Sak\u015fak\u00e7\u0131 said in an exasperated tone. I hoped I was not causing her grief before I begged for her help. The Maid unlatched the door and opened it wider, stepping back to let me in. Light poured out from the apartment, blinding me slightly. I stepped in quickly and the door closed behind me.\n\n\"I present to you the Sultanah of \u00dclke and first of her name since the founding of the Hanedan...\" The maid began. I felt like blushing and looked to make sure the door was sealed against her noise.\n\n\"That is not necessary,\" I said quickly and the maid quieted herself. Now that I was in the apartment, my eyes began to adjust to the lantern light that illuminated it. It was a very small apartment. It appeared to be just two rooms. One room, to my left, looked like the place where the maid and perhaps a few children slept. In fact I could see at least two children lying in the bed at that time. There was a slightly larger room directly ahead of me where the Lord and his Lady slept. The apartment was much cleaner on the inside than the outside would imply, with freshly painted yellow walls and fresh straw on the floor. But it was very sparsely furnished. Each room had a bed and there was a small table in the master bedroom, with two squat chairs. A woman was sitting at one of those chairs now facing me.\n\nShe was, as my sister had stated, quite beautiful. She was, I was a bit embarrassed to note, apparently getting undressed for bed, as she was wearing only a pair of white knickers, her red corset, and a loose, opened robe over top of it. She was around 5'5 and somewhat slim (though the corset must have accounted for some of it). She had very long, brown hair that was now out of its long braid and hanging messily over her shoulders. She had large, intelligent brown eyes, a small nose, and in inquisitive mouth. Her somewhat pointed ears gave her a slightly mousy, though not unappealing appearance. Her breasts were quite large and pushed up high on her chest by her corset. Her stomach appeared flat and she had a very dramatic flair from her narrow waist to her wide hips (narrow even for the corset to account for). She appeared to have a round, full bottom and slender, elegant limbs. In short, she was the kind of beauty that was far from common, but her rise from low birth to a Lord's wife could not be accounted for solely by looks. She was not quite as beautiful as say, a member of the harem. She must've had some intelligence, some craftiness. That intelligence was apparent and enhanced her sensual appeal.\n\nHer shrewdness was apparent not only from her appearance, but also from her bearing. The Sultanah had just walked into her room, essentially unannounced. Yet, she did not look flustered like her maid. She seemed to consciously choose not to be embarrassed by the exposure of her body. In fact, she displayed no untoward emotions. She did not appear nervous or confused. She simply bowed her head slightly.\n\n\"Sultanah Varis. I cannot describe to you the honor you bring to my humble home. I wish only I had known that you were to arrive, so that I could prepare refreshments for your visit,\" she spoke slowly and with careful measure of her words. She acted as though I dropped by often and was only surprised by the hour and nature of my arrival. I admired her composure. It might be fun to see what kind of woman she was.\n\n\"You cannot be blamed. I chose to arrive unannounced,\" I said and nodded back to her.\n\n\"Regardless, I must apologize for the oversight,\" she said. For a woman of low birth, she certainly knew the manner in which a lady was expect to speak, \"And I further apologize for my husband's absence. He just left for the Two Bells Tavern. I am sure you could catch him if you go quickly.\" \n\n\"No. That won't be necessary,\" I said, leaving it at that. I decided to test the woman's intelligence, see if she knew why I was here. She smiled slightly but did not immediately speak.\n\n\"I just can't believe it!\" the Maid said, reminding me again that she was present. I turned to her and smiled awkwardly. Lady Kukla Sak\u015fak\u00e7\u0131 looked annoyed.\n\n\"Hizmet\u00e7i, the Sultanah and I have a matter to discuss. Could you please go into the children's room and ensure they stay asleep?\" she asked, clearly understanding that this was to be a meeting of some importance. I wondered if she had some inkling of what I was going to speak with her about. But I was still growing used to the idea that any visit from me was necessarily important and that people naturally expected something monumental when I arrived.\n\n\"Of course my Lady,\" the maid said after a moment. Her mouth was hanging open with a slightly as she stared at me with awe. Her voice sounded disappointed, as though she had wanted to sit with me, to hear whatever it was I had to say, even if she did not understand.\n\n\"Now,\" Lady Kukla Sak\u015fak\u00e7\u0131 said forcefully but without malice. The maid jumped slightly and then nodded again. She then turned and walked briskly into the adjoining room, \"And close the door behind you,\" the Lady added quietly. The mad did not speak again, but she kept her eyes on me with a rapt expression as she slowly closed the door. Once we were alone, I turned back to Lady Kukla Sak\u015fak\u00e7\u0131.\n\n\"Lady Kukla Sak\u015fak\u00e7\u0131...\" I began. The lady lifted her delicate arm.\n\n\"Kukla, please. You are a guest in my home, I insist on informality,\" she said, her voice sounding calm, almost soothing. I appreciated the delicacy with which she had interrupted me and for a moment I was nearly compelled to reciprocate her informality. But I remembered why I was here. It was necessary that I gain this woman's trust and informality would go some way toward that. But more importantly, I was here to impress upon her the regality of my bearing and the physical presence of my power. \"Call me Varis,\" hardly had the correct amount of gravitas.\n\n\"Kukla, then,\" I began and she bowed her head slightly to show that she was honored that I would speak to her in a familiar name.\n\n\"Thank you Sultanah Varis, you honor me,\" she said and now it was my turn to be impressed. She had taken the cue completely. Further, despite the fact that she likely had no idea why I was standing in her squalid apartment, she did not ask. She recognized my prerogative to choose when to speak. I stood in a silence for a moment and simply eyed her. I wanted her to feel the weight of my choices, to know I did what I wanted when I wanted. She stood patiently, motionless. She did not seem haughty or annoyed but also did not appear to tremble before my office. She suddenly looked even more attractive to me than she had before. I decided it was a good time to use charm rather than raw power.\n\n\"I am sure you are wondering why I have come,\" I began slowly.\n\n\"The question had crossed my mind, Grace,\" Kukla said with a sly smile. I laughed a little.\n\n\"I came to congratulate you,\" I said simply and raised my hands in a slightly before me in a benedictory fashion. For the first time, Kukla seemed a bit off-put. She crossed her arms in front of her breasts, recognized the defensive nature of her posture, and dropped her arms again.\n\n\"Congratulations Sultanah?\" she asked.\n\n\"Oh I know it has not been made official yet, but I have heard about it,\" I said. I wondered if she was playing at ignorance or if she \n\n\"I apologize Sultanah,\" she said, sounding sincere, \"I wish to accept your congratulations, as they are an honor I would never have expected. And yet, I must confess, that I know not of what you speak.\" Her eyes had fallen from mine and she looked a bit uncomfortable now. I could tell she was sincere. I laughed slightly and she raised her head.\n\n\"Oh I am not laughing at you my Lady,\" I said after a moment, \"it is just...men are so predictable are they not?\"\n\n\"I am finding little predictable of late, Sultanah,\" Kukla said, at a loss. I laughed again, this time a bit genuinely amused by her confusion.\n\n\"It appears that your husband has failed to tell you about the honor he received from the Peers this day. It is much like a man to forget something that could be of great important to his wife. He did not mention the Executive Assembly at all?\" I asked. \n\n\"Oh,\" Kukla said, realization dawning on her face. I wondered if I, and my sister, had overestimated her intelligence, \"he mentioned something about a committee to which he had been selected. He said only that it was something chosen by the Peers and...\" she stopped suddenly, realizing she had said too much. It was strange how clearly I could see this now, this little dance.\n\n\"And?\" I asked.\n\n\"And...\" she hesitated, then spoke with a sigh, \"that it did not pay any additional money.\" It was quite clear now that Sir Sak\u015fak\u00e7\u0131 had either concealed the nature of his elevation from his wife...or was completely ignorant to it.\n\n\"Your husband is too modest it would seem. A mere committee!\" I said jovially, \"He has been selected as one of only five assemblymen in the entire realm to act as my executive counselors. Your husband will rank with Duke Hain, Lord \u00d6rnek, Lord Sadik, and Duke G\u00f6stermelik. He will be making decisions that affect the entire Empire.\" Kukla's eyes began to swim. Her mouth dropped open slightly.\n\n\"Hain and Sadik?\" she asked, pinpointing the factional leaders in the Peerage.\n\n\"And \u00d6rnek and G\u00f6stermelik,\" I finished.\n\n\"My husband?\" she asked incredulously. She seemed completely dazed now but I could tell she was trying to keep her composure, to not give anything away while she figured out the nature of the \n\n\"I admit, I have had little contact with your husband. But it seems he has the respect of the Lords,\" I said, \"Think of all the other men of greater means that could have been selected. It must be your husband's wisdom that attracted the votes of the Peers.\"\n\n\"Yes, I am sure that is it,\" Kukla said wryly. Apparently she well understood the limitations of her husband and could not, despite some effort, hide her disdain for him. I could almost hear her swearing him for his stupidity under her breath. He did not understand the import of his office. But apparently his wife did. This was a coup if I could play my cards right.\n\n\"Well this is a pleasant surprise as well, not only to be able to offer you congratulations, but also to bring you the very news!\" I said with enthusiasm. Kukla nodded dreamily. But I could see the gears of her mind working; she was trying to figure things out.\n\n\"My Sultanah,\" she said after a brief pause, \"forgive me, but I must ask you something.\"\n\n\"Of course,\" I said, and now it was clear she was grasping the situation.\n\n\"I am humbled and honored that you have chosen to congratulate me on my husband's recent...elevation. But, why me? I told you where my husband had gone, you could have congratulated him,\" Kukla said. She seemed to have controlled her swoon now and she was looking at me with clearer eyes. Penetrating eyes. I felt a slight flutter and wondered what it meant.\n\n\"You would not believe that I simply prefer to bring pleasant tidings to women, would you?\" I said coyly and Kukla smiled. I wondered now the best tact. I could continue to hint at things, to play the game I had been playing. But I had already thrown her off balance. There were limits to my time and what I could achieve with winks and nudges. Now, I decided, was the time to be blunt and honest. If this wife was shrewd and intelligent, as I suspected she was, then she would appreciate some straightforward talk, just between us girls.\n\n\"Your husband is a man of little material wealth and even lesser reputation,\" I said coldly, Kukla reared back as though smacked, but did not dare contradict me, \"Duke Hain, Lord \u00d6rnek, Lord Sadik, and Duke G\u00f6stermelik are amongst the most powerful men in the land. It just so happens that two of those men, the two you named, lead the two largest factions at court. Your husband was selected, I suspect, for his pliability. The men of the Assembly do not respect, perhaps should not respect him, and so they engineered his elevation so that he could be bribed, cheaply, and used as a tool.\" Kukla's eyes grew wide and her mouth opened once, then closed again.\n\n\"I...\" she began after a long pause.\n\n\"Do not feel the need to defend him; I do not begrudge your decision to marry him. It was shrewd, a quality I appreciate,\" I said quickly, not knowing whether she actually intended to defend him or not. Her eyes flashed in recognition of the compliment. \n\n\"Hain and Sadik are going to pull out all the stops to buy your husband's vote. Hain is richer and so, if he were buying your husband, he would win,\" I finished. Kukla made a non-committal gesture with her hands.\n\n\"But those men, and all the Peers, have underestimated your husband. They did not realize that he is a mere puppet, a cipher. They did not realize that they will be trying to bribe an inanimate object. I came to congratulate you because, without your knowledge, you have earned a spot by proxy on the Executive Assembly. And to ask that you support my choice for Chancellor of the Council.\" I said finally. I crossed my arms in front of my breasts and peered forward. I watched Kukla's movements, trying to read their significance. For a moment I saw her think about denying my charge, to claim she was nothing more than a devoted wife and mother. I had stripped away her mask and she felt uncomfortable in the glare. But I saw her recognition that I had found the truth, and her respect that I had done so. After a few moments, she gestured to the chair opposite her.",
        "\"Please, have a seat. It is a humble table, but it is what we have,\" she said, with significance placed on each word that tumbled from her mouth. I started to cross the room and made my way to the chair. My body moved in a slinky way that I hadn't necessarily intended. But I could not help, it felt right.\n\n\"Well then, let's talk about what you have. And what you want,\" I said as I sat down. I settled into my chair and sat facing Kukla. I did not speak; I decided to let her speak first. And first, she seemed content to wait, but eventually, she chose to speak first, obviously a little flattered by the recognition and excited by her sudden boon.\n\n\"Well,\" she said, \"You claim that Hain and Sadik would bribe my husband with money and that Hain has more money. So you want someone other than Hain or Lord \u00d6rnek to be chancellor and you offer, what?\" she asked.\n\n\"So you are familiar with the factions then?\" I said. I had not mentioned that Lord \u00d6rnek was in Hain's camp. She was evidentially was. She looked at me thoughtfully for a moment.\n\n\"I don't think I have to pretend to be something I am not with you, is that right?\" Kukla asked, her voice sounding a bit bold, a bit fresh. But I liked it.\n\n\"No, it is welcome,\" I said, \"As for my offer...If it is just more money you wanted we wouldn't be talking right?\"\n\n\"If you thought more money would do it, you would have just given it to Sadik. You don't think you can outbid Hain and you think you can do more. Further, and I say this will due respect to your position as Sultanah and with gratitude that you have come to offer me your congratulations, flattery will not be enough. You see how we live. Money can change that,\" she said. Now I felt like I was talking to the real Kukla. She had just gotten word of what was happening and she was already seeing the angles. She was sharper than even my sister realized. I smiled.\n\n\"Well I am Sultanah, I control levers that Hain might wish he could control,\" I said archly, \"But most assuredly does not. Now.\" \n\n\"Like what?\" Kukla said, leaning forward on the table, her breasts heaving inside of her tight corset as she did so. I ignored her looks.\n\n\"Well, the position on the Executive Assembly should come with additional awards, perhaps Keeper of the Privy Seal?\" I said, using a suggestion I had received earlier. I didn't really know what I was going to offer Kukla, I had hoped she would give some inkling of what she wanted. This was just to test the waters. I knew there had to be something I could give her.\n\n\"That is a real position, with real power,\" she said.\n\n\"It is,\" I agreed.\n\n\"You think that lump of cow shit I am married to can handle that? If that is the kind of man you want in your administration, I am beginning to doubt your intelligence,\" she said boldly. No one had talked to me in that way since my elevation to the throne and I felt myself get hot. But I controlled myself, I had begun the frank exchange of ideas and I had to abide by it now.\n\n\"How about something more, ceremonial?\" I said. She looked nonplussed and shrugged her shoulders disinterestedly.\n\n\"Sure, make him Admiral of the Desert, he won't know what it means anyway,\" she said. Clearly I was on the wrong track. My instincts had been right before, I needed to drop this and get back to more fruitful ground.\n\n\"Well, what about you?\" I asked, \"After all, that is why I am here. Those others will try to bribe your husband. I want to reason with you. It is clear that your husband has been...inadequate in providing for your needs. Perhaps a little independence would be helpful for you,\" I said.\n\n\"Anything you give me that man will find,\" she hissed, \"He has only ever been good at two things: having noble blood and finding my money so he can piss it away.\" There was real bitterness in her voice and I felt my heart go to her slightly. It could not have been easy living in a place like this, with a man such as her husband, especially when he own mind was so clearly sharp. I reached forward slightly and grasped Kukla's hand. She almost pulled it back, but I held tight and she looked at me closely. \n\n\"Do not think that because I was born a Princess that I do not understand you,\" I said evenly, \"It must be difficult, to have pulled yourself up with intelligence and beauty and to have married into a noble family with an ancient name, only to find that his blue blood had worn so thin that it was lower than yours.\" I could tell as I was speaking that she was growing riled. Her cheeks grew darker and her fists clenched. I was touching a nerve.\n\n\"I have never been ashamed of who I am,\" she said fiercely.\n\n\"And I do not expect you to be ashamed. I do not blame people for the accidents of birth. How could I?\" I said and then looked down briefly, between my legs. Kukla caught the glance and I saw her sense my meaning, \"Nor do I blame a woman for doing what is necessary to survive; it is what I do every day. And it is what the men in our lives are not burdened with understanding.\" I did not know if I was striking on the right vein. She was a tough woman to read and possibly too intelligent to allow me to gain her trust so quickly. But, then again, I was being sincere. Everything I said was true, even if I ultimately hoped it would get me what I wanted. Kukla gave me a hard look for several seconds, as though she were thinking about whether or not to tell me something. Finally, she let out a low sigh and spoke.\n\n\"I know what it is to be scorned, to be on the bottom, for something you cannot help Sultanah. I don't regret that I hear what they say about you, the wives especially, at court. But you should hear what they say about me. About my idiot husband. But the thing is, what they say is true. I am of common birth. I was poor. I did fuck an idiot to get a seat at the table. But I became the woman I am from eating garbage and sleeping in streets. Those women could not live for a minute in my shadow.\"\n\n\"I don't regret...what it took to make me the Sultanah, even if they hate and resent me for it,\" I said. She nodded slowly. I watched as her eyes slowly turned toward the door, leading into her children's room. I had an idea, and I pounced, \"I just expected...I expected it to buy me some security. I exposed myself to the world, my real nature. Now you and all those ladies at court know my most private details. And I thought, once it was proven I deserved to be on the throne, that people would let me sit securely on it. But the lords don't respect me; they are trying to usurp the power that far worse Sultan's than I have accepted as their birthright. Because I am a woman. They are taking away my security.\" Kukla was listening, but her eyes were staring off as though she was thinking deeply.\n\n\"If I were a man as clever as I am, I would be in far different circumstances. I thought it meant something to be the wife of a nobleman. I thought it was a guarantee that I couldn't ever live like this again. That my children would never have to live like this. But my husband is so foolish that I cannot keep him in line. And whatever benefits he should be entitled to are denied him, because he married common street trash. He is already talking of mortgaging his property. If he dies without paying it off...my children will inherit nothing. It will all be for naught. They won't even really be considered noble.\" she said, sounding more angry than sad now. But I knew I was on the right track. I thought back to something I had heard earlier in the day. \n\n\"Are you familiar with Lady Dul?\" I asked. Kukla seemed jarred by the sudden change in my line of questioning. For a moment she seemed off balance, but then she answered me.\n\n\"Lord Dul's widow? The 18 year old girl?\"\n\n\"The heiress to the Castle of Arazi,\" I corrected, \"Lord Dul died without children. His brothers are all dead and had no children. He had no sisters. His young wife is the only possible heir. Further, her parents and brothers are dead too, though everyone involved left an impeccable name,\" I said.\n\n\"Yes, I am familiar with her situation,\" she said, become more guarded in her speech now. She could tell I was using her words, searching for a way to secure her vote. She was smart enough to remain aloof as I did so. I pressed on, back on the pursuit. I felt my heart pumping with excitement, I felt slightly light-headed.\n\n\"And you must know she is the most eligible lady in the Empire,\" I said, brushing the hair out of my face and giving her a slightly devious look. For a moment I reflected on how closely this experience seemed to mirror seduction. But she spoke again quickly before I could fully explore the idea.\n\n\"I do,\" she replied. I could tell she was starting to gain an inkling of where I was going, her eyes were growing bright.\n\n\"Since her father is dead, it is my role as Sultanah, it is my duty, and my right, to ensure a suitable marital match for the young widow. As you know, a woman, generally, cannot hold property. I, as Sultanah, must hold the castle and the lands on the Lady Dul behalf until a husband is procured. That husband, of course, would then take custody of her property.\"\n\n\"It is an ancient and honored position that you hold, father of the Empire. It is like the Lady Dul is your daughter,\" Kukla said. I saw her cheeks flushing slightly and her chest was rising and falling more rapidly as she grew excited. \n\n\"Of course, it is also customary and appropriate that the Sultan receive some consideration for his role, of in this case, her role in ensuring a prosperous match. My High Priestess, Cin, is currently negotiating with several suitors who all deeply love the lady Dul. And her land,\" I said. I had been discussing that issue, in fact, with Cin that morning well before the issue of the Executive Assembly had been raised. I had not even considered the implications of that conversation until I spoke with Kukla. It seemed my plan was bearing fruit.\n\n\"Who wouldn't love 4'7 woman weighing 400 pounds? Her mustache is most appealing,\" Kukla replied, offering me a wicked grin. She licked her lips slightly in anticipation.\n\n\"Do you believe your son would love her?\" I asked, raising my eyebrows. It seemed as though a tremor ran up Kukla's spine.\n\n\"He is a good boy. He love what his mother tells him to love. Though...it would be some time before he is ready to love a woman. He is but 10 years old. A lot can change in 8 years,\" she explained.\n\n\"Nonsense!\" I said, \"There is no reason why they cannot be wed now. By proxy of course. The boy would remain with you until his 18th birthday. Then he would go to his wife of 8 years and consummate the marriage. She will be 26 and in the prime of her life for the production of heirs. It would be morally sound and completely legal,\" I said, \"More importantly, the instant the legal wedding went through, Lady Dul's new husband would be the legal possessor of all her estates. If the new husband's father, for example, pissed away all of his own property, the boy's property would remain. It would be under my control until he turned 18.\" I could feel that I was getting close, the excitement was electric. Kukla looked the same, her eyes had an intensity that I would not have expected, even from her.\n\n\"I look forward to welcoming the young woman into my family,\" she said, her breath coming out as a whisper.\n\n\"I hear she is very pliable. I am sure she will make a fine daughter-in-law,\" I said. \"Do we have a deal?\" I extended my hand now and looked over at Kukla. Her breasts were rising and falling in her corset and her delicate hands were twisting around one another rapidly. Her hair was slightly in her eyes but she seemed to be looking past it, past me even. After a moment, she turned her head and looked toward the door where the maid had retired. She seemed to almost speak, and then she sighed.\n\n\"There are two children in that room,\" She said, and slowly turned back to face me. Kukla would never sell herself cheap; she was going to make me work for it. I nodded; I respected her for her nerve in turning down a very lucrative offer. I could walk away now and she would be ruined. But I might be also. And I had the means, so I decided to blink first. My mind flashed to another conversation I had had the previous night, this one with my sister Kardes.\n\n\"Have you heard for Sir Toprak Sahibi?\" I asked now.\n\n\"The old man, I know him well. I know of him at least. My husband used to drink with him,\" she said.\n\n\"All the better,\" I said, \"But you are not entirely right.\" I bit my lip in a manner that suggested there was more information. And, from Kardes, I knew that there was.\n\n\"How so?\" Kukla asked thickly.\n\n\"He was an old man. He is no longer among us,\" I responded.\n\n\"They are dropping like flies,\" she said, but her voice did not sound sorry. In fact, it sounded like she was practically vibrating with excitement, getting more out of me.\n\n\"He has no children or siblings. His wife is dead and she had only an old spinster sister,\" I explained. Kukla nodded slowly.\n\n\"A shame, though I suppose that is good for you,\" she said, knowing that by law his property reverted to the crown, \"he owned whole blocks of the city of \u015eehir and collected considerable rents.\"\n\n\"He told me a charming story once, about your daughter. About how when he used to come to visit your husband she would call him 'uncle' and fetch him whatever he asked. It sounds like he truly loved her and she loved him as a second father,\" I said. I saw Kukla's eyes narrow slightly and she tilted her head to the side.\n\n\"I must admit Sultanah, I do not recall...\"\n\n\"You should recall,\" I interrupted. I spoke with grave significance in my voice and raised my eyebrows as I spoke. I had, of course, heard no such story about Kukla's daughter. I was spinning a web, \"Because it was that affection that caused Sir Toprak Sahibi to will all of his property to your daughter. A document can be produced to that effect\" I said. And I truly meant \"produced.\" I would have to have Cin work on a forgery.\n\n\"My Gunes!\" Kukla said, legitimately startled this time. I saw her eyes grow wide and her chest was rising and falling rapidly. Her cheeks were red and her eyes looked almost feverish. \n\n\"Now, as Sultanah that property belongs to me. A lord cannot will away that kind of property,\" I said hastily. I saw Kukla's fall somewhat, wondering where I was going. I paused a moment longer before continuing, \"But, I am a woman and therefore easily swayed by emotional appeal. I might give into this feminine impulse and grant the old man's wish, nonetheless. I could grant property to your young daughter, as was the owner's wishes. It would be held for her until she turned 18. Then, with the value in the land increasing over time coupled with her noble name, she could essentially pick whatever husband she wanted. She wouldn't be stuck with a...lesser man.\" As I spoke these words I looked at Kukla out of the corner of my eye. I saw her twitch slightly. \n\nI was proud of myself for coming up with this plan, essentially, on the spur of the moment. I had come a long way since I had first ascended to the throne. I was no longer a child. I knew what I had as leverage and knew how to use it to get what I wanted. It was just a matter of how long it would take Kukla to agree. After a long pause, she spoke.\n\n\"You said that the land would be held until she turned 18. By whom? You as well?\" she asked. I could see what she wanted in her eyes. Greed had made her less circumspect in her words and actions. I smiled because it indicated I was very close. I suspected there was only one thing left to do and I would finish the deal. And it would not cost me a cent.\n\n\"Officially, yes. It would have to be me. Anything else would not be respected,\" I said and Kukla nodded, she could tell I was going to say more, \"But, I already have far too many properties to manage at this point. I will have to appoint someone to administer the lands, to make sure they are not spoiled before she reaches maturity.\"\n\n\"A wise and prudent decision,\" Kukla said, her voice choked with excitement.\n\n\"It could not be her father. His duties on the Executive Assembly are too important. Besides, if he were to administer the land directly, it could be counted against his property for the purposes of taxes. But perhaps...yes a legal fiction would help us here. Everyone will know that your husband administers the land, but I will put your daughter's property in your name until she reaches the age of 18. That way it will not affect the family for taxation purposes, but I will not be burdened by management. And of course, as an administrator, you are entitled to the yearly profits on the land,\" I explained slowly. The more and more I spoke, the overwhelmed Kukla seemed to be. Her entire body was trembling and she licked her lips nervously.\n\n\"Deal,\" she said quickly, almost as soon as the words were out of my mouth. It was like she was afraid I would take it all back in an instant.\n\n\"What kind of deal?\" I asked, making sure that I her completely on the hook and I wanted to hear her say it back to me.\n\n\"My son will be betrothed to Lady Dul and married to her by proxy. His land will be held for him until he can consummate the marriage on his 18th birthday. My daughter will receive Sir Sir Toprak Sahibi's land and I will administer it until she reached the age of 18th,\" She was almost salivating over the last point.\n\n\"Halfway there,\" I said. I wasn't doing this out of the kindness of my heart.\n\n\"And you will have my husband's vote on the Executive Assembly. For whatever you want, as many times as you want,\" she said, her body almost going limp as she said it.\n\n\"I will draw up the letters guaranteeing your children their inheritance,\" I said, but I looked over the table sharply now and pointed my finger at Kukla, \"But you don't get them until Lord Sadik is sitting in the Chancellor's seat. You work, and I will pay.\"\n\n\"It is already done,\" Kukla said easily, \"My husband doesn't have the balls to go against anything that I say. Hain can bribe him with every penny he has, but he can't top me.\" She spoke with so much confidence and composure that I could not help but believe here. I leaned back in the chair, catching my breath. It was over. I had won. I had outmaneuvered my enemies before they even knew we were maneuvering. I felt a sudden warmth wash over me, a feeling of triumph and also joy and the humiliation of my enemies. It was nearly orgasmic. I sat for a few moments and just enjoyed the feeling of victory. But, after a few minutes, Kukla suddenly spoke.\n\n\"You know I always liked you from the beginning,\" she said finally, and I was a bit taken aback. Part of me had forgotten she was even there. Another part of me had no expected such a candid statement, \"I always thought that smaller lords should side with the Royalty most of the time. Especially when the major magnates are resistant to the crown. Important lords hate minor lords, but a Sultanah in distress...she needs all of the support from the Peerage she can get.\" Kukla raised her eyebrows and I was impressed by how easily she had diagnosed my problem. If only more of the small noblemen agreed with her. \n\n\"But your husband disagreed?\" I said, judging from the way she was speaking, I had surmised as much. She shrugged.\n\n\"I could never figure out his distaste for you,\" she paused for a moment and lifted her hand, \"But he never liked you, ever since that meeting of the Peers at the Kule Tower the day after your father died. He sometimes mumbles some half-cracked political notions to explain his position, but they really don't add up to anything. In all honesty, do you want to know what it is?\" Kukla asked conspiratorially. She leaned forward further on the table, her breasts pressed into the rough wood of its surface. Now that the negotiations were over, I didn't need to pretend I was ignoring the beauty of her body.",
        "\"What is it?\" I asked, my voice barely a whisper. I leaned in too, my face now just a few inches from hers.\n\n\"Your cock,\" she said and my eyebrows raised. I assumed she was next going to tell me he didn't like a genetic freak on the throne. I would not have liked it, but it would not have been surprising to me. That was the impression I got from most of the Peers. Instead, she said something entirely different, \"My husband said that the Priestess of Gunes proved that your cock worked. I think he resented it. My husband claims he had a riding accident right after our youngest was conceived. I think he just can't get it up anymore because he drinks himself into oblivion most nights. Regardless, his cock no longer works. He is jealous of you,\" she explained, her voice growing thicker and sultrier with each syllable. Her breasts were essentially heaving on the table and I could see her pink tongue looking fat against her teeth as she spoke.\n\n\"How long has it been?\" I asked, then a moment later, \"Since he was injured?\"\n\n\"Years and years,\" she said, letting each word drip with meaning.\n\n\"That is a very difficult thing for a faithful wife...\" I said, raising my eyebrows.\n\n\"For all his faults...always faithful,\" she said. We looked at each other across the shabby table for several minutes. I could feel the blood coursing through my body. It seemed like Kukla was growing more and more attractive by the moment. The air was filled with the scent of her body, delicate and sweet. Finally, without really thinking what I was going to say, I spoke.\n\n\"We have talked a lot tonight about what I could do for your children and I am very happy with our agreement,\" I said, \"But lady, as a boon, is there anything that I can do for you?\"\n\nIt was like my words had provoked something, something that I had hoped to trigger without even knowing it. As soon as the last sound slipped from my lips, I heard Kukla let out a low groan. She stood quickly, knocking her chair back on the floor. She walked quickly and elegantly around the table. As she did so, she let her loose robe slip from her shoulders and fall onto the into a pile, she stood before me now wearing only her tight corset and her white bloomers. Though, \"stood\" would be an incorrect characterization. She moved quickly around the table until she was in front of me. \n\nWithout pausing she dropped down so that she was sitting in my lap. It was a bit of a surprise and I let out a little yelp. She was slightly taller than me and not so small that she could easily fit in my lap and I instinctively wrapped my arms around her to keep her from falling. I could feel her tightly packed flesh and the heat it gave off through the silky fabric of her corset. Her ass fell warm against my lap and her silky leg felt smooth against my own. Her large breasts were essentially pushed into my face and she was looking down at me, her eyes fluttering.\n\nShe continued to move decisively before I could even react. She bent her head down and, at the same time, reached her right hand down and grasped my chin. She turned my head upward, facing toward her. I looked into her shimmering eyes and could see her white teeth smiling between her thick lips. Her eyes closed and she leaned forward. Instinctively, my eyes closed as well. A few moments later I felt the long, loose strands of her hair as they cascaded over my face. Shortly thereafter I felt a warm pressure against my lips. I felt Kukla's lips part slightly and sensed the shivering warmth of her thick tongue as it played across my mouth. I opened up to receive her and I felt Kukla's tongue plunge into my mouth. I pushed my own tongue out as well, rising to meet hers. I could taste the sweet, rough sensation of her tongue and I could hear her moan slightly as she tasted me.\n\nThe sound seemed to wake me slightly. What was I doing? How had this even occurred? I suppose we had both felt it in the negotiation. It had been building towards something. But, I had assumed, it was the excitement of meeting an intellectual equal and attempting to come to a mutually agreeable contract. But there had clearly been some kind of undercurrent that we had both been riding. In fact, it had almost felt natural when she had come across the table and kissed me.\n\nBut this wasn't right. The name Sultan Zina II flashed into my mind briefly. I could not remember the entire story that I had learned from my tutors as a child. But I remember that he had been deposed and executed by a mob of peers led by his younger brother. He was accused of, among other things, seducing the wives and daughters of the nobles and turning them against the throne. In fact, he had allegedly seduced his sister-in-law, the act that ultimately pushed his brother into the arms of the conspirators and ended his reign. This was a dangerous act I was engaged in, tampering with the marital vows of my Peers.\n\nBut even as I thought this, I felt Kukla's left hand snake down into the neckline of my robe. I felt her warm fingers press against the taut flesh around my clavicle. The tips of her fingers felt soft, but firm. I felt her hand slipping inside of my robe, pressing against the flesh of my chest and then rising up as it slipped across the swell of the top of my breast. A moment later, Kukla's finger's gently pressed against my already hardened nipple. I groaned and squeezed her tighter. Any ideas I had about the impropriety of my actions or the danger they posed were quickly whisked away. Her husband was an impotent fool. She was a strong, desirable woman. They had no love match. She deserved this for her years of neglect and I deserved it for giving her everything she wanted. I kissed her more deeply now.\n\nI kept my left hand wrapped around her back. She was sitting in my lap somewhat sideways, her legs facing perpendicular to my own. Her body was twisted to face me. Her hand was still slipped, somewhat awkwardly, into my robe. Her hand had moved down entirely now so that it wrapped lovingly around my breast. I could feel my nipple pressing into the flesh of her palm and she was rotating her hand slightly. She was still looking down at me. I opened my eyes now slightly and I could see her face just above me, gazing at me with a fiery, sensual glare. I lifted my right hand up and slipped in around the back of her neck. I pulled her down closer towards me.\n\nOur lips pressed more firmly together and I could feel her body tremble at my touch. Our lips opened together now and I could feel Kukla's tongue eagerly exploring my mouth. I felt its hot thickness slipping around my teeth and pressing against my own tongue. I felt my mouth fill with saliva and I could feel her pulling it into her mouth, tasting me. Her tongue moved in and out of my mouth languidly, touching me all over. \n\nShe moved her tongue at the same time she rubbed at my breast. Her fingers now became more responsive. Instead of just running her fingers across my nipple, I felt her take my little node of flesh and rub it gently between her thumb and forefinger. It felt like there was a string attached from my nipple to my cunny and my cock. Every little movement seemed to pull on them, making me more and more excited. My body felt warm all over and I found it hard to keep from fidgeting on the chair. I heard myself moaning loudly now into Kukla's mouth. I pushed my tongue into her mouth, trying to grab some more of the sensation. In response, it seemed, Kukla broke our kiss. She was still looking down at me, her hair (now shaken totally loose) draped around us. \n\n\"Ohh,\" she said, her voice taking on a naughty air, \"I had almost forgotten what that was like.\" As she said these last words, her eyes darted down slightly. For a moment I was not sure what she was talking about. But I could feel pressure in my lap and I realized that she felt it as well. I smiled up at her, keeping my hand on the back of her neck and rubbing it gently. She was still rubbing my breast as we spoke.\n\n\"Do you remember what a real cock looks like?\" I asked in a heavy voice. Kukla smiled mischievously.\n\n\"I think you'll have to show me,\" she responded slowly. Then she carefully slipped her body off of my lap so that she was standing. She immediately dropped down to her knees on her floor. Now I stood quickly. My robe was not so loose that I could completely conceal my hardened cock. Not that I wanted to. But Kukla could see it poking through the fabric. She reached up quickly, and placed her palm against it. I felt the blood rushing in my ears and my heart seemed to seize. I moaned loudly. Then I quickly reached my hand down and pushed her away.\n\n\"Not yet,\" I said and she giggled in a way that I would not have expected from such a serious woman. Once she settled back down onto the floor, I quickly began to slip from my robe. I had taken to wearing nothing underneath of my robes of late (it did not seem necessary) and after just a few twists and pulls on my clothes, I was standing naked before Kukla. My skin felt cool in the drafty apartment and as I looked down I saw my nipples were hardened, my breasts looked high on my chest, and there were goosebumps on my smooth belly. But if Kukla too any notice of that, she hid it well. Instead, her eyes were glued to my erect cock. My balls were hanging heavy between my legs and my cock seemed to be sticking out directly forward, like it was pointing at Kukla. I could practically hear her mouth watering and she didn't seem to be blinking. It really had been a long time.\n\n\"People have told me all my life that I walk around like I have a big set of balls,\" she said in a dreamy voice, \"I always joked that I was too pretty to have balls. I was, obviously, mistaken. Sultanah, you are beautiful.\" Kukla spoke in a hushed tone, one that seemed to indicate real reverence for my body. I felt my cheeks grow red as I could feel her sincerity.\n\n\"Thank you,\" was all I could manage to stutter. I spoke as I was sitting back down in my chair. The rough material felt slightly uncomfortable, in a good way, on my bare ass. My cock was now pointing up, between my breasts and no longer directly facing Kukla. She looked a little disappointed, inching a little closer toward me on her knees.\n\n\"May I...\" she said after a short pause, \"May I accept my boon?\" I looked down at Kukla on her knees, her face looking placid and beautiful, her cleavage heaving in her tight corset. I could barely speak, but I knew that I had to.\n\n\"You may take what is yours,\" I said finally. Kukla smiled and inched slightly closer to me. I felt her knees press against my toes on the floor. She reached up slowly and her hands eventually rested on my knees. Her skin so welcome against my own that just her touch was enough to make me groan. I felt a gentle pressure as Kukla spread my legs open slightly. I felt her body push between my knees. In a moment, she was completely between my legs, my thighs touching her arms. Her breasts were only an inch or two from touching my balls and I felt my cock twitching in anticipation.\n\n\"I hope I have not forgotten how this is done,\" she said slyly. As she spoke, she lifted her left hand from her side. She draped it over my leg so that my thigh was resting in her armpit. Then her hand snaked up over my leg and I felt her fingers slip around the base of my cock. Her grip was delicate but firm and I shivered at her touch. After a moment, she pushed down slightly with her hand. I felt her fingers press deeply into my scrotum, touching my aching balls. The skin of my cock, already taut from my erection, stretched hard against my flesh. I shifted somewhat uncomfortably on the chair.\n\n\"It is a pretty cock Sultanah,\" Kukla said. My eyes traveled up from my own cock and stared into her face. Her lips were glistening with saliva and her hair was pushed seductively over her eyes. She bit her lip slightly and her unobscured eye winked at me slightly. I heard her take a slight breath and her head dropped quickly into my lap.\n\n\"Oh Gunes!\" I screamed an instant later. I could hardly believe what I was feeling. In an instant, Kukla had taken my entire cock into her mouth! She had essentially slammed into her mouth without a second thought. I could feel the warm pressure as it pressed against the back of her throat. I felt her gag instantly and her throat seemed to close tightly around the shaft of my cock, holding me tight in a particularly wonderful way. \n\nKukla's eyes were opened and she was staring at my stomach and I could see tears developing. I expected her to pull my cock out of her mouth and let it slip along her tongue, as other women had done in the past. In fact, I was looking forward to the sensation. I was surprised, instead, when I felt Kukla's fingers start to dig deeply into the flesh around my knee. Her body stayed still. Only her head moved. But rather that pulled back, Kukla pushed farther. She drove my cock deeper and deeper into her throat. I felt the tip of my cock bouncing hard against the back of her throat over and over again as she tried to push it farther and farther. \n\nHer throat was making a loud clicking noise in Kukla's throat as she continued to bounce the back of her throat up and down on my cock. Her eyes were streaming with tears now. What's more, all the while she was gagging continuously. Her throat seemed to get tighter and hotter around my hard cock. But rather than stopping this seemed to make her push harder and faster. \n\nThe entire time she was moving, I could hear and feel her humming slightly. Even about the clicking sound of her throat, I could hear was sounded like one long moan. This moan seemed to send vibrations throughout my entire body. I could feel the tingling sensation all the way up at my nipples. They grew harder and more sensitive. So sensitive that just the mild breeze from the drafty room seemed to tickle and excite them. I wanted to reach up and play with my nipples, but I was too mesmerized by Kukla's actions and the intense sensations that followed them.\n\nI soon became aware of another sensation. Kukla's constant gagging had apparently been filling her mouth with a thick, viscous saliva. I could feel it dripping out of her mouth and dribbling down her chin. It was pooling in a warmish puddle on the chair, just below my balls. If this bothered Kukla, she didn't show. But the added lubrication seemed to help push my cock harder and more rapidly into her throat. And it made the intense feeling her touch against my cock more smooth, almost velvety.\n\nAfter several minutes of fucking Kukla's throat, she finally pulled back slightly. The clicking sound stopped. Her lips slipped slowly up my shaft, her tongue running up the length of it as she did so. The pounding pressure on the tip of my cock slowed and I enjoyed the slippery sensation of tongue against my flesh. I heard her take a deep, gasping breath, catching up with what had been lost while she'd repeatedly taken my cock in her throat. Kukla's thick saliva slipped out of the corner of her mouth and dripped down the length of my shaft. I was surprised by how much spit there was, and how thick and warm it felt. \n\nKukla seemed to notice it as well. A little more than just the tip of my cock was still in Kukla's mouth. Her eyes were still watering and she looked up at me from my lap. They looked so big and glassy as she stared up at me. Then I noticed a suddenly sharp, but not unpleasant, pressure on the tip of my cock. I heard a strange slurping noise. I looked down and I could see the thick saliva that Kukla had pulled from her throat was quickly slipped up my shaft! The slurping noise and the pressure grew more intense and I realized that Kukla was sucking her saliva back into her mouth. Her spit felt cool and deliciously dirty as it pulled in big ropes up the length of my cock. I moaned loudly and felt my body slump in my chair. After a few moments, Kukla had successfully pulled a large amount of her spit back into her mouth, though some of it still pooled in the hairless area at the base of my cock and dripped down my balls.\n\nDespite my expectation that she would stop and rest for a moment, Kukla was instantly acting again. Her mouth was now full of thick, soupy saliva and her lips were wrapped around the base of my cock. I felt my head swim and had a strange, crawling feeling in my lower back as Kukla began to swirl her tongue around the tip of my cock. Her tongue was very knowing, probing my most sensitive areas and slipping around on my foreskin. The saliva seemed to lubricate and quicken her actions as well as add waves of touch and sensation that wouldn't have been there otherwise. The whole while, Kukla was continuing to hum slowly, sending vibrations through her tongue and even through the saliva. My hands quickly gripped the armrests on my chair and I sucked in breath quickly. My nipples felt harder than ever but I was too afraid to grab them, too nervous that I couldn't handle the additional pleasure. For a few minutes, I just let Kukla lick and suckle on my cock, the tension growing greater and greater each second. I was suddenly overcome by the need to make noise.\n\n\"Oh Gunes,\" I moaned instead, \"I see how you managed to marry a nobleman!\" I was not sure where the observation came from and I wasn't positive that it was an inoffensive remark. But the thought had suddenly occurred that her undeniable skill in the bedroom could have explained her rapid social rise.\n\nKukla stopped moving for a moment. I whimpered as my eyes shot opened. Kukla still had the tip of my cock in her mouth but she was not long sucking, no longer humming. Her eyes looked sharper now and it looked like there was the barest hint of a smile on her face. Her mouth opened and the thick saliva dropped in a large, slippery blob onto the tip of my cock. It poured down over the tip and ran, warm and slippery, down the length of my shaft. I felt a shiver run down my back as the saliva dripped down around my balls and pulled with the other spit and cunny liquids pooling on my chair.\n\n\"I did what aristocratic girls wouldn't,\" she said simply, more saliva drooling from her mouth and landing on my cock as she spoke. As though that were a signal, Kukla once again drove her head down between my legs. In a fraction of an instant, I felt my cock pressing into the back of Kukla's throat, my balls pressing against her chin, and her warm mouth wrapped around my shaft. I breathed in quickly, having forgotten how intense her actions could be.\n\nKukla continued in this manner for some time. She would bounce my cock against the back of her throat, gagging and choking but not stopping. The room was filled with the clicking sounds of her throat and the humming she continued to provide. Saliva poured from her mouth and dripped onto my body and her hair had become somewhat wild. Every once in a while, Kukla would stop to catch her breath and pull my cock from her throat. She would suck up all the loose saliva and bath the tip of my cock with her tongue. The room smelled heavily of our arousal. All I could do to control myself was hold on tightly to my chair. I could barely think, I could only moan and feebly attempt to keep my balance.\n\nI don't recall how long this occurred or how many times my cock re-entered the noblewoman's throat. But however long it last, the ending was spectacular. I could feel the tension building inside of me and it seemed to grow exponentially each time my cock slammed into the back of Kukla's throat. The entire length of my shaft felt buffeted by thick, warm saliva. I was groaning loudly and I felt my muscles tightening. Each thrust of my cock seemed to tick up the tension, like a watch being wound. Finally, Kukla pushed my cock all the way into the back of her throat and then sort of shook her head back and forth, rubbing her tongue roughly against my shaft and causing herself to gag harder than before. The pressure this placed on my cock was all I could handle.",
        "\"Oh fuck Kukla, Gunes!\" I moaned loudly. My hands shot up from my sides, grabbing onto Kukla's head and pushing, keeping my cock buried just where it was. I felt my body grow extremely tight and all thoughts outside of my immediate discomfort completely disappeared. My eyes slammed shut and my anus tightened. I felt a sudden, jet-like burst between my legs and I felt a tingling, numb, warmth spread down from the tip of my cock. Is moved rapidly down my shaft and then seemed to spread out all over my body in every direction. Wherever this sensation spread the muscles seemed to relax instantly. I felt the air go out of my lungs as my body grew limper and limper. The only other physical sensation I was aware of was the feeling of hot, pent-up seed pouring from the tip of my cock and spraying into Kukla's mouth.\n\nAfter a few minute or so, the warming relaxation from my orgasm spread to my arms as well. The muscles grew limp and my fingers fell from the top of Kukla's head. Instantly, her mouth pulled back from my cock and I could hear her breathing deeply from her nose. I looked down at Kukla. Her eyes were slightly red and running, her face was flushed, and there was a slight smile on her face. As her lips slide up the now-sensitive shaft of my cock I saw big globs of saliva and seed pouring out of her mouth and dripping onto my body. Even then, the last few tremors of my orgasm were working through my body, putting a last bit of seed in Kukla's mouth. Finally, her mouth completely slipped from my cock and more of the seed and saliva mixture poured from her mouth in a large glob. It landed wet and slippery on my cock. I looked down at it and saw that it was literally dripping with the juices that Kukla and I had deposited on it.\n\n\"Oh Gunes,\" she gargled around the remaining liquid in her mouth, I forgot how much I love the taste of fresh seed!\" Kukla's eyes were enflamed now though less watery. We were both gasping for breath and smiling at one another. The room smelled heavily of my seed, but I could sense something else well. The smell of Kukla's arousal was distinct, a savory aroma. Her breasts were heaving in her corset and she looked wild with excitement. She had leaned back slightly and spread her legs. I could see a patch on her bloomers where they covered her cunny and they were sopping wet, nearly see-through.\n\n\"Oh my lady,\" I said coyly, \"It has been years for you. However much you like my seed, I am sure you need more than that.\" Kukla bit her lower lip, fluttered her eyelashes, and nodded.\n\n\"Yes Sultanah, I need it bad,\" she said. I patted the table in front of me and gestured with my chin.\n\n\"Have a seat,\" I said. I turned now so that I was facing the table. My cock was softening slightly now and it fell onto the hard wooden chair between my legs. There was a thick pool of saliva and seed there and my cock rested in the cooling liquid. I was ready to give rather than receive.\n\nKukla did not require any additional orders. She quickly rose from her place on her knees and moved over toward the table. She hoisted herself up onto the solid furniture, turned while she did so and placing her ass down on the table top. She adjusted herself slightly and, in a matter of moments, she was sitting on the table, facing me directly in my chair. Her knees were nearly touching my shoulder and from that close spot, the scent of her cunny was even more acute. I felt my mouth watering.\n\n\"Let's get these off,\" I said, my voice sounding thick. I reached forward slowly and slipped my fingers into the waistband of Kukla's bloomers. Her skin felt incredibly smooth and deliciously warm and I felt her shake a little at my touch. She lifted her ass up off of the table and allowed me to easily slip her bloomers down and drop them on the floor. \n\nKukla spread her legs wide now and inched closer to the edge of the table. I could actually feel the warmth coming off of her cunny now and it was dripping fragrant juices onto the table. I looked down at her cunny and saw that it was tight, red slit with a tiny, hard clitoris. Her cunny was shaven clean in the growing fashion of the day. Her skin seemed to glow with sexual energy. I licked my lips and wanted nothing more than to drop my head between Kukla's legs and taste her sweet body. In fact, I started to lean forward. \n\n\"Oh Sultanah, please give me what I need,\" Kukla whimpered. It felt good to hear her begging for me, but it suddenly reminded me of who I was and what I was doing. I was the Sultanah. No matter how much fun I was having with this skilled woman, she was still beneath me socially. There was no shame in sleeping with a woman below my station, but I could not bow my head between her legs. I sighed deeply, realizing that the interplay between my responsibilities and my pleasures never seemed to become less complex.\n\nNonetheless, I had promised the lady pleasure and I still desperately wanted to provide it. I leaned forward now but kept my head up. Kukla raised her arms and drew them about my body. I lifted my hands as well. My left hand snaked around Kukla's back, pulling her close. The other, dropped between Kukla's legs. My hand felt the humidity of Kukla's cunny and I could feel her body trembling around me. I looked up and saw Kukla's eyes looking down at me, agitated and desperate. They darted back forth from my eyes and down, trying to see between her legs.\n\n\"Yes...\" was all she managed to whisper. I moved my fingers forward and felt the tips press into the warm, wet flesh of Kukla's cunny. The noblewoman groaned loudly and I felt her shiver. Involuntarily it seemed, her hips rocked slightly. I drew my fingers up and down Kukla's slit, letting my fingers slip slightly inside of her body. Kukla groaned loudly now and her hips grew more insistent. I moved my fingers up to the top of Kukla's cunny, finding her aching clit with the tip of my finger.\n\n\"Gunes fuck me!\" Kukla groaned in the back of her throat and her body instantly grew tense in my arms. I smiled, after all I was Gunes' representative. I circled my index finger slowly around on Kukla's clit. I teased her slightly, never moving as fast or as hard as her hips seemed to indicate she wanted. I heard her sighing and felt her body growing more and more agitated with each movement.\n\n\"Patience Kukla,\" I said, adding to the tease.\n\n\"Fuck patience, it's been years,\" she said, her voice sounding more like the street girl she had once been than the noblewoman she now was. I liked it, \"I can't...\" she started, but didn't go further. Instead I felt her push away from me slightly, sitting back a little on the table. I was confused at first, but I kept my fingers circling Kukla's dripping clit. Kukla's hands flew to her chest. Her tight corset linked in the front and her expert fingers rapidly unhooked the clasps. While I continued to play with her cunny, Kukla tore her corset from her body and threw it to the side her room. \n\nKukla's skin was slightly was slightly red from the corset's pull, but I was shocked to see how little she seemed to need it. She likely wore the corset because it was fashionable, but even without it her body remained tight. Her breasts stayed high on her chest, perky and alluring. Her stomach was flat. And her hips flared out dramatically from a narrow waist. As soon as her body was free, Kukla took a deep breath, smiled and leaned back towards me.\n\nAs she moved, Kukla's breasts were now only a few inches from my face. Her skin smelled of flowers and sweat and it made my head swim. Her nipples were long and a dark reddish color, similar to the color of her tight slit. They were incredibly erect from her arousal and moved towards my lips as Kukla's breasts bounced slightly from her motion. My mouth watered. \n\nIt would be improper for me to lick Kukla's cunny, but I didn't see any problem with tasting her breasts. I closed my eyes and opened my mouth. Kukla knew exactly what I wanted and she carefully maneuvered one of her beautiful nipples towards my hungry mouth. I felt the silky, hard skin press against my lower lip and then pop easily into my mouth. My lips closed around Kukla's nipples and I tasted her salty flavor. I rolled her nipple around on my tongue, feeling its pleasant density. The smells of Kukla's body filled my nose and enhanced the experience. I began to suck on Kukla's nipple, pulling her in to me closer.\n\nWhile I was beginning to provide attention to Kukla's beautiful breasts, I decided to stop teasing her as well. I turned my palm up slowly and carefully inserted my index finger in Kukla's tight cunny. She let out a gasp and pulled her legs farther apart, willing me to enter her further. She was so wet that my finger rapidly entered her. Her body was incredibly tight, squeezing my finger to the point it felt like the blood had been cut off. Once I reached the point where my finger knuckle was entering Kukla's body, I pushed my thumb hard against her hard clit. Kukla's body went rigid and her nipple shook in my mouth. Kukla groaned loudly.\n\n\"Oh Sultanah, that is so good!\" she moaned, her hips pressing into me and begging for more. Kukla leaned forward against me, pressing her nipple more firmly in my mouth. She wrapped one of her arms around my shoulder, pulling me in closer. I felt my chin and nose sink into the soft, velvety flesh of Kukla's breast. I sucked on her nipple harder. \n\nWe stayed in that position for a long while. I kept my index finger quickly but gently massaging up against the inside of Kukla's cunny. At the same time, my thumb circled her clitoris, staying wet from the overwhelming deluge of juices form Kukla's cunny. My free arm was wrapped around Kukla's body, holding her close while I sucked on her nipple. Occasionally, Kukla would release my head and I would switch between her nipples, giving equal attention to both. Kukla's arms and even her legs were wrapped around me and her body was shaking like a leaf. The room was filled with the sounds of my slurping tongue and Kukla's restless moans. I could smell nothing but the overwhelming power of Kukla's cunny as it grew warmer and wetter. I could feel myself growing more and more aroused as we rocked together, my cock becoming hard once again. \n\nThe longer we stayed in this manner, the faster we moved together. I could feel we were building to something, I knew that Kukla was in desperate need of release. Her breathing was growing more ragged and her motions were become even more erratic. I could hear her almost chanting something under her breath and every time her eyes opened they looked nearly crazy with desire. Finally, I was almost certain she was about to cum. She threw her head back, her body went still.\n\n\"Oh Gunes, I need more!\" she moaned, \"Sultanah, fuck me!\" I had not expected her to say that. What's more, I had not realized how badly I had wanted to hear her say that. In an instant I had slipped my arm from around Kukla's waist. \n\nI desperately wanted to get my cock inside of her and I pushed back slightly from the table. Kukla pushed back as well and her nipple popped from my mouth. Finally, my finger slipped, white and squeezed, from Kukla's cunny. I stood up rapidly and my hands flew to Kukla's waist. I felt my fingers sink slightly into her warm flesh and I pulled her ass quickly to the edge of the table. Kukla leaned back slightly on the table, her lips curled in a devilish smile and her breast splaying out delectably across her chest. I looked down at my cock. It was still absolutely coated in Kukla's saliva and my seed. In fact, large globs of the thick liquid were dripping off of the tip and splattering onto the flood. I looked down at Kukla's wet cunny and bit my lower lip. I moved forward slightly\n\n\"No don't!\" Kukla said suddenly. I stopped, very confused. I looked up at her and her eyes were wide, almost as if she were afraid.\n\n\"But...\" I started to speak, backing away slightly.\n\n\"I know what I said and what...we want,\" she said her face now red, \"But I am still fertile. My husband no longer comes to me...If I am with child...her would know.\" She said. Like me, she never allowed herself to be completely carried away. I respected that, even if I was very disappointed now.\n\n\"I understand my lady,\" I said disappointedly. My hands moved from Kukla's waist and I backed away slightly. Kukla shook her head and gave me a sensual, mischievous look.\n\n\"Don't go away Sultanah. I didn't mean stop entirely,\" she said coyly. She slid off of the edge of the table, her breasts jiggling slightly, \"I discovered a method of maintaining my virginity, back before my husband. When I was trying to snag a nobleman but still trying to have a little fun.\" She responded. As she said that, she turned around and leaned forward. She pressed her breasts down against the tabletop and leaned up on her elbows. Her ass rose high in the air.\n\n\"Put it in my ass Sultanah,\" she said, her voice nearly breaking with desire, \"I always came better that way anyhow.\" I looked down, somewhat surprised at the suggestion, at Kukla's round ass. Her ass was a heart-shaped expanse of tight, olive colored skin. Both cheeks were perfectly rounded and it seemed she had no blemishes. Her legs were in such a position that her ass cheeks had pulled apart. Her little asshole was a small, red bud in the center. I saw that it was glistening in the low candle light of the room. Juices from Kukla's cunny had dripped down over it while she was sitting on the table and filled in the little folds in her anus. My mouth was watering and any disappointment I had felt Kukla's earlier refusal was replaced with a ravenous hunger for her body.\n\n\"That's almost better,\" I said and I lifted my hands and squeezed my breasts slightly, to heighten my excitement.\n\n\"I am ready for you,\" Kukla whispered huskily. As she spoke, she reached back with one of her hands. She pulled her cheeks farther apart with three of her fingers and pressed her index finger against the glistening red bud. She pushed lightly and her asshole gave way easily, the tip of her finger slipping inside. She moaned slightly and moved her hand back to the table. Her demonstration had been clear, she was already warmed up.\n\nI stepped forward and placed my hands on Kukla's hips. I allowed my fingers to briefly dance across the soft expanse of her ass before holding firmly with my right hand. With my left, I reached down and grabbed my cock. It was still slippery with spit and seed and my fingers squished around the hard flesh of my cock. I stepped forward slightly. I groaned loudly as I felt the sensitive tip of my cock press firmly against the bud of Kukla's anus. She groaned as well and pushed her hips back.\n\nI felt a slight pressure for a long moment and my cock bent slightly at the pressure. I could see Kukla's legs shaking and she was moaning loudly. I wondered for a half second if perhaps she was too tight or if the tip of my cock was no wet enough. All of the sudden, I felt Kukla's asshole unclench (I hadn't even realized she'd been holding it). The pressure instantly released and I felt the warm tightness of Kukla's asshole wrap around the tip of my cock.\n\n\"Oh fuck, its been too long!\" Kukla moaned.\n\n'\"Gunes you're tight,\" I said at the same time. She laughed as she heard me. But I had not been lying. Just as Kukla's cunny had squeezed my finger, I now felt her anus squeezing tightly around my cock. But Kukla's asshole and my cock were so wet with our juices that the tightness didn't seem to matter. It was as though I didn't even have to move, Kukla's asshole just started sucking me into her. I felt my cock slipping inch by inch deeper and deeper into Kukla's asshole. If she felt any pain or resistance, she gave no indication to me. In fact, she writhed on the table and moaned lovingly as my cock disappeared inside of her tight ass. After just a few seconds, I felt my balls pressing against Kukla's cunny. I saw a small amount of seed and saliva squeeze out of Kukla's asshole, it being too tight inside for all of our juices.\n\n\"My god Sultanah, that is so good!\" she groaned. As she spoke she rotated her hips slightly, letting my cock roll around inside of her body. There was a slight pinch as she did so; it was so tight inside of her. It felt like soft, warm hands were squeezing around the length of my shaft. Kukla's insides seemed to roil, like they were trying to milk my cock. I whimpered at this feeling and moved my remaining hand to Kukla's waist to keep my balance.\n\nKukla now popped her hips back slightly and I knew exactly what she wanted. Every inch of her body was screaming \"fuck me.\" My legs felt like jelly and I could barely breathe, but there was nothing in the world I wanted to do more. I sunk my fingers into Kukla's flesh for balance and spread my legs slightly. I pulled my hips back a small amount. I felt a release of pressure as a single inch of my cock slipped out of Kukla's anus.\n\n\"Oh that is it, now back in Sultanah please!\" Kukla moaned. I quickly obliged, as I knew she had been waiting years for this. I slammed my cock back inside of her, feeling tighter than ever before. Kukla squirmed on the table and she wailed like a whore. I pulled my cock out two inches and then plunged it into her again and Kukla seemed to grow even more desperate. Kukla reached both hands back behind her, allowing her breasts and face to lie directly on the table, and pulled her asscheeks apart so I could sink into her even deeper.\n\nEvery time I moved, I pulled my cock farther out and slammed it in harder than before. Soon I was simply leaving the tip in before slamming my cock all the way home. Kukla wriggled and screamed and seemed to have given herself away entirely to feeling pleasure. I could move at ease now, despite Kukla's tightness. She was ready to take everything I could give. Neither of us could keep up with this level of sensation for long. As I fucked her harder, my large balls began to swing forward as I thrust in, slapping at Kukla's cunny and teasing her clit. Kukla was nearly in tears from this pleasure.\n\nJust a few minutes after I had first entered her asshole, I heard Kukla's moan change into a new sound. It was a low, rumbling groan from deep in her throat. It came out in one long string. As she made this noise, her body began to tighten. Her eyes closed tightly and her fingers grew white pulling on her asscheeks. Her legs locked up and the noise in her throat grew high pitched. I continued to slam my cock in and out of her body, my breath growing ragged, and she continued to take it without difficulty.\n\nSuddenly, Kukla let out a long, gasping breath. Her body went completely still and she groaned loudly. Then her body flailed and she was chanting \"Sultanah\" over and over again in a faraway voice. I could feel the muscles inside of her body contracting. Through the thin barrier of flesh, I could feel the muscles in her cunny tightening and I felt the insides of her thighs grow damper as juices poured from it. More importantly, I felt all of the muscles inside her anus tightening. The milking sensation I had felt before grew even more insistent.\n\nKukla was still in the throes of her own orgasm when her tight asshole caused me to cum again. I thrust my hips in hard as I felt the sensation coming on. I closed my eyes and squeezed on Kukla's body. I felt my balls seize hard against my body and I felt my anus tighten and loosen rhythmically. I felt the vein in the bottom of my cock expand and contract. I felt jets of liquid slipping up from my balls and then shooting out of the tip. That liquid squirted hard inside of Kukla's tight anus. So tight, in fact, that the seed came pouring back out of her, overflowing her insides and dripping heavily onto the floor. And on top of all these mechanical processes I felt the same unworldly, vibrating calmness I had felt earlier. There was no decrease in pleasure or sensitivity; I was euphoric as I came harder and harder into Kukla's asshole.",
        "After a minute or so, Kukla and I both felt our orgasms subside. I was panting and lightheaded so I dropped backwards into my seat. My rapidly softening cock slipped easily out of Kukla's asshole (and felt very nice while doing so). A steady drip of seed poured from her ass as my cock slipped from it. I sat down heavily in the chair and watched as my seed dripped down Kukla's leg. Kukla stayed bent over the table, breathing heavily and issuing an occasional contented sigh. I caught my breath as well. \n\nAfter a moment, I was able to think again. Had I just done that? How had I been negotiating one moment and then raucously fucking a noblewoman the next? Our discussions had felt like a seduction, but I hadn't really intended anything like this. And yet, I did not regret what had happened. I had given away nothing in my negotiation and gained everything. I had the Executive Assembly in my pocket, a weapon torn from my enemy's grasp and turned on them. In fact, I had gotten more than I had even set out to get (I thought of this while looking at Kukla's round ass). My confidence had paid off. I didn't even need to over plan or decide before hand how I was going to get Kukla in my pocket. I had walked in knowing it would happen and simply feeling that I wouldn't leave until I was finished. I could tell that Kukla sensed that confidence. She had given in to that confidence. And been drawn to it. Knowing I would win made it easier to win. And I got a delightful little bonus out of it as well.\n\n\"Most Sultans, I am told, seal their agreements with handshakes,\" Kukla said suddenly. I looked up and saw that she had turned slightly so that she was looking at me. She was smiling broadly, \"I will always prefer Sultanahs, they know just what they want. And what I want.\" I smiled back and considered the ways in which loyalty is won.\n\nEnd Chapter 6\n\n*****\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Especially on a massive project like this, it took a year to write and could take longer to edit. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.\n\nYKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "epic",
        "medieval",
        "hermaphrodite",
        "anal",
        "oral",
        "adultery",
        "serial",
        "shemale on female",
        "tranny on female",
        "spit"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-sultanah-ch-06"
}