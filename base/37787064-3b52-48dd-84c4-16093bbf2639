{
    "title": "Seasonal Reset: Anal Ainsley",
    "pages": [
        "\"We're almost done, right?\" Ainsley asked, sliding her next box onto the shelf.\n\n\"Not quite,\" Gabby replied, checking the next box on the list. \"Try another five hours, at least.\"\n\n\"Oh, my god, this is endless,\" Ainsley moaned, falling back on the floor next to her cart. She stared up at the fluorescent lights above her; they were bad enough during the day, but they were even more of an assault on her senses at night. \"Tell me again why we can't just do this during the day?\"\n\n\"Because customers might be inconvenienced,\" Eric called from the next aisle over, a sarcastic tilt to his voice.\n\n\"Boo to the customers!\" Lauren called from the other side. \"Who needs them?\"\n\n\"The store does, Lauren,\" Gabby said, still looking at the list of tasks still ahead of the team tonight. \"As do we, if we want any job security.\"\n\nLauren popped her head from her aisle to look at the assistant manager, a shit-eating grin on her face. \"So, if we're only here as a part-time college job and don't particularly care, we can go?\"\n\nGabby smirked, finally looking up. \"Yeah, sure. We're coming out of the holiday season, upper management would love to trim some more fat from the budget.\" Gabby shifted her focus back down the center aisle, where Ainsley and Josh were working. \"Guys, nobody likes the seasonal resets. And I'm sure other places you've worked have operated on a rolling reset over several weeks. But, for whatever reason --\"\n\n\"Employee torture!\" Eric added.\n\n\"--whatever reason,\" Gabby continued, \"Home Away from Home feels that taking care of it all in one night is best for a seamless transition.\"\n\n\"Even though it exhausts half the staff?\" Ainsley asked, still laid out and staring at the ceiling.\n\n\"Which isn't that bad during the post-holiday slump. Plus, you all get the next two days off.\" Gabby went back to her list. \"And I trust you all can stay on task and get the international section done in no time.\"\n\n\"And you're sure you don't want to help?\" Josh said, finally piping up.\n\n\"I am helping,\" Gabby said, holding her checklist up. \"Keeping track. The perks of management. Now, I'm going to go check with the team in furnishing.\" With that, Gabby spun on her heels and started walking towards the other end of the store, calling back, \"Get up, Ainsley!\" as she went.\n\n\"Need some help?\" Josh asked, standing over Ainsley with a smile. Ainsley gave a smile of her own, reaching up to take his hand and getting to her feet.\n\n\"God, Gabby is such a jerk,\" Ainsley said in a hushed tone, brushing the seat of her gray yoga pants. \"Like, she could at least help out.\"\n\n\"Yeah, it'd be nice,\" Josh agreed, grabbing another box from the cart. \"As nice as any of this can be, I guess. At least this aisle's almost done?\"\n\n\"Which just means going to help Lauren and Eric on theirs.\" Ainsley raised her voice. \"And I'm sure those two are going at top speed!\"\n\n\"Giving it all for queen and company, babe!\" Eric shouted, gaining an eyeroll from Ainsley.\n\n\"So, yeah, just crushing it.\"\n\nUncertain what to say after that, Josh simply gave an exasperated shrug and continued moving product onto the shelves. Admittedly, he understood exactly where Ainsley was coming from, as this was far from his ideal version of a Sunday night. On the other hand, he could think of far worse people to be stuck doing it with than her. He could be over in furnishing with Brie, or stuck rearranging the furniture display like Chloe and Sam. Instead, he was with the woman he'd been crushing on since starting at the store over a year ago.\n\nAs he stocked, he reflected on all the things he found attractive about her. She had a great sense of humor, she wasn't afraid to talk shit about their mutually disliked coworkers, and she was just as big into gaming as he was. And, beyond that, she was cute as fuck. She was 5'9 and lithe without being gangly. Her breasts were small, but looked great on her body, while her ass was high and pert, something shown off by the tights she always wore; ditto her thigh gap. And her skin was like porcelain, broken up only by the generous dusting of freckles that spread across her shoulders and face. Tonight, her long ginger hair was pulled into two tight braids that reached down her back, which looked adorable on her.\n\nJosh looked away as Ainsley glanced at him, feeling foolish. He knew he should just get over it and ask her out, but he worried it would make things weird between them if she turned him down. Still, he'd asked her to a few group hangs, and it felt like there was some type of chemistry between them. And it had been months since she broke up with her last boyfriend, so he'd certainly waited long enough.\n\n\"Josh?\" Ainsley asked, jolting him from his concentration.\n\n\"Huh?\" Josh said, looking back her way. \"Yeah, what's up?\"\n\n\"I was asking if you wanted to come get more stuff with me?\" Ainsley pointed to their cart, which he now realized was empty. \"So we can finish the aisle?\"\n\n\"Of course, sorry,\" Josh added with an embarrassed chuckle. \"Just so engrossed in all the fun we're having.\"\n\n\"The hours are just flying by,\" Ainsley said, beginning to push the cart. Josh followed, but the two were interrupted as they reached the end of the aisle.\n\n\"Yo, Josh,\" Eric said, popping out from his own aisle. \"Think you can help me out?\"\n\n\"Oh, uh,\" Josh said, glancing from Ainsley to Eric. \"We were just about to go get some more stock.\"\n\n\"It'll just take a second, come on,\" Eric said, not waiting for a response before heading back down his aisle.\n\n\"Great,\" Josh muttered, looking to Ainsley. \"I guess I'll catch up in a second.\"\n\n\"Sounds good,\" Ainsley replied, already taking off towards the back. Josh watched her ass for a moment before turning away with a sigh.\n\n\"Alright, what's so important?\" Josh asked, turning down Eric's aisle. As he did, Eric was upon him, an arm around his shoulder to pull him into a conspiratorial huddle away from Lauren. Not that their co-worker seemed particularly interested in what they were doing, focused on stocking as she was. \"Uh, yes?\"\n\n\"Nobody else is back there right now, you know.\" Eric whispered, glancing towards the stockroom at the back of the store. \"Could be the perfect time to nut up and make your move.\"\n\n\"Oh, jeez,\" Josh said, feeling a blush rush to his cheek. \"I never should've told you--\"\n\n\"But you did, and as your good friend--\"\n\n\"Are you, though?\"\n\n\"As your good friend, I'm telling you, it's the perfect opportunity to hit that, man.\"\n\n\"Dude, I don't want to... I mean, I do want to... but I want to get to know her first.\"\n\n\"Oh, come on,\" Eric said, smirking. \"What more do you need to know about Anal Ainsley at this point?\"\n\nAnd there it was, the thing Josh did his best not to think about, at least when he wasn't jerking it and let himself indulge. The rumor about Ainsley, a previous co-worker, and what they'd allegedly gotten up to after hours one night.\n\nWhere she'd begged the guy to put it.\n\n\"Alright, just... don't call her that, okay?\" Josh said, shrugging Eric's arm off him. \"There's no way that rumor is true.\"\n\n\"Gabby's the one who saw the tape,\" Eric countered. \"Gabby, dude. You think that uptight bitch would be taking part in office gossip like that if it was unfounded?\"\n\n\"I think she'd have gotten her fired for sure if it was true.\"\n\n\"She wasn't management yet,\" Eric said with a hand wave. \"Besides, the tape was apparently... inconclusive.\"\n\n\"Exactly.\"\n\n\"Okay, but it was conclusive enough that the other dude got fired.\"\n\n\"Look, just... even if it was true, that's not... I want to ask her out on a real date.\"\n\n\"Then do that, man!\" Eric shrugged, exasperated. \"If she's willing to let a dude she barely knows stick it up her ass, she'll probably be down for dinner.\"\n\n\"Oh, my god, are you seriously talking about that shit?\" The two looked back down the aisle; as loud as Eric had been, Lauren couldn't help but overhear. She was staring at them with a raised brow. \"Real nice.\"\n\n\"It came up naturally!\" Eric said, rolling his eyes at her.\n\n\"Alright, I'm going to get stock,\" Josh said, taking his chance to slip away. \"It was all him, Lauren!\"\n\n\"Not cool, dude!\" Eric called, but Josh was already turning down another aisle as he headed towards the back.\n\nThe back... Josh thought, his mind wondering despite himself. Backroom... back door... Ainsley's--\n\nJosh shook his head and pushed down on his crotch, readjusting. He couldn't think like that. Not with her. It was a dumb rumor. No way it was true.\n\n...right?\n\n****************************\n\n\"Think that's enough?\" Ainsley asked, peeking over the stock on the cart to look at Josh inquisitively, the hint of a smirk on her lips.\n\n\"Yeah, I think we're good,\" he laughed, shifting around to start pushing it towards the floor. They'd cleared most of a pallet loading their cart, and had maybe gotten a bit too ambitious, especially with the cans of yams they'd put up top. If they steered carefully, though, it shouldn't be--\n\n\"Shit!\" Josh said, the whole cart shifting as he started pushing; he'd forgotten to release the break. Fortunately, most of the cart held, but some of those damned cans tipped over and went rolling.\n\n\"Nice one,\" Ainsley said with a laugh, giving Josh a pat on the shoulder. He smiled sheepishly at her, but she was already moving to retrieve the cans. \"Here, one sec.\"\n\n\"I dropped them, I can--\"\n\n\"It's fine, dude, I actually saw where they went,\" Ainsley assured him with a smile. With that, she dropped, no longer visible behind the cart. After a moment, \"Well, most of them.\" Her hands popped over the top, dropping three cans, before she came past the opposite side of the cart on her hands and knees, heading for a space between two of the pallets. \"There it is.\"\n\n\"You sure you don't need... help...\" Josh started, trailing off as Ainsley repositioned; suddenly, she was bent down with her ass up right in front of him as she slipped an arm between the pallets.\n\n\"No, I got it, just a second,\" she grunted, her butt wiggling as she worked herself into the crevice. Those yoga pants left very little to the imagination normally, so seeing them stretch even further was more than Josh had been prepared for. Especially as the material became more see-through, giving him a peek of the dark-colored panties she was wearing, a pair of boy shorts that seemed to cover oh so little of her--\n\n\"Would you want to go out on Thursday?\" Josh suddenly found himself blurting, his mind desperate to break the awkward tension suffocating him but incapable of thinking of anything else to say. He regretted it almost instantly, maybe she hadn't heard him and--\n\n\"Go out?\" Ainsley asked, now pulled back from the crevice and looking up over her shoulder at him, but still very much down on all-fours. Fuck, what a nice way to see her. It didn't last long as she stood and put the last can back on the cart. She was staring at him with an expectant look. \"Like, on a date?\"\n\n\"I, uh... yeah, I was thinking that. I mean, if not, it's cool, I--\"\n\nJosh was silenced as Ainsley was suddenly in his arms, her small body pressed against him as she leaned up and pulled him into a kiss. It wasn't a peck, either, but a deep, hungry kiss, one he was quick to sink into as everything he'd wanted for so long was suddenly his. He wrapped his arms around Ainsley's tiny waist, pulling her up to make the kissing easier, to let his tongue explore her mouth as she opened up to him. She was hot against him and sweet in his mouth, and the sound of her cute little moans drove him to keep going, to taste and feel her for as long as he could.\n\nEventually, they had to pull away, gasping for air as the moment that suddenly seemed long overdue calmed, but only enough for them to gain their senses.\n\n\"I... wow,\" was all Josh could stutter as Ainsley smiled up at him, a giggly, excited energy filling them both.\n\n\"Yeah,\" she returned breathlessly. \"Sorry, I just... fuck, dude, I've been waiting so long for you to ask me out, and I figured fuck it, you know?\"\n\n\"Well, damn,\" Josh chuckled, still taken aback. \"Guess I can look forward to the first date ending well.\"\n\n\"Oh, really?\" Ainsley said with a coy cocked brow. \"How well, exactly? What kind of girl do you think I am?\"\n\n\"Oh, I mean, I didn't mean... just, given where we are, I mean...\"\n\n\"Where we are?\" Ainsley asked, before her face flashed with recognition and went flat. \"Oh. I see.\"\n\n\"Hold on, I didn't mean--\"\n\n\"No, I get it,\" she said, holding up a hand. \"That story about me in the stockroom, getting fucked in the ass, right? Anal Ainsley, yeah? That's what you meant?\"\n\nThings were taking a turn Josh desperately didn't want them to, but he didn't know what to say. \"I wasn't... I mean, I've heard the rumors, sure, but I didn't... I wasn't saying we should do that.\"\n\n\"Really?\" Ainsley scoffed, spinning on her heels and marching off towards the entrance to the stockroom. Fuckfuckfuck, was all Josh could thing, expecting her to march right out the door. The girl he'd been crushing on for ages and he'd fucked it all up.\n\nUntil she stopped at the door and flipped the locks into place. As she slowly turned back to face him, she had a mischievous smile on her face.\n\n\"Maybe you're not saying we should do it,\" she said, biting her lip, \"but I am.\"\n\n\"I... I...\" Josh stammered, again at a loss for words as Ainsley started to walk back towards him. He suddenly looked around, uncertain where he was even looking. \"What about the cameras? Isn't that a problem?\"\n\n\"It was last time,\" Ainsley said, reaching him and pushing him back farther into the rows of pallets. She looked around as they went, judging where exactly they needed to be. She stopped just as Josh's back hit a pallet. \"This time, I know where it's safe.\"\n\n\"Ainsley,\" Josh whispered, lost in the stare of her eyes; he'd never seen her looking so forceful, so naughty. So much like a girl who'd want him to fuck her in the ass.\n\n\"The door's locked, nobody's coming in,\" Ainsley insisted, hands suddenly gripping Josh's belt. She pushed closer against him, staring up at him as she teased the line of his pants. \"If they try, we'll have time. And with all the work on the floor, I doubt anyone's coming back here for a while.\"\n\n\"I don't know...\" Josh said with little actual protest, doing nothing to stop her as she undid his belt. He was lost staring into her pleading eyes, somehow slutty while still maintaining that innocent \"oh shucks\" energy; he blamed it on those damned cute freckles. \"I can't believe the rumors were true.\"\n\n\"Not that you're complaining,\" she quipped back, smile widening as she sunk to her knees, dragging Josh's pants and boxers down in one smooth motion. His dick sprang free, tapping against the side of her face; the sight of her cheek cradling his erection was almost enough to make him cum right then and there.\n\n\"Mmm, I knew you'd be big,\" Ainsley said, finally looking away to examine Josh's sizable erection. She took it in her hand and gave it a firm squeeze that quickly became a teasing tug. \"I just hope I can handle all of it.\" She smirked again. \"Let's see, shall we?\"\n\nAinsley kissed the tip of Josh's dick, swirling her tongue out around it. That was all the incentive he needed to push forward, plunging his cock between Ainsley's lips and into her mouth. He kept pushing as she stared up at him, easily taking him as he went deepr. It amazed him a little, how well she took it, all while daring him to go further with her eyes. Finally, she winced slightly as he hit the back of her throat, but she didn't retreat, instead teasing the bottom of his shaft with her tongue as she gagged slightly.\n\n\"Fuck, this is going fast,\" Josh gasped, still not sure what to do with his hands as he relinquished control to Ainsley. His comment seemed to amuse her as she continued to choke on his cock for a moment before pulling off of him.\n\n\"Hnnggkk, not too fast, I hope,\" Ainsley said as she gasped for air, not letting up as her hand began to jerk his now slick cock. She smiled up at him with glistening lips, a bit of spit leaking down her face. \"My mouth's not the only place I want you putting this tonight.\"\n\n\"Hell, yeah,\" Josh hissed as Ainsley dove back onto him, head bobbing faster now. Some semi-slow pumps at first, getting her rhythm, before starting to go really go at him. She wasn't shallow, either, and Josh realized she was taking him all the way back into her throat with each thrust. The motion was joined by a slick squelching as she gagged on his dick, working up more thick spit and drool in the process.\n\n\"Nng, you know what you're doing,\" Josh grunted, watching as she worked him over. As if in response, she held herself against his crotch, the gagging intensifying as she allowed her throat to massage his dick with spastic, desperate undulations. Josh did his best to suppress a groan, failing as he threw a quick glance to the stock room door. Fuck it, he thought, letting out a second, louder grunt as he grabbed one of her fiery braids in each hand and held her on his cock. \"Holy fuck, you're amazing.\"\n\nJosh held Ainsley in place for a minute, her body convulsing and shaking as her throat struggled more than it had been so far to handle him. As he felt her finally pulling against him, he let go. Ainsley let out a ragged gasp as she pulled loose, the drool now spilling out of her mouth and leaving her connected to his cock by long, drooping strands. She gathered it as she grabbed him, once more stroking him fast as she looked up.\n\n\"Hmm, like being rough with a girl?\" she asked with a faux innocent look on her face. \"I figured you'd have been gentler.\"\n\n\"If we were on a date, sure,\" Josh said, deciding to test the limits of just how slutty she was. \"But with Anal Ainsley in her natural habitat? I figure this feels right.\"\n\n\"Fuck yeah, dude,\" she replied, eyes flashing with excitement as she jerked him a bit harder. Her enthusiasm fired Josh up more in turn, and with her braids still in hand, he pulled her closer, allowing his dick to hit her cheek as she jerked him. Ainsley laughed, happily going along by running his dick against both of her cheeks, slapping herself with it.\n\n\"God, you're a nasty little slut.\"\n\n\"I am,\" she agreed, then gave the tip of his cock a kiss. \"And I'm going to make sure you never forget it.\" She dove back down, the sound lewder than before as his dick churned the thick spit still worked up inside her mouth and throat. Josh tightened his grip on her braids, meeting her motions and giving her a full-on face-fucking as they moved in needy, noisy, lustful tandem. And she didn't miss a beat, eyes rolling back as she let him violate her throat with unchecked enthusiasm.\n\n\"Fuck, yeah,\" he grunted, using Ainsley roughly, his balls hitting her chin with each thrust. Knowing she wanted it just made it easier to give in, to really abuse the limits of her hungry hole. It didn't take long before Josh could feel himself getting close, and the urge to dump his load right down Ainsley's tight throat was powerful. He'd certainly fantasized about it enough, and it was better than he ever could've imagined. But an orgasm would bring not just immense satisfaction, but some semblance of common sense back to his mind. The logic that, hot as it was, fucking his co-worker in the backroom was a wildly dangerous game. And he didn't want to risk losing his nerve to go again.\n\nNot when Anal Ainsley still had her nickname to live up to.\n\nSo Josh pulled Ainsley off his dick and to her feet, yanking her into an extra sloppy kiss. His hands wandered and groped as they made out, pulling her in tight and finally giving the bubble of her ass a proper squeeze. His other hand remained against the back of her head, holding her in a controlled position as he explored her body. Squeezed her soft bubble, found the hem of her yoga pants, slid in to feel its heat directly. Pressed together as they were, his dick was pinned between the irritating material of their work polos, but he didn't care, feeling the heat of her stomach beneath hers.",
        "\"So, so rough,\" she commented with a giggle as he tugged her hair back, allowing him easy access to suck at the soft skin of her neck. \"Hope you're going to keep the pressure on.\"\n\n\"Absolutely,\" Josh said before spinning Ainsley around and pushing her forward into one of the pallets; it was half full of flat boxes, allowing him to bend her into the perfect position to leave her ass up and inviting in front of him.\n\n\"Go ahead,\" Ainsley urged, pushing her hips to accentuate her ass even more. \"Take a look.\"\n\nJosh happily obeyed, grabbing her yoga pants and slowly working them down her hips and over the perky bubble of her butt. As she had done to him, he was sure to hook her panties as he went, sad though he was to miss out on the sight of her cheeks hanging out the bottom of them. But horny or not, he was still aware of every minute being a risk, and he wanted to see what he'd been lusting after as soon as possible. A second later, he did; with her yoga pants bunched at her knees, Ainsley's shaved pussy and tight asshole were on full display to him.\n\n\"What do you think?\" Ainsley asked, glancing back at him as she used one hand to spread herself wide. Josh didn't respond with words, instead just leaning forward and taking a long, heavenly lick along her slit and asshole. She moaned as he did, transitioning into a throaty giggle. \"Seems like you're a fan.\"\n\nJosh remained silent, instead just feasting on the pale, heavenly flesh before him, luxuriating in the sharp taste of her pussy and the tight resistance of her anus as he probed it with his tongue.\n\n\"Ooo, dude, yes,\" Ainsley gasped, pushing herself back against Josh's exploring, probing tongue. \"Right to business... taking charge... like a real man...\"\n\nHer ass was tight, but Josh pushed through, his tongue stretching her just enough to slip in and keep punching her deeper. He was rock hard, desperate to bury another part of himself inside of her, egged on by the moans and the tremor of her legs. Her backdoor was desperately tight, but the noises she was making encouraged him onward, nose resting at the edge of her ass crack and hid chin getting sloppy and wet as it slapped against her pussy.\n\n\"Mmm, yes... f-fuck, don't stop,\" Ainsley begged in a hitched, struggling voice. Her demeanor had shifted, the cockiness gone as she struggled to speak through the waves of pleasure rocking her body. She liked sucking his dick, liked the feel of his face against her pussy, but she fucking loved having her asshole assaulted with the fervor and passion Josh was providing. \"Or, fuck... do stop... and fuck me right. Gi-give me what I need. MmMMM, fuck Anal Ainsley in her slutty ass, baby!\"\n\nThat begging line was all Josh needed. His tongue retreated from her asshole and he quickly took a standing position behind her. With a possessed speed, he lined his aching dick up with her entrance and, with one forceful, desperate thrust, he was deep in Ainsley's amazing anus.\n\n\"Shit yes, baby!\" she moaned, pushing back against Josh. Her whole body shook violently, a mini-orgasm ripping through her from the force of his insertion stretching her alone. \"Fucking ruin that ass with your big dick, Josh. Fucking own me, dude, SHIT!\"\n\nJosh obeyed, any concern he had that the drying layer of her gag-spit on his dick wouldn't be enough lubrication forgotten as he sawed in and out of her with a mad vigor. For an anal slut, holy shit was she tight, the ring of her anus stretching in and out with every thrust.\n\n\"Mmmm, been too long since I got used properly at work,\" Ainsley gasped, a stuttering lusty chuckle following as Josh continued fucking her ass. \"God, we have to do this again. You're fucking laying claim to me, and I love it, unnnnn.\"\n\n\"You want me to claim you?\" Josh asked, leaning in close and nipping at her ear as he continued to pound into her. Going with the moment, Josh used his free hand to grip her throat firmly, turning her to look at him; there was an electric lust in her eyes. \"Is that right?\"\n\n\"God, yes,\" she replied, leaning in for a desperate, needy kiss. Josh bit her lip for good measure before pulling back.\n\n\"Your wish is my command,\" Josh grunted, pulling almost completely out of her ass before slamming forward with one strong, forceful thrust that brought his hips firmly against hers and fully sheathed himself inside her anus.\n\nFuuuuuck,\" Ainsley sputtered, back arching into the anal penetration. \"Fuck, dude... fuck, Josh, yes! Oh, you're so fucking good. So right for me, baby!\"\n\nAgain, Josh was silent, instead focusing on the pleasure driving them both. Fully inside of her, the entirety of her rectum was convulsing around his dick, massaging him and pushing him back to the limit he'd been at earlier. He held as firm as he could, pounding tight against her to enjoy every last second before he gave out. He gripped her hip hard with one hand, using his free one to give her ass cheeks hard, sharp slaps. If Ainsley felt any discomfort or disagreement, she hid it well. Instead, she only moaned louder, pleasuring herself as Josh's cock violated the deepest crevices of her rear and his balls slapped against her wet pussy. They were lost in the motion, both grunting and moaning as her ass worked his cock with each stroke.\n\n\"Mmm, we'll have to go back to work after this,\" Ainsley moaned, glancing back at him with a smile. \"I w-won't be able to clean up. Not in there. I'll be out there in front of e-everyone... my ass filled with your fucking cum, baby.\"\n\n\"Oh, god,\" Josh gasped, the thought of what Ainsley was suggesting pushing him to the edge. He tried to hold on, but she kept going, saying exactly what she needed to push him over.\n\n\"Just have to hope I don't leak through my pants,\" Ainsley continued, her voice becoming high and shaky in time with her body. \"Or m-m-maybe I d-do... so everyone knows you analized and owned little Anal AinsleyyyyyYYYYY, FUCK!\"\n\n\"Fuck yeah, I do, you anal slut!\" Josh cried almost simultaneously, the thought of Ainsley's gapped asshole leaking his seed the last imagery needed to trigger his orgasm; Ainsley's ass itself certainly helped, flexing and milking his dick as she collapsed into a shaking, whiny orgasm of her own. Writhing together, Josh unloaded his long-awaited money shot, balls twitching madly as he shot what felt like a gallon of cum deep into Anal Ainsley's no-longer-quite-as-tight asshole, truly marking her with his seed.\n\n\"Fuck yes, baby, oh my god, uhnnnn,\" Ainsley moaned, feeling the heat and weight of his load deep inside her as her body continued to flex and jerk beneath him. It had been too long since she'd had sex, since she got truly fulfilled in the best way she knew how. Josh kept pumping a little longer, his semen providing a new degree of ease to everything. His balls continued to twitch for a few more seconds as they both let out shaky, giggly breaths, riding the high of their shared orgasms.\n\n\"Fuck...\" Josh groaned, holding himself up with a hand on the pallet next to Ainsley. He looked down at her butt, his dick still inside of her even as it started to soften, and gave her ass one last squeezing grab to spread her open a bit more. His cum was leaking out already, and her anus was still twitching around him. Finally, he pulled out with a gasp, Ainsley's asshole instantly clenching and sending a wave of cum out and down the crevices of her thighs. \"Ansley, that was phenomenal. You're amazing.\"\n\n\"Mm, you too, dude,\" she said, looking back at him with a smile. She reached back and slid a finger into her slightly gaped ass, gathering some cum and bringing it to her lips. She swirled her tongue around it with another satisfied little moan, then smiled at him again. She gave her ass a shake. \"Mind if I...?\"\n\n\"Of course,\" Josh said, stepping back as she straightened herself up. She gave her ass more attention, twisting to clean the messiest spots. Josh pulled his own pants up and grabbed a roll of paper towels from the supply shelf. \"Here.\"\n\n\"Thanks,\" she said, using them to clean herself more. She smirked at him as she did. \"This'll do for now, but there's still a lot of you in me.\"\n\n\"Regretting it?\"\n\n\"Not at all, just... I get a bit crazy when I'm horny.\"\n\n\"No complaints here.\"\n\n\"Better not be.\" Ainsley twisted both ways to check herself one last time. \"I look good?\" Josh nodded, so Ainsley pulled her yoga pants back up her legs. A few tugs, and her ass was covered again, no immediate signs of what they'd done apparent. \"Well...\"\n\n\"Yeah...\"\n\n\"I guess we should get back to it?\"\n\n\"Totally. But first...\" Josh stepped forward, wrapping her back into his arms for a gentler, softer kiss this time. They went on for a minute, slowly making out and teasing, the sort of kiss that would typically come long before any intense anal play. As they pulled away, it was Ainsley's turn to be a bit surprised for once. \"So what time on Thursday?\"\n\nAinsley smiled up at him. \"How about six?\"\n\n\"Perfect,\" Josh said, letting her go and moving to push their cart towards the floor. She joined him, and the two smiled giddily at each other as they returned to work."
    ],
    "authorname": "RoscoeRanger",
    "tags": [
        "co-worker",
        "redhead",
        "stockroom",
        "at work",
        "blowjob",
        "facefuck",
        "ainsley",
        "anal",
        "after hours"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/seasonal-reset-anal-ainsley"
}