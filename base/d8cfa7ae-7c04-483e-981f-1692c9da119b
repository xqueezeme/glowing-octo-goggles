{
    "title": "The Secretary",
    "pages": [
        "This story was inspired by the movie, \"The Secretary,\" starring Maggie Gyllenhall and James Spader. The movie was reviewed for this site some time ago by SexyChele, who didn't like it. However, the short story that inspired the movie was reviewed subsequently by Decayed Angel who liked both the story and the movie. I would encourage you to watch the movie before you read the story, although I do so with some reluctance as this story will not do it justice. My story is placed within the Celebrity section because it definitely needs to be there, given the identity of the characters. However, the story, like the movie, involves substantial submission, reluctance, and humiliation. If stories with this theme are not to your liking, and certainly if you find them abhorrent or appalling, then you really should not read it. You won't like it! Finally, all of the characters are at least 18 years old.\n\n- - - - - - - - - - - - - - - - - - - - -\n\nMaggie Gyllenhall had always wanted to be a secretary. It was her life's dream. This is not a dream for many a young lady. It was perhaps a bit unusual. Most young women aspire for much greater greatness, to be a lawyer, a politician, a leader of business or industry. Maggie's aspirations were considerably more modest, likely inspired by the fact that her mother had been a very successful secretary for a very successful, well respected, and powerful man, and Maggie admired her mother so very much.\n\nHer mother would say that being a secretary was in fact a very honorable profession. She was \"his girl Friday,\" the lady behind a great man, helping him reach the pinnacle of his career, helping him to accomplish so many things, some of which could have important and significant benefits to all of society, or at least a good part of it.\n\nOf course, this was not meant to imply that a woman could not also be the person who became a leader of business, law, politics, or medicine, needing herself a secretary, perhaps even a male secretary, to act as her assistant. But, that was not for Maggie. She found considerable satisfaction, fulfillment, and pleasure, in being the assistant.\n\nMaggie though had no expectation of ever reaching her mother's potential, of matching her achievements. Her mother eventually became a secretary for one of the top advertising firms in New York that developed some of the most influential ad campaigns the country had ever seen (e.g., Maidenform's \"I dreamed I came to work in my Maidenform bra;\" see \"Ad Men\"). It was said that their campaign for Dupont nylons (\"If only skirts were shorter\") was a major factor in bringing on the age of miniskirts.\n\nAny such expectations for Maggie, had they even been there, were dashed when she found herself working within a large secretarial pool for the municipal tax office. Typing all day long can be pretty boring. It didn't help when what one was typing was inherently boring.\n\nShe felt that she had prepared well, or at least well enough. She had received a certificate from Weston College indicating that she had completed their training to become an Executive Assistant, including courses in Keyboard Essentials (KEY 105), Keyboard Skill Development (KEY 110), Information Processing (CSC 104), Administrative Office Transcription (AOM 200), Office Troubleshooting (CSC 227), Web Programming (CSC 322), Advanced Telecommunications & Networking (CSC 405), and Legal Office Transcription (LSS 200). Her mother hadn't done anything like that. She had learned how to type from her own mother and then just answered an ad.\n\nOf course, times were much different now. Secretaries nowadays had to have quite a few skills, and the down economy made finding any job so terribly difficult. So, she kept telling herself that it could be worse, that she could be unemployed.\n\nBut, one day an opportunity did arise, and it was very intriguing, if not impressive.\n\nMr. James Spader was looking for a new secretary.\n\nMaggie immediately applied.\n\nMr. Spader was a very well known, highly regarded, and quite successful lawyer. However, it was also known that there was a good reason that he was hiring. Mr. Spader was a very exacting, precise, stern, and strict employer. He did not suffer fools gladly, expecting his secretaries to be as punctilious, painstaking, and persnickety as himself.\n\nThis did not concern Maggie. This was in fact an opportunity for her to rise above all other secretaries. If she could make it with Mr. Spader, she could make it anywhere.\n\nPlus, when she met him she discovered that there was an additional benefit in being Mr. Spader's executive assistant. He was a rather good looking man; in fact, really quite strikingly handsome. He was a fit five foot ten inches, with short, well styled light brown hair, sharp facial features and, most impressive of all, really dreamy blue eyes. There was just something about his eyes, as they often looked a bit melancholy and troubled, although at times mysteriously distant, yet when he smiled they seemed to sparkle mischievously.\n\nHe was also very impeccably dressed and groomed. He wore the finest hand-tailored Gucci, Armani, and Donna Vinci suits and, on this day, when he was interviewing applicants, he wore his finest suit, his pin-striped blue Alexander Amosu, a blend of Himalayan Pashmina, Qiviuk and Vicuna, with nine 18-carat gold and pave set diamond buttons. The suit made it clear that he was a very successful man. Yes, she could work for this man, no matter his peccadillos.\n\nWell, there was one peccadillo that he made very clear. He was an avid collector of antiques, and he did not simply display them. He continued to use them, and he expected his employees to do likewise. More specifically, his secretary could not use a word processor. She would have to use a typewriter.\n\nMaggie was nonplused. Now, that did seem strange indeed.\n\nMr. Spader looked dispassionately at his seventh interviewee that day. \"Will that be a problem...\" His eyes went to her application form. \"...Miss Gyllenhall?\"\n\n\"Oh, no sir,\" Maggie quickly replied. It would indeed be a significant problem, but what person would admit to such a concern, such a skills deficit, during a job interview? One might as well not have even shown up for the interview! And, besides, her mother had never used a word processor. If she wished to achieve as much as her mother had done, then she could do it too. In fact, as she thought about it, using a typewriter just like her mother made the job all the more attractive. \"I won an award, sir.\"\n\n\"An award?\"\n\n\"At college...for typing.\"\n\n\"You won an award for typing...at college.\" Mr. Spader didn't realize that a college would give such an award.\n\n\"Yes sir,\" she softly replied. She glanced around the room. She was feeling a bit self-conscious.\n\nThe phone rang. Mr. Spader picked it up.\n\n'How odd,' Maggie thought. His phone was a large, heavy, black molded Bakelite handset Western Electric desk phone, with the round dial. She hadn't seen one of those in years. Actually, she had only seen them on old television shows. \"Operator,\" was printed over the number zero. Maggie wondered if you really would get an operator if you dialed it.\n\n\"Please,\" he said to Maggie as he covered the receiver with his hand, \"get me some coffee?\"\n\n\"Absolutely sir, yes sir, immediately.\" She left to get Mr. Spader's coffee.\n\nShe thought she lost any chance for the job though when she tried to make the coffee. It wasn't really that easy, as he used a Mirromatic percolator. It took her awhile to figure it out. She spilled some water on the front of her blouse as she clumsily tried to fill it. She did her best to dry the blouse, but all the rubbing only made her nipple poke out even further. She tried to keep it hidden during the rest of the interview, but she seriously doubted that she was entirely successful. Maggie was hired, albeit she didn't really understand why. It could have been her unambiguous confidence with a typewriter. She would have imagined many other applicants balking at such a requirement. She felt good that she had been so positive and assertive.\n\nOn her first day she wore one of her best outfits, a bright red St. John slub knit jacket with princess seaming, a high collar and low V-neckline, and front button closure and patch pockets, with a matching elasticized waist, slubbed knit sleek pencil skirt that went just below her knees. The skirt hugged her body well, perhaps though a bit tight. Beneath the jacket she wore a very frilly violet silk blouse. She felt she looked both femininely pretty yet also business serious.\n\nShe kind of hoped that he would pay her a compliment for her dress and appearance on the first day, as she felt that she had never looked better. Her make-up was impeccable, she was having a real nice hair day, and she was wearing her most favorite perfume, Knowing, by Estee Lauder.\n\nBut, he barely acknowledged her existence, let alone presence. He just provided a curt good morning as he headed out for some sort of meeting, and indicated that she needed to type up a recording of a deposition, as soon as possible.\n\nWell, she supposed that she shouldn't be too surprised. None of her outfits would ever compare to his.\n\nShe worked very hard on the deposition, not wanting it to contain one single error, which really wasn't that easy without a word processor. Her mother often spoke of the perfect performance, hitting a true 10 in secretarial achievement. Her mother said that she did at times achieve such moments of perfection but it had required a considerable amount of care and concentration.\n\nMaggie was at least relieved to see that her typewriter wasn't a complete antique. It was actually one of the more \"modern\" Smith-Corona electric typewriters with a self-correcting tape so that she wouldn't have to scroll up the paper to try to erase an error or use white-out. \n\nWhen Maggie was finished she left the document on Mr. Spader's desk for when he returned.\n\nHe apparently came back later through a back door directly into his office as she had not noticed his arrival. She was in fact startled by his voice suddenly appearing on her desk through his more truly antique Webster Electric Teletalk office intercom.\n\nMaggie pushed down the switch to speak. She leaned in close, not sure how sensitive was the microphone, wherever it might be. \"Yes, Mr. Spader, is there anything you want, sir?\"\n\n\"Yes, Miss Gyllenhall, could you come in here please?\"\n\n\"Will I need my pencil and pad, sir?\"\n\nThere was a moment of silence. She couldn't tell if he was considering the option or was simply annoyed with the question. \"No, that won't be necessary.\"\n\n\"Yes sir,\" she replied. He didn't sound happy. He sounded a bit stern. But, of course, his usual tone was neither chipper nor cheerful. He was always very businesslike and dispassionate in his manner, perhaps even somewhat somber and solemn.\n\nShe hurriedly made her way into his office, albeit not before she checked her hair, make-up, jacket and skirt. When everything seemed to be in order she took a deep breath and entered through the very heavy, thick, mahogany door. Mr. Spader paid dearly to have the door be truly, entirely mahogany, not simply mahogany veneer glued to pine.\n\nMaggie had been in Mr. Spader's office a few times now, but it takes more than just a few visits to truly appreciate it.\n\nMr. Spader had a large, dimly lit, and quite luxurious office, filled with \"modern\" art from the first half of the twentieth century, a dark Safavid East Persia rug from the late 16th century (the charcoals were a bit oxidized), and, of course, an impressive collection of antique furniture, including a Mexican copper inlaid Pablo 6-Drawer coffee table. Behind the desk were dark antique Japanese wall scrolls depicting villagers at a market, farmers loading bails of some crop, and bathers within a pond. All the way across the room was an orchid garden, enclosed in glass to provide precisely the correct degree of moisture and temperature. Mr. Spader would occasionally flip a switch on his desk to mist the flowers, provide a gentle rainfall or, behind them, as a backdrop, a peaceful relaxing waterfall.\n\nHis pride and joy was a classic, antique mahogany partners desk from the first half of the 19th century by the London firm of M. Wilson. The desk was 5 foot 6 inches wide, made with well figured mahogany timbers. The top had a black hide writing surface with gilt and blind tooling surrounded by a cross band of mahogany with a thumb molded edge. All drawers had mahogany linings with hand cut dovetail joints, ogee moldings to the front edge, turned mahogany pull handles, and the original brass locks and escutcheons. It was really very impressive.\n\nAnd, sitting front and perfectly centered on his princely desk was the deposition that Maggie had typed. It was hard to miss, as it was the only thing on the desk, other than the Tiffany lotus lamp.\n\nMr. Spader was standing to the side of the desk, a dispassionate expression on his face, his hands clasped before him. He let go of his hands to gesture slowly toward the deposition. \"Miss Gyllenhall,\" he solemnly announced, \"there are a number of errors within this deposition. I wonder, perhaps, if you might wish to correct them.\"\n\n\"Oh my goodness, Mr. Spader. I'm so sorry! Yes, yes, of course.\" She made her way quickly to the desk and the deposition, lying there patiently, waiting for her.\n\nBut, she stopped when she arrived. She wondered if she should pick it up. Of course, she probably should. How else was she going to read it? But, this was her first day on the job, and Mr. Spader was notoriously finicky. Shouldn't she ask his permission first to take something from his desk? She glanced at him, and then realized that she was being far more timid and uncertain than was necessary.\n\nMr. Spader's office had that effect on a person, intimidating opposing lawyers with its atmosphere of power and authority.\n\nMr. Spader noticed his secretary's hesitation. He had naturally assumed that she would just pick up the document, and then return to her desk. Why was she just standing there? Was she so incompetent that she didn't know what to do next? She needs to be told to pick up the papers? Serious doubts as to his decision to hire this young lady swept over him. He wondered if perhaps he had been too heavily influenced by her physical appeal.\n\nMr. Spader did always consider physical attractiveness when hiring a secretarial assistant. He did not find that to be in any way inappropriate. One would not hire a secretary who gave little consideration to her physical appearance. Nobody would question such a decision. If she gave little attention to her own appearance, what attention would she give to the job? In addition, an appealing, even elegant, physical presence was important, as the secretary would be the first person whom new potential clients would meet when they arrived. She was a visual representation of his firm, his taste, his choices. Why not then have this person be especially attractive and pleasing to the eye. First impressions are really terribly important.\n\nPlus, it just made her presence all the more pleasant and pleasing. A secretary can do far more than just type. She can brighten up the office with her presence, provide some cheer, beautification, and flourish to an otherwise dull and frustrating day of dreary briefs and depositions.\n\nAnd, Maggie was very attractive indeed. She had dark flowing brown hair, pink full cheeks, smooth, impeccable skin, and a perky cute nose. Particularly endearing were her lips, which were often slightly open, revealing just her top two front teeth. It seemed to provide her with this innocent, self-conscious adorableness, magnified even further when she would nervously bite her lower lip, which she did so often. Plus, there was a hint of a dimple when she smiled.\n\nBut, what was most distinctive about her were her eyes. She had these saucer-shaped light blue eyes that were so darned expressive. They suggested a winsome coyness, yet also an alluring seductiveness. One just wasn't sure, yet one couldn't look away. One could just sit there and gaze upon them, if not for the fact that one had nothing to say and it was obviously terribly awkward to be staring at her, simply because one found her eyes so mesmerizing, so beguiling.\n\nMr. Spader realized that he was himself quiet for some time, lost in thought as his new secretary seemed uncertain what to do. \"Miss Gyllenhall, if you would...\" He paused. \"If you could, please find your three errors. I assume that you have the capability of recognizing that they are indeed errors.\"\n\nWell, no pressure there. If she had made the errors it was certainly quite possible that she would be unable to identify them now. \"Yes sir,\" she softly replied, and leaned forward to get a closer look, still hesitant to actually pick up the document from his desk.\n\nMr. Spader furrowed his brow. How so very unusual, he thought. Well, if she apparently did not wish to pick up the deposition, perhaps she shouldn't. \"Please, Miss Gyllenhall, if you would, leave the document resting on the desk.\"\n\nMaggie was relieved. There was no longer any uncertainty, any ambiguity. She leaned over further, bringing her eyes closer to the deposition. She was just a bit near-sighted and so had to lean over quite a bit to be able to read the 9-point font. She wondered if her back might stiffen. \"Sir, um, may I, well, please, rest my elbows...on the desk?\"\n\nHe nodded affirmatively. \"Yes, yes, certainly. Whatever makes you most comfortable.\"\n\nMaggie was again relieved. She rested her hands and elbows on both sides of the document, her eyes just inches away from its pages. She began to carefully study the words, the grammar, the structure.\n\nProofing a document is not an easy task. It not only requires knowledge as to correct spelling and grammar, but also the ability not to be drawn into the content. Errors are at times missed because one's mind corrects what the eyes see as one quickly reads through the sentences, absorbing the material, not wanting to be delayed or distracted by minor, technical errors in spelling or grammar. One of her colleagues at the tax office would even go so far as to read documents backwards, that way one would not have any appreciation whatsoever what was being written and could fully concentrate on spelling. However, reading sentences backwards was not particularly effective in discovering grammatical errors.\n\nMaggie didn't find one mistake on the first page, and began to feel a bit nervous. What if she went through the entire document never to discover any errors at all? Would he fire her on the spot?\n\nShe glanced over at him, waiting for him to give approval that she be allowed to touch the document, to turn the page.\n\nHe nodded affirmatively, in his dispassionate, aloof manner.\n\nHe was not though displeased. It was just his usual manner of expression. He found it quite important within a courtroom to remain dispassionate, never showing any expression in response to the testimony of a witness, or to the outlandish charges of an opposing attorney. Of course, when an expressive reaction to a witness would serve the interests of his client then he would accommodate, which was all the more striking to the jury as he was otherwise so stoic, so unmoved. \n\nHe shifted his position, moving away from the desk to stand behind Miss Gyllenhall as she continued to study the deposition.\n\nMaggie paused as she noticed him stepping behind her.\n\nShe suddenly realized the potential awkwardness of her position. Her business skirt was conservative but still quite feminine. The sleek pencil skirt was already a bit tight around the derriere and now even more so bent over as she was, her bottom thrusting out behind her. The position was really quite suggestive. She couldn't help but wonder if he was now gazing at her bottom, studying it as closely as she was studying the document. Well, of course, that really couldn't be true. Mr. Spader had far more important things on his mind than the curves of her derriere. She returned her attention to the document.",
        "Mr. Spader gazed upon the tight round curves of the young lady's derriere. There was something strangely appealing about a woman's bottom. He couldn't really understand why. The bottom was not a primary sex organ. It was just padding for sitting down. Still, he could not help but be strangely attracted to its roundness, its fullness, its provocative thrusting back away from her body, toward him.\n\nPerhaps that was it, that the position gave the impression that the young lady was presenting herself to him, as the female member of the Hominidae species may have done in our ancestral years. He could feel himself swelling within his slacks.\n\n\"OH!\" Maggie suddenly exclaimed. \"I found one! I found one, sir,\" she again exclaimed, turning her head back to look at Mr. Spader, who quickly tore his eyes away from the girl's butt, but not before she noticed the true direction of his gaze.\n\n\"Excuse me? Yes? What is it, dear?\"\n\nMaggie hesitated to answer, still processing the fact that Mr. Spader had apparently been staring at her bottom. After a moment she responded, \"Sir, an error. I found one: in the throws of passion.\"\n\n\"What?\"\n\n\"A homonym, sir. I typed 'throws' of passion rather than 'throes.'\" It was an understandable error, so she felt. Of course, it was a rather silly, if not poor, error. Why hadn't she noticed it? She clearly knew the difference between \"throws\" and \"throes.\" Most likely her mind just made the spelling correction as her eyes quickly scanned the sentence.\n\n\"Yes, well,\" he replied, \"you do understand the difference between 'throws' and 'throes,' do you not?\"\n\nMaggie's eyes widened with concern. Gracious, he thinks that I might not? \"Oh sir, yes sir, of course! It was just an inadvertent mistake.\" It seemed a bit weird to continue to speak to him like this, bent over, looking back over her shoulder, presenting her bottom to him as he spoke. But she also felt it might be presumptive to just stand up and face him. Plus, she would have to return to the document anyway.\n\n\"A lack of due attention?\" Mr. Spader inquired.\n\nShe answered more quietly, \"Yes sir. Yes it was,\" she acknowledged.\n\n\"Yes, indeed. Well, there are two more errors.\"\n\n\"Yes sir. I'll find them, sir. I promise.\" It was a dangerous promise and she could feel her heart racing. What if she didn't find them? What if she discovered an additional error that he had missed? Would that also count against her? Still, that was unlikely, wasn't it? She was in any case impressed by his apparent self-confidence that he had discovered all of the possible errors.\n\nShe did not discover an additional error for the next seven pages. With some trepidation she turned to the next page.\n\n\"Take your time, dear,\" Mr. Spader quietly suggested. Normally he would by now have returned to his chair to work on his own papers rather than waste the time supervising this new secretary's proof reading. But, Mr. Spader was in no hurry. He did indeed have work to do, but given the amount he billed by the hour he could afford a few minutes. Plus, proof-reading was itself billable. There was no point in doing a poor job, and nothing that was released from his office should ever have any form of mistake, legal or otherwise. Lastly, he had to admit that he was enjoying himself. This young lady had such an appealingly curved derriere.\n\nMaggie wondered if she was reading too fast. Had she in fact missed an error? Would he let her retrace her steps once she finished the document? Or, would she be given only one chance to find all three? She slowed the pace. Proof reading should be very, very careful and precise. She had probably been rushing, compelled by her agitated state of distress and anxiety. Plus, she was having a bit of difficulty getting it out of her head that he was probably staring at her butt. She nervously shifted her feet, but realized that she was then moving and shifting her bottom in such a way that might be perceived as suggestive.\n\nMr. Spader had naturally been instantly attracted by the young lady's eyes, but it was now apparent that there was more to this young lady's beauty, her appeal, than simply one particular feature. Miss Gyllenhall had a terribly sweet bum, so perky, so round, so delectably inviting. Perhaps our primitive ancestors had it correct when they routinely mounted their mates from behind. Of course, this was not how a lawyer as successful, as prominent, as Mr. Spader should be considering his secretarial assistant, but it was just so difficult to ignore.\n\n\"Jasons!\" Maggie suddenly squealed.\n\n\"Excuse me?\"\n\nMaggie again looked back at him. She did not this time catch his eyes admiring her bum, but she was at least reminded again of where he was standing. It was unlikely to be without purpose, without intent. Mr. Spader was a very meticulous, precise man. There would be few things accidental in his behavior. \"'Jasons,'\" she explained. \"I typed 'Jasons' rather than 'Jason.' It should have been singular.\"\n\n\"Yes, that would be correct, Miss Gyllenhall. Very good. Perhaps you can find the third error.\"\n\nMaggie smiled triumphantly back at him, not in such a way that she felt she had triumphed over him. It was more like she was just so pleased and proud, looking to him for some sign that he shared her pleasure, like a daughter seeking the approval, the pride, of her father.\n\nA partial, weak smile creased the corner of Mr. Spader's lips. \n\nMaggie smiled more broadly. He was pleased. She could see that. Her so very pretty blue eyes twinkled with delight. She returned to the document with renewed vigor and confidence.\n\nBut, the latter quickly dissipated as time again passed with no apparent success. Maggie wondered if the third error was simply an extra space after a period. Could he be that picky? Well, of course, he would be, but it can be so hard to find those, particularly without the assistance of a word processor. She began to study the spacing more carefully, albeit knowing that if this was indeed the error she had most likely missed it somewhere within the first half of the document.\n\nMr. Spader quietly stepped up to his secretary, and leaned over from the waist, looking down over her shoulder.\n\nMaggie sensed his presence, detecting the scent of his cologne. She considered looking back to verify her impression, but if he was as close as he seemed to be, peering over her shoulder, she might find it somewhat uncomfortable to turn to speak to him. It was troubling in more ways than one. She was reminded of when her math teacher, Mr. E. Edward Grey, would stand behind her, studying closely her work as she labored over some complicated algebraic equation. He considered his presence to be a help, in that he could offer some suggestions if she was having difficulty, but it only made her feel more self-conscious and uncertain, as any failure, any error, would be observed instantly. Rather than attempt various possible solutions she was immobilized, staring at the equation, trying to process it solely within her head.\n\nMr. Spader's presence was also troubling in that he was bending over her as she was bending over the desk. She could not ignore the implications. She couldn't get them out of her head. Perhaps it was Mr. Spader's cologne, so sweetly masculine. She forced her mind to resume concentrating on the task at hand. She only had to find one more error and she will have met his challenge.\n\nJoy swept through her. \"I found it!\"\n\n\"Excuse me?\" Mr. Spader inched up a bit to get a closer look, leaning over even further, resting his right hand on the gentle curve of her right bottom cheek.\n\nMaggie lifted up her head. She stared forward at Mr. Spader's leather desk chair, her eyes wide with disconcertion, her lips somewhat parted, her impeccable top two front teeth appearing between her deliciously red, moist lips. Should she say something? Was it not inappropriate for him to be resting his hand there? It wasn't though like he was in fact copping a feel. He wasn't fondling or caressing her. He was just resting his hand to help maintain his position, his balance. There was nothing sexual about it whatsoever, was there?\n\n\"Miss Gyllenhall?\" Mr. Spader prompted her.\n\n\"Oh, yes sir, yes. Um, 'the damn burst.'\" Another homonym. \"It should have been 'the dam burst.'\"\n\n\"Yes, correct, Miss Gyllenhall,\" leaning down even more closely to speak softly into her ear. \"This was a particularly egregious error, Miss Gyllenhall, as you would not want me to be suggesting that the client was somehow cursing, using foul language.\"\n\nShe naturally turned her head to speak to him, to discover his face was just inches from her own. He was even more handsome this close. Their faces were as if two lovers were about to kiss. Her face suddenly reddened, and she quickly turned away, hoping that he hadn't noticed. \"No sir, of course not sir, it won't happen again.\"\n\nMr. Spader suggested, \"Perhaps I should invest in a word processor. Would that make your job easier?\"\n\n\"Oh, no sir! That will not be necessary. And, well, frankly, word processors will not detect homonyms. You must find these yourself.\" She really didn't want him to get a word processor on her account. He would clearly be very disappointed that she would need such a crutch.\n\nMr. Spader wondered if what she said was true, but he wouldn't really know. He lacked the skills of a typist.\n\nHe stepped away, but not before he gave her bottom a couple light pats of reassurance. \"Yes, well, please be more careful, Miss Gyllenhall. This firm does have a degree of respect within the Asheville community, and errors such as these are rather incongruent with our reputation.\" He made his way around his desk and back to his chair, hoping that his secretary would not notice the bulge within his slacks.\n\nHe knew he probably should not have placed his hand on her bottom, and most definitely should not have given her a few pats. As a lawyer he knew he had opened himself up to a charge of sexual harassment. Of course, he really shouldn't worry about that. It's not like he wasn't effective, to say the least, in defending himself in court. Plus, there was nothing overtly sexual in the contact. That wasn't how his cock felt about it, but his dick was unlikely to be called as a witness. As long as she hadn't noticed his erection he would be fine. And, frankly, she was, of course, unlikely to file any complaint in the first place. He slipped into his chair and pretended to be looking for something within his top right drawer.\n\nHe glanced up at his secretary and noticed that she was still prone over his desk, her round blue alluring eyes looking plaintively at him. \"Yes yes, you can go now, Miss Gyllenhall. That will be all.\"\n\n\"Yes sir,\" Maggie softly replied and stood back up, her back feeling a bit stiff. She had been hoping for some statement of congratulation, of appreciation for her fine work. Perhaps that had been the pat on her bottom? She turned and made her way out of his office.\n\nIt was a rather long walk to the door, his office being so expansive. But, perhaps that was just her perception. With each step she could not help but feel Mr. Spader's eyes following the sway of her bottom. She wondered if she should try to keep down the swing of her hips, but that might just make her appear awkward and clumsy, and that could hardly make a good impression. She opted to just let nature take its course, letting her hips swing and sway as she strode to the door.\n\nShe did though glance back as she opened the door.\n\nHe was sitting at his desk, a half-smile on his face, revealing nothing. He wasn't necessarily looking at her bottom. His eyes were on hers, but it was clear that he had at least been watching.\n\n\"Thank you, sir,\" she softly exclaimed, smiling appreciatively, although not entirely sure what she was thanking him for. \"You're welcome, Miss Gyllenhall,\" Mr. Spader replied and then turned his attention back to a document he had retrieved from his desk drawer.\n\nMaggie had not been asked to type any additional material for the rest of the day, much to her disappointment. She had wanted a second chance. She felt quite pleased with herself for having found the three errors, but of course she was equally disappointed in having committed the errors in the first place. She would like to demonstrate, particularly the first day on the job, that her performance could in fact be impeccable, could in fact meet his standards of excellence. But, instead, he had her researching some lawsuit, which she found to be more interesting than simply typing, but hardly a true test of her skills.\n\nShe in fact appeared to be performing rather well for the next few days, as there were no calls to review her work, no lectures as to the quality of her performance. She was naturally pleased, of course, but she also found the days to be rather routine, if not tedious. Mr. Spader was most definitely not a talkative, gregarious man. He was all business, if not stern and cold. Still, she was most definitely pleased that he was apparently pleased, or at least satisfied, which was a considerable relief given how much time she had been taking to proof her own work before she turned it in. If there had been a mistake in any of her work she would probably have had a considerably difficult time finding it.\n\nShe was feeling so comfortable that today she had worn one of her more feminine dresses, a nicely form fitting yellow cotton summer dress, all sprinkled with white daises. It outlined her breasts well, evident by the heads of men which naturally turned as she made her way down the hall to Mr. Spader's wing of the refurbished townhouse, carrying a little yellow vase filled with daisies. She was quite the sight as her heels clicked and clacked down the long hardwood floor.\n\nIt was apparent that she even caught Mr. Spader's eye as he passed her desk to enter his office. He didn't just flop down on her desk a stack of work that he had developed the previous evening. Instead, he actually briefly paused, noticing the matching dress and flower vase. He didn't say anything, but he didn't have to. She had clearly made an impression, and hopefully a good one. After he entered his office she wondered if perhaps her outfit was too informal, too feminine. Maybe his look was one of disapproval!\n\n\"Miss Gyllenhall, could you come in here please?\"\n\nIt was from her intercom. He was calling her in, once again. She did not, however, expect any difficulty. He was now calling her in numerous times each day. She retrieved her pad and pressed down the switch to respond, \"Shall I bring my pad, sir?\"\n\n\"No, no,\" she could hear him responding, his voice kind of scratchy through the old speaker. \"That won't be necessary.\"\n\n\"Yes sir,\" she responded, but she brought the pad and pen anyway, just in case she might need it.\n\nShe entered his office, only to see her latest work lying on the desk, front and center, Mr. Spader standing once again to the side.\n\nHe noticed the pad. \"Miss Gyllenhall, did I not tell you not to bring the pad? That it would not be necessary.\"\n\n\"Yes sir,\" she softly acknowledged.\n\n\"Do you feel that I am not capable of making this judgment?\"\n\nShe shook her head. \"I'll but it back, sir,\" she offered.\n\n\"No, no,\" he replied, waving her forward.\n\nShe quickly made her way to the desk. Once she arrived she asked, \"Shall I leave the pad here, sir?\" She gestured to the right side of his desk.\n\nHe silently nodded.\n\nShe carefully laid the pad and pen down and then shifted over so that she was standing a couple of feet from the desk, right in front of the document. \"How many errors were there, Mr. Spader?\"\n\n\"Just two this time, Miss Gyllenhall,\" he quietly replied. It was good that she fully understood his concern, and the necessary recompense.\n\nWell, that wasn't many, but it was clearly two many too much. She slowly leaned forward, bending at her waist, until her hands and elbows rested on either side of the document. It was a contract for the purchase of a rare oil painting, which required considerable detail given that the party receiving the painting wanted quite a few stipulations for its transfer and transportation. She began to slowly and carefully study the initial sentence as Mr. Spader made his way around so that he stood just to her left, by her out thrust bottom.\n\nMaggie's dress clung to more than just her breasts. It also outlined very well the curves of her sweet apple bottom. It might as well have been painted on, as it traced so nicely the graceful curve of her round tush, thrusting out and then curving back down to her thighs. It was such a soft little delightful pillow. Mr. Spader could even detect the curving down into the valley of her crack. He had to wonder if perhaps she had worn this dress on purpose, knowing that she had committed some typographic errors on the Kellerman contract, perhaps even committing the errors purposely? Well, that was probably going too far, but it can be difficult not to believe, not to at least wonder, if this pretty girl was purposely dressing provocatively precisely to draw his attention and interest. Otherwise, why dress in such a manner? His cock once again swelled in satisfaction at the sight of such a spell. His hand was yearning for an excuse to touch the soft sloping curves. He considered letting his hand absentmindedly lie across the gentle cheeks. Would she object?\n\nMaggie wondered if Mr. Spader could see the outline of her panties through her dress. The cotton was fairly thin. She now had serious doubts as to the soundness of her decision in what to wear. It clearly had not helped in avoiding his disappointment.\n\n\"Goodness!\" She suddenly exclaimed, \"considerant.\" \n\n\"Yes, Miss Gyllenhall, what precisely is 'considerant'?\"\n\n\"Well, sir, of course, 'considerant' isn't anything. I should have typed, 'considerate.'\" \n\n\"So, you do know how to spell 'considerate'?\"\n\nMaggie was mortified. \"Of course, sir. I was just typing so fast that apparently it just came out that way.\" However, in all honesty, the error was in fact due to her failure, at the moment, to recognize the correct spelling. The spelling she had provided just seemed to better fit the sound of the word. But, now that it had been pointed out to her, it was clearly wrong. This was a pretty bad mistake.\n\n\"Yes sir, absolutely sir, it won't happen again, sir.\"\n\nHe gave her bottom a few pats. He just couldn't help himself. How could any reasonable man? And her cheeks felt so precious through the thin fabric of the summer dress. \"Yes, well, let's see if you can find the second error.\"\n\nMaggie looked around in front of her, not looking at anything in particular but wondering how to react to the gentle pats on her bottom. These pats felt a bit more personal, a bit more intimate, than the ones a few days ago, although perhaps it was simply a reflection of the thinness of her dress, allowing a bit more intimacy in the touch. \"Thank you, sir,\" she replied, shifting her attention away from his hand, and her bottom, to the contract.\n\nShe studied it further, and then quickly discovered the error. \"I should have typed 'admissable' instead of 'admissible'!'\" She has been pretty sure 'admissible' was correct but no longer entirely sure.\n\nTHWACK!\n\nMaggie lurched forward and her face rose up in shock. The room was filled with a deathly silence. She froze in place.\n\nWas that really what she thought it was?! Clearly it was. It couldn't be anything else. Mr. Spader had actually given her a whack on her bottom?! Well, yes, most definitely he had!\n\nShe didn't know quite what to say or how to respond. Did he do this with all his secretaries? She was speechless and dumfounded. This just didn't seem right for so many reasons. Her mouth was open, her large pretty blue eyes were wide in wonder and concern, staring straight out in front of her, wondering what to say or do.\n",
        "Mr. Spader finally spoke. \"No, Miss Gyllenhall, that was not correct.\" This was an error compounding the original error. He felt it deserved more than just simply a verbal reprimand. Still, he also knew that once the spank had been released it could not be taken back. It was now out there. He had never done any such thing with a secretary before. Of course, no secretary had ever presented herself in such a manner before. He waited anxiously for her reaction.\n\nMaggie realized that this was a moment of truth. Perhaps this was in part why Mr. Spader had previously gone through so many secretaries. Perhaps this was the hurdle over which she would have to leap that none had previously been able to surmount. She wondered if her mother had ever been spanked by one of her executive employers. The most successful and powerful businessmen are likely to be the most quirky and unconventional.\n\n\"Sorry, sir,\" she eventually responded, her voice subdued and contrite. She arched her back, providing a more receptive, clearer target.\n\nMr. Spader took a deep breath of relief. Apparently she wasn't going to simply walk out of the office in outrage and protest. In fact, not only did she not object she was providing a clearer, more provocative pose.\n\nMaggie continued to read, and then suggested, \"I should have typed 'council' here rather than 'counsel'.\"\n\nTHWACK!\n\nThe thwack again jolted Maggie forward. Apparently that wasn't the error. She took a deep breath. It would seem that she was going to get a spank every time she guessed wrong. Well, that was only just. Mr. Spader was a very busy man who charged hundreds of dollars an hour. She could not have him waste his time by asking about most every word she had typed. She would have to be more careful in the future.\n\nMr. Spader suppressed a smile. The feel of his hand on the young lady's bottom the previous day had been so nice. The pats had been even more delightful. The spanks though were at an entirely new level. He had never actually spanked a woman before. It wasn't that it had not crossed his mind. The opportunity had presented itself rather often on many different occasions. Perhaps the most appropriate time would have been when he was doing it with a girl from behind, but he had never felt the courage, the honesty, to try a spank, assuming, perhaps correctly, that she would not have been receptive to the gesture. He therefore had limited himself to affectionate little pats. He now knew what he had been missing, and he sorely regretted never once having made the attempt, if not at least the suggestion. His cock was rock hard in his slacks.\n\nHe actually found himself hoping that she would make another mistake.\n\nMaggie very tentatively said, \"I typed 'quash' rather than 'squash.'\"\n\nTHWAP!\n\nApparently not.\n\nThis time Mr. Spader let his hand rest against Maggie's bottom after its sharp collision with her butt. It wasn't the traditional way to spank a girl, wherein one quickly removes the hand for another smack, perhaps even just a glancing blow. There might be somewhat less force behind a spank when it simply collides with the butt, but this approach also allowed Mr. Spader to momentarily clasp the curves of Miss Gyllenhall's sweet soft round ass within his hand.\n\nMaggie didn't feel that the spanks actually hurt. He was swinging his hand pretty hard but it was through her dress, panty hose and panties. It was more embarrassing than anything else. But, gracious, he was now just leaving his hand there, even clutching her butt. She certainly hoped nobody would come into his office right now! Of course, they would knock first, wouldn't they? Everyone knew better than to just step into Mr. Spader's office.\n\nMr. Spader stepped up a bit closer to Maggie, close enough that the very tip of his swollen knob made contact with the curve of her derriere.\n\nMaggie again paused in her reading. Was that what she thought it was? This time it wasn't really clear, or at least it just seemed too bizarre to believe. It was difficult to imagine it was anything else. It couldn't be his knee. It was unlikely to be a knuckle. It could be something in his pants pocket. Perhaps a cell phone? But, he wouldn't carry it there. He was always too immaculately dressed to have bulky objects in his pockets. He did not like to detract from the smooth lines of his suit. Still, could it really be what she was thinking? No, that just couldn't be. Mr. Spader was too professional for that. She needed to take her mind out of the gutter and back into the contract.\n\n\"Oh! I see it!\" Maggie suddenly announced with pride and confidence. \"I typed that his face was beat red, and it should have been beet, with two e's.\" Another homonym error. Those were just so easy to commit and so hard to notice!\n\nMr. Spader was disappointed, although he should be pleased that Miss Gyllenhall had discovered the second error. \"Yes, well, that is indeed correct.\" He slid his hand across the delicious curves of Maggie's bottom. Her dress was thinner than her business skirt and he had let his hand linger there awhile. He gave her a little caress as he said, \"Excellent, well, why don't you head back to your desk and make those corrections. I will let you know if I need you for anything else.\"\n\nMaggie could sense the disappointment in his voice and she was troubled. Hadn't she done a good job? Well, perhaps not. Three times she had failed to identify the second error. Maybe he was disappointed about that. Well, of course he was, as she had been spanked each time. She picked up her pen and pad and slowly made her way across his office, feeling quite disappointed in herself, and again wondering if his eyes were following her bottom.\n\nJust before she left she turned her face back to him, stuck her bottom out just a little bit, not enough so that it was clearly intentional or obvious, just enough that he was likely to notice it, and said, \"Thank you for the spanking, sir. I know I deserved it. I'll do better the next time.\"\n\nMr. Spader was by now behind his desk, his expressionless eyes fixed in her direction, not revealing what was truly on his mind. \"Yes, well, very good then. Back to work now.\"\n\n\"Yes sir,\" Maggie quietly replied and extricated herself from Mr. Spader's office.\n\nHowever, as soon as she returned to her desk she wanted to return to him. She felt strangely uncomfortable, unable to sit still in her seat. It wasn't that her bottom stung or anything like that. It had only been three whacks and each one through three layers of clothing. No, her bottom was not stinging. She just felt so on fire, so excited.\n\nExcited? Was she really? She looked around her. There was nobody within eyesight. She felt such an urge to touch herself but, of course, she dare not. Gracious, what if somebody walked in? Nobody knocked before they entered her area. And, what if Mr. Spader came through the door while her fingers were up her skirt? Masturbating on the job would most definitely be cause for dismissal in any employee's handbook, and rather embarrassing as well. How would she explain that to her mother?!\n\nBut, the urge was just so intense, so severe. She desperately concentrated on her work and, with time, the fire began to diminish, becoming only a tingly warmth, and then eventually flickering out altogether.\n\n- - - - - - - - - - - - - - - -\n\nThe next day Maggie's heart raced a bit as she made her way to her desk. The outfit she was wearing was a bit risque, at least for a secretary who might have to bend over a desk. It was a rather short cocktail dress, very thin and clingy, albeit also very delicate and feminine. A cocktail dress was a bit over the top for a secretary, but it wasn't easy keeping up with the designer suits of Mr. Spader. It did cling nicely to her breasts, or more accurately seemed to tightly wrap each one rather than cover them. She wondered though if Mr. Spader would even notice. He hadn't seemed to notice them before, which was perhaps understandable as they were not very big. But, in this dress they would really be very difficult to ignore. Well, at least that's how Maggie felt about it.\n\nOf course, she wasn't so sure she should wear such a thing, or even for certain why she was wearing it. Perhaps he would appreciate that it was too risque for a spanking. Perhaps he would find it so appealing, so attractive, that he would forgo a spanking that day. Or, on the contrary, perhaps it was just inviting trouble, which might in fact be her true intention. Mr. Spader might not have been finding the spanking to be particularly arousing, although she certainly had. She had not had a more troubled sleep in quite some time, being continually awakened by rather disturbing dreams; ones that she most definitely wouldn't tell anyone, not even a professional psychiatrist.\n\nWell, in any case, she was wearing a dress today in which she would most definitely feel the spanks.\n\nMr. Spader though did not seem to even notice her outfit as he passed her desk repeatedly throughout the morning. She didn't know if she was relieved or disappointed. She was definitely disappointed that he apparently did not found her attractive. A woman who is wearing a provocative cocktail dress does not want to go unnoticed. But, she was pleased that he had not called her in for a spanking, but then again, maybe she was even disappointed in that.\n\n\"Miss Gyllenhall,\" the intercom crackled, \"Would you come in here, please?\"\n\n\"Oh yes sir!\" Maggie quickly replied, a smile crossing her face. She left her notepad behind her, scampered to his door, and then paused to brush and straighten her dress. With the smile still gracing her lips she entered his office.\n\nMr. Spader watched without apparent reaction as Maggie approached his desk, the document resting in its usual position.\n\nBut, Mr. Spader would not be a man if he had not admired her beauty. He had indeed noticed her dress earlier, in fact repeatedly passing her desk to enjoy another look.\n\nMaggie's dress was so terribly feminine and delicate. It was a bright yellow, with little green vines traversing her entire body, wrapping around her breasts, sprouting purple and red orchids. Orchids didn't actually grow on vines, but perhaps they should as it was really quite pretty. Plus, the dress did indeed cling to her figure so deliciously. Her hips swung and swayed with each step, the hem of the skirt bouncing with the movement of her thighs.\n\nBut, if there was one thing that a lawyer can do, it is to maintain a straight face in the face of severe provocation, and Mr. Spader was a very, very good lawyer.\n\nMaggie stopped when she reached the document, and then gradually bent over, keeping those lovely blue eyes fixed on his as she slowly assumed the position, the cleavage of her top falling open to reveal to his eyes that she was wearing a matching yellow brassiere.\n\nThere was something so nice, so sweet, so enticing, about getting a peek down into the bodice of a dress. You know you were seeing something that was supposed to be hidden from view, something personal and intimate. Mr. Spader let his eyes linger on his secretary's alluring titties for a moment, admiring what little of them he could see.\n\nMaggie saw where he was looking and wondered if she should reach down and pull her cleavage open further.\n\nMr. Spader lifted his eyes to Maggie's, their eyes meeting, Mr. Spader realizing that Maggie had caught him peeking down into her dress. There was a moment of acknowledgment, of recognition, but it did not last long. He got up from his desk and made his way around to take his position behind her behind.\n\nHe wondered if his secretary was more attractive from behind. It was an odd thought and of course not really true, as Maggie was such a pretty woman with such an expressively adorable face. But, she also had such a perky round tush, and this dress hugged her curves like the thinnest of tissue paper. Plus, it was so short that it now just barely covered her panties. He wondered if they matched her brassiere. He imagined that must be true, and wondered further if he did indeed have to imagine. Perhaps he could get a peek beneath her skirt? Yellow panties. That sounded so nice.\n\nHe stepped up to her and reached for the hem of her skirt. A skirt that short was meant to be lifted, wasn't it?\n\nBut, his hand paused just as his fingers were about to make contact with the thin, delicate fabric. He pulled his hand way.\n\nInstead, he said, \"Just one error today, Miss Gyllenhall.\"\n\n\"Yes sir,\" Maggie replied, wondering what was going on behind her. It was such a strangely erotic position to be in, to have the guy be able to see so much, to be able to do so much, yet she would not be the least bit aware.\n\nShe felt such a strong urge to look behind her, to see what he was looking at, what he was doing, but her eyes focused instead on the document, carefully studying it.\n\nOne error, only one. That should be easier, shouldn't it? She only had to find one. She only had to find one error rather than three. However, in one regard it was in fact more difficult. With three errors one had three chances of finding the first one. One error, in contrast, was like a needle in a haystack, which wasn't far from the truth, as this document was 38 pages long, including close to 17,000 words, only one of which was apparently misspelled. Of course, finding the second and third errors made finding all three ultimately more difficult than finding one, but at the moment Maggie was concerned with only one error and it seemed much more difficult than she had experienced before.\n\nMaggie studied the document for quite some time, at times reading out loud, at times reading to herself, all the while Mr. Spader stood quietly behind her, studying the soft, tender, curves of his secretary's derriere. It did not take long for his cock to come to full erection, thrusting out his pants like a blunt club. He slipped his left hand into his pocket to grasp hold of it; not so much to squeeze and fondle it, but to pull it back tight against his abdomen in case Maggie looked back at him.\n\nMaggie very tentatively suggested, \"It's the word, 'n0rp.'\"\n\nTHWAP!\n\nClearly not, she thought, as her body jolted forward with the thwap. She should have known better. Mr. Spader had been very clear about the spelling of \"n0rp.\" She had difficulty believing it at the time, and had now wondered if he had purposely misled her, giving her a misspelled word that he could then punish her for later. Well, apparently she had been wrong, but she still didn't understand what it meant. \n\nShe squirmed her bottom a bit and wondered if the squirming was making her skirt rise up. The thin cocktail dress was not nearly as protective as a business skirt, but that was not the only problem. She could also feel another sort of tingling.\n\nShe tried to remain still as she returned her attention to the document.\n\nMr. Spader revealed a hint of a smile as his hand rested upon Miss Gyllenhall's bottom. He now appreciated his secretary's choice of apparel even more, as his palm and fingers felt so much closer than ever before to Miss Gyllenhall's soft curved bottom. He clearly detected her panties through the skirt, again wondering if they were a match to her brassiere. He gave her delicate round tush a little squeeze, his cock swelling and yearning within his pants as his fingers gripped that girlish fanny. \n\n\"'Pwned.'\" That had to be a mistake.\n\nTHWAP!\n\nMaggie's body thrust forward again with the sharp, forceful collision of the spank. She squeezed her sphincter.\n\nMr. Spader admonished her for the second error. \"Miss Gyllenhall, I explained n0rp and pwned to you when I dictated the letter.\" His hand rubbed and gripped her right cheek. \"Are you suggesting that it was I who had made a mistake.\"\n\n\"Oh, no sir, not at all. I just, well, I had not, um, seen these words before.\"\n\nMr. Spader's eyes were fixed on Maggie's derriere. The movement of his hand had caused her dress to slip up just a bit higher. He leaned over to the right, tilted his head, and nodded. Yes, she was indeed wearing matching yellow panties. \"Yes, well, try to be a bit more careful, shall you?\"\n\n\"Oh, yes sir,\" Maggie replied, and continued to study the manuscript.\n\nWith considerable reluctance Mr. Spader released his hand from Maggie's rump. However, he used it to press down a bit on her lower back. He quietly instructed, \"Arch a bit more, if you would, Miss Gyllenhall.\"\n\n\"Yes sir,\" Maggie replied, providing her bottom with a bit more lift, a bit more thrust, increasing the obscene implications of her pose, her presentation.\n\nMr. Spader though walked away, slowly making his away to the other side of the room, releasing now his left hand from his pocket to let his cock jut out his pants. When he reached his orchid garden he studied the sight of Maggie's thrusting bottom in the reflection of the glass. Her orchid dress complemented well the orchids within his garden, albeit he had to admit that her yellow panties peeking out from beneath her skirt were really much more beautiful than any of the flowers.\n\nKnock Knock.\n\nMr. Spader turned calmly toward his office door, his hands clasped in front of his crotch. \"Yes, please, come in,\" he instructed, loud enough to be heard through the thick mahogany.\n\nMaggie jerked her head up from the document, her eyes wide with shock and concern. She quickly looked back at Mr. Spader, her eyes now stricken with fright. Was he serious? Would he let someone come in now?\n\nMr. Spader though wasn't even acknowledging her concern. He was just standing there, calmly, indifferently waiting for whomever might now enter his office.\n\nMaggie strained to look back at her bottom, not taking her hands from his desk, wondering how much she was exposing, how lewd she appeared. She could see that her dress had risen up a bit. She so, so hoped that it had not risen so far as to reveal her panties. But, even if that wasn't true, it was still a very compromising pose.\n\nShe turned, just her face, to see who was entering the office.\n\nThe young man said, \"Excuse me?\"\n\nMaggie quickly turned her face away. It was Steff McKee, the supply boy. He wasn't really a boy. He was eighteen or nineteen years old. Maggie wasn't sure which, but he did remind her of a boy, as he looked so young for his age. Steff was as uncomfortable about this as Maggie, perhaps even more so. He could clearly see that he should not have opened the door, as Miss Gyllenhall was bent over Mr. Spader's desk, thrusting her bottom out, a bit of yellow panty clearly evident. Something was wrong here, very wrong indeed!\n\n\"Steff,\" Mr. Spader spoke calmly from the other side of the opened door. \"Do you have something for me?\"\n\n\"Um,\" Steff turned his face away from the sight of Miss Gyllenhall. He was reminded of when he had accidentally stepped in on his sister as she was fixing her make-up after a shower, her naked body covered only by a tightly wrapped towel. He had felt so, so mortified. He knew he should have knocked first. His sister didn't help by giggling at his obvious embarrassment and discomfort. \"Yes sir,\" he called out loudly. \"I have the, um...\" He glanced down at his left hand, having momentarily forgotten precisely what he was delivering. \"The, um...Montblac pens.\"\n\n\"Yes, yes, excellent,\" Mr. Spader replied. \"Bring them in please.\"\n\n\"Yes sir,\" Steff replied, pushing the door open further, just enough for him to step into the office and look around the door, to find Mr. Spader standing by his orchid garden, his hands remaining clasped before him.\n\nHe pushed the door all the way open and made his way toward Mr. Spader, holding out the box of pens for him to take.\n\nMr. Spader did not himself use Montblac pens. He preferred his Graf Von Faber-Castell pen. But, he would purchase a set of personalized Montblacs engraved with the name of his firm. Clients and colleagues enjoyed walking off with them, as if he didn't notice. ",
        "\"Steff,\" he asked when the boy was about halfway to him, \"Do you think I want to use them right now?\"\n\nSteff stopped. \"Oh...um, yes, no, of course not.\"\n\n\"Correct,\" Mr. Spader replied, tilting his head toward his desk, \"Now, if you would, place them on my desk.\"\n\n\"Oh, yes sir, of course, sir,\" Steff replied and turned to his left to take the box to Mr. Spader's desk, as he instructed.\n\nAs he made his way to the desk his eyes fixed on Miss Gyllenhall's bottom, so delightfully, so lewdly, jutting out toward him, seeming to get bigger and bigger the closer he got. His eyes were particularly fascinated with the glimpse of yellow panty, and it was at the location, the place, that was the very best part of a panty: the soft, rounded curve of her cunnie mound, tightly wrapped in bright yellow cotton.\n\nHis penis began to swell within his briefs. He tried to think of something else, tried not to notice the lovely shape of her long, curved legs, the delicious roundness of her bottom, the silky smoothness of her womanly thighs, the enticing seductive cunnie pouch peeking out just below the hem of her skirt. But, he couldn't do it. He had noticed previously the prettiness of Miss Gyllenhall's eyes, her lips, her skin. He could not really be expected to look away now. But, if he were in fact to develop an erection, one noticed by the secretary, or even worse by Mr. Spader, he would most likely be out of a job.\n\nMaggie could hear the young man approaching her. She felt such an intense, urgent, compelling demand to at least decrease the arch in her back, to lower her bottom, but Mr. Spader had given her no such directive. On the contrary, he had been quite clear and explicit in his instruction to raise her bottom up. She could not, would not, disappoint him now. But, she felt so, so exposed, so ashamed, so humiliated.\n\nPerhaps she could at least adjust her skirt, pull the hem down to ensure that her panties were indeed still hidden. That would be the demure, the polite thing to do. Her hands felt like they were burning, like the wood was on fire, but she kept them firmly stuck to the mahogany finish. She softly whimpered her distress.\n\nSteff stopped when he reached Miss Gyllenhall's bottom, and Mr. Spader's desk. He gently laid the box on the corner nearest him. He wondered if he should say hello to Miss Gyllenhall. He normally would. It would be the polite thing to do. It would be rude not to do so. \"Good morning, Miss Gyllenhall,\" he quietly offered.\n\n\"Yes,\" Maggie replied, not turning her beet red face, \"Yes, yes it is.\" As soon as she said it she realized that her response was actually a non sequitur. He was just saying hello. He wasn't making an observation about anything. But, to correct herself at this point would only draw further attention to her error.\n\n\"The other side,\" Mr. Spader instructed the young man from across the room.\n\n\"Oh, yes,\" Steff replied. He carefully stepped around Miss Gyllenhall's thrusting butt, trying to keep his eyes averted, not just because her sweet delicious tush would cause his dick to further swell but also to avoid letting Mr. Spader notice that he was looking at his secretary's jutting rump.\n\nSteff had no idea what had been going on in this office prior to his arrival. It was most definitely clear that it was something not appropriate. Still, it was not his position, as supply guy, to pass any judgment. Heck, he couldn't, shouldn't, even acknowledge that he was noticing anything. Hence another reason to lose the erection.\n\nHowever, what was Mr. Spader doing on the far side of the office if something inappropriate was going on, and why didn't Miss Gyllenhall do anything to hide the fact? Maybe this was all just completely innocent? Maybe. Everyone does say that Mr. Spader was some strange dude. He placed the box on the other corner of his desk. He glanced at Miss Gyllenhall's face, not entirely sure that he really wanted to make eye contact, but perhaps some understanding would arise if he did.\n\nMiss Gyllenhall though was staring straight ahead, another indication that something very strange was going on here, something that perhaps he had interrupted and should quickly extricate himself from. \"Yes, well, um...\" He turned away from Miss Gyllenhall, with both reluctance and relief, fixing his eyes on the floor as he quickly strode toward the office door. \"I've got a lot of supplies to, um...organize.\" He did though at least stop at the door to ask, \"Is there anything else, Mr. Spader?\"\n\nThere was a moment of silence, a moment much too long for both Maggie and Steff.\n\nMr. Spader finally responded, \"No, Steff, that will be fine.\"\n\n\"Yes sir, thank-you sir,\" he replied and immediately removed himself from Mr. Spader's office.\n\nMaggie took a deep breath of relief. Thank goodness that was over. But, she knew it really wasn't. Her face would most definitely redden the next few times she would see Steff. She wondered if she should, or even could, explain it to him later. Not likely. It was probably best to just pretend that it never happened.\n\nMr. Spader strode up to Maggie, or more accurately, her bottom.\n\nHe leaned down over her back, looking over her shoulder. \"Have you found the error yet, Miss Gyllenhall?\"\n\n\"No sir, no I haven't.\" Clearly she had not, and his so very close presence wasn't helping matters. She felt under considerable pressure, her boss peering so intently over her shoulder, and there was again yet another pressure he was providing, one against her bottom, one that was more physical than psychological, yet also came with considerable emotional pressure as well: she could again feel Mr. Spader's swollen knob pressing against her butt.\n\n\"Well, keep looking, although I am not so sure it was on this particular page.\"\n\n\"Yes sir,\" she replied, turning the page. Apparently it wasn't on that page. She smiled. It was really quite nice of him to help her like that. Gracious, the documented contained 38 pages!\n\nMaggie wondered if he knew that he was touching her with his penis. One would think that he would. If she could feel it then it could feel her. He must be feeling her soft bottom pressing against the head of his hard, stiff penis. But, sometimes one person is more aware of a physical contact than another.\n\nOne of her instructors at Weston College, Mr. Shore, would often reach around her body from behind while instructing her on proper typing and shorthand. His arm would occasionally press against the side of her breast. She most definitely noticed it but she never felt that he did. He was a very dignified, upright, and moral gentleman. He would never intentionally do anything like that.\n\nThis was clearly different. This was the head of an erect penis. Mr. Shore would certainly have noticed if his erect penis was touching her breast. Maggie suppressed a smile at such a thought.\n\nShe pointed at what could be the error. \"This isn't it, is it, sir.\"\n\nShe was pointing at the phrase, \"In forma pauperis.\" She was pretty sure she had gotten it correct, but was no longer at all certain.\n\nMr. Spader pressed his cock more tightly against her butt cheek and lifted his hand, as if he was about to give her a spank.\n\nMaggie bit her lip and looked around at nothing in particular, waiting for her bottom to be smacked.\n\nBut, no spank arrived.\n\nMr. Spader slowly lowered his hand.\n\nMaggie had been rather clever. She had phrased her statement quite carefully, like a good lawyer would. She had not proposed that \"In forma pauperis\" was the error. On the contrary, she had proposed that it was not. If he had said it was, then she could identify it as the error. But, it was no error on her part to indicate that it was correct.\n\n\"Yes, quite right, Miss Gyllenhall. That isn't it.\"\n\nHe shifted his line of vision from over her left side to over her right, gliding his knob along her bottom as he did so, momentarily breaking contact when the crown crossed the crack of her ass. \"I suspect you shall need to keep looking,\" he added as he pressed his cock even tighter against her butt.\n\n\"Yes sir,\" Maggie softly replied.\n\nMr. Spader continued to read along with her, over her shoulder, at times leaning in closer, at times pulling back, at times shifting left, or right, each movement accompanied by a concomitant shifting in the position of his stiff dick against her soft round bottom.\n\nMaggie's heart was racing. What was happening was now unmistakable. She had felt this once before, on a subway car, during a trip to Los Angeles. She at first denied what she seemed to be feeling. Most any girl couldn't really imagine that a guy would do such a thing.\n\nBut, it soon became very evident on the train that it was indeed true. Some strange guy was pressing his erection against her butt! She was naturally shocked. How could a guy do such a thing (but see \"Riding coach\" for an explanation).\n\nShe had reached back with her hand to brush the man away, but that only resulted in her fingers briefly making contact with his erection. Once she touched it she quickly pulled it back, not wanting him to think that she had done that on purpose, that she was trying to encourage him.\n\nShe considered turning to confront him, to angrily demand that he cease and desist such effrontery, such impudence, but she feared as well such a confrontation. Plus, he could simply deny it, and she might come across as the crazy, looney, irrational girl. \n\nAnd, then, an older woman, standing in front of her, gently laid a reassuring hand on her shoulder. \n\nAs she looked up at her, beyond her large thrusting breasts, she saw that the woman was smiling down at her, knowingly. She asked, \"Doesn't it feel nice?\" or more like announced rather than asked.\n\n\"What's he doing?\" Maggie had softly whimpered.\n\n\"What any sweet girl like yourself would want him to do, if she was brave enough to ask.\"\n\n\"Oh my,\" Maggie had softly exclaimed, and stayed quite still, as he continued to rub and thrust his hard-on against her butt, as the older woman pressed her breasts into her face.\n\nIt was so terribly humiliating, and even more so when she began to realize that she was getting wet and aroused, eventually squirming her bottom against the man's hard cock, albeit as subtly and discretely as one could, or should, on public transportation. She so wished she could take the older woman's nipple within her mouth.\n\nWhen her stop arrived she quickly extricated herself from the train, reaching back behind her to discover a very evident wet stain on the back of her skirt.\n\nMr. Spader suddenly wrapped his hand around Maggie's waist and pulled her bottom tightly against his crotch.\n\n\"Waste!\" Maggie suddenly exclaimed.\n\n\"What?\" Mr. Spader responded, releasing his hand from Maggie's waist, albeit his cock was still pressed against her soft, pliant butt. \"Another homonym. I typed 'waste' rather than 'waist.'\"\n\nMr. Spader hesitated for a moment, actually contemplating whether he could lie, telling her that was not the correct error, that there was an additional error. But, that would be dishonest and disrespectfully manipulative. Of course, he was a lawyer, so it hardly was outside of his norm to do such a thing. Perhaps more importantly, he would get caught in the end, for there was not in fact another error. Any continued search would be in vain.\n\nHe stepped back from his secretary and made his way around the desk to his chair.\n\nMaggie glanced to her left, although keeping her head still so that Mr. Spader wouldn't notice. Her eyes widened with shock at the very clear, large bulge protruding from Mr. Spader's grey D'Orsi slacks. She wasn't shocked to see it. She had clearly known it was there, although it was a bit startling to now actually see it. But, what shocked her most was that it was clear Mr. Spader was not a small man.\n\nAs Mr. Spader sat back down into his chair he quietly acknowledged, \"Yes, that was indeed correct, Miss Gyllenhall. You can return to your desk and resume your duties.\"\n\n\"Yes sir,\" Maggie replied, hesitating though, just a bit, just in case he might indeed change his mind.\n\nBut, Mr. Spader opened a file and began to closely peruse the material contained therein, no longer even acknowledging Maggie's presence.\n\nMaggie slowly pushed herself up from his desk, her back again feeling a bit stiff, her cunnie so terribly inflamed. She licked her lips, turned around, and slowly made her way out of his office.\n\nAs she did so Mr. Spader did finally look up, his eyes following the swinging of her hips and bottom.\n\nThis time Maggie did not look back. She knew where he was looking. She didn't want to embarrass him by catching him ogling her derriere. But, she couldn't stop clenching her cheeks.\n\n- - - - - - - - - - - - - - - - -\n\nThe next day Maggie was wearing one of her more conservative business suits. She had wondered if perhaps she had been dressing too provocatively, seeming to actually be flirting with Mr. Spader, perhaps even enticing him into spanking her. It was now clear to her that a part of her, a deep, dark, secret part, was finding some pleasure in what he had been doing, and she was not proud of that. The recollection of her experience on the train had confirmed that suspicion.\n\nShe did not want to provoke Mr. Spader any further. She did not want to keep this job simply because she was providing eye candy for her boss, a tactic clearly used by some secretaries she had known.\n\nSo, today, she was wearing a dark jacket, dark skirt, black nylons, and heels. The length of the skirt would hide her panties well, even if she was spanked. Beneath the jacket though was a pink silk blouse. It was important to have at least some color.\n\nThe tactic appeared to be working as it was a rather dull morning, by that meaning there had been no chastisement, no castigation, no spanking. She wasn't exactly sure though how she felt about it, albeit also admonishing herself for actually contemplating the possibility that perhaps she missed the discipline.\n\nOf course, its absence might have been due simply to the fact that Mr. Spader's schedule was so packed with meetings, with current clients, opposing lawyers, potential clients, and even judges. It seemed like there was an endless stream entering and leaving his office.\n\n\"Miss Gyllenhall.\" It was Mr. Spader's crackling voice through the intercom. \"Would you come in here, please?\"\n\n\"Yes sir!\" Her heart raced. Had she committed some errors? She most definitely hoped not, but then a part of her kind of hoped there had been. She should probably be spanked just for having such a desire!\n\nHowever, as she opened the door she realized that, of course, he was still within the middle of a meeting. Sitting on the couch and chairs around the coffee table were senior executives from the Bluestar industrial firm.\n\nShe paused at the door. \"Sir? You want me? Now?\"\n\n\"Yes, yes,\" Mr. Spader impatiently replied. \"If you would please, come in here,\" waving her in as an order more than a request.\n\n\"Yes sir,\" Maggie replied, wondering what this was about, and then realized that they probably just wanted some coffee or something. She glanced over at the bar. There was coffee already available. Perhaps he wanted her to serve the men? That would be reasonable. His clients aren't paying Mr. Spader hundreds of dollars so they could serve themselves coffee. Maggie asked, \"Would you like some coffee, sir?\" She made her way to the bar.\n\n\"No, no, if you wouldn't mind, please, you can stay right there.\"\n\nShe wasn't near anything in particular at the moment. She was just standing in the middle of the room, feeling rather uncertain, and frankly a bit self-conscious. \"Sir, is there anything wrong? Anything I can do?\" \"Well, Miss Gyllenhall, Mr. Barnes here has just informed me that they did not receive the Butterfield report yesterday.\"\n\nOops. She had forgotten to take it over to their office, as Mr. Spader had instructed. \"Sir, I'm sorry. I totally forgot. I was, um...well, a little distracted yesterday.\"\n\n\"Distracted? You were distracted?\"\n\nShe realized that being distracted was not a particularly good explanation. \"Yes sir,\" she softly replied. \"I can get it right now, sir. It's on my desk.\"\n\n\"No, no, Miss Gyllenhall, I have already provided them with my own copy.\"\n\nThere was a moment of awkward silence. Maggie wondered if she should just apologize, again, and extricate herself from the office. She knew though that once these men left he would most likely want her to return.\n\nMr. Spader eventually asked, \"Do you realize the potential cost to our clients, to us, to the firm, of this...distraction?\"\n\n\"Yes sir,\" she replied very quietly, her head bowed contritely, her hands clasped before her, looking as guilty, penitent, and remorseful as she could.\n\nMr. Barnes, the CEO of Bluestar, actually felt rather sorry for her. She was such a pretty young thing. He felt like reassuring her that it was alright, that there had been no real harm.\n\nMr. Spader got up from his chair and made his way over to stand near her, not quite by her side, but almost within arm's reach. He gestured with his hands, arms out, palms up and open. \"Miss Gyllenhall, you've really left me with no choice. I must demonstrate to Mr. Barnes that we, this firm, cannot, and do not, tolerate such errors, such mistakes...such distractions. Do you understand?\"\n\nShe thought she did. She figured she did. But her heart was again racing as she considered it. She felt a little light headed, a little faint. She glanced nervously over at the three men. She turned back to Mr. Spader. He really wasn't going to have her do this in front of strangers, was he? \"Yes sir,\" she softly answered, not entirely sure she really did understand.\n\nHe instructed her in his typical business-like, dispassionate, almost indifferent tone, \"If you would please, take the position.\"\n\nMr. Barnes' ears perked up, his eyes widened. What did Mr. Spader mean by that?\n\nMaggie felt so nervous, and now so very much distracted and confused. \"At the desk, sir?\" \"No, no,\" he replied, \"where you are right now will be fine.\"\n\nShe was not real certain what she should do. Mr. Spader was so precise and exacting. She would hate to make a mistake now. This was perhaps her true test as a secretary. She turned around and faced away from the men sitting at the coffee table, presenting them her back, and backside. \n\nShe slowly bent over, her bottom gradually becoming increasingly larger and rounder, the back of her skirt rising a bit up her thighs. She placed her hands on her knees, and arched her back, thrusting back her full, round rump.\n\nThe men's eyes widened with shock, and excitement. They were expecting some sort of apology, or perhaps even a valid explanation. They were not expecting Mr. Spader's strikingly attractive and alluring secretary to bend over for them, presenting her bottom in such a clearly enticing manner. Perhaps this was why Mr. Spader and his staff so rarely made mistakes. Cocks instantly began to swell. One of the men immediately crossed his legs. Hands shifted into laps to hide any tell-tale bulge.\n\n\"Mr. Barnes, would you do the honor?\"\n\nMaggie looked over at Mr. Spader, a worried and embarrassed look in her eyes. He was going to have one of them spank her? Was this really fair?\n\nMr. Barnes, however, wasn't entirely sure he understood. \"Excuse me?\"\n\n\"Given it was your company that suffered the consequences of Miss Gyllenhall's...distraction. I believe it is only appropriate that you provide the punishment.\" He gestured toward Maggie's upraised and jutting bottom. \"I believe ten would do.\" He turned to Maggie. \"Would you not agree, Miss Gyllenhall?\"\n\n\"Yes sir,\" she softly replied, her alluring saucer-shaped light blue eyes looking so plaintive. \"Ten seems...reasonable.\" She looked out in front of her, at a painting across the room: an original Louise O'Murphy, \"Girl reclining.\" The girl was lying on her stomach across a love seat, naked, her bottom a very warm sensual delight. Maggie bit her lip expectantly, warmth developing within her thighs. She shifted her feet a bit and arched her back even further so that Mr. Barnes would have a clear and ready target. This was just so, so humiliating, but so very exciting. Had her mother ever done anything like this? She did wonder.",
        "She heard the gentleman get up from his chair and make his way over to her left side. She glanced back at him.\n\nHe had brought with him a folder. She wondered if he was intending on rolling it up rather than using his hand. That would be understandable. Ten whacks could result in a bit of a sting for his hand. And, from her own perspective, a rolled up folder is probably preferable to the intimacy, and strength, of a man's hand. But, she was mistaken. He was using the folder as a means to hide his own embarrassment, keeping the folder in front of him, in front of his crotch. He tried to make it look natural, but the intention was rather apparent. And, from Maggie's angle she could still see his problem. Her face flushed at the sight of his bulge. She quickly looked away, the warmth building to a bit of heat.\n\nWHAP!\n\n\"Oh my goodness,\" Maggie softly exclaimed as the force of the spank made her lurch forward. Mr. Barnes' spank was a bit harder than Mr. Spader's, perhaps because he did it the more traditional way, his hand glancing off her rump rather than colliding against it.\n\nWHAP! WHAP!\n\nIt took all of his willpower for Mr. Barnes not to smile. He knew he shouldn't. This was strictly business, not personal. He was delivering the recompense for the damages done by Mr. Spader's negligent secretary.\n\nBut, he had to admit, he was finding this amazingly pleasurable, wondering if his wife might want to try this sometime. He would let her spank him first, if that might help with any insecurity she might have over such a thing.\n\nWHAP! WHAP!\n\n\"I'm terribly sorry, Mr. Barnes,\" Maggie exclaimed, the sincerity very clearly evident in her tone of voice, as well as position.\n\nMr. Spader raised his hand for Mr. Barnes to stop.\n\nMr. Barnes wondered if he was smacking her too hard. He certainly didn't want to inflict any real pain.\n\nMaggie glanced over at Mr. Spader as well. Was she doing something wrong?\n\nIt wasn't so much that she was doing anything wrong. It was just that she could do so much better. Mr. Spader wanted his secretary to be all that she could be. \"If you would, dear, please...\" He gestured with his right hand, indicating that she was to bend over further.\n\nMaggie did as he instructed, bending down even further and jutting her bottom up higher.\n\nMr. Spader though shook his head. He said quietly, \"If you would, please, cross your legs and grasp your ankles.\"\n\n\"Oh,\" Maggie, just as quietly, replied. She crossed her legs and then bent all the way over, trying hard to keep her crossed legs straight. She took hold of an ankle with each hand, crossing her arms as well.\n\nMaggie wondered what she looked like from behind. Did her skirt rise up so far as to reveal her panties? They did at least match her blouse; pink silk beneath the black panty hose.\n\nBut, she had nothing to fear in that regard. Her black skirt did rise up quite a bit, but it stopped just short of revealing her bum. However, what was revealed was still terribly enticing, as the position highlighted well the shapely curves of Maggie's legs, sublimely ensconced within her sheer black nylons. The black stripe of the seam of her panty hose peeked out from the back of her black high heels, traveled up her ankles, her calves, across the back of her knees, and all the way up her shapely thighs, to disappear within the tight black curtain of her black business skirt, that so tightly wrapped her full round bottom. It was like she was a giant ice cream cone, topped by a big round mound of black licorice cream. This would also make a very nice painting, or at least a picture, titled, \"The secretary.\"\n\n\"Yes, that will do,\" Mr. Spader concluded.\n\nMaggie smiled. It was nice to hear that Mr. Spader approved. It wasn't an easy position, particularly with her legs crossed and largely straight. She could not bend over any further. Holding onto her ankles though helped as she would otherwise be unable to maintain the pose.\n\nMr. Barnes, and his colleagues, approved as well. None had ever seen a girl bent over this far, at least not in real life. They wondered if their wives could actually do such a thing, let along be willing to do so. The girl looked so impressive, even majestic, like a life-sized statuette. They also wondered how their cocks might fit in the young lady's cunt, positioned that way.\n\nMr. Spader instructed, \"You can proceed now, Mr. Barnes.\"\n\nWHAP!\n\n\"Oh my,\" Maggie exclaimed. She gripped her ankles tighter.\n\nWHAP! WHAP!\n\n\"Thank you, Mr. Barnes,\" Maggie gasped. \"I know I deserve it.\" Heat and moisture were rising rapidly within her tightly clenched thighs.\n\nWHAP!\n\n\"And, please don't blame, Mr. Spader,\" she pleaded. \"He was relying on me.\" WHAP!!!\n\nThe tenth and final spank was delivered with a bit more vigor. Maggie almost lost her footing.\n\nMr. Spader asked, \"Are you satisfied, Mr. Barnes?\"\n\n\"Yes, yes indeed, Mr. Spader. Quite so.\" In a sense he really wasn't. He was now so fucking hard and horny. He knew that he and his colleagues would be making a quick stop at a gentleman's club on the way back to their headquarters. But, with respect to Mr. Spader's services, he was quite satisfied, particularly as the missing document wasn't really that important anyway.\n\n\"You can return to your desk now, Miss Gyllenhall,\" Mr. Spader instructed.\n\n\"Yes sir,\" Maggie replied, letting go of her ankles to straighten her body. Before she left though she first pulled on her skirt to get it back into place, sliding her hands along her bottom to straighten it out, as well as to massage her tush. It didn't really hurt but there was a bit of a tingle. She turned her head back to Mr. Spader as her hands clutched her derriere to ask, \"Are you sure, sir? Nothing else?\"\n\nThe gentlemen from Bluestar wondered precisely what more this young lady might in fact provide. They looked to Mr. Spader for the answer.\n\n\"No, that will be fine, Maggie. We need to finish our business here. You're dismissed.\"\n\n\"Yes sir,\" Maggie replied, and promptly extricated herself from his office, the eyes of the gentlemen all following closely that swaying bottom so sadly departing from their sight.\n\nMaggie returned to her desk, finding it again so uncomfortable to have to just sit there, waiting for the fire to extinguish on its own.\n\nIt wasn't too long before the men from Bluestar stepped out from Mr. Spader's office. The two who had just been watching avoided eye contact, feeling rather embarrassed at what they had seen. Mr. Barnes, though, made a point to stop by Miss Gyllenhall's desk to suggest that if she was ever interested, he would most definitely find her a position with him at Bluestar.\n\nMaggie thanked the man for his interest, but made it clear that she was quite happy with Mr. Spader, as he was treating her very well.  Gracious, it wasn't that long ago that she was lost within a secretarial pool four county accountants. Now rich and powerful executives were offering her raises to come to work for them. She felt so proud of herself.\n\n- - - - - - - - - - - - - - - - - The next day Maggie arrived wearing a lovely loose feminine white blouse with little black polka dots and a large tie-neck closure, along with a tight black skirt that was slit up one thigh, almost halfway up her white thigh-high nylons.\n\nAs she typed through the morning she could not help but consider intentionally making an error. She was having such wicked thoughts, and dreams. She didn't know what she really wanted anymore.\n\nBut, she certainly did not want to risk losing her job simply to get a spanking. Clearly Mr. Spader would prefer that she not make errors, but could he really be disinterested in her spanking? Would he be disappointed if he was unable to spank her, if he had no reason to do so?\n\nHe certainly seemed to be enjoying it the other day, his large swollen knob touching her little soft bottom. But, the next time he delegated the authority to someone else, apparently having no interest in doing it at all.\n\nMost importantly she wanted to do her best work, to demonstrate to Mr. Spader that she deserved to be his secretary, that she was the best he ever had. There was really no way that she should purposely make an error, intentionally appear inadequate, perhaps even incompetent.\n\nShe wasn't sure what to do. Her choice though was apparently made for her. In the late afternoon she heard, \"Miss Gyllenhall, could you please come in here?\"\n\n\"Yes sir!\" Maggie quickly responded, a gay and grateful smile sweeping across her face. She almost dashed to his office door, but paused before she opened it, gathering her composure, calming her demeanor.\n\nShe slowly opened the door and peeked inside. \"You wish to see me, sir?\"\n\nMr. Spader looked up from his desk, struck again by the prettiness of Maggie's eyes, the femininity of her voice. Even from this distance, and despite the relative darkness of his office, he could see that she was wearing peach eye shadow. It was entrancing. \"Please, yes, come in.\"\n\n\"Yes sir,\" Maggie demurely replied, noticing one of the documents she had typed earlier resting on that special spot of his desk, front and center. She made her way toward it.\n\nMr. Spader noticed how his secretary's white nylon thigh momentarily came into view with each step and then as quickly disappeared as she strode up to the front of his desk.\n\nShe did not need to be instructed. She got into the position, her hands and elbows resting on either side of the papers, her bottom jutting back behind her. She quietly asked, \"How many errors are there, sir?\" He gazed into those adorable eyes gazing into his. He wondered if he could tell her to always use peach eye shadow. It was really very fetching. \"Two,\" he quietly replied as he got up from his desk and strolled around to get into position behind her, albeit a few feet back.\n\nMaggie looked back at him. He wasn't close enough to provide a spanking. Was she disappointed? She wasn't sure. She looked into his eyes, trying to read his expression, which was really quite impossible. She looked back at the document and began to study it.\n\nIt didn't take her long to find the first error. \"Sir, yes, I found one.\"\n\n\"And, what is it?\" His eyes were fixed on that soft round bottom. What makes the bottom so appealing he wondered. It was really a work of fine art.\n\n\"I should have typed 'new' rather than 'knew,' without the 'k.'\"\n\n\"Yes,\" he blandly replied, \"that is correct. One more.\"\n\nShe looked back at him and smiled. \"I did good, didn't I, sir.\"\n\nHe smiled back, and nodded.\n\nShe turned her attention back to the document, fully appreciating the fact that he had smiled at her, for her. Her heart seemed to briefly flutter as she carefully studied her typing.\n\n\"Oh! Yes!\" She suddenly exclaimed. \"'Abatement.' It should be an 'a' rather than an 'e.'\"\n\nThere was a moment of silence before he replied. \"No, that is not correct. That is, your originally spelling was correct.\"\n\n\"Oh,\" she replied, biting her lower lip, waiting for the spank.\n\nBut, there was nothing. She looked back at him to ask, \"No spank, sir?\"\n\nMr. Spader did not respond. He was thinking of something else, something a bit different. He just wasn't sure he should. It could be crossing a very delicate and inappropriate line. If only he could read the expression of her face, assess her willingness, her dedication.\n\nMaggie smiled.\n\nMr. Spader instructed, \"Pull your skirt up.\"\n\nHer already large eyes opened up even wider. \"What?\" \"Do I need to repeat myself?\"\n\nShe turned her face away. Well, this was perhaps most definitely going too far. A spanking was one thing. Spanking is clearly for punishment and discipline. Raising one's skirt was simply licentious. Her breasts were rising and falling within her blouse. This just didn't seem right. He wasn't even her boyfriend or anything. He was a lawyer for goodness sake. Doesn't he know that this must be illegal or something? You can't require a secretary do something like this!\n\nShe slowly reached back with her hands to take hold of her skirt. She again hesitated when she realized that he could already see fully the lacy tops of her white-thigh high nylons. She wondered if he would approve of her choice in nylons, and then pulled the skirt the rest of the way over her bottom.\n\nIt wasn't that easy as her skirt was so tight around her butt. She had to wriggle and squirm to get it up and over.\n\nShe wasn't particularly pleased with the panty choice she had made that morning. Her mother had always said to wear a pair of panties that would not embarrass her in front of a doctor. One never knows when a doctor is going to look under your skirt. Her mother should have made the same point with respect to the boss.\n\nThis particular pair was not frayed, worn, or dirty. They were quite fresh and new. Nevertheless, she knew what a stickler Mr. Spader was for proper, stylish dress.\n\nShe was wearing bright yellow cotton panties decorated all over with all sorts of spots in as many different sizes as there were different colors. It sort of matched her blouse, in that both had spots, at least that's what she thought that morning. But, they were rather cheap Wallmart panties, nothing that would impress Mr. Spader, and she would hate to make a bad impression the first time he looked beneath her skirt. She reached back to pull them more tightly across her bottom. She certainly didn't want them to appear sloppy, loose, or bunched up.\n\nMr. Spader was duly impressed. It was so intriguing to see how gaily colorful his secretary was beneath her conservative business skirt. His cock was as big as it could possibly grow. He reached down to shift it into a more comfortable position, hoping that she would not notice. He began to breathe deeply through his nose, trying to calm himself, to keep himself from doing something he knew he should not. \"Continue,\" he calmly instructed.\n\nMaggie tried to concentrate, but it wasn't easy. It was just so embarrassing to do so with her skirt raised, knowing that her boss, Mr. Spader, was gazing upon her panty clad bottom. She wondered if she might have pulled them too tightly across her cunnie.\n\n\"'Affidavit' should have an 'a' rather than an 'i'?\"\n\nShe waited to hear if she was correct, her saucer-shaped eyes glancing nervously around her, eventually fixing on the Japanese wall scrolls. The bathing women looked so naked, so exposed.\n\n\"Pull down your panties.\"\n\nMaggie's heart raced. She was wrong, and apparently with each error there would be further exposure, rather than a spanking. She much preferred the spanking. She could feel moisture within the palm of her hands, as well as her pussy. She turned her head back to look at Mr. Spader, her apprehension, her uncertainty, her concern so clearly evident within her lovely blue eyes.\n\nBut, Mr. Spader just stood there, expressionless, his hands clasped before him, right in front of his crotch.\n\nHe was at least a few feet away, too far to touch her, to take advantage of her. He apparently just wanted to look. That wouldn't be so bad, would it?\n\nShe turned her face away and reached back to slip her thumbs under the waistband of her panties. She couldn't believe she was really going to do this.\n\nMr. Spader stood passively behind her, as if he was in fact entirely disinterested in what he was about to see, his eyes though fixed on her lovely round derriere.\n\nMaggie slowly pulled her panties down, gradually revealing more and more of the lily white curves of her bottom, and that deep crack that split her pale round moon right down the middle.\n\nMr. Spader admired the young lady's crack, struck by how the skin appeared a bit darker down inside, due largely just to the shade that the fissure provided, as if there was something dark and mysterious deep down in that valley, which of course there was.\n\nAnd, once her panties reached the bottom of her butt an even more delightful crevice appeared, the more delicate one that split her feminine mound. A cunt from behind was just so, so enticing, and this one was glistening with dew, even within the relatively dim lighting of Mr. Spader's office.\n\nMaggie wondered if her boss could see her vagina. She surely hoped not, as she knew that the moisture would be so clearly evident. She certainly didn't want him to recognize, to know, how excited this made her. She squeezed her thighs together, albeit that only made it more difficult to get her panties down. She briefly opened her thighs to allow passage.\n\nA little smiled creased Mr. Spader's lips. It looked as if his secretary was opening her thighs a bit to give him a better peek at her cunt. Maggie quickly closed her thighs again once the panties were clear. She rolled them down only to the top of her nylons. She certainly didn't want to take them all the way off.\n\nShe tried to concentrate on the document, but it was now so terribly, terribly difficult. Her face was as red as her bottom was white. What if someone came in now? They couldn't come in without knocking but maybe Mr. Spader would let them in. He apparently didn't mind having the executives from Bluestar spank her. He didn't mind Steff seeing her bent over the desk. But, this was clearly different. She was now literally bare-ass naked! No secretary should have to expose her naked bottom to clients or colleagues.\n\nOr, frankly, to her boss, for that matter. She wondered what he was thinking. It was so disconcerting to be so exposed, to have him standing right behind her, his eyes clearly focused on her nakedness, yet he wasn't saying anything. He was just quietly gazing. Well, she could probably guess what was on his mind, and her face flushed with more heat, as did her cunnie, the latter further escalating her embarrassment, which only seemed to heat her honeypot even further.\n\nShe again tried to focus her attention on what she was reading, but her mind just kept going back to her exposure, and Mr. Spader's eyes watching, scrutinizing, studying her bottom, and perhaps something else.\n\nShe wondered, 'Can he see my anus?' How embarrassing would that be! She squeezed her sphincter. It wasn't as if she felt that would help hide it. It was just a gesture of self-consciousness.\n\nMr. Spader could see her cunnie lips, which he sorely admired and appreciated, but he could not see her little puckered rosebud. He was rather curious about it. He reached down to grasp his stiff cock through his slacks.\n\nMaggie was feeling so flustered, so confused. \"'Eyesight.' It's two words.\" She just didn't know anymore. She was so confused.\n\nMr. Spader squeezed his cock. He quietly instructed, \"Open up your cheeks, Miss Gyllenhall.\"\n\nAs Maggie's head slowly turned Mr. Spader quickly let go of his cock and resumed just clasping his hands in front of his pants.\n\nWhen she met his eyes Maggie asked, \"Mr. Spader, is that really necessary?\" She had to assert herself. She had to stand up for herself, for her rights as a secretary.\n\n\"Are your errors really necessary, Miss Gyllenhall?\"\n\nHer lips opened a bit, revealing these beguiling two front teeth. \"Well, no, no, I guess not.\" \"You guess?\"\n\n\"No, of course not. The errors are not necessary.\"\n\n\"And neither is opening up your cheeks.\"\n\nThat didn't really seem to Maggie to be much of an explanation. But, perhaps it did make some sense. She just didn't know. Lawyers were so good at confusing rhetoric.\n\nShe had never done such a thing for a guy before. No guy had actually ever asked her to do such a thing, to spread open her bottom cheeks so that he could see inside. But, then again, no boyfriend had ever been her boss.\n\nShe turned her face away, releasing her hands from the desk, her chin and breasts resting fully on the desk, her eyes fixed on the Japanese bathers as she reached back to take hold of each cheek with her hands. She hesitated, biting her lip, then spread them open, her facing becoming beet red as her comparably red anus came fully into view.",
        "Mr. Spader wanted so much to take out his cock, to stroke it. His secretary's butt hole looked so cute, so naughty, so puckered and exposed.\n\nMaggie wondered if she could become so wet that a drip might actually form on her pussy lips, perhaps even slide down a thigh. This had happened at times when she was making love with someone, or when she was masturbating, but never without anyone ever even touching her, down there.\n\nShe fixed her attention on the document, and then she saw it. \"I typed 'passed' rather 'past.'\" That had to be it! Frankly, she still wasn't sure which one was correct. She always got those confused.\n\nMr. Spader was disappointed, but that was indeed the final error. \"Yes, correct, Miss Gyllenhall.\" He hesitated before he added, \"You can go back to your desk now.\"\n\nMaggie let go of her cheeks, the curtain protecting her modesty was again closed, but she did not get up. Instead, she returned her hands and elbows to the desk and looked back at Mr. Spader to ask, \"You're not going to spank me, sir?\"\n\n\"No, I believe that is all that is necessary, for today.\" He turned away from her to make his way over to his orchid garden. Perhaps they needed some attention as well.\n\nMaggie was surprised, and confused. But, Mr. Spader was apparently finished. She pushed herself away from his desk, pulled her panties back up, and made her way out of his office, her eyes fixed on him as she did so.\n\n- - - - - - - - - - - - - - - - - There had been no further errors for the next three days, or at least none that Mr. Spader called to her attention. Maggie didn't know for sure how she felt about that. She had worn some of her best panties the last couple of days, just in case, then sighing with disappointment when she took them off in the evening.\n\nBut, she really shouldn't feel disappointed, should she? She had been working especially hard, and careful. Any word for which she had any doubt she would check within a dictionary. He did not object to that, as long as it was a real book and not the internet.\n\nOf course, errors that she could identify were not the real problem. The typical problem was in the concentration, in typing so quickly that she failed to notice a homonym.\n\n\"Miss Gyllenhall, could you come in here, please?\"\n\nMaggie's heart fluttered. She flipped the switch. \"Yes sir, right away, sir.\" She pulled out her mirror, checked her hair and make-up, applied a bit more lipstick, got up from her desk, checked her outfit, and then made her way into his office.\n\nShe almost smiled when she saw the document on his desk, in the usual position, albeit not quite as well centered as it was usually placed.\n\nMr. Spader was standing beside the desk, gesturing toward the document with his left hand. \n\nMaggie slowly strode toward his large, imposing desk, her heart accelerating with each step. When she finally arrived she began to assume the position.\n\n\"No, Miss Gyllenhall, not today.\"\n\n\"Excuse me?\"\n\n\"No. No, I think the bar needs to be raised. I'm sure you understand.\"\n\n\"Yes sir,\" she softly replied, although actually Maggie didn't understand at all. There were quite a few different ways to raise the bar.\n\n\"If you would, please, get up onto my desk.\"\n\n\"Your desk, sir?\"\n\n\"Yes, if you would.\"\n\nMaggie's heart was now racing, for quite a few reasons. What precisely did he have in mind? \"Well, yes, of course, sir.\"\n\nIt wasn't that easy getting onto Mr. Spader's desk. There was certainly plenty of room on it, although she wanted to be sure not to disturb the document. The difficulty was her tight skirt and heels. She hitched her skirt up a bit, almost to the top of her nylons and brought her left knee high up onto the desk, providing a rather provocative up-skirt peek. She slid her knee as far onto the desk as she could, gripped tightly the edge with both hands, and then hoisted up the rest of her body.\n\nOnce there she wondered how to position herself, but then realized that there was really only one obvious position. She got into her elbows and knees, her feet and bottom thrusting out over the edge of his desk, the document just to her left. \n\nMr. Spader did admire the position. Her bottom was now at the level of his face, at the level of his eyes, and his mouth. It would be so nice to have her raise her skirt now, and then pull down her panties, as he stood in between her legs. Her pussy would be just inches from his lips, and tongue. But, he had another idea.\n\n\"No, Miss Gyllenhall, that will not do.\"\n\n\"No sir?\" She was disappointed, in herself. She thought the position would please him. She arched her back and raised her bottom up higher.\n\nHe shook his head.\n\nMaggie was confused. Could she be in a more submissively exposed position? \"Shall I remove my skirt, sir, and....\" She hesitated before she added, very quietly, \"lower my panties?\"\n\n\"No.\"\n\n\"No?\" He didn't want her to lower her panties? What could she do to please him, if not that?\n\n\"Stand up.\"\n\n\"What?\"\n\n\"Stand up on the desk.\"\n\n\"Here?\"\n\nHe didn't answer. He knew she understood and so there was no real reason to repeat himself.\n\n\"But, sir, my heels. They might scratch the wood.\"\n\nThat was a good point. The mahogany was over a hundred years old. Would he risk this priceless desk for such a capricious act? \"Well, then, take care that you don't.\"\n\n\"Yes sir,\" she quietly replied, and then very, very slowly, got off her knees and onto her feet, being careful to take no steps, taking no chance of dragging a pointed heel along the ancient, worn, smooth, polished, slick wood.\n\nWhen she was on her feet, her back to the door, she did shift her feet somewhat to help firmly plant herself, but in doing so being quite careful not to slide or slip a heel along the wood. She could feel her legs tremble a bit, so concerned that she might in fact scratch the wood. The desk was probably worth more than her annual salary; actually, much, much more.\n\nShe stood so far above him now, so tall, like a statue to admire, to treasure, to worship. His eyes traveled up her shapely legs, today so wonderfully embraced within peach colored nylons.\n\nHe could see a bit beneath her black skirt, but it was so tight, and so dark in there, that he could only just barely make out the sight of the lace at the top of her nylons, tightly wrapping around her thighs.\n\n\"Three today, Miss Gyllenhall,\" he announced with apparent disinterest.\n\n\"Yes sir,\" she replied.\n\nHe then made his way around his desk, to his chair.\n\nHe looked up again. And, from below, he got a better appreciation of his secretary's breasts. They were not large. They were on the small side. But, when viewed from below, within her tight shiny silk peach blouse they did appear rather prominent, perhaps even a bit majestic. He leaned over the desk, picked up the document and handed it to her.\n\nShe bent over a bit to retrieve it from his hands, her pearl necklace falling away from her neck, the cleavage of her blouse briefly opening up, providing a very momentary glimpse of just a bit of her brassiere. It was again, peach; peach lace.\n\nHe sat down, to study a few papers of his own.\n\nMaggie looked at the document. It was about 59 pages long! It would contain more than 24,000 words! Does he really expect there to be no errors? Would anyone really expect that?! She began to read, carefully proofing her typing, looking for the errors. She felt a little precarious though, perched up on Mr. Spader's desk. She had no reason to feel perilous. It was unlikely that she would fall, but she often felt unstable, unsteady, when standing near the edge of a cliff. There was little rational reason for her feelings of instability, as it wasn't like it was in any way more difficult to be standing there than anywhere else. The ground was just as solid and flat as it was elsewhere. But, apparently because the potential risk was so much greater if she did fall that it just made her legs and feet feel so uncertain, so unsteady.\n\n\"I see one!\" She announced with a big smile: \"I typed 'grown,' like when you're grown up, rather than 'groan,' like when you moan.\" She looked down at her boss and smiled, waiting for his pleasure, his praise.\n\nMr. Spader though did not look up. He continued to be studying his own material. \"Yes, that's correct, Miss Gyllenhall. Two more to go.\"\n\n\"Yes sir,\" she replied, but she did still feel pretty good about finding one so quickly. On the other hand, she felt bad for committing the error in the first place. Those homonyms were just so hard to notice!\n\nIt took a while to find the next one: \"Oh, yes, 'downside' should be two words!\" That was an understandable error. He shouldn't really blame her for that one.\n\n\"No, Miss Gyllenhall,\" Mr. Spader replied, the exasperation evident in his voice. \"'Downside' is one word. You did type that correctly.\"\n\n\"Oh,\" she softly replied. Well, that was good, wasn't it? It's better to have been correct than to be incorrect. But, she was, once again, incorrect in her proof reading.\n\nMr. Spader did now look up. \"Drop the skirt, Miss Gyllenhall,\" he quietly instructed.\n\nMaggie looked off to the side and softly replied, \"Yes sir.\" She undid the skirt's clasp and then pulled down its zipper. Keeping her eyes averted from his, she let it fall to her ankles.\n\nShe began to step out of her skirt but Mr. Spader raised his hand to stop her. \n\n\"Just let it lay there, Miss Gyllenhall.\"\n\nShe wasn't happy about leaving such a mess on his desk, but if that was his preference then certainly she would defer. \"Alright sir,\" she replied, and then resumed her reading.\n\nMr. Spader considered her position, a little smile on his lips as he admired her choice of panties. Maggie's blouse did nothing to hide them as it was a straight hem that only reached her waist. Her peach cotton bikini panties very nicely complemented her blouse and thigh high nylons, being peach-colored as well, trimmed with a little strip of lace, with a full juicy ripe peach embroidered on her mound, seeming to fill out with fleshy fullness with the rising curves of her pussy. Mr. Spader did so like a fresh peach.\n\nWith considerable reluctance he returned his eyes to the report he received from Mr. Ellsberg.\n\nMaggie wondered how Mr. Spader felt about her panties. She had gone through her best pairs the previous few days. She so wished he had alerted her that today would be the day he would be seeing her panties. But, a secretary can't always know what her assignments will be before she arrives at work. Rolling with the punches is part of the job. In any case, there wasn't much she could do about it now. She focused her attention on the document.\n\nQuite a bit of time passed before she proposed another error. She didn't want to make an additional mistake, partially out of concern that she would disappoint him but, of course, worried as well what she would have to do next. She had identified a couple of possibilities but wasn't confident enough to propose them.\n\nWith a deep breath she finally committed herself. \"Um...I typed 'for quite a while.' Should I have typed 'for quite awhile;' 'awhile' being one word?\"\n\nMr. Spader looked up at Maggie. A girl dressed only in her panties and blouse looks so cute, particularly from this angle. Her feminine mound looked so prominent, so full, admiring it from below her thighs. But, his secretary was about to become even cuter. \"No, Miss Gyllenhall, I'm afraid that's not it.\"\n\n\"Oh, well, um..., sir?\" What was she to do now?\n\nMr. Spader felt that Maggie should really figure that out on her own, but he didn't want to put any undue pressure on her. After all, she had not worked for him for very long. \"The panties, dear.\" He gestured with his right hand, indicating that her panties were to come down.\n\n\"Yes sir,\" Maggie softly replied, hooking her thumbs into the waistband of her panties, bending over just a bit as she slipped the cotton off her bottom and down to her thighs.\n\nShe hesitated, looking down at her boss, her necklace again hanging away from her neck. She let Mr. Spader see her bottom the other day. This would be letting him see her cunnie. This was embarrassing on a number of levels. There was nothing more important to her than making a good impression on her boss. She wondered if perhaps she should have shaved down there before she came into work. She understood that lots of guys like that. But, of course, he might have found that to be rather perverse.\n\nShe pulled her panties down a bit further and then let them slide down the rest of the way. As they came to rest at her ankles she stood back up straight, her hands clasped demurely behind her, resting against her now naked bottom, one knee turned a bit inward, as if that might help protect her modesty at least somewhat.\n\nMr. Spader showed no emotion on his face, but his dick swelled hard within his slacks. Miss Gyllenhall had a very attractive cunt. He would have preferred that she kept it shaved but he could hardly count that against her. It was certainly not appropriate for an employer to require his secretaries shave their pussies. It did at least appear that she trimmed and managed the curls with some consideration and care. That was impressive. This clearly demonstrated an attention to detail, a quality he much admired.\n\nPlus, her cunt was just so darned fetching. She had rather thick, fleshy lips that clearly suggested a very warmly receptive and engaging home for a hungry, hard, thick cock. In fact, he felt he could even detect a bit of moisture on the lips.\n\nHe reluctantly took his eyes away from her cunt to look into her eyes, albeit that feminine moist peach was still well within his field of vision. He could see the uncertainty, the anxiousness, within her eyes. He reassured her. \"I'm sure you'll soon find the next two, Miss Gyllenhall. Now, please, continue.\"\n\n\"Yes sir,\" Maggie replied, and resumed her search. She kept the document between her eyes and his, not wanting to know if he was just sitting there staying at her cunnie. She so hoped that he hadn't noticed the moisture. She studied the material very, very hard.\n\nMr. Spader's eyes left hers, but paused at her peach panties gathered around her ankles. He hadn't noticed before how pretty were her ankles, so delicately feminine, so awkwardly perched on her high heels, and so lovingly draped by her undies and skirt.\n\n\"Oh my,\" Maggie quietly exclaimed as she stared at the page. \"I misspelled Poconos. I spelled it with a 'k,' didn't I.\"\n\n\"Yes, yes you did,\" his eyes still on her panties. He turned back to his work. \"Only one more to go,\" he announced. He hoped the third, and last one, would take her a while.\n\n'Only one more to go,' thought Maggie. She hoped it wouldn't take too long. She glanced over at the door. Even if someone knocked it would be difficult for her to get her panties and skirt back up before they came in. In fact, she might just fall off the desk if she had to do so hurriedly. Of course, that assumed that Mr. Spader would even let her pull her panties back up. Goodness, she wondered, he wouldn't require that she keep them down! She glanced down at him, trying to read that recondite mind. She squeezed her thighs together. She felt such a sense of urgency, of heat, of lust.\n\nShe looked upon the page with desperation.\n\n\"'Skydiving' should be two words,\" she suggested.\n\nMr. Spader shook his head. She really should know better than that. It was almost as if she was being wrong intentionally. He leaned back in his chair. \"Step over here, Miss Gyllenhall, squat down a bit and present your bottom to me.\"\n\nMaggie's eyes and mouth opened wide with shock. \"Mr. Spader!\" She couldn't believe she had heard him correctly. He certainly couldn't be serious.\n\n\"You don't have to squat all the way down,\" he explained. That was hardly much consideration, Maggie felt. Squatting down above him like this would be frankly, well, entirely obscene! She instinctively covered her cunnie with one hand, and the more personal part of her bottom with the other, still holding onto the document. \"Mr. Spader, I don't think I should do that. I don't think that's right.\"\n\n\"Miss Gyllenhall, you don't think I know what I'm doing?\"\n\n\"Oh, no sir, I mean, of course, my goodness. It's just that, well....\"\n\n\"Do you wish to continue making these mistakes, Miss Gyllenhall?\"\n\n\"Absolutely not, sir.\"\n\n\"And, you do realize that all of this is to help you become as accomplished a secretary as I am a lawyer.\"\n\nShe suddenly realized how confrontational and argumentative she was becoming. This was not good. \"Yes sir,\" she softly replied, releasing her hands from her body. She looked down. How was she going to shift position with her panties and skirt wrapped around her ankles, while still in her heels, standing on his antique desk?\n\nIt would be easier to just slide along the desk, decreasing the likelihood of having a heel catch on her skirt. But, that would very likely scratch the wood.\n\nMaggie gingerly lifted up her right foot, being sure to pick up her panties and skirt with her foot, and then slowly, carefully, reached out to firmly plant it a few inches away, and then as carefully, cautiously, followed likewise with her left.\n\nMr. Spader appreciated his secretary's care. He smiled with approval, and pleasure. Somehow, watching his secretary gingerly make her away along his desk, with her panties and skirt at her ankles, her cunt and bum fully exposed, was really quite endearing. Her cunt was now glistening, providing little stars twinkling above him.\n\nWhen she got close enough she turned so that her back, and her bottom, were facing him. She began to slowly squat. \n\nThis felt so, so lewd, so crude, so profane, like she was going to pee on him, or something even worse, and she knew in doing this her cunnie and anus were coming into a fully exposed view, as if she was squatting down so that he could look at them both real, real close. It just felt, and must look, so gross and raunchy. She covered her face with her hands.\n\nBut, she didn't have to travel far.\n\nThwack!\n\n\"Oh my!\" Maggie threw her hands out, trying desperately to maintain her balance, her eyes wide with shock. She hadn't been expecting that, although perhaps she should have been, given what happened the previous day. It was just that she was so preoccupied with how shamelessly she was exposing herself that she was caught by surprise, and what a surprise it was, a smack right on her bare naked bottom.\n\nPlus, as before, he didn't just provide the more common spank. Once again his hand still rested on her bum, his big meaty masculine hand now firmly fully clutching her right cheek in its grip.\n\n\"Mr. Spader, please.\" This just felt so wrong, yet so good.\n\nMr. Spader was duly impressed at how round and soft was Miss Gyllenhall's little derriere. Few things felt better within one's hand than the taut perky pliant cheek of a young lady's bottom.\n\nWith considerable reluctance he took his hand away.\n\nMaggie reached back to cover her bottom, and her personal spots.\n\n\"Just one more spank, Miss Gyllenhall,\" Mr. Spader instructed, \"and then you can resume your proof reading.\"\n\nWith considerable trepidation Maggie slowly pulled her hands away and squatted down even further.\n\nMr. Spader would have to agree that the sight of his secretary's squatting ass was rather obscene, but that was also what made it so appealing, so lovely. He could in fact place his face right in between those delicate feminine cheeks and give her rosebud a little kiss, perhaps as well taking the opportunity to slip a figure up her cunt.\n\nBut, of course, that would be taking advantage of the young lady.\n\nThwack!\n\nMaggie grimaced, but this time she didn't move, or squeal.\n\n\"Alright then,\" Mr. Spader instructed, his hand still clutching her bum, \"You can stand back up now, and find the remaining error.\"\n\n\"Thank you, sir,\" Maggie responded, pleased that she was only going to get a couple of spanks. Of course, she had previously only received one spank for each error, but it's understandable that there would be more this time, with the bar having been raised. She stood back up, her bottom pulling away from his hand.",
        "Once she was up Mr. Spader got up from his desk and made his way to the door. \"Mr. Spader?\" He was leaving?! Her hands went back to her bottom, this time to give her cheeks a little rub. They didn't really sting bad, but she did feel that they needed some consideration.\n\nMr. Spader turned back to her. He pulled a letter from his jacket pocket. \"I need to deliver this to Ellsberg. I won't be gone too long. You stay right there...precisely as you are...until I get back.\"\n\n\"Um, yes sir, of course, sir, but...\"\n\n\"Yes, but what, Miss Gyllenhall?\"\n\n\"But, well, sir, I mean...\" She pointed down to his crotch, where his very evident erection was jutting out his slacks. \"You have a bit, of, well...condition, sir.\"\n\nHe didn't say anything.\n\n\"If you don't mind my, um, pointing it out. I was just, well, I wasn't sure you would want anyone to, well, notice it.\" Perhaps she shouldn't have mentioned it. It was rather personal. But, it is often the secretary that alerts the executive to a spot on a tie, a loose thread on a suit, and perhaps even a zipper that was down. Should she ignore an erect penis sticking out his slacks?\n\n\"You think I should be ashamed of myself?\"\n\n\"Oh no, no sir. No, not at all.\"\n\n\"Are you ashamed of yourself, Miss Gyllenhall?\"\n\n\"Um, well, uh, well, no sir, of course...not.\" She was pretty darned embarrassed, but not really ashamed.\n\n\"Excellent, well,\" he said as he again turned toward the door, \"I will be back as soon as I can.\"\n\n\"Yes sir,\" she replied, somewhat mystified by his departure as he made his way out of the room.\n\nHe was such a quirky, eccentric guy. She wondered if he had strode around in public with an erection before, not finding it at all unusual or inappropriate. That would, of course, explain a lot, most especially what had been happening so far in this office.\n\nOf course, his erection would likely dissipate before he actually ran into anyone. She was in any case relieved to be alone, and to have so much time now to find the last error. She could in fact make her way to the last page without him noticing that she had missed the error. Yes, he would realize that point if she identified the error on one of the early pages, but the severe pressure she had been feeling was at least lifted. She studied the document with considerably less tension.\n\nShe considered getting off the table. That would be more comfortable, but he had made it very clear that she was to stay the way she was.\n\nShe looked around the office. It was funny how a room can look so different when standing in an entirely new and unique location. She looked down at his Japanese blue Gosu Kyoto Satsuma pottery vase. The dragons along its lid were really quite striking. She wished that someday she would have something as beautiful as that. Mr. Spader was indeed an amazingly successful man.\n\nAn hour eventually passed, with Maggie continuing to study the document, at times studying the room, all the time feeling so weirdly exposed perched on his desk, worrying that some stranger might enter the office, wondering what might happen when Mr. Spader did eventually return, still unable to find the last error.\n\nHer cunnie was feeling so inflamed. She reached down, just to assess its wetness.\n\nAs soon as her fingers made contact with her moist, warm lips Maggie felt a jolt of lustful hunger shoot through her loins. She had not realized how intensely aroused, how excited, she had become. She could not deny it now, nor did she really have to, being alone in the privacy of Mr. Spader's office.\n\nShe slowly, gently, slid her fingers up and down her lips, occasionally slipping them a bit inside, feeling around within and along her soft, fleshy wetness, caressing her femininity, feeling herself getting warmer and warmer, hotter and hotter. She softly whimpered, slightly bending her knees, her left hand scrunching up the document as she clutched and squeezed a breast.\n\nShe did so much enjoy touching herself. She did not do it often. A good girl doesn't do it often, and even when she did do it, it was, of course, within the privacy of her bedroom, with the lights out. Before today she certainly would not have imagined doing so while standing up on the desk in the office of her boss. But, frankly, that made it all the more appealing, naughty, and exciting. She quietly whimpered and sighed, albeit to anyone in the room it would seem quite loud, as there was otherwise no sounds within the dimly lit, expansive office.\n\nThe fingers along her cunt slowly began to work more vigorously, sliding up to her swollen, hardened clit to provoke and torment her nub, seemingly trying to crush it against her own body, rubbing it around and around so hard, so feverishly, so furiously. \n\n\"Oh Mr. Spader,\" Maggie softly moaned, her hips now grinding and twisting in such lewd gyrations high up on his desk as her fingers frenetically labored, imagining her boss making her do all sorts of things, perhaps having to deliver documents in just her brassiere and panties, that would be so terribly humiliating, walking down the street like that, everyone looking at her.\n\n\"Mr. Spader, please,\" she gasped, a finger sliding up her cunt, imagining Mr. Spader spanking her for some malfeasance in front of a judge, or perhaps even a jury, the prosecuting attorney requiring that she lift up her skirt, the judge requiring that she pull her panties down, the jurors suggesting that she suck each of them off, even the women.\n\n\"Mr. Spader, no, no, please, it's just not right,\" she whimpered, as she imagined him mounting her from behind, apparently under strict judicial orders. \"Oh my,\" she gasped as she bent over, shoving now two fingers deep up into her tight, wet, quivering cunt.\n\n\"Oh! Madam, um, I'm, um...sorry.\"\n\nShe had not heard the door open.\n\nIt was an express mail deliveryman. He stood at the door, wondering what to do, an understandably shocked expression on his face at the sight of a half-naked woman standing on Mr. Spader's desk, bent over, frantically fingering her sloppy hot wet cunt, lost in some perverse fantasy.\n\n\"Excuse me!\" Maggie angrily protested, bending over even further, covering her cunt with her hands, trying to regain her composure, her wits, her flushed face though still displaying the effects of her pitched lustful state.\n\n\"Oh yes, yes, sorry, really, but um, well, uh, I'm supposed to...deliver this?\" He held up an express mail envelope.\n\n\"Well, my goodness,\" she asserted with evident annoyance, as well as embarrassment, \"just leave it on the desk...The one outside.\" She would gesture in the correct direction, back where he came from, but she preferred not to remove even one of her hands.\n\n\"Yeah, well, but, um, someone has to sign for this, and I was told that, well, I couldn't leave until it was delivered, and signed.\" He again held it up.\n\nMaggie recalled that Mr. Spader had made it very, very clear that she was to stay precisely as she was: precisely. Currently, she was most definitely not doing that.\n\nWith considerable distress and dismay she stood back up straight, and removed her hands, exposing to the stranger's eyes her inflamed cunt, holding onto the document with her left hand as she reached out with her right. \"Give it to me,\" she said, with all the authority she could muster, in her state of undress, exposure, and agitation, \"and I will sign it.\"\n\n\"Uh, yeah...right, ma'am.\" The deliveryman slowly strode up to the pretty young lady, presumably Mr. Spader's new secretary. He swallowed with some apprehension and unease, trying so hard not to look at her naked cunt. His stride was unsteady, uncertain. There is simply no way a guy is going to simply ignore such a thing entirely. She did have awfully nice legs, naturally drawing his eyes up to a very, very alluring set of feminine lips. Delivery men dream about moments like this, but he had never experienced it, and he most definitely had not expected it to happen.\n\nHe handed the envelope and clipboard to the woman, his eyes quickly going to her cunt, which was largely at eye level, as her eyes presumably were fixed on the clipboard. \"Right there,\" he pointed, sort of in the general direction of where she was to sign.\n\nMaggie sighed with exasperation, and mortification. She could see where he was looking. She could tell him to stop being so rude and impertinent but she realized that Mr. Spader would not approve. She wondered though if Mr. Spader might in fact have sent him in as a test of her dedication, her resolve, her obedience. But, of course, he couldn't have done that, as the letter was sent by someone else, the previous day.\n\nShe looked at the envelope more closely. It had been sent by Mr. Spader, the previous day. She was glad that she had agreed to sign for it, as he would have clearly discovered that she hadn't. She handed the clipboard back to the deliveryman, wondering if Mr. Spader normally gave delivery men a tip. Her money though was in her purse, in her own desk.\n\nSucking his cock would be a pretty good tip, and then her face flushed at having such a thought, clearly driven by her masturbatory lust. And, most certainly Mr. Spader wouldn't approve of that! That would be so unbecoming of one of his secretaries. Imagine if such a thing became known. His reputation would be forever damaged, perhaps fatally.\n\nThe man ripped off a receipt for Maggie, a little smile creasing his lips as he handed it to her.\n\nShe gave a little polite smile in return, even a little naked curtsy. It was never a good idea to be curt to delivery personnel. They could always in the future seek revenge in a way that would more than offset whatever satisfaction one gleaned from expressing one's true feelings. Of course, he might right now just take her, pressing his face into her steamy cunt. He must smell how excited she was. If he took her, by force, she could claim that she had nothing to do with it. Mr. Spader could not blame her for that. She spread her thighs a bit and pushed her cunt out somewhat, trying to give him a hint, that perhaps she was in fact offering it to him, as if having her cunt naked, hot, wet, and inflamed just inches from his eyes was not itself much of a hint. \n\nThe man looked for an excuse to linger, but there really wasn't any. He considered just grabbing her butt and crushing his face into her cunt, but assaulting a secretary while on the job was never a good idea. The fact that she was half naked would be no defense, not when she was the secretary to a lawyer like Mr. James Spader. He though did take his first steps backward on the way out, his eyes lingering and then, with considerable reluctance, he turned and walked off. As he was about to make his exit he turned back to say, \"Nice office.\"\n\n\"Yes,\" Maggie replied from the desk, her cunt remaining fully exposed, and neglected. \"Mr. Spader knows how to decorate an office.\"\n\n\"Yes, yes he certainly does,\" he agreed, and then departed.\n\nMaggie sighed with frustration, and yet also with relief, at his departure.\n\nAt this point she really didn't know at all what she wanted. It was probably best that the man hadn't taken her bait. Goodness, imagine if Mr. Spader returned while he was eating her out! Simply because she enjoyed imagining something didn't mean she wanted it to happen in real life. When was Mr. Spader going to return! He would not be sending in other visitors, would he? Goodness, imagine a whole series of guests...\n\nHer cunt was so heated, so inflamed. She looked down at it.\n\n\"Oh no,\" she exclaimed. The moisture was so clearly evident. There was no way that Mr. Spader would miss it. Perhaps she should clean herself up, dry herself off. But, to do so would require getting off the desk, or at least crouching down to retrieve her panties. She could use them. However, what if he caught her doing that? He had made it very, very clear that she was not to change her position. Plus, even if she got away with it she would know what she had done. She would know that she had cheated, that she had defied his instruction. She would feel compelled to confess, perhaps resulting in an even worse punishment.\n\nShe waited, in position, standing there. She returned to the document. She still had not found the third error.\n\nAnd then, the door finally opened. Mr. Spader had returned.\n\nHe closed the door behind him, making it clear to Maggie that the door was not being locked.\n\nMaggie noticed as well that he no longer had an erection. One wouldn't expect him to, having been gone for so long, but she had to admit that she was a little disappointed. She held out the document. \"I'm sorry, sir. The paper is a bit wrinkled.\"\n\nMr. Spader clasped his hands in front of him, this time as a gesture for no good reason other than that he found it comfortable to stand that way. \"Did you find the last error, Miss Gyllenhall?\"\n\n\"Oh, um, no sir.\"\n\nHe slowly, calmly approached her. \"Do you realize how much time has passed? How much time you've had to find it?\"\n\n\"Yes sir,\" she timidly acknowledged.\n\n\"How, might I ask, have you been spending your time?\"\n\n\"Um, well, sir, um...A package arrived for you.\" She held out the express envelope for Mr. Spader.\n\nHe stepped up to her but did not take the envelope from her hand. \"Yes, I see that. Did it require the full time of my departure to receive this delivery?\"\n\nMaggie slowly shook her head. It was rather striking, she felt, that he didn't even ask about what happened while she met with the deliveryman. She wondered if Mr. Spader met him outside the office.\n\nMr. Spader again admired how pretty were Miss Gyllenhall's eyes, particularly when she looked so uncertain and insecure. However, he took a deep breath of frustration and disappointment. He eventually said, \"You can get down from the desk now, Miss Gyllenhall.\"\n\n\"What? Oh, no sir. I'll find it, sir, I will. I promise.\"\n\n\"I'm not so sure, Miss Gyllenhall. I am beginning to have my doubts. Now, if you would, please.\" He gestured for her to dismount his desk.\n\nMaggie hesitated. She so wished that he would reconsider. She knew though that he was right. She had been provided with well more than enough time, with much of it wasted on just her daydreaming and ruminating, as well as a bit of dirty business for which she now felt a bit ashamed. She eventually replied, \"Yes sir,\" and got down onto her knees to climb off the desk.\n\nIt was perhaps even more difficult getting off, with her panties and skirt now tangled around her ankles.\n\nMr. Spader though did reach out with his hand to offer his assistance.\n\nMaggie smiled gratefully and placed her hand in his, instantly feeling a rush of excitement coarse through her body at their physical contact. It was not an intimate touch. They were just holding hands, but how often does a girl hold hands with her boss, particularly when her skirt and panties are down at her ankles. She smiled appreciatively, even affectionately, as she said, \"Thank you, sir.\"\n\nMr. Spader though did not change expression, his eyes fixed on Miss Gyllenhall's bottom as she slid on her knees to the edge of his desk, her feet still ensconced within her heels. He suggested, \"Be careful not to let your panties slip off.\"\n\n\"Yes sir,\" Maggie replied, reaching back to pull them up a bit higher on her calves, and then gingerly slipped off the desk and onto the floor. She felt a bit more comfortable, more safe and secure, with her feet now firmly planted on the floor. She asked, \"Where shall I put these, sir?\" referring to the envelope and the document.\n\n\"Place the envelope on my coffee table, in front of the leather chair, if you would.\"\n\n\"Yes sir,\" Maggie replied and clumsily made her way over to the table. Heels can be difficult enough to walk in, but when further handicapped by panties and a skirt tangled around one's ankles, it can become a gymnastic exercise worthy of an Olympic event. Well, that was a bit of an exaggeration, but it really was pretty difficult.\n\nMaggie walked with little geisha steps, being careful not to step so high or far that her panties or skirt tangled around a heel. It seemed like it took forever to get to the table, knowing that Mr. Spader's eyes were likely glued to her naked bottom. On the other hand, it was perhaps even worse to think that he wasn't even paying any attention. What does it say about a girl for a guy to actually ignore her nakedness. Perhaps he had returned to his desk chair and was now studying a document, obliviously disinterested in the presence of her naked derriere, which she felt was in fact rather nice, if she said so herself.\n\nShe considered looking back to check, but she felt that would be an invasion of his privacy, as if she was checking up on him, which she would clearly be doing.\n\nWhen she finally arrived at the table she reflected on her options. The most disrespectful and careless thing to do would be to just toss the envelope onto the coffee table. The most ladylike thing to do would be a bunny dip, bending her knees to get down closer to the table to gently lay it on the edge, facing his chair.\n\nShe decided instead to bend over from the waist, trying to keep her knees stiff and straight, a position similar to the one he had instructed her to take when spanked by the executive from Bluestar. If he had been watching her bottom he would now be duly rewarded. If he had been ignoring her, well, he was now being duly punished by what he was missing.\n\nMr. Spader had indeed been watching her and was now being duly rewarded. Maggie's bottom tightened and rounded to full capacity as she bent over for him, opening to his eyes the lasciviously lewd sight of her moist, glistening cunnie slit, and even a peek at her rosy, puckered, and curly butt hole. His cock instantly swelled back to attention, saluting this really glorious pose.\n\nMaggie held it for quite some time as she carefully positioned and arranged the envelope so that it was precisely parallel to the edge of the table, facing his chair, at an even distance from both sides of the other two edges. It could not have been better if she had measured with a ruler.\n\nMr. Spader squeezed his erection through his Issey Miyake navy blue slacks and mercerized cotton Hanro boxers. When Maggie stood back up he clasped his hands before his crotch, effectively hiding the erection from view.\n\nMaggie gingerly turned around to face him, once again presenting for his eyes her exposed and inflamed cunt, the thick fleshy lips yearning to be kissed, licked, and sucked. She asked, \"the document?\"\n\n\"Return it please,\" he instructed, \"to its original position, here on the desk.\"\n\n\"Yes sir,\" Maggie replied, and with her skirt and panties still encumbering her movements, she made her way inelegantly, gawkily, back to his desk, the document resting on the palms of both hands, feminine moisture leaking down a thigh.\n\nTime was money, particularly for a lawyer, and certainly at his level of the legal food chain. But, Mr. Spader waited patiently. Some things are worth waiting for.\n\nWhen Maggie finally arrived she again bent over to carefully place the document in the original position, which was in fact a bit off center, somewhat closer to the left side of the desk than the right.\n\nMr. Spader was impressed; very impressed, that she had remembered its original off-centered position. She deserved some consideration. \"Miss Gyllenhall, if you wish, I will provide you with one last chance to find the error.\"\n\n\"Thank you, sir.\" Maggie sighed with a deep sense of relief, and a rush of excitement. She placed her hands and elbows on either side of the document, her naked tush and cunt thrusting out behind her, her eyes focusing as hard as she could on the opened page.\n\nMr. Spader stepped up behind her, right up to her naked butt. He slowly pulled down his zipper.\n\nMaggie stopped reading, her eyes glancing left and right at the tell-tale metallic sound of a zipper going down. Nothing else made that sound. She could feel her heart racing. What was Mr. Spader going to do? She dared not look back or move. Perhaps oddly, but perhaps accurately, she considered him to be a scared mouse: slowly, tentatively, nervously, approaching a hunk of very tasty cheese, but not sure if he could trust her, not sure if there would be some sudden violent reaction that would scare him away.",
        "She did though slowly, cautiously, arch her back, lifting up her bottom, presenting herself, her cheese, more clearly. She would have also further parted her thighs, but her ankles were constrained by her panties. She turned a page and resumed her reading. Mr. Spader reached into his slacks and removed his stiff, hard cock. He slowly stroked it just above Miss Gyllenhall's naked round bottom. The contrast of his rock hard, stiff straight spear against her soft round tush was rather striking, and very appealing.\n\nHe had never cum on a girl's butt before. He had never before found that particularly appealing. It seemed kind of messy. But, strangely, he now felt quite the urge to do so. It seemed entirely appropriate at the moment, albeit he knew he shouldn't, and wouldn't. He would imagine that Miss Gyllenhall would not find it nearly as enjoyable as him. In fact, she might be rather appalled by such a thing. It would most definitely be rather disrespectful, wouldn't it?\n\nMaggie turned another page. She had been searching and searching for the remaining error for so long now. Was it even really there? She would be none too pleased to discover that it didn't exist, that Mr. Spader was playing some cruel joke on her. That wouldn't be very nice.\n\nBut, as that thought crossed her mind she realized that it was simply not possible. Mr. Spader would never do any such thing. \"Sir, please,\" she finally asked, \"could you provide, perhaps, well... just a little hint?\" He could at least narrow down the number of pages she had to study.\n\nMr. Spader leaned down over her back, his stiff naked cock gently contacting Miss Gyllenhall's soft naked bottom, right along the crack.\n\nMaggie's eyes opened up wide. Her heart was now beating so fast. She slowly drew her tongue along her upper lip.\n\nMr. Spader studied the document over Maggie's right shoulder, his stiff dick caressing her ass. He said, \"It's within the second half.\"\n\nWhoa! Now that was very helpful. That ruled out virtually half the document. Of course, that still left about 30 pages, but it also removed from her consideration the same number of pages. The glass was now half empty, and in this case that was a good thing. Maggie quickly turned to page 29. She was encouraged, very encouraged.\n\nMr. Spader attempted to encourage her further. He reached down to take hold of the shaft of his dick to slowly drag it down the crack of her ass, the thick swollen plum slipping into her crack and gradually working its way down.\n\nIt might be encouraging but it was also terribly distracting. Maggie was having considerable difficulty concentrating on what she was reading. His gesture was not only clearly sexual, if not lewd and obscene, but she also wondered what might come next. Was he actually going to try to stick that thick hard knob inside her butt? She had never let any man do that to her before. Mr. Spader was, of course, her boss, but that didn't really give him the right to stick his cock up her ass. And, besides, shouldn't she first apply some ointment or some form of lubrication? Mr. Spader though was simply enjoying the close intimate contact of the round, soft, sensitive knob of his cock exploring the inside of his secretary's butt crack. The sight was in fact almost as good as the feel, and the feel was pretty darned outstanding.\n\nHe slowly drew his dick all the way down to Miss Gyllenhall's little puckered rosebud.\n\nMaggie momentarily stopped reading. She looked straight out in front her.\n\nMr. Spader paused there for a moment, just to enjoy the fact that he was giving her cute little butt hole a lingering, affectionate kiss with his dick.\n\nMaggie waited impatiently. Her sphincter naturally tightened at the contact of his crown with the entrance to her rectum. She really, really wasn't sure about this. Her bottom naturally squirmed, and she cursed herself for that, wondering if perhaps he might take the movement as a flirtation, as an encouragement, to just shove it right up into her ass.\n\nMr. Spader moved on, going past her asshole to slide along the remaining brief distance to reach the more natural home for a man's cock.\n\nBut, he didn't enter there either. He just slowly slid the thick round head along the young woman's moist, warm, swollen lips, slipping in between a bit, but only so far that she could intimately, delicately, kiss and nibble his cock with her wet feminine lips.\n\n\"Mr. Spader,\" Maggie quietly gasped.\n\nMr. Spader then moved on to lodge his erection deep within her thighs, only the shaft now touching her lips. He let go of it so that it resided comfortably there for the moment, tucked away within Miss Gyllenhall's soft, warm, womanly thighs.\n\nMaggie was tempted to squeeze her thighs hard against his cock, rubbing and grinding her cunt on it. It would not take long for her to cum. She needed to cum so fucking badly.\n\nBut, she knew that her responsibility, her task, was to find the final error. She continued to study the document.\n\nMr. Spader then leaned back a bit, reached down, took hold of the shaft, and carefully lodged it within her moist lips, this time at the precise entrance to her cunt. \"Perhaps you are in need of some guidance, Miss Gyllenhall,\" he suggested, and shoved his cock hard up into Maggie's tight, quivering, yearning cunt.\n\n\"Oh, Mr. Spader,\" Maggie again gasped, almost falling onto the document, but she dutifully turned the next page, continuing to carefully study each word, searching for the error. Looking desperately for that last final homonym.\n\nMr. Spader slowly drove his stubby, stocky, bloated knob deep up inside Maggie's cunt, pushing, pressing, and plowing his way past the tightly resistant yet ultimately yielding wet, clenching and clinging hot flesh.\n\nMaggie groaned with deep satisfaction. Mr. Spader's cock was finally where it should be, where she had yearned for it to be. It felt as thick, strong, and manly as she knew it would be.\n\nBut, she had a job to do, and that responsibility was now even more urgent and pressing than before, as she most definitely did not want to disappoint Mr. Spader now. Maggie flipped the page as his cock drove deeper into her cunt. Her eyes glazed with lustful satisfaction. The words began to blur.\n\nThere seemed to be no way she would not climax before she found the third error. She had to find it. She concentrated desperately on the spelling, the grammar, trying so hard to ignore the fact that there was a big thick cock, Mr. Spader's cock, fucking her so deeply within her cunt.\n\nMr. Spader's dick was plunged as deep within Miss Gyllenhall's cunt as it could go. He paused, momentarily enjoying the sensation of his dick being so fully absorbed within the young lady's cunt. It fit like a glove, albeit a very wet, alive, quivering flesh glove, one that was massaging and milking his cock. \n\nHe slowly retreated, and then quickly drove back up again, Maggie jolting forward with the hard thrust, just as she had done when she had been spanked.\n\nMr. Spader took hold of his secretary's hips and fucked her cunt again, and again, and again, each thrust forward met with such intensely gripping stimulation. Was there anything more satisfying to a cock than a youthful, fresh cunt?\n\nMaggie had not felt a bigger cock up inside her before. Of course, it could be an illusion, a confusion of Mr. Spader's success and power with the size of his manhood, or an effect of having been so aroused for so long. But, even if it was an illusion it was one that felt so real, and was so fucking fantastic. She never felt so thoroughly filled, so stuffed, so gorged. She read now with only half-opened eyes, softly grinding and squirming her hips in response to his driving thrusts.\n\n\"You're getting close,\" Mr. Spader observed.\n\n\"Yes, yes, I am,\" Maggie gasped, so very fucking close indeed. But then she realized that there was a different meaning to that statement, the one Mr. Spader probably actually intended. She tried to focus her eyes more intently, more closely, but concentration now seemed entirely out of the question.\n\nMr. Spader too was very close, in the meaning that Maggie had first understood. He thrust more forcefully, feeling his cock being so feverishly squeezed, as if every muscle within Miss Gyllenhall's cunt was trying to milk the seed from his loins. He could smell his secretary's perfume mixing with the more heated animalistic wanton fumes of her steaming cunt drifting up to his nostrils.\n\nHe drove even more fiercely, fucking his secretary now as hard and fast as he could. His abdomen slapped hard against her butt, the room filled with the obscene sound of Maggie's wet cunt being plumbed and bored, flesh smacking hard on flesh.\n\n\"Fuck,\" Maggie groaned, and felt her body suddenly tremble with a paroxysm shudder, and then she saw it. \"Penises,\" she struggled to articulate, \"I misspelled penises,\" and then gave herself over to her orgasm, her mind and body engulfed in her climax as well as the blissful state of knowing that she had at last found it.\n\n\"Yes, yes,\" Mr. Spader acknowledged, his balls pulling in tightly against his body as his dick sharply jerked within Miss Gyllenhall's cunt, swelling with a furious pride and pleasure, gushing forth a torrent of thick, steamy, sticky, wet cum.\n\nMaggie fell onto the document and smiled. \"Mr. Spader,\" she said with a dreamy ecstasy. She never felt more satisfied, more fulfilled, as the joyous, euphoric waves of her orgasm coursed through her body, rendering her wondrously helpless, contented, enthralled. \n\nAnd, it certainly helped that Mr. Spader had so, so much cum to give. Her cunt was quickly becoming glutted with his spunk, the excess forced out to leak down her thighs, sliding down her legs to eventually find a home within her panties.\n\nMr. Spader fell onto Miss Gyllenhall's back, unable to keep his own footing, his legs trembling, his heart racing, his dick twitching, gushing, and squirting. Miss Gyllenhall might not be the best secretary in the world, but she was the best one for him.\n\n- - - - - - - - - - - - - - - - - - -\n\nI hope you enjoyed it! And, I hope you found the three errors: two homonyms (\"four\" rather than \"for\" and \"coarse\" rather than \"course\") and one misspelling (\"staying\" rather than \"staring\"). Yes, there are probably ones that were not intentional. I do apologize for them and the many other errors I have committed in prior stories. I am trying, really I am. If you can forgive me, please do take the time to vote. "
    ],
    "authorname": "Charles Petersunn",
    "tags": [
        "celebrities",
        "reluctance",
        "submission",
        "spanking",
        "exhibitionism"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/the-secretary-13"
}