{
    "title": "14 Hours Pt. 12",
    "pages": [
        "--Samantha--\n\nWe graduated before we knew it, and we none of us had seen Kori since the breakup aside from occasional flashes in the hallways at school, but even those ceased prior to graduation. I asked a few teachers who knew her, and was told she had tested out a few weeks ago. Kori had cousins who lived Massachusetts and was staying with them until her semester started at Harvard. Kori was just gone.\n\nWill's trade school started during the summer, so he began immediately after graduation. Conveniently enough for us his school was about an hour drive from my school. He found an apartment pretty close to the center, and even though I was supposed to live in the dorms, I could see myself basically living with him. \n\nAbout a week prior to my semester starting, I'm over at his apartment, a piece of shit really, but it's ours and now our sex is as loud as we want to have it. That gets old pretty fast, but we enjoyed it while it was still novel. \n\nWe finish up, Will finishing off by pounding me from behind and jerking himself off onto my back. We cuddle up on the bed when I ask how things are progressing with Lili. Reaching over to the side table, Will unlocked his phone and showed me the picture of her last ultra sound. Little fucker is pretty big now. \n\n\"Damn, he's got fingers and shit now,\" I say, taking his phone and looking at it carefully. Features were present. The baby had fingers, toes, his head looks less mutant like.\n\n\"She,\" Will corrects. \n\n\"You guys know?\" \n\n\"Found out today,\" Will says, exiting the photo view and scrolling down. Lili's text was 'We're having a girl!\"\n\n\"She's rather cheery about it,\" I say, Will locking his phone and placing it back down, \"She still trying to come onto you?\"\n\n\"Not as much, but she's in the incredibly horny pregnancy phase.\"\n\n\"I am not making an exception on my approved list of side bitches. Chloe is the only person on that list for now,\" I say, Will laughing a little, \"But maybe you can throw her a bone. Maybe it'll make her a little saner.\"\n\n\"If that maybe is a yes, how do I go about it?\" Will asks, and I smile and think.\n\n\"No full in, your dick will take the baby's eye out,\" I reply and begin to think with a grin on my face, \"If she wants back in, gotta be anal, milk that desperation for all its worth.\" \n\n\"Anal, got it. Pictures again?\"\n\n\"Full movie, fuck I'll film. Directors cut, get in deep and dirty with some shaky cam shit,\" I say, Will chuckling and kissing me. That distracts the hell out of me when he does that. I don't want to stop kissing, and within a minute, I don't want to stop there. \n\nA minute into the kiss I start stroking his dick, so he start squeezing my tits and fingering me. When he good and hard, I straddle and slid onto him, dropping my pelvis to his. I look down at him, and I see the wheels turning in his brain.\n\n\"What?\" I ask.\n\n\"If we're filming it and I'm fucking her in the ass, it has to look good. Can't have five minutes of me struggling to get in,\" Will says, making me laugh and lose balance, driving him in to his nuts.\n\n\"Need some practice or something?\" I ask, though I know what he has in mind. Of course he does. I'm not an anal virgin, I've done it once, and that was part of a foursome where I got steamrolled by the basketball team. I got pounded in every hole for an hour, and I wasn't a fan. That's when I established my policy that threesomes are with extra chicks, not extra dudes. \n\nBasically what I'm saying is, I am not a fan of anal. I'm about to say no to Will. I'm scared to say no. I've been game for everything up until this point, so how does he react when I finally hit the brakes? Will has fucked me in every position, and cum on pretty much every inch of my body, but this is where I draw my line? Makes me feel a little proud of myself actually. Didn't even realize I had a line.\n\n\"I'm going to raincheck on that one,\" I say, and Will looks disappointed, but he accepts it. I might need to find a new chick to thank him.\n\n--Chloe--\n\nCollege is about to start, and I'm going to same one as Samantha. That's going to be irritating and interesting. Samantha has become a weird frienemy, and is usually only tolerable when Will is also there. \n\nWill's trade school is pretty close, and he's got his own apartment now. I'm not shy about my feelings, and I never have been. I legitimately like Will. I'm not a huge fan of being a side bitch, but I see this thing imploding under its own weight. Honestly, I'm in perfect position to become main bitch. When I am, I will dissolve the title, and just go with girlfriend. \n\nI knock on his door, and Will answers a few seconds later. He must have just gotten back from school because he smells like sawdust. I never knew I liked that smell. There are books all over his table, tabbed with book marks, one left open with a notebook resting next to it. \n\n\"Sorry about the mess,\" Will says as I enter the apartment. It's immaculate aside from the table. \n\n\"This is messy?\" I ask, walking over to the table and seeing the books. Books on framing, woodworking basics, and furniture. \"I know you're into making furniture, why the framing stuff?\"\n\n\"Carpenter is more encompassing. Learn all facets, and right now there is a paid apprenticeship,\" Will says, closing his door and walking over to his kitchen, \"Drink?\"\n\n\"Water would be nice,\" I reply, Will taking a bottle of water from his fridge and handing it to me after walking after crossing the room, \"Thanks. So what have you been up to?\"\n\n\"School and baby stuff for the most part. I was helping Lili with a baby registry she was making, while deflecting advances again,\" Will says, sitting on his couch, me sitting next to him a moment later.\n\n\"Take it not on the approved list of side bitches?\" I ask.\n\n\"Samantha is cool with a sympathy bang, might calm her down. She's insistent it must be anal, otherwise no deal,\" Will says, making me laugh my water back up, \"She wants to film it too.\"\n\n\"Just stop,\" I say, trying to get my bearings back, Will laughing, \"Any other side bitches? You scouting or is Samantha?\"\n\n\"There is chick at school, short hair, shorter than even Kori's. Sixty percent sure she's a lesbian, but she just looks like she can suck a mean dick,\" Will says, and I laugh again, harder than last time. Glad I was not drinking this time.\n\n\"You got time tonight?\" I ask, Will nodding, confirming he had nothing else going on, \"I'm going to the school tomorrow, mind if I crash here so I don't have to drive the full distance in the morning?\"\n\n\"I only have one bed and this couch isn't very comfy?\" Will says, making me grin and straddle him. \n\n\"Oh shut up,\" I say, kissing him. I feel his hands slide around my body, his thumbs hooking my shirt to pull it off. The shirt hits the floor, his following soon after.\n\nOur clothes are scattered across the living room. Our shirts on the ground, by bra on the edge of the couch, his jeans on the coffee table with his boxers at his feet. My shorts are between the couch and the dining room table, and my panties are on my left ankle.\n\nWill unrolls a condom on his cock, and I lower myself on top of him. My elbows on his shoulders, I slide my pussy onto his dick, my sigh growing louder with every inch. We kiss as I ride him, and I'm only now do I notice how much pleasure a condom removes. I'm on birth control and everything, but I'm paranoid as hell. Seeing Will already has a kid on the way, probably not the best idea to roll the dice on this.\n\nAs I'm nearing my first orgasm, the door opens and Samantha freezes at the door. \n\n\"Am I interrupting?\" Samantha asks.\n\n\"Kind of, yeah,\" I say annoyed.\n\n\"Side bitch status revoked,\" Samantha says, shutting the door loudly. \n\n\"You can't revoke my status mid fuck,\" I say, Samantha not looking amused. I knew this thing would implode. Will looks confused more than anything. He knows he went into this doing nothing wrong by her own standard. Now that she is taking issue it, he's not sure what the right course of action is.\n\n\"Revoked,\" Samantha repeats.\n\n\"At least let him finish,\" I says, Will lifting me off his dick and standing up, \"Seriously?\"\n\n\"What's the deal?\" Will asks, Samantha putting her hands on her hips, \"What is the point of the side bitch rule, if you can retract it whenever you damn well please?\"\n\n\"Seeing it in action, is a little different than I thought it would be like. I feel like I'm walking in on an affair when it was supposed to feel normal and expected. I know it's not fair for me to be upset,\" Samantha says, looking over at me.\n\nI start getting dressed, sliding my panties back up then stepping into my shorts and zipping them up. \n\n\"Wait, wait,\" Samantha says, her not sure what to do. She invited this. She allowed this. It was her rule. You have two choices, fun girlfriend or jealous girlfriend, \"I'll wait in the car, or you guys can finish in the bedroom and I'll wait in here.\"\n\nSamantha is trying to stay consistent. Inconsistency is the least attractive trait in a woman. Short of joining us, this really is her only option, and she has only herself to blame. \n\nWill makes the mistake of taking my hand and pulling me into the bedroom. I feel victorious, this is exploding in her face. If I wasn't moaning so loud, I'd be tempted to listen for her crying. Five minutes in I'm in such a good mood about my chances of stealing him from the wreckage, I tell him to pull the condom off.\n\n\"You sure?\" Will asks, stopping to inquire. \n\n\"Just pull out,\" I say, Will pulls back and rips the condom off, it actually making a snapping noise, then rams himself back inside of me. His cock feels so good, I nearly cum just from that first penetration alone. \n\nFive orgasms in four positions, the next one better than the last. I finish my orgasm on top. I'm on all fours in doggy, him reaching around and rubbing my clit. In missionary with my legs on his shoulders, he's so deep I cum twice. Laying on my side he lifts my leg straight up and slides in, holding my thigh and using it to pull me into his thrust. I cum again, and he says he's close too.\n\n\"Where do you want it?\" Will asks.\n\nI want to say pulsating in my pussy, because that was damn near the greatest thing I've ever felt, but no chances. \n\n\"Tell Samantha to finish you off,\" I say, Will looking at me, not sure if I'm serious. \n\n\"I don't think she's in the mood for that,\" Will says. I know she isn't, but she will. If he went out there, put his dick in her face and pulled her hair, she'd open her mouth and take it. She feels so inferior right now, she'll do anything.\n\n\"She'll still do it,\" I say, hoping he'll standup and go face fuck her while she cries. \n\n\"I'm not going to do that to her,\" Will says, and decides to not finish, picking up a pair of shorts from the floor and laying down on his bed.\n\n\"Fine, that was mean for the sake of being mean,\" I say, coming to terms with how cunty I was just being, \"You still need to cum, I'll let you creampie me.\" \n\n\"I'm fine,\" Will says, now leaving me disappointed. Now I'm desperate enough to put creampie on the table. \n\nIs Will actually a secret player? He has me asking for him to cum, making me want sex with him without a condom, making Samantha North putty in his hand, and a girl four years older than him so cock hungry it's hilarious. This is the same guy a few months ago I thought was too insignificant to even warrant remembering his name after a conversation.\n\n\"Can I still crash?\" I ask, figuring I might as well get what I can.\n\n\"Yeah that's fine,\" Will says, before leaving the room. What the fuck?\n\n--Samantha--\n\nThis was my rule. I created this rule so I can kind of still feel like myself. I'll always be the girl who loves sex, and I don't want the only relationship I've officially been in to get dull because he's not enough for me. Then I walk in on him banging one of the girls I said he could bang.\n\nI was supposed to just walk in, see it, say hi and get some water like it was as normal as walking in on him eating breakfast. When it happened, as it inevitably would, the first thing I felt was jealous anger. It took everything I had to not throw punches. \n\nTalk about backing yourself into a corner. Now I look like the insecure whiney bitch of a girlfriend. Which is why I can't say anything when he takes her hand, and for the next half hour I hear her exaggerated screams of pleasure. I know she's doing it on purpose. To get under my skin. Fuck if it didn't work.\n\nWill walks out, his boner pitching a tent in his shorts.\n\n\"You feel better?\" I ask.\n\n\"Not really, I didn't want to waste a good load with her,\" Will says, sitting next to me on the couch. \n\n\"Let her have all of the fun, and then I get the messy part?\" I say, Will shaking his head.\n\n\"I just don't need to cum right now,\" Will says, picking up his remote and turning on the tv. \n\n\"You're not going to finish?\" I ask.\n\n\"Nope,\" Will says, and I can't help but smile. Chloe said something, and blew his mood instead of his wad. How can I capitalize on the situation and get back on top from this.\n\n\"You still need practice before you sympathy bang Lili?\" I asked, Will looking over at me.\n\n\"You sure?\" Will asks. \n\n\"You're ninety percent there, should be pretty fast,\" I say, standing up from the couch and dropping my thong to the floor from under my skirt. Reaching into my purse I grab some lube and smear it on the head of his dick, then have him finger my asshole with it.\n\n\"How do you want to do it?\" Will asks, so I get on all fours on his coffee table. Will starts rubbing the head of his dick on the outside, him pushing and slipping down into my pussy.\n\n\"Not that I mind, but wrong hole,\" I say, him pulling out and trying again.\n\nAnal is not easy. For one, getting the dick in is a challenge in and off itself. He slips over and under a few more times, before he uses a hand to help guide himself, the tip finally aligned to begin to penetrate. \n\n\"Uhh fuck,\" I say under my breath, as he begins to slid in a half inch at a time...\"Too deep,\" I grunt.\n\nWill pulls back a little, then forward a little. Back and forward a little more. He's slow, very slow, but he's also big, very big. He hurts my cunt occasionally, try to imagine what anal feels like with this guy.\n\nFuck that he's ninety percent there shit, I'm getting ass fucked for five full minutes before I even ask if he's close. Evidently, he's not. I guess Chloe ruined the mood more than I thought. The longer he goes, the bolder he gets with depth and tempo. Before I knew it, I felt his nuts swing and hit my snatch. He's balls deep now.\n\n\"You don't need practice,\" I say, Will slapping my ass hard. \n\n\"I guess I didn't,\" Will replies. \n\nFinally he cums, filling my ass with cream that starts dripping down my leg. Seeing if he can fuck big red in the ass will be one hell of a movie. \n\n--Lili--\n\nThat's it? He'll bang me to relieve the horny hormones, but he gets to finish in my ass. At least get creative. Making a movie out of it, I'm game, not the first time I've used a camera in the room. This isn't even pregnancy brain talking.\n\nWill's superhot girlfriend films me sucking his cock, which I was going to do anyway. That's how I like to start sex. If he's a guy with endurance or a fast rebut, I'll finish him off.\n\nI know for a fact Will has a fast reboot, so I do just that. I blow him until he shoots a load into my mouth. I turn and face the camera, pushing it out between my lips and licking it back into my mouth. His girlfriend has the camera on a tripod, so I pull her into frame and kiss her, pushing his jizz into her mouth, and I know she's struggling. \n\nShe's so used to it just shooting in and swallowing before she can think. You're an amateur sweetie, you don't deserve this dick.\n\n\"I'm not in this,\" she says, a combination of cum and drool running off her chin.\n\n\"I don't need to have all of the fun,\" I say, then keep sucking him off, making him squirm a little. I undress all of the way, and you can barely even tell I'm pregnant. Just a little baby bump, but damn does that little baby kick. \n\nWill fucks me the way I want it. I don't know if this will relieve the hormones or supercharge them. I know this bitch struggles to handle his dick, not even a problem to me. I ride him hard and fast, and I can tell on his face he's never had it this good. That he could remember at least. \n\n\"Holy shit,\" Will groans out, and I turn to see his girlfriend suddenly second thinking this. \n\nWill's been fucking girls this whole time. I'm a woman, so man up and fuck me like a man. You're man enough to put a baby in me, you better be man enough to make me scream. \n\n\"Harder!\" I shout at him, his hands grabbing my hips to help thrust into me from behind.\n\n\"Deeper!\" I shout, his hands holding my ankles, my legs spread eagle and him drilling me deep. \n\nSex it not polite you little bitch. Start pulling my hair a little. Throw some slaps in there. Grip my tits like you're trying to tear them off. Hell, choke me. \n\nTwenty minutes in, he can't keep up. I'm all ready to go, but he's worn out, and his reboot increased his endurance so he's still got maybe another ten minutes in him. \n\n\"No breaks, I only came once,\" I say, pushing him to his back, facing the other way and riding him reverse cowgirl. This my orgasm position. The dick at this angle combined with rubbing my clit, I'll cum in thirty seconds.\n\n\"I'm close,\" Will says. I take the lube from the nightstand, prepare my ass, and push him in still in reverse cowgirl, and ride him as if he's fucking my pussy. \n\n\"Holy shit!\" Will says, my tight ass way too much for him to handle. I feel him expand and contract, and I keep fucking him, making him curse and mumble. \n\n\"Don't quit yet, I need one more,\" I say, and start fingering myself while using his cock as a pogo stick. I manage to squeeze out one more orgasm before I pull him out, his hot goo slithering out of my hole. \n\n\"I need to use the bathroom,\" I say, walking away to go pee. I'm pregnant, I can only hold it for so long. \n\n--Will--\n\nI should have just fucked her. That time she tried seducing me. I should have just fucked her. Sorry Samantha, sorry Chloe, you guys are not even in the same league as this crazy bitch."
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "photoshoot",
        "humor",
        "series",
        "anal",
        "jealosy",
        "drama"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/14-hours-pt-12"
}