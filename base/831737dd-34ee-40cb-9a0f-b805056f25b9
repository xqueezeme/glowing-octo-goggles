{
    "title": "The Walters Brothers",
    "pages": [
        "This is a prequel to Split Trails Ranch\n\nChapter 1\n\nIt was hot. Godawful hot. I thought Colorado would be cooler. What I get for thinking, I reckon. I wondered for the hundredth time why we were here.\n\nI grinned at the thought. We were here because my brother Zeke and I got a hankering to go 'yondering' as our Pa liked to put it. I'm pretty sure he had no idea what was going to happen, or that I would be hiding from my enemies in a cave while they searched for me.\n\nZeke was the third son and I was the fifth in our family. Our father had a pretty big spread down in Texas, right on the Rio Grande, but it wouldn't amount to much if it had to be split between five sons and a daughter. Our two oldest brothers had already left the nest. One was in Arizona. He had a horse ranch and was in the Arizona Rangers. The other was a County Sheriff in the Hill Country of Texas, with a ranch/farm. They were both carrying on a family tradition of service in law enforcement. My father was also a Captain in the Texas Rangers.\n\nZeke was 23 and I was a month shy of my eighteenth birthday when he started talking about heading for Colorado to try and get in on the gold strikes happening there. We were pretty much partners around the ranch. We worked well together and folks tended to leave us alone. Most of it had to do with who we were but some of it was because of our reputation.\n\nZeke was the most direct fellow I ever met. He didn't believe in beating around the bush and if he had something to say he came out with it good or bad. I was the quieter one until I got riled. Even then I didn't talk much, preferring to let my pistol, knife, or fists carry the conversation. Without bragging I was hell on wheels with a six gun. The only one even close was Zeke. He wasn't quite as fast but deadly accurate and didn't stop until everybody he was up against died or gave up.\n\nWe never much talked about it and people didn't realize how we were until the spring before we left. We were going out to a line camp next to the border to relieve the hands who had wintered over. I laughed, telling Zeke the lure of cold beer and hot women would have Jose and Dan ramped up and ready to go when we got there.\n\nChapter 2\n\nSomething was wrong. We could read the sign and feel it. There were no horse and cattle tracks around the springs and creeks we crossed newer than last week or longer. Dan and Jose might be a lot of things but slackers weren't among them. They were excellent stockmen, the main reason Pa had sent them out. If the tracks were off there had to be a reason and it wouldn't be good.\n\nWe came up on the line cabin and sat back a ways, sizing it up. We could see through the field glasses Zeke carried that the door was wide open. Without discussing it I angled one way and Zeke went the other, approaching under as much cover as possible. We may as well have ridden right on in. I stepped through the door first going to the right, Zeke going left.\n\nWe found Jose on the cabin floor. He'd been dead two weeks or better and the critturs had been at him something fierce. We rolled him in a blanket as best we could and carried him outside. It took us a few hours to find Dan, hunkered down in a buffalo wallow a couple miles out. His weapons were gone, but judging by the spent shells we found he'd put up a pretty good scrap. There wasn't much to move so we brought out the shovels, carried Jose with us, and buried them both in the wallow. We put up two crosses we knew would be gone by next spring, read from the Book, and said our farewells.\n\nNeither of us were inclined to sleep in the shack so we rolled up in our blankets under the moon. The next morning we hit the trail. It had been a while but there hadn't been that much rain and 500 cows left a lot of tracks. They went straight to the river and Zeke didn't hesitate in following.\n\nWe rode in Mexico about as often as we did at home and both spoke pretty good Mexican. In fact, our stepmother was Mexican from one of the better families in the region. I was a little better with the language because I had a weak spot for the exotic looking, raven haired senoritas. A hankering that led to a couple of scraps over the locals objecting to a Gringo sparkin' their women. It never got out of hand because the family on our mothers' side made it plain they wouldn't interfere if it was one on one. Gang up on us, though, and they'd lend a hand.\n\nIt only happened once. I thought I was a goner, holed up in a cantina, down to three shells in my pistol when Zeke showed up with Uncle Miguel and cousin Santos and a few of their riders. The got behind the boys, disarmed them, and called me outside.\n\nUncle Miguel asked who I had the trouble with, cut him out of the herd and gave him his pistol back. \"Face him like a man puta, or we kill you. You wanted him, there he is.\"\n\nHe had sand but I hadn't had a meal in two days or slept for 36 hours, so I had a little anger built up. I gave him all three shells as he tried to bring his pistol to bear. After that I was mostly much left alone.\n\nWe followed the tracks for three days until they ended in a pretty good sized town. Most of our cattle were in the pens, bound no doubt to the slaughterhouse as food for the military. We barely glanced at the cattle as we rode in. We didn't stand out being as close as they were to the border so people mostly ignored us.\n\nTwo riders in a hurry can travel a lot faster than a herd so we weren't much more than two hours behind them when we hit town. We knew they probably hadn't finished the sale of the cattle and were still in town somewhere. As near as we could figure from the tracks they were no more than five or six riders. That few vaqueros pushing that many cattle that fast would leave them pretty wore out.\n\nWe stopped in front of the best looking cantina, beat as much dust as we could off us, and stepped inside. It was afternoon so there wasn't a large crowd. We bellied up to the bar and ordered the dark Mexican beer we were partial to, thanking the bartender in his language. We let the first two slide down to give them time to get used to us, then started talking to the bartender and one of the patrons at the bar.\n\nWe introduced ourselves by first names only, bought a round, and started talking about range conditions and general business. \"Our Pa sent us down to see about maybe selling some beef to the Army. We heard they were having a hard time fulfilling their quotas,\" said Zeke. \"He'd sure like to get in, business is a little slow in the States right now.\"\n\nWhat he was talking about was common knowledge. Central and Western Mexico had been in a hard drought for a couple of years and the cows responded, losing weight and not dropping calves as often. Good beef was hard to find right now. Mexico bought from border ranches when they could, as did the U.S. when opportunity came up.\n\nThey were full of information and directed us to the local Quartermaster, who happened to be in town to purchase a small herd. We bought them another round, chatted for a few more minutes, and left.\n\nChapter 3\n\nThe quartermaster was a middleaged man who wore his years on his face. Despite his droopy appearance and his massive mustaches he was a pretty sharp cookie.\n\nZeke introduced us as potential business associates, asking about prices, delivery dates, and numbers. The man knew of our ranch and was pleased we had expressed interest. His prices were fair, even a bit higher than what the US was paying. Zeke set the hook.\n\n\"Can you handle about five hundred head now, maybe 500 more in a few weeks?\"\n\n\"We can, Senor. More if you have them.\"\n\n\"Well good then. Those cows that just came in are ours. They carry our brand. Now we can handle this a few ways. You can take my word for it and pay us, we can get the Federales involved, or better yet your commanding officer. I don't give a damn who drove them in or what kind of deal you struck those are our cows. How you handle this will bear on any further business we do. One thing you may want to think about. They killed two of our hands in cold blood and we will be looking them up as soon as our business is over. After we meet one group or another won't be your problem anymore. Maybe both. Just in case I'll post a letter to our father saying you acted in good faith and he should honor the deal I made with you. I would ask that if this ends badly for us you contact Miguel Vasquez and hold our bodies for him. He's our uncle and will fetch us home.Your decision, Major.\"\n\nTalk about a rock and a hard place! The Major had a hell of a decision to make. I think the opportunity to purchase more beef swayed him and the fact that we claimed Miguel as our uncle sealed the deal. He was a pretty big deal in that part of Mexico. \"All right. I'll pay you the agreed upon price right now, in gold as requested. The men you are looking for are the Montoya Brothers. They have three men with them and right about now they'll be at Marias' Cantina. I have to warn you they do not like Americans there and they won't be happy when you show up.\"\n\n\"Thanks, amigo. They'll be even more upset when we leave. It should take us about an hour to conclude our business. We'll stop by for payment on the way out of town. A pleasure doing business with you, sir.\"\n\nWe shook his hand and he surprised us by offering to send a few troopers with us to the cantina.\n\n\"No need to bother the Military. They got their own problems. We'll handle it.\"\n\nBy now it was gettin' pretty late in the evening. We checked our weapons and took a liesurely stroll down the boardwalk. I nearly stopped and went in when we passed a restaurant, it smelled that good. Zeke's stomach growled and I grinned.\n\nMaria's Cantina was not a first tier place. It was smaller than I hoped and the locals eyed us with displeasure when we walked through the door. We scanned the room looking for men that matched the descriptions the Major had given us. It was pretty easy to spot the Montoya brothers because of their beards and better cut of clothes. They were at a table by themselves and everyone gave them a wide berth. The other three were at a table about halfway across the bar looking nervous. Probably waiting for their bosses to pay them.\n\nWe eased on up to the bar. I didn't trust the glasses so I asked for a bottle of mescal. That would kill any germ in the universe. The bartender took his own sweet time getting the bottle down. I reached into my vest pocket but instead of money I came out with a little two shot derringer. It was about a foot from his belly button. I started talking softly in Spanish.\n\n\"You be calm and you will live to see another day. We're here for the Montoya brothers. That them to the right?\"\n\nHe nodded slightly, sweat popping out on his brow. \"Gracias. Now to avoid any misunderstanding I want you to ease to the end of the bar. I wouldn't want you gettin' hit by a stray bullet. As a gesture of good faith I'd like you to bring that scattergun out from under the counter and lay it on the bar. That will keep bad thoughts out of your head. Understand? Good. Now do it real slow.\"\n\nHe made damn sure his fingers were nowhere near the triggers as he slid it on the bar top. \"Both barrels loaded? With what?\"\n\n\"Buckshot, nails, glass, anything I thought might do damage, senor.\"\n\nI looked down. Ther shotgun was an old muzzleloader. I hoped that if I had to use it it didn't blow up in my face. \"Good man. It always pays to be prepared. Now ease on over.\"\n\nWhile I was having my conversation Zeke was facing the room, arms on the bar, looking all relaxed. He was even grinning. When the bar man was out of the way I slid the derringer back into my vest and grabbed the scattergun.\n\n\"Which of you sombitches are the Montoyas?\"\n\nHe said it in English but they understood just fine. The older one leaped to his feet while the younger got up more slowly, wobbling a little. Too much cervaza if I had to guess.\n\n\"Who wants to know?\" He said it in Spanish so we answered in kind.\n\n\"The men whose hands you killed and own the cattle you stole. Bad news about I'm afraid. The Major has seem fit to deal with us so we'll get the money. All you did was half kill yourselves getting them here. Thanks for that but it's not enough to atone for your sins. You got a choice. Surrender and face the Federales or buck up and face us. Which one you think you'd like best, a rope or a bullet?\"\n\nThe other three were easing out of their chairs, along with what probably were a few of their friends. The sound of both hammers going back on the shotgun stilled them mighty fast. I spoke for the first time.\n\n\"You boys are fine where you are. You start things rolling and I'll turn loose with both barrels. I might not kill all of you but I'll make you damn uncomfortable. You think about that.\"\n\nA twelve guage shotgun barrel looks pretty big when you're on the wrong end of it so they stopped where they were. I thought we might get out without shootin' anybody but the younger Montoya obviosly thought alcohol made him faster. He screamed and started grabbin' so I swung over and let go with both barrels. The thing was mighty old, percussion powered, and damn near broke my wrist. Seems the bartender hadn't lied about the extras he'd shoved into the barrel. Nails, broken bits of metal, even a few marbles. They both went sailin' backwards. The older one was almost cut in half and the younger had caugt a few nails to the face. They were both dead before they hit the ground.\n\nZeke had palmed his left hand pistol and shot the three at the table. When the barrel swung away they figured they had a chance. Not against Zeke. He had one pistol on his right hip, another in a crossdraw facing right, and a third in a crossdraw pointed left. He was the only truly ambidexterous man I'd ever seen, good with both hands at anything he tried, but he was more lethal lefthanded. The trick stood him in good stead over the years. He put seven bullets into them, the last three from his righthand gun. They twitched a little but not much.\n\nEveryone else was frozen, hands as high as they could reach. I talked to them gently. \"That's a good idea boys. You keep them hands up. Bartender, this is a hell of a shotgun. Thanks for the loan. You take what them boys have on them for your trouble.\" I pulled out a handful of silver dollars and laid them on the bar. \"This is for the undertaker. See they get a proper burial. It was more than the boys they killed got. Leave enough to buy everybody in here a drink, our way of aplogising for disturbin' their afternoon. We'll be leavin' now. You boys stay put for a few minutes.\"\n\nZeke walked over to the Montoyas, reaching dowm and pulling out a fancy knife and four mighty fine lookin' pistols in hand tooled holsters and belts. He looked over the bar. \"You tell anyone who objects to me takin' this stuff to look me up.\"\n\nI backed out while Zeke faced the street. It was like a ghost town. the doors were shut and there wasn't a soul on the boardwalk. We took the five horses standin' at the rail, three had our brand and the other two were fine animals with fancy rigs. We figured them belonging to the Montoyas and they wouldn't be in need of them any longer. I stayed outside with the horses while Zeke collected the money from the Quartermaster, then we got the hell out of town. We had seven horses saddled and ready to go so we switched off every two hours and rode for fourteen hours before we stopped. Anybody chasin' us better have a remuda with them.\n\nThe horses were worn out as we were when we stopped. Zeke took the first watch and I slept three hours before rolling out and giving Zeke a rest. I had coffee made and bacon fried when he woke up. We shoved the bacon in some stale biscuits, swallowed as much as the hot coffee as we could, and took off again. Two days later we rode through the gates of our ranch.\n\nPa took one look at us and told us to get some rest and we'd talk over dinner. Mother gave us hell for being so dirty and we had to have baths right away. I know it isn't right, but I was proud of the fact that even though she denied it Zeke and I were her favorite sons. Maybe it was because we were little when she married Pa and bonded more easily. Zeke remembered our birth mother better than I did. All I remember is a lot of blond hair and a good smell and singing. Dolores sang to me too, in Spanish. I think that's when I learned to love the language.\n\nZeke was our sister's favorite brother and she had a way of wrapping him around her finger. She was the only child of Pa and Dolores and was extremely upset when she found out we weren't full brothers and sister. Zeke made her happy.\n\n\"Hear that Brad? She's only our half sister. That means that I can tickle this half and you can tickle that half.\" Her eyes got wide and she tried to run but I caught her. After we stopped, exhausted on the ground, she snuggled up between us. \"So you're not mad I'm only a half sister?\"\n\nZeke grinned and snuggled her tighter. \"Silly girl. You're our ONLY sister. It don't matter that we had different mothers. you're a Walters, and one of us. We'll never love you less.\"\n\nThey told us later she cried for two days after we left.\n\nThat night at dinner I told them the whole story of finding Jose and Dan, our trip to Mexico, recovering and selling the cattle, and the contract we had struck to deliver more. \"What about the rustlers?'\n\nZeke just grinned. \"Oh, we came to an accomodation. They won't be bothering us anymore.\"\n\nMa had seen the groove the bullet left on my arm, and the hole through Zeke's leg. I thought about it later, wondering if I was tough enough to ride that far that fast with a bullet hole in my leg. Zeke never let on. I guess he didn't like the alternative all that much.\n\nChapter 4\n\nThree weeks later we were on the range moving some cattle to keep the grass in shape, when we told Pa we were leaving soon. He just grinned. \"I figured. You boys been kind of antsy lately. Got any idea where you're going?\"\n\n\"We think we might like to see Colorado, see if every creek up there is really filled with gold.\"\n\nHe frowned a little but didn't say anything. He paid us wages just like the regular hands and we'd saved a mite up. Almost three hundred each. That was more than most cowboys make in a year. Pa bought the two horses we had brought back, and we sold the fancy pistols for eighty dollars. There was a silver mounted saddle on one of the horses and we both thought it was a bit too gaudy for a regular puncher. We got another forty out of that.\n\nTwo weeks later we were saddled up and the pack mule we were taking was loaded down. Little sister and Mother cried. The men of the family just gave us a firm handshake, and Pa told us to watch out for each other.\n\nWe took our time, looking over the new country, going steadily North and West. Zeke spotted a small herd of wild horses led by a mighty fine looking stallion. We studied on them for a while and decided it would be a good thing if we had a few extra mounts, so we set a brush wall in a little box canyon and waited until they were close. We rode up slowly, the stallion snortin' and pawin' the ground, easing them before us.\n\nWhen we got close we pulled our revolvers and charged the herd. The stallion was no fool but we managed to split up the herd and drove about a dozen into the canyon, dragging brush in to block them off.\n\nIf we would have had time, we'd have spent all summer gentling the horses down, but time was of the essence. We picked out the four best mares and a little dun stallion that looked to be no more than two years old. The rest we turned loose to rejoin their herd.\n\nOver the next two days we got beat up pretty bad. Zeke had a black eye and a bloody nose where the stallion rared up on him, slamming his head backwards into his face. I had a scraped arm and a bruise the size of Dallas on my back but we topped them, working with them every day for a week before going on. Zeke took an old cinch ring and put a brand on them, BZW, our initials.",
        "Three weeks before we got into gold country we stopped at a pretty fair sized town. Picking the best looking livery barn in town, we turned our horses into the corral. We had to hobble the stallion as he was still thinking he'd rather be back home but the mares were fine.\n\nThe owner came out and looked them over. \"Fine looking animals. If you're interested in selling them talk to me first.\"\n\nWe told him we'd think about it and loafed around for two days before we got down to trading. I let Zeke handle that because if I'm honest here, I was a born sucker. All I needed was to hear a sob story and I'd give you the shirt off my back. Zeke didn't give a damn (well, he did really, but he projected being a hardass really well) if your wife was sick and you had seven kids you couldn't feed, he was going to get his price or he'd move on. In the end both parties allowed as they had both gotten something out of the deal and shook hands. I kind of hated letting that little stallion go but I didn't have the time to train him the way he needed so I let it be.\n\nWe idled along, and two days later we heard shots. It's odd, but most Westerners can tell a lot by listening to shots. A few shots popped off during a wild night in town won't register as much as the same amount of shots during a gunfight. There is a difference between a single hunter's shot and a volley loosed by a group of buffalo hunters. The shots we heard were fighting shots, a brief flurry, silence for a minute or two, then a single shot followed by another flurry. It sounded like two or three against one.\n\nThe landscape had changed as we'd ridden. Gone were the plains, replaced by verdant meadows and hills not quite big enough to be called a mountain, covered with trees and brush. We decided not to go into the situation blind so we secured the horses and donned the knee high moccasins Dolores had a squaw make for us. They were made by the Mountain Apache of Mexico, people who knew the value of sturdy footwear that didn't make any noise if it brushed against a branch. Seems Ma was kin from way back.\n\nWe took our time, easing over the ridge. There was a wagon there but I didn't see any horses. What I did see was a lone man lying under the wagon trying to keep up with three others as they closed in on him. I could see two more lying on the ground behind them. It was a pretty safe bet they wouldn't be gettin' up.\n\nWe got a little closer and could hear the yellin'.\n\n\"Give it up Yankee Boy. We got your hosses and before it's over we'll have the wagon. Stop shootin' and walk off and we'll let you go.\"\n\nI could hear the grim humor in his voice as he spoke. \"I got a better idea. You boys turn my horses loose, gather up your dead and leave before there's more.\"\n\nThat led to a round of cussing before the leader shouted back. \"The hell with you. We'll just wait you out. You gotta sleep sometime.\"\n\n\"You can bet your ass I'll take at least one of you with me before I go. Which one of you wants to be the lucky feller? Step on up and let's get this over with.\"\n\nHe might have been talkin' to one but he was watching all of them. One got a mite brave and exposed himself. The rifle boomed, knocking him backwards. He didn't get up.\n\n\"Now it's down to fifty/fifty. Who's next?\"\n\nThere was a lot of cussin' when they realized they were another man down. I looked at Zeke and grinned. That ol' boy had sand. He went left while I went right. Zeke eased along and it took him half an hour to get behind his man. He rose up like a ghost and put the butt of his rifle to the back of his neck. He dropped like a rock and Zeke tied him up.\n\nBy now I was behind the leader, less than ten feet away. He flinched when he heard the hammer go back. \"You got a choice here. You can turn around and take your chances or you can drop that rifle in the dirt. You decide, but I ain't waitin' long.\"\n\nHe dropped the rifle and I made him toss his pistols beside of it. I raised up and hailed the wagon. \"Hello the wagon! This is Brad Walters. My brother Zeke is out here too. It looks like you had a mite of trouble so we decided to step in. I'm comin' out of the brush now. I got the feller who was shootin' at you. Do not shoot!\"\n\nThere was a minute of silence before he spoke. \"Come out unarmed! Keep your hands where I can see them!\"\n\n\"I'm comin' out but I'll be keepin' my weapons. I give up my guns, what's to keep this fool from runnin'?\"\n\nThe man was hesitating, wondering if he could trust us, when Zeke spoke up. \"You need to pay better attention mister. I walked right up behind you and you didn't notice a thing. Now to make us all happy how about you prop that rifle up against that wagon wheel. I'm going to call out and my brother is comin' in.\"\n\nThe man didn't look much older than Zeke but he was smart enough to know he'd been boxed. He sighed and slid the rifle against the wagon. Zeke hollered and I marched my captive out and tied him to a wagon wheel. Then we dragged the other feller Zeke had knocked out in and tied him to the same wheel.\n\nOnce he decided we weren't going to rob or kill him he warned up pretty fast. \"I can't thank you enough. I was down to five shells and it was looking pretty bad. These boys came up on us at daylight, spooking our horses before we had them hitched up. It didn't take long until we were trading shots.\"\n\n\"Who's we?\"\n\nHis eyes grew dim. \"Me and my partner. He died in the wagon. Even though he was gut shot he hung on long enough to send one more of them to hell.\"\n\nWe helped him pull his partner out of the wagon. He didn't say another word, just grabbed a shovel and started diggin'. When he started movin' slow I took the shovel out of his hands and Zeke fed him coffee and got a plate of beans and biscuits into him.\n\nIt was about an hour before dark when we laid the man to rest. The man, Bob Cline, didn't have any words so Zeke said a few things. He'd pretty much memorized the whole Bible and could pull a piece of scripture out for just about any occasion. Satisfied, we went back to the men tied to the wagon.\n\nThe man Zeke had knocked cold came around and asked what we were going to do with them. Zeke grunted.\n\n\"Let's see, you attacked two innocent men and stole their horses, killed one and was workin' pretty hard on killin' the other when we showed up. Murderers and horse thieves, what usually happens to men who commit those crimes? You really have to ask?\"\n\nThe leader went pale while I went to their horses and got their ropes. Only fitting I thought, as I fashioned the nooses, that they be hung from their own ropes. They started trying to bargain, promising anything to us if we'd let them go. He may as well have been talking to someone who didn't speak the language.\n\nI asked Bob if he had a problem with what we were about to do.\n\n\"I haven't been out West long but I been here long enough. I don't intend to backtrack and waste weeks while they have the trial. I'll do it.\"\n\nWell, it was his right. We asked them if there was anyone they needed to write to or if they couldn't write we'd do it for them. Neither said another thing so we carried them kicking and screaming to their horses.\n\n\"Any last words? No? Then I hope hell lives up to it's reputation!\" Bob slapped the horses with his hat and they jumped forward, trotting a few feet before stopping. The heavier man got the best of the deal because his neck snapped immediately. The other man was a lot lighter and his horse didn't move as fast so he danced on air while he strangled.\n\nWe rolled into our blankets, taking turns at guard. We didn't know if they had friends that would come lookin'.\n\nBob was up before us, mixing up dough. He tossed it into some bacon grease. Fried bread ain't as good as biscuits, but it was mighty tasty right there on the trail. He'd bought a few dozen eggs back in town and he fried about a dozen up, then cooked up a pan of taters and onions. Mighty fine fare for the trail. We talked as we ate.\n\nBob and his partner were going to try looking for gold but were smart enough not to go into it blind. They'd bought the wagon and pooled their money, buying supplies the miners would need. Pickaxes, shovels, gold pans, that sort of thing. I looked in the wagon and it was only half full.\n\n\"Why didn't you fill it up?\"\n\n\"Ran out of money. It don't go as far as you'd think out here. It was enough to give us a decent start and a cushion for supplies we might need later.\"\n\nI looked at Zeke and knew what he was thinkin'. We had plenty of money relatively speaking, but it might be a good idea to add to our pile. The thought of makin' money before we panned our first dirt appealed to me.\n\nFirst thing after breakfast we swept the area, dragging the dead in and laying them out under the men swinging on the ropes. There had been six of them but they didn't have over ten dollars between them. Bob and his partner made a mighty temptin' target. They did have six pretty good horses and three mules, each with almost empty pack saddles. Most of the pistols were decent, and two had almost brand new Winchesters, the '73 model. The rest were Yellowboys and one old Henry.\n\n\"What are we gonna do with their stuff?\"\n\nZeke just grinned. \"It ain't their stuff anymore, Bob. It's ours. A man tries to rob and kill you and loses, you're entitled to everything he leaves behind. I claim one of the newer Winchesters for my brother and if their weapons are better than yours you need to help yourself. I notice you ain't got a belt gun and this is the best of the lot. Strap it on and get used to it. You're probably going to need it.\"\n\nTwo matching Smith &amp; Wessons that looked almost brand new were soon settled on his hips. Bob didn't argue and took the other '73 as well. \"What do we do with the rest?\"\n\n\"Sell it first chance we get. You might want to pick out the best horse and saddle. You won't be on that wagon seat forever.\"\n\nThere was a dun mare with good lines and a sweet disposition and on our advice he tied it to his wagon. He stood, not sure what to do next. Zeke grinned at him. \"Bob, we don't know each other but we got a proposition for you. Your wagon is half empty and we got three pack mules with empty packs. What say we partner up and slide on back into town. We sell the horses and what guns we don't want and split the money. You take yours and buy what you want. When you're done we'll finish loadin' the wagon up and pay you to freight it for us. We'll also load the pack mules down, but that will be all ours. We'll travel together for safety and we'd have a vested interest in makin' sure you get to where you're going. Sound reasonable?\"\n\nHe looked back and forth between us for a minute before stickin' out his hand. \"Deal!\"\n\nWe turned around and rode back the way we came. The town had a railroad stop and it was a lot cheaper to buy it there off the train than it would be in the gold fields. The railroad had agents on the train for this. They'd discharge the freight that had been prepaid, then open for business to try and get rid of the rest.\n\nThe first thing we did was go by to see the Sheriff. We told him about the robbery attempt and gave him a couple of letters we'd found. It identified three of them but as for the others, people went West and disappeared all the time. Maybe some mother somewhere in her old age would wonder what happened to her boy. Indians, stampedes, drunken brawls, flash floods, avalanches, rattlesnakes, or in their case criminal activity, all caused deaths that were never discovered or recorded. In our case, the men had tried to run a pat hand only to find they'd been holdin' a busted flush.\n\nWe were surprised when the Sheriff told us it was a shame we hadn't brought them in because there were rewards on two of them. Without proof he couldn't pay us. We didn't worry about it, going back to the livery where we'd sold our horses and offering the five from the outlaws to the owner. They weren't as good as what we had brought him the first time but with the tack we got a pretty decent price. Bob took his cut and bought more supplies and when he was done we finished it with picks, shovels, and plain pick heads. We bought as many of those as we could. The miners could make their own handles. We also added four barrels of flour.\n\nWe picked some pretty unusual items to load on the mules. One held dried apples, cinnamon, lard, and sugar. The other held ammunition. The last was carryin' mining supplies. We'd held on to the guns, knowing we could get twice the price in the fields as we could here.\n\nIt took three days before we were ready to travel. Once we got started though we made good time. We'd traveled six days seein' nothing but the land and each other when we ran into a group moving about fifty head of cattle. It wasn't much of a herd so we pulled up to let them pass.\n\nOne of the 'pokes broke from the herd and rode over to us. I was surprised to see it was a woman. I judged her to be in her forties but she looked and acted much younger, with a whipcord body and a direct way.\n\n\"Ya'll wouldn't be interested in buyin' some cows, would you?\"\n\nZeke smiled as he doffed his hat. Bob and I quickly followed suit. \"Not presently ma'am. You might try the town six days days back.\"\n\n\"Well then. Thank you kindly for your time.\" She turned to leave and something made me speak up.\n\n\"Ma'am, it's gettin' on towards dark. Why don't we camp close together? We'll even throw in dinner.\"\n\nShe looked me up and down before she grinned. \"I believe I'll take you up on that. We're runnin' a bit short on rations and any meal we don't have to cook is a bonus. Let me bed the herd down.\"\n\nZeke grinned at me and offered to help. She did the same once over to him and nodded. \"You look like you know which end of a cow is which. I'd appreciated the help.\"\n\nBob had remained silent until they drove away. Then he grinned. \"You know how to cook?\"\n\n\"A little. Drop that tailgate and get a fire goin'.\"\n\nWe'd had a Dutch oven full of beans goin' in the morning, and we wrapped it tightly and dropped it in to a box so it wouldn't tip over. They were mostly done. I hung them over the fire and got them going again, adding a couple of dried peppers for a little punch. I greased another smaller oven and tossed a few potatoes in it, sitting it on the edge of the fire and turning it every ten minutes or so. Halfway through I pulled it off the fire and checked for doneness. Then I added onions and carrots, a big chunk of beef jerky I'd shaved down, and filled it with water, sitting it directly on the fire. I got out the grill and set it over another fire, mixed up the dough, sprinkled it with cinammon, and took the apples I'd stewed that morning and made fried pies. It was all smellin' mighty tasty when Zeke and the woman's crew came in.\n\nBob kind of had his mouth hangin' open when I looked up. Her crew was all female, girls ranging from seventeen to fifteen to thirteen. All very pretty clones of her mother. Only one had her red hair, another was blond and the other had curly auburn locks. They seemed mighty embarrassed to be caught out in men's clothing but we never let on. I bowed to each as we were introduced. The youngest giggled and blurted out \"I'm mighty pleased to meet you Mr. Walters. What smells so good?\"\n\n\"You girls wash up and I'll show you.\"\n\nAll of them including the mother rode off about twenty yards to a little creek and disappeared behind some bushes. One stayed on guard, and when another finished they took over until they were all bathed and much more presentable.\n\nThey tried to nibble but I had the feeling they had missed a few suppers. \"You girls eat up or you don't get dessert. I didn't cook all this food to let it go to waste.\"\n\nThey allowed as that the beans were the best they'd ever tasted and the stew really hit the spot. It looked like they had tears in their eyes when I brought out the pies. \"Two each for all of us and three left over. You're guests so you get the extras but one of you is going to go without.\"\n\nI was wrong about that. They practically inhaled the pies then carefully cut a fourth off each the excess, giving all the same amount. It made me feel good to watch such a closeknit family. I took the first watch with the redhead, the oldest daughter. We'd circle the small herd from opposite directions stopping to talk every time we crossed paths. It took several rotations before I got their story out of them.\n\nTheir father had passed over the winter from a fever and rustlers had hit them two months ago, taking the majority of their cattle. They'd worked the brush to find what was left and came up with almost three hundred head. Needing supplies in the worst way, they cut the fifty least desirable out and were making for town, to sell them for enough supplies to last the winter, maybe hire a hand or two to watch the herd while they built it up again.\n\nZeke rode with the youngest and Bob, despite having no idea what he was doing took the third watch with the middle daughter. Their mother was upset they let her sleep the night through but got over it.\n\nZeke and I rode out and had a little discussion. When we got back we laid it out for the ladies. \"You can get three times the price you'd get in town at the gold fields. Ride along with us, we're going anyway. If your ranch isn't too far away swing by and pick up another fifty head. That should give you a cushion and maybe you'll pick up a few hands on the way back. Not everybody gets rich and some will be broke. I advise you to choose wisely, they obviously left somewhere to chase gold so they might be prone to do it again after they build a little stake up.\"\n\nThe ladies took their own ride and were gone for almost an hour before coming back in. \"It's a deal. We expect to pay for your help though. We'll give you the price we get for ten of the steers in exchange for your help. Make that fifteen, five for each of you.\"\n\nI knew we would have done it for free but Zeke knew he had to let them keep their pride, intending to keep the cattle instead of selling them. It would be our own source of food when the snows hit and we could freeze the beef.\n\nWe left Bob and the youngest with the wagon and herd. They had a pretty place, probably about five thousand acres with good water and graze with the house in the middle of a little valley. It didn't take us long to gather up some cattle. Another 75 head would give the ladies a lot of breathing room. On our advice she gathered up a dozen more horses, to use as a remuda and hopefully to sell when we got to the diggin's.\n\nI rode with the mother on the way back and she talked about their life. \"My husband dearly wanted sons but all I threw were girls. He loved them but couldn't hide his disappointment. We tried for more children, but I think my body had had enough. Still we had a nice little spread and were doing so well when the girls got old enough we let the hands go to increase our profit.\n\nI don't know where he got the fever but it took him quick. The girls and I kept a fire going for four days, thawing the ground so we could lay him to rest. We grieved but held on, planning a little drive to earn enough money for winter supplies and maybe hire a hand or two. I guess we were just too easy a target for the rustlers. They were gone three days before we went out ot check on that herd. I had three girls, Mr. Walters. I couldn't very well go after them. It still galls me but there's nothing I can do about it now. We only had the shotgun, a rifle, and one pistol so even if we could have found them we couldn't have put up much of a fight.\"\n\n\"For what it's worth, Miz Parsons, you made the right choice. You couldn't expose your girls to danger. Most all out here respect women, but who knows what an outlaw might do?\"\n\nShe smiled, touching the almost new Peacemaker at her hip. The outlaws we'd killed had fourteen pistols, two shotguns, and eight rifles between them. Out here, you could never have too many in case you didn't have time to reload. Bob got the two Smith &amp; Wessons and one '73. I got the other but it left plenty to choose from.",
        "We noted their lack of firepower and brought it up the third day we traveled together. Zeke made his point quietly but with firmness. \"We're on this road together. We have to depend on each other to defend what's ours. We got weapons, ma'am. You need to take enough to feel safe. If you don't want to buy them we can loan them to you until we hit the end of the trail.\"\n\nShe blushed but didn't argue, and the next morning we laid what we had out. She picked a Peacemaker and a Yellow Boy, as did her oldest. The middle one took the Henry and a Remington. The baby grinned. \"I'm a terrible shot with a rifle,\" she said as she picked up a shortened 10 gauge shotgun. I figured it would knock her clean out of the saddle if she shot it but it made her happy. There was an old Navy Colt that had been reworked for cartridges, so she took that one, saying it fit her hand best.\n\nIn return we got more cows until we owned forty of the roughly 130 we were driving. We made good time since most of the herd were already trail broke. The only thing that marred the drive was the minor stampede caused by a cow almost steppin' on a rattler. When the snake shook his tail, the herd took off. Five of them went over a bank. One broke his neck, and the others had broken legs. Once we contained the herd we slaughtered them on the spot, hanging them in the shade and gathering firewood. We put them over a fire that had enough green wood to keep a good smoke going, keeping the flies away. Then we built drying racks and made jerky. It took another two days but we had close to seven hundred pounds. Zeke, Bob, and I took the meat from two cows, and the Parsons ladies took the rest. We were going to hang on to ours for the coming winter, but the ladies were going to sell theirs for profit.\n\nZeke and I couldn't help grinning when we noticed the oldest girl riding in the wagon with Bob when she didn't have to wrangle the herd. Bob was from Maine and his accent took a little getting used to. Her family was originally from South Caroline and her accent was pretty thick. I had a stray thought of what their kids would sound like and laughed.\n\nMiz Parsons seemed all right with the sparkin'. Bob was a good man and her daughter could do a lot worse.\n\nChapter 5\n\nTwo and a half weeks later we rode into Carver's Gulch, about fifty miles south of Cherry Creek. It was a boom town, tents as numerous as buildings and construction going on everywhere. Bob and the girls held the herd back while we rode in with Miz Parsons. She'd taken the time to primp a little, wearing a divided riding skirt and a nice blouse and jacket. It caused a little stir because women, beside the occasional prostitute, were pretty scarce. If she'd ridden in with her daughters she would have caused a riot. We were in town for three hours and she got four marriage proposals. She politely declined them all.\n\nIt didn't take us long to decide the town was not for us. One family seemed to own everything. The prices in their store was outrageous, as well as in the butcher shop. We decided to skip trying to trade there and move on to the next town twenty miles away. Somebody had seen our herd though, and word was out.\n\nHe was about fifty and looked like he thought a lot of city living. He was overweight, wearing a tight suit and sporting a derby. He stomped up to us as we were trying to digest the food in what passed for a restaurant. \"You the outfit with the cows?\"\n\nI could tell by the way Zeke smiled this wasn't going to end cordially. \"If we are?\"\n\n\"I'll take 'em. How many you got?\"\n\nWe told him and he offered about a third of what they were worth. Miz Parsons smiled. \"I undertand you've lived away from civilization for a while sir but you have to know our beef is conservatively worth over twice as much. I think we will decline your generous offer and try our luck in the next town.\"\n\nHe was appaled we turned him down and let a woman speak for us. He looked over at Zeke. \"This your woman?\"\n\n\"She is not sir. What she is is a business associate and owner of those cattle. It's up to her to make a deal but she's a pretty shrewd woman and will not be taken advantage.\"\n\n\"If she ain't your woman you got no say in this. I'll be out to pick up them cows tomorrow morning. You'll take what I offer and be glad to get it.\"\n\nMiz Parsons just sat there smiling.\n\n\"I don't think you understood us fat man. She's a business partner and we have a vested interest in those animals. So pull them short horns in and run along.\"\n\nHe finally noticed me for the first time. I don't think he was impressed until he saw the double barreled shotgun. It wasn't pointed directly at him but in his general direction. His face got redder and somebody laughed. It triggered him off.\n\n\"God Damn It! You listen to me youngster. We're getting them cows if we have to take them so just shut up and go along. I'll kill you if you mouth off one more time.\"\n\nThe shot gun was definitely pointed at him now. Zeke had rose up and shifted over to the side. Miz Parsons had casually stood, bringing the Peacemaker out of the folds of her skirt. We'd seen her shoot when she first got the pistol and she was damned good. I grinned.\n\n\"Know what? I'm going to lay this shotgun down. Then me and you are going out in to the street. You threatened to kill me mister, and I got the right to defend myself. Now shuffle your fat ass outside so we can get this over with.\"\n\nHe was between a rock and a hard place and knew it. Suddenly he wasn't so loud. \"Boy, you got no idea who I am.\"\n\n\"I don't. Don't really care but why don't you tell me so I can put it on your grave marker?\"\n\nHe had two men with him, also dressed in city clothes. One was sliding his pistol out. The sound of the hammer going back was loud in the little diner and he froze. Miz Parsons spoke quietly but everybody heard her. \"Don't get foolish son. You don't want YOUR tombstone to say 'shot by a woman while trying to rob her ', now do you? Why don't you and your friend slide those pistols out and lay them on the table? I think everyone would be a lot more comfortable if you did. Oh, and if case you're wondering what would happen if you don't I'll tell you. I'll kill you before you clear leather and no one will say a thing. They'll think you deserve it for drawing on a woman. Your choice.\"\n\nHe didn't look anybody in the eye as he slid his pistol across the table. His friend did the same a few seconds later. She smiled. \"Good. Don't you feel a lot better? We can...\"\n\nThat was all she got out before the derringer popped out of his sleeve. Two shots rang out and he slumped to the table, lying over it slowly as a red stain covered the tablecloth. Only one was for him. She shot the other man as he grabbed for his pistol. \"Oh dear. I'm sorry about the tablecloth, Ma'am. We'll pay for it, I assure you.\"\n\nZeke, never the most tolerant of people, finally had enough. Two pistols came out like they had a mind of their own. \"Miz Parsons please excuse my language but this shit has gone on long enough. We come here in peace to trade and run into this? Not what I had in mind. I think after Brad concludes his business with Mr. Chubby here we should leave. You, out the door now or I'll shoot you down myself.\"\n\nThe fat man in the derby was startin' to sweat a mite. Seems he didn't like the direction this thing was going at all. \"Now hold on there! I got sixteen men who'll...\"\n\n\"Not give a damn once your fat ass is dead. Who's gonna pay 'em? I bet they ain't about to fight for free. Outside, now!\"\n\n\"My sons will make your pay.\"\n\n\"Your sons best leave things be. We didn't ask for this. You reap what you sow asshole and I'm thinkin' it's harvest time.\"\n\nI'd walked up and pushed him, hard. He shot out the door into the street landing on his ass in a cloud of dust. Nobody lifted a finger to help. I took it to mean he wasn't real popular.\n\n\"You gonna get up or do you want shot while you're on your fat ass?\"\n\nSweat was running down his face, cutting ruts in the dust that coated it until he looked kinda striped. He heaved himself up slowly holding his hands out. \"What can I do to avoid this?\"\n\n\"Not a damn thing. I let you go you'll have to gather your people and come after us to save face. Zeke here has a saying he favors from our Pa. Never leave a live rattlesnake behind you. In case you don't follow you're the snake.\"\n\nI saw it in his eyes. He was dead, knew it, and wanted to take me with him. He was still trying to talk us out of it when he drew. I was a little surprised at how fast he was but he made a mistake. He cleared leather first, but his aim was way off. While his bullet kicked up dust twenty feet from me I shot him twice in the chest and once in the gut. He collapsed like a ballon when the air is let out slow. He'd dropped his gun but he was still alive when I got to him. He was tryin' to say something but nothing came out of his mouth but blood. Finally he just rolled over on his side and shut his eyes.\n\nI stood there thumbin' fresh shells into my pistol looking at the crowd that had gathered. \"Somebody get the undertaker. I'd pay for the funeral but it looks like he had enough coins to handle it. You tell his friends and sons if he weren't lyin' to leave it be. He made his play and lost. We'll be leavin' now.\"\n\nMiz Parsons spoke up. She picked out a young boy and called him over. She gave him three silver dollars. \"Here, son. Take two of these dollars to the undertaker. I'm paying for the markers on the ones inside. You keep the other for your trouble. You tell him he better put 'shot by a woman he was tryin' to rob' on those markers. You tell him I'll be back this way one day. and if I go to boot hill and don't see those markers I'll be looking him up. You understand me?\"\n\n\"Yes'm.\"\n\nShe patted his cheek. \"Good boy. Well, off you go.\"\n\nI stood until Zeke was in the saddle, then mounted up, waiting on Miz Parsons. I had the shotgun in my hand and they both had their Winchesters shucked. \"We'll be leavin' now. It would not be a good idea for anybody to follow us but you're more than welcome to take your chances.\" We backed our horses about halfway down the the street until we turned one by one and cantered away.\n\nIt didn't take us long to tell the camp what happened and we pulled stakes and were rolling in 30 minutes. Three weeks later we pulled up outside a town that was a little bigger and a lot more organized than the one we left. Still kept an eye out as we traveled.\n\nBob and the oldest daughter were now joined at the hip. I told Miz Parsons it was lookin' like she was losin' a hand and she grinned. \"Maybe not. Bob's a good man. If it comes to a choice between Chastity and a warm bed to sleepin' alone after freezin' his butt off in a cold creek all day, I'm pretty sure he'd be smart enough to make the right choice.\"\n\nThe middle girl had set her hat for me and I stopped her as gently as I could. She didn't take it well at first but after a couple of days she calmed down and we were friends again. If the littlest was of age she would have Zeke roped and tied after three days. I'm pretty sure she reminded him of our sister. It seemed she was never far from him no matter where he was.\n\nThe biggest event of the trail drive, for me anyway, was one night when me and Miz Parsons were doing our night watch. She'd been actin' funny for the last few days, brushin' up against me, giving me little gestures of affection. It all came out when she stopped me when we met on our rounds.\n\n\"Brad, can I trust you?\"\n\n\"You know you can Miz Parsons.\"\n\n\"Please Brad, for tonight at least, call me Emily.\"\n\n\"All right. What's on your mind, Emily?\"\n\n\"I'll tell you on the next rotation.\"\n\nWe made our circle and met on the far side of the camp.\n\n\"Brad, do you think I'm attractive?\"\n\n\"Miz...Emily, you're a fine figure of a woman.\"\n\n\"I'm glad you think so. I have a favor to ask. I know it's incredibly forward of me but I know I can trust you. I haven't lain with a man in almost two years. I've watched Chastity with Bob, and Annie try to seduce Zeke, and it's stirred things in me that I haven't felt in a very long time. After our watch is over let's ride back to that little ridge we passed just before we made camp. We can go up top and pleasure each other. I'm safe, I can't get with child and the need to feel a man inside me has become almost overwhelming. Please? We'll do it once and never speak of it.\"\n\nShe'd undone her shirt and pulled it open, her impressive breasts spilling out in the moonlight. I couldn't help it and reached out, caressing a nipple, keenly aware of the tight feeling in my pants. She moaned and I pulled back. \"After the watch, then.\" We passed twice more and she insisted we kiss both times.\n\nI thought Zeke and Annie would never relieve us. We spoke for a few minutes. \"I'm gonna ride back a ways, top that ridge, and see what I can see. I still don't feel good about that town back there.\"\n\nZeke just nodded and I was glad he couldn't see my face. I rode slowly and half a mile later Emily fell in beside me. We didn't talk, tying the horses at the base of the ridge, taking both blanket rolls and ground sheets. We found a clear level spot at the top and rolled out the blankets.\n\nI turned. \"Are you sure about...\"\n\nI don't know how she got naked so fast. She told me later she took off her underthings before catching up to me. She was indeed a fine figure of a woman. \"Do me now Bradley Walters, before I chicken out!\"\n\nAll right, it had been a while for me. The little raven haired beauty down in Mexico was a hot little minx but compared to a mature woman in her prime she was a little girl. For two hours we rolled around on those blankets doing everything we could think of together. I finally had to cry Uncle and she giggled as she stroked me.\n\n\"Not a chance, Emily. I think you broke it.\"\n\n\"Don't worry honey. It'll work just fine in an hour or so. Too bad we don't have the time to wait. I want to thank you, Brad. That was the best lovin' I've ever had. Where were you when I was eighteen?\"\n\nBefore I could answer she slapped my thigh. \"Up! We need to get dressed and I need to get back to camp. You wait a while, and try to come in from the other side. My daughters would never understand this. Seriously Brad, as much as I enjoyed this it can never happen again.\"\n\nI stood and pulled her up, enjoying a full body hug for just a second. Emily pulled back and brushed my cheek. Then she started gatherin' her clothes. Something made her look up. \"What's that?\"\n\nIt was a campfire about a half mile away. It was a wonder they didn't hear the grunts and squeals we generated. Emily went to her horse and pulled out the spyglass she carried. As near as we could tell there were six or eight of them and it was the middle of the night. There was no reason in the world for them to be awake right now unless they were up to no good.\n\n\"You ride on back to camp. I'm goin' to stay here a bit, see what them boys got on their mind. If I ain't back by daylight Zeke will come lookin' He already thinks I'm up here watchin'.\"\n\n\"I'll stay...\"\n\n\"Emily you go on now. I don't want you explaining to your girls how you happened to be up here. Don't fret any, my mother and father raised five sons and none of them could be described as foolish. I'll just watch them for a bit.\"\n\nShe didn't want to but reason won out. I watched for another hour and them boys never bedded down. The did wrap up in their blankets when it got cool. Just before daylight Zeke came trottin' up. I filled him in and we decided to pay our friends a visit. We eased down until we were close and the first thing I noticed was the derby one of the men was wearin'. The last time I'd seen that it was rollin' in dust beside a dead man.\n\nWe watched for a few minutes, and even though they weren't fully asleep, they weren't awake yet either. There was no formal guard, just seven men huddled close to the fire. Zeke made a motion and we faded back.\n\n\"What you reckon?\"\n\n\"I'm thinkin' those boys are up to no good. It seems to me if they lost their horses for a while it will slow them down considerable. I got an idea.\" He rustled around until he found what he wanted, a slender sapling about seven feet long. Now, Zeke hated rattlesnakes. He'd had a bad experience with one when he was ten and he never forgot it. He felt duty bound to kill ever rattler he come across. If he found one he'd cut a forked stick, poke it 'til it curled up, then trap the head. Then he'd take the razor sharp bowie he had and cut the head off. If it was big enough he'd skin it for the hide. Big or little he always kept the rattles. He fetched about four sets out of his saddle bags and took a piggin' string and bound them to the stick. It'd make a hell of a noise.\n\nWe slid on back to the camp, wigglin' through the brush until we were practically under the hooves of their horses. Zeke reached up and loosened the picket line. The horses started gettin' restless. One of the men noticed.\n\n\"Carl, go see what's got them hosses all riled.\"\n\nBefore Carl could get to his feet Zeke put the stick under the closest horse and commenced to shakin'. Four sets of rattles make a hell of a noise. The horse reared up, the line broke loose, and them animals took off like the devil was after them.\n\nThe camp came to life. We slid a little farther back in the brush, trying not to laugh. There was a lot of cussin' and finger pointin'. Finally the leader told one of them to check the rope. \"Like hell I will. You heard that snake. It's got to be huge. You'll excuse me if I wait until it's good and daylight before I do.\"\n\nThey squabbled back and forth before two of them started walking. It would take them half the mornin' to wrangle the mounts and get them back.\n\nChapter 6\n\nWe were on our own horses as soon as they walked off skinnin' back to camp. They were up and ready to travel so we left right away, rolling into town just before lunch. This town was a pretty good burg. We drove the cattle right down main street and into a couple of corrals.\n\nMerchants were all over us before we could dismount. The livery owner hit us first, giving us the charge for feeding and holdin' the cattle. Zeke grinned. \"I wouldn't worry too much about it. I suspect they'll be sold in an hour and then it'll be someone esle's responsibility. In good faith, pick one out and take it for your fee.\"\n\nHe thought that was a pretty good idea and had his helper give him a hand pulling five heifers at random and moving them to a smaller corral. He grinned at me. \"I'll be buyin' these at market price if you agree. I got ten cows and a pretty good bull. This will increase my herd substantially.\"\n\nI couldn't fault that logic.\n\nBob surprised us all when he hopped up on the corral and yelled to get attention. Seems one of the things he did before coming west was work for an auctioneer. \"Ya'll look then over. The sale starts in an hour, in lots of 10 each.\"\n\nBob might be a Yankee but he was no fool. Selling them in small lots should drive the price up. We hoped. The ladies took the opportunity to freshen up in the 'hotel', little more than hard sided tents. They wore their best when they showed up for the auction, hoping to distract the buyers enough they wouldn't realize how high the bidding would go.\n\nIt worked pretty well because most of the male population was paying attention to them and not the cattle. The serious buyers were not to be deterred and beef was at a premium now. In fact everything was at a premium here. We got about three dollars more a head than we hoped for.\n\nWe sold ours, keeping four for winter rations. If we were lucky we wouldn't have time to hunt and that beef would come in mighty handy. Our orginal packhorse was loaded down with flour, sugar, coffee, beans, rice, salt, pepper, a few odds and ends of spices, and a few cans of things like peaches. It probably would last until just before cold weather and then we could make a trip for more. Zeke was right in saying it would be a whole lot cheaper to go back and buy in bulk than pay gold camp prices.",
        "Bob sold his stock as fast as he could pull it out of the wagon, keeping good records so he could send his dead partner's family his share. Most out here would have just shrugged and kept it all. Chastity was making a good choice landing him. We talked it over our last night together and sent most of the money we made on our investments back with him. He was going to live on Emily's ranch and next spring they was going to the railhead to buy everything he could. Then they were going to make a spring roundup and drive back to us.\n\nEmily managed to find two hands, one her age who decided there wasn't enough gold in the world worth spending another winter at the gold camps. The other was a youngster who'd lost his family and wanted something stable to do. Plus it wasn't two days until he was mooning over the middle daughter something fierce.\n\nWe watched them drive away. It was sad, watching them go. Then the thirteen year old came galloping back, leapt off her horse into Zeke's arms and gave him a tremendous kiss! Before he could recover she slid down, grabbed the reins of her horse and mounted at a full gallop, whooping until she was out of sight. I just grinned. \"You better hope you're not single when she comes of age. You won't stand a chance.\"\n\nHe rubbed his lips lightly and grinned. \"If she can kiss that good now maybe I'll hang around until she does.\"\n\nWe left the town the next day heading for fortune and fame.\n\nChapter 7\n\nAfter five weeks of ambling higher and higher into the mountains we still hadn't found a decent spot to file a claim. We stopped at a few likely looking spots, panned and dug for a couple of days and would have very little to show for it. I think we were both getting discouraged when fate took a hand.\n\nWe sat our horses, looking at where the trail used to be. It had rained for almost ten days straight a couple of weeks before we entered the country, and a mudslide had completely wiped the trail out.\n\nZeke sighed. \"Well, we ain't going that way. Guess we're turning around.\"\n\nI was lookin' at a big blue spruce that was lying sideways across the trail. It just didn't look right. I jumped down and walked up to it. The left side was completely blocked with trees and boulders, but the right looked a little softer. I slid under a branch and found myself standing on a trail that went over the ridge. By the looks of it, the only ones using it were wild horses. If a wild horse could travel it, so could we.\n\nWe sat down and made coffee while we talked it over. In the end neither of us favored backtrackin', so we eased our animals around the branch. We tried not to disturb things too much because the last thing we were lookin' for right then was company.\n\nIt was steep and downright scary in a couple of places but we were over the ridge, lookin' down at a little hanging valley, probably no more than three thousand acres. There was a big stream runnin' right down the center and a few branches fed it along the way. It looked like it had never been touched by human hands.\n\nWe found a likely place to camp, against a rock wall that had a little spring gushing out of it. There was also a cave that looked like it would be a decent place to shelter in with a little work, eliminating the need to build a cabin. Just around a bend was a larger cave that looked like a good place for the horses to get in out of the weather.\n\nThe first week was spent checking out the valley. There were plenty of deer tracks, some elk, and at least one bear. We didn't see any tracks, but we did spot a few bighorn sheep on the rocks so it looked like we could suppliment our food pretty easily. There was also a small horse herd, maybe sixty, at the far end of the valley. The way we came in seemed the only way in and out, so they would have to go by us if they wanted to leave. We didn't get close not wanting to spook them, but I knew we would be lookin' soon.\n\nAfter we explored we took out a pan and each of us hit a section of the big creek. I went upstream and he headed down. We met at camp at the end of the day. Zeke was pretty bad disappointed. He'd found color but nothing to brag about. I just grinned and handed him a small pebble.\n\nIt looked like any other rock until he rubbed it and a dull yellow gleam appeared. He looked up. \"This is the real deal?\"\n\n\"Yep. I found quite a few flakes too. Wherever the source is, it's up top. We just need to hunt it down. I vote we pan all we can get before the cold weather hits while we scout for the source. Then when it gets too cold to be in the water, we start diggin'.\"\n\nZeke allowed as how that would be a fine idea so the next day we started the systematic exploration of the stream. We started at the point I found the pebble and worked our way downstream until gold started gettin' scarce. It took a week, but by the end of that time we had what we estimated to be at least five hundred in dust, flakes, and pebbles. That was damn good money for a weeks' worth of effort, almost two years wages for a cowpoke.\n\nWe made sure we rested one day a week, spending the day tending to equipment, hunting, and we made it a point to ride back up on the ridge to check things out. So far we hadn't seen any sign of anything but horses but this was gold country and it didn't pay to get lax. Men were murdered for claims a whole lot less than what ours was worth.\n\nThe next two weeks we worked our way upstream. The gold got thicker and chunkier as we progressed, suddenly stopping about a third of the way to the headwaters. We then backtracked until it started again and looked around. By now the valley walls were quite narrow so it didn't take us long to find where we thought the source was. The same rain that had destroyed the trail had caused a new fissure to open on the south wall. It opened a little spring and caused a twenty foot waterfall to form. The nearer we got to the falls the thicker the gold, until one day I picked up a three pound chunk of white quartz that was literally seamed with fissures of gleaming gold.\n\nWe carried the rock back to camp and admired it for a bit before Zeke got a hammer out and tapped it. It split into three pieces. One chunk was almost pure gold. Zeke and I just stared at each other. That rock alone netted a pound of gold. We could be sitting on a real bonanza.\n\nWe didn't work the next day, studying the gap from all angles and trying to decide where to start digging. In the end we sank a bunch of holes before we found the vein. The quartz seam was two feet wide and who knows how deep, glittering with gold. It kind of took our breath. We were looking at enough gold to buy anything we wanted, the spreads we had dreamed of but knew we couldn't afford.\n\nOne side effect was making us nervous as hell. We went from checking for sign once a week to every three days. Deciding the sensible thing to do was keep panning, we worked until the water started freezing. That would be the gold we took back with us to the closest claims office. It we showed up with 'jewelry' rock we'd start a stampede and our little valley would be overrun.\n\nThe first snow was coming in a couple of months and we decided it would be a good idea to get out and renew some of our supplies and formally stake our claim. Carefully loading two of the mules we slipped back up the trail, stopping to cover our tracks as best we could. We rode for two weeks, one of us awake at all times, until we hit a camp that hadn't been there when we left.\n\nIt was a rough place and by the looks of most wasn't real profitable. I stayed with the mules while Zeke went into the assay office with samples. The man running it got all excited because it was the best stuff he'd ever seen.\n\n\"Where'd you get this?\"\n\n\"That don't matter right now. What's it worth?\"\n\n\"This is almost pure boy. I'd say you got about six hundred here.\"\n\n\"Good, because we brought a little more.\"\n\nThe man almost fainted when we unloaded everything. After weighing and grading we had eleven thousand dollars worth. There was a Wells Fargo office up the street so new it was still in a tent so we took the written estimate into the office along with the gold.\n\nThe banker looked pale when we asked if we could deposit the gold with him. He took the estimate and the gold putting it into a huge safe, one of three in the tent. There were four armed guards, two with shotguns and two with rifles, around the clock. They would let the gold accumulate until they had enough to transport,then call for a convoy of wagons and guards. He filled out our papers. We had him make duplicates and put a set in an envelope addressed to our father's ranch just in case, naming our mother as the owner if some bad luck befell us.\n\nWe kept three hundred out for supplies getting the Wells Fargo man to give it to us in paper money, and slept in a bed for the first time in months and ate food we didn't have to cook, drank some beer and had a few shots of bourbon.\n\nZeke and I had talked it over and we had backtrailed our route until we found a good stream. We panned and got a few flakes and decided this was the spot. We seeded about a hundred yards of the stream with flakes and dust and dug a ten foot shaft into a side hill.\n\nThis would be our official claim. We decided early on to buy the whole valley as a homestead, circumventing anyone trying to mine on it.\n\nWe noticed there were a few fellas about that seemed pretty interested in us as we registered the claim and the valley. Word of our strike had gotten out but we refused to talk about it. We rode farther back a ways until we found a town with a land office and filed our claim and bought the valley from the government. The manager grinned. \"You're gonna ranch in the middle of gold country?\"\n\n\"That's a mighty likely valley. It's got good water and graze and a couple bottoms that will be good for puttin' in food patches. Them fools can grub in the dirt and freeze their butts off in the winter while we just work our range and sleep in a nice warm cabin. Besides, we'll get more gold for the beef we'll be sellin' than most of them can take out of the ground in a year.\"\n\nJust to feel better we bought two thousand acres around the valley, to keep neighbors away. He took our money and gave us a deed and just like that we owned a Colorado ranch.\n\nChapter 8\n\nA week later we were a good ways down the trail. I eased up on Zeke. \"Seen 'em yet?\"\n\n\"Maybe five of them, tryin' to stay out of sight. They don't look too salty.\"\n\n\"The four riders on the ridge do. They look like they mean business.\"\n\n\"Yep, those boys act serious. Maybe we need to let the fools catch up with us get lost in the crowd a bit.\"\n\nAn hour later we found what we wanted, a little draw just off the trail. We eased into it and waited. We heard them for a good while before we saw them, five riders on pretty poor horses with no pack mules. They lost our tracks and drew up confused.\n\n\"Where'd they go?\"\n\nOne youngster was off his horse casting about. \"Don't worry. I'll find them directly.\"\n\nAnother snorted and the voice was definitely female. \"Gal, you couldn't find your ass with both hands if you had a map and a detailed list of instructions, even if it was on your shoulders.\"\n\n\"Sissy, I'm about tired of your mouth. Think you can do any better?\"\n\nShe swung down off her horse and we could hear the laughter in her voice. \"Couldn't do no worse.\" The woman cast around for a little while before she found some tracks. \"I think they went this way. Hold on and let me look.\"\n\nWe sat and watched her approach. She rounded the brush we were sitting behind and froze. The muzzles of a rifle and a shotgun will make you go still. The youngsters' voice called out. \"You see any sign?\"\n\nTo her credit, she didn't faint or start screaming. Her voice was none too steady though when she answered. \"I found them.\"\n\nThey came pounding around the bend, drawing up short when they saw us. None had weapons out and we had them cold.\n\n\"Howdy.\" Zeke said, trying not to laugh.\n\n\"How do you do? Please, allow me to introduce myself and my companions. I'm Elsa Monahan. The older gentleman is my Pa, Eion. The two to the right are my brothers Murphy and Gallison. The man on the gray horse is my intended, William Munford. You have us at a disadvantage, sir.\"\n\nZeke grinned. \"Under normal circumstances I'd be pleased to meet you. However I don't much cotton to people follerin' us. It makes us unsure of their intentions.\"\n\nElsa was a tall woman with long auburn hair and green eyes. She had too much character in her face to be beautiful but she was a damned handsome woman with a figure that left no doubt that she was all woman. Her father was a bit shorter with long silver hair and an enormous mustache. Gallison must have been the youngest of the group, standing about 5'5\" and if he weighed over a hundred pounds I'd be surprised. His gun looked full growed though and he looked like he'd stand hitched if it got rough. Murphy was almost as tall as Elsa, a little thick around the middle, and had a shifty cast on his face. I had a feeling he'd bear watching.\n\nMunford was the one that got a second look. He was taller than I was and I was almost six feet in socks. He was thick but it didn't look like lard and he had a cold calculating look in his eyes. I think Zeke shared my opinion of him and it was not good. Mr. Munford was slowly easing his horse away, his right hand very near the big Colt in the saddle holster. I spoke up for the first time. \"I'm Bradley Walters and this is my brother Zeke. Mr. Munford it appears you have a restless animal there. Why don't you gentle him down some?\"\n\nMiss Elsa spoke up. \"Willie, do not be foolish! It would not be good if these men believed we mean them harm. I will freely admit we were following you. Word has it you made a pretty big strike. We thought we might follow along and stake claims near you. As you can see,\" she said, pointing to their wornout clothes, \"our ventures thus far have not been too successful.\"\n\nZeke spoke. \"You hooked up with the riders on the ridge?\"\n\nThe surprise was evident on their faces, all but Mr. Munford. He just looked uncomfortable.\n\n\"I didn't even know there were others in the area.\"\n\n\"How about you Mr. Munford?\"\n\nAll eyes turned to him and he shifted uncomfortably. \"I seen some sign but figgered if they left us alone we wouldn't bother with them.\"\n\nElsa's Pa spoke for the first time. \"You didn't think that would have been good information to share?\"\n\n\"It won't be no matter if they leave us alone. If they looked like they were gettin' close I'da told you.\"\n\nIt was pretty plain they were havin' a hard time believin' him. Zeke spoke again. \"We'll be ridin' on now. You want to follow it's a free country. Just don't crowd us. We would be very unappreciative if you do. Why don't you turn those mounts around and ride back to the trail. We'll be right behind you.\"\n\nIt galled Munford but the rest didn't have an issue with it. They were armed, but everything was holstered. I was startin' to be a firm believer in shotguns. It took a lot of debate out of situations.\n\nWe parted ways on the trail. Zeke told them where we were going which surprised me, and we left them.\n\n\"You think that was a good idea, telling them where we'd be?\"\n\nHe just grinned. \"Think about it. Nothin' better'n hidin' in plain sight. This way it'll look more legitimate and when the gold plays out we can pull up stakes and nobody will think a thing about it. We'll idle on over to our valley and get some real work done.\"\n\nThat's why he's the older brother I reckon. I would have never thought about that.\n\nWe still had the other riders to contend with. We made sure we didn't skyline ourselves and were wary of traps as we traveled. They were still with us but weren't makin' any moves so we let them be.\n\nWe got to our 'fake' claim', set up camp and went to work. We made sure we worked the salted part first to get our gold back.\n\nThe Monahans staked out claims farther down the creek. We heard one of the boys whoop and grinned. Good luck to them.\n\nJust for the sake of our cover we worked the stream for three weeks. It pleasantly surprised us to find there really was gold in it. Not like our claim but enough to justify panning it.\n\nIt was steadily getting colder and we knew we needed to move before the snows flew in earnest. The riders were still around so one of us made it a point to stop several times a day and scout around. It's how we knew they were coming.\n\nI had slid back into the brush with my shotgun. Zeke was working the creek when they rode in and he didn't stop for a minute. Then he rose and and looked at them.\n\n\"Nice claim.\"\n\nZeke shrugged at the speaker. \"It's all right. Not gettin' rich but still making more than punchin' cows.\"\n\n\"Wouldn't want to sell it would you?\"\n\n\"Not particularly. Ain't just mine. I got a partner.\"\n\nIt bothered them they couldn't see me. \"Where's your partner?\"\n\nZeke grinned. \"He's around. The man is kind of notional. He'll just take off for a few hours and then come back and start workin' like he never left. Little hard gettin' used to.\"\n\nOne man started to swing off his horse and Zeke stopped him. \"No need to get down. I ain't got time for socializing. You're more than welcome to stake a claim farther on down the creek.\"\n\n\"What if we want this one?\"\n\n\"You ain't got the money to buy this one.\"\n\n\"Well then mebbe we'll just take it.\"\n\nZeke grinned. He was wearin' waders, a new fangled rig that was popular with fishermen back east. They hid his pistols pretty well but were plenty loose to get to if he had to.\n\n\"There ain't but four of you. You want to do that, you might want to go get some help.\"\n\nBoy did that piss the speaker off. He started to talk but Zeke cut him off. \"No I don't know who you are. No I ain't seen none of your graveyards. And no I don't give a shit. You want to start somethin' now's the time.\"\n\nWell there it was, laid out all neat and proper. Two were lookin' mighty pissed. Another was lookin' around trying to figure out where I was. He'd be the one I took out first. The other one looked kind of green around the gills. He'd be the last we'd have to worry about.\n\nI was just about ready to open the ball when the leader grinned. \"Plain enough. We'll be ridin' on. Maybe we'll come back, you might just change your mind.\"\n\nZeke grinned back. \"Do that anytime you have a mind too. We may not even be here when you get back. I think we're about played out here.\"\n\nYou could tell they didn't believe him for a second, but they reined around and trotted off. \"Reckon they're gone?\" I'd risen up from behind the berm we'd built with tailin's from our shaft. It was hopefully the last place they'd be looking for someone to be, out in the open like it was.\n\n\"Naw, they firmly believe we're sittin' on a bonanza. They'll be back.\"\n\nTruth was we had to leave and soon or we'd not make it before the big snows fell. Neither of us were real sure we'd be able to get in or out once that happened.\n\nChapter 9\n\nThat night we talked to the Monahans. They'd worked hard, all but Murdock, and lucked out. They found a little vein that was about eight feet long and three deep before it petered out to nothing. After that what the netted a day wasn't worth the effort and time they put in to it. Still they'd found about two thousand dollars worth. Many a ranch had been bought for a lot less.\n\n\"We'll be headin' out day after tomorrow. Our claim has played out and it ain't worth stayin' the winter for. We're going on to the valley we claimed, hole up there, and start work on the ranch as soon as the weather breaks. My advice to you is to do the same before the weather gets bad. Go on down, bank your gold, and try to find work for the winter. When spring comes take a look around, find you some land with good water and places sheltered from the weather. Build a nice ranch. After that if you still got gold fever come back.\"",
        "Miss Elsa and her father thought it was an excellent idea. They didn't have the provisions necessary for the winter to come. We'd drop them off game from time to time, a deer once, half a bighorn sheep, even part of a bear that had come out of hibernation during a warm spell. I'm pretty sure it was the only times they got meat.\n\nWe'd already had some snows that mostly melted in a few days but we all knew there would come a time when that wouldn't happen. One of her brothers was undecided, but Murphy and Munford were determined to stay. In the end they agreed to split, leaving the ones staying most of the supplies and a fourth of the gold. Munford bitched, saying they deserved more but Elsa shut them down pretty fast, telling them they were lucky they were getting that for the work they had done.\n\n\"I was hunting!,\" Munford protested.\n\n\"That you were, the key word being hunting. You almost never shot anything and rabbits won't keep you alive during the winter.\"\n\nElsa ended up breaking her engagement to Munford calling him a lazy, undisciplined person who was scared to death of work. \"I need a man who'll step up and do what needs to be done to provide for his family and that ain't you.\"\n\nWe didn't hear any of this until later when they stopped by to say goodbye. We shook and Elsa hugged us both, asking us to keep an eye on her brother. She told us about the falling out they had and how she no longer trusted her ex. \"I want you to watch out for my brother and watch Willie. He's become a bit more untrustworty lately.\"\n\nIt was good advice. The day before we left I did some hunting, coming on to a herd of deer wintering in a draw. I got three, field dressed them, fixed a travois, and hauled them to their camp. \"You hang these, smoke 'em a little. The cold should keep them, and you'll have meat for a good while.\"\n\nI helped Murphy hang them high enough to keep predators from getting them, shook his hand and left. We were gone before dawn the next morning\n\nWe took our time and wandered around for a little to confuse any trackers until we came up on our little trail. After we passed we hitched all the mules to the blue spruce and drug it until it blocked the trail. They'd have to do the same to unblock it and it bought us a little time. It was snowing a little and we figured it would wipe out our tracks and any earth we had disturbed.\n\nThere was a blanket of snow permanently now, but it wasn't deep. A lot of the valley was sheltered which explained why the horse herd was still here. So were three of our cows. We cast around for the fourth but found no sign. When the thaw hit we found her and it looked like a cougar had gotten her.\n\nWe put our stock in the big cave, putting a rope across the front so they would get used to staying there. We'd let them out the next day but keep our horses close just in case. We worked on the little cave, putting a door in just far enough back that at a glance it would look empty. It was pretty deep and branched a couple of times. I followed one branch and stopped. I could hear our horses stomping around. That wall had to be mighty thin and when I told Zeke he agreed, so over the next few days we worked on it until we broke through.\n\nIt made us feel a whole lot better, even a rabbit won't go into a hole that only has one way in and out. There was also a chimney at the very back just wide enough to wriggle through that popped you out on the ridge. We put in a really sturdy door in the stable, then we mixed up mortar and mud, plastering the door to the point it couldn't be seen. It was thin enough to break through if the need was there but thick enough to fool anyone looking for a door.\n\nWe had dragged up a bunch of deadfalls before we left and we took turns chopping and sawing until we had a supply that would hopefully last us the rest of the winter. Then we built another door halfway back to cut down on the area we had to heat and give us a storage space. There was a crack in the ceiling that would let the smoke out, dissapating it through a couple of trees. It was cold enough at the very back to hang meat, so we slaughtered one of the steers. The other two looked mighty mournful but it was just the way life worked.\n\nAll this took about two weeks. We'd hunkered down, not movin' around much. We'd check for sign from time to time but it was like we were the only people in the world.\n\nThe next day we packed up our tools and went to our mine. It was getting colder but the farther we dug the warmer it was on us and easier to work the shaft. We'd work for two weeks straight then take a few days off, pounding the rock to separate the gold from the quartz as much as possible. After a month we had six bags packed with almost pure gold, every bag weighing just over ten pounds.\n\nThen we went through a two week period where the vein looked like it was playing out. We were getting about two hundred dollars worth of gold a week. That was still pretty good yield but we had gotten used to picking up big nuggets.\n\nZek and I talked it over and decided we'd do the same thing we did at the cave to the shaft, so while I chipped away Zeke started going sideways and up a little, to give us another way out. He was swinging his pick in a smooth regular motion and then he just stopped. \"Brad, you need to come see this.\"\n\nHis voice was a little shaky and I was afraid he'd gotten hurt so I hustled into the shaft he was cutting. I didn't see anything unusual except his grin. \"What?\"\n\n\"Look up.\"\n\nI've heard about passing out from excitement but never thought it could happen until now. I didn't but it was a close thing. The roof of the shaft was one huge vein, easily spanning the four foot width of the tunnel. And it was literally gleaming with gold. There was barely enough quartz to hold it together.\n\nWhen I got my voice back I asked him how big it was. He shrugged. \"No idea, but I'm betting it's pretty big. This changes everything. When word of this gets out they'll overrun us. We won't be able to stop them.\"\n\n\"But we own this valley.\"\n\n\"Think they'll give a damn about that? Their first move would be to try and get rid of us. Then they could do what they want. You think that crowd we braced at the old claim would hold back? Hell no, they'd hire a hundred guns and make sure the job got done. This is going to be too big for us. We need to do some thinking.\"\n\nWe stopped working and went back to the cave when Zeke suddenly grinned. \"Know what day this is?\"\n\nI knew he made a mark in his book so we'd know but I hadn't thought much about it. \"No, not really. What day is it?\"\n\n\"It's Christmas.\"\n\nWell then, a very Merry Christmas to us. We made a good meal and broke out a couple of cans of peaches to celebrate. I gave Zeke one of those stockman knives I'd seen him admire back in one of the towns we went through. It was a folding knife with three blades that could fit in his vest pocket. He was most pleased. Then he pulled out a silver pocket watch he'd seen me admire, a pretty elaborate model. I immediately wound it, listening to the comforting ticks. It was nicely engraved and when I opened it I saw my initials on the back of the cover.\n\nZeke pulled out his Bible and read the passage of the birth of Christ by the light of the fire, the brightness changing as the fire reflected off the cave walls, his measured baritone a comfort to hear. We went to sleep, dreaming of nice ranches. Mine had a dark haired Latin beauty in it. Maybe I could entice a nice girl of quality to take an interest in me, now that I was a moneyed man.\n\nChapter 10\n\nWe slowly enlarged the vein up to twelve feet wide with no end in sight. We also had no idea how long it ran and we stopped after twenty feet.\n\nWe sat on the floor of the shaft looking up. I could tell Zeke had something on his mind.\n\n\"You know it could take years to fully mine this vein. I for one don't want to put that much of my life into it. We got money now Brad, enough to buy and stock a pretty large spread.\"\n\n\"Are you saying we should walk away?\"\n\nHe snorted. \"Hell no. I think we should go back to civilization and get hold of one of those syndicates that will mine it for us on a percentage. I think a 60/40 split, with us getting the 60. That way we can walk away and still make good money.\"\n\nWe'd both heard the stories about gold fever, how once it got in your veins you were hooked for life. That wasn't us. We really didn't expect to find much gold when we started. It was supposed to be just an adventure to us. Boy, that sure changed in a hurry. There was no way I was spending years in a hole when I could be riding the range on my own spread. It sounded like a hell of an idea.\n\nWe talked it to death over the next few weeks while waiting for the weather to break. We finally decided one of us should go while the other stayed to protect our interests. We still had claim to the valley but if we left whoever moved in could claim abandonment. We didn't even discuss who was going. Zeke was the best bargainer I'd ever seen and I was a born sucker.\n\n\"We'll have to find a town to get you resupplied. Cherry Creek would be my choice. It's far enough away to keep curiosity down. We could take some gold and bank it with Wells Fargo, something to show the investors we're legitimate. Then you can come on back. I don't expect you to mine too much. You just need to keep an eye on the place.\"\n\nThe weather broke and the thaw was in full swing when we left. It was going to be about a three week trip if we made good time. We had our pack mules loaded down with as much gold as they could safely carry. We'd took to scouting the rim of our canyon and hadn't seen any sign of man so we felt pretty safe.\n\nThe blue spruce was still in place, so we moved it to get out, then moved it back. No need to make our place any easier to find. We rode as quickly as the animals could handle, and eighteen days later we rode into Cherry Creek. By now it was a pretty good sized town, most of the tents gone and wooden structures dotted the main street. There were two hotels, both pretty nice, and we booked rooms for three days. That was after we rode down to the Wells Fargo office. Zeke showed the man in charge the paperwork from our previous deposit and he looked scared to death we were going to withdraw it. When he understood we were wanting to make another deposit he was all smiles. When he saw how much we had he looked faint.\n\n\"This goes no farther than us,\" Zeke warned. \"There's a lot more if we're right about our claim, and if I find out you been talking we'll take our business elsewhere.\"\n\nHe seemed offended but then he grinned. \"Just so you know, I can keep secrets better than a priest. I can also hold a grudge better than a nun. If it gets out it won't come from me and I'll be really upset to find out who talked.\"\n\nWe had the assayer come to the office to judge the value, and it looked like it was a 40,000 dollar deposit. Most people would never see that much money in three lifetimes. It finally sank in how rich we could potentially be. We got three hundred in gold coins from the banker, not wanting to use dust or nuggets that would draw attention to us, and went shopping.\n\nFirst we got baths, then haircuts, then went shopping for new clothes. Things were outrageously expensive but we paid because we didn't want to travel farther away. That reminded us to check the post office for mail. We'd told Bob and Emily to send mail to there and two other towns so we'd be sure to get it. There were four letters each dated about a month apart.\n\nBob had married Emily's daughter and they were expecting their first in a few months. One of the hands had worked out and one hadn't, but between the girls and Bob they kept the ranch running. Bob had ordered as much as he could with the money from our last venture, saying he wished he'd had a little more capital. Zeke grinned when he heard that and I knew a new partnership was in the offing. Bob also said the older hand that had stayed was sweet on Emily and she seemed to like him.\n\nEmily said much the same thing, leaving out her romance. She wanted to know if we would be coming back soon as they had gathered up about 350 head to drive to the gold camps and would need our help. She closed the letter by telling Zeke her youngest sent her love and was waiting anxiously to see him again. I just grinned and Zeke got a little red. \"She's getting a little older brother. You might have to leave the country if she comes after you.\"\n\nHe grinned, saying he wasn't afraid of a fourteen year old girl. \"Might ought to be,\" I told him grinning back. I mentally added if she was as hot as her mother he might want to consider her in a couple of years. I think Zeke kind of suspected what happened on that ridge but he never mentioned it. He said he'd stop by the ranch on his way to Denver to discuss future business ventures.\n\nWe drank, found the best whorehouse (best meaning cleanest) and let off a little steam, ate rich food, and generally had a good time until it was time to go back to the real world. We did stop at the local gunsmith, just to see what he had. We'd bought ammo at the general store but decided we'd like a little more plus we just liked to look at the weapons.\n\nZeke spotted it first. A Colt Revolving Shotgun built in 1863. The gunsmith was a technical wizard, and he had conpletely reworked it, converting it to brass shells. he explained that paper shells weren't as reliable and if they got damp they swelled, making it hard to load. It was in ten gauge and the cylinder held five rounds. This was a weapon that could do some serious damage at close quarters. He bought it and five boxes of shells, not even arguing over the price. I bought an old LeMat he'd also reconditioned. It was big and bulky, but it held nine rounds plus a twenty gauge shotgun round. Another weapon that could do serious damage.\n\nWhen I was loaded up to go back, he surprised me by handing me the shotgun. \"I got a feelin' you might need it a little more than me, brother. You watch your back trail.\"\n\nChapter 11\n\nI was about halfway back when I spotted them. They were camped in a little hollow but it offered little in the way of concealment or defense. There was a low ridge right above it and a man could ease on top of it and it would be like shootin' fish in a barrel.\n\nIn fact, that's just what I did. I could see the whole camp from the ridge and it looked pretty rundown. Whoever these people were they weren't really equipped for the trail. When the woman spoke I knew who they were. Grinning, I stood where they could see me.\n\n\"Hello the camp!\"\n\nIt was kind of funny watch them scramble around for weapons and places to take cover.\n\n\"Who are you and what do you want?\"\n\nIt was Elsa that spoke.\n\n\"Well a cup of coffee would be nice, maybe some talk with some old friends would be a bonus.\"\n\nElsa stood, peering up the ridge. \"Bradley Walters! As I live and breathe. I though I'd never see you again.\"\n\n\"And I thought you'd all be on a ranch in New Mexico by now.\"\n\nShe sighed. \"Yes, well, our situation has changed. Come on in and we'll tell you all about it.\"\n\nI rode back down from the ridge and swung into their camp. It was a pretty sorry affair. They were extremely embarrassed when they admitted they had no coffee, and I just grinned and pulled a bag out of one of the packs along with the grinder. \"Elsa, make sure you grind enough for breakfast. It'll save us some time in the morning.\"\n\nOnce everyone had a full cup, they told me their tale of woe.\n\n\"We were the happiest we'd been in a long time. The gold we found would buy us a nice spread and leave enough for some cattle and a few horses, enough to make a start. We were just full of plans.\"\n\nShe sighed, thinking. \"They showed up a week later, just appearing around us. We had no idea anyone else was even in the same territory. They took every bit of gold we had, our pack animals, even our mining tools.\"\n\n\"Wow.\"\n\nElsa sighed. \"Yeah, wow. We've thought about it since then. They knew we had gold, even knew exactly which pack animal it was on. Then a couple of weeks later we got word Murphy was found at the claim, shot in the back. Twice. There was nothing left of the camp and even his boots and coat were missing. There was no sign of Willie so I'm thinking the worst, that he decided to take it all and then track us down for the rest of it.\"\n\nWe made it back to a town. Dad took a job as a swamper at a saloon. It was all he could find. Gallison chopped wood and I worked at a waitress but it just barely gave us a living. We left when Dad lost his job defending a drunk customer from the owner's son. His sister owned the diner so I lost my job, and Gallison ran out of work. We took what little we'd managed to scrape together, bought what gear and food we could, and left. We're about out of food so we thought we'd hit the next town and look for work, enough to buy some more supplies and start again.\"\n\nI thought about that for a while after everyone bedded down. It came to me I had a opportunity here. I could hire them to help me mine and pay them a good wage, enough for them to get a stake. They would be set by the time Zeke got back and it would be that much more gold we wouldn't have to split with any syndicate.\n\nI hit them with it after breakfast, cooked mostly from my supplies. \"I got an offer for you. We found a little gold. Zeke is going to be gone for a while on personal business and I could use some help. We'll pay a good wage, furnish everything, tools, supplies, that sort of thing. Interested?\"\n\nI rode ahead and let them talk it over. An hour later Elsa trotted up. \"We'll do it. It solves our short term problems, gives us a chance to get a decent stake so we can go out on our own. How long we talking here?\"\n\n\"Two to four months, dependin'. That'll give you plenty of time before winter hits to get set up on your own claim. Zeke and I may even help you look for a good spot before we leave.\"\n\n\"You think your claim will be played out by then?\"\n\nI grinned, thinking of that big seam in the tunnel. \"Maybe. We'll have to see.\"\n\nWe talked it over the next night and decided to send Gallison back to the nearest town to pick up more supplies. I wasn't counting on feeding three more people so what I bought would not last. We parted ways the next morning, after I gave him sixty dollars in coins and paper. It would be more than enough. I told him to buy what we needed and anything that caught his fancy, warning him to keep a low profile. I looked them over and took him aside, giving him another sixty dollars. \"You use this to get some warm coats. We can't have any of you getting sick. I'm thinkin' leather with sheepskin linin'. Might want to get some new boots if you know everyone's size. I suggest engineer boots. They'll be a lot more suited to what you'll be doing than regular ridin' boots. Get anything else you think you guys might need. Consider this a signing bonus. You don't have to pay me back.\" He had tears in his eyes and was struggling to say something when I walked off.\n\nI'd given him directions to our valley, telling him to make sure no one was tracking him on the way back. I think they thought I was being a little obsessive over a claim that may play out in a couple of months.\n\nEight days later we came to our cutoff and I had them help pull the big blue spruce over enough to let us pass. It was still alive, a lot of the roots still in the ground, so it covered the trail quite well.\n\nWe topped the rise, looking down into the little valley. I was glad to see it undisturbed, no tracks of anything but wildlife. The horse herd was still there, but I could see sign that they had been in and out. I thought it was a good thing because it helped hide our tracks.\n\nWe got to the cave, stored our supplies, and then Eion and I rode a circuit. I was happy to see our two steers were still there. We got as close to the horses as we dared without spooking them and I looked them over with my spyglass. Most were scrubs but there were maybe ten that looked good. Eion remarked we should catch a few to spell our mounts. Mine was in pretty good shape but theirs were not much to look at. I agreed, saying we should take a day or two and try to cull the good ones out.",
        "Elsa was the camp cook and had a good meal waiting on us when we got back. I got the livestock settled and we called it a night.\n\nI took them to the mine the next day, grinning at the shock on their faces. \"You're going to ride away from this?\"\n\nI told them of our plan to have a syndicate take over, paying us a premium, leaving us free to go home and find ranches of our own. They understood but were really quiet the rest of the day.\n\nI figured it would be just Eion and I working the mine, but Elsa went with us. \"What am I gonna do? Sit around camp all day? I need to stay busy, and it will be that much more we can take out.\"\n\nShe helped us for a week before starting another job, separating the gold from the quartz. Pretty soon we had a pile of white quartz about waist high that stuck out like a sore thumb, a sure sign of a mining operation. We stopped mining long enough to dig a pretty good sized pit, and Elsa would throw the tailin's in every day, then throw a few shovels full of dirt over it.\n\nWe worked six days straight before resting. I got out the scales we'd bought and had them measure out 14 ounces of gold, telling them it was their pay. They were shocked, the value of the gold far and above what they would have normally earned. It was runnin' about twenty dollars an ounce at the time. If they stayed four months and added what Gallison would make, they would have a pretty nice grubstake by the time we worked a deal with whoever Zeke settled on. Maybe they could continue to work for them but I doubt the pay would be as good.\n\nEsla cried and shocked us all by giving me a big kiss. I turned about eight shades of red while her dad laughed. Gallison showed up the next day saying he took extra time and wandered a bit to make sure no one was following. I hoped he was right but his trailcraft was limited. I decided I'd ride his back trail just for peace of mind.\n\nThey showed him the gold and he was shocked. Then they told him the wage he'd be getting and he was speechless. I left the next morning knowing the mine was in good hands, packing enough food for two days.\n\nChapter 12\n\nI saw nothing the first day, and decided to turn around about noon the next day. As it was, I'd be eating jerky before I got back.\n\nThe first couple of hours were uneventful but just before ten my scalp started tingling and my horse seemed uneasy. I'd learned long ago to trust my instincts, so I loosened my shotgun so I could drag it out easier, and made sure the strap was off my pistol.\n\nMy horse saved my life. I was on a narrow trail, steep drops on both sides. It made me so nervous I pulled the shotgun out, holding it across the saddle. Blackie shied suddenly, and the bullet meant for me went through his neck and still managed to hit me in the shoulder. Blackie was falling so I kicked out of the stirrups and went over a bank, landing about twenty feet down in a clump of brush.\n\nThe fall knocked the wind out of me and it took a minute to recover. I realized I could hear voices. \"Reckon he's dead?\"\n\n\"If he ain't he will be. He's hit, you can see by the blood. He's down in that holler, and I don't see a good way out. All we have to do is ride off and leave him.\"\n\nI could barely see the riders through the brush. I saw one wearing a derby. A derby I had seen before. There was nothing I could do, wishing I'd grabbed the rifle instead of the shotgun.\n\nDerby spoke. \"You'll excuse me if I want to be sure. Hank, you and Ben find a way in there. Drag his body out. I want to piss on it before the day's out.\"\n\nThe other rider spoke. \"You want to waste time, it's your business. Me and my boys are ridin' on. That claim has to be close and my cousin says it's probably going to be the richest in a long time. Still don't think it was a good idea for him to get a job as a guard for Wells Fargo? We've already managed to jump two claims but nothing like this.\"\n\nYou could hear the anger in Derby's voice. \"Don't go gettin' no ideas. Fifty-fifty, remember? We'll ride on with you but Ben and Hank will stay long enough to find that body. Cut his head off when you find him boys. I'll enjoy pissing in his face even if he can't feel it. Let's ride.\"\n\nThere had to be over a dozen in that bunch. I hoped they didn't catch Elsa and the boys unaware. I'd pounded it into them before I left to keep a constant check, just in case of something like this. In the meantime I had my own problems. The two after me had ridden off, looking for an easier way into the ravine. My shoulder hurt like the devil but I still had my pistols and the shotgun. If I was gonna die they were gonna die. I crawled as best I could downhill knowing that was the direction they'd be coming from.\n\nIt took them almost two hours before they came into view. They were walking, trying to be quiet. It wasn't working. These boys had never spent much time in the woods. If things worked out right they'd never get the chance to improve.\n\nThey came by me not twenty feet away, one about a foot in front of the other. I gave them as much chance as they gave me, opening up with the shotgun and firing three times before I stopped. At that distance it blew them apart. They died without a word.\n\nI walked over slowly just to make sure they were dead. Yep, dead all right. They had nothing of interest exept for a really nice Bowie knife. I took it and the best looking hat. Mine had come off in the tumble down the ravine.\n\nI walked back, finding their horses half a mile along at the entrance to the ravine. They were better horses than I figured but then again, men who rode outside the law couldn't really afford a slow horse. I took them, stopping on the trail to remove my saddle and bridle from Blackie. It hurt me to see him layin' there. He'd been a good hoss, carrying me all the way from Texas without complaint. They'd taken my rifle and emptied my saddlebags. There were a few shotgun shells scattered on the ground and I reloaded immediately. There were a couple of Winchesters on the outlaw's horses and they seemed in good shape.\n\nIt was kind of awkward, but I bound up my shoulder as best I could, grateful the bullet hadn't hit bone. The pain made my attitude towards those who had done it less than forgiving. I pointed the horses towards our claim, letting them walk to favor my shoulder. I was in no hurry. I knew where they were going and the ground they had to cover, and if they were planning on backtrailing me it would confuse the shit out of them.\n\nDeliberately I had changed directions half a dozen times and even rode back over my own tracks twice. They better have a damn good tracker or it was going to take them a while to get to the claim. I pointed the horse along the quickest route, confident that if I didn't beat them I wouldn't be far behind them.\n\nDarkness stopped me. Checking the saddlebags I was grateful to find a small bag of coffee and a battered old pot, and a bit of jerky. I'd be all right until I got back to the claim. Thinking of Elsa's cooking made the jerky even less flavorful.\n\nThere was nothing for breakfast so I was packed and ready to go as soon as daylight hit. I cussed a little when I got to the blue spruce. Apparently they had a pretty good tracker and my rambling hadn't fooled him any. They had figured it out and dragged it to the side, leaving the trail for anyone to see. Judging by the tracks I couldn't be more than an hour behind them.\n\nI caught up to them just as they were topping the ridge and they had pulled up to scope out the valley. No time like the present I thought as I hunkered down behind a couple of downed trees. Both rifles were completely full and I lay them and my shotgun out knowing it might be a while before I could reload.\n\nDerby had half turned, talking to the other leader, and I was damned tired of that hat. I should have gone for a safer shot, but it was only 75 yards and I was pissed. I was more than happy to give them the same chance they had given me, none at all. My shot blew the derby off his head, and most of his head off his shoulders. Levering the rifle as fast I could I nailed a couple more but couldn't say for sure they were kill shots, and dropped three horses. There was a lot of yellin' and cussin' as they dropped over the ridge and into cover. I immediately ran forward, stopping behind a nest of rocks far to the left of where I had been.\n\nI gave them about half an hour before I slid around the rocks, working my way to the left. There was a goat path there and while it was scary as hell in a couple of places a man could walk it if he was careful. Apparently I'd made a believer out of them because no one took a look before I made it to the path. Forty minutes later I was below them, watching as they hunkered down. There were still eight of them but you could tell by the way they left him sprawling one was a goner. Another had a sling over his right arm so I figured he was out of the fight. I was just about to dust them when I caught movement out of the corner of my eye. I rolled over bringing the rifle to my shoulder before I realized it was Gallison. They heard the shooting and he came to scout around. He still hadn't seen me so I took a chance, slinging a pebble that hit him on the arm.\n\nHe looked over swinging his rifle, then realized who I was and started towards me. I held up my finger and shook my head no. When he nodded I moved my hand in a circle before pointing left. He understood, grinned, and slid farther over. I was going to try to box them if I could.\n\nI gave him fifteen minutes. I'd already lined up my first target, hoping Gallison understood I wanted him to start on the left. After the first shot I was going to continue working left while he worked right until there were no targets, I got shot, or they got away.\n\nMy first shot him the man square in the back and severed his spine. I got the second one before they figured out the bullets were coming from behind them. Gal had opened up by then and a man stood up, then flopped over backwards down the slope. Eleven men had started out to kill us and jump the claim. Three managed to make the ridge and ride off.\n\nElsa and Eion had come running after the shooting was over, pistols in hand. I was pretty tired so I eased back against a rock. I woke up three hours later in the late evening. They had a fire going and I could smell the stew simmering. Elsa made damn good stew.\n\nAfter they fed me they heated water and bathed my wound. It was red and puffy and hurt like hell. \"Looks infected son. We don't take care of it, you'll lose that arm and if it spreads inside you're a goner. Want us to try and fix it?\"\n\nDid I have a choice? Eion sat me up and they placed hot cloths on both sides of the wound. He'd whittled a tree branch down into as straight a shaft as possible. They had carried several jugs of corn whiskey with them, partially to sip but mostly to treat wounds with.\n\n\"I ain't gonna lie to you Brad. This is gonna hurt like hell. The hole is a lot bigger on the back side and we think that's where the infection started. You take about four good slugs off that bottle, then Gal and I will hold you as still as possible while Elsa runs this through the wound. The whiskey soaked rag should clear up the infection. We're gonna let it bleed a little to finish it off. That's the easy part. After it's bled a little we're gonna slap a red hot knife blade to the exit wound, to seal it up and make it heal faster. Now drink up and tell us when you're ready.\"\n\nI'd never be ready but realized there was no choice. I killed half the bottle in three gulps, waited until it hit, and nodded. It was a damn good thing the men holding me were miners with well developed arm and shoulder muscle or I would have thrown them both off. That stick hurt like hell! When it was done I kind of hung between them huffing and puffing, mightily glad I could not see the knife coming. I let out a yell they could have heard in Cherry Creek when it hit, the stench of buring flesh filling the air. I must have passed out again. It was just breaking daylight when I opened my eyes again.\n\nMy shoulder was almighty sore but didn't feel as bad as I thought it was until I tried to move my arm. \"Easy,\" said Elsa, \"Give it time to heal. You won't be swinging no pick for a good while. Let me get you a cup of coffee and some flapjacks. It'll make you feel better.\"\n\nElsa made the best sourdough flapjacks in the world. They would have been good plain but Gal had found a bee tree a couple weeks back. We smoked it and robbed about two thirds, leaving the rest so they wouldn't go away. The honey made them twice as good. We didn't waste anything, using the comb to make candles for the mine.\n\nShe grinned when I finally stopped. \"Well, at least they didn't kill your appetite. We're gonna go gather the bodies and see what we can find.\"\n\n\"There should be a derby lying around. I'd be most pleased if you'd fetch it to me.\"\n\nFour of the horses had stayed near, so they gathered them up and dragged the bodies to the ridgeline. The horses were good animals, there again outlaws couldn't afford bad ones. Their pistols were mostly Peacemakers with one Remington and a pistol I didn't recognize. I found out later it was British. They must have been expecting a fight, because they'd brought plenty of ammo. The rifles were all Winchesters of varying ages and one Sharps in 45/70. Eion and Gal upgraded their weapons, taking the better ones. Eion found an old .22 pepperbox on one of them and Elsa took that one because it would fit into the pockets of her skirts.\n\n\"It ain't much but if I have to use it they'll be up close and I won't miss.\" She wasn't grinning when she said it.\n\nWe also found their pack mule loaded down with supplies. They must have planned on moving in and staying a while. More for us.\n\nWe talked everything over that night. \"Zeke won't be back for at least a month, maybe longer. I got a feeling them boys won't give up so easy so I expect they'll give it another try as quick as they can get more men. I can't use a shovel right now, so I'll do guard duty. if there is a bunch of them we'll probably get overrun. We need to make plans now for if that happens.\"\n\n\"We need rallying points. We also need to stash a few weapons and supplies in different places in case we need to cut and run. And it wouldn't hurt to find another way out of this valley.\"\n\nIt seemed Elsa was the brain of the family and we went along with her ideas. We halted mining and made our plans.\n\nChapter 13\n\nSince I couldn't do much real work I spent the next week scouting and watching the trail. We'd made the stashes we talked about, weapons, ammo, a little grub and coffee, some rags for bandages, that sort of thing.\n\nI wasn't just ridin' around. There were a few choke points on the trail in, and I had Gal and Eion help me loosen the base of a couple of big boulders, and rig a deadfall out of some mighty impressive logs. It probably wouldn't hurt them but it would clog the trail and make them jumpy.\n\nThey hit three days later and I almost missed them. They'd gotten smart and hired three renegade Indians. I was watching from the ridge, staring at a cloud of dust and wondering how many they were when I felt more than heard something. I didn't stop to think and rolled to the left. An arrow hit the rock where I was lying and the archer, seeing he missed, had dropped his bow and was trying to get his rifle to bear. I hit him three times the last in his head as he was falling. Another rose up almost in front of me, shocked beyond believing when I dropped the rifle and went for my shotgun. He was literally on top of me before I could get it to bear, the barrel almost against his chest. The shot knocked him backwards and he remained standing for a few seconds, looking down. I could see the woods behind him through the three inch hole.\n\nThe last fired as I was rising to my feet, nearly ripping my holster in two and knocking me down again. The brave must have thought he got me, because he rose up, his war cry echoing off the rocks. He stopped in mid yell, because I blew most of his jaw off. The next round took the rest of his head.\n\nThe sudden stillness was deafening and it took me a minute to recover. I was going to have a hellacious bruise on my hip where he'd hit my holster. I also had a shallow groove I didn't remember getting on my left arm, right beside the one I got in Mexico.\n\nScrambling back to the ridge I dusted off my binoculars and focused on the dust cloud. Son of a bitch, there had to be thirty of them! Eion was coming across the valley and I waved a yellow scarf, the all clear signal.\n\nHe dropped beside me and I let him get a look. \"That's a lot of riders.\"\n\n\"It is. Way more than we can handle alone. I don't want any of us getting hurt, so we may have to give it up for a while. We'll worry about getting it back when Zeke shows up. I need you to help me spring the traps, then we'll dust them a bit and get the hell out. They'll take this valley but it's gonna cost them.\n\nWe slipped down to the first trap, a huge boulder standing right over a sharp rise in the trail. I always meant to push it back because it made me nervous, but now I wanted it there. We had dug carefully, undermining it until it was barely hanging on. It took them almost an hour to get close but as soon as most of them were in the gap we pushed. The sonofabtich didn't move! We tried two more times and they were less than twenty feet away before it finally gave.\n\nOddly, it didn't make any noise until it hit the trail below. Then there was all kinds of noise as the boulder hit, dragging smaller stones with it. There was a lot of shouting and a few screams when it hit the tightly packed group. Seeing as how they were a mite distacted, I emptied the shotgun while Eion gave them every shell his rifle had. Horses were bucking, rocks were rolling, and there was no way they could return fire and precious little place they could hide. We aimed for men and horses alike. It galled me to kill a good horse but the less mounts they had the better. They were just starting to look for something to shoot at when we pulled back.\n\nI watched through the glasses as the dust cleared. There were four horses down and another hobbling around, with at least three men on the ground, obviously dead. When they pulled the boulder baclk far enough to pass, I saw another dead horse, the rider still on it. I guess he rode that gelding straight into hell.\n\nEion had brought the buffalo gun along, and as soon as the first rider appeared he blew him out of the saddle. There was a lot of cussing as I emptied another rifle in their direction and Eion got a couple more shots off with the big gun.\n\nThey were down five or six men and horses, and they hadn't even made the valley yet. Still way too many of them. We watched as it took them an hour to creep through the gap, waiting until they made it to the next trap. A pile of logs, many with broken branches, piled up between two trees. We had carefully sawn the trees until they were just barely standing, so the only thing holding them was the bottom piece. It was partially sawn through as well so when they started to move it wouldn't hold much back.\n\nThe trail was clear and wide and the logs far enough away to not look like much of a threat. We waited until the front riders had passed before we blew the bottom log. I wasn't a fan of dynamite but Zeke picked up a dozen sticks just in case. I would have to tell him how much I appreciated his foresight when he got back.\n\nHorses started bucking and the men were scrambling to get them under control when the logs hit. Four went down under the logs and rocks that had dislodged in the blast. We managed to hit the three on this side of the jam. Two dropped from their saddlles but the third came off his horse and rolled behind a boulder. We fell back yet again, the force before us reduced by a third. It still left us badly outnumbered.",
        "I grinned when we hit the ridge. If nothing else that might give them pause. The corpses were still more or less laying in a line, body parts scattered as scavengers discovered the remains. Above them on a stick pounded into a cracked rock was a derby. I learned years later the place was marked on Colorado maps as Derby Ridge.\n\nChapter 14\n\nAfter the logs our enemies decided to retreat back down the trail for a good camping spot. Darby went among his men, assessing their wounds. Two were hurt bad enough that their figtht was over. He promised them their fair share of the gold when they had it. Five more were hurt, ranging from lumpy noggins to broken arms. Worse, eleven of their men and fourteen horses were dead. Maybe his father should have been a little more careful. They'd had a good thing going until his father had jumped three strangers, one of them a woman. He died in the dirt for his actions, as well as his brother when they went after their killers. Darby had seen the derby nailed to the stick and recognized it for what it was. It had been on his brothers' head the last time he saw it. Maybe revenge wasn't such a good idea because it hadn't worked out well so far.\n\nIf he was wavering Bart Hill, the leader of the other half of the group, was even more determined. \"We're still too many for them boys. He can't have more than two or three helping him. We'll get him soon and the gold will be ours.\"\n\nOne of his followers asked what everyone else was thinking. \"What do we do when his brother shows up?\"\n\n\"Kill him. We'll have possession by then and we'll call for more men. He won't have a choice but to ride away and when he does we'll follow.\"\n\nI grinned in the darkness. I'd slipped down to check them out, ghosting past their sentry. I'd heard it all. I had another little surprise for them. After they retreated, Eion and I spent an hour and a half gathering rattlesnakes. The rocks and logs we had dislodged were their hiding places, and they lay on the ground stunned and sluggish, the hot sun making them very uncomfortable.. We'd pin their heads down and throw them into a burlap bag we'd been soaking in a stream. They immediately went quiet in the dark and the cool. We caught nine before we stopped. The saddles were stacked near the picket line and I managed to get five into saddlebags. The horses could smell the snakes and got pretty restless. They sent a man to see what was bothering them.\n\nI had the biggest rattler by the head, his mouth forced open, his fangs fully extended. When the man passed me I rose up and jammed the fangs into his ass as hard as I could. He screamed and ran back into camp, the snake still dangling. There was a lot of steppin' and fetchin' until they got the snake off and killed it. By then it was too late for their man and he died in agony later on in the night.\n\nWhile they were distracted I got the last three snakes out, holding their heads in one hand, twirling them like a lasso before letting go. They landed in the clump of men, madder than hell and happy to have something to lash out at. Two more got bit before they killed one and the others slithered away. I slipped back up the trail, knifing the guard as I passed. He shoulda been better at his job. I bet they didn't sleep much that night.\n\nWe settled down to sleep a few hours. When I woke up Elsa and Gallison were there fixing breakfast.\n\n\"Don't complain. You're gonna need our help.\"\n\nGal just grinned and after breakfast we laid up in the rocks. Every one of us with two rifles, our pistols, and I had the shotgun. Every hiding place had a clear path behind for a quick retreat. We all knew we weren't going to be staying long.\n\nThey must have been late risers, because the yellin' and cussin' didn't start until almost nine. Well, they'd found the rest of the rattlesnakes. Thirty minutes later they came into sight, twelve riders looking anxiously about. They must want that gold pretty bad knowing we had high ground and weeks to prepare for something like this. The number of riders bothered me, there should be four or five more. Course the snakes might have took care of some of them, but not all.\n\nIt hit me they were trying to flank us so I waved to everybody telling them to watch the sides and behind them. Elsa elected herself watcher, keeping eyes behind us as we let them have it one more time. Eion was a pretty canny old man, and he waited until they hit a patch of trail that had them riding single file. He let loose with the buffalo gun, the big slug going through one man and into the body of another. Both fell from their saddles dead before they hit the ground. Gal and I opened up. He scored a hit but the rider stayed in the saddle and I had a clean miss, the horse jerking slightly just as I squeezed the trigger. It killed the horse, though, and it tumbled back down the trail, the rider trying to kick his feet out of the stirrups. He managed to ride it out but when he stood up one leg was at an odd angle. He was a little dazed and made a perfect target for the buffalo gun. The shot literally lifted him off his feet. We all knew when he fell he was never getting back up.\n\nElsa let out a yell and started shooting. We had talked about it and Eion kept his eyes forward while Gal and I turned. One was still out in the open and his last view was the barrel of my shotgun. It almost cut him in two. Elsa had gotten another one but there was still two or three out there. Time to retreat. I counted as I ran and figured there were at least twelve to fourteen out there.\n\nWe almost made it to our second position when a rifle barked. Eion threw the buffalo gun up in the air and dropped like a rock. Elsa screamed and tried to go back but Gal had her, pushing her forward. The outlaws were shooting at them and forgotten about me. I nailed one and put a hole through the leg of another before they realized I was still alive. I made it over to Eion but one look told me all I needed to know. I grabbed the buffalo gun and the cartridge belt and started running.\n\nI made it to our rallying point. Elsa was sobbing into Gal's chest. He had a little mist in his own eyes. I knew I should let them grieve but if I didn't get them focused soon there would be no one to grieve for any of us.\n\n\"Elsa! Elsa!\" Yellin' didn't work so I grabbed her and shook her pretty hard. She stopped crying, eyes wide in shock.\n\n\"Listen to me! I'm sorry about your Pa. We'll make sure he gets a good funeral and a proper resting place when this is done. Right now I need you to focus or you'll be crying for all of us. They're still coming. Hear me? The bastards who killed your father are still coming. We need to do something about that.\"\n\nHer eyes cleared some and her jaw jutted out. \"Here's what we do. We kill them. All of them.\"\n\n\"That's the plan.\"\n\nWe ran a little farther until we were in a little ravine that gradually opened up into a meadow. Gal and Elsa took their positions and I eased back up the ravine, waiting. There were twelve or thirteen left, still way too many. I knew that I would end up giving them the mine rather than have Gal and Elsa hurt. Well, not giving it to them. They would have to earn it and they wouldn't enjoy it long. I just needed to keep everybody alive until Zeke got here.\n\nIt took them two hours. Apparently the first two were their best woodsmen and they weren't bad but I had been trained by one of the best guerilla fighters to ever live, an Apache who was one of Geronimo's lieutenants. He and my father had a history and he turned up on the ranch one day basically seeking asylum for him and his family. Pa had given him a cabin on a remote part of the ranch and hired him to hunt any wolves and cougars who killed our livestock. Pa had him take each of his sons into the hills for four months when we hit fourteen, and he taught us quite a bit about woodcraft. His best lessons were on warfare, how to manipulate an enemy into a position of vunerability, how to engineer hit and run skimishes for maximum damage to an enemy without risking your own people. He taught us how to move like a ghost, how to kill with a knife, a stone, stick, how to turn anything into a weapon and most importantly, with bare hands. He taught us control of the battlefield was half a victory. So far his teachings had held true. We'd used terrain, traps, and ambush, reducing the enemy force by almost two thirds while losing only one combatant.\n\nThe odds were still heavily in their favor but we still had a few tricks up our sleeve. I waited patiently until one gave me a clear shot. His back was turned so he never saw the arrow coming. I was pretty good with a bow, again thanks to our Apache teacher, and the arrow hit him right at the base of the skull. He went down without a sound, dead before he hit the ground. The other man heard him fall and stuck his head out of the brush. The arrow went through his left eye. He kicked and gurgled for a few minutes before he sighed and stopped breathing. Time to move.\n\nI thought I was far enough away when bullets started kicking up dust all around me. I heard the buffalo gun boom and a scream. One more down. I slid into the ditch we'd cut and we all took off, emerging behind a clump of trees.\n\n\"There's still too many of them. We're going to have to run. They can have the mine. We'll get it back later.\"\n\nIt galled them no end but they didn't argue. We hit a cache and grabbed more ammunition, some food, and four sticks of dynamite. If they took the mine I wasn't going to make it easy. They'd have to work to get the gold out.\n\nElsa and Gal didn't want to do it but we split up. They were going down to the end of the valley to a safe location. There was a trail there, a path made by mountain goats. It was steep and a little scary in places but we'd worked on it. A half a mile along and about three hundred yards down was a little cave. We'd stashed more guns and food there so they could fort up and hold out a good while. If they didn't stir they would be hard to find.\n\n\"What about you?\"\n\n\"It's my mine. I intend to hang around and make life interesting for them until Zeke gets back. You lay low. I'll come and fetch you when it's safe. Here.\"\n\nI handed them a note. It was my last will and testament. If I died, Zeke inherited everything apart from the valley. It was my wish that he give it to Elsa and Gal, minus the gold mine. I also left them ten percent of my half of the mine.\n\nElsa read it and cried. \"We can't take this.\"\n\n\"You can and you will. You stood by me. Your father died defending this place. You deserve it. Now leave before they get any closer. I'll dust them enough to kep their heads down.\"\n\nGal had tears in his eyes and Elsa wrapped me up in a hug. Then she gave me a kiss that shook me to my feet. \"You're a hell of a man, Brad Walters. We get out of this alive and I'm coming after you. I'd be a good woman for you. You think about that.\"\n\nShe kissed me one more time and turned. She didn't look back. I watched them until they were out of sight. I gave it a little thought. Elsa was a handsome woman. She had too much character in her face to be beautiful but I'd take character over beauty any day. She was tough and determined, a women who would walk beside you instead of behind you. She wasn't the dusky senorita I'd always dreamed of but dreams could change.\n\nChapter 15\n\nI got a couple of more, then I became a ghost. I didn't make a move for six days, watching, waiting. There knew I was still out there, so they kept looking. Once or twice I was close enough to touch one, but I let them go. I wanted them relaxed and comfortable.\n\nThey found our cave and moved in. Then they found the mine. I was watching from behind a rise, heard them whoop and holler, saw them comin' out with bags of ore we'd already mined. Still I waited. When they started mining in earnest, I struck. There were probably eight inside when I set off the dynamite I had planted, all high in the roof of the tunnel. The mine collapsed with a roar, smoke billowing out of what was left of the entrance. No one came out.\n\nI'd learned the name of their leaders. Darby something and Bart Hill. Hill I'd heard of. He was thoroughly dangerous and wanted for several killings. He'd made a living robbing and killing miners leaving the gold fields, taking their gold. He thought about it for a while and decided it was easier to jump claims. He got away with it a couple of times before he ran in to somebody who wouldn't give up. Him and his two partners turned the tables, ambushing Hill's gang and killing most of them before they got away just ahead of a lynch mob. He'd laid pretty low and most thought he'd left Colorado but here he was back and up to his old tricks.\n\nI watched as they rode up, Darby cussing a blue streak. Besides losing his men, it would take days to reopen the mine and shore up the shafts. Hill never said a word, scanning the ridges.\n\n\"Walters! I know you can hear me! I got fifty men coming. Twenty are miners. The rest I hired just to kill you. Leave before you die!\"\n\nI lined up a shot but just as I pulled the trigger he moved and it was a clean miss. Darby was behind him a little and the bullet went through his leg and into the horse. The horse went wild, bucking like mad for a minute before it collapsed, taking Darby with it to the ground. They had to take his leg that night.\n\nI think Hill would have killed him but he was in charge of the miners.\n\nFive days later I watched as a column of riders came over the ridge. Seems Hill wasn't kidding about the number of men he'd sent for. I was worried that Zeke would ride into a trap, but those boys left plenty of sign and Zeke was no fool. I hadn't heard from Elsa and Gal and couldn't go near them for fear of leaving sign so I had to hope for the best.\n\nThe next few days were nip and tuck. They found me twice and it was a close thing getting away. I got a burn across the cheek and a pretty good gash across my side. Them boys had some pretty good trackers. I knew if Zeke didn't show up soon I was a goner.\n\nTired and exhausted, I burrowed down into some oak leaves and was out in a second. I felt rather than heard something and came out of the leaves with my knife in my hand. The knife was moving forward at at the last second I realized it was Elsa and jerked my hand sideways, burying the blade in the ground beside her head. Her eyes were wide and she would have screamed if I hadn't had my other hand around her throat.\n\nI let go of her and she drew in a big gulp of air. \"Jesus, Brad, you scared the hell out of me.\"\n\n\"You did the same to me. You guys all right? Where's Gal?\"\n\n\"He's out scoutin'. We were gettin' low on food and I decided to hit one of our hideouts. I saw you getting into the leaves. You just seemed to melt into nothingness. Where did you learn that?\"\n\n\"Old Indian taught me. You best be gettin' back.\"\n\nShe was about to move when we heard them. Five riders, moving slow. Casting for sign no doubt. It was almost dark and I doubted they could see anything but I grabbed Elsa and we sank back into the leaves. We could hear them talking as they rode by.\n\n\"I'm startin' to think they ain't here in the valley no more.\"\n\n\"Don't get too comfortable, Shorty. That boy don't seem the type to just give up and go away.\"\n\n\"If he's here we'll get him soon or late. There's still thirty of us not countin' the miners.\n\nThe other man laughed. \"Keep your eyes open anyway. I don't want him to make it twenty-nine.\"\n\nWe waited until we were sure they were gone before we came out. \"Give it a little time before you go back. I don't want them catching you or have you lead them to Gal.\"\n\nIn answer she tugged at the pack she had on and took the blankets she had and putting them on the leaves. \"There now. We can sleep comfortable without the leaves sticking us.\n\nIt was better than any idea I had so we did just that. The blankets were small so we huddled together for a few minutes. I thought she was asleep when I felt her hand in mine. \"Brad, can I ask a favor?\"\n\n\"Sure. Anything I can give you or can do for you I will.\"\n\n\"Don't be so hasty until you hear me out. I'm scared, Brad. Real scared that we may not make it out of this valley alive. No, don't try to comfort me, just hear me out.\"\n\nShe went quiet for a second. \"I'm nineteen years old, Brad. Most gals my age have been married by now and most got a young'un or two. I've never known a man. If I die, I don't want it to be as a virgin. Just once I want to feel what it's like to have a lover. Will you do it?\"\n\nI didn't know what to say and before I could gather my thoughts she was on me, her lips on mine and her tongue trying to get into my mouth. She reached down and grabbed the front of my pants with one hand and my other hand with the other, putting it firmly into her full breast.\n\nIt might have been the desperation of our circumstances but I soon gave up pretending to fight. I got her shirt open and was mauling her while she wiggled out of her pants. She rolled me over on top of her and nature took it's course. There was a sharp hiss when her hymen broke but it didn't take her long to start moaning. Realizing she was making a lot of noise she grabbed her shirt and bit down on it as I pumped. I tried to last as long as possible but she was steaming hot and tight as a vise. She peaked right before I unloaded, letting out a long moan. We fell apart gasping for breath.\n\nLater as she snuggled to me she asked if she did all right. I kissed her and told her honestly she was the best woman I'd ever bedded. I could feel her smile on my neck. Two hours later she woke me up ready to go again. I got up and checked first and then I grinned. If I was going to die doing it while I was making love to a woman wasn't a bad way to go.\n\nThe second round was as intense as the first. When it was over I tried to talk but she put her put her fingers to my lips. \"Now's not the time to talk. If we survive this we'll be having a serious discussion. I want you to know I have feelings for you Brad Walters. I don't know how you feel and I don't want to right now. You can tell me when it's over.\"\n\nI woke up just before daylight and she was gone. \"Thank you\" was scratched in the dirt.\n\nRunning out of options, I decided to hide in plain sight. I slipped into the cave we'd used as shelter for the horses when we first got there and eased through the door we'd built into our cave, trying not to dislodge too much of the mud. I came out in the storage room, slipping through the back door and into the general cave. We'd explored it several times and there was a little alcove about eighty yards back that had an airhole and a little spring trickling out of the rocks. There was also a narrow shaft that went to the top of the ridge just above the entrance to the cave. It was tight, but I could get through it if I had to.\n\nI hid for eight days. Sometimes I'd slip into the storeroom and listen. They had reopened the mine and had a crew of 24 mining nonstop. The gold was piling up and Hill was anxious to take it out but knew he had to take care of the other Walters brother before he could. One of his new men was a little skeptical.\n\n\"You forget I'm from Texas, Bart. I know these people. Their father is a Captain in the Texas Rangers. One of their brothers is an Arizona Ranger. Another is a county sheriff. His mother has family im Mexico and Bradley Walters is one of her brothers' favorite nephews. A very rich and powerful uncle. When they find out they're gone and the circumstances of their death they could have a few hundred riders descend on us like Angels Of Death. You need to keep that in mind. Might want to hire a few more boys if you can get them.\"\n\nHill wasn't impressed. \"They're just men. They can die like everyone else.\"\n\n\"Think so? Brad's the baby of bunch besides his sister. How many men have you lost so far? Twenty? Thirty? And you still ain't real sure the Walters boy is dead.\"",
        "\"He's dead. We found the blood.\"\n\n\"You didn't find no body and that's what it'll take before I believe he's dead.\"\n\n\"If he ain't dead he will be soon. We got men combing every inch of this valley. If he's still alive and here we'll find him.\"\n\n\"It's been over a week and we ain't found hide nor hair. If he's still alive, when and if we do find him he won't go easy.\"\n\n\"Ain't that your job? To bring me the body? Maybe you need to work more and stop jawin' so much.\"\n\n\"I just stopped by for more supplies. Don't go gettin' all jumpy Hill, we'll find him.\"\n\n\"See you do!,\" were his parting words. I eyed the Texan through a crack, marking him. He was tall and blond and had a swagger to his walk. We'd meet before too much longer, I was sure of that.\n\nOne thing I didn't worry about was food. I could take anything I wanted from the supply closet but I ate mostly hot meals, waiting until everybody left for the day and helping myself to whatever they cooked. There were a few boys that popped in time to time and they always ate so I figured they'd think they ate the grub. Still, I only did it once a day, grabbing some jerky to chew on if I couldn't get out.\n\nAnother four days went by and I was gettin' edgy. Zeke should be along any day now and I didn't want him to wander in to a trap. I heard a commotion the next day and slipped out to taake a peek. They had hold of somebody I couldn't make out until the crowd parted.\n\nElsa! Damn it straight to hell. I eased the shotgun up. I'd probably get killed but they were not going to harm her. They were laughing while Elsa stood and glowered, her face a mass of briuses. One eye was swelled completely shut but her one green eye blazed with anger. Her auburn hair hung in tangles. I was amazed at how long it was, I'd never seen her without her braid.\n\n\"She says she don't know where he is boss. I think she's tellin' the truth. There warn't none of his sign around and they'd been there for a while. Put up a pretty good scrap too. I brought four horses back with empty saddles and another she rode. We got the boy though. I'm sure I hit him, and he went over the cliff. Even if I didn't kill him the fall would.\"\n\nIt was the Texan. His sleeve was bloody and he had claw marks on his face, so Elsa didn't go easy. Hill walked up, yanking her hair until she was face to face. \"Where is he, bitch? You tell me and I'll go easy on you. I'll keep you for my private stock and not let them have a turn at you. You'll learn to say \"Yessir!\" when I snap my fingers. Be real nice and you'll last a good while.\"\n\nShe spat in his face and he slapped her down, yanking her back up. \"We're gonna have to work on that attitude. Now, WHERE THE HELL IS HE?\"\n\nShe grinned. \"He's right behind you.\"\n\nHe fell for it like they all did, all looking back at the door. When they turned around she'd fetched the little pepperbox out of her skirt pocket. She shot Hill first, the bullet pulling a furrow across his cheek and clipping an eye. The next shot hit Darby, going through his remaining leg. She lined up on Hill again before a pistol barked. Elsa fell, shot through the head.\n\nI nearly lost it, getting ready to charge them, when I heard Zeke's voice. \"Don't do it, boy. They'll kill you and dead men can't extract revenge. Wait 'til I get there.\" I faded back into the cave shaking with anger and grief. I vowed on Elsa's memory that Mr. Texas was going to reach a bad end.\n\nThe rage was all consuming. I'd been running and hiding long enough. Now it was time for war. I went huntin' that night, slipping out of the cave and casting around until I located three of them. They were on a ridge, keeping an eye out for Zeke. Two were asleep while the other stood watch. He must have felt my presence or heard something and I caught him in midturn, sliding that big Bowie in just above his groin and bringing it up until it hit his breastbone. His guts fell on the ground and he screamed.\n\nI figured he'd be busy for a while so I turned to his friends, blowing a ten gauge hole right in the middle of their bedrolls. The guard was sitting spraddlelegged, trying to stuff his guts back inside. I hoped he lived long enough to give them a message. \"You tell them this is for Elsa and Gallison and the bill ain't near paid yet. You tell your buddies if they got any sense they need to run. Now!\"\n\nI faded back into the brush and waited. Pretty soon four more showed up. I heard the curses and one man puked at the sight of his friend with his guts hangin' out. He wiped his mouth and started rantin'. \"I'm gonna kill that bastard. When I get hold of him I'm...\"\n\nI guess he had to tell the Devil the rest of what he was goin' to say. They were bunched pretty tight and I emptied the shotgun. Two died instantly, one would soon, but the other wouldn't, if his friends got to him quick enough. My last round hit his shootin' hand, mangling it. He had three fingers left but they were all pointing in different directions and his thumb was layin' in the dirt at his feet. He was holdin' it to stop the bleedin' and screaming his head off. Time to leave.\n\nI caught another couple coming towards the shooting. I had no sympathic at all. As soon as they got close enough that I was sure I couldn't miss I cut them in two, emptying the shotgun. Literally. I tied the top halves to the saddle of the horse I hadn't killed and slapped him on the rump. He'd amble on home and I wondered how they'd like what they found. Satisfied I'd stirred the hornet's nest enough I slipped back into the cave.\n\nChapter 16\n\nIt was a mighty pissed off bunch in the cave the next morning. Mr. Texas wasn't smiling. \"This has got a bad feel to it, boss. You've lost twenty two men so far, all killed by Brad Walters, an old man, a kid, and a girl. What you think would happen if the whole Walters clan showed up?\"\n\nBart Hill was consumed with rage. He was blind in his left eye, his partner had lost a leg and might lose another if infection got into his wound. Two of his best men were down. One had a hand missing, the other eight broken ribs. This mine better be as good as they say. It wouldn't give him an eye back or fix his ruined face, but people can forget a lot when money gets in their eyes. He could give a shit whether Darby lived or died. It was an association of convenience and he was getting downright inconveinent. He'd figure a way to get rid of him later. Right now he needed what few guns he had left and all his miners.\n\n\"We got 'em all but Walters. He's out there alone. We'll get him before his brother gets here.\"\n\nTexas had his doubts. Walters was proving to be one hard sonofabitch to kill. He was thinkin' about cuttin' his losses and just driftin' off when two riders came in.\n\n\"Riders comin!\"\n\n\"Good. Now we can end this. Check your guns boys. It's time to get rich.\"\n\n\"Uh, boss, there's a lot of riders comin'. Four or five wagons at the cutoff, with at least thirty outriders, and twenty Calvarymen.\"\n\nHill cursed inwardly. You could do a lot with a gun, but one thing you couldn't was mess with the military. Kill a trooper and they'd send a thousand men and turn over every rock in the West until they found you.\n\n\"Go get the miners. Make sure they're heeled. If push comes to shove we'll need them. You be sure and tell them that if we go down they're next. Walters won't give a damn whether you pulled a trigger or not.\"\n\nI skinned back into the cave, stopping to get the three remaining sticks of dynamite, setting them with a short fuse, about thirty seconds by my calculation. I ran along the ridge as fast as I could go, stopping just above the mine entrance. I was wheezing like mad, cursing myself for being in such bad shape. Then again, you get chased, miss a lot of meals, get shot more than once, and see if you felt up to running hard.\n\nI'd taken the time to rig the dynamite into bombs, a sack of shells around each one. I had no idea if they would go off when the stick blew, but even unfired it would be a chunk of metal coming in fast.\n\nThey were yellin' at the miners, telling them to hurry up and make sure they grabbed their weapons. The first were just coming out when I tossed the dynamite. I mistimed by about three seconds and instead of going off in front of the mine it hit the ground before exploding. The bullets, most of them anyway, did fire, slinging lead in all directions. Two riders and their horses went down and there were a couple of screams from the mine.\n\nI yelled out. \"I got a bunch more of these and I'm dug in pretty good. You boys stick your nose out of that mine and I'll blow it off, you hear me?\"\n\nThere was a bunch of cussin' so I waited until it died down and tossed the second and third stick. There were a couple of yells and then it went quiet. I think I made believers out of them.\n\nI scooted back to the cave as fast as I could, arriving just in time to watch as Zeke and his riders lined up in front of the cave. Hill had sand, I'll give him that. He grinned and asked why they were trespassing on private property.\n\n\"Last I heard, me and my brother had legal claim to this valley and all the gold in it. Where is Brad?\" Zeke was smiling but it wasn't reaching his eyes.\n\n\"Yeah, about that. He sold this place to us saying he was sole owner. You could ask him I suppose, if you could find him. Last I saw of him he was headed for parts unknown with a gal and her kin.\"\n\n\"That a fact?\"\n\n\"Gospel truth.\"\n\nThey didn't know it but I had stepped out of the cave right behind them. I was ragged, rail thin, with a six week old beard and hair in tangles. My hat was long gone. Zeke saw me and his eyes widened slightly before he grinned. I grinned back, right after I threw the hammer back on my shotgun. Texas looked behind and almost fainted.\n\n\"That ain't necessarily how it happened brother. These assholes tried to jump the claim. They killed Eion, Elsa, and I don't know what happened to Gal. They put up a good showin' though. A lot of them lost their lives before they got them.\"\n\nBart Hill finally glanced back and paled. No! He was supposed to be dead or gone!\n\nNow he was standing between them and shelter, a big shotgun pointed right at him. In front of him was his very pissed looking brother, twenty Calvarymen, and an assortment of hands, all holding weapons at the ready. He blanched when he saw four of the group were women and they all held shotguns and wore pistols on their hips.\n\nHe tried to grin. \"Maybe I made a mistake here. That don't look anywhere near like the feller that sold us this claim.\"\n\n\"You made your first mistake the day you took this trail, Hill. I don't intend to shoot you if it makes any difference. I intend to hang every one of you. That's what you do to murderers and thieves ain't it? And I intend to personally put the noose around the neck of Mr. Texas here. He was the one who shot Elsa. In the head. She was dead before she hit the ground.\"\n\nI paused for a minute. \"Or you can take your chances and raise those weapons. That would be a lot quicker for ever'body. Either way this is your last day on earth.\"\n\nThe Calvary hadn't raised their weapons but held them in their hands. All the other riders had theirs leveled right at Hill and his bunch. Hill was almost blind with fury. The biggest score ever and now it was dust. By God, he'd not go down without taking a few with him!\n\nHe reached for his gun but never made it. Something grabbed his arm and tugged. He looked down to see the end of a bullwhip wrapped around his arm, following it back to a grinning woman just as the pain hit.\n\nI laughed when I recognized Emily and her daughters, laughed even harder when she spoke. \"I'm kind of partial to these boys. They were good friends to me in a time of need and business partners as well. I am not predisposed to view you kindly if you hurt one of them. Now stay still!\"\n\nShe yanked the whip and it came off his arm, leaving bloody gouges around his wrist. She grinned at me. \"I am most pleased to see you Bradley Walters.\"\n\nI grinned back. \"I forgot how good you are with that whip Miss Emily. The feeling is mutual. Right now you look just like an angel.\"\n\nShe grinned bigger, lost in a memory. None of the guns had wavered and now the troopers had their own pistols out. Their Captain spoke. \"Boys, this seems to be a civil matter. This man has all the neccesary paperwork to prove this valley and the claim belongs to him and his brother. May I see yours?\"\n\n\"Our what?\"\n\n\"Your paperwork sir. If you have a bill of sale as you say you do I wish to see it.\"\n\nHill squirmed. No such paperwork existed. \"Uh, I don't know exactly where it is. I'd have to look.\"\n\nThe Captian grinned. \"If you'll tell us where you think it is, I'll have my troopers look for it. Let me tell you what I think. I think you jumped this claim and killed those people. I also think that it was all for nothing. Now unless you drag us into it the Government will consider this a private matter. If Mr. Walters wants to haul you to the territorial capitol to face charges he can. Otherwise it can be handled on site. Understand?\"\n\nHill realized he had just been handed a death sentence for him and his men. This time no one stopped them when they reached and when the powdersmoke cleared most were on the ground. Hill was still alive, as was Mr. Texas and Darby. I had stepped to the side so my friends and family would not get any stray buckshot and fired three times, killing four. Maybe half a dozen were still standing with their hands in the air.\n\nThe Captain took his troopers and withdrew. He was only there as a favor to a well connected patron of their territorial governor. The well connected individual was sitting on a ridge, watching as events unfolded. After the shooting was over he and his fellows rode down.\n\n\"Mr. Walters, it seems your slight problem had been cleared up. As soon as my engineers can look over the mine we can sign the contracts.\"\n\n\"Best give us a day, sir. We have a few odds and ends to clean up.\"\n\nThe man smiled grimly. This was not the first claim jump gone wrong he'd witnessed. \"Finish your business Mr. Walters. Another day or so won't make the gold wander off. Come to us when you're finished.\"\n\nZeke explained who they were after they rode off. They were part of the group that wanted to partner with us. He'd negotiated a pretty good deal all things considered. They would do all the work and we'd get 50% of the gold. They would get the rest. Operating expenses were all on them. It would be a good deal for everyone concerned.\n\nWe had a couple of things to clear up before the deal went through. First we hanged everyone at the cave. Hill was crying and begging when we threw him on a horse but it did him no good. Texas was an asshole but he had sand. He grinned at me, asking if he could write a letter before he swung. We gave him a pencil and paper and he wrote a letter to his mother.\n\n\"I ain't in no position to ask but will you send my saddlebags back home? The money in there didn't come from any of your gold so I'd take it kindly if you let her have that too. It might make her think a little better of me, if she ever thinks of me at all.\"\n\nI just nodded as they hoisted him on his horse. He looked me in the eye. \"I knew I should have cut and run when I got that bad feelin'.\" I thought about poor choices as I slapped his horse with my hat and it trotted off, leaving him swinging.\n\nDarby begged and cried but got nowhere fast. We had him on the horse, two men holding him on because of the missing leg, when a thought hit me. \"You got any more brothers?\"\n\n\"No. I'm the last of my line.\"\n\n\"Good. The line ends right here, right now. Tell your Pa and brother I said hello Darby.\" We left them all swinging and rode up to the mine.\n\nChapter 17\n\nWe eased around the corner in case the miners had gotten brave. Shocked doesn't come close to what I felt when Gal rose up from behind a rock. We looked at each other and grinned saying the same thing to each other. \"I thought you was dead!\"\n\nWhen he went over the cliff he dropped eight feet onto a ledge, knocked cold on the rocks. It took him ten hours to wake up. It took him another day to figure out how to get off the ledge. Finally he took his gunbelt and jumped, flipping it over the base of a little windblown pine that was a lot stouter than it looked. Once he got on top of that all he had to do was flop back onto the ridge. He hit one of the drops we'd set up, getting some much needed food and a fresh set of weapons, hoping to find Elsa.\n\nHe worked his way towards the mine and was settled in watching when I dropped the dynamite. It took the miners about an hour to poke their heads out and when Gal shot one off they scurried back.\n\nGal was bruised up, with torn clothes and a scraggly beard. I didn't look much better. He looked at me with hope in his eyes. \"Elsa?\"\n\nI hung my head and he knew instantly. \"Sorry, Gal. She was a scrapper though and went out fighting to the end.\"\n\nHis eyes dimmed and then blazed. \"Let's go get them sombitches!\"\n\n\"Already done. If I had known you were still alive, I'd have waited and let you hang the one that shot her. He died dancing on the end of a rope as they all did. All that's left are the miners.\"\n\nHe was still processing everything when I called out. \"Hello the mine! Hill's dead. Darby's dead. All the rest, every lowlife sonofabitch in the lot, is dead. Most of them hung. Now if it was up to me I'd blow the entrance and ride away. But then we'd just have to dig it out again and the thought of havin' to move all your rotten, stinkin' corpses don't appeal to me. So take your chances and come out unarmed or come out heeled. If any of you fought against me or helped kill my friends you're dead. The rest we'll probably let go. Your choice but in about five minutes we're going to start pouring fire into the entrance. I know for a fact the walls are mostly rock, so they'll be a lot of riccochets. That's a pretty ugly way to die but it don't matter much to me. You got four minutes left.\"\n\nWe could hear them jawin' and three minutes later three rifles and about half a dozen pistols got tossed out of the mine. \"We're comin' out with our hands up! Don't shoot!\"\n\nThirteen men came out hands held high. I singled one out. \"Any more? If I find out you're lyin' I'll hang the whole bunch.\"\n\nHe shakily admitted there were three more inside. I thought about it for about thirty seconds and started shooting into the mine. Gal joined me and soon our whole group was pouring lead into the entrance. We heard a man scream and another yellin' for us to stop, they were coming out. I knew them immediately, I'd had one in the sights of my Winchester about three weeks ago. The only reason he was still livin' was because the group was just too large to take on by myself.\n\nI asked the two standin' in front of me where their friend was. \"Inside, gutshot. He ain't got long, mister.\"\n\n\"Too bad for him. Gal, these two are part of the bunch that was huntin' you and Elsa. I watched them a few times through my spyglass. There was either too many of them or to far away to get a shot but here they are. You want a little justice?\"\n\n\"I don't know how to make a hangman's knot.\"\n\nOne of the riders with my brother spoke up. \"I'll do it. Watch me kid, this might come in handy sometime down the line.\"\n\nGal watched and asked questions as the noose being made. Then he did the second one himself, picking a big oak and tossing the ropes over a couple of strong limbs. The miners started to beg.\n\n\"Now hold on here! I just rode along to get out of workin' in the mine. I never shot nobody!\"\n\nI looked him in the eyes 'til they dropped. \"You never shot anybody because you're a terrible shot. You were in a pack that chased me twice and you were shootin' your rifle like everybody else.\"\n\nWe hoisted them up and Gal never gave them a chance at any last words. \"Burn in hell!\" he cried as he slapped the horses on the rump. One took off at a full gallop and damned near snatched the man's head off. The other just kind of trotted forward and left the second man swingin', feet kicking the air.",
        "I turned back to the miners and they were all looking mighty peaked. I pointed at two. \"You two! Go back in there and drag that asshole out.\"\n\nThey could tell I was serious so they went back in, coming out a few minutes later with a man danglin' between them. I knew him instantly. He was one of the orginal bunch with Hill and Darby.\n\nHe was holding his gut and crying in pain. \"I need a doctor! You have to help me! I had nothin' to do with the killin' that went on here.\"\n\nI looked at him noting the empty gunbelt. It was mounted with little silver stars. The last time I saw it Eion was wearin' it, along with the two Peacemakers we'd taken from the first bunch that tried to attack us. \"Gal, the last time I saw that holster was around you Pa's waist. You want to hang him?\"\n\nGal tried to grin but it looked more like a wolf snarl. \"No. We hang him and he dies quick. We'll let the bullet kill him. He might last a day or more, hurtin something fierce.\"\n\nThe man started beggin' and Zeke started to say something, thought better of it, and shrugged. We tied his hands and feet and when he cried for water we set him up about ten feet from the stream and left him. If he wanted water he could crawl for it. Gal and three hands stayed behind while we marched the miners back to the tents they had been stayin' in.\n\nThey held them back while three of our men emptied the tents, throwing everything they found on a couple of blankets. Then we made them empty their pockets and strip down to their longjohns. It was a pretty dejected bunch when we were done.\n\n\"Who's the foreman? Lie or refuse to answer and I'll go down the line killin' you one at a time until somebody tells me.\"\n\nThe youngest miner was at the front of the line and knew he'd be first to go and fingered the man immediately. I had him pulled forward.\n\n\"You knew it was a claim jump, right? You knew your bosses were gonna kill us and take the gold. What did they promise you?\"\n\nHe was pretty stubborn, but when he saw us heatin' up the knife with the eye that wasn't swole shut he started talking. \"Darby said he'd give us triple wages and we wouldn't have to fight anybody. All we had to do was mine.\"\n\nI sighed, holding up the red hot blade. \"It didn't bother you they were going to kill peaceful, upstanding people that were just trying to have a better life?\"\n\n\"I tried not to think about it.\"\n\n\"Well I want you to think about it a lot, Murphy. Good people died while you and your men stood by and did nothing. I figure by the time you've walked back to civilization you'll start to understand the error of your ways. Had they paid you anything yet?\"\n\n\"No, we just kept account. It waren't like we could go to town or nothin' and it'd be a bigger poke when we did. What do you mean by walkin' back? It's over three weeks by horse to the nearest settlement. It would take twice that long to walk. You wouldn't do that to a feller, now would you?\"\n\n\"I'm sendin' you off on foot, unarmed, and I'll have to think about giving you any food. I think the long walk, for those who make it anyway, will be good for your souls. You can do a lot of soul searchin' when the scenery goes by real slow. Mybe you'll come to understand the error of your ways and that if you're engaged in anything illegal it always comes back to you.\"\n\nThere was a lot of squalin' and hollerin' before Zeke and his men tied them up and tossed them under a tree.\n\nI was startin' to wind down. The weeks of runnin' and hidin' and not eatin' regular, not to mention getting shot a few times was finally catching up to me. I was safe now, I could relax and maybe sleep the night through. Zeke eyed me. \"Get some rest, brother. I'm sure you'll have a tale to tell when you wake up.\" I was out before my head hit the pillow Emily had put on the bedding.\n\nI woke up hungry enough to eat a whole cow, but was grateful for the country ham, biscuits, and eggs. Seems Emily had brought a dozen hens and two roosters with her in one of the wagons.\n\nAfter I couldn't eat another bite, they helped me down to the creek and handed me a bar of soap and some towels. \"Lay there and soak. We'll be back directly.\" Emily had put a mirror in front of me and if I hadn't known it was me looking back I'd have said it was a stranger. My hair was past my shoulders and I hadn't shaved in five weeks. I scrubbed until the cloth was so dirty I had to change it. I was wincing every time I hit a groove from a bullet or a cut from brush or rock, but I finally got clean. I thought about things while I soaked, the trail of dead men behind me that I had no sympathy for, and of Eion, picturing Elsa smiling at something I'd said while she cooked supper. The emotions welled up in me and I ducked my head under water. It waren't manly to cry but no one could see the tears under water. I cried for both of them, struggling all their lives looking for a better future and finding death. I stayed under as long as I could and rose from the pool a new man. The past was done. I'd avenged them, killing every man involved. It didn't bring them back but I hoped they knew somehow and it gave them a little peace.\n\nI was asleep again when they came back. I colored up when I saw Emily. She just grinned and whispered in my ear when she was lookin' at my wounds. \"Relax. It ain't nothin' I haven't seen before. Still looks mighty temptin'.\"\n\nI was as red as the blood that flowed out of my cleaned wounds. She put some salve on the worst and bound them up. Then she left and the boys helped me into new clothes. They literally hung off my frame and Zeke frowned. Then he grinned. \"Don't worry. A few days of eating the cooking of Em and her girls will fatten you right up.\"\n\nI limped back to camp and grinned when I saw Gal. He'd gotten cleaned up and had on good clothes and Emily's youngest was fussin' over him. She was almost fifteen then, already with her woman's shape. I wondered if Zeke wished he'd been a little more receptive to her now.\n\nWe rested for a week. I made Gal stay in camp and took a couple of men and went to Elsa's grave. It was really shallow and the varmits were already starting to dig. We put bandanas over our noses and gently opened the grave, putting the remains in a blanket and taking it to a little knoll that overlooked the lower half of the valley. It was a place she favored of an evenin' to watch the sun go down. We dug a proper grave and lowered her in while our whole group watched. Then Zeke read from The Book and Emily and her girls sang a couple of hymns. I had already promised Gal I'd get her a proper headstone as quickly as possible.\n\nGal and I rode the part of the valley where his Pa had fallen but couldn't find anything. In the end we agreed the best thing we could do was get a marker and put it beside Elsa.\n\nThe next day we put the miners up on outlaw horses and took them out of the valley and two days down the trail before making them get off. \"This is it boys. You're on your own from now on. I suggest you go South, there's a a new camp set up there and it's the closest to civilization you'll find. \"\n\nWe tossed down two pounds of salt, ten pounds of flour, and five pounds of coffee. We gave them two pots, a fryin' pan, a coffeepot, four cups, a couple of knives, some tin plates, and a few spoons and forks. I threw down a couple of rashers of bacon and a big bag of beef jerky.\n\n\"There you go boys. I suggest you make it last.\"\n\n\"No way in hell that'll last until we get somewhere!\"\n\nI looked at the speaker.\n\n\"Well then you better be real good at rationing. Besides, we're going to give you two Winchesters, fully loaded, but we ain't giving you any extra ammo. I'd make damn sure I had a good shot before I pulled the trigger. We're also giving you a shotgun and ten shells, and two Colts fully loaded. How you divvy them out is up to you. I'd give the rifles to the best shots and maybe you'll eat regular. Maybe not. I don't care. You'll find the weapons an hour up the trail. There's a new settlement to the Southeast of here. It's closest. If you keep a good pace you could probably make it in about three weeks on foot. I'd make for that but I don't really give a damn as long as it's away from here.\"\n\nI let 'em calm down a little before I spoke again. \"I need you to know if I see you again around here or at Cherry Creek or any other settlement I'll kill you on the spot. Now get to steppin'!\"\n\nI hadn't given them any bedrolls and took their hats. It was a mighty dejected bunch that straggled off. A couple of the men Zeke had brought were pretty decent woodsmen, so I gave them the task of followin' them to make sure they didn't waylay any innocents they may run into. They came back just as we were fixin' to leave for good and gave us a report.\n\n\"The bunch fell out after three days, fussin' and fightin'. Of the thirteen that walked away seven made it to the settlement. We killed two when they tried to ambush some travelers and the rest took the hint and didn't bother anyone else. They might have starved but they ran into a bunch of missionaries and they fed them, offering them rides to where they were going. Before they could accept I stepped out of the woods, told them the story of why they happened to be in the straits they were in, and told them we had orders to see they finished their journey on their own. The main preacher objected until he heard the lever go back on a rifle.\n\n\"You've done your good deed and Christian duty, Preacher. Now wish them the best of luck and send them on their way or you'll all end up walking.\"\n\nThey didn't like it one bit but they left them on the trail. They did give them a little food but not enough to last . They were pretty gaunted up when they hit the town. We came in right behind them, telling the tale of how they happened to be in their predicament. I bet it would take them a while to find jobs. What honest operation would hire them?\"\n\nThey also told of the battle to save the valley and how one man, a boy, a woman, and their elderly father fought an organized gang almost to a standstill, dying until only the man and the boy was left, and between them being directly responsible for the deaths of thirty-two outlaws, counting the ones we hung.\n\n\"It just ain't a good idea to mess with those Walters brothers or anyone they call friend.\"\n\nChapter 18\n\nZeke and I were sitting in our saddles taking one last look at the valley. The new road had been cut and graded and as we sat on Derby Ridge I could see the green lushness of the valley, marred only by the mud of the mine and the surrounding settlement being built. Despite being the scene of so much suffering it was still a beautiful place. Em and her oldest daughter were traveling a ways with us to round up some more cattle. They had a contract to sell and deliver supplies to the miners, including beef. Her oldests' husband, our friend Bob, would freight the supplies bought through our partnership. Zeke and I tried to give it to them but Em had a fit. \"It was mostly your money that got us here. You're good luck boys and I want to hang on to that. If you like I can plough your shares back into the company and send you financial statements twice a year, but I ain't lettin' you pull out.\"\n\nHer second oldest daughter and her youngest were staying to cook for the camp. The older one was being wooed by one of the engineers and the youngest had locked down on Gal to the point he couldn't see anything but her.\n\nGal was so overcome when we gave him the valley minus the mine of course, that he couldn't talk. He deserved it. He and Emily had worked out a deal where she was bringing in a herd of young stuff to run in the valley. They would sell the beef to the miners and the small settlement that was bound to spring up around it. The older girl and her engineer had already picked a spot and laid out lots.\n\nWe pitched in and built him a cabin close to the resting place of his sister. He and Em's daughter were already planning how many bedrooms they would need to add. She was just shy of fifteen and he had just turned seventeen so they didn't need to be in no hurry. Gal was already a man to ride beside despite his age and I remembered Julie sitting on her horse in front of the outlaws, emptying both barrels of her ten gauge before she dropped it and grabbed her pistol. I had no doubt they would be just fine.\n\nI looked at Zeke. \"Ready to go home, brother?\"\n\n\"I am,\" he said as he turned his horse. I looked back one more time on the trail out to see the derby still on the ridgeline. I always thought it foolish headwear. I turned back around, looking forward, smiling when we passed the sign pointing to the mine. \"Elsa Mining Company, Monahan, Colorado.\" was there for all to see in big bold letters. It was my last way of honoring her and Eion.\n\nWe had money now and somewhere down Texas/Mexico way was a ranch with my name on it, and a pretty senorita just waiting to be wooed and won. She just doesn't know it yet.\n\n........................................................................\n\nThanks for reading. There is another novel planned about Bradley J. Walters as he starts his new life in Texas with his Latin bride, but that's down the road a bit.\n\nLet me know what you think of the story. Until next time.\n\nQ"
    ],
    "authorname": "qhml1",
    "tags": [
        "western",
        "ranch",
        "texas",
        "mexico"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-walters-brothers"
}