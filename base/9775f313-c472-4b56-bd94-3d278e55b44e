{
    "title": "A Note from a Reader",
    "pages": [
        "OK, I'm not a professional writer. I'm not an editor or anyone else with a recognized expertise. I'm a reader. I fell in love with the written word when I was eight years old and I've been in love with it ever since. I've read thousands of books, from just about every type you could name. Fiction and non-fiction, horror, science fiction, science fantasy and science fact, romance, history, religion, mystery, newspapers, magazines, the ingredients on the back of a soda can, the user's manual that came with my computer; if it's written I'll probably read it. But some things really turn me off and, if they're enough of a disruption to the flow, I'll stop reading your story and move on to something else.\n\nMy biggest pet peeve is that some people do not use words correctly. I'm not referring to slang here, I'm well aware of slang and use it myself. There are a lot of words in the English language that sound the same when spoken, but destroy a written sentence. Words like \"there, their, and they're\" are a prime example. Each is a valid word in its own right and, when heard or spoken, most people will recognize the context. In print though, they cause the reader (me) to sometimes have to stop and try to figure out just what is being said. I don't like to have to decipher what I'm reading; I want to enjoy the time I'm giving to your work. There are a lot more of these things than you would guess. A few are: your and you're; since, sense, and cents; it's and its; two, to, and too; grown and groan; throne and thrown. Some writers get so sloppy with this that I make a mental note to bypass everything else they submit. It's a shame, too, because some of these people have good imaginations and set up some very interesting situations. I just can't get past this one problem and I move on.\n\nMost other people who are offering helpful advice will tell you to let someone else read it before you submit your work. This is sound advice. If that person gets confused while trying to read it then probably most other people will, too. Keep in mind that the person you choose should be someone who will give unbiased criticism, not comments based on personal preferences. I submitted a story that went over very well here, but my friend didn't like it. She said she didn't enjoy it all. After talking it through, I found that she doesn't like incest stories and that colored her assessment of everything about the story I had given her to read for me.\n\nYou might find it helpful to just let it sit for a day or two, then read it again yourself before you turn it over to someone else. You'll likely find that your first draft has missing words, misspellings due to misplaced keystrokes, extra words where you've typed the same thing twice, and any number of other problems that you didn't notice the first time through. Believe me when I say that we'll notice them when we try to read your story. Use the spell checker, but don't stop there because it can only tell you that the words you've typed are spelled correctly. It can't tell you that those words are really the ones you want to use. If I say, \"My dog ran threw the neighborhood,\" my spell checker won't have a problem with it, but I should have said, \"My dog ran through the neighborhood.\" My word processor also has a grammar checker, but some of the suggestions I get from it would change the meaning of what I've written, or alter the mood that I'm trying to set. Use your tools, but don't be a slave to them.\n\nWhen in doubt, use a dictionary; I do. Find out if the words you use really mean what you think they mean. I've found that I sometimes completely miss the meaning of a word based on what it sounds like to me. Case in point: I once bought a video that had, on the box, the statement, \"not intended to appeal to the prurient.\" I thought, prurient, pru, prudish, and decided that this must be something very erotic. It turns out that prurient is 'tending to incite lust' and that the statement was trying to warn me that the video doesn't do that. My own misconception cost me twenty bucks, yours might cost you an audience.\n\nSometimes I even use the thesaurus. I like the word 'gorgeous' and tend to use it a lot. If I'm reading over a story and see that I've used the same word to excess, I'll look it up to see if there are other ways to say the same thing. With gorgeous I find 'superb, sumptuous, and impressive', and I'm directed to also see 'beautiful and grand'. There are lots of terms that say exactly what I want to say without being stuck in a rut. I don't have to say that Tanya is gorgeous and that she has gorgeous hair and a gorgeous face and gorgeous breasts and gorgeous legs and on and on and on with the gorgeous. Spend a few bucks on a good one and it will have words that fit the type of writing that you find on Literotica. It will list alternatives for fuck, cunt, ass, and cock, and others that you'll want to use. Same thing applies to the dictionary. These are real words that real people use and they have real meanings. A good dictionary will list them, tell you what they mean, and give other forms where appropriate; plural, possessive, and so on.\n\nIf you're writing for your own pleasure, that's fine. I guess you know exactly what you mean when you write it. But if you're going to write for other people's pleasure as well, take the extra time to insure that they, too, know exactly what you mean when they read it. Let their judgment of your work be based on content and situation, instead of how difficult it is to figure out what's being said. I'll get off my soap box now and go look for a couple of good stories. I hope yours is one of them. "
    ],
    "authorname": "Bhob",
    "tags": [
        "spell checker",
        "reading story",
        "word"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/a-note-from-a-reader"
}