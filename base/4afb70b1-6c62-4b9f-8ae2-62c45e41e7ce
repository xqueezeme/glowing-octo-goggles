{
    "title": "Our Threesome Fantasy Pt. 01",
    "pages": [
        " All characters are above the age of 18 unless otherwise specified.  \n\n*********\n\nI sat on the edge of the bed, awaiting my wife's response. I knew I was going to get lambasted for what I had suggested.\n\nCaroline looked a little taken aback, but thought for a moment. \"Okay. We can try it.\"\n\nMy jaw nearly dropped to the floor. There was no way I thought she would be okay with it.\n\n\"I really want to make this work again, and if you think it'll help and it's worked for other people, then I'm all for it.\"\n\nI couldn't help but smile.\n\n\"But under one condition.\"\n\nMy expectations were reigned back in. There weren't too many conditions that would dissuade me, but I awaited my wife's next words on bated breath.\n\n\"We balance it out and do two. One the way you want. And one the way I want.\"\n\n\"Absolutely,\" I responded.\n\n***\n\nFive minutes earlier, Caroline was in our bathroom washing her face before getting ready to go to bed. I was sitting on our bed, reading an article on my phone, waiting for her so I could brush my teeth.\n\nCaroline finished and began walking out of the bathroom. She was wearing a thin nightie that made her look quite sexy. I had gotten it for her as a gift a few years ago, and she wore it often in the summer.\n\nShe stopped in the doorway and leaned against the wall. Her arms were crossed over her chest, like she wanted to talk about something.\n\n\"Steve?\"\n\n\"What's up, sweetie?\" I asked, not looking up.\n\n\"Do you want to have sex tonight?\" she bluntly asked.\n\nI looked up this time, caught by surprise. She usually didn't broach the topic.\n\n\"Uh, I'm actually feeling a little tired and have to be in the office early tomorrow. Raincheck though?\"\n\nCaroline smiled a little. \"Sure.\" Her eyes told me that she wasn't happy with my response though. \n\n\"Something wrong?\" I asked.\n\n\"No,\" she shook her head.\n\n\"That's clearly a lie,\" I responded. \"Tell me.\"\n\n\"No, it's nothing.\"\n\nI hated it when she was coy like this. I always felt like the bad guy for not reading her mind and diagnosing the issue.\n\n\"Alright, then, if you don't want to talk about it.\"\n\n\"Well, it's just that we never really make love anymore,\" Caroline continued.\n\n\"That's not true,\" I rebutted.\n\n\"And that's clearly a lie.\"\n\nI sighed. It was, in fact, very true. Caroline and I had been married for seven years. She was 24 and I was 26 at the time, so we were a little young. But everything seemed fine for a while. We loved each other and worked well as partners, and sex was fairly regular.\n\nBut we had hit a rough patch over the past two years. It had started when I got into a car accident, and was severely injured. Caroline had been focusing on getting her PhD, but had to start working again. I could barely move at first, and the physical therapy took a long time before I was back to normal.\n\nMoney had gotten tight then, and between the injury and increased stress, we didn't have sex for more than six months. But we considered it a bump in the road, and moved on stronger as a couple.\n\nThen came the change in jobs. I switched to a different company in a much higher-paying role to alleviate some of the pressure, but it meant that I was constantly traveling. I was on the road probably 75% of the time I worked there, and that put a strain on our relationship as well. Everything seemed okay on the surface and we were now doing fine monetarily, but Caroline and I had grown more distant.\n\nEven after finding a new position that let me stay home, things never really returned to how they had been before. The passion, both physically and emotionally, had sort of burned out. \n\nAnd that's where we had been left. Maybe it was the seven-year itch. But Caroline and I almost never had sex anymore. We had tried working through the issue, but nothing had really seemed to fix the problem.\n\n\"Well, it's been busier. We don't really get a lot of time anymore.\"\n\n\"That's not true. We don't make time.\"\n\n\"I mean, I think we've just matured maybe? It's not as big of a part of our life anymore. We're not still teenagers.\"\n\n\"Yeah, obviously. But just because we don't want to fuck each other all the time doesn't mean we never have to do it then.\" \n\n\"I think you're making a bigger deal out of the situation than it really is. I mean, the past two years have been very stressful on both of us, and I think now that things are returning to normal, the dust will settle and we'll be all the better for it.\"\n\nI was lying, both to Caroline and probably a little to myself. But deflecting the problem was easier than trying to fix it. Some part of me hoped that our relationship would fix itself, but I rationally knew that the growing disconnect would only get worse if left to fester.\n\n\"It just seems like having sex shouldn't be a chore. We should want to do it with each other. It's an important part of having a healthy relationship.\"\n\n\"You're probably right,\" I said. \"Do you really want to talk about this right now though?\"\n\n\"Why not?\" Caroline rhetorically asked. \"If we keep avoiding the issue and saying that we're fine and back to the way we were before, things won't change or get better. And I want things to get better. Don't you?\"\n\n\"Of course-\" I began. \n\n\"I want that spark again. I want to just rip your clothes off and have sex with you as soon as you get home everyday.\" \n\n\"I mean, I wouldn't complain if you did want to do that,\" I joked. \"But its not like we haven't put in any effort. We have tried to spice things up. You hated bondage, roleplaying was a pain, we've done other things. What else do you suggest?\"\n\nCaroline sighed. \"I don't know. I don't know the answer. But something's got to work. Unless you want to keep on going like this.\"\n\n\"No, sweetie, of course I want to make things work and to... to get closer and get that spark again,\" I said.\n\n\"Then what are we supposed to do?\" she asked.\n\nI thought for a second. I had something in mind that I had heard worked for couples to reignite their sex life, but I didn't think Caroline would like it. It had been a fantasy of mine for twenty years. She'd probably yell at me for suggesting it though.\n\nBut Caroline was the one who brought the subject up. And it was actually helpful for other people, so I did have some basis for it. What did I have to lose?\n\n\"Well, I've heard about one thing we haven't tried that's been used by many couples.\"\n\n\"I'm all ears. Whatever will make this work again.\"\n\n\"What about maybe bringing in other people? Like swinging, or a threesome?\" I asked before I had the chance to stop myself.\n\nI sat on the edge of the bed, awaiting my wife's response.\n\n***\n\n\"I think we need to make one more condition,\" Caroline said the next morning as I readied to get in the shower.\n\n\"What's the condition?\"\n\n\"I think the other partner should be able to decide who the third partner should be.\"\n\n\"What do you mean?\" I asked.\n\n\"So for your threesome, I get to decide who the other girl is. For mine, you choose which guy you want to have.\"\n\nAs soon as the words came out of her mouth, I knew why Caroline suggested that. Her best friend, Alexis, was very attractive, and also single. Caroline wasn't an idiot, she knew that I was attracted to her. Obviously I was a committed husband and would never cheat on Caroline, but given her permission and put in that situation...\n\n\"Alright, I think that's reasonable,\" I said. I didn't really care who the second guy would be for mine, so I was willing to agree to whatever conditions I needed to.\n\n\"But I still feel like both of us should have to agree on the person. You would still get the final say obviously, for mine at least,\" I continued.\n\n\"So like, I can choose, but you have veto power if you don't like her and I have to choose again?\"\n\n\"Sure.\"\n\n\"Great. Cause I already have some ideas,\" Caroline said.\n\n\"Ohh?\"\n\n\"I'm not telling you until I've decided. You'll see later.\"\n\n\"Alright,\" I conceded before getting into the shower.\n\n***\n\n\"So I know it's not exactly what you're expecting, but I want you to have an open mind,\" Caroline said that night. We were seated at the small table in the kitchen, with Caroline's computer facing her.\n\nThat was not how I expected the conversation to begin.\n\n\"I was thinking about who I want the other girl to be. And I thought for a really long time. There were some things in the back of my mind that were bothering me, and I was having trouble choosing. So I did some research online about how you pick the other partner, and it did seem like we are going about things in a good, healthy way.\"\n\n\"Okay,\" I said, unsure of where Caroline was going.\n\n\"What a lot of people said was to really make sure that there won't be any emotional connections or long-term implications from it. Because you don't want jealousy to start.\"\n\n\"That makes sense,\" I said.\n\n\"And to choose someone who's sexually adventurous or experienced, to make sure no one is nervous or awkward or anything. But you know obviously that I've never been with another woman before, like, at all. And that idea was a little daunting to me.\"\n\n\"Honey, we don't have to do it if you're not comfortable,\" I said, placing a hand on my wife's arm. \"This whole thing is about becoming more comfortable with ourselves and each other, and I don't want you to feel pressured or forced into this at all.\"\n\n\"No, of course not,\" Caroline said. \"And that's not what I mean. I want to do this. The more I read, the more I wanted to. And I want to try it with another girl. But still, I felt like having somebody who's experienced in that sort of thing would be good. To take the reins and maybe guide us a little. So that it's not so new and scary.\"\n\n\"Of course, whatever makes you feel secure about it.\"\n\nCaroline took a deep breath. \n\n\"With that said, take a long look at this girl and tell me whether you would want to fuck her.\"\n\nCaroline spun her computer around. \n\nOn it was a full-screen photo of a woman. My eyes went to her face.\n\nShe was really pretty. She had big brown eyes and very striking features. The dark lipstick and eyeliner made her eyes and lips stand out even more, and a small shimmering stud stood out on the side of her small nose.\n\nThe woman's jet black hair was straight and quite long. But the most catching part was that she had it buzzed down really short on one side. It was different, but looked oddly attractive and powerfully feminine. I kind of liked it.\n\nI looked over her body. She seemed pretty tall, and though the outfit she was wearing wasn't revealing, it was clear she was pretty curvy too. Her skirt displayed her long legs and big butt. Sadly, the top didn't show off her boobs particularly well, but it was evident that she had a fit body to match her beautiful face.\n\nThe girl's left arm was covered in a big, colorful tattoo sleeve. It echoed her hair and makeup to create a very rebellious, alternative look. It wasn't particularly my style, but the girl was definitely sexy enough to compensate.\n\n\"She's very pretty,\" I said to Caroline.\n\n\"Oh, come on,\" she said, giving my thigh a friendly shove. \"You don't have to pretend around me. She's hot as fuck.\"\n\nI had to admit, I hadn't expected Caroline to pick out a curvy, alternative girl. She was basically the opposite image of my wife.\n\nCaroline looked like a rather typical girl-next-door. Her face was soft and unassuming: cute in an almost innocent way. She had wavy mouse-brown hair that was cut just above her shoulders. She was short, not much taller than 5 feet, and quite slender. She didn't like her flat butt or B-cup boobs, but I certainly thought they were pretty and very proportional. \n\nCaroline looked about the furthest from \"slutty\" or \"rebellious\" you could get, even in her make-up choices. In some ways though, now that I thought about it, it made sense that she would have chosen someone like this girl. Opposites do attract after all. \n\n\"Who is she?\" I asked.\n\n\"Okay, well, this is where you have to have a bit of an open mind.\" Caroline spun the computer back to herself. \"Don't freak out, okay?\"\n\n\"Alright,\" I cautiously replied. \n\n\"She's an escort,\" Caroline said.\n\n\"What?\" I asked, more than a little surprised.\n\n\"She's an escort. It's through a totally professional company and everything. I was reading online and apparently it's pretty common.\"\n\n\"Hiring escorts, or using them for threesomes?\"\n\n\"Well, both. A bunch of other couples have done something similar for their first time swinging, and it was good for them.\"\n\n\"Really?\" I asked.\n\n\"Just think about it; she fits basically all of our criteria. She's experienced in bed and capable of guiding us both. Totally discrete, there wouldn't be any emotional baggage...\"\n\n\"Yeah, I mean, it's not a bad idea. I guess I just didn't expect it.\"\n\n\"Well, I know, but that's why I need you to keep an open mind.\"\n\nI paused for a moment. \"So do you really want this girl?\"\n\nCaroline nodded her head. \"I think she's drop-dead sexy. And she would be a good choice to help us dip our feet in at least. If we have a smooth first time, we'll be more likely to try it again.\"\n\n\"Then I give my approval to your pick. This is all legal too, right?\"\n\n\"Yeah, of course,\" Caroline replied with a chuckle. \"Since she's technically not contracted exclusively for sex or something like that. I'm not gonna get us arrested.\"\n\n\"So are we about to hire a hooker?\" I asked.\n\n\"This is probably something I'd never in a million years imagine myself doing, but yes.\"\n\n***\n\nI sat on the couch in our living room. It had been three weeks since we first agreed to the matching threesome plans, and we had arrived on my lucky day.\n\nNow we were a couple minutes away from meeting the other girl. My heart was beating fast, although the glass of whiskey in my hand helped.\n\n\"How do I look?\" Caroline asked, stepping into my view.\n\nShe had done her makeup and hair much more sultry than normal, although the long-sleeved sweater and nice jeans she was wearing betrayed that look. Still, I knew she was hiding sexy lingerie underneath the conservative exterior, keeping that reserved side of her personality tucked away for now.\n\n\"Beautiful, as ever,\" I responded. I was second-guessing myself. I was wearing an Oxford and dress pants. Was that too formal? What if the girl showed up in a t-shirt or something? Would she be embarrassed?\n\nI took another sip of whiskey to calm my nerves. Everything would be okay. I just really hoped the night would be a success.\n\nThe doorbell rang, forcing away my nervousness. \n\n\"I'll get it,\" Caroline told me. She squeezed my hand as she walked away, reassuring me we were in this together. \n\n\"Hi!\" I heard her chipper voice call out as the front door opened. \"I'm Caroline!\"\n\n\"Oh, good, I was going to ask. You wouldn't believe how awkward it is turning up at the wrong house!\" another female voice replied.\n\n\"Ugh, I couldn't even imagine. Please, come in! Come in!\" Caroline said.\n\nThe clack-clack of heels echoed along the wood floors as my wife escorted the escort to the living room. \n\nI stood, steeling my nerves one last time, just as the two came into the room.\n\n\"Hi, I'm Stephen,\" I introduced. \n\n\"Lovely to meet you,\" the girl said.\n\nShe was even cuter in person than she had looked before. What surprised me was how young she looked. She barely looked a day over than 20. God, that made me feel old.\n\nThe girl was wearing a small, black leather jacket, along with a cream-colored knit sweater underneath, and a short black skirt. She was wearing tall open-toed stilettos (my wife used to call them \"come fuck me heels\") that made her nearly as tall as me, both of us towering over Caroline. She had on dark eye shadow and red lipstick that really made her features stand out, and her black hair was curled a little, cascading in waves down to her back. \n\n\"I think the pleasure is all mine,\" I responded, feeling something growing in my pants. I couldn't believe I would have a chance to fuck both my wife and someone this pretty at the same time.\n\n\"Please have a seat,\" Caroline said. She read the excitement on my face and responded with a subtle wink. Neither of us could contain ourselves. \"Would you like a drink?\"\n\n\"Oh, no thank you,\" she responded as she took a seat on the couch. Caroline sat down as well, glass of wine in hand. \n\n\"So before we begin, I thought it would be nice to get to know each other a little,\" Caroline started.\n\n\"Alright.\"\n\n\"So as you know, I'm Caroline, and this is my other, better half, Stephen.\"\n\nThe girl chuckled at the joke she had probably heard a thousand times before. There was already something captivating and endearing about her.\n\n\"Can I ask your name?\" Caroline continued.\n\n\"Jasmine,\" the girl responded.\n\nMy wife winced a little and shot a look my direction. \n\n\"I don't want to come off as rude or brash, but would you mind telling us your real name? I'm not sure how much your agency told you about our particular situation. But basically, we're trying to expand our sexual boundaries, together, but we wanted someone knowledgeable and experienced to help us make that big step for our first... encounter. I'd like to be able to get to know you too and trust you, and I know Stephen would as well.\"\n\nI nodded my head to reinforce my wife's point.\n\n\"And so I think it would be helpful if all of us were completely open with each other. So would you mind telling us your name?\"\n\nThe girl went a little red in the cheeks. \"I'm really not supposed to do this with a client... But I definitely sympathize with what you're saying, so why don't we start over? I'm Elliott.\"\n\n\"That's a beautiful name,\" I said, working up the nerve to engage for the first time.\n\n\"Thanks,\" she bashfully replied.\n\n\"So how old are you?\" Caroline asked. \"You do seem a little young for someone in your line of work.\"\n\n\"Not really, I don't think. I know a lot of younger college students. But to answer, I'm 24.\"\n\n\"Well you don't look a day over 20,\" I complimented. \n\n\"Thanks again,\" Elliott said.\n\n\"If you don't mind me asking,\" I continued, \"how did you get into escorting?\"\n\n\"Well, it started out in college, which is surprisingly common. I needed to pay off student loans, and had a friend who was a cam model. I started out with that, then moved to working as a dancer, and it's moved on from there.\"\n\n\"Wow, that sounds pretty crazy,\" Caroline said. \"Do you have any plans for if, or when, you decide to move to a more traditional job?\"\n\n\"Well, I majored in poly sci, so it's not like I had any hot prospects from that.\"\n\n\"No kidding!\" Caroline replied. \"I was a poly sci major too!\" \n\n\"And you're not working at Starbucks? That's a miracle. What do you do?\"\n\nCaroline talked with Elliott a little bit about her job, and the two mused about how different their paths in life took them, before we began talking about the previous years of our marriage. Elliott had a relaxing presence that made both of us at ease, perfectly willing to open up to her about our life secrets. \n\nWe discussed the struggles we had been dealing with over the past few months and our motivations for hiring her. Elliott confirmed what Caroline had read about regarding the popularity of escorts for threesomes, making both of us feel even more secure that we weren't crazy or tanking our marriage.\n\n\"So did you ever imagine yourself being here when you were younger?\" I asked.\n\n\"I mean, I always had a really high sex drive,\" Elliott answered. \"And apparently I'm a good fuck-\"\n\n\"Hopefully we'll see that soon,\" Caroline interjected. \n\n\"Oh, don't worry,\" Elliott replied, sliding her hand onto Caroline's outer thigh. \"I've never gotten any complaints. I'm ready whenever you are.\"\n\nCaroline almost purred. She shifted closer to Elliott on the couch and gave me a wink. \"Oh trust me, we're ready.\" She rested her hand on Elliott's bare leg, just an inch below the bottom hem.",
        "Both women turned their attention to me with questioning looks. I think the tent in my pants was probably answer enough, but I still answered with a \"I think we should take this to the bedroom.\"\n\nElliott and Caroline both smiled and stood up. I downed my last sip of liquid courage before leading the way to our master bedroom. \n\n\"Before we start, I just want to ask about ground rules,\" Elliott said once we were in the bedroom. Caroline was sitting on the edge of the bed, the same place I had been when this whole idea was thought up. \n\n\"What do you mean?\" I asked. \n\n\"Some couples have restrictions, like I can only play with the wife or one of you really hates something.\"\n\n\"Hmm, no, we're pretty much open to it all,\" Caroline answered.\n\nElliott smiled. \"Well that makes it more fun.\"\n\nElliott moved to the bed. She sat next to Caroline, turned towards the blonde 31-year-old. Elliott reached around, gently took hold of Caroline's head, and pulled her into a kiss.\n\nIt was incredibly hot, easily the hottest thing I had ever seen in person to that point. Caroline kissed back with a passion I didn't know she had, eager to taste more of Elliott.\n\nThe younger girl moved her hands to my wife's torso and opened her mouth. Elliott's tongue snaked out, and I was elated when Caroline responded in kind. Their tongues engaged in a passionate, intense dance as the two women explored each other deeply.\n\nElliott was tugging on the buttons of my wife's sweater, unbuttoning it from the bottom up. Each subsequent button revealed more of Caroline's bare body hidden underneath, the fire she had seemingly kept balled up inside herself and was now letting out.\n\nCaroline's sweater was fully undone, and Elliott slid it off her body. My beautiful wife was left just in her jeans and her bra. It was red, sheer, and lacy, one I had purchased a few years ago as a \"gift\" to her for Valentine's Day. It looked amazing on her, although I couldn't help but think it would look even better on the floor...\n\nElliott stopped the firework show to turn to me. \"Are you just going to stand there? You've got two ladies here dying for your attention.\"\n\nI was startled by her direct attitude, but kicked into action. I sat on the bed on the other side of my wife, sandwiching her in between us. Caroline resumed the kiss with Elliott, very much enjoying her first kiss with another woman. \n\nI leaned in and kissed her ear. \"You're so fucking hot,\" I whispered,\" making her giggle.\n\nOne of Caroline's hands was cupping Elliott's cheek. The other felt blindly over my pants for my zipper. She located it and tried to undo it, but struggled with her non-dominant hand. I helped her along and undid my pants, pushing them down a little.\n\nCaroline reached into my briefs and fished my rock-hard dick out. Her touch was electric, immediately making my shaft pulse. I groaned into her neck as I continued doting attention on Caroline's pale skin. \n\nMy hands moved to her own pants, making quick work of the button and zipper. I pulled the skinny jeans down, exposing the sexy panties to match Caroline's bra. She kept her brown hair trimmed in a small patch of hair above her slit, which was visible through the translucent fabric.\n\nBefore I could get there, Elliott had already found my wife's pussy. Her fingers rubbed Caroline's clit over the thin underwear, eliciting a groan from my horny wife. I satisfied myself with Caroline's boobs, undoing the front-clasp and pulling the bra away to reveal her small breasts.\n\nCaroline's nipples were always sensitive, and stood out proudly from her small areolas. My thumb brushed back and forth over her nipple as I groped Caroline's left breast. She was the total center of attention, and she was absolutely loving it.\n\nWe stayed in our position for another minute or two, Caroline slowly stroking me, Elliott french-kissing my wife while rubbing her slit, and me kissing Caroline's neck and squeezing her boobs. \n\nElliott broke her kiss with Caroline for the first time in a couple of minutes. Both women giggled and took a moment to regain their breath.\n\n\"How about we give this stud husband of yours some attention?\" the young vixen asked.\n\nWithout waiting for a response, she stood up and pushed me back on the bed so I was lying down. Elliott shed her short leather jacket and got back on the bed, lying down on her side to my left.\n\nCaroline spun around and lay down next to me, keeping a grip on my cock. The two beautiful women were now on either side of me.\n\nI turned to my wife first. She leaned in and kissed me. I could faintly taste Elliott's cherry chapstick on my wife's breath. Elliott went to work undoing my shirt and stripped it off me, getting me as naked as my spouse.\n\nCaroline and I held the sensual kiss for a minute before I turned to my other side. Elliott was nearly straddling me. She had one leg thrown over my own and was pressed right up against me. \n\nI craned my neck and kissed Elliott. It was my first time in, God, close to ten years kidding a woman other than Caroline.\n\nWhat surprised me was how soft and full her lips were. I felt like I could just melt away right there. No wonder Caroline kissed her for so long.\n\nSpeaking of, Caroline was kissing my bare chest while continuing to stroke my cock. I was rock-hard, and it was really hard not to let myself go, especially while kissing Elliott.\n\nMy hands tugged on Elliott's top, untucking it from her skirt. She rose her arms and we disconnected momentarily as I pulled the top over her head. \n\n\"Holy fuck,\" I moaned when I got a good look at Elliott's topless body. \n\nHer boobs were glorious, better than Caroline's as much as it pained me to admit. They were quite big, probably a D, and extremely full and round. Her puffy nipples stood erect from her big, tan areolas. God, I could have worshipped those for hours.\n\nElliott giggled at my reaction. \"Go on. They don't bite. But you can.\"\n\nShe shifted up in bed so her chest was at the level of my head. I cupped her tits in my hand, squeezing the flesh and feeling the goosebumps dot her skin wherever I touched. \n\nI leaned in and took one of Elliott's nipples in my mouth. It hardened as my mouth came into contact with it, which combined with a fast stroke from Caroline, made my cock surge.\n\nMy tongue swirled around Elliott's nipple, making it fully erect, while my mouth sucked on the hard nub. Elliott groaned at the stimulation, and subtly ground her hips against me. Her boob was shiny with my saliva as I moved on to give the same treatment to her other breast.\n\nElliott's nipple was hard as a rock in a few moments, and I lightly bit down on it before breaking the seal of my mouth. Elliott gasped at the unexpected pleasure, and I continued squeezing and kissing her beautiful tits.\n\nCaroline's strokes were getting faster on my cock. Pre-cum leaked out of my tip and was quickly rubbed into my shaft by the stroking hand. I wouldn't be able to last much longer.\n\nElliott seemed to notice, and pulled away from me a little bit. She gave me another drawn-out, open-mouth kiss before getting onto her knees. \n\n\"Why don't you let me take care of that?\" she asked Caroline. Elliott crawled down between my legs on all fours. \"I think your husband may want a taste of you,\" she continued with a wink. \n\nCaroline let go of my cock and gave me a kiss. Elliott's hand immediately replaced Caroline's, teasing my shaft. \n\n\"Sit on my face,\" I instructed Caroline. I knew her pussy would be dripping, and couldn't wait to taste it. I had eaten out Caroline too many times to count in our many years of marriage, but every time it felt so new and amazing again. I couldn't describe it.\n\nCaroline giggled and slid her panties down her legs. She crawled up to my head, swung around, and straddled my face. \n\nJust as I had thought, Caroline's pussy was wet, adorned with beads of her natural lubricant. I moved my hands to her small butt and guided Caroline's slit down to my mouth.\n\nAt the same time, I felt a pair of heavenly lips wrap around the head of my cock. I couldn't suppress the groan. Elliott's mouth was sealed on my engorged helmet while her hand stroked the rest of my shaft. Her tongue snaked out and flicked back and forth over my tip. \n\nI shuddered from the sensation. I furrowed my brow, trying to stop from cumming. I wanted to last as long as I could. My attention turned to Caroline.\n\nI extended my tongue and pressed it against her clit. I circled the hard button a few times, knowing just what Caroline liked me to do. My tongue teased it briefly before shifting. I licked a long stroke down the left of her slit, just barely touching the outside of her labia. I made my way back up on the other side until I had arrived back at the patch of hair signifying the top of her slit.\n\nElliott began to bob her head up and down on my cock. Her lips felt amazing running along my shaft, pressing against each throbbing vein. She took more of my rod each time, before coming back up and sucking on my head. \n\nMy tongue moved further down Caroline's pussy, parting her lips. I reached her sensitive, wet hole and rimmed my tongue around. Caroline let out a groan, and ground her hips down slightly onto my face.\n\nI continued teasing her twat, alternating quick laps and long strokes of my tongue over her slit. More wetness oozed onto my waiting tongue, edging Caroline closer and closer to a climax.\n\nMy own orgasm nearly arrived when I felt a second mouth on my cock. Caroline had leaned over so we were in a 69. Her tongue ran over the bottom of my shaft, stimulating whatever areas Elliott wasn't reaching with her amazing mouth.\n\nElliott popped her mouth off my cock and kissed my tip. Her tongue reached out and she began to lick my cock as well. Two tongues slithered over my wet rod, working with the sole purpose to make me cum.\n\nThe two women seemed to work in unison, stimulating every inch of my shaft before moving back up to my head. They kissed each other through my cock, both sets of lips pressed to my surging rod. I felt saliva trickle down my shaft and to my balls.\n\nCaroline took my cock fully in her mouth, now reversing roles with Elliott. She bobbed her head up and down, filling the room with that unmistakable sucking noise. Elliott's tongue explored the bottom of my cock, teasing the underside of my shaft all the way up to Caroline's sealed lips and then down to the base again. I was so close to cumming. All I could do was keep licking at my wife's pussy and try to hold back.\n\nI had licked back up to Caroline's clit and clamped my mouth down on her erect nub. My tongue flicked back and forth over her clit, nearly emulating what she was doing to my head. The familiar tickle of her small tuft of hair and sweet odor of her pussy were heaven to me, taking me back to every time I had feasted on my beautiful wife before.\n\nTo my surprise, I felt a warm mouth take in my nuts. Elliott was sucking on the tender balls, running her tongue over them. The combined sensation of Elliott's mouth on my balls and Caroline's on my cock was too much for me to resist.\n\nMy dick pulsed and twitched in warning. I groaned into Caroline's pussy, sucking down on her clit even harder as an intense orgasm shook my body and electrified my cock. I exploded into Caroline's mouth, firing rope after rope of salty, warm jizz against the back of her throat and onto her tongue.\n\nThe world was spinning and I was having trouble thinking from the intensity of the climax. Slowly, it returned to normal, as the two women let up their efforts on me.\n\n\"Holy fuck,\" I groaned, taking my mouth from Caroline's pussy. She hadn't cum yet, but was clearly right on the verge.\n\nCaroline dismounted from my face and swung around so she and Elliott were kneeling on either side of me. The two women kissed fiercely and passionately. I could see my cum swapping between their mouths, spilling down their tongues and onto their chins. That nearly made me ready to go again.\n\n\"Hmm, tasty,\" Elliott moaned when they finished snowballing. She bent down and kissed the tip of my deflating cock. \"We're not done with you yet,\" she said. \"I think watching your wife eat me out would get your cock hard again, don't you think?\"\n\nElliott cocked her head to the side a little, making it deem like she had just asked a perfectly innocent and normal question.\n\n\"Fuck yeah,\" I murmured enthusiastically.\n\n\"How does that sound?\" Elliott asked Caroline, reaching out to cup her small boobs. \"Ready to taste your first pussy?\"\n\nCaroline took a deep breath. \"Definitely.\"\n\n\"Good,\" Elliott replied with a devilish smile. \"I'm already wet for you.\"\n\nI shuffled back a little, resting against the headboard to watch the show. Elliott took off her short skirt to reveal a pretty pink thong beneath. She shed that as well, joining the both of us in her birthday suit.\n\nElliott reached down and traced her pussy lips with a finger. She held it back up and pressed it to Caroline's lips.\n\nMy wife opened her mouth obediently before licking the liquid off Elliott's digit.\n\n\"Hmm,\" she moaned lightly at the taste.\n\n\"How about you try it from the source?\" Elliott rhetorically asked.\n\nElliott leaned back against the pillows right next to me. She spread her legs wide, brushing the outside of her thigh against my own. I didn't have a full view of Elliott's pussy from where I was sitting, but I could see most of the completely bare curve of her mound.\n\nCaroline crawled on her hands and knees between Elliott's legs. Her ass stuck up in the air and swayed as she moved, giving both of us a nice show. \n\nShe paused as her head lowered to Elliott's crotch. Caroline took another deep breath and placed her hands on the inside of Elliott's taut thighs.\n\n\"Ready?\" Elliott asked her.\n\nMy wife nodded her head in the affirmative. \"Just a little nervous. Not sure what I'm doing.\"\n\n\"Well, that's what I'm here for,\" Elliott said. She reached down with one arm, the one with the ink sleeve, and rested it reassuringly on the back of Caroline's head. \"I'll help you through it. Plus, I'm really wet already, so your job won't be as hard.\"\n\n\"Alright,\" Caroline responded. \n\nElliott applied a little pressure to her head and brought Caroline's mouth closer to her pussy. \"Start off by just teasing me a little. You don't always want to immediately dive right in.\"\n\nCaroline's mouth touched Elliott's pussy, and she officially went down on her first woman. \n\nShe applied a soft kiss to Elliott's slit, each girl's lips meeting the other's. Caroline lightly kissed up and down the slick mons, just barely teasing Elliott. I saw the dark-haired girl shiver a little when my wife's mouth brushed over her clit. \n\nCaroline continued slowly working her way over Elliott's pussy, running her tongue alongside the outside of her labia and kissing up and down her slit until she reached her midriff again. \n\nFor her part, Elliott's nipples were rock-hard, drawing my attention to her beautiful boobs. I reached out with a hand and took the soft flesh of her big breast and squeezed it lightly, trying to match the intensity of my other half.\n\n\"That's good, now concentrate on my clit,\" Elliott instructed. \"That's the most sensitive part, so you'll want to focus a lot on it.\"\n\nCaroline's mouth returned to the engorged button. Her tongue extended out and she licked back and forth over the clit a few times.\n\n\"Try circling it,\" Elliott said.\n\nCaroline obeyed diligently, wiggling her tongue in accordance with Elliott's instructions. I was pinching and twisting the younger girl's nipple, keeping it as hard as her clit.\n\nElliott let out a string of low moans from the attention being doted on her. She clearly wasn't too far off from a climax.\n\n\"Now suck on it a little too.\"\n\nCaroline shifted her mouth slightly and sealed her lips around Elliott's clit. I saw her cheeks draw in around it, applying pressure to the nub. Caroline was looking up at Elliott the entire time, seeking her approval perhaps. The loud whimper certainly signaled that.\n\nMy wife's mouth was wiggling around Elliott's clit. I couldn't fully see what she was doing, but it was clearly working. I reached further and took Elliott's other breast in my hand, feeling the goosebumps dotting her soft skin.\n\n\"Lick at my pussy too,\" Elliott said. \"You want to vary the stimulation up.\"\n\nCaroline wordlessly responded. She moved lower down, and her mouth was partially obscured from my view. I could see her head bobbing back and forth every so slightly, and figured she was lapping at Elliott's wet slit, trying to make the girl cum for her.\n\nTo my surprise, Elliott reached over to me with her free hand. She brushed her fingertips along my cock, which I hadn't realized was beginning to stiffen again. \n\n\"Keep doing that,\" Elliott said, her vision now turned squarely to me. \"Rub my clit too.\"\n\nHer hand wrapped fully around my cock and she slowly stroked it. Her soft touch and subtle squeezes were incredible, and I continued to grow harder.\n\nCaroline's mouth remained buried in Elliott's pussy, and one hand had moved to her clit. My beautiful wife was working hard, her fingers pressing down and rubbing the erect nub while her tongue wagged eagerly at the juicy hole in front of her.\n\n\"Do you like watching your hot wife lick my cunt?\" Elliott asked me. I nodded my head in the easiest answer I'd ever given. Elliott leaned in closer and gave me a soft kiss. Her hand stroked my cock faster, making me almost fully hard again. \n\nA squeal left her mouth and she pulled away from me. Caroline must have hit a particularly sensitive spot. \n\n\"God, yes, that's so good,\" Elliott moaned. \"I'm so close to cumming.\"\n\nHer stomach as tensing up, and her hand stroked my cock with a mind of its own. Elliott's other hand was pushing down on my wife's head harder, holding Caroline down against her pussy. \n\n\"Fuck yes, I'm almost there! Don't fucking stop!\"\n\nCaroline's hand flitted faster over Elliott's clit. Her face was red from working so hard, and I could just barely make out her tongue thrashing over Elliott's hole.\n\n\"Oh shit, here it is! I'm cumming!\" Elliott squealed. \"Fuck!\"\n\nHer body exploded in orgasm, convulsing and twitching on the bed. Her thighs clamped shut around my wife's head, and her grip on my cock tightened immensely. \n\nElliott screamed out a string of unintelligible moans, a scarlet red taking over her chest and cheeks. Caroline's head bobbed up and down, working furiously to lap up every drop of the sweet nectar oozing from the girl's pussy.\n\nThe aftershocks of the orgasm rode through Elliott, but she slowly began returning back to normal. Watching Elliott cum on my wife's face and slicking her chin in juices was an incredible turn-on for me, and I was completely hard and ready to go again.\n\n\"Holy fuck,\" Elliott groaned, still coming down from her orgasmic high. \"That's pretty good for a first time,\" she encouraged Caroline.\n\n\"Thanks,\" my wife sheepishly replied. She sat back up and wiped her wet lips with the back of her hand. \"I didn't realize how hard you have to work going down on me,\" she told me. \n\n\"Don't worry,\" I replied with a smile. \"Making you cum is worth it.\"\n\n\"I think I'll have to give that a try,\" Elliott said. \"It's only fair. To re-pay you.\"\n\nA broad smile engulfed my wife's face. \"Yeah. It is only fair.\"\n\nElliott gave my cock another quick pump. \"Don't think I've forgotten about you. A tongue's not all I expect in my pussy tonight.\"\n\nIt was my turn to become excited. I pushed myself up onto my knees, waiting for more directions from Elliott.\n\nShe made her way to the edge of the bed and lay down on her back. Her butt was nearly hanging off the edge of the bed. \n\n\"Come sit on my face,\" she told Caroline. \"And you have the other end,\" she directed to me.\n\nI moved off the bed and walked to Elliott. Her pussy was a beautiful pink, and still wet from the orgasm. I ran a finger through her meaty folds, teasing down to her hole. This would be incredible.",
        "Caroline crawled on top of Elliott on her hands and knees. Her ass was facing me, giving me an excellent view of my wife's pussy and our shared escort's eager tongue.\n\nElliott's hands rested on Caroline's ass and pulled her hips down to her face. The younger girl licked through my wife's folds, tasting her juices. Caroline hadn't climaxed yet, and, judging by the wetness of her pussy, it wouldn't take Elliott long to make her cum.\n\nI grabbed my hard cock again and brushed my head against Elliott's pussy, running it up and down the length of her crotch. She moaned a little as I pressed down on her clit, waiting to actually be penetrated.\n\nI teased her clit for a minute before moving back down again. The tip of my cock spread apart her lips and I found myself pressed against her opening. I steadied my dick and pushed forward, sinking my head into Elliott's pussy.\n\n\"Oh shit,\" I groaned. Elliott's twat was warm and felt surprisingly tight. I moved my hands to her waist and slowly pushed more of my length inside her. \n\nElliott's busy mouth worked away diligently on Caroline's pussy, but I could hear a muffled whimper as her snatch was filled up. She subtly shifted her hips back, coaxing more of me into her.\n\nI had most of my shaft inside Elliott already. Her slick channel fit around my cock perfectly, squeezing it tight and rubbing against every ridge of my dick. Considering that I hadn't been inside a vagina other than my wife's in close to ten years, it was safe to say I was savoring every square inch of Elliott's snatch.\n\nI slowly pulled out, leaving just an inch or two of my cock inside Elliott. Her pussy seemed to grip my cock, begging for more of it. I slid back in, Elliott's natural lubrication making my job much easier.\n\nMy pace gradually increased as I started to fuck Elliott. I pumped deeper into her each time, slowly working my way up to feeding her my entire length. Elliott's body rocked back and forth in rhythm with my thrusts. Her big boobs jiggled around, making my view even better.\n\nTwo sets of moans were filling up the room. Elliot groaned into Caroline's pussy as she continued licking and sucking on it. Caroline herself was loudly moaning and grinding her hips down on Elliott's face. She clearly was very close to her climax.\n\nI moved one hand to Elliott's clit. My thumb pressed down on the hard nub, causing her to squirm a little more. \n\nCaroline arched her back and her moans stopped. She looked back over her shoulder at me, mouth open but nothing coming out. A small whimper escaped her throat, her pretty eyes begging for that sweet release. I smiled at her, and she smiled back. \n\nHer eyes rolled back in ecstasy as Elliott's magical tongue continued working, and she turned back around.\n\nMy cock was plowing into Elliott's pussy, maintaining a constant pace. I was pulling out most of the way each stroke before thrusting back in balls-deep. The sound of our flesh slapping together joined the cacophony of lecherous noises in the room, and Elliott's body lurched forward with every powerful pump of my hips.\n\nHer own pleasure was making it difficult for her to eat out Caroline, but my wife was too far gone for it to really matter. Her whole body was shaking, her toes were curling up, and her continuous moans were much louder. She was about to cum.\n\nI really wanted to make Caroline's climax one she would remember for a long time. I knew what she absolutely loved to have done whenever I would eat her out.\n\nI leaned forward and reached out with the hand not strumming Elliott's clit. I gripped my wife's butt, jiggling as she gyrated her hips on Elliott's tongue. With my thumb, I found her puckered ass and quickly pushed in.\n\n\"Oh shit!\" Caroline gasped. I thrust my thumb as fast as I could into her butt. It only took five strokes before her muscles tensed up. \"Oh god, I'm cumming!\" she squealed. \"I'm cumming!\"\n\nCaroline's hips bucked against Elliott's wagging tongue and the orgasm overtook her body. She twitched and shook, and I could see her juices leaking out onto Elliott's face, dousing the young girl in the sweet nectar.\n\nCaroline rolled off of Elliott, lying on the bed next to her and looking up at me. Her chest undulated, her small breasts rising and falling in accordance with her slowing heart beat. She was in total bliss. Elliott must have been really good at eating pussy. Maybe I needed to get some tips from her.\n\nI continued fucking Elliott, increasing my pace slightly. Her legs wrapped around my back, forcing me into her further. My fingers rubbed her clit faster, and the hand that had sent Caroline over the edge strayed to Elliott's big, bouncing tits.\n\n\"Fuck,\" Elliott moaned, her mouth free for the first time in a few minutes. \"Don't stop. Fuck me harder!\" she pleaded.\n\nThere wasn't too much more I could do, but I tried to increase my pace. Only my head remained in Elliott's warm hole whenever I withdrew, before I sank my whole length in her every time I thrust in. \n\nElliott was whimpering and her eyes were closed. Her pussy was pulsing around my cock, nearing a release. I fucked her twat faster and faster, railing my cock in and out of her slick channel.\n\n\"Fuck, you're gonna make me cum,\" Elliott groaned.\n\nCaroline moved from her previous position of voyeur, kneeling next to Elliott. She reached down to the girl's clit, brushing my hand away. Her dainty fingers danced over and played with the engorged button, and her other hand massaged Elliott's boobs.\n\nMy hands were now free, and I gripped Elliott's hips. I now had more leverage, and fucked her with a renewed intensity. I had full control of Elliott's body, and could practically slam her down on my cock with each thrust. Caroline rubbed her clit at the same pace I was fucking her, and Elliott was unable to resist our teamwork.\n\n\"Holy shit, I'm cumming!\" she screamed, gripping the bedsheets tight in her hands. \"Oh fuck!!\"\n\nThe climax slammed into Elliott, rocking her entire body. Her cunt squeezed and tightened around my cock, bathing the slowing shaft in its wonderful secretions. Her toned abs and thighs were tensed, and her mouth hung open. \n\nElliott looked amazing in the throes of an orgasm, and her pussy felt even better around my dick. I was not far from cumming again myself; the first time I came was probably the only reason I had been able to last that long inside of Elliott. \n\nI slowly withdrew my cock from her. It was shiny, covered in her juices. A fire shone in Caroline's eye as she looked at my shaft. I climbed up onto the bed and presented my cock to her. \n\nCaroline leaned forward and took the erect rod into her mouth. She slurped over my shaft, licking every single inch with her tongue. When she cleaned me off, she pulled back, strings of saliva staining her cheeks and chin. \n\n\"Now it's my turn on that cock,\" Caroline said, taking the initiative for the first time. I leaned back on the bed, my member sticking straight out and waiting for Caroline to mount it.\n\nCaroline bent down and took my cock in her mouth again. She looked up at me, gently brushing her hair out of her face while her head bobbed up and down. She was so beautiful, and I was so lucky to have her as my wife.\n\nShe took most of my cock before pulling back, letting a string of saliva drizzle out onto my cock to further lube it up. She stroked my cock as she moved to her knees and straddled my waist. \n\nCaroline's pussy was still fresh from an orgasm, and I could see it almost dripping in anticipation of my cock. I was ready to burst too. She positioned my cock and slowly lowered her hips. My head spread apart her folds and slipped into her pussy.\n\nGravity did the rest. Caroline let herself go, and rested her hands on my chest for support. Her twat slowly slid down my shaft. I knew Caroline loved feeling every inch inside her, fully filling her up. That's why she loved riding me. \n\nWith one final movement of her hips, Caroline ground fully onto me. Her cunt was as sweet as I could remember, maybe better than normal. It was tighter than Elliott's too, gripping my cock perfectly.\n\nShe looked down at me and a sexy smile flashed over her face. She picked her hips up and began to ride my cock, slowly at first. That's how she always liked to start.\n\nCaroline had full control over the pace and rhythm, although she loved it when I started fucking her right before she came. Her hips ground back and forth, sliding the ridges of my cock against the walls of her pussy. I groaned and rested my hands on her hips. \n\nI heard Elliott moving again when she knelt next to my body. She reached a hand to Caroline's boobs, gently pinching and teasing her nipples. The two women came together in an electric kiss before Elliott broke it and turned to me. \n\nShe ran a hand over my chest, feeling the pecs that I wished were a little more firm. Elliott crawled around the bed and swung her hips over my head, cutting off my view of my wife. \n\nI wouldn't complain about the one that had replaced it though. My hands moved from Caroline to Elliott's ass, pulling her down further onto my face. My tongue extended out and licked over her folds, slick with her arousal.\n\nCaroline's pace was increasing slightly. She gyrated her hips over my cock, really riding me as best she could. Each time she took all of me, her clit rubbed against the base of my torso, and my balls rested against the bottom of her ass. It was a familiar feeling, one that I hadn't felt in far too long. I was so glad we had decided to do this.\n\nElliott had leaned forward, and I felt the angle of my cock shifting in my wife's pussy as well. I couldn't see, but from the sounds of muffled moaning, it sounded like the two women were kissing again. I was concentrated on licking Elliott and enjoying the ride from my wife.\n\nMy tongue darted around Elliott's freshly-fucked pussy, licking at her still-gaping hole. Every lick brought more of that delicious juice onto my tongue. I never understood guys who wouldn't eat a woman out. To me, having my face buried between my wife's legs was pure heaven. \n\nCaroline was riding faster, slamming herself down onto my shaft each time. Her hands pushed down on my chest harder, supporting her whole undulating body. Her pussy felt so amazing on my cock. I had to try and concentrate on literally anything else to avoid finishing. \n\nCaroline's pussy was making my shaft slick with her juices. Each time she powered down onto me, I could faintly hear the squishing of her wet twat. Elliott was in the same situation, especially as my mouth sealed around her clit.\n\nMy eyes couldn't really see any of Caroline, but I felt a hand by my crotch. I took a moment to peek between Elliott's legs. She was rubbing at my wife's clit, occasionally brushing against my cock whenever Caroline brought herself up. My wife's louder squeals told me whatever Elliott was doing was working. I knew it wouldn't be long until she wanted me to fuck her. \n\nThe sounds of our flesh slapping together was much louder now. Caroline was really grinding onto me, riding me with everything she had. Her pussy was squeezing onto my cock, trying to feel more of it and keep it inside her. She was close to an orgasm.\n\nI let her keep riding me for another minute or two before I took action. I moved my hands back to Caroline's hips, gripping tightly this time. I held her in place, mounted on top of my cock. She stopped riding me, knowing what was coming. I closed my eyes and pounded up into her cunt as hard and as fast as I could.\n\n\"Oh, fuuuck,\" I heard her groan. Her pussy pulsed around me, and Elliott's hand was feverishly rubbing her clit. \n\nMy entire cock slammed into Caroline again and again, wrecking her tight pussy just the way I knew she loved it.\n\n\"Holy shit, I'm gonna cum!\" she whimpered.\n\nI gritted my teeth together, trying to muster another ounce of stamina and power. One last thrust into Caroline, and she exploded in orgasm.\n\n\"Oh my god! Fuck, I'm cumming!\" she squealed. Her pussy drenched my cock in juices and tightened around my shaft. It was too much for me to resist. I groaned and thrust as deep as I could into her cunt one last time.\n\nMy cock erupted, spewing spurts of cum against the back of Caroline's pussy.\n\n\"Oh, fuck yes,\" she contentedly purred as her cunt was completely filled up. I pumped a few more ropes of jizz into her before my load slowed and tapered to an end. \n\nElliott rolled off of me as Caroline collapsed down onto me. I hugged her as she kissed me, my deflating cock still sheathed in her warm pussy.\n\n\"Holy fuck,\" I groaned once our kiss ended.\n\n\"I know,\" Caroline giggled. \"That was fucking amazing.\"\n\nElliott lay next to us, and Caroline pulled her into a passionate kiss as well. Watching the two women kiss not even a foot in front of my face sent another jolt to my cock, although I figured I'd need quite a while before I was ready to go again.\n\nThe two girls broke their embrace, and Elliott turned back to me to reciprocate the favor. Her soft lips pulled away from mine after another minute. Caroline rolled off of me, emptying her pussy. My shaft was coated and shining with her pussy juice and remnants of my own load, which would no doubt take Caroline ages to get out. Neither of us cared in that moment though.\n\nElliott and Caroline lay on either side of me, an arm wrapped around both. \n\n\"So,\" Caroline started, \"how much longer do we have you for?\"\n\nElliott smiled. \"I'm your toy for the rest of the night.\"\n\nCaroline and I shared a knowing glance. \n\n\"How much longer can you go for, stud?\" she asked.\n\n\"I'll try to keep up.\"\n\n***\n\n The next morning \n\n***\n\n\"Holy fuck, I'm cumming!\" Caroline yelled. I was a second away from exploding myself. \n\nI pounded into her again. She was bent over the side of the bed, giving me perfect access to fuck her as hard as I could.\n\n\"Aw shit,\" I groaned. \n\nElliott detached her mouth from my wife's erect clit.\n\n\"Cum on my tits,\" she commanded. \n\nI pulled out of Caroline's sopping wet hole. Elliott immediately took my cock in her mouth and bobbed her head up and down, ramming the head of my cock against the back of her throat.\n\nMy balls surged with cum, tingling from the intense wait. At the very last possible second, Elliott pulled back and cupped her big, beautiful boobs.\n\nI aimed my cock at her chest and stroked once. My load rocketed out, the first rope shooting squarely across her tits. The rest fired out onto her boobs as well, generously coating Elliott over her chest and rack in ropes of my cum. \n\nI leaned forward, letting my body collapse onto Caroline's back. I kissed the back of her neck, my cock nuzzled up against her pussy. Elliott's eager tongue licked at my cock head and Caroline's pussy lips. We were completely spent.\n\nI picked myself up fully onto the bed and laid down. Caroline grunted and picked herself up, her breathing returning to normal, although her cheeks and chest remained flushed a bright scarlet. \n\nShe stroked my cock gently while Elliott clambered up to join us as well.\n\n\"I need a fucking shower,\" Caroline groaned. \n\n\"Me too,\" I concurred.\n\nElliott smiled. \"I should get going soon. But before then, does your shower fit three?\"\n\nHer hand moved to my cock as well, stroking it in unison with my wife.\n\n\"What do you think?\" Caroline asked me. \"Do you have one more load in you?\"\n\nI sighed, and my cock lurched against their hands in response.\n\n*********\n\n Please remember to vote 5 stars and favorite the story if you liked it. There are probably a few spelling errors: my spellchecker is awful and my proofreading is not infallible. Please also give me constructive feedback and let me know what you liked or what you thought could have been better. It's how I can improve as a writer and do better in the future.\n\nComment below or send me a message through the feedback feature if there's anything you want to see in my stories. "
    ],
    "authorname": "CMK877181",
    "tags": [
        "big tits",
        "blowjob",
        "creampie",
        "escort",
        "group",
        "lesbian",
        "married",
        "threesome",
        "wife"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/our-threesome-fantasy-pt-01"
}