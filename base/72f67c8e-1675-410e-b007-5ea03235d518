{
    "title": "My Prostate & Me: Alone Together",
    "pages": [
        "For my fans: You'll notice no number on this story, and that it's in the Toys & Masturbation category. The reason for this is that it's just me & my prostate right now, not in the past. The general tone of the story is pretty sad, but it improves, much like life.\n\n\n\n\nTimes have changed. I'm 40, unemployed, and living with a family member since the wife left. Hell, my dog even died. I'd say I'm living a country song, except I still have my truck (who knows for how much longer). To top it off, due to hard living, I can barely get it up anymore.\n\nI decided to masturbate today. No big surprise, I try every day. Yesterday, I gave up after 2 hours & a sore wrist. I broke open the old toy chest, and thought I'd see what toy I'd try. Used the silver bullet yesterday, so I'd try something different. Here we go...the probe. My ex's favorite. I used to use it on her clit while I'd eat her & finger her g spot. Made her squirt. Good times.\n\nToday, it's going to be used for the original purpose. It's an odd toy \u2013 big handle, thin neck, and on the end it has a bulb about 7/8 of an inch by 3 inches. I squeezed on a bit of KY, and began to massage my hole. On the laptop, an internet porn of Tory Lane & another girl naked & fighting. Nice. \n\nSlowly I started pushing on the probe. My ass resisted a bit and then relented. Got the bulb in, and a bit of neck. Vibrating slow...I love that feeling, when my butthole gives in, and the toy slowly slides in. It's seems to want to stop there today. No big deal. It feels nice where it is. My dick is now in semi hardness, sadly where it usually is for my masturbation sessions.\n\nLast week, I managed to cum, or what passes for it. The silver bullet (7 by 1 inch) got my prostate just right, and I squirted. Not a big orgasmic rush, but a relief. Today I want to cum hard. I need it. I'm backed up here.\n\nAs I watch the porn, the girls are done fighting. The designated dick is wearing torn jeans, and is shoving two fingers in each greasy girl's ass. This is damn good. I need to save a copy of this one. The probe is vibrating, and I'm feeling into it. I reach back, and turn it up. That's good. Feel into it. As I change positions, my heel catches the base of the probe. Whoa Nellie, that's good. My cock surges a bit closer to hard. \n\nI try pushing the base with my heel. It goes in further and hits the prostate in a way that's pure dynamite and the flag slowly raises under my stroking hand. Oh, how I've missed you old friend. I stoke slowly, buzzing directly on the magic button.  I don't want to cum. I don't want to stop, but I need more. I feel incredibly good. But my ass is hungry.  Reach into the toy chest, still open next to the bed. Rummaging around, sight unseen, out comes the silver bullet.\n\nA little KY, and a quick swap. I feel good, but the pressure isn't on my prostate, and my erection begins to wane. I grab a pillow, and roll over on it...and it sinks deeper in my ass. I wiggle a bit, and I can feel the lines on the base bite my balloon knot. Gotta stop pushing or I'll lose it. My dick has reversed course. I'm stoking slow & easy, and I'm in that magic zone, where I don't want to come yet. \n\nI open my half closed eyes, and check out Tory. The guy has his cock out, and it just needs a hand grip to be a baseball bat. Good god. Both women are eagerly sucking. I rummage in the toy chest looking for the blackjack. The Blackjack is a toy I purchased about 2 months ago, when I was feeling the need for a real fucking. It's a double headed dildo, 12 inches long by an inch & half wide. I've had it about 7 inches in, and it felt pretty darn nice. It's heavily textured, and you can feel it move, unlike the smooth silver bullet.\n\nA bigger blob of KY then planned, I rub it down on blackie, as it's long anyway, and maybe it will smooth out the ride. I pull out the bullet, and just drop it, in goes the blackjack. The extra 6 inches or so flexes under me. On the screen, the baseball bat is about to go into the other girl's ass. I check the screen. Dana DeArmond. Nice... tattooed bald snatch. Tory leans over her with her nipple piercings dangling. This is DEFINITY going in the porn folder. \n\nAs the porn cock goes in the ass, I move trying to get comfier. The forgotten silver bullet is now vibrating on the blackjack. I rise to full tumescence. I reach down to stoke, and my hand still has lube from blackie. Jesus, that's so good. I arch up, and sink down, catching the protruding end of the dildo on the pillow. I rise up again, and trap the head on the pillow. I begin to pump up and down. I'm fucking myself! Why haven't I thought of this sooner; it's fucking fantastic!\n\nI go to sink down again, and I realize I'm hitting the pillow. I've got to have nine inches of rubber in my ass. A few months ago I put an ad on Craigslist, trying to find a she male to fuck me, as I've wanted to try a real dick. I was contacted by a guy with what appeared to be a large dick. I decided to go for it, and then chickened out; I couldn't take the biggest toy I have, not more than the head, anyway, and decided I wasn't ready.\n\nNow with nine inches of cock in my ass, I wonder. I roll on my side. And I go to push blackie with the bullet, to get the vibration I need on my prostate. And blip....my anus closes over the other cockhead.\n\nWTF! I guess I got more than nine inches of cock in there...It's a full twelve. God, I'm a fucking male ass slut. I open my eyes and look at the screen. Dana is screaming with pleasure as Tory eats her pussy while the cock fucks her. \n\nIf she can do it, so can I.\n\nI reach into the toy chest & pull out the red bag. Open it up, and pull out the \"real cock\" Eight inches long, about two inches wide, flaring to two & a half at the head, and ending in balls with a suction cup base. I got it partially in my ass once, and it came away with a streak of blood, and I stopped trying. Now with twelve inches of cock stretching my ass, I decided to go for it.\n\nA squirt of KY on the tip and in it goes. I arch up over the pillow, the head stretching my hole slowly. I look over at the laptop for inspiration. Tory has that thing in her shitter now. I sink down. There's a bit of pain, but I push.  I've got the head. Check the laptop as I stroke just my cockhead. Holy crap...he's balls deep! \n\nI then just push down, and in it goes. No pain. Just incredible pleasure. I've got maybe four inches in, and it stops again. I've read that we have 2 sphincters in the anus, and the internal is involuntary. I push against the pillow, and in it sinks, the balls resting on my ass cheeks. I reach down, and grab its remote, and turn it's vibrator to full blast\n\nI reach down, and stroke my cock, which is the hardest it's been in years. Just a bit of stroking and my orgasm hits. For those of you who have had an anal orgasm, you know what I'm talking about. My whole body shakes from my head to my toes. The dildo squirted out of my ass from the clutching of my orgasmic bowel. My cockhead hurts from the semen shooting out.\n\nI lay there afterward, my whole body feeling like its vibrating. I needed that cum. I look at my hand. It's covered in semen. I don't remember shooting that much in ten years. I look over at the laptop. Tory & Danna covered in cum. Not just the stars though. \n\nI hit the laptop 2 feet away with a glob of semen!\n\n\n\n\nOk dear readers. This is a true story. I literally cleaned up, and wrote it. I just took the big 'un and lived to cum about it. Now I have a favor to ask. I always tell you to vote, and to comment, and I usually pull just under a 4.5 and 2 comments. Here's the deal. If I get higher than a 4.5, and 5 comments, I call the guy I mentioned, and I get ass fucked. I'll bring along this girl I know who's a sub, and three of us, and a little blue pill and some toys will go for it, and results will be my next story.\n\nIt's on you."
    ],
    "authorname": "lord_jefe",
    "tags": [
        "anal",
        "prostate",
        "masturbation",
        "cumshot",
        "dildo"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/my-prostate-and-me-alone-together"
}