{
    "title": "You Get What You Paid For Ch. 04",
    "pages": [
        "I can't pretend like I feel like everything is okay. I get the sense that something is off, from Adam's strange quietness to his unceremonious disappearance. It didn't sit right with me. So the first thing I do is text him: \"Hey, how much do I owe you for last night?\" I hesitate before adding his name after the \"Hey\" to make it seem more personal or lighthearted or... something. Then, I hit send.\n\nAs soon as I hit send, though, the hope that my text will initiate some sort of dialogue is quickly dashed. He doesn't have his phone. Unless he happens to find it, I can't expect an answer. Where did he even lose it anyway? Did he leave it at that creep's house along with his keys and wallet? And where did he go anyway? Can he expect to get into his apartment? Is that where he's even going? Fuck, I'm stressed. I hate leaving things unresolved, and the fact that I have no way of contacting him is amplifying my anxiety. \n\nThen I remember: his email. He logged into his email on my computer last night to show me a clip of him and his jazz band and never logged out. I scramble to grab my laptop and am somewhat relieved to find that he's still logged in.\n\nI bite my lip. This is clearly his personal email and not his work email. It's incredibly tempting to invade his privacy, but I resist. I just hit \"compose\" and draft up something quickly: \"Hey Adam, it's Teddy. You left your email logged-in on my laptop, so I'm sending this message with the hope that you'll get back to me. Just want to make sure everything's okay. If you need any money or anything, please let me know.\" I debate whether or not to sign off with \"Love, Ted\", but in the end, I forgo an official signature altogether, just tagging my email address at the end of the message. I send the email to himself so that next time he logs in he'll see it. Then, to avoid all temptation, I log out of his email and shut my laptop - not before I rewatch the video of his band he downloaded onto my computer. I let his vibrant music blare through my speakers, and I smile when Adam's solo comes up. If I thought escorting was his element before, clearly I was dead wrong. He was meant to play the sax. He's the type of musician that feels every single note he's playing, every flourish, and he's having a damn fun time doing it. \n\nAfter watching the video a couple times, I shut the laptop and sigh. Then, Maxi jumps up on the bed and meows at me, probably with a mix of disdain and a need for attention. I smile at her a little, beckoning her closer so I can pet her. She emerged now that Adam is gone. She's incredibly skittish and wary of other people, so I scratch behind her ears in apology. \"Now we wait, Maxi,\" I say as she purrs from my touch. \"Now we wait.\"\n\n~ ~ ~\n\nSix days go by without a response. I even check his escorting profile to see when he was last online, and it turns out he hasn't logged in since a few hours prior to me seeing him. What the hell is he doing if he's not working? Is he okay? It drives me insane. I can't focus at work. I can't sit idly at home. I keep cancelling plans with Jackson because I know all I'll be thinking about is Adam and the fact that there's nothing I can do. I don't know where he is, or where he lives. I can't track him down without going full private investigator on his ass.\n\nThen, as I'm boiling water at work for my Cup of Ramen, I get a text from an unsaved number. I squint, ready to pass it off as a telemarketer or some weird scam until I notice the context, and my heart races as I open the message: \"Hey Ted, sorry I didn't get back to you sooner, but I'm okay, no need to worry\".\n\nI read the message maybe a dozen times and still don't know what to make of it. Even though he didn't explicitly say it was him, I know it's Adam. Who else would be sending me this message? It warms my heart to finally get a response, but at the same time, the text sounds so distant to me. It's like he sent it not to start dialogue but to get his message across as quickly and concisely as possible. No details. No crazy, upbeat retelling of his adventures in presumably getting a new phone, possibly new keys, maybe even a new set of credit cards. Nothing. And what about his ribs? He says he's okay, probably in a general sense, but what does that actually mean?\n\nSo I respond: \"Are you sure? Do you need anything?\" I want to offer my help in any way I can. But again, I'm left in the dark. Adam doesn't respond.\n\n~ ~ ~\n\n\"Don't reach out to him again.\"\n\nI sigh. I knew Clark was going to say that, but a tiny part of me hoped he would switch it up this time. \"But what if he needs me?\"\n\n\"Teddy,\" Clark says with a warning tone. Even through the phone, his voice cuts right to my core.\n\n\"I know,\" I say bitterly.\n\n\"Every time you mention this guy, I get this sinking feeling in my chest.\"\n\n\"He's not a bad guy,\" I tell Clark. \"I promise. You'd like him if you met him.\"\n\n\"Is that ever going to happen?\" he questions.\n\nI bite my lip. \"I don't know,\" I say softly into the receiver.\n\nI hear Clark let out a deep sigh. \"Where are you right now? Out of work yet?\"\n\n\"Just waiting to pick up some food,\" I say. I've been standing in line for a few minutes now, waiting to pick up my order.\n\n\"Don't tell me it's pizza.\"\n\nI wince slightly, eyeing the slices behind the glass. But I didn't come here for a couple slices. I bought a whole pie. \"Um... No?\" I say unconvincingly.\n\n\"Teddy-\"\n\n\"All I wanna do right now is eat an entire pizza and not think about anything. Sue me,\" I tell him, loudly enough for the girl standing nearby to smile.\n\n\"You should come visit,\" he says. \"Take off work tomorrow. Take your mind off this boy.\"\n\n\"You know he's my age, right?\" I say, smiling at his choice of calling a twenty-seven-year-old a boy.\n\n\"You're still a boy too,\" he says.\n\nI laugh before sighing. \"I can't,\" I say. As much as I'd love to visit Clark and his family on Long Island and just relax for a solid thirty-six hours, I have too much work to do tomorrow. Promotions don't come easy, and my lack of focus is already making things difficult. \"I want to, though.\"\n\n\"I know, Cub,\" Clark says softly, making me smile.\n\n\"I miss you.\"\n\nHe laughs. \"I miss you too.\"\n\n\"When do you come back again?\" He's been in Long Island for a little over a week now, and I think the separation is making dealing with this Adam ordeal much harder. I didn't want to bother him on his family trip with my emotional nonsense, but when he called me up on my walk home, he eventually brought up Jackson. That's when I spilled everything. I told him about Adam being injured and showing up at my apartment, us having spontaneous sex that I still haven't paid for, Adam's disappearance and near-total lack of communication, my worries, my regrets... I laid it all out there without once mentioning Jackson's name.\n\n\"The weekend,\" he says. \"Think you can hold up 'til then?\"\n\n\"I'll try,\" I say with a slight laugh.\n\n\"Good boy,\" he says, chuckling to himself. \"I'll let you go. Don't eat that whole pizza, you hear me?\"\n\n\"No promises,\" I mutter before smiling and telling him I love him. Then we hang up.\n\nI only have to wait a minute for my pizza to be ready, and after I pay, I head straight towards my apartment. Weirdly enough, the most excitement I've had all week is over this Sicilian pizza. My mouth is salivating the entire walk to my building, my stomach growling in anticipation. It's been a long, long, long fucking day, and I look forward to collapsing on the couch with a slice in each hand. I plan on stripping down and putting on a stupid horror movie, or some corny rom-com - anything to distract me from my thoughts. Maybe Maxi will cuddle with me, but it seems even she's been a little moody lately. \n\nOn my way into my building, I grab my mail from my mailbox and just place the four or five letters on top of the pizza box so that I can carry it all upstairs. However, the top piece of mail catches my attention. It doesn't look official by any means. In fact, it looks personal. It's an envelope with my name and address handwritten on the front of it, with no return address in the upper left corner. I look at it curiously, suspiciously.\n\nI open it right then and there, one hand propping up the pizza. When I finally tear open the envelope, the minimal contents surprise me. All there is inside is a piece of paper. A check, it looks like. And when I pull the check from the envelope, my eyes go wide: $3,200, made out to none other than me. Who the hell is sending me this much money?\n\nI look at the upper left corner to see only one thing I recognize: the name \"Adam.\" I don't know Adam's last name, and the address is not even in New York, so it could be anyone. But I don't know any other Adams. I can only stare in confusion. What the fuck is going on? Why did Adam send me three grand?\n\nAs I wait for the elevator to come back down to the first floor, I pull out my phone and dial the unsaved number Adam had texted me from. \"Pick up,\" I mutter, listening to it ring once, then twice, then three times.\n\nI start to get nervous as I enter the elevator and make my way up to my floor, but finally, Adam answers. \"Hello?\" he asks. It's undeniably his voice, and I feel this weird mix of relief and rage.\n\n\"What is this?\" I say, staring at the check I placed on top of the rest of my mail.\n\n\"Teddy?\" he asks. \"Is that you?\"\n\n\"Yes, it's me,\" I say.\n\n\"What are you-?\"\n\n\"What is this, Adam?\"\n\n\"I- What is what?\"\n\nI roll my eyes at myself. He can't see what I'm looking at. \"Someone sent me a check for over three grand.\"\n\n\"Oh.\"\n\n\"It's you, right? 'Adam Sullivan'?\"\n\n\"So it got to you okay?\" he says, sounding strange. \"That's good.\"\n\n\"Why are you sending me so much money?\"\n\n\"It's all the money I owe you for our sessions,\" he says after a pause.\n\n\"Owe-? Huh?\"\n\n\"I don't think it's exact,\" he starts to explain, \"because I'm pretty bad at keeping an accurate ledger, but I did the best I-\"\n\n\"I don't understand,\" I interrupt.\n\n\"Understand what?\"\n\n\"Why you're giving me my money back!\" I say. \"Is that what's happening?\"\n\n\"I don't want it,\" he says.\n\nThe elevator opens, but I find myself frozen in place, not wanting to distract myself with movement. He doesn't want my money all of a sudden? \"Why not?\"\n\n\"Because it's yours.\"\n\n\"Are you kidding?\" I ask him. \"I paid you. It's your money.\"\n\n\"It's not right for me to take it,\" he says softly.\n\n\"How is- Huh? I'm so confu-\"\n\n\"Just take the money, Teddy,\" he says firmly.\n\nNow I'm mad. \"Just take the money? You disappear for an entire week, leaving me worried as all fuck about you, and you won't even tell me why you're giving me all this fucking money back?\" I feel fired up, red and heated. I don't appreciate his distance, or his vague use of words, or this lack of clarity. \"What the fuck is going on?\" \n\nThere's a long pause before he speaks again. \"Can I see you tonight?\" he asks suddenly, his tone completely switching from awkward to sure of himself.\n\nI blink. Now he wants to see me? \"Um. I guess...\" I say slowly, totally caught off guard and completely uncertain as to what he wants.\n\n\"Can you come over?\"\n\n\"To your place?\" I ask, surprised.\n\n\"Yes.\"\n\n\"I... Um...\" I'm about to be a stuttering mess. This is just surprise after surprise. \"Now?\"\n\n\"If you're free,\" he says. \"We can talk it over.\"\n\nI gulp, glancing at the check. \"It's not this Connecticut address, is it?\"\n\n\"No, no,\" he says. \"My apartment. I'll text you the address.\"\n\n\"Uh...\" I hadn't expected to see him. I'd hoped for an explanation, sure, but this is more than I had anticipated.\n\n\"Can you come?\"\n\nI cover the receiver as I let out a long, deep exhale before saying \"Yes.\"\n\n~ ~ ~\n\nI thought Adam would have a snazzier apartment because of his high-end taste in clothing, so I'm surprised by the fact that he lives in a brownstone deep in the heart of Harlem. It doesn't look like much on the outside. In fact, it looks like nothing. But walking up the decrepit steps to the fourth floor and passing by vibrant murals and older, friendly tenants who are lounging on the staircases listening to blues reminds me of words Adam used to describe jazz: unexpected, imperfectly perfect, the embodiment of life. I get that sense just from the building, and the few residents I say hello to.\n\nWhen I get to Adam's door, it's already partially open. I poke my head in and call out his name. \"Adam?\"\n\nI peek around briefly, my eye drawn to large posters of what look to be famous jazz musicians hung up on his wall before I hear someone moving around. I half-step into the apartment and crane my neck around the door to see Adam in the kitchen, dressed in plaid pajama pants and a t-shirt - the most casual I've ever seen him. His hair looks less tidy than it usually does, but overall, he looks good. Very good. I hate that my chest swells up at the sight of him, because part of me just wants to be angry.\n\nAs he adds what look to be chia seeds to a blender, I clear my throat. He turns his head towards the noise and then smiles. \"Ted! You came!\"\n\nI can't help but smile as I step inside. \"Of course I came,\" I say, shutting the door. I'm surprised when he walks over and gives me a hug, but it's over before I know it.\n\n\"Find it okay?\"\n\n\"Yeah,\" I say as I look at him. He looks much better. The bruises are fading, and there's a faint scar on his nose, but the other cuts seem to have healed nicely.\n\n\"Cool. Well, get comfortable. You can leave your shoes there,\" he says, pointing to a mat by the door where his own boots are. \"You want a smoothie? I'm about to whip one up.\" \n\nI shake my head. \"I'm okay,\" I tell him, mostly focused on him. He seems... normal. It's like we're seeing each other for another session. He's his typical self, as if he's forgotten how distant he's been or how I had yelled at him over the phone earlier. Maybe I was wrong. Maybe there was nothing going on. But I can't ignore that irritated, frustrated feeling. Can he really be so offhand about this? Something's missing.\n\nOnce I kick my shoes off, Adam starts the blender, so I just decide to take a quick peek around his living space. He's somehow made the mildly-run-down nature of his apartment seem charming and cozy. It's a mid-sized studio space with a rustic vibe, kept clean and orderly. And there's evidence of his love for music everywhere: frames of musicians are hung up on the brick walls, his saxophone lies on its side on the couch, and scores of sheet music are scattered across his coffee table. If I was meeting Adam for the first time, I would have never guessed he was a full-time escort. I would have immediately guessed \"aspiring musician.\"\n\n\"So I see you got into your place,\" I say.\n\n\"What's that?\" Adam asks, shutting the blender off and starting to pour his drink.\n\n\"You got back into your apartment.\"\n\n\"Oh, yeah!\" he says. \"The landlady here was pretty cool about it, got me a spare key.\"\n\n\"That's good,\" I say, mad that he didn't tell me. \"What about your phone and stuff?\"\n\n\"Got it all back.\"\n\n\"Really?\" I ask, surprised, watching him rinse out the blender in the sink. \"I thought... because you texted me from a new number-\"\n\n\"That's my actual number,\" he explains. \"The old number was my work number. I try not to mix the two, ya know?\"\n\n\"Right.\" So why not just text me from the number I recognize him from? But I'm more curious about how he got his phone and wallet and keys back. \"So how'd you manage to get your stuff back?\"\n\nHe turns and smiles at me slightly. \"I, uh... went back,\" he says, grabbing his drink.\n\n\"You... went back?\"\n\n\"Yeah,\" he says. \"Waited a while for him to leave and then broke into his apartment.\"\n\n\"Adam-\"\n\n\"I know, I know, it was illegal and dangerous and I shouldn't have done that, but I did,\" he says, coming into the living room.\n\nI was also going to mention the cops, but that's more or less the gist of what I was going to say. \"At least you're okay,\" I tell him, taking a seat on the couch when he moves his saxophone to the floor and sits down. I make sure to keep a fair bit of distance between us, though. \"I was worried about you.\" I want to also ask him if it would have killed him to let me know sooner, but I hold my tongue.\n\nHe peers at me from over the top of his glass before sighing. \"I'm sorry. I shouldn't have left like that.\"\n\nOkay. Now we're getting somewhere. Now I know that he's aware of what he did and how he left. \"Why did you?\" I ask. \"I know you just... went through something, but I was... well, I was pretty fucking pissed. And scared.\"\n\nHe flinches slightly. \"It wasn't my intention,\" he says. \"I just didn't know what to say.\"\n\n\"Say? About what?\" I ask, confused. \"And what's with this?\" His \"refund\" comes to mind suddenly, and I dig into my back pocket and pull out the folded up check he mailed me.\n\nHe looks resolved at the sight of that little rectangular piece of paper. \"Please keep it, Teddy.\"\n\n\"Why the hell are you even giving it back?\" I ask him. \"Why'd you invite me over here?\"\n\nHe opens his mouth but then pauses, clearly rethinking what he's about to say. Then he leans forward, puts his drink down on the coffee table, and gives me his full attention. \"I didn't think you'd be so worried.\"\n\n\"You didn't think-?\"\n\n\"I know, it was stupid of me,\" he says quickly, \"but honestly, it didn't even cross my mind until you mentioned it, what, an hour ago?\" I frown slightly, which seems to make him smile. \"Don't gimme that look,\" he says with a slightly playful tone.\n\n\"I'm sorry, but I'm still kind of mad at you,\" I say irritably.\n\n\"I know you are,\" he says gently.\n\n\"You only knew 'an hour ago',\" I add in a mocking tone, and then I take a breath, not wanting to be mean. \"I mean, you were all banged up, and I took care of you, and then you just... disappeared.\" I stare at him hard so that he can see the stress he put me through. \"I just thought we were... I don't know... closer than that.\" Maybe that's not how I meant to phrase it. All I'm thinking about is how he once told me that I could always reach out to him, or how we've hung out even \"after-hours\", or how casual these transactions have always been. Maybe I'm just delusional.\n\nBut Adam surprises me by responding in a validating way. \"We are,\" he says. \"That's why I...\" He trails off for a moment, moving his hands around as he searches for the right words. Then he sighs. \"I'll start from the beginning.\"\n\n\"Okay.\"\n\nHe takes a breath. \"I knew I liked you from the get-go,\" he says, and I'm unable to discern what he means by that. \"I think we hit it off pretty well, don't you?\"\n\nWhen I see him waiting for me to respond, I just say \"I guess.\"\n\n\"I mean, you're the kind of guy that makes my job enjoyable. Pretty sure I've told you this,\" he says, \"but it bears repeating. I always looked forward to our time together.\"\n\nOur time together? Not \"sessions\"?\n\n\"And I know after one of our first, y'know, outings, I said it would have been cool if we could have been friends outside of the whole escorting thing. But I really did start to think of you as a friend, Teddy.\"\n\nThat makes me smile ever so slightly. He did? I guess I believe him. I remember that night. He seemed to make it clear that, under different circumstances, we could have had a solid friendship, and yet, we only seemed to become more \"friendly\" after that conversation. He opened up to me more about himself - his real life, not the escorting-persona.\n\n\"I don't know if I've told you this, but I don't have too many friends.\"\n\n\"Really?\" That sentiment surprises me.\n\n\"Not around here, anyway,\" he says. \"I have buddies I play music with, but all my real friends are back home in Connecticut. I only moved here for work. And you and I, we vibe so well that it was so easy to, like, get close to you.\"\n\nHe pauses for a moment, running his fingers through his hair. Why do I feel like he's about to say something drastic?",
        "\"And then, that night I showed up at your apartment...\" He scratches his head a bit. \"After we had sex that night, I... Well, it kinda threw me for a loop.\"\n\nThrew him for a loop? \"What?\" I ask, unsure what he means.\n\n\"I don't know why it did,\" he says. \"I just realized money wasn't a factor. I didn't have that goal in mind.\"\n\nI'm confused. \"The goal?\" I ask. What is he talking about?\n\n\"Money,\" he says simply before shifting in his seat. \"I know it might sound weird, but the paycheck is what gets me... 'up' half the time,\" he says, using air quotes.\n\nIf by \"up\" he means \"hard\", then I understand. \"Oh,\" I say.\n\n\"But that night was the first night on the job with a man where I wasn't thinking 'Hell yeah, a couple hundred more dollars in the bank',\" he explains. \"That night, with you, I just wanted to... y'know... be... with you...\" He pauses to gauge my response before he laughs. \"I sound stupid, don't I?\"\n\nHe must see the little smile on my face. \"No.\"\n\n\"Yeah I do,\" he says. \"It sounds less dumb in my head, I swear.\"\n\n\"You don't sound dumb,\" I assure him, though he IS making my heart race. What is he saying, ultimately?\n\nHe smiles appreciatively before looking away. \"I'm sorry I've been so distant, Teddy. Maybe I was a dick about it, and I'm sorry. I was going to reach out to you soon and explain everything once I got my shit together, got things back on track, found a new job, sorted through my fee-\"\n\n\"'Found a new job'?\" I interrupt, surprised.\n\n\"Yeah,\" he says, looking at me. \"I'm quitting the whole escorting thing.\"\n\n\"Wait, what? Really?\"\n\n\"I had my fun,\" he says, \"and I played my part in, uh, soothing society.\" He flashes me a playful grin. \"But it took up way too much of my time, and I want to focus on other things.\"\n\n\"Like?\"\n\n\"My music. Getting to know the city better. Exploring new hobbies. Making new friends. Dating.\"\n\n\"You can't just escort a little less without quitting?\" I ask. Even though I approve of him calling it quits, I know he loves his job.\n\n\"Honestly, I'm a little traumatized from my last client, so no,\" he says, laughing slightly.\n\nI smile. \"Fair.\"\n\n\"Plus, would YOU want to date an escort?\" he asks. \"No, right?\"\n\nI bite my lip. \"In general, I guess not,\" I say. If I met someone on a first-date basis, it wouldn't be an attractive career path. Plus, I know he's had issues with dating as an escort in the past.\n\nAdam nods, seemingly satisfied. \"There we go.\"\n\nI swallow. \"But that's just me.\"\n\nHe smiles. \"Well, your opinion kinda matters here.\"\n\nI feel myself blushing all over, probably in places I never expected to blush before. It's the softness of his smile and the heat of his gaze. He's saying what I think he's saying, isn't he? Adam has some sort of feelings for me. Now it makes sense. Maybe he doesn't feel right taking my money now that he's crossed the line somehow - even though we both crossed that line together.\n\n\"Would you even be interested?\" Adam asks softly.\n\nI swallow. \"In?\"\n\n\"A date. With me.\" Then he clears his throat. \"A real one.\"\n\nFor a while I just stare at him, frozen. Did Adam just ask me out? I can't find the words. Any words.\n\nWhen I don't respond, he keeps talking. \"I really fucking like you, Teddy,\" Adam says, his hand on his forehead as he confirms my suspicions. It's sort of adorable how shy he seems to be getting admitting his feelings. \"You probably hate me a little bit, but I feel like we have-\"\n\nBut he stops, because I'm laughing. I can't help it. I fall into a fit. It starts in my stomach, and I can't keep my lips closed tightly enough to hold it back. \n\nAdam laughs slightly. \"What?\"\n\nIt takes me a moment to compose myself, and soon my laughs are reduced to soft chuckles. \"This is so fucking ridiculous,\" I mutter, laughing as I rub my forehead.\n\n\"Oh,\" Adam says, clearing his throat. \"I just thought-\"\n\n\"I've been in love with you since I met you,\" I blurt out.\n\nWhen I look at Adam, his eyes are opened a little wider. \"Really?\"\n\n\"Oh come on,\" I say, laughing. \"You couldn't tell?\"\n\n\"No,\" he says, and he grins when I give him an intensely skeptical look. \"Okay, maybe a little,\" he admits, and both of us laugh.\n\nI roll my eyes. \"I can't believe you.\"\n\nHe just stares at me from across the couch, an easy grin on his lips. \"So is that a yes to a date?\"\n\nI smile at him. \"You want me to go on a date with you behind my boyfriend's back?\" I ask.\n\n\"Yeah,\" he says, biting his bottom lip tenderly. \"Or just break up with him. I know you don't like him that much.\"\n\n\"That's not true,\" I say defensively, even though it is. Jackson's a great guy, but unfortunately, what I feel for him is nothing compared to what I feel for Adam.\n\n\"'Everything's fine, Adam',\" he says in a mock version of my voice.\n\n\"Fuck you,\" I say, grabbing a pillow and getting ready to hit him with it. As I swing, he smoothly manages to grip my wrist and tug me into him. I gasp slightly as my body is pulled forward, but he catches me easily and somehow gets his lips on mine within the blink of an eye. I melt right into the kiss, humming slightly against his lips as we hold position for several seconds.\n\nWhen he pulls back, I take a breath slightly and then laugh nervously. I feel a lot of things right now, but mostly relief, like finally, the torment of worrying about Adam is over. Better yet, the stress I put myself through in crushing on Adam might actually be paying off. It's incredible. Am I actually going to get what I want? \"Are you sure you want to do this?\" I ask. \"You're not just feeling... weird and uncertain?\"\n\nHe smiles. \"Why would you think I'm not sure?\"\n\n\"'Cause I don't have a vagina?\"\n\nAdam laughs. \"So? I've fucked you how many times now?\"\n\n\"Dating and fucking are two different things,\" I tell him, \"and you've never dated a guy before.\"\n\n\"Because I've never been attracted to a guy before,\" he says. \"Not like this.\" Then he smiles, scratching his chin. \"Besides, it can't possibly be that different.\"\n\nI can see where his thinking lies, but I'm still nervous that this is too good to be true. How many people can say they've turned the straight guy? \"I don't want to be a temporary fix,\" I tell him. I think that's my biggest fear right now: that this is just exploratory for him. I don't want to be a guinea pig. I feel too deeply for that.\n\nHe nods in understanding. \"I know,\" he says, rubbing my arms. \"I wouldn't have told you if I wasn't sure.\"\n\nI lick my lips a bit. Part of me is quick to doubt that, but another part of me wants to believe him. Maybe it really is simpler than I think. He likes you. Run with it, Teddy. \"Fine,\" I say.\n\nHe raises his eyebrows. \"Fine?\"\n\n\"I'll go out with you.\"\n\nHe snorts. \"Like you didn't want to.\"\n\n\"Two minutes ago you didn't even know that I liked you.\"\n\n\"And for the past two minutes, I did,\" he fires back, grinning.\n\nI smile slightly as my eyes flicker down to his torso. \"How are your ribs?\" I ask him.\n\n\"My ribs?\" He looks down a bit. \"Uh, better, for the most part.\"\n\n\"So you can fuck me right this time?\" I tease.\n\nHe immediately starts laughing. \"You don't wanna grab dinner or something befo-?\"\n\n\"No,\" I say, and I kiss him hard. He laughs against my lips a bit before he becomes focused on my mouth. We move them deeply against each other, working at a mild pace as we shift even closer to each other. Part of me wants to hop on top of him, but if he's not completely healed, I don't want to hurt his poor body. I need that body in good condition.\n\nI feel Adam's hand slide up to the back of my head, his fingers getting in my hair, and I let out such a deep, satisfied moan against his lips that Adam smiles against me. \"Someone's worked up.\"\n\n\"Sorry,\" I mutter.\n\n\"When's the last time you got off?\" he asks against my lips, his other hand sliding down my back.\n\n\"I don't know,\" I say, trying to remember. \"Been at least... five days, maybe?\"\n\n\"Jesus,\" he says, laughing. He moves his hand around to the front and rubs his palm against my bulge, making me grunt.\n\n\"I've been too stressed, okay?\"\n\n\"Let me take care of you,\" he says, kissing me again. I nod a little before I keep kissing him back, letting him reach into my lap to undo my belt. I listen to that metallic twinkle of the buckle being unclasped before he gets my pants opened. He doesn't go in, though - not yet. He slides his hands back around me, gripping onto my shirt as the kissing gets deeper, more insistent, lewder.\n\nI do eventually have to pull back to catch my breath. I feel dizzy, but in a good way, panting as Adam smiles at me. \"Fuck,\" I say, laughing breathily.\n\nHe chuckles. \"What?\"\n\n\"I just need to slow down for a moment,\" I say, smiling bashfully.\n\nHe grins a bit. \"Then let's multitask and move this to the shower,\" he suggests, leaning in to kiss my neck. \"You can relax... and I'll handle everything.\" My eyes roll back and I let out a soft moan.\n\n\"Uh huh,\" I murmur, but it takes us almost a full minute to move. He just keeps sucking on my neck, nibbling on the skin a bit before he moves down to my shoulder and then finally pulls away.\n\n\"C'mon,\" he says, standing up. I'm treated to the sight of a prominent tent in his loose pajama pants before I get to my feet. He has me step out of my pants before I follow him across the room towards the back where the bathroom is located. My first impression of it is positive. I see lots of green, leafy plants hung up around the quaint, cozy bathroom until my view is totally obstructed by Adam. He turns around, shuts the door behind me, and then pins me against it, kissing me hard.\n\nMy arms inevitably go around him, clutching at his shirt in tight bundles as he kisses me more deeply than I've felt him kiss me thus far. It's not because of his tongue, though. It's the way his body feels against mine, the way he's pushing against me. Wanting more of that contact, I tug at his shirt, desperate to lessen the layers between us. He lets me take his shirt off and toss it to the floor, watching me eye his body up close. I drag my fingers down his lean, toned torso, licking my lips, studying every freckle, every birthmark, each hair around his nipples, even the gold chain still hanging around his neck. He's so beautiful.\n\nHe leans in and gives me another deep kiss, simultaneously slipping his hand right into my underwear. I let out a muffled moan when he's got his fingers around my cock. He grips me tightly and gives me a few tugs before he breaks the kiss and starts dropping to his knees. I gulp a bit when he's eye-level with my groin. He quickly pulls my cock free from my underwear and, without wasting a moment, takes me in as deep as he can. My hands go right to his head as I lean back against the door, tensing and moaning. God, yes. I push my hips forward, slipping into his throat, and he groans a bit but otherwise takes my cock without complaint. I feel him grip my hips before his hands slide back to grab a cheek each. He squeezes firmly as he starts bobbing back and forth on me, slurping noisily. As I pump my hips slowly, I watch my cock slide back and forth, the glans peeking out from his lips on each pull-back. That's it, \"straight boy\".\n\nSoon, he pulls back to take a breather. I look down at him licking his lips before he stands up, giving me a cocky little grin as he slides his pants off his hips and lets them drop to his ankles. My eyes travel down his body, and I raise my eyebrows at the fact that he's not wearing underwear. His cock is just completely out, in a semi-hard state, jutting away from his fuzzy, low-hanging balls.\n\nBefore I can think to touch him, he smiles and turns around, heading straight to the shower. He slides the glass to the side and turns the water on, testing the temperature. I don't follow him at first. I'm too preoccupied with staring at his ass, small but plump, with a hint of jiggle. He pokes his head out from behind the shower glass and says \"You comin'?\"\n\nI blink. \"Yeah.\" I drop my underwear to the floor, kicking it off my ankles and then taking my shirt off before heading over to the shower and stepping in with him. He moves to the side to give me some time under the spray first, and I hum softly when I feel the water hit my skin. It's the perfect temperature: slightly too hot - just the way I like it. When I turn around to have the water hit my back, Adam steps into me, holds my chin, and kisses me tenderly. These kisses are slower than before, but just as deep. He moves his hands to my hips as I wrap mine around him, pressing our fronts together.\n\nWe stay like that for a while, just kissing under the shower. We eventually break to soap each other up, but even that time is spent relishing each other's lips and the feel of our bodies, or letting hands roam and touch and explore. My soapy fingers find his cock as his find my hole, rubbing in circular motions. I keep a firm grip on his dick, now solid from my touch, and I moan as I press back against Adam's expert fingers teasing me, making sure I'm clean.\n\nWhen he turns me around and presses me against the glass, I follow his lead, my hole already twitching like it knows what's coming. He presses into me, his cock sliding effortlessly between my cheeks before he grinds. A kiss on my neck, a kiss on my shoulder blade, a kiss on my spine. Slowly, he works his way down, and when he kisses the small of my back, getting his lips in that little nook just above the curve of my ass, he grips my hips and tugs me back more. I bend over a bit for him, spreading my legs.\n\nI feel his hands wander slowly over my ass, his fingers gently kneading into the flesh before he grips each cheek and spreads them apart. Now I know my hole is exposed to him. I swallow thickly, waiting, anticipating, but nothing happens. He just holds my ass open. I bite my lip. What's he doing, staring? I tilt my head back slightly but I can't see what he's doing, if anything. Am I too hairy or somethi-?\n\nI moan out, almost slipping when I feel his tongue. Motherfucker. I bite my lip and try to hold back my groans, my nails digging into the glass. There's nothing to grip, nothing to hold on to. I just try to keep balance while Adam dives in with his talented tongue, lapping at my hole repeatedly before pushing that slick muscle past my sphincter. Between the steam filling the room and his tongue filling me, I'm almost light-heated. I don't dare touch my cock lest I pass out.\n\nI feel like I'm being pampered right now, treated to an electric, chilling sensation throughout my whole body the longer he eats me out. He knows it too. He knows what a mouth can do to me. After all, Adam is a pleaser, and all attention seems to be on me right now, from the delicious make out session to the deep blowjob to this beautiful assault on my hole. He said it himself: let him handle everything. If this is his way of apologizing, then I forgive him. I forgive him for anything and everything.\n\nWhen I feel his finger at my hole, I gasp slightly. He applies the tiniest bit of pressure a few times before pushing one in. I tense up, standing on my tip-toes for a moment before I relax and welcome the intrusion. It's his middle finger. I can tell. Keeping that digit planted in me, he starts to stand up, sending quick kisses up to my neck before he gets to my earlobe and takes it between his teeth. My knees buckle. Thank God he wraps his other arm around me because I would have melted on the spot.\n\n\"I want you, Teddy,\" he mutters in my ear, his voice thick with sex.\n\nI just nod. Is that enough of a response? Suddenly I can't speak.\n\n\"Only you.\"\n\nGod, he's killing me. Feeling a rush of affection, I crane my neck to snag his lips with mine, and he kisses me as deep as he can while rocking his finger back and forth, in and out of me. I moan softly, arching my back even more as a way of asking for it. The real thing. Soon he removes his finger and grabs his cock to rub the head between my cheeks. He teases me a bit, just moving it up and down and constantly sliding against my hole. I swear it's twitching for him. Please, Adam. Please.\n\nHe pulls away from me for a moment, and when I turn, I see him reach for a bottle: lube. It must work for shower situations because he graciously applies it to his cock, slicking it up until it shines. I lick my lips, eyeing every stroke until he positions himself behind me. With one hand on my lower back and the other on the base of his cock, he targets himself and then pushes forward.\n\nI close one eye, my mouth opening as the head enters me. Adam lets out a long sigh before easing more of himself into me, nice and slow. Once he's about halfway, he lets go of himself, instead holding onto my hips and pulling me back against him. I gasp, moaning out a little as he gets deeper. God, I feel full. I let my head hang, taking deep breaths as he bottoms out inside me. Fuck. He nestles deep before leaning over and kissing between my shoulder blades.\n\n\"You okay, Teddy?\" he asks.\n\nI nod before lifting my head. \"Yeah, just... It's intense.\" That's the only way to describe it. I feel electrified at every point of contact right now, a soft tingling dissipating throughout the rest of my body.\n\n\"Should we stop?\"\n\n\"No, no,\" I say, shaking my head. \"Just go slow.\"\n\nHe kisses my neck before wrapping his arms around me, practically hugging me. He does as I ask (as he normally does) and takes it slow, grinding himself against me and only giving me light, slow thrusts. And it feels so damn good. The water splashes us gently as we rock against each other, moaning and panting and touching. Adam lets his hands roam my front, one settling for my nipple and the other for my cock. I let out a small whimper when his fingers wrap around my shaft one by one. Between his thumb and index finger playfully teasing my nipple and his hand stroking my intensely hard cock and him grinding so deeply inside of me... I'm going to lose it.\n\nIt feels like I haven't been touched in years, and Adam is bringing me back to that first night we shared together. It was like I had forgotten how good it all feels, how meaningful sexual intimacy is, how right it can be. Adam and I have always had great sex, and it always felt better than just a simple hook-up, on par with what I had with Miguel. It has purpose and passion. And now that Adam has actually caught feelings for me, I know I can trust my gut. My gut was fucking right about this.\n\nSuddenly, Adam leans into my ear and asks \"Where do you want me to cum?\"\n\nI can't even answer him, because his words tip me right over the edge. I groan, shutting my eyes tightly as my orgasm hits me like a fucking bus. It starts in my head, of all things, before I feel it boiling in my balls. Then, as my hole tenses around Adam's manhood, my cock surges and sprays ropes of cum all over the glass door. I pant, finding it difficult to catch my breath, my orgasm feeling oddly endless until finally, I breathe out.\n\nJust as I'm at the end of my climax, Adam is hitting his. I hear him grunt before he pushes forward a touch deeper, gripping onto me even more tightly. He's cumming, right inside my hole. I can feel his cock throbbing as it spews his load deep into me. It has a strangely calming effect on me, feeling incredibly intimate despite the fact that we still haven't talked about not using condoms. Not that I would have cared. I want him inside me, one way or another.\n\nAdam rests his forehead against the back of my neck as he catches his breath, moving his hands to my hips. He holds them there for a bit, his thumbs gently stroking my skin before kissing my neck again. \"Stay over tonight,\" he says.\n\nHow could I object? There's still so much to talk about, so much of his brain to pick at, so much to explore. So I just smile and nod a little, reaching back to take his hands and wrap them around me. \"I'm all yours.\""
    ],
    "authorname": "ruetheben",
    "tags": [
        "gay romance",
        "gay male",
        "shower",
        "prostitute",
        "whore",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/you-get-what-you-paid-for-ch-04"
}