{
    "title": "Aztec Treasure Ch. 61-70",
    "pages": [
        "Maria Meztli's POV\n\nArrowhead Pack Grounds\n\nI was shocked when the van drove into Arrowhead territory, and everyone was outside waiting for us. The cheers started as we got out of the vehicle. Nervous about all the people, I clung to Lance's arm as we walked towards his Alphas.\n\n\"Welcome back, Maria,\" Alpha Chase said as he embraced me. My cat relaxed in his hold, submitting to our Alpha. I'm mated to Lance, and Rori and Chase were Lance's Alphas, so they were MY Alphas! I felt something unlock in my mind as I was welcomed in by two powerful beings.\n\n\"Welcome to the Arrowhead Pack, Maria,\" I heard in my head. Rori was licking my hand, and I knew it was her somehow.\n\n\"Thank you,\" I said. My send resulted in a chorus of greetings, and my mind struggled to keep up as it matched the voices with the people surrounding me. They were all so loud!\n\nMy head still hurt from the concussion, and Lance picked up on the strain. \"Give her a break for a moment, please.\" The mental and audible messages died down immediately. \"Imagine a volume control in your head and turn it down.\"\n\n\"The Pack link can be a shock when it opens up,\" Rori said. \"I'm so happy I can talk to you now!\"\n\nThe volume was much lower, and I took a few breaths and relaxed. \"That's better. Where is Maritza?\"\n\nRori looked up at me, her tongue hanging out the side of her mouth. \"In the pool, of course! That girl would live there if she could.\"\n\n\"Maritza? Baby?\"\n\nA soft voice answered back. \"Momma?\"\n\n\"I'm home, baby. I'm coming to you.\" Tears were streaming down my face as it all hit me at once. \"I can hear Maritza in my head,\" I said as I buried my face in Lance's chest.\n\n\"That's amazing,\" Lance said as he kissed my head.\n\nRori was first to try. \"Maritza, it's Alpha Rori. You stay and play until we get there, all right?\"\n\n\"Yay! Play!\"\n\nChase just shook his head. \"I have no idea how all this happened, but you are both Pack now. The link to Rori proves it.\"\n\n\"I'm so happy,\" I said. \"I hated being left out.\"\n\n\"Never again,\" Lance said. \"Now, let's go find our little girl and play.\"\n\nWe walked up the hill to the Pack House, with most of the Pack following along. \"This is a great reason for a party in the pool tonight,\" Chase said. It didn't take long for responsibilities to be assigned. It was a warm day, so the grills outside would get a workout. I heard Chase calling up Doc at Oxbow Lake, informing him of the latest events. He asked Doc to pass along the party invitation for tonight to the rest of the Pack.\n\nI put my clothes into the locker before taking a quick shower before going into the pool area with the others. It was weird having a link; I could think about someone, then talk to them without opening my mouth or seeing them! I'd checked in with Maritza's nannies while I showered and knew they were in the kiddie section of the pool. Maritza spotted me as I walked up. \"MOMMY!\" She splashed over to me and held her arms up.\n\nI picked her up, kissing her cheek before holding her tight. \"I missed you, baby,\" I told her.\n\n\"Mommy owie?\" She poked at the side of my head; the rock that almost knocked me silly left behind a large bruise from my cheek to temple, extending to the corner of my eye. The swelling was still there, and I looked like a boxer on the losing side of a fight.\n\nI nodded at her. \"I'm hurt, but it will get better.\"\n\n\"Cats?\" She looked up at me, begging to shift.\n\nI set her down. \"Cats.\" I shifted first, and she followed right after that. \"Be nice playing with the others,\" I sent to her.\n\n\"Kay,\" she replied as she bounded over to the shallow area where the others were playing. I loved that I now could speak to her and others while in my jaguar; no more trying to make myself understood with growls, expressions, and tail movements. I jumped a little when I felt a cold nose sniffing around my tail, then a tongue licking out. I looked back to see Lance's wolf. \"You scared me,\" I told him.\n\n\"I get a million of those for what you put me through,\" he replied as he moved up my side. He was rubbing his fur on mine, laying down his scent on me. Maritza was splashing around under the nanny's watchful eye, so I led Lance over to the hot tub and slowly crawled in.\n\nLance shifted back, lowering himself into the hot water next to me. \"I'm still cold from that river. I don't know how you survived.\"\n\n\"You said you loved me, and that's what gave me the energy. I can't believe you were able to hold on.\"\n\n\"I'm glad that collar was titanium,\" he replied. He moved around until I was sitting between his legs and began to rub my sore muscles down. I moaned in pleasure as his strong fingers worked through my fur. \"It would work better if you shifted,\" he said.\n\n\"Maritza needs her cat time,\" I replied. \"And I love how this feels.\" We sat in the hot tub for about fifteen minutes while I practiced using the Pack Link to talk to the others. Lance taught me a few more tricks about using it before it was time to get out.\n\n\"Momma? Slide?\" Maritza had gotten out of the water and had her murder mittens on the side of the hot tub as she looked at me.\n\n\"How can you resist that face?\" Lance stood up and stepped out of the hot tub, with me following behind. \"Let's go on the big slide!\"\n\n\"I'll wait at the bottom if Lance helps you to the top,\" I told them. Swimming was all right, but my head might not react well to the slide. Maritza followed Lance to the stairs while I walked into the pool through the zero-depth entry. Swimming felt better in the warm pool water, and I quickly paddled over to the area the slides exited.\n\n\"Here she comes!\" Lance sat behind Maritza as she let out a baby roar, then launched herself on her belly on the adult slide. A few seconds later, she came flying out into the pool, landing with a big splash. I made sure she was all right before we swam towards the stairs, turning to watch Lance slide down. He hit the water fast, sending water everywhere.\n\n\"Papa big splash,\" Maritza said.\n\n\"Papa is a big guy,\" Lance answered.\n\nHe swam over to where I sat, stunned. I opened the link to Lance alone as Maritza climbed out of the pool. \"She called you Papa?\"\n\n\"Yes,\" he said with a big smile as he climbed out. \"Nobody told her. I told her that you and I were mates. She decided that if I was your mate, I was her Papa. You can't argue with that logic.\"\n\n\"You're all right with that?\"\n\n\"Are you kidding me? I've mated the most beautiful jaguar woman in the world, and we already have one daughter. I'm over the moon.\"\n\nThe pair were already at the top of the slide as I processed this. It had taken me months to accept Maritza as my own, and Lance had done it immediately because I was his and he was mine. \"This mating thing is different. No werejaguar male would raise a child that wasn't his.\"\n\n\"It is our way,\" Lance answered. \"When my wolf accepted that you were my mate, your family became mine. I claimed you and Maritza in front of the Alphas and the Pack. That is all that is required for our kind to make the adoption official. When we get married, we can do the human adoption process to make it legally binding.\" I looked up to the top, where this time Lance was going down in his wolf. Maritza let out a baby roar as Lance howled with her, then she went down the slide. Maritza stretched out this time, skidding along the surface before splashing to a halt. Lance tried to look graceful, but he was so big it didn't work. He face-planted on the water before coming to a halt in a huge splash. \"That's why I slide in human form.\"\n\nI was laughing inside as he dog-paddled to the steps. \"I'm going to sit on the steps just in case. You messed up, and now you have to take your daughter up the stairs again and again until she falls asleep.\"\n\n\"Seriously?\"\n\n\"Can you say no to that face?\" I had him, and he knew it. I stretched out on the edge of the pool, my tail idly dipping in the water as I relaxed.\n\n\"Maria?\" I recognized the voice of Three Tequila, the Orlando chapter President of the Steel Ladies and old lady to the Brotherhood President. I turned my head as three ladies sat on the pool edge around me. Three Tequila, Howler, and Possum were all human, so there was no mind link. They had no problem with nudity or displaying all their tattoos by how comfortable they were here. Chase sat down next to Three T and told me he'd relay what I said. \"I left your motorcycle in Spider's garage, and we put your cut and your gear back in your room. Sweet ride, by the way.\"\n\n\"Thank you for bringing it back,\" I said.\n\n\"It's not a problem. Mongo likes me behind him while he rides, but I don't mind being on my own once in a while. My God, it's so gorgeous up here, even if it is colder than a witches tit in November.\"\n\nI chuffed in laughter as I watched Maritza hit the water again. \"I know, but Denver can be cold too. I like it here.\"\n\n\"Your fur is so soft,\" Howler said as she scratched my hip. \"And that Maritza is a cutie!\" I loved their scratches, so I stretched out and let the women explore.\n\n\"You'll have to talk Lance into coming down to Orlando next winter. As a Steel Lady, you're welcome in any of our Clubs,\" Three T said. \"It will light a fire under that hot-ass man of yours to finish prospecting before the trip. He won't like driving the support van while you're riding with us.\"\n\n\"I think I'll be able to get a chapter going by summer, so there's a chance,\" Chase answered for me.\n\n\"We have to head to the airport soon, but I wanted to tell you how proud we are of you. You have courage, kiddo.\"\n\n\"Leaving so soon?\"\n\n\"We'll be back for the Memorial Day party and the post-Sturgis Steel Brotherhood rally,\" Three Tequila said. \"Those parties are epic. The lake, the beach, the riding...\"\n\n\"I can't wait. We should do the Superior Loop sometime,\" I told them.\n\n\"What's that?\"\n\n\"An eight-day ride around Lake Superior, through Canada, Michigan, and Wisconsin. You could do it in three days, but there's so much to see and do. I was reading about it on the Internet a few days ago.\"\n\nChase continued after relaying. \"I've heard about the tour, but we've always been so busy I haven't done it. Rori won't be able to go as she'll be late in her pregnancy or have a newborn.\"\n\n\"Rori's always pregnant,\" Howler said. \"You've got nannies and support vehicles. You could even bring an RV.\"\n\n\"You'll even have a prospect to drive it,\" Tequila said with a grin. \"We don't need you anyway. Maybe we'll make it a Steel Ladies ride and leave you and Vic with your babies.\"\n\n\"Maybe we can do the first half with you? Bear and I can do the bottom half on the way here, and then we can keep going once we get to the American border in Sault Ste Marie?\" Since their chapter was in New Hampshire, they would be taking a long ride west to come to our party. \"Hell, we could head up to Montreal and go around the north sides of Lake Ontario and Lake Huron too!\"\n\n\"I'll work with Spider Monkey to plan the trip. Chase and Rori can get the word out to the Club, and we'll see how many people are interested.\" I was excited just thinking about it. After all those months living as a shut-in, a week of motorcycle touring with my man sounded fantastic. If we had support vehicles and nannies, Maritza could go. The ride would break down into chunks with lots of sightseeing and exploring, so it would give her time to play. \"Chase, will I be able to enter Canada?\"\n\n\"I hope so.\" I rubbed my cheek against theirs before they left, promising to keep in touch.\n\nThe party went on well into the night. I shifted back for dinner, much to Maritza's disappointment. When she finished her food, she couldn't keep her eyes open. Spider Monkey volunteered to put her to bed, as she was making an early night of it.\n\nLance and I got called over to a table away from the pool later that night. Colletta, Chase, Rori, Vic, and Possum were there from our Pack. Alpha Michael, Luna Margaret, and Doc Olson were there from Oxbow Lake. Lance took the only chair left, pulling me into his lap and wrapping his arms around me. \"We're trying to understand how this all happened,\" Chase said.\n\n\"There are so many first with you two,\" Colletta said. \"First mating between werejaguar and werewolf, first mate link for a cat, first Pack link, and first child brought into a Pack link.\"\n\n\"Our children don't get the mind link until their first shift in their teens, and now I have a one-year-old jaguar baby asking me if she HAS to get out of the pool.\" Rori just shook her head at this.\n\nDoc Olson looked at Lance. \"When did you know Maria was your mate?\"\n\n\"After she took off in her cat form, but before she jumped in the river,\" he said. \"I heard her voice in my head, and my wolf said we had to claim our mate. Until that moment, I thought I was falling in love with her, but mating wasn't possible.\"\n\n\"So she used the mate link to talk to you before your wolf accepted her?\" Lance looked at me as he nodded. \"How?\"\n\nI thought about what happened. \"It all happened so quickly. I ran hard for the river, and I needed Lance and the others to go farther downstream. I yelled at him in my head before I jumped. I was shocked that he heard me, more so when I got his answer in my head. You don't know how much I wanted a link since I came here! It was the answer to my prayers!\"\n\nChase leaned back as he thought about it. \"It has to go back to their time together in her heat. Lance, is it possible you created a mate bond that weekend?\"\n\n\"Not intentionally,\" he said. \"My wolf wasn't thinking about her that way at the time.\"\n\n\"Did you bite her neck,\" Doc Olson asked.\n\n\"More than a few times,\" Lance said as he blushed. \"I had to hold her in place the first time I took her in wolf form and when I forced my knot into her. She would squirm as I held her neck down with my teeth. I didn't feel anything at the time, though. In all honesty, that whole weekend was a blur with all the pheromones and sex.\"\n\n\"I'd never had a heat before, and we don't have mates, so I don't know if there was anything different,\" I said. \"When the heat ended, I still wanted him and wanted to be close to him. My cat would calm down when he was with me.\"\n\nChase had no answers. \"Maybe the mating bite takes a long time to work when it's with a werejaguar?\"\n\nDoc nodded. \"It's not something they've had before, so maybe his saliva had to change something in her first?\"\n\nColletta brought up the obvious problem with that. \"Then how do you explain Maritza gaining a Pack Link without a bite OR a blood tie?\"\n\nNo one could answer that one. Finally, Lance just pointed out what was different. \"Maria adopted Maritza, and my wolf accepted her as my own after I took Maria as my mate.\"\n\n\"She answered me after you brought me into the Pack,\" I said. \"I don't think we'll ever know if a family or Pack link came first.\"\n\n\"So much to learn,\" Colletta said. \"I'll remind everyone that Maria and Maritza's ability to use the mind link is not for distribution outside Arrowhead Pack and the Oxbow Lake leadership. Such an ability may give them a tactical advantage we don't want to spoil.\" That order went out after Lance reported his mate link to Doc and the Alphas. \"Did the heat take? Are you pregnant?\"\n\nI didn't want to answer, but I had to. I let out a yawn before I answered. \"Doc said the test was negative, but it's too early for a test to be accurate.\"\n\n\"We could be so lucky. I can't imagine what surprises that might bring,\" Colletta said. \"You better get your mate to bed, Lance. She's had a long day.\"\n\n\"Thank you,\" I said as I got up. \"I'm so happy to be a part of your Pack!\"\n\nLance and I showered together in my room before I pulled him into bed with me. I was asleep as soon as his arms wrapped around me.\n\nI woke up in the morning to find a single red rose on the pillow in front of my face. I reached out and pulled it to my nose, taking in the smell. \"Happy Mother's Day, Maria,\" Lance said as he brought a tray over to the bed. Maritza climbed up and sat next to me as I pulled myself to a sitting position.\n\n\"Happy day, Mama,\" my baby said.\n\nI couldn't see through my tears as I hugged them both.\n\nCh. 62\n\nSpider Monkey's POV\n\nArrowhead Beta House\n\nI rolled out of bed before sunrise, making another dash for the bathroom. Our son was growing with each day, pushing more of my insides aside, and my bladder was suffering for it. My body was constantly sore, tired, and horny.\n\nIt didn't help when I stumbled back into the bedroom to see Vic had rolled onto his back, the sheet and blanket tented around his sleeping hardon. I smiled to myself as I walked back to the bed; he'd already shoved the covers down to expose his broad shoulders and sculpted chest. Looking down at him sleeping peacefully, knowing he was MINE, body, and soul? It was a powerful feeling, and I felt it down to my core.\n\nI giggled as I ran my fingers lightly down the fine hairs on his chest. What are the three rules of growing older? Oh yeah.\n\n1) Don't trust a fart.\n\n2) Don't pass a bathroom.\n\n3) And never waste a woody.\n\nPregnancy at a late age magnified the importance of all three. I slipped one hand under the sheet, lightly brushing Vic's impressive length before cupping his heavy balls in my fingers. I was so tired last night, and I went to bed hours before he did. It wasn't a surprise he was a little backed up.\n\nI lifted the bedding away with one hand while the other encircled his girth. Holding it vertically, I leaned over and stuck my tongue out, lightly circling the engorged head and tasting the precum oozing out the slit. Vic let out a low moan as I engulfed it in my wet mouth, his hand moving up to touch mine as I sucked him back to consciousness. I kept working the tip, doing the tongue swirl that drove him nuts. \"Fuck, baby,\" he said as his hands moved up to my hair.\n\n\"Soon,\" I promised. Vic groaned in pleasure as I moved more of his cock into my mouth, gagging slightly before swallowing past it and taking him into my throat. I soon had him fully awake and breathing hard; I could feel him swelling in my mouth and knew he wouldn't last long if I kept going. I pulled off, holding the base of his cock and squeezing until the orgasm that was so close to him had passed.\n\n\"Vixen,\" he said as he sat up. \"I can't believe you're waking me up to edge me.\"\n\n\"Edging makes the eventual release all the more satisfying,\" I told him.\n\n\"True. Now it's my turn.\" He picked me up under the shoulders effortlessly; our size difference and his strength meant he could maneuver me into any position he wanted. We weren't quite as acrobatic these days since I looked like a gymnast who swallowed a basketball, but I loved it when he took charge. I ended up straddling his head as he pulled me down on his face.\n\n\"Oh FUCK yes,\" I said as I felt his tongue slide from bottom to top in my dripping slit. My eyes rolled back as he shifted his mouth and tongue slightly, the length pushing deep inside and swirling around before coming back out to lash my clit. \"RIGHT THERE, yes, oh GOD yes, right... HEY!\"\n\nHis face looked like a glazed donut, and he was smiling as he took his revenge. \"Makes the eventual release all the more satisfying, right?\" He lifted my body, moving me down until I was straddling his waist. \"Be careful with how much you take,\" he warned.\n\n\"I will.\" I lined his bulbous head up took the first six inches in a slow push. It felt SO good, stretching me in the best way. I leaned forward, moving until he was almost out, then sank a little farther with the next stroke. He was using his fingers to tease my clit, and the third time I took him in, he pinched it. I went off like a grenade, screaming my release and squirting fluid onto his belly. My legs were shaking, and I was squeezing him tight as the waves of pleasure rolled through me.",
        "He sat up, holding my ass cheeks in his big hands before depositing me on my back. He scooted me until he was standing by the bed with my legs over his shoulders, making sure to keep my belly protected. He started fucking me with long, slow strokes while his fingers teased at my sensitive nipples and clit. He pushed me to two more orgasms before he told me he was ready.\n\n\"I want to taste it,\" I told him. He pulled out and moved me until I was on my side, a pillow under my head as he pushed his slippery cock into my waiting mouth. I used my lips and tongue to push him over the edge. I loved the feeling of his balls tightening and his cock pulsing as he filled my mouth with his seed. I swallowed quickly, barely keeping up at first, and kept sucking until he begged me to stop because he was too sensitive. I rolled onto my back, liking the remains from my lips. \"Breakfast in bed is always a treat,\" I told him.\n\n\"You're such a horny mate now, baby. I can't imagine what will happen when you get a wolf.\"\n\n\"Lots of hard doggy-style sex, I'm hoping,\" I said as he picked me up in his arms. He moved us until he was on his back with me tucked into his left side, with his right hand splayed over my belly. \"Now that you've made up for not waking me up when you came to bed, we can get another hour of sleep.\" I dozed off quickly to the sound of his breathing.\n\nWhen I woke again, the clock said \"9:27.\" Vic was gone, but there was a glass of water next to the clock. I took a drink, then quickly changed and went down the hall to my office. The computer hackers in my group were all at their workstations; the analysts and other team members were in the basement. \"Hey, guys. I'm sorry I'm late.\"\n\nBrian Steele laughed, and the human girls I'd brought in blushed. \"We all heard why you were so tired and needed to sleep in,\" he teased. He took a sniff. \"You're in your third trimester, Spider Monkey! You'd think Vic would realize no one is taking you from him.\"\n\nIt was a wolf thing; since I didn't bear his mating bite, someone else might move in on me. \"He does like me covered with his scent,\" I agreed. \"I would have taken a shower, but then he'd drag me back to the bedroom to make it obvious to humans. It's easier to come in here smelling like sex.\" I looked around the room. \"How are we doing?\"\n\n\"I'm still working on hacking the records of the Antigua bank,\" he said. The company that leased the black site oil rig was out of the Cayman Islands. We'd traced the bank transfer for the lease payment to a bank based in the Seychelles, then Panama, then Antigua. We had no idea how many more banks were between this account and the CIA front company. With every link, we were closer to the people behind it.\n\nOthers were looking into the backgrounds of the men captured and killed in the operations against Maria. We had identified most of them; all were ex-Special Forces in the United States or elsewhere. None of them were cooperating with the FBI. Frank Grimes suspected they were waiting it out, perhaps knowing the next President or CIA Director would let them go. Or, maybe they were confident in the fancy lawyers and their ability to get them free.\n\nOr, maybe it was money flowing to their families while they held out. That was my assignment, to find the money trail and trace it back to the puppet masters.\n\nIt took almost a week before we came to the end of the money trail. Banco Mexico was a state-owned institution, which shocked me a little until I realized how rampant corruption was down there. The bank's official function was to support Mexican companies in the import-export market. A little digging showed these exports included cocaine, marijuana, and Fentanyl. What better bank to use to launder billions in cash?\n\nThe money trail included off-books accounts under the control of the CIA Station Chief in Mexico City. The audit we did on the bank records we found was troubling; for over five years, the CIA had been secretly funding their operations by aiding the Sinaloa Cartel in their smuggling and intelligence operations.\n\nWe had options, but all of them had risks. It was time for another meeting of the leadership.\n\nCh. 63\n\nMaria Meztli's POV\n\nArrowhead Beta House\n\nAfter Mother's Day, I never wanted to sleep alone again. I needed to talk to Spider Monkey and Vic about it; I'd been placed with them when I first arrived here, and I needed to respect their home. I caught up with my host Betas at breakfast, putting Maritza in the high chair as Vic served the French toast. \"Now that I have a mate, what happens in terms of our living arrangements? I mean, Maritza and I are guests in your home, and Lance is living in a room in the basement of the Pack House.\"\n\nVic spoke first. \"Nothing has to happen right away. We volunteered to host you so you'd be comfortable and safe.\"\n\nI got Maritza's food cut up for her and started on my own. \"I'm sure Lance will keep me safe, but I feel like I'm a burden, and now you guys are bringing in people to help with the investigation. We're taking up space you need for your guests.\"\n\nVic nodded. \"I'll ask the Alphas at our morning meeting. I'm sure we can find you suitable rooms elsewhere with Lance. Long term, you should think about buying or building a house.\"\n\n\"A house?\"\n\n\"Yep. Spidey and I bought this house from the previous Betas, who paid to build it on land leased from the Arrowhead Pack. Before then, we lived in a house over there.\" He pointed to a bare spot on the lakeshore, surrounded by construction fencing. \"It was off Pack lands, which I needed because Spider Monkey didn't have Pack status at the time. Unfortunately, arsonists burned it down, and the home to the left had so much damage it had to come down. I sold the property to Chase before we moved back here. Loralei's blue house outside the gate just became available, and Chase snapped it up before she could hire a realtor. That adds another six hundred feet of shoreline, and ten acres of forest, to existing Pack lands once the papers go through.\"\n\n\"Are you moving the fence and the gate?\"\n\nHe nodded. \"As soon as the land transfers go through. Under our treaty with the Federal Government, the Pack Lands are exempt from state and local taxes. It also means we can add on, but we can't sell the property. As Pack members, you could lease one of the undeveloped plots between here and the beach and build your dream house. You could also buy Loralei's old place or build a home on one of the vacant lots. I'd prefer you stay closer to the Pack House for security reasons, though.\"\n\nYeah, being at the edge of the property wasn't a great idea. \"How long would that take?\"\n\n\"It depends on how you do it. When we built the initial homes, we started in the fall and focused on getting things up quickly. Most homes here used structural integrated panels built in factories, then connected to the foundations and finished. With normal construction? You could probably get it weather-tight before winter if you hustled, but next year is a better bet.\"\n\n\"I've got some money, but not enough,\" I said. My family's estate was still a legal mess, and my lawyers hadn't settled my lawsuit against the Feds yet. \"Can I even get a mortgage?\"\n\n\"Not on a place here, but you've got time. Let the Pack find you a place for the summer,\" Spider Monkey said. \"Even if you build, you're going to need a place to stay for six months or more.\"\n\nVic nodded. \"And you shouldn't rush decisions on your dream house.\"\n\n\"Good advice,\" I said. \"I need to head into Duluth this afternoon to see my lawyers anyway. I can't make decisions until I know how much money I have.\"\n\nSpider Monkey got up, holding her sore back. \"What are you doing this morning?\"\n\n\"Studying for midterms in physics and world history,\" I said with a roll of my eyes. Online classes sucked; I missed being around people, and I was trying to get through the courses and graduate as quickly as possible. \"I'll spend lunch with Maritza, then head out.\"\n\n\"Have fun,\" Spider said. \"I'll be in my office if you need anything.\"\n\n\"Or just link me,\" Vic said. They headed out to work as I cleaned Maritza up and took her to the Pack child care. I spent an hour reviewing the material in each subject before I took the online tests. I closed up my laptop and headed to the Pack House for lunch. Reuben day, and it was tasty.\n\nLance joined us with his plate as we were eating. \"Papa! Eat!\"\n\n\"How are my girls,\" Lance said as he gave Maritza's messy face a loud smooch.\n\n\"She got it all over your face,\" I said as I handed him a napkin.\n\nHe wiped the Thousand Island dressing off his cheek. He sat down and started to demolish the sandwich. \"We leave in fifteen minutes?\"\n\n\"Yes,\" he replied as he chewed. One nice thing about the link, eating didn't stop the conversation. I couldn't wait to see how it worked while riding. \"Are you sure you're all right to take your bike? You could ride with me.\"\n\n\"My headaches are gone, and Doc cleared me,\" I replied. \"I need this, Lance.\"\n\nHe nodded. \"I can't blame you, and you can't blame me for trying.\" I laughed, and we finished up and took Maritza back to the nannies.\n\nWe geared up and pulled our bikes out of the garage, then headed for the gate with the security team trailing us in a minivan. It was different riding next to Lance than riding formation with a large group, but it was still a blast. The scenery between the Pack and Duluth was beautiful, and being able to carry on a conversation in my head was even better. It was all too soon when we pulled into the parking garage at the downtown office tower.\n\nThe conference room overlooking the harbor at the offices of Dewey, Dewitt &amp; Howe was impressive. Our security waited in the lobby as Lance and I were escorted back into the offices. My team was waiting for me with smiles all around. On the other side of the table was a severe-looking man in a grey suit. \"Good news?\"\n\n\"This is Mr. Chambers from the Department of Justice. We have accepted a settlement offer, Maria. It's within the range we spoke of, and the paperwork is ready. All you have to do is sign the settlement and the non-disclosure agreement, and he will hand over the check.\"\n\n\"Let's see it,\" I said. My lawyer went through the agreement, having me initial in various places before signing off on it and the non-disclosure agreement. The CIA's assassination of the Sons leadership and the innocents around them now had a cost attached to it.\n\nOf course, so did my silence.\n\nMr. Chambers handed over a check to my lawyer, then extended his hand to me. \"You have my sympathies,\" he said.\n\n\"Thank you.\" He let my hand go, but I wanted more. \"There's one other thing I'd like, Mr. Chambers.\"\n\n\"The agreement is final now,\" he said.\n\n\"This isn't about money. The remains of my mother and other family members are still in Mexico, perhaps in a military morgue or buried in an unmarked grave,\" I said. \"I would appreciate their return for proper burial. I'd cover the expenses, of course.\"\n\n\"I will look into it,\" he said.\n\nHe walked out, and I sat back down. \"Maybe we should have asked for more?\"\n\n\"Forty-five million dollars is a fair settlement. We might have gotten more if we played hardball, but a quick settlement allows everyone to move on,\" Mr. Howe said. \"We will deposit the check and transfer you the remainder into your bank account. Our fees and taxes will be withheld, of course. You should have it within two business days.\"\n\nIt still pissed me off that the Federal Government could pay me twenty million dollars with their right hand, then take eight million back in taxes with their left. Minnesota took their tribute as well, pushing the take close to fifty percent. Still, in two days, I'd have over eleven million in my bank and a matching amount in Maritza's trust. I owed Spider Monkey and Chase big time; without the threat of the drone video release, I'd have gotten nothing. I thanked my lawyers, then allowed Lance to escort me out of the office.\n\nWith my fortune, I'd be able to repay Arrowhead Pack for all they had done for me and set up a future with Lance. I wouldn't ever have to work to support us so I could focus on Pack and family. \"Time to look at lake home designs,\" I told Lance in the elevator on the way down.\n\n\"Boats are cool, and waterskis,\" he replied. I smiled and shook my head; boys and their toys. Our home must have a dock, right?\n\nCh. 64\n\nSpider Monkey's POV\n\nArrowhead Pack, Alpha Conference Room\n\nChase had gathered everyone for a strategy session as soon as Vic told him what we had. Around the table were the key players; Chase sat at the far end of the table with Rori next to him. Vic and I were to his right, with Brian Steele next to us. Colletta and Frank Grimes were to Chase's left, with Roadkill and Possum farther down. \"I didn't invite Frank Donovan intentionally,\" Chase said. \"The downstairs group will not be involved in this part unless we agree to bring them in.\"\n\nIt was an upstairs/downstairs division of labor. Legitimate investigations, using the information provided by the FBI or other government agencies, all happened in the basement. Our independent investigators were mostly retired government service. They would not appreciate involvement in illegal activities that could threaten their pensions or their freedom. They were there as a shadow Task Force looking into the CIA and the attacks on the President, in case the bad guys had people inside the real Task Force.\n\nThe illegal shit all happened in my office, where only trusted Pack members and hacker friends of mine were allowed in. My team didn't need search warrants or probable cause; if we needed something, we broke into the computer system and took it.\n\nFrank Grimes, the former DEA agent now with Homeland Security, was the go-between. If the guys downstairs were running into walls, he'd ask us to break them down. If we found something the team downstairs (or in Washington) should know about, he'd find a way to clue them in. It was a high-stress job, and it was showing. The constant calls and travel left him exhausted. He lifted his tired eyes at me. \"I heard you found something?\"\n\n\"I traced the money used to lease the offshore oil rig back to its source,\" I told him. I laid it out; the bank transfers, the shell companies, and Banco Mexico's use by the Sinaloa Cartel and the CIA. \"In the past five years, the Cartel has transferred almost two hundred million dollars into accounts controlled by the CIA. The Agency then uses the 'off the books' money for covert operations and enrich those in charge.\"\n\n\"How are they doing this?\"\n\n\"The Cartel has to launder billions in cash. The Cartel uses dozens of CIA front companies to bring the money to the banks. If there are any questions, the CIA uses its contacts in Mexico to shut them down. The front companies then 'buy' goods from Cartel businesses, and the bank transfers them the money. I've just scratched the surface; it's a big operation. The best part is if the DEA or anyone else gets close, the CIA stops the investigation and shuts down the companies involved. Nobody ever asks where the money is coming from or where it is going.\"\n\nChase shook his head. \"I can't believe the CIA is working with a drug cartel.\"\n\n\"It's nothing new,\" Frank said. \"The Reagan Administration sold arms to Iran and used some of the money to fund a rebellion in Nicaragua; this allowed them to bypass restrictions prohibiting direct support of the Contras. As for working with the Cartels, the CIA and other agencies have been doing that for decades. The CIA helped move opium out of Laos to support the secret war they'd opened up next to Vietnam. Of course, they never did it directly; they just supplied arms, aircraft, and protection of the drug shipments. Nicaragua, Mexico, Honduras, Panama, Venezuela? People have accused the CIA of supporting or actively transporting drugs in all those nations.\"\n\n\"You can't trust the Cartels,\" Roadkill protested.\n\n\"The cartels are the true power in Mexico, not the government,\" Frank said sadly. \"Whole swaths of Mexican territory are under their exclusive control. The police are hopelessly compromised and outgunned, and the military can only control its bases and fixed positions. The DEA has known this for years, Spider. If we are honest, we've already lost the war on drugs. After thirty years, we have more supply and lower prices than ever.\"\n\n\"So you're joining in?\"\n\n\"No, but we work to keep them fighting each other. We cultivate sources within the Cartels who are happy to use us to take out their competitors. Keeping them fragmented is the only thing keeping Mexico from being a narco-state on our southern border. Imagine a powerful Cartel controlling the entire country? I don't like what the CIA is doing, but I'm not thrilled about some of the operations I oversaw either. We'd look the other way to gain something elsewhere.\"\n\nI shook my head; moral clarity wasn't a virtue in intelligence OR hacking.\n\nChase got us back on track. \"You've discovered these links, so the real question is 'now what?' Spider, what exactly have you gained access to within Banco Mexico?\"\n\n\"I've got access to the account records,\" I replied. \"We are still downloading information and following the money trails. There is a lot of work left, as the oil rig lease wasn't the only transfer bounced around to multiple banks. The bank records show that three men have account rights, and one of them is the CIA's station chief in Mexico City.\" I put Henry Consuellar's photograph on the screen. \"The second man, Daniel French, was the CIA's Deputy Director of Covert Operations until Julio killed him on the oil rig.\"\n\n\"And the last man?\"\n\n\"Is a dead end. 'Daniel Alejandro Cortez' appears in no government databases, and Mexican immigration records do not show him. It is a false identity for an unknown person.\"\n\nFrank sat back in his chair. \"Or the CIA had his information removed from the system.\" His finger tapped on the table. \"The only link we have is the CIA station chief.\"\n\n\"What do you recommend?\"\n\n\"Well, the simple option would be to download the account records and anonymously turn them over to the Task Force. They use the information to get warrants, arrest the Station Chief, crawl through the data to uncover where the money went, and keep pulling the weed until you've got it out by the roots. We end the conspiracy, declare victory, and have a pool party.\"\n\nI smiled at that. Vic was the first to pick up on why simple might not be the best answer. \"And as soon as the Task Force has his name and the data, he disappears before they can get a warrant. The money disappears to accounts unknown, and the people responsible spend their retirement days sipping umbrella drinks at a Mexican beach resort.\"\n\n\"That's the risk,\" Frank said. \"These CIA men aren't stupid. Any records get destroyed before the arrest team makes it into the compound, and they won't keep anything incriminating at the Embassy.\"\n\nVic nodded. \"So what is the alternative?\"\n\n\"I can think of a few things,\" Frank said. \"One is to go directly to the President with this. She could send a team, probably military, to capture the Station Chief and his men along with the information in their Safe House. There's less chance of losing him or the records, but you'd have a military assault on CIA agents who won't know they are on the same side. People will get killed.\"\n\nChase didn't like this idea either. \"Or?\"\n\n\"We do it ourselves,\" Frank replied. \"A team of warriors goes to Mexico City and assaults the Safe House, capturing all the information we can and bringing back the Station Chief with us. It's the only way to avoid someone tipping them off. It's not just the President that can't trust her people, Chase. We can't either.\"\n\nChase put his head in his hands. \"Let's say for a moment I'm not ready to declare war on the CIA. What else can we do?\"",
        "\"I can keep hacking,\" I told everyone. \"If I can get access to the CIA account, I can do what I did with the Sons. The money will disappear, and no one will ever find it. That's over fourteen million dollars in off-the-books cash gone in a keystroke. Give me more time, and I could bust into the Cartel accounts as well. They have billions in assets floating around for me to take.\"\n\nVic didn't like that a bit. \"The Cartels would kill us all if they found out. We only took the Sons' money, and the Cartel was already cutting them out of the picture.\"\n\n\"I won't get caught,\" I said.\n\nFrank was on Vic's side. \"The Cartel would stop at nothing to get the person who took their money. Eventually, they would find you, and they would destroy us. Even if we limit ourselves to the CIA money, we're talking international bank fraud. I can't defend that. I don't have a get-out-of-jail-free card for you, Spider.\"\n\n\"You could get one,\" I told him evenly. \"The President doesn't need to know specifics, just that I hurt the ones responsible. The Cartels are not innocent in this if they supplied the missiles.\"\n\n\"I'll pass that along to her privately,\" Colletta said. \"For now, I think it's best if your team focuses on accessing account records and tracing the money transfers. Stealing from accounts is a risk we don't need to take quite yet.\"\n\n\"I can do that,\" I said. \"I'll keep working on the account access codes just in case.\"\n\nI couldn't stop the yawn, and Chase noticed. \"I want you to go back and brief your team, and then I want you to take a nap,\" he told me. \"You've been working hard on this, and we all appreciate it, but your health is more important.\" I saw Rori looking up at him before he held his hand up. \"No, wait. Brian, you go back to work with the team and pass along the orders. Spider Monkey can go straight to bed.\"\n\nI put my hand over my belly and thought about arguing, but then I felt my baby start kicking my bladder and decided to use the bathroom instead. \"Excuse me,\" I told everyone.\n\n\"I'll take you,\" Vic said.\n\n\"No, I'm fine. You stay here and do your job. I need to use a bathroom like RIGHT NOW.\" I left the room with Brian, hearing it lock behind me. He waited for me to finish before walking with me outside and down the hill to our home. It sucked not having the link because I couldn't listen to the rest of the meeting, and Brian wasn't saying anything.\n\nThere was nothing to do but nap. I fell asleep quickly, dreaming about what kind of pool we could build if I stole a billion dollars.\n\nCh. 65\n\nMaria Meztli's POV\n\nArrowhead Pack Lands\n\nAfter discussing it with Alpha Chase, we agreed the only open home was not suitable. It was the lake home the Pack is buying just outside the back entrance. Chase said it was too far from the Pack protection I still needed.\n\nInstead, I accepted an offer from Roadkill and Possum to move into the mother-in-law apartment in the basement of their lake home. It was two houses down from the Alpha's home and directly below the pool portion of the Pack House. It put me a little closer to the front gates of the property, but it was defensible. The tunnel system entrance was in Roadkill's man-cave, just outside the two bedrooms and kitchenette we were renting from them.\n\nIt had taken only a few hours to move across the point with the help of available Pack members. The rooms in Vic's home we vacated backfilled with senior members of his team. It was a win-win for everyone, including Rori's mother and stepfather. They got a live-in toddler to spoil when the grandchildren weren't over.\n\nAs promised, my settlement came through, and my bank account reached new heights. I hired an investment manager, using her to build my fortune and set up a trust for Maritza. I kept almost two million in liquid investments on her advice to handle home construction and other expenses coming my way.\n\nThat led to the next challenge. Chase gave me a copy of the site plan for Arrowhead Pack lands and asked me to select a location for a homesite. Once I'd picked a spot, I'd pay the Pack for the hundred-year lease and submit plans for my home so they could ensure it 'fit in' with everything else. After all, the Pack buildings all used natural materials that blended into the surrounding rocks and forests. It wouldn't help to have a steel and glass, modern-architecture abomination in the middle of it. Add to that required setbacks, elevation restrictions, sightlines, lake contours for docks, and sunlight? We had a lot to do.\n\nWe needed to make some decisions quickly. Lance and I walked along the rocky shoreline as Maritza played in her cat form along the water's edge. Now that we had a link between us, she could get permission to shift without waiting for me to do it first. Jaguars love the water, and she was trying to trap minnows under her big paws as she trotted along. Roadkill was in the group since he would have to handle connection power, sewer, and escape tunnels to any spot we chose. Possum came along to help watch Maritza and to add her advice. Vic was with us for security. Finally, we had a general contractor, Jack Gleason, and one of the architects who had worked on the original Pack buildings, Audrey Meadows.\n\nThe Pack owned a swath of shoreline across the southern shore of Arrowhead Lake. The Pack House and the main buildings were on a point extending a hundred meters out into the lake; the Alpha's home was on the tip. That left two shallow coves on each side. On the eastern side was where we started, moving along the empty lakeshore from Roadkill's home. The shoreline eased around until it faced the north again, running about two hundred meters more until it reached the boundary and the front gate. Just on the other side was a 'cabin' (think a large second home with plenty of room for entertaining). This chunk of land belonged to the Oxbow Lakes Pack Alphas, a gift from Rori to her Aunt and Uncle. Although not our territory, it tied in with our security systems as our Packs were close allies.\n\nThe lake was shallow in this section, with mud and rock base. After walking the length, we stopped to talk about it. \"I'm not thrilled about the northern exposure,\" I said. \"With the land sloping down, getting winter sun will be more difficult. The only spot I like is next to yours,\" I told Roadkill. There were two lots undeveloped there, and the back of them would face east or northeast, granting them morning sunlight.\n\n\"That works better for us since the tunnel doesn't extend this far yet,\" he said. \"Utilities are easy, as they all come in from this side. You're also facing the human homes across the lake, so you need to be a little more careful you don't freak them out.\"\n\nI snickered at that. \"Anyone looking out a window now can see a spotted cat from the Amazon jungles playing in their lake, and it's no big deal. They know about us.\"\n\n\"Let's try the other side.\" One of the Omegas picked us up in a van and drove us towards the back entrance, past the beach, RV park, party pavilion, and boathouse. We skipped the outside properties but looked at the sites between the beach and the back entrance.\n\n\"It's quiet out here,\" I said as we walked along the shore. This section had sand or sand/gravel mix shoreline that gradually dropped into twenty feet of water.\n\n\"It is until the campground fills up and the jetskis start,\" Roadkill said with a chuckle. \"The real issue here is security. You're farthest away from the safe room and armory, and extending the tunnels is very expensive. I've been talking to the Alphas about it, and we think we're going to have to put a safe room slash storm shelter out here near the RV park. The land doesn't rise high enough to put in the tunnels, so those people will have to run for shelter outside.\"\n\nWe moved to the other side of the Pack marina, where there was room for a dozen homes along the south shore until you reached the current construction. The difference was that the tunnels did come out close enough to connect. \"What do you think?\"\n\n\"One of those spots next to Roadkill. You know Maritza will want to be close to the pool, and we can easily put a dock in for our boats.\"\n\n\"Boats? When did a jet-ski become boats?\"\n\n\"His and hers jetskis, a speedboat, and a fishing boat,\" he said.\n\nI rolled my eyes. Boys and their toys. \"Possum, would you mind neighbors who get a little loud while mating?\"\n\nShe laughed. \"You can design your home with extra soundproofing,\" she said. \"I'd love to have your little girl nearby. It makes it easier for Grandma to watch them all.\"\n\nAlpha Rori's voice pushed into our heads. \"Good choice, Maria. We figured you'd want to be close to the pool, so our lawyer is already drawing up the paperwork for the lease.\"\n\nI just laughed at myself; eighteen years old and already predictable. \"It makes the most sense, but I didn't know if you'd want us that close. We aren't Beta-rank, after all.\"\n\n\"Don't worry about that, Maria. Work with the architect to figure out what you want out of your house and get it. We're excited to have you with us and to have you in the neighborhood.\"\n\n\"We're taking the lot next to Possum and Roadkill's house,\" I told everyone. We drove back, and I dried and dressed Maritza up on the way back. Possum volunteered to play with her downstairs while we worked with our building team. We walked the site again, talking about how the slope and the setbacks would affect the design. If we dug out the rocky hillside for a full basement, we could fit two stories above it, each level over 2500 square feet.\n\nJack Gleason started talking construction. We wanted the roof and exterior to match the existing houses and were willing to use the same Structural Integrated Panels to expedite construction. \"We've already lost a month of the building season, and we'll lose another month getting a custom design and approvals. It's easier since Arrowhead is essentially a sovereign territory, but you're on a lake, so the state still gets a say. If you want to finish this before next spring, there a few things you could do.\"\n\n\"Like what?\"\n\n\"Using a poured-in-place foundation and structural panels is a great way to get weathertight faster. If you do that with standard or slightly modified home plans, it will get us building weeks earlier,\" he said. \"You've got examples around you, and using existing plans cuts down the expense and uncertainty. You can still work with Audrey on interiors, room sizes, and things like that. What I need to get going on is a foundation and exterior panel designs so I can start ordering and digging.\" He excused himself, needing to get back to a building site. \"Let me know what you decide, and I'll make it happen.\"\n\n\"Thank you.\" We spent the next three hours with Audrey and her computer. We ended up picking the home design Coral had built that was now Spider Monkey's place. It utilized much of the lot, and I knew I liked the open design. There was one thing I wanted that was different, and it took a few sketches to get it right. I wanted a bright, tall, and warm four-season porch to get through the winters that would help our cats get through the winters. That meant floor-to-ceiling windows on the south end. We ended up taking a corner of the home and notching out the second floor to make a tall, narrow space with room for cats to play. Inside this area, we'd put a hot tub, a table to eat breakfast, a circular staircase to the master bedroom, and a tree for our cats to climb and nap on. The rest was pretty standard, with lots of bedrooms, a workshop at the back of the garage, a huge master suite, and a big kitchen.\n\nWe finally sent Audrey back to her office to start working on the drawings. \"Call or email me if you have any new ideas or changes, and you will,\" she said. \"A few clicks on the computer is a lot cheaper than moving walls.\"\n\n\"We will,\" I promised before she drove away.\n\nWe ate dinner with the Pack and wore Maritza out in the pool, but there was something else my cat and I wanted to do. Maritza went to bed, and Possum agreed to listen for her waking up. It was a warm spring night, and the moon was out. \"Care to run about the woods with me?\"\n\nLance smiled. \"Absolutely.\" He talked two of tonight's patrol wolves into providing discrete protection for us. No longer did the Pack have to hide shifting, so we shifted and had Possum let us out the door. Two patrols in wolf form flanked us as we headed to the center of our Pack lands.\n\nJaguars aren't suited for running all day like wolves are. We like to climb and swim and ambush. I struggled to keep up until I saw where Lance had led us; a small meadow near a creek. He stood tall and proud in the center and waited. Running was wolfy foreplay, so he was ready. A normal werejaguar female was only sexually receptive in cat form during her heat. I wasn't normal anymore; I'd been ready since we left the house.\n\nI crept into the clearing, moving without a sound until I was rubbing my cheek against his side, marking him with my scent. He was bigger than me, and I didn't resist when he climbed over my raised haunches. His long cock pushed into my waiting depths, making me growl in pleasure as he hilted himself in me. He took me hard and fast, holding me by the neck until he filled me with his seed.\n\nWe lay together, talking over the link and watching the stars until his knot receded enough for us to disengage. I shifted back, and he turned with me. It didn't take long for my hand and mouth to bring his erection back, and this time I rode him. \"Do you trust me?\"\n\n\"With my life,\" he said.\n\n\"Good. Don't freak out; you need this.\" He lasted a long time, allowing me to reach bliss three times before it got to be too much for both of us. I grabbed his wrists with my hands, pinning them to his sides, and then I focused on a partial shift. My head sprouted fur, and my jaws elongated, and my moans became growls. I moved faster, and he pounded up into me as we raced to a mutual orgasm of epic proportions. \"Move your head to the side,\" I told him.\n\nHe did, and when he started painting my insides, it put me over the edge. I moved down, clamping my jaws around the junction of his right shoulder and neck, and bit down. Warm blood filled my mouth as my teeth penetrated his flesh. I felt something shift inside me, and his eyes got wide open as the full potential of the mate bond coursed through him.\n\nI released the bite as I regained control of my body, shifting back to normal as I collapsed onto his chest. I licked the blood clean of the punctures, and but they didn't stop bleeding. \"We should get those looked at,\" I said. \"I'm sorry. Big, strong teeth.\"\n\n\"You marked me. I'm sure it will scar well.\"\n\n\"Gotta keep all those horny bitches away from MY man,\" I said with a smile. I got up and went back to cat form. Lance walked around the clearing to verify his shoulder was all right. \"Let's take it easy and enjoy the walk,\" I told him.\n\nSide by side, we returned home an hour later. We shifted on the porch, and I could see the blood still oozing from the wounds. \"Jesus, you got him good,\" Possum said as we walked in. She led him to the kitchen and sat him on a stool while I got the first aid kit out of the bathroom. She cleaned and disinfected the four puncture wounds, and then we pressed gauze over them until they stopped bleeding. \"Normally, I'd put stitches in, but mating bites should be visible.\" She taped gauze over them and sent us off to bed with instructions to take it easy for a few days.\n\nHe tucked me into his side as he slept. I could sense the bond between us strengthening and smiled as I fell off to sleep.\n\nCh. 66\n\nSpider Monkey's POV\n\nArrowhead Pack House\n\nWe did it.\n\nIt took my team three days to hack into the secure file at Banco Mexico and steal the password and fingerprint files from their central computer. With that information, we used a 3D printer to make fake 'thumbs' that would match those of the account owners. I had everything I needed in my purse; the account information, a flash drive with account histories, and two thumbs.\n\nAs I walked to the Alpha's office, my team was 'cleaning up' behind me. Brian was wiping all the removable hard drives. When done with that, he would be loading up all the hard drives, computers, routers, and servers that were part of my hacking setup. Nothing could tie us to what was happening next; none of us would ever get out of prison if we didn't do it right.\n\nColletta, Frank, Rori, and Chase were waiting for me in the Alpha's office. I closed the door, my elation at cracking the codes warring with my nervousness about what would happen next. \"I have full access to the CIA and the Cartel accounts,\" I told them.\n\n\"What has to happen for you to make the transfers?\"\n\n\"I need to access a Banco Mexico computer at any of their branches and log in,\" I told them. \"After that, I can transfer the funds anywhere in the world. I've selected a series of banks that will be near-impossible to trace.\"\n\n\"Well done,\" Frank said. \"Is there any chance the IT administrators at Banco Mexico caught on?\"\n\n\"I'm the best at what I do, but I never say never. The more important point is that this opportunity could go away at any time. All it takes is one password change, and I'm locked out. All evidence of what we have done is gone in another twenty minutes.\"\n\nColletta nodded. \"How much time do we have?\"\n\n\"There's no way to know, but the faster, the better.\"\n\nColletta stood up. \"We better get going then. There is a Banco Mexico branch in Washington, DC. Frank, you get the plane ready while I make a phone call.\"\n\nGood. The sooner, the better, and I didn't want to put Arrowhead in the crosshairs. \"Vic will demand to come. He won't let me go anywhere without protection,\" I said as I rubbed my baby belly.\n\n\"He's packing a bag for you now. Go pack, and we'll meet you in front of your house in ten minutes.\"\n\nChase walked me back home. \"If it's too dangerous, I want you to back off. What we are doing is important, but nothing is more important than the safety of you and the Pack. We can always get money, and I don't need you up at night worrying about if someone found you.\"\n\n\"I know, Chase. But I also know who was on Air Force One that night. These guys aren't just traitors; they tried to kill your MOTHER and the leader of your kind. The Cartels would deserve everything they get, especially if they provided the missiles. I'll get this done, and then I'll take a long shower, lay on the hotel bed, and eat popcorn while I watch the news coverage. I'll sleep just fine, thank you.\"\n\n\"Let Vic take care of you. Maybe take a few days to see the sights and relax. It's better if you stay away for a bit, at least until things settle down. Tell Vic to bring your alternate identifications along and use those.\" We reached my front door, and he patted my shoulder. \"You've done us a great service, Spider Monkey. Anything you need, we'll get for you.\"\n\n\"I know, Alpha. Thank you.\" Vic opened the door and brought me to our bedroom, where I quickly packed a few things for the trip. We left our cellphones at home, taking new ones registered to the Pack instead. The driver was waiting for us outside, and we headed to the Two Harbors Airport.\n\nWe didn't say anything about the job until the jet was in the air and the pilot's door was closed. The four of us sat around the conference table. \"I've reserved a rental car for you under Vic's alternate identification; it will be waiting at the airport. Make your way home, and don't tell us where or when,\" Frank said. He handed me a phone. \"I'll text you with the go-time once I have everything arranged. We need to coordinate this with the assault on the CIA safe house. We can't give them any time to destroy evidence before our men sweep in.\"\n\n\"What about the Station Chief?\"\n\n\"Don't worry about Henry Consuellar. He's going to give up his co-conspirators, or we'll drop him on a street corner in Culiacan with a sign around his neck. They won't kill him quickly.\"",
        "People were going to die because of my actions, and I was all right with that. Traitors deserve to die. \"I need to know where you want the money to end up.\"\n\nFrank handed me a business card with directions printed on the back. My eyes got wide as I saw his writing. \"Are you sure?\"\n\n\"We are.\"\n\nI stashed the card in my wallet. \"You're the boss.\" There wasn't much more to talk about, so I used the bathroom, and we ate the food the kitchen sent along for us. We landed just after one, and Vic parked near the branch location he'd picked. We poked around some of the shops, then sat at an outdoor caf\u00e9 for an afternoon snack. The phone buzzed as I ate my pecan pie with ice cream; the message said \"4:15.\" I looked at my watch; we had twenty minutes until I needed to start the transfers.\n\nWe finished our food and paid the bill. Vic walked me the two blocks to the bank, then went to retrieve the rental car. \"Call me when done,\" he told me.\n\nI kissed him and walked inside. Ignoring the lines at the tellers, I found a banker at one of the desks and got her attention. \"I need to access my numbered account,\" I told her.\n\n\"Of course, Ma'am.\" She led me through a door to a secure area. \"Your thumbprint, please,\" she said when I reached the door where an armed guard stood. I slipped the thin printed thumb-skin over my own, placing it on the reader. The light flashed green, and the electronic lock opened. Inside the small room are a desk, a computer terminal, and a chair. \"Knock on the door when you finish, and the guard will let you out.\"\n\n\"Thank you.\"\n\nI looked at my phone; I had six minutes. I logged into the CIA account first, noting the latest cash deposit credited this morning. Another twenty-four million and change meant for Cartel accounts but now was under my control. I pulled out the card Frank had given me and got to work.\n\nAt exactly four-fifteen, I made the transfer and then changed the password. Logging out, I put on the second thumbprint and logged into the Cartel account. A minute later, all but the ten-thousand-dollar account minimum was on its way to its new home. Changing that password as well, I logged out of the account and gathered my things. I also called Vic and told him to meet me out front. Standing up, I knocked on the door and waited for it to open.\n\n\"Thank you,\" I told the guard as he opened the door.\n\nHe escorted me to the lobby door, holding it open for me. \"Have a good day, Ma'am.\"\n\nI pulled my phone out as I walked to the doors, calling Vic to pick me up. I'd barely made the sidewalk when he pulled up so I could get in. \"We good?\"\n\n\"Perfect,\" I said. I took out the burner phone, texted 'Done' to Frank, then broke the phone in half. It didn't seem real; in five minutes, I'd stolen hundreds of millions of dollars and placed it outside the reach of the Cartel and the CIA black operators. \"Where are we going?\"\n\n\"Ocean City,\" he said. \"I found a nice little bed and breakfast on the beach.\"\n\n\"Now you're talking my language,\" I said. \"Wake me up when we're there.\" I fell asleep before we got on the freeway.\n\nCh. 67\n\nCIA Station Chief Henry Consuellar's POV\n\nMexico City, Mexico\n\n\"Wait for me,\" I told Brad as he came to a stop in front of the Banco Mexico offices.\n\n\"Yes, sir,\" he said. Brad was a recent addition to my CIA team in Mexico and wasn't aware of the purpose of my bank runs. Alejandro was. He got out before me, checked the sidewalk for threats, then waved for me to exit the armored car. Mexico was a dangerous place to be a spy before the Cartels, and it was worse now. The CIA's support of the Sinaloa cartel had not gone unnoticed by their rivals.\n\nAlejandro was one of those guys who looks dangerous while sleeping. The former Army Ranger and Los Angeles County SWAT member looked at people like he was looking for a reason NOT to kill them. His jacket covered up his twin Heckler-Koch MP7A1 submachine guns with armor-piercing rounds, plus a backup Glock 21 in .45 ACP. The armed guards at the bank entrance nodded at him as we passed; we were regular visitors at this branch.\n\nThe assistant branch manager saw us coming and ran to assist us. \"This way, sir,\" he said as he led us to the secure banking terminals.\n\nI used my thumbprint to open the door, and Alejandro verified the room was empty before allowing me inside. I sat down at the terminal and entered my account number and password. The computer gave me an error message before I could reach out for the thumbprint. \"ACCOUNT NUMBER OR PASSWORD INCORRECT, WARNING 1 OF 3,\" it said.\n\nI started over, double-checking the account number, then entering my password carefully. Hitting ENTER got me the same message. \"Dammit,\" I said. I double-checked the caps lock wasn't on, checked the account number against the number in my wallet, and carefully typed in the password. \"PASSWORD INCORRECT, ACCOUNT IS LOCKED. CONTACT ADMINISTRATOR FOR ASSISTANCE.\"\n\nI'd NEVER had this happen before. I got up and pulled the door open, yelling at the assistant manager to get over here. He was apologetic, taking my account number so he could contact Account Services.\n\nFive minutes later, the Assistant Manager came back with the Branch Manager. Both men looked like they had to say Old Yeller died. \"Sir, there is a problem with this account,\" the Branch Manager said.\n\n\"No shit. I can't access it,\" I said.\n\n\"I'll need to see identification and verify your thumbprint before I can discuss this account,\" he said. I handed him my passport, which he compared to the information in the folder he was carrying. He then had me scan my thumbprint. The computer compared it to print on file for my name. \"I don't know how to say this, Mr. Consuellar. According to the account records, you accessed the account,\" he looked at his watch, \"one hour and twenty-one minutes ago from a branch in Washington, DC. The password change happened before you logged off.\"\n\nI couldn't believe it. \"I'm RIGHT FUCKING HERE,\" I yelled. \"HOW COULD I BE IN WASHINGTON EIGHTY-ONE MINUTES AGO?\"\n\nHe nervously swallowed. \"You can't, of course. I've placed a fraud hold on the account while we investigate. The fraud hold will prevent anyone from accessing the account until the investigation is complete.\"\n\n\"And how long will that take?\"\n\n\"Days, maybe weeks, depending on what we find. I assure you we will work diligently to fix this.\"\n\nShit. The lockout was fucking UNACCEPTABLE. I needed to transfer the money to the Cartel accounts TODAY. \"I have time-sensitive financial transactions pending. I can't wait weeks!\"\n\n\"I'm sorry, sir. Substantial financial transactions involving this account occurred just before the password change.\"\n\nI damn near dropped to the ground; as it was, I had to reach back and sit down before I passed out. \"What do you mean by 'substantial'?\"\n\n\"I'm afraid I cannot divulge that information without a valid password entry, sir.\"\n\nI shook my head. \"You locked the account because someone else changed it, but you can't tell me because I don't have the password.\"\n\n\"I'm very sorry, sir. We are required to freeze accounts when there is evidence of fraud.\"\n\nI wasn't going to get any help from these guys. I needed to warn my Cartel contact about the delay before they started wondering where their money was. If they thought I'd turned on them, I'd watch them kill my family in front of me before a painful death of my own.\n\n\"Let's go,\" I told Alejandro. He escorted me out of the building to the SUV waiting a half-block away.\n\nI got into the back seat, only to find a man sitting by the opposite door with a gun pointing at my head. \"Don't do a fucking thing,\" he warned me.\n\n\"Put your hands on the car,\" another voice said. I could see two men behind Alejandro, each holding pistols. He wasn't suicidal; he didn't move as they relieved him of his guns. He was handcuffed and pushed into the third row, where one of the men sat with him while the other sat by me. The door closed, and the car drove away. It wasn't Brad driving, either.\n\nThe man who had just gotten in handcuffed my hands, then roughly searched me for weapons. Finding none, he allowed me to sit back in the seat. The man in charge was in the passenger seat; when his men reported the prisoners were secure. \"Who are you guys? And do you know who I am?\"\n\n\"Peter Graves, Diplomatic Security Service senior agent,\" the man in the front said. \"And yes, I know who and what you are, Henry. That is why the President sent me here. The question is what you are going to do now.\"\n\n\"You're making a mistake. The Company won't stand for this!\"\n\n\"The CIA is being brought to heel. As we speak, agents are raiding your agency's Safe House and seizing all of your computers and records. What I want to know from you is whether we should turn left or right.\"\n\n\"The fuck do you mean?\"\n\n\"You are fucked either way; I'm giving you the choice of who does the fucking and whether they use lube,\" Peter said with a grin. \"You are probably wondering why you couldn't access the CIA account with the Sinaloa Cartel money in it. Our people seized the account and transferred the thirty-eight-million-dollar balance to your checking account in the States. Naturally, the transfer of so much cash from a Mexican bank raised flags with the Drug Enforcement Agency and the Treasury Department. They immediately seized the account.\"\n\nI started feeling faint. Most of that money was Sinaloa cartel cash. \"Do you have any idea what you have done?\"\n\n\"I imagine your buddies in the Sinaloa Cartel are not pleased with you right now. If we turn left, we drive to Culiacan and drop you off with your business associates. I'm sure you will have a lot to talk about with them. They are reasonable men. I'm sure they'll understand you are the victim of hacking and let your family live.\"\n\n\"Or what?\"\n\n\"If we turn right, we go to the airfield and board a jet for Washington.\" He held up a paper for me. \"This is the Attorney General's offer for you. Your family will go into Witness Protection. For you, she is offering life without parole and no death penalty. This deal only happens if you cooperate fully and immediately. You'll answer the investigator's questions and testify against the other conspirators in the plot to assassinate the United States President. If you don't take the deal, the next guy will.\"\n\nI couldn't admit to that! \"What conspiracy?\"\n\n\"I was hoping you'd say that. It's the one that took the life of a brave Air Force fighter pilot. Take a left up ahead; it looks like we're taking a long ride in the countryside.\"\n\nJesus Christ! How the hell did they find out? I was out of options because I didn't want to end up in a shallow grave in the desert. \"NO! FINE. I'll cooperate.\"\n\nThe man to my left took a digital recorder out of his pocket and turned it on. The man in charge smiled in triumph. \"Start talking. The minute we think you are lying to us, we turn around.\"\n\n\"Last year, five of us were at a CIA leadership retreat when the topic turned to the President,\" I started. I was still talking when we reached the aircraft.\n\nCh. 68\n\nColletta Grimes POV\n\nWhite House, Oval Office\n\nI'd arranged for a thirty-minute meeting with the President, requesting that she include only her Chief of Staff, the Attorney General, and the Director of National Intelligence. Frank and I had worked with our Pack lawyer, Ralph Emerson, on the plane. We'd printed the final copies out just before landing.\n\nWe passed through security and waited with the Chief of Staff for President Kettering to finish her meeting with Congressional leadership. \"Any hints,\" Lynette Johnson asked as we waited for the other.\n\n\"Not now,\" Frank replied.\n\nAttorney General Marisol Guttierez and the DNI, General Curtis Ripley, joined us. At our request, we waited until everyone was cleared out of the Oval Office before we entered and closed the doors behind us. \"Frank, Colletta,\" Laura said with a smile as she got up to greet us.\n\n\"Madam President,\" I said. \"We have a way to both uncover the conspiracy and strike back at the Sinaloa Cartel.\"\n\n\"That's outstanding,\" Laura said. \"Your shadow task force found something?\"\n\n\"Not quite,\" Frank said. \"You have friends in our kind, and our Packs have reach and resources that law enforcement can't duplicate. One of these resources made a breakthrough. Some of what they did will allow us to take legal actions against those responsible, while others must remain hidden.\"\n\n\"This breakthrough of yours? You didn't obtain it legally,\" Marisol surmised.\n\n\"No,\" I replied. \"Frank is a sworn law enforcement agent; he had nothing to do with this, as we limited his purview to supervising our shadow task force. The people involved are talented hackers. Before we proceed further, I'll need your signature on this.\" I handed her the pardon letter, which absolved Spider Monkey and her fellow hackers, plus a half-dozen warriors and Arrowhead Pack leadership, from prosecution for specified illegal acts committed within one year of the signature date. The details listed in the attachment would remain classified, and the original signed document would return with me to Arrowhead. If no one ever figured out what they did, no one would know.\n\nGeneral Ripley read through the document, whistling when he read what they had been able to do. He looked at me in shock. \"Do your friends need a job?\"\n\n\"They are good where they are,\" I said.\n\n\"At least you guys are paying taxes on the stolen money this time,\" Marisol added as she set the paper down. \"Seriously? You plan to steal a billion dollars from the Cartel?\"\n\n\"It's a simple plan,\" Frank said. \"We've identified one of the major conspiracy actors as the CIA's Station Chief in Mexico City, Henry Consuellar. We need agents in place to raid his home, his Embassy office, and the CIA's Safe House when our people tell you to go.\"\n\n\"There are national secrets everywhere in those places,\" General Curtis said.\n\nFrank nodded. \"Then send good men to secure them. You are bound to find evidence of the conspiracy in at least one of those places.\"\n\nI continued. \"Our people will be following Henry around. We know from his account history when the Cartel cash comes into his off-books bank account. Within a few hours, Consuellar personally transfers it to their account minus his fee. He has to do that in the bank itself, at one of their secure terminals. When he goes into the account rooms, cellphone signals are blocked. That's when you hit the three locations. Our people will pick Henry up when he leaves the bank.\"\n\n\"Your people? Why not ours?\"\n\n\"If you pick him up, he gets a lawyer and clams up. We have ways of making him talk before the other conspirators even know something is wrong.\"\n\nMarisol wasn't convinced. \"You can't torture him; anything you say will never stand up in court.\"\n\nI knew they would say that. \"Don't worry about that. Henry will voluntarily give up everything before he enters US airspace. When my people have all the information from him, we'll leave him at the airport for your agents to find. Our people will send secure text messages to a number of your choice with the names we uncover. As for probable cause for warrants, you can start with this.\" I handed the Attorney General a memory disk. \"On this chip are account activity statements for the CIA black account, the intermediary banks used with their data, and Cartel accounts. The transfers prove the CIA off-books account paid the lease of the black site prison, funded by laundering drug money for the Sinaloa Cartel. Henry Consuellar is one of three account holders and is primarily responsible for the suspect transfers.\"\n\n\"The other two?\"\n\n\"One we haven't identified, the other is the deceased Deputy Director of Covert Operations,\" Frank replied. \"Oh, and we need you to place Henry's family in protective custody. The Cartel won't be happy with him.\"\n\n\"It's a profitable operation for you,\" General Curtis said. \"A billion dollars?\"\n\n\"Before taxes,\" I said with a smile. \"The CIA funds get transferred to Henry's bank account in the States, where you can immediately seize the money. Your agencies don't have the authority or ability to seize this money before the Cartel transfers it out. The Mexican Government owns Banco Mexico but is a front for the Sinaloa Cartel. Our people can steal it out from under their noses, and you can announce a money-laundering investigation resulted in the confiscation of their funds. Your people don't get specific on WHO took it,\" I said with a laugh. \"So, we need you to sign the paperwork.\"\n\nPresident Kettering and Attorney General Guittierez conferred briefly, then signed the agreement. \"General Curtis, prepare the operation and coordinate with Colletta as needed to take down this conspiracy. Colletta, thank you for doing this. We will keep your names out of the official investigation.\"\n\nI returned the signed pardon agreement to my purse. \"We'll get to work.\" With that, Frank and I headed back to the plane. Chase was already moving assets into Mexico in anticipation of the agreement. I texted him a short message. \"It's ON.\"\n\nFrank squeezed my hand as we waited for our car to come around. \"Are we doing the right thing here?\"\n\n\"I hope to Luna that we are,\" I said. \"I feel bad for Spider Monkey. She can never come home now.\"\n\n\"I think she knows, but I'll let her break the news to Vic. He's going to have to keep her safe, and that means minimal contact with the Packs.\"\n\n\"The money will help. Eventually, the Sinaloa Cartel will be no more, and then we can bring them back to Arrowhead.\" We loaded into the car, and I leaned onto his shoulder as we drove away.\n\nGeneral Curtis let me know when he'd have teams ready, and Chase's extraction team was standing by. Frank sent the go-time to Spider Monkey on the burner phone.\n\nThere was no turning back now.\n\nI hope they get a video recording of Henry when he finds out the people he just confessed his treason to aren't even Federal agents, and there was no plea agreement with the Justice Department.\n\nNext time, ask for identification.\n\nSpider Monkey's POV\n\nOcean City, Maryland\n\nThe bed-and-breakfast was beautiful, and I spent a few hours napping on the chairs overlooking the ocean before our dinner arrived. Vic didn't want me to go any farther than knee-deep in the ocean waves while I planned to spend a lot of time in bed with him.\n\nI put Haley Donohue's \"Midwatch\" down when the food was ready. Vic had set up the small table for us on the deck, the light ocean breeze swirling around my sundress. I kept the conversation light, but eventually, I had to come clean. \"Vic? What I did today will have consequences for us.\"\n\n\"What do you mean?\"\n\n\"I could hack account data remotely, but I had to go into that branch and use their terminal to make the transfers. The security cameras are not connected externally, so there is a video record of me entering and exiting the room. Eventually, someone will use facial recognition or other technology to figure out I was the one who stole the Cartel's money. They will come after us.\"\n\nHe leaned back in his chair, running this through his head. \"I thought the money was going to the Federal Government, and they would take credit.\"\n\n\"The CIA black account money is already in their hands. The Cartel cash is different, Vic. The DEA can't seize drug money without cooperation from the bank and the government, and Mexico wasn't going to help. I took a billion dollars from them. I have automatic transactions set up; by tomorrow night, the money will go through six offshore banks and end up, legally, in the United States under a Pack shell company account.\"\n\nHe drained his beer and opened another while he thought about it. \"Did the Alphas know about this?\"\n\nI nodded. \"We agreed that it was the only way to punish the Cartel for what they did. We can do a lot of good with this money, Vic.\"",
        "He turned away from me, walking to the railing and looking over the water. \"And you didn't tell me.\" I could hear his anger in his voice.\n\n\"If I told you what would happen, would you have let me?\"\n\n\"No way in HELL! You're my mate, and you're my LIFE, Spider! I won't endanger you or our child for anything!\" I let him be for a few minutes. When he started drinking his beer again, I got up and hugged him from behind. \"I can't lose you. I won't survive it.\"\n\n\"I'm sorry I had to hide this from you, Vic. The Alphas agreed with me that this was the best way to handle it.\"\n\n\"I'll be having words with them too,\" Vic said as he shook with rage. It took a while to get him to sit down with me again. \"Why would you go along with it?\"\n\n\"Vic, what is our Pack rank?\"\n\n\"Betas,\" he said.\n\n\"As Betas, what are our main responsibility?\"\n\n\"To support the Alphas and protect the Pack.\"\n\n\"Exactly,\" I said. \"We've been on the run before. We have money, false identities, and the support of the Council and all the Packs. Keep me out of sight, Vic. Keep me safe.\"\n\n\"I always will, my love. Right now, I've got to think,\" he said. I watched him walk down to the water as I went back inside.\n\nCh. 69\n\nMaria Meztli's POV\n\nArrowhead Pack House\n\nWe kept the cable news on while Lance and I set up our new rooms in Roadkill and Possum's basement. The wall-to-wall coverage of arrests in the attack on Air Force One was long on speculation and short on facts. The Attorney General's office wasn't talking, but the stories kept coming. The CIA Headquarters at Langley looked like an FBI convention; news helicopters showed dozens of vehicles out front. Occasionally, the cameras would catch a man or woman in handcuffs as agents took them to the waiting transport van. Meanwhile, boxes of evidence and stacks of computers came out on carts before agents loaded them into the waiting cargo trucks.\n\nIt wasn't just the CIA headquarters. Reporters at the Pentagon caught video of FBI agents leading the head of the Defense Intelligence Agency out in handcuffs. Unconfirmed reports spoke of high-level arrests at the Justice Department, Customs and Border Patrol, and the Internal Revenue Service. \"CONSPIRACY TO KILL THE PRESIDENT,\" the crawl read on the bottom of the screen.\n\nLance had just set down the box of shoes in our closet when Alpha Rori linked to us. \"Change of plans. We need you two to stay away from Arrowhead for a few days. Somewhere remote.\"\n\n\"What about Maritza?\"\n\n\"Bring her along. One of the nannies can help with her.\"\n\nI looked over towards the television. \"Does this sudden trip have anything to do with what we see on television?\"\n\nIt was Chase this time. \"There might be blowback on the Pack, and we don't want you around if that happens. Pick three or four people to go with you.\"\n\n\"And we can go anywhere, just away from Arrowhead?\"\n\n\"You got it. Stay safe, use reloadable debit cards or cash, and keep your phones off except in emergencies. I'll contact your escort when it is safe to return.\"\n\n\"Understood, Alphas. I'll keep Maria safe,\" Lance promised. The Alphas ended the conversation, and he looked at me and shook his head. \"Road trip?\"\n\nPerfect. \"Great. We're taking the Harleys; if some of our escorts can ride, so much the better. We'll take a minivan as a support vehicle and for Maritza. I want to ride part of the Lake Superior tour and check out potential stops and overnights along the way.\"\n\nI could tell he was thinking. \"It's not a good idea to go into Canada right now.\"\n\n\"Backwards. We'll take the southern part through Wisconsin and Michigan.\"\n\nIt took him a minute to noodle on it. Country highways, lots of scenery, and romantic bed and breakfasts? He smiled. \"That works. Start packing while I find some volunteers.\"\n\n\"Start upstairs,\" I told him. \"Seriously, Lance. Possum and Roadkill would kill me if I left them behind on a trip like this.\"\n\nWe ended up with four more people by the time we rolled out of Arrowhead three hours later. Alpha Chase wanted at least two warriors with us, so Meghan Nichols was riding on the back of Tom's Road King. Brenda was along as the nanny to help with Maritza. I was shocked that the van drivers were Betas Rick and Teri. Our computer cases and luggage went into the minivan, filling the back. We'd all packed for a week away. \"Why are you two going,\" I asked as they started the van.\n\n\"Alpha's orders,\" Rick replied.\n\n\"And I'm coming into my fertile time. I'm hoping Strange Bed Syndrome works,\" Meghan added.\n\nI got an idea of how bad things were getting when I saw Rori and her twins leaving for Oxbow Lakes with her nanny and their guard. As we drove around the one-way road between Pack House and the homes, I could see the cars and vans driving away from Spider Monkey's house. \"Frank Grimes is moving his shadow task force to an office building in Two Harbors, with the people moving into hotel rooms,\" Lance sent to me.\n\n\"Where are Spider and Vic? I haven't seen them for a few days.\"\n\n\"They had to go deep underground, Maria. They did a brave thing for us, and now she has a target on her back.\"\n\n\"That's why Rick and Teri are along? The hacking?\"\n\n\"I don't get told everything, baby. They aren't coming back, not for a long time, if ever.\"\n\nI started getting emotional; I hadn't known the Beta pair long, but they were good to me, and I counted her as a friend. \"Are they going to be all right?\"\n\n\"They have our Pack, the Council, and the Steel Ladies in their corner. That should be enough to keep them safe from the Cartel.\"\n\nI had to blink my eyes to clear the tears. I thought about it as we drove out of the Pack grounds. I'd hidden for months on my own, and it was a challenge. Vic and Spider Monkey had hidden as well, after hacking the Sons. The difference was that Vic and Spidey had money and resources that I didn't have. They had friends who would take them in, more money than they could spend, and Spidey could cover their tracks.\n\nThe four motorcycles stayed in line, me in the three-spot, as we headed east. It was a beautiful spring day, and I had my jacket zipped down for now over my thermal undershirt and long-sleeved flannel. It would get a lot colder once we reached the lake.\n\nWe were almost to Highway 61 south of Two Harbors when I noticed the line of black SUV's coming our way at high speed. Six of them, followed by an FBI SWAT van and a panel truck. \"You see those guys?\"\n\n\"Teri is already on the phone to the security center,\" Rick sent back. \"Frank said this might happen. It's why the Alphas wanted us out. We didn't expect it this quickly, though.\"\n\n\"Are they after Spider Monkey?\"\n\n\"Yes,\" Rick confirmed. \"Don't worry. They won't find anything.\"\n\nI prayed to Tezcatlipoca that would be the case.\n\nWe turned towards Duluth and accelerated to speed; I took a spot next to Lance in the lane, figuring I could work on my riding skills. I loved how I had a \"party line\" with the whole group; it was a lot of fun talking about things while the wind whipped past. Teri wanted to know where we were going after we got to Duluth, which was way early to stop for the day.\n\n\"When I was going over the recommended tour with Spidey, we didn't know if the Apostle Islands were worth the extra riding time. They are only two and a half hours from Arrowhead, so maybe people would want to ride home instead? Or do it as a day trip another time? We'd have to stay nearby to catch the boat tours in the morning.\"\n\n\"Are we in any hurry to get anywhere?\"\n\n\"I guess not. Can you get us tour reservations and hotel rooms?\"\n\n\"I'll take care of it.\"\n\nIt was a fun afternoon ride, and we got to the Legendary Waters Resort and Casino late in the afternoon. After checking in, we ate dinner in the Sports Bar before getting our suits and heading for the pool area. Maritza had fun, but it was boring after spending time in Arrowhead's pool, and she didn't like wearing a suit. When she wore out, Brenda took her upstairs while the rest of us hit the hot tub. The spa extended outside onto the patio, so we ended up there watching the sun go down.\n\nWe had a two-room suite, and Brenda and Maritza were already asleep when we got back. Lance dried me gently during the shower before carrying me out and tossing me onto the bed. I squealed as he jumped on top of me, his hands holding my wrists above his head. I wrapped my legs around his waist as we kissed, moaning in pleasure as his attentions moved south of my tracking necklace. He teased my nipples and breasts until I begged him to take me. \"I like making you squirm,\" he replied. He kissed his way down my stomach, making me laugh as he licked my belly button. He put my legs over his shoulder but held my hips down as I tried to raise my needy sex to his lips. \"Patience.\"\n\nHe started kissing my thighs and blowing air over my labia as I desperately tried to get some tongue action. I put my hands on his head, forcing him down, and moaned as my kitty finally got its attention. \"Oh yeah,\" I said as he licked me from bottom to top.\n\nHe froze. \"Don't stop, PLEASE,\" I begged.\n\nHe took a sniff, then buried his nose into me and sniffed again. \"How long has it been since your heat?\"\n\n\"Two weeks. I was going to take a test in the morning,\" I replied.\n\nHe just smiled and went back to work. It wasn't long before the waves of pleasure crashed over me. He moved up to kiss me, muffling my scream as he slid his length into me in one pussy-stretching thrust. I wrapped my legs around his thighs, moving up to meet him with each thrust. After a few minutes of this, he rolled us over so I could ride him. I liked this position, as he could play with my tits while I bounced on his big dick. I came again after a few minutes of this, but he wasn't done with me yet. He pulled me onto my hands and knees then stuffed it into me from behind. I felt his knot forming, stretching my insides like a fist. It felt incredible as he kept pounding me with short, fast strokes. The aftershocks of the last orgasm didn't have a chance to go away before the next one crashed down on me. \"LANCE!\"\n\nHe pushed deep against my clenching sex, holding me in place as he went over with me. I came so hard I couldn't stay up, my chest and face dropping to the bed. When Lance finished firing, he guided me down until we were on our sides, both of us catching our breath. \"I love you, Mama.\"\n\n\"I love you too, Lance.\" I thought he was talking about Maritza, but his hand kept rubbing my belly. \"What did you smell?\"\n\n\"I think your heat took, but you can confirm it in the morning.\"\n\nI fell asleep eventually, and as soon as I woke up, I ran to the bathroom and took the test. I distracted myself by brushing my teeth and doing my hair, but I kept glancing down. When my phone dinged, I looked for the plus sign.\n\nIt was faint, but it was there. According to the instructions, this was a positive test. Stunned, I took it in my hand and walked back out to the bed. \"Lance?\"\n\nHe looked at my shocked face, then down at the test. \"We're having a baby, aren't we?\"\n\nI could only nod. My mate pulled me into the bed, wrapping me into his arms and kissing me deeply. \"I guess we better get married soon,\" he said with a smile as he leaned back.\n\n\"I don't see a ring on this finger,\" I challenged.\n\n\"Details. I've got my mating scar on your neck.\"\n\nWe got dressed, and I looked up at Lance as we got to the door. \"I don't want to tell anyone yet. It's still too early, and Doc hasn't confirmed it.\"\n\n\"I won't say a thing,\" he promised. We ate a big breakfast and headed down the road to the tour boat operator in Bayfield. We stayed inside for the tour due to the cold winds and spray, but we had to get out to see things a few times. The boat tour was a lot of fun. \"What do you think? Add this to the tour or skip,\" I asked the group as we returned to our motorcycles.\n\n\"I'd do it, but it's a good optional activity,\" Possum said. \"Since it is a day trip, if the weather has you behind schedule, you can always do it another time.\"\n\nIt was a good plan. We rode out of the parking lot for our next adventure.\n\nCh. 70\n\nMaria Meztli's POV\n\nAshland, Wisconsin\n\nThe Lake Superior shoreline took us south until we reached the harbor town of Ashland. The Apostle Island tour had taken up a big chunk of the day, so we were stopping here for the night. In the Superior Tour, this would be where we would decide to go home or see the Apostles.\n\nOur group pulled into the parking lot of the Deepwater Grille and South Shore Brewery. It was on my list of stops, and it smelled wonderful as we got off our bikes. We went inside, and Roadkill led everyone over to the brewpub side. \"We're here!\"\n\n\"My brother!\" I recognized Bear and Howler, leaders of the Manchester Steel Brotherhood chapter, from their visit to Arrowhead. Both of them hugged me, with Howler telling me how good I looked in my cut. I got introduced to Vice-President Throttle and his old lady, Nutcracker, and finally Prospect Tim.\n\n\"What are you guys doing here,\" I asked as we sat down at the long table with them.\n\nHowler was so excited to see us. \"Possum said you were on a road trip, and we wanted in. We loaded up our sleds and rode here as quick as we could.\"\n\n\"You didn't ride?\"\n\n\"It's almost a 24-hour drive. The guys did tanks, and I relaxed. I'd rather sleep in the third row of the Excursion than on the back of his Harley,\" Bear said.\n\n\"We're taking their truck and trailer back to New Hampshire, Maria,\" Rick said. \"The Feds raided Arrowhead looking for Spider, and they are bound to look for us too. We're staying at Bear's place until things calm down. Since we aren't in the Club, no one will be looking for us there.\"\n\n\"So, we figured we could ride with you until you get to Sault Ste. Marie and head home from there,\" Bear finished. \"We heard you aren't in any hurry, and that sounds good to us. Take the time and enjoy life.\"\n\n\"What about the Prospect,\" Lance asked.\n\n\"He gets to drive the minivan,\" Bear said. The poor prospect just rolled his eyes; getting into a biker club required all kinds of distasteful tasks. \"You can put him on a plane when you get home.\"\n\nThe waitress came by to take drink orders; since I was the youngster in the group, I had a Coke while everyone else was sampling the South Shore Brewery beers. Bear ordered three kinds of chicken wings, stuffed mushrooms, cheese curds, and onion rings for appetizers. His appetite fit right in with the Pack.\n\n\"I have to ask,\" I said as I looked across at Nutcracker, the curvy blonde with ice-blue eyes.\n\n\"My road name?\" I nodded. \"I was on a charity ride in the White Mountains twelve years ago, me and some girlfriends, and we stopped at a bar.\" Throttle started rolling his eyes, so I knew this was good. \"I was heading to the bathroom when someone bumped into me, almost knocking me down. Someone grabbed me just in time, but he grabbed my tits instead of my waist. I stood up, turned to the guy, and kneed him in the balls so hard it lifted him off his feet. He dropped to the floor and threw up on my shoes. I screamed that he was a 'fucking pervert' and ran for the bathroom. It took me ten minutes to get my boots and jeans cleaned up. I get outside, and Throttle is there with Howler. He apologizes for grabbing my tits, and I learn he wasn't the asshole who knocked me over. I forgave him, he bought me dinner, we went up to his room, and he's been grabbing my tits ever since.\"\n\nI was laughing hard. \"After that shot, he could still get it up?\"\n\n\"Hell, no. Throttle could barely ride back. He was stuffing bags of frozen peas into his jeans at the Clubhouse, but the rest of him still worked.\"\n\nMaritza loved the cheese curds and the kid's pizza while I tried the Lake Superior Whitefish dinner. The food was excellent, but the kid was falling asleep, and it was time for us to go. \"Stay with them if you want,\" I told Lance. \"I'll see you at the motel.\"\n\n\"We're going too,\" Rick said. \"It's a good twenty-four hours of driving if you don't go into Canada, and I've got the first shift.\"\n\nWe said our goodnights, and the Betas made sure we made it into our rooms before they got back on the road. It was a short ride back to the family-owned motel, and it only took a minute to get our keys. We parked right outside the doors.\n\nBrenda's room was next to ours, with a connecting door in between. \"I can keep her with me if you want some private time,\" she told me.\n\n\"No, you should go have some fun, maybe meet some people,\" I told her. She just laughed at me. \"I'll watch you guys until Lance is back, then I'm going to bed. All that greasy food is going to go right through me!\"\n\nMaritza didn't even wake up as I put her in her jammies and tucked her into the second bed in our room. I saw Brenda set a pistol on the bedside table; I didn't even know she had one. \"All the nannies have their permits,\" she told me. \"We protect the children, after all.\"\n\n\"Thank you.\" I took a shower, pulled on a sleep shirt, and was out like a light as soon as I put my head down. I didn't even wake when Lance came in.\n\nI woke up to Maritza calling for me. I was in Lance's arms, and it was six in the morning. Brenda and I took Maritza out to play on the lawn as we watched the sun coming up. It was cold out but no wind yet, and we enjoyed the view of the lake right across the road from us. We crossed over to do some exploring along the lakeshore trail, then picked up some coffees at the Kwik Trip across the street. Lance woke up when we got back.\n\nBy eight, everyone was up. We had a big breakfast before the next leg, exploring a side trip to Copper Harbor. About a four-hour ride to the northeast, the round-trip around a long point sticking out into Lake Superior would be another optional destination. The detour promised good riding, a spa, and a potential place to stop for the night before heading home.\n\nOur biker group was bigger by two now, and since the Manchester leadership outranked us, they led the way, single file. We took our time, enjoying the ride through the hills and small mountains. It led away from the lake, but there were plenty of smaller lakes that we passed. Lake Superior came back into view in the last hour of the ride, appearing through the trees to our left.\n\nThere wasn't a continuous road along Lake Superior, but some left and rejoined the main drag. We took one of these at Houghton, a fun ride that ended in Osceola. We stopped for lunch at the Michigan House Caf\u00e9 and Brewpub. (Yes, there is a pattern here.) It was fun having no time pressure on our adventure, and we stayed there for almost two hours.\n\nFarther to the northeast, we headed for Five Mile Point Road and ended up along a stretch of deserted lakeshore. We found a place to park and took some time to explore. Maritza was happy because we shifted, along with all the wolves in the group. The bikers watched us play and explore along the dunes and driftwood until Maritza was ready for her nap. The road took us past Eagle Harbor Lighthouse before reaching Copper Harbor. We could see the lighthouse across the water, but it was on private land.\n\nWe stopped for the night at the Mariner North Lodge, eating dinner at the restaurant. It was a little tight since they didn't have enough rooms, so Brenda stayed with us in our room with two queen beds. It didn't matter; we were so tired after the day we all slept hard.\n\nThe next day we continued the loop but on the south side of the point. It was a cold but scenic ride to the bottom of Keweenaw Bay. The road then led away from the lake through hardwood forests, so we made good time until we got to the Pictured Rocks National Lakeshore. Finally, we stopped for lunch at the Dunes Saloon &amp; Lakeside Brewing Company in Grand Marais. Everyone was having a great time; other than the cold winds, the route was a blast to ride.",
        "We stopped at the Point Iroquois Lighthouse and took the tour, which was fun. We kept going south, stopping for the night at the Bay Mills Resort and Casino. Lance had explained that the Native Casinos had plenty of hotel rooms but weren't subject to State laws and didn't exchange registration information with the Feds. Maritza didn't care because our suite had a whirlpool tub and a fireplace.\n\nOur last group activity was to tour the Locks on the St. Mary's River that separated Lake Superior from Lake Huron. Maritza was fascinated by the big ships going through. We said our goodbyes to the Manchester group; they were a lot of fun, but we'd see them soon and do the whole tour. I promised we'd visit Manchester when Lance had his Steel Brotherhood cut. The prospect stayed to drive the minivan, and the rest of us headed out on our Harleys to Interstate 75.\n\nLance and I had talked about it; we couldn't go north, as the Alphas didn't want a record of us crossing the border. We hadn't gotten the all-clear to come home either. I didn't want to repeat the same path, so we decided to head south towards Traverse Bay on Lake Michigan.\n\nWe spent three days riding exploring the tourist towns on the eastern side of Lake Michigan before Brenda got a call saying we were safe to return. We were eating breakfast at the Little River Casino Resort near Manistee, about halfway down the east side of the lake. To get home, we'd either continue south through Chicago or backtrack to Sault Ste. Marie.\n\nThat was when the Prospect caught the line heading across the lake on the map. \"What about the ferry?\"\n\nIt was one of the best ideas of the whole trip. We made it to Ludington in time to take the SS Badger, a big passenger ferry, for the four-hour cruise across the lake. Maritza loved it, the boat had shopping, food, and drink, and it was a beautiful day to be out on the water. We braved the cold and ate our lunches on the ferry's top deck at the end of our ride. It left us in Manitowac (south of Green Bay) in Wisconsin.\n\nWe all wanted to get home, so we only stopped for gas and dinner. We arrived just before sundown, the gate opened for us to head in. I didn't miss the FBI agents parked by the entrance. \"What is going on with the Feds?\"\n\nChase answered. \"Unload and get Maritza to bed. Then we can talk in my office.\"\n\nI didn't miss that Spider Monkey's home was dark, with crime scene tape over the door."
    ],
    "authorname": "partwolf",
    "tags": [
        "pack",
        "werewolf",
        "werecat",
        "werepanther",
        "alpha",
        "luna",
        "motorcycle",
        "club"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/aztec-treasure-ch-61-70"
}