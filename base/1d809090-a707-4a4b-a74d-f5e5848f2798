{
    "title": "Dragonborn Rising Ch. 05",
    "pages": [
        "Chapter 6 - Best Laid Plans\n\n*****\n\n\"Who's the poor bastard losing his head?\" I quietly asked the man next to me.\n\n\"Roggvir,\" the man replied out of the side of mouth.\n\n\"What did he do?\"\n\n\"You'll find out in a minute. The captain is walking up the steps now.\"\n\nPlenty of abuse was being hurled at the man dressed in little more than rags, hands bound in front of him. His hair was long and dirty, his beard straggly. But he had an air of defiance in the face of the accusing words. Most were calling him a traitor. I could have a good guess at what he'd done considering the civil war I'd heard about.\n\n\"Roggvir. You helped Ulfric Stormcloak escape this city after he murdered High King Torygg. By opening that gate for Ulfric you betrayed the people of Solitude!\" the captain exclaimed.\n\nThe torrent of abuse only increased, and it took the line of guards keeping the crowd away from possibly tearing Roggvir limb from limb. Roggvir was allowed to step forward to answer the accusation.\n\n\"There was no murder! Ulfric challenged Torygg. He beat the High King in fair combat. Such is our way! Such as the ancient custom of Skyrim, and all Nords!\"\n\nThe crowd continued to be unruly, and it took guards pushing people back with spears, one or two brandishing swords, and I wondered if this wasn't going to turn ugly. But the crowd behaved, stepping back and continued to just hurl insults at Roggvir, while I think the guards took a few barbed words too. The crowd was now so loud, you could barely hear the captain give the order for execution, Roggvir walked forward unaided to the block, where he dropped to his knees and lowered his head. The executioner walked forward, carrying an enormous two-handed axe. Lining up the axe, he took the head of Roggvir in one swing.\n\nTheir bloodlust satisfied, the crowd dispersed rather quickly. The executioner took the head, and I assumed that it would be placed on a pike above the gates as a warning to others. I fell in with the crowd, hoping to be ignored, though the coat I wore would have covered my armour. I'd heard more than one comment suggest I was a thief. They were right, but I certainly didn't like being accused of being one!\n\nMercer had mentioned that I would find Gulum-Ei in a tavern called the Winking Skeever, Locating the tavern wasn't particularly difficult as it was on the main road leading towards the palace. Wandering inside, it was rather full, with two musicians playing an instrument each, with a third providing further ambience with a simply beautiful singing voice. I had to stop, watch and listen for a few minutes, and once she finished, I had to join in with the applause that echoed around the entire tavern.\n\nThought I wanted a tankard of ale after such a long journey from Riften, I didn't want to converse with the Argonian with anything but a clear mind, Mercer and Brynjolf both warning that he was a slippery fucker, and I had the feeling they were not entirely confident I'd get the information out of him we needed. However, though I wouldn't kill him, I could always torture the bastard to get what I wanted. Not that I'd done that before, but when needs must...\n\nI found the Argonian in a secluded corner of the tavern, busy drinking an aisle, back to the corner, eyes on everyone entering and leaving. No doubt he had clocked me enter, and probably sniffed out who I was within five seconds. Standing in front of his table, I simply looked down at him and said, \"Gulum-Ei.\"\n\nHe looked up at me with what I thought was a smirk. \"Let me guess. By your scent, I'd say you were from the Guild. But that can't be true, because I told Mercer I wouldn't deal with them anymore.\"\n\nI took the spare chair without being invited to sit down and just looked at him in silence for a moment. I guess I was naively hoping I'd make him sweat, but he merely returned my look. \"I'm here about Goldenglow,\" I finally said.\n\n\"I don't deal in land or property. Now, if you're looking for goods, you've come to the right person.\"\n\n\"Is that so, Gajul-Lei?\"\n\nReading Argonian faces at the best of times is difficult, but I saw the nervous swallow, so I knew I had him, at least for a moment. \"My apologies. I'm sorry to say I know very little about that... Bee farm, was it?\"\n\nI sighed, ready to take out my dagger to issue a threat or two, but I'd rather get the information without doing that. \"Look, we know you acted as a broker for that deal. Your name is all over the paperwork.\"\n\nHe shrugged. \"Maybe I did, maybe I didn't. I can't be expected to remember every deal I handle.\"\n\nI sighed again, and withdrew the dagger, placing it on the table. \"Listen very carefully, you dumb fuck. You're going to tell me everything I need to know...\"\n\n\"Hasn't Mercer Frey taught you people anything? You kill me and your only contact with the East Empire Company vanishes. That's not smart for business.\"\n\nI let the smirk form, and I could see the body language change. \"Who said anything about killing you? What I will do is drag your sorry arse out of this tavern, find a nice secluded alley, where I will first beat your black and blue, and if you still don't cooperate, I'll start removing fingers and toes until you give me what I want.\"\n\n\"You're not...\"\n\nI slammed dagger point first into the table, no doubt earning the curious glances of others in the tavern. \"You'd better believe I'm not joking,\" I growled, \"Do not test my patience. Someone is fucking with the Guild and I want to know who it is.\"\n\nHe held up both his hands, now scared shitless. Good, that meant he'd tell me the truth. \"Okay, okay, okay. I'll tell you what I know. I was approached by a woman who wanted me to act as the broker for something big. She flashed a bag of gold in my face and said all I had to do was pay Aringoth for the estate. I brought him the coin and walked away with her copy of the deed.\"\n\n\"Interesting. Did she give you any reason why she's doing all this? She's certainly well-funded and in the know.\"\n\n\"I tend not to ask too many questions when I'm on the job. I'm sure you understand. However, I did notice she was quite angry and it was being directed at Mercer Frey.\"\n\nI nodded, definitely understanding what he meant, but still asked, \"Did you at least get a name?\"\n\n\"In this business we rarely deal in names; our identity comes from how much coin we carry.\"\n\n\"Or your aliases,\" I muttered. He snorted in amusement, knowing it was an alias he'd used that led me to his table.\n\n\"Look, that's all I know. I never promised you I'd have all the answers. Now, since our transaction is done, I'll be on my way.\"\n\n\"Watch yourself, Gulum-Ei. You're not smart enough to get away with it.\"\n\nHe gave me a look but I let him leave, letting him think I'd sit there and simply slink back to Riften. But I knew the slimy bastard knew a hell of a lot more than he was telling, so what I needed to do was find out where he was hiding information. Giving him a minute to leave, I knew he worked at the East Empire Company, so just had to figure out where their warehouse was.\n\nHeading back to the gates, I was fortunate enough to see him in the distance, walking down the road and disappearing to the left. Jogging after him, he had already disappeared around another corner, but a signpost said the docks and the warehouse were down the hill. Perfect.\n\nThere was a lone guard on patrol around the docks, looking rather bored by everything. Gulum-Ei had disappeared by the time I was walking along the docks, and I quickly found myself at a large door, the sign stating the East Empire Company was inside. Glancing back to ensure no-one was watching, I managed to pick the lock rather quickly before stepping inside.\n\nStopping for a moment to allow my eyes to adjust to the gloom, I noticed guards on patrol. I didn't particularly want to wander through, cutting down everyone. These were likely legitimate workers, so I kept to the shadows and looked for a way forward. Climbing up a tall stack of shelves, I kept low and in the dark as I moved forward, noticing Gulum-Ei walk forward unimpeded, though he did stop occasionally to share a word with a guard. That was good for me, as I could watch where he was going easily, noticing he finally slipped into a hidden area.\n\nGetting there myself was difficult, and I did eventually have to deal with one or two guards. Ensuring my hands were empty, I made do with knocking them out though made sure they wouldn't be found for at least a little while. Otherwise, it was a case of watching the guards patrol and moving when their backs were turned. It took a while, but I eventually made it to the same door through which Gulum-Ei disappeared.\n\nI have no idea where I was, but it was clearly not part of the warehouse. There was something dodgy about all of it, and after taking care sneaking forward, I noticed bandits or mercenaries instead of warehouse workers. Fair game, as far as I was concerned. I'd left my shield back in Riften, armed with only a sword and dagger. Two men were standing on the edge near a river of water. Sneaking up behind them, I kicked one in the back, pushing him into the water, allowing the other one to turn so I could drive my sword into his gut. The one in the water couldn't swim, and I left him behind to drown.\n\nThe noise attracted attention, as another bandit was running towards me. On the narrow ledge with the water to my left, I parried a couple of his swings before getting in close, putting a foot into his knee. That caused him to drop down and I put a knee into his side, watching him fall into the water. I dealt with another three bandits, none of them particularly skilful, pushing two more into the water, the third required a sword through the chest to shut him up.\n\nGulum-Ei was definitely involved in a smuggling operation, considering the number of large crates and barrels bearing the East Empire Company name and symbol. But my eyes were for the three bandits who he was talking to. He turned as I approached and I think turned a shade or two of green lighter, as the three bandits thought fighting me was a good idea. Fighting three at once is never a good idea, but it was lucky for me that I don't mind fighting dirty.\n\nHowever, I also like to think I have some honour, so once I was one on one with the last bandit, I offered him the chance to leave with his life. \"Drop your weapons now and you can go,\" I said.\n\n\"I'm a dead man if I do.\"\n\n\"You're a dead man if you stay. All the others are now dead or dying. You'll see their bodies in the water when you go. Is this really worth dying for? You'll find another group to work for. This isn't worth it.\"\n\nHis sword dropped first, quickly followed by his shield, and he even added his hidden dagger, before holding his arms wide and walking away. \"You have my thanks, stranger.\"\n\nI waited until I figured he was at least halfway back to the entrance before turning my attention to Gulum-Ei. He was now scared shitless. \"Sit!\" I ordered, the Argonian complying immediately. Standing behind him, I put the tip of my sword on his shoulder, making sure he felt the blade against his neck.\n\n\"Now, there's no need to do anything rash...\" He audibly swallowed. \"This isn't as bad as it seems. I was going to tell Mercer about everything, honestly! Please, he'll have me killed!\"\n\n\"I thought you said the Guild doesn't operate like that...\"\n\n\"The Guild doesn't, but Mercer...\" He trailed off. I was intrigued as to what he would want to add, but I left it for now.\n\n\"Just tell me what I want to know and I will leave you alone, and none of this need be mentioned, though perhaps kicking a few more septims to the Guild will be a good idea.\"\n\n\"I see you wish to be reasonable. Perhaps I misjudged you. The name of the person you want is Karliah.\"\n\n\"And who is Karliah?\"\n\n\"Mercer never told you about her? Karliah is the thief responsible for murdering the previous Guild Master, Gallus. Now she's after Mercer.\"\n\n\"So why are you helping her?\"\n\nHe started to shake his head. \"Help? No, no! Look, I didn't even know it was her until after she contacted me. Please, you have to believe me!\"\n\nI pressed the blade into his neck, enough to give him a fright, perhaps start to plead for his life. But I believed him, fairly sure he was about to wet himself. So I removed the blade and sheathed it, but clamped a hand on his shoulder. \"I believe you, Gulum-Ei. However, what I do need to know is where Karliah is now?\"\n\n\"I don't know. When I asked her where she was going, she just muttered 'where the end began'. Here, take the Goldenglow Estate deed as proof. And when you speak to Mercer, tell him I'm worth more\n\nto him alive.\"\n\n\"In thanks for your cooperation, I'll keep quiet about all this. But I expect a little something in return.\"\n\n\"Now you're speaking my language. Tell you what, if you need any stolen goods fenced, you bring them to me and I'll pay you good money for them. Consider me your new friend in the north.\"\n\n\"And maybe some select goods from the East Empire Company warehouse? I have some lady friends who would like the latest styles. Perhaps a nice dress or lingerie?\"\n\n\"Sure, sure. I can hook you up on the best stuff available.\"\n\n\"Good. Now, since I followed you in here, I'm going to need your help getting out.\"\n\nGulum-Ei helped me get out of the warehouse past the guards, stating I was a new hire just learning what was required. I had to admit, the Argonian was a brilliant liar, and none of them thought he was lying at all. Once we were back outside, he asked nervously, \"Now, you won't forget to tell Mercer I cooperated, will you?\"\n\nIt was now rather late, so I headed back to Solitude and the Winking Skeever. I managed to get a bed for the evening, and enjoyed a hot meal and a few tankards of mead. Though I would have liked some female company, my attempts at flirting with the rather pretty blonde Breton singer blew up in my face, though only because she insisted she didn't sleep with anyone from the crowd. I think she was just letting me down nicely, but was polite enough to join me for a drink and a chat.\n\nThe journey back to Riften took two days, leaving at dawn the first day, making it to Whiterun in the afternoon, where I had another night in the Bannered Mare. I only made it back to Riften after dark the next evening. In fact, much later than usual so that by the time I entered the Bee and Barb, they were already asking for last orders.\n\nWanting some particular female company, Haelga had given me a key before leaving so I was free to come and go from the Bunkhouse. Quietly climbing the stairs, I think Haelga was already asleep as I shut the door silently, only a candle providing any illumination. Stripping off completely, I slid under the covers and Haelga turned over to my body. Only when she felt my presence did she wake up.\n\nShe was eager for my mouth, and the kiss was immediately hot and passionate, wasting little time climbing on top to straddle me. Her hands were all over my face and through my hair, though she eventually stopped to simply look at me. \"Hello,\" she whispered.\n\n\"Hello to you too. Miss me?\"\n\n\"Like you wouldn't believe. Did you miss me?\"\n\n\"Of course.\" Running my hands up and down her back, she leaned down to kiss me again, my cock prodding her entrance, and I managed to blindly slide inside her. She gasped into my mouth, refusing to stop kissing me, as she met my slow thrust by sliding down me. Once our groins touched, she had to break the kiss to smile at me.\n\n\"I love this feeling.\"\n\nShe started to ride me ever so slowly, her mouth still desperate for mine, her tongue exploring my mouth and teeth. Gods, she was a good kisser. My hands ran down her back and sides before finally resting on her arse, giving it a good squeeze. Her arse was fantastic, holding it tight as she started to ride me just a little faster.\n\n\"I love you,\" she whispered, her eyes only for mine as she bounced away. I moved a hand to run it through her blonde hair before cupping her cheek, watching her eyes close at my touch. She wasn't lying. The look on her face, in her eyes, her entire body language, told me what she was feeling.\n\nI wanted to make love to her all night, but it had been a few days since we'd been together, so I felt my orgasm approaching quicker than normal. I warned her about that, but I think she just wanted my cock inside her for a little while, and we'd make up for lost time tomorrow. That didn't stop her riding me faster, hoping she would climax too, but it was too much for me, dragging her down to hold her body tight to mine as I pumped her hard and fast for a couple of minutes before I came. I think she liked my groans, giggling away in my ear as I suddenly felt very drained.\n\n\"I think someone needed that,\" she said quietly.\n\n\"I needed you.\"\n\n\"Didn't get any while you were away?\" My face fell, a little hurt as I thought she accepted that. She immediately noticed and made sure she hugged me tightly. \"I'm sorry. That was mean of me.\"\n\nI hugged her back, kissing her cheek too. \"No. I understand what you mean. And, no, I didn't have company while I was away. But I was always going to come see you first when I returned. And I would have been happy just to lie next to you until the morning.\"\n\nShe slid off me as I continued to kiss her, knowing she hadn't climaxed either. The mood changed as my hands wandered her body, and she spread her legs so I could help bring her off. She was almost insistent that I continued to kiss her until she finally had to rest her head on my shoulder, listening to her soft moans and breathing as I brought her to climax. I felt her shudder as she came, her arms tightening around my body. \"Gods, Ragnar,\" she cried quietly.\n\nI kept fondling her, wondering if she would want another one, but she finally grabbed my wrist and asked me to stop as she'd had enough. \"We'll continue in the morning. It's late.\"\n\nShe kept her promise, as I was woken as the sun rose by her lips around my cock. All I did was shuffle up the bed so I could watch her make love to my cock with her mouth, and she certainly took her time trying to bring me off. I did ask if she wanted anything else, but she insisted that all she wanted was my cock in her mouth, and then my cum down her throat. If that's not love, I don't know what is.\n\nSo I watched her for however long it took. Her eyes remained on mine nearly the entire time, and I did enjoy watching my entire cock disappear into her mouth. I think she was rather pleased to do it at the same time, always looking up and smiling at me when she did.\n\nThe problem with Haelga is that she was an excellent cocksucker, so while I loved what she did, I couldn't handle it for too long. Warning her I was close to orgasm, she kept doing what she was doing, and she was rather excited when she finally felt the first stream of cum erupt in her mouth. She took the entire load and swallowed the lot, ensuring she cleaned me up with her tongue before she simply crawled the bed to lie beside me, giving me a peck on the cheek. \"Morning,\" she said quietly.\n\n\"Aye, morning.\"\n\n\"Thank you for coming to me last night. Did you come straight here?\"\n\n\"Of course. I said I would. The only reason I arrived so late is that we were delayed by a couple of bears on the road. It took a while to scare them off. The driver tried to make up time but the road isn't the best, and he had to be careful once the sun disappeared.\"\n\n\"I was hoping you'd walk in on me as I was masturbating. You could have replaced my fingers or toy with your cock. Just walk in, undress and slide inside me. Just the thought of you doing that got me very excited.\"\n\n\"Maybe next time.\"\n\nWrapping an arm around her, we lay back together, her hand running up and down my chest, my hand stroking her side. She asked what I was doing, admitting that she did wonder what I was up to from time to time, knowing and beginning to accept what I did, particularly once I admitted that, so far, I'd actually done little thieving, finding myself involved in all manner of other intrigues. But I also admitted that I was still a thief at heart, but that I had heard of the Companions of Whiterun, and was considering approaching them.",
        "\"But that would mean taking me away from you,\" I added, \"And I've grown to like Riften too.\"\n\n\"You know how I mentioned company last night?\" I nodded. \"I've heard rumour that you've been in the company of someone else in Riften.\"\n\n\"Ingun. Yes, I have.\"\n\n\"Okay.\"\n\nI couldn't help the chuckle as I lifted her chin to meet my eyes. \"That's it? Okay?\"\n\n\"Again, I was just wondering if you'd be honest, and what you'd say?\"\n\n\"I slept with her before our first time, and while we've had lunch since, we haven't been intimate again.\"\n\n\"Do you want to be intimate with her again?\"\n\n\"Yes.\"\n\nShe smiled. \"Okay. Again, you're honest with me.\" She snuggled into me, adding, \"And she's a pretty girl. I understand the attraction. The best thing is that it would piss off Maven Black-Briar. Bitch.\"\n\n\"Don't like her?\"\n\n\"Gods no, she's a fucking bitch. Far too much power and influence in this city for my liking. Is she aware of your interest in her daughter?\"\n\n\"She is, considering the morning after I fucked her, I had to walk through their dining room where Maven was waiting for me.\"\n\nHaelga found that quite amusing, cracking up with laughter for a good couple of minutes, imagining her reaction to my presence. She quieted down eventually as she confessed, \"I'm sure my niece says things about me, and perhaps even about us, to those who live here.\"\n\n\"Do you care what she thinks?\"\n\n\"I do simply because I have to live with her. And rumours have a habit of spreading. I know people talk about me already, as I've told you before.\"\n\n\"Do you care what they think?\"\n\n\"I know I shouldn't but I do.\" She kissed my cheek, adding softly, \"Though the only real opinion that matters is yours.\"\n\n\"And I think you are an absolute delight, Haelga.\"\n\nI think we would have happily laid there all day, cuddling, chatting, with the occasional round of lovemaking, but I had to report to Mercer, and she had a house to run, further emphasised when her niece knocked on the door, asking when Haelga would be downstairs to help. She didn't want to move at all, but she eventually rolled over me and stood up, giving me a good view of her back and perfect arse. \n\nShe had to pull me up as I was rather comfortable myself, and we dressed together, mixing plenty of kissing and cuddling. Heading downstairs, the dining room was full to bursting, and I quietly apologised to Haelga for distracting her. The last thing I wanted to do was affect her business. She wouldn't hear of it, of course, ensuring she left a long, lingering kiss on my lips before I left her.\n\nHeading down into the Flagon via the Ratway, Brynjolf was sitting with Vex and Delvin, all three looking relieved at my appearance. Taking a seat with them, I declined the offer of an ale before Brynjolf asked, \"How did it go, lad?\"\n\n\"Gulum-Ei talked, but I'd better talk to Mercer before anyone.\"\n\n\"Bad?\"\n\n\"Could be. It will depend on Mercer.\"\n\nWandering into the cistern a few minutes later, it was rather busy as I walked over the raised area towards Mercer's desk, where he appeared to be reviewing a map, or perhaps some heist plans. He looked up seeing me approach and his face darkened. I don't think because of me personally but at what I was possibly about to tell him.\n\n\"So, what did our Argonian friend cough up?\"\n\n\"He said Goldenglow was purchased by a 'Karliah'.\"\n\nI've never seen a man's face drain of colour as fast as Mercer's did. I thought he was about to collapse, wondering if he had a chair behind him to break his fall. \"No, it... It can't be. I haven't heard that name in decades. This is grave news indeed. She's someone I hoped to never cross paths with again.\"\n\n\"Gulum-Ei told me what he knew, which to be honest, wasn't much. What can you tell me about her?\"\n\n\"Karliah destroyed everything this Guild stood for. She murdered my predecessor in cold blood and betrayed the Guild. After we discovered what she'd done, we spent months trying to track her down, but she just vanished.\"\n\n\"Well, she must still have a bone to pick with the Guild because she's returned with a vengeance. But why the apparent hatred for all this?\"\n\n\"Karliah and I were like partners. I went with her on every heist. We watched each other's backs. I know her techniques, her skills. If she kills me, there'll be no one left that could possibly catch her. If only we knew where she was...\"\n\n\"That's where Gulum-Ei did come in useful. He mentioned the words 'where the end began'.\"\n\nHe snorted, as if what I just said had an edge of humour. \"There's only one place that could be. The place where she murdered Gallus. A ruin called Snow Veil Sanctum. We have to go out there before she disappears again.\"\n\nThat caused me to raise my eyebrows in surprise. \"We? Why am I being dragged into this?\"\n\n\"You're neck deep in this already, Ragnar. And while I'm confident I can kill her alone if I have her cornered, I wouldn't mind some back up at least. Your sword might just come in handy. I hope you can fight.\"\n\n\"Can you tell me anymore about what all this is about. Karliah murdered Gallus. Fair enough. But I've thought about it on the way back and I'm still trying to figure out why. What happened exactly?\"\n\nHe thought about it for a moment before gesturing for me to follow. We walked into the Flagon where he grabbed a pair of tankards then ordered everyone out, including Vekel, while told Dirge to bar the other door in until we were done. Taking a seat at a table, I took a sip as Mercer took a moment, I guess to get his thoughts in a line. He still looked utterly shocked by what I'd told him, as if a ghost from the past had reappeared. From what he'd told me, I guess this Karliah was.\n\n\"Twenty-five years ago, Gallus and I were to meet at Snow Veil Sanctum. He wouldn't say why, but I figured it was some sort of heist. The old ruins around Skyrim are full of treasure, though I thought maybe we would be hitting somewhere in Winterhold or Windhelm, as both cities are close by. When I arrived, Gallus stepped from the shadows of the ruin. Before he uttered a sound, an arrow pierced his throat. Before I could even draw my blade, her second arrow found its mark in my chest.\"\n\n\"Bloody hell, so she's that good?\"\n\n\"Karliah was a master marksman and her greatest weapon was the element of surprise. I was lucky as she missed my heart by mere inches. I staggered away from the ruins and my vision began to blur. It's then that I realised the bitch had poisoned her arrows.\"\n\n\"Okay, before we head there, I want to know everything you can tell me about Karliah, because no doubt she's going to take me by surprise anyway, so I'd like to know how fucked my situation is.\"\n\nHe barked a bitter laugh before replying. \"She was a stubborn Dunmer.\"\n\n\"She's a dark elf?\"\n\nHe nodded. \"They make good thieves. And Karliah always had to do everything her way. But she was also the best, bringing in more coin a month than some thieves heist in a year. Gallus trusted her too much and let her get too close.\" I didn't miss the insinuation, and my face must have been easily readable, as he nodded before continuing. \"Were they fucking? I have no doubt they were. But I think she was softening him for the kill. Gallus would call her his \"little nightingale\". He was absolutely smitten by her.\"\n\n\"So she was attractive?\"\n\n\"She could have had all the men of the Guild under her spell if she'd really wanted. Before she proved to be a murderous, traitorous bitch, I would have considered a roll with her. The one thing I can't figure out is what was the true reason she killed him. That's one question I want to ask her before I put her in the ground.\"\n\nI drained my tankard. \"Right, when do you want to go?\"\n\n\"I doubt Karliah will move before I arrive. No doubt she wants a showdown, and I want to be organised before we leave. We'll leave the morning after tomorrow. Get yourself a horse. You should have the coin for a decent one now, and it's better than a carriage. We'll make our way there separately, just in case she has eyes on the city.\"\n\nWhen Delvin returned, I asked where the best place was to buy a map. He laughed and disappeared for a few minutes, returning with a pile of rolled paper. There were maps of Skyrim, maps of each Hold, maps of each city, maps of where all the ruined forts. You get the idea. I took a map of Skyrim, and a map of each Hold. It was a lot to carry but I would only take the map of the Holds I would actually need.\n\n\"What about buying my own place?\"\n\nHe stroked his chin for a moment. \"That will depend on the jarl, though if you have the coin ready to buy immediately, they might be willing to sell without you having to prove yourself worthy. How much coin do you have, if you don't mind telling?\"\n\n\"Two and a half.\"\n\nHe raised his eyebrows. \"Made a bit of coin already eh?\" I chuckled as he added, \"But I know that won't be enough for a house. Most start at five and only go up from there. Sorry, Ragnar, you're stuck with us for a while longer.\"\n\n\"What about a horse?\"\n\n\"You have more than enough. No problem there.\"\n\nHe was right, as I headed up to the stables outside the city gates and had a good chat with the stable owner. He showed me all the horses he had available to sell, asking what I would require. I suggested I'd probably be doing a lot of travel across Skyrim, including into the northern regions, where it was colder. I eventually handed over five hundred septims for a horse the colour of night. I christened him Sooty, much to the amusement of the stable hand.\n\nHappy that I had transportation, I knew I'd need some good armour if I was going up against someone as talented as Karliah probably was. So I headed to the markets and to Grelka. She was surprised to see me, figuring I was likely one of the many who would peruse her wares and never return. I said I wanted the strongest chest armour she could provide, in addition to new boots and bracers, and they must be able to withstand the cold. Realising she was going to make one hell of a sale, she closed her stall and led me to her warehouse, which was simply a converted house down by the river, where she stored much of her stock.\n\n\"What do you prefer, weight wise?\"\n\n\"Light is best. I don't like being weighed down.\"\n\nTaking a seat at a table, she walked in a couple of minutes later carrying a pile of armour. \"Ever heard of scale armour?\" Shaking my head, she started to explain, \"This is some of the best light armour you can buy, unless you're really willing to pay through the nose. What I'm about to give you isn't cheap either. But it's exactly what you'll want. A fusion of corundum and steel, with leather bindings, but light enough that you won't feel over encumbered. Want to try it on?\"\n\nI said I would, and Grelka made no move to leave as I started to undress. Standing there in just my underwear, she asked, \"You have a few scars. Mercenary?\"\n\n\"I used to work for the Fighter's Guild in Cyrodiil. I found myself in one or two scrapes.\"\n\n\"What do you do now?\"\n\n\"Nothing regular. Riften is slim pickings regarding the sort of work I'm used to.\"\n\nIt took a few minutes to get the armour on, as it was a little tight, but I certainly felt more protected than normal. Grelka helped tighten some of the straps for me, making sure it wasn't too snug, though I noticed her hands linger on my arms for a few second longer than necessary. Not that I complained. \"What do you think?\"\n\n\"I certainly feel a lot safer than what I was wearing.\" It was the same armour I'd brought from Cyrodiil, a simple leather armour that was usually good enough for the work I did. But a pack of bandits was different to a dark elf assassin. \"How much?\"\n\n\"Since you're buying a set, I'll give you a discount. The armour is usually three-fifty, the boots and bracers seventy a piece. You don't want a helmet?\"\n\n\"No. I don't like my head weighed down at all.\"\n\n\"Okay, so the armour, boots and bracers... Make it four-fifty.\"\n\n\"Do you haggle?\" She gave me a look that made me chuckle. \"Fair enough. Four-fifty is fair.\"\n\n\"Do you want to keep your old armour? If you don't, I'll buy it off you.\" She had a good look over it. It was in good condition but was old, but I'd figure she could still sell it. \"Tell you what, I'll take a hundred off the price.\"\n\n\"Deal.\"\n\nI counted out and handed over a bag of coin, and she was suddenly rather friendly, if not a little flirty. I took it in my stride, finding it rather amusing, as we walked back to her stall. She thanked me for the purchase, and even mentioned that I might find her in the Bee and Barb from time to time. I thanked her for the purchase and headed back to the cistern so I could leave my armour there and change into some normal clothes.\n\nOnce the sun disappeared, I headed up to town and my usual spot in the inn. I should have known something would go wrong, though, knowing my luck, as I entered to see Haelga and Ingun sitting at my usual table. Both looked my way and smiled as I sat down, wondering what I was about to receive. \"You look like you're about to be sick, Ragnar. Are you okay?\" Ingun asked sweetly, laying a hand on my forearm.\n\n\"No, I'm fine. Just wondering what's going on.\"\n\nHaelga gestured to Talen-Jei to bring us some drinks before she added her own thoughts. \"I was just having a nice chat with Ingun here, Ragnar. Comparing notes, shall I say...\"\n\nI couldn't help roll my head back and groan, hearing both of them laugh. \"It's fine, Ragnar,\" Ingun stated, \"What is going on between us isn't serious. We've only fucked the once anyway.\"\n\nOnce the tankards arrived, and I drained most of it at once, I asked, \"Okay, so...?\"\n\nBoth of them shrugged. \"Well, what I can say is that it's easy for us to be together, Ragnar,\" Haelga stated, \"But Ingun knows that your presence at her mother's manor wouldn't be welcome.\"\n\n\"That's an understatement,\" I stated with a chuckle.\n\n\"That doesn't leave many options for you. I mean, you can always rent a room here, though that might start getting expensive. You can attempt public fucking, but that could see you thrown in jail. Or, and I'm not suggesting this for right now, but we could always have a threesome.\"\n\nI'm glad I didn't have a mouth full of ale, as I'd have spat it out. \"You're serious?\" I asked, looking between them.\n\n\"I've had them before, Ragnar, and I know you have too, so the offer shouldn't come as a surprise. And young Ingun here is open-minded enough that, while she wants your cock, she's willing to give my pussy a try too. And I'd like to give that young pussy of hers a try in return.\"\n\n\"But not tonight?\"\n\nShe smiled. \"Not tonight, Ragnar.\"\n\n\"Well, I am off on a job tomorrow morning. So what's the plan?\"\n\n\"Ingun will go home soon. You're coming home with me.\"\n\nIngun shared one more tankard with us before she left, ensuring to sit on my lap and give me such a long kiss, her tongue doing things that certainly sent signals to other parts of my body. With a final stroke of my cheek, she got off my lap, wished us goodnight, and disappeared out the door. \"Yeah, she's a cutie. I can see why you want to fuck her,\" Haelga stated bluntly. I could only look at her and chuckle, \"I said I don't mind as long as you're honest.\"\n\nWe enjoyed one more drink alone before we left for the Bunkhouse. Up in her penthouse, I threw her on the bed and ripped off her panties. She laughed as I simply hiked up her skirt and buried my face. \"Oh, you want my cunt that badly, do you? You going to make me cum with that tongue of yours?\" Gods, she had a filthy mouth. Another thing to love about her.\n\n\"I'm eating you out then fucking your arse.\"\n\nShe smiled. \"Oh, I love a man who knows what he wants. Go on then, eat my cunt. Make me cum. Then my arse is yours to do whatever you want with.\"\n\nDropping to the floor on my knees, I dragged her to the edge and lifted her pussy to my face. She laughed away as I just went to town on her. With her legs draped over my shoulders, I soon had her writhing at my ministrations, practically pushing her pussy into my mouth. She managed to sit up slightly to grab my hair. \"Fuck...\" she cried.\n\nI think my taking complete control rather excited her, as it didn't take long for her to make the sort of noises that suggested an orgasm was getting close. Her legs still over my shoulders, I just tightened my hold on her and lifted myself up slightly. She laughed and moaned at the same time as the position she was in probably looked awkward, though she made no complaint. \"Ragnar?\" I stopped a moment and met my eyes. \"You eat my pussy like no other.\" I smiled as I continued to eat her out, now watching her eyes and face as she moaned even more.\n\nShe was soon rubbing her pussy in my face as much as I was eating her out, and switching my attention to her clit finished her off, hearing her cry out loudly that she was cumming, her body arching and bucking as I held onto her before she had to ask me to slow down and eventually stop. Lowering her body down, her legs hanging off the edge of the bed, she started to laugh to herself as I started to undress myself, opening the drawer to find the bottle I would need.\n\n\"Not wasting time tonight?\"\n\n\"I want that arse. And I'm figuring you want me in your arse.\"\n\n\"And this is why I pray to Dibella. Oh, we still have a lot to do together, Ragnar. A lot to do.\"\n\nShe stood up and threw off her dress, holding up her panties that were now completely ruined, before she kicked off her boots and stood before me naked. I embraced her for a moment and gave her a soft kiss, holding her tight to my body. \"Softening me up, are you?\"\n\n\"I love you,\" I said softly, \"I know it must sound weird, considering everything else I do...\"\n\n\"What do you think love is, Ragnar?\"\n\n\"I get funny feelings whenever I'm around you. Good feelings. Positive feelings. I want to smile all the time. And definitely be intimate with you. Make you happy. Have you return that smile.\"\n\n\"Well, in addition to all that, do you think about me often?\"\n\n\"I do.\"\n\n\"And you enjoy being with me?\"\n\n\"Definitely. And not just the sex. I just love being with you, holding you in my arms...\"\n\n\"And you want to continue being with me?\"\n\n\"Definitely again.\"\n\n\"And you see some sort of future?\"\n\n\"Aye, I do. Not sure how it will work, but it'll work out.\"\n\n\"Then I think all of that means love. You just make me feel good, Ragnar. You make me feel loved. Only one other man has done that for me.\" She kissed me on the tip of my nose and let me go, getting on the bed on all fours, positioning herself near the edge of the bed, grabbing a couple of pillows to rest her head.\n\nI poured a little oil on her arse and started to get her ready, using my tongue at first, as I would happily eat her arse first, before I slid a couple of fingers in. But she was quickly asking me to just fuck her. \"I want it,\" she pleaded, \"Just give me your cock.\"\n\nKnowing it was going to hurt her, I also wanted to fuck her, so lubed up my cock properly before positioning my head at that tight little hole. She cried out when I slid the head of my cock inside her, hearing her suck in a deep breath, and I stopped immediately. Once she gave me the go ahead with a nod, I slid a little bit more in each time, thrusting ever so slowly as I allowed her to adapt, getting a little faster each time. Once she took my entire length, I would slowly thrust all the way in and out again, just enjoying the tightness of her arse, and she was definitely enjoying it, looking back with a broad grin on her face.\n\n\"Ragnar?\" she breathed, \"Fuck me hard.\"\n\n\"You sure?\" She nodded, holding back her hands so I could grab her. I know I smiled, and hers broadened even more.\n\n\"You're in charge now. Make me yours completely.\"\n\nMy hand was large enough to hold both her wrists, and I quickly started to pound her, giving her arse a hard slap at the same time. The noises she was soon making suggested that she was loving it. And I mean absolutely loving it. Continual cries of 'yes' and praise of my prowess as a lover and the size of my cock. And the obligatory 'fuck me' or 'fuck me harder'. ",
        "Thrusting into her even harder and faster, I pulled her back so her back rested against my chest, feeling her feet against my legs. She turned her head to kiss me before she leaned her head back. \"Gods, I'll never get tired of your cock being inside me.\"\n\n\"And it'll never get tired of being inside you, Haelga,\" I grunted in return, feeling my climax starting to approach.\n\n\"You want to cum?\" I nodded. \"Your choice. Where?\"\n\n\"Oh, this is going in only one place and that's where my cock currently is.\"\n\n\"Just what I wanted to hear,\" she whispered before kissing me again. I kept an arm wrapped around her body as I started to fondle her pussy, her body almost jolting out of my grip. She moved my hand back around her body and started to fondle herself. \"I can do that. You just focus on fucking me.\"\n\nI wasn't going to last too much longer, and I pushed her back down to the bed flat. I fell on top of her, holding myself up just by my forearms, so she could still fondle herself, as I proceeded to just pound her as hard as I could. To my surprise, she absolutely loved it, crying out for me to keep going, and it was all just a little bit too much for me in the end, burying myself deep one last time as I felt myself unload, groaning loudly into her ear, laced with plenty of colourful language about how good she felt.\n\nOnce I felt empty, I stayed where I was for a short time, Haelga turning her head so I could lay a soft kiss on her lips. \"Okay?\" I asked quietly.\n\n\"Now I really love you, Ragnar,\" she whispered, \"Just what I wanted. My man to take charge.\"\n\n\"How do you mean?\"\n\n\"I'll explain once you're no longer buried in my butt.\"\n\nWe took a couple of minutes to clean up, surprised that she made no complaint at all about any pain. In fact, she hummed a tune to herself as she sorted herself out, a constant smile, blissfully happy at what just occurred. Joining me back on the bed, she cuddled into me, immediately running a hand up and down my body as we kissed again.\n\n\"I like to be submissive, Ragnar,\" she admitted, \"Only in the bedroom, and not all the time, but I like not being in control. But there's only one other man I've been like that with. But I trust you completely, and know I can give myself to you in such a way that I know you'll never hurt me intentionally. Nor accidently, if I'm honest.\"\n\n\"I've heard of things like that, but I'm used to just... you know, sex.\"\n\n\"You're young, Ragnar. And this is certainly something only those who practice the Dibellan arts would be aware of. Would experimenting with me in certain ways interest you?\"\n\n\"Yes, it would, particularly if it makes you happy.\"\n\n\"Ragnar, just looking at you naked makes me wet. The idea of you taking complete control of me? I could probably orgasm just thinking about it.\" That gave me a good chuckle. \"But we'll have to talk about it, and there will be some learning on your side.\"\n\n\"I think I'll have the perfect teacher though.\" I paused before asking, \"This is just for the bedroom, right?\"\n\n\"Absolutely. And, as I said, not all the time. I love it when you are soft and gentle with me as we make love. I love it when you're a little bit rougher when you just fuck me senseless. But there's another level above that which we can explore.\"\n\nI'll admit, it sounded interesting, and it was with Haelga, then I knew I was going to enjoy it immensely. I didn't quite know what to expect, but she appeared to know what she was talking about, so she'd be the perfect guide. We eventually fell asleep together. Waking up at dawn as always, we made love again, her legs and arms wrapped around me as it was far softer and sensual than the night before, our climaxes barely a thought before we finally had to part.\n\nAt the front door, we embraced and kissed for long enough that her niece cleared her throat. I chuckled as Haelga blushed, telling me to be careful whatever I was up to, before I kissed her softly a final time and headed out.\n\nHeading down to the cistern, I changed into my new armour and grabbed everything I needed, Brynjolf wishing me good luck and to be careful before I left. Mounting my new horse, I pointed it in the direction of travel and gave it a good kick in the ribs. It didn't move fast but I knew it would get me to Windhelm within the day.\n\nLittle did I know how my life was going to change within the next couple of days. Everything was a lie."
    ],
    "authorname": "unknownauthor29",
    "tags": [
        "fantasy",
        "fan fiction",
        "skyrim",
        "dragonborn",
        "anal",
        "celebrities",
        "romance",
        "romantic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/dragonborn-rising-ch-05-1"
}