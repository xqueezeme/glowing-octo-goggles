{
    "title": "Michelle's Arms",
    "pages": [
        "This story involves people with a particular fondness for body hair, so if that does not interest you, you might wish to skip this story by.\n\n....\n\nChapter One: Running late.\n\nDamn! I swiped my credit card through the machine again. Nothing. One more time produced the same result.\n\n\"Sorry,\" a female voice said over the intercom, startling me so much I dropped my card. \"That thing doesn't work sometimes when it's damp out.\"\n\nI looked toward the building that housed the convenience store of this Hess gas station, cursing myself for stopping at this particular place, which wasn't even my usual stop. I was running late as it was, and was only looking for a splash and dash so I could make it to work on time. Now I had to go into the store and waste even more time.\n\nSo I marched into the store to pay for my gas, trying to figure out how I was going to make up this lost time, and cursing Leon Hess for having defective credit card readers. Behind the register was a timid looking young woman who looked like she was expecting an argument from an irate looking customer, namely me.\n\n\"Sorry,\" the young lady said, looking at me but not making eye contact. \"I wish they would fix that one. The rest of them work okay.\"\n\nAs she spoke, she waved her arm toward the outside and the six other pumps. For some reason, my eyes followed her hand as it moved, and as it did, the girl's sleeve slid up her arm. Not far - only halfway to her elbow, but as it did, I was treated to an incredible sight. Incredible to me, at least.\n\nThe young woman's arm was quite hairy. Not just the faint down you find on many women, but a rich coating of long black hair. The sight was so amazing and arousing to me that I couldn't take my eyes off of it. Only when she noticed my staring and pulled her sleeve back down was I able to come out of my trance.\n\n\"Oh,\" I said, handing the girl my credit card, which she took very cautiously from me, probably taking me for a pervert.\n\nThe hair stopped right at her wrist, I noted as she swiped my card at her register. Faint olive skin, curly black hair tied up in back, and what seemed to be a nice enough figure under the store's smock. All well and good, but what I would give for another glimpse at her arms.\n\nMichelle. That was her name, or so claimed the tag on her chest. Michelle was doing her best to not look at me, and an even better job at holding her sleeve down as far as she could.\n\nI signed the slip she placed on the counter, allowing me another brief peek at her furry wrist, before whisking it away. Smiling with what I hoped was a friendly expression on my face, I took my receipt and started to turn and exit the store, but for some reason I stopped.\n\n\"Have a nice day, Michelle,\" I said. \"And by the way, your arms are magnificent. You shouldn't hide them like that.\"\n\nMichelle looked at me like I was totally weird, which may have been accurate. She seemed like she was going to say something, but stopped and just stood there, the ends of her sleeves secured by her fingers holding the fabric tight against the insides of her wrists.\n\nI left the store, having made a complete ass of myself. I half-expected the police to swoop in and have me arrested or something. What I had just done was so out of character for me, because I was never one for much small talk, and certainly had never just blurted out something of that nature. It was like the thought went through my mind and came right out of my mouth.\n\nGet a grip. That was what I was thinking as I drove away from the gas station. My humiliation grew with every passing moment, and by the time I finally got to work - ten minutes late - I had made up my mind that I would never stop in that gas station in Ballston Spa again. Hell, I might just avoid the whole town completely from now on.\n\n***\n\nChapter Two: Back for more.\n\nHaving said all that to myself on that Monday morning, it's hard to explain why I found myself pulling into that very same station on Tuesday morning. This time I managed to get started earlier, so that I would have time to do what I felt I had to do.\n\nMichelle was waiting on another customer when I came in, so I didn't think she saw me as I went to the coffee pots beyond the register. Good thing for me, I figured, because she might have hit the store alarm or something. \n\nAs I poured a cup of coffee, which was my excuse for coming into the place, my hands were shaking and I was beginning to think this wasn't such a good idea after all. The previous day, this seemed a whole lot easier as I rehearsed it in my mind. Now actually being here with the moment at hand, it was suddenly much different.\n\nI walked up to the register like I was going to death row, ashamed of myself for being afraid to speak to a girl who was probably in her mid-twenties, likely half my age. The previous customer had left, and now I went up and set my cup of coffee down.\n\nMichelle's eyes flashed with recognition as I stepped up to the counter. You know the feeling you get when you recognize someone but suddenly realize you aren't sure why? That was the look I got initially, which was followed by the startled look similar to the one she had left me with the day before.\n\n\"I just wanted to apologize if I embarrassed you or made you uncomfortable by what I said yesterday. I meant no harm, and just blurted out what I was thinking for some reason. I meant what I said, but it wasn't right of me to be so forward.\"\n\nThat was what I was going to say. Well, what I actually said to Michelle that day, I have no recollection. It was something resembling my planned speech, but I was stammering and stuttering and babbling on so much, that it would be difficult to actually remember what came out and would likely be impossible to read.\n\nWhat I do remember was that it took me forever to get it out, during which time I was sweating profusely and twitching like I had fleas, and by the end Michelle was even showing a hint of a smile at the corners of her mouth.\n\n\"Did you understand anything that I just said?\" I ended with, shaking my head and chuckling at myself. \"Was there even a single coherent group of words in that babbling?\"\n\n\"Yeah,\" Michelle said, handing me my change while I tried like hell not to look at her hand to see if her sleeve had slid up. \"It's okay.\" \n\n\"Good!\" I said happily. \"Have a great day, Michelle.\"\n\n\"You too Jeff,\" Michelle answered, and after I left, I wondered how she knew my name?\n\nThe credit card from yesterday. Of course! She probably wrote that name down on some store list of shady characters, and I couldn't blame her for that. Then again, maybe she liked me. Sure.\n\n***\n\nChapter Three: Becoming a regular.\n\nNo, the first theory was probably the right one. That didn't stop me from making that Hess station part of my new morning routine, however. Each morning on the way to work, I would stop for a cup of coffee or a paper, whether I needed gas or not. I learned the days Michelle had off, and bypassed the place on those days.\n\nEvery other day, I showed up. Neither rain, nor sleet nor snow would stop me from my morning stop to see Michelle. The place was usually busy in the mornings, so we would just exchange pleasantries, but she gradually grew more at ease around me as I became a regular. She was friendly but shy, and had an adorable way of looking at my neck while she talked, almost as if she shied from eye contact.\n\nI was still savoring the occasional glimpses of Michelle's forearms, but even as the weather got warmer, she would always wear long sleeves. Somehow, this made her all the most erotic to me. I would arrive each morning hoping to see her in a short sleeved blouse, and invariably would find her wearing another long sleeved top, which would only add to my curiosity. \n\nOne morning, the store was empty when I arrived, and I got the chance to have more than few words in passing. I mentioned that the weather report said that temperatures would be on the rise for the rest of the week.\n\n\"Time to get out the summer clothes, I guess,\" I said casually. \"Get the boys all excited and all.\"\n\n\"Don't think so Jeff,\" Michelle said. \"They really blast the AC in here.\"\n\n\"Oh - too bad,\" I said. \"I guess my dream of showing up one morning and seeing you wearing a sleeveless blouse will never happen.\"\n\n\"Not here it won't,\" Michelle chuckled, and if she hadn't remembered my comment from a few months ago, she was reminded of it now. \"Management wouldn't approve of having their customers scared off.\"\n\n\"They might be surprised if business picked up though.\"\n\n\"Okay then, maybe I'll wear a short sleeved blouse tomorrow,\" Michelle said with a smile.\n\n\"Great!\" I said quickly, before I remembered something. \n\n\"Wait a minute. You're off tomorrow,\" I said recalling that she didn't work on Fridays.\n\n\"That's right,\" Michelle said with a wink. \"Hey, do you have my work schedule memorized?\"\n\n\"You don't think I come in here for the coffee, do you?\"\n\n\"Well, I think I make good coffee.\"\n\n\"You do, but I can get coffee anywhere. It's the abuse I come here for,\" I replied.\n\n\"Where will you be getting coffee tomorrow then, Jeff.\"\n\n\"I dunno - Coffee Planet maybe,\" I answered, referring to the little shop a mile or so down the road. \"They have a beautiful cashier too,\" I added, and while that much was true, her arms were no match for what I pictured Michelle's to be.\n\n\"Around this time?\" Michelle said, nodding toward a customer that had just entered the store.\n\n\"Yeah,\" I said with a curious look. \"Why do you ask?\"\n\n\"Well, maybe I'll see you there then.\"\n\n\"Really?\" I asked.\n\n\"Never can tell.\"\n\n***\n\nChapter Four: Coffee with Michelle.\n\nI really hadn't any intention of stopping at Coffee Planet that next morning, but when Michelle suggested that she might be there, that was enough for me. Arriving in downtown Ballston Spa on Friday morning, I had no trouble finding a place to park.\n\nIt was giving every impression of becoming a warm and sticky day, but at least it was a very comfortable morning, which eliminated that excuse as a reason for me sweating already.\n\nThe coffee house looked empty when I first entered, so I poured myself a cup and prepared to sit around and nurse it until Michelle did or didn't show up.\n\nI had enjoyed the buildup that led to my being here, hoping for the chance to spend some real time with Michelle, but I didn't really expect here to show up. After all, she was laughing when she insinuated that she would be here, and I found it far more likely that she was only kidding.\n\nI grabbed one of the free weekly papers at the cream and sugar station and headed toward the back of the long room. When I got around the column that broke the room in half, I was stunned to see Michelle sitting at a table by the window, smiling and giving me a little wave.\n\n\"Hi!\" I said, or more accurately, exclaimed as I joined her at the table. She was looking even more adorable than usual, and was wearing a light blue windbreaker and shorts.\n\n\"Wasn't sure if you were going to show up,\" Michelle said, already well into her coffee.\n\n\"I was thinking the same thing,\" I told her. \"I figured you were just kidding around.\"\n\n\"Me too. You're always joking about everything, so I wasn't sure whether you actually would come.\"\n\n\"I wanted to wait until you already bought your coffee so I could save the buck and a half.\"\n\n\"Then maybe I'll have another one, smart guy!\"\n\n\"What is it?\" I asked, leaping up before she could change her mind.\n\n\"Chocolate raspberry - splash of cream, no sugar.\"\n\nI went back up to the counter and got Michelle her coffee, and when I went back to the table, she was in the process of removing the windbreaker. By the time I reached the table, the coffee waves were rocking and splashing hot liquid on my fingers. I hardly noticed as she put her elbows on the table.\n\n\"You're a woman of your word,\" I said as I slid the cup in front of her and slid into my seat.\n\n\"Thanks. You mean by showing up?\"\n\n\"No, I was referring to your blouse,\" I replied.\n\nThe powder blue blouse had very short sleeves that merely cupped her shoulders, and what was exposed made my heart race with excitement. Michelle's arms were amazing works of art. Her very shapely biceps had a slight hint of muscularity to them, and the down that coated the outsides of them shimmered in the sunlight that filtered in through the windows.\n\nBelow her elbows, the fine black hair was just as long and dense as I had imagined, and as I mentioned her blouse and nodded toward those stunning arms of hers, Michelle self-consciously ran her hands up and down the opposite forearms. Watching the soft hairs billow in the wake of her passing fingers, I longed to do the very same thing to her myself.\n\n\"Quite a sight, isn't it?\"\n\n\"To me it is,\" I said. \"Covering up those arms all the time is borderline criminal. I told you something like that the first day I saw you. Remember? The time you probably wanted to mace me or something?\"\n\n\"I remember it well, Jeff. I had thought you were being sarcastic or something. I've been teased all my life about my hairy arms.\"\n\n\"That's dumb,\" I answered. \"Hair's a natural part of everyone body.\"\n\n\"How many women do you see with arms like mine?\"\n\n\"Not nearly enough for my tastes,\" I assured her. \"I've seen women with more, if it gives you any comfort.\"\n\n\"Back in school, did you ever have to stand up and tell the class what you wanted to be when you grew up? Well, when I stood up I told them I wanted to be a doctor, and Billy Chapman yelled out, \"Who, Doctor Zeus?\" \n\nThe name sounded familiar but my memory failed me for a moment.\n\n\"You know, from Planet of the Apes.\"\n\n\"Not all that funny or accurate,\" I said as I nodded and shrugged my shoulders.\n\n\"When the teacher laughed, I wanted to die. Funny thing is that I always thought the hair was kinda neat,\" Michelle concluded, rubbing her hands along her furry forearms again and making me very uncomfortable, because my briefs were becoming quite crowded.\n\n\"I think it is too.\"\n\n\"My ex-fiancee - the guy I helped put through law school before he dumped me - he wasn't too big on it. Probably why he gave me the old heave-ho. He had me waxing my arms and shaving them all the time. Said he loved me in spite of my hair.\" \n\n\"You're better off without him,\" I counseled. \n\n\"Easier said than done. I wasted four years of my life with him. Paying the bills and everything. He passed the bar and decided that he needed a different girl - probably a non-hairy one - to showcase on the country club circuit. That's how I ended up here. Moved from downstate and hit this little town, and just decided to pitch my tent here.\"\n\n\"I'm glad you did.\"\n\n\"Won't be forever,\" Michelle said. \"My career goal isn't to work 6 to 4:30 four days a week at a gas station. I've got an accounting degree, but this area seems to not need many of those right now.\"\n\n\"You're a smart and attractive woman, and I have a hunch that you'll find something real soon,\" I assured her. \"And as far as your personal life goes, that lawyer has no idea what he missed out on. You wait and see. You'll find some lucky young guy around here in no time flat.\"\n\n\"Young. Old. Who cares? Ages are just numbers. I'm 26. How old are you? 45?\" Michelle asked me.\n\n\"Thank you. I'm 51.\"\n\n\"That's a good number,\" Michelle said.\n\n\"If I wasn't twice your age, I'd be panting at your doorstep,\" I assured her.\n\n\"You aren't twice my age,\" Michelle corrected me. \"You were twice my age last year. Do the math. Plus, I'll be catching up with you with each day. Also, I'm partial to panting.\"\n\n\"You're right,\" I said as I did the math as instructed. \"You're good with numbers alright. So it's official. Let's get married so I can pant in private.\"\n\n\"Why not?\" Michelle said with a laugh. \"Too bad you have to go to work, or I'd show you a good time.\"\n\n\"I'm having a good time right now,\" I assured her, and as my eyes traveled across the table, I was rewarded with an even better time.\n\nMichelle's elbows were on the table, and as I looked at her arms again, I happened to catch a glimpse of something I found spectacularly erotic looking. Peeking out from under the short sleeve, I got a fleeting glimpse of hair peeking out on the inside of her bicep, and while it was only a brief view, it made me all the more fascinated by her.\n\n\"I guess you are,\" Michelle said. \"Too bad you have to go to work.\"\n\n\"I took the day off,\" I informed her.\n\n\"In that case, since you like to look so much, I'll let you watch me do my laundry at the laundromat across the street.\"\n\n\"I can fold with the best of them, I'll have you know.\"\n\n\"Just keep your paws off my unmentionables,\" Michelle warned me with a wag of her finger.\n\n\"I'll avert my eyes when the panties appear,\" I assured her.\n\n***\n\nChapter Five: She wasn't kidding.\n\nWe did have a good time at the laundromat, believe it or not. Lively conversation and a room so warm that Michelle had to keep her jacket off was all I needed to keep my interest level high.\n\nAnd when she folded, I was afforded brief glimpses of her underarms when she raised her arms to fold sheets and things. The tiny sleeves of her blouse were loose enough to allow me to peek under at the rich auburn fur that seemed to fill the gentle hollows of her armpits.\n\nThe sight was so erotic that I made no effort to hide my efforts to look under her arms at every opportunity. To my delight, Michelle not only made no attempt to shield herself from my prying eyes, and a couple of times had seemed to welcome my staring by holding her arms up longer.\n\nBy the time she had finished doing her laundry, I was wringing wet and horny beyond belief. We carried the baskets of clothes to her car and looked at each other.\n\n\"Well Michelle, that was a lot of fun. Anytime you need help folding, I'm your guy.\"\n\n\"You were awesome with the sheets,\" Michelle said, shyly looking at my neck. \n\n\"I was wondering if sometime you might like to go out - I mean really out.\"\n\n\"Like a date?\"\n\n\"Well, yeah. I guess. I mean, I know that I'm really...\"\n\n\"Yes. I'd love to. Stop trying to talk me out of it, although I love how flustered you get when you get nervous.\"\n\n\"Hey, beautiful women make me nervous,\" I protested. \"Besides, you're rather shy yourself.\"\n\n\"How do you figure that?\" Michelle asked, leaning on her opened car door.\n\n\"Well, a lot of time you don't make eye contact with me. Not all the time but sometimes.\"\n\n\"Is it that obvious?\" Michelle said.\n\n\"I warned you that I'm very observant,\" I reminded her.\n\n\"Well, if you're that much of a Sherlock Holmes, you can easily figure out why I don't always look into your eyes.\"\n\n\"Let's see,\" I said, putting my hand on my chin and striking a studious pose. \"Is it because I've mentioned something that embarrasses you?\"\n\n\"Nope. Words don't usually faze me. Try again.\"\n\n\"Okay, wait. I'm thinking.\"\n\n\"Is that what you're doing?\" Michelle asked. \"Looks like you're constipated.\"\n\n\"Must be thinking too hard,\" I said laughing. \"I do like it when you talk dirty like that, though.\"\n\n\"Poop. I can tell that you're stalling for time.\"\n\n\"Give me a hint, and I'll tell you the real reason that I'm stalling,\" I offered.\n\n\"Okay, your hint is that we have something very much in common,\" Michelle said.\n\n\"We do?\"\n\n\"That's obvious. Now what could that reason be? Why would I look into your eyes yesterday and not so much today? Why will I not be making much eye contact tomorrow if you come in for coffee?\"\n\n\"Because it's Saturday? Weekends? Weekdays? Even numbered days? Full moon? Come on Michelle,\" I laughed. \"I'm dying here.\"\n\n\"Are you stalling still?\"\n\n\"No, and the reason I was stalling is because I've laughed more in the last few hours than I have all year combined. I think you're a fascinating conversationalist and I love being around you, and so I'm trying to delay this goodbye.\"",
        "Michelle smiled and bit her lower lip, looking so adorable I wanted to hug her. She got into her car and rolled the window down.\n\n\"You earned another hint,\" Michelle said. \"You think about it and the next time you see me, we'll see if you figured it out yet. It's all about your wardrobe. That's why I get less interested in your eyes sometimes, regardless of how nice they are.\"\n\n\"My wardrobe?\" I asked as Michelle started up her car. \"Wardrobe?\"\n\n\"See you tomorrow, Jeff.\"\n\n\"AHA!!!\" I announced, quite pleased with myself. \"My tie! That's it. I don't ever wear ties on weekends and didn't today because I took the day off. That's it! You hate ties! I do too!\"\n\n\"You're close Jeff!\" Michelle said, laughing at my pout the appeared from hearing that I was wrong. \"Really close though. I'm sure it will come to you. I had lots of fun this morning too, Jeff. See you tomorrow?\"\n\nI nodded, shrugged my shoulders and waved, walking back to my own car. I was never was much good at puzzles and riddles, but the fact was that she was willing to go out with me, and I'm sure that she would regardless of whether I figured out what we had in common.\n\nI slid in the car and adjusted the rear view mirror, watching Michelle slowly back out of her parking spot, and for the heck of it pointed the mirror at myself. Wardrobe? Just a plain light blue button front shirt. What in the world could...\n\n\"WAIT!!!\" I yelled, throwing open the door and jogging over to Michelle, who was nearing the exit of the lot.\n\n\"I think I've solved the puzzle,\" I said as I leaned on her car and tried to catch my breath.\n\n\"Congratulations,\" Michelle chirped, her eyes looking down to my shirt, and toward the additional button I had undone on my way over. \"Doing anything tonight?\"\n\n\"I think I am now,\" I beamed. \"Told you I was observant.\"\n\n\"Made me nervous for a while though, Jeff,\" Michelle informed me. \"I never took that long to back up out of a parking spot before.\"\n\n\"How about dinner?\" I suggested. \"Are there any restaurants that tickle your fancy? How about a home cooked dinner?\"\n\n\"Your home or mine?\" Michele asked.\n\n\"I'll cook,\" I offered. \"Let me give you directions.\"\n\n\"I know where you live already. What time?\"\n\n\"How about seven?\"\n\nSeven it was.\n\n...\n\nChapter Six: Dinner.\n\nAs it turned out, Michelle's detective skills were far better than mine, having taken the time to look me up in the phone book before meeting me that morning. She explained that she had left a note on her kitchen table with my name and address on it.\n\n\"Just in case I never got back home, the landlord could figure out where my body could be found,\" Michelle confided to me over the wine we opened before dinner.\n\n\"Very smart,\" I agreed. \"You never know what kind of pervert you'll run into these days.\n\n\"Oh, I think I know what kind of pervert you are, Jeff,\" Michelle noted wryly. \"Nice shirt too.\"\n\n\"Why thank you, Michelle. It's one of those shirts that you kind figure out whether to button this button or not. I think there was a Seinfeld episode about a shirt like this.\"\n\n\"So you decided to leave it unbuttoned,\" Michelle answered. \"Wise choice.\"\n\n\"Just in case dinner turns out to be a disaster, I figured I would give you something else to concentrate on.\"\n\nHaving figured out that Michelle was fond of looking at my chest hair, I wore the shirt that would best expose what she would attractive about me, because goodness knows I wasn't the best looking guy in town, nor was I particularly well built either. Just a guy with a hairy chest, and hairy everywhere else too, for that matter. I wondered if that was something that would appeal to Michele as well, and could only hope so.\n\n\"Too bad you didn't wear something more along the lines of his morning,\" I said, noting that while her lightweight pink sweater was attractive, it kept a lot of territory covered.\n\n\"The night is young, my good man,\" Michele noted, her head tilting as she inhaled deeply. \"If dinner is half as good as it smells, you're going to be a real find.\"\n\nDinner was not exceptional, although Michele said it was. Lemon garlic chicken over angel hair, and I while thought the chicken was a tad dry, it all got eaten, as well as the bottle of wine we had started. We were into another bottle of wine by the time we finished, and were ready to retire to the living room.\n\n\"Wine always makes my cheeks flush,\" Michele explained as she peeled off her sweater and sat next to me on the couch.\n\nUnderneath the sweater, Michele was wearing a white tank top, and there was nothing underneath. Well, there were actually a couple of pert little breasts behind the fabric, but there were no other garments in the way of my admiring her pointy breasts and the outline of her nipples that were clearly visible.\n\n\"Uh... nice... outfit,\" I stammered like a fool, my cheeks already flushed and sweat beginning to bead up on my forehead.\n\n\"Thought you might like it,\" Michele said with a wink, and followed that comment by casually draping her right arm over the back of my couch and swiveling toward me. \n\n\"Wasn't sure about what you'd think about this though, until this morning\" she continued, nodding toward her underarm, fully exposed for my benefit. \"For some reason I got a feeling that you were the kind of man who might appreciate something like this.\"\n\n\"You mean by the way I kept trying to peek up your sleeves all day?\" I asked, my eyes taking in the sight of the dark brown hair that grew densely in the slight recess of her armpit - an armpit that, judging my the length of the hair, hadn't seen a razor in quite a while.\n\n\"What would you think if I told you that turned me on a lot when you did that?\" Michelle asked. \n\n\"I would think that made two of us,\"\n\n\"I also can't believe that I'm saying things like that to you, as well as sitting here in this shirt like I am,\" Michelle confessed. \"Must have been something in the chicken. I'm so used to covering up, and now look at me.\"\n\n\"I am, and have been all day.\"\n\n\"I know. I like that.\"\n\n...\n\nChapter Seven: After Dinner.\n\n\"I suppose I should get going soon,\" Michelle said as we finished the second bottle of wine.\n\n\"Will you be all right to drive?\" I asked.\n\n\"Should be,\" Michele answered.\n\n\"Because you don't have to if you don't want to.\"\n\n\"You mean that I could stay here overnight?\" Michelle countered.\n\n\"Sure. I could also call a you a cab and then tomorrow I could get your car to you.\"\n\n\"Too much trouble, but that would be safer than staying here though, I'll bet,\" Michelle said with a wink.\n\n\"I wouldn't - I mean, I know we hardly know each other and there's no reason for you to trust me, but I would never do anything to you,\" I replied. \"That's just not me. If anything, I'm just the opposite as far as pressure goes.\"\n\n\"I know, Jeff,\" Michelle said. \"I was just kidding you. I'm pretty good at picking up vibes from people, and I feel very comfortable around you. If I hadn't, this day would never have happened.\"\n\n\"Don't get carried away now with the comfort,\" I warned her with a grin. \"But before you go, or whatever you do, can I do something to you? It's nothing too weird. In fact, it's something you did to yourself earlier.\"\n\n\"Sure,\" Michelle said with a shrug. \"How bad can that be?\"\n\nMy hand went toward Michelle and set it down on her forearm. Slowly, I moved my fingers upward, letting the hairs tickle the back of my hand as I slid up to her bicep and then back down.\n\n\"You were doing this to yourself at the coffee shop,\" I reminded her, and when I looked at her eyes they had a dreamy and distant look about them.\n\n\"I do that to myself all the time,\" Michelle whispered. \"Have all my life. Bad habit, I guess.\"\n\n\"Good habit,\" I corrected her while continuing to lightly run my fingers along her lovely limb from her forearm to her elbow. \"You must like the way it feels then.\"\n\n\"Yes,\" Michelle said, squirming a little bit. \"Feels nicer when somebody else does it, though. This is the first time anybody else has ever touched my arms like this though. Most guys have always tried to avoid them.\"\n\n\"For better or worse, I'm not most guys,\" I told her, as if she hadn't figured that out by now, and then, feeling bold, decided to up the ante.\n\n\"Something else about you drives me a little crazy,\" I admitted, raising my hand from her arm.\n\nIn my wake, I noticed that the hair on her arm was standing straight up, and underneath, her skin was covered in goose bumps.\n\n\"I love this too,\" I confessed, moving the back of my finger up to the side of her face, and in a gentle sweeping motion, stroked the fine down that circled in front of her ear.\n\n\"Mmmm,\" Michelle mumbled, almost like a purring sound coming from her as she leaned into my touch much like a cat would. \"My sideburns.\"\n\n\"They aren't sideburns,\" I said. \"It's just a little down that makes you look even sexier. Very Sarah Silverman-ish.\"\n\n\"Whatever they are. Guess that you can figure out that I'm hairy all over,\" Michelle said. \"Except my legs. Shave them usually. Other than that...\"\n\n\"I think you're the most amazing looking person I've ever met. If I were creating a woman, it would end up exactly like you.\"\n\n\"Forget the cab and the other idea,\" Michelle said softly. \"I'll stay here.\"\n\n\"Good.\"\n\n\"We aren't going to have sex,\" Michelle said, still enjoying my stroking of the side of her face. \n\n\"That's fine,\" I said. \"I'm not that easy anyway.\"\n\n\"I would like to sleep with you though,\" Michelle said. \"In the same bed.\"\n\n\"Okay.\"\n\n...\n\nChapter Eight: In bed with Michelle.\n\nMichelle had set down the ground rules, and that was fine with me. We would share the bed for the night, and I was fine with that. My major concern was that I hoped I didn't snore, and so I eagerly waited for her to emerge from the bathroom and join me.\n\n\"Turn the light off,\" Michelle said as she peeked in the door. \"I'm naked.\"\n\nReaching over, I reluctantly clicked off the light and waited in the dark as Michelle tiptoed around the bed and climbed in the other side.\n\n\"What I wouldn't have given for night vision glasses,\" I ruefully noted as Michelle snuggled herself under the sheet with me.\n\n\"Hey, you aren't naked!\" Michele protested, her hand reaching over and touching my hip, feeling the shorts I was wearing.\n\n\"I thought that might be pushing my luck.\"\n\n\"Take them off,\" Michelle said with a giggle. \"Socks too, just in case they aren't already.\"\n\n\"They are, and now I'm naked, for better or worse.\"\n\n\"Thank you,\" Michelle said, moving closer to me and rolling onto her hip to face me. \"Thank you for everything. The dinner. The conversation. The kind words. It's been a long time.\"\n\nI felt the sheet come down to around my waist and then Michelle's hand was on my chest, running her fingers through the thick mat of hair. I heard her inhale loudly as she raked her fingers up and down my chest, and I started to roll toward her in response.\n\n\"Wait,\" Michelle said. \"I'm first.\"\n\nHer hands ran all over the front of my body, approvingly stroking everywhere with the exception of my erection, with was standing up straight and begging for a touch that didn't come. Although my eyes were adjusting to the near-total darkness, it was impossible to make out anything besides vague shapes, so this was a strange experience. Strange and very erotic.\n\n\"You are so beyond hairy,\" Michelle said softly as her hands came up my legs. \"Sort of like being in bed with Bigfoot - and in my book that's a good thing. A wacky fantasy of mine.\" \n\n\"Grrr,\" I said, and then had a choking sound come out of my throat when her fingers raked through my pubic hair, and her hoarse and raspy breathing made me shiver, as I realized that we did have so much in common.\n\n\"That wasn't fair,\" I mentioned as her fingers searched for my nipple, and after finding it, giving it a tweak. \"I might add that this is one of the most erotic experiences of my life.\"\n\n\"Isn't it?\" Michelle said excitedly. \"I think the darkness is giving me a license to do things I would be too shy to do otherwise.\"\n\n\"You mean this isn't your usual first date modus operandi?\" I asked.\n\n\"No, I just invented this, I think,\" Michelle said. \"Here - since you aren't freaked out yet, maybe you'll like this.\"\n\nMichelle took my hand and pulled it up toward the headboard, holding it down although there was no struggle on my part, and with her other hand, raked her fingers through my armpit.\n\n\"You smell nice,\" Michelle declared, much to my relief, as my slightly scented aroma filled the air. \n\nThen, to my complete shock, Michelle leaned toward me and kissed my armpit. My breath caught in my throat as I felt her give the hair a little nibble before she leaned backward and giggled nervously in the darkness.\n\n\"That was so incredible and very unfair,\" I told her, and my cock was so hard it felt like it was throbbing.\n\n\"You're right,\" Michelle admitted. \"Sorry. I'll make it up to you. Your back. Is it hairy too?\"\n\n\"Guilty,\" I said, and rolled onto my hip so that her hand could run up and down my back, and Michelle let out another of those half-purr/ half-growl noises that made me tingle all over.\n\n\"Hug me, Jeff,\" Michelle said suddenly, and without hesitation wrapped her arms around me.\n\nFortunately, my cock was so hard that it had been pointing a little bit upward, so when our bodies came together, it got flattened against her lower belly. The coarse feel of her pubic bush against the underside of my cock felt indescribable, and as Michelle's hands stroked my back, it seemed that my tool was drooling.\n\nI returned the embrace, holding her tight against me as I kissed her neck and the fuzz around her ear, feeling the soft press of her breasts against my chest as she clung to me.\n\n\"I feel so uninhibited,\" Michelle whispered in my ear. \"It's so exciting to be able to be myself, and not feel like I have to pretend to be something I'm not. I'm pretty weird, right? Never thought you'd meet anybody like me, I'll bet.\"\n\n\"Never thought I'd meet anybody as weird as I am, you mean?\" I replied. \"I love it.\"\n\n\"Haven't been very fair to you, have I Jeff?\" Michelle said, and as she leaned back and our moist bodies separated a bit, her hand snaked down and grabbed the shaft of my cock.\n\n\"Wow,\" Michelle said as her hand wrapped around my cock, slowly pulling it while I groaned with pleasure. \"What is this, a third leg?\"\n\n\"Not big,\" I gasped as her paw spun while she tugged on my manhood, which was never longer than it was at this minute, but still probably not even average in length. \n\n\"Can't come close to getting my hand around it,\" Michelle said as she nibbled on my ear, noting the thickness that was my modest organ's only possible claim to fame. \"Feels so nice - it's so warm and pulsating. So hard too.\"\n\n\"Not for long,\" I mumbled trying not to explode all over us.\n\n\"I want to suck your cock,\" Michelle hissed into my ear. \n\n...\n\nChapter Nine: If you insist.\n\nWe had agreed not to have sex, but I guess that you don't have to be a president to decide that oral sex isn't really sex. I also knew that if Michelle's mouth slid down my cock right now, I would be cumming before her mouth came back up.\n\n\"Not yet,\" I declared, taking her hand off of my member. \"If you did that right now, it would be over before it began.\"\n\n\"I know. I could feel your cock dripping\" Michelle said. \"I want to taste you - to feel you shoot your load down my throat.\"\n\n\"You're a nasty girl, aren't you?\" I chuckled, reacting to her frank talk.\n\n\"Can't help it,\" Michelle retorted. \"You've got me so hot I'm half out of my mind.\" \n\n\"I haven't even done anything,\" I protested.\n\n\"You want me,\" Michelle said. \"You like me the way I am, and that makes me feel so good. I am so aroused by you that I'm going crazy. Let me make you happy.\"\n\n\"You are, and you will,\" I assured her while taking over the proceedings. \"But now it's my turn to play.\"\n\nMichelle made a little sound of protest, but did not resist when I eased her onto her back. My hands slid all over her upper torso, from her flat stomach to her shoulders, avoiding her breasts at first before beginning to lightly massage the little cones. \n\n\"Nice,\" I said as I squeezed the modest buds, which appeared even smaller with her on her back.\n\nHer breasts were soft and plaint, and her aureolas thick and puffy, seeming to account for much of the breast themselves. I leaned over and began to suck on the doughy morsels, feeling the spongy nipples thicken as my tongue danced over the surface.\n\n\"Like my little buddies?\" Michelle gasped as I went over to her other breast, her hand cradling the back of my head, and I mumbled my positive answer in between nibbling.\n\nClearly, my interests were elsewhere as well, and as Michelle's hand ran through my scalp, I took advantage.\n\nPinning her hand up over her head, my mouth moved over to her exposed armpit and attacked it much like she had done mine.\n\nHer armpits were deep hollows, and as I buried my face in the damp and silky hair - licking and kissing the dense little jungle, Michelle writhed in response. Her moans were so loud that I figured my next door neighbors must be getting quite an earful, and that excited me as well, having listened to their bedroom antics often enough in the past.\n\nWhile Michelle whimpered, I continued to orally explore her armpit while her natural aroma filled my nostrils. Almost without any artifical accompaniment, Michelle smelled as delicious and natural as she tasted. Sliding my hand down her lithe body, over her breasts and flat stomach, I felt what seemed to be a faint treasure trail that began just below her navel.\n\nThe trail soon disappeared as my hand reached the timberline of what I soon discovered to be a massive triangle of hair that surrounded her womanhood. So thick that the bush seemed to have a little spring to it as my hand moved onto it, but not dense enough to hide the entrance, which was soaking wet.\n\n\"Oooh,\" Michelle whimpered, her body shaking with little convulsions as my hand slid up and down the forest between her legs, which parted a little with each passing of my hand.\n\n\"Beautiful,\" I whispered as my fingers continued to rake the rich triangle, resisting the urge to slide my finger inside of her, since this teasing seemed to be working for both of us.\n\n\"Please,\" Michelle said - almost begged. \"Making me crazy.\"\n\n\"Me too,\" I agreed. \"Isn't it great.\"\n\nMy hand was spreading the dampness over a widening area of the spacious bush, and Michelle spastic reactions to my touching were almost as erotic to me as her body was.\n\n\"I love your pussy,\" I hissed into Michelle's ear, hoping that my own dirty talk would prove to be equally as arousing to her as hers was to me, and when she leaned into me and whimpered, I took that as a yes.\n\n\"You're so hairy down there,\" I continued, saying the things that most women would not take favorably, but what Michelle loved hearing when it came from somebody who was so taken by her look. \n\n\"I love how the hair starts way up here, and gets so thick and dense down here\" I said, my fingers traveling from the beginning of her treasure trail down through the jungle in concert with my words.\n\n\"Mmmm... and this feels nice too,\" I went on, my hand straying over from the delta and over to the insides of her thighs, where my fingers felt the hairs that spilled over. \"This would feel so good on the sides of my face.\"\n\n\"Now let's see how far down the hair grows,\" I wondered aloud, letting my hand slide down the dripping entrance of her opening, and as my hand slid further down, I had to tighten my grip on her restrained wrist to try and contain her writhing.\n\n\"Oh my,\" I said, feeling the hair against my fingers as they moved deeply between her legs. \"My, my, my.\"\n\nMichelle's thighs slammed together, crushing my wrist as I probed way down between her legs.",
        "\"Jeff - Please,\" Michelle whimpered, her previous declaration of the ground rules obviously having been tossed aside in her lust, but I decided to hold back, as much as I wanted to do otherwise.\n\n\"You said you wanted to taste me - to taste my cum,\" I said. \"You will, but I want to taste you too.\"\n\n...\n\nChapter Ten: Tasting.\n\nDespite not being fond of the '69' position, I felt it necessary so that I would last longer than I suspected it would without distraction, so I pulled Michelle on top of me while she climbed down.\n\nNow her pussy was just above my face, and although I couldn't really see it, I could smell the musky and feral aroma of her, and seconds later I could taste her, having brought my face up between her legs.\n\nHow sweet Michelle was, I thought to myself as I buried my cheeks into her furry grotto and licked the length of her opening several times before slipping my tongue inside of her, and as I orally explored her, she was busy herself.\n\nMy cock was clenched in her fist while I felt the warmth and wetness of her tongue basting the glans. After she had licked and nibbled the crown, her lips slid over the head and down the considerably thicker shaft.\n\nI heard Michelle choke a little bit, but she seemed possessed in a effort to go down to the bottom, and after a few attempts, I felt her lips tightly attached to the base of my fireplug-like organ.\n\nShe made a gasping sound as she pulled off of me, and then went back down for more, alternating between having her mouth engulf me and pumping me hard and fast with her fist. If I weren't distracted by my tongue caressing the pearl of her clitoris, I would have cum, and even so it was all I could do to hold back, at least until she came.\n\nFortunately, she did. She came hard and fast, and as she did, she pulled my cock out of her mouth as her body shuddered violently, screaming wildly as my face got even wetter than it had been, and I clenched her ass cheeks hard to keep her close to me.\n\nWhile Michelle came, she was pulling on my cock so hard I thought she was trying to yank it off, making lewdly feral sounds in concert with her quivering body movements.\n\nWhen she finally stopped convulsing, she went back to deep throating my cock, and in no time at all it was spasming in her mouth, spewing out what felt like a massive load of cum. Michelle didn't let up for an instant, and she didn't stop sucking until I was fully drained, and even then continuing to suck and siphon every drop from my spent and deflated instrument until I rolled her over onto her side.\n\n\"Hope I didn't tick off your neighbors too much,\" Michelle said as she cuddled up next to me. \"Guess I forgot how loud I can get sometimes.\"\n\n\"That's okay,\" I assured her. \"I owe them plenty from their past evenings.\"\n\n\"Of course, I'm not really used to having orgasms like that one either,\" Michelle confessed. \"That was extra special.\"\n\n\"For me too,\" I said. \"I'm not used to having orgasms induced by other people.\" \n\n\"Me neither,\" Michelle admitted.\n\n\"Just think,\" I mused. \"If that credit card reader hadn't malfunctioned, this would never have happened.\"\n\n\"And if you hadn't come in to apologize the next day, I would have thought that you were just some wise guy making fun of me,\" Michelle recalled, enjoying the touch of my hand that was stroking the hair on her forearm.\n\n\"And if you hadn't been so nice to me after that, I would be here alone, probably abusing myself while replaying the memory of your sleeve sliding up your arm that first day,\" I confessed.\n\n\"You did that?\" Michelle asked.\n\n\"Told you I'm a pervert,\" I sheepishly reminded her.\n\n\"I kinda like the idea of that,\" Michelle said. \"Think I'd like to see that sometime.\" \n\n\"I'd like to see anything right now,\" I admitted, laughing in the darkness. \"I can feel you and I can smell you - us.\"\n\n\"Isn't that awesome?\" Michelle said. \"We have so much to look forward to. And thank you for not - you know.\" \n\n\"It's not like I wasn't tempted, but I am patient, like I said. I am dying to look at you in the light,\" I confessed.\n\n\"You might be disappointed,\" Michelle warned. \"Sometimes reality doesn't measure up to fantasy.\"\n\n\"Remember that when you see me in the light for the first time,\" I cautioned her. \"Keep in mind that I'm an old man.\"\n\n\"You don't feel old,\" Michelle said, her hands beginning to explore me again. \"Besides, I'm not a sound sleeper, so I'll probably wake up with the sunrise. That way I'll get to check you out while you snooze.\"\n\nShe may not have been a sound sleeper, but when the sun started peeking through the curtains, I was the one that was awake, and as Michelle's naked body was sprawled defenselessly across the bed, I did allow my eyes to take more than a fleeting glimpse at the beautiful lithe and furry form beside me; the pert little breasts and the exceptionally amazing aureolas that capped them, the wild and untamed jungle of hair that covered her delta, and the thick tufts of hair that exploded from the deep recesses of her armpits.\n\nIn the end, I pulled the sheet up over Michelle, contenting myself with leaving her arms uncovered, and I dropped off to sleep while my fingers stroked the downy fur that first got my attention.\n\nI woke up a little later, looking straight into Michelle's eyes, which twinkled in the morning light. It took a second for me to figure out the reason I was awake; mainly the hand that was sliding up and down my erection, which stood up exposed, as was the rest of my naked body.\n\n\"Told you I'd wake up first!\" Michelle said, her hand spinning and tugging gently on my swollen member. \"I've spent the morning checking you out.\"\n\n\"And you're still here,\" I said in amazement.\n\n\"You betcha!\" Michelle said, kissing my nipple. \"You're perfect. So far, the only non-hairy parts of you I can find are the bottoms of your feet.\"\n\n\"I'll work on that. Does that mean you'll see me again?\" I asked. \"We're going to have a second date?\"\n\n\"Of course,\" Michelle said. \"And on the second date, we're going to make love.\"\n\n\"Now that is something to look forward to,\" I said with a smile. \"When will that second date be?\"\n\n\"That's up to you,\" Michelle said, climbing up to her knees. \"After we take a shower, or right now.\"\n\n\"I'm already wet,\" Michelle said, bringing my hand up between her legs to prove that she wasn't kidding, just before straddling me and my raging erection. \"So I guess that your neighbors are about to get an human alarm clock.\"\n\n.........\n\nThank you for reading. "
    ],
    "authorname": "furryfan",
    "tags": [
        "hirsute woman",
        "hairy woman",
        "hairy arms",
        "armpit hair",
        "hair fetish",
        "young woman",
        "forearm hair",
        "chest hair",
        "older man",
        "armpit licking"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/michelles-arms"
}