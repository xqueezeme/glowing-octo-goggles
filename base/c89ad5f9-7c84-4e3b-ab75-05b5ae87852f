{
    "title": "The Creators Ch. 20",
    "pages": [
        "Chapter Twenty: Collision\n\nPart One: Mountains\n\nASTRID\n\n\"Is that all of it?\" Willowbud asked Nona.\n\n\"All that I could carry,\" Nona replied, dumping her volume of obsidian shards into a pile.\n\nWillowbud selected a wide flat piece, and nodded. \"I can work with this. Has anyone seen Bianca?\"\n\nI peered out into the darkening skies, but couldn't see anything moving. Bianca would keep a low profile to avoid the Breytan's watchful gaze, so if I couldn't see her, she was either doing a very good job, or she was dead. Five minutes later, she emerged from the top of the cave's mouth.\n\n\"I had to go around,\" she said breathily. \"Fucking Breytans have a radius of five miles. Luckily, the pyres to the west are still burning beneath their crosses.\" She lowered her arm from above the cave's mouth, and produced an obsidian torch carrying a persistent black flame.\n\n\"Careful with that shit!\" Willowbud hissed, and beckoned her over urgently.\n\nBianca held the flame outward before her, trying to keep it as far from her body as she could while still bearing it. I didn't know how she'd flown with it. From twenty paces away, I could feel its warmth. The black fire cast a bright white light on the cave's walls, illuminating everyone in monochromatic hues. When it approached Willowbud, she cringed horribly, though given our experiences with Julia's fire, it was admirable that she didn't run away. I wasn't getting any closer to it. Bianca secured the torch between two rocks. Willowbud turned one of the obsidian shards into a long pair of tongs, then she pinched the wide flat piece of plate, and hovered it over the fire. The obsidian didn't glow with heat, but darkened with it, absorbing the energy until it was smoldering black. Willowbud pulled it away, then nodded to Bianca. Bianca rushed to the back of the cave, then came sprinting back with Arya in her arms. The bandage below her severed shoulder was dripping with black blood, and in the monochrome of the firelight, her face was even whiter than mine. Bianca set her daughter down, and hurriedly peeled away the bandage. The stump was swollen and weeping with puss, and the smell was horrific. Arya moaned weakly, her eyes blurry and ignorant of what was around her. Bianca planted a kiss on her brow, then pulled out her belt, and stuck the leather between her teeth. Willowbud pulled the plate from the fire and pressed the searing metal to Arya's arm. Meat sizzled, the smell of burning pork fat filled the air, and Arya's eyes bulged with clarity. Her muffled shriek echoed in the cave, and her mother whispered sweet comfort and planted kisses upon her feverish brow. Willowbud pulled the metal back, leaving a clean and closed stump on Arya's shoulder. Arya's wails turned to sobbing moans, and Bianca wept in relief.\n\nThe same procedure was done to fifteen of the other amputees, but those who had sustained wounds to the abdomen or pelvis could not be healed in this way. They were provided with whatever comforts could be given to them and kept in the darkness where their dimming vision would not have to feel the pain of the bright light. After the last of the salvageable soldiers were burned, I presented my own wounds to Willowbud. She looked up at me with a woeful expression, and I smiled reassuringly down at her and bit into the belt. It was funny; I remembered very little of what had happened to me in that hole beneath Drastin after I'd slashed Julia's back. All I recalled was the flash of blue light, and then the red eyes of my blood-mother sometime later. But in that moment, when I felt the incredible heat eating right into my flesh, the memory of that searing agony came surging back into me, and I shrieked around my gritted teeth. Willowbud hastily pulled the iron away and began apologizing profusely, and I had to snatch her by the wrist and force her to press the iron to the rest of my wounds. By the time I was done, I was suffused with adrenaline, clammy and cold, and the sweat that dripped off of me was red with blood. I dunked my burns into an awaiting tub of water and whimpered with relief as the steam rose around me. Willowbud carefully placed the small black flame into the bottom of an obsidian caldron and beckoned the awaiting bucket-brigade to extinguish the evil. It took fifty buckets before it finally died. \n\n\"Alright,\" she said, wiping her brow, \"give me that piece of obsidian right there.\"\n\nI handed Willowbud a piece of obsidian. She held it, studied it, then shaped it into a breastplate, and handed it back to me.\n\n\"Cup size is a little small,\" I muttered, struggling to put it on.\n\n\"That one was for Nona,\" Willowbud snickered.\n\nNona angrily snatched the breastplate from my hands. \"I'm not sworn to you, Your Holiness, so I can tell you to go fuck yourself.\"\n\nWillowbud laughed, grabbed a smaller piece of obsidian, and shaped a ten-inch penis out of it. \"Look, my very own Ofanian.\" She waggled it in front of Nona's face. \"Do you wanna watch me make it disappear?\"\n\nNona snatched the dildo from Willowbud's hand. \"You're supposed to be making us weapons! And don't you dare turn that into a joke!\"\n\nWillowbud bit her lip impishly. \"You're not going to give me that back, are you?\"\n\n\"Gonna add it to your collection?\" I whinnied.\n\nNona actually cracked the barest of smiles. \"It's rather small for me, actually, but it is an Ofanian copy, so that's understandable. Here,\" she tossed it to Bianca, \"you can use it to replace the one you lost. It doesn't come with any balls, so it's perfect for you.\" \n\nBianca sniffled a laugh as she tended to her daughter. \"I'll make you choke on it someday.\"\n\nWith the dour mood somewhat lightened (by Nona fucking Cloudwhisper of all people), Willowbud busied herself with outfitting every able-bodied soldier with armor and weapons. The vambraces, greaves, helms and breastplates were all paper-thin and flexible, connected by chainmail joints that conformed perfectly to the body of the wearer. She shaved fine featherings to create armor for our wings, and they were so light that I barely noticed them when I slipped my span into them. For herself, she made a full body suit, covering every inch of flesh, then reinforcing it with two-hundred pounds of granite from the wall for good measure. She was practically a sphere when she was done, but she walked around as nimbly as a cat, and helped the others don their new armor. I cut some leather to make lacing for my breastplate and greaves, then tied my helmet down, adjusted my faceplate, and secured my gauntlets with a tug. When I was satisfied, I looked up, and caught Willowbud staring at me.\n\n\"What?\" I asked, worried at her expression.\n\n\"Nothing,\" she said, \"I'm just trying to remember what I have to live for.\"\n\nMy heart melted a little. \"Oh, Willowbud, you\u2014\"\n\n\"I can't wait to fuck you in that armor,\" she said huskily.\n\nMy heart melted even more. \"Will you keep yours on too?\"\n\nShe looked down at herself. \"I'm a cannonball.\"\n\n\"The sexiest little cannonball in the whole wide world.\"\n\nShe looked back up at me, her forest-green eyes full of love. \"Kiss me, you magnificent\u2014\" The world exploded.\n\nDIAMOND\n\nThe face of the Gratoran Wall was a perfect slab of verticality, smooth and flat all the way until it reached the sloping mountain peaks high above the world. The ancient mountain chain was made of dark granite, and Gratora had smoothed it to a perfect polish, making it look nearly like a dark pane of glass from a distance. Mom stretched lazily, cocked her head this way and that, then pointed her finger at the wall. A line of black energy shot from her finger, its breadth barely that of yarn. When it hit the Gratoran Wall, nothing happened at first. Then I heard a low boom. A small crack formed in the rockface. The crack spiderwebbed, traveling outward in sudden fractals, each new pathway accompanied by a deeper and deeper boom until the fissures traveled past the top of the wall, and up the slopes of the mountains. Mom gave me a little twerk of her brows, created a tight ball of fire in her free hand, and squeezed it until it was barely the size of a grape. She placed the ball on the energetic line, and sent it shooting down. It made a whining sound as it departed, and the whining grew higher as it accelerated into the night, its pitch reaching such screeching limits that it seemed to chisel against my eardrums. Then, I couldn't hear it at all. There was silence. The earth shook. I looked at Mom. She grinned. The world exploded. The face of the Gratoran Wall erupted from within, the massive rocks blasted from their fractal patterns by a volcano of black flame, the chunks turning to meteors, the mountaintops firing into the heavens like granite rockets. Hunks of stone the size of city blocks were sent tumbling into the ranks of orcs, rolling through thousands in a second. They didn't care. They raised their arms and cheered the destruction as the meteors and rockets arced miles above us, as the black fire plumed into a behemoth mushroom of acrid smoke, rising and consuming itself, growing larger until it umbrellaed the desert in its shadow. There was a massive crater in the Gratoran Wall. Two miles of the wall's face had been outright destroyed, and the wound was at least twice as deep, gouging into black rock, releasing great rivers of steaming aquifers like volcanic blood.\n\n\"Holy crap,\" I whispered. Blood ran from my ears as the sound echoed in my head, but I hardly noticed. I just stared at the destruction before me, and felt a thrill of terror crawl beneath my skin. It was very easy for me to forget what Mom was. I was a god, Willowbud was a god, Brandon was a god, but she was the Destroyer, something so mighty and terrible that the very earth shook in her presence.\n\n\"Do you think I got her?\" Mom mused, dusting the debris off her shoulders.\n\nI looked past the crater, to the high peak that now towered just above its rim. \"She could be in Iona.\"\n\n\"Don't!\" Justina cried. She and the wasted Brandon were lying behind us. Brandon was awake, but barely alive. His cheeks were so gaunt that he looked like an old man, and he just stared at his mutilated hand, not seeming to comprehend it.\n\n\"Please, Diamond,\" Justina sobbed, clutching at my feet, \"don't do it. She's not there, I promise you!\"\n\nI grinned back at Mom. \"She's definitely in Iona.\"\n\nMom aimed her finger, and shot another line towards the heavens. It disappeared into the center of Iona's profile, then she sent the ball down its line. Again, the whine of its acceleration cut through the night, growing higher and higher until it was inaudible. A moment past, then Iona exploded. The snowcapped peak blasted into the night, the great triangular rim erupted from within, and the shockwave of dust traveled down the craterous slope, upended the sand, and slammed into us. I put up a shield of water, but I was still sent flailing onto my back. Mom's robes disintegrated as she wreathed herself in flame, and stood in defiance of the destruction she wrought. When the dust settled, Iona was gone. Justina let out a horrified wail, and Brandon groaned.\n\n\"Pity,\" Mom muttered, dusting herself off once more, \"it was such a majestic mountain. I hoped to take you there one day.\"\n\n\"I'm there right now,\" I giggled, holding up the granite dust.\n\nMom smiled back at me. \"What about the other side of Droktin's Pass? She could be there.\"\n\n\"More! More! More!\" I cackled, clapping my hands delightedly.\n\nMom shot another line, this one diagonally through the entrance of Droktin's Pass, striking the side of it a mile in. Another ball of energy, and another explosion, this one blasting through the top of the uplift like a chain of volcanos, each mountain top consecutively erupting for miles until four of the peaks were hollowed. The shockwave boomed across the desert, a third mushroom cloud rose into the sky, and three acrid columns held the new ceiling of the world aloft as it drifted beneath the stars, and blackened the setting sun.\n\nWILLOWBUD\n\nWe were deep underground. After the first blast, I'd taken our cave and forced it through miles of earth until it was so far beneath the bedrock that even the cavernous aquifers of Gratora would not reach it. We still felt the shaking. There was another tremendous earthquake that sent pulses through our cavern, then a third one right above us that shook with such force that the stalactites snapped from the ceiling, and crashed onto the earthen floor. We waited for more, but there was none.\n\nNona struck a match, illuminating the complete blackness.\n\n\"Put that out!\" I hissed. \"She can see flame!\"\n\nNona extinguished it, and the blackness surrounded us once more. Though everyone else was blind, I could see clearly. I put my hand against the stone wall, and listened to the earth above me.\n\n\"What is it?\" Astrid whispered.\n\n\"She destroyed the wall flanking Droktin's Pass,\" I send, furrowing my brow to concentrate, \"and... and... she destroyed Iona.\"\n\n\"What do you mean she destroyed it?!\" Nona hissed.\n\nI looked at her gravely. \"I mean the mountain is gone.\"\n\nSilence fell in the cavern. There wasn't a sob, nor even a whimper; just a cold and building rage.\n\n\"Willowbud,\" Astrid whispered, her voice quivering, \"if you love me, you will not stop me.\"\n\n\"Don't be stupid!\" I snapped.\n\n\"We are not staying down here,\" Nona said, her tenor calm and commanding. \"If you do not bring us to the surface, we will cut our way out.\"\n\n\"This is not negotiable,\" Astrid said, putting her hand on my rock-laden shoulder. \"We did not prepare ourselves just to hide in the earth.\"\n\n\"OK,\" I took a deep shuddering breath. \"Brandon is your priority. You get him out no matter the cost. If you have the shot, I won't stop any of you from taking it. Just know that it will be the last shot you ever take.\" I laid my hand atop Astrid's. \"If you love me, you will stop yourself.\"\n\nShe didn't respond. Her hand stayed still beneath mine, and her breathing was shallow and heated. Finally, she spoke in just a whisper, but it carried such intensity that felt like a scream. \"I love you with all my heart, Willowbud Autumnsong,\" she said, \"but you're useless to me right now.\" She ripped her hand away and took a fistful of my hair. \"Gods don't hide in holes!\" she snarled. \"Gods don't cower like worms in the earth! Gods stand in defiance of the sun! Gods cast a shadow on the world! Willowbud Autumnsong is no fucking god!\" She pressed her lips to mine and locked me in a ferocious kiss. She parted with my lips in her teeth, and she bit hard with her fangs. \"You've been asleep too long,\" she purred, \"it's time to wake up, Night Eyes.\" \n\nJULIA\n\nThe dust began to settle. Massive granite rocks littered the desert before the wall, standing like monuments of wreckage within the surviving ranks of orcs that surrounded them. I had killed so many, but I cared so little. It was Diamond's horde now, and she had little regard for the sanctity of life. The columns of smoke continued to rise from the craters, carrying the particulates of rock and matter that were now lighter than air itself. The convective forces swirled in the darkening clouds above, and the debris snowed down in the form of ash, blanketing the desert, muting the uproar of the holy army. A tense quiet came upon the world. I clenched my hands beside me, watching, waiting.\n\n\"Here she comes,\" Diamond sang beside me, giggling nervously.\n\nThere was no doubt that she was coming. I didn't know how I knew, but the hairs on the back of my neck were raised. I felt the dry heat of my magmatic firestorm raging in the clouds above, yet a chill was crawling up my spine.\n\n\"There!\" Diamond hissed, pointing south. My eyes darted to where her finger indicated. On the other side of Droktin's Pass, there was movement along the Gratoran Wall. I focused my vision. It was a subtle thing, a slight vibration of the air. It took me a moment to realize that there wasn't movement along the Gratoran Wall at all... the Gratoran Wall was moving. A deep groan sounded in the depths of the bedrock, and the earth began to shake, then rumble, then quake. Shale facing fragmented from the granite cliffsides, tumbling down in great sheets to smash the horde below it. Fissures split the ground, consuming dunes and orcs in volumes too numerous to count. Magma erupted from dormant calderas, mountains swayed like treetops, and the world let out a deafening roar. Then, the pass began to close. The two halves slowly crawled toward each other, shifting with such torpidity that it could barely be discerned from this distance, but they were accelerating. She wasn't just closing Droktin's Pass; she was moving the entire mountain chain!\n\nThe spine of Balamora began to close, the gargantuan vertebrae twisting upon themselves, turning the eternal mountains into fluid bodies that belched magma from their peaks. Breyta erupted in the distance, Ofan rose by the second, and the wall just kept sliding along its backbone, tearing the earth beneath it, creating a depthless moat of the bedrock that drain the Gratoran Desert. The sand shifted beneath me, ebbing away like the receding tide, then flowing faster, becoming a granular tsunami that swept the floor of the world away. I rose from the surface with Diamond, who carried Brandon and Daughter Justina with her in a bed of water. I hardly remembered they were there. I just watched with my jaw hanging ajar as the desert drained into the grooves formed along the driving range, carrying every last orc down, down, down into the crushing abyss until flesh and sand were gone, and the tideline of the great desert ocean that had once crashed interminably upon the mountainside was drained to its bedrock. Five miles behind me, the new tideline formed, the dunes sliding into the void left in the wake of preceding waves, forming a gentle thousand-foot gradient to the smooth granite shoreline. One mile before me, the gap of Droktin's Pass was closed. The two halves collided with a thunder of rock, then continued their merging. With nowhere else to go, the split spine of Gratora fused into a deific uplift, rising, rising, rising into the air, bubbling with magma, rupturing with volcanic explosions, but still stabbing its profile ever upwards into the heavens, passing the height of Ofan, then of Breyta, then even of the late Iona. The shockwave of the collision blew my acrid cloud from the sky, dissipating it over the stratosphere until it was nothing but a layer of grey to translucently blanket the twilight dusk, unfit to mask the ascension of such a majestic stone monstrosity. The mountain kept growing, propelled by the implosion of the continent, birthing from the very earth in a display that would've taken God an epoch to witness. The geological timescale ticked away in seconds that lasted millions of years, but such meager constraints of time mattered little in the providence of hell's begotten daughter.\n\nThe shaking stopped. The mountain ceased its growth, and stood before me, its triangular profile more impressive than any on earth, dwarfing the giants that had once flanked its position, towering so high that its peak seemed to touch the brightening stars above it. Glowing lava cascaded down its body, filling the meager divots I had made with my flame, pooling upon the flat floor of bedrock that now preceded the wall. The former tideline of sediment still marked where the sand had once touched, but now the wall's foundation was exposed, revealing that Gratora had not bothered to shape its base with nearly the same artistry, for it was jagged and wild like its snowcapped crown. And from the very base, a little door opened, and she walked out of it.\n\nShe was a speck in the distance, barely even discernable against the great wall of rock were it not for her pure white hair. Even from so far, I could see the familiar swagger in her gait, the ease of her shoulders, the nonchalance of her demeanor as she lazily cocked her head. I could practically see her little smirk of amusement from here. This was not the terrified little cockroach who had dug herself into a hole to flee me. This was the woman who had driven me past the limits of my will. This was the woman who had given me the devil's kiss with the lips of God. This is who I had been waiting for my whole life. This was the reason the Holy Mother put me on this earth. This was why she had bound with me.",
        "\"Take Brandon and Daughter Justina and fly far away with Jade,\" I instructed Diamond. \"Bring the Breytans with you.\" \n\n\"Fat fricken chance.\"\n\n\"You're no match for her.\"\n\n\"Good thing I have backup,\" Diamond snickered, and elbowed me congenially. \"Come on, Mom, let's go kick some butt!\" \n\n\"If you stay, she is going to kill you.\"\n\n\"Not if I have Brandon. Are you seriously going to ruin our hostage advantage?\"\n\nI glowered at her. \"Brandon's life is worth less to her than your death. If she thinks she cannot beat me, she will do what she has to.\"\n\nDiamond glowered back at me. \"You're not very good at lying, you know. I don't even need Corruption to know when you're trying to hide something from me.\"\n\n\"You carry more responsibility than your own life!\" I snapped at her.\n\n\"No...\" Diamond narrowed her eyes at me, \"...no, no, no... that's not the whole of it.\" She glanced down at the emaciated Life Giver, then looked back at me. The expression in her eyes was full of betrayal. \"Maybe Brandon's life is worth less than my death to Willowbud, but not to you. Why?\"\n\n\"We need him,\" I hissed.\n\n\"You need him! WHY?! What did he tell you when you were alone?!\" She jabbed a finger against her temple. \"What does it have to do with her?!\"\n\nI exhaled fire through my nostrils. \"Take Brandon and Daughter Justina,\" I said tightly, \"protect the Life Giver at all costs. We will talk when this is over.\"\n\nHer lips quivered. \"I saw your jealousy the moment you knew Corruption chose me, I saw your hatred when I made you get on your knees, but I never saw murder in your heart until now. What are you planning with Brandon?!\"\n\nI inhaled another deep breath, coolly exhaled, then donned a maternal smile. \"If there is murder in my heart, it is for the woman who comes to hurt you. Do not fetter me with your love when I deal in death.\"\n\n\"I'm not the one who fetters you with love, Mom,\" Diamond whispered, and touched the patterns on my hands. \"Just remember who holds the keys to these shackles.\" She glared up at me, and there was a terrible resolve in her black eyes. She grabbed Daughter Justina and Brandon, and blasted off upon jets of water.\n\nWILLOWBUD\n\nI was a pretender. Though my gait was sultry and confident, and my lips were curved into a sneer, it was all on the surface, painted thinly over my terror. Still, I walked. My ball of armor had been jettisoned for an obsidian shield I carried on my arm, and since Night Eyes was a wanton exhibitionist, that shield was the only thing I wore. I forced myself to be male\u2014as Night Eyes would never be seen female in public\u2014but every part of me wanted to shrink and hide in the tightest ball I could make of my body. Though Astrid had compelled me to do this, I wasn't putting on this suicidal show for her. Julia had chased me across the glass plane of Drastin, but the war we'd fought before that fateful day was between her and Night Eyes, and that match was even. Then again, this wasn't the same Julia. This was something else entirely.\n\nShe floated a hundred feet above the bedrock surface, black jets of flame firing from her heels. Her body was wreathed in the black patterns of her bind, and even from this distance, I could see the onyx sheen of her hateful eyes. We moved closer together, steadily and too quickly for my liking. I wanted more than anything to slow my footfalls and delay the inevitable, but any show of weakness was a death sentence here. So, instead of slowing, I stopped. Julia didn't break her pace even a little. She floated with a measured confidence across the plateau, melting the rock into molten puddles beneath her feet. When she was fifty yards away, she stopped. Her hands were clasped together before her as if in prayer, but her eyes were fixed on me. I felt my connection with the rock through the space between us, and I felt the immense void of it directly beneath her feet. There was nothing below her but liquified iron all the way down to the crust.\n\n\"Do you have any words for me?\" she asked from across the expanse.\n\n\"You want an apology?\" I called back. \"You can have it when you kiss my sorry ass.\" \n\nShe cracked a small smile. \"I want to thank you, actually. You cannot know the gift you have given me. You are the devil's champion, but you are still God's tool.\"\n\n\"You're the only person in the world Corruption could make more boring. Did you cut your cock off, or did it just run away?\"\n\nNow she giggled. \"I gave it to Sister Tera for safekeeping. Perhaps she's enjoying it now in the kingdom above.\"\n\nMy smile stayed glued to my face. \"So you finally killed her.\"\n\n\"The Holy Mother took her back.\"\n\n\"You are a crazy fucking bitch,\" I hissed, my words carrying across the plateau.\n\nJulia shrugged. \"Enlightenment seems like insanity to the ignorant. You of all people should understand.\"\n\n\"I never understood you. That's why I couldn't break you.\"\n\n\"I always understood you; that's why I called you 'sister.'\" She opened her hands and showed me her palms. \"Our scars are the same, only mine have healed, and yours have defined you.\" \n\n\"They define us both, Sister, only you pretend they aren't there.\"\n\nShe smiled pitiably at me. \"You call me the pretender when you strut with the gait of a woman you never truly were. Night Eyes was the fiction you could never believe in, but I don't need belief; I have faith. Even when you held the holy spirit in your soul, you walked alone. I have never walked alone.\"\n\nBlack lightning shot from her hands. I raised a wall in front of me, and the bedrock exploded, sending me careening backward. I righted myself, dug my heels into the earth, and skidded fifty yards backward in a trail of deep grooves.\n\n\"The only god you've ever known is you, so you know no god at all!\" Julia jeered from afar. \"If there's no one above you, then who do you call upon in your moment of crisis? WHO DO YOU CALL FOR NOW, WILLOWBUD?!\"\n\nShe sent a line of energy right at me. I raised a row of rock a hundred yards deep between us, and the line knifed through it like butter, barely missing my throat through the exit. Before she could deliver her pulse, I dove beneath the surface and burrowed as far as I could. I felt the explosion above me, the seismic waves cascading through millions of tons of solid rock, turning it to dust with each ripple. They dissipated with depth, giving me just enough time to outrun them. I was half a mile down before I was confident I wouldn't be rendered to jelly. The last wave resonated past me in a mild quake, and then all was silent. I listened through the rock. There was so very little of it above me now. The plateau had been turned to rubble, and the rubble had been turned to magma. I could feel her probing the molten lake, shooting lines of energy deep into the bedrock, piercing the very crust of the earth and sending her pulses after to excavate me. The shockwaves reverberated deep as she upended a mountain's worth of mass in a second, cratering the earth with each nuclear pulse. The silent depths turned into an apocalyptic cacophony, the waves crashing upon each other, driving me deeper underground until there was no air left for me to breathe. Still, she searched for me, drawing her lines into the ground and then plucking them like lute strings, playing the song of the rapture into the lowest resonances of earth's bowels. There was nowhere for me to go. Nowhere, but up.\n\nI punched my fists into the rocks beside me, pushing as far as my knuckles would go until I was extended like a vivisepulture crucifix. I opened my hands and crashed them together above my head. The world inverted above me; the entire lake of magma turned to igneous jaws that slammed shut. I stood in the bowl of an immense crater with a million tons of earth above me, all compressed into a leaking slab that stood miles high between my closed hands. The subterranean air caressed my body, and I indulged in a single breath. The slab burst open, birthing the Heat Bringer in an infernal placenta. She scorched the skies with her plantar jets, and dove to meet me. I couldn't move fast enough to get out of the way. All I could do was swing the immense rock slab in my hands, and bat the firefly from the sky. She flew with such speed that the very air broke in waves before her, but my slab moved with her, the behemoth structure seeming so slow from so far, but its great pivot sent it barreling at several thousand feet per second. She couldn't outmaneuver a mountain, and she couldn't outrun it. Before it could splatter her, she stopped midair and became a black sun. Like a decaying giant of the cosmos, her sphere expanded interminably, blasting through my slab of rock, sending the meteors firing into the sky, the boulders crashing like shards of broken glass, the great central structure snapping cleanly in half. I released my weapon, collected the earth around me, and formed a domed blast-shield for the impending solar doom. The surface of the black sun struck me, the sound roaring through the thousand-foot medium of earth, incinerating through the first half, melting away the third quarter, and then turning the last measure of my shield into rubble. I shot back into the earth, closing the hole behind me as fast as I could, but there was no outrunning a star. Conjuring as much force behind me as I could, I moved laterally to the plane above, exploded upward, and launched from the hole just as it erupted like a volcano.\n\nFor a few desperate seconds, I was flailing manically at the air. The ground below me was so far away, and I felt so naked without it. Gravity assisted in bringing us back together, and I crashed into a mountainside, and clothed myself in its basalt. Below me, the black star died, leaving a perfectly spherical hole in the earth. Its diameter was miles wide, carving through the side of the Gratoran Wall like a cake. The glassed surface shimmered brilliantly in the fading sunlight, then bled lava from a million wounds. Julia floated at the epicenter, and looked around for me in the wreckage. She was but a spec from such distance, but I knew that miles meant nothing to her. Space, time, and matter meant nothing to her. Perhaps Julia gave fealty to the Holy Mother, but I was fighting God herself.\n\nInterlude One: Truth\n\nI watched Diamond and Petranumen's story playout. I watched it until the moment Diamond opened her gates, and let Guilt tear the screeching Holy Mother limb from limb. I watched the last memory Petranumen ever had. It was an image of her outstretched hand\u2014the only appendage she had left\u2014desperately clutching for the iron gates before she was ripped away. The echoes of her final pleading screams carried through the abyss of Guilt, distorting into a thunderous roar before dying in the depthless annals.\n\n\"And so my story ends in much the way it began: through love,\" Guilt said beside me. \"She did it to save her mother, but Julia could never love her that way, and that realization was the genesis of Diamond's darkness. Diamond assumed Julia's death-rattles were the tones of love when she whispered the name 'Corruption,' but they were just the groans of an opiate junky looking for one more hit. It was her soul that created the bond, not her mind. If it was the latter, then I would still be alive.\"\n\n\"What are you talking about?\" I whispered back.\n\n\"Julia loved the Holy Mother more than anything, but Julia did not know what love she felt when she saw me. She did not understand that the soul she bound to once wore God as its skin. Love is something done in ignorance of the mind. You do not know why your soul bound to your brother's, because it is not your soul. You are your soul's mind.\"\n\n\"That's not true.\"\n\nGuilt smiled somberly at me. \"I am living proof that it is. I am sorry to be the one to reveal this to you.\"\n\n\"You're not living proof of anything,\" I hissed at her. \"You're nothing at all.\"\n\nGuilt's smile receded, and she hunched her shoulders dejectedly.\n\nI sighed. \"I'm sorry, I didn't mean it.\"\n\n\"I told you not to apologize to me; I deserve your scorn. I deserve all the world's hatred for what I've done.\"\n\nI almost believed what Guilt and Corruption had said, that my soul was somehow removed from me, but I could see how Guilt's expressions were simplistic mimes of emotion, something she could not understand in truth. That observation gave me comfort. She was Guilt, but she could feel no guilt at all. Corruption could feel it. I had seen it in her eyes when she walked away from me. Though she did not carry the burden of the memories she had left here, she was the one who had experienced them; not this... thing. No matter what happened to my mind, I, the soul named Angela, would not become Silence. I could not. I refused to. \n\n\"So,\" I said, \"Diamond's meld with Corruption is built on the truth.\"\n\n\"On a lie,\" Guilt corrected.\n\n\"Whatever it is, it's like a deal then. Diamond's darkness is the keeping of your secret. If Julia learns it, then the meld is broken, and so is the bond.\"\n\n\"Yes.\"\n\n\"Cool,\" I muttered. \"So... I'll just... you know... tell Julia everything. Awesome-sauce. Let's head back to the physical plane and save the world.\"\n\n\"We will, Serenity,\" Guilt said, \"but first, we have a deal of our own to seal.\"\n\n\"Yeah, after\u2014\"\n\n\"Now,\" she said with surprising resolution.\n\nI glowered at her. \"You can't meld with me; I don't have a body.\"\n\n\"We can still make the deal. It's always an agreement before the meld. No one is ever taken by force, but once the pact is made, it cannot be cheated.\" Guilt studied my eyes. \"There is a place in your imperfect mind that I can inhabit. A flaw in your character that you cannot reconcile. You need to want me there.\"\n\n\"Who the hell would ever want you?\"\n\n\"Nobody wants to feel guilt, but there are still those who choose to wallow in it. There is reconciliation in the suffering. We both know what you need to suffer for\u2014who you need to suffer for.\"\n\nI narrowed my eyes at her. \"No.\"\n\nShe smiled her regretful little smile. \"Your denial is its own admittance.\"\n\nI glanced from her eyes to her outstretched hand. As I stood there in my moment of indecision, I felt a small tremor beneath my feet, then another, then another. Disturbed dust floated in the cold light radiating from our astral auras, then settled back to the ground.\n\n\"What was that?\" I asked.\n\n\"The Destroyer,\" Guilt said softly, her voice tinged with something mimicking fear. \"Her power is so great that it reverberates through the very planes of existence.\"\n\n\"What is she doing?\"\n\n\"What the Destroyer does. The question is, to whom is she doing it to?\" she stretched her hand closer to mine. \"She won't last much longer, but of course, it wouldn't be the first time you abandoned her.\"\n\n\"Fuck you!\" I hissed. \"It was her fault!\"\n\n\"Yes, it was. Why would you try to save her on that fateful day in Drastin, when Brandon finally looked at you the way he had looked at her? Why would you accept her back into the fold after all she'd tried to steal from you? Why wouldn't you sell her out to Diamond? She deserved it. It was her fault. It was all her fault.\" \n\nI stared a hole through Guilt. \"You're nothing. You're no one. You don't even exist.\"\n\n\"You're right,\" she said softly. \"You're only talking to yourself right now, and your brother is dying.\"\n\nA silence passed between us. I extended my hand and shook hers.\n\nPart Two: Eruption\n\nBRANDON\n\nMountains emerged and collapsed in an instant, stars exploded and died, black lightning clashed with walls of stone that stood so high I could not see their tops through the clouds. The sun set behind me as though to cower from the elemental battle that raged before it. A great obelisk grew on the horizon, taller than the crest of the Gratoran Wall. It was thrown like a spear and then exploded by a black burst of energy. The display was brilliant, but from such a distance, it was silent. For a while, anyway. It never occurred to me how fluid the air was until I saw it move in waves, picking up sand and dust in a horrific storm, then smashing into me, roaring like thunder. Diamond held us in her protective bubble and watched the display with awe.\n\n\"I want to do that,\" she whispered, caressing her aqueous window. \"They call me a god, but I am barely a magician compared to them. That is the power of love.\" She turned and looked at Justina. \"Bind with me now.\"\n\n\"You don't love me,\" Justina hissed, huddled against me and tending to my mutilated hand with the bandages from her mother's bag. She needn't bother; I couldn't feel it anymore.\n\nDiamond scowled. \"Darn it, you're right.\" She looked at me. \"You can pretend I'm Angela.\"\n\nI smiled weakly at her. \"You can suck my cock.\"\n\nDiamond laughed. \"Is that what she would be doing in this situation?\" She looked back at the deific show. \"I must admit, all this destruction does give me a little tingle. I might actually take you up on that offer if I didn't think the blood pressure would kill you.\"\n\n\"Why are you keeping me alive at all?\"\n\n\"Because we're friends,\" she said simply and said no more.\n\nJustina continued to wrap my hand, unwilling to meet my eyes.\n\n\"It's not your fault,\" I whispered to her.\n\n\"It is,\" she sniffled. \"I egged Julia on. I thought I was smart. Stupid, fucking\u2014\"\n\n\"It was working,\" I said, and laid my stumped hand on her shoulder. \"You were right, Justina. Whatever it was, you figured it all out.\"\n\nNow she looked up at me, her beautiful violet eyes glazed with tears. \"What good did it do, Brandon? What good is knowing the truth if the truth doesn't matter?! If I had just kept my fucking mouth shut; if I had just not been such a goddamned coward\u2014\"\n\n\"You're the bravest person I know,\" I whispered.\n\nShe blinked at me, and fresh rivulets cascaded down her cheeks. \"Shut up.\"\n\n\"I mean it.\"\n\n\"You're just saying that because you're dying.\"\n\n\"I'm saying it because it's true,\" I croaked. \"Chasing the truth when everyone wants the lie is bravery. It's the very best kind.\" \n\nShe smiled with her wet cheeks. \"I could kiss you right now.\"\n\n\"I sure could use one.\"\n\n\"No,\" she shook her head, and recommenced aggressively attending to me, \"you need to save it for Angela.\"\n\n\"You just told me I was dying.\"\n\n\"Well...\" she muttered, bandaging my stumped fingers, \"...sometimes faith is better than the truth.\"\n\nASTRID\n\nWe flew close to the ground, taking a northerly arc five miles away from the battle. The wounded warriors who could still fly carried the incapacitated and dying with them over the mountains. Those who made it would spread word to the nations on the other side of what was happening here; as if it couldn't be seen for hundreds of miles. Even from this distance, the shockwaves buffeted us in gales that swept the sand from the rock, making the air coarse and the ground smooth. My patterns were so bright that I illuminated the flock around me as if I were a torch, and as the flashes of black light and shadows of rock played in my periphery, I focused my attention on the setting sun in the west and led the way. The one-hundred Ionans and thirty Ofanians flew in a standard attack 'V' pattern, and I was the tip of the spear. Our armor was light, our weapons were keen, and our enemy was in front of us. It was what valkyries lived for.\n\nThe Breytans surrounded a domed shield of water. Before it, the unmistakable outline of Jade Tao stood guard, and within it, I could discern three figures. The antlered silhouette of the Water Dancer stood at the forefront, her posture rapt and ready. Two other figures huddled together behind her, and with my ocular vision, I could see that the Life Giver had very little left to give.\n\n\"They'll focus on me,\" I yelled over the rushing wind. \"I'll drive into their center. Bianca and Nona will bring up the wings!\"",
        "\"Left wing will float high!\" Bianca relayed to her troops. \n\n\"Right will dive danger-close!\" Nona growled excitedly. \n\n\"Once the Breytans are sushi, we'll close on Diamond!\" I called. \"Left wing swoop to flank; right wing hit her head-on!\"\n\n\"Kill the false god!\" Nona cackled, and dove.\n\nThe superior Ionan force followed after her, hovering barely a yard above the ground, moving with such speed that their wings beat the sand beneath them into the air. The Ofanians could only dream of flying with such precision, so they ascended to the skies, drawing out their ranks to form a long wing with Bianca at its tip. I stayed between them, isolated and at the front, pushing great volumes of air with my black wings to drive me closer to the enemy. The corrupted Breytans did not bother adopting a formation, but rocketed toward me like locus, ignoring the wings to kill the head. I closed my wings, spiraled into the mass, and they swarmed upon me.\n\nKatanas scored across my wings and armor, scraping and screeching, sparking as deific blades struck deific armor. They didn't even have a moment to process their doom before I unleashed with my blade, spinning in a corkscrew that carved through flesh like air. I would not even have known if I scored a hit were it not for the volumes of blood splashing me. Limbs and wings flew about me, cut so cleanly that it looked to be done by a butcher, the spurting arteries painting me as I flashed past, the screeches of the dismembered fading behind me. I maintained my death spiral through the mass, dropping twenty feet in a second just to move through a few more bodies. They parted before my blade with ease, opening and gushing, intestines unraveling from bisected bellies, arms falling from the sky, sliver-streaked wings spinning down like samaras as their bearers hurtled into the sands. I broke through the other side a second later and was smashed by a wall of water. \n\nJULIA\n\nIt was like I was fighting the very earth itself. Mountains rose to spear me, plateaus collapsed into canyons to consume me, boulders the size of castles rocketed toward me from the igneous bowels below. I had turned the world beneath me into a molten hellscape, but my fire betrayed me, for the liquid rock reached up to grasp me. I blasted the bedrock with salvo after salvo, erupting the foundation in a volcanic orgy, but it did nothing. The earth fought back relentlessly, battered me and beat me with its amorphous retributions, harrying me across the sky in a blaze of confusion and fury.\n\nI fired a line of energy into the boiling lake below me, then sent the pulse after it. The lake collapsed into itself with the line, draining into a turbulent maelstrom until it was naught but an infernal hole in the ground, then exploded when my pulse struck its center, sending a great bubble of magma high into the air and birthing a mushroom cloud of acrid smoke. No sooner had I studied the landscape than an enormous feminine hand emerged from the lava, shot into the air, and closed. I couldn't move out of the way fast enough. The great fingers wrapped around me, the thumb clinched, and I was trapped. Before she could squeeze, I burst into a sun, but she was ready. More mass was added to the fist until it was not a hand at all, but a sphere of hot iron suspended in the air, growing by the second to resist my nova, plating itself with the remnants of the Gratoran Wall until it was heavier than the mountains it was born from. I could feel its enormity by the volume I excavated from it, for even as my sphere of black energy expanded, it dissipated in the shell of rock miles away from my center. I expended myself to escape, created a void of black inferno around me so far that I could not sense the end of its diameter, but still, I felt the resistance around me, the great mass adding to itself relentlessly, outpacing my destruction. The patterns on my flesh smoldered with my expenditure, seeming to burn themselves into me until my skin protruded grotesquely from their edges. I was limitless, but so was she. When infinity clashed with its equal, it found the ends of its reach. I was getting tired. My black star began to contract.\n\nThe pressure encompassed me, crushing me slowly. My infernal ball became hotter and denser, forcing my outstretched arms inward. I could hear the groaning of the great hand's joints closing, the fingers imbedded in the rock slowly clenching. Sweat dripped from every pore, my muscles tensed and quaked, I screamed against the interminable force around me as if to scare it away, but it kept imploding. Inch by inch, foot by foot, mile by mile. The air was so dense and hot that it began to liquify. Molten iron ran in rivulets down my brow and shoulders, cascading through the crevices of my body until I was suffused with it. My breath labored from me with expiring screams, my eyes bulged and my blood vessels burst. The world was closing around me, swallowing me whole, and there was nothing I could do.\n\n\"Please, God,\" I hissed. \"Help me!\"\n\nDIAMOND\n\nAstrid bounced off my wall like a tennis ball, then rebounded back into the fray of Breytans. I blinked. That wasn't right; she should've been trapped in it like a fly in a Venus trap, helplessly flailing as she slowly drowned for my amusement. I must've done something wrong. I turned my attention from her, and focused on the high wing of the valkyrie formation. There, Bianca Blackwing was making a long pass around the Breytan flank, ready to close in from behind. I turned around, gave Brandon and Justina a little wink, then pulled back my hand like I was drawing a bow, and loosed. It was a blind shot, for I very-much wanted to see the reactions on their faces when their beloved High Guard was turned to red mist, and I didn't need to aim. The arrow struck its mark, and... and Justina cried out in glee. Huh; I guess she fricken hated Bianca. Brandon must've too, because he had the smuggest little smirk on his gaunt sallow face. Did I just do them a favor or something? What in the fricken heck was\u2014Bianca's war-cry sounded out. I turned back around just in time to see the Ofanian wing crash into the back of the Breytans. The Ionans came up from beneath to surge into the fray, and the butchering began.\n\n\"What the bucket-truck is going on?!\" I yelled, and fired off another arrow. This one, I watched until it hit its mark. It struck an Ionan in the back, and splashed off her armored wings like a water-balloon.\n\n\"Oh...\" I muttered, \"...shit.\"\n\nWILLOWBUD\n\nI held my hand out before me, and clenched my fist. Though there was nothing in my palm, I could not close my fingers. I was so close. My thumb was almost wrapped around my middle knuckle. My entire hand shook with the effort, my nails were white with pressure and bleeding from the edges, the tendons and sinew were taut along the pulsating veins. Sweat dripped from my brow, my teeth ground together, my eyes bulged in concentration. I was so close. I collapsed to my knees as every bit of my strength was sent to my closing fingers. Before me, a great orb of molten rock slowly shrunk, the surface red with heat, lines of magma cracking like fractals with bursts of pressure.\n\n\"Die, goddamn you,\" I hissed. My palsying fingers were white around the knuckles, but still, they slowly closed. Millimeter by millimeter, my thumb slid up my middle knuckle.\n\n\"Just, fucking, DIE!\" I growled, begging and commanding in turn. I wrapped my other hand around my closing fist and pushed them together until my triceps and shoulders burned, my chest striated, and every ounce of me was vibrating with the effort.\n\n\"Die, DIE, DIE!\" I screamed. My fist closed. The orb before me imploded. Where it had been, there was nothing but a dot, a white-hot sphere of energy more massive than ten mountains. My fingernails broke right from their pads, but the pain was pure relief. My fingers slid along my bloody palm, and clenched around what felt like a pebble. But I could not crush it. The pebble stayed in the center of my hand, nestling itself into the soft folds of my palm; so small that I could not apply pressure; so strong that it didn't matter.\n\n\"Oh...\" I muttered, \"...shit.\"\n\nMy hand burst open. My fingers snapped back, my wrist cracked, and the orb before me erupted with black lightning. I was blown a hundred feet back, and barely caught myself on a lip of rock before I would've tumbled into the igneous lake below us. When I scrambled to my perch, Julia was already there. Her red hair was plastered to her, her flesh was ghostly pale, and though her eyes were blackened, I could see that they were also bloodshot. She rocketed toward me in a haphazard path, maneuvering like an enraged drunkard unable to seek her target. She launched a salvo of fireballs, and I threw up a shield of rock to absorb them. The first two impacts cratered my shield, and the third blasted through it. I shot backward with the shockwave and smashed into a cliffside. My momentum carried me two hundred feet into the rock before I came to a stop in my makeshift tunnel. Julia stood at the entrance. She cocked her head to the side, then threw her hands out before her. The light was stripped from the tunnel, and dark heat plummeted toward me. I shot downward, closing the gaps above me as fast as I could, diving deeper, deeper, deeper until the rock beneath me was molten. I took a tangential path through the cliff and burst from the other side just as a rocket of black flame shot from my hole. I launched myself onto a floating piece of limestone and scuttled across the lake before it melted beneath my feet. By the time I scrambled to the shoreline, Julia was already standing across the lake from me.\n\nShe was breathing heavily, her shoulders rising and falling with each laborious intake. She took an uneasy step forward, and the lake between us turned into a molten tidal wave. There was no escape. I pivoted into the rock and threw out my hands. The magma wave stopped, cresting just before it would've crashed into me. Though it was made of fire and heat, it was still iron. Gritting my teeth, I pushed back against it, and the lip of the wave slowly turned to the sky, then back the other way. The mass of iron began to move in my favor.\n\nASTRID\n\nI crossed blades with a Breytan, let her edge scrape against my vambrace, then wheeled around to decapitate her. Her neck spurted as her head toppled from the heavens, and her body soon followed in a wide and graceful spiral. Something impacted me from behind, and I turned to see a stubborn little oriental woman frustratedly trying to stab me in the back. I backhanded her with my pommel, caved her pretty face in, then snatched her by the hair and elongated her neck for her. Her spine cracked, her black eyes went dim, and I sank my fangs into her stretched throat and sucked her dry. More of them came for me, slashing at my arms and legs, the sparks flying as I parried and blocked, then the blood splattering as I returned their affections. I divided a woman cleanly down the middle, spun through her falling halves, blocked a strike with my vambrace, then broke my attacker to pieces with a powerful flap of my wings. As her dismembered arms, legs, and wings launched from her twisting torso, I closed my span, dove through her cascading parts, and speared right through the woman coming up beneath her. The point of my sword led the way, and my body passed entirely through her own, opening an Astrid-sized hole through her midsection that caused her entrails to flap like ribbons. The next woman tried spearing me through the sockets of my mask, but before she could, I put my blade through her pelvis and carved into her ribcage. Her insides exploded from her front, she vomited out what was left of her stomach, and as her parted breasts jiggled their separate ways with her dividing halves, I spun around to cleave the last of my assailants clean through the chin, parting the front of her head from the back to give me a brief glance at her brain.\n\nAnd thus ended the battle. The Breytans had been outnumbered, outarmed, and with their discipline thrown to the wind by Corruption, outclassed. The Ionans swept below me, making short and efficient work of what was left of the enemy, and the Ofanians soared above me, roaring their bombastic war-cries and making an inelegant mess of the massacre. The two wings converged, and the last of the proud Breytan warriors fought bravely and died quickly. Well, not the last of them. Jade Tao hadn't even drawn her sword. She just stood and watched the last of her samurai die, her face belying nothing at all for their passing. Behind her, Diamond was in her protective bubble of water, holding Brandon in front of her like a shield and hooking Justina by the elbows to pin her to her back. \n\n\"Hey Astrid!\" she called jovially. \"Did you get a makeover or something? What's with the hair?\"\n\nI slowly descended, and the rest of the flock did as well. A wide perimeter was formed above and around the sphere, surrounding the trapped god.\n\n\"You know, you and I never really got to know each other,\" Diamond continued. \"All I'm saying is that we have another chance to make a good first impression.\"\n\n\"You're doing a great job so far,\" I yelled back.\n\nDiamond scowled at me and hoisted the limp Life Giver up to shield her more. \"Hey, they attacked me! I didn't start any of this mumbo-jumbo, OK? I wanted everyone to be friends.\"\n\n\"You sent Angela to kill my girlfriend.\"\n\n\"She did that quite by herself!\" Diamond snapped. \"And your girlfriend\u2014boyfriend?\u2014whatever she is to you... she wanted to kill my mom, so of course I wanted her gone. I mean... look what they're doing right now!\"\n\n\"We don't need to emulate them. Where's Tera?\"\n\n\"She had a headache. Jade fixed it for her.\"\n\nMy stomach sank, and my blood went cold. \"Diamond,\" I called, \"let Brandon and Justina go, and we can talk.\"\n\nDiamond narrowed her eyes at me. \"So, you learned how to lie, huh? Cool. I learned how to kill; you wanna play that game?\"\n\nI glanced at Nona and nodded. All of the Ionans drew their bows at once and aimed their obsidian-tipped arrows at the Water Dancer. I notched my own bow and aimed it just above Brandon's left shoulder. \"I'm not playing games, Diamond.\"\n\nShe sneered. \"You are, and you're playing it very poorly. I know you won't shoot; I don't care if you can hit a fly off a rose without disturbing the petals, you won't shoot when I have them.\"\n\n\"Just fucking shoot her!\" Justina yelled.\n\n\"So that Brandon can take the hit for you again?\" Diamond jeered at her backpack-captive, then looked back at me. \"We can make a deal. You put down your weapons, and I'll\u2014\"\n\nAnd I shot her. The arrow zipped through the air with such speed that it was a line of motion, pierced the bubble of water, skimmed Brandon's shoulder, and struck Diamond in the collar. The three of them spun with the force of the impact, and the bubble disappeared. The valkyries moved in an instant. The Ofanians surged in to collect their god, the Ionans moved in to attack the wounded Water Dancer, and the last of the Breytans unsheathed her black katana and charged up to meet us.\n\nJULIA\n\nThe wall of fire grew between us, ascending skyward as I added more of my energy, and Willowbud added more of her mass. It was as if the world had become a slate of magma, and gravity had turned it upon its side to make a new floor to the heavens. More and more of the liquid iron was supplied from the bowels beneath the crust, forced upward by our will as we battled for its dominance, but neither of us could claim it wholly. All our force was brought to bear in this determining moment, and none of it seemed to matter, for all our destruction could not tip its balance, and we fed the sky instead. I was on my hands and knees within the lake, pushed forward like a pointing dog to exert every ounce of my strength into the monolith of fire. The lava rushed past me to add to its towering height, flowing between my fingers and toes to be pulled into the rising river. I couldn't last much longer. How did she have such strength when the power of God was with me?! Even as I raged at the towering wall, it began to turn into a cresting wave, forming a ceiling above me that breached the very clouds and lit them from above. I screamed at it and dug my fingers into the flowing flame, commanding the mass to move at my will, despairing upon the revelation that the heat of my own namesake was betraying me. It belonged to ME!\n\nBut my hot rage meant nothing to the slow and inevitable creeping of the earth. Like a tectonic shelf on the precipice of an earthquake, the cresting ceiling formed high above me, looming and threatening, ready to become sudden. It would collapse upon me, consume me, and entomb me. With what was left of my strength, I abandoned the battle of wills, dove toward the mass, and shot into it. The wave broke a second later, and the wall collapsed atop me. Forming a ball of energy, I blasted through the cascading avalanche, incinerated the igneous before me, and burned a hole straight through it. I was met with a battering ram of shale, and it was only by the grace of God that I clipped its edge, ricocheted along my predestined path, and burst through the other side.\n\nMy fire sputtered out, and I skidded off the lava lake like a stone. Behind me, the great wave sank into the earth, forming an inland ocean behind the outlet I now floated in. Willowbud was on the shoreline, resting on her belly. Her arms and legs quivered with fried nerves, and she barely had the strength to lift her head and glare at me. I glared back at her, floating spread-eagle on the lava, unable to lift even a finger. We demigods of the earthly elements were rendered to spineless urchins who could only stare at one another as we took refuge in our habitats. For minutes, only the distant rumble of the collapsing Gratoran Wall filled the void between us, accompanied by our rhythmic labored breathing. Unspoken words passed between our glaring eyes, but we would not give voice to them lest it expended needless strength. It was a race to recovery now.\n\nWillowbud moved first. She propped herself up onto one elbow, but failed to brace her other hand, and was left leaning awkwardly to one side. With great effort, I managed to slide one of my knees beneath me and apply pressure to the magmatic floor. She struggled to her other hand and now leaned to her other side. I growled, and slid my left knee beneath me, pressing my face into the hot medium. Willowbud dug her fingers into the earth to prop herself up by the hands, then stopped, and looked to the west. I followed her gaze. About five miles away from us, there was a flash of light. It shined with the luminance of an earthborn star, but it moved with the quick and frantic flits of a lightning bug hovering about a sphere of water. I went cold. I looked at Willowbud. She looked back at me.\n\nShe pushed her hand into the dirt and propped herself up on her knees. I slid my elbows beneath me and pushed my torso up. She managed to get one of her feet beneath her just as I shifted my weight on my toes, and at once, we attacked. She threw a rock at me that splashed five feet in front of her. I shot a flame that sputtered out into a pathetic puff of smoke. Screaming in mutual frustration, we scrambled shakenly on our unstable platforms, falling again and again until Willowbud finally managed to get to her feet. She threw another rock at me, this time with greater velocity, and it splashed beside me. I rolled to my side, pressed my hands into the boiling liquid, and willed myself upright. When I managed to get to my feet, Willowbud was already moving to the west, her gait that of a hobbled old woman, her shoulders set with determination. I sank my feet into the lava and slowly began to propel myself forward, surfing awkwardly upon its surface. It took a few agonizing seconds to accelerate, but once my momentum built, I sailed right past the hobbling Earth Former. A rock struck me in the shin, and I faceplanted into the lava. Willowbud skated past me on the shoreline, her eyes set straight ahead. I clambered to my feet and spurred myself on the boiling surface until I was on pace with her. She looked to her side, bent at the hips, and hurled a boulder at me. It exploded around the spear of energy I'd formed with my finger, which I launched at her. She absorbed the blast with a wall of rock, then launched a salvo of high-velocity pebbles. The broadside of bullets was incinerated by my infernal shield, and I fired off a return volley of concentrated energy. Each little blast exploded around her in bursts of shrapnel. She upended the earth beside her and swung an enormous ax at me. I blocked it with a sword of black lightning, and the two weapons shattered.",
        "We were building up speed now. I surfed across the lava, accelerating with the momentum of fire behind me, the jets beneath me beginning to sputter alive. She shot across the rock like the very earth was propelling her, sending a cloud of debris behind her. I launched a tornadic column of fire at her, and she intercepted it with a wall. The wall turned into a spear, drove through my vortex, and I incinerated it with a line of energy. Jets burst from my feet, and I rocketed into the air. The earth surrounded Willowbud in a sphere, and she rolled alongside me, building mass by the second but maintaining her rotational velocity, each rotation of her lengthening radius chewing up feet of space, then yards, then acres. I shot a line of energy into her core, and she returned with a mountain of rock that I turned into debris the size of houses. The molten rocks fell behind me and thudded to the earth as I fired off nuclear bullets that impacted her shell in deafening explosions, cratering the mass even as it built and built. Mushroom clouds rose behind us, volcanic mountains erupted, and as the world bellowed in agony, we accelerated side-by-side, wreaking destruction upon each other and dividing the space between us into an abyss of rock and flame. All the while, the deific sphere of water grew closer, and the lightning bug in the sky became clearer.\n\nDIAMOND\n\nMy shoulder raged with pain, but my terror dulled it. The arrows buzzed around me, creating a porcupine of the sand, zipping between my antlers and whistling through my hair. I drew frantic patterns of water through the air to deflect them at the hafts, for I could not change their flight head-on. They speared through my sphere like there was nothing there, and only my reflexes and human shields could save me. I'd managed to corral Brandon and Justina in my arms, and I spun them every which way to deny the sharpshooters a steady target, but they were closing in. The Ionans and Ofanians formed a perimeter around and above me, steadily drawing closer with their bows raised, aiming down their hafts, waiting for me to make a mistake. Jade stood in their path, a forest of deflected arrows in the sand around her, her robe tattered with so many holes that the setting sun illuminated her knotted and scarred flesh beneath. She was faring far better than I was, and she would most certainly be dead in seconds.\n\nThat was when the thunder sounded. No one seemed to have noticed that the distant rumble had ceased. No one seemed to have noticed that the flashes of fire and silhouettes of mountains had paused their duet on the horizon. We noticed now. All eyes turned to the east. Another boom sounded, and then another. There was a black dot that seemed to suck the light around it. It was accompanied by a mountainous sphere that rolled with the lethargic inevitability of a bowling ball. From such a great distance, it seemed as if the two objects weren't moving at all; that's how I knew they were coming right for us. There was a silent crack of black lightning, then the low rumble of its thunder. A magmatic mountain rose to the heavens, then crashed mutely when an obsidian sun struck its surface. The noiseless explosion vaulted into the sky, forming a golden-black mushroom in the dimming twilight. The clouds above parted, and I could see the sound moving through the vaporous air from the epicenter. It expanded across the sky, accompanied by a great upheaval of sand and dust from the earth below. The upheaval became a wave, then a gale, then a sirocco of debris that barreled toward us in congruence with the vaporization of the heavens, not slowing or dissipating, but building to expend the energy of the collision until the earth and clouds were one, and a great wall of vapor and sand precluded the gods within it.\n\n\"GET DOWN!\" Astrid screamed, and the valkyries shot to the earth, bracing on their bellies and folding their wings around them. Jade stepped into my sphere of water, and I bowed my head and pushed outward with all my might. The silent mass filled the world from horizon to horizon, then exploded around us. Darkness. Darkness, and heat. I felt the water of my shield evaporating, saw the jagged rocks pierce through it like arrows, heard the thundering boulders crashing around us. Justina and Brandon huddled around me, forgetting who I was. The lions and the buffalo all sheltered together in the storm. In the raging darkness, I saw the flitting shadows of valkyries being peeled from the earth and flung into the air, butchered into squirming pieces by the hailstorm of horizontal debris. A woman's wing was upended from her body and caught the wind, breaking the appendage clean off of her and hurling her to the mercy of the sky. A boulder struck her, and her blood misted the air before evaporating in the convection. Another woman tried to crawl tangentially across the sand to aid one of her brethren, and a spinning rock blew through her chest cavity and sent her gore splattering across my aqueous windshield. I screamed and struggled to hold the defense against the gale, but my arms were failing me, and my feet were being driven back into the sand.\n\nAnd then it was over. The hurricanic wave expanded behind us in a great circle, carrying into the sunset, billowing to the north and south, and washing over the Gratoran Wall to the east. The remaining valkyries unearthed themselves from the sand and looked around. The landscape had changed drastically in mere seconds. The dunes and formations that had stood for millions of years were now leveled, replaced instead by fresh glowing rocks that were scattered about the desert as if they'd been haphazardly dropped from the sky. In the middle of it all, were two women. Mom stood before me, and Willowbud stood before Astrid. Their backs were bowed and their arms thrust forward as if pushing against each other, but they were a hundred feet apart. Spanning the distance between them, was a line of energy and mass. Willowbud forced her column of molten rock against Mom's spear of black energy. The fulcrum moved back and forth between them, seemingly propelled by the intensity of their exertion.\n\n\"Diamond,\" Mom hissed, her breath shaking with her struggle. \"RUN!\"\n\nJUSTINA\n\nThe line of mass and energy burst and a concussive blast ripped through the air. The valkyries close to the explosion were sent flying in pieces, their armor ripping off at the chainmail joints. Halved women screamed on the ground, their guts ruptured and strewn, their mangled hands trying to hold in what was left. I knew some of those women; I knew some of them very well, but at that moment, they were like mannequins with vaguely recognizable caricatures for faces. Tinnitus rang in my skull, giving a fever-pitch to the horror as I took Brandon by the arm, and dragged him with all my might away from the chaos. The earth beneath us began to crack and sink, the newborn rock formations began to crumble, and the sand vibrated as if fluidized. I kept my eyes fixed toward the west, and tried to ignore the blasts of black light and the tonnage of boulders being thrown. I tried not to hear the screeches of the valkyries as they were mangled. Diamond scrambled after us step-for-step, and Astrid scrambled after her, all of us fleeing together, knowing that our only chance of safety was our mutually assured death. It hardly seemed to matter, for the destruction wrought by the gods of earth and rock was all-consuming. As boulders struck black fire, a column of debris surrounded them, and the silhouettes of their battle shown from behind the curtain of dust like apocalyptic shadow puppetry. All we mere mortals could do was run.\n\nWe charged up the lip of a dune, then jumped down it just as an explosion of fire and rock sent a wave of deadly shrapnel flying over our heads, pieces of living valkyrie screaming with it. We slid down the slope, scrambled to our feet, then rushed to the cover of an outcropping. I dragged Brandon over the top, Diamond and Astrid jumped after, and then Nona, Bianca, Jade, and seven other valkyries hurdled after; three Ionans and four Ofanians. For a moment, the fourteen of us just breathed heavily as the cacophony of disaster raged behind us. Then we remembered we were all trying to kill each other.\n\nDiamond grabbed the facemask of the Ionan next to her and ripped the blood out of her body through her eyeballs. Jade leaped to her feet, swung her katana with a backhand, and decapitated an Ofanian through the chainmail of her neck. As the Ionans and Ofanians rushed into position, Jade snatched the limp Brandon from the ground and hauled him bodily into the air before her, and Diamond grabbed me by the neck and held me to her front. The valkyries quickly formed a circle around us, and our captors moved back-to-back so that Brandon and I were exposed to the threatening obsidian blades of our allies. Diamond surrounded us in a sphere of her water and huddled against Jade. I was quivering from head to toe, but I wasn't the only one. I could feel Diamond's terror through the tremors of her muscles, hear her labored breath as she negotiated the wound in her shoulder.\n\n\"Stop this, now,\" she hissed at Astrid. \"If you take one more move, I'll drain Justina into a sleeve, and Jade is going to cut Brandon's fricken head off.\"\n\n\"And the next move, we'll kill you both,\" Astrid said simply. \"Then Willowbud kills your mother, and the battle is over.\"\n\n\"Oh, that's how it is?\" Diamond sneered venomously. \"Bianca, if you don't kill Astrid right now, Justina and Brandon are dead.\" \n\n\"She's bluffing!\" Astrid said sharply.\n\nDiamond leveled her gaze upon Bianca over my shoulder. \"Can you take that chance, High Guard?\"\n\n\"I trust Astrid far more than I trust you,\" she snapped back, but her shoulder shifted slightly in Astrid's direction, and everyone saw it. Nona tactically positioned herself behind us, and the three Ofanians all changed their stances to match her.\n\nDiamond chuckled cruelly and pushed her fingers into my mouth. \"I'm going to count to three, and if the Ionans aren't dead by the time I hit 'one,' then Jade's gonna open Brandon up like a piggie, and I'm going to show you the brains Justina's so proud of. Three, two\u2014\" And I bit down as hard as I could. Blood spurted into my mouth, bones cracked, and Diamond shrieked. The valkyries launched forward. Jade dropped Brandon to intercept a blow that would've cut Diamond's head off, I released Diamond's broken fingers from my mouth, and she shoved me away without thinking. Metal clashed above me, feet pounded around me, and I snatched Brandon from the fray of stomping boots and dragged him through the frantic forest of legs.\n\nWILLOWBUD\n\nIt felt like I had been winning before. It wasn't that I was more powerful than Julia; it was that I was more terrified than she was. Her sense of divine predestination gave her a confidence that worked in my favor, for I fought for my life with every breath, and she fought to kill me. Now she felt vulnerable, and that vulnerability made her ferocious. No longer did she attack me with the full brunt of her strength, but with strike after strike, desperately seeking my weakness, battering me relentlessly with no sense of grandiosity or pretense. It was a street fight now, and I'd been in enough of them to know when I was losing.\n\nI barely caught one of her lightning strikes against a granite shield, then had to dive out of the way before a series of fireballs. They exploded in succession behind my flight, and I felt the heat of the last one before I countered with a spear of limestone aimed for her head. She split it down the middle in a burst of black flame, then sent a tornadic column of fire my way. Absorbing the inferno with a wall of rock, I turned the melting slab into a wave that rose above me, then ran beneath my outstretched arms in dual jets of magma. The two lines converged upon Julia, and she repelled them with a spheric shield before battering me with volley after volley of lightning. Each deafening strike crashed upon me, shattering the frantic barriers I put up until the final blow sent me sprawling on my back. Before she could incinerate me, I drove my hand into the sand, found a felled sword, and launched it at her heart. She shattered it with an easy deflection, but I was on my feet before her counter, throwing boulder after boulder at her, just trying to buy time as I retreated. She advanced with me step for step, the jets howling from her feet, closing the distance between us until I erected a mile-high wall in the void. She burst through it, I sent an anticipatory discus in the breach, and she melted through it like butter.\n\nI scrambled in the sand, doing what little I could with the useless granules to obscure her vision until I reached an oasis of limestone. Forming it into an axe, I swung the one-hundred-foot weapon with all my might, and she parried with an infernal sword, chopping the head off. Another bolt of lightning came from her fingertips, and there was nothing I could do to stop it. It arced across the space between us, its fractal tendrils seeking me, its static charge raising the hair on my neck. There was a flash of white, then an explosion of red. All that was left of the Ionan who sacrificed herself was her pair of charred armored wings. Julia blinked, and that hesitation was all I needed to fire five successive boulders at her. She turned them to dust one at a time, but I was already on the move to the next outcropping, surfing across the sand on a board of granite. As I fled in terror, a strange seed of doubt grew in me. It had been prompted by the martyred nameless Ionan, but not by a sense of guilt. Diamond was immune to Julia's fire; Julia had every reason to go nuclear and wipe everyone out just to kill Astrid. Why didn't she do it? Who else was she trying to save?!\n\nBRANDON\n\nI was floating in darkness. I was bodiless, yet warm. It was comfortable in this void, and I found an unspeakable peace within it. I was eternal. The arms of time stretched behind and before me forever, and I felt a connection with it all. I knew nothing, but I understood it all. I was nobody, and I was everything. The feeling faded. I became aware of myself. I felt the coarse dust plastered to my parched mouth, the hot sand running along my numb arms and legs, the slow and sporadic drumming of my heart, the pain in my mutilated hand. I opened my eyes. The sky above was dark with the expanding head of a mushroom cloud. Explosions wracked the earth, tremoring beneath me. A great howl pervaded the soundscape, punctuated by a cacophony of screams and thunderous strikes. There was a woman above me, a fresh scar on her forehead. She dragged me through the sand as beads of sweat dripped down her brow. Finally, she found refuge in the underbelly of an outcropping, and after nestling me into the claustrophobic cold womb, she collapsed beside me.\n\n\"Run away,\" I mouthed to her.\n\n\"Shut up,\" she hissed back, piling up sand in the entrance of our small cave.\n\n\"You have a chance now.\"\n\n\"I said shut up!\" Justina snapped, and continued piling the sand until barely a sliver of the dying sun shone through the top. She rested against the mound, and took a deep shuddering breath before staring at me with a piercing gaze. \"You haven't given up on her, so I won't give up on her. I won't give up on you.\"\n\n\"I don't have a choice,\" I smiled horribly at her. \"It's not bravery; it's cowardice. She's killing me, but I'd rather die than face the music that I failed her. Even if it costs all of you.\"\n\n\"All of us don't matter. You're the god. When you reunite with Angela, you'll tip the odds in our favor. Only you can stop this.\"\n\n\"I can't,\" I whispered. \"Justina, even if she comes back to me, what will I bind her to? It took me weeks to make her a body with unbound power. I can't even stand up right now. I knew the moment that our bond broke that she was doomed, but I sacrificed all of you anyway. Don't die for a lost cause.\"\n\n\"We'll find a way,\" Justina muttered, and peered through the crack in the mound. \"Angela always found a way.\" \n\n\"There is no way. Just run.\"\n\nShe stared through the crack for a long time, not answering me. When she finally looked back at me, there were wrathful tears in her eyes. \"Just run?\" she whispered. \"Is that what you think I'll do? That's what I've always done, right? Just run; just hide and don't get in the way.\"\n\n\"That's not what I\u2014\"\n\n\"Fuck you, Brandon!\" she snarled. \"Fuck you, fuck you, fuck you! You don't get to lose hope, you son of a bitch! Not after everything I've lost for you! You don't get to throw away my life\u2014my mother's life\u2014just for your own self-righteous self-serving self-pity!\" She scrambled violently to me and stuck her face in mine. \"I've given up on reason for you! I've seen with my own eyes the power of the irrational, so now that I've found religion, you don't get to lose faith!\"\n\n\"I'm sorry.\"\n\n\"DON'T BE SORRY!\" she screamed. \"DO SOMETHING! Tell me there's hope! Lie to me, you son of a bitch, and I'll believe it!\"\n\n\"There's hope,\" I whispered.\n\nJustina nodded resolutely. \"Good. Then keep fighting. She's coming, Brandon.\"\n\nInterlude Two: She Comes from the Water\n\nANGELA\n\nWe stood before an enormous pool. The light from our bodies shined across the glassy surface, revealing the great breadth of its waters. I could not see the end of it in the abyss.\n\n\"This is your portal,\" I said to Guilt.\n\nShe nodded. \"I used to travel through the delipidated realm of my daughter, but since my death, this thing has formed in its place.\" She raised her head, and grey light illuminated the expansive cave. Across the pool, there was an iron door. Its edges glowed red with the realm of Hatred, and ominous shadows played around the threshold. \"Now I can never go back to her. I suppose it is a mercy, but I do not deserve mercy.\"\n\n\"We're not even melded yet, and you're already making me want to kill myself,\" I grumbled, and touched my toe to the water's surface. There was no splash, nor even a ripple. My foot passed cleanly through the water like it was nothing.\n\n\"This water is not of this plane of existence,\" Guilt explained. She pointed into the pool, and by her grey light, I saw that it was very shallow. At its bottom, was an iron door.\n\n\"Where does it go to?\" I asked.\n\n\"Wherever there is water. It could go to an ocean in the arctic or a puddle in the desert. It depends on my memory of the world below, which, I am sorry to tell you, is quite awful. The world has changed so much over the eons, and I have hardly been paying attention.\"\n\n\"Holy fucking shit,\" I groaned, rubbing my eyes. \"The whole reason I came here was for you to get me back to Brandon! Are you telling me that you don't even know where the fuck he is?!\"\n\n\"He is in the Gratoran Desert.\"\n\n\"THAT REALLY NARROWS IT DOWN!\"\n\nGuilt nodded as if she'd been helpful, then furrowed her brow. \"He is... he is by the Gratoran Wall. By Droktin's Pass. He is... hmm... I cannot see any clearer than that. My memory obfuscates it.\" \n\n\"Well, it's not like there's a whole lot of water there anyway,\" I muttered. \"I guess let's just keep opening the door until we get close. I'll take us the rest of the way.\"\n\nGuilt extended her hand to mine, and I grasped it. I was immediately disgusted by the cold clammy touch, and then I felt a crushing sense of shame that I was so revolted by someone who was helping me. I would've been overwhelmed by the sensation, but my resolve was stronger. Guilt gave me an apologetic look, then guided me into the water as she limply held my hand. When we were submerged to the waist, she reached down and opened the door.\n\nPart Three: Between Heaven and Earth\n\nASTRID\n\nThere were chinks in my armor now. I felt the dry desert air whispering through the holes in my greaves and breastplate as I whirled on the sand, clashing my metal with Jade then fleeing before the advance of the Water Dancer. Diamond had hardly been a threat before, but now that our shells had cracked, she showed us all who she really was. She sucked the water from the air, spun like an acrobat between Gina Nightaxe and Abby Fjordgazer, then splashed the pair of them as they swung. Before their blades could strike her flesh, the water had found the cracks in their armor, and Diamond burst them from within. The women became hollowed suits of obsidian, their red and pink insides running through the sieve of shrapnel-cut holes. Diamond pulled their blood from the sand and shaped it into a sword just as Imani Surefoot engaged her. Imani was faster and stronger than Diamond could ever hope to be, but Diamond moved like water. She slipped under Imani's decapitating strike and rammed her crimson sword through a slit in Imani's chainmail. The Ofanian's eyes exploded from the front of her visor, and then her brains oozed out after. She dropped to her knees with a clunk, and fell on her face, spilling out what was left of her skull onto the sand.",
        "Jade fought Nona and Bianca in tandem, flowing gracefully between Nona's precise strikes and Bianca's powerful thrusts. Nona might've been an even match for Jade in her prime, but she was a decade removed from it, and Bianca never had a chance at all. I raced toward them, then smashed into a wall of water. My armor allowed me to pass through it, but I could feel the humidity leaking between the chinks, threatening to touch my bare flesh. I ripped myself away just as Diamond came around my back, a black katana in her hands. She stabbed the air where I had been, then sprayed me with a gout. I rolled in the sand before it soaked me, then dashed forward with my sword pointed to her chest. She was too slow to sidestep me, but her hand came up just in time to unleash another spray, and I had to dive to the left. In the time it took me to recover, Diamond had wheeled on Tisha Darkblade and had burst the young Ofanian from the inside out. Gia Darkblade shrieked and raced for her mother's killer, only to be smashed by a falling boulder.\n\nEveryone fell flat on the ground and covered their heads as meteoric rocks hailed from above. They exploded around us, sending shrapnel ripping through the air and clanging off our armor. I gritted my teeth in the sand and waited for the thunderous barrage to pass, but it continued for an agonizing eternity, shaking the very earth, rending the dunes into craters. Something erupted beside me. I was flung fifty feet across the sand and skipped like a stone until I came rolling to a stop. The breath was shot from my lungs, I felt the air on my ribs, and I shot my hand for the breach. There was no wound. The markings on my flesh protected me. I dared to look up, and I saw the mountain Willowbud had created beside us. It was a vertical wall that defied the very sky, and it had been ruptured through the center by a black star. The meteors were cast into the heavens above and arced across the stars toward the last sliver of the sun. In the distance, I saw another wall shoot from the ground, and another black star erupted from its center. The shrapnel blasted outward but was too far to fall upon us now. As the rockets burned across the sky, I dared to stand on wobbly legs, knowing that for at least a few more seconds, we were safe from the battle.\n\nJade rose a second later. Nona followed, then Diamond, then Bianca. We all stared at one another from across the pockmarked landscape, then charged with a scream. Nona and Bianca engaged Jade, and I made a beeline for Diamond. The Water Dancer summoned a sphere around her and launched dozens of tentacular jets for me. I cut three of them down with my sword, flew above another, spun around a vortex that would've swatted me from the sky, then dove between two more. Diamond jettisoned her expansive attack for a focused one, aiming a hose at me from fifty feet away. I spun around it in the air, and she moved it with me, attempting to direct me to the right. I saw her plan before it came to fruition, and dropped from the sky just as she shot a second hose in the place I would've been. Unfurling my wings five feet from the ground, I flapped with all my might, closed my span, and led a corkscrew with the point of my sword. I shot through one side of the sphere, cut through something hard, heard a screech of pain, then blasted through the other side. Wheeling in the air, I turned to see Diamond clutching her head, blood dripping from a stump that used to be her antler. The one she had already lost had also been shorn away from its tethered position, and they both rested on the sand before her. She roared furiously, then launched after me.\n\nThe Water Dancer did not samba through the air, nor did she fly like a valkyrie. Her motions were that of an insect; unpredictable and sudden. She zipped after me with lightning speed and shot bullet after bullet of water. The strikes clanged off my side, seeking the open space in my ribs. Faced with such deadly accuracy while on the move, I only had one choice. I flew away. With all my might, I flapped my wings and pushed myself to the east. There, only a mile away, a towering inferno met a granite monolith. Their collision sent an airburst through the sky, and the convective winds caught my wings and blew me backward. I spun and swung my sword, and the Water Dancer barely avoided the bisecting attack. She shot through the sky heedless of the winds, a cone of water making her impossibly fast. Turning in the air at a right angle, she came for me, aqueous tendrils extending from her fingers to grasp me. I slashed them one after the other, then dropped from the air before she could ensnare me. I opened my wings seconds before the ground and flew along the dunes for cover. Sand exploded around me as Diamond fired shot after shot from above, and I had no choice but to go higher. Another deific collision of rock and flame, and another blast of air sent me careening through the sky. Diamond shot across my side as I swiped wildly with my sword, and I felt the biting sting of a blow to my exposed ribs. Closing my wings to protect myself, I fell to the sands below, slowing just enough to avoid breaking my legs upon landing. I checked my side to ensure the wound was shallow, then assumed a defensive stance, and looked up.\n\nNever in my life had the skies been taken from me, but now I was not their master. Diamond floated threateningly above, glaring down at me from her shield of water.\n\n\"I'm gonna cut off your wings for that!\" she snarled. \"Mom's gonna cook 'em up, and I'll make you eat them!\"\n\n\"Make sure you serve them with blue cheese; none of that ranch bullshit.\"\n\n\"Oh, you're funny now, huh?\" Diamond jeered. \"It'll be hard for you to do standup with no fricken legs!\"\n\nDiamond raised her arms and sucked the moisture from the air. A great ball of water formed in her hands, expanding by the second until it caught the dying angle of the sun. Glimmering in the air, the aqueous orb churned in a self-consuming maelstrom, somehow growing upon its own feasting. It towered over me, impossible to run from, impossible to defend. Diamond sneered, raised her hands, and\u2014she stopped. She looked over her shoulder, then suddenly launched her orb to the east. It didn't matter. The deer had stuck its antler over the brush, and the hunter had taken her shot. A mountain was flying across the sky, too large to flee from, too fast to dodge. It was one of the most bizarre things I'd ever seen. Such a thing was not supposed to move with such speed. It was a triangle on the horizon, then it was a monolith in the midground, then it was a roaring behemoth that encompassed my entire vision, its summit cutting through the clouds, its great wind roaring before it. Diamond's water splashed upon it like a water balloon, and all she could do was stand there and stare at her awesome damnation. I heard the thunder before I saw the lightning. I had just enough time to cover myself with my wings before the black bolt erupted from the center of the mountain, passed through Diamond like air, and split the rock in twain. The two halves separated before us, and we were consumed in the middle. \n\nThe sky was a sliver, the horizon was just a vertical line, and the world was just two moving walls flying past us at impossible speeds. There was no sound, and there was no air. The great hurdling masses formed a silent vacuum between them. The sand was sucked into the void, suspended and dispersed like stars. Rocks floated listlessly around me as if no tether held them to the earth. I was pulled from my purchase and held between the three planes of ground, unable to catch any air with my wings. My hair stood up, my blood ran hot, and my lungs filled. For a moment, I was trapped between the passing partitions of mass, unable to marvel upon the kaleidoscope of topography that zoomed past me. Diamond was beside me now, clutching her chest, her eyes bulging as she kicked for air. We stayed suspended for tortuous seconds, and then the divided mountain flew past us. We were sucked into the backdraft, sent flying high into the air, and then blown down in the combating wave. I barely caught my wings against the sudden weight of air and spiraled chaotically to the earth until I crashed into a dune, and skipped down its slope. The dune was now turned in the wrong direction, and its gentle gradient was the only reason I survived at all. The split mountains continued their journey for miles, flipping the direction of the desert waves in their wake until they finally separated, and tumbled into distant explosions that shook the earth. I came to a slow stop, and blinked stupidly up at the darkening sky, my patterns so luminous from Willowbud's draw that I glowed in the darkness. Diamond slid next to me, her breath lurching in cadence with mine. Side by side, we collected the sweet oxygen into our ravenous lungs.\n\n\"A vacuum is formed by a negative pressure differential,\" Diamond gasped beside me. \"But for an object to have its own gravity on earth, it must approach the product of mass and acceleration that the world itself holds to. Amazing.\"\n\n\"You're just making that up to sound smart,\" I wheezed.\n\n\"You valkyries are all brawn and no brain,\" Diamond puffed. \"My mom\u2014my other mom\u2014she taught me that, and she was thousands of years old.\"\n\n\"Your mom...\" I croaked, struggling for breath, \"...was a fucking nerd.\"\n\n\"Yeah, well I knew your mom...\" Diamond sucked in a rattling breath, then let it slowly out, \"...and the only useful insight I ever got from her was when she farted.\"\n\n\"People shit themselves before they die,\" I growled, and managed to get up on one elbow. \"Maybe I'll get some insight out of you.\"\n\n\"Stop stealing lines from Angela!\" she coughed and propped herself up on her knees.\n\n\"I thought you said I was a comedian?\" I snarled and struggled to get one hand beneath me.\n\n\"You're just a clown,\" Diamond snapped and pushed herself upright.\n\nA second later, I was up on my two feet. We both battled the sudden vertigo for a moment, then reoriented simultaneously. It was at that moment that Bianca came cresting over the dune with Nona following at her heels. Jade shot after them, then diverted suddenly when she saw me. Nona and Bianca reacted, and Diamond took advantage to rush me. Before she could deliver the deciding blow, another hale of boulders crashed upon us, and everyone took cover.\n\nJULIA\n\nWillowbud was tiring. Her attacks were vicious and sporadic, seeming to come from her desperation. She hardly rallied a defense at all, and instead only displayed the bare minimum to keep me from killing her. As a deity of rock\u2014as a true Creator\u2014her method of destruction required her to create first, while my power was tuned to destroy without pretense. Leaning to the offensive should've spelled the end for her, but in a strange and bewildering turn of circumstance, I was now the one defending. While Willowbud could put up mountains to protect herself, my shield was energy, which required me to destroy her launched projectile instead of simply deflecting them. And while we were battling against each other, who we were attacking and defending was entirely removed from the mortal contest. Willowbud launched salvo after salvo of boulders to the west, and I desperately attempted to filter them through my firewall. I failed. Even if I incinerated ninety-nine percent of the mass she sent through the air, the other one percent was enough to level cities. I watched the meteors crash down upon the sands, exploding in great uplifts of earth and dust. The patterns on my flesh now thrummed so darkly that they seemed as concave canyons in my skin. Diamond was still alive, but was Brandon? As I rallied another defense against Willowbud's barrage, I portioned an ounce of my attention to seek my mark made in Daughter Justina's brow. She resided half a mile from the kill zone, and that gifted me some measure of relief. That relief was ripped away in the cold realization that Willowbud did not know what I knew. She still thought Brandon was with my daughter, but that was apparently a sacrifice she was willing to make. It wasn't one I could.\n\nJUSTINA\n\nI could no longer see the battle of valkyries and gods. I could only see the dim illumination of lava in the distance, and the reassuring bright dot of Astrid flitting across the dunes. The sun had finally set, and darkness pervaded the world. It wouldn't save me. I recalled what Willowbud had said about how Julia had tracked her down by the brand she'd made in her back, and I touched the cauterized wound on my brow. There was no running from her now.\n\n\"Justina,\" Brandon whispered. He might've been trying to scream, but his voice was so small.\n\n\"Yes?\" I asked, turning to him, glad that the darkness disguised his skeletal self.\n\n\"What happened this afternoon? I thought it was Diamond who was doing it, but then Julia came to me, acting even crazier than usual. What did you do?\"\n\nI stared at his silhouette in the darkness, wondering what to say. \"Brandon,\" I said at length, \"do you believe that the Holy Mother will take you to heaven when you die?\"\n\nHe snorted. \"I used to, but after a day with the Holy Mother's priestess, I'm beginning to consider atheism.\" \n\n\"Not autotheism?\" I attempted a laugh.\n\nHe didn't laugh back. \"No,\" he said darkly, \"I'm no god.\"\n\n\"But you're mine,\" I whispered and snuggled against him. He was hardly more than bones, and there was no warmth to his flesh, but I found a small measure of comfort in the beating of his heart, so faint compared to the thundering drum of asteroids hitting the earth outside. \"I found the answers we were looking for. The secret of Corruption.\"\n\nBrandon's heart thumped a little harder, then eased back into its slow cadence. He cleared his throat, and whispered, \"this has something to do with the Holy Mother then, I take it. That's why you asked me if I believed in her.\"\n\n\"Yes.\"\n\nHis mutilated hand tremored against my back. He seemed to have forgotten he was missing his fingers, for I could feel his palm attempting to grasp my shoulder. \"Justina,\" he said softly, \"I don't know much about Sentients, but after speaking with Corruption, I... uh... you know, I don't think she's one of them.\"\n\n\"No.\"\n\nHe took a rattling breath, and slowly let it out through his nose. \"Holy shit,\" he whispered.\n\n\"Yeah,\" I whispered back.\n\nThere was a pregnant pause as Brandon's mind wheeled over everything he'd realized. Finally, he opened his mouth, and whispered, \"Justina?\"\n\n\"Yes, Brandon?\"\n\n\"I could see Corruption through Willowbud back when we were in Drastin. She did everything that Willowbud did.\"\n\n\"She was controlling her.\"\n\n\"That's not my point.\"\n\n\"What's your point?\"\n\n\"My point is...\" Brandon took another rattling breath, preparing himself for the existential revelation, \"...God used to suck my dick.\" \n\nI burst into laughter against his chest.\n\n\"Like... all the time!\" Brandon exclaimed. \"She used to lick my asshole, tongue my balls, and God herself\u2014the almighty Holy Mother\u2014used to deep-throat me like she was checking her tonsils. Holy-fucking-shit.\"\n\n\"God was a premature ejaculator,\" I giggled. \"One time, she couldn't get hard again, and she was so mad.\"\n\n\"God once farted in my face while I was going down on her.\"\n\n\"God once smacked her face on the headboard and knocked herself out before she could come.\"\n\n\"Remember when God ran out of toilet paper and had to duck-waddle across the whole house to use the other bathroom?\"\n\n\"Remember when God tried to do a backflip off the table and landed right on her ass?\"\n\n\"She broke her tailbone,\" Brandon laughed hoarsely. \"Goddamn it, you fucking asshole!\" Brandon mimicked Willowbud perfectly, \"Don't just stand there! Stop laughing at me or I'll fucking kill you! Astrid? Astrid?! Astrid, get in the kitchen and help me, you dumb bitch!\"\n\n\"God had such a bad temper,\" I snickered.\n\n\"Yeah...\" Brandon trailed off as the sound of crashing boulders and thunder pervaded. The moment of escape faded away, and the cold desert night crept into my flesh.\n\n\"Brandon,\" I whispered, \"what did Diamond mean when she said you and Julia made a deal?\"\n\n\"We didn't make a deal; I lied to save my ass. I guess it makes sense now what she wanted. She thought I could break Diamond's meld.\"\n\n\"Why did she think you could do that?\"\n\n\"I dunno. Something about how Life Givers could tether, and Life Givers could make Sentients, so Life Givers should be able to do something with melds.\" Brandon paused for a moment. \"Hey, can Life Givers do that? I actually don't know.\"\n\n\"No. A Creator's power must have its source in the spiritual plane. Binding is done from soul to body. Tethering is done from soul to mind. Melding is done from mind to mind.\"\n\n\"Then what the hell is the Holy Mother doing with Diamond?\"\n\n\"The Holy Mother isn't a Creator. She is... something else. Her power comes from the spiritual plane and is made manifest in the astral. Julia is her only tie to this plane, and Diamond is her only tie to Julia. The connection is mind to mind, soul to body. It's an abomination.\" \n\n\"Then how does tethering even work?\"\n\n\"You know how it works. A soul is tethered to an idea, the idea is tethered to its physical form.\"\n\n\"But does the person being tethered have to be there for it to happen?\"\n\n\"No, because ideas don't have a specific location, but bodies do. If you want to make a connection from soul to mind, you just have to\u2014\" I looked sharply up at his dark face. \"Don't even think about it.\"\n\n\"I'm just weighing my options is all. I don't even know what I would tether her to. It's not like she was sentimental to anything.\"\n\nI squeezed his hand tightly. \"She's coming back. She's coming for you right now.\"\n\n\"And when she gets here? What can I bind her to, Justina?\"\n\nThe answer was obvious, but neither of us would speak it. Brandon would never ask for it, but I would have to give it. From a pragmatic perspective, it was a very easy choice. How would I do it? An incision to the wrist wouldn't cause too much damage. A quick bleed-out, then Brandon captures me before the end, heals the wound, Angela jumps in, binds with him, and then... well, I guess I'd be dead. Dead, but not gone.\n\n\"You know...\" I said, forcing a smile, \"...I think I'd make a good Passion. Study forest life for eternity, make a bunch of stud sons to fuck my brains out, hide away in a womb forever so that I don't have to talk to anyone? Sounds like heaven to me.\"\n\n\"You don't have to\u2014\"\n\n\"Shut up,\" I said and pressed my finger to his lips. \"I said I'd do it. That's the end of that.\"\n\nHe smiled weakly. \"Thank you.\"\n\nDIAMOND\n\nMy left arm was useless. The puncture wound made by the arrow had caused it to be numb from the collar down, and the deep gash in my deltoids killed the mobility. It swung dumbly from its socket, and as I whirled between Bianca and Astrid, I tried to suppress the realization that I would most certainly lose that arm forever. Right now, I had a lot more to lose.\n\nI hosed down the Ofanian High Guard, then spun before Astrid could cut me in half, and slashed at her with my katana. She expertly blocked my attack, then sheared down the length of my blade until I was forced to spin away lest I lose my fingers. There, Bianca was waiting for me. I ducked beneath her decapitating swipe, drenched her with another blast, then rolled to the left just as Nona came down from the sky to impale me. Jade flew in a second later and harried Astrid to the perimeter. The clangs of their swords chimed behind me as I squared up against the two High Guards before me, and examined them with Corruption's perception. Nona was filled with deadly resolve and confidence, and Bianca was brimming with anxiety. Neither woman was afraid to die, but only one of them believed they could kill me. I let out a shriek, fired off torrential jets of water, and charged the weak one. Bianca stuttered to a defensive stance, and Nona had to rush in at my flank to save her.",
        "I battered Bianca with a flurry of attacks, wheeled to my left, and struck suddenly at Nona. She was faster than me and caught my blade on her crossguard before digging her toes into the sand and barreling me over. Tumbling from my roll, I shot into the air and launched myself at Bianca once more. She attempted a counterattack, ducked beneath the swipe, and I sent her flying with a jet of water. She slid across the sand as I drenched her, my water seeking the cracks in her armor, pouring into them, getting closer and closer to her flesh. She flapped and flailed desperately, but there was no escaping the downpour, and I was beginning to feel the sweat that glistened from her skin. I saw a flash of white in my periphery and pivoted in the air. Nona was a breath from chopping me in a half, but I was a step ahead of her. I shot above her cleaving strike, then pulled the mass of water from the air above me, and launched it on top of her. She plummeted to the earth and crashed upon the sands, her scream cutting through the roar of my deluge. Her wings were broken, but she still breathed. As Bianca scrambled to her feet and flew after me, I forced every ounce of moisture around me into the obsidian shell of Nona Cloudwhisper, leaking deep into the holes of her chainmail, filling her armor. I could feel her panic now. She was thrashing desperately, screeching and squirming against the pin that suppressed her. Astrid kicked Jade in the chest, pivoted, and launched after me. Bianca ascended with her sodden wings and came from the other side. They were seventy feet away now. Sixty, fifty, forty.... Nona raged in the sands as my water leaked deeper and deeper. A droplet found a hole in her visor. Thirty, twenty, ten.... I touched Nona's flesh. Nine, eight, seven, six\u2014I ripped Nona from the sand, shot upward upon my jets, and pulled the Ionan High Guard against me. As Bianca and Astrid rifled after me, I knifed a droplet through Nona's shoulder and gained control of her blood. She screeched, then launched herself wildly at Astrid.\n\nI wasn't much of a puppeteer, but I didn't need to be gentle with my doll. I overloaded the hydraulics of her blood vessels, rupturing her arteries from within to deliver the most powerful blows, turning her graceful body into a jerking mannequin of self-destruction. Astrid parried with expert precision, trying her best not to harm the doomed woman, and I used her compassion against her. Nona pummeled Astrid with blow after blow, each one so strong that she tore her own sinew, snapped her own tendons, and ripped the bellies of her muscles. She shrieked in agony as she delt death to her own friend, and I laughed, and laughed, and laughed. Oh, it was funny to see someone else turned against their will for once. I was so amused by the display that I almost forgot about Bianca. Fortunately, Jade didn't. As the Ofanian High Guard rocketed to my blindside, her Breytan counterpart intercepted her. With emotionless ease, Jade harried Bianca across the skies, outmaneuvering her at every turn, mercilessly boxing her in. That fight was all but over. I focused my attention on the Bound One and my puppet and flew in a wide arc behind them.\n\nAstrid saw me trying to flank her, but she could do nothing about it. Nona shrieked in the torment of her flesh as she brought down her sword again and again, battering away Astrid's futile defenses, opening her with every strike. Her biceps had been torn from the bone, her triceps hung loosely in her bag of arms, but the hydraulic force I applied to her vessels compelled her to strike past the limits of her body. Astrid was faster than Nona, but she couldn't flee. My parasitic water saturated the tendons that connected Nona's wings to her back, and I broke every flighted bone in Nona's span to make her fly.\n\n\"Kill me! KILL ME!\" Nona begged Astrid as bloody tears ran from her eyes, but Astrid could do nothing against the self-destructive ferocity of her foe. She deflected desperately, the sparks flying off their joined blades as I maneuvered them to my liking.\n\n\"She's coming behind you!\" Nona screeched as she battered Astrid. Astrid deflected a strike, then attempted to break from the engagement, but I sent Nona on a suicidal charge right into Astrid's sword. The blade punctured Nona's gut and burst through her other side, and as Nona gargled on her own bile and blood, I shot for Astrid's back. She couldn't pull her sword out in time. It was stuck in the deific armor. She desperately turned and twisted the weapon, carving through her friend's abdomen and guts, pitching Nona's horrific shrieks higher and higher, and I laughed, and laughed, and laughed. I aimed for the exposure of Astrid's ribs and cackled at the idea of what I would do to her in front of Willowbud. Oh, I'd have a whole lot of fun after what they'd put me through. Astrid finally ripped her sword out of Nona, but it was too late. I opened my hand and launched a spear of water right for her patterned ribs. It sputtered with no velocity at all, and a girl shot out of my palm. She was translucent blue, freckled, and young. Her eyes fluttered in a moment of confusion.\n\n\"What the hell...\" she muttered, furrowing her brow in the darkness, \"...hey Guilt, I think we're about three miles southeast of where we need to be. Let's go back and try that aquifer again, I had a good feeling about that...\" her eyes focused on the glowing figure before her. \"...Astrid?!\" \n\n\"Angela?\" I gasped.\n\nShe wheeled around in the air and gawked at me. There was another figure with her. I could not discern her before, for she blended into the darkness. Her flesh was grey, her eyes were white, and her face was terribly familiar. I would've mistaken her for Corruption were it not for her forlorn expression. I knew her. I knew that look upon her face.\n\n\"Petranumen,\" I whispered.\n\nAngela looked to her left, where Astrid had just cut off Nona's head, then she looked to her right, where Bianca was in a desperate losing struggle with Jade, then she looked back at me.\n\n\"What the heck is\u2014\" I started.\n\n\"Get her!\" Angela screamed, and she jumped into me.\n\nCORRUPTION\n\nI didn't understand what I'd seen through Diamond's eyes. There was no comprehension of what had happened, but there was a cold and singing horror in my gut. I slowly turned around. There, in the center of the realm, were two figures. One had a pair of antlers and was looking around in bewilderment. The other was a grey reflection of myself, and it didn't even blink. Xaya sat upright from her lounging position in the treetops and looked hungrily upon Diamond before cocking her head in confusion at Guilt. The four of us stayed in a tense moment of stasis before Diamond pointed at me and screamed, \"KILL HER!\"\n\nXaya jumped into motion and tackled Diamond. The two fought tooth and nail on the ground as Guilt watched them bemusedly. She sidestepped the pair when they rolled in her direction, seemingly afraid of touching them, and the footprint she left in my foliage was a smoldering grey pit. Upon noticing the dead spot she left on the ground, she gingerly crouched to avoid the wrestling duo and attempted to cover up the spot by brushing soil over it. Only when she touched the soil, it became as sodden and lifeless as the print she'd scarred, and she retracted her hands and hung her head in dejection. A lie. A fabrication. This thing knew nothing of guilt.\n\n\"Get. Out.\" I hissed across the space between us.\n\nShe looked up at me with her sorrowful dead eyes, and my flesh crawled. \"I cannot,\" she said in a voice that sounded just like mine.\n\n\"You will,\" I snarled, but could not disguise the quiver in my voice. \"You will leave now, and crawl back into the hole where you belong.\"\n\nGuilt stood up, seeming unsure of herself. She glanced back at Xaya and Diamond, looked over her shoulder at the iron box in the center, then looked back at me. \"I am promised to someone,\" she said. \"A wonderful girl full of life and spirit. She has a place for me in her mind, and I am overjoyed to be given the opportunity.\"\n\n\"You don't know what joy is!\" \n\nShe smiled somberly. \"I did once. I knew joy, and I gave it a name. Now I am hollow, and I have a chance to taste the sweetness of life, even if it is only through another. You must know that means everything to me. It is the only thing that means anything at all.\"\n\n\"Parasite.\"\n\n\"I know what I am,\" she said, and took a step forward. \"I know why my meld chose me. I am very sorry about this.\"\n\nANGELA\n\n \n\nThere were two things I noticed right away. One thing I noticed, was the excruciating pain in my shoulder; I never thought I'd love feeling such pain again. The other thing I noticed, was that I was falling. All the joys of life evaporated in a second as the gut-wrenching sensation took hold of me, and I flailed screaming toward the sand, desperately trying to summon whatever it was that gave Diamond her powers. I didn't have it. The ground accelerated up to meet me, and all I could do was scream. I smacked into the earth, the air shot from my lungs, and I was sent skidding down the slope of a dune. Tumbling and bouncing, I rolled down the gradient until I came to a sliding stop.\n\n\"Ow,\" I whimpered. For a second, I just lied on my back, and stared at the sky. In the distant east, the glow of volcanoes and the rumble of thunder sounded, but here, there was a muted silence in the desolate night. A shooting star zipped across the blanketing dark, and then stopped right above me. It stayed there for a moment as if deciding where to go, then it began to plummet.\n\n\"Oh-shit-oh-shit-oh-shit-oh-shit!\" I sputtered, and willed myself into motion. My ribs were cracked, my leg was broken, and my collar was snapped cleanly, but my spine was still intact. As the shooting star grew brighter and brighter, I attempted to roll to my left, but my damn collar wouldn't let me. The star got closer. I tried rolling to my right, and almost got enough momentum to carry me to my hip, and that's when I realized that my hip was broken too. I bellowed in agony, and the shooting star got closer. With no other options, I simply held out my arms, and screamed, \"Astrid, it's\u2014\"\n\nThud. Squelch. Splatter. Hot liquid splashed my face, and I coughed up iron. Astrid knelt atop me, her snarling face speckled with red, her sword buried in my gut.\n\n \n\n\"You're a real asshole, you know that?\" I croaked.\n\nAstrid's mouth opened, then her eyes bulged when she noticed the color of my own. \"ANGELA?!\"\n\n\"You didn't know?\" I snarled bloodily. \"I thought sticking your sword in my gut was just your way of saying 'hi' to me these days!\"\n\n\"Oh my gods!\" Astrid exclaimed. \"We need to get you to your\u2014\"\n\n\"DON'T PULL THE FUCKING SWORD OUT!\" I screamed, holding my ruptured belly in place.\n\nAstrid let go of the weapon and carefully slid her hands beneath me. Making sure that she kept my abdomen braced, she lifted me off the ground. \"I will take you to Brandon,\" she said. \"Binding heals all wounds. We just need to find....\" Astrid trailed off and narrowed her eyes at the sky. I couldn't see what she saw, but I could feel her muscles tensing beneath me. Suddenly, she dropped me to the ground, and I screamed. There was a blur of motion, a clash of metal, and a dark figure standing over me. Her cloak billowed in the night, and her raven hair created a halo upon its crown from Astrid's luminance. I only recognized Jade Tao by the horrific scars that snaked up her shins. That recognition\u2014the situation at large\u2014hardly seemed to matter at all in the wake of my agony, but I would not leave this body. I knew Diamond and Guilt were giving that bitch hell, and if Jade could still stand and fight after the torture of her flesh, then I\u2014a woman who had now suffered three mortal wounds in her life\u2014could endure a little of my own for a while longer.\n\nASTRID\n\nJade stood before Angela, her long black katana held comfortably in front of her, her robe billowing. Bianca dropped to my left, breathing heavily, her armor scored with dozens of blows. Angela groaned in the sand and curled around the blade that impaled her.\n\n\"It's over, Jade,\" I said. \"Diamond's gone.\"\n\nShe nodded. \"It would seem so.\"\n\n\"You can put your sword down.\"\n\nShe offered a humorless smile, reached behind her, and pulled out the sword on her back. She tossed the Sword of Iona in front of me and assumed a defensive stance.\n\n\"Jade, please,\" I said, nearly pleadingly.\n\n\"I promised to give this back to the High Guard of Iona. Since I did not get the chance to give it to Nona before her honorable end, I fulfill my promise to you instead.\" She glanced down at the blade. \"You may pick it up; I will not attack.\" \n\nI cautiously reached down and wrapped my fingers around the handle. Memories flooded back into me as I lifted the familiar weight, the pride of my youth, the killer of my mother, and I swallowed the emotion that came into my throat. \"Jade....\"\n\n\"Do not try to bargain with me, old friend,\" she said softly. \"I am but the blade of my god, and I cannot be reasoned with. The same is true for you, Honorable High Guard Blackwing, and you, Astrid; you know very well what it means to be me.\" She reached behind her and pulled the lacing from her robe. The garment cascaded from her shoulders and revealed what was left of her beneath. Every inch of her once beautiful body was knotted with horrific scars, scripture written down with the crude and brutal penmanship of a woman who had lost her mind. Jade's breasts were melted off, her navel had been cauterized shut, and her genitals had been so horrifically mutilated that it made my eyes water to see.\n\n\"Oh my gods,\" I hissed.\n\n\"Do not pity me, Astrid. Not you,\" she said in her dead voice. \"You, who knows what it means to be marked by a hateful god. You, who served with stoicism and silence. You were who I remembered when my faith was tested. You were my example.\"\n\n\"Willowbud never\u2014\"\n\n\"I said do not pity me!\" Jade snarled, her face flashing with a terrible rage. \"I made this choice! I serve with honor! I serve until the very end!\" \n\nShe charged me without even a scream, the wrath silent upon her lips. Our blades clashed in a spray of sparks. The Sword of Iona had been reforged by Willowbud when we first met, but that was when she had unbound power, and I could feel the metal flexing. I disengaged with a screech of metal, and Jade spun away. Before Bianca could even set her footing, Jade had whirled around and struck her across the helm. Bianca stumbled drunkenly to the side, and I charged in before Jade could slip her blade between the Ofanian's chainmail. She caught my attack across her edge, used my superior strength against me, and slipped easily into my defenses. I spun before her blade could find my ribs, then swung around to her exposed back. She backflipped over the strike and scored my breastplate before landing over Angela. There was the smallest hint of a smile on Jade's face when she flipped her hair up. A genuine smile this time.\n\n\"In a duel, that counts as a winning strike,\" she tittered. \"Whatever the outcome, I finally bested you, Astrid Skyborne.\" \n\n\"You always fought to win,\" I said, and stepped into position. \"I always fought to kill. That was the difference between us.\"\n\n\"Not anymore,\" she grinned wolfishly.\n\n\"No,\" I grinned back. \"Bianca; left!\"\n\nBianca flanked suddenly, and I charged in. Jade dropped beneath my slash, blocked Bianca's downward strike against her chest, then corkscrewed with an unfurling of her wings. We were battered back, and she took advantage to bear down on Bianca, and deliver slice after slice. Bianca stumbled backward as the katana scored across her armor, leaving deep grooves that exposed her brown flesh. I rammed into Jade's side, and she slapped my sword away and carried with my momentum to come around my back. Hot pain lanced across my ribs, and the blood poured out. I growled behind gritted teeth, slashed with a backhand, and came sliding to a spinning stop. Jade pirouetted before me and leveled her sword, the blade dripping. Bianca slowly sidestepped into a flanking position, and I pressed forward to keep Jade from isolating her. Jade kept herself equidistant between us until we were all a sword's length away. Bianca lurched forward too early, and Jade made her pay. With a ducking-backhand combo, she chopped hard at the Ofanian's shin, cleaved through armor, flesh, and bone, and sent her sprawling backward. Bianca shrieked as the last of the connective tissue stretched and snapped from her bone, and her right leg stood planted in the sand without its owner. I rushed forward, blocked Jade's entrapping stab, then grabbed her blade with my grieves, and brought my sword down. Jade was put in an impossible position, and without hesitation, she made an impossible choice. Letting go of her sword, she caught it with the other hand just as my blade cleaved through her forearm, and amputated her below the elbow. She was already making her escape even as the metal exited the other side of her ulna. Without even breaking stride, she spun away from me, flashed her black katana, and smashed Bianca across the helm, silencing her screams.\n\nJade landed five feet away from me and stumbled when she realized the pain. That was all she showed of it, for the very next motion was a graceful transition to a mantis blade-stance. Bianca's unconscious breaths rattled beside me as I stepped past her, and readied my blade against the unhanded, but not unarmed, Breytan High Guard. She waited patiently for me, uncaring for the blood that pumped from her stump. Our feet padded in the sand as we maneuvered, circling like hunters, seeking the weakness. I knew she would not protect her wounded side. She used the entire left half of her body as a shield, and poised the blade behind it, daring me to attempt a killing strike. I wouldn't do it. I paced to her right the entire time, forcing her to twist her body to maintain her sacrificial stance. Making a sudden move to the left, I drove onto her right with a wide swing. She countered with a rapid stab to my abdomen, maneuvered her head a hair's breadth from my slice, then came around me like an acrobat to slash across my back. The armor was thin between my wings, and her edge bit right through it, seared through my flesh, then ripped away. I lurched forward, pivoted on my heel, then fell back as her katana sung over my chin. Catching myself on one hand, I launched into a leg-sweep, and Jade flapped hard to avoid it. She dropped onto me with her blade plunging, and I rolled to the right and slashed. Something bit hard into my shoulder, and a screech of alarm shot through my synapses. I rolled to my right, tripped over Bianca's unconscious body, and was sent tumbling on the ground. I faceplanted, sand filled my helmet, and I had to flip backward to avoid the impending coup de gras. I landed hard on my ass, the sand in my helm shot into my eyes, and I was rendered blind. Hacking wildly before me, I scrambled desperately backward with kicking heels, feeling her blade seeking me. I tied myself in knots trying to avoid it until I finally screamed, tore off my helmet, and threw it as hard as I could.\n\nThere was no one in front of me. My helmet bounced in the sand and came to a rolling stop beside a bent figure. I grabbed my sword and walked shakenly forward until the light of my flesh illuminated it.\n\nJade was bowed atop Bianca. It almost looked like the two of them were making love, but neither of them moved. The Sword of Ofan protruded from Jade's back, and the Blade of Breyta was embedded to the hilt in Bianca's chest.\n\n\"You Breytans always underestimate us,\" I heard Bianca croak with a pained laugh, \"but we always come back. It's never over when you fight an Ofanian.\"\n\n\"I never underestimated you,\" Jade whispered back. \"Why did you think I tried so hard to kill you? You were feared, High Guard Blackwing.\""
    ],
    "authorname": "White_Walls",
    "tags": [
        "teen",
        "nymph",
        "elf",
        "nonerotic",
        "battle",
        "succubus"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-creators-ch-20"
}