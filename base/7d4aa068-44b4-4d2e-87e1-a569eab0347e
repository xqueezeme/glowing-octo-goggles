{
    "title": "The Big Tits Club Ch. 51-52",
    "pages": [
        "THE BIG TITS CLUB by bluedragon\n\n****\n\n-- CHAPTER 51: Prom --\n\n****\n\n\"That is an awfully big limo for just the two of you,\" Zofi's mom commented after I greeted her and her husband.\n\nI briefly glanced out the window at the 10-passenger stretch Navigator parallel parked at the end of the driveway, and smiled with my prepared answer. \"Zofi is just our group's first pickup. Mari's boyfriend is going to go collect her next.\"\n\nTechnically, it was a true statement. Plus, it was early enough in the afternoon to make sense. A few minutes later, I stood up from the couch with a big grin on my face as my girlfriend made her entrance, clad in a slinky, shimmering dress that highlighted her slender form. With her slicked back hair, one could imagine she had only just emerged from a milky pool of silver starlight that clung to her like a second skin.\n\n\"You... are... breathtaking,\" I murmured sincerely as Zofi came and held my hands. I refrained from kissing her -- not because of her parents' presence but because all six girls had independently warned me not to mess up their makeup. Zofi's bright blue eyes glittered, obviously pleased with my reaction.\n\nAll four of us went outside to the limo. Zofi's parents wanted photos of us in front of the blinged-out Navigator. I put Zofi's corsage on her wrist and she fastened a boutonniere to my lapel while Zofi's dad snapped away. And then we put Zofi's little suitcase into the limo, the implications obvious to all.\n\nZofi would not be returning home tonight.\n\nThe limo driver brought us back to my house to drop off Zofi, and then I headed out solo to repeat the process with Mari and her parents. Then I repeated with Naimh and her parents, by which time the limo driver started giving me really weird looks. But he was grinning by the time we pulled up to Alice's house.\n\nIn the end, I had six girls in prom dresses at my house, all of them now my \"official\" girlfriends. Seriously. Alice, Belle, Mari, Naimh, Sam, and Zofi were each now officially one of my girlfriends, decided on and confirmed a week ago Friday. I'd always belonged to the BTC - now we were just making it formal - and Sam got to be Head Girlfriend, naturally.\n\nBelle's dad had gotten called in for an emergency at the hospital (as the surgeon, relax), but Mother had remained home and took photos of me and his daughter. She also took photos of me and Sam. And of course she spent an inordinate amount of time taking photos of me with all six of my girlfriends together at their increasingly insistent (and giggling) request. After that, we all loaded up for the fifteen-minute drive to the downtown hotel where our school had rented out the Grand Ballroom to host our prom.\n\nFive seconds after the stretch Navigator pulled away from my house, Alice closed the privacy screen between us and the driver. Naimh was out of her seatbelt in a flash and kneeling before me, fiddling with my belt and the fasteners to my tuxedo pants.\n\nMy eyes got big, but I didn't stop her or ask stupid questions. Less than thirty seconds later, my pants were around my ankles while the most gorgeous thing I'd ever seen bobbed her head up and down my rapidly lengthening cock.\n\nI gawked down at her for a minute before glancing around at the other five girls. Sam, Zofi, Belle, and Mari looked just as surprised as me, but Alice smirked knowingly. Fixing my gaze on my best friend, I remarked, \"I thought I couldn't even kiss any of you for fear of messing up your makeup!\"\n\nAlice shrugged. \"So don't kiss her. She'll only have to touch up her lipstick from the blowjob.\"\n\n\"Mmm-hmm,\" Naimh agreed with a mouthful of Matty-meat. Moments later, she figured I was ready, and she rapidly hiked up the hem of her seafoam green prom dress while crawling into my lap.\n\nAs Head Girlfriend, Sam was the only one seated beside me on the back bench seat. She merely laughed and slid a bit further out of the way to give the horny redhead more room, and I soon found myself buried to the root inside the busty Irish girl's wet box. \"Well THAT'S a first,\" Sam remarked brightly.\n\n\"Hurry up, Matty,\" Naimh groaned as she went from zero to sixty in 2.4 seconds.\n\nI nodded, recognizing that we had ten minutes or so before reaching our destination. So I reached beneath the hem of Naimh's dress to grab her ass and help the hot-to-trot redhead bounce her body up and down my rock-hard erection.\n\nMeanwhile, the other girls chatted excitedly amongst themselves, not even bothering to watch. It wasn't like they'd never seen Naimh fuck me before, and this would be their one and only Senior Prom. My nymphomaniac freckled redhead and I were in our own little world, although the way our little world kept shifting from one side to another as the limo took wide turns en route to the hotel proved more distracting than I would've thought.\n\nStill, by yanking Naimh's body forward against my pelvic bone to really grind her clit against it, I managed to bring her off with plenty of time to spare. I desperately wanted to kiss her, or even peel down the front of her scoop-necked dress and slobber all over the lush big boobies that had been bouncing around against my chin. But cognizant of the need to keep her looking perfectly put together, I instead concentrated on the feel of her Goldilocks pussy wrapped around my invading cock. And about a minute after she crooned her climax into my ear, I hunched forward and began basting the redhead's womb with great gouts of spurting seed.\n\n\"Mmm, thanks, boyfriend,\" the satisfied redhead chirped perkily after I finished filling her up. She pulled off my prick, reached down to adjust the strap of her panties to keep my spending inside, and finally returned to her seat.\n\nI was a bit wiped out for the moment, and remained slumped in my seat with my wet dick out for the whole limo to see. Sam couldn't help but bend over, slurp my girlcum-soaked cock into her mouth, and clean me up before patiently tucking my spent schlong back into my tuxedo pants. A moment later, she fished a small compact out of her purse and used the mirror to help her touch up her lipstick. Naimh had already finished doing the same.\n\nI glanced out the window and realized we were about a minute away from arrival. Sam hadn't quite gotten the correct notch on my belt, so I paused to fix myself up as well, and by the time I did so it was time to disembark. I signed the paperwork for the driver and left him a nice tip. He actually jabbed the side of my shoulder and said, \"Good luck tonight, sport.\"\n\nI chuckled and led the girls inside. We didn't go straight to the ballroom. Pooling our money together, the seven of us had booked the Penthouse Suite for the night, and Mother and I had come by in the early afternoon to check in, collect our keys, and also leave the minivan behind so the girls and I could drive ourselves home in the morning. The girls parked their suitcases and spent five minutes exploring the suite. They then spent the next twenty minutes either in the bathroom or in front of the big mirror over the master bedroom dresser touching up their makeup and adjusting their outfits.\n\nAlice was the only one who didn't seem inclined to preen, and as she and I sat side-by-side in the suite's expansive living room, I sighed and commented, \"If I knew Neevie was going to spend this much time on her appearance, I would've just kissed her.\"\n\nAlice mused on that, turned, and took my head into her hands. She gave me a fierce kiss, one that built and built until for the second time today a girl started taking my pants off. Less than thirty seconds later, my pants were around my ankles while my hottie best friend bobbed her head up and down my rapidly lengthening cock. And about a minute after that, I found myself buried to the root inside the busty Korean girl's wet box.\n\nBut instead of climbing into my lap to go for a ride, Alice had knelt on the sofa cushions and braced herself against the backrest. I steadily pumped in and out of her from behind, my pants around my ankles and the back of her dress flipped up over her lower back. And when Sam emerged from the master bedroom and found us banging away, Alice looked up at the blonde and smirked, announcing, \"I got Matty's hotel sex cherry!\"\n\nMari came out of the bathroom and shot her hand in the air. \"Can I call 'next'?\"\n\n\"No!\" Sam barked immediately. She then rolled her eyes and muttered to me and Alice, \"Hurry up. We gotta get downstairs.\"\n\n****\n\nOn some level, I would've thought my arrival at the Grand Ballroom with six girls would've caused more of a stir. But everybody knew about the BTC by now, and nobody paid us much attention. I mean yeah, every now and again one guy or another at school would ask me if I had a magic foot-long cock. I'd just shrug and reply, \"Magic? Yes. And my sperm tastes like chocolate. But it's not quite twelve inches long.\"\n\nWe headed straight to the line for taking prom photos. I took individual couples photos with each of the six girls, and then one at the end with all seven of us. We then grabbed a circular table for eight, made one of the chairs disappear, and started taking trips to the buffet line. I wasn't particularly hungry and didn't load up my plate, but Sam on my left and Belle on my right started spooning me extra food off of their plates, both of them telling me I'd need the extra calories tonight.\n\nThe seven of us spent more time chatting than eating, everyone having a good time. Towards the end of the meal, though, Belle finished whispering something to Mari and then slipped beneath the table. And for the third time today I felt a girl start taking my pants off.\n\nI stiffened up in shock and whispered rather harshly, \"Belle!\"\n\nShe didn't slow down at all, let alone stop. Less than thirty seconds later, my pants remained where they were but my fly was wide open while my impish pixie \"little sister\" bobbed her head up and down my rapidly lengthening cock.\n\nEyes wide, I turned to my left and gawked at Sam, but she was just holding a hand over her mouth to cover her laughter. Mari leaned over to whisper to Alice, who nudged Naimh. Zofi had already figured it out, and suddenly all five of the remaining girls were smirking as they scrutinized the shocked expression on my face.\n\nA white tablecloth hung down halfway to the floor, but not all the way. I mean, the ballroom lighting was pretty dim, and the thudding music would probably prevent anyone from realizing what was going on so long as I didn't moan in orgasmic ecstasy or anything. I gripped the edge of the table and tried to remain calm while Belle sucked me with enough suction to pull a golf ball through a garden hose. Already two ejaculations down today, I was in no hurry to cum, but at the same time I wanted to fire away into Matty's Little Cumslut's hot little mouth to reduce the chances of getting caught. Unfortunately, the more I tried to think about making myself cum the harder it was to actually do so, and Belle remained beneath the table slurping and sucking as the seconds continued to tick on by.\n\n\"Hey guys!\" a new voice said brightly. \"How's it going?\"\n\nStraining to keep my face neutral, I looked up to my right feeling relieved to see Holly standing just behind Belle's empty chair. Her hair was lime green now, bright enough that I wondered if it would glow in the dark. She was dressed to impress in a spaghetti-strap multicolored shimmering gown of vertical pleats - blues and purples and pinks that went really well with her hair color - with a plunging V-neck that put her excellent rack on display and a super-high side slit that exposed plenty of leg.\n\nMari was the closest to her, and she beamed, \"Oh hey, Holly, how are you?\"\n\nHolly made a face. \"Been better.\"\n\nFrom behind me, Sam asked, \"Where's your date?\"\n\n\"Told him to get lost. He must be with his football buddies now,\" Holly sighed. \"I never should've agreed to be his prom date in the first place. All he wanted was a score.\"\n\nI tried to look sympathetic, but a moment later Belle nudged my cockhead into the tight confines of her throat. She couldn't get her lips all the way down, but she could still stuff a couple of inches into her throat before gagging, and she apparently chose to do so at that exact moment. The point is: my eyes bugged out and I had to stifle a groan.\n\nMy movement was jerky enough to attract Holly's attention, and she gave me a curious look. After quickly surveying the table, she tapped her fingernails in sequence across the chair back and asked suspiciously, \"Where's Belle? Went to the bathroom?\"\n\nMari giggled. \"Uh, not exactly.\"\n\nHolly scrutinized my face, and a moment later she seemed to figure it out, because she pulled Belle's chair out and promptly sat down. \"There, all better,\" she pronounced while smirking at me and then Sam just beside me. \"Wouldn't want anyone to get the idea that someone from this table had gotten lost underneath trying to find a dropped fork or anything.\"\n\nSam chuckled. \"Why thank you for being so thoughtful.\"\n\nI grunted beneath my breath as Belle began attacking my dick with increased vigor.\n\n\"You're very welcome,\" Holly replied musically. \"Happy to help out in any way I can. It's nice having friends you can count on when life takes... unexpected... turns.\"\n\nSam leaned forward. \"Take your own situation, for instance. It sounds as if your evening has taken its own unexpected turn. It's unfortunate when things don't quite go according to plan.\"\n\nI had to squeeze the table edge when Belle crammed a couple of inches into her throat again.\n\n\"Quite unfortunate,\" Holly agreed quite seriously. \"I almost don't know what to do with myself. I'm afraid what I'd hoped would be a magical night is about to end up nothing but a broken fairytale.\"\n\n\"Tsk, tsk. We can't have THAT now can we?\" Sam intoned sympathetically as she briefly glanced around the circle of girls. \"Lucky for you, good friends are always ready and willing to be there for each other.\"\n\n\"You're too kind,\" Holly replied serenely.\n\nMy chest started rising and falling rapidly in time with Belle's bobbing head while she twisted both of her hands around the base of my shaft, each hand twisting in opposite directions.\n\n\"Not at all,\" Sam insisted. \"In fact, I think you're exactly the kind of friend we need at a time like this to make tonight into precisely the kind of magical fairytale we've ALL been looking forward to.\"\n\n\"Really? I'm intrigued.\" Holly leaned forward and set her elbows on the table. \"Exactly what kind of fairytale did you have in mind?\"\n\nSam smirked. \"The kind with a happy ending for everyone.\"\n\nI groaned as Belle REALLY went to town on my dick, banging her entire head up and down so hard in search of precious Matty-cum that I was surprised she didn't accidentally bang it into the underside of the table. But just before I gave her what she wanted, a new voice cut in, deeply masculine and clearly upset.\n\n\"There you are Holly. What the fuck?!?\"\n\n****\n\nAll the happy orgasmic feelings left me as a chill went down my spine. Some kind of \"asshole alarm\" went off in the back of my mind, and I turned my head to look up at the new arrival who was standing just behind Alice. Holly rather deliberately avoided looking up at the guy in the \"look at me\" white tuxedo jacket over black slacks.\n\nI recognized him. His name was Antonio.\n\nAnd he'd gotten Sam's cherry a long time ago.\n\n\"Holly, it's fucking Prom,\" Antonio complained. \"Do you have any idea how embarrassing it is for a guy's date to walk away from him during Prom?\"\n\n\"I don't give a shit about your embarrassment,\" Holly muttered, staring straight across the table at Naimh just to give herself someone to focus on. \"I'm not coming back.\"\n\n\"Why not?\"\n\n\"I TOLD you. I have no interest in being your latest score. You clearly only asked me out looking to add another notch to your belt.\"\n\n\"A true gentleman never assumes.\"\n\n\"And you are NOT a true fucking gentleman,\" Holly shot back, turning her head to glare at him.\n\nAntonio's jaw clenched, and he took a better look around the table. He especially took a better look at all the lush cleavage put on display around the table. \"So what? You're joining the Big Tits Club? You gonna turn into a carpet-munching lezzie?\"\n\n\"Back the fuck off, Antonio,\" Sam challenged in an angry voice.\n\n\"Don't get your panties in a twist, Sam,\" Antonio shot back. \"You're just jealous because I dropped you when you were a lousy lay. You even begged me, 'Please Antonio. Give me a second chance!' And yet you still couldn't do any better.\" His mocking imitation girly voice really grated on my nerves.\n\nSam's face went as white as a ghost, and I visibly saw her shut down. The light in her eyes dimmed, the corners of her lips tugged southward, and I could see how much she was fighting not to cry. Antonio had been her first, and he knew exactly how to hurt her.\n\n\"You have no idea what you're talking about,\" I growled, sitting up straight and planting my hands on the edge of the table, prepared to get up and confront him. But I realized my fly was open and Belle actually still had my dick in hand, so I stopped before exposing myself. \"Sam is an incredible lover. Your only problem is that she's too much woman for you to know how to deal with.\"\n\nAntonio turned his baleful glare to me and he snorted. \"You?\" He glanced back at Sam for a moment and then returned to me. \"Are you such a wimp that you can be satisfied with my sloppy seconds?\"\n\nI gestured at Sam, who really did look AMAZING by any empirical measure in a shimmering satin gray dress that truly put \"the girls\" on display. \"If you had any clue how to treat a woman, you might've come here tonight with THIS gorgeous creature on your arm in ADDITION to your beautiful date tonight (Sam likes to share). Your loss is my gain.\"\n\n\"The fuck do YOU know about how to treat a woman, nerd? I'll bet you're a three-pump chump. Everybody knows The Big Tits Club is just a collection of lezzies and frigid virgin bitches too scared to put out. I'll bet you spend your nights home alone dreaming just one of them would finally let you see her tits.\"\n\nThe girls around the table, save Sam, started giggling at that.\n\nAlice turned her head and looked up at Antonio, stating emphatically, \"Matty's given orgasms to all seven girls at this table back-to-back before losing his load.\"\n\nAntonio frowned in confusion, seeing only six girls seated around me.\n\nNaimh piped up, \"My favorite is bending over and letting him ravage my tight arsehole over and over and over again. He's given me six orgasms in a single fuck before finally filling my sacred core with all his creamy cum.\"\n\n\"I AM a lesbian and proud of it,\" Zofi announced. \"I only love girls, but I can't help myself with Matty and I just love cumming multiple times on his big dick.\"\n\nBelle started sucking my dick again, and I chuckled and shook my head at the sheer preposterousness of the situation.\n\n\"Sam is Aphrodite,\" I added with the smug confidence of a man currently getting his cock sucked by a pretty teenage girl. \"Sam is the goddess of sex. I WILL actually admit that she can turn me into a three-pump chump. She's the only one I've ever gone off prematurely with, she's that amazing. Is that what happened to you? Was her tight pussy so hot that you blew your load early and told her she's a bad lay just because you couldn't get it up again fast enough to make it up to her? Is this a projection thing?\"\n\nAntonio frowned and balled his fists.\n\n\"Psychology 101.\" I smirked and tapped my own forehead. \"You called me a three-pump chump because you've got a history of problems with that. It's at the forefront of your mind all the time. Maybe that's why you can never seem to hang on to a girl for more than a couple dates?\"\n\nAntonio's face was visibly pink even in the dim ballroom lighting, and he started walking around the table to come at me. Belle still had my dick in her mouth, and I was about to hurriedly pull her head off and zip myself up. But before I could, the scrape of a chair being pushed back got my attention.",
        "Sam was on her feet behind me and she quickly intercepted Antonio just behind Holly's chair. But instead of confronting him, she wrapped her arms around his neck and tugged his head down so that he was staring into her lush cleavage. She bit his ear and then husked loudly enough for the rest of us to hear, \"This body could've been yours. I'm coming off a week where I bent over and got fucked Every. Single. Day. I'm such a fuckin' nymphomaniac. I get sperm gushing down my throat. I get sperm flooding my sweet pussy. I get sperm blasting deep in my tight arsehole. I. Can't. Get. Enough of it.\"\n\nSam then took Antonio's arm and wrapped it around her body. She placed his palm right on her ass and squished her massive melons into his side. \"I could've been your living sex doll. I could've been giving you incredible, transcendent orgasms for years. Tonight, you could've gotten us a hotel room and watched me peel out of this tight prom dress. I've got the sexiest lingerie on underneath here: lacy see-through panties, garter belt so you could fuck me with my stockings still on, this amazing corset that supports my big Double-D titties so well. I would've pushed you down on the bed and made love to your dick with my mouth, lips, and tongue. I would've climbed on and squeezed my amazing pussy around your cock, massaging it with my secret muscles. In the end, I would've bent myself over and reached back to spread my asscheeks, begging you to please sodomize the shit outta my tight arsehole.\"\n\nSam paused and reached up to caress his chest. \"And who knows? Maybe we could've invited one of my friends. I love cock, but there's something just so delicious about making love to another woman and sharing her with my man. Rubbing our breasts together and tasting each other's tongues while we take turns sucking on a fat cock until it spurts ribbons of jism all over our pretty faces. She'll start licking his cream off my forehead and cheeks. I'll start licking sperm off her nose. We might not be able to keep up and... Oops! There it goes dripping off my chin.\"\n\nSam took her hand off his chest and lightly caressed her cleavage with her fingernails. \"No matter. These two big, juicy cum catchers will collect all the drops.\" She mimed slowly scooping jizz off the exposed skin of her left breast with two fingers before popping them into her mouth, moaning as she sucked on her own digits. \"I'll get some of it. The rest will dribble down my creamy skin and collect atop my nipple so one of these hot babes can latch onto my succulent teats and su--\"\n\n\"Aaaahhh, nngh, shit-shit-shit!\" Antonio muttered, backing away from Sam. His hands immediately went to his crotch as he bent over, turning scarlet pink in embarrassment.\n\n\"Have a little accident there, big guy?\" Holly scoffed with a sneer.\n\nBent over as he was, Sam loomed above Antonio. \"You're pathetic, you know that? Consider that a parting gift -- can't say I ever got one from you - because Aphrodite is NEVER coming anywhere near you ever again. I'm joining my friends now. We're going to enjoy our Prom and then go upstairs together to the Penthouse Suite where Matty will pleasure all seven of us for hours on end. That includes YOUR prom date, who in a few hours will be licking Matty's creampie out of my cunt while she spreads her arsehole for my boyfriend's incredible dick that's just so much more... massive... than yours.\"\n\n\"Nngh, nngh, nngh!\" I grunted, spurting semen straight into my \"little sister's\" sucking mouth. Antonio hadn't been the only one getting turned on listening to Sam's erotic soliloquy, and with Belle repeatedly shoving my dick into the first couple inches of her throat, she FINALLY got me off.\n\nAfter I finished cumming, I felt Belle withdraw in a suspiciously slow and delicate manner. Moments later, she crawled out from underneath the table and parked herself right in front of Antonio. Gaping her mouth open, she showed him the pool of creamy cum she'd collected on her tongue. And then beckoning to Sam, she pulled the gorgeous platinum-blonde together in a wicked hot kiss so they could share my load.\n\nAntonio was gone before the girls were done.\n\n****\n\nHolly retrieved a chair and parked it between Naimh and Zofi, making us a table of eight once again. Once Belle took her seat, Alice tapped her own chin, muttering, \"Hey Belle, you've got a bit of...\"\n\nBelle blushed, hurriedly wiped at her chin with a napkin, and flashed me a saucy look.\n\nI was feeling wiped from my third ejaculation since getting into the limo this afternoon, plus coming down from the adrenaline rush of the encounter with Antonio. I knew the girls had plans for later tonight in the Penthouse Suite, but if they kept this up much longer, I'd be dead on my feet before we even got to the elevator.\n\nSpeaking of wearing me out, the girls soon moved us into the dance portion of the evening. We'd all taken square dancing and just a touch of ballroom as part of our P.E. curriculum, so I knew I wasn't a total klutz. The handful of high school parties we'd attended were more social hangouts with friends and acquaintances and didn't involve a whole lot of actual dancing.\n\nDuring the fast songs we danced in a group. During slow songs I got paired off with the girls one-by-one, including Holly. Some brave male acquaintances of the girls even came by to ask them to dance, classmates and casual friends and the like. Thankfully, I knew the girls had enough sense to choose their partners wisely, turning down drunken asshole types and only accepting dances with the boys they knew could keep their hands to themselves.\n\nGerald, of course, came by to dance with Mari a couple of times. She seemed happy, and from what I recalled, he would be attending USC in the fall, which wasn't too far away from Pasadena. I knew I wished her all the happiness in the world, and yet I could help but feel a twinge of melancholy at the reminder that the BTC's time together would be coming to an end all too soon.\n\nBut not yet.\n\n****\n\nWe left the formal dance pretty early in the evening. Having put in our social appearance and danced a few last dances with classmates we might soon never see again, the BTC didn't feel a particular need to stick around and find out who won Prom King or Queen. Having all steered clear of campus politics, we already knew it wouldn't be one of us (although Sam actually did get quite a few votes). Instead, the seven girls and I crowded into the elevator and ascended all the way to the top floor.\n\nDesigned to entertain up to twenty people in two separate spaces each surrounding a central coffee table, the suite had a large sectional, two additional sofas, a couple of high-backed armchairs, and two more ottomans big enough to seat two. Outside, the balcony had a pleasant view of the lit-up city skyline should any of us care to brave the cold. But really, all of our attention was focused inward on each other.\n\nFor a group that had been having sex with each other nearly every Friday for the past several months, you'd think the opportunity to have an orgy wouldn't be a really big deal to us. But hanging out together and almost lazily screwing as a method of unwinding from the week was one thing.\n\nThis was Prom Night.\n\nIn the Penthouse Suite.\n\nOh, and Holly was with us again, too.\n\nLet's just say the girls pulled out all the stops for this one.\n\nIt started with Sam coming to sit beside me on the big sectional. She set down two pills - one blue and one white - alongside a glass of water.\n\nI arched an eyebrow and asked, \"Is this one of those scenarios where I choose one pill or the other to decide whether to remain in blissful ignorance or take a chance and set myself free?\"\n\nSam smirked and shook her head. \"You're taking both pills.\"\n\nI took a deep breath and gave her a funny look. \"Don't you usually just spike my drink unawares?\"\n\nSam shrugged. \"I felt like giving you a choice tonight. I promise I'll still love you even if you don't take them.\"\n\nI rolled my eyes. \"We already know I'm taking them; I trust you that much. But the fact that you're telling me does worry me. Are there potential side effects that you can't subject me to in good conscience without proper forewarning?\"\n\nSam winced. \"You're probably gonna pay for it in the morning, but tonight's gonna blow your mind.\"\n\nI shrugged and reached for the glass of water. \"Then I have only one request.\"\n\n\"What's that?\"\n\n\"Promise me you'll use your better judgment and drive us all home tomorrow if I'm in no shape to do so myself.\"\n\nSam laughed and nodded. \"I promise.\"\n\nI swallowed the pills.\n\nAnd then the REAL party began.\n\n****\n\nI felt hot. VERY hot. And yet I wasn't overly sweaty. I mean, I was still sweaty, but just normal exertion sweaty, you know? But I still felt HOT. And thirsty. I kept drinking water. A LOT of water. At least, I drank a lot of water when the girls would let me drink water. They kept me VERY busy otherwise, y'know?\n\nThere are still gaps in my memory to this day. Sam was right, I really paid for it in the morning, and she wound up driving the minivan to get us all back to my house where the girls spent the better part of the day lounging out back by the re-filled pool while I slept for seven hours. Only then was I in any shape to drive each of my \"girlfriends\" home. Good thing each of them had already told their parents they wouldn't be returning until dinnertime on Sunday.\n\nBut I'm getting ahead of myself. I'm really just telling you this to make clear that everything turned out alright in the end, nobody came out with any permanent injuries, and if given a choice to do it all over again, even with the splitting headache that carried into Tuesday, I would TOTALLY do it all over again.\n\nYou only get to have your Senior Prom once, y'know?\n\nAnyway, back to being super-hot and thirsty. Those were new sensations unlike any of the previous times Sam had slipped me one of her dad's little pills. I also had a mild case of vertigo, and found that if I turned around a little too fast, my sense of balance would take an extra half-second to catch up to me and I'd get dizzy. So I had to be a little careful about that. But apart from those relatively minor side effects, Sam's pills apparently had their desired effect:\n\nFor the better part of four hours, I felt like a Greek God.\n\nAnd I fucked like one, too.\n\nMother and I had stocked the suite with wine bottles, hard liquor, and 2-liter sodas when first checking in. It wasn't like any of us were driving anywhere tonight. I was the only one who didn't do any drinking (I think. That's one of my memory gaps). After taking the pills, Sam crawled into my lap and started a sweet makeout session. But everything immediately after that is a complete blank.\n\nMy first memory after Sam's initial makeout session was that of Holly humping herself up and down my dick. She hadn't been fucking me in my sleep or anything; I know I was awake, but I don't have any memory of exactly how we got started. I didn't know then if Holly had been the first girl I'd fucked that evening or if everyone else took a turn before her. All I could say was that one moment, I'd been fully clothed and holding Sam in my lap while she shoved her tongue down my throat. I then closed my eyes, and when they opened the next moment, I found myself buck naked with lime green-haired Holly slowly pulling her tongue out of my throat and grinning at me while my hands on her ass helped the beautifully buxom babe bounce her sweet pussy up and down my absolutely solid-core steel-hard prick.\n\nCrackles of electricity surged through my limbs, fueling my muscles to make me feel like I had the strength of ten men. I dug my nails a little painfully into Holly's asscheeks, gripping her perky globes tight before I started bashing her light body against my lap over and over and over again while she threw her head back and wailed a euphoric aria of ecstasy.\n\nAt the sound of her climactic release, I stopped shaking her like a rag doll and instead pinned her down against my pelvic bone to vibrate her clit against my hardness. When Holly finally came down from her peak, she collapsed over my right shoulder and shuddered, whimpering softly.\n\n\"Holy shit, Matty,\" the worn-out girl whined. \"I forgot you could do that to me.\"\n\nI chuckled and rubbed her spine. \"Other guys couldn't satisfy you the same?\"\n\nHolly chuckled and picked her head up to kiss me quickly. \"It's only been a few weeks since Santa Cruz. There haven't been any other guys since then. I told you: I'm not a slut.\"\n\nI shook my head. \"Nuh-uh, you're MY personal slut.\"\n\n\"Mmm, absolutely.\" Holly's hazel eyes sizzled. \"Will Master please blow a big juicy load into Zofi next so Personal Slut can suck out all his tasty sperm from her messy cunt?\"\n\nI blinked and for the first time realized Holly and I weren't alone. Tunnel vision apparently was a bit of a side-effect as well. Zofi sat right beside us, smirking just before she captured Holly's head in her hands and leaned forward so the two gorgeous babes could swap spit. Only then did I realize that both girls were still wearing their prom dresses, so I figured it must've still been relatively early in the evening.\n\nAnd only THEN did I realize I'd been sitting up against the headboard of the king-size bed in the suite's master bedroom, with the door closed and only the three of us currently inside.\n\nI blinked and took in my surroundings. \"How did I get in here? And what happened to my clothes?\"\n\nZofi and Holly looked at each other. \"You don't remember?\" Zofi asked, a little concerned.\n\nI shook my head in the negative.\n\n\"Exactly how much don't you remember?\" Zofi asked, a little more concerned.\n\nI frowned. \"How can I know what I don't remember?\"\n\nHolly chimed in, \"Well, what's the last thing you DO remember?\"\n\n\"Making out with Sam on the couch immediately after she gave me the pills.\"\n\nThe girls exchanged a glance.\n\n\"You passed out on the couch mid-way through making out with Sam,\" Holly explained. \"She got a little worried, saying, 'Well THAT wasn't supposed to happen.' But just when the rest of us gathered around and started freaking out, you woke up, complained about being super-hot and thirsty, and started taking off your clothes right there in the living room.\"\n\nI blinked. \"I did?\"\n\nZofi nodded and grinned. \"You had a wicked erection already, and Neevie looked ready to jump you. But you just staggered into the kitchen, drank like a gallon of water, and then meandered straight back here into the bedroom and passed out.\"\n\nI blinked again. \"I did?\"\n\n\"Sam volunteered to stay with you,\" Zofi continued. \"We left the door open in case she needed help, and everyone went back to the living room to take a few minutes to chill out.\"\n\n\"I figured it was a good time to start drinking,\" Holly added. \"So I started bartending and the girls managed to relax.\"\n\nZofi giggled. \"That's when Sam started screaming.\"\n\nI shot upright. \"WHAT?\"\n\n\"Relax.\" Zofi held out a hand. \"You know she's a screamer. You woke up and started fucking her.\"\n\nI blinked. \"I do NOT remember doing that.\"\n\nZofi and Holly were both laughing, and since I was still buried inside Holly, her inner muscles were doing wonderful things to my dick.\n\nZofi explained. \"We all went to investigate. You were on top of her just pounding away like an animal. Didn't even bother to take her dress off. She came twice, and then you rammed all the way in and started cumming inside her. She cuddled you for like a minute, but then frowned and rolled you off of her. You'd passed out again.\"\n\nMy eyes got big. \"I did?\"\n\n\"Sam got up in a huff and stormed out complaining about how nobody in the history of histories ever fell asleep while fucking Aphrodite or something, PLUS you'd earlier fallen asleep on her, mid-kiss. Belle went after her whining about the creampie, and Holly and I came in to keep an eye on you.\"\n\nI blinked, grabbed Holly's hips, and gyrated her around my still-erect pole. \"How did we end up like this?\"\n\nHolly grinned. \"Well, even unconscious, your dick was still so big and hard and wet with Sam's juices still on you that I just had to get my mouth around that bad boy. A minute later, you woke up again, I climbed aboard, and voila, here we are.\"\n\nI made a face. \"Am I gonna pass out if I cum again?\"\n\nZofi shrugged. \"Only one way to find out.\" And then she kissed me.\n\n****\n\nI didn't pass out again. Well, I didn't pass out again right away. I think I made it through two hours and miraculously had like six or seven more ejaculations before passing out, and by then most of the girls had passed out as well.\n\nAfter Holly dismounted my dick, she and Zofi took their time peeling each other out of their dresses with lots of French kissing and pawing at each other's body for my benefit and theirs. Hell, I think Zofi just really liked making out with Holly whether I was watching or not. But eventually, Zofi laid back across the mattress while I stood on the floor at the foot of the bed and entered her that way. After entry, I raised both of her long, lithe legs over my right shoulder, pumping her steadily, and Holly went for a tongue-ride while facing back at me so the lime green-haired girl and I could make out and complete our triangle of high school lust.\n\nThe girls each came before we changed positions, this time with Zofi reclining back on her elbows while Holly bent face-down over the foot of the bed, furiously munching out the lissome brunette's wet box while I thumped Personal Slut's firm buttcheeks with my thighs every time I slammed my schlong into her superb snatch from behind.\n\nFinally, I wound up slumped back against the headboard with a few pillows propping my lower back. Zofi laid back against my chest and turned her head to the side so we could kiss with surprising tenderness while I stroked every inch of her naked body (paying extra-special attention to her perky D-cup tits). Her feet were planted atop my spread thighs as she humped herself up and down my throbbing dick with Holly's agile tongue alternately licking Zofi's clit, my imbedded shaft, and occasionally my dangling balls. Every now and again, Zofi would pull up high enough that Holly could grab my dick and fuck her face with it a few times before feeding me back into Zofi's heavenly box.\n\nIn the end, I gave Zofi the cream filling she desired. Or was it that Holly desired? Regardless, Personal Slut slurped out my seed, crawled up Zofi's and my stacked bodies, and made a Zofi sandwich while sharing her liquid gold with the panting brunette mouth-to-mouth.\n\nAnd I didn't pass out! Yay!\n\nAlso, my dick was nowhere NEAR going down. But rather than continue to monopolize the only penis in the Penthouse Suite, Zofi and Holly led me outside into the living room with its two sitting areas, and we discovered a wicked hot five-girl orgy in progress.\n\nTurned out, I DIDN'T have the only penis in the Penthouse Suite. I mean, of COURSE Sam brought Matty Junior, but over by the two sofas there was also a distinct buzzing sound emanating from Alice's loins while Mari's right elbow pistoned back and forth rather suspiciously.\n\nApparently lacking confidence in her date's bedroom capabilities, Holly had brought \"Bob\" along in her purse. I would discover later, long after I'd recovered higher brain function, that Holly's longest and most consistent relationship had been with her \"Battery-Operated Boyfriend\". She had removed her panties and just started demonstrating his capabilities earlier in the evening when Sam's orgasmic screaming had drawn away everyone's attention.\n\nSo anyway, Belle was wearing Matty Junior having a grand old time banging Naimh from behind on the sectional while the Irish redhead ate out Sam. And Mari of course was using Bob to explore every inch of Alice's cunt at the same time.\n\nAlice looked up at me through fluttering eyelids. \"I... think... I might... survive... UCLA... without you... after all...,\" she murmured, \"if I... can get... one of these...\"",
        "Holly piped up, \"Hey Mari, push it in her and lick her clit at the same time.\"\n\nThe lovely Latina grinned and bent over. The way Alice suddenly grabbed Mari's head and mashed it down on her crotch proved confirmation enough that the technique was a success.\n\nMeanwhile, Belle noticed our arrival and immediately started unbuckling herself from her artificial equipment. \"He's up!\"\n\nHolly laughed and batted my erection, which bounced right back like one of those stand-up punching bags on springs to make it always return to position. \"I don't think he's even capable of going down for a while.\"\n\nMy pint-sized fireball didn't bother to reply. She just launched herself into my arms, wrapped her legs around my waist, and started raining kisses down on my face. \"Please, Matty...\" Belle husked with desperate need. \"I need you in me. Now, Matty, now!\"\n\nGetting a good grip on her little butt, I centered Belle's pussy over my rock-hard erection. It was a simple matter to get her entrance lined up, and she exhaled a blissful sigh as I let gravity help me yank her down. She was copiously wet and stretched enough for me to assume something had gotten into her pussy before me tonight, and yet I was keenly aware of how incredibly tight she felt, as if there simply might not be enough room inside her body cavity to fit me.\n\nThis of course made no sense, as I'd fucked Belle hundreds of times by now. It was only when I shifted my grip to hold her ass better when I realized my hand had brushed against a hard projection where her anus should be.\n\n'Well of course she'd wear it tonight,' I thought to myself. I could already visualize the sight of the silver circle and flat blue crystal.\n\nBelle giggled when she realized I'd made my discovery. She clutched my neck and whispered into my ear. \"I wonder if I can talk Zofi into giving you her last cherry. Then you can have all seven of our asses tonight.\"\n\nI narrowed my eyes. \"Not tonight. I think it's gonna be crazy enough without needing anything like that.\"\n\n\"Maybe someday.\"\n\nI chuckled. \"Someday.\"\n\nIn the meantime, I let my impish pixie hang onto me like a koala bear while I walked around the room. Sam and Zofi were making out on the sectional. Holly was riding Alice's face while the Korean girl held Bob in her hands, pumping the vibrator in and out of her own cunt. Naimh and Mari were tribbing on the floor.\n\nEventually, I planted Belle's back against the wall and rammed myself into her over and again while she squealed and shuddered, her already tight pussy feeling absolutely incredible from the weight of gravity and the reduced space because of the butt plug. She finally screeched and thrashed about in the throes of orgasmic release, and afterwards I spun us around and planted her on her back across one of the big ottomans, slow-dicking her snug snatch as she came down from her climactic peak.\n\nFinally, I reached down to pick up Mari, who was lying flat on her back on the floor panting at the ceiling as she came down from her own most recent orgasm. I scooped her in my arms, carried her bridal style back into the master bedroom, and lay her across the mattress.\n\n\"Buenas noches, senorita,\" I greeted while boarding the luxurious Latina vessel. \"Having a good time?\"\n\n\"Mmm, better now that you're here,\" she sighed happily while feeling me slide inch after inch of thick cock into her buttery cunt. \"But truthfully, it's already been such an incredible night.\"\n\nI grinned and gave her a quick kiss. I'd now sunk my dick into all seven of the girls (even if I couldn't actually remember sex with Sam) and cum five times since climbing into the limo this afternoon. And yet I still felt as fresh as a daisy with plenty of electrical energy still pulsing through my veins. \"This night is FAR from over,\" I assured Mari.\n\nAnd then I FUCKED her.\n\n****\n\nWhat followed was not quite the greatest orgy of my entire life, but I'd be hard-pressed to think of one that was more... inventive.\n\nBy now all seven of the girls had been sexually satisfied. That's not to say they wanted to stop or anything, but with their initial orgasms out of the way, the goal had shifted from \"How can I get a great orgasm?\" into \"How many different ways can the eight of us have sex in this Penthouse Suite?\"\n\nIt turned out, there were a LOT of ways we could have sex in the Penthouse Suite.\n\nIt started with the girls forming a literal line to give me a blowjob. I got parked in one of the high-backed armchairs while the girls decided on alphabetical order. The rules were: No hands and no kneeling. That meant that Alice, Belle, Holly, Mari, Naimh, Sam, and Zofi lined up straight in front of me, all of them making sure their hair was tied up and out of the way. Alice clasped her hands behind her back, spread her feet out wide, and bent over at the waist to bob her head up and down my dick, humming and moaning for exactly one minute trying not to lose her balance. And then once the timer ran out, Belle stepped forward and did the same.\n\nHolly actually kept losing her balance. She wanted to try and get me to cum in her mouth (to no avail), so she fucked her face on me a little too vigorously and in the end, Mari had to hold her hands from behind to help Holly stop falling over.\n\nMari, of course, was able to slam her face up and down with aplomb, having no difficulty cramming my ridiculously hard dick into her throat with each plunge while maintaining perfect balance. Naimh and Sam followed suit, both of them deep-throating me but neither of them doing so quite as repetitively as Mari.\n\nAnd then Zofi stepped forward, silky dark locks tied back, dangling earrings chiming, and she gave me a smoky look as she kept her legs together and neatly bent at the waist, maintaining a perfect dancer's balance without needing to spread her feet apart.\n\nI groaned and resisted the urge to grab her head. I watched, hypnotized by the rhythmic way Zofi made love to my cock with her mouth. She never tried to cram me into her throat nor suck me with incredible power. She simply pleasured me, and after already getting blown by six girls before her (not to mention that I hadn't ejaculated since giving Zofi the cream filling that Holly slurped out), I relaxed my core muscles and allowed myself to let go.\n\nZofi sensed my impending eruption when I moaned in a particularly keening tone. Rather than remain upright in that bent over position, she swiftly dropped to her knees, fisted my shaft, and pumped my prick rapidly while parking her gorgeous face directly in front of my pulsing cockhead. She stared up at me with those brilliant blue eyes, and I visualized in my mind's eye covering her face with my creamy cum.\n\nAs the pleasure came to a crescendo, I closed my eyes and let my head fall back. A moment later, Zofi must've started shaking her head, because I heard the distinct chimes of her dangling earrings clinking together louder than ever. The sound set me off, and as I started to cum I opened my eyes to stare straight at her exquisite beauty. And I roared as my spitting schlong started spraying strings of sticky semen that covered her from forehead to chin.\n\nMatty's Little Cumslut went after her, of course. Holly too, actually, and the pair of them wound up making out with each other as they shared my tasty jizz.\n\nStill, my dick wouldn't go down.\n\nSam, Mari, Alice, and Naimh set themselves up on the big sectional couch, but they weren't exactly seated. Instead, the four of them lay on their backs with their knees pulled to their chests. Sam had \"Bob\" in her hands and was currently rubbing her own clit with it while calling for me to come fuck the shit out of her. And when I got off the armchair and went over to her, she handed Bob over to Mari and let the lusty Latina buzz herself with the vibrator while I started pumping my prick in and out of Aphrodite's pussy.\n\nZofi, Belle, and Holly were quick to line up as well. There were only six cushions on the sectional, so Holly wound up on an ottoman. Still, it made for an amazing sight to see seven naked teenage hotties on their backs like stranded turtles waiting for me to come ravage them.\n\nI fucked each of the girls in turn, although we didn't use a timer. When I switched over to Mari, she handed Bob over to Alice. When I switched over to Alice, Bob ended up with Naimh, and so forth. I was intent on making each of them cum on my cock before I moved on, and since each of them had been primed with the vibrator before my arrival, accomplishing my goal proved surprisingly easy.\n\nWhen I started on Naimh, Sam got up and fastened Matty Junior around her waist. She then started following me, banging her prosthetic dong into Mari while I was working on Naimh. Sam then started fucking Alice while I hammered away at Zofi.\n\nBelle's super-tight pussy almost made me cum, but not quite. The way she screeched and squealed beneath me like a stuck piglet worked my dick over to the point that I barely managed to hold out. But at last she collapsed and went limp beneath my heaving body. And I had to count to ten before withdrawing my overworked dick from her sodden snatch.\n\nOver on the ottoman, Holly welcomed me with open arms and legs. She clutched all four limbs around my body and practically fucked ME instead of the other way around, using all of her energy to thrust herself up against my invading pole. Already at my limit, I desperately strained trying to make her cum before me. But in the end her rapid humping drew out my ejaculation, and I made one final plunge, penetrating my pulsing prick deep into the depths of her sweet snatch as I spilled slippery sperm into the lime-haired girl's quivering quim.\n\nTurned out, I was worried for nothing. I'd forgotten I actually did have a magic dick tonight and I didn't go soft at all. So after pausing for a minute to catch my breath, I dug my toes into the floor and started hammering away at Holly beneath me, using my own cum for extra lube. And within minutes I had her screaming her pretty little head off as she came as well.\n\nThat's when things started getting REALLY crazy.\n\nThe girls wanted to try a seven-girl stack. Sam volunteered to be on the bottom since it was her insane idea in the first place. She bent over the foot of the king-size bed and then Naimh lay flat on top of her, careful to position her pussy so that it would remain accessible. Mari went on top of Naimh, and then Holly, and then Alice. Zofi and her long legs were just barely able to reach the mattress while stacked on top of the other five, and Belle's short limbs didn't have a chance in hell from the very top. I actually had to pick her up and put her up there. Actually, I'd had to help Alice and Zofi too.\n\n\"Hurry up, Matty!\" Sam called while I was still getting Belle in position.\n\n\"We're not gonna be able to hold this,\" Alice remarked pessimistically.\n\n\"You bitches need to start dieting,\" Naimh groaned.\n\n\"Hurry UP, Matty!\" Sam repeated.\n\nNobody was going to have an orgasm in this position. We were doing it just for the sake of doing it. So I quickly plugged into Sam and gave her three or four thrusts. Then, I pulled out and pumped Naimh a handful of times. Mari got three thrusts, Holly got three thrusts, and when I planted my right leg atop the mattress in order to elevate high enough to reach Alice's pussy, I apparently shifted the surface of the mattress enough to introduce inherent instability in the ad hoc tower of seven girls. Holly felt herself tilting to the right, so she leaned left. Her weight started pulling Mari over to the left, who tried to shift back to the right. Sam started groaning about how she couldn't breathe, and SHE squirmed a little trying to relieve the pressure against her lungs (massive 36DD tits crushed beneath her chest didn't help), and after I pulled out of Alice, the whole stack of girls toppled over. Zofi and Belle at the top screamed as loudly as if they'd been on a skyscraper rollercoaster as they fell, and I'm surprised nobody got an accidental elbow in the face.\n\n\"Eh, worth a shot,\" Sam muttered once she caught her breath, flat on her back. Her ass was still at the edge of the bed, so I separated her garters-and-stocking-clad legs, slotted my dick, and swiftly pushed inside her pussy while she sighed in deep satisfaction. Naimh was right next to her, and the redhead leaned over to start suckling on Sam's big breast before nibbling her way up to kiss Sam's lips instead. Meanwhile, Mari on the other side started slurping on Sam's pink nipple while also waggling her bubble butt at me. I popped two fingers into Mari's pussy from behind and looked up to find the other four girls were similarly making out with each other, fingering each other, and licking whatever they could get their tongues on.\n\nBelle was curled up in that stranded turtle position, whimpering and moaning while holding Zofi's head to her crotch. Holly had Alice bent over the side of the bed, fingerbanging the Korean girl while giving her a rimjob. I pulled out of Sam and took a step to the side, pumping myself into Mari from behind. Naimh then crawled over and flipped upside down, sliding herself into a sixty-nine position to lick at Mari's pussy and play with my balls at the same time while Mari dropped her face into the Irish girl's red-trimmed muff.\n\nAt one point, all eight of us were crawling all over each other on top of the bed. I had been pumping Alice from behind when I got physically pulled out and rolled over onto my back. I'm pretty sure it was Naimh who sank her pussy down on me, but I couldn't be positive because Holly climbed onto my face and dropped her puffy pink pussy onto my lips. Belle was sucking at Holly's tits above me while Sam French-kissed the lime-haired girl. Somebody switched off fucking me, and when Sam finally dragged Holly off me so they could fall to the side, I looked down and saw that Mari had started riding me instead.\n\nI eventually got to my knees and fucked Zofi from behind while she was parked straight on top of Alice, the two of them making out. I swapped pussies down to Alice for a while as well, and then Naimh parked herself on all fours beside us, waggling her ass invitingly. I pulled out of Alice and started pumping Naimh's pussy while the nympho redhead sucked on Mari's big boobies. Mari, for her part, was flat on her back and holding Holly's head in her crotch. Belle came over to kiss me before drawing me out of Naimh and pushing me onto my back. And then my impish pixie mounted up, happily riding me while Sam scooted up behind her to play with Belle's perky titties and also swap spit.\n\nI finally came in... someone. I actually don't know who. I only know it wasn't Zofi, because she was riding my face at the time and blocking my view. Girls were laughing and giggling, and I thought I heard Belle arguing with someone about snowballing. By then my arms, legs, and abs were finally getting wiped out. Whatever chemical concoction had been in those pills Sam gave me, even the crackles of electric energy coursing through my veins had started to die out.\n\nBut as tired as I felt, my dick was still rock hard, and I wound up in the middle of the bed as the girls cleared out of the way to mount me one-by-one just for the sake of doing so. They went reverse alphabetical this time, starting with Zofi and ending with Alice, but none of us even had an orgasm. There was no need. By this point, we were doing shit just for the sake of doing it.\n\nAfter that, we all lay in one big pile of spent and sweaty bodies. Alice didn't dismount my dick; she merely bent over and rested atop my chest. Belle cuddled along one side of me, and then Holly on the other. Sam, Naimh, Mari, and Zofi found space as well, and I don't think anybody even moved for five minutes.\n\nStill, my dick wouldn't go down. Eventually the mound of mingled flesh broke up, and I wound up sitting upright at the edge of the bed with my heels propped on the wood bedframe. Sam was flat on her back beside me, tits up and a coy smile on her face.\n\n\"Having fun?\" she asked.\n\nI grinned. \"Of course. I'm tired, but I'm having fun.\"\n\n\"I'm trying to think of more stuff to do.\"\n\n\"We've covered quite a lot so far, haven't we?\"\n\nSam thought about that, but a moment later she scooted her head a little further off the bed so that her head hung upside-down over the edge, and she gaped her mouth open invitingly.\n\nI chuckled and shook my head. \"You're insatiable.\"\n\n\"It's a special night,\" she replied before gaping her mouth open again.\n\nSo I dismounted the bed and turned around. Sam reached up to take hold of my dick with one hand and my ass with the other, guiding my cockhead between her lips while I reached forward to play with her big boobies. She moaned while accepting my dick into her throat, and I slowly fucked her face for about a minute before Naimh flopped over right next to Sam, similarly upside-down with her mouth gaping open.\n\nBelle and Zofi were quick to lie down with their heads hanging over the edge, but there was only so much room on the bed. But once Sam and Naimh had their turns, they got out of the way and Zofi and Mari quickly took their places. In the end, Alice went last, although I didn't try to probe her throat. I just played with her tits and fucked her face a bit before looking up to find that Sam was the only other one in the room, patiently waiting for us.\n\nAfter Alice and I got up, Sam led me by the hand back into the living room. The very first thing I saw was Belle's butt plug, because at the precise angle I entered the room, that blue crystal in the plug's hilt sparkled in the light. Only after I noticed the butt plug did I realize Belle's wasn't the only ass staring back at me. Naimh, Mari, Belle, and Holly were all lined up in a row, face-down and ass-up along the cushions of the big sectional couch. Zofi still had her fingers in Holly's ass, lubing it up.\n\nAlice squealed and sprinted forward to leap into the air and land on all fours right next to Holly, wiggling her ass in the air saying, \"Hurry up and do me, Zofi.\"\n\n\"Holy crap,\" I muttered. I mean, I should've expected we'd eventually get to this point in the orgy, but it was still quite an amazing sight to see.\n\nSam squeezed my hand.\n\n\"It's a special night.\"\n\n****\n\n-- CHAPTER 52: One For All --\n\n****\n\nThe morning air was cold against my right cheek, the pillow reassuringly warm against my left. I snuggled deeper into the covers and their cocooning heat while pressing my chest against her back, covered only by a thin layer of cotton. As my senses came alive, the fingers of my right hand reflexively squeezed the large bare breast I was currently palming beneath her nightie. My left arm snaked beneath her pillow, with the hand dangling off the edge of the bed. Reflexively, I ground my morning wood into her panty-covered ass. And breathing deeply, I let my head roll forward to push my nose into her platinum-blonde hair, smelling her sweet fragrance.\n\nI knew exactly when Sam had come to join me in my bed. We'd fallen asleep in each other's arms last night, after all. Actually, we'd been falling asleep in each other's arms quite a lot, lately. You'd think that coming to an agreement NOT to be a romantic boyfriend/girlfriend couple would've led to Sam sleeping in her own bed more often, but instead the reassurance that I would let her set her own parameters for our relationship without pushing for anything more allowed her to give in to her own desire to cuddle with me at night.\n\nShe didn't sleep with me EVERY night. A week ago Saturday, Sam let Belle have me all to herself. Last Tuesday, she stayed up late cramming for an AP exam and I went to bed alone (although I still woke up in the morning spooned around her). And then on the Friday night before Prom, the BTC skipped our usual orgy and not even Belle spent the night so as to avoid overexerting me before the big event.",
        "But yeah, my Head Girlfriend and I spent most nights together, even when we didn't have sex. For example, I'd been so thoroughly wiped out after Prom Night that I didn't even want to think about getting an erection. Seriously, I didn't know my penis could even FEEL sore, and the skin was super-sensitive as if it had gotten a sunburn. For two days I didn't even want to hold my pecker to pee.\n\nI wasn't the only one, either. Alice complained at school on Monday that her hoo-ha felt chafed inside, and the others weren't much better off. Belle was walking funny. Sam was sore. Holly winced every now and again. And Zofi flat out told me not to expect sex with her for two weeks. Mari and Naimh, on the other hand, were fresh as daisies, much to the other girls' envy.\n\nMaybe we should've quit after that six-girl asshole lineup. I mean, we all needed to take showers after that, but we didn't really NEED for all seven girls to each get a turn having shower sex afterwards, did we?\n\nAnd Sam, Naimh, and Holly certainly didn't NEED to each get DP'd by me and Matty Junior afterward, did we?\n\nAnd after we had another round of showers, did Mari really NEED to go for one more ride just because? Really?\n\nAt least I'd been so completely exhausted that I slept like a dead man despite being crowded on the king-size bed with four girls. I wasn't the only one completely wiped out either, because none of the girls complained about being unable to sleep either, including Alice who supposedly was incapable of sharing a mattress.\n\nAnyway, that last round with Mari Saturday night (Sunday morning?) was the last time I'd had sex with any of the girls. It was now Wednesday morning, and as I reflexively ground my morning wood into Sam's panty-covered ass, I realized this was the first time in a long time I'd woken up with an erection.\n\nI wasn't the only one to notice. Sam stirred a little as she woke, raising her right hand to cover the top of my right hand through the fabric of her nightie, directing me to squeeze her breast a little harder. She sighed and rubbed her ass back at me, increasing the pressure of her buns as they enfolded around my prick. And a moment later, she turned her head slightly to whisper in a quietly sleepy voice, \"Hey, you're hard!\"\n\nI groaned and hot-dogged her buns a little more. \"Apparently.\"\n\nTwisting in my grasp, Sam spun around until she lay on her side face-to-face with me. She caressed my cheek and gave me a sweet kiss. At the same time, her left hand slid between us and ducked beneath the waistband of my boxer shorts, and then she wrapped her cool fingers around my pulsing shaft. At first, she merely held my prick, squeezing occasionally while she focused on our kiss. But eventually she started pumping, the increased sensations causing me to moan into her mouth. And as the pleasure built, she finally rolled me onto my back, separated her lips from mine, and then flashed me a coy smirk before sliding herself backwards beneath the covers.\n\nI moaned the moment Sam's mouth surrounded my cock. I had braced myself for that sunburnt/chafed sensation, but there was none. Apparently a little more than three days of rest had completely healed me, and I let my arms fall back to either side of my head, elbows bent, as I soaked in the sensations of my Head Girlfriend's talented lips and tongue teasing my recovered cock.\n\nShe didn't try to get me off. Sam hadn't gotten laid in more than three days either, and after a few minutes she crawled back up my body to start making out with me again while wriggling out of her panties. Once that obstruction was out of the way, she straddled my hips and reached around behind her own right thigh to maneuver my prick while remaining crushed chest-to-chest with me. She broke the liplock long enough to focus on entry. But once she got my knob pushed through her heavenly gates, my lover held my head in her hands and stabbed her tongue back into my mouth while slowly retracting herself along my chest, taking in inch after inch after inch.\n\n\"I love you, Matty,\" she said softly once we were fully joined, brown eyes warm and welcoming.\n\n\"I love you too,\" I replied just as warmly.\n\nAnd then we went back to making out.\n\n****\n\nAlice was waiting for me, Sam, and Belle at the parking lot and came over as soon as we stepped onto the curb. She gave me a hug and a quick kiss and then fist bumped both Sam and Belle. \"You're looking pretty chipper this morning,\" she drawled to Sam, who did have a particular glow about her.\n\nSam grinned and explained, \"Matty's dick is in working order again.\"\n\nAlice's eyes got big and then she grabbed my hand and exclaimed, \"I call dibs on the minivan at lunch!\" But when Belle laughed, Alice made a face. \"Aww, did you already call dibs?\"\n\nBelle waved her off. \"Nah, I can wait until tonight. You go ahead.\"\n\n\"Goody-goody.\"\n\nThe four of us headed onto campus and Belle and Alice eventually split off to head to their own classes. Sam and I walked hand-in-hand to our shared first period, just like a dozen other couples around us. I did notice there had been more people coupled-up around the school ever since Prom. Apparently some of the prom dates had continued into early relationships.\n\nWe walked into class still hand-in-hand, and rather than go to her own desk, Sam followed me to mine. I wound up seated on the desktop while the ridiculously beautiful platinum-blonde stood between my legs with her arms around my shoulders as we made out without a care for whoever might be around us, and we weren't the only ones. When the teacher arrived, he had to call out, \"Alright all you lovebirds, knock it off. Let's get started.\"\n\nWe had another makeout session in a familiar alcove on the way to second period as well.\n\nBut after second period, my Head Girlfriend willingly took a backseat the other girls of the BTC. Holly got to climb into my lap during recess and make out with me. Did I not mention Holly had basically rejoined the BTC ever since Prom? Obviously, this was only the third day since Prom, and for all we knew she'd get bored and take off again before the school year ended. But for now she was my seventh girlfriend, fully recovered from Prom night chafing, and eager to resume our strictly-physical relationship.\n\nAlice did drag me out to the minivan during lunch. Mid-fuck, I wondered if I should take it into the shop to get the shocks checked out. The whole van seemed to be rocking and rolling pretty well, and I wasn't the only one to notice. When Alice and I emerged, there were a couple of boys just across the parking lot aisle gawking at us. I worried for a moment that Alice might feel self-conscious, but she merely blew them a kiss and wrapped herself around my left elbow. And arm-in-arm, we walked back to campus.\n\nWednesdays had long been Zofi and Sam Wednesdays, but Holly and Naimh both showed up as well. Sam said she'd gotten satisfied that morning, so the other three dragged me upstairs to my bedroom. As it turned out, Zofi was serious about not letting me into her pussy again for two weeks, so the afternoon turned into more of a two-on-two instead of a three-on-me. Still, Zofi was quite happy to suck my schlong to help revive me after I'd busted my nut deep within Naimh's red-furred cunt. And of course both Holly and Naimh were more than happy to accept my dick into all three of their ready-and-waiting holes.\n\nIn the evening, just before bedtime, Belle came over in her pajamas, eager to cuddle. Sam was in her room reading, and Belle went to go check if she wanted to join us in bed.\n\nLeaning back in her desk chair, Sam shook her head and replied, \"You go ahead and keep him to yourself tonight. I'm good.\"\n\nBelle looked surprised. \"You sure?\"\n\nSam grinned and gestured to me, where I was leaning against the door jamb. \"One for all.\"\n\nBelle didn't get it. \"Huh?\"\n\n\"C'mon, girlie,\" Sam chided lightly. \"You should have the BTC motto down cold: All for one, and one for all. In this case, Matty is The One, and he belongs to ALL of us, not just me.\"\n\nBelle snorted and grinned back. Not one to ask twice, she grabbed my hand and dragged me back into my bedroom, saying, \"I wanna do more deep-throating practice.\"\n\nIt was good to be me.\n\n****\n\nAn interesting thing happened for the rest of the week. I would've used the phrase \"pay it forward\" if it weren't for the fact that the girls kept saying \"one for all\" to each other.\n\nThursdays had long been Belle and Mari Thursdays. But when Mari came over after school, Belle said, \"One for all,\" and sent her bestie out of the house with instructions to spend all afternoon one-on-one with me. My angel and I made love in my bed, had a private soak in the hot tub, and I ended up banging her from behind bent over the edge of the deck not long after that.\n\nFriday was more of the same. Naimh was all hot and bothered when we met up at the start of lunchtime, and I figured I was in for another parking lot quickie. So when Holly sidled up to us, bumped her hip into mine, and started waggling her eyebrows while not-so-subtly suggesting we go have a minivan nooner, I deflected Holly and gently told her than Naimh had already called dibs. But Naimh surprised me by saying, \"One for all,\" and then she gently pushed me into Holly's arms. I was surprised but not resistant, allowing Holly to drag me out through the campus gate.\n\nFriday afternoon got even weirder. The girls didn't toss around the phrase every single time, but all seven girls definitely went out of their way to defer their turns and insist that I fuck someone ELSE instead of them. At least Zofi's pussy wasn't sore anymore and she didn't actually make me wait two weeks to get back inside.\n\nAfter that, Sam and Belle got together and talked Alice (Alice!) into calling her mom and telling her she was spending the night with me. Alice hadn't even spent the night with me when it was her turn to be Girlfriend of the Week, saying she'd leave the cuddling to Belle. But Alice did spend the night, and while she still didn't really want to cuddle with me, she did wake up horny around 3am and found it very convenient to have me in bed next to her.\n\nIn the morning, Alice continued to pay it forward (I mean, \"one for all\") by calling up Mari and telling the lovely Latina to come take her Saturday morning video game slot. Mari then called up Holly and talked her into going out with me on a sweet date. And then Holly called up Zofi and talked Zofi into spending the night with me, which finally completed my set of having all six original BTC girls stay overnight in my bedroom.\n\nAt least Sam and Belle went for their Sunday morning run followed by brunch and then a hot Sunday afternoon threesome so I could feel some sense of normalcy. And it was in the afterglow of Round 1 of that threesome when I found myself reclining back in bed with two sweaty, beautiful, naked teenage girls pillowing their heads on my chest.\n\n\"Isn't this the best?\" Belle chirped enthusiastically, feeling very much well satisfied after Sam had baby birded my load of cum into her mouth. \"AP Exams are over. Our teachers don't give a crap about homework anymore. We're just skating on until the end of the year with nothing better to do than screw each other silly. And once school's out, we'll have all summer to play!\"\n\n\"Enjoy it while it lasts,\" Sam cautioned. \"Once we get to Berkeley it won't be all fun and games.\"\n\n\"Well we may have to start taking classes again, but let's still save room for fun, huh?\" Belle sat up a bit and giggled.\n\n\"Of course,\" Sam conceded while patting my belly. \"As long as we've got him, I'll make time for 'fun'. Still, it won't quite be the same without the others around.\"\n\n\"Yeah...\" Belle's mood dropped, as did her head as she lay it back down on my chest. \"Mari... Alice...\"\n\n\"Zofi... Neevie...\" Sam sighed. \"Even Holly...\"\n\nI squeezed both girls' shoulders reassuringly. \"Don't dwell. Worry about that stuff in August, like we talked about. That's three months away. We've got lots of time to enjoy each other still.\"\n\n\"But I WILL miss the BTC,\" Sam murmured. \"Best damn thing that ever happened to me.\"\n\n\"Me too,\" Belle agreed.\n\n\"Me, the most,\" I chuckled, sliding my hands further down the girls' naked bodies to pat their naked tushies.\n\nBelle turned her head to look up at me. \"I still think we should build a new BTC, like... BTC 2.0... full of nymphomaniac three-hole sluts with big boobies that'll pledge their allegiance to your Altar of Towering Manhood, remember? Can you imagine all the fresh pussy? Maybe even get a lease on a bigger house than we need expecting new harem additions.\"\n\n\"Don't count on it,\" Sam muttered.\n\nBelle and I both frowned and looked at her. \"Whatever happened to 'one for all'?\" Belle grumbled. \"Thought you said you wouldn't be jealous.\"\n\nSam's eyebrows popped. \"Oh, I didn't mean that in the sense of being jealous. I just meant it took a really unique set of circumstances to build BTC 1.0. Don't get me wrong, if we meet a busty three-hole slut with a thing for letting you slurp out Matty's creampies, by all means we can go for it. But finding hot sluts for you to bang together is one thing; finding like-minded souls who could ever measure up to Zofi, Mari, Neevie, Alice, or even Holly is something else entirely.\"\n\nBelle sighed. \"True enough.\"\n\n\"I do hope we can meet special girls that can become the kind of lifelong friends we'd want them to be,\" Sam continued. \"I'm serious about keeping my focus on school, and if you two are serious about not complicating your relationship with romance, then there'll be room for creating a BTC 2.0. I'm just of the opinion you shouldn't count your chickens before they hatch. And for now, I think it'll be hard enough finding a nice 3-bedroom place to rent close to campus, let alone anything bigger.\"\n\nBelle shrugged. \"You never know. We could also just get a studio apartment with a king-size bed. Clearly, the three of us fit.\"\n\nI pointed out, \"Sam will certainly need her own space and her own room.\"\n\n\"Fine, a two-bedroom,\" Belle conceded.\n\nI narrowed my eyes. \"And YOU will need your own room separate from me too, remember?\"\n\n\"But what if I want to spend every night in your arms?\" she whined.\n\n\"Whatever happened to 'one for all'?\" I replied with a smirk. \"What if I need to entertain one of those busty three-hole sluts?\"\n\n\"Then I'll slurp out your creampie and she can sleep on the other side of you!\" my petite firecracker insisted. \"But I am NOT separating from you any more than I have to.\"\n\n\"Belle,\" Sam warned. \"You're doing it again.\"\n\nThe little imp groaned and settled down.\n\n\"Well, what if YOU need to entertain?\" I asked with an arched eyebrow.\n\nBelle picked her head back up and lanced me with a stare. \"Let me spend every night in your bed and you'll never have to worry about me doing that for the rest of my life.\"\n\nI simply raised my eyebrows.\n\n\"Fine, fine...\" she grumped and set her head back down. She looked over at Sam. \"Are we SURE we don't want to just tell the world he's our boyfriend and lock him down otherwise?\"\n\nSam blinked. \"YOU were the one who wanted to build a BTC 2.0 to get all that fresh pussy.\"\n\n\"I know, I know. I'm just torn.\"\n\n\"Of course you are.\"\n\n\"Fresh pussy would be nice though, wouldn't it? Don't get me wrong: I LOVE the BTC. But we HAVE been playing with the same set of girls for a very long time now.\"\n\nSam's eyes narrowed. \"I'm more of a quality over quantity girl.\"\n\n\"Says the competitive one racking up as many new and unique 'firsts' she can find.\"\n\nSam blushed. \"That's different.\"\n\n\"Oh, like have you looked at any of the sororities yet? You've certainly got the looks for a sorority girl.\"\n\nSam made a face. \"I'm not really interested in social clubs.\"\n\n\"Sororities aren't 'social clubs'.\"\n\nSam looked skeptical. \"But aren't they?\"\n\n\"Whatever. I was reading about some of them, like the Delta Delta Deltas. They seem like the kinds of girls we'd get along with.\"\n\n\"You're welcome to check them out when we get up there. But their first loyalty would be to the sorority, not your BTC 2.0.\"\n\n\"Well, maybe you're right.\"\n\n\"Of course I'm right.\"\n\n\"But it would still be fun to bring over a few hot sorority sluts to our new apartment and watch Matty fuck the shit outta them.\"\n\nSam giggled. \"Well, maybe. You're such a voyeur.\"\n\n\"Don't pretend that you don't enjoy watching, too.\"\n\n\"Not pretending. I admit it.\"\n\n\"So it's settled then,\" Belle pronounced. \"Once we land in Berkeley we go hunting for big-titted tight-assed sluts.\"\n\nSam laughed. \"Fine.\"\n\nI squeezed both girls' asses and bent to kiss first Sam and then Belle on each of their foreheads. \"I'm not gonna object if the two of you really want to go find fresh pussy when we get to Berkeley. But for right now, I'm serious about belonging to the BTC 1.0, and especially the two of you. I've got the only big-titted tight-assed sluts I need right here.\"\n\nBelle snorted. Sam smirked and looked up at me, muttering, \"Good answer.\"\n\nI kissed Sam tenderly at first, but she increased the passion and crawled up a little higher onto me. Meanwhile, Belle started playing with my limp penis, and within seconds it wasn't so limp anymore.\n\nSam pulled away to look at me from just inches away. \"I love you, Matty.\"\n\n\"I love you too.\"\n\nShe smiled. \"Does Master want to blow a big load all over Tight-Arse Slut's big titties and then watch Matty's Little Cumslut lick it all up?\"\n\nWhat do you think I said?\n\n****\n\n\"One for all\" apparently continued into the following week. Alice and Mari showed up together after school for what should've been \"Neevie Monday\", and Alice finally got her threesome creampie with Mari to check that one off her list. Naimh showed up after school for what should've been \"Alice Tuesday\" and coaxed Sam into joining us. And then Holly and Belle showed up together for what should've been \"Zofi and Sam Wednesday\".\n\nI suppose if I'd been paying attention I could've done the math and known who to expect on Thursday afternoon, but with all of the \"usual\" daily assignments going out the window I had resigned myself to just rolling with whatever my seven girlfriends had organized. So when the doorbell rang, I checked the peephole with no idea who or what to expect.\n\nMoments later, I opened the door and smiled broadly as Zofi greeted quietly, \"Hello, darling.\"\n\n\"Welcome, m\u00f3j skarbie.\"\n\nEntering my home with all the grace of a runway model, the willowy brunette sashayed past me and headed inside without a backwards glance. I caught a whiff of her perfume as she passed, just a tease of her sweet scent that evaporated far too quickly and left me hungering for more.\n\nI found myself standing alone at the open door, still ruminating on her scent, and belatedly realized Zofi was already ascending the stairs. For the past three days, the three pairs of girls had all arrived with sex quite clearly on their minds not wanting to waste time studying or doing homework, but they had all at least paused to have a conversation with me in the foyer or otherwise worked their seductive charms as a matter of foreplay before dragging me upstairs to my bedroom, down the hall into the family room, or in the case of Holly and Belle, all the way out into the hot tub. But Zofi was almost out of sight, and I had to hurry to close the door and catch up to her.\n\nI entered my bedroom to find that Zofi had tossed her backpack aside without a second glance and stood in profile beside my bed, the light from the window silhouetting her slender form. She rather casually undressed herself, nothing particularly seductive about it. She remained completely silent as she stripped down to her bra and panties. And yet despite her artless manner of disrobing, I leaned against the doorjamb and admired the lissome brunette's beautiful nude form from afar.",
        "The first time Zofi glanced at me was only for a second. She immediately blushed, went back to looking down, and reached behind herself to unhook her bra. I'd been so distracted taking in her exquisite figure backlit by the soft focus of white light that I'd failed to notice the tension on her face. But now that I saw it, I walked into the room and quickly took her hips into my hands, turning my lovely girlfriend to face me.\n\n\"What's wrong?\" I asked. \"Do you not want to be here right now?\" My mind raced trying to contemplate the possibilities. Even though my other six girlfriends had visited me this week, the absolute last thing I wanted was for the seventh to be in my bedroom solely for the sake of completing the list.\n\nZofi's face quickly turned into a warm smile as she reached up to hold my cheek. \"Of course I want to be here, darling.\"\n\nI blinked, not understanding. She was still quite clearly nervous. So I asked cautiously, \"Then what is it?\"\n\nTaking a deep breath, her beauty unmarred despite the hints of a frown, the exquisite brunette looked down at the bed for just a moment before stating, \"May I have a massage, please?\"\n\nI nodded immediately. \"Of course.\"\n\nGiving me a small smile, Zofi let the cups of her bra fall away as the straps slid down her arms, baring her lovely breasts. She folded and then set the bra atop the neatly ordered clothes she'd already set atop my nightstand, and still clad in her panties she crawled forward onto my bed, gathered one of my pillows, and lay facedown with the pillow tucked into the hollow curve between her chin and her breasts.\n\nAnd then I saw it. Well, I didn't see it directly, but as my gaze trailed down Zofi's lovely semi-naked form, I couldn't miss the way the back of her panties were ever-so-slightly dented out. My throat went dry, and not daring to believe, I reached forward and took hold of the sides of her panties.\n\nZofi shivered at my touch and tensed up, recognizing that I'd figured it out. Still, she didn't say a thing or move in any way as I slowly peeled the back of her panties down the curvature of her ass, blinking in shock at the familiar sight of a silver disc with a flat blue crystal at its center occupying the area where the brunette beauty's anus should have been.\n\n\"You don't have to do this for me,\" I said quietly.\n\n\"I want to do this for you,\" she murmured just as quietly.\n\n\"I appreciate that, but you still don't have to.\"\n\n\"I'm the only one who hasn't yet.\"\n\n\"That's not a good reason to do so.\"\n\nZofi sighed and turned her head to the side. \"I want to. I'm scared and I'm nervous, but I want to, and we're running out of time.\"\n\n\"Three months until we leave for school is plenty of time, or even never if you're not ready.\"\n\n\"I AM ready.\" Zofi rolled all the way over, pulled her knees up to her chest, and finished taking off her panties. Tossing them over the side of the bed in stark contrast to the way she'd meticulously folded all of her other clothing, she leaned back on both elbows and fixed me with a determined look. \"Please don't think you or anyone else is pressuring me into doing this. Please don't think I'm doing this only because I'm the only one who hasn't yet, although admittedly that is a factor. I'm doing this because I want to try it. I'm doing this because I'm curious what makes the other girls want it so much. You've let me set my own pace with everything, from not pressuring me into giving you a blowjob even though everyone else was doing it, to waiting so long to give you my virginity, and never even asking when I might finally let you into my ass. Thank you for that.\"\n\nI nodded slowly.\n\n\"I'm ready,\" she repeated. \"Nervous, but ready. And I'm not totally unprepared. You can obviously see that I've borrowed Belle's butt plug, and Sam's been... experimenting... back there for the past few days when she wasn't with you.\"\n\nI popped my eyebrows at that.\n\n\"So you see...\" Zofi gave me a brave smile before finishing, \"we're there now, darling.\"\n\n****\n\nZofi had asked for a massage first, so a massage she received. We both knew it would calm her nerves, so after stripping myself down to my boxers I circled around the bed to my desk chair and repositioned her with her arms back along her sides and her head just barely over the edge of the mattress so she could properly breathe.\n\nI worked her neck and shoulders, feeling an odd sense of d\u00e9j\u00e0 vu. I'd given Zofi several other massages over the past few months. There had even been a couple of \"Zofi Wednesdays\" during which we never had sex: I'd simply given her a massage and she usually gave me a blowjob at the end to return the favor. But I would never forget the massage that had preceded the lovely teenage girl giving me her precious virginity, and as I massaged her again as a prelude to Zofi giving me her last virginity, I found my mind continually drifting back to that special night.\n\nAfter finishing her neck and shoulders, I circled around and climbed onto the bed. Rather than straddle her, I knelt beside Zofi's prone body and did my level best to turn her into a puddle of relaxed goo. I massaged her back, her scalp, her spine, both arms, and even her fingers. I made her so relaxed that she actually fell asleep.\n\nWhen I realized she'd dozed off, I silently slipped off the bed and went downstairs to get a drink of water and clear my head. My dick was HARD... like diamond hard. I was as hard as I'd been on Prom Night, but this time without any chemical enhancement. I tried not to think of Zofi in such crass terms as finally getting my seventh asshole and completing my personal BTC checklist, but the mere idea had taken hold of my brain and wouldn't let go.\n\nI spent several minutes convincing myself that despite everything Zofi had said tonight, it still wasn't going to happen. The last thing I wanted to develop was an expectation of getting into her ass, of feeling like I was entitled to it or something. I ordered myself to look into Zofi's eyes before it happened and make DAMN sure she wasn't nervous anymore. There was no way I'd be able to un-fuck her virgin asshole, and we really DID have three more months to figure this out if that was really what she wanted. Better for her to regret a missed opportunity than to regret an unwanted act.\n\nWith these thoughts in mind, I returned upstairs to find Zofi still sleeping. I knelt down on the floor beside my bed, folded my arms atop the mattress, and lay my cheek against my left upper arm. I drank in Zofi's beauty, wanting to memorize this moment forever, reminded of the expression of peaceful contentment and serenity she'd showed that morning in her bedroom before she'd started mumbling about Jeff Garcia.\n\nShe didn't mumble in her sleep this time. Instead, after a few minutes her big blue eyes opened, and then closed, and then opened again. Her eyelids made slow butterfly flaps three times before they stayed open for good, and she smiled softly before murmuring, \"I fell asleep.\"\n\n\"Yes you did.\"\n\nZofi's eyes twinkled mirthfully. \"That may have been your best chance to push it in me.\"\n\nMy eyes grew big in alarm. \"You know I'd NEVER--\"\n\nZofi's musical laugh cut me off. \"It's one of Sam's favorite feelings when she gets forcefully woken up to find you pushing into her. She said you've never done it anally yet. I was just imagining the look on her face if I told her you did it to me first.\"\n\nI chuckled. \"We know Sam's competitive about her 'firsts'. I suppose I should make a mental note to do that to Sam soon before I get tempted to try it on one of the others.\"\n\nZofi nodded slowly, any trace of nervousness gone. Rolling over to her left side, she beckoned for me to come join her. \"Kiss me, Matty. I want you to make love to me.\"\n\nThat, I could certainly handle. Rising from the floor, I shucked my shorts and prepared to climb onto the bed. But before I could, Zofi reached for my hip and crawled forward on all fours. Ducking her head, she took a long lick at the underside of my cock with her tongue and used it to guide my knob into position so she could slowly push her head forward with her pouty lips wrapped tightly around my girth. I stopped my movement and let her sensuously make love to my prick with her mouth. Her style was just so uniquely different from the others, as if my cock were simply a large clitoris. She didn't bang her head back and forth, choosing instead to focus on sensual licks that were highlighted by gentle sucking. My mushroom head received the greatest attention as Zofi let it glide into her mouth, welcoming the knob with pulsing kisses, licking the sensitive underside, and rubbing it along the distinct texture of the inside of her cheek. She frequently let me go, letting me swing in the cool air with only her fingers gently massaging me before licking along the shaft and then re-engulfing me between her lips. She had smooth transitions and was by far the most patient of the BTC with her oral attention, in no hurry to get me off.\n\nOne time, though, she did hold my ass in her palms while driving her face ever deeper to the point that she pushed me partway into her throat. Zofi had never attempted a deep throat, nor did she seriously attempt one now. She backed off almost as soon as she'd started, that brief probe the extent of her \"hey, let's see what that's like\" moment, and she resumed making love to my prick again for about a minute before pulling away completely and then rolling back onto her cute bottom.\n\nReclining against my pillows with her knees up and her legs spread, the gorgeous brunette beckoned to me with both hands. \"Come to me, darling,\" she cooed.\n\nWith practiced ease, I climbed onto the bed and settled between her thighs. I planted my hands to either side of her head as I loomed over her, and she reached up to wrap her slender fingers around my wrists, gazing up at me with an expression of utter and complete adoration more than lust. I recognized the look on her face. It was the kind of look Sam gave me when she wanted to kiss and cuddle on the couch, but not as a prelude to sex. Likewise, Zofi's expression was that of a lover who wanted intimacy, not lustful passion. It was for MY sake that the self-proclaimed lesbian chose to let me into her body, not a desire for physical pleasure.\n\nBecause she loved me.\n\nAnd I loved her.\n\nNot romantically, of course, but the love was there.\n\nAnd of course, just because Zofi wasn't particularly \"into cock\" didn't mean she couldn't feel the pleasure from mine. She sighed and smiled as she felt my first penetration, my thickness stretching her channel with cockflesh against her inner walls, setting off little fireworks of sensation as I burrowed deeper and deeper into her warm, wet, welcoming tunnel. Her mouth gaped open wide as those fireworks hit her brain. And the fireworks continued exploding as I burrowed inch after inch after inch into her snug little pussy, tighter than ever because of the oblong shape still blocking her colon and compressing those inner walls around my invading shaft.\n\nWhen at last I was buried to the hilt, Zofi shivered in my arms. Her gaping, gasping mouth closed, and she smiled up at me invitingly. I seized that invitation and bent to kiss her, and we lay like that, intimately entwined for a long while without needing to thrust, simply enjoying each other with our mouths.\n\nBut we did not remain like that forever. After all, she had come here with a goal in mind, and while we weren't quite there yet, we would be soon.\n\nWrapping all four limbs around me, Zofi hugged me close as I made short thrusts in and out of her sweet snatch. I knew how much she liked tribbing, so I made sure to press my pelvic bone down on her clit, and as she approached her peak, I disengaged her legs, twisted her to my right, and slotted my left leg between hers to put us in a true scissoring position while I gyrated around like a blender.\n\nShe went off like a firecracker, my normally quiet lover suddenly screeching and wailing as the orgasm overtook her. I humped her all through her climactic shudders, amplifying her experience, until finally she went still beneath me and I set my forehead down on the pillow beside her.\n\nFor a few minutes we simply lay there in the afterglow, me with my still-throbbing dick deep inside her, and Zofi riding the soothing waves of orgasmic tranquility with her head lolling gently side-to-side. But eventually she cradled my head and pulled it to the side of hers. \"Thank you, darling,\" she murmured softly.\n\n\"You're welcome,\" I replied just as softly.\n\nShe turned, kissed my cheek, and said, \"It's time.\"\n\n****\n\nThe first time I'd ever had anal sex had been with Naimh that night in Tahoe. She had me bang her pussy doggy-style for a while, and then when she was ready, had me switch holes. It had gone in surprisingly easily.\n\nMy first time with Sam the following night had been in a similar position but had gone much more painfully. Zofi had been there with us and had even stated a need for a polaroid picture to remind her NEVER to let me do it to her. And yet here we were.\n\nStill, the traumatic memory of Sam's anguish reminded me to take things slowly and be prepared to stop and call the whole thing off if necessary. I was dead certain I wouldn't just effortlessly slide in the way it had been with Mari's body built for sex. I sincerely hoped I wouldn't have a repeat of Belle's multi-week ordeal with successively bigger butt plugs and multiple attempts to make any headway. Unfortunately, Zofi's tight little ass seemed like it would have a lot more in common with Belle's than with Mari's.\n\nNaimh, Sam, Alice, and even Holly had all first taken me into their bowels bent over doggy-style. Mari's had been an accident face-to-face with her legs thrown over my shoulders. Belle, likewise, I had first entered in a position where I could watch the changing expressions on her face in case I needed to stop, and my original intent was to do the same with Zofi. I should have known she already had a plan; Zofi had always done things at her own pace and with her own method.\n\nShe had us spoon together on our left sides, her left leg straight but her right knee in the air. She'd apparently borrowed \"Bob\" from Holly, because she fished the vibrator out of her folded clothes and buzzed her clit while panting softly. The whole thing was quite clinically mechanical in sharp contrast to the intimacy of our lovemaking, and for that reason alone I felt like calling the whole thing off.\n\nBut when Zofi looked back she saw the hesitation in my eyes, and she stopped buzzing herself to reach back, hold my head, and give me a sweet kiss. \"I love you, darling,\" she murmured sincerely.\n\n\"I love you, m\u00f3j skarbie.\"\n\n\"I want this. Take me. Take ALL of me.\" Reaching behind herself, she removed the butt plug from her own ass. It came out covered in copious amounts of lube; she was definitely prepared. And with a shy smile, she finished, \"My last virginity was always going to be yours.\"\n\nMy dick was diamond hard again at the mention of Zofi's last virginity, and grasping her hips I nudged myself into position. She kept her head turned so I could see her face but closed her eyes as the pressure of my knob began knocking at her backdoor. She raised her right leg higher to spread herself open, the buzzing sound started up again, and her lips quivered at the mixture of sensations. I pushed forward, slowly metering the amount of force I used to gradually dilate open her pre-stretched butthole. Suddenly, it was enough, and my mushroom head popped through.\n\nZofi gasped and her eyes flew open WIDE at the initial penetration. She clamped her eyes back shut almost immediately as her mouth gaped open wide instead, silently mouthing the word, 'OWW!' Instinctively, I wanted to stop and pull away, but she reached back with her right hand to grab my lower back and tugged me closer, making her intentions quite clear.\n\nI leaned forward, wrapped my right arm around her midsection, and pulled. Zofi grunted as I swiftly burrowed in every remaining inch of my dick into her virgin colon. Her left arm twitched and the buzzing sound increased in volume. The shape of the sound also changed as she moved the vibrator around, and ever so briefly I felt its energy juddering against the base of my shaft before she redirected Bob's business end back to her clit.\n\nI stopped at full depth, and there I remained for a long while. Zofi breathed very slowly, in and out, taking very deep inhalations and even deeper exhalations. She actually seemed to spend a lot of time blowing out with her lips pursed together a bit, the way I imagined childbirth might be. And I suddenly had a vision of holding her hand in the delivery room of a hospital, helping her do Lamaze breathing.\n\nOf course, I was in the wrong hole to lead to that kind of outcome, and the idea of associating the pain of childbirth with what we were doing wasn't exactly arousing. But still, it was a happy thought.\n\nTurning off Bob and setting the vibrator aside for the moment, Zofi twisted her chest down to the mattress and groaned quite gutturally. Neither of us moved otherwise as she adjusted herself to the unnatural invasion. She didn't look to be in pain, but she certainly looked... uncomfortable. Part of me wanted to quit and consider this attempt good enough, and also accept that there didn't necessarily need to ever be another attempt. If giving me her virgin asshole was what she really wanted, we had already succeeded. Then again, I was already pretty sure she wouldn't consider today a true success unless she made me cum.\n\nSo I remained where I was while spooning myself around her naked body. I rubbed her thigh and her right side in what I hoped was a soothing manner. I didn't go for her tits or rub her clit or anything like that. I simply wanted to reassure her that I was still here.\n\nEventually, though, she seemed to get used to the truly weird sensation. Having never had so large an object shoved up my own ass, I could only imagine what she was going through. Did she regret her decision? Was she simply trying to get it over with? Or did she actually feel some kind of pleasure in the way the other girls all seemed to feel? Otherwise they obviously wouldn't let me do it so often, right?\n\nI was in no danger of softening. Had Zofi been in obvious pain or otherwise reacting negatively, I would have pulled out right away. But she merely closed her eyes and focused inward, and her right hand remained holding my lower back as an indicator to keep our two bodies pressed together.\n\n\"How are you feeling?\" I asked with genuine concern.\n\n\"Like you've got your dick in my ass,\" she muttered rather coarsely, head bowed as she continued to process everything. \"You feel so fucking HUGE.\"\n\nBut after a few more deep breaths with closed eyelids in what looked very much like a yoga trance, she looked back at me again with an actual brightness in her sparkling blue eyes. \"I'm fine, darling. Thank you for your concern. How does it feel for you?\"\n\n\"Feels amazing, to be honest,\" I replied with a grin. And indeed it did. Her anal passage was incredibly tight, not quite skin-peeling or anything, but as tight as I could possibly imagine without becoming uncomfortable for me. Hell, in a way it felt tighter than being in Belle's ass, although the entry had obviously been far less difficult.\n\n\"Everything you ever dreamed?\"\n\n\"And more. Thank you.\" I kissed her shoulder tenderly while she reached back to caress my cheek.\n\n\"Yours will be the only cock to ever enter my body, in any of my holes,\" she stated quite seriously. \"For the rest of my life, I promise.\"\n\nI wanted to say such a promise was unnecessary, but I chose to accept it in the spirit in which it was given and replied with a smile, \"I'm honored.\"\n\n\"For you, darling Matty,\" she said with a serene smile, far more serene than I would've expected with my dick in her ass. \"It's all for you.\"",
        "\"Thank you.\"\n\nZofi sighed while turning her face forward again and resting her head on the pillow. I could feel her take a deep breath and could envision in my mind's eye the yoga expression on her face. And after taking another few moments to find her inner peace, she murmured. \"Fuck my ass, darling. Fuck my ass.\"\n\nGetting a good grip of her hips, I slowly withdrew, almost pulling all the way out but not quite. Then reversing course, I re-burrowed my shaft all the way in to the hilt. It almost felt like the first time.\n\nAnd then I did it again.\n\nAnd again.\n\nAnd again.\n\nZofi kept up steady breathing, long inhalations and even longer exhalations. For me, the feelings were amazing. Her asshole was a hot inferno of intense sensation. For her? I was less certain.\n\nI kissed her neck and fondled her tits. I reached around to rub her pussy but found her left hand was already diddling herself. A minute later, she retrieved Bob and put him back to work. But as much as I tried to focus on Zofi, true pleasure seemed to elude her. Her forehead remained furrowed and her jaw remained clenched, so after a minute I gave up on any thought about making her orgasm and instead focused on getting myself off to put her out of her misery, as it was. It would have to be good enough.\n\nThankfully, starting with a blowjob and then pounding Zofi's pussy had me halfway to eruption. The excruciatingly tight pleasure of being inside Zofi's inferno of an asshole truly was intense, and once I closed my eyes and concentrated on the tight ring of her sphincter clenched around my cock as it slid back and forth in rhythm with my thrusting, not to mention the way every inch of her colon clamped around my penetrating prick, finding my release was easy.\n\n\"Zofi, Zofi, Zofi,\" I groaned, still a little in disbelief that we were really doing this.\n\n\"Are you gonna cum, darling?\" she asked, straining under the onslaught.\n\n\"Yes I'm gonna cum. Your ass is so fucking TIGHT. It's making me... It's making me...\"\n\n\"Cum, darling, cum!\" she whined. \"Fill my ass with your seed. It's all for you. I love you! Cum, darling, CUM!\"\n\nI came.\n\n\"Nnnnnggaaaahhh!!!\" I groaned as I felt my balls come to a boil. Wrapping both arms around her bosom, I hugged myself against Zofi's back and rammed my hips forward to bury myself deep within my lesbian lover's exquisite asshole. Fountains of sperm sprayed out of me, millions of wriggling tadpoles that had no idea they were in the wrong hole. I twitched and flooded her rectum again. And then I spasmed one final time, spending myself completely.\n\nAnd for a little while, my universe was filled with light.\n\n****\n\nI have no idea how long I laid there, my forehead pressed against Zofi's back while my dick slowly went limp inside her ass. When the light faded away and my world began anew, that was the position I found myself in, my gorgeous crying girlfriend cuddled in my arms.\n\nWait, crying?\n\nI pulled myself out of Zofi's ass and quickly scooted further upward so I could get my head level with hers. She whimpered quietly and sniffled softly, but there was no doubt in my mind that she was crying.\n\n\"Hey, hey,\" I said soothingly but with some alarm. \"Are you alright? Did I hurt you?\"\n\n\"No, no, it's not that,\" she replied quickly, concern for my mental state flushing away her own concerns. \"I just... I'm going to MISS you.\"\n\nI sighed and gave her a sad look. \"I'm going to miss you too. For a second there, I was worried you were in pain or maybe you regretted letting me do that to you.\"\n\n\"No, of course not.\" Zofi managed a teary smile as she caressed my cheek again. \"One for all... and ALL of me for YOU.\"\n\nI smiled and turned my face enough to kiss her palm. \"Is that what this was all about? Everyone going out of their way to gift something to someone else?\"\n\n\"In a way.\" She paused to wipe her eyes free of tears before giving me a broader smile. \"I've wanted to give you this even before the 'one for all' thing. It was something I knew you'd wanted for a long time, and I felt bad, actually, that we went through Prom Night and I was the only one who didn't give it to you.\"\n\nI shook my head. \"I didn't mind. I had more than I could handle as it was. Tossing in your virgin ass might've been the straw that made my penis fall off completely. Besides, I wouldn't have liked for your first time to be under those circumstances with the pills and alcohol and everything.\"\n\n\"Me neither,\" she agreed. \"I'm happy this was just the two of us.\"\n\nI smiled and nodded, but then frowned. \"Was it painful?\"\n\nZofi shook her head in the negative.\n\n\"But it didn't seem too pleasurable, either.\" I raised both eyebrows.\n\nZofi pursed her lips. \"I think I understand why some of the others love it so much. The sensations are intense, that's for sure. Neevie says her orgasms from anal sex are so much stronger than vaginal.\"\n\n\"But that clearly didn't happen for you.\"\n\n\"I don't think I was ever quite able to get past the discomfort part of it. Again, it wasn't painful, but it just felt so... weird... and...\"\n\n\"Uncomfortable?\"\n\nZofi looked apologetic. \"Yeah.\"\n\n\"I'm sorry.\"\n\n\"Don't be. You couldn't have known it would be like that. The other girls don't seem to feel that kind of discomfort, except maybe Belle, so that's why they're much happier to do it with you. For Belle, she said she gets off on the idea of you possessing her despite the discomfort, like when she lets you in her ass you're taking ownership of her. Sam too, actually. That part I understand, too. I cherished being able to give you pleasure with my body like this. In that way, it's not so different from giving you a blowjob.\"\n\nI gave her a serious look. \"Please don't feel obligated to ever do it again. I'm eternally grateful for today, but if it's not comfortable or satisfying for you, I'll be happy with just the once.\"\n\nZofi gave me a shy smile. \"We still have a few months left. Perhaps it will be more than just the once.\"\n\n\"Perhaps. But I promise I will never expect it of you.\"\n\n\"Good. That means I can still surprise you.\" And she leaned forward to kiss me. \"I really do love you, darling.\"\n\n\"I love you too, m\u00f3j skarbie.\"\n\nZofi's blue eyes sizzled. \"C'mon. Let's go clean up. I think after giving you my virgin asshole, you owe me quite a few orgasms in return.\"\n\nI grinned. \"That sounds fair.\"\n\n****\n\nDespite the idea being for me to make things up to her by giving her a bunch of orgasms, Zofi was still in an \"all for you\" mood that afternoon and seemed intent on giving me a fantasy day that was all about my pleasure. She reminded me in the shower that we'd never had a day of me just bending her into various pretzel shapes and having my way with her, and once she made clear her intention was to make today one of those days, I promptly snapped my fingers.\n\nShe immediately bent over at the waist, folding herself in half while smiling back at me from between her calves. I entered her immediately, although the water running down her body started getting into her face, which kind of ruined that position. Instead, we made out face-to-face while super-flexible Zofi raised left leg up and over my shoulder. I'd never even dreamed of fucking her in that position, let alone while in the shower. But she made it seem so easy, and the fun continued once we got out and dried off.\n\nZofi could do the splits beyond a hundred and eighty degrees, and we pretty much tried every possible way to get my dick into her mouth or pussy in every possible position we could think of. She did a one-legged dancer's split with her right toes pointed up so high it felt like she could touch the ceiling while I fucked her sideways. We resumed the bent at the waist with straight legs thing. We did a wheelbarrow. And there was this crazy sixty-nine thing standing up with Zofi doing a straight-armed handstand.\n\nWhat really took the cake was when she laid face-down on the floor in front of my bed and curled her body backwards so that her feet were in the air about a foot or so above her head. She couldn't quite twist herself like an acrobat and put her feet back on the ground, but the position still made her pussy available to me at a really crazy angle. And while neither of us could orgasm in that particular position, I'll always remember trying.\n\nAlas, all things must come to an end, and I spent my final load deep within her womb in a classic missionary style, cuddling closely just the way she liked it while she murmured phrases like \"fertilize me\" and \"fantasize you're giving me a baby\" into my ear.\n\nWe finally got dressed and were kissing each other tenderly in the aftermath, our lips caressing each other in a way not so radically different from the way we'd first kissed years ago and kickstarted The Rule in the first place, when the doorbell rang.\n\nZofi pulled back at the sound and frowned.\n\n\"I take it this isn't one of your surprises,\" I teased lightly.\n\nZofi merely shook her head in the negative. She wasn't a hundred percent dressed, still needing to button up her blouse (because I'd been fondling her tits you see -- THAT part was a little different from when we were younger). So when the doorbell rang a second time, I headed out of the room and went downstairs alone.\n\nI checked the peephole quickly and frowned. Had Sam lost her key? Why else would she ring the doorbell? So I was feeling a little confused when I opened the door, and it took me a second to realize it wasn't Sam on my doorstep at all.\n\n\"Hullo theh!\" Sam's doppelganger greeted brightly with the exact same Aussie twang I was used to hearing. \"You must be Matty.\"\n\n\"Uh, yeah...\" I began, still confused as my eyes played tricks on me. Only then did I realize this must be Sam's older sister.\n\n\"I'm Rachael. Pleased to meet you.\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "prom",
        "orgy",
        "harem",
        "high school",
        "anal",
        "big tits",
        "big breasts",
        "mff",
        "mfffffff",
        "reverse gangbang"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-51-52"
}