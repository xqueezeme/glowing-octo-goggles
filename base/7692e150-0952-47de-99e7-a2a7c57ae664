{
    "title": "The Naked Weapon Pt. 10",
    "pages": [
        "Ali smashed her hands onto the table in the meeting room. The table, unused to being hit by a Doyen Princess who was capable of telekinetically enhancing her strength, shattered in half. It was a cheap plastic table, after all. Everything in the human ship was cheap. Ally had told her that this was because, well, the humans had been funding this project in secret, to keep mass human hysteria on their homeworld from sending out a wave of psychic energy that would attract her people. \n\nRight now, she was rather happy about how cheap the table was because she wanted to smash something. \n\n\"Abby. Is. Not. DEAD!\" \n\nSergeant Barry and Lt. Kerensky both looked unfazed. However, they didn't speak. The real bigwig at the table was Commander Delacroix. She was a woman, which did give her a step up in Ali's head, but she was also a fool, a moron, an idiot, a wretched degenerate who deserved to be horsewhipped throughout the entirety of the PsiCom Headquarters, and...just...what was the phrase that Ally had used? \n\nAh. \n\nYes. \n\n\"THE WORST!\" Ali shouted. \n\nCommander Delacroix brushed a tiny bit of plastic from her shoulder. \"Are you quite done, Princess Tzali?\" \n\nAli felt a tiny chink in the hardened crystal armor she had thrown around her heart. But hearing those two words, Princess and Tzali, merged together. It wasn't using the same tone of voice Abby had used. It was cold and clinical and tightly controlled. But it was still what he had called her. The first time she had met him, he had called her Princess. The bleedoff from his mind had filled that single word with a complex haze of complexity that had flavored it like the finest nostalgia. Tasting that thought had been like sniffing a rose for the first time, and it had been calling her that that...that had really started to open Ali to the stranger from the stars. \n\nAnd now he was... \n\nShe closed her eyes. \"No,\" she said. \"I'm going to take Beta Squad, and the League, and I'm going after my father and I will bring my Abby back.\" \n\n\"You will not,\" Delacroix said, her voice firm. \"Squaddie Hatem died a hero. But he wasn't the only one.\" She pulled out a dead thing - one of those tablets that humans loved so much. \"We lost eleven pilots and fifty two personal on our headquarters. They all died heroically, and they all died to give us this chance.\" She stood up, her lips pursed. \"A chance that requires you to stop thinking with your heart and to start thinking with your head, Princess.\" \n\nAli started to pace in the room. Delacroix watched her and Ali started to feel a faint squirming uncertainty in her belly. A fear. There was something about talking to someone who wore clothes that made her feel deeply ill at ease. Delacroix wasn't psychic. Neither was Lt. Kerensky. But he didn't matter as much. He wasn't in charge of PsiCom. And despite her lack of psionic talent, Delacroix showed zero fear at being in the same room as Ali in a rage. And Ali would have said that was due to Barry's presence. But she could see that Delacroix didn't even seem to regard him. \n\nShe only had eyes for Ali. \n\nI have to save Abby, she thought. He has to be alive. He has to be still alive. He cannot have died, he couldn't have been snuffed out just like that. She paused. But Delacroix is right... \n\nThey had a chance here. Several Doyen worlds were entirely undefended, due to the massive numbers of Paladins who had been slain in this battle. With PsiCom and the League, they could liberate each one, calling the serfs there and granting them freedom. Smashing the Angst gate network and installing orbital defenses using a combination of Omniack and human technologies, they would be able to essentially choke off a massive amount of Doyen psychic chattel. \n\nThe nobles would grow weaker. \n\nPsiCom could strike bolder attacks. \n\n\"But what of Doctor Oblivion?\" \n\n\"We have the League,\" Delacroix said, nodding. \"They said that they can handle him. Paragon seems to be exceptionally motivated.\" \n\nAli sighed, quietly. She brushed her fingers through her hair, frowning as she did so. \"Fine. I will lead the attacks on these worlds.\" She paused. \"Well, the diplomatic part of the attacks.\" She said, quickly, before Lt. Kerensky could complain. He had a squinty, narrow face. The kind of face that was full of complaints and ugliness. He scowled a bit at her, but Delacroix nodded. \"And then!\" Ali added. \"We go and hunt for Abby and free him.\" \n\nThe three of them exchanged glances. \n\n\"Kid,\" Barry said. \"Paragon said that Doctor Oblivion's weapon puts out the same energy as a coronal mass ejection, focused into a point only a meter wide.\" He shook his head. \"There's no way that Squaddie Hatem could have possibly survived.\" \n\nAli clenched her fists. She shook her head, then turned and started out of the room without even dignifying that with a response. She knew it was not proper military protocol, but they didn't want her to be a member of their military. They wanted her to be a Princess. Well. Then. She'd flounce like a princess. When she emerged, she came into the knot of Beta Squad, who had all been sitting on chairs that were lined up near the wall. Beli, Tasmin, Victory and Diamond all stood around her. Diamond was the one who looked hit hardest, followed closely by Beli, which was not a shock, considering how hard Diamond had been hit by Fang's death and by how many incredible orgasms Abby had given Beli. \n\nWhat if he never gives anyone orgasms again? Ali thought. The very idea felt like a toxic sludge in her brain, searing through her soul. She twisted away from the very idea and tossed her head. Her crystalline hair clattered and clinked as she said: \"Commander Delacroix has declared that we're going to retake several Doyen worlds, to give the PsiCom a platform to continue to dismantle the Doyen Empire.\" \n\nDiamond nodded, then slammed her black knuckles into her pale palm. \"Good.\" \n\nBeli sniffed. \"You said you were going to get them to look for Abby.\" \n\nTasmin sighed. \"Beli, Diamond and Vicky and I all agree. Abby is dead. We can't change that. All we can do is accept it and go on.\" \n\n\"Oh, no, they're going to look for him after we're done,\" Ali said, crossing her arms over her chest. She smirked ever so slightly. \"I convinced them of that. But I also accepted...that...\" Her face fell slightly as the confidence she tried to project to Beta Squad faltered. Her own heart knew the falsehood of her hopes. \"But I also accepted that this makes the most strategic sense. The Doyen are weak. Now, we must make their weakness permanent.\" \n\nThey nodded. \n\nVicky frowned. \"So, wake?\" \n\n\"I like the way the spider-chick thinks,\" Diamond said. She was quite clearly well beyond her initial dislike of Vicky, and the reason why was born out as the whole lot of them headed for the armory bay where their mecha armor were being seen to by PsiCom technicians. New armor plates were being welded on with showers of sparks, while the advanced weaponry that had been donated by the neanderthals were being pored over by curious science people. But the armory bay was large enough that the entirety of Beta Squad could sit on a catwalk and watch their mecha being repainted and repaired, while Vicky passed out drink bulbs. \n\n\"I will steadfastly not think about where you got this beer from,\" Diamond said, taking the faintly slick and glistening orb that Vicky had pulled from a small organ she had grown on her back. Ali herself didn't see why the humans were do disgusted by Vicky using her biokinesis to make booze. They drank milk. From the udders of cowbeasts. \n\nUgh! \n\nCowbeasts couldn't even consent to being so milked! \n\nAnd Ali was a great fan of this human invention known as 'consent.' \n\n\"To Abby and Fang!\" Beli said, belching a moment later. She held up the completely empty drinking bulb, then crushed it with a crinkling of carapace and crunch of biomatter. Powdered bits of chiten dusted down towards the floor of the gantry. Diamond lifted her bulb as well after downing it. Ali drank hers back and then leaned her head forward on the edge of the railing. She started to cry. It happened so suddenly, so shockingly, that she barely knew it was coming before it was on her. Hot, salty tears dripped along her nose as she shuddered and gasped. \n\n\"Aww...\" Beli squished up against her, sliding an arm around her shoulders. Ali sobbed into her shoulder, gasping out the words between racking, shuddering breaths. \n\n\"He's...g...g..gooooooone!\" She wailed. \n\nCRACK! \n\nEach of Beta Squad lifted their heads. \n\nFor just a moment...the air before them had warbled, twisted, then split. The distant clanging and banging of the armory bay almost made Ali think she had not heard properly using her ears. But then the crack came again, and again, a line of white light spread before them. It popped open and Diamond sprang to her feet, her smallish breasts bouncing as she grabbed at the air. She made a ripping gesture with both hands, snarling as she did so. \n\nAnd Ali's eyes widened at what she saw in the swirling hole before them. \n\n*** \n\nDeath, as it transpired, was rather peaceful. \n\nIt was kind of like floating around in your astral body. No psychic powers to bother you. Nothing but the brightness of the infinite white emptiness that seemed to be the afterlife. Okay, so, I wasn't exactly expecting seventy two virgins. And, honestly, I wasn't sure what I'd do with seventy two virgins. Also, I was pretty sure that whole 'seventy two virgins to martyrs' thing was one of the weaker Hadiths. \n\nPost-life fun fact: A hadith is basically a written account that says, \"Yo! Mohammad said that! Totes for reals, yo!\" Some of them actually have lots of corroborating evidence so smart people can stroke their chins and go: \"Ah, yes, I see, Mohammad did say that, very good.\" \n\nThe Seventy Two Virgins thing was basically on par with a fanfic writer going: \"And then Mohammad said that I get a pony and we rode that pony into the Delta Quadrent and Worf was there and he whipped out a lightsaber and started to kill Borg left and right and I banged 7 of 9 while Janeway watched.\" And, like, I wasn't even Muslim! Yeah, despite me sticking up for the accomplishments of the Muslim world during the golden age of Islam (which were worth sticking up for, even if India had invented the zero), and educating all of you from beyond the grave, I didn't even go to mosque or do the prayer to Mecca thing. My father had fled Iran because he was an atheist. And Mom was a Unitarian Universalist! \n\nBut, you know, grow up in America, you kinda get used to being called Muslim when you're brown. And have an Arabic name. And are Arabic. \n\nHey, at least I wasn't a Sikh. Then I'd get it for wearing a turban too, I'd be a triple threat and have to memorize even more talking points to throw back at bigoted idiots who didn't listen anyway. \n\nI frowned slightly. \n\nOkay, I was okay with death being a vast void, but I kind of expected my consciousness to cease. I didn't exactly want to spend forever doing nothing. Then I realized the alternative was utter oblivion and...wait, shit. No, no, no, that was way worse. Scratch what I said, any cosmic forces out there. Floating around doing nothing was just fine. \n\nThe whiteness started to fade. I blinked. Wait...a...second. \n\nThe whiteness wasn't fading in the way I'd have expected. Rather than the edges at the distant horizon becoming less white, it was starting in the center of my vision, like fog was being drawn backwards. Then, slowly, a ringing that I hadn't even noticed started to dial down and I felt really dumb as I realized I was sitting in a large crystalline corridor. I wasn't dead. I had just been flashbanged. But in my defense- \n\nTwo Doyen walked around the corner. Their spikey armor glittered and they had a pair of glittering psi-halberds in their hands. I sprang to my feet, trying to get a psi-sword into my hands. Nothing happened. And the Doyen walked through me. Then I hit myself again. \n\nI wasn't dead, but I sure as heck wasn't alive. \n\nI was in my astral form. \n\nAnd with a rush, I remembered the last few seconds before everything had gone white. I had been in my mecha suit, which I realized that I had never gotten around to naming. I had gotten between Paragon and the omni-death beam fired by her arch-nemisis Doctor Oblivion during a pitched space battle with humanity and our distant neanderthal cousins (who were all quantum slinging superheroes in spandex) and a hundred light year wide empire of space psychic crystal aliens. And moments before the omni-death beam, which had already splattered Fang, my former CO and one of my best friends, hit me... \n\nI had pulled the same trick twice. \n\nStuck in deadly danger? \n\nNo clear escape? \n\nThrow yourself into an astral body and hope for the best! \n\nWell. Let us all remember what Radical Edward taught us: When you see a stranger, follow them. I started to float after the Doyen. They didn't speak, but I had a sense that they were sending telepathic communications to one another. It was something in the way they walked, the way one would nod and bob his head, the way the other's lips turned down into a scowly frown. Doyen were good at hiding their emotions from psychic probing. Like, if you looked at my girlfriend Ali's brain with empathic powers, she basically looked and felt like a blank face. But her face face was usually pretty expressive. \n\nIt was the real hubristic downside of the Doyen. Planet cracking psychic powers and enough innate telekinesis that most of their buildings were literally made of out cohesive psychic energy, but they never once thought of how to do things sans psychic powers. It was why humans had guns. And boats. \n\nAnd boats with guns. \n\nGunboats. \n\nThe two Doyen peeled to the right and walked through a wall of blue-white psychic energy. I flung myself through the tiny ripple they left behind them. I emerged into a Doyen throneroom...and a sickening reality that I had, thus far, only heard of in the form of distant rumors and shudders and faint nightmares that echoed from Ali's sleeping body. The Doyen were psychic vampires. Their nobles gained their energy by sucking psychic power from their vassals. But this draining also stripped their minds. Slowly, their pleasure centers shut down, their empathy fizzled and failed. Not their empathic powers, their ability to actually understand empathy, to care about other people. And the needs of their telepathic vampirism grew more intense, so they needed more and more and more energy. \n\nThis was why there were two mindless serfs in the room with the nobles and paladins. \n\nIn a slightly more cliched universe, they'd be women. But they were...actually gender ambiguous. I wasn't sure if they were male or female or something in between. They were squids. They had long tentacles that were connected to a hexagonal body with a large beaky bit. They had a bunch of eyes. And they weren't even humanoid eyes. They were almost geodesic, with shining, compounded facets. Flies eyes. And you'd think all of this would make it hard for me to read the emotion in their bodies. But...it was all too easy to see the deep, abiding agony in those glittering, gemstone eyes. Each squid had been pinned to the air by immobile shards of psychic energy. Each shard of psychic energy branched outwards in fractal patterns, ending in thousands, millions of hair thin needle points and every single needle plunged into the muscle of the squids. \n\nYes, muscle. Because their skin had been peeled off. Micron thick blades of psychic energy, crafted by a pair of ghoulish looking Doyen (literally, their crystalline skin had gone faintly green-blue and their eyes were huge in sunken, starved looking faces), had peeled the squids like I'd peel an apple, leaving behind large flakes of blubbery blue skin and bits of bone on the ground. Each needle seemed to touch a nerve or vein, and not a single droplet of blood escaped. It beaded on those needles, then flowed up them, collecting on goblets of crystal that hung suspended from telekinetic webbing. Those goblets were filled with rich, glowing liquid of a pure blue. \n\nI clutched at my astral stomach, wanting to be sick. \n\nAli had been a teenager, a Doyen Princess. She had never gotten old enough to sustain herself from this horror. But she had been here, in these places, and had to stand by stone faced as her father supped on the pain of a million slaves. I wanted to find her and hug her for, like, five more reasons than I already did. \n\nSlowly, I tore my eyes from the torturing monsters who I would personally throw into a fucking woodchipper the instant I could and to the Doyen nobility who were waiting for their drinks. There was Ali's father. I wasn't sure how I recognized him. He didn't even look that much like her. Maybe it was the make of his armor. Maybe it was the fact he had the crest of her house emblazoned in the air above his head. Maybe it was the fact he was saying to Doctor Oblivion: \"When I get my hands on my former daughter, Tzali, I'll throw her to my pain technicians.\" He shook his head. \"Pain technicians. They formed a guild, you know. Used to be you could call them-\" \n\nOne of the squids let out a piteous screeching howl that made my blood run cold. \n\nDoctor Oblivion, the fucking prick, didn't even have the good grace to be horrified by his allies. Instead, he waved his hand. \"Still, I think the mission went quite well.\" \n\n\"Well!?\" \n\nThis new voice was a Doyen woman - a Paladin by her build, her armor, and the look of pure fury on her face. \"The humans killed more than forty two percent of our forces. Two whole banners were wiped out by their damned sunbombs. How could this possibly have gone well?\" She stepped forward. \"You said that you would be able to rend their dead thing flying base apart with your powers. And yet you did no-\" \n\nDoctor Oblivion snapped his fingers. Greenish flames swirled around the Doyen Paladin, starting at her feet and working their way upwards. Her eyes widened and she flung herself backwards in a single smooth motion. The fires still scorched off both of her feet, but it meant that she sprawled on her ass with two blackened stumps rather than her entire body. But as she fell, her arm slammed into one of the ghoulish pain technicians, sending him sprawling on the ground. The needles smashed home and one of the squids died a blessedly quick death. The goblet that had been filling with his psychic torment hit the ground and shattered. \n\nAli's father cried out. \"Oblivion! You spilled that skinless vintage. We've been waiting for hours.\" He shook his head. \"Also, my most loyal paladin is now missing her feet.\" He shook his head slightly, then snapped his fingers. \"Take her to the flesh sculptors. And, Rinzaldi...\" he paused as two servants picked up the now footless paladin. \"Don't ever attack anyone I have marked as a guest again or you'll be the next on the flensing table.\" \n\nRinzaldi, despite the fact she was missing two feet and had been totally in the right considering it was her men who had been butchered by, uh, us, nodded brusquely. Through gritted teeth, she managed to say: \"Understand, m'lord.\" \n\nThen it hit me. \n\nWhy the fuuuuuuck were they talking aloud? \n\nThey were Doyen, they- \n\nI looked over at the various other courtiers in the room. They were sending each other weighty looks. Doctor Oblivion thrust his finger at one, frowning. \"I can read microexpressions at fifteen kilometers. I can see when you people are psi-talking to one another. Speak. Aloud. Or I will feel like a slighted guest. And you don't want to feel...\" His glove lifted up and, like Thanos with the Infinity Gauntlet, he looked like he was ready to snap his finger and reduce half the room to fine particulates. \"Slighted.\" ",
        "The entire room gulped in unison. The courtier stammered. \"I-It's just, while I do think that Paladin-Master Rinzaldi was a bit, ah, hasty...\" she said, her voice slightly hoarse from disuse. \"It does still, um, I am wondering that is, since I'm no military genius, uh, what exactly did we gain from all this?\" \n\nDoctor Oblivion chuckled, softly. \"Why...we killed Abadai Hatem.\" He grinned, slightly. \"Now the only thing that stands in the way of our conquest of the universe...has been delt with.\" He picked up the goblet of psychic energy and smirked. \"To victory.\" \n\nAnd with that, he downed the goblet. \n\nAnd I flitted out of the room. \n\nI...had a plan. \n\n*** \n\nPaladin-Master Rinzaldi, or Rinny from here on out, sprawled in a cot made of shimmering blue psychic energy and glared at her feet. They looked like tiny stumpy little baby feet. The flesh sculptors had clearly just given her body a fresh spurt of grow energy and then left her to sit and contemplate her horrible mistake of 'being absolutely right in a room with a fucking psychopath' and then left her alone. Which meant it was now time for moi to begin Stage One of my Posthumous Plan. And I was growing increasingly sure that my original body had been atomized. \n\nSo, it seemed that you could survive in an astral form. Not sure how long, exactly. But you could still do it. I rubbed my palms together, then tried to look only at Paladin-Master Rinzaldi's rack. \n\nShe had...a...spectacular rack. Something I was learning about the Doyen while on this ship? They had ethnic variation within their group. Tzali was purple, for example. This girl was solid gold and ripped to hell and gone. Clearly, she didn't only rely on her psychic powers. Her abs were toned and tight and her arms were muscular and sleek. She let them rest over her head, which meant that her breasts - contained only by a thin bikini of smoky black crystal - were perfectly on display. They were about a cup bigger than Ali's, and just as perky. But then my eyes slid along a belly that could reflect sunlight intensely enough to set newspapers on fire to a pair of hips that simply did not quit to her slender battle-thong of smoky black crystal. \n\nThe end result of this voyeuristic pervation? \n\nI started to get...well... \n\nTurned on. My cock hardened and I licked my lips as I slowly closed my hand around the base of my cock. And the sudden flare of intense emotions had the exact response that I was hoping for. \n\nRinny sat up, her eyes narrowing. She swung her legs around and stopped herself before she set her tiny babyfeet on the ground. Instead, sent out a wide spectrum telepathic growl that I could hear clearly, despite being psychically deadened astral body. Who the fuck is here? If it's you again, Nightshadow, I will personally dropkick you into a fucking star. \n\nNah, I said, cheerfully, focusing as hard as I could. It's me, Abdai Hatem! \n\nRinny swung a psi-sword that crackled out of nowhere (as psi-swords were wont to do) at my exact midsection. Being an astral projection, the blade simply cleared my blue chest with only a faint feeling that reminded me a bit of heart burn. I coughed and rubbed my chest. \n\n...ow. \n\nHey. Bad heartburn really fucking hurt. \n\nWhere are you, you human fuck? Rinny snarled, slightly, focusing. A pair of blue telekinetic leg braces appeared on her feet and she stood, the psychic energy humming and crackling as it interferred with the telekinatically maintained floor. She glared around herself. I flitted to float before her, sighing slightly. \n\nFocus! I'm right here. Astral style. \n\nSlowly, Rinny narrowed her eyes. By the suns of Worvhan... she sent towards me directly - a tight beam that I was fairly sure non one else could hear. How...what are you right now? \n\nAstral form! I spun in a circle, then spread my hands. Neat trick, huh? So, uh, tiny question: Did my original body survive? \n\nIt was hit by a lance that I've seen cut through a small moon, Rinny said, snapping her hand slightly to dismiss her psi-blade. \n\n...so is that a no? I asked, biting my lip. \n\nRinny rolled her eyes and brushed her hand through her hair, which was as silver as her skin was golden. So, you're a Pakma? A spirit? Hows that working out for you, you murdering, cheating son of a fucking bitch? \n\nHey, you're the race who feed on psychic pain and enslave millions of sentient beings! I said, angrily. And using machine guns isn't cheating! \n\nA machine what? She paused. Oh, those dead-things that spit metal. \n\nYup! \n\nYeah, that's basically under the dictionary definition of cheating. Any dictionary, she said, shaking her head. Unchivalrous bastard. \n\nI scowled at her, my hands going to my hips. Lets cut past all this my species is better than yours BS and go to the twenty questions. Do you think Doctor Oblivion has the best interests of the Doyen at heart? \n\nRin clenched her jaw. But she couldn't disagree. She shook her head mutely, then slowly sat down on the cot, which bobbed under her weight. The blue boots she had formed fizzled away as she leaned back against the wall that the cot floated against. \n\nDo you think that the Doyen nobility are worth serving? Hey. I'm a ghost, I'm not going to tell anyone. \n\nRin frowned slowly. You want me to turn my coat like that Tzali bitch, don't you? \n\nI was shocked at the depth of rage that exploded in my gut. My hands shook and Rin actually looked taken aback. You can insult me, my species, my military. But you cannot, you cannot insult my fucking girlfriend. I snarled: I expect you to apologize to Ali when you meet her. \n\nRin blinked slowly. You...love her... it sounded in my head like she was utterly stunned that such a trio of words could be strung together in this context. She spoke in the same way that I'd use the phrase 'oh, it's raining donuts. Slowly, Rin leaned forward, her elbows resting on her thighs as she cupped her chin in her palms. You honestly, deeply love her? I can feel it from here. \n\nWell, yeah, I said, feeling absurdly anxious. I rubbed my shoulder slightly. She's a Doyen noble that I could love. And doesn't that say something about her? I paused. Hell, she doesn't even want to be a noble. She's seen Hamilton, she's down for the representative democracy! \n\nReprewhat? Rin asked. \n\nI grinned. Hey, not everything we humans made is a really gun or sunbomb. We've had some actually good ideas. Like internet porn, donuts, diet pepsi, and Weird Al. And, I mean, I guess progressiveism, democracy, universal rights for all sentient beings, that kinda stuff. But, dude, let me start with how great donuts are! \n\nThe next few minutes were me sketching out the best parts of the enlightenment and the 20<sup>th</sup> and 21<sup>st</sup> centuries. Stuff like voting, slavery being bad, women being treated as people, the attempt to abolish war (though we hadn't quite figured that out.) And I topped it off by describing, at least a little, the absurdist masterpiece of Smells Like Nirvana. Once I was done, Rin looked thoughtful. She rubbed her chin slowly as she did so. \n\n\"Very well...\" she said, aloud. \"But here's the real question. How do we stop him? Every noble we has met Doctor Oblivion falls in line behind him. They're too scared of him, and too excited by what he promises.\" \n\nI grinned. That's where part two of my awesome plan comes in. \n\n*** \n\nThe Doyen mothership finished hopping through the Empire after a half a dozen careful, short jumps. The Doyen could have jumped further in a single go, but they remained scared of the mysterious force that smacks them down whenever they warp too far, too fast, too greedily. That mysterious force? The neanderthals. Humanity's cousins had, as it transpired, didn't interbreed with us to the point where they effectively became a part of our genetic structure. It turns out a big chunk had gained superpowers and made a big mistake on their calculations. They had thought the ice age that had been going strong that time was part of a continual and irreversible trend of cooling. \n\nSo they had fucked off. Using their superpowers. \n\nDon't be too hard on our ancient super-intelligent cousins for mistaking a temporary ice age for the end of the world. The science of climatology hadn't really progressed beyond casting bones and reading the future from chicken entrails. \n\nBut now, the Doyen had returned to the world their attack force had set out from. \n\nAnd I was tailing behind Rinny as she strode through the corridors of said mothership with her brand new feet. Floating beside her was a nerve wracking experience, considering the number of Doyen milling about. But being nervous would only draw their attention more. So, I tried to make like a chunk of solidified helium and chill. That was only kind of working, though. \n\nThe Doyen were heading down to the planet via using several servants crafting telekinetic bubbles with their wills, then flying said bubbles to the planets surface. The Paladins got down by forming their war-bodies and then flinging themselves down. I soared along with the mass of Paladins, making sure to keep pace with Rinny, since I did not want to get Paladins confused in the huge mess of glowing, building sized bodies. \n\nThe planet itself was a rather pretty one. It looked nicely Terran, with a broad swath of greenery around the equator, lots of wispy white clouds, and huge expanses of ocean that bracketed around a single long, thin continent that was shaped a bit like a sideways ~ sign. I was so focused on admiring that tilda continent that I almost didn't notice Rinny breaking away from the pack. I wasn't sure what telepathic signal she had used, since she wasn't broad-beaming it everywhere. But no one seemed to find it odd. I banked to the right, and followed her as we dove through clouds and thick storms. When we emerged and shot past the front bank of a swirling mass if stormclouds, we were shooting above a vast jungle. Trees whipped by underneath my astral feet and I spread my arms wide, grinning broadly. \n\nWhee! \n\nIt is rather fun, isn't it? Rinny's voice was dry as she spoke in my head. You better be right about this working, though. \n\nTrust me! I flew backwards. Or, more accurately, trust Tycho. \n\nShe grunted. \n\nThen we dipped down and I decelerated as fast as I could. This turned out to be not fast enough, because I plowed into the ground. Or, I would have plowed. I was still in my astral form, remember? I popped out of the ground like a cork after flipping and shooting back upwards. As I shook my head and blinked my eyes to get the sensation of flying through fifty meters of earth out of my brain, I saw that Rinny had hit the ground and skidded five hundred or so meters, leaving behind two steaming furrows in the ground, cut there by the ankles of her warform. Said warform had vanished and she was walking confidently along the emerald green grass that surrounded a massive, crystaline ring. \n\nIt was one of those Eternal Angst gates. Like the very first mission. They were Doyen stargates, created by literally fusing one of their more potent psychics to a pair of crystal ring and using the feeling of longing for the rest of their freaking brains to create a psionic wormhole. This particular ring was guarded by a pair of very bored looking Paladins. They both snapped to attention as Rinny strode forward. \n\nI wasn't sure what she said. \n\nThe plan was to give them a cock and bull story about an inspection. And, if they were the kind of people who might listen to reason, to convert them. Rinny looked nervous - remember the Doyen's inability to have a poker face? Then she looked angry. She swept her hand to the side, then slammed her palm into her fist. The formerly bored Paladins also looked furious. One of them stepped forward, thrusting his finger at his chest, then at Rinny. The other Paladin looked more conflicted. Rinny snarled verbally, then stepped forward again. \n\nThey were telepathically shouting, but since they were also doing so in a focused way, I couldn't hear a fucking word of it. Fan-fucking-tastic. \n\nThe more angrier Paladin drew his psi-sword. \n\nA look of anguish flitted across Rinny's face. Then she jerked her head, Eleven style. The Doyen Paladin who hadn't been convinced to switch sides lurched as his head twisted almost a hundred and eighty degrees around. He toppled to the ground as Rinny sprang forward and slashed in a single movement. The head of the other Paladin hit the ground. She landed lightly on the grass, her psi-sword vanishing a moment later. The storm-front that we had chased to r each her rumbled in the distance. The rain that sleeted ahead of it started to patter down. I could feel the raindrops zipping through me. \n\nDon't. Even. Rinny said, lifting her hand. Don't say anything. Don't quip or joke or tell me a fucking thing. Just... She shook her head. Just shut the fuck up and lets do this. \n\nI inclined my head, then licked my lips. I floated forward, then put my palm on her shoulder. My astral fingers sunk slightly past her armor, pressing to her skin. I could almost feel her, but...that might have just been my imagination. Her hand reached out and she touched the Eternal Angst. Her eyes closed and I felt her touching my mind. I focused and filled my mind with one thing. I had only been the leader of Beta Squad for a few short days. But during that time, I had touched minds with each. \n\nIf desire could reach across space/time with an intensity that let a psychic create a warp that mechas and starships could fly through... \n\nThen this could reach them. \n\nThe connection sparked. \n\nFlared. \n\nDied. \n\n\"RRR!\" Rinny snarled, then slammed both of her palms against the Eternal Angst. Then the portal snapped open and there were all the girls of Beta Squad. They were holding those drinking bulbs that Vicky could make and I could see Ali looking right at me. My heart almost exploded with relief, and I could see her face - her tear streaked, snotty face - splitting into the worlds biggest, most insane grin. She leaped to her feet and screamed. \n\n\"PARAGON! THROUGH THE HOLE!\" \n\nAnd then she flung herself forward before anyone could stop her. She flew through my body and faceplanted on the grass at my astral feet. \n\n\"Ow.\" she muttered. \n\nThen several things happened very very very rapidly, all at the same time. \n\nA blurr of black and gold light flew past me and Rinny in a series of whip whip whip whip noises. With each whip-crack snap, a new psychic appeared. There was Barry! There was Beli! There was some blond Russian chick from Gamma Squad! There was Lieutenant Amelia, the sexy as sin British chick who had been the first person to greet me. Everyone was here. The portal snapped shut with one last swirl of motion and each mecha for each of the PsiCom psychics crashed to the ground in a vast, confused pile. Dust exploded through the air and I heard a loud, long, angry scream. \n\n\"Hollllllly...FUCK!\" \n\nAs the dust cleared, I flew forward and saw that Paragon - the gold-black blurr, of course - was sprawling on the ground, her cape smoldering, with both of her feet smoothly hacked off by the closing of the stargate. Rinny was sprawled on the ground next to her, looking like she had passed out from the sheer effort of keeping the contact between worlds open. Next to her, I could see Diamond - or Tycho, if we were in mission - on her knees, hanging her head forward, gasping heavily. \n\n\"Man...\" I said. \"What is with feet this mission?\" \n\nSo, hey. \n\nParagon hissed as Barry and Amelia ran up to her, the other psychics clustering around us. Vicky knelt down, putting her palm on Paragon's back. Psychic energy flowed into the super-tough superhero and Paragon hissed as her feet actually regrew. And since Vicky wasn't a fucking hack, they regrew incredibly quickly. She wiggled her toes once her feet had returned, breathing out a ragged sigh. \n\n\"That's the first time I've been hurt...every...\" She said, gritting her teeth. \n\n\"What the fuck did you do!?\" Barry snarled. \"Where the fuck are we?\" \n\nAli pushed herself to her feet. \"We're on Doyen Prime!\" \n\nBarry and Amelia and every other psychic turned to face her. \n\nAmi beamed. \"I told Paragon to get everyone here before the Warp collapsed. She was the only one fast enough, and she has one of the League communicators, so the PsiCom headquarters ship can follow us here.\" She clasped her hands behind her back. \"I decided to improvise. Why bother weakening the Doyen...when we can destroy the Empire. Right here. Right now.\" She slammed her palm into her fist. \n\n\"I cannot even begin to list the number of fucking regulations you just broke right now...\" Barry growled. \"You dropped us without supplies, without support, without backup, in the enemy's back door!\" He thrust his finger at Ali. \"You just got us all killed.\" \n\n\"Noooo!\" Ali said, grinning. \"We have munitions and supplies enough for one mission and a superhero...and her.\" She pointed her finger at Rinny. Vicky was doing her biokinetic thang and had gotten Rinny back on her feet. \"That's Paladin Master Rinzaldi's. She's the most respected, powerful Paladin that my father has, and she knows his every security psyfer.\" She rubbed her palms together. \"With us here, and her on our side, we have the best possible moment for a sneak attack. But we have to do it now, before the Doyen can regroup.\" \n\nBarry looked at Amelia. Quietly. \"You're the officer here, Lt. Pond.\" \n\n\"Lt. JG!\" she hissed. \"I only passed my officer exams last week.\" \n\nOh, rad! I had thought she had just been a Squaddie when we met. That meant she was one of the first psychics to hit officer rank. I'd high five her once part three of my plan came to fruition. I just needed to...I blinked, my brow furrowing. Vicky was, in the background, walking through the high grass. Her arms lashed out and she picked up small, fluffy looking creatures that looked like elk that were the size of kittens and had huge, plush eyes. She had already gathered up a huge handful of the adorable little things. \n\n\"But...when you're in a situation like this,\" Amelia said, shaking her head. \"They say to go for it. Even if it's the wrong tactical decision, standing around and waiting to get your ass shot off is always worse. And we're not getting back to PsiCom headquarters without an astronomy observation to determine where exactly Doyen Prime is.\" She nodded. \n\n\"All right, pukes!\" Barry shouted. \"Telekinetics, get to sorting out our armor and munitions. Paragon, can you patrol the sky and make sure nothing sneaks up on us?\" \n\n\"Got it,\" Paragon said. \"Should I send a signal to PsiCom?\" \n\nBarry glanced at Amelia. \n\nAmelia shook her head. \"Doctor Oblivion is here. He's likely got a way to trace your signals, right?\" \n\nGod, Amelia was cute while she was in charge. Almost as cute as the...whoa...almost fifty of those tiny kitten-elks that Vicky had gathered up. I noticed that I was not the only one who had noticed Vicky's gathering quest. Slowly, Barry, Amelia and Beta Squad turned to face her. Ali grinned as she rubbed her palms together. Barry sighed. \"Cadet Smith, what in the holy name of every God humanity has ever worshiped are you fucking doing?\" ",
        "Vicky turned to face them. \"Gathering biomass.\" \n\nBarry growled. \"Why.\" \n\nBut Vicky had already closed her eyes. \n\nAnd that was when the adorable, big eyed elks...melted. Their fur shivered and their forms crumpled inwards, flowing together into a slurry of pure white mush. Even Barry cried out in disgust. Beli squeaked, Diamond grabbed for a pistol she didn't have, and Amelia clapped her hands over her mouth in shock. Vicky's hair fanned outwards as she gritted her teeth. Steam hissed from between her arms and she gritted her teeth as she focused hard. Barry started forward - but Ali grabbed his thick wrist, jerking the black man to a stop. \n\n\"Don't!\" she hissed. \n\nThe mass of biological goop flowed...hardened... \n\nA brilliant white light flared. \n\nI pumped my fist. \n\nLeaped. \n\nAnd opened my eyes slowly as I stepped away from Vicky's cushy breasts. And here's the really fucked up thing. I didn't feel a single bit different. Every single part of my body felt exactly the same. Behind me, Vicky sagged, and I grinned slightly at the stunned onlookers. \n\n\"Reports of my death-\" \n\nAli tackled me. \n\nTO BE CONTINUED"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "psychic powers",
        "aliens",
        "mecha",
        "action",
        "adventure",
        "space battle",
        "shapeshifting"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-naked-weapon-pt-10"
}