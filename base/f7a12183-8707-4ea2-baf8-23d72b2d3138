{
    "title": "Surefoot 16: Day of the Dead",
    "pages": [
        "\"USS Surefoot-A, Captain's Log, Stardate 44373.77, Esek Hrelle Commanding: we have completed our inspection and refit of the wreck of the USS Limaari, in preparation for its autopiloted journey back to Starbase 154, ahead of schedule. Commendations for Cadet Jonas Ostrow, who has one again provided guidance on shortening the inspection and refitting time by almost ten percent; his continued assistance, above and beyond the call of duty, has spurred my First Officer and myself to consider something radical for him in the near future...\n\nAlong the way to our next assignment at the Cardassian Border near the Arkady Cluster, we encountered a disabled Federation vessel, the SS Demeter, owned and operated by a civilian, Riga Martis. We have found Ms Martis dead onboard, an apparent suicide victim, and have brought the Demeter in tow as we proceeded to the Cluster, while we update Starfleet Command.\n\nOn a lighter note, to celebrate the hard work with the Limaari, and to help foster esprit de corps among the cadets and crew, my Second Officer Lieutenant Neheru has organised a Halloween party. For those not in the know, it's an ancient Terran holiday that marked the seasonal lowering of the barriers between the worlds of the living and the dead. How this evolved into a celebration of costumes, food, drink and debauchery, I have no idea, but I'm looking forward to some quality indulgence.\n\nAdditional note: my First Officer Commander T'Varik has reminded me that I have been mixing up the recording buttons for the Official and the Personal Logs again, hence the inclusion of instances of my wife's pregnant status, as well as my, er, seminal accomplishments toward getting her in that state. Allow me to express my apologies to Starfleet Command for the error, and assure them that it won't be repeated.\n\nBut they did do a fine job of knocking up my wife. Aspire, people.\n\n*\n\nAlpha Squad Quarters:\n\nKitirik extended his arms, his lime green reptilian face flushing lavender with excitement as he displayed the cape with the multicoloured feathers. \"So, Good Friends, how do I look?\"\n\nNeraxis glanced up from adjusting her ragged costume. \"Let me guess: Dracula's Parrot?\"\n\nThe Qarari laughed. \"No, Good Friend Neraxis, though there are cultural similarities with that feared Terran haemovore! I am dressed as an Atatachiriok.\"\n\n\"That was my second choice. And what does an Atacheerio do?\"\n\nHe preened the feathers. \"On my world, an Atatachiriok is a legendary monster said to swoop down at night and pluck the eggs from the nests of the unfortunate, devouring their offspring while still in the shell. They are most fearsome. And yours?\"\n\nThe Bolian rose to her feet, her bald blue head now dotted with fake wounds and fake purple blood. \"One of the Undead Warriors of Lixx. If you disturb their resting place on the fields of Railo...\" She raised her arms and howled.\n\n\"Excellent, Good Friend Neraxis! With our efforts, and Good Friend Rrori's and Jonas' estimable contributions, we shall surely win the prize for Most Frightening Costumed Squad.\" He wrapped the feathered cloak around himself. \"Despite the lack of enthusiasm of some of our members.\"\n\nNearby, Sasha never looked away from her mirror as she applied more makeup. \"Keep it up, Kit, and you'll find your own member lacking.\" She smacked her lips, approving of the shade of lipstick Kami had recommended. \"Some of us have more important goals.\"\n\nNeraxis guffawed. \"What, you mean if you don't go as a Sexy Pirate, then Giles might not go Bumpers with you?\"\n\nSasha ignored her, adjusting the billowy sleeves of her low cut, white silk blouse, before straightening her wide black leather belt and sheathed cutlass. Yes, she did the right thing choosing this one - and choosing Giles' costume for him, too. What was he thinking, wanting to show up as as Frankenstein's Monster? Least sexy concept, ever.\n\n\"I confess I do not understand why piracy should be considered arousing,\" Kit admitted. \"Our own experiences with them have been overwhelmingly negative.\"\n\n\"That's modern piracy, Kit,\" Sasha corrected him. \"But centuries ago, when pirates sailed in wooden ships on the high seas on Earth, there was a more romantic image to them.\"\n\n\"Yeah,\" Neraxis teased. \"Disease, rape, lice, rats, amputation, slavery, starvation diets, corporal punishment-\" At Sasha's scowl, the Bolian raised her hands and howled again.\n\nFrom the adjacent bedroom, Rrori entered, the white-furred Caitian clad in plain black trousers and a ripped shirt that displayed his impressive felinoid furred chest. \"Sorry, my cerulean friend, but if anyone is howling tonight, it will be me. Well, myself and a certain Betazoid girl.\"\n\n\"That's cheating,\" Sasha groused. \"You already look like a werewolf.\"\n\n\"It is an inspired costume, Good Friend Rrori,\" Kit told him. \"It would have been even more inspiring if you were dating our new Chief of Security, and could have been a werewolf and his mate.\"\n\n\"Yeah,\" Neraxis agreed. \"I'm surprised your piece wasn't drawn to the Lieutenant the moment she boarded and you caught her scent.\"\n\nThe Caitian reached out and took her beer bottle for a swig. \"Yes, I caught it... and knew immediately she's only interested in females.\" He looked in Sasha's direction. \"As our esteemed Squad Leader knows all too well.\"\n\nSasha tried to ignore the teasing, as she had since word got to the rest of the Squad about the short but intense affair she'd had with Lt Shall during a trip to Cait, before the Lieutenant had boarded the Surefoot as its new Chief of Security. \"I noticed none of you are getting at Eydiir about her lack of participation.\"\n\n\"She's on duty,\" Neraxis reminded her. \"But she did say that if she was attending, she would think of the group regarding her choice of costume, rather than...\" She paused to imitate the clipped Capellan accent of their friend. \"'The fulfillment of one's own already-overindulged genitalia'.\"\n\nSasha looked across. \"She said that? She's one to talk, considering she only took the shift to work with Falok. She's sweet on him.\" She smiled slyly at Neraxis. \"Not as much as you and Jonas, of course but-\"\n\n\"Stroke off!\" the Bolian snapped, turning purple with embarrassment. \"It's not like that! We're just going together as best friends! He doesn't see me like that!\"\n\n\"His scent suggests differently,\" Rrori pointed out. \"As does yours.\"\n\n\"Someone should deworm you.\"\n\n\"And he has shown to be more inclined to resort to physical violence to defend your honour,\" Kit observed. \"A typical symptom of intense romantic feelings in most humanoids.\"\n\n\"What? You're full of crap.\" But her resistance was wearing down.\n\n\"And Jonas kissed you pretty passionately the night you received your medal,\" Sasha reminded her.\n\nNeraxis took it all in, and finally, reluctantly nodded. \"Yeah. And he said he loved me.\"\n\nNow everyone looked up at her, Sasha voicing their thoughts with, \"He did? When?\"\n\nJust as Jonas walked in, dressed in an old Starfleet uniform as the legendary Captain Seth Brundle, said to have merged in a transporter accident with an insect. He looked at them through the bulbous prosthetic over his right eye. \"Are we ready to win that prize or- what's everyone looking at?\" He smiled. \"Excellent costume, right?\"\n\n*\n\nDeck 4, Sickbay Suite, Morgue Unit:\n\nEydiir regarded the body on the table with typical dispassion. She was not unfamiliar with death of course; growing up on Capella, as a member of one of the Ten Tribes, she had seen death many times, even brought it onto others in her role during one of the tribe's blood feuds. The other Medical cadets baulked at her volunteering to prepare the body for the formal autopsy in the morning rather than attend the party, but she saw the opportunity for furthering her knowledge.\n\nShe started the recording, her gaunt, walnut-coloured face creasing with thought. \"The Federation Database has confirmed the identity of the body as Riga Martis, Terran Female, age 46, Birthplace Mojave City, Earth, Occupation listed as 'Acquisitions Agent'. Preliminary cause of death appears to be a point blank phaser blast to the right temple; an antique Type 1 phaser pistol was found in the deceased's right hand. I will begin a preliminary examination to determine if there were any biochemical triggers towards this act of... of...\"\n\nBeside her, Gamma Squad Leader Falok had been accessing the personal logs of Martis, but now stopped and looked at her. \"Is there a problem?\"\n\nShe stared at the body, feeling the exigent need to talk. Normally she would limit her confidences to her closest friends, or within her survivor group. But of late, she had felt herself growing... close... to the Vulcan. Still, as he might not feel the same way, she settled for, \"I would not wish to bother you with personal issues.\"\n\n\"I understand.\" But then he added, \"However, I would not be averse to learning more about you. Should you be willing to confide in me.\"\n\nShe looked at him again, feeling more assured. \"I of course remain pragmatic about death. However, I cannot stay totally objective about this death.\"\n\n\"Oh? Are you familiar with the individual? If so, you should have excluded yourself from this task-\"\n\n\"No, I do not know her. But I am familiar with suicide. When I was twelve years old, my older brother Straad contracted a fever. My people possess no medical knowledge or training; they believe that the weak should die. I thought differently, and tried to save his life, with what little resources I could find. I failed. I blamed myself.\" She pretended to find something to distract her gaze. \"More than once, I tried to end my own life because of that blame.\" She faced him again. \"I have since recovered past that desire for self destruction, however.\"\n\n\"I have no doubt. And I thank you for your willingness to share with me. I will of course maintain confidentiality.\" After a moment he returned to the data screens. \"Ms Martis has had what appears to be a... colourful history, skirting the proverbial edges of Federation law fulfilling private contracts, obtaining rare and valuable items for wealthy individuals. Her latest contract was apparently to find and deliver something called the Laveau Legacy to a Mr Kivas Fajo.\"\n\n\"She does not sound like someone who would arbitrarily end her life, though of course one cannot always immediately tell. Perhaps this was a murder/theft made to look like suicide?\"\n\n\"I suppose that will be a matter for Starfleet Intelligence; we are only ordered to record the initial findings as per procedure.\"\n\n\"Of course.\"\n\nThe Vulcan paused, and them asked, \"You are not regretting missing the party?\"\n\n\"Celebrating a period in Terran history when superstition held sway over reason appears illogical to me.\"\n\n\"I hold identical thoughts. However, I anticipate a 96.4% probability that the party will be ongoing when our shift ends. Should you still wish to attend, it might be efficient for us to attend together.\"\n\nShe looked at him.\n\n\"To ensure that our respective squads are maintaining decorum,\" he reasoned. \"The consumption of various alcoholic products and the temptation to indulge in irresponsible sexual activity might create disciplinary issues they can avoid. With our help.\"\n\nEydiir nodded. \"Agreed. However, I refuse to garb myself in the representation of some primitive symbol of terror.\"\n\n\"I concur.\" But then Falok noted, \"However, if I understand the custom correctly from the Terran members of my squad, costumes need not be frightening. They may also illustrate intelligence or attractiveness.\" After a pause he added, \"You are more than capable of displaying either of those qualities. In abundance.\"\n\nShe looked at him again -- but then her attention was drawn to an alert from the scanner. \"There is an object on the body, hidden beneath the clothes. Will you assist me in undressing it?\"\n\n\"Of course.\"\n\nThey worked together in silence, Eydiir appreciative of Falok's composure when handling the body as their hands passed in and out of the stasis field. \"I am curious about Vulcan attitudes towards the dead.\"\n\n\"I am willing to enlighten you if possible.\"\n\n\"Capellans share with Klingons a lack of decorum towards deceased bodies, that nothing of the person we knew resides within the now-empty shells; they are often left aside for the local carrion to consume. One would expect Vulcans to share a similar pragmatism, but I have heard that Vulcan funeral customs are elaborate, and respectful of the remains.\"\n\nHe took each item of clothing and set it aside for subsequent cataloguing. \"It is true. It is based on the established existence of the katra, the Vulcan soul, and its connection to the Vulcan body while the body lives. Katras that are not transferred to the Hall of Memory are traditionally left to leave the body at its own pace, so there is a tradition to not disturb the recently-deceased.\"\n\nHe indicated the body on the table. \"This should not apply to Ms Martis, however.\" He stopped and regarded the object around the woman's neck: an ornate gold necklace displaying an elaborately-crafted humanoid skull with red dots for eyes and what looked like a stick lodged between its teeth. \"How appropriately ghoulish for the season, if I understand the aesthetics.\"\n\nEydiir peered at it, running her tricorder over the surface. \"Terran gold, ruby... the carbon dating on the resin holding the rubies in the eye sockets indicates it is approximately 500 years old. But there is something else... it is suffused with anaphasic energy.\"\n\n\"I am unfamiliar with that,\" he admitted.\n\n\"It is very rare, and its effects on biological lifeforms are not fully understood. I am wondering if physical proximity to the necklace might have had an effect on Ms Martis' psychological state.\" She looked up at him. \"I will want to remain past the end of duty shift to make a more detailed study. Should you wish to join your squad at the party, I will understand.\"\n\nHe straightened up. \"I make a counterproposal: I attend the party long enough now to collect suitable refreshments to bring back here, and continue to share your company. If, of course, you find that agreeable.\"\n\nShe offered a slight smile. \"Very much so.\"\n\nShe reached out and risked touching his hand. Just for a heartbeat.\n\nHe did not react negatively, but instead offered, \"I will see if they have Corn Discs. I believe those are a favourite of yours?\"\n\nShe raised a playful eyebrow in imitation of a Vulcan gesture. \"And how would you know that?\"\n\n\"We can discuss that at a later time.\"\n\nNow he reached out and touched her back. Just for a heartbeat.\n\nThen he departed. Eydiir indulged in a rare broad smile, before setting aside the tricorder, reaching into the stasis field and finding a clasp at the back of the necklace, undoing it and removing it from the body. She held it up to the light for a moment, looking at the sparkling red eyes, before setting it down on the flat round surface of a scanner. \"Computer, begin analysis. Start with Image Search, then standard Multispectral, and when that's done, I will want-\"\n\n\"You'll want a good hard rut from that pointy-eared pixie,\" suggested a new voice, deep and mocking.\n\nShe spun, mentally cursing herself for not being more alert, but then was taken aback by the sight of the tall costumed figure before her: long, gaunt, clad in a sombre black clothes, a long coat collared with fine white fur, and a top hat adorned with elaborate and colorful symbols. Its head was made to resemble a skull, and lidless eyes fixed unwaveringly on her as it cradled a glass filled with dark liquid in one hand, and a foul-smelling cigar in the other.\n\nEydiir recovered quickly. \"I am impressed.\"\n\nThe visitor took a drag from his smoke. \"I hear that a lot from women, cherie.\"\n\n\"Yes, the sophistication of the prosthetics employed is redoubtable. I am assuming the smoke from that rolled weed is a chemical residue that does not trigger the ship's fire control systems?\"\n\n\"Those lips have better things to do than spout merde, Eydiir, Daughter of Kaas... Sister of Straad.\" He tilted his head and chuckled.\n\nShe stiffened at the mention of her brother's name. \"Who are you? Are you authorised to be in here?\"\n\nThe figure drank from his glass and set it aside. \"Me, p\u00e9tasse? I am the Loa of the Dead. And if anyone is authorised to be in a morgue... it is I.\"\n\nHer pulse quickened. \"This is not amusing. I am familiar with the conventions of this inane Terran holiday. I have no desire for either tricks or treats.\"\n\nThe figure chuckled again. \"I do.\"\n\n*\n\nFalok entered the empty Sickbay Suite with a small tray of proffered snacks, not seeing Eydiir around. At first believing she might have just stepped out to use the hygiene chamber, he set aside the tray, taking the time to analyse his emotional status once again, acknowledging the sense of incompleteness he felt at her temporary absence.\n\nEmotional control was of course a primary discipline for Vulcans almost from infancy, with subconscious lessons taught to babies by their parents through simple mind melds, until they were old enough to accept visual and oral training. But one of the earliest lessons they learned was that, unless they underwent the Kohlinar discipline, the emotions would always be there. Which was acceptable, so long as control was maintained.\n\nWhich was relatively easy enough, when one was young and on Vulcan, surrounded by Vulcans. But when one reached adolescence and left the homeworld to live among highly emotional beings, as Falok had, control was... less easy.\n\nEspecially in the company of someone such as Eydiir, who was intelligent, disciplined, capable... and not aesthetically displeasing visually, despite a lack of pointed ears. As he entered the Morgue Unit, he considered his options in enhancing their relationship-\n\nThen such thoughts were filed away as he found Eydiir on the floor, near the table where the body of Martis still lay. He dropped to one knee and checked her pulse -- it was erratic, but still present -- and he tapped his combadge. \"Squad Leader Falok to Dr Ling, Medical Emergency, report to Sickbay at once.\"\n\nSeconds later, the woman's voice filled the room. \"I'm on my way. What's going on? Where's Eydiir?\"\n\n\"The patient is Eydiir, I found her alive but unconscious in the Morgue Unit while examining the body. There are no other external symptoms or injuries, but I cannot revive her.\"\n\n\"I'm initiating a Quarantine as a precaution. Can you move her to a biobed?\"\n\n\"Affirmative, Doctor.\" Falok was distracted by the intensity of his emotional response and the difficulty in controlling it, as he slipped his arms under the Capellan girl's legs and back, lifting her up as he returned to his feet and carrying her out into the main Sickbay, placing her gently onto the biobed, the panel above immediately accessing Eydiir's medical records while it scanned her to compare them to her present state.\n\nHe reached out and touched the side of her face, as more emotions rose unchecked to the forefront of his consciousness: concern for her well-being, confusion over what had happened, guilt over leaving her alone on duty, even for only 3.46 minutes-\n\n-Then he felt himself slipping, his mind's eye plummeting as if down a well, through a kaleidoscope of thoughts, memories and emotions that definitely weren't his but still felt like his: walking along the craggy rocks of Capella, a small but fierce white sun bearing down as he hunted razortails with his big brother Straad; tears pouring unabashed down his face as he held the dying young man in his arms; rage at his tribe for not helping; the pain of the blade as he pierced his wrist, feeling the blood trickle; the pride of slipping into a Starfleet Cadet's uniform for the first time; the fierce resolve of driving a knife blade across the open throat of a Ferasan who threatened Captain Hrelle's life; in the shower, touching himself as he thought of being with Falok-",
        "\"Eydiir,\" growled the spectre that stood in the Morgue Unit, a tall, pale spectre that was undeniably his brother Straad, brought back to life. \"After all I did for you, all my love I gave you... you didn't save me. You couldn't do this one thing for me. And now you've fled, to enjoy the life that I no longer can. How could you do that? How?\"\n\nAnd behind the spectre, a tall, skeletal creature in a top hat and longcoat grinned wickedly. \"Yes, Cherie, how could you? Your brother is now tormented in the Hereafter because of you. BECAUSE OF YOU!\"-\n\nFalok broke contact and stepped back, almost staggering. That was... he had initiated a mind meld! His first! He had been on the receiving end of such telepathic contacts before, of course, but that was as a child, when he did not have the maturity to properly appreciate the intimacy of it, to appreciate that... that...\n\nThat he had just accessed another's mind without their permission.\n\nDr Ling entered, snapping him out of his shock at what he had just done, the small Asian woman striding up to the bed, her gaze on the readings overhead. \"How long has she been like this?\"\n\n\"I, ah, found her in this condition 1.4 minutes ago. I, ah, don't know how long she might have been like this.\"\n\nLing paused and looked over at him. \"Are you okay? Any symptoms?\"\n\nFalok mentally collected himself and straightened up. \"I am perfectly well, Doctor.\"\n\n\"Good, then you won't mind getting up on the next biobed and getting checked out yourself.\"\n\n\"I can assure you, Doctor, that-\"\n\n\"That you're capable of following your doctor's orders? Prove it. Nurse Scarlo: report to Sickbay immediately.\" She paused and noted aloud, \"No viruses or bacteria detected, no pathogens... did she eat or drink anything?\"\n\n\"No, Doctor, not to my knowledge.\" He tried to process the last images he saw in her mind, they seemed most recent, the most intense, despite the seeming contradictions of her seeing her dead brother here. Had it been some symptom of post-traumatic disorder? He had no prior experience to confirm this.\n\n\"She has exceedingly high levels of acetylcholine and neurotransmitter production indicative of severe emotional stress,\" Ling continued. \"With elevated levels of psyosinine, normally seen during telepathic contact.\"\n\nShe looked over at Falok.\n\nThe Vulcan sat up, internally struggling to maintain his composure. \"I can assure you, Doctor, no telepathic activity has taken place between Cadet Eydiir and myself that could have triggered her current state.\"\n\nLing appeared satisfied with his statement, as Nurse Scarlo entered. \"Lyn, run a scan on Mr Falok, while I check on the dead next door.\"\n\nThe tall Terran nurse with a mass of curly black hair gently but firmly pushed Falok down to a lying position again. \"Just keep still, Cadet-\"\n\nBut then both of them turned at the sound Ling made, as the doctor returned to the open doorway to the Morgue Unit, holding a short glass of dark liquid. \"I thought you said she hadn't hadn't drunk anything? And why does it smell of smoke in here?\"\n\n*\n\nDeck 2, Crew Lounge:\n\nA man climbed out of an ornate coffin, his receding black hair slicked back in a widow's peak from his pallid, gaunt face, fangs bared as he glided forward, extending his arms to display his cape as he announced in a thick accent, \"Good Evening, Boils and Ghouls and all Children of the Night! I am your host, Count DeMoney! Are you ready to dance?\"\n\nOn the floorspace, cleared of tables and chairs and with fake cobwebs, vampire bats and skulls hanging from the ceiling, the costumed crowd of cadets and crewmen responded with a wild cheer.\n\n\"Then let's dance!\" The coffin behind the Count disappeared, and a holographic band took its place, bursting into a classic song as the Count started boogeying onstage, and the crowd followed suit.\n\nIn the rear of the Lounge, Captain Esek Hrelle stood beside his wife, both of them wearing the appropriate Starfleet uniforms from a century before, Hrelle in a solid gold, rather tight shirt and black trousers, and Counselor Kami Hrelle in a blue minidress that accommodated her pregnancy bump better than Hrelle's shirt did for his belly. Hrelle beamed, his tail wagging. \"Well, this looks to be a success! Remind me to compliment Neheru when I see him!\"\n\nSuddenly a tall, lanky figure in dirty rags and wearing a burlap sack with eyeholes over its head emerged from the nearby shadows. \"Thank you, Captain, I am most pleased myself!\"\n\nHrelle started. \"Mother's Cubs, Neheru, what in the Seven Hells are you supposed to be?\"\n\nThe Lieutenant lifted up the sack to reveal his pleased-looking Kelpien face: noseless, with bright emerald eyes, looking very much like a dried apricot. \"They were called Scarecrows, Captain! They were humanoid effigies set up in cropfields on Earth and similar worlds as an environmentally-friendly pest control measure. They later became the subject of many legends about their coming to life and attacking copulating adolescents in land vehicles!\" He made a sound like human chortling.\n\nKami smiled. \"I find it very telling that a member of a race known for its timidity would revel in fear inducing.\"\n\nNeheru looked to her. \"There is nothing wrong with fear, it can be very healthy, as you well know, Counselor. Especially in as controlled an environment as this.\" Suddenly he straightened up. \"Would you excuse me, please? Cadet Ingalls is trying to add alcohol to the fruit punch! Again! Mr Ingalls, not everyone here can imbibe!\" He pulled his sack down over his head and departed towards the snack tables.\n\nHrelle leaned in to Kami and asked, \"Am I wrong, or is that the scariest costume in here?\"\n\nShe laughed. \"I thought it was just me.\" She touched her belly. \"I think the Bump wants to dance.\"\n\nHrelle chuckled. \"Do you want me to get you a seat? Something to drink?\"\n\nShe shook her head. \"I won't stay long, just making sure all our cubs are having fun. And staying out of trouble.\" She smirked at one couple in a dark corner nearby, kissing passionately. \"Mostly out of trouble.\"\n\nFrom the doorway, Alpha Squad entered, led by Sasha, along with Beta Squad Leader Giles Arrington, dressed like her as an old-fashioned pirate, and First Officer Commander T'Varik, dressed as... a Starfleet officer.\n\n\"Excellent work!\" Hrelle grinned, before focusing on T'Varik. \"Except for yours. I thought I gave orders that everyone attending was to be in costume.\"\n\nThe Vulcan remained insouciant, folding her hands behind her back. \"And I have, Sir. I am dressed as Commander William Riker of the USS Enterprise-D. That we happen to share an identical uniform and rank is purely coincidental.\"\n\nHrelle considered the answer - and guffawed. \"Good one! You got me!\"\n\n\"You need a beard,\" Kami teased.\n\n\"No, she doesn't!\" Chief of Security Lt Shall Shall drew up, dressed in... as very little as she could get away with, all animal skins and a collar around her neck, her black tail swishing happily behind her as she focused on the Vulcan, ignoring all the appreciative stares she was receiving. \"She's fine exactly as she is!\"\n\nT'Varik regarded the young Caitian's costume dispassionately. \"And what are you meant to be?\"\n\n\"A wild beast,\" she purred sultrily in reply, \"In heat, and looking for a mate.\"\n\n\"Never would have recognised her,\" Sasha quipped.\n\nC'Rash glanced once at her cousin by marriage. \"Don't be jealous, Tailless, you had your chance with me, let others have some fun.\" To T'Varik she said, \"Let's dance.\"\n\n\"I think not.\"\n\n\"I think so,\" Hrelle countered, smirking. \"It's certainly what Commander Riker would do, or so I've heard about him.\"\n\n\"Go on, T'Varik,\" Kami joined in. \"It's healthy. Consider it Medical Orders.\"\n\n\"You heard Aunt Kami...\" C'Rash took T'Varik by the hand led her unto the crowd.\n\nHrelle looked to Alpha Squad. \"Well, go on, you too!\"\n\nHe watched them merge into the crowd as well, some seeking out specific people, others apparently already with the ones they want, like Sasha with Giles... and Jonas with Neraxis.\n\nHe looked to his wife. \"Are they...?\"\n\nThe Counselor smiled in the direction of the young couple, Jonas gently but firmly convincing the Bolian girl to put her arms around him and start dancing. \"Yes. She can't quite admit it to herself yet, but they are.\"\n\nHe chuckled - but then sobered as Nurse Scarlo entered and whispered something in his ear. He nodded and looked to Kami. \"Get T'Varik, C'Rash and Sasha to come to Sickbay. Something's happened to Eydiir.\"\n\n*\n\n<br >Chief Grev clicked the stubby hooves on his right hand, once again marvelling that races like humans could make do with those spindly appendages they used for fingers, as he sat alone in Main Engineering, studying the power flow to the aft tractor array, working on increasing the performance through supporting the struts with the structural integrity field. He grunted to himself; there was something about having all these talented young pups running around that woke up his own inspiration. He hadn't felt this way since he was a midshipman-\n\n\"Here, Piggy Piggy Piggy...\"\n\nGrev turned in his chair, squinting. \"Who's that?\"\n\nA figure stepped in from the shadows: human, tall, thin, and clad in one of those gaudy costumes that the humans wore for their infernal pagan ritual. He grinned with a bone-white face, puffing on a smouldering cigar, wide white eyes peering out from under a black top hat. \"Ooh, I have had many names over the centuries, Monsieur Piglet. But you can address me as... The Baron.\"\n\nGrev grunted; Tellarites went more from smell than sight, but his nose couldn't pick up which crewmember this was. Probably one of the new cadets, certainly not one of the Engineering ones he normally dealt with. \"Is that right? Well, 'The Baron', this area's off limits to non-essential personnel! Especially ones creating potential fire hazards! So take your mangy, fleabitten carcass back to the Crew Lounge and join the rest of the party!\"\n\nThe Baron sneered. \"You ungrateful little fils de pute! I come here, offering to take over for you while you have your family reunion, and this is the thanks I get?\"\n\nGrev stood up. \"Take over? Reunion? By Grabthar's Hammer, what are you talking about? Get out, or I'll call Security!\"\n\nThe intruder laughed now... and stepped aside, revealing a Tellarite male, with ashen-grey fur looking stringy and sickly, wrinkled skin now embedded from age and infirmity as it hung loosely from his fragile frame. But his voice carried, carried into Grev's mind. \"Grev... where were you when that theta leak left me like this?\"\n\nGrev staggered back, breath quickening. \"Gral? You- How can you be here? You-\"\n\n\"Died?\" The phantasm drew closer, raising a spindly hand towards him. \"I know! I was there! You weren't, though! You were away, grubbing about in mud baths, thinking only of yourself, while I BURNED! What about all those promises to watch out for your little brother? What about them?\"\n\nGrev shook his head. It couldn't be... it was twenty-four years ago, when they were both midshipmen on the Marco Polo, and Grev went on leave without him, and- and- and now he stood here, looking, sounding, smelling exactly as Grev remembered when he- he-\n\n\"Watched me die?\" the phantasm prompted.\n\nAnd it all flooded back, a wave of guilt and anguish and terror as strong now as it was almost a quarter-century ago. He sank to his knees, sobbing and wailing, before finally succumbing to unconsciousness.\n\nThe top-hatted skeletal figure walked past him. \"And this little piggy cried Wee Wee Wee, all the way home...\" It focused on the tall cylindrical warp core, illuminated in sea blue, and accessed the now-vulnerable Chief's mind for the knowledge it required...\n\n*\n\nHrelle brought the tumbler glass to his nose. \"Yes, definitely smells like rum.\"\n\nNearby, Kami prompted, \"You're not going to taste it, are you? It's not even been properly scanned.\" She sniffed the air in the Morgue Unit. \"And that is tobacco; I had to work with a human Counselor who favoured them, for some stupid romantic reason.\"\n\nC'Rash, still clad in her minimal costume, brought her Security tricorder to the rum glass. \"I'm getting strange readings from it, some form of energy it can't identify.\"\n\nFalok stood at the doorway, having been cleared by Nurse Scarlo. \"Eydiir and I had identified that the necklace we found around Ms Martis' neck was filled with anaphasic energy. We were preparing to make a further study of it, speculating that the energy might have affected the psychological state of the deceased.\"\n\nT'Varik stood near the scanner. \"Where is the necklace?\"\n\nFalok froze, as if more conscious of the need to display discipline in the presence of the older Vulcan. \"It was there when I had departed for refreshments.\"\n\n\"So we're saying someone came in here, smoked, drank rum, somehow disabled Eydiir and took the necklace?\" Hrelle looked to T'Varik. \"Access the replicator logs, find out who if anyone might have ordered rum, and tobacco. They might have been brought onboard physically, but it's still worth a shot.\"\n\nC'Rash walked up to Falok. \"Describe the necklace.\"\n\nThe young Vulcan made an effort not to glance down at her underdressed state. \"22.5 centimetres in length, composed of Terran gold in short segments, approximately 500 years old, with a centrepiece of a stylised humanoid skull with a top hat and- and...\" His mind recalled the image from Eydiir's mind, of something that resembled the same figure.\n\nHis reaction drew everyone's attention, Kami asking softly, \"What is it? What are you remembering?\"\n\nFalok looked around, steeling himself. It was inevitable, he couldn't keep his actions to himself any longer. \"Captain, I must formally report that I have committed a crime, in violation of Starfleet Code of Conduct 128, namely the telepathic memory invasion of Cadet Eydiir Daughter-of-Kaas.\"\n\n\"What?\" Hrelle exclaimed, as T'Varik joined them again, her gaze cold and unwavering on the other Vulcan.\n\nFalok continued, already feeling relieved that he was able to bring it out into the open. \"I... I was helping Eydiir to the biobed. I touched her face to check her pulse and... I accidentally mind-melded with her. I have never done it before, I was unprepared, and struggled to break it, but... I will not contest the charges, and of course I will resign immediately-\"\n\n\"We will discuss your actions at a later time, Mr Falok,\" T'Varik informed him sharply. \"We have more immediate concerns.\" As Dr Ling and Sasha entered, she asked the former, \"What is Cadet Eydiir's condition?\"\n\nLing glanced at Falok, as if she had heard at least part of his confession before entering the Unit. \"She seems to have undergone some profound post-traumatic stress episode, with the accompanying neurotransmitter activity expected, but she should recover. I could use stimulants to wake her sooner, but I'd much prefer to let her come out of it at her own pace. There was definite increased levels of psilosinine, indicative of strong telepathic contact, similar to what happened to members of Alpha Squad last year with that rogue telepath Lt. Aikens.\"\n\nThe senior officers looked to Falok again, but Hrelle asked gently, \"Why do you think she might have had a post-traumatic episode, Mr Falok?\"\n\nThe young Vulcan swallowed, indicating Martis' remains, still under the stasis field on the table. \"We had begun examining the body, and Eydiir noted the apparent signs of suicide, and confided in me her own attempts at suicide following the death of her older brother on Capella.\n\nSir... I saw images in her mind that shouldn't exist... images of her brother, standing in this very room, accusing her of failing him, of letting him die. I- She felt so much guilt, it was overwhelming. The images certainly appeared real to her, but... I have no experience in judging the verisimilitude of another's memories.\" He breathed in. \"Captain, I swear to you on my honour as a Vulcan that I would not harm her-\"\n\n\"T'Varik is right, that's for another time,\" Kami informed him. \"You were hesitating earlier as you described the missing necklace. Why?\"\n\n\"Because she saw someone else in this room besides her brother. A humanoid who greatly resembled the figure with the skull face, top hat and cigar.\"\n\nC'Rash was accessing her tricorder. \"The necklace is listed in the Federation Historical Database as the Laveau Legacy, a valuable relic from Earth's 19th Century with a notorious history of bringing bad luck to its owners. It was reported stolen from the New Orleans Museum in 2254, considered lost.\" She shrugged. \"And now apparently found, and subsequently lost again.\"\n\n\"According to the ship's logs,\" Falok reported. \"Ms Martis was delivering the relic to a private collector, a Mr Kivas Fajo. Eydiir had speculated that perhaps it had been a theft/murder made to appear as suicide.\"\n\n\"Then why not take the necklace when they killed her?\" C'Rash reasoned.\n\n\"This humanoid you say Eydiir saw,\" Hrelle asked Falok. \"Did he appear familiar?\"\n\nSasha was now accessing a data terminal. \"The figure described is apparently Baron Samedi, a Loa, or spirit, in Terran vodou beliefs. He is said to inhabit the crossroads between the worlds of the living and the dead, is notorious for his outrageous behaviour, swearing, making filthy jokes, and smoking cigars and drinking rum, and has the power of resurrection.\"\n\n\"I believe we can confidently assume that the intruder who attacked Cadet Eydiir is not an actual spirit,\" T'Varik declared dryly.\n\nHrelle's expression tightened. \"Dr Ling, monitor Eydiir, and keep the Morgue locked up until further notice. Nurse Scarlo, stay here. I don't want anyone alone for too long. Those of us in costume, get back in uniform, then get to the Lounge and see if you can find someone dressed like this Baron Samedi; if this turns out to be some Halloween prank gone wrong, the party or parties responsible will regret it.\" He felt his hackles rising, as if suspecting that there was more to it than just trick or treating.\n\n*\n\nIn the Crew Lounge, the music continued to blast, and black and orange light beams danced overhead, and the environmental systems struggled to keep down the heat being generated by the mass of bodies on the floor, swirling and pulsing. Onstage, a holographic band belted out a ghoulish song, led by a man with pale makeup and long black hair-\n\nUntil the music abruptly stopped, and the singer spasmed and jolted as if electrocuted, before his holographic matrix fragmented... replaced by the intruder. He looked out, remaining silent until he had everyone's attention. \"Well, well, well, what have we here?\" He took a puff from his cigar before continuing, \"It looks like someone likes Halloween! Am I right, you horny little bastards?\"\n\nA cheer rose up among them, a cheer that gained momentum.\n\nThe intruder laughed theatrically. \"Bien, bien! It seems I've come to the right place!\" He drank from his glass. \"Allow me to introduce myself: I am Baron Samedi, the Loa of the Dead, the Master of the Underworld, the Prince of the Graveyard. I have power over the living and the unliving. I command all.\" He threw the emptied glass aside and swept the hand holding the cigar across the crowd. \"And I command you all to stay here and dance your sweet little asses off! THIS IS A LOCKDOWN! DANCE 'TIL YOU DIE!\"\n\nThe music started up again as he vanished with an echoing laugh. The crowd lapped it up, and followed the orders.\n\nNear the back of the lounge, Giles, feeling foolish and left out since Sasha left unexpectedly, moved up to Neheru. \"Lieutenant, my compliments! The Baron's a hell of a lot cooler than your Count DeMoney! You should have led with him from the start!\"",
        "The Kelpien removed his headgear and threw it aside, struggling to regain control of his threat ganglia, which had inexplicably extended from the back of his neck when Samedi first appeared, and refused to retract. \"I didn't create that holographic character, Mr Arrington, and I will have words with whomever had crudely accessed my program to include him. Please excuse me.\" He turned to exit - only to find the doors unresponsive.\n\nYes, he was definitely going to have words with the one responsible.\n\n*\n\nC'Rash had rushed into her quarters and began stripping off her costume to change into her uniform, tapping her combadge before she was dressed. \"C'Rash to T'Varik: apologies.\"\n\nThe Vulcan's voice was bemused. \"Apologies, Lieutenant? For what?\"\n\nThe Caitian smiled to herself. \"For not finishing our dance. I know you were enjoying it.\"\n\nThe Security Chief could almost hear the eyebrow rise over the combadge link. \"Lieutenant, we have more important matters to deal with at this time.\"\n\nC'Rash was about to enquire further, when she tensed, distracted by a scent. She paused once or twice, tried to shake it off as a memory, but it grew overwhelming, and panic rose within her, her hackles rising and her black-furred tail twitching agitatedly as she glanced about. \"No. No, it couldn't be-\"\n\n\"Lieutenant?\" T'Varik asked. \"Is there a problem?\"\n\nC'Rash didn't hear. \"No- not him- not-\"\n\n\"Is this how you present yourself to your commanding officer, young lady?\"\n\nShe cursed and spun, hissing instinctively at the figure standing before her.\n\nHe was an older human male, dark-skinned, plump in face and greying in his receding hair, and dressed in a Starfleet uniform with four Captain's pips - with an unignorable Cardassian disruptor burn where his heart should have been. He indicated her nude state. \"This is not how I expect my junior officers to appear!\"\n\nC'Rash's heart raced. \"C-Captain Myrick?\"\n\nHe sneered. \"You haven't forgotten my name, at least. Everything else, though... your oath to protect me, to keep your commanding officer, your mentor, safe from harm? That went out the proverbial airlock, didn't it?\"\n\nShe was clutching her uniform in her hand, trembling... \"Captain Myrick... you can't be real! You're dead, you were killed-\"\n\n\"I know!\" he shrieked. \"And you swore to the Great Mother that you'd protect me! So much for your word!\"\n\nShe shook her head. \"You- I never told anyone I did that! Who-\"\n\nA hand appeared from nowhere and snatched her clothing away, the body attached to the hand emerging from shadow, grinning with a lipless mouth - the missing necklace glittering around his neck. \"They say cats have no guilt. But you certainly do, Mon Petit Chat Noir. Fresh, strong, delicious guilt.\"\n\nC'Rash struggled to break out of the paralysis that gripped her, filled her body, since the image of Myrick appeared. But all she could manage was to extend the claws on her right hand and weakly raise her arm up to strike him.\n\nBut Samedi was ready for her. A bony hand held her easily by the wrist, the other reaching up, fondling her as she shook. He chuckled. \"Your guilt nourishes me; merci beaucoup. But there is one onboard whose guilt surpasses all others. His death will be a feast. And you will have failed to save another Captain. Imagine your own guilt then, Pretty Kitty... What an exquisite dessert that will make...\"\n\n*\n\nWith Sasha returned to her quarters to change, the two Vulcans strode down the corridor towards the Lounge, Falok finally venturing to speak. \"Commander, I-\"\n\n\"If you are as intelligent as you are purported to be, Squad Leader, you will not broach the subject of your actions at this time.\" She nearly ran into the Lounge doors before realising that they would not open automatically. She tried the manual override controls, without success. \"Go to Engineering. Chief Grev is on duty, inform him of this problem and request his immediate assistance, and take over for him there.\"\n\n\"Yes, Commander.\"\n\nT'Varik watched him depart - then frowned to herself as her combadge chirped. \"C'Rash to T'Varik: apologies.\"\n\n\"Apologies, Lieutenant? For what?\"\n\n\"For not finishing our dance. I know you were enjoying it.\"\n\nThe Vulcan raised an eyebrow. \"Lieutenant, we have more important matters to deal with at this time.\"\n\nThen she heard C'Rash declare, \"No. No, it couldn't be-\"\n\n\"Lieutenant? Is there a problem?\"\n\n\"No- not him- not-\"\n\nThen an unfamiliar male voice joined the conversation from C'Rash's end. \"Is this how you present yourself to your commanding officer, young lady?\" T'Varik heard the Caitian hiss and curse, before the man's voice spoke again. \"This is not how I expect my junior officers to appear!\"\n\n\"C-Captain Myrick?\"\n\nThe transmission ended, and T'Varik tried to re-establish. \"Lieutenant? Lieutenant C'Rash, respond.\" After a moment of silence she announced. \"T'Varik to Bridge: Lt Velkovsky, take the ship to Red Alert.\"\n\nSuddenly the corridor went dark, and a single lighting strip in an oyster grey colour lit the way.\n\nShe tapped her combadge again. \"Lieutenant, I ordered Red Alert, not Grey Alert. Lieutenant Velkovsky: answer... Anyone on the combadge system: answer.\"\n\nShe heard the footfalls down the otherwise-silent corridor, correctly judging it to be Falok returning, his haste providing a 96% probability of something else wrong. \"Commander, I found Chief Grev in a comatose state identical to Eydiir. And there was that same smell of cigar smoke in Engineering.\"\n\nShe nodded. \"I was speaking with Lt Shall when she apparently was visited by an apparition purporting to be a deceased colleague of hers, before transmission was broken.\"\n\n\"A deceased...\" Falok straightened up. \"She was hallucinating?\"\n\n\"I heard the 'hallucination' speak. Communications are down; that should not be the case, even in Grey Alert. Follow me to Security.\"\n\n\"Should we not alert Dr Ling and Captain Hrelle first?\"\n\n\"We first require weapons and communicators independent of the ship's systems, and collect Sasha Hrelle along the way. Afterwards, you will proceed to Sickbay, inform Dr Ling of the new casualties, and remain on guard with her and Nurse Scarlo for the time being. I will then proceed to the Captain's Quarters on Deck 1 and report.\"\n\n*\n\n\"This is intolerable,\" Neheru declared, the upper half of his costume cast aside leving him in his Starfleet-issue black undershirt. He was staring at the Lounge doors as he declared it, as if the strength of his continued chagrin might force the stubborn things to finally open after an interminable period of being trapped within.\n\nOnce he realised they were trapped and no one was responding to hails, he had stopped the music and raised the lights, but the initial protests from the revellers quickly died when they realised that this was really happening. Attempts at manually overriding the door locking mechanism failed. And then the lights dimmed, and the lighting strip in the ceiling indicated they had gone to Grey Alert. And now they were trapped, in a room that was gradually losing heat.\n\n\"Intolerable!\" he repeated, more loudly. Then he checked himself; as the ship's Second Officer and senior in rank here he had to set an example of professionalism, even in the face of adversity. But he couldn't help feel a sense of responsibility. He had only obtained his current position because of a chance encounter with Captain Hrelle while delivering the Sabre-class ship to Starbase 154. Neheru had assured everyone that it was a top-of-the-line vessel, had passed all its inspections without any problems. If all of this was due to some hitherto-undiscovered glitch in the systems-\n\nSquad Leader Giles Arrington stepped up beside him. \"Lieutenant, we've run out of barbecued chicken.\"\n\n\"And?\"\n\n\"Request permission to cook and eat one of the less useful cadets?\"\n\nThe Kelpien harrumphed. \"Don't be ridiculous, Mr Arrington. You can't start a fire in here, that'd be a safety violation.\"\n\nGiles made a sound of amusement mixed with surprise; Neheru guessed the younger man never expected his senior officer to have a sense of humour. He wasn't that much older than he and the other cadets... was he? \"And how are our Engineering cadets doing?\"\n\n\"They can't agree on one tactic, and given our limited resources-\"\n\nNeheru nodded. \"Let's go see.\" They ventured to the table where the cadets and Engineering staff had gathered around a table cleared of drinks and snacks and replaced with every tool and electronic item that might have been included in costume accessories. Which wasn't much. Neheru put on his most no-nonsense face. \"Report.\"\n\nJonas flicked back his silver-white hair as he indicated the items. \"My idea is to create a coupler for that power cell to connect to the locking mechanism to give it enough juice to unlock. It won't have enough to open the doors, but we should be able to do that ourselves with time, a simple lever and some elbow grease.\"\n\n\"Elbow... grease?\"\n\n\"Um, a human expression for sweat, Lieutenant.\"\n\n\"That sounds disgusting. Will we be able to force the doors open once unlocked?\"\n\n\"Well, we have enough volunteers. Dr Kline has been volunteering to get something done.\"\n\nNearby, an inebriated Klingon dressed in the robes of the character K'rchef from the great Klingon comic opera The Bloodstained Winter of Our Misery, suddenly jumped to his feet from where he had been sitting insensate, and loudly declared, \"By Kahless, yes! I will split the gates of Sto-Vo-Kor itself if need be!\" Then he belched and sat down again.\n\nNeheru grunted and turned back to the group. \"And the other option?\"\n\nNow Delta Squad's Tellarite Engineering Guforg spoke up, her hooves pointing at various items. \"We use the power cell to start a fire near the ceiling sensors over the door.\"\n\n\"A fire?\"\n\n\"It won't work,\" Jonas declared.\n\nGuforg snorted. \"You're not the only one here with Engineering skills, Ostrow.\"\n\n\"I'm not saying that,\" he protested. \"I'm saying the-\"\n\nBut Guforg turned to Neheru. \"Even when we're in Grey Alert, the sensors know this room is occupied, so when they detect the fire, they'll reallocate power to open the doors. No elbow grease will be required.\"\n\n\"It won't work,\" Jonas repeated. \"The diagnostic cycle we first tried to reset the door failed, so it won't recognise people in the room to free them. You'll waste the power in the cell.\"\n\n\"And I disagree,\" Guforg countered, \"What do the rest of you say?\"\n\nSome of the other cadets -- Yeager, Soolamea -- plus a couple of the Engineering crew, sided with Jonas. Others with Guforg, who sneered at him. \"We all know you're the Captain's little favourite, Ostrow. But that doesn't make you right.\" She looked to Neheru. \"Well, Lieutenant?\"\n\nNeheru considered the choice. Ostrow's plan was safer, but would take time and have no guarantee of success. Guforg's plan was riskier, but could get them out immediately. Fortune favours the bold, but Kelpiens were not known for their boldness. On the other hand, as they had not yet been freed from the outside or even contacted, this suggested there was danger involved, possibly involving that Baron Samedi character. They may need help, fast.\n\nHe owed so much to the Captain: offering him this position, taking him away from the shipyards -- a safer environment, perhaps, but one with less fulfilling responsibility. He looked to Guforg. \"Implement your plan.\"\n\nThe young Tellarite clacked her hooves in delight. \"Thank you, Sir!\" He glanced at Jonas. \"Just sit tight, Ostrow, and watch how it's done.\"\n\nJonas stood back, Neraxis moving up to him and putting a hand on his shoulder, \"You okay, Scrappy? They should have listened to you.\"\n\nHe nodded, watching as Guforg guided the other cadets and crew to move a table up near the door, where she climbed up with the power cell and the improvised igniter.\n\nNow Kit drew up. \"You appear resentful, Good Friend Jonas.\"\n\n\"No, Kit. Just thinking about what we might do when-\"\n\nThere was a flash from the power cell, a flame. And... nothing.\n\n\"-When her plan failed,\" he finished.\n\n*\n\nIn their quarters, Hrelle and Kami were changing when he asked, \"Do you think Eydiir's condition is related to what Falok did to her?\"\n\n\"I can't see it. I've been on the receiving end of Vulcan mind melds with T'Varik; to cause the sort of reaction she had would take a well-developed, unhinged mind. Falok doesn't fit that profile; he's too sweet on Eydiir-\"\n\nThe lights dimmed as the ship went to Grey Alert.\n\nHrelle glanced up. \"Seven Hells... Hrelle to Bridge, what's going on, Velkovsky?\" After a moment's silence, he persisted. \"This is the Captain, someone respond, now! Computer: Restore Normal Operations! Computer!\" His hackles rose, and he glanced at Kami. \"Stay here, lock the door.\"\n\nShe watched him leave. \"Be careful, Esek.\"\n\nHe stopped, returned and nuzzled her. \"I'll be careful. Be back soon.\"\n\nHe headed for the door again, pausing as it opened onto a darkened corridor. \"Lock it!\"\n\nAs the door slid shut, she murmured, \"Computer: Lock Door.\"\n\n\"Bien s\u00fbr, pute,\" it replied happily.\n\n*\n\nHrelle heard T'Varik and Sasha approach, saw them wearing belts with a phaser holster and pouch for an independent handheld communicator each. \"Commander! I can't reach the Bridge.\"\n\nThey drew up to him, T'Varik handing him a spare belt. \"Nor can I. We need to check on Lt. C'Rash, she has been attacked.\"\n\nHe didn't ask for an explanation, instead followed her to their Chief of Security's quarters, entering to find the Caitian collapsed on the floor, alive but resisting any attempts to wake her. Hrelle lifted her up and put her on her bed, sniffing the air. \"Cigar smoke again. What's going on, T'Varik?\"\n\n\"I was in communication with her when I heard an intruder appear, apparently in the guise of her former commander Captain Myrick, who I was led to believe died - a similar account from Cadet Falok about what Eydiir encountered, but with her deceased brother.\"\n\nHe eyed her. \"Some sort of telepathic attack?\"\n\n\"Yes, but with an obvious physical component; I heard the voice of the entity confronting the Lieutenant, and we have smelled cigar smoke in both locations. Sir, Cadet Falok has reported Chief Grev has also been incapacitated; I have armed Mr Falok and assigned him to stay with Dr Ling and Nurse Scarlo.\"\n\nHe nodded with approval. \"Is there anyone else outside the Lounge?\"\n\n\"None that I am aware of.\"\n\nHe looked to his stepdaughter. \"Sasha, go stay with Kami; when you're together, see if you can find out anything more about this anaphasic energy they detected.\" He glanced at his First Officer. \"If you agree, Number One.\"\n\n\"I do, Sir.\"\n\nSasha nodded and departed.\n\n*\n\nKami looked up at nothing in particular. \"Computer? Unlock the door, please?\" She knew that the computer wasn't sentient - there were regulations against creating that level of AI - but it never hurt to practice good manners. \"Computer?\"\n\n\"No, Madame Chatte, not the computer.\"\n\nShe turned to see a tall, skull-faced figure in black appear from nowhere in her quarters, raising her hackles. \"Who are you?\"\n\nHe bowed slightly. \"Baron Samedi, at your service.\"\n\nHer pulse quickened, and she felt the baby react in her belly, but she maintained her composure. \"Oh? Well, Baron, you could be of great service if you let the computer unlock the door. I'd like to leave, please.\"\n\nThe intruder flicked some spectral ash from his cigar to the floor. \"Non, cherie. Your husband wants some privacy with you.\"\n\n\"What? But Esek just left-\"\n\nSamedi made a harsh, mocking sound. \"Imb\u00e9cile! Not that husband!\"\n\nHe stepped aside - and a profoundly familiar scent suddenly triggered an intense reaction in Kami, as a figure stepped into view from the shadows. \"Hello again, Sugartail.\"\n\nKami's pulse trebled, as she took a step backward, her baby squirming inside as she stared with wide, unblinking eyes. \"R-R-Rmorra?\"\n\nIt was - Mother's Cubs, it was him! Smelling, looking just as he did all those years ago! The sharp-tipped ears, the chocolate-brown fur, the short tail and wide shoulders and blue-green eyes! He even wore that old Starfleet uniform with the brick-red jacket that they used to wear when- when- \"You died.\"\n\n\"Yes,\" he agreed coldly, his voice exactly as he remembered it, though it was tainted with an angry, accusing tone. \"I died... and you forgot me.\"\n\nShe shook her head, her baby protesting with restlessness. \"N-No- I never forgot-\"\n\n\"No? You swore to love me forever... but now you sleep in another male's bed... AND CARRY HIS CUB!\"\n\nKami kept stepping back, feeling energy snaking into her head... reminding her of the feeling she would get when T'Varik would initiate a mind meld. And Rmorra - Seven Hells, he seemed so real! - for all his talents, was no telepath.\n\n\"Feeling guilty, cherie?\" Samedi taunted, chuckling. \"You should, putain.\"\n\nKami steeled himself, setting up the telepathic barriers her Vulcan friend had taught her, as she forced down the emotions she first felt when she saw this vision, in favour of something less expected. \"You stupid kussik! How dare you come back now, after all this time, and show your face! After what you did?\"\n\n\"Wha- me?\" The image of Rmorra seemed taken aback. \"You married another-\"\n\n\"And why?\" she snapped. \"Because you let yourself be shot in the back on some nameless, Mother-forsaken mudball on the edge of Galaxy... over some broken pottery from a forgotten civilisation! What kind of a clueless noseblind blockheaded amateur lets that happen to him, huh? I'm glad our cub never grew up seeing for himself what an addled, limptailed little runt he had for a father! Your death was the ebst thing that ever happened to me! Esek is a hundred times the man you ever were! A HUNDRED! I'M GLAD YOU'RE DEAD! I'M GLAD!\"\n\nThe image of Rmorra stepped back, seemingly at a loss - or at least, no longer under the control of his obvious puppetmaster.\n\nWho now became the focus of Kami's attention. \"The real question is: why do you want me to feel guilt over Rmorra's death? And the others? What's in it for you? Sadism? Or something more fundamental?\" She stared at him. \"What drives you?\"\n\nSamedi glared at her contemptuously. \"Putain de chatte!\"\n\nThen he vanished, as did Rmorra's shade.\n\nThe Bump reacted, making her clutch her belly again and sit on the edge of the couch, forcing up some relaxation techniques. The door chimed, and for a moment she thought it might have been Samedi playing tricks on her, before she acknowledged the foolishness of that and replied, \"Come.\"\n\nThe door slid open and Sasha entered. \"Hey, Dad sent-\" Then she saw the distress on the Caitian female, and rushed over, dropping to one knee. \"What's wrong? Is it the baby?\"\n\nKami shook her head, her tail betraying her anxiety. \"Baron Samedi was here.\"\n\n\"What?\"\n\n\"And he conjured up an image of my first husband. An image that smelled, looked, sounded exactly like him, better than any hologram.\"\n\n\"Then how- why weren't you left like the others-\"\n\n\"I- I didn't let myself react to Rmorra's image as if it was real. I yelled at him. I insulted him. I told him... I was glad he was dead. I told him... I-\"",
        "The tears came freely now. Then the sobs.\n\nSasha held her tightly.\n\n*\n\nHrelle and T'Varik turned towards the Lounge doors. \"T'Varik, I think we can safely assume that this is not some elaborate Halloween prank.\"\n\n\"Agreed, Sir.\" She drew her phaser, indicating two places in the archway. \"I believe a sustained Level 5 phaser blast to these conduits will force the Lounge doors to open and free the rest of our crew.\"\n\n\"Sounds good.\" He raised his own phaser.\n\n\"Non, non, non, Capitaine Chatte.\"\n\nBoth officers turned at the voice, phasers raised at the appearance of the tall, tophatted figure, chuckling as he puffed on a thick black cigar. Hrelle barked, \"Who are you? What are you doing on my ship?\"\n\nThe skull-faced creature regarded them with bulging, lidless eyes. \"I am Baron Samedi. And I have come for you.\"\n\nHrelle fired, the thick beam striking Samedi dead centre -- with no effect.\n\nQuickly he adjusted the power level, nodding to T'Varik to do the same. Both of them fired again - again, with no effect.\n\nSamedi laughed. \"Stupide putain! Are you really trying to kill the Loa of the Dead? Suce ma bite!\"\n\nThey lowered their phasers, T'Varik drawing out the tricorder on her belt and scanning the figure. \"Anaphasic energy, Captain. And notice the necklace he is wearing.\"\n\nHe grunted, nodding towards the intruder. \"Why are you attacking my crew?\"\n\n\"Attacking? No, no, no, Mon Capitaine. I am judging. Or rather, their victims are judging them. Those who they have killed, or allowed to die, cry out from Beyond the Veil. And as the Guardian of the Dead, I know they cannot rest until justice is meted out.\"\n\n\"Justice?\" Hrelle snarled. \"What justice? What did Eydiir do wrong? Or C'Rash? Or Grev?\"\n\nSamedi laughed boisterously. \"They knew!\" He pointed his cigar at Hrelle. \"And you know what YOU did, pute!\"\n\n\"Me?\" He swallowed, feeling something crawling into the back of his head, unable to shake it. \"I did nothing-\"\n\n\"Liar! Your hands are caked in blood! And Bondye has sent me to see you pay!\"\n\n\"I do not know who this 'Bondye' is,\" T'Varik noted dryly, still scanning with her tricorder. \"But I am aware that you are an anaphasic lifeform, not a figure from Terran beliefs.\"\n\n\"Diable pointu!\" Samedi snapped. \"Shall we look into your past, connard? All of the cadets you sent off to die in the depths of space, or under the blade of some Klingon or Cardassian, just to further your career? How much blood do you carry, chienne laide? Well?\"\n\nT'Varik ignored him, turning to Hrelle. \"Sir, there is nothing to be gained by continuing to converse with the entity. We must free our crewmembers.\"\n\n\"Yeah. Yeah.\" He raised his phaser towards the archway again.\n\n\"Do that and I'll start beaming your little bastards into space!\" Samedi threatened.\n\nThe officers faced him again, Hrelle murmuring, \"No...\"\n\n\"Oui, Capitaine Chatte. I have control over your systems.\" Samedi chuckled, puffing on his cigar. \"And I'll start sending them to take a short, cold walk if you let them loose. Think you can save them all, gros b\u00e2tard?\"\n\nHrelle lowered his phaser.  \"What do you want?\"\n\nSamedi produced another glass of rum from nowhere, drinking from it before replying. \"Go to your bridge. Alone. Bring your weapon with you if you like. There's some old acquaintances that are waiting to see you.\"\n\nHrelle's heart raced. \"Okay. Just leave my people alone.\"\n\n\"Captain, no-\" T'Varik looked to him.\n\nHe looked back. \"Don't, Commander. He has control over the ship; we're back to Square One. Understood?\"\n\nShe stared for a moment, before finally nodding. \"Yes, Sir.\"\n\nHrelle glared at Samedi once more, before turning and heading down the corridor towards the Bridge, trying to ready himself for what he would find.\n\nAnd still not being adequately prepared for what awaited him: a ring of dead men and women, some in old-fashioned Starfleet ship uniforms, others in civilian clothes, surrounding the inner circle where the Captain's Chair sat.\n\nThey parted for Hrelle as he entered - and he saw Velkovsky's unconscious form on the floor near the helm. He rushed to her, knelt and checked her pulse, as Samedi appeared from the shadows. Anger creased the Caitian's furred face. \"Why her? What did she do to you?\"\n\nThe spectre tilted his head as he seemed to regard the unconscious woman, until his top hat threatened to fall off his head. \"There was a lover - and a rival - who died in a racer accident when she was younger. She goaded him into becoming reckless. Justice has to be met, Capitaine Chatte. For her, and for you.\"\n\n\"Justice?\" He rose to his feet, hands balled into fists. \"This isn't justice! It's some sick fantasy of yours! There's no point to it!\"\n\nSamedi blew out grey smoke at Hrelle. \"Oh, you might well say that, Mon Capitaine, considering the blood on your furry little claws. So many, many have died because of you. I could fill a fleet of ships like this with the souls of those you have sent to my realm.\"\n\n\"Balls. You're no Spirit of the Dead.\"\n\n\"Va te faire foutre!\" He threw aside the cigar and pointed a bony finger at the Caitain. \"I have crossed between this realm and my own for centuries! On Earth, and now out here, on this ship of cats and pigs and pixies and creatures better suited for nightmares! Doubt me, enfoir\u00e9? Ask them! Sit! Sit and face your victims!\"\n\nHrelle considered his options, accepted he had none, and sat.\n\n\"Captain?\" one of the dead began, stepping forward. Hrelle looked at him, knowing the tall, skinny, fair-haired Terran male even in his dead, irradiated state. \"Hello, Beanpole.\"\n\nFirst Officer Nathan Labine snarled, his Cajun accent sounding like it was dragged through a New Orleans graveyard. \"You remembered, Captain. I'm touched. Too bad you didn't remember other things - like your responsibilities to protect your crew.\"\n\nThen there was Communications Officer Brigid O'Reilly, dead eyes smouldering. \"The Bel-Zon raped me, Captain. Tortured me. Then when they were done, they dumped me into their disposal unit like trash. Because of you.\"\n\nThe Andorian Navigator Darath Shekrev stabbed a rotted finger at Hrelle. \"It was always supposed to be my final mission, Captain - but I was supposed to survive and return to my homeworld to marry and start my own business! Instead I suffered and died!\"\n\n\"We all did,\" Tactical Officer Miles Ellerton added. \"Because of you.\"\n\n\"All 130 of us, Captain,\" Science Officer Mohammed Rabin clarified, icy tears streaming down a gaunt cold face. \"Because of you.\"\n\nOther voices joined, all accusing. All correct. Hrelle knew them, of course: the crew of his former ship the Furyk, called out on a false distress signal, ambushed by the criminal organisation the Bel-Zon, attacked with spatial charges and aceton assimilators that pumped hard radiation into the ship, killing those the Bel-Zon hadn't abducted and tortured, Hrelle included, for information on how to raid Station Salem Four for its store of trilithium.\n\nAnd of course Hrelle remembered. How could he not? It had been the start of six long, terrible years of torture and slavery for him. But at least he came out of it alive. None of his crew did. And though he knew they weren't real, that they were edified by Samedi to torment him for some insane reason, he couldn't help but react on an emotional level, and let the guilt gnaw at him.\n\n\"And don't forget us, Captain.\" A new voice spoke up, a spectre in civilian clothes. \"In life I was Zefram Mikkelsen, a maintenance worker on Salem Four. I was a husband, a father. I was alive, and happy. Then you let the Bel-Zon raid the station. I was caught in the crossfire. It was my oldest child's birthday the next day. They had a funeral instead.\"\n\n\"I was there, too,\" another vision contributed. \"We counted on Starfleet to protect us. We counted on you, Captain!\"\n\n\"Do you know how much suffering your failures have cost?\" another demanded.\n\nHe knew. And if he hadn't, it was all being spelled out to him now. And more and more voices followed: angry, sorrowful, frustrated, condemning.\n\nAnd rightfully so. Each one struck him like a nail hammered into his skin. There was no arguing or denying it. He had failed them. He had failed them all.\n\nIt was a mob. A dead mob, crying for justice on behalf of their lost loves, their lost lives.\n\nHe was drowning.\n\n\"Esek,\" spoke a new, totally familiar voice.\n\nHe spun in his chair, heart racing, nose twitching from a scent he had forgotten. His throat was desert dry. \"N-No...\"\n\nHannah Eismann Hrelle stood behind him. Every part of her was just as he remembered: the scent, like tanglewood and trilium, the burr of honey-blonde hair, the short nose, the winter-blue eyes and dimpled chin and freckles and the way her combadge would never quite hang right on her jacket and how she would stand leaning on her right foot and jut out her chin when she was angry... like now. Mother's Cubs, no- please, no, not her, not this-\n\n\"Yes, Papa Bear,\" she goaded sharply. \"Me.\" She stepped around the other dead people, never taking her cold, dead eyes off him. \"You can't possibly leave me out of this, can you? Your wife? Your Beloved? The one you swore to love and cherish and protect forever?\"\n\nHe felt his claws extend, dig into the arms of his chair as he clutched it for all his life. \"H-Hannah...\"\n\n\"I WAS GOING TO HAVE YOUR CHILD!\" she screamed\n\n\"P-Please...\"\n\n*\n\nT'Varik had reached Engineering when her handheld communicator chirped. \"T'Varik here.\"\n\n\"Commander, this is Sasha. I'm with Kami. Baron Samedi was here.\"\n\nThe Vulcan stopped. \"Is she alright?\"\n\nNow Kami's voice broke in. \"I'm fine, T'Varik, but we've been doing research, working out what the Baron wants.\"\n\nT'Varik proceeded to the panel she wanted. \"It is an anaphasic lifeform, Counselor-\"\n\n\"We know, they're very rare, but there have been documented cases that all share similar traits: the lifeforms are all energy-based, can usually create physical forms and objects, at least for short periods... and they subsist on emotions.\"\n\n\"Indeed?\"\n\n\"There was a case, involving one that lived on fear and terror; it survived for centuries on Earth and other planets, possessing people to commit murders under notorious identities such as Jack the Ripper, Beratis and Kesla. Another lived on hate and aggression; it had taken over the original Enterprise and contrived to trap Klingons onboard to fight Kirk's crew to feed itself, even creating swords for them to use on each other. A third was found to need lust, and the Daedalus discovered it being worshipped as a fertility god on Nabron III-\"\n\n\"And this one seems to require guilt,\" T'Varik concluded, opening a panel and peering inside.\n\n\"Yes,\" Sasha confirmed now. \"The more intense the better, even if it means the victim is driven to self-destruction. The necklace has a reported history over the centuries of inducing its owners to see visions and eventually commit suicide; we are concluding that Samedi somehow exists in a dormant state in the necklace, arising when it detects suitable... food. Presumably it had pushed Ms Martis to kill herself.\"\n\nT'Varik stopped. \"Counselor... I would not normally intrude on confidential matters, but what is your assessment of the Captain's present psychological state?\"\n\nThere was a pause before a response came. \"Why are you asking?\"\n\n\"Samedi threatened to begin killing crewmembers if Captain Hrelle did not face him alone on the bridge.\"\n\n\"And you let him go?\"\n\n\"Samedi has locked us out of the ship's controls; Captain Hrelle gave me a surreptitious order to regain control through the Square One Protocols. We must regain control and free the rest of the crew. Unless you believe the Captain is in imminent danger?\"\n\n\"I- Samedi doesn't seem able to actual control people, but he can tap into memories to create these illusions. Eydiir, C'Rash, Grev had guilt in their pasts, but maybe it was only enough to nourish Samedi, and put them into their current comatose states. If the guilt is strong enough, intense enough-\"\n\n\"Have you discovered a means of stopping Samedi?\"\n\n\"We're still looking.\"\n\n\"Keep me apprised. T'Varik out.\"\n\nShe returned to her task, preventing her mind from calculating the odds of Captain Hrelle's survival. He had undergone much. But he was strong. He would survive.\n\nIt was hope. Illogical. But she accepted it anyway.\n\n*\n\n\"Did you see the pictures of my body, Esek?\" the image of Hannah taunted. \"The disruptor burns that punched through my body as the Bel-Zon thieves raided us? Did you know the pain I suffered? Because of you?\"\n\nHe thought he could handle this. He thought he had already faced his inner demons and conquered them. But he was wrong. It was something else to see them standing around him, fresh, strong, unignorable-\n\nSamedi stood nearby, chuckling. \"Oui, Capitaine Chatte. No matter where in the Galaxy you might flee, you can never escape your past. It always follows. Like the tip of your tail.\"\n\n\"Look at me, Esek!\" Hannah demanded, capturing his unwilling attention once more as she indicated the rest of the dead. \"We suffered because of you! We continue to suffer! There is no peace for us while you live!\"\n\nSamedi puffed on his cigar. \"No peace, Chatte. Unless you finally do what you should have done years ago.\"\n\n\"D-Do?\"\n\n\"Oui.\" Samedi leaned in, leering eagerly. \"This is your chance to make amends. And your chance at redemption literally lies in your lap.\"\n\nHe glanced down... to see his phaser in his lap.\n\nHe picked it up, held it tentatively.\n\n\"Please, Esek,\" Hannah urged. \"I've suffered long enough! We all have! You don't have the right to keep living, to have a family and be happy! It's not fair!\"\n\n\"She's right,\" Samedi agreed. \"End it.\"\n\n\"End it...\" the other dead chanted in unison, their voices rising as they repeated the demand. \"End it. End it! END IT!\"\n\nHrelle nodded to himself. It would be easy...\n\nThen he looked up at Samedi. \"Kiss my furry ass.\"\n\nThe spectre drew back as the chanting stopped. \"What?\"\n\n\"You heard me.\" Hrelle rose to his feet, phaser still in hand. \"Nice try, Bonehead. You dredged up a level of guilt in me that I didn't think still existed. And if you'd got me a year or two ago, I might have succumbed, like so many other of your victims, I'll bet.\n\nBut I'm a different man now. I've accepted what I've done, what I cannot change. I have a new wife, a child on the way, a family, a ship and crew. I have responsibilities, and I cannot abrogate them to ease my own conscience. And I've learned that guilt is a useful tool if it helps you improve yourself or serve justice; killing myself would serve neither purpose.\"\n\n\"It would serve justice!\" Samedi insisted. \"Look at them! Your victims!\"\n\n\"No,\" Hrelle denied calmly. \"They're illusions, pulled by you from my mind for some dark purpose. But they're not real.\" He glanced at the image of Hannah. \"If you had really been my first wife, you would have asked about Sasha.\"\n\nThe phantasm started, as if the thought had only just occurred to her. \"Sasha?\"\n\n\"Oh, you remember your own daughter now, do you? She's alive and well and serving onboard this very ship. If I had done the deed and phasered my head off, would you have wanted her to find my body? To have her suffer? What about my new wife? Would you want her to find me?\"\n\nNow she reacted, speechless but clearly conflicted.\n\nHe nodded. \"Yeah. Whether you're really her spirit or just a construct from my memories, in either case, Hannah would be thinking of others before herself.\"\n\n\"Captain,\" Samedi growled. \"I will have what I deserve.\"\n\n\"Oh, I hope so, bubulah, because what you deserve is a Galaxy-sized ass kicking.\" He bared his teeth. \"Is this what you have planned for the rest of us? To sail through the Galaxy being tortured until we succumb to self-destruction?\" He glanced back at an increasingly disoriented-looking Hannah. \"He'll do this to Sasha, too. You know this.\"\n\nHannah shook her head. \"N-No- I won't-\"\n\nSuddenly all power, all lights, went out, and for a moment, Hrelle thought he had been transported away, or even killed. But then they returned, this time at full power, and Hrelle knew that his message to T'Varik was understood. \"Computer: Emergency Override One, Senior Officers Only!\"\n\n\"Acknowledged.\"\n\nThen Hrelle glared at Samedi. \"It's over, Bonehead. You're no longer controlling my ship, we are. And you're not pushing me to suicide with guilt. I have too much to live for.\"\n\nSamedi spat away his cigar like a petulant child, cursing incoherently. But then he stopped, hissing with delight. \"Oui. Oui, Mon Capitaine. You do.\"\n\nHe vanished, as did his zombie horde - except, inexplicably, Hannah.\n\nHe looked to her. \"What was that about?\"\n\nShe frowned - triggering an intense memory in him of the real Hannah having the same expression whenever she was confused about something, and didn't like the feeling - until she paled. \"He's going to kill your child!\"\n\nHrelle was racing towards the doors. They didn't open quickly enough. He was certain he felt something crack in his shoulder as he burst through the still-narrow gap.\n\n*\n\nKami set aside her remaining tea. \"Thanks, Sash.\" She rose to her feet, feeling better now. \"For everything.\" She approached the girl. \"Perhaps we should go help the others now?\"\n\nThe girl frowned. \"Dad said you should stay here, for your own safety.\"\n\nThe Caitian shrugged. \"Samedi's already proven I'm not safe staying in here, didn't he?\" The lights went out in the room, with a distinct beeping sound. \"What in the Seven Hells-\"\n\n\"It's a Square One Protocol,\" Sasha identified. \"They're regaining control of the ship systems-\"\n\nThe lights returned.\n\nSamedi was between them.\n\nHe smacked Kami across the face with inhuman strength, sending her sprawling to the floor. Sasha swung out herself - but he caught her hand, sending a pulsing charge of energy through her arm and into the rest of her, making her cry out and collapse, unconscious.\n\n\"Bien, Bien,\" he noted to himself. \"I can deal with you too, Ma Petite Pute. Kill his whole family.\" He looked to Kami. \"But first, Mama Chatte...\" He knelt beside her, grinning as he placed his hands on either side of her belly, preparing to crush the child in her womb.\n\nInstead, as he touched her... he screamed.\n\nHrelle arrived in time to see Samedi propelled backwards as if struck by a meteor, his very form disintegrating. Hrelle kept as much control as he could he knelt and checked his wife's pulse, hitting his combadge and barking, \"Medical Emergency to my quarters! NOW!\" He checked Sasha next, his heartbeat only beginning to slow down as he confirmed they were both not seriously hurt.",
        "Kami was recovering, reacting instinctively until she realised who was touching her. \"Esek!\" Then she clutched him tightly. \"He was- He was here-\"\n\n\"I know,\" he murmured, silently mouthing prayers of thanks that nothing more had happened. \"I know. Something happened. I- I don't know-\"\n\n\"I do,\" Hannah admitted.\n\nBoth Caitians turned to see the image kneeling beside Sasha, gazing with a curious mix of emotions at the young woman, gently propping her up into a sitting position on the floor, her back against the side of the couch, drawing the hair away from her face - and then drawing herself away as the girl began to stir.\n\n\"The Former Mrs Hrelle, I presume?\" Kami enquired, the tone in her voice not quite matching the lightness her words intended.\n\nHannah looked back. \"The Current Mrs Hrelle, I presume?\"\n\n\"Did you stop Samedi?\" Hrelle asked.\n\nHannah shook her head. \"Your son did.\"\n\n\"What?\"\n\nA wistful smile crossed the spectre's expression. \"Even at such an early stage of development, he could sense his mother was in danger, and his instincts to protect her blossomed. But all he could do was give her his love. A fierce, primal, unyielding love, untainted by guilt or doubt or fear, something that could not be twisted or manipulated or corrupted.\n\nTo a creature like Samedi... that was pure poison.\"\n\nHrelle gasped, unable to fully grasp the implications, helping Kami and himself back to their feet. \"Where is he now?\"\n\nHannah looked to a corner of the quarters and nodded. \"He fled back into the necklace; it's a housing to maintain his unstable anaphasic state. It's over there. You need to destroy it, completely. And now, before he regains his strength.\"\n\n\"How can you be helping us destroy him?\" Kami asked curiously. \"If he creates images like you to use against us-\"\n\n\"I'm- I'm not sure,\" Hannah admitted, looking to Sasha again, a more familiar maternal expression eclipsing now as she stroked the girl's face. \"Maybe because there's two people onboard who remember me as I was? I don't know.. and you don't have time to find out much more.\"\n\nThen she drew back as Sasha opened her eyes, looking pained, confused... and on seeing the image of Hannah, a rapidly-growing realisation. \"M-Mom?\"\n\nWhen Hrelle saw his child begin to panic, he went to her, helping her up and holding onto her. \"It's okay, Sash, she's- she's on our side. She's... She's not really your mother...\"\n\n\"No,\" Hannah confirmed, a sad longing smile lifting her features. \"But I wish I was. If I were, I'd be telling you so many things right now...\"\n\n\"Why don't you?\" Kami suggested gently, sympathetically, looking to the girl. \"Sasha, you never had a chance to say goodbye to your real mother, and I know that was always something that you regretted.\"\n\nSasha seemed to struggle to take in what was happening; Hrelle understood her confusion and conflict, having had to fight his own instincts and keep reminding himself that this was not really the woman he knew and loved, no matter what his senses told him. He set a comforting hand on her shoulder, as she finally swallowed and murmured, \"Y-Yes-\"\n\nAfter a heartbeat, the image nodded. \"Sasha, sweetheart, I am so sorry I wasn't around to be your mother after that terrible day. And I am so proud of what a remarkable young woman you've become despite my absence.\" She reached out, tears streaming down her face. \"And I am so eager to see you go out there and have the best life you can have. And I will always love you.\"\n\nTears ran down Sasha's face now, and she drew away from Hrelle and tentatively approached, reaching out, as if Hannah were a bubble that might burst if touched.\n\nThen, as if the floodgates opened, she embraced her tightly, fiercely, sobbing.\n\nThe quarters door opened, and Dr Ling and T'Varik entered, stopping at the scene, and saying nothing at Hrelle's silent urging.\n\nBut then Hannah tensed and looked to Hrelle. \"He's pulling me back, regaining his strength-\"\n\nHe understood, drawing his phaser, adjusting the setting and aiming in the corner towards the necklace.\n\nBut then he looked back at her, suddenly, unexpectedly pausing... taking her in one last time. \"I- I never said goodbye to you, either.\"\n\nHannah smiled, indicating Kami. \"Yes, you did, Esek. And I'm happy for you. For you both.\"\n\nHrelle forced himself to look away and fire. The necklace dissolved under the sustained orange beam.\n\nAs did Hannah, leaving Sasha standing there, arms curled about nothing. She tried to compose herself, failing, until Kami took the girl in her arms.\n\nHrelle lowered his phaser arm, looking to Ling and saying gently, \"Take them both to Sickbay when they're ready and examine them.\" To T'Varik he added, \"Report.\"\n\n\"The Square One Reset Protocol was obviously successful; I have ordered a full stop and diagnostic of the ship's systems -- once we free the rest of the crew.\"\n\n\"What? I thought once we regained control-\"\n\nShe raised an eyebrow. \"Apparently they tried to free themselves from within - and managed to damage the door mechanism.\" More softly she added, \"I assume that you managed to discover the means of destroying Samedi?\"\n\nHe nodded, handing her back the phaser. \"With a little help from the Missus...\"\n\n*\n\n\"USS Surefoot-A, Captain's Log, Stardate 44376.81, Esek Hrelle Commanding: those affected by the actions of the anaphasic lifeform have made a full physical recovery, with little or no memory of their experiences with Baron Samedi. Not that they won't still have suffered emotional or psychological effects, of course. Fortunately my wife, who is the best Counselor in Starfleet -- and I will fight anyone who tries to say different, and that's no lie -- is helping them. And herself.\n\nWe've placed the body of Riga Martis and her belongings in a stasis unit, returned it to her ship and set it on autopilot to Starbase 154 for processing, with a warning to treat any other items they might find onboard very, very carefully.\n\nMy curiosity as to how an alien anaphasic lifeform could end up squatting inside a necklace on Earth 500 years ago is eclipsed with the horror of how many lives it might have pushed into suicide with its hunger for guilt and self-harm. And yet, for all the suffering it must have caused over the centuries, it still inadvertantly gave me a chance to face my own guilt again... and still rise above it. And it gave my daughter a chance to hold her mother, or at least a reasonable facsimile of her, one last time. Hannah may have only been an amalgam of other people's memories, but then maybe you can say the same thing about the rest of us?\"\n\nHrelle entered his quarters, silently; it was late in the evening, he had been working longer than expected because of some alarming reports received from the Federation-Cardassian border, their next destination, and he knew Kami would be in bed and didn't want to disturb her. He undressed in the living room before entering the bedroom, welcoming his wife's scent in the enclosed space.\n\nEven in the darkness, his eyes let him see her shape along the mattress, lying on her left side, facing the door. But rather than walk around to his own side, he drew closer, kneeling beside her, seeing her right arm draped over her belly, one hand on the Bump. He smiled and drew even closer, feeling her heat, taking in the scent of her furry belly... and hearing his son stir inside as the unborn cub sensed his presence, identified it... and settled down again.\n\nHrelle knew he shouldn't risk waking his wife, but he couldn't resist... \"My little Warrior Prince,\" he whispered to the Bump. \"I know it's late, and we should both be asleep. But if what's happened to us has taught me anything, it's that we shouldn't put off telling those we love how we feel.\n\nSo I'm telling you now, how so proud I am of you, for what you did to protect your mother. We both love you, so very much. And though it's tradition not to reveal the name chosen for a cub until they're born, you are too brave, too wonderful, just to be known as Bump.\"\n\nHe leaned in closer, until his muzzle almost touched his wife's skin, purring. \"Your name is Misha. It's made up of the names of your big brother Mirow, and your big sister Sasha. But don't tell anyone else just yet, okay?\" He smiled. \"Now, go to sleep.\"\n\nHe rose, padded around and climbed carefully into bed, still trying not to disturb Kami -- until she reached behind her and pulled his arm over her to join his hand with hers onto their cub. \"You're as soft a tribble. Did you know that?\"\n\nHe smiled again as her tail flicked against his nethers. \"Keep that up, and you'll find that's no longer the case...\"\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... STAR-CROSSED"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fanfic",
        "fan fiction",
        "science fiction",
        "federation",
        "caitian",
        "alien11111",
        "starfleet",
        "surefoot",
        "samedi"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-16-day-of-the-dead"
}