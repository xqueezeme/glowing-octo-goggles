{
    "title": "I Will Love You Forever Pt. 2 Ch. 11",
    "pages": [
        "Ty sat outside of the house and waited. His heart raced at the thought of what he was about to do. Murder wasn't new to him, but his victim had been an adult. He was only just realizing that he hadn't thought about the children. He was certain that Lawrence wouldn't have wanted them hurt, but what was he supposed to do with them? The idea of taking them back to South Carolina with him crossed his mind and was quickly discarded. It presented too many problems.\n\nFor one, it would draw too much attention. A single man with two children would be remembered. Secondly, they wouldn't go with him willingly. \n\n\"Damn it!\" he swore disgusted that he hadn't planned better. He had let the news of Lawrence's death and Becca's leaving cloud his judgment. After several more minutes of self-debate, he decided to leave and let someone else deal with Sally and the children. Ty started the car, put it into gear and drove away.\n\nSeveral seconds later, a black sedan pulled out from the driveway and began to follow Ty's car.\n\n**********\n\n\"Dinner was delicious!\" Charles exclaimed as he leaned back in his chair and patted his full stomach.\n\n\"You are welcome.\" Hana replied with a smile. \"Hattie is responsible for the apple pie.\"\n\n\"All of it was delicious.\" Charles replied. \"Miss Hattie, do you think that I could have the recipe for that pie?\"\n\n\"I spose I could give it to you.\" Hattie said reluctantly. \"It's a recipe that me and Ralph came up with... I've never given the recipe out.\"\n\n\"I understand.\" Charles replied. \"If you should decide to share, I would love to have the recipe.\"\n\nNick stood up to clear the table.\n\n\"We'll do it.\" Hattie said stopping him. \"You men have things to talk about.\"\n\nThe men went to Nick's office and shut the door.\n\n\"I wish that you had called me sooner.\" Charles said. \"I was lucky to get a car over to Will's house.\"\n\n\"You're right.\" Nick conceded, \"But he's supposed to be here tonight.\"\n\n\"You're making an assumption.\" Charles countered. \"You're assuming that he's going to keep to his routine.\"\n\n\"Why would he change?\" Will asked.\n\n\"Think about it,\" Charles replied, \"If we know that Goodman is dead, maybe he does too. He may not be thinking or acting rationally. He could also be planning to complete Goodman's mission.\"\n\nNo one said anything for several seconds.\n\n\"As I said,\" Charles continued, \"There's a car at Will's house. If your man shows up or makes any moves, he'll be stopped. If he leaves, he'll be followed.\"\n\nNick looked at the clock and then back at Charles.\n\n\"He could be here already if we were to follow your logic.\" He said.\n\n\"This is why our good friend Briscoe is sitting in a car a few houses down.\" Charles said.\n\n\"Briscoe?\" Nick asked. \"How'd you pull that off?\"\n\n\"I called him after I talked to you and he volunteered.\" Charles replied, \"But let's go over this plan of yours.\"\n\n*********\n\nTy circled around the block at a normal speed and then again driving slower. He took note of Nick's car in the garage and thought it odd. The car was usually in the garage with the door down. After thinking about it, he decided that Nick was probably going out again.\n\nIf that were the case, it would make things easier in some ways, but more difficult in others. He had intended to kill the Jap woman too; but it looked as if that wasn't going to happen. He would kill Nick, get away and take stock of things. There was still a chance that he could visit Lawrence's ex-wife and her new husband although the children remained a problem.\n\nAs he waited, Ty checked his gun and began to plan his trip back to South Carolina just in case he had to leave California. As soon as he killed Nick, he would go to a cheap hotel and lay low. His suitcase was in the back seat of the car and the money that he saved in anticipation of Lawrence's arrival was securely in his wallet. All he had to do was bide his time.\n\n*******\n\nWill was the first one to see the car sitting across the street from the house.\n\n\"He's here, but where's Briscoe?\" he asked.\n\n\"I told him to stay put unless our man tried something.\" Charles replied. \"Are you ready to do this?\"\n\nCharles and Nick left the house via the kitchen. They cut through the neighbor's yard and circled around to the street. They could see Ty's head silhouetted in the street lamp. Charles and Nick nodded at each other, and made their way down the street; their guns in their hands.\n\nThey were almost to the car when Ty caught sight of Nick in his side view mirror. Panicked, he tried to start the car. Finally, it started. He shifted it into gear and was about to pull off when the passenger door opened.\n\n\"Turn the engine off.\" Charles said his voice calm. \"And keep your hands where I can see them.\"\n\nHe pressed the barrel of his gun against Ty's head. \"Do it.\"\n\n\"You heard him.\" Nick said, his gun also aimed at Ty's head.\n\nTy moved his hands to the steering wheel as he silently cursed.\n\n\"Get out of the car.\" Nick said stepping back.\n\n\"Look fellas...\" Ty started to say.\n\n\"Get out of the car.\" Charles said repeating Nick's order.\n\nJohn came up from behind the car and stood next to Nick.\n\n\"Everything alright?\" he asked as he returned Ty's glare.\n\n\"We've got it under control.' Nick replied not taking his eyes off Ty. \"Our friend is going to get out of the car so that we can have a nice chat about what he's doing here.\"\n\n\"I have a better idea.\" Charles said. \"Why don't we take him to the office? Briscoe can follow us over; John can stay here with Hana and Hattie and Will can go home.\"\n\n\"Good idea.\" Nick said as he opened the car door. \"I wonder what goodies he's got.\" He added.\n\n\"I got it.\" Charles replied smiling.\"\n\n\"Look fellas,\" Ty said, \"I think that we have a misunderstanding here.\"\n\n\"I don't think so.\" Charles replied, \"But we can clear it up at the office.\"\n\nBriscoe pulled up behind them and got out of the car. \n\n\"What's the plan?\" he asked as he peered into the car at Ty and Charles.\n\nNick explained the plan, to which Briscoe gave a ringing endorsement,\n\n\"I've always wanted to see the inside of that building.\"\n\n********\n\nTy thought about making a run for it, but changed his mind. He wouldn't make it and he wasn't that much of a believer that he was willing to die. He sat with his hands on the steering wheel and waited for further instructions. He had no illusions about his future and wondered what he could do to change it.\n\nBefore long, he was sitting in the back seat with Nick on one side and Charles on the other. Briscoe drove the car leaving his car in front of Nick's house. Ty stared at the back of Briscoe's head wishing that he could blow it off.\n\nAs he watched the palm trees speed by, he thought about Becca. It was just as well that he was rid of her and the brat. He had a feeling that it wouldn't have ended well for any of them. He hadn't lied to Becca when he told her that he had gotten away with murder. As far as he knew, the body had never been found. Even if it had been, there would have been no proof that he had been the one to kill her.\n\nThe her had been his wife Ellen London. She had been a pretty, petite blonde whose family while not poor; was far from rich. The money didn't matter; he would have loved her even if she was as poor as he was. No matter how bad his day had been, all she had to do was smile at him and the worries of the day disappeared. He had once told her that she was the love of his life and he had meant it.\n\nEven now, it seemed impossible that he had been angry enough to kill her. If only he had taken the time to listen to her explanations she wouldn't be dead. Ty closed his eyes and allowed the memory to wash over him.\n\n888888\n\n\"Hey Ty!\" Caleb Greene called out to him. \"What's Ellen doin in the nigger part of town?\"\n\nTy ignored the question. He had no use for Caleb who seemed to delight in causing trouble. He knew that Ellen went down there sometimes to do charity work, but it wasn't Caleb's business. Every day Caleb asked the same question except for one day, he added something.\n\n\"I heard that your missus goes down there to see a Negro... what's the problem? You can't...\"\n\nThat was all Caleb got out before Ty had him pinned against the wall.\n\n\"Shut your fucking mouth! You don't know what you're talking about!\" Ty screamed into the man's face.\n\nIt had taken three men to pull Ty off Caleb who had dropped to the floor gasping for breath. As the weeks passed, there was more talk about Ellen and the unknown Negro male. Instead of asking for an explanation, Ty tried to trap Ellen in a lie. He remembered that day as if it was yesterday. June 6, 1944.\n\nHe had gone home in a mood. The whispers about Ellen and her alleged Negro lover had spread through the workplace. Part of him knew that it wasn't true, but the seeds of doubt had been planted. Whenever he asked Ellen about her day, she told him about it without hesitation.\n\n\"So who's the nigger male you been seeing?\" he asked her point blank.\n\nEllen had paled slightly, but answered the question.\n\n\"That would be Norman, Why do you ask?\"\n\n\"Are you fucking him?\" Ty asked. His voice was deceptively calm as he asked the question.\n\n\"What? Of course I'm not sleeping with him!\" Ellen protested appalled at what Ty was suggesting. \"Where would you get such an idea?\" she asked.\n\n\"Why haven't you mentioned him before if there's nothing going on?\" Ty demanded. \"You and that nigger are the talk of the damned town.\"\n\n\"Ty, you don't....\"\n\n\"I don't what? Understand? Explain it to me.\" Ty said losing his temper.\n\n\"It isn't what you think.\" Ellen replied trying to remain calm. She knew that Ty had a temper, but she had never experienced it before. \"I'm not sleeping with Norman or anyone else with the exception being you.\"\n\nTy wanted to believe her. She had never lied to him before, but there was another issue. Ellen had been seen with a black girl who was obviously mixed. People were speculating that the girl was Ellen's daughter and that the nigger was the father.\n\nHe had actually made a point of going to see the girl. The resemblance was unmistakable. The girl looked to be around five years old which meant that Ellen hadn't been unfaithful, but she had fucked a black man and in his mind, that was worse than being unfaithful.\n\n\"Who's the kid?\" he demanded.\n\nEllen's face went deathly white as Ty took another step toward her. Before she could say anything, Ty backhanded her sending her sprawling to the floor. Blood ran from the side of her mouth as she scooted backwards trying to get away from him.\n\n\"Ty let me explain!\"\n\n\"There's nothing to explain.\" He replied. \"You spread your legs for a nigger and had his brat! Did you think that I wouldn't find out?\"\n\n\"NO! Listen to me!\" Ellen begged even as Ty began to kick her using every ounce of his considerable strength.\n\nHe kicked her until he got tired. He then picked her up by her hair and began to pummel her in the face with his free fist. When he finally stopped, he dropped her to the floor, kicked her again and poured himself a glass of water. He looked Ellen as he drained the glass and frowned. He sat the glass down, stared at her for a few more seconds and walked over to her.\n\n\"Get up!\" he said as he kicked her foot.\n\nWhen she didn't move her harder and called her name. Then he realized that she wasn't breathing. He hadn't meant to kill her but there she was lying on the floor dead.\n\n\"Fuck!\" he hissed. He sat at the table debating what he should do. It wouldn't be long before her family began to wonder about her. But first, he had to get rid of the body before anyone showed up. He ran down to the cellar, grabbed a tarp and some twine and sprinted back up the stairs.\n\nAs quickly as he could, he wrapped Ellen's body in the tarp, tied the tarp with twine and laid it against the wall. When it was dark enough, he carried the bundle to the car and unceremoniously dumped it into the back seat.\n\nHe drove far out of town, past the last farm and parked just outside of the dense woods. After dimming the lights of the car, he got out, grabbed hold of the tarp holding Ellen's body and yanked it out. He looked around, hefted the bundle over his shoulder and walked deep into the woods. He froze when he thought he heard someone. After listening for a minute, he dropped Ellen's body to the ground and walked away.\n\nHe had mixed feelings about what he had done. He felt sorrow, anger and a little remorse and wondered if maybe he shouldn't have given her a chance to explain. \n\n\"Too late for that.\" he muttered. \n\nBy the time he got home, he had come up with a story good enough to at least buy him enough time to make some decisions. He went to work the next day and tried to keep out of trouble. It wasn't to be. Caleb taunted him until once again; they had to be pulled apart.\n\nTy wouldn't find out the truth until weeks later, but by then, it didn't matter. He had reconciled himself to the fact that he had killed the love of his life. Ironically, the truth had come from none other than Caleb. Ellen's family was still looking for her; the police had questioned him and finally let him go.\n\nThe one person who hadn't left him off the hook was Ellen's brother Dean. He had been injured in the Pacific arena and had been honorably discharged. Dean had never liked Ty and didn't care who knew it including Ellen. \n\nDean had wasted no time in finding Ty and letting him know what he thought.\n\n\"I know that you did something to her. She wouldn't have left like that!\"\n\n\"Maybe you didn't know your sister as well as you thought you did.\" Ty retorted. \"I happen to know that she liked dark meat.\"\n\n\"Liked?\" Dean asked. \"What do you mean liked?\"\n\nTy silently cursed at the small slip, but recovered.\n\n\"She isn't here is she? Let me fill you in on a few things. Your sister was fucking a nigger before I met her and she had his brat. I saw it myself.\"\n\n\"What in the hell are you talking about?\" Dean asked.\n\n\"The girl...\"\n\n\"Melanie? What about her?\" Dean asked.\n\n\"You know about this?\" \n\nDean suddenly became secretive and changed the subject back to Ellen.\n\n\"If I find out that you've hurt her, I'll hunt you down and kill you.\"\n\nThe two men exchanged a few more words before Dean left. The day after the confrontation, Ty went back to work. As always, Caleb was waiting for him, but not to taunt him as usual.\n\n\"We have to talk.\" Caleb said. \"It seems that I owe you an apology.\"\n\nTy didn't want to hear anything that Caleb had to say, but the man had been insistent. He hounded Ty until he gave in.\n\n\"What do you want?\" Ty snapped.\n\nCaleb hesitated, looked around to see if anyone was within earshot; and began to tell Ty what he knew.\n\n\"That kid wasn't hers. It belongs to her brother Dean. She was helping the girl's mother while Dean was away.\"\n\n\"How do you know?\" Ty asked as a sickening feeling settled in his stomach.\n\nThe sickening feeling gave way to full blown nausea as Ty listened to Caleb talk.\n\n\"I heard it from Darlene Miller. She was engaged to Dean, but broke it off when she caught him with Carolyn Percy; the girl's mother. She forgave him, but he was caught again. Dean finally admitted to Darlene that he was in love with Carolyn and that he was going to take her north.\"\n\n\"Why did she tell you this?\" Ty asked.\n\n\"Let's just call it pillow talk and leave it at that.\" Caleb replied. \"Anyway, the war started and Dean enlisted. It interrupted his plans to take Carolyn away. By this time, Carolyn is knocked up with his kid. He asked Ellen to help Carolyn with the baby until he got back.\"\n\n\"How does Darlene know this?\" Ty asked.\n\n\"She watched, listened and remained friends with the family. Especially Ellen. They were friends before Dean and she became an item. Ellen knew how she felt about the Negroes but thought that their friendship would supersede the politics between them. Ty, Ellen didn't sleep with that black man. The man is the kid's uncle.\"\n\nTy was speechless. He had killed his wife for nothing and it was Caleb's fault. Just as he raised his hands to grab Caleb, someone walked in saving Caleb's life. The rest of the shift passed in a blur as Ty tried to deal with what he had done.\n\nIt was time to leave South Carolina before Dean made good on his threat. He left work, went home, packed and walked away leaving the house unlocked.\n\n8888888\n\nHe found it hard to believe that a mere two years had passed since he killed Ellen. After he left South Carolina, he became involved in a variety of illegal activities including armed robbery. It was in prison that he met Lawrence and became a loyal follower.\n\nIn retrospect, he realized that he should have left and come back another time. There had been no rush to kill anyone. Once again he wondered what he could offer the agents that captured him. He decided to tell them everything in exchange for being sent to a minimum security prison.\n\n*********\n\nPatricia sat in the back yard of Hiroshi and Dai's home enjoying the fresh air and longing for home. There was only one thing that she wanted more than going home and that was for the issue with Andrew Kelly to be resolved. \n\nShe understood what Kenji was saying and even agreed, but she didn't want him to be the one in harm's way. They had talked of little else since he decided to return to school with an agent posing as a med student. She still tried to talk him out of it even though she knew that it was pointless. His mind was made up.\n\nThe agent who was going to accompany Kenji and Joel had already come to the house and introduced himself.\n\n\"My name is Peter Frain. I'll be attending classes with you and Joel until we apprehend Andrew Kelly.\"\n\n\"I don't mean to be rude.\" Patricia said, \"But these are medical students, won't you stick out?\"\n\n\"That's a good question.\" Peter said not in the least bit put out. \"I am a medical student that got a little sidetracked by the war. I'll actually be getting college credit for doing this. I want you to know that the safety of your husband and Joel is my first priority.\"\n\nPatricia did have to admit that she felt a little better after meeting the agent, but she was still afraid. She wondered how things were going as far as capturing the man who had been watching Will and Nick. She worried for all of them, but especially her father.\n\nHe wasn't as young as he used to be and in Patricia's opinion, he sometimes forgot that not so insignificant fact. Neither her or her mother had tried to talk him out of it; he wouldn't have listened and would have gone anyway.\n\nShe closed her eyes and listened to the sounds of the night and wished for more peaceful times. In her mind, she, Kenji and the children were in another place and time where they could be exactly what they were. A family that deeply cared for and loved each other without worrying about being in danger. She was so deep in her thoughts that she didn't hear Kenji come into the yard. She didn't know he was there until he touched her.\n\n********\n\nKenji finished reading to Ralph and Marie and went in search of Patricia. He knew that she was afraid, but he couldn't back away from this. If he did, Andrew Kelly would always remain a threat. He knew that there would be others, but Andrew was the only one who had openly dared to threaten his family. He was glad that Peter had stopped by; it made all of them feel better. Peter planned to stop by the following day to go over plans for class.\n\n\"I want Patricia and Penny here as well.\" He said. \"I want them to hear the plans. It may put them at ease and they may have some ideas.\"\n\nKenji stood in the doorway and watched Patricia for several minutes before going to her. She was every bit as beautiful as the day that he first saw her if not more so. Her courage and grace never ceased to amaze him even after all of this time.\n\nAs he walked toward her, he decided that they wouldn't talk about Andrew Kelly. It had been a long time since they had talked about the places that they wanted to visit when they were done with school. It was something that made both of them feel better and had gotten them through some hard times.",
        "\"Kirei.\" He called softly as he touched her shoulder making her jump. \"Have you started our trip without me?\"\n\nPatricia smiled at him and moved over on the blanket so that he could sit down beside her. When he was settled, she laid her head in his lap and closed her eyes.\n\n\"Where is our first destination?\" Kenji asked stroking her arm.\n\nThey sat outside for hours making tentative plans for their first trip together. They finally decided to take a long overdue honeymoon with the money that Ralph had left for them. Just making those plans helped Patricia more than she would have thought possible. When they finally went to bed, she felt more at peace than she had since Kenji made his decision.\n\n**********\n\nAndrew made dinner for him and his father since his mother was at work. Even though his father was working, his mother kept her job at the diner. She no longer minded since she could quit when she wanted and she liked the extra money. \n\nAndrew was glad when she made the decision to keep her job as it allowed periods of time when he would be alone in the house. He made the meat and cheese sandwiches, cut up two apples and poured two glasses of lemonade. His father hobbled in on his crutches in just as he sat the food on the table.\n\n\"Hey dad.\" Andrew greeted when Harlan came in. \"I made some supper, it isn't much, but we won't starve.\"\n\n\"Thanks son.\" Harlan said as he washed his hands at the kitchen sink. \"How are things?\"\n\nAndrew looked at his father trying to decide if he was being asked a trick question.\n\n\"I'm good, why do you ask?\"\n\n\"No reason. I was just making conversation.\" Harlan replied as he sat at the table.\n\nAndrew didn't believe him. He knew when Harlan had something on his mind and wondered what it was. As curious as he was, he decided not to tempt fate.\n\n\"I'm anxious for classes to start.\" Andrew said. \"Three more years of med school and then I begin my residency.\"\n\n\"We're proud of you son.\" Harlan said. \"Any idea of where you might go?\"\n\n\"I would like to stay close to home, but I'll go where there's an opening.\" Andrew replied.\n\nWhat he didn't say was that unless he hauled ass and improved his grades, he wouldn't be going anywhere. Andrew had come to realize that he had to learn balance. The melting pot had consumed him to the point where his grades suffered and that couldn't be allowed to continue. \n\nHe still had plans for them, but he needed to graduate too. He was slowly coming to realize that he had to be able to support himself and that if he didn't graduate, he would bring shame to his family.\n\n\"I know that your mother would like it if you stayed close by, but a man's gotta make his own way. Say, whatever happened to that girl you was seeing? What was her name?\" Harlan asked.\n\n\"Becca.\" Andrew replied. \"I heard that she got married and has a baby on the way.\"\n\n\"Well, you can't win them all can you?\" Harlan asked taking a bite of his sandwich.\n\n\"I guess not, but you know; she wasn't the one.\" Andrew said. \"I want a marriage like you and mom have.\"\n\nIt was the right thing to say. Whatever Harlan wanted to talk about was forgotten as he began to reminisce about where he met Andrew's mother Evelyn.\n\nAndrew sat back and listened without interrupting. An hour later, Harlan had talked himself out and excused himself. Andrew waited until he heard the radio playing, washed up the dishes and crept past his father who had fallen asleep sitting in the recliner.\n\nThe day's newspaper lay scattered on the floor by the side of the chair. Andrew stopped to pick it up so that his mother wouldn't have to, and took it to his room. It was time to start looking for a gun.\n\n*******\n\nIsadora couldn't help but look at the dresses that Bella had helped her pick out for school. She still didn't feel comfortable with a man buying her clothes, but she couldn't deny that he was right about dressing properly. Out of sentiment and a need to remember, Isadora carefully cut the price tags from the clothes and tucked them away. One day, she was going to repay Jonah for his help.\n\nShe turned away from the closet and looked at her desk which was now covered with pens, pencils, notebooks and her textbooks. On the floor, next to her desk was a box of law journals that had been sent from home. On top was a small note of encouragement from Mr. Whitman, her employer from home.\n\n\"Isadora,\n\nI hope that all is going well for you. Your mother stopped by and asked that I send these to you so here they are. I wish that I could help you more and will do all that I can. I'll try to help your parents as much as I can so try not to worry about them. I also want to give you a word of encouragement. Keep your eyes on the prize. Use whatever prompted you to choose this course of study to motivate you. \n\nIsadora, you have the intelligence, the drive and the ability to succeed. If there is anything that I can do for you from this end, let Jonah know, and I'll do my best to help. I wish you the best as you begin your studies.\n\nMr. Whitman\"\n\nIsadora reread the note and put it with the tags from her clothes. She changed into her nightclothes, got into bed and immediately got up. There was one more thing that she needed to do. She went to her desk, took a sheet of paper and wrote six names on it. When she was done, she looked at the list, added two more names and put the paper in the drawer with the note from home and the tags from her new clothes.\n\nShe crawled back into bed, turned onto her side and cried herself to sleep.\n\n********\n\nTy sat in the brightly lit room and looked around. Charles, Nick and Briscoe sat across from him assessing him, but not speaking. They had already decided to wait and see what Ty had to offer them. They hadn't even asked him to confirm his identity. It took Ty less than an hour to start talking.\n\nAt first, he tried to convince them that there had been a misunderstanding to which there was no response.\n\n\"Come on guys.\" He said smoothly, \"I meant no harm.\"\n\nNick broke silence first.\n\n\"You meant no harm, but your car has been seen parked in front of my house at least three times a week for several weeks. You've also been spotted at Will Mahoney's. Care to tell us why you were watching us?\"\n\n\"What are you going to do for me?\" Ty asked.\n\n\"Not a damned thing.\" Nick replied leaning back in his chair.\n\nTy looked at Charles.\n\n\"What about you government man? What are you willing to give me?\"\n\nCharles gave Ty a cool smile. This was what he was waiting for. He planned on giving Ty the bare minimum of his requests.\n\n\"That depends on what you have to say.\" He replied.\n\nWhat he didn't say was that they already had information on him and that they knew about the murder that he told his wife about.\n\n\"Tell us about Lawrence Goodman.\" Charles said.\n\n\"If I tell you what I know, I want to walk out of here a free man.\" Ty replied.\n\nCharles couldn't help but laugh.\n\n\"You've got a sense of humor, I like that but there's no way in hell you're walking out of here. We know that you're being investigated for a murder...\"\n\n\"I didn't kill anyone!\" Ty yelled.\n\n\"We heard that you told your wife that you killed someone.\" Briscoe said. \"Why would you tell her that if it wasn't true?\"\n\n\"I was just trying to keep her in line.\" Ty said. \"I didn't think that she believed me.\"\n\n\"Obviously she did.\" Briscoe said drily. \"Was telling her that Lawrence Goodman was going to be living with you also a lie?\"\n\nTy thought fast. The lesser of the two evils was to go with some semblance of the truth he decided.\n\n\"That was true.\" He said. \"Mr. Goodman was going to stay with us for a short time.\"\n\n\"From what we understand, he was going to be a long term house guest.\" Charles said. \"I don't know if you're aware of this, but the President has a committee investigating the lynching and treatment of blacks in the south. \n\nI'm sure that you're wondering what that has to be with you so let me explain.\" Charles said leaning forward. \"If you participated in any killings, you'll be tried for it. Don't think that you can't be convicted. Lawrence was and others will be as well. It would be in your best interest to tell us what you know.\"\n\n\"I didn't kill anyone.\" Ty repeated.\n\n\"Who is Ellen Percy?\" Briscoe asked.\n\n\"I don't know any Ellen Percy.\" Ty replied.\n\nHis heart was hammering as he tried to stay a step ahead of his questioners.\n\n\"That's odd because when we called down to South Carolina, they have record of a marriage certificate dated for 1943. According to the certificate, you were her husband. How do you explain that?\" Briscoe asked.\n\nWhen Ty didn't answer, Briscoe continued.\n\n\"It seems that your wife disappeared in the spring of 1946 and hasn't been seen since. Do you know what that means? It means that you committed polygamy... unless of course, she divorced you or she died. She wouldn't happen to be dead would she?\"\n\nTy found himself wishing that he hadn't told Becca about the murder, but what was done was done. Any thoughts that he had about keeping Lawrence's secrets were gone. It was now about self-preservation. He was also aware of something else; he couldn't serve out any term that he was given in South Carolina. If word got out that he talked, he would be dead within hours. But still he fought.\n\n\"No one's found a body yet have they?\" he asked. \"For all you know, she could be on the other side of the planet.\"\n\n\"Possible, but I don't think so.\" Briscoe replied. \"I've been doing this for a long time and I know a lying son of a bitch when I see one. You my friend are a lying son of a bitch. I think that you killed your wife. What happened? Did she step out of line?\"\n\nSeeing that Ty was rattled, Charles stepped in.\n\n\"We know exactly who you are.\" He said looking directly at him. \"Tyrone Morgan, felon, scam artist and white supremacist. You and the late Mr. Goodman were much more than casual acquaintances. \"You were his point man. Your mission was to come out here and pave the way for Goodman. Becca Cartwright is willing to testify to everything that you told her.\"\n\n\"A wife can't testify against her husband!\" Ty exclaimed.\n\n\"That's true unless she isn't your wife.\" Nick said. \"If Ellen Percy is alive somewhere, then Becca Cartwright isn't your wife. That frees her to testify, but even if she is legally your wife, she can still testify even if it can't be admitted into a court of law. Any and all information she gives will be thoroughly checked out.\"\n\nTy saw the trap closing around him and there was no way out. All he could do was try to bargain and keep Ellen out of it.\n\n\"What do you want to know?\" he asked.\n\nBy morning, Ty had given Lawrence up. He had but one question. How had they known about the depth of his relationship with Lawrence? It had to have been someone at the prison, there could be no other explanation.\n\n\"Where did your information come from?\" he asked.\n\n\"You don't need to know that.\" Nick replied. \"All you need to know is that your ass is going back to prison and if there's a god, you'll be seeing your old friends again.\"\n\nTy panicked. He had visions of his body being found days after he had been killed.\n\n\"Don't send me back there! If they find out that I fucked up, they'll kill me. Keep me here! I'll confess to planning to kill you, the Jap, Lawrence's ex and her man. I'll do or say anything you want.\"\n\n\"Tell me about Warden Ellis.\" Nick said.\n\n\"I don't know much about him.\" Ty replied. \"I was leaving as he came. I do know that he had it in for Lawrence.\"\n\n\"Why?\" Charles asked. \"Did they know each other?\"\n\n\"I don't know to both questions.\" Ty replied. \"Are you going to send me back?\"\n\n\"You're not going anywhere for the time being.\" Nick replied. \"But the disappearance of your wife is being investigated. If she turns up dead, there's nothing that will keep you from being extradited back to South Carolina.\"\n\nCharles got up from the table and opened the door.\n\n\"Take him to a cell and keep an eye on him. He better be here, unharmed and alive in the morning.\" Charles told the agent. \"I want to be notified immediately if anything unusual happens and if in doubt, call me.\"\n\n\"Yes sir.\" The agent replied.\n\nCharles waited until Ty was taken away before speaking.\n\n\"What do we know about our source?\" he asked.\n\n\"Not much.\" Nick replied. \"He said that he shared a cell with Lawrence and remembered seeing my name on a piece of paper. He also mentioned Jacob Lincoln and a promise that he made to him.\"\n\n\"Jacob Lincoln? Is the source black?\" Charles asked.\n\n\"I don't think so.\" Nick replied. \"But I can't swear to it. The information was in a letter and when he called, the call lasted long enough for him to tell me that he sent the letter. I was going to call the prison to see if I could get the names of Goodman's cell mates, but I changed my mind after thinking about it. What if Ellis found out? Let's hope that we hear from him again. We're going to need him.\"\n\n*******\n\nAs soon as Saul was released from prison, he made his way home. His mother and brothers and sisters were thrilled to see him.\n\n\"Saul!\" his mother Lucy cried when she saw him. \"You're home! You didn't run away did you?\"\n\n\"No ma, I got out for good behavior. Are you alright?\"\n\n\"We're struggling but we're fine.\" She replied.\n\nShe knew that Saul was keeping something from her, but she didn't care. He was home. Lucy warmed up leftovers from dinner and sat across from him to watch him eat. Satisfied that he really was alright and that he hadn't run away from prison, she asked for the truth.\n\n\"It's like I said, I got out on good behavior. The warden said that I deserved a second chance.\" Saul said. \"Ma... I promised a friend that I would do something for him and I need your help.\"\n\nLucy gave her son a wary look before asking him what the promise was. Her eyes widened as he told her about Jacob Lincoln.\n\n\"I know that you don't care for the black people, but ma, he helped me when no one else would. He taught me how to survive and to keep from being used. If you won't help me, then I'll find someone else.\"\n\nLucy looked at her son with pride and fear. He was right. She didn't care for the Negroes, but it had been one who looked after him.\n\n\"What do you need help with?\" she asked after a long silence.\n\nIt took some time to find Nick's phone number and address. Writing the letter had been more difficult than either of them had imagined. Saul wanted it to be short, but it also had to have enough information to be credible. It was Lucy who had suggested that they call when the letter was mailed. The next obstacle was finding a telephone.\n\nFinally, Saul took the bus to the next town over, found a phone, called Nick and mailed the letter. On the ride back home, he tried to convince himself that he had fulfilled his promise to Jacob. By the time he arrived home, he knew that he hadn't even begun.\n\nHe took mental stock of the cash that he had left from Lawrence and then calculated how much he would need to make it to California. He would leave the bulk of it with his mother, hitchhike to California and find a job somewhere. While he traveled, he would try to plan out his future. Now that he had made a decision, Saul calmed. He was doing the right thing.\n\n*********\n\nBecca looked at her reflection in the mirror. She rubbed her large belly as she thought about Ty. Her father had already contacted a lawyer and divorce proceedings had begun. Never in her wildest dreams did she imagine that she would be divorced and a single mother at so young an age. \n\nWhat amazed her was that she no longer cared about what people were saying. She also realized that the people whom she thought were friends really weren't. The only people who came to see her was her friend Susan and surprisingly, Ernie. \n\nShe could tell that he no longer cared about her as he once did, but saw her as someone that he wanted to make amends and become friends with. It occurred to her that she had never apologized to him for what she did. She took the opportunity when he showed up at her parent's house one evening.\n\nShe was helping her mother clean up the dinner dishes when he rang the doorbell. Initially, she thought that it was Ty, but then remembered that he was in police custody. Whoever it was, her father sounded pleased to see them. A few minutes later, she was sitting on the porch with Ernie.\n\nThere was a long awkward silence as they sat on the porch swing gently rocking back and forth. Finally, Ernie spoke.\n\n\"I just wanted to tell you that I'm not angry with you anymore and that I'm sorry that I hit you. I think that I was angrier at myself than you.\"\n\n\"I'm sorry too.\" Becca said softly. \"I was wrong about so many things including what I asked you to do. It took meeting and marrying Ty to make me see that. Can I ask a question?\"\n\nErnie hesitated and then nodded his head yes.\n\n\"Did you really believe that stuff that Andrew was spouting?\"\n\nErnie looked away and then back at Becca.\n\n\"I thought I did, but that's not the way my parents taught me to think. I was enthralled with the fact that Andrew's father was a real war hero and that Andrew was actually paying attention to me. You know, in a way, you helped me.\" Ernie said.\n\n\"How did I do that?\" Becca asked. \"If I recall, you took a pretty bad beating.\"\n\n\"I did, but I think that it was the best thing that could have happened to me.\" Ernie replied. \"At first, I didn't see it that way. I was furious with you, but then I came to realize that I didn't have to do what you asked; it was ultimately my decision.\n\nI also realized something else. If I hadn't become involved with Andrew, I could have been friends with what he calls the melting pot. I did and said things to them that I will always regret and for what? So that I could fit in somewhere and Becca; it wasn't worth it. What about you? Did you believe what he was saying?\"\n\nIt was Becca's turn to look away, but it felt good to talk to someone who had experienced Andrew Kelly.\n\n\"I guess I'm kind of like you.\" Becca said. \"I thought that I was in love with him and that I had to agree with him. Also like you, I wasn't raised to believe the way that Andrew did although I have family that do. When I ....bribed you to harass them, I thought that it would make Andrew notice me more. I thought that he would fall in love with me.\n\nI found out how he felt about me a few nights later. I actually accused him of having feelings for Patricia Takeda and called him a coward. The thing is, he denied the coward part but didn't reply about Patricia. But you know what? I've come to the conclusion that Andrew is incapable of caring about anyone. At any rate, I'm sorry about what I did to you. It was wrong, but then so much of what I did back then was wrong.\"\n\n\"Becca, do your parents know?\" Ernie asked.\n\n\"They know about everything except that. It was bad enough telling them about my reputation, and telling them about that would kill them. They moved from South Carolina to get away from the racism, they didn't want me to think that way.\"\n\n\"I told my parents.\" Ernie said softly. \"They were more hurt than angry, and if you ask me, the hurt and disappointment was worse than the anger. I have to admit that I felt better than I had for a long time. The next hardest thing was going to Kenji, Patricia and Joel to apologize.\"\n\nBecca was speechless.\n\n\"I had to try to make things right. I talked to them at Milt's funeral.\"\n\nThey talked about the service for a few minutes since Becca hadn't attended. She got another shock when Ernie told her that he suspected Andrew killed Milt.\n\n\"The problem is that there's no proof. Andrew doesn't have a gun and even if he did, no one's seen it. The other problem is everyone knows that he did it and is too scared of him to say anything.\"\n\n\"Why would he kill Milt?\" Becca asked.\n\n\"Control.\" Ernie replied. \"Milt challenged Andrew's authority and called him coward. Milt and some of the others felt that Andrew was moving too slowly in dealing with what he called the melting pot.\"",
        "Ernie gave Becca a rundown of the events that he thought pushed Andrew over the edge. Becca shuddered as she imagined what could have happened to her. Her parents could be mourning for her as Milt's parents still mourned him.\n\nThe last part of their conversation was more pleasant. Becca talked about the baby and was eagerly anticipating its arrival.\n\n\"It isn't his fault that his father is a murderer and a racist.\" She said touching her stomach. She hadn't thought about what she would say when the baby was old enough to ask about his father, she had time to think about that.\n\nWhat she did decide was that she needed to follow Ernie's example and talk to her parents. She wasn't sure that she would be able to face Kenji and Patricia any time soon, but eventually she would have to. Ernie left leaving Becca alone on the porch. A few minutes later, she went into the house to tell her parents the rest of her story.\n\n*********\n\nAndrew perused the classifieds looking for guns. He finally decided on a forty-five because they were plentiful and the ammunition cheap. He decided to go with a private seller to lessen his chances of being recognized. As he looked through the ads, he spotted several private sellers, but they were too close to home. Whoever he bought from, they needed to be in the city or in another city.\n\nHe was also hoping that the ammunition would be thrown in with the gun in order to save money. His eyes left the ads and went to under his bed. He needed to get rid of the gun that his father had given him, but he couldn't. There was no way that he could explain its disappearance if his father should ask for it. As it was, he would have to explain the missing clip.\n\nHe circled a few of the ads that he felt met his criteria and slid the paper under his bed. It wouldn't do for his parents to find the ad and he didn't want to out and out lie to them unless he had to. Andrew changed into his pajamas and thought about the melting pot.\n\n\"Where are you?\" he muttered.\n\nHe had driven by the house several times and saw no signs of activity. He hadn't physically seen them since school started and wondered what was happening. His first thought had been that another one of his group had tipped his hand, but they were all too afraid of him. He made a mental note to call everyone in the morning for a meeting. He needed to make sure that they understood that he was calling the shots.\n\nInstead of going to bed, Andrew took out his books. It was never too soon to start studying. His goal was to take Kenji's place in the next summer program. A cold smile spread across his face as he imagined Kenji and Joel dead.\n\n\"Two less inferiors in the world.\" He muttered as he began to read the manual on surgical procedures.\n\n**********\n\nSunday morning, two weeks after he mailed the letter and called Nick, Saul was on his way to California. His mother begged him not to go.\n\n\"What are you going to do out there?\" she asked. \"You don't know anybody!\"\n\n\"I'll be fine.\" He assured her. \"I have an address and if no one's there I'll make do. I left you most of the money so you'll be alright if you're careful. I'll send more as I'm able.\"\n\nLucy looked at Saul who looked older than his twenty-years and gave him a watery smile.\n\n\"You're like your father in so many ways. You remind me of him before he started drinking. You even look like him with your dark hair and green eyes. I know that things were rough toward the end, but Saul, he loved us and he would be proud of you.\"\n\nSaul knew better but didn't dispute it. His father had been filled with disappointment, anger and hate by the time he died. He also knew that his father would have been far from proud of him. He didn't say any of these things to his mother. If it helped her to cope with what happened and his leaving then so be it.\n\nAfter eating a hearty breakfast with his brother and sisters, Saul started out. He took the bus to the nearest city and began looking for rides heading west. What surprised him was he wasn't afraid but excited. He had always wondered what was beyond the boundaries of South Carolina and now he was about to find out.\n\nAfter he got off the bus, he went to the train station to look at the fares. He could spend the money and be in California in four days or he could go with his original plan of hitchhiking which could take him considerably longer. He alternated between buying the ticket and not buying the ticket. \n\nThree hours later, Saul was on the first train leaving for Los Angeles, California.\n\n*******\n\nPeter was at Hiroshi's house early Sunday afternoon. He sat at the kitchen table with Joel, Penny, Kenji and Patricia and attempted to ease Penny and Patricia's mind.\n\n\"I won't let them out of my sight and there will be a second agent in the class as well. From what understand, the class is large enough that no one will notice and if they did, they would assume that he's another student.\"\n\n\"What is his name?\" Kenji asked.\n\n\"Trevor Edison.\" Peter replied. \"You'll meet him in the morning. He'll be sitting toward the back of the classroom by the door. I'll be sitting in the row across from Andrew Kelly. We need to be there early so that we can be in place. Kenji and Joel, I can't stress how important it is that you follow the plan. You can't go off half --cocked and you have to stay within our sight. If you notice anything, you tell us and don't take care of it yourself. You are not to go anywhere alone; we can't protect you if you do. Are there any questions or concerns?\"\n\n\"How long are you going to do this?\" Penny asked.\n\n\"For as long as it takes.\" Peter replied. \"Of course we want this resolved sooner than later, but we won't leave you high and dry.\"\n\n\"I do not think that you fully understand who we are dealing with.\" Kenji said softly. \"Andrew while impulsive is perceptive. It is my belief that he will wait until he thinks our guard is down. If he does anything, it won't be for several weeks.\"\n\n\"Understood.\" Peter said. \"Let's hope that he screws up before then.\"\n\nAfter Peter left, Penny and Joel went to relieve Hiroshi and Dai of their childcare duties. Kenji and Patricia sat at the table holding hands, neither of the speaking. They had been talking with Ralph and Marie about Kenji going back to school and of the two, only Ralph seemed concerned. They were going to talk with them again after they had their nap.\n\n\"Kenji, I'm scared.\" Patricia said softly. \"I know and understand what you want to do, but what if Andrew gets past them? What happens if you or Joel gets hurt?\"\n\nKenji didn't know how to reassure her and telling her not to worry was out of the question. The only thing that he thought would help was to promise her that he would follow the plan.\n\n\"Kirei, I promise not to put myself or Joel in harm's way. I anticipate being home for dinner tomorrow night and every night after that. I am not going to tell you not to worry or not to be frightened, it would be pointless and it would only increase your fear. If it is possible I will try to call you to let you know all is well.\"\n\nPatricia relaxed slightly. It wasn't a great solution, but it was better than nothing.\n\n\"I'm not the only one who's scared.\" She said. \"Ralph is scared too. He's trying not to show it, but I see it every time he looks at you.\"\n\n\"I know Kirei. I see it too.\" Kenji replied. \"I plan to spend extra time with him this afternoon.\"\n\nKenji stood up still holding Patricia's hand. He pulled her up out of her chair and led her toward the stairs.\n\n\"I asked Joel and Penny to watch the children so that we could have a little alone time.\" he said. \"After this is over, Abby and your parents have agreed to keep the children for a few days so that we can go away. But for now, this will have to do.\"\n\nPatricia allowed herself to be led to the room that she and Kenji shared with Ralph and Marie. They were barely in the room when Kenji pulled her into his arms and kissed her while unzipping her skirt. Their lovemaking had almost always been slow and deliberate unless one or both of them was afraid as was the case now.\n\nKenji backed Patricia up to the bed, pushed her back and took off her panties. Part of him wanted to bypass the diaphragm insertion and take his chances, but the practical part of him won out. It wouldn't be right or fair to Patricia if a pregnancy resulted from the one time he decided to throw caution to the wind.\n\nPatricia cried out as Kenji kissed her pulsing clit and then slid two slender fingers inside of her. She reached under her pillow, grabbed the small box containing the diaphragm and handed it to Kenji. He took it in his free hand, removed his fingers from inside of her and opened it.\n\nWithout speaking, he spread her vaginal lips wider and slipped the device in. After he was satisfied that it was in place, he stood up and took off his slacks. His cock was fully erect and already had a drop of clear liquid on its tip.\n\nKenji took his cock in his hand and rubbed it up and down Patricia's slit several times before easing it inside of her. Patricia wrapped her legs around his hips and met each thrust with one of her own. It wasn't long before the rhythm set by Kenji was lost and he was emptying inside of her as she came.\n\nAfterwards, they lay on top of the bed holding each other. As they lay there, Patricia tried to get control over her fear. She reminded herself that this was the man she had married. This was the man who defied his family and their beliefs to be with her. This was a man who had stepped up in defense of a man that he didn't know and that man was now their friend. \n\nShe reminded herself that what Kenji was going to do was nothing out of the ordinary as far as he was concerned. Slowly, some of her fear was replaced by an intense pride. She snuggled closer, kissed him and closed her eyes.\n\n*******\n\nRalph kept looking toward the stairs. He knew that his papa wanted to talk to him, and it wasn't because he was in trouble. He knew that whatever it was, it was something scary. He could tell by the way his parents looked at each other. He also could tell by the way they touched each other. His papa always touched his mama's face when she was scared.\n\nRalph was so preoccupied that he missed most of the story that Penny was reading to him and Marie. Finally, after what seemed to be hours, he heard his parents coming down the stairs. Not wanting to be rude, he waited until the story was over before going to look for his parents.\n\n\"Ralph.\" Kenji said when he found them. \"I was just coming for you. Come with us.\"\n\nRalph followed them to Hiroshi's study and climbed up into Patricia's lap. Normally, he would have gotten into Kenji's lap, but he sensed that Patricia needed him more.\n\n\"Ralph, as you know, I am returning to school tomorrow. I want to try to explain to you what is happening.\"\n\nRalph listened intently as Kenji explained in terms that he could understand what was happening.\n\n\"Is it the man from the car?\" he asked when Kenji was finished.\n\n\"Yes Ralph, it is.\" Kenji replied. \"We will not be safe until he is taken away.\"\n\n\"Is he why we can't go home?\"\n\n\"Yes.\"\n\n\"I don't understand, why does he hate us?\" Ralph asked.\n\n\"Sometimes people hate those who are different.\" Patricia said.\n\n\"Why?\" Ralph asked confused.\n\n\"There is no simple answer to that question.\" Kenji replied. \"Sometimes, people are taught to hate. Sometimes, it is because people don't want to learn about those who are different.\"\n\nRalph considered Kenji's explanation and then asked another question.\n\n\"Does the man hate you because you are Japanese?\"\n\n\"That is the easy explanation.\" Kenji replied. \n\n\"Does he hate mama too?\"\n\n\"This man hates anyone who is not like him or who does not believe as he does.\" Kenji replied. \"I promise you that he will not hurt you, or anyone else in this family.\"\n\n\"But he can hurt you.\" Ralph said softly. A tear ran down his cheek as he looked at Kenji.\n\n\"Come to me.\" Kenji said gently as he held his arms open to Ralph. When Ralph was in his lap, Kenji kissed his head taking note that it was past time for a haircut. \"Ralph, part of my job as your father is to do whatever I have to so that you, Marie and your mother will be safe. Yes the man can hurt me, but I promise to try to remain safe. \n\nI will give you the same promise that I gave your mother. I give you my word that I will do everything possible to be home for dinner not just tonight, but every night. I would also ask something from you.\"\n\n\"Yes papa.\"\n\n\"I would ask that you take care of your mother and sister while I am away. Will you do this for me?\" Kenji asked.\n\n\"Yes papa, but please come home.\"\n\nKenji held Ralph tight, kissed his head and told him that he loved him.\n\n\"I love you too.\" Ralph replied as he hugged Kenji back. He slid from Kenji's lap and went over to Patricia. He hugged her and kissed her cheek.\n\n\"I love you mama.\"\n\nPatricia wiped away a tear, hugged and then kissed Ralph before sending him on his way.\n\n\"You'd better come home to us.\" She told Kenji as she wiped away another tear.\n\n**********\n\nIsadora was so excited that she couldn't sleep. The first day of class was quickly approaching. Jonah had already checked with her several times earlier in the day.\n\n\"I know that you're excited, but try to get a good night's rest. Remember, if you have any problems, call me and I'll take care of it. I'll check with you tomorrow evening.\"\n\nSince the last phone call Isadora had packed and repacked her bag for school no less than six times and was working on a seventh when there was a tap on the door.\n\nBella peeked in and smiled.\n\n\"Too excited to sleep?\"\n\nIsadora grinned at her.\n\n\"I can't believe that this is really happening! I've dreamt about this, but I never expected it to happen.\" She said.\n\n\"I understand.\" Bella said as she walked into the room. \"Mind if I sit?\"\n\n\"I would love company.\" Isadora replied.\n\n\"Lenny says that you want to be a lawyer.\" She said, \"Why that as opposed to a teacher or a doctor?\"\n\n\"I like studying the law and figuring out how they could be different. When I say that, I mean I want to know how to make the law work the same way for the white man as it does the black man.\" Isadora replied.\n\n\"You're planning to take on the Klan aren't you?\" Bella asked quietly.\n\nIsadora didn't say anything at first, but when she did; she spoke with conviction.\n\n\"Those animals have gotten away with rape, murder, intimidation and torture. It's long past time that they start answering for it. Our people have been imprisoned for trying to feed our families and for something as stupid as not looking down when being spoken to by a white man. It isn't right and it needs to stop. Don't say that it isn't possible or that it will be hard. I know that it will be hard, but I also know that it's possible.\n\nYou, Lenny and others have decided to help our people by educating them. Others are and will become doctors, nurses and a variety of other professions, but we need legal representation so that we can pursue our dreams without fear of reprisal and prejudice.\"\n\nAs Bella listened to Isadora talk, she could see her standing before the Supreme Court and presenting a case before them. Jonah she realized had been right on the money with Isadora. This girl was going to make a difference. \n\n\"I think that you're going to be an excellent attorney.\" Bella said meaning it. \"I also wanted to let you know that if you need someone to talk to, I'm here.\"\n\nIsadora hesitated. She wasn't sure of what to make of the offer. She had friends at home, but they had never really talked about deeply personal things.\n\n\"I also want to tell you something, I don't know what happened to you although I have my suspicions. I want to tell you that you aren't the only one who's been hurt. If the pain gets too much for you, come to me and we'll work through it together.\"\n\nIsadora stared at Bella. Had she been that transparent? She had told no one about that day and what she had to do as a result of it. It was her fuel. Whenever she was tempted to give up, she would draw her strength from it. She would share one day, but not until she was ready to let go of the anger.\n\n\"Thank you. I'll keep that in mind.\" Isadora said. \"I'm curious about you though. I know that you and Lenny came from Arkansas, but what were you doing there?\"\n\nA look of sadness crossed Bella's face and was gone before Isadora saw it.\n\n\"There isn't much to tell.\" Bella said with a small smile. \"Lenny and I were struggling to survive. We already had one child and I lost another. I could read and write a little, but Lenny was completely illiterate. Both sets of our parents were gone and many of our other family members moved north. They wanted us to go, but we didn't have the money and they couldn't help us so we stayed.\"\n\nIsadora watched Bella as she talked. She could see the pain in her dark eyes but didn't comment on it.\n\n\"Anyway, things weren't going well. The crops were failing and we owed money. Winter was coming and we were going to starve. One day, I was out hanging wash and a car pulls up. A tall, handsome black man gets out of the car and asked for directions. That stop changed our lives. That man was Mr. Jackson.\n\nHe ended up sharing our dinner with us and asking the same question that I'm sure he asked you. What would you be if you could be anything? Both of us said teachers. The next morning, he was gone but was back before lunch. Pack up your things; you're going with me he said. Can you imagine what we thought?\" Bella asked laughing.\n\n\"Probably the same thing I did.\" Isadora replied laughing as she remembered how suspicious she was of Lenny when he met her at the train.\n\n\"We told him that we couldn't leave because we owed money and we didn't know anyone in California. The money is no longer a problem and you do know someone; me he said. He went on to say that was offering us a chance to become more than what we were and that he was giving us a chance to help our people prosper. As you can see, we took him up on his offer.\"\n\n\"So Lenny is teaching and you stay home.\" Isadora commented.\n\n\"I'll start tutoring in a few weeks and I keep busy with the children. My other role is helping those that stays with us adjust to their surroundings and to be a listening ear.\"\n\nThe two women talked for several more minutes before Bella took her leave.\n\n\"You'd better get some rest; I'll see you at breakfast.\"\n\nAfter Bella left, Isadora lay on the bed and closed her eyes. Her journey was just beginning.\n\n*********\n\nAndrew was up early. The scent of cooking food made his stomach rumble. He looked in his procedures book to make sure that the classifieds were still there and ran down the stairs. For as long as he had been in school, his mother always made him a first day of school breakfast.\n\nShe was just putting the hotcakes on his plate when he got to the kitchen and his father was pouring the coffee. A platter of bacon sat on the table waiting to be devoured.\n\n\"Thanks mom, it looks great.\" Andrew said kissing her cheek.\n\n\"You're welcome Dr. Kelly.\"\n\n\"I'm not a doctor yet.\" Andrew replied.\n\n\"But you will be.\" His father replied patting him on the shoulder.\n\nFor just the briefest of moments, Andrew questioned himself, but when he saw his father's missing limb; he was more determined than ever to rid the world of one more Jap. Killing Kenji would accomplish one more thing; his leadership would no longer be questioned.\n\n\"I won't be home for dinner.\" Andrew said as he forked the last piece of pancake into his mouth. \"I'm meeting up with some friends, but I won't be too late.\"\n\nAndrew could tell that his father wanted to ask about who he was meeting so he offered false information.\n\n\"You remember Ernie don't you?\" he asked.\n\n\"Oh sure! Nice kid.\" Harlan replied falsely relieved.\n\n\"Look at the time!\" Andrew said getting up from the table.",
        "After Andrew left, his mother looked at Harlan. \n\n\"He's fine.\" Harlan assured her.\n\nHowever, she wasn't convinced.\n\n********\n\nPatricia was quiet as Kenji got ready for school. She had tried to keep him in bed with her, but it hadn't worked. He held her, kissed her and got out of bed.\n\n\"I will be fine.\" He assured her.\n\nPatricia steeled her nerves just as she had done when Kenji boarded the bus to go to the camp. While Kenji showered, she went downstairs to start breakfast only to find that Penny had beaten her to it. They looked at each other and smiled nervously. It was going to be a long day for both them.\n\nJoel and Kenji walked into the kitchen at the same time. Each man went to his woman and hugged her without speaking. They both knew that there was no point in trying to ease their minds. They had tried and failed. The only way both women would relax was when at the end of the day, they were home safe.\n\nBreakfast was quiet except for the happy chatter of Marie who seemed unaware of the anxiety that hung in the air. When it was time to leave, Kenji picked Marie up, hugged and then kissed her cheek.\n\n\"I love you pretty one, be good for your mama.\"\n\nNext, he took Ralph aside and hugged him.\n\n\"Take care of your mother and sister. I will be home this afternoon. I know that you are frightened, and I understand, but try not to be.\"\n\n\"Papa, are you scared?\"\n\n\"A little.\" Kenji confessed. \"There is no shame in being afraid. The shame comes when you allow fear to keep you from doing what you know to be right. Later, we will talk about it, but now I need to go. You are a good son and I love you.\"\n\nRalph watched Kenji leave and wiped away a tear. He was proud of his family, especially of his father. Unconsciously, in the back of his mind, he had already decided what kind of man that he wanted to be. He went back to the kitchen just as Kenji and Joel left through the kitchen. Quietly, he walked over to Patricia and took her much larger hand in his small one. They stood together for several minutes before the sound of Marie crying prompted them to move. \n\nPatricia whispered a silent prayer for Kenji and Joel's safety as she went to see what the ruckus was about. She found Penny trying to soothe the little girl, but Penny was crying almost as hard as Marie was.\n\nPatricia walked over to them, sat on the floor and hugged both of them. In a way, it was a blessing. Patricia was able to forget her own fear and concentrate on caring for Penny, Marie and Ralph. Later, when Ralph and Marie were playing; the two women had a chance to talk.\n\n\"How did you do it?\" Penny asked. \"How did you deal with the fear when Kenji was at the camp?\"\n\n\"It wasn't easy.\" Patricia replied. \"There were plenty of nights when I cried myself to sleep.\"\n\n\"Patricia, I'm scared.\" Penny said.\n\n\"So am I.\" Patricia confessed, \"What we need to do is to keep busy. What's Joel's favorite cookie?\"\n\n*******\n\nKenji and Joel arrived at school twenty minutes before class. Peter and the other agent, Trevor Edison was already in place. Both agents nodded at them, but didn't speak. Joel and Kenji sat in their usual seats and prepared for class. When Andrew and his friends came in, they didn't react.\n\nKenji heard Andrew talking to Peter, but couldn't hear what was being said. He heard Peter say that he would be glad to meet up with him later. Kenji frowned, that wasn't a part of the plan. Unfortunately, he wouldn't be able to talk to Peter until later.\n\nHe turned his attention to the front of the room and partially blocked Andrew out. He took meticulous notes planning to put them away for Patricia to use when she was ready. Thinking about her made his heart hurt. He knew that she had been more frightened than she let on, but he also knew that she wouldn't let the fear control her. She would find some way of coping with it as she always did. He imagined that at that very moment, she was comforting Penny who had never experienced real fear before.\n\nHe looked at the clock and wondered if he had enough time to call home between classes. It would be close, but then Ralph and Marie would want to talk to him and Penny would want to talk to Joel. Lunch time was a better option he decided.\n\nFinally, the two hour class was over. As he and Joel gathered their books, the nape of Kenji's neck prickled. He paused, slowly turned around and looked directly into the cold blue eyes of Andrew Kelly. He didn't flinch as he stared back and then nodded. He stared until Andrew looked away under the pretense of answering a question. Kenji stared after Andrew long after he turned away. He tried to think of what Andrew reminded him of. Finally, it came to him. A snake and a chameleon. Andrew would be whatever he needed to be until he deemed the time to be right. And then he would strike.\n\n********\n\nAndrew paused when he saw Kenji and Joel sitting at their desks. He was beginning to think that they weren't coming back, but there they sat; just as self-assured as ever. He did have to admire them though. They knew that they were going to die, but they showed up anyway. \n\nHe looked to the left and saw an unfamiliar face and wondered what his politics were. There was only one way to find out he decided. He walked over to Peter and introduced himself.\n\n\"Hello, I'm Andrew Kelley.\" He said extending his hand.\n\n\"Peter Benjamin.\" Peter replied taking Andrew's hand. \n\n\"You're starting kind of late aren't you?\" Andrew asked.\n\n\"Yes, I just moved from Sacramento last week. I had some business to finish up after discharge.\"\n\n\"You served?\" Andrew asked.\n\n\"Sure did... unfortunately, the fighting was all but over by the time I was discharged.\" Peter replied.\n\n\"What theater? Europe or the Pacific?\"\n\n\"Pacific.\" Peter replied. \"I was hoping to kill a few of the yellow bastards, but they dropped the bombs before I got my chance.\"\n\n\"Listen, I would like to talk to you some more, are you free after classes?\" Andrew asked eagerly.\n\n\"I have no place to be.\" Peter replied.\n\nPeter watched Andrew walk away.\n\n\"Sick son of a bitch.\" Peter muttered under his breath as he opened the textbook.\n\nAfter the class was over, Peter stopped and verified that he and Andrew were going to meet.\n\n\"Do you know where the 'Empire Diner' is?\" Andrew asked.\n\n\"I sure do! They make a meatloaf that put's my mother's to shame.\" Peter replied.\n\nAndrew laughed. \"My mother makes their meatloaf, I'll be sure to tell her that. Classes are over at three... I'll meet you over there at three-thirty. Oh, do you need a ride?\"\n\n\"Three-thirty is perfect and no thanks to the ride, I have my own car.\"\n\nAfter Peter was gone, Andrew stared at the back of Kenji's head imagining it to be a bull's-eye. He almost jumped when Kenji turned around and looked at him. It was almost as if Kenji knew what he was thinking. Andrew forced himself to meet Kenji's stare. Anger rose when Kenji didn't look away, but nodded at him. Andrew was about to turn away when someone asked him a question.\n\nBefore the week was over, he decided; \"I'm going to have a gun.\"\n\n********\n\nThe rest of the day passed quietly. Andrew, Kenji and Joel had yet to speak. Kenji and Joel spoke to Patricia and the children twice with the last time letting them know that they were on the way home. When they got to the car, Kenji circled around it to check the tires. It was a habit that he kept ever since their car had been vandalized the year before.\n\nNext, they inspected the inside of the car looking for any nasty surprises. Satisfied, they got in the car and began the drive home.\n\n\"What's Peter up to?\" Joel asked. \"He isn't supposed to interact with Andrew is he?\"\n\n\"No.\" Kenji replied. \"But I understand what he is thinking. He wants to get close to Andrew in the hopes of finding out what he is planning.\"\n\nJoel didn't like it and said so.\n\n\"What happens if Andrew finds out that he works for the government?\"\n\n\"He will kill him.\" Kenji said softly.\n\n\"What are we going to do?\" Joel asked. \n\n\"This may be a part of his job.\" Kenji replied. \"We do nothing until we talk to him.\"\n\n********\n\nThey weren't even out of the car when they were mobbed by seven anxious people. Hiroshi and Dai were just as anxious as the rest of them. He had come home from work early unable to concentrate. He listened to each and every phone call making Patricia repeat what Kenji said until he was satisfied that all was well. \n\nHe and Ralph both jumped up every time they heard a car go by. \n\n\"Will you two stop it?\" Patricia said. \"They only left ten minutes ago. Ralph, why don't you read to Marie?\"\n\nHiroshi looked at Patricia and once again realized how wrong he had been about her. Even in her fear, she was strong. He could see the strength and determination of both parents in his grandchildren. He had the feeling that they were going to need it.\n\nWhile he waited for Kenji to come home, he went to the back yard and picked a few lemons from off the ground to make lemonade for Ralph and Marie. As he picked the fruit, he realized that he hadn't told Kenji just how proud he truly was of him.\n\nHiroshi stood back and waited while everyone else greeted Kenji and Joel as if they were long lost war heroes. Once the crowd cleared, Hiroshi pulled Kenji aside.\n\n\"I wanted to tell you that I am very proud of you. I once questioned your integrity and your honor and for that I apologize. You have brought much honor to our family and for that I thank you. I know that I have apologized to Patricia and I have accepted her as my daughter, but I want to tell you that I am also proud of her. You were right to defy me and our customs for her.\"\n\n\"I... Thank you father.\" Kenji said softly. \"I must admit that when I called you for help, I was not certain that I would receive it. I also confess that there was a part of me that was not completely convinced that you had changed. Our time here as proven that you have. Thank you for allowing all of us to stay in your home.\"\n\nFor the first time since Kenji arrived to the United States, Hiroshi hugged him. At first, Kenji stiffened and then relaxed returning the hug.\n\nDai and Patricia watched through the window and smiled at each other.\n\n\"They will be fine now.\" Dai said placing her hand in Patricia's.\n\n*********\n\n\"Your orders were to protect Kenji and Joel!\" Nick roared when Peter told him and Charles about the pending meeting with Andrew. \n\n\"I understand, but the opportunity presented itself.\" Peter replied. \"Maybe we can kill two birds with one stone.\" He added.\n\n\"Nick, hold on a minute.\" Charles said before Nick could respond. \"I think he's right. What better way to protect them than by being in the inner circle? And maybe he can at least find out if Kelly has a gun. If he does then we can search his home.\"\n\n\"What about Kenji and Joel?\" Nick asked. \"It would look suspicious if another student joined the class.\"\n\n\"There's another agent in the class.\" Charles replied. \"He can take over for Peter.\"\n\n\"Do you understand that if Kelly finds out who you are, he'll try to kill you?\" Nick asked.\n\n\"I know, but he isn't going to find out. I know how his mind works.\" Peter said. \"He's narcissistic and impulsive. The impulsiveness is what makes him so dangerous. He's also very much into control. I saw that today when he and Kenji had a staring contest that they didn't know I saw. The very things that make him so dangerous are the things that we'll use to catch him.\"\n\n\"You know this from one meeting?\" Nick asked.\n\n\"That and from what Kenji and Joel told me. Look, I've got to get going, is this thing a go?\" Peter asked.\n\n\"Keep us posted.\" Charles replied.\n\n********\n\nAndrew looked at the clock above the diner counter and frowned. It was three-thirty five and his potential recruit was late. At three-forty, Peter slid into the booth profusely apologizing.\n\n\"I'm sorry. I had to make a quick stop that took longer than I planned.\"\n\nAndrew bit back a reprimand; the man hadn't agreed to join the group yet.\n\n\"No problem, my mother is working so meatloaf is on the menu.\"\n\nAfter they ordered, Andrew began to question Peter.\n\n\"Where are you from originally? I hear an accent.\"\n\n\"I was born in the mid-west; we lived there until I was fifteen.\" Peter replied telling the truth. \"My parents had a farm out there.\"\n\n\"Had?\" Andrew asked.\n\n\"It got to be too much for them and I had no interest in farming so they sold it and moved to Florida. I lived there until I joined up.\"\n\n\"But you said that you had business in Sacramento.\" Andrew countered.\n\n\"I did and it's personal.\" Peter replied his tone cool.\n\nHe noticed that Andrew blinked and his lips thinned at his tone confirming that he had control issues. He softened his tone and continued.\n\n\"I'm sorry; it's just something that's going on between my girl and me.\"\n\n\"I understand.\" Andrew replied.\n\nThey stopped talking when their meals were brought to the table and didn't continue until the waitress was gone. The longer Peter listened to Andrew talk, the more convinced he became that he had indeed committed at least one murder and was planning another. He had to find out if Andrew had a gun.\n\nBy the end of dinner, Andrew was convinced that he had a new recruit and Peter was convinced that in a few days, Andrew would be in custody. They agreed to meet again, but this time at Andrew's house.\n\n\"Mom will want to meet the man who likes her meatloaf better than he does his mother's.\"\n\n\"She won't mind?\" Peter asked. He was in fact very interested in meeting the people who bore and raised Andrew.\n\n\"Not at all, you can meet my dad. I told you that he was a war hero didn't I?\"\n\n\"Yes you did and it would be an honor to meet him.\" Peter replied.\n\nAndrew paid the bill, picked up the sack containing dinner for his father and waved at Peter. He had just decided that Peter Benjamin, newly discharged Air Force officer was going to be his second in command.\n\n**********\n\nPeter sat at the booth for a few minutes to give Andrew time to get to his car and drive off. When he left, he looked around for Andrew's car, got into his own car and drove back to the office.\n\n\"Well?\" Charles asked.\n\n\"'He's nuts.\" Peter said sitting down. \"Where's Nick?\"\n\n\"He had to be in court. What did you find out?\"\n\n\"It's like I said.\" Peter replied. \"He's a control freak and narcissistic. I'll tell you something else, he's our shooter. I can feel it in my gut. We've got to find out if he has a gun or not.\"\n\n\"How do you propose to do that?\" Charles asked. \"You can't just ask him.\"\n\n\"No, but I can ask his father. I'm going to Andrew's house for dinner tomorrow night. Andrew is anxious for me to meet his father who according to Andrew is a war hero. I'm also military so it wouldn't be out of line to discuss firearms.\"\n\n\"Alright and just so you know, Andrew's father is a bona fide war hero. He lost a limb saving several men from his platoon. Just watch your back and keep me posted.\"\n\nAfter he left the office, Peter drove to Hiroshi's house. He hated to intrude, but he had to tell them about the change in plan.\n\n********\n\n\"I'll get it!\" Penny called out when the doorbell rang. She opened the door and was surprised to see Peter standing there. \"Is everything alright?\" she asked.\n\n\"It's fine, I just need to talk to all of you for a moment. Is this a good time?\"\n\n\"We were just making dinner, but come in. Everyone is in the kitchen.\"\n\nThe chatter stopped when Penny entered the kitchen followed by Peter.\n\n\"What happened?\" Patricia asked hoping that it would be good news.\n\nPeter quickly explained the change in plan and then told them about his meeting with Andrew.\n\n\"Peter, do you understand how dangerous he is?\" Kenji asked.\n\n\"Yes I know, but this is the only way to end this quickly. Kenji, he hates you with a passion that I've never seen before. Joel is no longer of any real consequence to him. It's you that he wants. I'm not even sure that his agenda is white supremacy anymore. I think that it's more about control and today when you stared him down, you threatened that control.\"\n\n\"What are you saying?\" Patricia asked.\n\n\"I'm saying that if we don't take him into custody soon, he may make an attempt on Kenji's life at school. If he does, it will be a purely impulsive move. You scare him, but yet he admires you. He also sees you as a representative for all Japanese; didn't his father lose his leg fighting the Japanese?\n\nAdd to that, you're at the top of the class. You're self-assured and confident and.... Don't take this wrong, you live in a nicer neighborhood and house than many whites. Do you see what I'm saying?\"\n\n\"What are you going to do?\" Hiroshi asked.\n\n\"I'm going to his house for dinner tomorrow night. Pray that I find out that he has a gun because if I do, this thing could end tomorrow night.\" Peter replied.\n\n\"What about the rest of them?\" Patricia asked.\n\n\"Most of them will back away.\" Kenji replied. \"The others will either start or find new groups. This is what I meant when I said that there will always be people like Andrew Kelly in the world. To hide from them gives them power.\"\n\nNo one said anything because they knew that he was right. They all felt a measure of relief knowing that they could be done with Andrew Kelly by the next evening.\n\nPeter left a few minutes later politely declining the offer of dinner but accepting for another time.\n\nThere was a hopeful silence as dinner preparations began again. All of them said their own prayer that Peter would be safe and that he would find what he was looking for.\n\n********\n\nAndrew drove home, ran into the house with his father's dinner and set it on the table. He wrote a quick note and ran out of the house again. Once in the car, he drove off. He didn't want to run into his father. He pulled into the first parking lot he saw and pulled out the classifieds that he had saved from the night before.\n\nHe quickly skimmed the ads that he had circled and began a process of elimination. Finally, he decided on a private seller who lived several blocks to the north of the school. Andrew found a payphone and called the number listed in the ad.\n\n\"Hello.\" A gruff voice said after answering on the third ring.\n\nAndrew explained why he was calling hoping that the man still had the gun.\n\n\"I still have it.\" He said.\n\n\"Do you have a place where I can shoot it?\" Andrew asked.\n\n\"Not here, but there's a place not far from here if you want to test it out.\" The man replied more pleasant because he had a buyer. \"When do you want to come?\"\n\nTwenty minutes later, Andrew was sitting in the man's living room sipping on a glass of water while the man showed him how to clean and load the gun.\n\n\"You aren't planning to shoot anybody are you?\" the man asked.\n\n\"No sir, it's a gift for my father.\" Andrew replied with a smile.\n\n\"It's a good choice. The man said. \"I wish that I could keep it, but I need the money.\" \n\nAndrew could have cared less about why the man as selling the gun. He wanted to test it and then take it home.\n\n\"I'm sorry to hear that.\" Andrew said. \"So a forty-five is a good gun?\"\n\n\"One of the best.\" the man replied. \"Let me get my keys and I'll drive you to the spot where you can fire it.\"\n\nAn hour later, Andrew was driving home with his new purchase imagining it pressed against the back of Kenji's head.\n\n*********\n\nIsadora's first day of class was everything she had imagined and hoped it would be. She sat in the front row not wanting to miss a word of what was being said and took notes good enough to rival Kenji's. It didn't matter that she was starting a week later than the others, she would catch up.\n\nThe one thing that she noticed was that no one seemed to pay any attention to the fact that there was a black woman in class. No one spoke to her, but no one bothered her either. Even the professor treated her with respect.\n\n\"Miss Hughes, since you're a week behind, I've asked Miss Sullivan to work with you to help you get caught up. I'll leave it to you to set up a time to meet. Miss Sullivan, please raise your hand so that Miss Hughes knows who you are.\"",
        "Isadora turned to see a short, stocky woman with the reddest hair and bluest eyes she had ever seen smiling at her. Isadora couldn't help but smile back at her. The woman nodded at her and put her hand down.\n\nAt the end of class, the woman approached her.\n\n\"Hello, my name is Maeve; it's nice to meet you.\"\n\n\"I'm Isadora; thank you for helping me.\"\n\n\"I'm happy to do it; we girls have to stick together.\" Maeve replied. \"I have another class and then I'm free for about an hour, what about you?\"\n\nIsadora looked at her schedule.\n\n\"I'm free too, where do you want to meet?\"\n\n\"How about here?\" Maeve asked.\n\n********\n\nAs Isadora waited for Lenny to pick her up from school, she was filled with a sense of accomplishment. She had just completed her first day of college. It was a day that she would never forget.\n\nAs soon as she got home, she spoke to Bella and the children and sequestered herself in her room until it was time for dinner. After dinner she helped Bella with the dishes and went back to her room to finish the work that she had missed the previous week. Fortunately, it was an essay on whatever topic she chose and some reading; nothing too difficult.\n\nShe tackled the essay first choosing to write about the observations that she made on the trip to California. She was surprised that the essay was much longer than the required two pages and hoped that she would be allowed to keep it. \n\nIt dawned on her that she was accumulating things and that she needed a box in which to keep them. She made a mental note to ask Lenny or Bella for a box in the morning. Finally finished with her reading, Isadora wrote a letter to her family.\n\n\"Dear mama and daddy,\n\nAs you know, I am here safe and sound. The people that I am staying with have been very nice to me and have the sweetest children. Bella and her husband Lenny were found by Mr. Jackson the same way I was and are school teachers. Lenny teaches while Bella tutors and helps those of us Mr. Jackson brings here.\n\nI finished my first day of college today and it was wonderful! I think that I even made a friend. It's so different here. No one has called me names or mistreated me in any way. I know and understand that there are those who will, but I haven't met them yet.\n\nI miss you all and will write again soon. I love you,\n\nIzzy.\"\n\nShe put the letter in an envelope, sealed and then addressed it. She laid it next to her books so that it would be mailed in the morning. When that was done, she changed for bed. It didn't take her long to fall into a deep sleep.\n\n**********\n\nAndrew spent the night dissembling and reassembling the gun. He couldn't put it down. When he tried, he immediately picked it up again. He left his room long enough to say goodnight to his parents so he wouldn't rouse suspicions.\n\nBy the time morning came, he was exhausted; but refused to stay home from school. It would only prompt questions that he didn't want to answer. He packed his bag intending to leave the gun at home. At the last minute, he threw the gun into the bag and went to breakfast.\n\n\"You alright son?\" Harlan asked when he saw Andrew's haggard appearance.\n\n\"I'm fine, I was up studying.\" Andrew replied smiling. \"I want to make sure that my grades are up to par so that I can get into the accelerated summer program.\"\n\n\"I understand, but you need your rest too.\" His mother said as she sat a plate of scrambled eggs and bacon in front of him.\n\n\"I'll turn in early tonight, I promise.\" He assured her.\n\n\"What time is your friend coming over?\" Harlan asked.\n\n\"I told him five-thirty; is that ok?\"\n\n\"That's fine.\" His mother replied. \"I'm glad that you're bringing friends home again.\"\n\n\"Me too... I'll see you later.\" Andrew said when he saw the questioning look in his father's eyes.\n\nHarlan watched Andrew hurry away and his sense of apprehension grew. He was beginning to think that his wife was right. Something was happening or had happened to their only child, but he just couldn't bring himself to ask any questions.\n\n********\n\n\"Be careful.\" Patricia admonished as she kissed Kenji goodbye. \"And don't tell me not to worry because it doesn't work.\" She added with a small smile.\n\n\"I will.\" Kenji promised. \"I will call you at lunch time.\"\n\nPatricia hugged him tighter and tried to push away the growing feeling of unease that she felt. Kenji kissed her again, hugged her and met Joel at the car. He had already spent a few minutes with the children and assured them that he would be back for dinner. Of the two children, Ralph was the one who picked up on the general feeling of anxiety.\n\n\"I will return.\" Kenji promised him.\n\nRalph only nodded and hugged Kenji tighter; but he couldn't bear to see him drive away. He was more frightened today than he had ever been. After Kenji was gone, Ralph went to their bedroom and prayed for his father and his friends.\n\n*******\n\nKenji parked the car, got out and grabbed his books. He and Joel walked to the classroom and were surprised to find Andrew already there. The two men looked at each other; but didn't speak. Andrew's eyes were filled with anger and hatred as he looked into Kenji's calm, light brown ones.\n\n\"Why is there such hatred in you?\" Kenji finally asked not really expecting an answer. \"I do not and never have borne you any ill will.\"\n\nAndrew startled, he hadn't expected to be spoken to. Instead of answering, he began to reach into his bag. His fingers had just touched the butt of the gun when he heard his name called.\n\n********\n\n\"Damn it!\" Peter swore when he found one of his tires flat. He had every intention of being at the classroom early to touch base with his partner. He changed the tire as quickly as he could and sped off toward school hoping that his partner would be there or that Kenji would be late.\n\nHe sped into a parking space, grabbed his books and took off at a flat out run grateful that he was in good shape. He literally ran into his partner on the way.\n\n\"I thought you were going to be here early.\" The agent said.\n\n\"So did I, come on!\"\n\nBoth men raced to the room dismayed to see Kenji and Andrew talking.\n\n\"Fuck!\" Peter swore when he saw Andrew's hand in his bag.\n\n\"Andrew! Thanks for dinner last night!\" he called out. He let out a sigh of relief when he saw Andrew take his hand out of the bag.\n\nAndrew turned toward Peter and smiled.\n\n\"You're welcome! My parents are looking forward to meeting you tonight.\"\n\nPeter was impressed and startled with the way that Andrew changed gears so quickly; but didn't show it. His mind was already on how to disarm Andrew without anyone getting hurt. The class gave him two hours to figure something out. He looked over at his partner and nodded at him. The agent nodded back indicating that he understood the situation.\n\n********\n\nKenji took his seat and looked forward. He had just witnessed murder in Andrew's eyes. He now knew that there would be no compromises or reasoning with him. Andrew had already made up his mind. \n\n *************\n\nBy December 1947, In Long Beach California, Howard Hughes carries out the only flight of Hughes H- Hercules seaplane, the television program Meet the Press makes its debut on NBC. The Red Scare occurs- the US House of representatives' votes 346-17 to approve citations of Contempt of Congress against the Hollywood 10. The ten men were blacklisted after they refused to co-operate with the House Un-American Activities Committee (Senator Joseph McCarthy had no direct involvement with this committee. He was the Chairman of the Parliament Subcommittee on Investigations). Palestine is partitioned between Arab and Jewish regions leading to the creation of the State of Israel. The first practical electronic transistor is demonstrated by Bardeen, Britain and Shockley of the United States\n\n**************\n\nThank you all for your patience as I prepared for my daughter's wedding, gallivanted across the country and dealt with some laptop issues. Thanks also to my beta reader Donalde for his time and help with the guns."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "japanese",
        "blatant racism",
        "post ww2"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-11"
}