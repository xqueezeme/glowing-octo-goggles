{
    "title": "A Pleasant Surprise Pt. 05",
    "pages": [
        "Author's Note: All individuals depicted are over 18, this is an adults story concerning adults.\n\nIce cream having been acquired, Ellie and Tom sat at the end of the pier which was rapidly becoming their regular hangout. They'd taken up residence on the prime bench at the very end of the pier which overlooked the water and they sat comfortably cuddling up to each other for warmth as they ate.\n\nAfter a long moment of silence, Ellie looked across at him, \"I guess I should probably ask about today,\" she said with a pained expression, \"Did it happen?\" Tom gave her a puzzled expression so she continued, \"You know, did someone... say something about... well the way I am, now that the word has spread that we're dating.\"\n\nUnderstanding dawned in Tom's eyes and he gave a small nod, \"Yeah, but it was just Saskia Evans being Saskia\" he replied.\n\nEllie gave him a sad smile, \"I did warn you, you alright?\"\n\nTom scoffed, \"I had honestly forgotten, if that gives you any idea of the impact it had.\"\n\nEllie's small sad smile grew to a more genuine one, \"Good, I'm glad.\" Nuzzling slightly against his shoulder she continued on, \"I should probably also ask about the inner turmoil you've almost certainly experienced at SOME point.\"\n\n\"Inner turmoil?\" Tom asked, in response Ellie comically mimed giving a blowjob and Tom burst out laughing. \"Ohhhh, you mean the whole, has it occurred to me, 'I sucked dick, am I gay now' thing?\" he asked, grinning.\n\n\"Well I imagine it's come to mind at SOME point, I didn't think you would freak out about it but it's worth asking,\" she replied, \"I'd rather find out now that it was bothering you than six months down the line.\"\n\nTom shook his head, knowing that he needed to give a serious answer but wanting to joke, \"It had occurred to me. But... all I see when I look at you is a girl. It doesn't FEEL gay, and even if it makes me bi or whatever, I don't really know to be honest and I don't really care. You feel right to me.\"\n\nEllie couldn't help but beam at him, \"You really gotta stop saying things that make me want to swoon, can't you fuck up already?\" she asked, jokingly.\n\n\"Not likely\" he replied with a grin of his own, \"I'm hardly going to DELIBERATELY annoy TBB am I?\"\n\nEllie rolled her eyes and went to untangle them and stand up, \"I hate that I said that and you actually started calling me that\" she said with a pretend scowl. \"You got plans for the rest of the afternoon?\" she asked stretching.\n\nTom took a moment in responding, he was fairly well distracted by the stretch. When she stretched her arms out above her head her blouse showed about an inch of skin above the hem of her skirt and strained the already strained fabric which contained her well endowed chest. Ellie noticed him watching her and just shook her head, \"What'd I tell you about a camera?\" she asked teasingly.\n\nTom chose to ignore her and answered her previous question instead, \"No plans, for once I actually have no homework to do. I'm a free agent.\"\n\n\"Free in so far as you're all mine\" she replied, arching her eyebrow.\n\nNow it was Tom's turn to roll his eyes, \"Naturally dear\" he replied sarcastically.\n\n\"The SASS\" Ellie yelled, bursting out laughing and pulling Tom to his feet, before asking \"Can we go to yours? My Dad will be home and I'm not up for the stress of him meeting you yet.\"\n\n\"Ummmm should be fine, my room's not anywhere as nice as yours, but it should be fine yeah\" he said, blushing slightly.\n\nA gleam entered Ellie's eyes as they walked back to the car, \"How soundproof is your room?\" she asked innocently.\n\nTom shrugged, \"Not really sure to be honest, but if I had to guess, not very soundproof\" he explained.\n\n\"Mmmmm, maybe we should stop by the new Zale Allotment on our way home then\" she replied mysteriously.\n\n\"Zale? Isn't that just a bunch of places under construction? I thought they'd only just finished the carpark.\" Tom replied with a confused look, \"I mean, even the construction workers will have gone home for the day.\"\n\nEllie turned to him with a sudden grin, \"Exactly!\" she exclaimed with a wild look in her eyes.\n\nTom looked at her, his frown deepening, \"You want to go hang out in a deserted car par- Ohhhhhhh.\"\n\n\"I swear, you are so smart and also a complete idiot\" Ellie said giggling.\n\nTom scratched the back of his head as they arrived back at his car and climbed in, \"Yeah that one's on me.\"\n\nOnce inside, Ellie took hold of his shirt a little roughly and pulled him across to her for a brief kiss, Tom's arms were trapped, halfway through buckling his seat belt and could only kiss back. After a long moment, she released him and favoured him with a grin, \"God I just can't keep my hands off you\" she murmured as he started the car and pulled out.\n\n\"I can't understand why, you're the fucking gorgeous one\" he said evenly, \"I just consider myself lucky.\"\n\n\"I mean... I can't disagree with you on the whole hotness thing,\" she answered somewhat absently cupping her boobs and giving them a squeeze before turning to Tom. \"Your hotness comes from more than just your looks though,\" she explained gazing across at him, \"After you get to know someone their personality tends to show on their features. Your features are real gorgeous.\"\n\nTom blushed,\"This got surprisingly philosophical for a conversation on the way to an abandoned parking lot.\"\n\nEllie pointed a finger at Tom, \"Hey, no deflecting, I'm complimenting you.\"\n\nTom laughed, \"I appreciate it, thank you\" he replied smiling.\n\n\"You're very welcome,\" Ellie said smiling, before a thought came to her. \"Oh, I almost forgot, I meant to ask you earlier, you know how our last school holidays before exams are coming up?\" Tom nodded affirmatively and she continued, \"I was wondering if you wanted to go away for a bit... maybe just a few days, just us?\" she asked.\n\n\"That sounds great!\" Tom said, thinking briefly about the things they could get up to on a trip by themselves, \"Did you have anywhere in mind?\"\n\n\"I was kinda thinking maybe somewhere up near Mainesli?\" she said hesitantly.\n\nTom looked across at her, \"Isn't that... I mean, I don't mean to... Isn't that hugely expensive?\" he asked, obviously not wanting to bring up the cost.\n\nEllie nodded, \"Look... I know it sounds kinda... spoiled of me, but Dad's been wanting to go with me on a holiday for awhile but he's had to cancel the last three trips we planned... so he said he'd send me away with anyone I wanted...\" she said, rushing out the words.\n\n\"I mean, it does sound kinda spoiled\" Tom said laughing, \"But I mean, I guess? It does sound like fun.\"\n\n\"You would have to meet him first though, my Dad I mean\" Ellie explained.\n\nTom nodded, \"I kinda figured that was going to happen eventually... we're kinda official now\" Tom said with a smile, as they arrived in the new Zale development area.\n\n\"This is true, and I can meet your parents too, I mean that'd only be fair.\" Ellie said, keeping an eye out for the car park they were looking for. \"Do your parents know that you're... well... dating a trans girl?\" Ellie asked bluntly.\n\n\"Mum knows yeah, but she's cool with it, as far as I know\" Tom said, slowing down as he started looking more closely for where they were parking.\n\nEllie let out a long breath, almost in relief it sounded like, \"That's helpful, what about your Dad?\"\n\nTom tried to smile, but the effort was weak. \"I'm sure he would be fine with it, but he, um... passed\" he finished awkwardly.\n\nEllie put a comforting hand on his leg, \"I'm sorry,, I didn't know\" she said simply.\n\n\"No way you could have,\" Tom replied, with a real smile this time, \"Besides it was a long long time ago now.\" Tom pushed on with their earlier conversation, \"Anyway, what's in Mainesli?\"\n\nEllie sensed the effort to change the subject and went along with it, \"Well! There's heaps of stuff, amazing nature walks, beaches, tons of cool touristy stuff and um- 5 star hotels'' she finished embarrassedly.\n\n\"5 Stars? Nooo that's too much, surely!\" Tom protested, not wanting to impose on her Dad's generosity.\n\nEllie squirmed in her seat, \"It'd be beautiful though, just us? We could just relax and enjoy ourselves.\"\n\nTom shook his head disbelievingly, \"I've never stayed anywhere fancy before... It would be nice. Are you SURE your Dad wouldn't think badly of me for accepting?\"\n\nEllie shook her head vehemently, \"Not at all, in fact I think he'd enjoy treating us.\"\n\n\"I guess I need to make a really good first impression then\" Tom murmured to himself, but Ellie grinned and gave his leg a squeeze.\n\n\"That won't be a problem, he'll love you, you're a nerd like him\" she said teasingly, \"Oh look! That's perfect, right there, pull over\" she said, pointing off to the deserted car park.\n\nTom shook his head amusedly and pulled into the car park, doing his best to find an out of the way space.\n\n\"So what did you- oh!\" Tom was cut off mid sentence as, in one fluid motion, Ellie climbed over the center console, grabbed the gear lever for his chair, slid it back as far it would go and knelt straddling Tom. \"So you've done that before\" Tom murmured happily as Ellie settled herself in his lap.\n\n\"Once or twice\" she whispered with a grin and she slowly leant down towards him, \"For some reason girls in particular seem to find it VERY hot for some reason\" she finished as she placed her hands delicately on his chest and kissed him hard.\n\nTom's hands automatically encircled her and pulled her in close as the kiss deepened. Tom brushed his tongue against her lips and Ellie let out a little sigh, letting her tongue dance with his. \"You're a really fucking good kisser\" Tom muttered between kisses, one of his hands slowly starting to slide lower to feel the firm curve of her ass.\n\n\"I try, your shirt\" she said crisply, taking a grip on the hem of his shirt and pulling upwards when he raised his arms.\n\n\"Buttons\" he murmured, and they both attacked the buttons on her blouse until it came loose and Ellie struggled to shrug out of it impatiently. One of Tom's hands slid underneath her skirt to feel her practically bare ass, while the other cupped her bra clad breast \"A thong at school? With that short a skirt?\" He observed with a smirk.\n\n\"I'm bad and there's no way you don't love it\" she said, winking at him. Finally free of her blouse she leant back down to kiss him, but Tom beat her to it. He started kissing down the side of her neck, causing a shiver to run down Ellie's spine.\n\nThe feeling tore a small moan from Ellie's lips and she started to grind her hips against Tom, he could start to feel the hard shape of her cock up rub against him through her underwear.\n\n\"Back seat, now, I need your dick in me 10 minutes ago\" she whispered furtively. Tom nodded and clumsily they piled out of the car, before quickly climbing into the back seat. Miraculously, Tom managed to get his pants off as he made the climb back in and Ellie merely hiked up her skirt around her stomach and slid her underwear down her legs.\n\n\"Fuck, lube- my purse, front seat.\" Ellie said frustratedly reaching around in the front for her bag.\n\n\"You carry lube?\" Tom asked curiously, enjoying the sight of her bent over the console reaching around in the front seat.\n\n\"Not normally, but ever since I started dating you...\" she trailed off, fishing the small bottle out of her bag and hurriedly smearing lube on Tom's hard cock. \"Where do you want me?\" She asked impatiently.\n\n\"I kinda liked seeing you bent over just now actually,\" Tom said smirking.\n\n\"Bent over it is\" Ellie replied, grinning, as she got on all fours on the backseat and slowly lowered herself until her tits were pressed against the seat and her ass was sticking up. Bent over as she was, Ellie swayed her hips ever so slightly in anticipation.\n\n\"Fuck you're sexy,\" Tom muttered under his breath as he lined up with her ass, pressing the head of his dick against her.\n\n\"Remember slooww!\" Ellie finished with a gasp as Tom inserted his entire length into her ass in one long slow movement. \"Oh my god\" she gasped in a high pitched voice.\n\n\"Was that too much? You okay?\" Tom asked concernedly.\n\nEllie shook her head making little whimpering sounds, \"no no, that was fucking perfect. I could get used to this\" she mused to herself as Tom began his first long, slow and steady stroke.\n\n\"You want it any particular way,\" Tom asked as he completed his first stroke and began sliding back in.\n\nEllie stretched slightly and miraculously seemed to arch her back an extra couple of inches, \"I'm in no hurry, just make me feel good\" she murmured as Tom's cock slid deep inside her again. Tom obliged, taking hold of Ellie's hips and started fucking her nice and slow, finishing each stroke with a thrust at the end as he bottomed out. Ellie let out soft moan as he fucked her thrust into her, almost whimpering as she felt the length of his hard cock inside her. Tom brought back one hand and gave Ellie's ass a soft slap, massaging the curve of her ass when his hand made contact. Ellie jolted slightly with the contact and gasped, \"Mmmm do that again?\" she asked in a hazy voice.\n\nTom grinned, realising he'd hit on something she liked and spanked her again, this time with a lot more enthusiasm and was rewarded by an involuntary moan from Ellie. \"Fuck, harder Tom\" she whimpered.\n\n\"You liked being spanked huh?\" Tom asked with a smirk as he subconsciously increased his pace of thrusts slightly.\n\n\"I'll be your ass slut any day of the fucking week\" Ellie moaned, \"just don't stop now.\" Tom brought back his hand and let it fall with a resounding slapping sound on Ellie's presented ass and Ellie responded with another loud moan, thrusting herself back against Tom cock. \"Harder- more, god please\" she begged.\n\nTom began spanking in time with his thrusts, bringing his hand down hard on her curvy ass, just as he was at its deepest inside Ellie. Ellie was lost in ecstasy as her moans became one long drawn out stream of pleasure. Tom noticed that he'd gradually been turning Ellie's ass a deep shade of red with his slaps and slowly increased his pace until he was fucking her hard and fast. Ellie met each thrust and pushed back, driving Tom's cock even deeper causing them both to moan in pleasure.\n\nTom could start to feel himself close in on his orgasm and Ellie moaned in pleasure as she felt his cock twitch inside her. \"You gonna- cum- inside me- Tommy?\" she asked, her words punctuated by his powerful thrusts. Tom didn't answer, instead taking hold of Ellie's shoulders and pulled her upright, grabbing her tits roughly and thrusting as hard as he could.\n\nEllie gasped as she was pulled forcibly upright but quickly adjusted and moaned loudly when Tom twisted her nipple playfully. Ellie placed her hands over Tom's encouraging him to squeeze harder, \"I'm g-gonna cum\" Tom muttered in her ear.\n\nEllie simply grinned, \"Cum for me baby, fill me up\" she murmured as she felt Tom start to cum. Ellie smiled contentedly as she felt her ass fill with Tom's warm seed. She was however caught unaware when just as she started to feel Tom's cock deflate inside her slightly, she felt him push her back down against the backseat.\n\n\"Tom? Wha- oh GOD, F-fucckkk\" Ellie squealed in pleasure as Tom began stroking her dick hard and slid several fingers into her stretched asshole. Working quickly he began massaging her prostate and after the serious fucking she'd just recieved, it was only moments before Ellie came hard, her load shooting all over the backseat.\n\n\"Where did that come from?\" Ellie whimpered quietly, turning over to lay sprawled out on the backseat, her legs having given up on her somewhere during her orgasm.\n\nTom grinned and helped her into a sitting position, him leaning back against the door, with her laying against him. \"I may or may not have done some research\" he said with more pride than perhaps he should have done. \"I wanted you to get off too after I came and I just... kind of went for it, hope that was okay?\" he asked.\n\nEllie looked up at him from her half-seated, half-reclined position and smiled, \"Oh babe, it was VERY okay\" she said, \"Fuck that was good\" she mumbled, almost to herself.\n\nA moment passed in happy contentment before Ellie tensed up and let out a groan, \"Fucckkkk\" will your Mum be home? I am completely covered in cum, I can't meet her like this.\" she said, gesturing to her disheveled appearance.\n\n\"Inside and out\" Tom mumbled with a chuckle, Ellie turned and shot him a glare, \"Hey! It's okay,\" he said holding up his hands, \"We can go past my um- gym? It's closed on Mondays, but I have keys. They've got showers there.\"\n\nEllie relaxed again, \"Good good, can we head there now? I'm getting sticky\" she said, giggling.\n\nEllie's giggles proved infectious and Tom couldn't help laughing with her, but started dressing himself, \"Sure thing.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nEllie towelled furiously at her hair, before largely giving up and putting it up in a bun to disguise how wet it was while Tom locked up behind them, \"You know when you said 'Gym' I thought you meant... like a normal gym, not a sabre academy\" she said with a smirk.\n\n\"It was easier to explain at the time,\" Tom explained as they climbed into the car. He reversed out onto the street and started the short drive home, \"Plus it prolonged the inevitable teasing I'm going to get from you for knowing I train in sword-fighting.\"\n\nEllie shook her head, \"Nah I think it's kinda cool actually\" she said, smiling as she checked her makeup in a mirror, \"If I ever need you to fight for my honour, I know you're appropriately trained\" she managed to say without laughing. Tom's sidelong look at her made her disrupted her poker face, \"I wasn't kidding, I do think it's cool. But I couldn't resist the joke,\" she said placatingly..\n\nTom smiled across at her, ruining his attempt at sulking, \"There's a guy named Malcolm who owns the hall and I run some classes for him, so he gave me some keys a while back. Convenient if you ever need a shower or a big space for something.\"\n\n\"Can I come watch sometime?\" Tom gave her a questioning look, \"I mean, it's a couples thing, I'd really like it if you came to watch me play soccer next season, and this is your sport\" she explained.\n\n\"Yeah, I think I'd like that\" Tom said with a smile and they lapsed in companionable silence until they neared Tom's house.\n\n\"Any tips for meeting your Mum?\" Ellie asked, breaking the silence.\n\n\"Ummm, not really no\" he said, \"Just be yourself, maybe don't mention how much sex we've had?\" he added, almost as an afterthought.\n\n\"Oh thanks for letting me know, cause that was going to be my opener,\" she replied sarcastically, \"Hi Ms Edwards, I'm banging your son! We fucked on the way here, one time I even made him deep throat my cock.\"\n\nTom just burst out laughing, \"I almost want you to say that now, can you imagine the look on her face?\" he asked as they pulled into the driveway.\n\n\"Oh shuddup\" Ellie said, blushing slightly at the idea, \"Alright wish me luck\" she muttered as they went to get out. Ellie self consciously pulled her skirt down a couple of inches and tried in vain to make her blouse look slightly less like it might burst at any moment.\n\nTom opened the door and called inside, \"Hey Mum? I brought someone for you to meet.\"\n\nThere was a crashing noise from out in the kitchen before Tom's mother erupted from the kitchen enthusiastically, \"Hi!\" she said a little too loudly, beaming at the pair.\n\n\"It's nice to meet you Ms Edwards\" Ellie said, shyly stepping inside.\n\nTom's mum made a dismissive gesture and moved forward to sweep her into a bear hug, \"Call me Carol, please. I'll never answer to Ms Edwards.\"\n\n\"Yes Ms- I mean, yes Carol, thank you\" Ellie said, amidst being crushed. Carol almost went to start peppering the couple with questions but seemed to realise she was keeping them there, \"Well go on up, I'm just making dinner, will you be staying?\" she asked.",
        "\"Umm\" Ellie glanced across at Tom, who shrugged, before responding, \"I really appreciate the offer, but I should probably head home before that, I haven't seen my Dad in a few days.\"\n\nCarol nodded and smiled, \"Then we'll have to have you another time, nice meeting you!\" she called as Ellie made her way up to the stairs. Tom glanced back at her as Ellie's back was turned and caught his Mum mouthing 'WOW' before returning to the kitchen. Tom rolled his eyes before following Ellie up the stairs to his room. As he opened the door and went inside, Tom said \"It's not much, but it's home. Cosy I guess\" he finished, running a hand through his long hair.\n\nEllie looked around the small room, taking in his desk and bed, which was the only furniture that fit into the room, leaving only a small area to sand freely in and smiled, \"I love it, it's cosy\" she agreed. \"You got Mario Kart?\" she asked suddenly with a grin.\n\nTom chuckled, \"Yeah, I have Mario Kart, you keen for a game then?\" he asked.\n\nEllie nodded adorably, settling herself on his bed as Tom swiveled his monitor around and leant over his desk to plug in the right cables.\n\n\"Mmmmm\" Ellie intoned quietly, checking out Tom's ass as he worked out the setup.\n\nFinishing with the cables, Tom turned around, \"What?\" he asked curiously.\n\nEllie looked up at him with too-innocent eyes, \"Nothing, nothing\" she said evasively.\n\nTom sat down next to her, handing her a controller, \"You're a terrible liar, what?\" he pressed.\n\n\"I was just checking you out\" Ellie said a touch defensively, \"and what with you all bent over and all...I was wondering if... well if you'd ever thought about...\" she trailed off hesitant to ask, \"...about being the bottom\" she finished.\n\nTom looked across at her, \"I mean, it's come to mind... I've just never done anything like that before\" he answered honestly. \"If you wanted to, I suppose, show me the ropes or something sometime, we could try that.\"\n\nEllie looked back at him and grinned, \"Really? I promise I'd be gentle, we'd take it slow.\" Tom nodded and she pulled him for a hug, \"I have planning to do\" she said a touch devilishly.\n\nTom laughed, \"You sound so evil, I thought you were going to be gentle,\" he replied.\n\nLaughing along with him, Ellie made a dismissive gesture, \"No no! I will, I totally will, I'm gonna make it real easy. We'll make an evening of it sometime and I'll take care of you properly\" she explained.\n\nTom smiled and kissed her forehead before returning his attention to the screen, \"I'd like that\" he said simply.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe rest of the afternoon passed in a blur of video games mixed with some light making out. Ellie and Tom were both way of making too much noise and they both had to repeatedly make an effort not to let things go further lest they start something they couldn't stop. Eventually, it started to go dark outside and Ellie decided it was probably time for her to head home.\n\nAfter a quick goodbye to Tom's mum, Tom drove her home and dropped her at her front door. \"See you at school tomorrow?\" he asked.\n\nEllie stood on her doorstep but smiled back at him, \"Yeah! Of course, hey wanna sit with my friends tomorrow? I can introduce them to my new bf.\"\n\n\"Oh? Yeah I could do that, I'm not super great with new people...\" he explained weakly, before Ellie closed the short distance between them and hugged him tight.\n\n\"I'll be there for you! Besides, they're super easy going, I promise you'll have fun once you relax\" she said, gazing down at him, her big blue eyes looking at him almost pleadingly.\n\n\"Okay! Sounds fun, just tell Jess to go easy on me\" he said with a smile.\n\n\"Oh she was just being protective,\" she said dismissively, \"She's much friendlier when you get to know her.\"\n\n\"I look forward to it,\" Tom replied, holding her tight. She leant down to give him a quick kiss before pulling away and ducking inside.\n\n\"See you tomorrow babe!\" she called over her shoulder.\n\n\"See ya TBB\" he answered with a smirk.\n\nHis last sight of her before the door closed behind her was a glare and an eye roll before he walked smiling to himself back to his car. Life was good.\n\nTo be continued..."
    ],
    "authorname": "Risis",
    "tags": [
        "orgasm",
        "transgender",
        "high school",
        "massage",
        "teen",
        "trans-girl",
        "anal",
        "consensual",
        "make out",
        "car sex"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-pleasant-surprise-pt-05"
}