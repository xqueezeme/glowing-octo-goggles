{
    "title": "We Needed a Vacation Ch. 03",
    "pages": [
        "All of my writing is fiction and the stories and characters are all products of my imagination. They were created for my fun and, hopefully, your enjoyment. Some of the events in the stories are not particularly condoned nor encouraged by the author but are there to create and enhance the story of the imaginary characters and their lives. Comments are always encouraged and carefully reviewed. Enjoy!\n\nThis is Chapter 3 of a story about four couples who meet as they are vacationing in Belize and decide on having a \"no limits\" vacation. Reading the first two would be helpful to know the couples and what has gone on before, but isn't entirely necessary.\n\n*****\n\nI looked at Rhonda and she at me. She said, loud enough for everyone to hear, \"The way I feel right now I'll just grab you and we can do what they did at the end there. If you got naked and just looked at me I'm pretty sure I'd cum right away.\" \n\nI shook my head in agreement. \"When they finished I had to check myself to make sure I hadn't cum already.'\n\n\"I have an idea,\" she said finally. \"Let's put on our suits, go to the beach and relax for a while, then come back here for the second half of the double feature.\" We all agreed.\n\nKirsten slowly got up and came over to sit beside me as Rhonda went to help Caleb sit up and then stand. \"I love you so much,\" she said quietly. \"All I could think of that whole time was you watching me and everything I did was for you.\"\n\n\"I love you too,\" I replied, \"and all I could think about there was you and how freaking sexy you are. This week has shown that and I'm the luckiest man in the world to have found you and to have you. But,\" I added, \"when he threw you down on the floor, your legs over his shoulders and he jammed that big thing straight in and pumped away, I'm not sure you were thinking about me.\"\n\n\"Well,\" she giggled, \"when I was doing my thing I was thinking of you. That last was him doing his thing.\" I had to laugh with her. \"And, see if you still feel that way after your time with that big boobed, long legged, sexy blue eyed blond later.\"\n\nCaleb and Rhonda took off for their place and Kirsten and I changed into our bathing suits. As she stood in front of the mirror, straightening her hair a little I couldn't take my eyes off her.\n\n\"I see you looking,\" she said, still working on her hair.\n\n\"That okay?\"\n\n\"It's perfect,\" she replied, turning to face me and holding her arms open. I walked over to her and she put those arms around my neck. \"Great vacation,\" she said. \"Thanks.\"\n\n\"Likewise.\" We looked at each other for long seconds, then kissed very tenderly.\n\nFinally dressed, we went to the beach, threw down the blanket we had brought and our towels just in time to see Rhonda and Caleb coming from the other direction. They threw their towels down and Caleb immediately headed for the water. Kirsten gave me a knowing look, winked and walked slowly toward the gently breaking surf. I looked over at Rhonda and she smiled, remembering also I supposed, or maybe hoped.\n\n\"Any ideas?\" she said.\n\n\"You're the experienced expert,\" I quipped. \"But, with you, I'm happy doing anything.\"\n\n\"Thank you,\" she said, then looked at me with a very different look. \"But, you don't think highly enough about yourself. There are more important things than looks and other stuff.\" I frowned. \"Stop that. You know what I mean. There's just something about you that's totally appealing.\" Now I smiled and she continued. \"I would be happy doing just as you said but, after what Kirsten did . . .\" Her voice trailed off.\n\n\"So, do you think we should plan something?\"\n\nShe signed deeply. \"Let's get in the water.\"\n\n\"Only on one condition. That water holds memories for me and nothing was planned was it?\"\n\n\"No, it was a fantasy from my mind.\"\n\n\"No planning then, just fantasy. Just whatever.\"\n\nWe jumped up and ran to the water, laughed and splashed and dunked each other to yells and squeals and much, much laughter. Finally we toweled off, grabbed the blanket and headed to the bungalow. When we got inside it was actually a little awkward as the ladies complained about how awful they looked with the wet hair and so forth. \n\nAs we laughed a little more, Rhonda came to me and took my hand. \"Come with me,\" she said, leading me to the center of the room. She moved the chair which was still there from earlier. Then she stood perfectly still, those blue eyes actually looking down at me just a little with what, to my now lust clouded mind, seemed like longingly. \"Would you like to take the top of my bikini off?\" I nodded and moved around behind her to unfasten the top. It fell to the floor at her feet. \"How about the bottom?\" she continued. I untied the sides of her bikini bottoms and it too fell to the floor. She turned around slowly to face me, raised her hands above her head and rose up on her tiptoes. Those gorgeous boobs were right in front of my face as she twisted slightly and pressed the right nipple against my lips. I kissed it gently, then licked around the areola before greedily sucking on it as it grew gradually in my mouth. Then she twisted again and the left one was there and I licked and sucked again. She dropped off her tiptoes. \"May I take your swim trunks off?\" Again I nodded then watched her unfasten the lace of the suit, stretch out the waistband and slowly slide it down my legs until I stepped out . She looked down at my very erect cock. Again those blue eyes looked appealingly at me. \"May I?\" she asked softly. \n\nMy third nod brought wonderful results. She took it in her right hand, then slowly dropped to her knees in front of me. I looked down at the top of that water drenched and unkempt blond head as it moved forward. Her lips opened and the head of my erection disappeared into her mouth and her tongue rolled over it. Then, very slowly she pressed forward and I felt myself sliding over her tongue. That erection keep disappearing to the most intense tingling that washed over me from head to toe until her lips touched my pubic hair. Holding it tightly with her lips, she withdrew it just as slowly as it had entered and I realized I was moaning. It finally came out with a little pop and she looked up at me and smiled. Then, one more time it was repeated, and one more time after that and then again, in and out with the pop at the end. I was beginning to have trouble standing.\n\nShe stood up in front of me again. \"Touch me,\" she said very softly. She held her arms out and spread her legs invitingly. So, I touched her cheeks, I pressed a finger between her lips and onto her tongue until it was wet with her saliva. I rubbed her lips until they were wet and glistening. I gently rubbed the soft skin of her neck, then onto her shoulders and along the top of her extended arms and onto her hands. I took hold of her right hand and pulled it down in front of me. I had to take a deep breath as I hadn't noticed before that she had put on red nail polish. I opened her hand and scratched the palm gently with my fingernails. I bent and kissed her palm then ran each finger into my mouth individually. I looked at the sensual tiny blond hairs on her breast, so delicate they were almost invisible. I gently stroked those breasts, lifted them, pressed them together, then moved down her sides to her hips. I slid one hand across her flat stomach and the other across her equally flat belly. I brushed the little triangle of carefully trimmed blond hair. I looked up and her eyes were closed and she was taking short, shallow breaths.\n\n\"May I touch more?\" I asked, continuing the feigned formality of what we were doing.\n\n\"You better,\" she mumured, not moving.\n\nI ran my fingers through that hair, then down the creases at its edges and onto the inside of her thighs. Her very wet cleft was very accessible with the careful trim she had done so I began caressing it with a finger from each hand. She was jerking ever so slightly as I did it. I pushed a finger just inside, then down to the bottom and back to the top where she audibly groaned. I spread it apart and used my tongue to give her clit three or four licks which brought a slightly louder moan and another jerk.\n\n\"May I stimulate you to climax while you stand there,\" I said looking up at her. Her eyes slowly opened.\n\n\"Yes,\" was all she said.\n\nI spread her with both hands, and started with my tongue. With each flick there was a reaction, a moan, a small jerk, a groan and I was afraid I was going to cum just listening to her. Five minutes of that and I took that nub between my lips, lightly using my teeth as well. Now her hips were bucking gently and I hoped she could keep her balance. I began sucking harder, putting my hands on her ass and pulling her against my face. Sucking, I used my tongue to rub and I could feel her ass cheeks begin to tense. It was unbelievable the feelings I had as she began to cum. Suddenly it was there, jerking, with loud and repeated , \"Oh, oh, oh,\" and finally after what seemed like 30 seconds, a final grunted \"oh\" as she grabbed my head, lost her balance and fell on top of me. As I started to move her mouth was on mine, her tongue darting in and out of my mouth, her lips trying to swallow my mouth. She kissed my eyes my nose, then my mouth again, our tongues entwining. She opened her eyes and that intense blue this close was overwhelming.\n\n\"Touch me,\" I said softly.\n\n\"Where?\"\n\n\"You choose,\" and almost instantly I felt her hands and her lips on my chest, then sliding down and finally, both hands holding my cock and two lips gently kissing it.\n\n\"Now I'm going to touch you with something different.\"\n\nShe slid her leg across mine, and raised up just enough to slide that still very wet cleft across that cock. I watched those red nailed fingers guide it to that place where she was going to touch me. And, not unexpectedly, I groaned the whole time she settled down on me. Heat rolled over me and through me. She reached down and took my hands, intertwining her fingers with mine. She leaned forward and said, \"Do you like to watch tits bounce?\" I nodded. \"Then watch, and don't move. This is my treat.\" \n\n\"I'll try,\" I grunted and she began to rock her hips slowly. I looked down and could see my cock, soaked by her juices, disappearing into that warm and slippery place. She began to move a little faster, then a little faster yet. With each thrust her breasts would swing forward and then backward, slapping against her chest. She would rise up until the head was just between those outer lips, then slam down, her mound against mine. Then up, then down until I don't think I was aware of anything. Suddenly there was a boiling feeling in my loins and I couldn't hold still any longer. She sensed what was happening and pulled off and quickly her mouth had me as my orgasm exploded with jerks as I arched my hips and filled her mouth and throat with that hot, milky liquid. The spasms kept coming to the unintelligible sounds I was making and I could feel my juices squirting into her until, finally, it slowed and I lowered my hips, but she didn't let go as I could feel her swallowing and cleaning me out completely.\n\n\"Wow,\" I heard Kirsten say. \"That was beautiful.\"\n\n\"And you are beautiful,\" Caleb said, meeting Rhonda's eyes.\n\nShe looked down at me. \"I guess we did okay for no planning,\" she giggled. I remembered her limits and we had been able to not infringe on them.\n\n\"And just think,\" I threw out. \"We still have the hot tub ahead of us.\" Lots of groans this time, but a different type.\n\nWhen Rhonda came back from the bathroom she put the bikini on and Caleb said they'd head for their place and meet us for dinner as usual. He smiled at Kirsten and then at me as he could probably read a mind or two and I replied, \"Same to you,\" and they left laughing.\n\nI looked over to Kirsten who hadn't moved from her chair. \"I wish I had a video of that look I'm getting,\" I said.\n\n\"Is there more where that came from?\" she asked simply, ignoring my statement, her mind obviously somewhere else.\n\n\"For you, always.\"\n\nShe stood up and walked over in front of me, extended her arms over her head and raised up on her tiptoes, mirroring what Rhonda had done.\n\n\"Would you like to remove my bathing suit?\" she asked softly, which I did immediately. \"May I remove yours?\" which happened very quickly.\n\nThings progressed smoothly and easily, with her being the focus of the attention giving me a little time to recover. But recover I did and, to my surprise, as she didn't usually like to do it that way, she climbed on top and carefully guided me into her, then grabbed my hands with hers. As she began to bounce up and down and I began to groan she whispered, \"They'll bounce a little.\" I stared at those perfect tits as, once more, I erupted and that rush of feeling swept through my body. She slowly stopped moving and smiled. \n\n\"You better smile,\" I said. \"That's the best there is.\" After that I got a very sweet kiss. \"Now for you.\" I suggested.\n\n\"No, I'm good and very satisfied. Maybe later but just doing that with you is great for me.\"\n\n\"You sure?\"\n\n\"Yep.\"\n\nWe snuggled for quite a while, and then finally got up to get ready for dinner.\n\n\"Why are you looking at me like that?\" She did have a smile as she asked.\n\n\"Because you're you,\" I said matter-of-factly. \"And that you is, well, . . . \" My voice trailed off.\n\n\"This week has been different, hasn't it? The me you see is not the me that's usually around. I don't know quite what happened. You know that when you start making love to me and my arousal level goes up I get kind of different. Well, this week I found that the alcohol does the same thing. That first night with the hot tub - wow. The longer I sat naked in that tub, and saw the others naked too, the more I decided that this week you'd see a me you'll probably never see again. Here, with these people we'll probably never see again, I decided to be someone that was the opposite of the me that's normally around. And, I've done it. When I was in the market today, exposing myself to anyone that would like a look, it was kind of exciting and, I was thinking about what you say about seeing those parts of a woman, it's not how big and anything else, it's WHAT they are. I don't think I saw a single man stop looking down that shirt because my boobs were small. And, it was kind of flattering to have them staring, despite what I had to do to have it happen.\"\n\n\"How about these other men?\" I asked. I know you've enjoyed them.\"\n\n\"I have enjoyed them immensely. And you've enjoyed those women as well. But, it's been fun and that's all. What we just did a few minutes ago was a zillion times more satisfying because it was you. My trying to be a seductress and being with those men is fun, but that's all. And, from what I can see, it's the same for all of us, except for Caleb and Rhonda who have done this before. You seem to have enjoyed her for sure.\"\n\n\"I have, and she paid me a very nice compliment. She said I was just basically a nice guy, not the handsomest guy around but just such a genuine person that, I mean, she's totally in love with Caleb but, despite her towering over me, she finds me very attractive. Whew, that was hard to say.\"\n\n\"But I know what she means. And you are and that's why I screw your brains out every chance I get. And speaking of that, let's skip the hot tub tonight.\"\n\nA deal,\" I replied, \"with one exception. Let's do the hot tub because it really is relaxing at the end of the day, and maybe even nude, but nothing after that.\"\n\n\"I guess we can do that.\"\n\nProbably wisely we decided to take showers before dinner and, dangerously, decided to take them together. It actually worked well as we each washed the other's back carefully and left the fronts alone. We dressed in the usual, shorts and shirts and we each had on leather flip-flops. We started on the semi-long walk to the dining room and Kirsten hesitated a second, then shrugged and came on. I looked questioningly but she just shook her head and kept walking. About half way there she said suddenly, \"I knew I should have gone back and now I'm not sure I can make it.\"\n\n\"Have to pee, huh,\" I giggled at her.\n\n\"Yes, and I'm not going to make it in either direction,\" she said rather frantically.\n\n\"The jungle is right her if you need it.\"\n\n\"I can't do that, it's always a mess and I don't have anything to wipe with. Oh, crap.\" I grabbed her hand and started pulling her into the jungle. \"No, no, I can't.\"\n\n\"Yes you can, I'll help,\" I said which got me a weird and questioning look. When we were in deep enough that we couldn't be seen from the path or the beach I said, \"Okay, take your pants and panties off.\"\n\n\"You're weird,\" was a stern reply.\n\n\"Just do it, you don't have much choice.\" Dancing a little in discomfort she managed to get those two items off. \"Okay, now put you left foot up on this tree.\"\n\n\"What?\"\n\n\"Just do it.\" She put her foot up, looking at me like I was the creature from the black lagoon. \"Now take your hands and spread yourself.\" Another look, but she did it followed quickly by a thin stream of yellow urine arching away from her and into the undergrowth. A slow smile as she continued to relieve herself until nothing more was coming out. She stood there a second, then took her finger and flipped away the last drop.\n\n\"First, remind me to wash my hands before dinner and second, where did you learn that?\"\n\n\"Don't know, but it just seemed to make sense. Aren't you glad your husband is a quick thinker.\" With that I got a right fist to the shoulder. We made it back to the path and she reached out to take my hand. \"Oh no,\" I said, laughing and moved around her to hold the other hand.\n\nEveryone was there for dinner and we laughed and talked as usual, finding out that Alison and Rich were taking some kind of an evening/night cruise and Caleb and Rhonda were hopping a boat to see a show she particularly wanted to see. So, it would be Libby and Marshall and Kirsten and I hanging out this evening. We bid the others good bye with a wish to have fun and headed back to our enclave. We each went into our bungalows and, without consulting, four people emerged totally nude and hoped in the hot tub, with Libby sitting across from me and Marshall across from Kirsten. We laughed, we talked, we avoided the subject that seemed to be on Libby and Marshall's mind until suddenly I felt Libby's foot between my legs as it gently rubbed my cock.\n\n\"No one has said anything,\" Marshall finally began, \"so I guess we should decide what to do tonight.\" I glanced at Kirsten but she was noncommittal. He looked over at her. Nodding at Libby he said, \"We've talked a lot about what is going on here these few days and we've guessed you guys have too.\" Kirsten nodded. \"I'm guessing that the four of us are being something we've never been before, and may never be again. What we're doing is just fun.\" He stopped and cleared his throat as Libby's foot continued to rub against my cock. \"Libby and I really enjoyed our time with you guys last night, for lots of reasons, and we were thinking that maybe, since it's just the four of us, we could do it again.\" There were a few seconds of silence.\n\nKirsten said, \"What do you think about your wife with another man?\"\n\n\"Well, I'm insecure enough to have been terrified that first night. I thought she'd come back to me, totally enthralled with whoever she was with and not at all interested in me. But,\" and his cheeks reddened a bit, \"when we got to our bungalow we had the most fantastic sex we'd ever had . . . over and over and over.\" \n\nWe all laughed and Kirsten added a, \"same here.\" Then she added, \"I guess we should go ahead before Pat blows his load from Libby rubbing him with his foot.\" She looked at me. \"The water's still fairly clear, even with the bubbles,\" she smiled at me and Libby blushed a little. \"Oh,\" Kirsten added. \"Last night Libby and Pat sneaked over and peeked at us so, tonight may be our night to peek.\" She looked over at Marshall who looked anxious. \"So much for plans,\" she said softly as we passed.",
        "Kirsten and Marshall went to our place and Libby and I to hers. Once inside she turned toward me with a, \"I'm ready to do anything with you\" look. \"What sexy clothes do you have?\" I asked suddenly.\n\n\"Not much,\" was her quick reply.\n\n\"Any muscle shirts of Marshall's?\"\n\nShe shrugged and went to a suitcase that was obviously his and came back with a black muscle shirt. \"Put it on,\" I said.\n\n\"It's way too big,\" she said, sliding it over her head.\n\n\"I know. That's the point. Now bend over toward me.\"\n\nShe bent over and looked down. I could see right down the front where her breasts were totally exposed, and she could see that too. She looked up at me.\n\n\"Tomorrow, wear that down to the shops just like that. Bend over and look at things in every booth so men can look down there and see those big boobs and maybe hard nipples depending on how you feel.\"\n\nShe looked shocked but said simply, with a smile, \"okay, if you fuck me tonight,\" and pulled the shirt back off and threw it aside. Then she moved against my naked body. I put my arm around her and we went into the bedroom. \n\n\"Are you okay with Marshall seeing us, because I'm sure Kirsten will bring him to the window some time.\"\n\n\"I saw him so yes, I guess so. And, if he's like me he'll get so turned on watching he'll cum just standing there. Now, lay down on the bed and put your arms out to the side and spread your legs.\" She climbed quickly on the bed and did just as I suggested.\n\n\"You have the most amazing soft and velvet-like skin and I'm going to experience it again.\" Slowly I began rubbing, her cheeks, her neck, out her arms and back and then to her chest and down onto her breasts. I stroked, lifted and stroked some more, fingers rolling around on her nipples which had sprung to life. Down her stomach, gently touching every spot of skin, then her belly, then her hips and down the outside of her legs to her feet, rubbing the bottoms, gently taking a big toe in my mouth, then up the insides of her thighs as she began to breathe deeply, Making little moaning sounds. Up and down her legs several times, then a finger through her slit and inside to a gasp. Another finger on her clit as she began to move her hips.\n\n\"The drawer,\" she said through the other sounds. I looked puzzled. \"Open the drawer,\" she said. As I slid over to open the drawer she rolled over. In the drawer was only one thing, a small tube of K-Y jelly. I picked it up as she pulled her knees up under her, her butt up in the air, her face still down on the bed.\n\n\"I'm selfish,\" she said quickly. \"I want to do this with Marshall but I want to be ready.\" I quickly realized that she wanted to do anal for the first time with me.\n\n\"You sure?\" I kind of mumbled.\n\nShe pushed up with her hands, swung around toward me and in an instant had my erection in her mouth. She sucked hard, using her tongue skillfully for about 30 seconds as I gasped a little took a couple of very deep breaths. Then she backed off, swung back around with her head back on the bed. \"That's my answer,\" she said.\n\n\"So,\" I said. \"You're an anal virgin then.\" Her cheeks reddened a bit.\n\n\"Yes,\" was her reply.\n\n\"Well, you'll stay one here tonight. I think Marshall should be the one to initiate you to that.\"\n\n\"I'm not sure he knows how.\"\n\n\"He'll do fine.\" I patted her butt gently. \"Now, I think I just caught a glimpse of movement at the window so is there anything you'd like Marshall to see?\" \n\nShe sat up in the bed, bit her lower lip for a second. \"Stand in the middle of the room,\" she said softly, so those outside couldn't hear. I did as directed, my profile to the window. She slide off the bed and walked over to me very slowly, rubbing her breasts and pulling on her nipples. Then, standing nearly against me she reached down and took hold of my erection. Seemingly using it for balance, she very slowly dropped to her knees. Very gently she began stroking and I noticed, oddly enough, that she was left handed and wondered if it would feel different. It hadn't so far. Holding it very tightly she slid her hand down to the base, stretching the foreskin away from the head till I thought it might split away, but it felt amazing. She kissed the tip, then licked it, then took it into her mouth, her cheeks pulled in as she sucked hard. Now, with her tongue constantly moving she slide forward on it, then gagged very slightly, stopping right there. \n\n\"Relax your throat and ignore how it feels,\" I whispered and she began moving forward again. She stopped again but didn't back off at all, then forward again until her lips were against my pubic hair. Then she backed clear out and came forward once more and I could feel her tongue sliding along the underside. As her lips buried themselves in my hair I jerked slightly as I realized her tongue was licking my balls. As she pulled back again I took hold of her hair and, holding her head in place I pushed myself forward all the way, then back and forward again. Now she took hold of those balls and rubbed them gently as the other hand went down between her legs. Now with every thrust there was muffled moan and her finger was doing its work down below. I was getting to the point where I couldn't hold it any more and decided what the best show would be. I began to jerk just as I got it out of her mouth and the first blast hit her nose and mouth, the second went into her hair, the third and fourth on her face, a couple more dribbling down onto her tits. I quickly pushed her backward, my face going between her legs, my tongue and lips quickly working on that red and engorged clit. I knew it wouldn't take long and she was bucking, a loud scream accompanying every buck. Slowly she stopped and opened her eyes, her face and hair still covered with cum.\n\n\"That should have given them a show,\" she said, sticking her tongue out and actually tasting some of the milky liquid on her face.\n\n\"I would say so,\" was my simple reply. \"And, could we have looked out the window I'm sure there was a show out there too.\"\n\nShe giggled. \"I bet he was pumping her good.\" The her she was talking about was Kirsten and, as I thought and pictured what she said I slowly felt my erection returning. She watched it with fascination. \"I'm not sure I ever saw it grow like that before. It seems that when we have sex, Marshall is just hard.\" She watched some more as my imagination continued its work. \"If it gets hard again what are you going to do with it?\"\n\n\"Is that a rhetorical question,\" I couldn't help but say, even if it broke the mood.\n\n\"I guess so.\" She lay back on the floor and spread her legs. \"Whenever,\" she said.\n\nWhenever was right about then and it slide in very quickly as she was very juicy and I realized she was looking at me, just like the other night. \"We're free to close our eyes this time since I'm going to take my time and enjoy this one.\" She sighed and wiggled her hips which felt pretty amazing. She did it a couple more times and then I began pushing in as far as I could, then pulling clear out, then back in again all the way till I bottomed, then clear back out, a little popping noise as it exited and a sloshing noise as it plunged in.\n\nVery softly she said, \"Can I do myself?\"\n\n\"Yes, if I can watch.\" Surprised again, I watched as her left hand went between us and she began rubbing her clit. As I continued the movements that made my body hot from my head to my crotch I knew two things. One, I would have plenty of time on this one as I had just cum a few minutes ago and two, if she started to cum that would be it for me too as nothing was more sexy or erotic that a woman cuming and the sounds that accompanied it. And suddenly I realized that her breaths were becoming shorter and shorter and her moans definitely more intense and, not surprisingly her hips began to raise up against me, then a loud, \"Uhhhhhhhmmmmmmmm,\" from deep down and the bucking started and about the third big jerk from her brought the first from me and my head went to her neck and I couldn't help but suck on that soft and silky skin I found there as we jerked and moaned, until, at last, we both lay still.\n\nI opened my eyes finally and looked at her. \"uh oh,\" I said.\n\n\"What?\" she replied a little alarmed.\n\n\"You have a nice hickey.\"\n\n\"I knew I would as soon as you put your head on my neck. I have make up to cover it if I want but who knows.\" She giggled.\n\nA glance at the clock showed that the hour was nearly up, with just enough time left for Libby to take a quick shower as she was now kind of a mess with the cum drying in her hair, etc. But, soon we were in the tub, joined by Marshall and Kirsten and, despite there being four seats open, Kirsten sat beside me and Libby beside Marshall opposite us.\n\n\"Did Marshall enjoy Libby's show?\" I whispered in Kirsten's ear.\n\n\"So much I thought he was going to kill me,\" She giggled back to my ear.\n\n\"She wanted to do anal but she's an anal virgin so I told her that was for Marshall to be the first. She wanted to be ready for him.\"\n\n\"Good choice,\" she confirmed. \"And, I think he's ready. He was fascinated with my ass for sure so I let him get to two fingers and I think he was afraid he'd hurt me so he stopped. Then he confessed that he wanted to do anal with Libby but wasn't sure she'd like it and wasn't sure just how to do it so I gave him some pointers, both verbal and visual and I think that really got his rocks going.\" Then she turned to Marshall. \"Everything A-okay?\" she asked, emphasizing the \"A\". \"Sure is,\" came the reply and, as he looked at Kirsten she winked at him. His eyes went wide and a huge smile crossed his face as he figured out what she was saying.\n\n\"What's going on?\" Libby asked looking from Marshall to Kirsten.\n\n\"Secret code,\" I said, and we all laughed with Libby still looking a little puzzled.\n\nWe talked for quite a while and finally Libby said, kind of to me and to Marshall and Kirsten as well, \"Pat had me get one of your baggy shirts and told me I should wear it down to the market and bend over and let guys see my tits. I think I might do it.\"\n\n\"You'll love it,\" Kirsten responded. \"Of course, with your big breasts I'm sure you're used to men looking at you, but I'm not. I had on a shirt like that at the market, really baggy and it didn't hide a thing, from the front or the side. So, it made me tingle all day to have them doing everything to look down that shirt and see my little tits. So, I put on a mini-skirt with no panties and then,\" her voice trailed off and she looked at Marshall.\n\n\"She's shaved now,\" he said. Libby's head snapped over to look at Kirsten.\n\n\"I went to a drug store, bought a razor and some cream, went into the restroom and, voila, no hair.\"\n\n\"And you were letting guys look at you?\"\n\n\"I made sure they were looking. I made it a point to drop something and bend over and pick it up right in front of them. They got a good view.\" She had a big smile on her face.\n\n\"I don't know if I can do that or not, but I'm going to try.\" At that, Marshall signed deeply.\n\n\"So, another subject, how was the peeking?\" I asked with a sly smile.\n\n\"Marshall looked quickly at Libby. \"Better than I had hoped for. I took one look through that window and watched for just a second and nearly went wild.\" This time he gave Kirsten a quick and nearly apologetic look.\n\n\"Um, is there something I should know?\" Libby asked tauntingly.\n\n\"I guess you should have been peeking out the window,\" Kirsten replied with a sigh. \"I can tell you he was enjoying what he was seeing.\"\n\n\"And what he was doing, unless I miss my guess,\" I added.\n\nKirsten looked over at Marshall whose cheeks had gotten a bit rosy. \"I've never had it quite that enthusiastically before,\" she laughed.\n\nLibby looked at him with a smile. \"You want to demonstrate?\" she said.\n\n\"Haha, I had some great motivation then.\"\n\n\"Well,\" she said, getting to her knees and sliding over in front of me, reaching under the water and taking hold of my kind of flaccid member. \"We can fix that. Stand up,\" she said to me.\n\nNow it was Kirsten's turn. \"Just a minute,\" she chimed in. \"I'm not sure I don't have physical damage from the pounding I took outside that window. Speaking very frankly, he was pumping so hard that we had trouble staying in front of the window. He kept dragging me back by the hips.\" Marshall was really blushing now. \"So, I'm not sure I can handle a repeat of that.\n\nLibby looked at me. \"I've got Pat started now so it's not fair to just let it totally drop, right Pat.\" She was working me pretty good under the water so I finally did as ordered and stood up. Her mouth immediately swallowed me, throat deep and I moaned and bent over a little. I saw Kirsten smiling, the glance over at Marshall whose eyes were wide.\n\n\"Might as well make it a good show,\" she said softly and slid across to the seat behind Libby, then reached down under the water and slid her hand between Libby's legs, fingering her slit and also her clit. Libby was now jerking as she sucked and moaning loudly. I was enjoying this to the max, making it last until suddenly Libby let out a huge, deep groan and began to jerk with her orgasm. Of course, that was it for me and, as before, I pulled out and shot my load all over her head, face and chest. \n\nWithout missing a beat, Kirsten slide over in front of Marshall who leaned backward so his erection was out of the water and Kirsten went to work on it. In just a couple of minutes there were two cum covered ladies in the hot tub. Marshall was recovering and he quickly grabbed Kirsten by the legs and lifted her out of the water and went to work on her pussy. To help, I rubbed a finger over her ass, then pushed it in gently and felt her muscles contracting on my finger as she jerked mightily to a grand orgasm.\n\nAll breathing heavily, we sat back on our seats and Kirsten said, \"We can't even sit and talk for a while without sex happening.\n\n\"We're just two horny couples,\" Libby threw in.\n\n\"And,\" Kirsten added, \"we've come a long way since that first day when Caleb caught us skinny dipping.\"\n\n\"We still owe him for that one,\" Libby replied. \"Let's get with Rhonda, tell her about it and see if she has any ideas. I bet she does.\"\n\n\"That could have been a close one, but, if he'd wanted more than he did I think I would have just marched back to our bungalow nude. He pushed about as far as we were willing to go. And you know, it's funny because Pat just asked me if, after this week, I could have sex with a total stranger and I said no I couldn't.\"\n\n\"Me either.\" She shuddered. \"I guess we're kind of strangers but we trust each other and have gotten to know each other some. Well,\" she giggled, \"I guess quite a bit.\"\n\nJust then Rich and Alison appeared on the path. They waved and called out hellos and then headed into their bungalow. They were quickly back out, naked of course, and ran to the hot tub giggling.\n\n\"You guys been good?\" Alison asked when they were settled in.\n\n\"We've been VERY good,\" Kirsten answered and all of us laughed.\n\n\"It would probably take too long to catch us up I suppose,\" said Rich.\n\n\"Well,\" I replied, \"in 25 words or less, Marshall got to peek through the window and liked what he saw so much he nearly ruined Kirsten.\" More laughter.\n\n\"Sorry,\" Marshall said, nodding toward Kirsten. Then to Alison, \"But, as you said, we were VERY good.\"\n\n\"Do you guys feel deprived?\" I jokingly asked.\n\nAlison looked at Rich. \"I don't know,\" she answered. \"Maybe.\"\n\n\"Well, there are six of us. So, Alison, you could come with Marshall and I and have a menage a trois and Rich could go off with Libby and Kirsten for menage a trois number two.\" Alison looked from Marshall to me and back and then to Rich who was eying Kirsten and Libby with a look of anticipation on his face.\n\n\"I don't know,\" Alison said hesitantly. \"It's something you read about but, I don't know.\" She looked to Rich for reinforcement but immediately saw the futility of that as she realized that a threesome was most men's fondest fantasy.\n\nI had been half kidding when I suggested it but I realized that we may have to go there. I glanced at Kirsten and she was not glaring at me so she may have been imagining what might be happening soon. After her man-handling by Marshall I thought she might be through for the night, but perhaps not. She had actually moved so she was partly out of the water and I noticed that her nipples were hardening and becoming erect. So much for that.\n\n\"No peeking allowed tonight,\" Kirsten called out, protecting herself after earlier today I think.\n\nAlison stood up and reached for Marshall and my hands. We stepped out of the tub awkwardly with three of us trying to exit simultaneously while connected with hands and, after pausing a second she headed toward her bungalow. \"I know you guys would each rather be going off with two ladies but I'm afraid you're stuck with me.\"\n\nNot being able to resist I replied. \"Did you say stuck with or stuck by?\"\n\nHer checks reddened and she looked straight ahead mumbling, \"whatever,\" with a little grin on her face.\n\nI watched her slightly chubby little cheeks bouncing as she walked and had to admit I was kind of looking forward to this. Of course, we had all been with each of the other ladies, but only for an hour so this should still be a lot of fun. And, a little surprisingly, Alison seemed to be looking forward to it after her initial reservations. I glanced over and watched Kirsten and Libby on either side of Rich ready to go into our bungalow. I had recharged the camera battery and Kirsten knew how to operate it so I was anticipating an addition to our video library. We had actually agreed that when anything happened in our place we'd somehow get the video going. Plus, the descriptions we could share while having sex would be priceless.\n\nOnce inside Alison looked at us very thoughtfully, then said, \"Just sit down and I'll be right back. She disappeared into the bedroom and shut the door. Rich and I speculated on what might be up when she reappeared, fully dressed and looking very appealing. \"Now guys,\" she began. \"As long as I'm going off with two guys tonight I decided that I was going to make it like I am at a club and two guys come over, chat me up and then seduce me and take me to their place to have their way with me. I know you guys don't have any clothes on but we can pretend.\" She went to a little cupboard and took out three glasses, then a bottle of wine. She filled each of the glasses, then took one and sat down at the table. She yawned and looked around. Our little situation had begun. I nodded to Marshall and we went over and picked up a glass each and I, at least, felt a little silly holding the wine, naked, with a partial erection poking out in front of me.\n\nWe went to the table, said hi, and asked if we could join her which she accepted enthusiastically. We actually sat down and made some small talk and I reached under the table and put my hand on her thigh. She responded by putting her hand on mine. Marshall, meanwhile, was stroking the inside of her other leg with his foot, moving a little higher with each stroke. Still talking I took hold of the hem of her skirt and slide it up her thigh as far as it would comfortably go and began rubbing the inside of her leg, bumping again the slight dampness of her panties. As I continued talking and rubbing Marshall moved around so he was beside her and began doing the same on her other leg. We bumped hands several times rubbing and she had spread her legs apart to make it easier for us. Her eyes were closed as she made an effort to respond to our inane chatter so I changed to very suggestive language and Marshall began adding his own rather graphic descriptions of the possibilities for the evening. \n\nBy this time she was very wet and I put a finger inside the panties and stroked up and down her cleft. Now I nodded to Marshall and reached around her hip, taking hold of the elastic band, he doing the same and we pulled them down, helped by her arching her butt off the seat. I held them up in front of her letting her know that, once they were off, anything went. She mumbled out hoarsely that she knew. Now I put a finger into that very warm and very wet tube of hers and Marshall, seeing what I was doing did the same. As we began to move our fingers, not quite in sync and she realized what was happening her moaning became a little louder and her hips began to move. This went on for several minutes and, as Marshall continued, I began to unbutton her blouse. I pulled it out of her skirt, finished the last buttons and slid it off her shoulders. She leaned forward ever so slightly and I pulled it free and tossed it aside. Now the low -cut bra she had put on barely held her ample breasts and a little bit of areola showed above the lace edge. I slid the straps off her shoulders and pulled it down to her waist. I took one breast in my hand and began massaging, gently rubbing the nipple as it grew and hardened. Still using his finger, Marshall leaned forward and took the other nipple in his mouth and sucked hard on it to a tiny squeal and then more moaning.",
        "\"Stand up,\" I said sternly to her and she obeyed, her eyes open now watching us. I unfastened her bra as Marshall loosened her skirt. She stepped out of it and kicked it out of the way. Marshall put his whole hand between her legs and rubbed. Her hips moved in time with his hand as I grabbed her butt cheeks with both hands. Then Marshall jammed three fingers into her and she flinched and a loud \"OOOhhh\" came out. Then he began rubbing her clit and she rocked back and forth to the rhythm of her fingers. I took the opportunity to use my fingers to fill her smooth, wet and warm tube.\n\n\"I can't do this,\" she grunted out. \"I'm going to fall over.\"\n\nI put one arm around her waist to support her but kept the fingers moving. Marshall now moved her legs wider apart and used his hands to separate her labia so that even I, looking over her shoulder, could see the nub of her clit. His tongue went to work which brought new sounds from her throat and then his lips and tongue in combo and she leaned back hard against me, pushing her pussy into his face and suddenly groaning out, \"cumming, cumming, cumming,\" accompanied by wonderful jerks that had her boobs bouncing with each one. There were six or eight jerks I would guess and she was nearly a dead weight. But, Marshall didn't stop and she was soon moving her hips again, moaning, \"Stop, I can't stand it. Stop, please stop.\" But he didn't. I took a step backward and sat down on a chair, pulling her into my lap. Her cries of stop had turned to moans of \"oh yeah, oh yeah,\" and I lifted her slightly and used my right hand to guide myself into her, so wet and soft and velvety smooth. Then she was saying over and over, \"I'm being fucked and licked, fucked and licked,\" until there was another thundering, arching and jerking orgasm.\n\nMarshall stood up and as I pumped away on her she took his cock, licked it and had it in her mouth sliding it in and out, rolling her tongue around it. I knew he wasn't long for this and, after a very few minutes, he grunted, pulled it out of her mouth and squirted on her face and hair with the last couple of blasts going onto her boobs. She rubbed the gooey liquid all over her chest then pulled Marshall's face close and kissed him, leaving more of the cum on his face. \"What about you?\" she said, turning her head to look up at me.\n\n\"Where do you want it?\" I asked still moving gently and hoping this might last another hour although I knew that wouldn't happen as I had barely made it through her orgasm.\n\n\"On my tits,\" she answered.\n\nI quickly lifted her off me and she quickly lay down on the floor. I slid back in and began to move in earnest. She began to jerk and moan in an apparent third orgasm as I had started rubbing her pretty good again and I responded by pulling out of her and squirting 6 or 8 bursts of hot, milky cum onto her tits and stomach. When I finished, I said, \"Wow, three orgasms.\"\n\n\"Oh, I didn't cum again but I just faked it because I knew it would turn you on more and you wouldn't be able to hold it.\"\n\n\"Sneaky,\" was all I could say.\n\n\"Well,\" Marshall said. That's 30 minutes. What's next.\n\n\"Oh lord,\" Alison grunted. She looked from one of us to the other.\n\n\"When will you have two guys at your disposal again?\" I queried.\n\n\"Never,\" she quickly replied. \"This is a one-time thing. But, if I had to choose two guys to do it with again I'd choose you two.\n\n\"How about Caleb?\"\n\nHer expression changed. He's okay but . . . \" Her voice trailed off.\n\nI decided it was time. \"I was there,\" I said.\n\nHer eyes widened. \"Where?\" she said quickly.\n\n\"At the skinny dipping beach where some bathing suits disappeared.\n\n\"Oh lord,\" she said. \"So you saw it.\"\n\n\"Yep, and you guys need to get with Rhonda and make him pay just a little bit. I'm sure she'll agree to help.\"\n\n\"And you saw us . . . \" she trailed off again.\n\n\"Give him a hand job,\" I finished what she had started. \"I thought then that it might be an interesting week.\"\n\n\"Down to about 25 minutes now.\" Marshall again.\n\n\"Lay down on the bed,\" Alison said to Marshall, winking at me. He lay down and she began working his \n\ncock with her hand and it raised up to full length fairly quickly. She got on her knees between his legs and took it in her mouth. He closed his eyes and wasn't worried about the time any more. Not wanting to miss a chance, I put my finger between her legs and it slid easily inside her. I moved it around, coating it with her juices, then pulled it out and pushed it gently against the rosebud of her ass. I heard a slurred, \"one finger only,\" and pressed on but it was very tight. I slipped my other hand between her legs and rubbed that red engorged bump I found there. Her hips began to move gently and with each movement, the rosebud relaxed just a little and the finger progressed. The first knuckle was fairly quick, the second took a little longer and finally the whole finger was there. I slowly moved it part way out and then back in, her hips helping. I began moving faster and faster and Marshall's expression changed to a look of far-away ecstasy as she had increased her pace dramatically. I took her nub between my fingers, rubbing it gently and now loud moans and grunts were echoing around the room. Marshall tried to pull out but she had him good and he had no choice and came in her mouth, she not swallowing and the cum sloshing out the corners of her mouth and down her chin and onto Marshall's belly as she jerked, with a soft, \"ooohhh\" accompanying every jerk.\n\nShe sat back on her haunches and turned around to look at me. I had to giggle.\n\n\"You look well used,\" I suggested. She frowned and ran to the bathroom and was back in two minutes.\n\n\"Now, smart alec, I should just ignore you but I feel sorry for you here. What shall we do?\"\n\nI looked at that cute little face looking at me and had an idea. \"So, are you super horny and just need more here tonight?\"\n\nShe looked puzzled. \"I'm ready,\" she said.\n\n\"Honestly, are you happy and satisfied with your night with two guys?\"\n\nShe looked from Marshall to me and smiled. \"Sure,\" she said.\n\n\"So am I, so let's go hop in the hot tub because I may have more to do later tonight.\" That brought a laugh from the other two. Marshall was quickly out the door and I stepped back to let Alison go first when she stopped.\n\nShe sighed deeply and said, \"This has been kind of neat. I'm not the best looking woman in the world, cute maybe, a little fat with big boobs but I sure never have guys gawking at me like Rhonda, or Kirsten or Libby. But, I've been a part of all of this, maybe just because I'm female and have a,\" and here she paused, pointing between her legs. \"But, anyway, I've enjoyed the attention.\" Her big brown eyes were boring directly into mine and she just looked so appealing I couldn't help myself. \n\nI took her face between my hands and pressed my lips to hers, tongue probing. At first she didn't respond but it was like she suddenly realized I was doing this because of that very appealing part of her and her tongue began to dance with mine. I shifted my left hand to the back of her head, holding her hair and pressing her face against mine while my right hand slipped between her legs, quickly wetting a finger there and seeking out the nub that beckoned from its hidden spot. In just a minute she was making noises into my mouth as I fucked her mouth with my tongue and she couldn't hold still as the pace of my rubbing increased. She threw her arms around my neck and the noises got louder and longer and then she was shaking and holding my tongue with her teeth as she bucked against my hand for long seconds, her arms around my neck holding her up. Having those sounds right in my face was a very unique experience.\n\nWhen she finally stopped shaking and let loose of my tongue she backed her face off from mine and said, \"There, I came standing up and you didn't have to hold me. Rich will like that. And thank you. That said more than words.\"\n\nI gave her a playful slap on the butt. \"You did have your arms around my neck but anyway, let's get to the hot tub.\"\n\nAs we walked toward the hot tub Marshall looked at me and just shook his head. \"Why didn't you call me back?\"\n\nBefore I could answer Alison said, \"Don't worry, Pat took care of everything.\""
    ],
    "authorname": "PickFiction",
    "tags": [
        "exhibitionist",
        "sharing",
        "voyeur",
        "voyeurism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/we-needed-a-vacation-ch-03"
}