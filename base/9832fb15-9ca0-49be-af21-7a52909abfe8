{
    "title": "Cockatoo Pt. 36",
    "pages": [
        "Nin was chattering away in the tuk-tuk back to our hotel, but I didn't feel like talking much. I was too exhausted from what had happened with Nancy and Joe to be very talkative. I was simply aching for sleep. Back inside the apartment, Nin fished a bundle of notes from her bag. \n\n'Half for you, Jamie.' She held out a fistful of Dollar bills.\n\n'Nin, you keep it, it's fine.' I said, pushing the money back into her hand. She stared at me.\n\n'Why not? It's for you. Are you mad with me?' \n\n'No, I'm not mad with you, Nin.'\n\n'Jamie, you earned it. It's yours.' \n\n'Nin, I think you need it more than I do.'\n\nI couldn't tell her that if I took the money, it would make me feel like a real whore. I know that for tonight that's what I had been, I had been exactly what Nancy had called me, and maybe I had enjoyed that more than I wanted to admit. But, I thought if I didn't take the money I could pretend that it had been something else; an adventure, a one-off experience never to be repeated. Nin shrugged and pushed the money into her bag. I gave her a kiss and headed to my room, where, instead of sleeping, I tossed and turned, my mind flitting anxiously from what I had done tonight to what was going to happen over the next few days. \n\nI eventually got up early to do some laps in the pool to calm myself down, which worked for a while at least. When I got back to the room, I found a text on my phone from Dao telling me she would be here at 10 to pick me up. I woke Nin with some coffee and sat on the side of her bed.\n\n'Nin, there's something I have to tell you.'\n\n'What?' She yawned, rubbing the sleep from her eyes.\n\nI took a deep breath, 'Kritsada has asked me to be with him at his party on Wednesday.'\n\nShe shrugged, 'I know, you tell me before.'\n\n'No, I mean he wants me to be his escort for the party.'\n\n'What you mean escort?' Her eyes opened wide as she caught on to what I meant. 'You mean he wants you to go as Jamie?' \n\nI nodded, unable to keep eye contact with her. 'As Jamie, yes.'\n\n'And you agree?'\n\n'Yes,' I whispered, unable to look her in the eye. She fell back against her pillow, 'Why he want you to do this?'\n\n'I honestly don't know. He said someone had let him down, and he thought I might like to do it.'\n\nShe sipped her coffee. 'Why you want to do it?'\n\nI squirmed in my chair. 'I didn't get a chance to say no, he just assumed I would do it, and I got carried along...' my voice tailed off.\n\n'You really like being Jamie, yes?' \n\nI blushed and nodded. 'Yes, I do. I feel different when I'm Jamie, nicer, special somehow. I like the clothes and...'\n\n'You like to fuck too as Jamie, I think.' She grinned wickedly as she said it, and I went even redder if that was possible. But, she was right, I did like the sex as Jamie.\n\nShe thought for a moment, 'Does he want to fuck you?'\n\n'Oh my God. No. I'm sure he doesn't.' But, somewhere inside I felt a sudden thrill at the thought. \n\nNin suddenly grinned, 'Then I think you must take this chance with Kritsada. Does Miss Alex and Miss Areeya know?'\n\nI shook my head, then I caught myself thinking, I wonder if they do? Is this another one of Alex's games? Would she put Kritsada up to this? That was too much to think about, so I shoved the thought to the back of my mind.\n\n'Dao will be coming this morning to help me get ready, but will you come with me?'\n\nNin reached out for my hand and smiled. 'Yes, I come with you.' \n\n***\n\nDao arrived promptly and Nin and I met her in the lobby. I had agonised over what to wear, but decided to be safe and so I dressed as James. I tried to see if I could read anything in Dao's manner about what she thought of me and what I had agreed to do, but she was her usual professional and efficient self. \n\n'We go to dress fitting this morning, and this afternoon we go to spa. Tomorrow, we have second fitting for dress and go to spa. Then Wednesday we have final fitting and second spa visit for final preparations before party. We then go straight to party. All clear?'\n\nIt seemed it was just another project as far as Dao was concerned.\n\n'OK, but Nin is coming with us too.'\n\nDao merely nodded and made a note on the iPad she was holding, then gestured towards a limo which was idling outside. The driver jumped out and held the door open for Nin and I to get in the back. Dao sat in the front and barked an order to the driver. We set off, and it was clear the driver knew his business as he managed to find ways to get around the heavier than usual Bangkok traffic. Half an hour later, we slid to a stop outside an anonymous building close to Pratunam market where locals go to buy clothes at wholesale prices. \n\nThe driver opened the door for us and we left the air-conditioned car and stepped into the sauna like atmosphere outside. Dao spoke into an entry phone and we were buzzed inside. We were greeted with a deep wai by a pretty Thai girl who ushered us into a large room, tastefully decorated in classic Thai style. Deeply upholstered chairs and a sofa surrounded what looked like a small round stage in the middle of the room. Low tables in front of the sofas held a selection of cold drinks and snacks. Dao disappeared through a side door and Nin and I sat with a drink smiling nervously to each other. \n\nDao reappeared in a few minutes and asked us to follow her into a side room. Inside was the Thai girl who had welcomed us at the door. \n\n'This is Fai. She will be measuring you for size. Please remove all your clothes so she can begin.'\n\n'What? Here? All of them?' Needless to say, I blushed crimson.\n\n'Of course.'\n\nI heard Nin giggling in the background.\n\n'Please wear this for measuring.' Dao handed me a pair of white panties which would at least cover some of my embarrassment. I turned my back to them all which brought forth another bout of giggling from Nin. I took off the shoes, shirt and shorts I was wearing and Fai appeared and took them from me. I slipped out of my boxers and quickly slid the panties up my legs and settled myself into them. I turned around to see Fai and Dao looking serious, but Nin was trying, and failing, to conceal her smile behind her hand. Fai came forward holding what looked suspiciously like a sci-fi ray gun with two barrels. \n\n'Do not worry,' said Dao, seeing the startled look on my face. 'It is 3d scanner. It is much quicker and more accurate than old fashioned tape measure. Measurements go straight to computer which make patterns and then cut material.'\n\nFai said something in Thai and Dao translated. 'Please stand with legs slightly apart and arms outstretched to side. Try not to move while measuring takes place. It is all perfectly safe.' I stood as she asked and Fai started the scanner and immediately bands of red light began to move up and down over my body. Fai walked slowly around me and within a few minutes she clicked off the scanner and bowed to me. Dao handed me a silk robe which I gratefully pulled on. \n\n'What happens next, Dao?'\n\n'Khun Kritsada has chosen some options for your dress, but he is happy for you to make final choice. We will return to other room to see the dresses and for you to make your selection. Then we will have some lunch and go to spa for first session. Then back to hotel.' \n\nWe walked back into the main room where there were four beautiful Thai girls waiting for us on the dais, each wearing one of the four dresses from which I was to make my choice. I glanced at Nin who she smiled at me and slipped her hand into mine. \n\n'They all lovely, Jamie. You would look pretty in any of them, I am very jealous.'\n\nIt was true, the dresses were all fabulous. They seemed to be based on traditional Thai dress but each had a modern twist to them. A couple had deep slits in the long skirt and others had heavily decorated shawls. The colours were deep and lustrous; blues, reds, pinks, greens and coral colours in exquisite fabrics and with gold or silver embroidery. Each was cut to accentuate the flow of the fabric and as the models turned the dresses seemed to flow around them. \n\nThey were all so beautiful I needed some help to choose. I begged Dao and Nin to help me out.\n\n'That one look like wedding dress,' whispered Nin. 'Maybe Kritsada want marry you.'\n\nWell that one's out, I thought. \n\n'Dao, which one would Kritsada prefer?'\n\nShe smiled, 'It is up to you, of course, but I think you would look nice in that one.' She pointed to a dress with a silver sequined bodice and a flame red skirt that seemed to float as the model turned in front of us.\n\n'It lovely, you would look so pretty in that.' whispered Nin in my ear.\n\nThe dress looked dazzling and the more I looked at it, the more I pictured myself wearing it. The skirt had a slit at the side which reveal a lot of leg, but I had already made my mind up. That was the one. I paused as I questioned myself one more time; why was I doing this? I could still pull out of this if I wanted to. The two little voices were back in my mind. One was shouting, You're mad, you're going to be dressed as a woman and God knows what might happen at the party, man up and say no. The other whispered seductively, You will look so beautiful and you won't get another chance like this, and it's true you don't know what will happen, but how exciting is that? I groaned to myself, looked at Nin and Dao, then said, 'I'll wear the red one.'\n\nI swear I saw the ghost of a smile flick across Dao's normally inscrutable face, but it was gone in a flash. Nin squealed and clapped her hands before giving me a big hug. 'You will be so lovely, I know it.' I almost felt sick as I realised I had crossed my Rubicon, and there was no going back now. Dao nodded to the models who bowed and left. Dao said something to Fai who nodded and offered her hand to me.\n\n'Please go with Fai, she will help you choose your underthings to go with the dress.' Dao was back to her normal PA self. I glanced nervously at Nin, who said quickly, 'I come too.' She rose quickly and took my other hand before Dao could object. Fai led us through to another room and my eyes widened as it was full of the most beautiful lingerie you could imagine. There were racks and racks of bras and panties, corsets and suspender belts in every kind of fabric and colour you could imagine. I heard Nin take a deep breath as she looked around and she ran her fingers over some of the panties. \n\nFai was flicking through the racks until she came to what she was looking for and pulled out first a white bra, followed by a matching pair of panties. I stretched out my hand and ran my fingers over the flimsy material. The feeling as my fingers slid over the silk was so sensual it gave me goose bumps. Nin appeared at my side, 'Pretty, but I think this look good on you.' From behind her back she produced what I at first thought was a swimsuit. \n\n'But I'm not going swimming.'\n\nNin giggled, 'It not swimsuit, it corset.' She held it out in front of her and I blushed at how stupid I must have sounded. Looking closer it was a corset; not one of those heavy old-fashioned foundation garments but a light and lacy garment, with suspenders as well to attach stockings. The bra cups were embroidered with pretty little bows and the front consisted of a vee shaped panel with laces holding the embroidered side panels together.\n\n'Oh, Nin, I couldn't possibly wear that, it's...it's...' \n\n'It what, Jamie?'\n\nIt's too beautiful, I thought to myself. Nin held it up against me and turned me towards a mirror. \n\n'See, it lovely, it also give you some woman shape.'\n\nI had no idea what material it was made from, but it was surprisingly light and smooth as I held it in my trembling fingers.\n\n'No, no, I can't.' I felt my willpower draining away as I looked at myself in the mirror, imagining what I would look like wearing it. \n\nNin could sense my resistance waning and she pulled open my robe, 'Please, Jamie, for me, just try it on. If you don't like it, you can wear other stuff.'\n\nI hesitated for second, then shrugged off the robe. Nin stood in front and helped me step into the corset and pull it up, and I put my arms through the bra straps which were attached to the corset. It already felt tight around me, but then Fai began to pull the laces from behind. I gasped as I felt the pressure on my waist increase as Fai pulled the laces tighter and tighter. \n\n'Oh, my God, that's too tight.' \n\nFai and Nin giggled from behind me as I felt my insides being squashed. They stopped pulling, and I began to breathe a little easier. Nin handed me a pair of matching panties and with a little difficulty I managed to step into them and pull them up. The panties were exquisite with lace and bows to match the corset. I felt the familiar tingle as they settled around my cock and balls. The suspenders were tickling my legs and Fai produced a pair of white lace top stockings and motioned me to sit down. I managed to do so with a little of discomfort as bits of the corset poked into me, Fai rolled one stocking into a doughnut shape and indicated I should point my toes. She began to roll the stocking up my leg and I shivered at the sensation as she smoothed them up to the top of my leg. \n\nNin noticed my reaction and laid her hand on my arm. 'It feel good, yes?'\n\nI nodded and closed my eyes as little explosions were going off in my mind at what I was feeling. I felt someone tug the suspender, and I opened my eyes to see Nin attaching the tab to the top of the stocking. Fai was busy sliding a stocking up my other leg whilst Nin attached the suspenders. I was besieged by new feelings; the tug of the suspenders against the stockings, the constriction of the corset and the lace of the panties sliding across my cock. As usual my cock betrayed me and began to grow hard. \n\nFai saw what was happening and giggled, making my discomfort even worse. I closed my eyes and tried to wish my hard on away, but that only made it grow more. Nin caught onto what was going on.\n\n'Don't worry, I fix.'\n\nShe dropped to her knees in front of me, spread my legs apart and pulled down the front of the panties allowing my cock to protrude. I was as red as a beetroot but Fai didn't seem to find anything amiss as Nin plunged her mouth over my cock and began to use her tongue, lips and fingers on my now raging erection. I looked down to see Nin's head bobbing up and down on my cock and it wasn't long before her world class skills had their effect, and with a grunt I came into her mouth. Fai had a tissue ready, and she wiped the end of my cock as Nin cleaned up her lips where some cum had escaped. I slumped in the chair, and Nin pulled my panties back up and patted my now shrinking cock.\n\n'That better, no?'\n\nI nodded weakly and then Fai and Nin helped me to my feet. I stood a little shakily, a strange excitement flooding through me as I stood there in the corset and stockings.\n\nFai handed Nin something, and they both giggled. 'What?' I said.\n\n'Finishing touches, Jamie.' Nin moved behind me and slid breast forms into the bra cups and Fai adjusted them from the front so they fitted properly in the cups.\n\n'Look nice, Jamie, very sexy.' said Nin, and stood back. I looked down and all I could see were the now filled cups jutting out from my chest. I looked at Fai and Nin trying to read in their faces how I looked. They were both smiling broadly, but I couldn't work out what they were thinking. Fai grabbed my arm and turned me round and I came face to face with myself in a full-length mirror.\n\nMy hand flew to my mouth. OK, I wasn't exactly a lingerie model, but the corset and the stockings had done something almost magical to me. My legs looked longer, and the corset had nipped me in enough to give me something approaching a waist. The breast forms filled me out at the top and I was astounded at the effect. I put my hands down and turned around in front of the mirror and I could see just how the corset had made subtle but noticeable changes to my shape. I looked at NIn who was smiling broadly. \n\n'It look good, Jamie, va va voom.'\n\nI couldn't help but laugh at that, and Fai smiled too. I felt the stockings pulling on the suspenders and the gentle swish of the nylon made me shiver. The sensation was intoxicating, and I finally began to wonder if I could do this.\n\n'Can I really wear this?' I asked out loud.\n\n'Yes.' Came the answer from both Nin and Fai.\n\n'Ok, ok, I will.'\n\nNin clapped and gave me a hug, running her hands over my body and down my legs. \n\n'Careful or you'll need to help me out again.'\n\nShe laughed and hugged me again. Fai and Nin helped me out of the corset and I felt a relief but also a disappointment as it came off. Relief that I could breathe properly again, but regret that it was gone. I couldn't figure that one out.\n\nWe emerged from the room with me back in my James clothes to find Dao waiting for us. Nin and I sat down as Dao drew Fai away and had a whispered conversation. I let my mind drift, wondering yet again what I had let myself in for. Where was this leading? What did I really want? Who was I? James, Jamie or Scarlett? I know I enjoyed being Jamie, and Scarlett. But, did that mean I had to stop being James? Could I cope with being all three? My head began to hurt as these thoughts spun around in my mind. Nin dragged me back to the present when she dug her elbow in my ribs and whispered. 'What you think about Dao?'\n\n'Huh?'\n\n'I said, what you think about Dao?' \n\n'Er, I don't know. I mean I think she's smart and efficient, seems to have everything under control. Why?'\n\n'I think she gay.' \n\n'What?' \n\n'I think she gay. You know, she like girls.' Nin said patiently as you might do to a slightly dim child.\n\n'Yes Nin, I know what gay means.' I looked across to where Dao was standing talking to Fai. The thought hadn't entered my mind.\n\n'Nin, what on earth makes you think that?'\n\nNin tapped her nose, 'I watch her with Fai, and I think they have thing going.' \n\nI shrugged, I had no idea what Nin was talking about, and to be honest I couldn't have cared less. I turned to watch Dao and Fai talking, and I couldn't see anything special between the two of them.\n\n'You're dreaming, Nin.'\n\n'No, I right.' \n\nI shrugged. 'Does it matter, Nin?'\n\nNin shook her head, 'No, I guess not. Her business, but thought you should know.'\n\nWe shut up as Dao walked across to us. 'Fai will get everything ready for dress fitting tomorrow. So, we go to lunch now.'\n\nWe headed back out in the Bangkok traffic and eventually drew up at a restaurant on Sukhumvit Soi. Over an exquisite lunch of beautifully cooked and presented Thai dishes, I was determined to ask Dao some questions about Kritsada's party. \n\n'Dao, I really do need to know more about the party on Wednesday night. I've been told nothing. Like, what is the party for? Is it a special occasion?'\n\n'No, not really special. Kritsada has regular parties like this throughout the year. He invites friends and business people, some entertainers as well as some politicians and diplomats. There will be one ambassador there, but for security I cannot tell which one.'\n\n'But can you tell me some names, I don't want to embarrass myself by not knowing who is who, please Dao, I'm going to be so nervous.'\n\nShe hesitated for a moment, wondering if she was going to breach some confidences, then I could see her relent and she showed me a list on her iPad. There were about 30 names, about half were Thai and the other half western names and a few Companies but without specific names. She ran through the Thai names, some were business acquaintances, some politicians but when Dao said one name, Nin got very excited. \n\n'Oh, she one of Thailand's best actresses. She is very lovely.'\n\n'Thank you, Dao. Can you send me the list so I can learn some names?'\n\n'OK, but you cannot share with anyone, is so important.'\n\n'No. of course not, it's just for me. Will it be at Kritsada's house?'",
        "'No, he has hired a boat on the river. It's an old sugar barge turned into a club and restaurant. Very nice. He has hired the whole boat.'\n\n'What happens at these parties, Dao?'\n\n'There will be drinks, some entertainment. Traditional Thai dancing this time. Then dinner and more entertainment.'\n\n'Dao, why did Kritsada ask me to do this?'\n\nShe paused, looked at me, then glanced away. 'I don't know why. He just tell me to get everything set up. I didn't ask why, not my place. It will be nice evening, I think. Now I have to go to office, things to do. Car will take you wherever you want to go. I see you tomorrow at ten.'\n\nI watched her as she left and wondered why she had lied. \n\n***\n\nNin and I finished our lunch and asked the car to take us back to the hotel. I had a massage in the hotel spa and left Nin finishing up some of the project work that we had frankly neglected the past few days. My phone rang and without thinking I answered it, only to hear Jandaeng's drawling voice. 'I want to meet tonight.' I felt the anger rise, and I snapped back.\n\n'What if I don't want to?'\n\nThere was a pause, I honestly don't think he expected me to pushback, and it knocked him out of his stride.\n\n'Listen to me.' He was screaming down the phone now. 'Do I have to remind you what I can do to you if you don't do what I say? I can make you and your fucking friends disappear anytime I want. You do not want to try my patience too much. Now, meet me at the bar where we met before at 8. Do not fucking dare to be late.' \n\nI was shaken by the force of his reaction. He was normally calm and controlled. I had never heard him lose it quite as badly as that. I called Thaksin to tell him about the meeting and he told me to expect a shadow in the bar when I met with Jandaeng. He warned me to be careful. They had intercepted electronic chatter from the Triads that they were losing patience with a source in the police. No names were mentioned, but Thaksin suspected it might be Jandaeng. I didn't have to be a genius to work out why Jandaeng might be so jumpy. I thought about calling Kritsada with that news, but decided to leave it for later. Instead, I called Alex and told her.\n\n'Be very careful, babe. Don't take any risks.' She sounded distracted. \n\n'What's up?'\n\n'Oh, nothing. Just tired and missing you. I want you back soon, I miss that lovely cock of yours.'\n\n'I miss your cock too.' That made her giggle. \n\n'How's the preparation for the party going?'\n\n'Oh OK, nothing special really, Nin is helping me so everything's fine. Dao is very helpful too.'\n\n'Mmm.'\n\n'What do you mean by that?'\n\nShe laughed, 'Well, at least I don't have to worry about you with her.'\n\n'Huh?' \n\n'Don't tell me you don't know?'\n\n'Know what?'\n\n'She's gay, you must have worked that out.'\n\n'That's what Nin said, I had no idea. How do you know? And why am I always the last to know things?'\n\n'Babe, because you are so dense sometimes. Anyway, what will you be wearing for the party? Make sure it's something nice, Kritsada's parties are always special.'\n\n'Er, OK.' I wondered once again if she knew what Kritsada had asked me to do. I was on the point of blurting out the truth when she said, 'Sorry, got to rush, babe. Areeya and Pao send their love. Let me know how it goes with Jandaeng and don't do anything dangerous.'\n\n'Of course, you know me.'\n\nShe snorted and ended the call. I hadn't exactly lied to Alex about what I was doing at Kritsada's party, but I hadn't told her the whole truth to be sure. Is a sin of omission as bad as a sin of commission? Luckily, I'm a failed Catholic, so I shook my head and went back to my immediate problem. Nin was meeting Shane tonight for dinner and she had already left. I had a quick nap, showered and then headed out to meet Jandaeng.\n\nI arrived half an hour early and slipped in through the back of a bar across the road from where I was going to meet Kritsada. I hoped I was far enough inside not to be seen from the outside, but it gave me a good view of the road and the bar. What looked like a couple of Jandaeng's boys stood outside, both wearing those idiotic sunglasses. I had planned to settle my nerves a little with a drink before meeting Jandaeng, but as I got up to leave, I saw a man walk out of the bar opposite, look right and left before nodding to the two guards. I sat back down quickly, my pulse racing because I knew the man. It was Yut, one of Kritsada's sub-bosses. The one whose name meant war.\n\nIt all started to make sense. We knew someone had been leaking information from Kritsada to his competitors and It had to be someone senior. Yut was the sub-boss who had been the most resistant to Dao and I getting involved in his business. It couldn't be a coincidence that he had come out of the bar where I knew Jandaeng was. I toyed with the idea of calling Kritsada, but I thought I should try to get some more evidence first. I paid for my drink and walked out through the back of the bar. I walked up to a cross street then doubled back down the road to the bar where Jandaeng was waiting. I wanted his two boys to see me walking down the street to the bar. They stood aside to let me enter and followed me inside. I spotted Jandaeng at a table in the corner and walked across to him. As I got there one of his men pulled my arms behind me and the other one frisked me very aggressively, taking my iPhone and handing it to Jandaeng.\n\n'What the fuck?' I spluttered.\n\n'Just making sure you not have any weapons or wearing a wire.' He turned off my phone and laid it down on the table.\n\nI shrugged myself free from the guy holding me and sat down facing Jandaeng. I could see myself in his mirror sunglasses.\n\n'Why? You worried about something?'\n\n'I trust no-one.'\n\nI smiled, 'Suspicion always haunts the guilty mind. William Shakespeare.'\n\nHe slammed his fist on the table. 'I don't fucking care who said anything. I want to know who will be at the party.'\n\n'First, I want a drink.' I thought he was going to hit me, but he snapped his fingers and one of the bar girls came over, looking scared. I wanted to stall a little as I hadn't seen anyone in the bar who looked like he might be Thaksin's man.\n\n'Kho beer Chang khap.' She scurried away and returned with a bottle of Chang. I smiled at her. 'Khop khun khap.' She flashed a smile back and disappeared. I took a sip of the beer and looked around. Still no sign of Thaksin's people. Jandaeng put his hand in his pocket and laid a small pistol on the table, the business end pointing straight at me. \n\n'I want to know who is going to be at the party.'\n\nI couldn't take my eyes off the small hole in the barrel of the gun in front of me. I reasoned he wouldn't actually shoot me in here, but as a threat it was a pretty good one.\n\n'Ok. Ok. I don't know everyone who will be there, but It includes some of his business contacts. I don't know all their names but some are foreign. There will be an Ambassador as well as some local politicians.'\n\n'Who?' he snapped. I reeled off the names that Dao had given me, and when I said one name in particular, I thought I detected a small twitch in the corner of his mouth.\n\n'What time and where will it be?'\n\n'Eight o'clock and on one of the river boats. You know as much as I do now.' I took another swig of my beer. He began to run his fingers over the gun and I prayed that the safety was on. I was fed up with people pointing guns at me, and I particularly didn't want to get shot by accident. \n\n'You can go now. I will be in touch again.' I didn't move, I wanted to push his buttons a little more. 'I said, you go now.'\n\n'Only when you tell me when this will be all over?' \n\n'All over, what you mean?'\n\n'Well this must be part of some kind of plan you have. You said Kritsada was involved in politics, isn't that what this is all about? Isn't that why you're investigating him? When will you get off my back?'\n\n'Listen to me, you worthless farang,' he hissed. 'I will decide when this is finished. Until then you will do what I want. Is that clear?'\n\nI shrugged, 'That's clear, but don't underestimate Kritsada, he's a smart operator. He suspects someone in his business has been informing on him. Someone other than me that is. He thinks he knows who it is.'\n\nJandaeng stiffened and even behind those glasses I could sense his eyes narrowing. I thought for a moment I might have gone too far.\n\n'Who does he think it is?' Wrong answer I thought, that confirms there is a mole. He should have just dismissed the comment.\n\n'He hasn't told me, I just hear him saying that whoever it is will pay heavily for his betrayal.'\n\nJandaeng recovered his composure, perhaps realising he had let slip something.\n\n'Phhh, Kritsada stupid. He think he can get away with everything. I know people who more clever than him by far. He not so smart. If he was he would get out of Thailand for his own good. He will be one who pays.'\n\n'Who is it you know?'\n\nHe leant forward and grabbed my wrist and twisted it painfully backwards. 'You ask too many questions. You would be better to just do what you are told. Otherwise you might end up in canal.'\n\nHe let go of my wrist, 'Now fuck off out of my sight. I will call you when I need you.'\n\nI grabbed my phone and walked away, rubbing my sore wrist. I passed the bargirl, and she smiled as I walked past. I went outside and walked away from the bar before retracing my steps through the back of the first bar from where I could watch Jandaeng's bar. I sat there with a beer, nursing my sore wrist and even had one of the bar girls come over and sit with me as cover. She got bored after a while as I wasn't going to do anything more than sit there and went off to find a more profitable client. \n\nI bought another beer and I must have waited for about an hour when I saw an unmistakable figure walking up to the bar opposite. Yut walked straight in, but I got a few shots of him on my phone as he turned his head to nod at Jandaeng's man. It was no more than ten minutes later when Yut came back out of the bar with a face like thunder. I was ready this time and got a clear video clip of him.\n\nI caught a tuk-tuk back to the hotel and headed to the bar where I found a quiet corner and called Thaksin. I filled him in on what Jandaeng had said, but leaving out what I had discovered about Yut. That was for me to tell Kritsada.\n\n'Jandaeng seemed very jumpy, I think he's under pressure. Oh, I didn't see any of your men in the bar.'\n\nHe laughed, 'I don't just have men working for me.' \n\nThe penny dropped. 'Oh, it was the bar girl.'\n\n'She said you handled yourself very well, by the way. She was worried when he put the gun on the table, but it didn't seem to frighten you.' \n\nI didn't bother to tell him that I had been scared rigid by it. I made my way up to the room and let myself in. Lights were on in Nin's bedroom but the door was closed, and I assumed she was back from dinner with Shane. I walked over and opened the door without thinking. I stopped dead as I saw Shane, naked and on his back on the bed with Nin, equally naked squatting on top of him, bouncing up and down on his massive cock."
    ],
    "authorname": "nikkiesilk",
    "tags": [
        "transgender",
        "shemale",
        "thailand",
        "gay",
        "real life",
        "ladyboy",
        "action adveture",
        "crossdressing",
        "trans"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/cockatoo-pt-36"
}