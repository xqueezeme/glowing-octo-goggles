{
    "title": "Three Little Words",
    "pages": [
        "This one is for the . As always, your votes and comments would be much appreciated. And thank you for reading.\n\nThis is a longer than I usually write, and I hope you'll enjoy it. Happy Holidays, and Stay Safe!\n\nGISELLE\n\n\"Ooh, look, it's him.\" Miranda leaned in and whispered so all of us could hear her over the din of the packed ballroom, carefully pointing her finger in his direction.\n\n\"Who are we talking about?\" I asked, trying to look around her without spilling my wine.\n\n\"Rory McLean, who else? Isn't he the absolute hottest hunk of man you've ever seen?\" Happily married, heavily pregnant Joanie sighed. \"Hmmm, come to mama, big boy,\" she murmured, rubbing her big round belly, making all of us laugh.\n\n\"Just so you know, Joanie, that baby bump of yours is not a magic lamp. So you can quit rubbing that poor baby's butt, hoping for a miracle,\" Miranda muttered, before going back to devouring the man in question with her eyes.\n\nI just shrugged. \"He's okay, I guess.\" Their mouths agape, I wanted to laugh at the way they all turned their heads at once, shocked that I'd say something like that about their idol.\n\nEspecially my assistant, tall, willowy, ebony-haired Marcie, who was staring at me like I'd lost my mind. \"You have got to be kidding. That man is 100% grade A certified beefcake. And I'd bet he's really packing, too. Just by the way he carries himself and fills out a suit like nobody's business, like he knows he can have any woman he wants with just the crook of his finger, tells me all I need to know. And I'd bet everything I own that he'd be fantastic in bed, and would really know how to make a girl squeal.\"\n\nI took a longer look, and shook my head. \"I guess he's not bad if you're into red-heads. But he doesn't do anything for me.\"\n\nThat got me another dramatic eye roll from Marcie. \"Giselle, remind me after the holidays to book you an appointment to get your eyes checked. Because that man is all kinds of hot, and I don't know how you can't see it.\" Heaving a sigh, she glanced back at him. \"With that light beard he's got kind of a sexy Chris Evans thing going on, and I'd sure like to know firsthand if he's as hot as he looks.\" Tipping her head, she studied him a little more closely. \"And I wouldn't say his hair is actually a vibrant fiery red like yours, it's more of a golden reddish-blonde that goes perfectly with that GQ scruff he's rockin'. And don't get me started on the sexy way he smiles, those long-lashed baby blues, or that killer body that I'd love to run my fingers over, or even my tongue, if he'd let me.\"\n\nMiranda grinned, winking at Marcie. \"Maybe we should try sexing him up together sometime.\"\n\nMarcie laughed, nodding her head. \"I'm game if you are. I'd be happy to do anything he wanted, as long as I get a chance to get busy with that hot piece of man candy.\"\n\nTaking a sip of my drink, I watched them all turn back to stare, I guess hoping he'd wander over and say something witty or flattering that would get them all even giddier -- if that was even possible.\n\nLeaving them to have their fun, before dinner was served I made the rounds and said hello to everyone I always saw at these construction industry things. And as I wished everyone a happy holiday, I was careful to avoid bumping into His Hotness.\n\nAfter I'd taken a moment to peruse the items listed at the silent auction table I put in a couple of bids on a few things, like a trip to Mexico, since the dinner was in aid of two worthy causes: local food banks and providing toys for underprivileged kids. But even if I won, being the managing director of one of the biggest window and door manufacturers in the country, I knew I couldn't really afford the time to go to Cancun, no matter what time of year I tried to go. Though I was elated to finally be getting a whole week off now for the holidays, for the first time in ages.\n\nI was just setting the pen back down and a shiver ran down my spine when I felt a hand sliding down my back, till I could detect some pretty insistent fingers grazing the top of my backside, before venturing even lower. Turning, I forced a smile when I saw it was Chuck Harper, one of our biggest customers who had been trying to talk me into bed for years. I'd honestly never seen anyone as polished or as vain. With his immaculately trimmed black hair gelled to within an inch of his life, nearly blindingly white smile, and clad in a trendy body-hugging shimmery navy blue suit, that I imagined he thought made him look like he still had it. But to me he just looked like a desperate guy on the prowl.\n\n\"Hey, Chuck,\" I said, carefully shifting away from him, till thankfully I felt his hand drop. \"How are the wife and kids?\"\n\nHe gave me a narrow eyed glare, I imagine for rubbing in the fact that he was married. Still, he nodded and said, \"Good, everything's good.\" But the way his eyes raked me over from top to toe like a snake about to pounce, I had to force myself not to shudder. \"And you're looking good, too, Giselle, damn good.\" He stepped a little closer, leaned in and breathed against my ear, \"You staying here in the hotel tonight?\"\n\nTaking another step back, I lied, \"No, I'm heading home as soon it's over, catching the next train back to Montreal.\"\n\nWith his gaze locked on my lips, he reached out and traced a finger along my jaw, making me cringe and wonder if he could possibly be any sleazier. \"Shame. I was hoping maybe we could have a drink together after this--\" he waggled his eyebrows, and slyly murmured -- \"up in my room.\"\n\nYeah, like that was ever going to happen.\n\nI quickly picked my wine glass off the table, touched it to his, and flashed him a big fake smile. \"Well, I can wish you a happy holiday now, since we've both a got a drink.\"\n\nAnnoyed that I wasn't willing to play along, the smile left his eyes. Clenching his jaw, his hot breath hissed against my ear, \"You and I would be good together, you know that? Why won't you me give a chance to show you just how good I can make you feel?\"\n\nI took yet another step back, hating this ridiculous tango he was forcing me to perform. \"Well, first of all you're married, and I never mess around with married men. And secondly, I'm not looking for anything with anyone right now. But I hope you enjoy your dinner, and that you have a wonderful holiday with your family.\"\n\nBefore he could respond, thankfully the little bell started ringing to announce that dinner was about to be served, so I gave him a little wave, rolled my eyes and went and found my company's table.\n\nOf course I knew being one of the few women at these things made me a target, like I had a big red circle painted on my ass, practically saying 'come and get it.' But since I never showed any interest in any of them, I kept hoping they'd back off and start treating me like an equal, rather than just a sex object. More than that though, I really hated that so many of them liked to cheat whenever they were away from their families. And their poor wives back at home with the kids probably didn't have a clue what their husbands were up to when they were out at one of these things.\n\nAside from the cat and mouse game good old Chuck had forced me into playing, at least dinner was good, kind of a gourmet take on Christmas dinner. It started with a delicious creamy mushroom and stilton soup. Then succulent turkey, glazed ham and roast veggies, garlic mashed potatoes and cranberry sauce for the main course. And for dessert, like we needed any more, there was warm Christmas pudding with brandy sauce, melt in your mouth white and chocolate shortbread cookies and candy cane ice cream with little whimsical meringue snowflakes piped on top.\n\nBut as good as it was, I only had a little taste of everything, because if I wanted to keep my job, I knew I had had to keep myself in shape. Because nobody liked a woman carrying any extra weight, especially one who headed a company. So I had to do my best to look the part. Especially with the rumors I'd been hearing lately about the possibility of our company being bought out.\n\nPushing that thought aside, sitting enjoying an after dinner liqueur with my posse, as I liked to called them, as I listened to them laughing and talking together, I liked to think I was paying it forward. I knew I was fortunate to have gotten hired by Grant Tucker, the owner of the company, who took a chance on me before he retired, and turned the reins over to his son Grant Junior. So naturally I was happy to give a leg up to other women trying to get into a male dominated industry like ours. An industry was never too thrilled to see a woman at their boardroom table, or even on their sales force, no matter how competent she was.\n\nSince my company was based in Montreal with offices across the country, and it was getting late, I planned to stay the night in a room I'd booked upstairs in the hotel. Then in the morning, I'd take the train from Union Station, just up the street in downtown Toronto and head home. I knew the rest of the girls were planning to spend a day or two last minute Christmas shopping in the Eaton's Centre and a few of the other trendy shops along Yonge Street. But since I didn't need any more clothes or shoes and really had no one to buy for, seeing as my sister's family were happy with the gift cards I always sent them for Christmas, I knew I'd be heading home on my own.\n\nAfter the dinner was over, and I'd said my goodbyes, up in my room, fresh from the shower, I'd just slipped into a sheer black silk and lace teddy, and was sliding my feet back into my sexiest black patent leather heels when I heard a sharp rap on the adjoining door that led to the room connected to mine.\n\nAlready smiling, with my heart starting to beat a little faster, I tugged on the matching thigh-high robe and went and unlocked the door.\n\nThen I shook my head as I looked at gorgeous Rory, of course wearing a devilish smirk, clad in a white terry hotel robe, hopefully with nothing on underneath.\n\nI could actually feel the heat of his gaze as it slowly slid over me making my nipples grow hard. \"Damn, baby, you look hot,\" he murmured, stepping close and pulling me into his arms with his hands sliding down to my ass for a squeeze. \"I've been aching for a taste of these luscious lips all night. Especially while I watched you carefully avoiding even saying hello to me, while that bastard Chuck Harper kept trying to paw at you. I know he's a client, but if I ever catch him touching you again...\"\n\nI had no desire to talk about Chuck, when I had what I wanted right in front of me. Touching my finger to his lips, I shook my head, pushed up on my toes, wrapped my arms around his neck and kissed him like my life depended on it. God I'd missed this with him. And just like every time we got together it was like spontaneous combustion the moment his lips touched mine.\n\nShivering at the feel of him hard against my belly, his lips trailing a path along my neck to my ear sending goosebumps chasing across my skin, my pulse racing into overdrive, already it felt like my blood was on fire. \"All week I've been looking forward to this, imagining you naked in my bed,\" he breathed into my ear, \"and I can't wait, anymore, Giselle, I need you. I need to be inside you.\"\n\nMore than happy to comply, I slid my hand into his robe, grinning as I wrapped my hand around him, already nice and hard, just the way I liked him. Smirking to myself, it made me happy to know firsthand that the girls were right, and my sexy secret lover really was packing some heat.\n\nAs I toyed with him, stroking him up and down in my hand, smoothing my thumb over the slick, swollen crown, Rory made me laugh when he impatiently nipped at my earlobe and started to growl.\n\nKissing his way down to my breasts, licking at my nipples right through the silk, he murmured, \"You keep that up, you little tease, and we won't even make it into bed. I'll just take you up against the wall, till I've gotten you screaming your damn head off. You have any idea how fucking hot you looked tonight in that killer black dress, with just a hint of cleavage and those wicked come-fuck-me heels? You had me so hard, I wanted to drag you up here and show you what you were doing to me, before they'd even served dinner.\"\n\nSmiling into his big baby blues, sliding my fingers through his thick reddish-blond hair, I've gotta say, the man knew just what to say to get my nipples tingling and my pussy dripping. Cupping his gorgeous face in my free hand, drawing his full bottom lip between my teeth I sucked and gently nipped, trying hard not to laugh as he rolled his eyes skyward, his patience just about run out. Really starting to growl now, I could feel him growing even thicker in my hand, as I enjoyed the feel of him sliding through my fist.\n\nTeasingly running my tongue across his bottom lip to try and soothe him, I whispered against his mouth, \"Then I guess you'd better take me to bed, lover boy.\"\n\nThat was all he had to hear. He tossed off his robe, and his beautiful cock sprang free, as hard as I'd ever seen it, just glistening with pre-cum. I laughed as he lifted me off my feet and nearly kissed my face off as he raced us into the other room and tossed me onto the bed, bouncing my ass on the mattress. Wow! I'd never seen him so eager.\n\nSeeing as he already had my pussy dripping, moaning at the sight of him stroking himself in his hand, I had no room to talk. I was so ready for this, I swear the heat pooling between my legs was almost enough to set me ablaze. My pulse racing through my veins, my breasts heaving, I could hardly wait to feel him sliding between my legs.\n\nBut then he startled me and I let out a gasp, when I felt him capturing my wrists in his hands, clicking a pair of handcuffs into place, locking me onto one of the wooden rungs on the headboard, trapping my hands over my head. Though I could feel my heart slamming against my ribs, nearly beating out of my chest, I just cocked an eyebrow and tried to sound cool. \"So, you're into bondage now, is that what you're trying to tell me?\"\n\nChuckling, he shook his head. \"No. But it's the only way I could think of to get you to listen.\"\n\nRORY\n\nSitting back on my haunches, I don't think I'd ever seen anything as beautiful or anything hotter than her right now. If the sight of her long, fiery red hair curling around that gorgeous face wasn't enough, those big green eyes dark with arousal, and the way her perfect breasts were heaving, clad in that tiny scrap of black silk had me nearly out of mind with need. And seeing her bound to the bed, if possible, was only making me harder. Though I'd never been into bondage -- at least I didn't think -- I just hoped she'd hear me out, knowing she couldn't escape back to her room if I said anything she didn't want to hear.\n\nBut I thought it was long past time that we had this conversation, whether she liked it or not.\n\nUnable to resist, I lifted her feet to my lips, and dropped kisses to the top of each one, gently stroking them with my thumbs, I gazed up at her. \"God even your feet are beautiful, so delicate and soft.\"\n\nSmirking, she asked, \"So, that's what you needed to share, that you've been hiding a secret foot fetish?\"\n\nWith my eyes trained on hers, I shook my head. Sliding onto my belly I began tracing a sensual path with my lips over her slender ankles, up along her silky calves, to her knees, where I paused to lash my tongue into the tender flesh in the back of each one, smiling as she shivered. And I whispered against her flesh, \"I need to tell you how I feel, Giselle.\"\n\nParting her thighs, dropping hot, open-mouthed kisses to her sex, breathing in the heady scent of her arousal, I smiled against her pussy. The way she was anxiously shifting, thrusting up her hips, and really starting to moan, I could tell my lady love was hungry for more than a few little kisses.\n\nIt was the heat of my lips sliding over her silk covered sex that really set her off and got her quivering, though. Her every breath coming quicker, making her breasts rise and fall, squirming and softly whimpering, just itching for me to slide in and take her, I was so tempted to do just that. But what I had to do first couldn't wait. I watched her eyes drifting shut, as I lapped at her through her teddy, lost in her delectable sweetness.\n\nThen I whispered what I'd been desperate to tell her since the day I'd first set eyes on her. \"I love you Giselle. And I need more than these couple of hookups we manage to arrange every few weeks. I want us to be a couple. I need you in my life, and I think you need me, too.\"\n\nThen just as I feared, as what I was saying began to sink in, she froze, like I'd flipped a switch and turned her off. The seconds seemed to tick by in slow motion, till finally with a sad little sigh, she opened her eyes and looked at me with such regret, that I already knew what she was going to say. \"Rory, I wish I could, but I can't give you any more. You know that. It's what we agreed to when we started this whole thing two years ago. This was just supposed to be fun, just a little stress reliever for both of us. We promised each other that we'd never let it get too serious. And if it ever did, we said we'd call it quits before we got in too deep, so that neither of us would get hurt.\"\n\nThat was her idea, not mine. But I wasn't about to argue, when I had other ways of persuading her.\n\nSliding my hands under her, I cupped her ass and squeezed. \"I can't help it that you've gotten under my skin. And I know you've got to be feeling something for me, or we wouldn't be sneaking around to be together like this every chance we get.\"\n\nHer bottom lip starting to tremble, her eyes a little misty, she looked down at me. \"Rory, can you unlock the cuffs, please?\"\n\n\"That depends -- are you going to run out of here if I do?\" I wouldn't give up, because I just couldn't lose her.\n\nPushing aside the crotch of her teddy, I started suckling her clit, gently flicking all around it with my tongue. And just like I knew she would, she started whimpering even louder, desperately thrusting her hips up to meet my mouth, practically feeding herself to me. I know just how to make her come, and right now I didn't care if I was being a little underhanded to make her see reason, by making her see stars. I love her enough, that if I have to spend the entire night proving it to her, just like this, I would.\n\n\"Damn, Rory, you're such an evil bastard,\" she muttered between gasps.\n\nSmiling against her quivering pussy, I loved the way she shifted and moaned, rocking her hips as her body got ready to let go, convinced there was nothing sweeter in the world than seeing my baby come, and come hard.\n\nThe instant I slid two fingers inside her and found the spot that I'd discovered would send her right over the edge, as I worked them in and out of her, she started shivering like crazy, and murmuring, \"Oh, yes, right there.\"\n\nBut I knew what she really needed.\n\nWhen I got between her legs, took hold of my cock and nudged my way inside her, carefully stretching her inside to take me, tossing back her head, she whispered, \"Oh, Yes, Rory, please.\"\n\nGazing down at her gorgeous face looking so blissed out, how could I ever deny her? And why would I even want to? Watching her falling apart as I slid in a little deeper with each thrust, I touched my lips to hers and whispered, \"Just think we could be together like this all the time. And all you have to do to make it happen is say, Yes, I want this with you, too.\"\n\nTaking hold of her legs and slipping them around my waist, I got up on my hands and really began to ride her, amazed how every time with her felt even more incredible than the last. \"Oh, I'm coming so damn hard,\" she cried out, digging her teeth into her bottom lip to try and stop herself from screaming her head off. Clamping down, squeezing me inside her tight, like always, she wanted to take me with her when she came.",
        "My jaw clenched, pounding her for all I was worth, when I felt that electric zap shoot down my spine straight to my balls, my heart pounding, I gave her one good hard thrust and froze.\n\nWrapping her in my arms with her legs squeezed around me, I took her mouth in a blistering hot kiss as I felt myself exploding and shooting off inside her as she clenched herself around me with her whole body shaking. Both of us breathless, with me still pulsing deep inside her, as I brushed back the hair from her eyes, I couldn't believe she'd ever want to give this up, when what we had just felt so undeniably good. Whenever we were together like this, it felt like we were made for each other. And I know she had to be feeling it, because I sure as hell was.\n\nI reached up and uncuffed her, hoping she wouldn't bolt, race back to her room and lock the door behind her. But thankfully she just curled in close stroking her fingernails over my beard, not saying a thing. And that had me worried, because normally we talked whenever we got together, well at least after we'd had some fun in bed. Not usually about business, but just about what was going on with us, because we both really cared about each other too, at least I thought we did.\n\nFinally she looked up at me. \"I'll stay with you tonight, and then I'm taking the train home tomorrow. And I'm sorry, but I think this is going to have to be it for us.\"\n\nI blinked, not even sure if I'd heard her right. I couldn't believe what she'd just said, that she actually wanted out. I knew she cared, and that she looked forward to us getting together as much I did. And now because I told her how I felt, she thought I'd stepped over the line of this, friends with benefits thing she thought we had going on. And because I'd committed the cardinal sin of admitting that I loved her, she wanted to end it?\n\nThere was no way I could let her walk out without even trying to see if we could make it work. Two years we'd had together, doing everything we could think of to stay in touch; texting, sexting, late night calls on the phone, always with lots of teasing; the anticipation almost killing us until the magic happened every time we got together like this.\n\nCupping her face in my hands, I looked into her eyes, not ashamed to beg if I had to. \"Can't you stay and give us a week, Giselle, just a single week together? You told me yourself that your office is closed until the New Year. So all I'm asking for is these seven days. And you'd be doing it for us, not just for me; to see how good we'd be together, just being a couple. And after the holidays are over if you still want to end it... if that's what you really want... I guess we'll be done.\"\n\nGISELLE\n\nStaring into his gorgeous blue eyes, so full of hope, I felt so selfish. I knew he needed to move on, find someone younger, someone he could plan a life with. And sadly for both of us, I knew that it could never be me. But I also knew that until I let him go, he'd never leave. I'd been fooling myself for the last two years, thinking we could have a little fun together every few weeks, and just head back home, happily sated until we saw each other next time. And with no strings or promises, it was only meant to be a little stress reliever and a nice break from the everyday for both of us.\n\nBut he wasn't the only one who'd broken the rules we'd laid out. I knew I loved him enough, to finally face the fact that it was time I let him go.\n\nSo I felt I had to be honest, and tell him it was over. But he was so determined, I knew he'd put up a fight. Problem was I had a pretty strong feeling that if we did stay together for an entire week over the holidays, once it was over, it would be almost impossible for us to just walk away and get on with our lives and put this all behind us.\n\nRunning my fingers through his hair, as he nuzzled my neck, making me shiver, I thought back, remembering the moment we first met in Florida.\n\nIt was a few weeks before Christmas and I was attending a big construction industry conference. When the meetings had finally ended on the last day, back at my hotel, eager to cool off and unwind, I'd slipped into my bathing suit and went down for a swim. After a few laps, I swam across the pool to get a drink at the swim-up bar, and there was Rory on a bar stool, with his long, toned legs dangling in the water in bright yellow board shorts, looking hot as sin. He was just so good looking, with a body that made we want to drool. Tanned and beautifully muscled with a nice smattering of golden blond curls trailing enticingly from his sun-bronzed chest down into his shorts. He quickly had me wondering what it would feel like to follow that path with my tongue. Though I was the never the type to just hop into bed with a guy, he sure had me tempted.\n\nOnce I'd stopped gawking at him long enough to pull myself out of the water, standing beside him dripping wet in my little white thong bikini, I looked up at him and asked about the empty seat beside him. \"Is this seat taken?\"\n\nSlowly raking me over from top to toe, he flashed that killer smile, that I've grown to love and said, \"It is now.\" And right then and there, the way we smiled into each other's eyes, like we were sharing a naughty secret, I had a feeling that it wouldn't take long and we'd be getting pretty cozy.\n\nAnd no surprise I was right. Sitting at that bar for hours, we laughed together so hard and I knew it had nothing to do with the drinks and everything to do with the chemistry that just seemed to flow between us.\n\nComing on evening, when he cupped my chin in his hand, and touched his lips to mine, I remember how hard I swallowed, realizing just how much I wanted him. I didn't know his name, where he came from, or a single thing about him. But I knew one thing, I wanted him enough to take a chance and just go for it. Never much of a risk taker until him, he had me so wrapped up in his charm, I knew I couldn't say no, even to myself, I wanted to be with him so badly.\n\nThe moment we got into his room, and he took me up against the wall, and we almost kissed each other senseless, I just gave in, deciding this would be one of those memories that I'd look back on for years. The time I hooked up with a gorgeous stranger I'd met in a pool bar, who'd almost had me coming the moment we stepped into his room.\n\nThen I remembered he did the sweetest thing. Expecting him just to toss me over his shoulder and carry me into his bedroom, he looked into my eyes and asked, \"You haven't had too much to drink, have you?\"\n\nSmiling, I shook my head. \"No, I'm fine. I switched to tonic and lime hours ago.\"\n\nHe actually breathed a pretty loud sigh of relief, making me laugh. Then I touched my lips to his and got lost in kissing him all over again, realizing that in addition to being the hottest man I'd ever met, he was also a pretty sweet.\n\nThat first night we shared was so good, when we woke up together in the morning, naked in his bed we took one look at each other, started grinning like idiots, and went at it all over again. Until finally we collapsed after nearly wearing each other out.\n\nAnd we had loads of fun with the mini bar. When I noticed they had little bottles of Bailey's, my favorite liqueur, flashing me a devilish grin, Rory twisted off the tops of all four bottles and used two of them to paint me, so he could have the pleasure of licking it all off, nearly devouring me with his mouth. And of course, I had just as much fun, when I dribbled it all over him, and took my time, sliding my tongue over him to make sure I got every last drop, especially what was coating his big, hard delectable erection.\n\nThen for that whole day, we never left his bed. We just grazed on stuff he'd ordered from room service whenever we were hungry, and made out almost non-stop until eventually we dropped off to sleep wrapped in each other's arms.\n\nWhen I woke again the next morning, with him sound asleep and yet amazingly still rock hard pressed up against my backside, I looked at the clock, shocked when it dawned on me that I had to leave or I'd miss my flight home. Panic stricken, I hopped out of bed, scrambled around and found my bathing suit, and struggled to pull it back on, while he looked over at me bleary eyed, scrubbing a hand over his face, he asked, \"Hey, where are you going?\"\n\nI took one last look at him, gloriously naked in bed, sad to think that our fun was over. \"I've got to go or I'll miss my flight home.\" But I still wandered back and took a moment to kiss him goodbye and whisper against his lips, \"Thank you for a wonderful couple of days.\"\n\nThen when I turned to leave, he called out, \"Wait, what's your name?\"\n\nI looked back, shrugged, and asked him, \"Does it really matter?\" Thinking I'd never see him again, I thought it best if we parted the way we'd started; just two strangers madly in lust with each other. Because wow, those hours we spent in his bed had to be the hottest thing I'd ever lived through. And I knew I'd never forget him, or what we'd shared together.\n\nBut then a few weeks later, just after the New Year, manning our company booth at the big Home Show in Toronto, I couldn't believe my eyes when my naughty little hook up, that I'd been trying hard to put behind me, strode right up to me. Flashing a devilish smile, his eyes glittering with amusement, he said, \"Hey there. I'm interested in looking at some windows.\"\n\nThen he handed me his card, and when I read, 'Rory McLean, President, McLean Custom Home Designs,' I felt so shocked, I'm sure my mouth fell open as I just stood there staring at him.\n\nI had no idea that he was in the building industry, and could be a potential client, which meant I should never have gone anywhere near him. But somehow, when he took me aside, he managed to get me to agree to have dinner with him after the show closed for the night.\n\nNo surprise, as soon as we'd eaten, we wound up in a nearby hotel, back in bed together. And after we finally managed to come up for air, we decided we enjoyed each other so much that it might be fun, if we were very discreet, to keep seeing each other on the sly after that.\n\nBut since we live about five hours driving distance apart, with Rory in Toronto and me in Montreal, we've only been able to meet about once or twice a month, usually mid-way around Kingston. Though we keep in touch as often as we can, since we've become so close, sometimes calling texting or emailing each other even a few times a day.\n\nI knew one thing for sure, though, if I had any idea how young he was when we first met, I probably would have sat somewhere else at that bar in Florida, and we never would have gotten started.\n\n*****\n\nBut with the hopeful way he was looking at me now, I knew I owed him this week, even if only to properly say goodbye. So I touched my lips to his, sighed and said, \"We can spend a few days together, but I've still got to keep an eye on things at work, so I can't be away too long.\"\n\nHis lips curling up in a smile, he shook his head. \"I happen to know for a fact that you never go anywhere without your phone, laptop, and your tablet, so you can keep an eye things from here, just as well as you can from home. So, let's give each other this week together and see how it feels.\"\n\nI knew I couldn't win, so I nodded and gave in. \"Okay. But you have to promise that when I leave to go home, it'll be over and you'll move on.\"\n\nRORY\n\nI had no intention of moving on, so I didn't promise her a damn thing.\n\nBut now that she'd said yes, and agreed to spend seven whole days with me, I wanted to pump my fist in the air. And I just hoped that it would be enough to make her realize that what we have together is a lot more than just sex. Because I'm so crazy about her, all I have to do is see her text and I can feel my heart starting to pound, happy to read anything she'd decided to send me, even if she's just saying hello.\n\nWhen I got her home, she smiled and murmured, \"Nice wreath,\" when she saw the big evergreen wreath I'd fashioned out of cedar branches, that was hanging on the front door with a big red velvet bow at the bottom, circled with pine cones. I thought it looked pretty festive, even if the house was nothing special.\n\nBut when we got inside, the way she looked around wide-eyed at my simple little bungalow, I had to fight hard not to laugh. The place looked pretty dated, like something out of the seventies, and she probably wondered if this was my style. Though at least I'd gone to the trouble of tearing out the putrid avocado green shag carpet that someone thought at the time looked pretty good covering all the floors, even in the bathrooms. And luckily I'd discovered once I'd torn it out, that the ugly green wall-to-wall was covering some pretty decent looking hardwood floors.\n\nThe only reason I'd bought the place was for the property it sat on; four unspoiled acres of beautifully forested land, with a little creek running through the back, only a half hours drive from the city.\n\nOnce we'd got our coats off, thrilled to finally have her home, smiling, I pulled her into my arms, kissed her and whispered against her mouth, \"Do you know what we're going to do now?\"\n\nShe smirked, running her hands up and down my back. \"I'm guessing it involves getting naked.\"\n\nI shook my head. \"No. I think you'd better keep your clothes on, unless you want to freeze your pretty ass off, because we're going out in the bush to find us a Christmas tree.\"\n\nShe looked so surprised that I couldn't hold back, and this time I laughed when she said, \"Are you serious?\"\n\n\"Of course I am. Every year since I was kid, my family and I would go out and cut our own tree. And I thought it would be nice for our first Christmas if we went out and found one together.\"\n\nFrowning, she looked down at her stylish knee-high black leather boots, then back up at me. \"But I don't think I'm dressed for it.\"\n\n\"No worries. I've got some of my mother's things here, that you can wear. And she won't mind, believe me. She's such a shopaholic she doesn't even know what she's got. She just sold her house. And since her condo wasn't quite ready to move in she decided to head to Arizona to spend Christmas with her sister, and I offered to hold onto her things until she comes back in the spring.\"\n\n\"You didn't want to fly south and spend Christmas with your mother?\"\n\nThinking back on the last time I went, I had to force myself not to shudder. \"I tried it a few years ago. And believe me, once was enough. My aunt lives in a retirement community, made up mostly of a lot of older ladies. Bingo's big with her crowd, and so's having dinner at four in the afternoon, though they like to get to their favorite restaurant even earlier, to get in on the early-bird specials. But at least I learned how to play canasta and mah-jong, not that I think I'll ever have a reason to play again.\"\n\nSmirking, she stroked my cheek. \"Bet the ladies were happy to have you join them, though.\"\n\nI laughed, remembering the fuss they'd all made over me, being the only young guy there. \"Yeah, my mother seemed pretty pleased that I went. But even she said it wasn't really something she imagined I'd want to do again.\" And she was right about that.\n\nGoing through my mother's things, I found Giselle some fleece-lined boots, a cute wool hat and a pair of matching red mittens, along with a warm white sweater, to wear under her leather coat. And once she was dressed and she'd tugged the hat on, I just had to pull her in for a kiss. She looked so adorable all bundled up, though thankfully it wasn't too cold out, so we could wander around for a bit.\n\nThe nice thing about having a property that backed onto a ravine with nothing behind me for miles, the air was so much cleaner and fresher than in the city, and it was nice and peaceful, too.\n\nThe air was so still we could hear the leaves and fallen branches crackling beneath our boots as we made our way through the woods. We could even detect the sound of a little black squirrel scurrying up a tree, even before he started squawking at us, as he watched us approach him.\n\nI had put some peanuts in my pocket, like I always did whenever I went out for a walk. After I'd set down my bow saw, I made a little clicking noise with my tongue, and tossed a peanut over by the tree. He sat watching us carefully for a second, to see if it was a trick I guess, then he shot back down, picked up the peanut, stuffed it in his mouth and hightailed it back up again. And we both laughed at how fast he'd moved to get at that peanut.\n\nHis tail twitching, he kept his attention trained on us as he peeled and ate it. And when I tossed another one at the bottom of the tree, no hesitation this time, he scurried back down and took that one, too.\n\nSmiling, Giselle looked fascinated, as we watched the little guy getting closer and closer each time, especially since she lived in a condo in the heart of the Montreal, where she'd rarely get a chance to see any wildlife. I gave her a handful of nuts and said, \"Make that clicking noise, and see if he'll come a little closer.\"\n\nI don't know how long we hung around playing with the thing, but it felt nice just to be communing with nature, and not worrying about anything else. And by the time we'd offered him the last few peanuts, he'd gotten brave enough to take them right from our hands, which thrilled her.\n\n\"It really is nice out here,\" she remarked, watching him scurry back up the tree as I took her hand and started walking us out deeper into the bush.\n\nLooking across at her I smiled. \"That's why I picked this lot, thought it would be the perfect spot for my dream home.\"\n\n\"Wow, you're building a house out here?\" She looked surprised glancing around, because I hadn't told her yet.\n\nI laughed. \"Yeah, that old bungalow's coming down as soon as soon as I can get the new one up. I'll have to show you the plans to see what you think.\"\n\nShe nodded thoughtfully but didn't say much. But secretly I was hoping she'd want to be included, and this house would be for the both of us, providing we even made it through the week together before she decided to leave.\n\nIt turned out to be a beautiful day, especially for so late in December on Christmas Eve. And though there was a nip in the air, it wasn't too cold, probably because of the sun shining down on us through the bare trees. And with only a dusting of snow on the ground, I decided it was a perfect day for a walk in the woods to find just the right tree with my lady at my side.\n\nWhile I was looking around for one that looked full and healthy, tugging at my hand, Giselle stopped us in our tracks and whispered, \"Look,\" pointing across the creek where a deer was getting a drink of water. \"Isn't it beautiful?\"\n\nI nodded, but didn't say anything, hoping we wouldn't spook her and make her run. She was a pretty young white-tailed doe, who didn't seem to notice she had an audience.\n\nBut then she lifted her head and watched us for a minute, and I guess deciding that we didn't pose a threat she calmly turned and disappeared into the bush.\n\n\"Wow. I've never seen one that close before,\" she said, giving my hand a squeeze. \"Now I can see why you want to live out here. It's amazing to be in the middle of all this, and yet still be so close to the city.\"\n\nI nodded, taking it all in, the trickling creek and a few birds chirping in the trees, the only sounds we could hear. It was definitely a nice respite from the noise of the city.\n\nThen I smiled when I caught sight of a little grouping of blue spruce, with one that looked to be the perfect size to fit in the corner of my living room. We wandered over to check them out. \"What do you think of this one?\" I asked, running my hands over a nice full one, with no gaps in the branches that stood about seven feet tall.\n\nLeaning close she smiled, breathing in its scent. \"I think it's perfect.\"",
        "\"Well then, I guess we've got our tree.\" I got down on the ground on my side and began to saw at the trunk while Giselle held it in place so it didn't fall over, before I'd sawed it through.\n\nOnce I'd cut it down, as I dragged it back through the bush toward the house, Giselle kept smiling over at me like she couldn't believe we were doing normal stuff together, like going out to find a tree. I guess because our time together was always so tight, until now, we'd never had the opportunity to do much more than get busy between the sheets and maybe share a meal together.\n\nThough our love life was incredible, I wanted her to realize that over the last two years our hot little trysts had turned into something pretty amazing, something that I felt was worth hanging on to.\n\nGISELLE\n\nAs we approached the house, looking up, it made me smile when I noticed all the seed bells hanging from the trees, and the bird feeder that looked like he'd designed it to sit on the edge of the deck. But as we watched a beautiful big blue jay fly onto the deck rail, bobbing it's head, anxiously waiting for Rory to toss it a peanut, that he scooped up and flew away with, I liked that he had a sweet side, and even took care of the birds that landed in his yard, especially at this time of year, when it would be harder for them to find food.\n\nRory left the tree out on the deck so he could clean up the bottom, and get the tree holder ready for it inside. And we'd just got in and pulled off our boots by the sliding back door, when I looked out surprised to see a beautiful white Persian cat with big green eyes, looking in at us. \"Rory, I didn't know you had a cat.\"\n\nHe chuckled. \"I don't know who owns her, but she comes over here a lot.\"\n\nI pushed opened the door and she wandered in and sauntered straight over to Rory who picked her up and started rubbing between her ears. It was so cute the way her little motor kicked in the moment he touched her, and she really started to purr. Closing her eyes, she looked so blissed out as he massaged her head, stroking his thumb between her eyes, asking her, \"You like that, don't you, Marshmallow?\"\n\nI laughed. \"Is that her name?\"\n\nSmiling at the cat, he shrugged. \"It's what I call her, because she's big and white and fluffy. And she's really sweet, too. All she wants is to be held and petted. I got some food and treats for her, but she never wants to eat, and just comes over for a little lovin' I guess.\"\n\n\"I can see that,\" I said, thinking it was pretty adorable watching him rub its head, while the white fluff ball happily purred its little heart out. Running my hand along its back, it felt so soft and clean that I could tell it had a home and it wasn't a stray. So I guess she knew that her neighbor was a soft touch and she just liked to come by for a visit, and a little extra affection.\n\nAfter he'd decided she'd had her fill, Rory walked her to the back door. With one last stroke down her back, he set her down outside and told her, \"Okay, now you'd better head back home, or they'll wonder where you've got to.\"\n\nAs we watched, she jumped off the deck and sauntered away. Smiling up at him, I slipped my arm around his waist, stroked his cheek and touched my lips to his. \"You're awfully sweet you know that, looking out for all those little creatures.\"\n\nHe just shrugged, pulled me into his arms, and rubbed his nose against mine. And I could tell he was wondering if I thought he was sweet enough to make me reconsider ending what we have together.\n\nBut since I didn't want to go there, deciding a little distraction was in order I slid my fingers into his hair, tugged his head down and nearly kissed his socks off.\n\nAnd as always happened with us, soon we were lost in the kiss, and he was groaning, pushing up my sweater, stroking his thumbs along the bottom of my breasts, making my nipples grow hard, and nearly soaking my panties. And all I could think of was getting him out of his clothes.\n\nThen he surprised me when he pulled away, considering we were both breathing pretty hard, and I couldn't imagine why, till I noticed him smiling over at me, when he put on some music with his phone. And I sure wasn't expecting to hear one of my mother's holiday favorites from a guy his age. I had to swallow past the lump in my throat at the sound of Nat King Cole's deep, smooth voice, singing The Christmas Song, or Chestnuts Roasting on an Open Fire, that my mom always sang along to, every year since I could remember.\n\nI could feel myself getting a little misty-eyed as the song filled the air. It had me thinking back to when I was young and my father would smile into my mother's eyes, pull her into his arms and they'd seem to be in their own little world dancing together close, singing the lyrics to each other. It had to be the nicest Christmas tradition I could remember from when I was growing up, seeing how much in love they were and that they weren't afraid to show it. Now with both of them gone, hearing the song again had me feeling pretty nostalgic.\n\nBut Rory really surprised when he walked over, smirking and asked, \"You know what we've never done together?\"\n\nI shook my head, not really sure where he was going with this. At least until he took my hand, wrapped me in his arms, smiled and said, \"We've never danced together, have we?\"\n\nI just shook my head, smiling up into the warmth in his gorgeous blue eyes because I was a little afraid I'd break down and cry if I told him how much it meant to be dancing with him to this particular song.\n\nAs we danced, he brushed his lips to the top of my head, and it felt so romantic to be holding each other close and swaying together to the perfect Christmas song.\n\nAmazingly all we did was dance, and though he kept smiling into my eyes, it struck me as kind of odd, because normally we'd be naked in bed by now. But considering we'd have an entire week together, it felt nice not to be in a rush to get busy with each other, just enjoying ourselves.\n\nWhen All I want for Christmas started playing, he kissed the end of my nose, pulled back and said, \"I guess I should bring in the tree.\" Though I nodded, part of me wished that we could have kept on dancing, even though it was a faster song.\n\nAs Rory set up the tree on the metal base in the corner of the living room, while I held it upright till he got it screwed into place, I noticed some pictures he had on a book shelf of three adorable little kids. I was pretty sure he didn't have any children, or at least none that I knew of, but I was curious to know who they were, imagining not many single guys had baby pictures on display in their living rooms.\n\nHe noticed me looking, smiled and said, \"Those are my buddie's kids; Aidan, Celeste and Bella. And I'm godfather to all three of them.\"\n\nI could just imagine how good he'd be with them, too. And that made me realize that he really needed to find someone who not only deserved him, but who could give him the family that I knew he wanted, because I knew I'd never have any children, especially with what was going on with me now.\n\nOnce he had the tree secured, and I stood back and made sure it was standing up straight, I asked, \"Do you have any decorations for it?\"\n\nHe laughed, rolling his eyes. \"Do I have any decorations? My mother's got boxes and boxes of them. She buys them everywhere she goes. And she's been collecting some for me since the year I was born. So, we've got tons of things to pick from.\"\n\nWhen he came back carting three big boxes that he had to crane his neck around to try and see where he was going, I laughed. \"I think you should have gotten a bigger tree.\"\n\nHe put them down on the coffee table, shaking his head. \"And this isn't even all of them. I'll let you pick what you want from these for now. She's got all different kinds; ordinary Christmas balls, some a little fancier and loads of kitschy ones, so you go ahead and look through, while I get us some lunch.\"\n\nI sat on the couch, carefully unwrapping each tissue covered ornament, realizing I'd dug into the kitschier ones first. Smiling to myself, I just couldn't get over them. They were all just so cute, I couldn't decide which ones should go on the tree, kind of wishing there was a way that we could hang every one.\n\n\"Oh, I love this one with the two little gray mice in striped stocking caps sleeping in the little red match box, with a spring of holly over their heads. Like they're dreaming about what they'll get for Christmas.\" Grinning, I held up another one. \"And this one with the moose driving a shiny red sports car dressed like Santa Claus, with a bag of toys in the back seat is really cute, too. Aw, and the kitten with the candy cane is so sweet, the way it's licking at it and smiling, like it could eat the whole thing.\"\n\nWatching me from the kitchen, Rory just smiled, listening to me gush. \"She's got quite the collection, doesn't she?\"\n\n\"No kidding. Only problem is they're all so cute, I wish we could find a way to fit them all.\"\n\nHe eyed me for a moment and said, \"Maybe next year we'll have to look for a bigger tree.\"\n\nI looked away when he said that. Biting into my lip I didn't know what to say, because I think we both knew we wouldn't be together by next Christmas.\n\nFinally, realizing I'd gone quiet, he suggested, \"Why don't we have some lunch?\" I nodded and went into the little kitchen, glad that he'd let it drop.\n\nHe'd made us some clam chowder, from scratch by the taste of it; that he'd poured into big soup mugs. He also had a nice looking cheese board with crackers. And I was surprised at how hungry I was once we started eating, probably from our walk in the fresh air. \"The soup's delicious, and it's really hitting the spot.\"\n\nCutting into the wedge of cheddar he nodded. \"Glad to hear it. So, if you like butter tarts, I could pop some in the oven after we've finished this.\"\n\nCocking an eyebrow, I looked at him like he was crazy. \"Is that a trick question? Because I think if you're Canadian legally you have to like butter tarts, back bacon and maple syrup or you could have your passport revoked for being unpatriotic.\" As he laughed, I looked over at him, puzzled. \"But I never knew you could bake, or even cook.\"\n\nHe shrugged as he topped up my wine. \"I think everyone should know how to feed themselves. And butter tarts are pretty easy to make. I've been making them with my mom since I was a kid. You just have to mix up the filling. Then you prebake the tart shells for a couple of minutes, take them out, lower the temperature a little, and put whatever you want in them. I like mine with chopped walnuts or pecans and raisins or sometimes dried cranberries that makes them taste a little tangier. Then you add the sugary filling, pop them back in the oven for about twenty minutes, and that's it, and you've got butter tarts. So, you just have to tell me what you like in yours and if you prefer them runny or chewy.\"\n\n\"I'm pretty easy.\"\n\nHe grinned, wiggling his eye brows. Considering the way we'd met, and how fast we'd hopped into bed together, I realized I'd walked right into that one.\n\nSmirking at each other over our soup, after I'd been silly enough to say that, I had to admit, it was fun getting to know him, especially like this in his own environment, since we normally met at a hotel. And now I was glad that he'd suggested we have this one last week together. At least it would give me something to look back on, the wonderful week we'd spent together at Christmas... right before we broke up.\n\nThough we'd been seeing each other for two years, we'd never really spent much time together getting to know much about each other, at least with our clothes on. But as I enjoyed the last tasty spoonful of soup, I decided there was a lot more to him than what I'd assumed. Not only was he crazy good in bed, which I already knew, but he was smart and funny, surprisingly sweet and pretty good in the kitchen, too.\n\nStudying him as he ate, I imagined that he'd make some lucky girl a wonderful husband, which had me wondering what he'd think of my assistant Marcie, since I knew she was already pretty crazy about him. And since she was a really good looking girl, I also wondered what he'd think of her. Though, if I was going to be honest, I didn't love the idea of the two of them together, but I knew he had to find someone new once we'd said our goodbyes, because I hated the thought of him being alone.\n\nWhen he started to clear the table, I followed him into the kitchen to help him make the tarts. He made us a pot of tea while they were baking. Smirking at him, I thought he looked awfully cute with candy cane striped oven mitts covering his big hands, which had me wondering what he'd look like in an apron, of course with nothing underneath but his nice hard body.\n\nThen once he had the tarts in the oven, his eyes twinkling with mischief, he took the tea cup out of my hand, lifted me onto the kitchen counter, got between my legs, and we did a little kissing while we waited. Because we just couldn't keep our hands off each other, even for the few minutes it took for them to cook.\n\nOnce the oven timer went off, he gave me one last brush of his lips on mine. Then with a smile in his eyes he nuzzled my nose with his, lifted me off the counter and set me back on my feet. Looking up into his eyes, I knew I was really going to miss this with him; he was just so affectionate that I wondered how I'd ever survive without his touch.\n\nOnce the tarts had cooled enough for us to try them, they were so good I just had to have two. I was enjoying them so much I didn't realize that I had a little drop of filling on my lip, till Rory leaned and licked it off, making me laugh.\n\nAnd when he smiled and took the time to steal another kiss, I decided I was enjoying myself with him more than I even thought I would. He was always so playful and fun and so loving, that I knew when he found the right woman, she'd be overjoyed to have him in her life, and hopefully would treasure him as much as I did. Though I felt a little sad thinking how happy they'd be, starting a new life with together, since he couldn't deny the fact that he was hoping to settle down.\n\nAnd he confirmed it when he said, \"Hey, I should show you my house plans.\"\n\nLooking over the sketch and layout he'd created on his tablet, I just loved what he'd designed. I could imagine it fitting in beautifully on the lot, surrounded in trees, with the creek flowing behind it. And I knew it would make a wonderful home for when he finally found the right woman to marry, especially since he'd designed it with five bedrooms, obviously hoping to fill them with children.\n\nI smiled up at him. \"It's beautiful, Rory.\"\n\n\"Is there anything you'd do differently?\"\n\nI looked at it a little more closely, and couldn't see a thing I'd change. I really liked how both the kitchen and master bedroom looked out over the back of the property, so he'd be waking up in the morning looking out at that beautiful view. And whenever he was in the kitchen he'd be looking out on the forest, maybe even spotting another deer. \"No, I think it's perfect, and I wouldn't change a thing.\" He just nodded looking pleased.\n\nAfter we'd gorged ourselves on butter tarts, and washed it down with tea, we decorated the tree together, with some of my favorite Christmas songs playing in the background. Bing Crosby's White Christmas was another one that always brought me back to my childhood and could get me a little teary eyed. But thankfully we were having too much fun trying to decide if the Santa with his butt hanging out of his red costume should be in a place of honor on the front of the tree, or if his bare backside should be hidden away in the back. Of course Rory thought it should go front and center, and I liked it there, too, adding a bit of fun to the big beautiful tree.\n\nOnce we'd finished, deciding it looked nice and full, Rory wrapped his arms around my waist, and picked me up to add the star to the top, of course letting me slowly slide down his body once I had it secured. And I just smiled at him shaking my head as he brushed his lips to mine, sliding his hands over every inch of me, getting me all tingly.\n\nThe roaring fire in the old brick fireplace, gave a nice warm glow to the room. And the tree lit up, sparkling with little white fairy lights, illuminating all the kitschy decorations, just felt so Christmassy. It also felt pretty cozy with just the two of us, especially when Rory finally gave up trying to behave himself and pulled me down to the floor. We took our time, though, teasing each other with little kisses, spread out together on the big white plush rug in front of the crackling fire, before he began to groan. When I started to unbutton his shirt, eager to get a feel of his nice hard body, grinning, he shook his head and pushed my hands away.\n\nAnd then he teased me, like he loved to do.\n\nDropping kisses across my lips, his eyes dark with arousal, he slid his fingers up under my sweater, and slowly slid his hand over my tummy. Gradually tracing his fingers higher, barely grazing the bottom of my breasts, before they'd retreat, making me moan and want to give in and rip his clothes off.\n\nHe had me so hot, I needed to feel his naked body against mine, and this was torture, divine torture, but still almost too much to take.\n\nI could feel the heat pooling between my legs as he stroked his thumb across my distended nipple, and began strumming it like a guitar, smiling at the way my breasts were already heaving, and the way I was licking my lips, anxious for him to finally get us naked.\n\nI'd never made love in front a fire before, and I've got to say, once he finally quit teasing and peeled us out of our clothes, of course kissing every inch of me he exposed, it felt pretty romantic with our bodies bathed in a soft orange glow from the fire, while Rory seemed to be lost in exploring my breasts.\n\nRunning my hands through his hair, he had my girls tingling so hard, with what he was doing with his tongue, that I thought I'd come just from the feel of his mouth on me. So, to test the waters, and tease him back, I said, \"You know you could have had a three way last night.\"\n\nHe stopped kneading my breast and licking around my nipple long enough to look up at me, confused. \"Are trying to tell me that you'd be up for a three way?\"\n\nChuckling, I shook my head, stroking his beard with my nails. \"No. But I know a couple of the girls that work with me sure sounded like they'd be up for it with you. One of them said she thought the two of them would have fun, sexing you up.\" Though he didn't look too amused, running my hand across his cheek, till I was brushing my thumb across his bottom lip, I teased him a little more, eager to finally to see him blush, and hopefully get a reaction out of him to see what he'd think about being with someone else. \"They kept telling me how hot they thought you looked, and what beautiful eyes you've got, and they mentioned a few of the things they'd like to do with you, too -- all of them very naughty. Of course when they asked me what I thought of you, I told them you weren't my type.\" Then, curious, I narrowed my eyes and asked him, \"So, have you ever had a three way?\"\n\nThough he didn't answer I could tell from the twinkle in his eye, and his little naughty little smirk that he had. But since I didn't really want to think about him with two other women doing who knows what to him, especially now with us naked in front of the fire, I pushed him onto his back, grinned and said, \"Well, for tonight, lover boy, it's going to be just us.\"\n\nHe smiled into my eyes, running his hands down my back, till he was squeezing my ass. \"Just the way I like it.\" Then he stilled, and the amusement left his eyes, his tone suddenly serious. \"I hope you know by now, that you're all I'll ever need.\"",
        "Looking down at him, his eyes so full of hope, I had to blink my eyes to keep myself from crying. If things were different, I knew he would definitely be all I'd ever need. But sadly, things being what they were, no matter how much we both wanted it, or how much we cared, it just wasn't in the cards for us.\n\nSliding my hands through his hair, with a throaty purr, I licked past his lips and made love to his mouth while he cupped my girls in his hands, rolling my nipples between his fingers, getting me embarrassingly wet. Every inch of me on fire, I needed to feel him inside me so badly I could hardly see straight.\n\nTaking hold of him, I shivered as I ran him up and down along my slit. \"Ooh, you're so hard,\" I murmured, before I pushed down, and took him as deep as I could with one hard thrust.\n\nRory rolled his eyes, groaning, clutched my hips in his hands and thrust up. \"And you feel incredible,\" he murmured back as I started to ride him.\n\nHe'd get no argument from me. As I stretched my body over his to feed him my breasts, sliding my fingers into his hair, the way he worshiped them, he already had me shivering, and my pussy nearly convulsing, he had me so insanely aroused, and already so close to the edge.\n\nNothing had ever felt as good as what I had with him. He knew my body inside and out, like I knew his. We were both so attuned to the other's needs that we knew just what it took to get each other off. And lordy, as he lapped at my girls, and suckled and gently nipped, he had every inch of me tingling so hard, I was convinced that what he could do with that amazing mouth of his, ought to be illegal.\n\nSensing he was getting close by how choppy his breathing was getting and how hard he was digging his hands into my hips. I thrust down hard, grinding myself against him, clenching my inner muscles as tight as I could on each upward pull on his cock.\n\n\"Damn, baby,\" he murmured, throwing back his head. Feeling him pulsing inside me hard, I smiled as I felt him letting go, finding his release, both of us shivering, as my spasming pussy clenched around him, milking him dry.\n\nNot done with me yet, Rory rolled me onto my back, slid back inside me, and hugged me tight to his chest, still slowly thrusting, like he just couldn't give up. Oh, and the feel of him pulsing inside me, still nice and hard hitting right on my clit, as he flexed his hips and gave me all he had, had me losing it and coming all over again.\n\nAs our breathing slowly began to settle, with my gaze locked on his, still wrapped in his arms, he brushed back the hair from my eyes, kissed me, and quietly murmured, \"I can't imagine not having you in my life, Giselle. I need you. And not just for when we're together like this. You're not only the love of my life; you've become my best friend. Even just hearing your voice on the phone, or seeing your text makes my day feel ten times better. And I know you've got to care for me, too. Over these last few years we've fought through snow storms, torrential rain and all kinds of things to be with each other, so I know you've got to be feeling something.\" He brushed the back of his hand across my cheek, his eyes warming, looking pleased, he whispered, \"You know I can see it in your eyes.\"\n\nThe way my heart was clenching in my chest, I wondered if he could tell just from looking at me how much I loved him. Though I could never tell him how I felt, or I knew he'd never give up on us.\n\nFinally, heaving a sigh, I knew I had to be honest with him. \"Rory, obviously I care. These two years we've had together have been amazing. But I really think it's time you moved on.\" When he opened his mouth to object, I touched my finger to his lips and shook my head, so I could finish what I knew I had to say. \"The truth is no matter how much fun we've had together, I've been feeling really guilty lately, knowing you should be out there looking for some pretty young thing that you can plan a future with, and not wasting your time with me. You're still so young. You've only just turned twenty-nine, and in just over a year from now I'll be forty. When you showed me the plans for your house just now, with five bedrooms, you made it pretty clear that you want a family, and we both know I'll never be able to give you one. You might not know it, but once a woman turns forty, her chances of conceiving drops to only about five percent, and keeps dropping after that. I've just left it too late, and we'll never be able to have a family together. And I know that's something you really want.\" My heart felt so heavy seeing the disappointment in his eyes.\n\nStroking my hand over his cheek, smiling into his eyes, I told him, \"I picture you with some beautiful young thing about twenty-five, maybe blonde with nice perky boobs who can give you everything you need. Because no matter how much I care, we both know I'll never be able to give you everything you want or deserve out of life, especially if you've got your heart set on becoming a father one day.\"\n\nUndeterred, he looked me straight in the eye. \"Well, right now I'm looking at the woman I want to be with, hopefully for the rest of my life. And she's gorgeous with fiery red hair and prettiest green eyes I've ever seen, and she makes me crazy happy just thinking about her. And it doesn't matter to me if we ever have kids. I've got three godchildren that I can see anytime I want, which is enough for me. All I want is you, Giselle. What we've got together just feels so right, there's no way you can walk away and try and tell me you're not feeling it, too.\"\n\nIt wasn't just about my biological clock ticking away like a bomb about to go off, but I couldn't tell him the rest, especially since we were supposed to be celebrating the holiday together and having fun. There was no way I could drag him down with me. It just wouldn't be fair.\n\nHugging me a little closer, he said, \"I know I've designed a pretty big house with lots of rooms. But then we could each have an office if we ever want to work from home. And we'd have a guest room too, for family or friends who want to stay.\" He smiled, squeezing me a little tighter. \"That is providing you finally agree to come and work with me. I've been waiting till we had some time together to tell you about my plans. I'm designing a new line of homes that I'd like to be able to say are the most energy efficient ever built. And with your expertise in windows, and product sourcing, and what you know about house construction, I could really use your help.\" He reached for his tablet. \"Let me show you what I mean.\"\n\nThen he pulled up some really innovative designs and explained that his plan was to build homes that would save his prospective clients a lot of money in the long term, though initially the costs would be a little higher.\n\n\"So, I'll need to source the most energy efficient windows I can find, and that's where I could really use your help. You know all the specs, and you've got the inside track on the best suppliers, and I thought if this worked out, maybe we could even start assembling our own windows, just for this new line of homes. And with how energy conscious everyone is these days, with the cost of everything going up, I can see there'd be a market for houses like these. They'd still be nice, high end homes, but buyers would appreciate not only the savings they'd see, but the fact that by purchasing one of these energy efficient houses, they'd be doing their part to help the environment, too. And everyone wants a brighter future for their kids, so I really think they'd sell.\"\n\nLeaning on my elbows, running my finger over his tablet, I took a careful look at his designs. \"Well I can tell you right now that the most energy efficient windows on the market are triple pane filled with krypton gas. Argon gas is pretty good too, and it's a lot cheaper, but if you want the best, I'd go with krypton. Of course they'd have to be installed properly to make them efficient. And the savings with these kind of windows can be as much as twenty-five percent a year on both heating and cooling, which would be a big selling point, that if I were you, I'd mention in your brochures.\"\n\nGiving me another squeeze, he kissed the top of my head. \"You see, this is what I mean. You really know your stuff, and you'd be indispensable, especially working on a new project like this.\"\n\nI just rolled my eyes. \"Rory, we've been over this before, and I don't think I could ever work for you, especially in the same office.\"\n\n\"I promise, you'd run your own show. And I wouldn't interfere. I trust you completely, so you'd call the shots on your end of things. Besides, I'm not in the office that much. Most days I'm out checking out building sites, so you wouldn't have to worry about bumping into me all the time.\"\n\nSmirking, I gave him a shoulder nudge. \"But what fun would that be, never getting a chance to see that sweet, tight ass of yours strolling around the hallways.\"\n\nHe put down the tablet took hold of me by the chin and pressed a kiss to my lips, his gaze intense, his voice all low and sexy, he whispered against my mouth, \"Well, after hours, when everyone else has gone home, I'd be happy to come and take care of you.\"\n\nMy nipples felt so hard, and my pussy already damp, just imagining what we could get up to once we'd locked the door of my office and tugged off my panties. But I shook my head at him, and laughed, because I knew it was never going to happen.\n\nThen without even thinking, gazing across the room, heaving a sigh I told him what was going on with my job. \"Though, I might be looking for another job come the New Year if the rumors floating around are true. But since I can't see myself moving south of the border to start all over again with a new company, I'll probably look for something else around Montreal, if and when it happens.\"\n\nHe looked surprised. \"You never said anything.\"\n\nI shrugged. \"Well, from what I've been hearing lately, it sounds like we're about to be bought out. And from I've been told from people who've been through it, when there's a buyout and the operation is moved, especially to another country, usually they let most of the staff go, and the ones they offer to keep, they just use to train their own people. And after you've finished training everyone, and they get everything they want out of you, they tell you they don't need you anymore, and you end up without a job, after you've gone to the trouble of moving to wherever they want to send you.\n\n\"It happened to my uncle, when his company moved to Mexico. He and his wife sold their house, their cars, and almost everything they owned and bought a place down there, thinking they were set. Then once he'd got their crew up to speed, and had everyone trained and the company felt they could run their operation without him, they told him they didn't need him anymore, gave him his last pay check, no severance or anything, and let him go. Then he had to start all over again when he moved back home, with both of them looking for new jobs, trying to find a place to live.\"\n\n\"Well, you know that would never happen if you came and worked with me. And I'd be happy to more than match your salary, just to have you come on board. I could really use your help, Giselle, especially on a project like this, that I'm hoping will eventually become the standard for our homes.\"\n\nHoping he'd let it drop, since I couldn't decide anything right now, my life was so up in the air, I snuggled into his chest and kissed his chin and gave his lower lip a little tug of my teeth. \"Well, seeing as tomorrow's Christmas, we should probably get some sleep, so we'll be able to get up in the morning.\"\n\nOnce we got in bed, staring up at ceiling, I just hoped he liked what I got him. It was torture trying to figure out what to buy. Because I didn't want to get anything too sentimental, since I'd already told him we'd be done by the time the holiday was over. But I didn't want to get him anything too impersonal like a magazine subscription or some cologne.\n\nMaybe I shouldn't have agreed to spend Christmas with him, but we were having such a good time together I was really glad I'd caved and agreed to stay for this week with him. And at least I could always look back on it.\n\nRORY\n\nThough just that teasing little kiss had gotten me hard, I knew what she was doing, trying to get me to forget about hiring her. But if she really was about to lose her job, I couldn't see a better time for her to come and work with me. And hopefully once we got our house built, she'd be willing to move in with me, so we could finally start our lives together.\n\nBut she was right, tomorrow I had a turkey to cook and I also had to decide if she was ready for what I really was hoping to give her.\n\nThe lights off, with only the warm glow of the moon filtering in through the window illuminating her shape, curled up together tight in bed with her nice warm butt tucked up against my package, it suddenly occurred to me that we hadn't bothered with dinner. I kissed the back of her head. \"Hey, I just realized that we didn't eat anything tonight. Are you hungry?\"\n\nShe shook her head without bothering to turn around, sounding pretty groggy. \"No, I'm okay. I can always eat tomorrow. Right now, all I need is sleep.\"\n\nI was beat, too. It seemed like it had been a long day since we'd left the hotel in the morning. I thought we had a good time together, though, doing a lot more than just messing around for a change. And I was really looking forward to waking up with her on Christmas morning for the first time. I dropped a kiss on her bare shoulder, and whispered, \"Merry Christmas, baby.\" But when she didn't answer I imagined she was already asleep. So I tugged up the duvet, made sure she was covered, hugged her a little tighter, and it wasn't long till I dropped off, too.\n\nI woke in the morning with her warm, soft body curled up so tightly around mine that I wondered if she was cold. I pressed a kiss to her forehead, and her eyes slowly peeled open and her face broke into a smile when she realized where she was, in bed with me. \"Merry Christmas,\" I whispered, with a brush of my lips across hers.\n\n\"Mmm, Merry Christmas,\" she murmured back, snuggling in even closer, pressing a soft, warm kiss to the hollow in my throat.\n\nI knew we should get up, but man it felt good just to hold her. Smoothing my hand along her back, her skin felt so silky, and it would have so easy to just drift off to sleep again -- or slide between her legs. But I just couldn't see us sleeping away our first Christmas together. So I kissed the top of her head, and squeezed her butt. \"Hey, we should get up and see what Santa's left us.\"\n\nShe looked up at me, smirking. \"Well, he better not have left much, because we promised each other only one small gift each, remember?\"\n\n\"Or two.\" I laughed at the way she rolled her eyes. Being our first Christmas together, I'd really wanted to spoil her, there were so many things I'd looked at that I thought she'd like, but I don't think I got too carried away with what I finally settled on.\n\nWell, except for the one thing I wasn't even sure if she'd accept.\n\nThe way she stretched herself out in my arms, I could feel things starting to stir down below at the feel of her nipples grazing my chest. But I knew if we started to get busy, we'd probably never get out of bed. It would be like those couple of days in Florida we spent together when we first met, we basically made out non-stop, until we finally collapsed and passed out.\n\nI put on some coffee while she was in the shower. Imagining her in there naked, soaping herself up, I would have loved to have joined her, but I knew what would happen if I started running my hands over all that smooth, wet skin, so I decided I'd better wait and get mine after.\n\nWe had bagels with smoked salmon and cream cheese for something quick for breakfast. As we ate together in my little kitchen I noticed her curiously eyeing my ancient harvest gold fridge, probably wondering if it should be in a museum. So in case she thought it was my taste in appliances, I explained, \"It came with the house and it still works great. And I was thinking when I tear this place down I'll donate it to a food bank or somewhere else that can use it, rather than just tossing it.\"\n\nHer eyes warming, she smiled across the table at me and squeezed my hand. \"I think they'd appreciate it, too.\"\n\nI'd put another fire on in the fireplace, so we decided it would be nice to sit on the rug in just our robes by the warmth of the hearth, to open our presents.\n\nWhen she opened the biggest bottle of Bailey's I could find for her, she threw back her head and laughed. Then she gave me a sexy waggle of her eye brows, obviously remembering the fun we'd had that first night when we painted each other with those little bottles from the mini bar then lost ourselves in each other, licking it all off. \"Thanks, Rory. But it's such a big bottle I think I'm going to need your help to get through it.\" I just grinned, imaging the fun we'd have later.\n\nWith me, just in my black terry robe, with nothing underneath, she took full advantage and ran her fingers up along my thigh, till her nails were gently stroking my scrotum.\n\nWith my cock twitching hard, I knew all I had to do to get at her was untie her robe, and slide it off her and we'd be forgetting all about our presents and the turkey dinner I had planned.\n\nSo, deciding I should try and behave, I just pushed her robe off her shoulder, gave her nipple a little flick of my tongue and a little suction, and smiled at the way she shivered, just like I knew she would. With one last little lick, as I felt her cupping my balls in her hand, rolling them between her fingers, I murmured, \"Feels like someone's trying to get on Santa's naughty list.\" And she just grinned.\n\nShe'd better watch out tonight, though. After we'd finished our dinner, I was going to show her just how much fun we could have being as naughty as we could.\n\nWith her still smirking, we pulled ourselves together and she handed me a rectangular gift wrapped in beautiful silvery blue paper, with a big blue bow on top. \"I'm just glad it didn't get crushed in my suitcase. And I hope it fits.\"\n\nOnce I pulled the paper off and looked inside, I smiled when I saw the nice off-white cable-knit sweater she'd picked for me, with a card that said; Hand-knit for you in aid of Montreal SPCA. \"This is really nice. Thank you, Giselle. I should try it on.\"\n\nWithout even thinking, I shrugged off my robe and tugged the sweater over my head, and as I smoothed my hands over my chest, I decided it fit just right. \"How does it look?\"\n\nShe was shaking her head, looking me over, trying not to laugh. \"Well, since I'm eye level with your deal, I'd say it looks pretty good from here.\"\n\nI looked down at myself and broke out laughing too, since I was bundled up on top with a nice heavy sweater and bare from the hips down, with my dick hanging out. Running my hands up and down over the sweater, I said, \"It's nice and soft, too.\"\n\nThe little tease stroked her fingers over my cock, looking up at me with an impish smile. \"You're right. It is nice and soft, and really smooth, too.\"\n\nBlinking as I watched her get onto her knees, grab hold of my thighs and start to run her tongue over me, rolling my eyes skyward I decided that I really loved this sweater. Especially knowing that every time I wore it, I'd be picturing her like this, with all that copper-red hair cascading down her back, coyly smiling up at me while she teased the hell out of me with her tongue.\n\nMy hands sliding into her hair, just starting to flex my hips, clenching my jaw, really getting into it, with my heart starting to pound, as I watched her slide her lips over me, feeling myself growing thick and hard in her mouth, I let out a groan.",
        "Then I slammed my eyes shut and cursed at the sound of my phone chiming to let me know I had a call. I looked down at where my cell phone sat on the floor and muttered, \"Its mother, probably calling to wish me a Merry Christmas.\" I rolled my eyes. Perfect timing, Mom.\n\nGiselle grinned, wiped the back of her hand across her mouth and said, \"Then I guess you'd better answer it.\"\n\nSmiling, and shaking my head at the naughty look in her eye, I said, \"Hey, Mom, Merry Christmas.\"\n\nWhen my mother said she hoped I wasn't spending the holiday on my own, I told her, \"No, I'm at home with a friend.\" My best friend, if I was going to be honest.\n\nGiselle got up to get us more coffee, probably to give me some privacy so I could talk with my mom. Then her cell phone rang, and I could hear her talking to her sister in the kitchen, wishing her and her family a Merry Christmas, too.\n\nIt was just as well they called when they did, because the way things were going, I knew exactly what we'd be doing for the rest of the day, and it wouldn't involve dicing up vegetables or cooking a turkey.\n\nAnd ordering a pizza later wasn't exactly what I had in mind for a nice Christmas dinner.\n\nAfter we'd both said our goodbyes and hung up, wearing a sly little grin as she carried in our coffees, she said, \"Now, where were we, before everyone called?\"\n\nI had my robe back on, sitting by the tree with another gift for her in my hand, cocking an eyebrow at her, I said, \"I think we were opening presents?\"\n\nThough she wrinkled her nose, pretending to be put out, she sat down beside me and started to open her gift. Then her face broke into a smile, she got up on her knees threw her arms around my neck and kissed me. \"Thank you, Rory. I can't believe you found it,\" she said, happily looking it over. I'd managed to find an out of print book she'd been looking for forever, by an author she'd told me she'd loved reading from the time she was in her teens. And since I'd finally managed to locate a single copy online in a tiny bookseller in England, I was relieved to see she liked it.\n\nNext, I opened the shiny red gift bag she handed me and threw back my head and laughed when I saw that inside was a pair of black boxers with a nutcracker on the crotch. \"Just what I need to cover my bottom half while I'm wearing that sweater.\"\n\n\"Figured they'd be fun, and you can model them for me later,\" she said with a playful waggle of her eyebrows.\n\nThen I handed her another rectangle shaped present and waited for her reaction. Once she'd ripped off the paper and opened the box, she actually gasped when she saw that I'd enlarged a picture of the two of us in our bathing suits from that first night at the pool. I didn't think she'd remember that I got the bartender to take a picture of us. And you could tell from the look in our eyes, that we seemed pretty happy to be together right from the start.\n\nShe looked over at me, and I laughed at the way her mouth was hanging open, obviously shocked that I had a picture of us from that very first night. \"I don't remember us taking a picture together. But I'm so glad we did. Thank you for this, Rory, it's perfect.\"\n\nI thought things were going pretty well, and she hadn't said a word about splitting up anymore, so I took a deep breath, reached under the tree and handed her the pale blue Tiffany's bag that I'd been agonizing about giving her.\n\nShe eyed me for a moment, and said, \"This better not be anything expensive, because we both agreed to only get one little thing for each other, remember?\"\n\nI winced. \"Well, it's not very big.\"\n\nShe pulled the turquoise ring box out of the bag, popped it open and the instant she saw the brilliant cut, solitaire engagement ring with the diamond encircled band, she gasped, and covered her mouth with her hand. Then she shook her head, looking frantic, closed it up again and dropped it back in the bag and pushed it back at me. \"No. I can't take this, Rory. I'm sorry.\"\n\nOh, shit. Not exactly what I was hoping for now that I'd finally found the courage to ask for her hand.\n\nI stroked my hand on her knee. \"Giselle, you don't have to give me an answer, or even wear it if you don't want to. But just keep it for now, okay?\"\n\nWhen I saw that she was starting to tear up, feeling awful, I pulled into my lap, brushed the hair from her eyes and whispered, \"I love you. And I hope one day you can admit that you love me, too. And I want a future with you. I told you I don't care about the difference in our age or about us having any kids. So why don't we just take it slow for now, one day at a time, okay? But please just keep the ring for now.\"\n\nShe wiped at her eyes, and looked up at me. \"There are so many reasons why this could never work. And it's more than just the difference in our age, or the fact that I'll probably never be able to have children. But knowing you could have anyone you want, I can't understand why you want me.\"\n\nI touched her cheek. \"Maybe because we're perfect together? And I've never met anyone like you. And I haven't so much as looked at another woman since the day we met.\"\n\nHer expression softened, and she gave me a crooked smile. \"We were having such a nice morning and you had to go and spoil it all by giving me that ring.\"\n\nChuckling, I said, \"I know, I'm mean like that.\" I ran my hand over her back, and nodded my head at the bag. \"Don't you even want to try it on to see if it fits?\"\n\nI dug in the bag and opened the ring box again, pulled out the ring, and looking right into her eyes I slipped it onto her finger.\n\nShe was quiet for a minute as she looked down at it sparkling on her hand. But then she sighed and said, \"It's beautiful, Rory, really beautiful. Probably the prettiest ring I've ever seen. But you should take it back. I can't accept it. I'm sorry. There's just so much going on in my life right now, and I can't drag you down with me. It just wouldn't be fair.\"\n\nI stared at her, wondering what the hell she was talking about. Now she had me worried, because obviously she was keeping something from me, something pretty major. \"Then tell me what's going on, and maybe I can help. If it's because you're worried about your job, and the possibility of your company moving, you know you've already a job working with me anytime you want it. And I promise I won't even mess around with you after work, if that's what you'd prefer.\"\n\nThough she smirked at that, she also let out a heavy sigh, and looked so sad when she looked up at me, stroking her hand across my cheek. \"How about we just enjoy today, and we'll talk about it tomorrow? It's Christmas, so we should be having fun, not bringing each other down.\"\n\nI didn't want to argue, but tomorrow I was going to find out what the hell was going on.\n\nWe decided to put some clothes on to make dinner, just to be civilized, I guess. And while Giselle was busy peeling vegetables, I made the stuffing, dressed the bird, and got it into the oven.\n\nWith the turkey roasting, and all pots on the stove ready to go when it was time, I poured us some wine and put together a platter of cheese, crackers, pate and some olives, so we could sit back and relax.\n\nThen we sat down in front of the TV and laughed our asses off watching Christmas Vacation, especially the part with Chevy Chase stumbling around in the attic, nearly breaking his neck, and the hilarious bit when the kid finds the squealing cat wrapped as a present in a box.\n\n\"I just love this movie,\" Giselle said, wiping at her eyes, she was laughing so hard. And I was just glad to see her happy.\n\nDinner turned out really well. Even the gravy that we'd worked on together, hoping we wouldn't end up with a lumpy mess to pour over the whipped potatoes, turned out nice and smooth and tasted good, too.\n\nWhen we sat down to eat, I touched my glass to hers, and said, \"Merry Christmas, baby.\"\n\nAfter she smiled into my eyes and said it back, she looked pretty pleased looking down at her plate. \"This looks amazing. I know if I was home on my own today, I'd probably just be having something delivered, like an order of chicken or even just a burger.\" Which I thought was pretty sad, especially the thought of her being all on her own at Christmas, celebrating the day with crappy fast food for dinner. So, I was really glad I had her with me.\n\n\"Well, I think we make a good team. But I guess we'll have to taste it to know for sure.\"\n\nBoth of us moaned the minute we took our first bite, and then we both laughed at the sounds coming out of us. But it really was good, probably since it was a joint effort. And it was fun cooking with her, too.\n\nI thought we really did make a good team, working around each other in my tiny kitchen with neither of us getting excited. Well, except for maybe when she grabbed my ass and started massaging my buns. Because that had gotten me pretty excited, which had me pulling her into my arms, hiking up her sweater and nearly kissing the hell out of her, before I remembered we were supposed to be making dinner.\n\nSince Giselle was French Canadian on her father's side, for dessert, I was glad that I'd found us a nice chocolate Bouche Noel cake at a local bakery. Her eyes lit up when I put it on the table between us. \"Oh, wow! My grand-mere always made this for us when we'd go there for Christmas. How did you ever find one here?\"\n\n\"There's a great bakery not too far from here and they make all kinds of different stuff for Christmas. I also got a German stollen to have with coffee tomorrow. They seem to cater to everyone's tastes at this time of year.\n\nWe were so stuffed and tired by the time we were done, after we'd cleaned up and put everything away, we decided just to take our clothes off and crawl into bed with a bottle of Bailey's.\n\nI poured us each a glass and we smiled at each other as we drank, obviously remembering the fun we'd had with it last time.\n\nThen with a naughty glint in her eye, Giselle tugged my head down and slid her sweet, liqueur-laced tongue all around my lips, before slipping it into my mouth. I loved how amazing it felt every time we kissed; the way she'd tease me with little nibbles of my lips, and flicks of her tongue against mine, and like always, in no time she had me hard as brick.\n\nWe put our glasses aside and I slid her onto her back, keeping my gaze trained on her pretty green eyes. I couldn't get over how sexy she looked with her breasts heaving as I parted her thighs. When I slipped a finger in her, she was already so wet all I had to do was take hold of myself and slide inside her. But as eager as we were, we took our time, and made slow sweet love for hours, starting with her beneath me, and then with her crawling on top, to ride me. One thing she couldn't deny, when we got in bed together, it was always crazy good.\n\nShe was still curled up tight in my arms when I woke up in the morning, and when she opened her eyes and looked up at me, I could tell she wasn't sure what to say.\n\nI brushed a kiss across her forehead, deciding we might as well get to it. \"Well, are you ready to tell me what's going on?\"\n\nShe eyed me carefully as she nodded, probably wondering where to start. \"But only if you promise that you'll let me take care of this on my own, once I tell you.\"\n\nSince I had no idea what she was dealing with, I just gave her a squeeze and said, \"Just know I'm here for you, Giselle, no matter what it is.\"\n\nHeaving a sigh, she finally opened up. \"Do you remember me telling you that my mom died two years before we met?\"\n\n\"Yeah, I remember. She died the year after I lost my father.\"\n\nShe nodded, and it took her a while, but finally she swallowed and continued. \"Well, my doctor retired, and the one that replaced her seems to be a lot more thorough. And when she started asking about my family's medical history, as soon as I told her that both my mother and her mother had died of breast cancer, she looked pretty alarmed. And right away she called her receptionist and arranged for a mammogram and also set me up with a specialist for genetic screening to see if I might be carrying any genes related to breast or ovarian cancer. I just couldn't believe it. When I walked in I felt fine, and suddenly she had me wondering if I'd be next.\"\n\nI could hear what she was saying, but I just felt so stunned, I had no idea what to say. All I knew was that I did not want her to tell me that she was going to die. I could handle anything else, but not that. \"So, did you already go for the tests?\"\n\nShe nodded. \"I had a mammogram last week.\" Then she looked up at me, blinked a few times and quietly said, \"And they found a lump.\"\n\nI felt my heart drop to my feet. They found a lump? Oh, my god. This couldn't be happening, not to her. Not to my Giselle.\n\nI chill ran down my spine, as I realized what she was saying, and what it could mean for her. \"So, what did they say? Have they checked it yet?\"\n\n\"I've already gone for the genetic screening, and I'm going in to have the lump removed on January second, so I'll have to leave and head home on New Year's day. After they've done a biopsy on whatever it is they find, the doctor said she'd call me to come in and talk about the results. And she suggested it would be a good idea if my sister had herself checked out, too. My sister Marie's got two kids, so I'm praying that they won't find anything wrong with her.\"\n\nI just kept nodding, trying to absorb what she was saying. But I felt like I was in shock, and hoped I wasn't going to be sick. I just couldn't lose her. \"Okay,\" I finally said, \"then we'll fly you back home on the first.\"\n\nShe reached for my hand, and gave me a squeeze. \"Rory, I'm going to do this on my own, and I wasn't even planning to tell you, because I didn't want to worry you. This is why I want you to move on. There are just so many things going on with me right now. And you're still so young. You've got your whole life ahead of you. I don't want you to be dragged down with my problems. I'm not even sure what will happen if they find out I've got cancer, some of the surgeries can be pretty drastic, even disfiguring. Both my mother and grandmother had what they referred to as galloping cancer because it spread through them so quickly that they never stood a chance.\" She managed a weak smile as she stroked my cheek. \"So, we'll have these last few days together, and then I'll go home and... I guess after I've had the surgery, I'll find out what happens next.\"\n\n\"Giselle, you're not dealing with this on your own.\"\n\n\"I'm sure a friend could drive me home after I've had the surgery. And you need to stay and take care of things here. You've got this whole new venture you're looking into. And I can take care of this on my own.\"\n\n\"I've got good people in place that can handle everything while I'm gone. So there's no way you're going through this on your own, when you've got me. I can't even believe that you've kept this to yourself. Or that you think I could just turn my back on you now when you really need me.\" I cupped her face in my hands, and looked into her eyes. \"I love you. And whatever happens, we're going to deal with this together.\"\n\nGISELLE\n\nThis was why I was hoping he'd never find out. He's just so stubborn. I knew he'd insist on being there for me. And though I was touched to know that he really did care, I hated the idea of him possibly having to go through what I went through with my mother. And it sure wasn't pretty, having to watch her fade away.\n\n\"Which breast is it?\" he asked.\n\n\"The left one.\"\n\n\"Does it hurt?\"\n\n\"No. I don't feel anything. But luckily whatever they found is pretty small, but it's also pretty deep.\"\n\nHe nodded and pulled me in closer and kissed the top of my head, wrapped his arms around me, and just held me. And for the longest time neither of us said a word, because there really wasn't much more to say. Until I knew for sure what was going to happen, all I could do was wait -- and hope for the best.\n\nFor the next few days Rory was so attentive, and so sweet. But he was being so sweet, the way he was walking on eggshells around me, being careful not to be too rough or ruffle my feathers that he was actually starting to get on my nerves. Finally I lost my patience, and I tackled him to the floor in front of the fire, and made him laugh with how determined I was to get him out of his clothes.\n\nThen I grabbed the bottle of Bailey's I'd got out of the fridge, and I let it drip onto his nipples, and we both laughed like crazy while I licked it all off.\n\nBut he stopped laughing when I dribbled it down along his cock, and flashed him an evil smile as I got between his legs and took him in my mouth.\n\nI wanted him to know that I wasn't made of glass, and nothing had to change between us, at least for now.\n\nForgetting about everything else, we must have made out on the floor for a couple of hours, exploring each other every way we could think of. And when finally he pulled a blanket over us, it felt so nice to doze off with him with his arms tight around me, with us bathed in the soft orange glow of the fire.\n\nAs we began to drop off, I could feel my heart clenching, when he tipped up my chin, kissed me, and murmured, \"Love you, babe,\" especially knowing that what we had was almost over.\n\nI guess because of what I was facing, we made a point of really enjoying our last few days together. We took lots of walks in the woods, of course with peanuts in our pockets to feed all the squirrels and birds.\n\nWalking back one day, I noticed a football on his deck and we tossed that around for a while, since it was a pretty mild day for the end of December. And I made him laugh when I stuck my tongue out at him, when he told me that I threw like a girl. And I told him that he didn't mind the fact that I was a girl when he got me naked though, did he?\n\nWhen we woke up on New Year's eve Marshmallow was waiting at the back door, with her big green eyes peering in at us, hoping for a cuddle. We smiled across at each other as we both spoiled her a little, taking turns rubbing her head and her back, while she closed her eyes and purred her little heart out.\n\nLooking around Rory's quirky bungalow as I stroked the little fur ball, I realized I was really going to miss this little slice of heaven that he called home, especially all the animals and the walks in the woods, but obviously not as much as I was going to miss him.\n\nI knew the house he planned to build right behind this one would be amazing, but I also knew I'd never forget the fun we'd shared in here.\n\nJust for fun for New Year's Eve, we decided to dress up. We both wore what we'd worn to the Christmas party, with me in the same black dress, and heels that Rory thought was pretty sexy. And I've got to say, he sure cleaned up nice. No small wonder every woman in the room the night of the party had been drooling over him in his perfectly fitted charcoal gray suit, crisp white shirt and black and gray striped tie, because he looked like a million bucks.\n\nWe had our own little party with steaks and shrimp for dinner, and a nice bottle of red wine. Then after we'd finished, Rory put on some music and we danced close together to Al Green's Let's Stay Together. Reading right through him, I cocked an eyebrow making him laugh, pretty sure why he'd picked this particular song. So I said, \"I wonder why you chose this song.\"\n\nHe just shrugged and smiled into my eyes. \"I've always thought this was a perfect love song, especially for a night like this.\"\n\nI got a little teary-eyed, as Al's velvet-smooth voice crooned: \"I'm, I'm so in love with you, Whatever you want to do, Is alright with me. 'Cause you make me feel so brand new, I want to spend my life with you. Loving you, whether times are good or bad, happy or sad, come on, Let's, let's stay together... Loving you forever, Is what I need...\"",
        "The way Rory was gazing into my eyes, like he could read my mind, as we swayed together to the romantic lyrics, I felt the warmest sensation run right through me. I really wished that I could tell him just how much he meant to me, and that I really did love him. But I didn't think it would be fair, since I was hoping that he'd do us both a favor and find someone new to spend his life with, as much as it would hurt to lose him. I had to put my needs aside and accept the fact that I was a little past my prime, and too old to start a life with a man still in his twenties, no matter how good we were together. So I knew he should look for someone younger, and hopefully someone who'd be healthy.\n\nIn the morning after we'd packed and I took one last look around, pretty sure I'd never be back, when he said, \"Ready?\" I nodded and hopped in the cab. Then we flew out of Toronto Island's Billy Bishop Airport, at the foot of the city. Luckily the flight was only an hour to Montreal, which was a relief. I think sitting on the train for hours would have given me too much time to think, and worry. Of course Rory hung onto to my hand the whole time, dropping kisses on my cheek. And I was glad for once that he was such a touchy-feely kind of guy, because it felt nice to have him close.\n\nRory was so good, he took care of everything, so I had nothing to do but sit back and wait until we landed. Secretly, I was glad to have him with me. Because I was starting to feel a little anxious wondering what awaited me after I'd had the surgery, and I knew I'd be a nervous wreck on my own.\n\nIt felt odd, like I was living in limbo, with my life in the balance, waiting for the verdict, to be told if I was going to live or die, with no way of knowing if I'd even be here by next Christmas. Though I'd never tell Rory what I was thinking, because I wouldn't want to worry him anymore than he already was.\n\nHe'd been at my condo before. He stayed with me often enough that I gave him a key, in case he got to my place before I got home from work when he'd made the trek from Toronto for one of our little trysts.\n\nSo, it was nice that he knew where everything was, and as soon as we got inside, he carried our suitcases straight into the bedroom.\n\nAfter we'd unpacked, Rory suggested we go for a walk to get some lunch, I think mostly to take my mind off what was going on. I held his arm as we walked, and it felt nice to have to him to lean on. Though I'd never been the type to rely on anyone, just for this once, I gave in, glad that he was here for me.\n\nWe had French onion soup and a seafood salad, at a cute little bistro only a few blocks away. And I noticed that Rory was keeping me talking, probably to keep my mind busy. He even teased me about my sweet tooth when I ordered a slice of tarte au sucre or sugar pie for us to share with our coffees, since it was the closest thing they had on the menu to the butter tarts that he'd made for us.\n\nSince I had to fast and couldn't even have water after eight o'clock at night, since I was being put under for the surgery, we just had a sandwich before we got ready for bed. Neither of us said anything about what was going to happen in the morning, but I noticed he held me really tight as we were falling asleep, like he hated to let go.\n\nIn the morning, when I noticed that Rory didn't bother with coffee, I said, \"You're not having anything for breakfast?\"\n\nHe just shrugged and muttered, \"I can get something later.\"\n\nI guess he didn't think it was fair to be eating while I was starving. But truth was, I was too nervous to care if I ate. All I wanted was to get this thing over with, so we could both get on with our lives, one way or the other.\n\nHe locked up, took my hand and dropped a kiss on the top of my head while we waited for the elevator. And when I looked up at him, I had to blink a few times to keep the tears from falling when I said, \"Thank you for being here for me.\"\n\nHe squeezed my hand. \"I wouldn't be anywhere else.\"\n\nOnce I'd registered, they put me in a room with about a half dozen other patients, all waiting behind drawn curtains for their turn. As I took off my clothes and Rory helped me get into the silly backless gown, I said, \"Why don't you go and have some breakfast? You don't have to wait around. It'll probably take me a while to wake up after it's done.\"\n\n\"It's okay. I'll wait.\"\n\nI shook my head at him. \"You're so stubborn.\"\n\nHe gave me a little smile and said, \"Determined, not stubborn. I want to be here for you, Giselle, so I'm not going anywhere.\"\n\nWhen they finally came to wheel me into the operating room, Rory gave me a kiss and whispered against my lips, \"I love you.\"\n\nThe nurse smiled, watching him stare after us as she wheeled me through a set of swinging doors, till we couldn't see him anymore. \"Is that your husband?\"\n\nI shook my head. \"No. But he wants to be.\"\n\nShe laughed. \"Well, he seems pretty determined.\"\n\n\"That he is.\"\n\nShe patted my shoulder, smiling down at me. \"Well, I'll tell you one thing, if a man as hot as that asked me to marry him he sure wouldn't have to ask me twice.\"\n\nAfter they'd injected the anesthetic in the line that ran into the IV in my hand, and they told me to start counting backwards from ten, the last thought in my head was of Rory, wondering if he'd ever give up on me.\n\nRORY\n\nI don't think I'd ever felt as helpless. Watching Giselle being wheeled into the operating room, to find out what was happening inside her, I knew she had to be scared shitless, because I sure as hell was.\n\nNormally, she was such a strong, capable woman, and so fiercely independent, that nothing ever fazed her. I'd never even seen her rattled. Which was probably why she was so great at her job, if she encountered a problem, she'd just handle it and move on, and that was one of things I admired about her. Unlike a lot of women I'd known, she never giggled, played silly games and acted helpless, she just dealt with whatever she had to, even me.\n\nBut there was nothing she could do to handle this, fate was in control now.\n\nAnd I've got to say I was feeling pretty damn scared.\n\nI sat in the waiting room for a while, looked up at the TV, saw it was calling for snow for most of Quebec, and when they started talking about recycling Christmas trees, I couldn't sit there anymore. I had to get up and move.\n\nWandering down the hallway I noticed there was a sign over a doorway that read, Chapel. And it brought me back to something that had happened in high school, when a mother of one of the nicest girls in my class got in a really bad car accident. We all felt terrible for her, waiting to see if her mother would make it. Until one girl, who was her closest friend, suggested that a bunch of us should walk up the hill to the church and light a candle for her, so at least we'd feel like we were doing something. Though I wouldn't call myself overly religious, when the six of us put our hands together and took hold of that taper and lit one of the candles, I felt like maybe with so many of us hoping she'd survive, that our wish might be answered. And when she managed to pull through, I always wondered if there really was something in the power of prayer. I know my mother and her family always prayed for people in need.\n\nNot too sure if I should, I looked up and down the hallway, feeling a little odd since I really didn't go to church much, but I decided it couldn't hurt to try again. As I stepped into the little room, I noticed there was a display of candles against one wall, but these ones were electric, probably because they didn't want any live flames in the hospital.\n\nI put some money in the donation box and pressed the button to light up one of the candles, and then I squeezed my eyes closed and pleaded with everything I had for Giselle to stay healthy and strong. And I hoped they wouldn't find anything wrong with her, especially anything that could change her life.\n\nI heard some movement behind me, and when I turned around, despite how anxious I was feeling I wanted to laugh. A priest and a rabbi walked into the room, making me think of all the, a priest and a rabbi walked into a bar jokes, I'd heard over the years.\n\nAs they looked at me, both their faces broke into smiles, probably reading my mind. The priest saw me standing by the candles and said in a distinctive Irish lilt, \"I'm Father Kelly and this here, is my friend Rabbi Feinstein, and if you need anyone to talk to, we're here for you.\"\n\nThen both he and the rabbi gave me an encouraging smile and waited. They seemed nice enough, and I decided maybe it wouldn't hurt to talk to them. So we sat down together, and I started off by telling them a little about what Giselle and I had together, though I didn't dwell on the fact that it started off as just a wild hook up, that neither of us could forget. Then I told them about what she was going through now. Then before I knew it, I was not only telling them how scared I was for her, but admitting that I was afraid I was going to lose her. I explained about the difference in our age, the thing about kids and what she was going through now, that had her convinced that we could never be together for the long haul.\n\nOnce I'd finished, Father Kelly nodded sagely and patted my hand. \"I know it might sound trite coming from a priest, but I think what you need, is to have faith. Faith that things will turn out for her, and that she'll be fine, and will go on to live a long and healthy life. And you also need to have faith that the two of you have something special enough between you, that together, if you both want it enough, you'll find a way to make it work.\"\n\nThe rabbi nodded, smiling over at the priest. \"My friend here is always saying that this is the time of year for Christmas miracles, so I have to agree. I think if you have faith in what you have with her, and also what you're hoping for her, that God willing, your prayers will be answered.\"\n\nFinally when the priest said, \"We'll both pray for her,\" it felt like a weight was lifted off me knowing that there were three of us praying for her and not just me, just like when the six of us lit that candle for our friend's mother.\n\nI don't know why, but just talking to them made me feel like I had hope, and the fact that I'd lit a candle for her, too.\n\nI shook both their hands and thanked them for their time, and for hearing me out. And when I left to go back to the waiting room, I didn't feel as helpless now that I'd felt like I'd done something to try and help her, and us. As I waited, I thought about what they'd said, and decided that rather than just letting fate take its course, that they were right. So I made up my mind, and told myself that everything was going to work out for her, and that the doctors were going to tell her that she was healthy, and she was going to be fine. And she wouldn't have the same fate as her mother and grandmother.\n\nIt wasn't long before a nurse came and told me that Giselle was in recovery and was waking up, if I wanted to go in and see her.\n\nIn the recovery room, standing over her watching her sleep, she looked so young and fragile. Her face scrubbed clean without any makeup, her long eyelashes resting on her high delicate pink cheekbones, bright red hair curling around her shoulders, her lips slightly parted, quietly breathing in and out, I thought she looked like an angel.\n\nSlowly, I watched as her eyes fluttered open and she looked up at me and her face broke into a smile, looking a little surprised. \"You're still here.\"\n\nI took her hand and gave it a squeeze. \"I wouldn't be anywhere else.\" Not when she needed me.\n\nShe laughed when I started helping her to get dressed, carefully slipping on her bra, and fastening the catches at the back. \"This has got to be a first. You helping me put on my clothes, instead of tearing them off me.\" But then she seemed a little uncomfortable, as she looked up at me and winced. \"I have to use the washroom. Maybe I should call the nurse.\"\n\n\"I'm here, I can help you.\"\n\nBefore she could argue, I wrapped my arms around her waist and helped her make her way into the bathroom, that thankfully was only a few feet away.\n\nI helped her sit down on the toilet and she looked up me, rolling her eyes. \"I can't believe you're in here, helping me pee.\"\n\nChuckling, I said, \"Well, there's not an inch of you that I haven't seen before.\"\n\nShe was still smirking at me in the mirror as I helped her get to sink to wash her hands.\n\nAs we finished putting her clothes on, I asked if her breast hurt and she thought about it and said, \"No, I can't really feel anything.\" And I was just glad she wasn't in any pain.\n\nThe nurse had left her some juice, and Giselle sat down on the edge of the bed and drank it, still looking a little woozy. So I told her we should wait till she felt she could walk without feeling dizzy, because I sure as hell didn't want her falling.\n\nWhen I finally got her home, I couldn't believe it when she said, \"I guess I should get dressed for work. I told them I was going for dental surgery, because I didn't want them to know what's going on with me right now. So, I should probably try and at least and make an appearance before it gets too late.\"\n\nI thought she still looked a little pale and wasn't quite steady on her feet, probably still feeling the effects of the anesthetic. So, I picked her up, dropped a kiss on her lips and said, \"I'll tell you where you're going, you're going to bed. You've just had surgery, and you're still a little groggy, so you need to rest. And I'm sure nobody will be expecting you to show up now.\"\n\nThough she narrowed her eyes on me, she didn't argue when I sat her on the edge of the bed and started stripping her off again. I tried not to wince when I looked at the gauze on her breast and asked, \"Is there anything you have to do to take care of the incision?\"\n\n\"No. I just have to be careful when I'm washing, to try and keep it dry for a few days. And they said I could take over the counter stuff if I have any pain. But I'm not really sore, just a little tired.\"\n\nI pulled back the blankets. \"Then get in bed and have a nap, and I'll get you something to eat.\"\n\n\"It's okay. I'm not really that hungry.\"\n\nAnd I said, \"I'll find you something. You have to eat.\"\n\nWhen I went in later, she was still asleep so I put the soup back in the pot and put the ham sandwich in the fridge, deciding she probably needed sleep more than food right now.\n\nThat night, with her beside me, I felt like I was sleeping with one eye open, in case she got up and needed me for anything. But I was glad she slept through the night, and I was really glad to be in her bed beside her.\n\nNext morning, though, before I'd even woken up, she'd gotten dressed and was ready to go back to the office. Before she left, I made us eggs, toast and coffee, since she hadn't eaten anything since the day before.\n\nAfter she'd finished her breakfast she covered my hand with hers and said, \"I really appreciate you being here for me, Rory, helping me get through this. But I think you should go home and get back to work. And I promise I'll let you know how things turn out.\"\n\n\"When do you see the doctor?\"\n\n\"I'm not sure. But she said she'd try and see me later this week to discuss the results.\"\n\n\"Then I'll wait and find out with you.\"\n\nShe rolled her eyes. \"Rory, you need to go home. If it turns out that I do have... well, something to worry about, I don't think you'll want to be here to hear something like that.\"\n\n\"And I don't think you should be on your own now. So I'm staying. I've been checking in at work, and everything's fine. And we'll go to your appointment together.\"\n\n\"God you're stubborn.\" She shook her head at me, but I could see from the smile in her eyes that she wasn't really mad. I think she was glad that I'd said I'd stay, but would never admit it, because she didn't want to lean on me.\n\n\"Actually, I'd say I'm determined, not stubborn.\" I was determined to be here for her, especially now when she really needed me, whether she liked it or not. And I was also determined to prove to her just how much I loved her. No way could I turn around and go home and leave her to deal with this on her own, especially if the doctor was going to tell anything that could potentially change her life.\n\nShe smiled at me shaking my head. \"Well, I was also thinking if you want to come into the office with me, I can show you some of the specs on the windows we were discussing that could work for the new houses you're building. And you can take home some brochures that all have the information you'll need.\"\n\n\"Sure. Just let me get dressed.\"\n\nGISELLE\n\nAs Rory and I walked off the elevator together at my office, with his hand at the small of my back, I looked up and had to fight hard not to laugh. When my assistant Marcie looked up from her desk and saw us strolling in together, she looked so shocked, her jaw dropped and her mouth fell open, and her eyes looked as big as saucers.\n\nTrying to play it cool, I said, \"Marcie, I think you've met Rory McLean. And Rory, this is my assistant Marcie Flores.\" Once they'd nodded and said hello, I smiled up at Rory and said, \"He just needs specs on some of our krypton and argon windows, so I'll need some of our brochures.\"\n\nMarcie nodded, still staring wide-eyed at Rory. And I just hoped she'd snap out of it, and get him the brochures before he had to leave.\n\nOnce we got in my office, Rory said, \"How are you feeling?\"\n\nI rolled my eyes, because he looked so worried, and he wouldn't stop asking. \"I'm fine. I can feel a little pinching sensation, but that's about it.\"\n\nThen I sat down at my desk, opened my emails, and let out a groan.\n\n\"What's wrong?\"\n\nThe owners want a meeting this afternoon. And I've got a feeling it's about the company being sold. I just hate the idea of everyone losing their jobs, especially now during the holidays. If it does happen, I just hope they'll be generous enough to give everyone a package, and not just the vacation pay they owe them.\"\n\nI looked up at Rory. \"I really can't see myself starting over again all on my own especially if I'm not even sure the job will last once they've moved me to who knows where.\"\n\n\"Then come and work with me. If your company's moving, and you don't want to make the move, why not at least see what you think about coming to work for McLean? You could rent your condo here furnished, make some extra money, and I really could use your help.\"\n\n\"But where would I live?\"\n\nHe looked at me like I was crazy. \"You'd live with me, where else would you live?\"\n\n\"I don't know. What would people say if they found out that we're involved? It could be kind of awkward, having every one talking about me behind my back, if they knew I was shacking up with the boss.\"\n\n\"No one has to know. And I promise I'll keep my hands off you, and I won't bend you over your desk, or hike your skirt up whenever you come in my office.\"\n\nI grinned. \"Then what would be the point of working with you, if we aren't going to have any fun?\"\n\nHe laughed. \"We can play it by ear, okay? And you can ask anyone who works for me I'm a pretty easy guy to get along with. And no one would ever call me a hard ass.\"\n\nI smirked and looked around him at his nice tight ass, and he rolled his eyes, shaking his head at me. Because I had a feeling I'd have a really hard time keeping my hands off him if we worked in the same office, but I was willing to try.\n\n\"I'll think about it okay?\"\n\nHe tipped up my chin, kissed me and said, \"You do that.\"\n\nAnd of course his lips were still hovering over mine, and he was smiling into my eyes when Marcie rapped on the door and strode in. Then her eyes shot open all over again, when she saw how cozy we looked, with Rory's hand on my back, leaning in nice and close.",
        "\"Oh, sorry, I uh... got the brochures you asked for.\"\n\nRory took them from her and said, \"Thanks, Marcie,\" and she looked like she was going to faint, now that he'd addressed her by name.\n\nRory winked at me and said, \"I should be going and let you you get back to work. I'll see you later.\"\n\nThe moment he walked out the door, Marcie dropped into the seat across the desk from mine, stared at me hard and said, \"Are you freaking kidding me? Seriously? You and Rory McLean? Oh My God! You can tell me that it's none of my business, but I have got to know, is he even half as good in the sack as he looks like he'd be?\"\n\nConsidering the fact that in a few hours I was probably going to have to tell her that the company was being bought out, which meant she'd have to look for another job, along with the fact that I was most likely going to be moving to Toronto to work with Mr. Determined, I flashed her a sly smile and said, \"Actually, he's even better.\"\n\nI laughed at way her eyes rolled all the way back in her head, like she could hardly take in what I was saying.\n\nAnd I knew I was going to miss her. She was so much fun to work with, and she was damn good at her job, too.\n\nStill not satisfied, she leaned across my desk. \"Okay. I want the deets. How did you two meet? How long has this been going on? And are you two serious? Because damn girl, he is one fine looking man, and you are one lucky bitch, if you are.\"\n\nI shook my head, and laughed, because I knew she was right, and I really was lucky to have a man like Rory in my life. So after I'd sworn her to secrecy, I told her that we'd met in Florida a couple of years ago and that we'd been friends ever since. But I didn't share with her how involved we were, or that he was hoping that I'd not only agree to go and work with him, but also agree to become his wife.\n\nAfter she'd left, I sat back in my chair, looked up at the ceiling and wondered how he'd managed to wiggle his way into my heart, and get behind the walls I'd put up, hoping things wouldn't get too serious, so that neither of us would get hurt. It was only supposed to be fun. But I had to admit we were still having a lot of fun together despite how serious things had gotten lately. He was so playful and warm and affectionate, and so protective, that I couldn't help but fall in love with him.\n\nAnd knowing that he was also the type of man I could count on, who wouldn't turn and run when the going got tough, only made me love him more. He might be amazing in bed, and crazy good to look at, but I knew it was his heart that had won me over, because I don't think anyone else would ever stick with me through thick and thin, like he'd done. And I was kind of glad that I wouldn't be alone when I got my diagnosis, and he'd be right beside me, even just for a shoulder to lean on.\n\nBut I had work to do, and decisions to make. So I couldn't sit around thinking about him all day, as nice as it was to picture him in my mind's eye, naked in bed of course with that sexy grin on his face, and not one stitch of clothing on that amazing body.\n\nLater in the afternoon after I'd met with the owners, I discovered, that sadly I was right about the buyout. The new company apparently wanted to keep me on, but were only willing to offer me a two year contract, and paid health insurance, which wasn't enough to get me to move, especially away from Rory.\n\nSo, after I'd spoken with the doctor, and knew what was in store for me, if things went well, I'd have to give some serious thought to uprooting my life and moving to Toronto, to see what it would be like to share my life with Rory full time.\n\nI was given a print out of all our employees, and was told that the names on the top of the list in bold print were the ones they wanted to keep, which was a pretty short list. And the others would be losing their jobs, which broke my heart, especially since a lot of them would be low on money right now, right after the holidays. But I was glad they'd offered everyone a package, based on their time with the company. Now I had to let Marcie know what was happening. And I also had to ask her to help me get reference letters done for all the employees that wanted one.\n\nMarcie took it pretty well, since it sounded like she'd had a few job offers lately but turned them down, because she said she enjoyed with working with me. When she asked if they were keeping me on, once I told her what they'd offered, she said, \"That sucks. I wouldn't take it if I were you.\"\n\n\"Well, I'm not. Actually, Rory's asked me to move to Toronto and work with him, and I think I just might.\"\n\nGrinning, she high-fived me. \"Now that's an offer you can't refuse.\"\n\nThe rest of the week seemed to go by in a blur. Once I'd told everyone what was happening, and given out their last pay cheques and reference letters, I knew there wasn't much left for me to do.\n\nThursday afternoon I got a call from my doctor's office asking if I could come in first thing in the morning. I told them I'd be there, and then I called Rory and let him know.\n\nWhen I got home, he had dinner on the table. He'd got us Thai food from this great little hole in the wall place around the corner. And he'd cut up some fruit for dessert. And we didn't say too much while we ate, I guess both of us wondering what I'd find out tomorrow.\n\nHe covered my hands with his, when he noticed I was barely eating. \"Are you nervous?\"\n\nI looked up and nodded. \"A little. I'll just be glad to get it over with, and then you can go home and get back to work.\"\n\n\"I booked us a table at Bonaparte's for tomorrow night.\"\n\nHe knew I loved the food there. Classic French, and it was just was so romantic, it was our go to place whenever we wanted to celebrate things like our birthdays or Valentine's Day. Some of the best meals we'd ever had were in that little auberge in the heart of old Montreal. And I just hoped we'd be celebrating tomorrow night, and enjoying our dinner and not drowning our sorrows.\n\nRory and I took a shower together after dinner. And the way he kissed me and ran his hands over my body, as he washed me had me so aroused, I couldn't think of anything else but getting him in bed. And when he got me on back with his head between my legs, he made me come so hard so many times, that I forgot all the doctors, my job disappearing, and even my own freaking name. The man really knew how to get a girl off.\n\nBut then when he got up on his hands and I wrapped my legs around him and moaned as he nudged his way inside me, I knew I not only wanted, but needed this with him for the rest of my life. I was his, and he was mine, and if we were lucky, maybe we could have a life together.\n\nWhen he whispered against my lips, \"I love you,\" as he thrust into me hard and deep, with me clenching around him as tight as I could, I really wanted to say it back, but until I knew my fate, I had to hold back.\n\nWe made love for hours, nice and slow and sweet. It felt so good to be connecting with him like this, and I knew if I got the results I was hoping for, that I wouldn't be able to deny anymore.\n\nThe next morning, Rory kept his arm around me in the elevator and kept dropping kisses on my cheek and telling me, \"It's going to be okay, baby, I can feel it.\"\n\nAnd I just hoped he was right.\n\nThankfully we didn't have to wait long, and the doctor called us in. She smiled and shook hands with Rory when I introduced him, and she looked so relaxed that I hoped it was a good omen.\n\nI had Rory's hand in my lap, squeezing it hard, as she opened my file, looked it over for a moment, then looked up into my eyes. \"Well, thankfully, the small mass they found was only a fibroid cyst, and it was benign.\"\n\nMy eyes flared and looked over at Rory, who looked as relieved as I felt, he was smiling at me, and I could feel my eyes welling up, and noticed his looked pretty shiny, too.\n\nI turned my focus back on her, when she said, \"And according to the screening results, you're not carrying any genes related to breast or ovarian cancer. So, it looks like nothing has been passed down to you that could affect your health.\"\n\nShe kept talking, but I just felt so overwhelmed, I couldn't really hear what she was saying after that. It felt like a weight had been lifted off my shoulders, almost like I was floating in thin air, and now I could breathe again. And I could get on with my life. I smiled over at Rory, and he was smiling right back.\n\nHe squeezed my hand, and I could him see trying to wipe at his eyes without being too obvious, and I couldn't decide if I should laugh or cry. I don't think I'd ever felt as happy or relieved.\n\nFinally, she said, \"Well, at least you know that you're healthy and hopefully your sister's results will be the same.\"\n\nI thanked her and so did Rory, and when we got in the elevator, he hugged me so hard I had smack him on the shoulder to get him to let go. Laughing, he lifted me in the air. \"I knew it! I knew you'd be okay.\"\n\nI felt just as giddy as he did. It was hard to wrap my head around. But when he put me down and I wrapped my arms around his neck, as we nearly kissed each other's faces off, we didn't even notice that we'd got to the ground floor and the doors had opened -- and that we had an audience. Until we heard people laughing, and I could feel my cheeks burning as we finally realized where we were. But I was too happy to care.\n\nStopping in a coffee shop, as we sat together in a window seat, I took a minute to call my sister, and I sagged with relief when she said that her genetic screening went well, too. I told her I loved her, and smiled at Rory, probably wondering why I'd never said those three little words to him. I but just took hold of chin, kissed him again, and the way his eyes sparkled, he looked pretty happy.\n\nDinner that night was amazing, and not only because of the food, but now that I had a new lease on life I could hardly wait to start living it with my man. I wore a sexy red slip dress that Rory seemed to love the way he kept eyeing me, like he wanted me for dinner and not what was on his plate.\n\nAs we finished the delectable dessert sampler together, I smiled across the table at him and told him, \"Well, it looks like I'll be moving to Toronto to go and work for this hunky builder, who I hear is building these incredible energy efficient homes.\"\n\nHe looked at me for a whole minute before his face broke into a smile, as he realized what I was saying. He grabbed my hand, squeezed it hard and said, \"Now I can hardly wait. That's got to be the best news I've ever heard.\"\n\nRory flew home on Sunday night, and I missed him like crazy the moment he left, so I knew I was making the right decision.\n\nI had things to do, so I planned to finish the last two weeks at work, while also deciding what to take with me and what to leave. The idea of renting my condo, sounded like a good idea. But for now, all I wanted was to get myself into my new job, and get back with him.\n\nRory said he'd pick me up at the airport, but it was cold and snowy out, so I waited inside, keeping an eye peeled for his big black SUV. But after an hour, I thought I'd better phone him in case we got our wires crossed, and he thought I was coming in later.\n\nBut when he didn't pick up, I started to feel a little uneasy, and wondered if something had happened. Then half an hour later, a chill ran up my spine when it occurred to me that maybe he'd changed his mind about us, and decided not to come and get me.\n\nThen my phone rang, and I was surprised to hear a woman's voice on the other end. \"Hi, is this Giselle?\"\n\n\"Yes, speaking.\"\n\nShe sounded hesitant, and I could feel my palms starting to sweat, afraid of what she was about to say. I just hoped she wasn't his new girlfriend calling to give me the brushoff.\n\n\"I'm Michelle, the receptionist at McLean's, and please don't panic, but there's been an accident, and Rory's been taken to the hospital.\"\n\nIt felt like my legs were about to give out from under me. I couldn't believe what she was saying. I clutched my phone, nearly cracking the case. \"What happened?\"\n\n\"I'm not exactly sure. Sounds like something fell on him. He was out on a site, and he got hurt and that's all I know. But he was talking before they put him in the ambulance, and he told the guys who were with him to call you.\"\n\n\"Okay. Which hospital is he in?\"\n\nWhen she told me the name of the hospital, I went outside and hailed a limo, and told the driver where I needed to go, and then I sat back and just prayed with everything I had that he'd be alright.\n\nAfter I'd dragged my big suitcase up to the front desk in the ER, took a seat and said who I was looking for, the older woman behind the glass eyed me for a moment and said, \"Are you family?\"\n\nI nodded while she narrowed her eyes even more studying me, like I was trying to sneak in or something. \"Yes, I'm his fianc\u00e9e. And we're about to be married, soon.\" I knew I still had the ring in my purse. So, when she turned her head to call and find out where he was, I rifled through my big, oversized bag, past my wallet and keys, my makeup bag and all the other crap I had in there, telling myself I really needed to clean the damn thing out, till at last I found the ring box, of course right at the very bottom. Then keeping it down on my lap, so she wouldn't see what I was doing, I popped it open, went to grab the ring and put on my finger, and it slipped out of my grasp, dropped to the floor and I watched it bounce away.\n\n\"Shit!\"\n\nShe looked up at me. \"I'm sorry, is everything okay?\"\n\nI nodded. \"I uh, just dropped something.\" I held up a finger. \"Be right back.\" I dropped to my knees, and crawled around and then I saw where it bounced, I dove for it. Luckily, right before a heavy-set woman in a wheel chair was about to run it over, just missing my hand as I snatched it up, and tightly clasped it in my fist.\n\nSitting on the floor, I slipped it onto my finger, heaved a breath, got to my feet, walked over and sat back down, plastered a smile on my face and said as sweetly as I could, \"So, how would I find him?\"\n\nShe tipped her head staring at me, probably wondering if I had a screw loose, but then she pointed and said, \"Through those doors, he's in room number twelve.\"\n\nI nodded, took hold of the handle of my suitcase, smiled and said, \"Thank you,\" and I rushed through the doors to go and find Rory.\n\nThe doctor was with him, so I waited outside. But I could hear him telling him he was lucky he'd been wearing a hard hat -- but the CT scan showed that he'd still suffered a concussion. Thankfully though, his skull wasn't fractured, and there didn't appear to be any internal bleeding.\n\nThen I listened carefully as he told him that he'd have to confine himself to bed for a few days, try and keep his eyes closed, with no stimulation, not even a TV and no video games. And he should try not to talk, or move his head if he could help it, for at least a day or two.\n\nI just closed my eyes and gave thanks that it wasn't anything even worse.\n\nWhen the doctor came out and asked, I told him who I was, and said I would take care of him. And that I'd be staying with him, and I'd keep an eye on him round the clock. Because I knew I would stay up all night, if I had to, just to be sure was okay.\n\nOnce I got him home, Rory looked like he was in pain as I walked him over the bed, got him to lie on his back and stripped him off, careful not to jostle him too much.\n\n\"Sorry I couldn't pick you up at the airport,\" he murmured.\n\n\"Shh,\" I pressed my fingers to his lips. \"No talking remember?\" And when he nodded, I said, \"And no nodding. You have to stay still.\"\n\nHe gave me an eye roll, but managed a weak smile. And I went and got the information sheet the hospital had given me. \"It says you can have something for pain if you need it.\"\n\nHe muttered, \"I'm okay for now. I think they already gave me something. But I want you in bed with me.\"\n\nI shook my head. \"I think fooling around is out of the question now, too.\"\n\nHe just smiled and patted the bed.\n\n\"Okay, just let me get you something to drink.\" As I went, I called over my shoulder, \"Are you hungry, do want a sandwich or something.\"\n\n\"No,\" he muttered, \"I'm good.\"\n\nI put a bottle of water with a straw on the bedside table, and as I started to strip off, I smiled at the way Rory was wiggling his eye brows, his smile growing wider with every piece of clothing I tossed over my shoulder. So I jiggled my boobs around a little and swirled my hips as I tossed away my bra and panties, making his eyes flare. I thought the least I could do was give him a little strip tease since the only thing the poor guy could do was watch.\n\nBut then he narrowed his eyes and said, \"Hey, what's that sparkling on your finger.\"\n\nI held up my hand and smiled. \"You mean this beautiful diamond? My man gave me this.\"\n\nHe looked into my eyes. \"So is that a yes?\"\n\nI nodded. \"That's a yes.\"\n\n\"Baby, I want to kiss you so badly right now.\"\n\nI crawled onto the bed, touched a finger to his chin and said, \"Then you'd better pucker up, big guy.\"\n\nI tried to keep it quick and just give him a little peck on the lips, but when his arm came around me and he deepened the kiss, I let him enjoy it for a bit, because I sure as hell was.\n\nWhen we finally pulled apart, I brushed my hand across his cheek and told him what I'd been aching to tell him. \"I love you, Rory.\"\n\nHe surprised me when he laughed and rolled his eyes, which was not what I expected. \"And all I had to do to get you to agree to marry me and finally say those three little words was nearly get my head knocked off.\"\n\n\"Well I'm just glad you're still in one piece.\"\n\n\"When that piece of scaffolding fell down and hit me, as they were carrying me into the ambulance, all I could think of was you waiting for me at the airport, wondering if we'd ever see each again. And now I'm sure glad I made it home.\"\n\n\"Me, too.\" I shuddered to think what could have happened to him.\n\nThen I noticed he looked a little uncomfortable, and was starting to squirm a bit.\n\n\"What's wrong?\"\n\n\"I've got to use the washroom.\"\n\nI walked around to his side of the bed, and said, \"Well, I can help you.\"\n\nSmirking, he cocked an eyebrow. \"Are you offering to hold it for me, too?\"\n\n\"Well, I am fairly well acquainted with your equipment.\"\n\nChuckling, he said, \"True.\"\n\nI held his arm and walked him into the bathroom, noticing he felt a little shaky.\n\nI averted my gaze, trying to give him a little privacy once he was standing over the toilet, but when I didn't hear anything, I looked down and had to bite into my lip to stop myself from laughing when I saw he was sporting some pretty major wood. \"Can you even pee out of that thing when it's like that?\"\n\nHe gave me the side eye. \"I don't know, but I guess I'll find out. Normally, I don't try and have a whiz when I've got a boner.\"\n\n\"Why are you so hard?\"\n\n\"Maybe because you kissed me, why do you think? Every time you kiss me I get hard.\"\n\nGrinning, I thought that made sense, because every time he kissed me, he made me wet.\n\nAfter he'd taken care of things in the bathroom, since he was still a little too shaky to stand in the shower, I got a wash cloth and basin of water, and offered to give him a little sponge bath in bed, pushing a towel under him to protect the mattress.\n\nThough he kept grinning at me as I ran the damp cloth all over him, even running it up and down along his fully erect deal, I thought he'd sleep better after he'd been washed.\n\nOnce I'd dried him off, I dropped a kiss on his lips and said, \"You should try and get some sleep now.\"\n\nOf course he just rolled his eyes, probably because he was even harder now, after his bath than he was in the bathroom, standing straight up in the air now like a flag pole. Though I knew exactly what I needed to do to take care of him, I also remembered the doctor said that he couldn't have any stimulation of any kind, at least for a few days. So, sadly for Mr. Stiffy, I knew that the three things I had in mind would probably be a little too stimulating for him, and I didn't want to make his head any worse.",
        "So, we just stared at each other for a minute, eyeing the elephant in the room, till we both started laughing.\n\nFinally he said, \"You're not going to leave me like this, are you?\"\n\n\"But what about your head?\"\n\n\"Which one? Because they're both throbbing pretty hard now, after that strip tease, that kiss, and you running your hands all over me, I don't think I've ever been this hard in my life.\"\n\nI heaved a breath, feeling a little guilty. I really didn't want to leave him hanging. So I said, \"Okay, which do you think would be the least stimulating; a hand job, blow job, or me riding you?\"\n\nHis eyebrows shot to his forehead, and I could see his dick really starting to twitch as he grinned. \"Does it have to be an either or kind of thing, or could I have a little of all three, you know, just to uh... check and see which one is the least likely to overstimulate me.\"\n\nI rolled my eyes, not entirely convinced I should be doing this, but I still went to the foot of the bed, crawled between his legs, and slid my tongue over him from balls to tip, and gave his cockhead a little suction while rolling his balls between my fingers. \"How does that feel?\"\n\nHe sighed, smiling up at the ceiling. \"Fucking fantastic. What else you got?\"\n\nShaking my head at him, I wrapped my hand around him and started sliding him through my fist, lapping at the tip. \"And this?\"\n\n\"Aw, that feels good, too, really good. You got a nice touch, Giselle.\"\n\nThen carefully I straddled his hips, took hold of him, and started sliding him up and down along my slit and asked, \"Your head's not hurting too much?\"\n\n\"Not the one sliding along your pussy, because he's in fucking heaven right now. And with all my attention focused on what's happening between my legs, I don't even notice the headache anymore. Maybe we should tell the doctor what we've discovered. Because this could be something they haven't thought of -- sex therapy for concussions.\"\n\nI laughed while I rode him, smiling into the naughty glint in his eyes, as he wrapped his hands around my hips and thrust up as I thrust down. But if he was feeling any worse tomorrow, this would be it for him for a while. I was careful though, and noticed that he didn't seem to be wincing too much when he finally let go and came, though he did shudder pretty hard.\n\nLuckily, within days, he was starting to feel more like himself, but I still made him rest -- on his own, just to be on the safe side.\n\nA week later, with all signs of the concussion gone Rory was back at work, with me happily toiling away in the office, loving my new job. And he decided that April the fifth, his father birthday, would be a nice anniversary for us. So, we got married one night in a little church that he'd gone to since he was a boy. It was an intimate ceremony, with his just his mother, my sister and her family, and a few close friends.\n\nI wore a classic little off the shoulder knee-length dress, and underneath, circling my thigh, I had a white garter with little pink rosebuds around it, that Rory later enjoyed removing with his teeth.\n\nI've got to say when I first saw him standing at the altar waiting for me to walk up the aisle to become his wife, I had no hesitation, since I knew I was marrying my best friend, my lover and the only man I knew I'd ever need.\n\nAnd he looked so good in his perfectly fitted charcoal gray tux with his crisp white shirt and black neck tie, that I could hardly believe that such a handsome, charming, fun loving man had actually picked me to be his bride.\n\nWe had a dinner reception with everyone at a beautiful restaurant by the water, and we kissed as we danced to Al Green's \"Let's stay Together,\" that had become our song. And when Rory began to sing along to the lyrics, \"I'm so in love with you,\" my mouth actually fell open.\n\n\"Holy crow, you can really sing. How did I not know this?\"\n\nHe just shrugged and kissed the end of my nose. \"I usually only sing in the shower.\"\n\nHis mother, who I already loved, walked by, heard him singing to me and said, \"Giselle, you should hear him sing The Prayer, it'll send chills down your spine. And I have no idea where he got that voice.\" Of course I just looked at him stunned, wondering how much more there was to learn about him.\n\nWe honeymooned in the Bahamas, and pretty much made out like crazy till it was time for us to fly home again. I think we only visited the casino once, and maybe swam twice in the pool, because we were having so much fun in our room.\n\nAnd I decided before we left, to see what would happen if I went off the pill.\n\nAnd did I ever get a surprise.\n\nEight and a half months later, on Christmas day, we were settled in our new house, and I was baking butter tarts in our big beautiful new kitchen, overlooking the forest, when I felt a gushing sensation between my legs. Panicked, I called out, \"Rory come here, something's happening.\"\n\nThe moment he walked in the kitchen and saw the water on the floor, he rushed over and said, \"Baby, are you okay?\"\n\nI kept blinking, staring down at the puddle on the floor between my legs, feeling stunned. I looked up at him. \"I think my water just broke.\"\n\n\"Can you feel any contractions?\"\n\nI didn't feel a thing. \"No. But I think I'd better get to the hospital.\" Still dripping, I made my way into the bathroom to clean up and said to Rory, \"Take the tarts out of the oven, while I wash up and get changed.\"\n\nOn the drive to the hospital, I thought about how Rory had reacted when he first found out that I was expecting twin boys. He went so pale that I thought he was going to pass out. All kinds of thoughts went through my head.\n\nI wondered if he was upset about us having two babies at once, maybe because of my age, or because of how much more work it would be to have two little ones to take care of, instead of just one. Or the thought of being responsible for two little lives just scared him. But it was odd that he seemed upset because he'd been so over the moon happy when we first found out that we'd defied the odds, and I was pregnant.\n\nBut when we got home from the ultrasound clinic, looking uncomfortable, he sat me down in the living room took hold of my hand, and said, \"There's something I've never told you that I think you should know.\"\n\nI nodded and waited, hoping it wasn't something awful, because I'd never seen him looking so serious.\n\nBut I couldn't believe it when he said, \"I had an identical twin brother, James.\"\n\nI was so shocked I just sat and stared at him, not even sure what to say. But finally, I said, \"What happened to him?\"\n\nWell, I was born first. And they took a long time to get him out, the umbilical cord got wrapped around his neck, his heart stopped and he didn't make it. They tried to revive him, but there was nothing they could do. My parents had to have a funeral for him, because he was full term. They had one baby in their arms and another baby in a coffin, so I could just imagine how hard that would have been to get through, especially knowing that we looked exactly alike. As they watched me growing up, I always knew they were thinking about the one they lost.\"\n\nI reached out and squeezed his hand. \"I'm so sorry, Rory. I had no idea.\"\n\n\"Well, I think that's why I kind of went into shock when they said you were having twin boys today.\"\n\nI nodded. \"I can see why. But I'm being monitored really closely, so I'm sure everything will be okay.\"\n\n\"You're right, and I'm sure everything will be fine. I guess it just kind of took me by surprise.\"\n\n\"But why have you never mentioned him?\"\n\nHe shrugged. \"Not many people know, because I don't really talk about him. But in a strange way, I think my brother has kind of shaped my life. Knowing how torn up my parents would be if anything ever happened to me, growing up, I never did anything too crazy. I remember when I was about ten, playing over at a neighbor's house, a kid brought out a gun and I made him put away, because I didn't want to risk getting shot, or anyone else getting hurt, because I knew it would kill my parents. And I never messed with drugs, or would ever get into a car with anyone driving under the influence. I also think because James never had a chance at life, I decided I wasn't going to squander mine.\"\n\nLearning about his brother really touched me. Smiling at him, I stroked his hand. \"I always knew there was something special about you, and I now I know why.\"\n\nHe ran his hand over my belly. \"If it's okay with you, I'd rather wait till they're born to name them.\"\n\nI nodded. \"Sure. There's lots of time for that.\"\n\n---------\n\nNow that we were on the way to the hospital, I couldn't stop thinking about what happened to his brother James.\n\nThe babies were due in early January, so I knew I was only a few weeks early, and I was told they were a good size. So I just hoped everything would be fine, and soon we'd be bringing home to two healthy baby boys.\n\nThey had me prepped for the birth in the delivery room with Rory at my head holding my hand. With the contractions getting closer and stronger, I was doing my breathing exercises, pushing when I was told to, and squeezing the hell out of Rory's hand. I looked down at the doctor, and I saw that he was staring really intently at the monitor, and I didn't like the look on his face. He said something quietly to one of the nurses, and that sent a chill right down my spine.\n\nFinally, he told us what was going on. \"The babies are in distress. We're going to have to do a C-section, and we're going to have to do it quickly. So we'll have to put you out, Giselle.\"\n\nRory leaned in, squeezed my hand, kissed me and surprised me when he said, \"Everything's going to be okay, baby, don't worry.\" And though he looked nervous, he sounded like he meant it, which helped to calm me down.\n\nWhen I woke up, they had me in a private room, and I was looking at my husband at the foot of the bed, holding our two tiny sons with little red Santa hats on their heads. I wiped at my eyes, feeling so relieved that they were fine and they both looked healthy.\n\nRory noticed I was awake, smiling from ear to ear, he said, \"Look what Santa brought us, Mama.\"\n\nI laughed as he brought them to me so I could hold them. Nestled in my arms, they were just so precious, both asleep with adorable little puckered mouths, and tiny hands, with wee little fingers that grasped mine as soon as I touched them. And they both had pale strawberry blond hair, just like their father. I looked up and Rory had his phone in his hand saying, \"Smile.\" But I was already smiling from ear to ear, I just felt so happy.\n\nHe put down his phone and pulled two big red and white striped stockings out of his pocket, and said, \"I got these in the gift shop downstairs, and thought they'd look cute.\"\n\nThen he took the twins from me, one after the other, and slipped them into the stockings. And I had to get my phone and get a picture with our adorable little stocking stuffers, with little red Santa hats on their heads, cradled in their daddy's arms.\n\nOne of the nurses walked in just then, saw Rory with the boys in the stockings and said, \"Aw, is that ever cute.\" She smiled over at me and said, \"I just came in to see if you needed anything, Mrs. McLean.\"\n\nLooking at my husband, with a baby in each arm, I said, \"Actually, I think I've got everything I'll ever need.\"\n\nShe smiled at them and nodded. \"I'd say so.\" As she left she said, \"Merry Christmas.\" And we said the same.\n\nI sent the picture with Rory and the twins to Marcie. And she texted me right back. \"Oh, wow! Congrats! They are so adorable! And -- #Hottest Dad Ever!\"\n\nI showed Rory and he laughed. Then I looked at the boys and said, \"I guess now we have to decide what to name them.\"\n\nHe dropped a kiss on each of their heads and nodded. \"Yeah, I think calling them baby A and baby B will get their asses kicked pretty hard, once they get to school.\"\n\nI just rolled my eyes. \"I was thinking it might be nice to call one of them James after your brother.\"\n\nRory looked thoughtful for moment and finally said, \"Yeah, I think that would be nice. And we should name one of them for your father.\"\n\n\"Oh, I could never do that.\"\n\nHe looked surprised. \"I thought you liked your dad.\"\n\n\"I loved him. He was the greatest dad ever. But before he died, he made both my sister and I promise that we'd never name any of our kids after him.\"\n\n\"Why? What was his name?\"\n\n\"Well, everyone called him Al.\"\n\n\"Al's not a bad name, what's it short for Allan or Alex?\"\n\n\"No, nothing that normal. His real name was Aloysius.\"\n\n\"You've got be kidding.\"\n\nI laughed. \"That's what everyone said whenever he had to tell someone his real name. Apparently, my grandmother, who was very religious, fell down the stairs when she was pregnant with him. And she promised if he survived that she'd name him after whatever saint's day he was born on. And since he was born on June 21<sup>st</sup>, he was named for St. Aloysius. If he had been born a day later, she'd have called him Thomas, which obviously would have been a lot nicer.\"\n\n\"Yeah, a name like that would really get a kid's ass kicked, so we can't do that to either of them. But maybe we could call one of them James Allen, to honor both my brother and your dad.\"\n\nI thought about it and nodded. \"I like that. James Allen McLean, it's got a nice ring to it. And your father was Adam, so how about Adam Roderick for the other one, so he'd be named for both his father and grandfather.\"\n\n\"Yeah, I like that, too.\"\n\nI looked up Rory. \"Do you have a middle name?\"\n\n\"Yeah, but I never liked it much.\"\n\n\"What is it?\"\n\n\"Alistair.\"\n\n\"Are you kidding? Alistair's a great name, makes me think of a hot Scottish laird in a sexy kilt.\"\n\nRory waggled his eyebrows. \"You know they don't wear anything under those kilts, right?\"\n\n\"I should hope not.\" I grinned, looking him over, imagining how hot he'd look in just a kilt, with nothing underneath. Ooh, I could already picture running my hands up his thighs under his kilt, to find out what he was hiding under his sporn. \"Do you think it's too late to order you one for Christmas?\"\n\nHe chuckled. \"That depends on whether you'd be up for working on a little daughter to go with our sons. Because I know what would happen if you had me walking around the house in something like that, you'd be tackling me to the floor like you did last Christmas.\"\n\n\"Well, maybe not today, or even tomorrow, but one day soon... I'd be up for trying for a little girl.\" Then I laughed. \"Wait, I just thought of it. So your initials spell RAM, how appropriate.\" I looked down at the boys, and James's would be JAM, and Adam's would spell, ARM, which both sound okay.\"\n\n\"And since your middle name is Anne, yours is GAM, and I do love those shapely legs of yours, so yours suits you, too.\"\n\nRORY\n\nI loved how easily we could tease and laugh with each other. She was just so much fun to be with I could hardly believe we were married sometimes, because we were the best of friends that could joke about almost anything.\n\nBut today my beautiful wife had really shown me how amazing she was.\n\nI tipped up her chin and pressed a kiss to her lips. \"I love you so much I didn't think I could love you anymore. But now after seeing what you've gone through to give us these two beautiful boys, only makes me love you that much more.\"\n\nSmiling up at me, her eyes a little misty, she whispered, \"And I love you, too.\"\n\nFunny, we woke up this morning, just the two of us, and now we'll be going home a family of four. And those bedrooms she'd didn't think we'd ever need, are starting to fill up.\n\nThe priest and the rabbi were right, all I needed was faith to land the woman of my dreams, and also be lucky enough to be gifted with these two little Christmas miracles."
    ],
    "authorname": "Smuttyandfun",
    "tags": [
        "blow job",
        "commitment",
        "hand job",
        "love",
        "oral"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/three-little-words-9"
}