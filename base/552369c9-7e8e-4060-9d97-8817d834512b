{
    "title": "A Tale of Two Paramours Ch. 09",
    "pages": [
        "Jessi\u2019s announcement that she wanted to be my slave for New Year\u2019s Day, and perhaps for more of the new year as well, was followed by an awkward silence that, I admit, was mostly my own doing. Three different perspectives on the issue collided in my head as we sat in the chair in my living room, the twenty-year-old blonde \u2013 still in her cat costume \u2013 perched on my lap and staring at me. \n\nThe first perspective, which I identified with my conscience, warned against pursuing this new line of play. This, I rationally understood, would be the objectively wisest course given what I knew about Jessi and her difficulties regarding reconciling her feelings with her sexual urges. The second perspective was more willing to give this new game a try, but it included some concern that it was quite a leap to go from light spanking, mildly rough sex, and suggestive commands to being the master of a love slave. The third perspective I considered was that if we were to do this, I really needed to take control and push the envelope a bit. To my surprise, with minimal inner dialogue I quickly resolved to go with this third perspective and to push things. One reason for this was that while sex with Jessi was always incredible, I was beginning to understand it was also predictable. \n\nAs I looked back over my encounters with my younger lover, I could not deny that, except for our second encounter, which was very different from the others in many ways, we more or less did the same thing each time, just with different window dressing. Even the pussy cat thing had just been a new, and admittedly very exciting, framework for the same basic things we had done before \u2013 Jessi showing off/revealing herself either naked or provocatively clothed; fellatio to my climax; and then sex on the floor with me taking the young blonde woman from behind. Sure we had mixed that pattern up a little bit from one time to the next, but the basic pattern itself held. Further, even though what followed the initial activities had been more variable, there were a couple of recurring patterns involved there as well: the first was sex in bed, either face to face or Jessi on top; the second involved me picking her up and tossing her on a bed so I could perform cunnilingus on her, which was something that we had done three times in just a handful of encounters. If we were going to go down a new path, I wanted it to actually be new.  \n\n\u201cMark, what are you\u2026?\u201d Jessi started to ask after I had been silent for some time. \n\nI cut off her question by grabbing a fistful of her blonde hair and aggressively kissing her. The young woman sitting on my lap moaned and wiggled as I held the kiss. When I was done, I used her hair to pull her face away from mine as I stared into her lust filled eyes. Jessi, her lips trembling, seemed to be on the verge of speaking, but no words came forth. \n\nFinally, she dropped her eyes and in a quiet voice asked, \u201cShould I go change?\u201d\n\n\u201cNo,\u201d I replied, putting an edge to my voice. \u201cWe are not doing this the same way. There will be no modeling of your collar and cuffs like it is a slutty fashion show.\u201d\n\nJessi glanced up quickly, bit her lower lip, and then looked down again. She did not speak. \n\n\u201cGet up and stand in front of me!\u201d I commanded. \n\nThe young woman hesitated for a half a second, and then she jumped up and stood facing me. \n\n\u201cBefore we start this, are you sure about doing it?\u201d I asked her. \n\n\u201cYes, Mark,\u201d she breathed. \n\nI stood up, grabbed her hair, pulled it back so she was forced to look up at me, and told her, \u201cIf I ask you a question, you reply \u2018Yes, Master\u2019 or \u2018No, Master\u2019 unless I have commanded you to do otherwise. Do you understand?\u201d\n\n\u201cYes, Master,\u201d Jessi whispered, her whole body now trembling. \n\n\u201cMuch better,\u201d I responded. \u201cYou are not going to forget that, are you?\u201d\n\n\u201cNo, Master!\u201d she answered. \n\n\u201cNow, go and get the collars you brought,\u201d I instructed. \u201cI will decide which one you will wear.\u201d\n\nJessi stood there a heartbeat before running to my bedroom. While she was gone, I went to my home office and retrieved the whip and the cuff sets she had given me for Christmas. When I returned with them in hand, Jessi was standing before the chair in which I had been sitting, a collar in each hand. \n\nWalking up behind her, I said, \u201cTurn to face me,\u201d and the slender blonde instantly complied. \n \n\u201cShow me the collars,\u201d I commanded, and she held them both up.\n\nThe collar in her left hand was the thin, black leather collar with the word \u2018SLUT\u2019 spelled out on it with metal studs. The collar in her right hand was also black leather, but it was very different from the first one. The collar she had worn before was more like a choker, the band maybe an inch think. The new collar was much more substantial \u2013 the band of it looked to be two or two and half inches thick, and instead of a word spelled out in metal studs, it was adorned with three heavy looking rings, one in the front and the other two on either side. And whereas the thinner collar had a small, delicate buckle, the heavier collar fastened with a metal buckle that would have looked at home on a large belt. Finally, the larger collar was even further set apart from the smaller one by a black leather leash clipped to the front ring. \n\n\u201cPut the \u2018SLUT\u2019 collar on the chair,\u201d I ordered, and the blonde immediately did so. \n\n\u201cGood girl,\u201d I praised her. \u201cNow give me the other one.\u201d\n\nShe gave me the heavier collar, which I then placed on my coffee table, along with both pairs of cuffs. \n\n\u201cStrip!\u201d I ordered, now that her hands were free. \n\nJessi did not hesitate at all. She did have some problems undoing the corset of the cat costume, likely due to the fact her hands were shaking as she tried to reach behind her to unhook it. As I watched her struggle, my first impulse was to help, but I realized that was not what I should do given our roles. \n\nInstead, I barked, \u201cGet it off now! If you do not, I will use this whip on you!\u201d \n\nThe young woman looked at the whip in my hand, then frantically pulled the corset apart and tossed it aside. Next, she unhooked the belt that held up her skirt and tail and let the whole assembly fall to the floor. Now dressed only in her fishnet stockings and her 5\u201d high heels, Jessi stepped away from her skirt and stood in front of me with her arms to her sides. \n\n\u201cAll of it, slut,\u201d I growled. \n\n\u201cY\u2026 y\u2026 yes, Master,\u201d she stuttered, before kicking off her shoes and peeling off the stocking from each of her legs.\n\nI walked around her as she stood there in my living room, completely naked. I commanded her to raise up on her toes and put her arms up over her head, as if she were about to dive into a pool. The blonde complied without hesitation, and I marveled at the way her legs and buttocks grew taught as she stood on her tip-toes, and how her perfectly her breasts were raised and displayed when she put her arms up. \n\n\u201cYou are a very beautiful slave,\u201d I told her, and I saw her cheeks redden. \n\n\u201cYou will need a name,\u201d I continued. \u201cIt should be something that represents who you are, don\u2019t you think?\u201d\n\n\u201cYes, Master,\u201d she replied, although I saw some concern cloud her eyes. \n\n\u201cI think we will call you \u2018slut\u2019,\u201d I announced, and even as I said it, doubt began to nag at me. However, as I usually did where Jessi was concerned, I tried to push any concerns I might have deep down in my mind, where they could not interfere with what I wanted to do.   \n\nJessi stared at me but did not speak. I returned her gaze, and after several seconds, she dropped her eyes. \n\n\u201cWhat is your name, slave?\u201d I demanded.\n\n\u201cSlut,\u201d she whispered, and then hastily added, \u201cMaster.\u201d\n\n\u201cWhat is it?\u201d I asked again. \n\n\u201cSlut, Master,\u201d she replied, louder this time. \n\n\u201cVery good, slut,\u201d I praised her. \u201cNow, on your knees!\u201d\n\nThe blonde dropped to her knees, briefly looking up at me before she put her head down and stared at the floor. The concern I had tried to bury spread even wider through my mind as I stared at Jessi kneeling there before me, naked and renamed \u2018slut\u2019 at my command. I fought the urge to raise her to her feet and promise never use that word for her again. But I knew that she wanted this, and I knew that to do it for her, I had to step it up and play my part. \n\nI dropped the whip on the table and picked up the heavier collar. Unhooking the leash and leaving it on the table, I moved around behind the naked woman. I then commanded her to move her hair to the side, and when she complied, I put the collar around her neck and buckled it tightly in the back (I did make sure it was not too tight by slipping a finger between the collar and her neck). \n\n\u201cPut your head up,\u201d I told her as I walked back around so that I was standing in front of her again. Jessi did as she was told, and I was momentarily mesmerized by the sight of the slender, almost delicate blonde kneeling naked, a heavy back collar around her neck. My penis, which had been partially aroused since we had begun this little game, hardened completely, and I pondered abandoning the game so I could take her right there. I also noticed that my increased arousal did not go unnoticed by the woman at my feet \u2013 she stared at my erection, her lips parted and her breathing heavy.  \n\nBut instead of ravaging my new slave, I picked up the leash and reattached it to her collar. After grabbing the smaller pair of cuffs, I turned and walked toward my bedroom, tugging on the leash when it grew taught. My blonde slave girl dropped to all fours after the first tug, and crawled behind me after feeling a second. As much as I wanted to, I did not look back as I led her through the hall and into my room.   \n\nOnce we were in my room, I disconnected the leash and had my slave kneel up. I ordered her to hold out her wrists, and when she did so, I attached a leather cuff to each. I then hooked each cuff to the corresponding side ring on her collar, rendering her completely unable to use her arms. \n\nMoving closer to her, I grabbed her hair tight and positioned my erection in front of her face but a few inches beyond the reach of her lips. The blonde tried to lean forward, mouth open and tongue out, to get at my penis, but my grip on her hair prevented her from reaching her goal. Whimpering, the collared woman looked up at me, her eyes pleading. \n\n\u201cClose your mouth,\u201d I commanded. \n\nJessi immediately clamped her mouth shut. I pulled her head forward and rubbed my erect penis all over her face, including across her pouty lips. I could tell the young woman wanted to open her mouth and wrap her lips around me, but she did as she was told. \n\n\u201cIs your pussy wet, slut?\u201d I asked her. \n\n\u201cYes, Master,\u201d she moaned. \n\n\u201cDo you want your master to fuck it?\u201d I continued. \n\n\u201cYes, Master,\u201d she panted. \u201cPlease, Master.\u201d\n\nWithout another word, I turned and walked from the room, leaving Jessi kneeling on the floor, moaning. I wanted to leave her there alone, making her anticipate what was to come, but that was only part of my reason for leaving the bedroom. I had never used a whip on anyone before, and I wanted to experiment with how much force to use. I just did not want to do so in front of the young woman who was, at least for a little while, my slave. \n\nOnce I was back in the living room, I picked up the jeans I had been wearing when Jessi came over and pulled them on. I then picked up the whip. Holding out my left arm, I struck it with the whip with what I thought would be a fair amount of strength. I was surprised at how light it felt, however. After a few more tries, including one attempt that was definitely too hard, I thought I knew the right amount of force to use to deliver a lashing that would sting but would not hurt the young woman. \n\nWhen I walked back into my bedroom, Jessi was exactly where I had left her. As I approached her, I saw her eyes linger on the whip, but there did not seem to be a look of fear in those blue eyes\u2013 it seemed more like one of longing. I felt the rate of my pulse and my respiration increase, and then I was again standing in front of my kneeling slave. \n\nOn a whim, I held out the whip and told the blonde to kiss it. Never taking her burning eyes off of mine, she kissed and licked the whip. My erection, which had subsided somewhat while I was out of the room, returned full force, making a noticeable bulge in my jeans. \n\nStepping to her side, I put my hand on Jessi\u2019s bare back and pushed her forward until her torso was resting on the floor, her head turned to the side. She started to raise up here rear, as if getting in position for me to enter her pussy from behind, but I pushed her hips back down. I then ran my fingertips up and down her bare, flawless back, and as I did so, I felt the young blonde shiver under my touch. \n\n\u201cI am going to give you five lashes, slut,\u201d I informed the woman on the floor. \u201cThis way, you will know what will happen if you disobey me. Do you understand?\u201d\n\n\u201cYes, Master,\u201d she replied.\n\n\u201cCount the lashes, slave,\u201d I commanded as I landed the first strike on the skin of her smooth, white back. \n\n\u201cOne,\u201d Jessi grunted after her body jerked from the blow. I almost stopped right then, after that single stroke of the whip, but I pushed on. However, I did decide that I wanted it over with as soon as possible.\n\nTo expedite the process, I delivered the next three lashes with force equivalent to the first but in rapid succession. My blonde slave jerked and cried out the number with each of the lashes, but they did not seem to be really hurting her. However, as I pulled my arm back, ready to deliver the last of the five, I noticed that the young woman was trembling and moaning. I also saw that the pale, soft flesh of her back was streaked with reddening marks where the blades of the whip had hit her fair skin. I paused, unable to follow through with that last stroke of the whip, as my mind raced. \n\nPart of me wanted to make this last one harder than the rest, to really let her feel it so that the \u201cmessage\u201d was delivered and I would never have to do it again. Another part of me wanted to give her something light, a reward for taking the first four lashes so well. A third part wanted to end this whole game altogether and not hit her again. However, as I did when I had decided to pursue this game with the young woman in the first place, I pushed away my doubts and resolved to really put my best into my role. It was what I believed that Jessi wanted, after all. So, I put more power into the last stroke, but I did not realize until it hit her that I had underestimated the amount of force. \n\nThe blades of the whip landed on her already red back with a loud crack. Her creamy, delicate body jumped violently and she shrieked. I immediately dropped the whip and knelt down beside her as she began to sob. \n\n\u201cGod, I\u2019m sorry,\u201d I told her. \u201cJessi, honey, are you okay?\u201d\n\n\u201cF\u2026 f\u2026 f\u2026 five,\u201d the young blonde managed to stammer through her sobs. \n\n\u201cShit, don\u2019t worry about that,\u201d I said as I unhooked her wrists from the rings on the collar. \n\nJessi let her arms flop down in front of her, but otherwise she did not move, save for her body shaking every few seconds. She did not say anything else either, but I could tell her sobbing was lessening. I could not believe I had done this to her. I was sure at that point that we were done for the night. Brushing the blonde\u2019s soft hair aside, I pulled off the collar and tossed it aside. \n\n\u201cWhy\u2026 why did you do that?\u201d she asked weakly after I had removed the collar. \n\n\u201cI hurt you,\u201d I pointed out. \n\n\u201cIt\u2019s okay,\u201d she mumbled. \u201cI know\u2026 I know what to expect\u2026 if I\u2026 if I am\u2026 bad.\u201d\n\n\u201cNo, Jessi,\u201d I explained. \u201cWe are not doing this anymore.\u201d\n\n\u201cBut was so\u2026 so fucking hot,\u201d she panted. \u201cI am\u2026 I am\u2026 dripping. Check\u2026 check my\u2026 my pussy.\u201d\n\nInstead of doing as she asked, I stood, moved in front of her, bent over to take her hands, and drew her up so she was kneeling straight. I tried to pull her up to a standing position, but the young woman resisted, and I did not want to pull her arms out of socket in addition to hurting her with the whip. \n\nWhen I was able to get a good look at Jessi\u2019s face, I was even more convinced I had done the right thing in stopping our game. Streaks of mascara were drying on her face, evidence of her tears. \n\n\u201cI am not going to check your pussy,\u201d I informed her bluntly. \u201cWe do not need to do this.\u201d\n\nThe kneeling blonde stared up at me, and in those vivid blue eyes I saw disappointment, but maybe a hint of something else as well \u2013 relief.\n\n\u201cMaster, you slave \u2013 your slut \u2013 needs\u2026\u201d she started, but I put a finger to her lips to silence her. \n\n\u201cI know you wanted this, Jessi,\u201d I said, \u201cbut I just do not think this is right for us \u2013 not like this. If we do this, I think I might need to build up to it, maybe play around a bit first, rather than immediately jump in to a master/slave game.\u201d\n\n\u201cIt\u2019s no game,\u201d she countered, \u201cIt is something I have dreamed of, something I have wanted to experience.\u201d\n\n\u201cI think it would only ever be a game to me,\u201d I admitted. \u201cI could not \u2013 I will not \u2013 treat you this way in day-to-day reality.\u201d\n\n\u201cI\u2018m not asking for all the time, Mark,\u201d she clarified. \u201cI just want it to be real when we do it.\u201d\n\n\u201cReal?\u201d I asked. \n\nThe young woman closed her eyes, and then stood up. Moving right in front of me, she took my hands and looked deep into my eyes. \n\n\u201cIt solves our problem,\u201d she told me. \u201cWhen we want to be loving, we can be just that, and I think I can be okay with it, if I know there are other times when I will have no choice.\u201d\n\n\u201cNo choice?\u201d \n\n\u201cBecause I\u2019d be your slave. What you feel for me, or don\u2019t feel for me, wouldn\u2019t matter,\u201d she explained. \u201cI\u2019d have no choice, which means nothing to worry about. We could be as dirty and rough as you wanted, and I wouldn\u2019t worry about how you feel about me because I\u2019d have no choice but to do want you wanted.\u201d\n\n\u201cJessi, I am not sure that would really help,\u201d I contended, my mind uneasy at her tortured logic. \n\n\u201cIt would, Mark,\u201d she argued back. \u201cIt would. I\u2019d be okay with you loving me, and me loving you, because I\u2019d be your slut and be used like one if that is what you wanted as my master. There is no pressure that way.\u201d\n\nAs she further explained her plan to me, I heard desperation creep into Jessi\u2019s voice, and I noticed her rate of respiration increase. Afraid she was in the beginning stages of a panic attack, I decided to take action. \n\nI grabbed Jessi\u2019s slim waist, drew her naked body against my half-clothed one, and kissed her. At first the blonde did not respond, but then she put her arms around my neck and kissed me back. After the kiss, we stared into each other\u2019s eyes, and I smiled. A few seconds later, Jessi shook her head minutely and returned the smile. \n\n\u201cThis scares me more than a whipping,\u201d she whispered. \n\n\u201cWhat does,\u201d I asked, moving my face closer to hers so that our lips were no more than an inch or so apart. \n\n\u201cThat I feel this much for you,\u201d she admitted, and then we were kissing again.\n\nI slid my hands down to grasp her firm, shapely rear-end. After giving both cheeks a squeeze, I pulled my right hand back and gave the blonde\u2019s bottom a firm smack. Jessi jumped in my arms and broke our kiss. She stared up at me, confusion in her eyes. \n\n\u201cI don\u2019t mind being a little rough, or giving you some playful swats,\u201d I confessed with a wink, \u201cbut trying to just jump into being more \u2013 that was too much. As I said, let\u2019s build up to it and see how it goes.\u201d\n\n\u201cOkay,\u201d she conceded. \u201cBut you have to accept that sometimes what I feel may get to be too much for me. This is all easier if I just give myself to you and you treat me how you want.\u201d\n\n\u201cI am treating you how I want,\u201d I proclaimed, still holding her tight against me. \u201cI want to treat you like my lover.\u201d\n\n\u201cCan your lover sometimes be a slut?\u201d she asked, uncertainty radiating from her. \n\n\u201cI very much like it when she is,\u201d I said. \u201cAnd I also like it when we make love. The two things are not mutually exclusive.\u201d ",
        "\u201cWell, at least I know you still want me,\u201d the blonde said, moving her hand down between us and grabbing the renewed bulge in my jeans. \n\nEncouraged by the young woman\u2019s change in attitude, I did my own exploring, sliding my hand to her groin and then between her legs. \n\n\u201cI think we know you still want me too,\u201d I observed when I felt the wetness of her shaven pussy. \n\n\u201cFuck yes,\u201d she whispered. \n\n\u201cYou still have those cuffs on,\u201d I pointed out. \u201cLet\u2019s see if I can find a place to hook them to the bed, and then I will lick you until you scream.\u201d\n\nJess bit her bottom lip, nodded vigorously, and held up her hands to me. Taking one of them, I led her to my bed and sat her down on it. I then had her lie back and stretch her hands above her head. Next, I clipped the cuffs together and looked for something to which I could hook them. As I did not have a headboard, I did not really see any options until I realized that all I needed was something to tether the restraints to the bed frame.\n\nLeaving Jessi lying stretched out on my bed, I hurried to my closet and pulled out a belt. When I was back at the bed, I slipped the belt under the front crossbar on the frame and then over the link between the cuffs. When I buckled the belt, it formed a loop that connected the cuffs to the bed frame. The young blonde\u2019s arms were pulled down against the mattress more than I had thought they would be, but it did not seem to bother her. \n\n\u201cIs that okay?\u201d I asked.  \n\nThe now restrained woman nodded and whispered, \u201cYes.\u201d\n\nMoving around to the foot of my bed, I pushed her legs wide, opening up her smoothly shaven vulva. I pondered for a moment retrieving the ankle cuffs, but I was not sure whether I could figure out a way to hook them to the bed. So, I contented myself with just crawling between her legs and using my body to make sure she kept them spread. \n\nAs I used my fingers to separate her labia, I realized the bound woman was too far down the bed for me to fit comfortably up on it while I licked her, but too far up it for me to kneel at the foot of the bed and still reach her with my mouth and tongue. To alleviate the problem, I had Jessi scoot up a couple of feet so that her head was at the very top of the bed, resting on her cuffed wrists and between her bent elbows. This gave me room to be all the way on the bed comfortably, and it reduced the strain on her arms and shoulders as well. Unfortunately, after moving her up I became concerned that she might bang her head a bit on the wall, as she was only about an inch or so away from it. I would just have to hope that would not happen. \n\nReturning to between her legs, I began to slowly lick, kiss and nibble on her engorged labia. Before too long, Jessi was moaning and wiggling her hips. \n\n\u201cPlease lick my clit, Master,\u201d she begged, slipping back into her slave role. However, I was not too worried about it this time \u2013 I had no intention at that point of going beyond just restraining her, and so far that seemed to be something with which I was comfortable. \n\nSlowly, teasingly, I spread her lower lips, revealing her most sensitive of places. I brushed her clitoris lightly with my lips, and the bound blonde\u2019s hips bucked up as a low moan filled the air. \n\n\u201cYou have such a pretty little pussy,\u201d I told her, which elicited another moan and a wiggle. \n\n\u201cPlease, Master,\u201d she whined. \u201cPlease lick it.\u201d\n\nFiguring I had teased her enough, I attacked her clitoris with my tongue. As I did so, I reached a hand up and tightly squeezed one of her perfect breasts. Jessi grunted and thrust her hips up, mashing her pussy against my face. For my part, I kept licking her clit \u2013 first up and down, then side to side \u2013 and playing with her breasts with one hand while clamping the other on one slender thigh, holding it down. The young woman moaned and jerked against her restraint and my hand on her thigh as I relentlessly tongued her clit. Less than five minutes after I had started, the sexy blonde shuddered her way through her first orgasm. \n\nI did not give Jessi a chance to recover from that first climax, however. I continued licking her clit, but I moved the hand from her breasts down to her groin so I could slip two fingers into her tight, wet pussy. My other hand maintained its firm grasp on her right thigh. When my fingers penetrated her, Jessi gasped while thrusting and twisting her pelvis at the same time. \n\n\u201cFuck that feels good,\u201d she panted. \n\nI thought about chastising her for breaking out of her slave character, but I decided I would rather just concentrate on giving her pleasure. So as my tongue waggled against her clitoris, I started slamming my fingers in and out of her. I kept this up for a few more minutes, and then the restrained young woman was again in the throes of a climax. \n\nI gave her a reprieve this time, at least from my tongue; I kept the two fingers embedded deeply in her pussy, enjoying the spasms that gripped them in her wet warmth.  As I felt those spasm start to subside, I licked and kissed all around her clitoris, and soon the blonde was moaning and wiggling her hips again. \n\nTaking this to mean she was ready for more, I took her clit between my lips and sucked lightly on it. As I did so, I pulled the two fingers from her, which elicited what sounded like a disappointed groan. That groan changed to a yelp when I added a third finger and shoved them back inside. I gave her a few moments to get accustomed to this new sensation before I began moving those three fingers in and out of her. \n\nJessi gasped and moaned as I picked up speed with my fingers, and when I shoved them in hard while also sucking vigorously on her small, sensitive clit, she shrieked \u201cFUCK!\u201d and clenched her legs around me tightly, throwing off the hand that had been restraining her thigh. Seconds later, I felt her pussy spasm around my fingers again as her hips thrust up off the bed, her entire body rigid. This time, her climax lasted longer, and she went completely limp when it started to fall off. \n\nI pulled the three fingers that had been inside her out and reached up and smeared the juices from them on her partially open lips. Jessi moaned and then opened her mouth. I slipped the fingers into it, and she sucked and licked them clean. While she did this, I caressed her thigh and planted small kisses around her pussy. \n\n\u201cThat was fantastic, Mark,\u201d she murmured when I withdrew my fingers from her mouth. \n\n\u201cIt is not over yet,\u201d I told her, before shoving my tongue into her pussy, curling it up so I could thrust it in and out of her. \n\n\u201cOh fuck,\u201d the now hyper-aroused blonde moaned as she squirmed. \n\nWhen I had her panting again, I moved my tongue back up to her clit and again pushed two fingers inside of her. This time, instead of just sliding those fingers in and out of her, I searched for the angle that had driven her over the edge the week before. Within a minute or so of exploring, I found it again, and Jessi was squirming and bucking her hips each time I thrust my fingers inside of her at that perfect angle. Her moans deepened and grew hoarse, as they had when she had experienced multiple orgasms before. Knowing she was near the edge, I doubled my efforts with my tongue. \n\nAfter a particularly long and low moan, Jessi grunted loudly and shuddered violently. As I felt her pussy clamp down on my fingers tighter than I had ever felt it before, I thrust them all the way inside of her and pushed up against the upper wall of her vagina. While doing this, I continued to lick and suck on her clitoris unrelentingly as my young lover\u2019s body stiffened. Other than her ragged breathing, she was strangely silent.\n\nFor some time \u2013 it felt like minutes \u2013 I kept up the action with my tongue and the pressure with my fingers while Jessi\u2019s body remained completely rigid. Then, without any warning, her body jerked violently a couple of times and a loud scream burst from her lips. I immediately ceased licking her clitoris and withdrew my fingers as her slender body went limp. \n\nI did kiss and lick Jessi\u2019s wet and swollen labia as I teased her thighs with my fingers, tracing circular patterns on her smooth skin. However, there was no response at all from the young woman, not a moan, not a groan, not a single sound or any movement, save for the soft sound of her slowing respiration and the gentle rise and fall of her chest. \n\n\u201cJessi,\u201d I called softly, and when she did not react, I called her name again, a bit louder this time. Still, she did not respond. \n\nSitting up so that I had a better view of the blonde\u2019s face, I saw that her eyes were closed and her lips were slightly parted. She looked as if she were sleeping. I slipped from the end of the bed and walked around the side to release the belt that held her hands in place. When that was done, I shook her by her shoulder, calling her name as I did so. \n\nJessi stirred and a low moan escaped her lips, but she did not wake. I carefully reached under her head and unhooked the cuffs. As I pulled her arms down to her sides, I again called her name. This time the young woman groaned in response, but still she did not open her eyes. At that point, I started to worry. I had thought she was just lost in the afterglow of an intense orgasm, but now I was concerned that she had passed out. I sat down on the bed beside her. \n\n\u201cJessi, honey,\u201d I called louder as I shook her more vigorously. \u201cAre you okay?\u201d\n\n\u201cImokay,\u201d she slurred, her eyes still closed. \u201cWhatthefuckhappend?\u201d\n\n\u201cI think you passed out,\u201d I told her. \n\n\u201cFuck,\u201d she moaned, her voice stronger. \u201cI thought it was a myth.\u201d\n\n\u201cWhat did you think was a myth?\u201d I asked her. \n\nThe young woman stretched out on the bed before answering, \u201cPassing out from cumming.\u201d\n\n\u201cI have never seen it before,\u201d I admitted. \u201cIt was a little concerning.\u201d\n\n\u201cSorry,\u201d she murmured, turning to face me as her eyes finally opened. \n\n\u201cYou have nothing to be sorry about, Jessi,\u201d I assured her, as I brushed a few strands of damp blonde hair from her forehead. \u201dI just did not expect it.\u201d\n\n\u201cNeither did I, Mark,\u201d she smiled, as she reached out to caresses my face.  \u201cThat is six kinds. And fuck, six was\u2026 was\u2026 beyond\u2026 incredible.\u201d\n\n\u201cWhat happened?\u201d I inquired as I stood, removed my jeans, and then lay down beside the young woman. \n\nJessi scooted further down the bed so that her head was about even with my chest, then she rolled on her side, facing me before pulling me into a hug. We remained like that for some time, and I began to worry about getting an erection. I had lost what was left of mine when the blonde had passed out after her orgasm, but the feel of her pressed up against me was threatening to bring it back. However, even though I had not climaxed, at that moment I did not want to go beyond just holding each other \u2013 I did not think it would be in Jessi\u2019s best interest to do more just then.  \n\n\u201cSo what does my Master want me to do for him,\u201d Jessi asked after she had broken our embrace and leaned up on one elbow to look down at me. \u201cI think Master fucking his slave\u2019s face would be a great place to start, but it is not for a slave to tell her Master what to do.\u201d \n\n\u201cI think we should sleep on it, Jessi,\u201d I told her, which prompted a pout and narrowed eyes. \n\n\u201cBut Master should use his slave for his pleasure,\u201d the young blonde countered as she tried to stare me down. \n\n\u201cRight now,\u201d I snapped, \u2018\u2019your master wants you to sleep. I will fuck your face, and whatever else I want, when I want to do so.\u201d\n\nJessi\u2019s eyes widened at my words and my tone, then she smiled. \n\n\u201cI must do as my Master wishes,\u201d she replied, dropping her eyes; however, the smile remained on her lips. \n\n\u201cLay back down and turn over so your back is to me,\u201d I commanded her. \n\nJessi immediately complied. I then moved close behind her, my now semi-erect penis pressed against her derriere. As Jessi pushed her rear end back against me, I stroked her hair with one hand and reached around to grab one of her perfect breasts with the other. \n\nThe blonde moaned and then asked, \u201cIs Master sure he does not want to use his slave now?\u201d \n\n\u201cGo to sleep,\u201d I told her. \n\nJessi gave a disappointed moan, and though I could not see her pretty face, I could imagine that her small but sensuous lips were again formed into a pout. However, after a few moments, the young woman sighed and seemed to relax as I continued to stroke her soft hair. \n\nI think I had almost drifted off to sleep when I heard her whisper, \u201cI love you, Master.\u201d\n\nRousing up, I asked Jessi what she had said.\n\n\u201cNothing,\u201d she mumbled, her own voice heavy with sleep. \n \nWondering if those words had only been in my head, perhaps just a dream, I finally drifted off to sleep. \n\n***\n\nWhen I awoke, I could tell it was just beginning to turn light outside. At first, I did not realize what had roused me, but quite quickly it filtered through my brain that my erect penis was enveloped by something warm and wet. Looking down toward my groin, I saw Jessi\u2019s lips wrapped around my shaft as she sucked on it hard. When she saw my eyes were open, the sexy blonde winked at me. \n\nEnjoying the work of Jessi\u2019s expert mouth, I rolled from my side to my back, and she followed, never letting my erection pull from between her lips.  However, the change of positon caused me to realize how full my bladder was. I tried to put it out of my mind as Jessi moved so that she could lie down between my legs. Unfortunately, the need to urinate had become urgent, and I had to pull my young fellatrix off of me before she had swallowed my shaft all the way down. \n\n\u201cI have to go to the bathroom,\u201d I advised her as I got up off the bed. \n\nThe young blonde did not say a word as I hurried to the bathroom, so I was not aware she had followed me until after I flushed and turned around. Jessi stood in the doorway, naked of course, with an odd smile on her face. \n\n\u201cJessi, let\u2019s go back\u2026\u201d I started to say, but I trailed off as I watched her pull a wash cloth from the rack and wet it under the faucet. The pretty blonde then drop to her knees right in front of me. Looking up at me, she took my semi-hard penis in her hand and started cleaning it with the wet cloth. The water on the cloth was a little on the cool side, which kept me from becoming fully erect despite the fact that my lovely twenty-year-old lover had begun to stroke my shaft while she cleaned the head of it. \n\nWhen Jessi was satisfied I was clean, she tossed the cloth on the counter and wrapped her sensuous lips around my penis, sucking on the first couple inches of it while licking around the tip. In no time, my erection had fully returned, and my talented lover was starting to take more and more of my shaft into her wondrous mouth. \n\nReaching out with both hands, I ran my fingers through the young woman\u2019s soft blonde hair as she performed. I briefly thought about whether I should take over, as she had suggested the night before, and use her mouth for my pleasure. However, I was not sure I was really in the right mood for that, and I was very much enjoying her efforts to please me, so I continued to just stroke her hair as she sucked up and down my rigid manhood. \n\nAfter a couple minutes, Jessi pulled her head back, letting my penis free, and looked up at me questioningly. \n\n\u201cDo you want to fuck your slave\u2019s mouth, Master?\u201d Jessi asked. \u201cShould the slave fetch her collar?\u201d\n\n\u201cNo,\u201d I said as I reached down, grabbed her hands, and pulled her to her feet. \n\nThe young woman had a puzzled look on her face as I pulled her close and kissed her. \n\n\u201cMark,\u201d she whispered, \u201cDon\u2019t you want to\u2026\u201d\n\n\u201cNo I do not, Jessi,\u201d I cut her off. \u201cI want to make love to you.\u201d\n\nMy blonde lover\u2019s eyes widened slightly and her lips trembled. Realizing that she was probably starting to \u201cfeel too much,\u201d as she put it, I scooped her into my arms. Jessi, her eyes locked on mine in one of her characteristic stares, put her arms around my neck as I carried her from the bathroom and back into my bedroom, in front of me this time rather than slung over my shoulder. \n\nAs I lay her back on the bed, Jessi maintained eye contact with me, even as she scooted up the bed and spread her slender legs. Her shaven pussy glistened enticingly with her juices, so I leaned over and licked her labia, then her sensitive clit. Jessi moaned before hooking her hands in my hair and pulling me up toward her. When I was above her, looking down into her eyes, my penis poised to enter her warm pussy, the blonde smiled up at me and brushed a strand of hair from my forehead. \n\n\u201cTake me please,\u201d she begged, and I did as she asked, pushing my erection into her in one long, slow movement. \n\nThe young woman beneath me arched her back and moaned, and then when I was all the way inside of her, she wrapped her legs around my rear and held me deep. I was happy to stay that way for several heartbeats as I grew accustomed to the tightness of her warm pussy around me. Leaning down, I kissed my lover\u2019s sweet, pouty lips long and hard, even as I began to slowly move my shaft in and out of her clinging wetness. \n\n\u201cOh yes,\u201d she breathed. \u201cThat feels so good. Does it feel good to be inside of me?\u201d\n\nInstead of saying anything, I moved my head down and took one of her small, dusty pink nipples between my teeth, nibbling and pulling on it. The now gasping blonde grabbed my hair and held my face to her perfectly shaped breast. Widening my mouth, I took as much as I could of the creamy flesh of her breast into my mouth and bit down softly, even as I slowly, deliberately thrust in and out of her.\n\n\u201cMmmmmmmmmmmmmm,\u201d Jessi moaned, \u201cFuuuuu\u2026\u201d\n\nShe stopped midway through saying \u2018fuck,\u2019 and I looked up from her chest to see if everything was okay. I noticed that her eyes were closed and she was biting her lower lip, fairly hard from what I could tell. I realized then that  the young woman was trying not to say what she wanted to say, probably because she was worried it would not be appropriate for \u2018making love\u2019. \n\nPulling my mouth away from her now red nipple, I assured her, \u201cJessi \u2013 it is okay to talk dirty.\u201d\n\n\u201cFuck!\u201d she yelled, and I smiled before latching on to her other nipple. \n\n\u201cOh fuck,\u201d she groaned. \u201cFuck I love this!\u201d\n\nIt was all I could do to keep from chuckling, so I double my attention to her breast to make sure I did not do so. I could only imagine what Jessi would do if she thought I was laughing at her during sex. She probably would not let me explain that I found it endearing that she had not thought she should use dirty words if we were making love, but then after I told her it was okay, she immediately said \u201cfuck\u201d several times. \n\n\u201cFuuuuuuuuck,\u201d she gasped, letting go of my hair and wrapping her arms tightly around my torso. \n\n\u201cI\u2026 love you\u2026 licking\u2026 and biting\u2026 my\u2026 my tits,\u201d the breathless young woman panted.\n\nI felt an odd combination of relief and disappointment when my first thought, that my blonde lover was telling me that she loved me, was proven wrong as she managed to gasp out the rest of what she was saying. Sure, I knew we were likely headed down that path \u2013 Jessi had already spoken about it obliquely \u2013 but actually declaring it was still a step that I was not sure we were ready to take quite yet. And of course, there was also Jessika to consider. With a growl and a shake of my head, I forced down my concerns, as well as my thoughts about my brunette paramour, and concentrated on making Jessi feel good. \n\nStraightening up, I pulled out of Jessi\u2019s arms. Grabbing one of her slender thighs in each hand, I began to pick up seed while also increasing the force of my thrusts. The blonde opened her eyes, locked them on mine, and then ran her hands up my chest as I began to pound into her, making her modest bosom quiver with each impact of my groin against her.  \n\n\u201cFuck yes,\u201d she moaned. \u201cFuck me hard, Mark. Fuck me hard!\u201d\n\nI wanted to tease my now hopelessly aroused lover, so I abruptly stopped my thrusting, leaving just the head of my penis at the entrance to her sopping wet pussy. Jessi groaned and thrust her hips up at me. ",
        "\u201cFuck me,\u201d she pleaded, her bright blue eyes smoldering with lust. \n\n\u201cWhat is the magic word, Jessi?\u201d I inquired, grinning down at her. \n\n\u201cPlease fuck me!\u201d she implored, her voice desperate.\n\nI slammed into her, and a loud gasp that turned into a moan escaped her soft lips as she closed her eyes and arched her back, pushing her pelvis up against me. I stayed buried deep inside of her for several moments, and then I began to pound my rigid shaft in and out of her again. Jessi shuddered beneath me, but I did not think she had climaxed \u2013 I had not felt any spasms in her tight pussy. However, I was quite sure she was very close. So after a few more hard thrusts, I again stopped with just the tip of my penis inside of her.\n\nMuch more quickly this time, Jessi begged me to continue. I teased her a bit first, starting to move in, then pulling back, until her pleading became pitiful. Then I rammed myself inside of her, and like before, she gasped and shuddered but did not reach orgasm. Unfortunately, that hard thrust back into her had brought me close, and I knew I would have to pull out longer next time if I was going to keep this going. \n\n\u201cDon\u2019t you dare pull out of me again, Mark Warner,\u201d the blonde growled as I began thrusting, her now open eyes glaring up at me. \n\n\u201cDo you like having my hard cock in your pussy?\u201d I asked her even as I pulled back, this time completely out of her. \n\n\u201cFuck yes!\u201d she cried, and she began pushing her groin up, trying to capture the head of my rock hard penis in her needful pussy. \u201cPlease shove your cock in me. I need it in my cunt.\u201d\n\nI felt some surprise at her word choice \u2013 the only other time I could remember my young lover using that particular term was when she had discussed a fantasy scenario of having another woman with us as a way to arouse me. It was clear to me that I had teased her to the point she was desperate to climax. Taking pity on her, I thrust into her wet warmth, not as forcefully as the time before, but still with enough vigor to again cause her to gasp and close her eyes. \n\nI leaned down until our sweat slickened torsos were pressed together, and Jessi clamped her arms and legs around me as I established a steady, driving rhythm. As I moved in and out of her, I kissed her deeply, and her tongue played with mine even as she moaned and squirmed beneath me. Suddenly, the blonde pulled her mouth from mine, arched her neck, and let out a long, undulating moan. Her muscles grew rigid as her body tensed, and I felt her pussy spasm around me. \n\nAs Jessi\u2019s orgasm took her, I sped up my thrusting; I wanted to climax with her. However, I soon realized that I might have waited too long. Much to my consternation, I was no longer as close as I had been, so I slammed into her even faster and harder. When I did so, my young lover\u2019s body shook and she grunted with each thrust. Her tight, wet pussy continued to grip at me as I pumped in and out of her, and I wondered whether she was still in the throes of her climax. \n\nIt took only a few seconds of this for me to reach my own climax, and with one final, hard thrust, I buried myself inside of her and felt my penis twitch as several spurts of semen shot into her receptive pussy. I worked to catch my breath \u2013 both Jessi and I were panting quite hard by that point \u2013 and shuddered as I felt her continuing vaginal spasms clutch at my softening penis. Finally, Jessi\u2019s body relaxed, and her arms and legs slid from where they had been wrapped around me. \n\nI pushed myself up off of her, my arms bracing my upper body, as I looked down at her flushed face. As I did so, Jessi opened her eyes, smiled up at me, and released a deep sigh. She then ran her hands up and down my arms as we held each other\u2019s gaze. My penis was now completely flaccid, but I made no attempt to withdraw it from her. I was enjoying the closeness of that moment, and I was quite sure my blond lover was as well. \n\n\u201cSo, how was that,\u201d I asked her after we had stared at each other for several heartbeats.  \n\nJessi laughed, smiled wide, and reached up to run her hand along the side of my face before answering, \u201cAwesome.\u201d \n\n\u201cI thought you might like it,\u201d I told her. \n\n\u201cI did,\u201d she replied, then her look became serious as she continued, \u201cBut I thought you wanted to make love.\u201d\n\n\u201cWhy do you think that was not making love?\u201d I challenged her.\n\nThe young woman\u2019s eyes narrowed, and I could tell she was pondering my response. I was hoping she was starting to understand that there was not always a clear line between raw sex and making love.\n\n\u201cIt was pretty intense,\u201d she pointed out a few seconds later. \n\n\u201cBut making love can be intense,\u201d I countered. \u201cIt does not always have to be slow and gentle \u2013 that is just one way of doing it. It can be hard and raw; it can be playful; it can even be a bit rough. What matters in making love is that you are doing it because of the way you feel about the other person and because you want to make that person feel good. That is what separates it from mere sex.\u201d\n\n\u201cSo, was the pussy cat stuff we did earlier making love too,\u201d Jessi asked, and I would have laughed had she not been completely serious with the question. \n\n\u201cIf we want it to be,\u201d I answered. \u201cBut there are also times when two people who care about each other might want to just play or, well, fuck for nothing but the physical excitement of it. That is okay too. It does not change how they feel about each other, and it does not mean that sometimes they might want to make love rather than just have sex.\u201d\n\n\u201cAnd what about me being your slave?\u201d she whispered, and I saw doubt creep into her blue eyes. \u201cI want that because I\u2026 because of how I feel, and I want to give myself to you, to be yours, whatever you want.\u201d\n\n\u201cBut you also want that because it allows you to not worry about how or why I want you, and just concentrate on the fact that I do want you,\u201d I reminded her, paraphrasing what she had told me earlier. \n\nJessi looked away from me, and I could tell she was struggling with her thoughts. Afraid she would emotionally withdraw, I decided that I needed to get her mind on something else. So, I rolled off of her, my soft penis slipping from the warmth of her, and got up from the bed. \n\n\u201cI am going to fix breakfast. Are pancakes again okay?\u201d I asked her. \n\nJessi sat up in the bed, and for a moment her face had that blank look on it, the one that usually preceded her leaving or asking me to leave. I braced myself for her to announce she had to go, but instead she shook her head, looked me in the eye, and smiled. \n\n\u201cI would love some pancakes,\u201d she beamed. \n\n***\n\nI had the pancakes ready when Jessi came out of me bedroom. She was dressed as I was \u2013 knit shorts and a t-shirt \u2013 but somehow she made it look incredibly attractive. I have always known that I preferred women who wore less makeup, but with Jessi, I think that preference went a step further. I was beginning to understand that I found her to be her most alluring when she was at her most comfortable.  \n\n\u201cYour pancakes are ready, Jessi,\u201d I smiled, indicating the place I had set for her at the table. \n\n\u201cThanks, Mark,\u201d she smiled back as she sat at the table.  \n\nOver the next couple of hours, Jessi and I sat at my table and talked about many things. She told me about her job and her plans for the future. She worked for a finance company where she scanned old records into the computer and then checked for errors in the scanned data. She admitted it was dull work, but that she liked it because she could work at odd hours and did not really have to work with other people. She also told me that, in her spare time, she was working with some online acquaintances on creating a video game, and that her plan for her future was to earn a degree in computer science and be a game programmer.\n\nI told Jessi some about my marriage, and why it had ended. I explained that my ex-wife had pushed me to quit teaching full time so I could go to work for her father and her uncle in their marketing agency in order to make more money. I admitted to my young lover that I had held resentment toward my ex-wife because of that, and because she had discouraged my writing. I also admitted that my decision to take a job teaching full time again had been the beginning of the end of my marriage, and that I had known that particular outcome was likely when I had decided to make that change. \n\nWhen I was done talking about my marriage, Jessi asked, \u201cSo what kind of things did you write?\u201d\n\n\u201cMainly short stories, although I have a couple of novels partially written,\u201d I replied. \n\n\u201cBut what kind are they,\u201d she asked, and I realized she wanted to know the genre of my writing. \n\n\u201cSome general fiction and some horror, mainly,\u201d I told her. \u201cBut, I started out with science fiction\u2026\u201d\n\n\u201cI love science fiction,\u201d Jessi blurted out, and for the first time since we had started talking, I was on the receiving end of one of those overlong and disconcerting Jessi stares. \n\n\u201cI thought you did not like literature,\u201d I pointed out, remembering our first evening together, when she had told me that she was much more comfortable with math than other subjects.\n\n\u201cI like reading, especially science fiction,\u201d she replied. \u201cI don\u2019t like talking about what it means. It does not work out for me. But you know that.\u201d\n\nI nodded and then asked her, \u201cWhat else do you like to read, besides science fiction?\u201d \n\n\u201cComic books,\u201d she answered, looking down as her face colored. \n\n\u201cComic books can be quite interesting,\u201d I agreed, wanting to assure her that she had nothing to be embarrassed about. \u201cI have a friend at the college who teaches a class in which she uses a couple graphic novels. Anything else you read often?\u201d\n\n\u201cUm, dirty stories,\u201d she whispered, her face now bright red. \n\n\u201cOh, well, um, I see,\u201d I said, then added, \u201cI have never written any erotica.\u201d\n\n\u201cYou should, Mark,\u201d Jessi said earnestly, as she looked up and met my eyes again. \u201cYou certainly know what you are doing.\u201d\n\nIt was my turn to blush and look away, mumbling \u201cThanks,\u201d as I did so.  \n\nI was not sure why her comment embarrassed me, but it did. I had never considered myself particularly skilled as a lover, a topic on which I suspect my ex-wife and I would agree, but these last few weeks with Jessi, and Jessika as well, had been different. With both of my paramours, I seemed to have a sexual compatibility that was extraordinary, at least in my experience. \n\nJessi, who was not always the best at knowing what other people were feeling, seemed to realize I was uncomfortable, so she changed the subject. However, the new subject she chose was also a bit uncomfortable for me. \n\n\u201cDo you have any science fiction stories I could read?\u201d she asked. \n\nLooking at her expectant expression, I pondered how I would answer her. I had rarely let anyone else read my stories, other than my ex-wife, and she had been far from encouraging when I had let her. But, I knew Jessi had really put herself out there emotionally with me, and I decided I would do the same for her. \n\n\u201cThere is one I have been revising.\u201d I replied. \u201cI think it is almost where I want it to be.\u201d\n\n\u201cSo I can read it?\u201d she grinned, her blue eyes bright with anticipation. \n\n\u201cYes,\u201d I affirmed, even as a queasy feeling started to spread through my stomach. \u201cI will be right back.\u201d\n\nI went to my office, booted up my computer, and printed a copy of the short story. I also grabbed my e-reader so I could read something while I let Jessi read my story. I doubted I would be able to focus on anything else while she was reading it, but I needed something to do other than stare at her. \n\nWhen I brought the printed out story to Jessi, she beamed at me. Then for the next thirty minutes or so, I tried to read the novel that I had started reading the day before while waiting for Jessi to come over, but I could make little headway. I kept glancing up at the blonde to see how she was reacting to my story. Each time I looked, she appeared to be absorbed by it. \n\nI eventually gave up on my reading and went to my office, where I attempted to work on some new grammar exercises for use in the coming semester. After several false starts, I was finally able to immerse myself in my work. The first clue I had that another forty minutes had passed was Jessi standing in the doorway of my office, the printed pages of my story in her hand. \n\n\u201cI loved it, Mark,\u201d she grinned. \u201cIt was cool.\u201d\n\n\u201cI am glad you liked it,\u201d I told her as she walked across my office until she was standing in front of me. \u201cI wrote that one over twenty years ago\u2026\u201d\n\nMy voice trailed off as Jessi pulled her t-shirt over her head, revealing her modest but perfectly formed breasts. She tossed the shirt on my desk and then dropped to her knees in front of me. Smiling up at me, she pulled my suddenly hardening penis out of my shorts. \n\n\u201cThank you for letting me read it, Mark,\u201d she breathed as she stared into my eyes. \n\n\u201cYou do not have to\u2026\u201d I started, but Jessi cut me off. \n\n\u201cRemember what you said about doing something because of how you feel and because you want to make the other person feel good?\u201d she asked. \n\n\u201cYes,\u201d I affirmed. \n\n\u201cAnd you said that was making love, right?\u201d she pushed. \n\n\u201cYes,\u201d I again affirmed. \n\n\u201cThen this is making love, what I want to do for you right now,\u201d she reasoned. \u201cSo, please let me do it for you.\u201d\n\n\u201cOkay,\u201d I sighed as she wrapped her lips around the head of my now fully erect member and sucked and licked at that most sensitive part. \n\nMy young blonde fellatrix teased the tip of my shaft with her soft lips and active tongue for several minutes, by which time I was squirming in my chair. This slow, loving, intense performance was even more excruciatingly arousing then her licking had been when she had been pretending to be a cat. And just when I was at the point that I thought I could not stand a second more of such tortuous pleasure, Jessi slipped her lips from my penis and smiled at me as she rubbed the now slick shaft on her face. \n\n\u201cI love your cock, Mark,\u201d she purred. \u201cAnd I love sucking it.\u201d \n\n\u201cI love you sucking it,\u201d I admitted, thankful for the momentary relief but also wanting her to take it back between her soft lips.  \n\n\u201cThere is one thing I have been wanting to tell you, though,\u201d she continued, and I might have been worried had she not had a mischievous look on her elfin features. \u201cYou don\u2019t have to tell me when you are going to cum. Just cum when and where you want. I\u2019ll figure it out.\u201d\n\nNot waiting for an answer, the young woman started to take my penis back between her lips, then she stopped and clarified, \u201cIn fact, I don\u2019t want you to tell me first. I want it to be surprise.\u201d \n\n\u201cOkay,\u201d I moaned as she wrapped her lips around me and dove all the way down in one slow, continuous motion, not stopping until her nose was buried in the pubic hair above the root of my erection. \n\nThe feeling was pure bliss for me. My blonde lover was quite skilled at oral sex even when she did not deep throat me. When she did, however, it took the experience to a different level. Not even Jessika, who was probably a slightly better fellatrix absent deep throating, could compare to the full package of what Jessi could do. \n \nAs Jessi sucked up and down my entire shaft, her tongue always in motion against it, I felt my climax building inside of me. I did not want this fantastic experience to end, however, so I tried different techniques to make it last longer, including grabbing her hair and momentarily stopping her with just a couple of inches of my manhood in her mouth. But at best, I might have prolonged her performance by a few minutes before it became too much for me.  \n\nI almost warned Jessi that I was going to finish, but I held my tongue, as she had asked. My young lover was just starting down my shaft again, with maybe a little more than half my length inside her mouth, when I grabbed her head, humped my hips up at her, and flooded her mouth with semen. I must have caught her at just the wrong time, however, because the blonde\u2019s eyes went wide and she quickly pulled her mouth off of me. Several squirts of my semen landed on her face as she squeezed her eyes shut and coughed.\n\n\u201cGod, I am sorry, Jessi,\u201d I apologized. \n\nWanting to help her, I reached down and started using my fingers to clean her face, even as a line of semen trickled from the corner of her still open mouth. At my touch, Jessi opened her eyes, gabbed my hand, pulled it away from her face, and shook her head. She next took the two fingers that had started to wipe the semen off of her cheek and sucked them clean. When she was done with that, she used her agile tongue and her fingers to clean up what had leaked from her mouth when she coughed. \n\nThen, without a word, she pushed back from me and stood up, the lines of semen still on her face. Grabbing her t-shirt from where it had landed on my desk, the young woman carefully pulled it over her head, making sure that it did not smear the gooey substance. My surprise at her efforts to preserve the evidence of what we had done must have been written on my face, because Jessi redden after she looked at me. \n\n\u201cI want to let it dry there,\u201d she said sheepishly, dropping her eyes. \n\n\u201cWhy?\u201d I blurted out. \n\n\u201cI want to remember this the rest of the day,\u201d Jessi replied, looking back up, a grin spreading across her face.\n\nAnd then I understood. She was bolting again. \n\n\u201cYou do not have to leave,\u201d I told her as I reached out to take her hand. \n\nThe young woman clasped my hand in hers, squeezed it, and then drew me to her for a hug. After a few seconds, she pulled out of the hug, put both her hands on my cheeks, and stood up on her toes to kiss me. I must have looked like a complete idiot as I stood there and stared at her, my mouth open. And I have no problem admitting that I felt like one as well, considering I had no idea what was happening. \n\nLuckily, the lovely blonde helped me out by saying, \u201cI do. Have to leave, that is.  I am starting to feel too much, and I do not want to just run out like I have before. I want to leave feeling good about this, and about us.\u201d\n\n\u201cI understand,\u201d I assured her, and she gave my hand another squeeze. \n\nLess than ten minutes later, Jessi had all her stuff together (although she left both collars with me), and we were saying goodbye at my door. \n\n\u201cAre you sure you do not need a washcloth or towel?\u201d I asked, for at least the fourth time. \n\n\u201cI am sure, Mark,\u201d she assured me, and I could hear some annoyance seeping into her voice. \n\n\u201cI will quit asking,\u201d I said, admitting defeat. \n\n\u201cThank you,\u201d she smiled, and then she was in my arms and I was kissing her. \n\nWhen we finally broke apart, she beamed up at me and whispered, \u201cI am feeling pretty good about this. Thank you for understanding that I need to leave now.\u201d \n\n\u201cNo problem, honey,\u201d I responded, not catching the term of endearment before it left my mouth. \n\nThe young blonde stared at me just a couple of seconds too long, and then in a rush she said, \u201cThink about whether I could be enough for you \u2013 just me, no one else.\u201d \n\nWith that, she kissed my cheek before turning to walk to her big convertible, which was parked in my driveway. I waved to her as she got in the car, and she smiled and waved back. It felt good that our parting was much happier than it had ever been before, but it was also difficult to see her go, especially given her parting words. As I stood and watched her back out of my driveway and then drive down the street, the old car rumbling as it rolled away, I thought about what she had said, and I wondered what I was going to do. \n\nTO BE CONTINUED\u2026\n"
    ],
    "authorname": "Kveldulf",
    "tags": [
        "restraints",
        "collar",
        "slave",
        "slut",
        "cunnilingus",
        "blowjob",
        "role play",
        "fellatio",
        "teasing",
        "loving sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-tale-of-two-paramours-ch-09"
}