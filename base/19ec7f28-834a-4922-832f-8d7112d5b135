{
    "title": "Mikey and the Chickadee Ch. 12",
    "pages": [
        "Mikey and I sprawled together on his bed later that evening. It was dark outside, but not late. No longer apprehensive about arranging myself attentively toward him, I lay on my side while he rested on his back; my arm was slung loosely over his stomach. \n\n\"We don't last very long,\" he was saying. \"You know, when we do stuff.\" \n\n\"Does that bother you?\"\n\n\"No, not at all. It's normal, then?\" \n\n\"I definitely wouldn't be concerned about it. We're still extremely excitable around each other, I think.\"\n\n\"So, what, we'll probably last longer later on?\" \n\n\"Seems that way to me,\" I said. \"Once we get used to it.\"\n\nHe smiled faintly. \"Good thing we have all this time.\" \n\n\"Oh,\" I said. \"I guess...yeah, well I'm sure we'll still hang out, even after I move.\"\n\n\"Right, yeah, I was thinking that, too. Okay.\"\n\nI felt an immediate desire to continue with the thought, but Mikey changed the subject and it did not come up again. \n\nBecause I would be living out of town soon, Sunday-night dinners had taken on a new urgency among my mom's various machinations. The next evening I walked over in the rain and was fairly soaked by the time I arrived. \n\n\"Wyatt, where is your umbrella?\" she demanded. \n\n\"I don't know,\" I said. \"I'm not sure if I have one.\" I crossed the living room and sat with my back to the wood stove. \"I'll dry off here. It won't take long.\" I grinned at her. \"Feels nice.\" \n\n\"Help your dad out and tend to that if it gets cold,\" she said, stepping back toward the kitchen. \"Stephanie should be here soon. She probably hit traffic on the bridge. It's so unpredictable during the weekend.\" \n\nI sat alone for a few minutes, glancing through news stories and texts before initiating a system update on my phone. As I left it on the floor next to me to conduct its business, my dad came down the hallway from the bedroom. He had likely been napping, his common practice in preparation for a merciless workweek. He managed a team of freight shipment laborers at the main harbor and, in his mounting age, had finally escaped most of the backbreaking manual loading and unloading. Meanwhile my mom worked an early shift in midtown as a PA, at a hospital a couple miles north of Mikey's neighborhood. \n\n\"Wyatt,\" he said, sinking into his chair, \"put your old man's mind at ease. You're sure about your move?\"\n\n\"I'm sure,\" I said. \"It's official, anyway.\" \n\n\"You're feeling good about it?\"\n\n\"Yeah, I am,\" I said. \"I know it's the right thing for me.\"\n\n\"Well, that's what's important. You do what's right for you.\"\n\nI nodded. My mom had clearly done a number on him. \"What's going on at work?\"\n\n\"Same as ever. We've caught up on everything since the labor strike. Upper-management is still breathing down my neck. They've been doing that for the last twelve years, though. They'll do it until the day I'm done. It's not so hard to ignore, these days.\" \n\nI smiled. \"I wish I could ignore that kind of thing.\"\n\n\"With time, you'll learn,\" he said, and then heaved a booming laugh of a duration too long to match the humor in his statement, a characteristic that I had grown to love about him, if only since leaving home. \n\nI stood up and looked out the front window in time to see Stephanie's Camry pull up along the curb. She sprinted across the front yard in the rain and stamped her feet on the porch before opening the door. \n\n\"Hello, hello,\" she chanted upon entering. \"I'm getting over a cold so don't touch me.\" \n\n\"Stay away,\" came my mom's disembodied voice. \n\nStephanie kicked off her boots and unwound her scarf. \"Oh,\" she said, noting my position near the stove. \"That fire, my savior.\" She hurried over to stand next to me, bending a little to massage the backs of her thighs. \n\nI bumped my shoulder affectionately into hers. \n\n\"Knock me over, why don't you,\" she said. \n\n\"Mom, do you need help?\" I asked, projecting my voice toward the kitchen. \n\n\"Yes, Mom, we can help you,\" Stephanie added. \n\n\"No. Almost done.\"\n\n\"Want to watch something, Dad?\" she asked. \"You look like a zombie.\"\n\nMy dad sat with his feet flat on the floor, hands cupped over the ends of the chair arms, staring blankly out toward the television, which was not turned on. He snapped back to alertness and looked up. \"No thanks, Steph. Thinking about work. How was the drive?\"\n\n\"Not that bad,\" she said. \"Seems to go by faster when you're not in a hurry.\" \n\nHe smiled, acknowledging the sentiment. \"Did you get that serpentine belt on yet?\"\n\n\"No. I need someone to hold the tensioner loose while I take off the old one. I can't do both at once.\"\n\n\"I'll take a look after dinner,\" he said. \n\n\"I don't have the new belt with me, though. I left it at home.\"\n\n\"Alright, but it's got to get done soon. That old one isn't looking good and you don't want it to snap in traffic.\"\n\n\"I know, Dad. It's okay. I've got someone who can help me. I'll do it tomorrow.\"\n\nHer voice took on an odd quality as she said this, prompting me to ask, \"Who, exactly?\"\n\nShe grinned. \"None of your business.\"\n\n\"Oh my god, who?\"\n\n\"I work with him,\" she reasoned, as if that would dispel my curiosity. \n\n\"Don't let him screw anything up,\" my dad warned. \"Some guys just want to prove to you that they know their way around an engine. I promise you, they don't. Wyatt, are you listening?\"\n\n\"Yes. Be suspicious of helpful men. Got it.\"\n\nStephanie laughed. \n\n\"You little weasel,\" he said. Again came his booming laughter. \n\n\"Come eat,\" yelled my mom. \n\nI added a piece of wood to the fire and then trailed them to the dinner table. \n\n\"Curry,\" she said as we took our seats. \"There are bell peppers in it, and beef, and some other stuff. I left the meat in big pieces so that it can easily be left out if desired.\" She had directed this statement at no one in particular, but would not have said it were Stephanie not at the table.\n\n\"Thank you, Mother,\" she said. \n\n\"Stephanie's seeing someone new,\" I announced while I slipped some rice into my bowl.\n\n\"Oh my god, Wyatt,\" she whined. \"I am not. Give it up already.\" She did not look especially annoyed. \n\n\"Who is he?\" asked my mom.\n\n\"She's not saying,\" I explained. \"But they work together. I was able to fish that out of her.\"\n\n\"He took me out to dinner the other night. I think we both enjoyed it. That's it. That's what's happened outside of work.\"\n\n\"Whoa, hold on.\" I said. \"What's happened inside of work?\"\n\n\"Stop, Wyatt,\" she insisted. \n\n\"Wyatt,\" said my mom, \"You're so silly tonight. It makes me wonder what you're thinking about-or maybe whom. Yes, whom.\"\n\nMy mom did not often put her cleverness on display. Because of this, she sometimes caught me off guard, which was probably her plan all along. Apparently blind to such outcomes, I had not anticipated how this situation could turn on me. And more to the point, did Mikey actually have an observable effect on my behavior? \n\n\"Nothing,\" I said. \"I mean, no one.\" \n\nStephanie nearly choked on her water. \"Oh, wow. What a master of deceit. Since you've decided to make a spectacle out of my personal life, maybe I should point out how obvious it is that you're still hanging around that guy.\"\n\nMy mom clasped her hands together and drew in a long, elated breath. \"Oh, is it true? You promised you'd bring him by, Wyatt.\"\n\n\"I didn't promise,\" I said. \"I'll have to see. Anyway, it's not like it's going to last. There's nowhere for things to go. I'm moving. Or did everyone forget?\"\n\n\"No one forgot, Sweetie.\" \n\nI turned to my dad, who looked content but a little bored. \"That reminds me,\" I said. \"They'll pay for a moving van, so there's no need to get the old truck out again.\"\n\n\"Oh, I see. I was honestly looking forward to it,\" he said. \"See if they can just get you the cash for it. We'll use the truck and you can pocket the money.\"\n\nI nodded. \"Sounds good. I'll check with them.\" \n\nAs we continued to eat, Stephanie cast a deliberate smile in my direction; I knew it had all been in fun, but it felt oddly exonerating to see that such playfulness had brought her a similar satisfaction. \n\n\"Mom,\" I said eventually, \"how is work?\"\n\n\"It's tiring. I feel like I'm not enjoying it quite like a used to.\" \n\n\"Wow,\" I said, swallowing another bite. \"I didn't know you were feeling that way.\"\n\n\"It's nothing major. Some people have retired. There are a lot of new hires now. As for me, I'm stuck somewhere in the middle. There are so many young people on staff...it just doesn't have the same feel that it used to have.\" She smiled vaguely to herself. \"I used to be one of those young people. I guess I'm the only thing that's really changing. But that's how it goes, right?\" \n\n\"Mom,\" said Stephanie. \"If you're not enjoying it, you could always change careers. So many people are doing that now.\"\n\n\"That's what I told her,\" my dad muttered. \n\n\"I just want to wait until we're a little more secure,\" said my mom. \"We've still got a few years and then the mortgage is paid. Maybe then.\"\n\nMy dad looked down at his plate and shook his head, but did not say anything. \n\nI remained generally mindful that my parents had bankrolled my entire college experience, but moments like this brought the overwhelming significance of it all back to the forefront. I considered now that remaining steadfast in my career advancement had certainly been the more dutiful choice. I felt at once very good about this. \n\nAfter finishing our food we began to clean up. Stephanie coaxed my mom from the kitchen as I packed away leftovers. \n\n\"I find it hard to relax when I'm perfectly capable of pitching in,\" she lamented. \n\n\"No one's expecting you to relax,\" Stephanie said, guiding her to the couch. \"I'm just asking you to sit still for once in your life.\" \n\nWhen it was just the two of us alone in the kitchen, Stephanie said under her breath, \"Dad has told me recently that they're set to retire early. They have plenty of savings. I think mom is being too cautious.\"\n\nI thought this over for a moment before muttering in reply, \"Maybe she's just afraid to look for something different.\"\n\n\"I think that's exactly what it is.\" She scrubbed at a pot for a few more seconds and then set it in the sink. The edge of the counter was finished in curved white ceramic tiles, cracked and chipped in places, stained slightly from the battering deluge of time. Stephanie leaned against them now, peering out the small box-window which overlooked the backyard, bathing in the day's failing light. \"She thinks she still has to answer to people other than herself.\"\n\n\"Hmmm.\" I began loading plates into the dishwasher. \"People like who?\"\n\n\"Well, us, I guess. Dad. You and me. She can do literally anything she wants. I just want her to know how true that is. I want her to believe it.\"\n\n\"Have you told her?\" \n\n\"Not as plainly as that, but yeah, I think I've made my thoughts known.\"\n\n\"And what does she have to say about it?\"\n\n\"Not so much.\" Stephanie returned to her responsibilities in the sink. \"I think I need to approach it with her in a different way-and maybe with a little more delicacy. The way mom and I are with each other...I really don't know. She's just so...I don't know.\" She hauled the ancient green-enameled dutch oven over to the stovetop, where it was perched on a burner to dry. \"I just need to work on being more delicate.\" \n\nMy mom's life-a saga to my eyes, a true legend-was elusive, Delphian, something I felt I would never fully assemble in my mind so that it could be understood from its dawning until now. A cluster of concealed horrors she'd faced in her childhood (countable on one hand, according to her, but no less than unspeakable) made her experience into one with which my own could never be compared. I had concluded at some point in college that, although I could never know her completely, I would seek further understanding whenever a conversation lent itself. It was all I could do not to take her presence in my life for granted, an passivity of which I realized I had been recently quite guilty. \n\n\"Overall, though, do you think she is happy?\" I asked. \n\nStephanie's reply was short and not loud enough for me to hear, but her expression sufficiently conveyed her faint uncertainly. We had been speaking like stowaways, which in itself could be enough to elevate my mom's suspicion. \n\n\"Won't you need a car in Fern Hill?\" Stephanie asked in a plain voice. \"How will you come home to visit?\"\n\n\"I've thought about that a little. It's cheaper to live up there, but not enough for me to get anything nice.\" I laughed. \"It'll be something as old as I am, probably.\"\n\n\"You know Dad'll want you to get something Japanese. My neighbor is selling his Civic. It looks at least ten or fifteen years old. He's probably not asking too much.\"\n\n\"I can do without for a while. I need to save a little first.\"\n\n\"Mom and Dad helped out with mine,\" she said. \"Don't be afraid to ask.\"\n\n\"Yeah,\" I said. \"I know.\" \n\nOnce the kitchen had been restored to a general state of order, we joined my parents in the living room. Together they looked comprehensively tired, which prompted Stephanie to suggest skipping a movie. \n\n\"That's okay with me,\" said my dad. \"Wyatt, let's talk a little about your move. I assume you'll want everything from your apartment. Is there anything you'll need from storage?\"\n\n\"I don't think so.\"\n\n\"That Saturday-it's the 28th, right? I assume that's when you want to leave? Or maybe we can pack all day Saturday and leave Sunday morning.\"\n\n\"Sunday morning sounds more realistic.\"\n\n\"Do you know where you'll be living up there?\" asked my mom. \n\n\"Not yet.\"\n\n\"I don't think that's something you should put off, Wyatt.\"\n\n\"I'll start looking at places online. Otherwise the company has made arrangements with some agencies for fast-track leases. But I heard there are better deals if you look for them independently.\"\n\n\"Well, don't kill yourself over it,\" she said. \n\nWe discussed minor details for a while and then channel-surfed somewhat collectively, landing on an early episode of Friends. Before long my parents made their way toward their bedroom. Stephanie and I said goodnight to them and were soon left alone.\n\n\"Do you need to get going?\" she asked.\n\n\"Soon, I guess. Not yet.\"\n\nShe stood and went to the front door. \"It's really not that bad out here,\" she said, hanging onto the doorframe and leaning out into the night. \n\nWe situated ourselves on the porch swing, overlooking the front lawn. Stephanie had carried with her one of my mom's massive old quilts and we bundled ourselves tightly within it. \n\n\"I'm not going to catch your cold, am I?\"\n\n\"I really don't think you need to worry,\" she said. \"I just like scaring Mom.\"\n\nFor a minute or two we didn't talk. I listened to the faint roar of cars on the highway, sequestered, as if it were not the sound itself, but just the memory. The cold, damp air nuzzled against my cheeks. I turned to her. \"You're doing okay with everything?\"\n\n\"I feel happy,\" she said. \"I am happy. But I'm a little ambivalent about my situation with the new guy.\"\n\n\"So it is actually a situation?\"\n\n\"Yes,\" she said. \"It is. A new one, but a promising one. The problem is that I'm not ready for another situation. Or I don't want to be.\"\n\n\"You don't want to be?\"\n\nShe took her time responding. \"It's good to be alone for a while. Part of me wants it to last forever, but another part of me is scrambling every second to get back into something with someone. It's infuriating.\"\n\n\"It sounds like it.\"\n\nShe said little else about it, but I accepted that because she had shared this much with me, I owed her the same. Before I spoke, however, my phone buzzed in my pocket. Mikey had texted. \n\n\"I need to see you tonight, if possible,\" he wrote. \"I messed things up with Sophie. I don't know what to do.\"\n\n\"Sure,\" I replied. \"I'm at my parents' now. Can you pick me up? Do you remember how to get here?\"\n\nThere was a brief delay before his next text, during which I apologized to Stephanie. \"It's him. I think he's coming to pick me up. He's got a family thing he needs to talk about, I guess.\"\n\n\"Don't worry,\" she said. \"Do what you need to do.\"\n\nMikey's reply arrived. \"Not quite. Text me the address if that's okay. I couldn't stay in the house so I was out driving around Corbin. I'm not far. Sorry about the short notice.\"\n\nI replied, telling him not to be sorry, and ended with the address. I then turned to Stephanie. \"It's funny that he just texted me-Mikey, I mean. I was about to update you on all that.\"\n\n\"And?\" she beckoned. \n\n\"Well, I guess it kind of a similar situation. Even if my reasons for staying single are more external. You said things with this new guy are promising. I'm definitely feeling the same way.\"\n\nShe nodded. \"Do you know what you're going to do about that?\"\n\n\"No. No idea. But I can't change my plans for him. Not big plans like this. He's not out-in fact he's only barely out to himself. There's just...so much going on with that situation. But in another way it's like, nothing is happening.\"\n\nShe nodded. \n\n\"I'm sorry, I'm just tired. It's making me lazy about how I describe it.\"\n\n\"It's fine,\" she said. \"I think I mostly get the situation.\"\n\n\"On a more tangible note, I think he'll be here very soon. Would you like to meet him?\"\n\n\"Yes,\" she said quickly, as if she might miss her chance. \"He's comfortable with that?\"\n\n\"I believe he is.\"\n\nHis car rounded the corner in the next moment, as we began extricating ourselves from the confines of the blanket. I had imagined leading Stephanie out to the street so that they could meet, but instead his engine shut off after parking and he had strode, quickly but without urgency, across the lawn by the time we stood up. I stepped down off the porch and said, \"Mikey, this is my sister, Stephanie.\"\n\nHe reach out and shook her hand as they exchanged personal introductions. \"It's so good to meet you,\" he said. He stood back a little said to me, \"I'm sorry to come by so late. And to interrupt.\"\n\n\"Don't worry, Mikey.\"\n\n\"You're not interrupting anything. I need to go home soon, anyway,\" she explained. \"You two enjoy your night.\" At this, she flashed a sort of sideways, clandestine smile, which communicated much more to me, I was certain, than it did to Mikey. \n\nI hugged her goodbye and Mikey and I stepped across the yard to his car. We rode down to the next corner and he said, \"I really don't take it for granted that you're here for me tonight.\" \n\n\"I'm glad you texted me,\" I said. \"Please tell me what happened with Sophie, if you feel up to it.\"\n\nHe pulled out onto the uncrowded highway and accelerated to the limit more slowly than usual. \"She started asking about you. Just a few pointed questions, I guess. She asked if I felt attracted to you. It was so out of nowhere. She wasn't even trying to accuse me of anything, it's just...\" He trailed off. \n\nI remained quiet, lending him time to gather his thoughts. \n\n\"Anyway, I blew up at her,\" he said. \"I really fucked it up, Chickadee. I just denied everything. A big fucking wave of denial.\" \n\nI thought about suggesting that we find a place to park before continuing to talk, but the fingers of his right hand hooked casually, confidently over the stitched bottom rim of the wheel, as if his manner of conducting the vehicle did not answer at any level to his agitation.\n\n\"It just felt so...shitty.\" His chest heaved a little and a small breath fell from his lips. \n\n\"I'm so sorry,\" I said. \"Mikey, if she was rushing you in any way-\"\n\n\"She wasn't, though,\" he insisted. \"It was time to talk about it. Overdue, actually. I should have already brought it up. But hearing her say she'd always wondered about me...I just felt so hurt, somehow. It's as if she feels like I've been hiding this for so long. Does she think I'm someone who wants to hide who I am from the world?\"\n\n\"Hiding. That's what you said before. It isn't the right word.\"",
        "\"Then what is the right word?\"\n\n\"I don't know,\" I said quietly. \"But it's like, you didn't even know what the fuck you were hiding. You didn't understand it. Until recently, I don't think you really even believed it was true.\"\n\nMikey did not respond to this. \n\n\"It's so obvious how much respect she has for you,\" I said. \"She told me you're the best guy she knows. You might think she's passing some kind of judgement on you, but that's just not true.\" \n\n\"I know it doesn't make sense. It's just, if she's felt this way about me for so long, I wish she had brought it up a long time ago.\"\n\n\"Maybe she didn't feel like it was the right time. Maybe she thought it would be too soon.\"\n\nMikey sighed. \"Fuck. I guess it would have been. I don't know.\"\n\nWe didn't talk for a couple of minutes. Eventually I said, \"What do you think you'll do?\" \n\n\"I have to tell her what's going on with you and me. I owe it to her. And I am so disappointed with how I reacted. I need to apologize for that.\"\n\n\"The way you reacted,\" I said. \"Mikey, don't beat yourself up too much over that. She must know how difficult this is for you. Just cut yourself some slack, okay?\"\n\nAfter a pause he said, \"I pride myself in having my shit together. At this point, I don't feel like I do.\" \n\n\"It's okay. I promise you'll feel better soon. You're dealing with this. You've worked so hard to understand it.\" I took a breath and was met with that yet untouched, synthetic scent of his car's interior. \"My god, Mikey, you've come so far in the last few weeks, and your support group isn't exactly-well, it's just not what I had. You have your shit together more than I ever could hope to.\" \n\n\"Yeah,\" he said, mustering a laugh. \"You're not going to convince me of that.\" \n\nI shrugged. \"Fine, don't believe me, then.\" \n\n\"Fuck all of this,\" he said. A soft peak of mitigation had arisen in this voice. He turned up the stereo and then wiggled the shifter back and forth before selecting a lower gear. The car accelerated firmly and we roared west through the night, toward water. \n\n\"This song,\" I said. \"Have you listened to it a much?\"\n\n\"All the time, Chickadee. I wouldn't miss this one.\"\n\nIn the next moment we belted out the lyrics together: \"Life is a secret, death is a myth, love is a fraud, it's misunderstood, work is a sentence, family's a drag, this house is a trap.\"\n\nI glanced over to see that Mikey drove just over one hundred miles per hour. \"You maniac,\" I said.\n\n\"Sorry.\" The car slowed. \"It just happened.\"\n\n\"Where are you taking us, anyway?\"\n\n\"I'm not sure,\" he said. \"The levee, I guess, if we don't change direction now. This is Paradise Highway, right? Doesn't it dead-end there?\"\n\n\"It does.\"\n\n\"Is there any parking?\"\n\n\"There is.\" Still occupied by what we'd discussed, I thought a moment, touched his arm and said, \"Just so you know, she and I talked about it. About you maybe being attracted to me and all that. It felt weird not to tell you. I'm sorry I didn't say anything sooner.\" \n\nHe glanced at me and smiled a little crookedly. \"It's okay.\" He cleared his throat. \"I could have guessed. I did guess, I mean.\" \n\n\"She was so respectful of you. I promise she was.\"\n\n\"I know that.\" \n\nMinutes later we landed by default along the western levee, farther south than we'd previously journeyed, left the car behind and climbed a flight of concrete steps to the top. We still wore our coats, but the air flowing gradually in from sea lacked the biting chill that persisted inland. The ocean, past a ribbon of tall foliage and marshland, slept still tonight beneath cargo handlers and fishing workers, whose vessels emitted faint, scattered dots of light far across the water. Somehow they seemed more distant now than the stars, which shone overhead through a vacant atmosphere. \n\n\"There's a beach out there, at the water.\" I said. \"I remember, from when I was a kid. It's just a small patch of sand, after you walk between the bushes.\" \n\nHe followed me down an unofficial trail. The plants grew taller until soon we were deep among them. A pulsating breeze murmured between the branches and vines. \n\n\"Are you sure this is okay?\" came his low, hushed voice.\n\n\"Why wouldn't it be?\"\n\n\"No reason. Just a little creepy here. If you think it's okay, though...\"\n\nWithout thinking I reached back for his hand. He offered it to me without pause. As I led him down the rest of the trail I considered that he had never divulged to me this hint of fear or apprehension toward something so concrete, and that it made me want to pull him close, to squeeze him tight at his waist and to protect him from everything by which he had ever felt threatened. \n\nThe trail opened up suddenly onto the sand and Mikey appeared immediately back at ease. \"Fuck. This is beautiful.\" His shoes and socks leapt from his feet. \"The sand's still wet from the rain earlier. But it feels so nice.\" \n\nSo that I could feel what he felt, I joined him, and we stepped barefoot together over to where silty saltwater lapped at the tiny beach's edge. \n\n\"It's been forever since I've been in a place as peaceful as this,\" he told me. \n\n\"Me too.\" \n\n\"I said something awhile ago, about kissing. Do you remember that?\"\n\n\"Yes,\" I said. \"You won't kiss a guy. I know.\"\n\n\"I can't stand for you to think that somehow-\" He caught himself for a moment, then continued. \"I never want you to think you're not worth it to me. To try something new, I mean, even though it's somewhere I never thought I'd go.\" \n\nI guessed what he was indicating by this remark, but did not act. I waited instead for him to make the next move in case he had (unthinkably) meant something different. I didn't wait long.\n\nHe stepped toward me in the sand. Never before had he looked so tall. \"If I'm reading this wrong,\" he said, \"I mean, reading us wrong, what this is-you should tell me now.\"\n\nSomewhere far away, my feet froze in the wet grit, but I could not feel that now. With great effort I cobbled together a response. \"There's nothing to say, Mikey.\"\n\n\"Then I'm going to kiss you, Chickadee.\"\n\nI stepped into him and felt his arms surround me. His lips fell with immediacy against mine, and were much softer than I had expected. As the fine stubble of our upper-lips interlocked I shuddered slightly, releasing some small knot of doubt, discovering only in its parting that it had ever been there at all. Mikey cared for me in the same way I cared for him; whatever fixation was shared between us fell cleanly outside the realm of casual play. \n\nI ran my fingers down his cheek, feeling at first the course black whiskers below his sideburns, then a smoothness in the center where they did not grow, and then their return near his chin. Neither of us found cause to shave during the weekend and I did not resent the rawness it lent now to our embrace. \n\nMikey moved his hand against my cheek as well, felt, evidently, at my similar roughness and broke just barely away from me. Tender and feverishly warm, his lips still brushed agonizingly against mine as he said softly, \"The facial hair thing. For some reason I wasn't expecting that.\"\n\n\"Haven't ever kissed someone like me, huh?\"\n\n\"Not that I can recall.\" \n\n\"Are you okay with it?\" I asked.\n\nThe earthen dark of his eyes, never before so close to mine-as if our lashes would soon intermingle-reflected perfectly the half-pearl of a moon. I felt a tiny rush of his breath against my lips. \"You don't need to wonder about that.\"\n\nHe kissed me again, openhandedly feeling my neck and cheek with redoubled ardor and after a few seconds, our tongues met. I let his slip cautiously over mine and then, for a moment longer, we moved our hands over one another with passion, opening our mouths slightly, moaning softly in turn. \n\nHe broke away and held my hands. The moonlight lit a gap between us. He cleared his throat and said, \"I want to save something for another time.\"\n\nI did not know exactly what he meant by this, but didn't dwell on it. \n\nDuring the car ride back to my apartment I mentioned that my feet were still ice-cold inside of my shoes. \n\nHe sent the heat to the floor and said, \"Just so you know, I didn't plan to kiss you tonight. I only meant to tell you about Sophie.\" \n\n\"I didn't think you did.\"\n\n\"Okay,\" he said. \"Cool.\"\n\nI smiled to myself, listening to his music as it trickled through the speakers, and to a dull roar of wind blasting over the slick metal shell of the car as we hurried through the black."
    ],
    "authorname": "kidboise",
    "tags": [
        "gay",
        "gay male",
        "gay love",
        "gay fiction",
        "gay romance",
        "mm romance",
        "gay sex",
        "gay erotica",
        "coming of age",
        "gay asian"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/mikey-and-the-chickadee-ch-12"
}