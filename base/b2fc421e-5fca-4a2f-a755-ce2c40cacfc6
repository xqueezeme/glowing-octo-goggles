{
    "title": "ShyHairyGrl",
    "pages": [
        "From my early upbringing I was always taught that true beauty was natural. I was brought up in a Sikh household and my family believed in the teachings of the Guru Nanak. I had turned 18 and all my friends were using make up and hair removal products but my faith taught me to embrace my natural hair. I never cut the hair on my head or anywhere else.\n\nI had long hair that reached down to the middle of my back. I was really proud of my long hair and I often treated it with oil. \n\nMy other hair caused me self-esteem problems. I never saw a problem with it when I was in my own community but I had started University and that was when I began to meet other people. I was in a lecture when a boy kept looking over at me. His name was Tommy. He was a jock type. I was not used to getting attention from boys so I felt a little self-conscious at his looking at me. He then came up to me and said, \"Girls do not have a moustache.\"\n\nHe then went back to his friend and high fived him. I just teared up and ran back home. It was so mean and hurtful and it taught me how horrible people could be.\n\nI knew people did not see beauty in the same way as I did. The problem with natural beauty is that I had a monobrow, I had light hairs for my side burns and some fine hairs above my upper lip. That was only the hair that was visible. I usually wore long sleeves and long trousers to cover the hairs on my legs and arms. My body hair did not stop there and I had some fine hairs above my nipples and a line of hair between my breasts. Of course my vagina was really hair and there was a line of hair to my belly button.\n\nI was really hairy and I knew I would never find a man to want me with men like Tommy in the world. I went home that day and cried but I was not going to let the Tommy's of this world defeat me. Beauty was on the inside and I knew natural beauty was the most important thing. I returned the next day and resolutely ignored them.\n\nThat was in my first year of University. I was now in my final year and about to graduate. I had taken a job at a local bookshop as my parents believed in having a strong work ethic.\n\nMy relationship with sex was more complicated. I was a virgin but I was certainly not innocent. It was through my friends and cousins that I learned about sex and relationships.\n\nMy cousin Kiran would often come for sleepovers and she had already lost her virginity to her boyfriend. She would often say, \"Suki, you need to forget all this natural beauty nonsense. You have to take care of yourself or boys will never take an interest in you.\"\n\nShe had let her boyfriend make a video of her giving him a blowjob. I could not believe what I was watching. My friend was behaving like a slut and it lit a fire inside me. Once Kiran left I was obsessed with the video. I kept watching it. It was at that moment I knew I was straight and I loved the look of cocks.\n\nI wanted to be able to look pretty in the eyes of men but I could not disappoint my parents. They had brought me up a certain way and I did not want to hurt them.\n\nSo instead I went online to find pictures of cocks/dicks/knobs whatever you call them. That started my porn addiction.\n\nI was hooked from that first blowjob video to finding all the best adult video websites. I was forever grateful for the internet.\n\nIt was the internet that taught me that men loved hairy women but they were not hairy like me. They had hairy vaginas but they did not have hair everywhere like me. \n\nI was searching through a porn website when I saw a message at the bottom of the screen, \"Make your own videos and make money.\"\n\nInitially I thought nothing of it. If my parents caught me posting videos, they would literally kill me. But then again I saw a lot of amateur girls posting videos without showing their faces. Over the next few days I began to run the dilemma over and over again.\n\nEven while at work I would think about. I liked working in the bookshop as I could get lost in the stacks of books. I always loved to read and I found people to be nicer at bookshops.\n\nI was watching porn one night and I was getting really turned on. I thought I would film it just to see how it looked. I had the camera in one hand and I was fingering myself under my panties with my other hand.\n\nMy panties were soaked and you could see my thick bush through my panties and also creeping out of the side of my panties. I was still wearing my t shirt. I shut the camera after 20 seconds. I was so hot from making the video I watched it over and over fingering myself to orgasm several times.\n\nI had to post it. I set up an account with the name ShyHairyGrl and posted the video.\n\nThe next day I checked the view count on the video and it was 20. I could not believe 20 people had seen me finger myself. There were two comments;-\n\n\"I love that hairy cunt.\"\n\n\"You are a gorgeous thing. I want to fuck your big jungle.\"\n\nI masturbated at the thought of men using crude language about how they wanted to have sex with me. The thought of men wanking themselves silly over my video drove me crazy.\n\nI logged in after a few days and the video had up to 40 views with similar comments. But when I saw my personal messages I was shocked. The first few messages were dick pics which I appreciated but it did not really appeal to my intellectual side.\n\nI then opened a message that said;-\n\n\"My dick is still hard despite cumming three times to your video.\n\nI cannot believe how beautiful you are. I see the hair creeping up from your panties and I can only imagine how far it goes. I can see the hair on your arms and the top of your thighs. It is so rare to see a natural beauty that embraces her natural beauty. You are beautiful and I just wanted you to know that. \n\nI have an offer for you. I want to spend one hour on webcam with you a week and I can pay $500.\"\n\nHe seemed to notice so much about me from such a short clip. I liked the flattering tone in the message and I replied back;-\n\n\"How does that work?\"\n\nHe was online and he replied;-\n\n\"I will pay you $500 in advance into your bank account. We will then schedule a time to webcam over Skype.\"\n\nI thought about it but I was not sure;-\n\n\"I cannot show my face on webcam. What do you want to do on webcam? I am not a cam girl or anything professional.\"\n\nHe replied back straightaway;-\n\n\"I don't want a professional cam girl. I find your beauty enthralling and I just want to spend time with you to talk and explore fantasies. There is no expectation or pressure.\"\n\nI replied back;-\n\n\"Ok. When do you want to start?\"\n\nHe replied;-\n\n\"Tomorrow night at 9.00pm. My number is xxx. Text me your bank details and Skype ID.\"\n\nI text him the details and the next morning the money was in my account. I could not believe this was real.\n\nThat night I locked my bedroom door to ensure that I would not be interrupted. I moved my desk so that only a blank wall was behind me. I positioned the camera so that it was only showing me from the neck down. I was wearing a long sleeved shirt and pyjamas.\n\nI was so nervous and turned on at the same time. He came online at 9.00pm exactly and opened a chat with me.\n\nHe came on camera and he was wearing shorts and a t shirt. He was slightly fat from the angle of the camera. It almost put me at ease seeing he was not a typical jock type.\n\nIt was the first time I was interacting with a boy in a manner that was laden with my sexuality and my nerves were fraying.\n\nHe broke the ice, \"I just want to say you look really beautiful.\"\n\nI had to admit I blushed. I loved that he was complimentary but would he be so if he knew how I really looked.\n\nI said, \"You would not say that if you saw my face. Why did you want to webcam with me?\"\n\nHe said, \"I am intrigued by you. I created that account to contact you because I was so taken by your beauty and authenticity. Your video was special.\"\n\nI quickly went on the website and checked his account. True to his word he did create the account the day he messaged me.\n\nI did not reply and he asked, \"Have I said anything to upset you?\"\n\nI replied, \"No. I just wanted to check you were telling the truth.\"\n\nHe said, \"I would not lie to you.\"\n\nI was surprised by his manner, \"You don't know me. What do you hope to get out of this?\"\n\nHe said, \"I want us to just talk today and get to know each other.\"\n\nI said, \"You are a stranger on the internet. I cannot tell you anything.\"\n\nHe said, \"I will start. My name is Varun. I am 45. I work at an investment firm.\"\n\nHe was a lot older than I thought he would be. I thought about what I should reveal. I could not tell him my real name so I used my cousin's name and I did not want to tell him where I worked so I just said I was studying, \"My name is Kiran. I am 21. I am studying accountancy.\"\n\nHe said, \"Brains as well as beauty. I never pictured you as a Kiran. Can I ask something of you?\"\n\nI nervously replied, \"What do you want to ask?\"\n\nHe asked, \"Can you pull up your sleeves to your elbows?\"\n\nIn the video I had unintentionally revealed one of my arms and he had noticed whereas all the others only focused on my panties. This would be the first time I would reveal my hairy arms to another male. I had trepidations, if he turned out to be another Tommy it would ruin my confidence for good.\n\nThere was something in his tone that seemed sincere and I decided to take the plunge. He was paying for my time after all. I rolled back the sleeve on my right arm and then on my left arm.\n\nI could hear his sharp intake of breath, was this disgust and shock or something else? \n\nHe said, \"You have the most beautiful arms I have ever seen in my life. You are so beautiful. You are the most beautiful thing I have ever seen.\"\n\nI could feel the hairs on my arms raise as I heard his compliments. Did he really admire me for who I was or was this another cruel prank?\n\nHe added, \"Full disclosure on my part. My dick is solid as a rock right now.\"\n\nI could see a bulge in his shorts but I still said, \"I do not believe you.\"\n\nHe immediately dropped his shorts and revealed his hard dick, \"Do you believe me now?\"\n\nI giggled at the sight of his erect dick filling the screen. A dick that was hard for me, \"Yes I do now. Why does it excite you?\"\n\nHe said, \"You are a natural beauty. I have one further request?\"\n\nI was almost eager now to hear his request, \"Yes. What is it?\"\n\nHe asked nervously, \"I want you to lift your shirt until your hair ends.\"\n\nI was still wearing my pyjamas so it would only be my stomach upwards. I was skinny and had a flat stomach but my breasts were only a b cup. This also made question my desirability.\n\nThe hair from my vagina stopped at my belly button. So I lifted my shirt to just above my belly button. He seemed in awe at seeing this. The most intriguing thing I found was that I saw precum precipitate from his dick at the sight of my hair.\n\nHe said, \"You are a gem. You are so beautiful and stunning. I need to ask one more thing? Our time is almost up.\"\n\nIt had been 50 minutes and the time had passed so quickly.\n\nHe asked, \"Can I see how long your hair?\"\n\nThis took me by surprise. I was sure there would be something sexual in his request to see my breasts or vagina but he took me by surprise. I was proud of my hair and I was secretly pleased to have the opportunity to show off my hair.\n\nI got up out of my seat and turned around so he could see my hair.\n\nHe said, \"You truly are a beauty. Your boyfriend must be so lucky.\"\n\nI came back to the screen and let my hair fall down in front. I said, \"I don't have a boyfriend. No one thinks I am a beauty.\"\n\nHe said, \"You truly are a beauty. You have a gorgeous ass too. Time is now up. Same time next week?\"\n\nHis comment on my backside made me smile and I found myself disappointed to be parting.\n\nI furiously fingered myself after the conversation ended. I normally masturbated to porn but the conversation with Suresh had turned me on so much that I had to masturbate immediately. A part of me wished he had asked me to go that far but I was also nervous and relieved that there was no pressure.\n\nI eagerly anticipated for the next session between us. I felt my confidence grow during the week, the fact that a man found my quirks exciting and was not ashamed to show it made me begin to believe in my own desirability.\n\nThe next week I was slightly less nervous. I wore a short sleeve shirt. I wanted to show my arms to him. I still wore my pyjamas underneath. He was only wearing boxers and a vest.\n\nHe immediately commented, \"I am so pleased to see your arms. They are so beautiful when revealed. You are a little diamond.\"\n\nHe made me blush so hard. We continued to talk and he asked about my degree. I told him I was in my final year and almost done. He talked about his work and that he had never married. He was from an Indian background so I found it surprising that he had never married. He said he never connected with anyone before and he never wanted to get to the stage where he thought about marriage.\n\nWe were connecting on more than a sexual level but then he asked, \"I don't know if this might be too much but can you take your pyjamas off so I can see your legs.\"\n\nI had been feeling the heat between my legs since the start of the conversation and I wanted to show him more. I slowly lowered my pyjamas to reveal my legs to him.\n\nHe commented, \"They are so beautiful and sexy. I love how beautiful you are.\"\n\nHis boxers had a spot where they were clearly soaking up the precum from dick, \"Please show me if it made you hard.\"\n\nHe lowered his boxers, \"Anything for my queen.\"\n\nHis dick came into view and I felt my own pussy quiver with excitement.\n\nHe asked, \"Lift your feet onto the seat so that I can see them\"\n\nIt was an adjustment but I managed to tuck my knees into me and showed my feet. He said, \"You are a true beauty. You are worthy of worship.\"\n\nHis compliments seemed to be getting more extravagant with everything I showed and it only caused my excitement to rise. I could feel my panties get wet and the heat was rising.\n\nHe asked, \"May I ask you to consider opening your legs. I just want to see as much of you as possible. I am enthralled by your beauty.\"\n\nMy legs were tightly together. I was loosening up but there was still a nervous tension at talking to a man in this sexual way. I loved his polite manner. He was paying for my time and he could do whatever he wanted but my feelings seemed to matter to him.\n\nI gently opened my legs and my plain white cotton panties came into view. There was a clear wet spot on them and he would now be aware of the extent of my aroused state. My hair was sticking out of the side of the panties. Opening my legs in this manner for a man was really exciting me.\n\nHe then asked, \"Stop me if this is too much but please slide down your panties. I want to see your womanhood.\"\n\nI bit my lip. I knew this was going far but a part of me wanted it to go further. I was so excited that I needed to finger myself but I was stopping myself almost only feeling compelled when he asked me to do it. Would I say no to him?\n\nI slid down my panties and opened my legs for him. I was really hairy between my legs. I had never shaved but I kept it clean and washed it regularly. He said, \"You are simply magnificent. Words can not describe your beauty. I love how your hair is glistening with your excitement. I am unable to control myself any further. Do you want to masturbate for me?\"\n\nI softly replied, \"Yes.\"\n\nHe began stroking his wet dick. I reached down between my legs and stroked the hair between my legs. I opened my lips for him and began rubbing my clit. As I opened my lips, I heard him take a sharp intake of breath. I now knew that was a sign of his excitement.\n\nI begin to finger myself and I feel myself on the brink of an orgasm so soon. The whole situation had excited me beyond belief. Without thinking I lifted my shirt with my friend and began tweaking a nipple between my forefinger and thumb. As my breasts came into view I heard him groan, \"Oh. Your breasts are so beautiful. I can't control it.\"\n\nHis dick jerked and shot his cum everywhere. My orgasm followed within seconds. I was spent on the chair and realised the time. We had been talking for almost four hours.\n\nHe apologise for taking up so much of my time and we agreed to do this next week.\n\nThe next day he sent me a text apologising again and said he would pay me. I wondered about our relationship. Was I only a sex object that he paid for the use of or was there more between us?\n\nOur conversations were not as sexual as I expected and there seemed to be something deeper but then why did he feel the need to continue paying me.\n\nI found myself thinking about him a lot more during my normal days at work or University. I would recount my week so that I could discuss it with him when we talked. I looked forward to our talks but I needed to know his intentions.\n\nThe next time we talked we just started talking normally. He would talk about his high pressure work and the intricacies of his employers and colleagues. I talked about my studies and what had happened during my week. I did not like mentioning my work as I felt it would be too easy to find who I am and expose me.\n\nI then asked, \"Varun why do you still pay me to talk to you? I just like talking to you.\"\n\nHe explained, \"I wanted your attention and I did not know how to get it. I like talking to you and if I am honest I am in love with you.\"\n\nThat took me by surprise. He had not seen what I look like, \"You don't know what I look like.\"\n\nHe replied, \"I know the beauty of your body. I love you for you. I see something more than physical inside you. I feel a connection with you. I understand you. I want more than 1 hour a week. But what I like about this is that I have your undivided attention.\"\n\nHe seemed to be feeling what I was and I just said, \"I think I am falling in love with you.\"\n\nI disconnected the Skype call as the conversation was becoming too intense for me. \n\nHe text me;-\n\n\"I am sorry if I upset you. All week I think about talking to you for our time. You are the only one on my mind. I will never break your heart. I want to be honest with you and let you know what I look like.\"\n\nHe sent me a picture. He looked really charming and it made me smile knowing what he looked like.\n\nBut I had lied to him about my name and I kept things from him. I replied back;-\n\n\"I need some time to think. I have never felt these emotions before and I need to understand how I feel. I promise I will be back next week at our time and I will tell you how I feel.\"\n\nHe promised to wait for me. My week was normal but I could not stop myself from thinking about him.\n\nI was at work and putting some books back on a shelf when I was interrupted by a customer. He said, \"Hello young lady. I am looking for books by an author, Arundhati Roy.\"\n\nThis was actually one of my favourite authors and I knew exactly where they were. I said, \"They will be in the foreign authors section which is in the far corner.\"\n\nAs I turned to point him, I was shocked still by seeing him. I had only seen a picture but I was certain I was looking at Varun and I muttered, \"Varun.\" He looked at me strangely and then a realisation came over him but then he looked at my name tag and he seemed more confused. He sounded unsure and confused, \"Kiran?\"\n\nI excused myself and made a quick exit. I had mentioned to Varun that Roy was my favourite author and I liked that I had this influence on him.\n\nBut now I had to face him and tell him the truth about the lies that I had kept from him.\n\nHe was online at our scheduled time and I opened the chat with him.\n\nThere was an awkward silence. I then broke the silence, \"I need to explain something. My name is not Kiran. It is Suki. I work at the bookshop you saw me.\"\n\nHe was silent for a couple of minutes and the tension was killing me. I was falling in love with him and I had now ruined it all.",
        "He finally said, \"You shouldn't have lied to me. But I understand your reasons.\"\n\nI was so pleased to hear from him. He then added, \"You have a really pretty face.\"\n\nThat made me smile. I noticed the camera was pointing at my body still and I adjusted it so that it was pointing at my upper body and face.\n\nI said, \"I have nothing to hide from you now.\"\n\nHe then asked, \"Take everything off and slowly strip for me. I want to see everything so there is nothing hidden from me.\" \n\nI was nervous at having to show everything. This was getting so intense with Varun. But I had to take this step after I had already given Varun a reason not to trust him. \n\nI stood up and pushed my seat back, \"Can you see me?\"\n\nHe nodded his head. I clutched at the bottom of my t shirts as my nerves built up.\n\nHe did not say anything and waited expectantly. I had to take the plunge or I was never going to do it. I lifted my shirt slowly bringing my body into view. I could see his eyes fixed on the screen.\n\nI lifted it over my head and dropped it to the side. I reached behind to unhook my bra when he stopped me, \"Stop for a second. I want you to lift your arms above your head and clasp your hands together.\"\n\nI did as he ordered. The power dynamic had shifted between us and he had more control over me now. Was this love?\n\nHe breathed deeply as he said, \"You have to most beautiful armpits. I would love to lick them as you stand in that pose.\"\n\nThat sent a shiver down my back and I could feel real heat between my legs as I imagined him doing that.\n\nI held the pose for a couple of minutes when he said, \"Now take off your bra.\"\n\nI moved my hands behind my back to unhook my bra. My nerves and my aroused state were causing me to struggle with unhooking the bra. I managed to unhook it and let it fall to the floor. He was looking at me intensely. I could feel his eyes burn into my body, \"I will lick you between your breasts where those fine hairs rest. I will kiss your breasts and take a nipple into my mouth, one at a time. I will suck on them one at a time. I will lick the hairs above your nipples and then take each nipple into my mouth and suck on it deeply.\"\n\nHis description of what he wanted to do to my body was driving me crazy. I was lusting after his cock but he was still fully clothed.\n\nHe then pulled me out of my lusty daze, \"Take off your pajamas. Leave your socks and panties.\"\n\nI was wearing small pink socks. I hooked my thumbs into the side of my pyjamas and pulled them down. I knew my panties were damp and as they were plain white cotton panties they were made almost see through by the wetness. I stepped out of the pyjamas and I stood waiting for his approval.\n\nHis eyes were taking my body in, \"I want to kiss every part of your legs. Your legs are so sexy that I want to adore every part of them. I will kiss all the way up your thighs. Once I get to your panties, I will lick the hairs around the outside of your panties. I will kiss and lick your belly button. I will lick and kiss your hair down from your belly button to the top of your panties. I will kiss your pussy through your panties. I will lick it through your panties.\"\n\nHe was driving me crazy and I could not control myself. I reached down between my legs and stroked my pussy. He quickly interjected, \"Stop. Be patient baby. Now sit on the bed and slowly roll off your socks showing your pretty little feet.\"\n\nI sat on the bed and lifted my feet bed and slowly rolled off each sock. His eyes were focused on my body, taking everything in, \"I want to kiss your precious feet. I want to suck on your beautiful toes. I want to wrap your feet around my cock and jerk off my cock.\"\n\nWas there a party that he did not want to worship? I so desperately wanted him here to worship at my body.\n\nHe then said, \"I want you to face away from the camera and bend over while slowly sliding down your panties.\"\n\nHe wanted me in ways that I only dreamed of. I bent over and slowly slid down my panties. I could see him taking me in as I slid it down.\n\nHe ordered as my panties were between my ankles, \"Now spread your ass cheeks.\"\n\nI was exposing myself in ways that I could not dream of. I never thought about anal sex or anyone being interested in my ass but Varun wanted to see everything.\n\nI spread my ass cheeks for him. I could feel my juices trickle down my thigh. My exposed position was causing me to get even more turned on.\n\n\"I love your ass. I love the little hairs around your asshole. I want to eat your ass. I want to tongue fuck your asshole. I want to get wet and ready for my cock,\" his words were turning me on so much. I needed to cum. A need was growing inside of me.\n\nHe then ordered, \"Now sit down on the bed and open your legs wide for me.\"\n\nI sat on the bed and spread my legs for him. I was exposed in every way and I truly was not hiding anything from him.\n\nHe then ordered, \"Use your fingers to spread your cunt lips.\"\n\nI was desperate to cum. It was taking all of my will power to stop myself from fingering myself.\n\nI opened my lips for him. I held the pose for a couple of minutes. He stood up and began to undress.\n\nHe sat down naked and was stroking his hard cock. He then asked, \"Do you want to cum?\"\n\nI nodded, \"Please Sir. I really need to cum.\"\n\nHe then ordered, \"Finger yourself but you can only cum when I allow it.\"\n\nI was relieved to touch myself but I was hyper sensitive from the strip tease and I felt a desperate need to cum. I built a slow rhythm trying to prolong my orgasm as I watched him furiously stroke his dick.\n\nI moaned, \"I am so close Daddy. Can I cum?\"\n\nThat was a strange thing to call him but it felt right in my heightened state. He was taking my body as he kept on stroking his juicy cock. I needed it inside of me.\n\nI was waiting for marriage before losing my virginity but in this moment I would do anything to have that hard dick inside me.\n\nHe grunted louder and I could sense him getting closer. I willed his cock to shoot towards me.\n\nHe finally said, \"Cum with me.\"\n\nI fingered myself hard and fast pushing me over the edge. The teasing and holding off caused me to squirt. I could not believe what was coming out of me. \n\nI collapsed on the bed trying to regain my breath. It was such an intense orgasm. I had never felt anything like it before. I had surrendered control and I reaped the benefits.\n\nHe then called my name, \"Suki, I love your name.\"\n\nI liked hearing him say my name. I never enjoyed pretending to be Kiran.\n\nHe then said, \"I love everything about you. When are you next working?\"\n\nMy mind went blank for a moment but then it came to me, \"I am working tomorrow. Why?\"\n\nHe said, \"I will come by tomorrow. I want you to wear a skirt tomorrow. I will see you tomorrow.\"\n\nHe then cut the connection.\n\nI was thrilled by the idea of seeing him tomorrow. I was also nervous despite my overt sexuality over the webcam. I was unsure if I could be the same in person as I was still a virgin and inexperienced.\n\nThe next day I dressed carefully. I was wearing the uniform red and white striped blouse. I only had one skirt and it was a long skirt that reached my ankles.\n\nI knew it was conservative and it was different to the persona he was used to.\n\nI was nervous at work as I was waiting for him to attend but I had not seen him. It was getting to the end of my shift and I was putting books back on the shelf that had been taken down. I was on the third step of the step ladder when I heard a familiar voice, \"I have been watching you all evening. You look so much more beautiful in person. You have amazing pretty eyes, beautiful skin and the perfect hair.\"\n\nI was initially shocked by his sudden presence but upon hearing him I suddenly relaxed. His voice was just above a whisper so only I could hear him. I was about to look down but he stopped me, \"Keep placing the books. Just carry on as normal. I don't want to alert your colleagues or the remaining customers.\"\n\nHe then slid his hand under my skirt startling me. My breathing was elevated and I tried to keep it under control. It was the first time a man was touching me. His hand was gently stroking my legs just above my ankle but below my knee. The hairs on the back of my neck were standing up as his touch was sending sensations through my body.\n\n\"Your legs feel so sexy. I want to take off your skirt send lick them up and down.\" This caused me to bite my lip. I was at work and only metres away from my boss.\n\nHis hands began to reach further up my leg and he was slowly feeling the inside of my thighs. His touch was heavenly and I wanted more.\n\nI glanced down at him and he was pretending to read a book with one hand while his other hand was under my skirt. He was dressed in a suit and tie and to any passing person he would seem like just an ordinary customer.\n\nHis hand was mere millimetres away from my virgin pussy. He seemed to be intent on touching every part of my legs, \"I can feel your heat from here.\"\n\nMy aroused state was obvious to him. He continued his touching of my legs. He then moved his hands to the outline of my panties. He was caressing the hair around the outside of my panties and I was struggling to keep my composure.\n\nHis hand was covered by my skirt but I was nervous at being discovered in this compromising position.\n\nHis hand glided over my panties and his fingers were slowly moving over the outline of my pussy lips. My body was on fire and I knew he would be able to feel the dampness of my panties. I was so wet for him \n\nHe was slowly rubbing my pussy as I got wetter and wetter for him. I had to bite my hand to stop myself from moaning out loud. He was driving me crazy with his touching.\n\nHe then slid my panties to the side send began to stroke the hair on my pussy. It felt so good but I needed more. He was slowly rubbing my lips with his fingers soaking wet with my juices. I was filling with a real need to cum. I needed him inside of me.\n\nHe gently began flicking my clit with his thumb as he used his fingers to rub my lips.\n\nI whispered, \"Please. Inside me. I need it inside of me.\"\n\nHe then began to slide a finger inside. I was so close. I needed to cum so much. I could feel my wetness trickle down my leg. \n\nHe slid two fingers inside my slick wet cunt and I felt an ecstasy begin to take over.\n\nHe had a slow rhythm which kept me on edge. I looked down and there was a pool of my juices on the step of the ladder where my feet were. I needed to cum before I was caught and fired.\n\nHe then pressed against my clit hard and finger fucked me faster. It took two strokes of his fingers to push me over the edge. I bit my arms so hard that I left teeth marks.\n\nHe helped down from the ladder and kissed me deeply before declaring, \"I love you.\""
    ],
    "authorname": "MohanSingh",
    "tags": [
        "cam girl",
        "hair",
        "hairy",
        "horny",
        "indian",
        "online",
        "seduced",
        "sikh",
        "webcam"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/shyhairygrl"
}