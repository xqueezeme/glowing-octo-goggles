{
    "title": "Home for Horny Monsters Ch. 50",
    "pages": [
        "Hi all! Here it is, the 50th chapter about a home full of monstergirls!\n\nSo I honestly never thought I would get to this point. When I first started writing this story, the house had three girls in it and was gonna be maybe five chapters long. Of course, I was also posting Iceman and figured way more people would be into that. \n\nBoy, am I glad I was wrong.\n\nI've written over half a million words of this story so far, and I have plans to continue for quite some time. Please make sure that you are leaving those ratings and comments, because I love the engaged community we have built together on this website. Your words of encouragement have gotten me to fifty chapters, and hopefully will get me to fifty more.\n\nNew to the story? You should just start at Chapter 1. This tale has plenty of plot and sex for all of you. But hey, I'm not your mother, so you do you.\n\nReturning reader? I missed you, and hope you enjoy this chapter as much as I enjoyed writing it. This chapter is fairly busy as I get ready for the second act of this particular tale. You will get to spend time with our new resident catgirl, as well as formally meet the home's new dragon in human form.\n\nEnough from me, let's check in with our monsters :)\n\nThe New Girl\n\n\"Easy, kisa.\"\n\nThe familiar voice was thick with a Russian accent and elicited both feelings of warmth and sadness. It spoke to her from the void, guiding her back to the world of the living. The darkness peeled away to reveal a small dance studio with wooden floors and large windows overlooking a city. One of the interior walls was a mirror, and in the reflection was a young, black teen who sat on the floor, her face wracked with pain as an older man held her left leg in place while examining her knee.\n\nIt took a moment for her to realize that she was looking at her own reflection. Unable to control her actions, she was forced to watch.\n\n\"No need for tears, kisa, is just sprain.\" The man left her behind and crossed the room to a small closet. He dug around inside and came back with a thick roll of bandages in his hands.\n\nShe couldn't see his face in the mirror, her eyes locked on her own reflection. She was maybe fifteen or sixteen, but it was hard to tell. Her frame was thin and possibly malnourished, and there were small hollows beneath her eyes like she hadn't slept in days.\n\nIs this who I was?\n\n\"Will I still be able to compete?\" the teen asked, hopefully. She kept wiping away fresh tears before the man could see them.\n\n\"The heart of a dancer is stronger than the body of one, kisa. Perhaps you sit this one out.\"\n\n\"No, I have to compete,\" she protested, her voice fading into a distant echo. The memory was melting around her, the void reaching out with icy hands to claim her once again. She kicked her furry legs and swam away into the darkness until she could float alone with her thoughts. Had that been one of her memories? Was she the girl in the mirror?\n\nThe man's name was on the tip of her tongue, but the harder she tried to say it, the further it crawled down her own throat, determined to hide. The darkness now pulsed with stars, bright things that hurt her eyes and made her head throb in time with the universe around her.\n\nShe opened her eyes one at a time to see that she was lying on a bed in a dimly lit room. On its own, her hand touched her neck. It was purely instinctual, and the move itself caused her head to pound in time with her pulse.\n\nA small moan escaped her lips, and when she tried to sit up, nausea and dizziness forced her to lay back down.\n\nSome time passed before the rustling of fabric caught her ears, and she turned her head to see a woman standing in the opening of the room. The stranger snapped her fingers and a lantern by the door ignited, filling the room with a soft, yellow light that was barely tolerable.\n\n\"You're finally awake. I was worried you would be out forever.\" The woman picked up the lantern and walked to the bed, then set the light down on a nearby table. She looked Asian but had patches of scale-like skin along her face and neck that shimmered in the lantern light. \"My name is Ratu. What's yours?\"\n\n\"Nngh.\" The pain of trying to speak was nearly rivaled by the frustration of being unable to answer.\n\n\"I'm afraid you took a rather nasty blow to the head. Here.\" Ratu held out a couple of pills. \"These will help with the pain. You can chew them.\"\n\nShe took the pills and popped them in her mouth. If this woman had wanted to poison or hurt her, she could have done it already. Besides, her head hurt badly enough that she couldn't think past making the pain stop.\n\nThe pills tasted awful, but it was like pouring water on an open flame. The pain rampaging through her head diminished greatly, and she let out a sigh of relief.\n\n\"Better?\" Ratu asked, her green eyes glowing.\n\n\"Yes. Thank you.\" She not only felt better, but oddly calm. Looking into Ratu's eyes reminded her of a warm night by the fire, and it occurred to her that she was now staring. She looked away and rubbed her eyes, her whole body now warm and fuzzy, inside and out.\n\n\"Good. Let's try again. What's your name?\"\n\n\"I...\" Her own name was even farther away than the man's name had been. Why was that? \"I don't know.\"\n\n\"Interesting.\" Ratu arched an eyebrow. \"Do you know where you are or how you got here?\"\n\n\"Um... \" The images in her head didn't make sense, but she decided to be honest. \"I was in a fight. I think. With a statue.\"\n\n\"A gargoyle,\" Ratu corrected her. \"You were trying to escape and Abella knocked you out. You've been unconscious for a couple of days now.\"\n\n\"I have?\" She felt the back of her head. Sure enough, there was a large, painful lump buried beneath her fur. \"Where am I?\"\n\n\"You're in my labyrinth. I brought you here for safekeeping because I have some questions for you, though I doubt you'll be able to answer them if you don't even know your own name.\"\n\n\"Oh.\" That made sense and the memory of her attempt to flee the house became clear to her. She saw the faces again, her memory settling on the snarling visage of a green goblin. The fur on her neck stood up, and she smoothed it back down.\n\n\"Well, I won't waste your time much longer. Why did you attack Mike?\"\n\n\"Mike?\" Ah, right. That was the man's name. \"I was trying to sneak out and he found me.\"\n\n\"And why were you sneaking?\"\n\n\"I was... scared.\" That answer felt right, but if it was true, why wasn't she scared now? Her situation seemed far more dire, but an odd sense of relaxation had settled over her. Even now, she could see Ratu's skin shifting in the lantern-light, but it didn't even bother her.\n\n\"Scared of what?\"\n\n\"I don't remember. It just felt like I had to escape. I needed to escape. I think I fell asleep, and when I woke up, I just...\" She let out a sigh. \"Am I a prisoner here?\"\n\n\"More like a guest. If you were a prisoner, you'd be in chains. But do keep in mind that the nature of your status can change in an instant.\" Ratu smirked, then held out a hand. \"Are you hungry?\"\n\nShe nodded, and let the woman help her up. They walked together to another room where some food had been set at a small dining table. Ratu asked her a series of questions, most of which she had no answer for. She ate until she was full, a move that was almost instinctive on her part.\n\nRatu conducted a small series of tests after they ate, most of which involved a hovering ball of light. When they were done, Ratu led her out of the building into a large, subterranean chamber with a floating crystal up above.\n\n\"So, what now?\" she asked, looking up at the crystal. She could feel the heat coming off of it like a tiny sun.\n\n\"Well, from what I can tell, your memory has been completely wiped. I don't know whether that's from a magical injury or a physical one. As for your physical condition, are you sure you don't remember anything about your transformation?\"\n\nShe touched her throat involuntarily again and remembered the young woman in the mirror. If that really was one of her memories, then how did she become this way? \"I really don't.\"\n\nRatu nodded. \"Well, now that you've your wits about you, I think it's time we go upstairs and speak with the Caretaker, and\u2014\"\n\nAt the word caretaker, a throaty growl formed in the back of her throat. She cut it off and stared at Ratu, appalled.\n\n\"I have no idea why I just did that,\" she said. \"Please don't lock me up.\"\n\n\"Tell me, do you mean to harm Mike?\" Ratu had crossed her arms in a manner that had placed one of her hands up a sleeve.\n\n\"The man from upstairs? No, why?\"\n\n\"Because he's the Caretaker.\"\n\nThe growl was more of a squeak this time, and she shook her head, fighting her instincts. \"I really don't know why I keep doing that, I swear.\"\n\n\"Oh, I know. You can't lie to me, not for another few hours, anyway,\" Ratu responded.\n\n\"I can't?\"\n\n\"No, you can't. When you took your medicine, I cast a spell on you to calm you down and keep you honest. You see, your appearance caused quite a commotion, and I needed to make sure you weren't a threat before taking you back.\"\n\n\"That makes sense.\" However, now that she knew that she had been enchanted, her hackles rose a bit. Something about knowing a spell had been cast on her made her angry, or at least, she knew that it should. It was almost like her brain was busy trying to be two people at once.\n\n\"Come with me. And if you see Asterion, don't let him make you nervous. He's meant to scare you, but since the spell I cast is fading, I don't feel like chasing you through the Labyrinth all day.\"\n\nShe nodded and followed Ratu. The passageways were long, but they went through several shortcuts and doorways that didn't make any sense. A golden lion prowled around on Ratu's purple kimono, and occasionally swatted at her hair when it came near.\n\n\"What are you?\" she asked. \"I mean, you can do magic. Are you a witch?\"\n\n\"I'm a naga.\" Ratu looked over her shoulder to reveal that her face now resembled a snake. She shook her head, and when her hair passed over her face, it was back to normal. \"A snake deity, of sorts. What are you?\"\n\n\"Um...\" She really had no idea and told the naga so. \"Do you know what I am?\"\n\n\"That's open for debate,\" the naga admitted. \"You see, all the evidence points at you being human once, so you can't simply be nekomata, or a cat spirit. They start as cats. My best guess is that you are a human who has fallen prey to a curse or enchantment that has made you into this...cat person.\"\n\nShe gasped and touched her throat again. \"Am I going to turn into a cat?\"\n\nRatu noticed this movement and stopped. \"No. The method of enchantment has been removed, but may I?\" She came closer and ran her hands through the thick fur of her neck. \"Hmm. That would make a lot of sense, actually.\"\n\n\"What would?\"\n\n\"An enchanted collar.\"\n\nAt the word collar, she touched her throat again, her heart pounding.\n\n\"Someone did this to me?\"\n\n\"They did. But it was nobody you are about to meet. Come.\" She tapped on a stone and it swung open like a door, revealing an ordinary room with wooden floors on the other side.\n\n\"This is... this is a house!\" When she stepped through, the door behind them swung shut and vanished into the wood paneling.\n\n\"It is. I got tired of getting wet, so the rats put it in for me.\"\n\nIt was an odd statement from the naga, but there was no chance to ask about it because they turned down a hallway and were now in a dining room that smelled strongly of fresh baked goods. Even now, the table was being set by a very tall woman wearing an apron. When the woman turned to see who had arrived, she saw that she only had one eye.\n\n\"I didn't expect to see you,\" the woman said, looking down at the newcomer. The cyclops was easily seven feet tall. \"I take it our visitor is okay?\"\n\n\"Better than expected, actually.\" Ratu pulled a chair out and indicated that they should all sit. \"This is Sofia, by the way. She's a cyclops, in case you didn't know that.\"\n\nWhile her own personal memory was an aching void in her brain, she did at least recognize the cyclops for what she was. However, she had been staring and looked away, embarrassed. \"Sorry, everything is...my name is...\"\n\n\"Unknown,\" the naga finished for her, then picked up a pastry with a raspberry filling. \"Mike isn't up yet? Thought I heard that he was back?\"\n\n\"He had a bad night,\" Sofia answered. \"The head injury he got from the gate was bad enough that the centaurs took him and... our other new guest for observation. They haven't returned yet.\" She shook her head, then shrugged. \"Beth filled us in on what happened, and she's pretty upset, but not as mad as Tink or Yuki. Tink spent all morning repairing the electrical panel so I could at least make breakfast, so that's kept her busy. Yuki has been hovering around the centaurs, and I'm sure you know how much they like that.\"\n\n\"Hmm.\" Ratu tapped a finger on the table. \"I think I'll stick around a bit longer. I was planning to just pass along a quick report, but I don't want anyone feisty taking out their aggressions on the new girl just yet.\"\n\n\"That's a good idea.\" Sofia sat across from the cat girl. \"Can I make you anything? Are you hungry?\"\n\nThough she had eaten in Ratu's lair, she was already hungry again. \"Do you have anything... um... sausage, maybe?\" Sausage sounded good, and it made her stomach growl audibly.\n\n\"I'll see what I can do.\" Sofia vanished around the corner.\n\n\"Hey, have you seen any of the fairies lately?\" Ratu had raised her voice so Sofia could hear her. \"I wanted to send a message up, but I haven't seen any of them recently, and they didn't come when I tried to summon them. Not that I mind sending messages by rat, but they're kind of a one-way affair without Reggie to translate.\"\n\n\"Come to think of it, no, I haven't.\" The air filled with the sound of something sizzling in a hot pan, followed by the sweet aroma of frying meat. \"I figured they were bothering you, or the centaurs maybe.\"\n\n\"They'll turn up, they always do, though it usually means they just broke something.\" The naga consumed her pastry slowly, picking it into small pieces with her fingers and savoring each bite with a smile.\n\nThe sausages arrived with a side of bacon and some toast. Sofia set them down on the table, then handed over a knife and fork.\n\n\"Thought you might want something other than just meat, but let me know. I can make whatever.\"\n\n\"Are you the chef or something?\" she asked while taking the utensils.\n\nRatu smirked, and Sofia shrugged.\n\n\"I like to be useful. Unlike some people here, I enjoy spending time with everyone, and love to cook. The Library gets lonely.\"\n\nThe Library.\n\nThere was a sudden flash of a memory, but it faded away before it could leave a mark. She looked down at her plate and picked up her fork.\n\nOh well. It was better to be confused on a full stomach. The toast was fine, but the sausage was absolutely exquisite, and when she bit into the bacon, she let out a small purr of delight. The others watched her for a few seconds, and then Sofia offered to make her some more since she seemed so hungry. She nodded, and held up her plate for the cyclops to take.\n\nWhen Sofia came back a bit later, she had doubled the amount of sausage and bacon on the plate.\n\n\"Eat your fill,\" she said. \"We've got plenty.\"\n\n\"Eat your fill, kisa.\" The old man slid a bowl of soup across the table to her. Her hands were tiny, and her arms shook when she pulled the bowl closer to herself. The over-sized coat she wore was still wet from the snow, and small puddles had formed beneath her elbows on the table. \"I've got plenty.\"\n\nThe memory startled her, and she dropped the piece of bacon she had been holding. The others were deep in conversation about something else now, and she picked up a sausage, holding the greasy roll of meat in between her fingers.\n\nWho was that old man? Did he know who she was? She wasn't able to ponder these questions for long when she heard a loud bang from the front of the house. Everyone at the table stood up and ran, and she couldn't help but follow out of curiosity.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nMike groaned as Zel cleaned away the dry blood on the back of his head. He sat on a table in her yurt, and she was now using tweezers to check his wound. Last night, he had faded in and out of consciousness as the centaurs rushed him to their camp for medical treatment. When he woke up this morning, it was to discover that his head was bandaged so heavily that he had worried that he had died and been mummified, only to awaken years later now that there was a new Caretaker.\n\nIt was a silly thought, but he knew he had a concussion and figured it was just par for the course.\n\n\"Hmm, interesting,\" Zel muttered from behind him. He waited, in the hopes that she would say more.\n\nShe didn't.\n\n\"What?\" he finally asked her. \"Is my brain hanging out? If so, it serves me right. Try and push only the smart part back in, please.\"\n\n\"Does this hurt?\" She did something and he winced as a sharp pain shot through his skull, then faded.\n\n\"A bit, but not too bad. What is...oh?\" Zel's hand appeared in front of his face holding a twisted wire. \"What is that?\"\n\n\"Those are your stitches. I had to take them out.\" She moved in front of him and wiped some blood off her hands with a towel, then tossed it into a basket.\n\n\"Why? Is something wrong?\" He reached a hand back to feel the wound, then thought better of it.\n\n\"On the contrary. You had a fairly deep gash back there last night and I used stitches to close it up. This morning, the gash is raw and scabbed over, but it's superficial and doesn't need to be held together any longer.\" The centaur frowned. \"I could have sworn it was worse last night.\"\n\n\"What about my head though? It still hurts like a bitch.\" He pointed at his temples. \"It feels like there's a bag of broken glass behind my eyes.\"\n\n\"Considering you mouthed off to the faerie queen, you're lucky you still have those eyes.\" Zel shuddered. \"I'm just glad you came back in one piece.\"\n\n\"Me too. Do I need these anymore?\" He held up some fresh bandages.\n\n\"No. I just have some stuff I want to put on there to prevent infections, so don't take a bath as soon as you get back. Wait until this evening.\"\n\n\"Okay.\" He set the bandages down and looked at the floor. How did he even ask his next question? \"Um, how is... Quetzalli? Is she okay?\"\n\nThe centaur smiled. \"That's something you are going to have to see for yourself. I don't even know where to begin.\"\n\nThat was an odd answer, but he accepted it.\n\nAfter a few more minutes of medical care, Zel released him and he hopped down off the table with a little help from her. They stepped out of the yurt together and he squinted at the cloudy sky, his eyes struggling to adjust.\n\nThey walked for a little bit, chatting about nothing in particular, then arrived at the center of camp. The centaurs milled about, ready to perform their daily tasks, and Mike didn't even have to ask where Quetzalli was.\n\nA small basket had been turned upside down to create a stool for the woman, and she sat on it now, surrounded by a small crowd of youngsters. Once they were close enough, he could hear her speaking to them, her voice rich with a Spanish accent.\n\n\"...and when Huitzilopochtli defeated his brothers, he cast them into the sky where they became the stars!\" Quetzalli dramatically threw a handful of dirt above the youngsters, who let out screams of laughter and then bolted out from underneath the debris. The dragon laughed along with them until her dark, purple eyes met his. The centaur children saw Mike coming and departed, suddenly doing their best to look busy.\n\n\"So...how are you doing?\" he asked.\n\nShe scowled at him. She had the appearance of an older woman in her mid-to-late forties, with streaks of black in her mostly silver hair. She wore a simple skirt and a centaur's tunic that had been retooled to fit. Also, tiny bits of hay were stuck to her everywhere. The small horn in the center of her forehead was cracked, the tip of it missing, and when she stood, he noticed that her legs and forearms had large patches of glittering blue scales on them.",
        "\"I've been better,\" she said, then her legs wobbled and she stumbled toward him.\n\nWhen he put his hands out to catch her, he received a sizable static shock that caused his left arm to suddenly retract, which caused him to catch her awkwardly. Because of this, her shoulders twisted funny, causing the top button of her tunic to pop open, revealing a pair of ample breasts that had been crammed inside.\n\n\"The youngsters have been teaching her to walk,\" Zel explained as Mike steadied the dragon. \"She isn't used to her human form yet.\"\n\n\"No, I am not.\" Quetzalli managed to stand on her own, and then put her hands on her waist. She was about a foot shorter than Mike, but somehow looked just as menacing as if she were a foot taller than him. \"It appears that my enchantment may be permanent.\"\n\n\"Any ideas about how we can reverse it?\" Mike asked, then looked at Zel.\n\n\"None. Ratu might know, but I haven't been able to send her a faerie. Can't seem to find any of them when there's work to be done.\"\n\n\"I am so sorry,\" he began, but Quetzalli held up her hand to silence him.\n\n\"You have nothing to be sorry for,\" she told him. \"This was the queen's doing, not yours.\"\n\n\"We'll find a way to reverse it.\"\n\n\"Perhaps.\" She looked him up and down. \"It is so fascinating to see you up close like this. And this place we're in\u2014is this your home?\"\n\n\"Not...quite. I thought you would be far angrier than you seem.\"\n\n\"Oh, she was.\" Zel smiled. \"But we were able to talk her down a bit, and convince her that we would do our best.\"\n\n\"Yes, she did.\" Quetzalli poked him in the chest with her finger, which caused another spark. \"And while I don't blame you, you are the reason I ended up in this mess. You owe me for saving your life, and I intend to collect.\"\n\n\"Anything, just name it.\"\n\n\"I need a place to stay until I can return to my original form. I would prefer to stay with you, as I no longer know anybody in the mortal realm who can help me.\"\n\n\"Done.\" He stuck his hand out. \"I will do everything in my power to keep you safe and help return you to normal.\"\n\nQuetzalli nodded. \"Then we have an agreement.\" She looked down at his extended hand. \"What are you doing?\"\n\n\"It's a handshake. When humans come to an agreement, they shake hands.\"\n\n\"Oh. Right. I am familiar with the custom, but keep forgetting I have...these.\" She held out her hands and wiggled her fingers. \"They feel so fragile, like sticks that have been out in the sun for too long. And the claws are useless. Look at how thin they are! You could barely dig a hole with them.\"\n\n\"Yeah, I wouldn't recommend\u2014OW!\"\n\nQuetzalli had grabbed his extended hand and squeezed it as hard as she could, which caused the bones and tendons inside his palm to pop loudly. He fought to yank his hand free, but she misunderstood and held on with a grip of iron, pumping his hand up and down vigorously.\n\n\"How do I know when a handshake is over?\" The dragon asked, then looked over to Zel, oblivious to Mike's reaction. \"Does this look right? It doesn't feel right.\"\n\nZel said nothing, hiding a grin behind her hands.\n\n\"Two seconds. Two seconds!\" Mike yelled, and she released him. His hand was throbbing, but he didn't feel any permanent damage.\n\n\"Okay. Two seconds for a handshake. Got it.\"\n\n\"You're...you're crazy strong, aren't you?\" He flexed his hand a few times, hoping that movement would alleviate the pain.\n\n\"She is a dragon, after all.\" Zel moved close to Quetzalli and pulled a small wooden stick from her pocket. \"When she first came to us, she was as pale as a ghost. Her skin has darkened a bit, and these revealed themselves.\" She tapped on a set of scales along Quetzalli's neck. \"She still has some draconic properties that I think will continue to emerge in the days ahead.\"\n\n\"Okay, but why the stick?\" He found the centaur's behavior odd.\n\n\"I got tired of getting zapped,\" she replied, then pointed at Quetzalli's broken horn. \"She constantly generates an electrical charge, but the sudden change in size meant that she could no longer hold in all that energy, and so it broke. Unfortunately, based on what she told me, her horn helped her control her own lightning, so you may get a nasty shock every now and then.\"\n\nHe thought back to the spark he had experienced earlier and looked at the dragon. \"Not enough to kill me or anything, right?\"\n\nThe dragon shrugged. \"I really can't say. Zel didn't think so, and my horn will heal over time as long as I'm careful with it.\"\n\n\"Indeed.\" He moved closer to her and examined the fractured horn. It had a spiral pattern which reminded him of a unicorn. \"Maybe we could get Tink to make you a cap for it? Something to keep it from getting damaged even further?\"\n\n\"If you do that, pick a conductive material,\" Zel added. \"You don't want her building up another big charge or anything. The discharge could crack her horn down at the core, which would be very bad.\"\n\n\"Sounds reasonable.\" He really had no idea how electricity worked beyond the basics, but was sure that Tink would be able to fashion something with little effort. \"Any other things we should know?\"\n\n\"She's been human for less than twenty-four hours. Though she has watched over mankind for centuries, it doesn't mean she understands them.\" Zel threw a look at Quetzalli. \"I don't pretend to fully understand a dragon's supernatural biology, or the spell that transformed her. Fae magic is certainly a thing to behold, but so is a dragon. Her body is still acclimating to this form, and because some of her draconic traits have already manifested since her arrival, like the scales on her skin, it's possible other traits may push through the enchantment over time.\"\n\n\"So puberty for dragons, got it. Hey, can I ask you something? What do you know about Sulyvahn?\"\n\n\"The dullahan?\" She shrugged. \"I haven't talked to him, actually. I've been too busy here.\"\n\n\"What about the others? I've seen him speaking with the centaurs and I wonder what he's been talking about.\"\n\n\"Oh? You have my curiosity. Why the sudden interest in him?\"\n\nMike frowned. \"The faerie queen knew we were coming and made sure we had a nasty welcome waiting for us. Naturally I assume he told her because he's a spy.\"\n\nThe centaur rolled her eyes. \"Well, you weren't exactly being quiet about what you were doing or where you were going. Even if he did report to the faerie queen, you can hardly call what he did spying. If your neighbors could actually see what was happening in your front yard, even they would have known you were up to something, cause you built a small closet in the middle of your yard and then had a squad of magic rats chew a portal in it. So even if Sulyvahn is spying on you, you can't blame him for passing on information that you pretty much handed over.\"\n\n\"You sound like you're on his side.\" He hadn't expected Zel to lecture him about the dullahan, and his cheeks were now burning.\n\n\"He may be in your front yard, but he still answers to the queen. You can't be mad at him for siding with his boss, especially when you've made no effort to properly welcome him here.\"\n\n\"So he has been spying on us.\" He shook his head, wondering how he was going to get rid of the headless nuisance.\n\n\"If he is, he's only reporting what he sees. It's not like we answered a bunch of questions about you or the house.\" Zel crossed her arms. \"In fact, the only thing he's really even talked about is the garden in the front yard.\"\n\n\"What about the garden?\" Mike asked.\n\n\"He seems super into botany, but he keeps offering useless advice on those bushes near the front\u2014the ones that keep getting sick and dying. I have some of our best botanists keeping your yard in good condition. They love tending to your plants, and it's their way of thanking you for letting us live here. He keeps offering up holistic approaches to your poor soil issues, and the centaurs just smile and nod for him because he's friendly.\"\n\n\"That's a little weird.\"\n\nZel nodded. \"It is. He suggested planting iron spikes all around your bushes because it might loosen the soil, then told my top herbalist that a ring of salt might keep slugs away. You don't even have a slug problem, so we told him we would keep it in mind.\"\n\n\"A slug...problem...\" Mike put his chin in his hand, his mind whirring through the possibilities. Why would the queen's spy become so involved with how he kept his yard? He hadn't liked the dullahan since he had arrived, but he knew now that he hadn't given him a fair shake. Now that he knew how nasty the queen could be, he thought back to Sulyvahn's warnings. Had the dullahan really been looking out for him?\n\n\"Ack! Pffft!\"\n\nA stray bit of hair had gotten stuck in Quetzalli's face, and she was actively trying to remove it. Unfortunately, it looked to be the hair of a centaur's tail, and she poked herself in the eye trying to pull the thing off her face.\n\n\"Hold still,\" he told her, then got a nasty zap for his efforts. He was able to peel the hair off her face, but when he let go of it, it floated back toward her and stuck to her belly.\n\n\"That's been a bit of an uphill battle,\" Zel informed him. \"She fell into a hay bale earlier and it took us an hour to get it all out of her hair.\"\n\n\"It was unexpectedly itchy,\" Quetzalli added. \"And I did not care for the flavor, either.\"\n\n\"You're not supposed to eat it.\" Zel let out an exasperated sigh. \"And we don't eat it either. We use it to lie down and things like that.\"\n\n\"But I thought that horses ate hay?\"\n\n\"Again, like I said before, we aren't horses. This part of me is like a horse, but that does not mean we're...you know what? It's fine.\" Zel looked back at Mike. \"Now that your head isn't broken, you should probably get back to the house. The others are waiting for your return, and I'm sure Quetzalli would like to find out where her room is.\"\n\n\"I'm very curious to see the inside of a house,\" the dragon added. \"I've even heard that you have running water inside of them, like a magic river.\"\n\n\"Just wait until I show you the internet,\" Mike said, then gave Zel a big hug. \"Thanks for taking care of me.\"\n\n\"Try to stay out of trouble,\" she told him, then smiled. \"But it was very nice to see you. Are you still coming to my ceremony?\"\n\n\"I wouldn't miss it.\" He ran his hand along her cheek, then turned toward Quetzalli. \"C'mon, let's get you home and figure out where you're sleeping.\"\n\n\"Am I not sleeping with you? I thought humans slept together?\" She pressed her hands together, overlapping her fingers. \"Does a family of humans sleep in a big ball, like this? I imagine there's an upper limit.\"\n\n\"Um...not quite. You need to master sleeping on your own first. Then you can decide if you want to sleep with somebody else. It's kind of a personal decision.\"\n\n\"You speak with much wisdom, humanling.\"\n\n\"Just call me Mike. I need to stop for something first.\"\n\nThey walked through the centaur village and he stopped a couple of centaurs and asked for their help. They lead him to one of the nearby storage yurts, then left to complete their duties. Once inside, he dug around through their supplies for a few minutes before finally spotting what he needed.\n\nQuetzalli had stayed outside, her eyes on the blue sky above. He called her in to help him, then handed her a bag of salt.\n\n\"What's this for?\" she asked.\n\n\"Don't know yet. Rule number one of being a human: be prepared.\" He grabbed a couple of horseshoes that the centaurs had made. Though they technically didn't need them (centaur hooves were magically durable), he had learned that they often utilized them for treating hoof related injuries to ensure that they healed properly.\n\n\"What are those for?\" she asked, indicating the horseshoes.\n\n\"They're for luck, but you gotta hold the open end up, or all the luck will run out.\" He tucked them partially into one of his pockets. \"Rule number two of being human: you're gonna need all the luck you can get.\"\n\n\"Isn't all the luck going to run out of them like that?\" She squatted down. \"I don't see anything coming out of them.\"\n\n\"Oh, I'm not grabbing them for their luck. C'mon, I want you to meet somebody.\"\n\nHe led her out of the yurt and to the other side of camp, where the portal had been set up. They were about to walk inside the building when she stopped and turned her vision to the sky again.\n\n\"Everything okay?\" he asked her.\n\nA slow smile crossed her face. \"There's a storm coming.\"\n\nHe scanned the cloudless sky and shrugged. \"If you say so. C'mon, let's go.\"\n\nThe guards standing by the portal let them pass, and they walked through it and into the front yard of his house.\n\n\"That's my home,\" he told her, pausing for a moment to let her see it. In the light of the morning, much of the front was still cast in shadows, and it somehow looked ominous with its latest addition stuck onto the front. \"It's also your home for as long as you like.\"\n\n\"Thank you,\" she said, and he held his breath.\n\nNothing happened. He scanned the front of the house, wondering if a new room had popped up in the back or something. He shrugged, and walked over to the garden.\n\nIt didn't take him long to find it. Along the edge of the maze that was closest to the street, he could see that a fairly large patch of bushes had giant gaps in them, and the dirt beneath looked more like sand than soil.\n\n\"Hey, Abella?\" He raised his voice and squinted, his gaze traveling the length of the roof. \"I might need you in a moment. Can I get you in the air?\"\n\nAfter a couple of seconds, he saw her shoot into the sky, her dark figure now circling overhead.\n\n\"That's Abella,\" he explained. \"She's a gargoyle.\"\n\n\"Oh.\" Quetzalli gazed wistfully into the sky. \"I miss my wings. I feel so heavy being trapped on the ground.\"\n\n\"Yeah, I bet. If you're ever in need of a ride, you might be able to convince the Jabberwock to give you one.\" He pointed out the beast where it lay hidden against the far wall of his house. Its wings were folded up, and it looked like it might be sleeping. However, he knew that it didn't need sleep, and was constantly watching the entrance, just in case.\n\n\"Maybe later. I seem to be having trouble with my balance already.\" She dropped the bag of salt on the ground and then put her hands on her breasts. \"I'm so confused by these in particular. Why are they so heavy? If I turn too fast, I feel like I'm being pulled forward by them.\" She turned around and shook her butt at him. \"At least if I had a tail, I feel like I could use it as a counter weight or rudder.\"\n\nOh boy. He didn't even know where to begin. \"That is probably a question for the others. Hey, can you open that bag for me?\"\n\n\"Yes, I can.\" She knelt down and swiped her fingers at the top of the cloth sack. Frustrated when nothing happened, she tried again, but this time snagged her fingernail on the cloth and let out a holler of pain.\n\n\"Humans don't use their nails like that,\" he explained. He showed her how to operate the string on the bag. She pulled on it and the bag opened up.\n\n\"It's a good thing your kind reproduces so quickly,\" she grumbled. \"Manlings are so breakable.\"\n\n\"And stubborn, too.\" Yuki's voice was bitter, and Mike flinched as the temperature dropped around him. He hadn't seen her approach, and when he looked at her, he saw that she had small bags under her eyes. \"And they make shitty choices.\"\n\n\"Yuki, I\u2014\" he began, but she stepped into him and hugged him so tight that his voice became a squeak and his back popped.\n\n\"You're such an asshole,\" she told him, then stepped back and gave him a light shove. \"I'm so glad that you decided to go to the faerie realm just to nearly get killed by almost everything.\"\n\nHe winced, then held out his hands apologetically. \"Look, Yuki, I'm really sorry that\u2014\"\n\n\"No, absolutely not. I don't want to hear any of your bullshit excuses, or...\" Yuki sniffed the air and turned to face Quetzalli. \"And who is this?\"\n\n\"I am the dragon Quetzalli.\" She held out a hand and Yuki took it. There was a loud pop on contact as the kitsune received a shock, and then the dragon counted to two out loud while vigorously pumping Yuki's hand.\n\nWhen Quetzalli finally let go, the kitsune's hair now stood up in a few places, and the fur on her tails had poofed out. Yuki looked at Mike with a mixture of surprise and disgust.\n\n\"Hey, since you're here anyway, I need your help with something.\" He ran his hands through her hair, taking a moment to rub the spot between her ears. The static discharged and her hair fell back into place. \"Can you hold these for me? I'll let you know when I need them.\"\n\nShe looked down at the horseshoes, then took them. \"What are we doing?\"\n\n\"You'll see.\" He had Quetzalli move a safe distance from the bushes, then came back and lifted the bag of salt. He tilted the bag up and did his best to pour the salt evenly over the roots of the plant, wondering how long it would be until something happened. With Abella soaring overhead and Yuki casually spinning one of the horseshoes in her fingers nearby, he hoped that his hunch was right.\n\n\"So, anyway, I wanted to talk about my plans for the faerie queen,\" he loudly announced. \"I've given it a lot of thought, but I think I have the perfect weapon to destroy her once and for all.\"\n\nQuetzalli tilted her head with curiosity, but remained silent. Yuki's ears twitched, and she gave him a long hard look. Her gaze went to the horseshoes in her hands, back to Mike, and then over to where he had dumped a bunch of salt.\n\n\"I am so interested to hear about this weapon,\" she said, her grip tightening on the horseshoes.\n\n\"Good. Because I want to show it to you.\" He stuck his hand in his pocket and pulled out a vial of glitter that was leftover from his trip. Cupping his hands together, he looked around and then moved next to Yuki and cracked his hands open. \"I'm sure you recognize it from the Vault.\"\n\n\"How were you able to handle such a device?\" she asked, her eyes flicking toward the bushes. The soil had shifted, causing a circle to open in the salt.\n\n\"It wasn't easy,\" he told her, then closed his hands. \"But if this device were to get in the wrong hands, it would easily destroy everything we know and love.\"\n\n\"Well, then, you should probably put it somewhere safe until...until...\" Her ears twitched again, and she frowned at the bushes.\n\nHe heard it now, too\u2014a sound similar to stones being ground together.\n\n\"I'm going to check it out,\" he told her, then turned toward the bushes and fake stumbled, the vial falling out of his hands.\n\nThe ground erupted, and a squat, fat creature made of stone jumped into the air and snagged the vial in its claws.\n\n\"All Hail the Faerie Queen!\" it shrieked at them. The creature looked like a demonic hedgehog made out of rock, and stood about a foot tall. It leered at them with sharp, pointy teeth, but the smile disappeared when Yuki nailed it between the eyes with a horseshoe.\n\n\"Abella!\" Mike called, and the gargoyle descended, using her feet to grab the little stone creature and carry it into the sky. However, the creature rapidly expanded, dragging Abella down until she crashed into the bushes.\n\nMuttering in a language Mike didn't recognize, the creature rolled its body into a ball and charged toward them. The air chilled instantly and large ice spears formed, diverting the ball away from the group and across the yard. A pair of nearby centaurs ran for cover as the creature unrolled itself, using its foot long claws to spin in a tight circle, its angry visage focused on Mike.\n\nIt didn't see the stone lion that had come to life that now descended on it from above. The lion's body was surrounded in a blue aura and it slammed into the demon like a meteor impacting the moon.\n\nThe creature exploded in a shower of stone and glitter, its rocky remains raining across the front yard. The lion shook itself clean of the debris, the air around its fiery mane rippling with heat before it returned to its post at the front of the yard.",
        "\"What the hell was that?\" Yuki asked. When he looked at her, he saw the front door of the house had been opened, and the others had come outside to see what was going on.\n\n\"It was a type of earth elemental.\" Sulyvahn appeared with a strange grin on his face. He knelt down to pick up a fragment of the elemental. \"Eats magic, this one. They normally dinna get this big.\"\n\n\"You knew, didn't you?\" Mike asked.\n\nThe dullahan shrugged. \"Doesn't matter. Ye found it all the same.\" He tossed the fragment on the ground and kicked it. \"Nasty little bugger has been here longer than I have, that's fer sure and for certain. If I coulda told ye about it, I would have.\"\n\nMike appraised the dullahan, wondering if he should take the chance. It was the gnome that they had spoken to in the fae realm that made him think of it. Sulyvahn had tried his best to warn them all away from the queen, and they had ignored him and walked into a trap. He had also been trying to hint at the creature hiding in the bushes, but couldn't come out and tell them directly that the creature had been planted there. What the queen said, went. That was what he had learned in the faerie realm, and he was willing to bet that Sulyvahn couldn't do much else while the queen kept a watchful eye.\n\n\"Why you?\" Mike asked. \"The queen is honoring an obligation, but why send you specifically? Why not some other dullahan that can keep his mouth shut?\"\n\nSulyvahn ignored him, and looked over at the dying shrubs. \"I've almost never seen one get that big. It must have had a proper meal, and recently, too.\"\n\nSensing there was something to that statement, Mike ran toward the patch of dirt in the ground where the elemental had popped free. It had left a hole behind that was roughly the size of a softball. He stuck his hand in the hole and felt around, his fingers sliding over something hard.\n\nYuki helped him dig up the ground, and when they pulled a glass jar out, they saw four dimly flickering lights inside. The jar was decorated with symbols that Mike imagined were magical wards of some kind.\n\n\"Huh. Makes sense. Fairies woulda spotted that beastie right away. I bet it captured them to keep them quiet.\" Sulyvahn yawned. \"Looks like the excitement be over, so if ye dinna mind...\" He gave a mock salute and vanished into the shadows.\n\nMike unscrewed the jar and opened it, tilting it over his hand.\n\nThe sparkling lights landed in his palm and transformed into their humanoid forms. Daisy, Cerulea, Carmina, and Olivia were more insect than human now, and unable to stand.\n\n\"Their magic has been drained,\" Yuki growled through her teeth. \"Oh, when I get my hands on that bitch...\" \n\n\"You won't.\" He placed a calming hand on Yuki's shoulder. \"Clearly we are caught up in something we don't fully understand, and we need to focus our energy on what's important. Not revenge, at least not yet, anyway.\" He held the fairies close to his chest and moved toward the house. He could feel the magic of each fairy pulsing in his hands, and he knew just what they needed to restore their magic.\n\n\"Mike?\" Beth met him at the door, her face a mask of worry and regret. Gone was the confident woman she had been yesterday, and he could see a small amount of fear in her eyes.\n\nThe same woman that had been turned into a statue and abducted by a demon now looked strangely vulnerable, and with a rare flash of insight, he realized that she was worried that she had let him down. She had had one job in the faerie realm, and had been unable to do it.\n\n\"I'm glad to see that you're okay,\" he told her.\n\n\"I'm sorry,\" she said. \"About what happened.\" She stood a little taller now, bracing herself for whatever was coming next. Her faith in herself had clearly been shaken\u2014a feeling he was familiar with.\n\n\"Me, too,\" he told her. \"But we're alive, and that's what's important. We bit off more than we could chew, and...\" He looked over at Sofia, who met his eyes with a knowing gaze. \"It wasn't a problem I could just fuck my way out of. No amount of luck was going to help us. Not with the queen of the fae.\"\n\n\"So what's next?\" she asked.\n\nHe opened his mouth, then closed it. There were a lot of things that needed to happen, but they could wait. \"I'll fill you in on the faerie queen later. For now, I was wondering if you could help Quetzalli find a place to sleep?\" He looked over at the dragon, who was now doing little spins in the front yard to make her skirt twirl out. The dragon noticed them watching, and started toward the porch.\n\n\"That's Quetzalli?\" Beth asked in disbelief.\n\n\"The queen punished her. She's never been a human before, so she needs a bit of supervision.\"\n\n\"It's true,\" Quetzalli admitted as she joined them. \"You and I have met before. You were inside my jaws, remember?\" The dragon opened her mouth wide to reveal that she had a double set of canines up top, and her tongue had a deep groove in the middle.\n\n\"It looked a little different last time I saw it.\"\n\n\"I was much bigger then,\" she said knowingly, then put a hand on her lower belly. \"I am experiencing some discomfort that I am unfamiliar with. It's a strange fullness that needs relieving.\"\n\n\"Like...do you have to pee?\"\n\nQuetzalli nodded. \"Ah, that sounds right. I just need to find a suitable tree, yes?\" She was already lifting her skirt. \"I am unfamiliar with which part of my anatomy I need to aim, and\u2014\"\n\n\"I've got her,\" Beth said, then grabbed Quetzalli's wrist. There was a loud snap of static, and she winced.\n\n\"Yeah, she does that, too,\" he added, then let Beth lead Quetzalli into the house, where they disappeared down the hallway toward the bathroom. He stepped inside as well, only to stop in the living room.\n\nStanding on the stairs was the cat girl who had assaulted him only a couple days ago. She was watching him with great interest, her dark green eyes locked on his. Her face was mostly human, but her nose was a cat's, surrounded by a few long whiskers.\n\n\"Oh, I didn't realize that you were awake.\" He noticed Ratu standing near the cat girl. \"Is she... are you...?\"\n\n\"She's fine,\" Ratu informed him. \"It looks like you've got a lot on your plate right now, but I wanted you to know that she was up and no longer hostile. We can talk later.\"\n\n\"Thank you. Sorry, but I need to help these guys recover their magic.\" He held up his hands to show Ratu the fairies.\n\n\"Ah. Well, I'm sure the process will be fun.\" She smirked, then licked her lips seductively. \"I feel like I'm overdue to run out of magic one of these days, myself.\"\n\n\"Uh, yeah. You're always so busy, so I haven't really...\" He noticed the cat girl watching him and changed the subject. \"My name is Mike, by the way. I'm the Caretaker of this crazy place, and it's my job to keep everybody safe. I'm sure that earlier was just a misunderstanding, and you're welcome to stay if you'd like. However, if you want to leave, you should know that there's a possibility a nasty group of witches may hunt you down and use magic to force you to come back. That's a long story, and Ratu can tell you all about it, and I'm so sorry that I can't stay and chat. Right now, these four need my help.\"\n\n\"I'll keep an eye on her for a bit longer, but I do have work to get back to,\" Ratu replied. \"But I like the idea of you owing me a favor.\"\n\n\"I'll only be a little bit. Once the fairies are sorted, they'll be back to causing trouble again and we can figure out our next steps.\" He moved toward the stairs, but the cat girl stood in the way. \"It was nice to meet you, um...\"\n\n\"She doesn't remember\u2014\" Ratu began.\n\n\"Kisa. Call me Kisa.\" The cat girl stepped aside. \"It's not my real name. At least, I don't think it is, but it will do for now.\"\n\n\"Nice to meet you, Kisa.\" He resisted the urge to pat her head, then ran up the stairs toward his bedroom. Luckily nobody followed him, and he closed the door and let out a sigh. When he tried to turn on the light, nothing happened.\n\n\"I didn't know the power was out,\" he said.\n\n\"Tink got it on downstairs, but she's still working on it,\" Naia said from the tub. \"Also, sounds like quite the commotion out there.\"\n\nHe walked into the bathroom and filled her in on what had happened. Though the power was out, there was plenty of light coming in through the windows to see by. He placed the fairies on the bathroom counter while he stripped his clothes off, then picked them up once he was naked. The tub was already full of warm water when he stepped into it, courtesy of Naia.\n\nHe sank into the water with a sigh, all four fairies now lying on his chest.\n\n\"Poor things,\" Naia said, her head and shoulders appearing above the water. \"They've been drained nearly to their limit. How did this happen?\"\n\n\"They were being held captive by some kind of monster living in the bushes.\" He stroked Daisy's head with his finger. He had been so busy trying to figure out how to get to the fae realm that he hadn't even noticed that the fairies had gone missing. Everyone had been so eager to help him that nobody else noticed either. \"I need to recharge them, but I'm feeling pretty drained right now. Think you could give me a hand?\"\n\n\"Anything for you, lover.\" Naia winked and disappeared beneath the surface of the water. Little tide pools formed along the water's surface, and they moved toward his pelvis, the current massaging his thighs and balls.\n\nThe sensation was more relaxing than sexual, and he was about to ask what her deal was when her head appeared between his legs. She winked and opened her mouth impossibly wide to suck him all the way into the back of her throat.\n\nHer body turned into water, and the vortexes moved into her. The swirling circles created a buzzing sensation in his dick, as if his swollen member was now a giant vibrator. He rolled his eyes in pleasure, taking care not to accidentally drop one of the fairies into the water.\n\nOnce he was sufficiently aroused, the nymph disappeared with a splash, leaving his rigid cock standing like a monument over his hips. The faeries took notice of this, and he picked them up and moved them down to his belly.\n\nWhen he had first met them, they had been trapped in Ratu's labyrinth, forced to sneak sexual energy off of the minotaur Asterion. Even then, they had seemed healthy and vibrant. Now, however, even their colors looked dull, and he started masturbating in the hopes that it would push a little bit of precum out of the head of his cock.\n\nCarmina was the first to make it. The little red fairy held up her hands, and he tilted his hand into a ramp for her to climb. It was slightly uncomfortable when she used the inside of his urethra as a handhold to pull herself up, but she put her mouth next to her hand and suckled on the spongy flesh. It was an oddly pleasurable sensation, and when Olivia joined her, she did the same thing.\n\nEventually Cerulea and Daisy joined the others, and all four fairy girls were now sucking on the edge of his urethra, their hands clinging tightly to his glans. He stroked faster, and tiny little drops of fluid appeared for them to consume.\n\nHe watched the drops disappear near their mouths, and they lit up like little Christmas bulbs. At first, their flashes were chaotic, but eventually they formed a pattern that had him feeling more than a little light headed. Their insect-like features melted away until they appeared more human than bug.\n\nThe buzzing sensation in his body intensified as each of the fairies emitted a cloud of glitter from their fluttering wings. Little sparks of energy formed along his fingertips as his magic reacted with theirs, and the water glowed with magic of an unknown origin.\n\n\"Caretaker is so tasty,\" said Cerulea, who then wiped her mouth.\n\n\"Always has the best nectar,\" agreed Carmina. \"I'm feeling much better now.\"\n\n\"What should we do with him next?\" asked Olivia.\n\nDaisy lifted away from his cock and signed something to her sisters. They all laughed, their faces darkening.\n\n\"You have a potty mouth,\" Cerulea declared. \"But I think we should do it.\"\n\nOlivia and Carmina nodded their heads in agreement, and Mike realized that they had all turned their gaze on him.\n\n\"What...what do you have planned?\" he asked, only slightly nervous. He had only fooled around with one of them at a time since they had moved into the house properly, and the little sparks moving between his fingers were now pulsing in time with the light from their bodies.\n\nCerulea slid down the length of his cock, then wrapped her arms around his shaft and her legs around his balls. She did odd gyrations with her hips while she squeezed him tightly, acting like a cock ring.\n\nDaisy and Carmina grabbed onto his shaft and started humping it. They would climb up toward his glans and then slide down slowly. Over time, a shimmering trail of fairy lube appeared, allowing them to repeat the process even faster.\n\n\"Mmm,\" Olivia said, hovering above his crotch and licking her lips. She descended and ran her tongue all along the head of his cock, then mounted him. Mimicking the process the others were doing, his glans now shimmered with fairy lube.\n\nThe green fairy took to the sky again and surveyed her work. The fairies had him rock hard now, and he was just waiting for whatever they had in store for him.\n\nOlivia grabbed onto his foreskin and opened her mouth wide. The body of a fairy could be stretched, and her mandibles spread apart to allow her human mouth to stretch. It looked similar to a snake trying to swallow a basketball, and he had to bite his lip to keep from laughing when her whole head expanded to accommodate him. She looked just like a cartoon character that had inflated its head to float away. She moaned, then used her legs to push away from him.\n\nWith her head stretched out, she had created quite the vacuum seal, and there was a tremendous amount of pressure as her whole face stretched. Cerulea had joined the other two and the three of them held hands and were jumping up and down to jack him off. The creative efforts of all four of them was rapidly bringing him to an orgasm, and he fought hard to keep his magic contained. He had no idea what the effect would be on someone so tiny, and the last thing he wanted was to blow up one of the fairies.\n\nIt took them several minutes, but when his orgasm came, Cerulea dropped back down to his scrotum and squeezed, doing her best to keep him from spilling his entire load in one go.\n\nOlivia's head expanded like a small water balloon, and she swallowed most of it, her stomach bulging out. When she pulled her face off, it was with a loud pop and she flopped onto her back on his belly. What little was leftover was quickly scooped up by Daisy and Carmina.\n\n\"My turn!\" Cerulea declared, and she climbed up his shaft and sat down on the head of his dick. The blue fairy seemed content to rub her slit on his glans, and wiggled her way all around as Oliva was helped to her feet.\n\nThe bulge in Olivia's stomach disappeared, and her whole body glowed a bright green as she processed his sexual fluids, turning them into magic. She smacked her lips and took off with the others. They circled around Cerulea, who was now determinedly working the head of Mike's dick into her tiny body.\n\nHer abdomen distended as he slid inside of her, and she stuck her arms out to the side. He was curious where she was going with this until the others grabbed her arms and legs and started flying in a circle.\n\nThere were no words to describe the sensation of a rapidly spinning fairy pussy on the head of his cock. The sensation wasn't something he was used to, and it became very hard for him to concentrate on holding still. It was slightly ticklish, yet still very pleasurable. The others\u2014except for Daisy\u2014were cheering Cerulea on, and he stroked his own shaft, eager to help her out.\n\nWhen he came inside her, it wasn't as powerful as his first orgasm, and Cerulea allowed the others to pull her off, creating a puddle of cum on his belly. They all landed and lapped it up, and he let out a sigh of relief.\n\n\"I'm glad you're all feeling better,\" he said.\n\n\"My turn!\" Carmina declared, the red fairy's hands on her hips.\n\n\"Um...I'm kind of tapped out right now. I need at least a few minutes to get hard again.\" In the process of holding in his magic, he was also preventing it from keeping him hard. Even now, he was starting to go soft.\n\nOlivia took off and hovered above his dick. While her wings fluttered, she went through a series of hand signs and cast a wave of green light on his dick. In an instant, he was hard again, and his member was pulsing in time with Olivia's light.\n\nWhat the hell? This was a new trick on their part, and he decided to lie back and let them finish whatever they were up to.\n\nCarmina zipped around the room while Cerulea and Olivia held the base of his cock. When Carmina came back, she turned around and used her fluttering wings to tickle his frenulum. When she did this, the vibrations traveled through his cock and into his hips.\n\nHe rolled his eyes and laid back, letting the buzzing sensation fill him. Daisy now hovered on the other side of his cock, using her hands to hold it in place while Carmina teased him from the other side. He could feel the downdraft from her tiny body, and was surprised when the vibrations increased. He looked down to see that Daisy was now doing the same thing with her bee wings.\n\nIf not for the others holding him in place, there was no way they could have accomplished this feat. Cerulea and Olivia were openly masturbating and spreading their juices on him to keep him nice and slick, and the vibrations traveled through his whole body now. Rainbows formed on the surface of the water as waves of glitter came off of both Carmina and Daisy\u2014glitter that made his whole cock tingle. Waves of pleasure filled him, and his pelvis was suffused with heat.\n\n\"You four are...unbelievable!\" This orgasm took him by surprise, and the sparks briefly formed on his belly before disappearing. Before the first burst of semen emerged from his cock, Carmina turned around and shoved her face in the path of it and held on to his foreskin for support. Three large blasts frosted the little red fairy, and she slid down his slippery cock covered in his cum.\n\nThey all took turns eating it, and he let out a sigh. He had no idea how much time had passed, and he was tired. The fairies seemed to be happy, and when he was clean again, he tried to sit up. \n\nDaisy flew in front of him and signed something.\n\n\"Wait, what?\" he asked.\n\n\"She said it's her turn,\" Olivia translated.\n\n\"Please...I need a break,\" he begged of them, but Olivia had already finished casting her spell. His erection was now even bigger than before, and slick with their juices. His own magic was fighting to come free, and it was taking all of his concentration to hold it back.\n\nDaisy landed on his dick and turned around to spread her wings wide, revealing her tight little bottom. His cock shimmered with fairy lube, and when Carmina and Olivia grabbed onto her feet, he had a feeling he knew exactly what was going to happen next.\n\nHer bright yellow and black behind stretched as her sisters jumped up and down, see-sawing her back and forth and spreading her buttcheeks apart. Daisy was silent as ever, but in their twisting, she ended up facing Mike. Her eyes were glowing with an intensity he hadn't seen from any of the fairies, and he kept his mouth shut as her body started to balloon up to accommodate his massive member.\n\nHer stomach distended, and he could see the ridge of his glans moving back and forth beneath her skin. Her tiny breasts stretched thin as he moved farther upward, her mouth frozen in an O of delight as he passed into her neck and bottomed out in her stretchy little head. Carmina and Olivia were struggling to hold her in place, both of them clutching her feet and pulling down.\n\nOh fuck it, he thought, then wrapped his hand around Daisy's waist and started stroking. The other three cheered, and moved down to play with his balls while he used Daisy as a pocket pussy. Her eyes lit up every time he shoved himself into her, and her tiny little wings were now beating fast enough that the vibrations were making it into his shaft.",
        "\"You feel amazing,\" he told her, then spun her around to face her sisters. Using his hands to pull her legs back, he knew that he was exposing her slit to the others. \"Does anyone want to help her out?\"\n\nThey laughed, and he shifted his hand up a bit to make certain they could reach Daisy's pussy. As he stroked, they took turns licking and fisting her. When they weren't helping Daisy get off, they were back on his balls, sucking and biting the sensitive skin of his scrotum.\n\nHe had another orgasm building, but Daisy beat him to it. Her stretched-out body vibrated like a jackhammer as she sprayed the others with glittery cum, and he gave her a few hard pumps before grunting and shoving himself into her as hard as he could to release his load. He couldn't help it when a handful of sparks jumped from his palm into Daisy, and it took everything in his power to rein his magic back in before the feedback effect could occur.\n\nSpooge squirted out of Daisy's mouth and nose, and the others flew up to siphon it away, licking each others lips hungrily as they feasted on Daisy's leftovers. Mike let go of the fairy and she snapped off his dick like a rubber band, tumbling through the air and landing on the side of the tub with a splat and a loud burp.\n\n\"That looked like so much fun,\" Cerulea noted.\n\n\"I haven't let him fuck my ass yet either,\" Carmina added.\n\n\"We should all take turns fucking him with our asses.\" Olivia hovered overhead, a green light surrounding her body as she started to cast another spell.\n\nA blast of water caught her and knocked her out of the air and into the bath. Olivia floated back up out of the water trapped inside a technicolor bubble, and the other fairies tried to escape. More jets of water shot them out of the air until all three of them were encased in magic bubbles. The fairies laughed and giggled as they bounced into each other, and Naia emerged from the bath and helped Daisy clean herself off.\n\n\"You four really are naughty,\" she told them. \"I step away for just a few minutes and look how you behave. Now go somewhere else for a bit and give this poor guy a break.\"\n\nThe bubbles all popped at once, and the fairies hovered overhead while shaking themselves off. Daisy flew up to join them, and they circled over him like glittering stars, their playful laughs like music to his ears. They made a dash for his bedroom and he heard his window open, their voices disappearing as they flew outside.\n\nHe smiled and laid his head against Naia's belly and closed his eyes.\n\n\"They'll have plenty of magic for days now,\" she told him while stroking his hair.\n\n\"But what about me? I'm spent.\" His smile became a frown. Now that the fairies were okay, it was time to spill the news about what had happened in the queen's court. \"By the way, there's something you should know. The faerie queen told me that I could have Cecilia back, but only on one condition.\"\n\n\"And what was that?\"\n\n\"I just need to get to her throne room by going through the Underworld.\"\n\nThere was a long pause before Naia spoke again.\n\n\"I would ask if you are going to do it, but I already know the answer.\" She bent down to kiss his head. \"But before you do, can we just sit for awhile? Enjoy the peace and quiet before you go rushing off?\"\n\nHe opened his eyes to see her concerned face hovering over his. He touched a strand of her hair with his finger, then twisted it around his fingertip to make a little curl in it.\n\n\"I'm not rushing anything. I keep getting lucky, and one of these days, it's going to run out and someone is going to get hurt.\" He gave her hair a little yank as he pulled his finger free and watched the curl he had put in it bounce up and down. \"I used to plan everything, did you know that? When I was younger. Used to overthink and overplan everything. Ever since I moved in, I've been living by the seat of my pants. I've almost gotten used to it, but I need to take a step back, to focus on what needs to happen next. Though Cecilia's being kept in a cage, and it's already been several days since she saw me last, I think the queen wants me to rush in and screw up again. In fact, I think she's counting on it.\"\n\n\"So what are you going to do?\" she asked.\n\n\"Take my time. Learn about the Underworld, and how to get there, but make sure I'm taking care of the house, too. Let the others help me, maybe learn from the mistakes I've already made. I hate that she has to wait for me, but if I rush in again, while failing to take care of the others, we could all end up losing in the end.\"\n\n\"Sounds like somebody is evolving.\" Her hands moved down his chest and she played with one of his nipples. \"And since you aren't in a hurry right now...make some time for me? I'll go nice and slow until you're ready again.\"\n\nHe smiled and grabbed the back of her head to pull her in for a kiss. Taking a step back also meant making time for the finer things in life, and he could think of nothing better than a nice, long hot bath with an eager nymph.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nKisa sat just outside Mike's bedroom door, her sensitive ears listening in on the playful splashing inside. It had been child's play to sneak away from the others who were busy examining pieces of whatever had been killed in the front yard. Eventually the splashing stopped, and she could just barely make out the sound of Mike talking with someone through the door.\n\nWhat is this place? she wondered, then turned her head down the hallway to watch Beth and Quetzalli reach the top of the stairs. Beth led the dragon girl into her bedroom, and a discussion about sleeping arrangements began.\n\nThere had been a moment when Mike wandered through the front door that she had been tempted once more to flee, to run away and leave this place behind. Though everything about the man seemed harmless, she had sensed something deeper in him that triggered a primal fear.\n\nWhat had stopped her had been the way that he held the fairies in his hands. He had been worried for them, acting so protective over creatures so small. The house was hers to stay in, if she chose, or she could leave if she wanted to. The fact that he had given her such a choice had immediately triggered another memory.\n\nShe sat at his table, the empty bowl of soup in front of her. Now that she had been fed, she turned her eyes on the large man in front of her. He wore a tight turtleneck sweater and a hat with giant ear flaps, and both of his hands were wrapped around a large mug of tea. His face was covered in deep lines that made her wonder if he had seen hard years like she had.\n\nWhen he had found her shivering in the alley, she had been too cold to refuse his offer of food, blindly obeying him when he coaxed her out of the cardboard box she had been using as a shelter from the storm. One of the first rules of the street was to trust no one, but her hunger had betrayed her.\n\nNow that she was warm and fed, what would he ask of her? It wasn't uncommon to hear such stories, and she wondered what was going to happen next. Did she even have the energy to fight him? If it meant surviving another night, did she even want to?\n\n\"Did you get enough to eat?\" he asked. \"I have more, but didn't want you to make yourself sick.\"\n\n\"I got plenty,\" she said, wondering if she could move quick enough to pull the knife from her sock. It was an old kitchen knife she had found in the dumpster over the summer, and it had protected her more than once.\n\n\"Good.\" He stood up and moved to the window. His apartment was small, and it overlooked the rec center across the street. \"This storm will take many lives tonight. It is much too cold, much too quick.\" He pulled off his hat and held it in his hands. \"You are stray?\"\n\n\"A what?\" she asked.\n\n\"A stray...you have no home, nobody to call?\"\n\n\"I manage just fine on my own.\" He was looking away, so she leaned back in her chair, letting her arm dangle so she could reach the knife in her sock just in case. Now that she was warm, she could think clearly.\n\n\"Ah. I see.\" He turned around and set his hat on the table. \"You are brave little kisa, aren't you? No matter. If you would like somewhere to stay, my bedroom door has lock on inside.\" He pointed at one of two doors in his tiny apartment. \"Or you can sleep in building. Just promise you won't try to sleep outside, not tonight. Is too cold.\"\n\n\"You...want me to stay?\"\n\nThe man lifted the tea to his lips. \"I want you to live, kisa. One night on the couch will not break me.\"\n\nThe old man had saved her life that night, of this there was no doubt. Pieces of her memory were coming back to her, and she couldn't help but think about what would have happened if she had turned down his hospitality. Mike was doing the same thing, and until she could get her head screwed on straight, it would behoove her to stick around and see where this went. Maybe learn more about who she was, and then go from there. While her memory was nothing more than a void, she knew one thing for sure.\n\nShe was a survivor.\n\nThere was a loud clunk from the stairs, and the goblin appeared, a toolbox in her hands. She set it down by the railing, mumbling to herself until she lifted her head to see Kisa sitting by the door.\n\nA growl escaped Kisa's lips, and she remembered how the two of them had fought. While she felt no animosity toward Mike himself, the goblin stirred something up inside of her that she couldn't quite explain.\n\n\"Nosy little pussy,\" Tink grumbled, then pulled a hammer out of her toolbox. \"Tink ready for round two.\"\n\nKisa smiled and stood, the growl dying in her throat. \"I don't think Mike would be very happy if you tried to hurt me. He told me I could stay, you know.\"\n\nThe goblin grinned, showing all of her teeth. \"Husband have big heart, make Tink proud. But Tink always watching. If nasty pussy step out of line, Tink learn new way skin cat, tan hide, then use to wipe ass.\"\n\nKisa laughed, then took a step toward the goblin before casually leaping up onto the railing. Despite the beam only being a few inches wide, she had no problem balancing on it. She walked along the railing and past the goblin.\n\n\"The day I let a booger with tits scare me will be the day that I die of embarrassment.\" She half expected Tink to throw the hammer, and was slightly disappointed when she didn't. Something about antagonizing the goblin felt familiar to her, but she couldn't explain why.\n\nTink laughed. \"Pussy has big mouth, but take goblin advice.\"\n\n\"Oh? Do you have some pearls of wisdom for me?\" Kisa spun around and was walking backward now, amazed at how easy it was. Her tail moved of its own accord, helping to keep her upright, and she could feel the grain of the wood under the sensitive pads of her feet.\n\n\"Tink know plenty.\" She twirled the hammer in her hand, then adjusted her grip on it, holding it by the bottom. \"Good stuff, like always have good hammer.\"\n\nKisa rolled her eyes. \"How is that good advice?\"\n\n\"Is best advice.\" Tink tossed the hammer into her toolbox. \"Almost as good as check for polish.\"\n\n\"Check for what?\" Kisa stepped back and slipped, then lost her balance. She slid off the railing, her hands outstretched, and grabbed onto one of the balusters, her feet now dangling over open space. Despite a tight grip, she slid toward the bottom of the railing, her feet dangling over open space.\n\nThe baluster creaked, and she swung back and forth, unable to pull herself up on the polished wood.\n\n\"Tink polish most of railing three days ago,\" the goblin explained as she walked down the hall. \"Nice and smooth. Use best oil, but run out of time. Did floors last week, too. No good for climbing.\"\n\nKisa squirmed, and was able to let go and swing her hand up to the next baluster over. She continued this process until she finally reached one that didn't feel like it had been polished like glass.\n\n\"Tink would go two more,\" the goblin warned from above. \"That one loose.\"\n\nShe pulled herself up and felt the wood start to give. Grumbling, she took the goblin's advice and moved again. This time, the wood held, and she scooted her hands up the baluster until she could use her legs to assist. From there, it was easy to spring over the railing and back onto the floor.\n\n\"You almost killed me,\" she said with a hiss.\n\n\"Not Tink fault cat is dumb. Railing made for hands, not paws.\" Tink had pulled a device from her toolbox and plugged it into an outlet in the hallway.\n\n\"You could have helped me,\" Kisa continued.\n\n\"Cat dumb, but strong, too. Tink know from punch. Not worried.\" The device clearly didn't do what Tink wanted, because now she was swearing under her breath and using a screwdriver to unscrew the panel.\n\nKisa wanted to ask what was wrong, but decided she had had enough of the goblin's nonsense. She walked by Tink and was halfway down the stairs when she heard a chuckle from above.\n\n\"Booger with tits,\" Tink muttered. \"Tink like that one.\"\n\nA smile crossed Kisa's face, and she continued down the stairs. Maybe she wasn't destined to be best friends with Tink, but she was willing to get to know the Caretaker better when the chance arose.\n\nFor now, she was fairly certain she smelled some leftover bacon downstairs and wondered if she could sneak one more piece before lunch.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nIn this second act, Mike will be slowing down quite a bit as he tries to figure out how to get back to the faerie realm. This means more time for the new characters to breathe a little, and more time in the house in general.\n\nPlease don't forget to leave a comment, click those stars, and definitely send me lit feedback. I do read everything, even if I don't respond (which I sometimes do). I love reading your thoughts, and definitely appreciate hearing about your theories, favorite characters, or even how this story has motivated you personally.\n\nOh, and don't forget to check my bio! If you follow me on Lit, you will get notifications when I post. Also, I do update the bio when I submit a new chapter, so for those of you who check often, you'll get a heads up that it's coming.\n\nMake sure to take care of yourself, cause my readers mean the world to me! Be kind to each other, and I will see you next chapter."
    ],
    "authorname": "writerannabelle",
    "tags": [
        "anal",
        "catgirl",
        "creampie",
        "dragon girl",
        "glitter cum",
        "monstergirl harem",
        "oral",
        "rub a dub dub four fairies in a tub",
        "sperm consumption",
        "reverse gang bang"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-50"
}