{
    "title": "Discovering What Big Means Ch. 03",
    "pages": [
        "As I rested on top of Adam after the last of my climatic contraction had finished, I reflected on the fact that was just the entr\u00e9e. The main course was yet to come - or so I hoped anyway.\n\nBut in the mean-time, I was a mess. Adam dumps a big load and it had turned both the inside and outside of my bikini pants, and me inside it, into a sticky mess which was now settling under gravity to where my mons met Adam's stomach.\n\nAdam reached over and passed me a hand towel he'd extracted from his bedside table, which I slipped between my legs and under my mons.\n\n\"So, my bikini's going to be a cum catcher just like Ellen's eh?\"\n\n\"That wasn't my intention, but I can see how it happens.\"\n\nI didn't want to make him feel bad, so with the most unjudgemental, teasing voice I could muster, I asked...\n\n\"What made you cum. I didn't touch you.\"\n\n\"I was just getting so off on giving you head and fingering you and you looked so teasingly sexy in your bikini. When you came, I couldn't help myself. It just went.\"\n\nI eased myself off Adam, holding the towel under me as I dashed to the bathroom. There I untied the side strings of my bikini pants and gingerly slipped them off my body; trying not to spill the contents. They were a soaking, juice and cum covered, mess. I filled the sink and rinsed them; brushing the cum off to let his little sperm swim free in the water, before they damaged the fine material.\n\nA wipe of my crutch with the towel and I took a moment to look at myself in the bathroom mirror. Even just the bikini top made me look ravished. Slightly dishevelled, with the rim of my right puffy nipple hanging out of the cleavage hem of the triangle trying to cover it, there were giant circles of damp, still translucent, material covering each projecting nipple. The dampness was more than just Adam's saliva. The way he stimulates them seems to bring out some dark coloured oils of my own which stain the cloth.\n\nI took the top off too and, after a bit of rubbing of the worst affected areas, added it to the rinsing water.\n\nThis time he'd have to take me naked.\n\nI walked back into the room with as much confidence as my naked state would allow. Adam was still lying on the bed where I'd left him. His cock had shrunk from its former swollen glory, but was still impressive; the waist band of his swimwear having made no attempt to recapture the top half of it.\n\nStanding at the edge of the bed, I looked down at the gorgeous male laid out before me; already feeling lust surging through my body again. I bent over the bed and ran my hands up his legs and the inside of his thighs; stopping just before they touched his balls.\n\n\"Well, I hope you're good for more.\"\n\nAdam didn't need words to answer me. He cast his eyes downward and we both watched, me transfixed, as his manhood engorged again; rapidly extending in length and thickness until it was again weeping pre-cum directly into his navel and his balls and swollen base were threatening to rip apart his swimmers.\n\n\"See the effect the naked you has on me.\"\n\nYet again I marvelled at its size. Nothing like Sven's. I wasn't surprised his former girlfriends were scared of it. So was I. In a very literal sense I'd intended from the outset to explore new territory with it tonight, to use its length to send it into space no man had been before, so to speak. But the only thing that consoled my fear was the knowledge that Adam would give me complete control; not force it where it wasn't ready for him or beyond where I was comfortable.\n\nAgain I sat on his thighs, playing with its length, width and hardness, feeling his balls still inside his swimmers and enjoying just the sight of it as I aroused myself as much as him. Adam hummed with enjoyment with every touch; making clear the sensitivity of this massive statement of manhood.\n\nThe yearning ache in my vagina was back. It was time.\n\nI pulled his swimmers down his legs. The visual was about to become the physical.\n\nI moved myself up to sit on him cowgirl style; sliding my crease along it again to smear it with my juices as I tickled up my clit and aroused myself even further. \n\nI lifted it upright. Even that simple action reinforced how different Adam was. It resisted me with a powerful surge, settling down to a constant, forceful proclamation that it desired to return to its preferred position tucked closely against his stomach. I was barely strong enough to keep it upright. \n\nI brought myself over it, located the tip into my vagina and lowered myself slowly down. The feeling of being uncomfortably stretched was much less than before, even if the feeling of being filled and the sense of pressure against the walls of my vagina were no less.\n\nBut the latter were good feelings. The filling satisfied a yearning that I'd felt all through our foreplay. The pressure was really nice when I buried him as far as my g spot. More so because of the additional pressure from his manhood's desire not to be bent up as it was. It quickly stimulated it in a way no amount of pounding from Sven ever had.\n\nAdam too hummed in pleasure as his shaft slowly submerged itself in my body. Penetrative sex was new for him and his 'oohh's\" and \"aarr's\" of pleasure reverberated through the bedroom with every step of his penetration of me and every moment of my body against his.\n\nResting my hands on his strong pecs, I rose up and down on him; withdrawing to plunge him half back in again, playing him against my g spot. It felt incredibly nice and soon had me moaning in delight; more so as Adam lifted his hands against my breasts to stimulate my nipples. But it was a means to an end, not the end in itself.\n\nEverything I read about what I was going to do next said I should be really aroused first.\n\nWrapping one of my hands around the base of his shaft to control the depth, slowly, I buried him deeper; wanting to use more of his length as I took it where no man had gone before. I touched my cervix for the first time, but with the full width of my hand still wrapped around the base of his shaft, I realised more than ever just what I was dealing with. He had way more length than I had depth to offer him.\n\nWhen I touched him against my cervix, I'd never been sexually touched there before and didn't know whether it would hurt or stimulate. It didn't hurt, so I touched him against it again and, with that first cautious contact out of the way, realised it felt nice. Subsequent contacts felt nicer still.\n\nI wasn't long thrusting him. Just little short jabs that made sure the contacts with my cervix came at a fast and furious pace. I tried for a moment just rocking with him fully penetrated, thinking I could screw his shaft around inside me to just rub the tip against my cervix while keeping him in constant contact. But he was way too thick for that. He was jammed up inside me so tightly that the only possible movement was in and out. \n\nSo I went back to frequent short jabs. Which was in a way better, because that kept stimulating my g spot too.\n\nEven I noticed my own moaning had become more guttural; as if it was from somewhere deep down inside my body; which is exactly where I felt something monumental building. But it wasn't like something I'd ever felt before. I couldn't say 'that feels really great there'. It was everywhere; right through my body, slowly spreading, sharing the bliss around.\n\nThe climax caught me almost by surprise; an explosion that suffused rapidly through my whole bodily system, from my head to my toes. It quickly subsided into pleasurable tingling and vibrations throughout my body. And just when I thought it was done, it exploded again...going through the tingles and vibrations all over.\n\nI'd stopped stimulating myself when it first happened, thinking like a clitoral orgasm, I'd become too sensitive to immediately want more. But it wasn't how it worked. Something told me there was more to be had, even after the waves from that first explosion continued to reverberate through my body. Instinctively I started working up and down on Adam's shaft again, rapidly touching my cervix at the top of each thrust.\n\nWhich just doubled the power of the next wave; bowling me over in its intensity, making the tingles and vibrations that washed through me after the wave subsided insanely pleasurable.\n\nI didn't know what Adam was making of all this. I was crying out and moaning like an idiot; although he can't have mistaken them for anything but cries of pleasure. I'd closed my eyes with that first orgasm and only now opened them again to look down on Adam looking up wide eyed at me. \n\nI flashed him a grin before the crest of another wave left me throwing my head back with my mouth formed into a circle, moaning at the light fitting above my head.\n\nHe was still stimulating my nipples, with my long sun bleached hair kissing the back of his palms; which somehow seemed to feed through into the pleasure loop my body was in. Picking up on something I'd read, I took one of Adam's hands and pushed the end of his finger into my belly button and screwed it around.\n\nOh my god, it was like I couldn't take it any more. It made the next wave dwarf in intensity everything that had gone before it. I threw myself down on Adam, going from sitting on him to lying on him, pushing my arms under his body to hold him as tightly as I could. My whole lower body was quivering; mini thrusting his shaft in a continuous process of stimulating my completely insane cervix.\n\nIn a way, I was surprised Adam had lasted this long. Maybe the earlier orgasm had slowed this one, if that's how it works.\n\nBut even through my own excitement, I could tell Adam's was growing.\n\nHis face was acquiring that cute pre-climax look he gets and his grunts getting deeper.\n\nI felt his cock surge inside me; the usual prelude to his release. Instinctively I pushed him in and held him firmly against my cervix. There I felt that final swelling of his shaft and the flaring of the tip as, lacking anywhere else to go, it flattened out against the top of my vagina. A moment later, the pulsing signalled his climax as his seed jetted powerfully against my cervix. \n\nOooohhhh, another wave of pleasure flooded my whole body as if it was reacting to the forcefulness of his seed's attempt to impregnate me. Even as his ropes of cum continued to pulse up his shaft, I was already holding him tighter still, emotionally overwhelmed, on the verge of crying a flood of tears onto his chest. \n\nAs his own climax finished and his manhood started to soften, I sensed Adam simply didn't know what to do as I continued to just lay on top of him in what seemed to be a constant state of some strange sort of orgasm. \n\nIf I was vaguely aware of the effect of Oxytocin before, I was rudely awoken to it now. I'd never felt so calm and loved up in all my life; almost at peace with the world as I lay in the arms of my lover. I'd never tried drugs or known a drug high, but I doubted any could match the high I felt as I lay there.\n\nIt was probably ten to fifteen minutes before I really felt the orgasm was over. But even then, I was suffused with a warm inner radiance as if a new woman had emerged from the cacoon of my old self.\n\nBut that was my last memory of the night. Later Adam would tell me I fell into a deep petite mort, even as I continued to shudder in a seeming continuation of my orgasms. He rolled me onto the bed, his half rigid cock still penetrating me. Expecting me to wake at any moment, he wrapped me in his arms and legs even as my arms continued to embrace him. It got a bit awkward for him when he became aroused again. He knew he was about half penetrated, but unfamiliar with my body he was scared of moving, and especially of going any deeper, least he hurt me. \n\nHe told me it was beautiful, just lying there merged with me in such an erotic embrace, even wondering if he could still feel the after effects of my orgasm reflecting itself as shudders and contractions deep within my body (but acknowledging his lack of experience made it impossible for him to tell). He was in no hurry to withdraw from the delightful state of penetration in which my sudden fall into sleep had left him. He felt a little guilty that he lay with me like that for too long; suddenly realising he was brewing up and about to come. Too entangled with me to withdraw fully in time, he let it rip; being careful to hold himself still.\n\nHe was fairly sure that made me come too; a little gasp and some feeling of tensing flowing through my body certainly giving that impression.\n\nAll I know is that I had the longest soundest sleep I can recall having and woke feeling like a new improved version of myself; even if somewhat sticky between my legs.\n\nWhen I woke relatively late in the morning, I reached across to find the other half of the bed disappointingly empty, before remembering Adam had swim squad training on, which would have been finished by now. Attracted by noises in the kitchen, I got up, spent a moment in the ensuite tidying myself up, and walked, still naked, out to greet him. \n\nHe was cutting up some fruit for our breakfast and I saw him before he became aware of my presence.\n\nOh my god, what an Adonis. His tall, lithe, muscular frame was fully pumped up from his swimming. Instinctively, I looked down to where his manhood was captured within the swimmers he was wearing. It was a whole new vista of excitement on display for me.  \n\nThe swimmers I'd seen him in until now were low waisted and tight fitting. They held his cock up firmly against his lower torso, really leaving the only place for the length of his giant manhood to go as sideways, across the front of his upper thigh and towards the side seam with the material barely wide enough to cover the circumference of its contents.\n\nThese seemed to be the same brand and size of swimwear, albeit badly faded, but now his cock hung down at the front, the swimwear more like a hammock in which it rested. It dangled down nearly a third of the way between his crotch and his knees; sheathed by what seemed to have suddenly become ultra-stretchy and somewhat translucent material; the leg seam elastic still tightly drawn up to his upper thigh.\n\nAdam looked up and flashed me a smile.\n\n\"Good morning. You seem to have slept well. What a lovely way to see you first thing too.\"\n\nI quickly glimpsed down at myself. I might have been still half asleep and straight from the bed with only a brief bathroom stop, but I'd had the presence of mind to walk tall and upright. My breasts stood out perkily, their olive flesh, with a subtle tan line indicating where my normal bikini top sat, partly covered by straggles of my sun kissed long hair. Capping them were my puffy nipples, the areolas swollen and capped by nipples that were already partly hardened and pointing suggestively at Adam.\n\nHaving hardly had time to eat dinner last night and not yet having had breakfast, my stomach was fully concave, drawing attention to the swelling of my waxed mound, around the turn of which was prominently displayed the start of my none too subtle crease. \n\nI looked back at Adam. I could see he'd become partly aroused, his previously dangling shaft not necessarily much larger but now projecting forward with a degree of hardness, still fully sheathed.\n\n\"Hi. How was swimming?\"\n\n\"Great. I felt like I was on fire. Inspired by you to set new times.\"\n\n\"I hope you didn't wear yourself out.\"\n\n\"Why, scared I can't manage sailing this arvo?\"\n\n\"No, I had something a little more immediate than that in mind.\"\n\nShit, I thought. Did that just come out of my mouth? Something had come over me. I wasn't usually as sexually forward as that; or at least hadn't been with Sven, or even until now with Adam. Nor was I normally as insatiable as I felt at that moment.\n\nI walked around the kitchen bench to where Adam was, running my fingers down his chest as my physical presence and obvious intention had its effect on him. I watched as his cock grew; stretching out the material, first to the front and then over the waistband as his manhood arched into its upright position. But unlike those he had on last night, these swimmers seemed capable of dealing with his growth. Only just. The material was stretched impossibly tightly around his extended shaft and drawn out so thinly it had become almost transparent with no obvious sign of a lining.\n\nAdam's pre-cum was weeping copiously through the material.\n\nI wrapped my hand around the shaft and played with it, being excited by its size and hardness, before slipping my hand inside the waistband to release the drawstring and unsheathe his massive manhood.\n\nHopping onto the kitchen bench, I wrapped my legs around Adams waist as I pulled him towards me with one hand around his neck and the other around his shaft; guiding the latter towards my crease.\n\nAs I kissed him, I circled and brushed the tip of his shaft around and across the receptive opening to my sex; taking time to smear it with my juices and his pre-cum, before playing it against my clit. I may have been receptive, but with Adam's manhood, there could be no rushing things. I needed to be well juiced up and absolutely hungry to take him inside me before leading him there.\n\nAs my clit became excited, I started brushing my nipples across his chest too; all with my tongue buried deeply in his mouth.\n\nIt was time to have him penetrate me.\n\nWith a hand still around his hardness, I guided him in, bringing him just to the depth where the swollen bell of his cock rubbed against my g spot.\n\nI was already very aroused. The contact with my g spot quickly had the desired effect. Just the size and hardness of Adam's manhood made sure of that; firmly rubbing against it in a way nothing else could.\n\nBut Adam was getting excited too. There'd be no pre-penetrative ejaculation by him this morning to slow down his rate of brewing up. As I rubbed him up and down inside me our moans and groans became almost synchronised; Adam's eyes transfixed on my breasts as his mouth puckered towards a circle and his breathing became heavier.\n\nIt was becoming something of a race to climax; one where second place was just as good as first, as long as Adam left me something to work with if he came first. \n\nI knew I was on the edge of going when Adam pipped me at the line. A sharp intact of his breath and a powerful surge of his cock, transmitted forcefully against both my hand which still circled it and the g spot it was pushed against, was fair warning of what followed. In the now all too familiar way, his thick shaft transmitted through my vagina the swelling and pulses which drove his seed forcefully up his manhood to spray themselves inside me.\n\nI could feel Adam almost involuntarily jerking his shaft towards me as he stood there unloading his cum into me; prevented by my firmly clamped hand from thrusting much deeper than where it was.\n\nBut it was really that first powerful surge that did it for me. The sudden increase in pressure brought me right to the edge; sitting on the precipice of a big orgasm. The pulses and jerk pushed me over. I threw my head back, moaning at the light fitting again as I cried out my pleasure; instantly letting my hand slip a bit further down his shaft to bring him a bit further into my body to receive the strong contractions of my sex.\n\nI squirted; a jet of lady cum spraying over Adam's lower shaft and against his pubis and down into his swimmers, still hitched on his balls under his shaft.\n\nI sensed Adam going weak at the knees. He leaned forward towards me; my angled back body bringing him against my breasts.\n\nWith a hungry growl he took my right nipple and its puffy areola deeply between his lips, pushed it against the roof of his mouth and firmly rolled it with his tongue. I put the hand previously wrapped around his shaft behind his head as I held him there, the additional stimulation sending my climax through another cycle.",
        "I could feel Adam gingerly exploring deeper into my vagina with his now unconstrained manhood; a slow push burying his softening shaft until he found my cervix. I felt the pillowy push of the tip of his bell, flattening out against it. It felt nice, it felt good. I wanted more and screwed myself around, seeking to stimulate the tip against it. But as big as Adam's even flaccid shaft might be, he couldn't maintain the contact. Sensing he was pleasuring me, Adam pushed harder; but that only bent his manhood and made it pop out.\n\nStill contracting, I held him against me, having him suck my nipples until my climax had nothing more to give.\n\nWe were a sticky, dripping mess, and thanks to my squirting, so was the floor under us. First things first. I eased myself off the bench and took Adam by the hand, guiding him back to the shower in the ensuite bathroom. \n\nAs I waited for the water to run at least a little warm, I watched Adam ease himself back out of his now dripping swimmers. It was like a strip tease, slow reveal as the long length of his flaccid manhood appeared over the waistband of the hammock like garment that had previously contained it.\n\n\"Why are those speedos so different from your others. They let your cock hang instead of holding it up.\"\n\n\"Yea, and they're a lot more comfortable for it too. They're old one where the filling has fallen out of the Lycra. If you're squad swimming you trash a lot of swimmers with the chlorine in the pool but that also makes them go transparent too. Unless you're rich and can afford an endless supply of swimwear, we wear these old ones double or triple bagged as we call it for training. Even then the girls' nipples can show through pretty well sometimes. The other two layers I was wearing this morning are still hanging wet on a chair in the kitchen.\"\n\n\"But does it really make that much difference to how it supports you?\"\n\nI could sense Adam hesitate, unsure how much information to give me.\n\n\"Yes, the material goes really saggy but that makes it sling my cock really nicely. But I also cut the lining out of some of them to wear as a bottom and intermediate layer because they also make really comfortable undies, so that makes it even more obvious.\"\n\n\"Is it that hard to buy good undies for yourself?\"\n\n\"Impossible. Men's' undies are made of much heavier cotton and even if you get supposedly stretch ones, they never leave enough of a pouch to hold me and they don't seem to stretch as much as even new swimwear does. If I get jockey style, they crush me, if I get boxers it dangles out of the bottom of the leg and even if I get boy-legged ones, it hangs down embarrassingly making me look as though I've got a half erection in my pants. At least these just make me look well hung instead of half aroused. Mind you, wearing nylon instead of cotton for undies is a bit uncomfortable sometimes, so I mix and match what I wear.\"\n\nI had to giggle. Well hung was a massive understatement. More like a whole third leg. Still...\n\n\"Can't you just buy bigger ones?\"\n\n\"No, because then the leg elastic isn't firm enough and either my balls or the end of my cock falls out and gets crushed between my thigh and the elastic as I move about. You might notice my swimmers look a bit small by comparison with what Ned and the other guys wear for the same reason. I have to go a size down. If I got a bigger fit it would be positively obscene with my balls exposed out of the leg seam. I know I've tried it.\"\n\nI grabbed Adam by his flaccid cock and pulled him under the shower with me.\n\n\"The tribulations of being skinny and well hung, hey?\"\n\nOur bodies anxiously wrapped around each other under the shower; pashing like I'd never pashed before. Touching, fondling, holding and kissing with an uncontrollable lust. It wasn't long before Adam's manhood was back to its swollen, towering best.\n\nI'd been randy for him from the moment we'd joined in the shower, but being randy was different from my body being ready to accept him. With Adam, foreplay had to be everything.\n\nAs his cock came back I bent it down between my legs and played the tip against my clit. When I was sure I was sufficiently aroused, I turned Adam and pushed him against the wall, lifting.my right leg so my knee rested on his waist. With Adam taller than me and his erect shaft coming well above his navel, he took the hint as I tried to bring him into my sex and bent his knees down to allow the initial penetration; straightening them only slightly as the immersion of his manhood into my body permitted.\n\nIt was at the wrong angle to really rub my g spot with its tip, although I knew as I fully penetrated him, the mere thickness of his shaft would take care of any angle issue.\n\nEventually came the real test. I'd read somewhere that taking him this way - me standing with one leg hooked over his hip - lengthened my vagina and helped me accept a longer shaft. I'd still had a hand around its base as I pushed him in, limiting the penetration to what I'd achieved before. When that bottomed out and he still wasn't hitting my cervix, I took the risk and took my hand away; trusting that Adam wouldn't suddenly hard thrust me.\n\nSlowly I kept bearing down on him to push him in deeper.\n\nIt touched my cervix. It was sensitive, but not in a painful way. Lifting my leg higher on him, I pushed further still. There was pressure, but still no actual discomfort. I tested his depth by putting my hand down and feeling the length of his exposed shaft. We were nearly there. I pushed further until I could feel his tight balls against my labia; amazed I could get something so large completely inside me.\n\nI could feel the thickness of his shaft pushing on my sensitive g spot. But I quickly found that with small movement, I could use the tip of his shaft pushed firmly against my cervix to massage it really pleasurably. \n\nFrom the moment he sunk down against the wall to let me push him into me, he found himself close enough to my breast level to delight in playing with them; both orally and with his hands and fingers. As I started to massage my cervix, he had one breast buried deeply in his mouth and the other cupped by a hand, with the hard nipple being tweaked between his fingers, leaving a spare hand.\n\nFollowing what I learnt the previous night, I took the hand and had him play a finger into my navel; surprised by how much stimulation such an innocent area could contribute to my cervical arousal.\n\nThe orgasm came remarkably quickly; wave after wave of pleasure that suffused through my whole body, leaving me tingling and shaking.\n\nBut even as the waves rolled on, I knew it was Adam's turn and I wanted to give him something special. Until now, his penetrative orgasms had been triggered by what were essentially micro movements inside me and maybe just the sheer novelty for him of having his manhood inside a woman's vagina.\n\nHe'd been good; letting me control things and not trying to forcefully thrust away at me. But in the process letting me come to trust him. Given the size of the monster cock he was using, that was critical.\n\nEven as the waves of my orgasm continued, I bent down to his ear; his head still buried in my chest where he was sucking half my breast...\n\n\"Your turn. You can long thrust. Just do it slowly.\"\n\nI just hope he knew what I meant by long thrusting. This isn't a conversation I was in the habit of having; indeed I doubt many lovers need to have. But I certainly wasn't going to tell him he could pound me.\n\nHe released my breast from its oral embrace and looked up at me with a silly grin. I kept the leg supporting me straight and the other one as high on his hips as I could. His body dropped and his shaft slipped down my womanhood. It was hard to tell how far; after all, he could be half out and the tip of it still not be far from my cervix. \n\nI got a better idea as I felt it slowly pushed back in. It had been a long way, the thickness of it powerfully stimulating my g spot as it slid past it. It was clear it was exciting him like I'd never seen before. His head was pushed back hard against the tiles and his jaw hung slack as he let out a mighty and prolonged...\n\n\"Aaaaaaaaaahhhhhhhhh...ooooooooooohhhhhhhhhhhhh.\"\n\nAs he approached maximum penetration he slowed further; but still seemed keen to explore the depth he could achieve. As he maxed out, he circled his hips a bit, maybe enjoying the embrace of its full length by my body, but in the process firmly massaging my cervix and reinforcing the next wave of my orgasm.\n\nAs he repeated the movement, his groans became much louder and louder again on the third. \n\nAs he started to thrust in on the fourth, it was clear the end was near. The long loud groans were suddenly broken by a sharp...\n\n\"OoOo.\"\n\nI felt his cock surge in that familiar way as he pushed it in a bit faster than he had before. The moment being near, he stopped just before he maxed out, froze and bellowed...\n\n\"AAAAHHHHohmygodaaaaahhhhhhhh...aaaahhhhhhhh...aahhh...aaahhh..oooowww.\"\n\nI've never heard a man - OK, which basically only meant Sven or Adam - have such a loud orgasm.\n\nBecause he'd frozen his shaft in place, I could clearly feel the powerful pulses forcing his seed along his shaft and the jetting of each rope against my sensitised cervix.\n\nHe stayed there panting until I could feel his knees go wobbly and he quite literally slid down the wall until he was left sitting naked, with his shaft still half firm, on the floor of the shower.\n\nHe looked up at me and smiled stupidly...\n\n\"Oh my god, I've never had an orgasm like that before. It was intense.\"\n\nI knew what he meant. I was still shaking and trembling from the repeated waves of my own one."
    ],
    "authorname": "Joanmcarthy",
    "tags": [
        "erotic couplings"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/discovering-what-big-means-ch-03"
}