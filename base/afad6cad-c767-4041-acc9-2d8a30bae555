{
    "title": "The Year of the Cat Ch. 08",
    "pages": [
        "Author's note: 100% Fiction. All sexualized characters are adults. \n\nNew Year's Day happened to fall on a Thursday this year allowing Matt yet another short work week. \n\nMonday morning on the job site, Matt caught a mistake on the project; a mistake so vital that it could have revoked the company's license. The entire upper management was on site that day to turn over the project to the client. Thanks to Matt's professional and timely intervention, the job and therefore the company was saved. The client was overjoyed and agreed to a contract for several more projects at sites around the world. \n\nLater that week, after the paperwork had been signed, Matt felt a hand land firmly on his shoulder. Looking up, he was surprised to be face to face with the company owner. \"Well done, Turner. I won't forget about what you did for us.\"\n\nMatt tried not to burst into a grin. \"Yes, sir... M-my pleasure, sir!\"\n\n~~~~~~~~~~~~\n\nJanice was also looking forward to an extra long weekend, but even more than that: the company holiday party on New Years Eve. The whole building was buzzing about the lavish event. \n\nJanice spoke excitedly to Kendra as they stood in line for lunch. \"This is going to be SO much fun!! I hear there's going to be a DJ, fancy food, open bar, dancing...\"\n\n\"Ooo! We're gonna get our groove on!\" squealed Kendra bumping hips with Janice. \"Oh. By the way... you're coming with me to go shopping after work. We gotta find some dresses that we can fit our girls into.\"\n\nThe two women were approaching Fransisco at the cashier counter. \"...and speaking of the girls...\" Kendra reached up and began to unbutton the top buttons of her blouse. \n\nJanice gently stopped Kendra's progress, lowering her hand away. \"Hold on, K. I got this.\" With that, Janice unzipped her work dress all the way down to the middle of her chest allowing a bulging display of several cleavage inches. \n\n\"There you go, queen!\" Kendra whispered excitedly. \n\nUpon seeing the ladies approach, Fransisco literally had to wipe drool off his lip. His eyes couldn't be torn away from Janice's display. \n\n\"Hi Fransisco.\" smiled Janice, bending forward from the hip, leaning close to his ear. \"Promise you'll save me a slow dance at the party. Pretty please?\" she whispered. \n\nFransisco paled and shook his head 'yes' vigorously. He then motioned for the girls to pass through with a trembling smile. \n\n\"You're catching on, you sexy bi-\"\n\n\"Nice trick, Paige.\" a male voice suddenly very close behind them. \n\nKendra turned and sneered to see Hank from Payroll leering over their shoulders. \n\n\"You should know:... that works on me too!\" he grinned, displaying his yellow teeth. \"I'm good for all kinds of things... for a price.\" his voice lowered as he stared directly into her cleavage. \n\nJanice shuddered and zipped up her dress. \n\n\"In fact: I can be your DD at the party.\" his beady eyes darted to each of their faces, expectantly. \"....By the way: that's a 'designated driver', not a bra.\" Hank slapped his knee laughing loudly before continuing. \"...when's the last time either of you fit in a double D? Sixth grade?\" he wheezed in laughter. \"God, I bet you were so hot ba-\"\n\n\"OKAYBYE!\" interrupted Kendra, unceremoniously. \n\nThe girls turned and rushed from Hank who stood leering at them as they quickly walked away. \n\n\"Creepy motherfucker.\" Kendra growled under her breath. \"Watch out for him, Janice. For real.\"\n\nJanice nodded, casting a cautious look towards the middle aged man, who was now shuffling empty handed out of the cafeteria. \n\n~~~~~~~~~~~~\n\nAfter work, Janice greeted Kendra in the parking garage as she climbed in to the passenger seat of Kendra's silver sedan. \n\nKendra whooped and shimmied in her seat to the music blaring out of her car's stereo system as the two made their way out of the garage and onto the open road. \n\nKendra whizzed her car through downtown, overtaking speed limit followers with ease. Janice held on tightly to the door handle, clenching her teeth in anxious dread, while Kendra raced the unknowing competitors down the street. \n\nShe finally skidded to a stop in the multilevel parking garage and the girls entered the mall. \n\n\"Where do we start?\" queried Janice, gaining control over her shaking knees. \n\n\"I want my dress raisin' dicks. So, we're going to 'Blaze'. I called my cousin to see if she's working today. She says she's gonna hook us up\" said Kendra setting off towards the escalator. \n\nJanice's mouth hung open as she entered 'Blaze' behind Kendra. Exquisite, colorful dresses with all manners of daring cuts and plunging necklines lined the racks. It was obvious that most, if not all, of the gorgeous dresses were completely unwearable by either women, yet Kendra strode confidentially to the counter. \n\nA young sales clerk, who had been absorbed in her phone screen, looked up to see the two approach. Kendra and the clerk shared a smile of familiarity. \n\n\"Sup girl!\" said the clerk. The two performed a spectacularly elaborate handshake greeting. Janice blinked in amazement. \n\n\"Hey, cuz. This is J. J this is my cousin, Monica.\"\n\nThe ladies nodded to each other. \n\n\"So. Whatcha got for us?\" asked Kendra. \n\n\"Come on back.\" Monica replied. \n\nMonica led Kendra and Janice to a rack propped against the end of the corridor in the fitting area lobby. \"I did my best. Y'all might be able to squeeze them big ol' things in a few of them dresses. No guarantees though.\" she said shaking her head at Janice, amazed. \"When you told me you were bringing someone by that was even bustier than you, I couldn't believe it, but... Damn, girl... you were right!\" \n\nMonica's eyes took in Janice's full figure. \"If only there was a way you could hook me up with some more up top...\" she sighed. \"I'm barely filling my C's\"\n\nKendra laughed. \"You need to hook up your dinner plate, cuz! You're too afraid to get thick. Don't worry, it'll find its way to the right places. Believe me!\"\n\n\"Shiiiit. I ain't trying to do all that...\" Monica turned up her nose and walked out towards her counter. \n\nKendra scoffed at her cousin's back before smiling at Janice. \"C'mon, J. Let's go digging!\"\n\nTime flew by as the ladies tried on as many dresses as they could squeeze into.\n\n\"Oh shit!\" squealed Kendra behind these dressing room curtain. \"I think I found it!\"\n\nKendra stepped out before Janice wearing a purple dress that was so tight, it looked like it was painted on her skin. Janice's jaw dropped at the sight of Kendra's astonishing curves barely contained in the shimmering, purple fabric. Her giant, brown breasts looked like they were ready to slide right out of her single strap, sling top. Kendra's astounding bubble butt created stress lines in the dress' fabric, testing it's capabilities. \n\n\"Oh my god, Kendra!\" gasped Janice. \"You look incredible!\"\n\n\"Damn right! I'm getting a raise one way or another!\" she exclaimed. \n\nJanice sighed at her own, slow progress. \"I'm not seeing any that really call out to me.\"\n\n\"I think you would rock this one.\" said Kendra, retrieving an unchosen dress from her changing room. \"...but we'd have to do something about your hair...\"\n\nJanice ran her fingers through her pink curls. \"My hair?\"\n\n\"Yeah, pink's no good for this... but, as a blonde, this would look sexy as fuck on you.\"\n\nJanice took a moment to imagine her look. \"I could do that... I'm getting a little tired of this color... and hell, I'm a natural blonde anyway.\"\n\nJanice tried on the dress. The dark blue gown fit her like a glove. The dress tastefully covered her entire front up to her neck, while being completely backless and shoulderless. Miraculously, only the very edge of her side boobs peeked out of either side of the narrow top portion. The dress hugged her hips and tapered down to a long skirt with a slit running up the side. A relatively modest dress compared to Kendra's, but elegant and breathtaking, nonetheless.\n\n\"Oh... yes. This is the one.\" said Janice confidently. \n\n\"Mmmm! Damn, girl. Looking fine! We'll wrap these up and hit up the hair salon.\"\n\n~~~~~~~~~~~~\n\n\"I hope your ready for our date on thurs cause I sure am\"\n\nMatt grinned at the screen of his phone. Another photo from Pamela was downloading. When the image opened, Matt gasped at the sight of her naked pussy being revealed from the side of her panties, being held back by her dainty fingers. Her tight, pink folds were glistening with anticipation. \n\n\"this is the 'before' shot! :-D\"\n\nMatt chuckled to himself at the dining room table, but faded to a contemplative silence. \"After months it's finally going to happen. Why don't I feel more excited?\"\n\nThe plan Janice and Matt had agreed on for New Year's Eve was this: her and Kendra would get ready for their work party at the apartment and be long gone before Pamela arrived. In the meantime Matt would be cleaning the living areas and setting a romantic mood in his bedroom. \n\nKeys jingled at the front door knob and Matt saw Janice walk in carrying a large dress bag. At first, he could only assume it was Janice, due to her incredible bosom, but with her blonde hair, she looked almost completely different from the neck up.\n\n\"Hi Ja-....\" In a matter of seconds, Janice watched amused as Matt's face went from a calm, pleasant expression, to a confused gawk, then to a happily stunned smile. \n\nJanice blushed at Matt's wide eyes taking in her new look. \"I hope that's a smile of approval!\" she grinned. \n\nMatt blinked himself back to self awareness. \"Sorry for staring like that... Janice, you look absolutely beautiful!\"\n\nShe beamed. \"Aww. Thanks...\" she twirled her fingers through the locks dangling near her ear. \"It's just dyed blonde now... but, it'll grow blonde naturally from now on.\"\n\n\"It suits you. It brings out your pretty blue eyes.\" Matt smiled at her warmly. \n\nJanice had to hide her face in a bashful giggle. \"Ok. Cut it out. You're making me blush.\"\n\nMatt laughed at her, teasingly. Just then, his phone rang. It was his job. \n\n\"Excuse me, home girl. It's work calling me for some reason.\" Matt said, starting to stand up to leave the room. \n\n\"Stay here,\" Janice nudged him back in his chair. \"I'll leave you alone to go shower and change clothes.\"\n\nMatt answered the phone as Janice closed the bedroom door. \n\nIn her room, Janice peeled off her work clothes, donned a hair cover and hopped in the shower. \n\nShe reveled in the warm water and sudsy soap washing over her skin. Feeling refreshed and clean afterwards, she picked out a favorite comfy shirt from the drawer: a plain, pastel colored T-shirt that looked like it was about three sizes too small. Janice pulled the thin material over her naked form. The aged fabric responded to being stretched beyond its limits by becoming nearly see through. Janice did a double take at her reflection as she passed, observing her areolas clearly visible. She shrugged her shoulders dismissively and entered the dining room. \n\nThere sat Matt, looking pale and distraught. Janice immediately furrowed her brow in concern. \"Something has happened...\" she surmised with dread. \n\n\"Matt?\" he heard his name and looked up to see Janice approaching him cautiously with concern. His distraught mind didn't even register Janice's transparent top. \n\n\"Work is sending me to Japan.\" Matt said quietly. \n\nJanice froze in place. \"Wow! Japan?! That's amazing! For how long?\"\n\nHis sorrowful eyes rose to hers. \"...three months.\"\n\nJanice felt her knees going weak as she absorbed to emotional gut punch. \"Three months!?!\" she said breathlessly. \n\nMatt nodded. \"It's my reward for saving the company.\" he sighed. \"They bumped me up to Team Lead and put me in charge of my own project.\"\n\n\"Well... congratulations... but, halfway around the world!?\" said Janice shakily. She was trying her best not burst into tears. \n\nMatt nodded, solemnly. \n\nA moment of silence passed. Janice, becoming aware, shook herself, sat up straight and wiped her eyes. \n\n\"It's gonna be ok, Matt.\" she said encouragingly. \"It's gonna be better than ok! It's gonna be great! You get to go to Japan! I know you have to be excited- I've seen the books about Japan on your bookshelf.\"\n\nIt was true. Matt had always had a fascination about the Far East. The prospect of three months in Japan would have thrilled him, normally. However, right now the excitement was bittersweet. He feared leaving now would certainly prove fatal to his relationship with Pamela. Also, to be separated from his happy home life with his beautiful friend was even more heartbreaking, though he hesitated to admit it. \n\n\"... and you don't have to worry about the house or me while you're gone-\" Janice continued, trying to encourage Matt. \"I'll keep this place just the way you left it and I'll make sure the bills get paid and ... Oh yeah... when are you leaving?\"\n\nMatt looked up at her, meekly. \"Only ten days from now.\"\n\nA squeak of surprise escaped Janice's lips. She finally couldn't contain her sadness anymore. \"Oh, Matty!\" she sobbed, reaching out to him and pulling his head to her bosom. \"I'm going to miss you so much!!\"\n\nA tear was squeezed from Matt's eye as his head was pressed into Janice's nurturing softness. The two embraced that way for several minutes until Matt felt her release her cradling arms from his head. \n\nJanice took a seat next to him, holding on to his hand as though she was keeping him tethered to her. \"What are you going to say to Pamela?\"\n\nMatt sighed. \"I imagine once I tell her I'm leaving for that long... that'll probably be the end for me and her.\"\n\nJanice caressed his hand tenderly. \"Don't speak too soon. I bet she's smart enough to know she's got a good man worth holding on to.\"\n\nMatt blushed at the compliment from Janice, but still harbored doubts. \n\n\"I should call her as soon as possible, huh?\" he asked. Janice nodded her head silently. \n\nMatt stood and left towards his door. In his bedroom, he waited anxiously for the phone to pick up on Pamela's end. When the answering service began, Matt hung up with a sigh. \n\nHe remembered the first time he saw Pamela walking into the restaurant where they agreed to have their first date. Matt could hardly catch his breath at the sight of her gorgeous face lighting up into a bright smile upon seeing him waiting in the booth. \n\nThe date had been magical. They laughed, shared each other's plates, told stories of their lives. By the end of dinner, Pamela had moved across the table to sit beside him, placing her hand on his thigh. They left the restaurant holding hands. \n\nThe two drove the darkening country roads together singing along to the radio. Whether it was the cool September evening or simply an alignment unseen, Pamela and Matt felt a palpable connection. They parked in a field and made out while an orange hunter moon rose over the tree line. \n\nPamela eventually pushed away from Matt, regretfully announcing she had to return home to her son, but not before eagerly agreeing to another date. \n\nFrom that moment, Matt was a lost man, completely infatuated. He memorized every feature of every photo Pamela had posted of herself online. He re-read their entire text history daily. He imagined and rehearsed conversations he would have with her on his next date. \n\nAll the while, he made reaching excuses to himself why she wouldn't speak or text him for days, or why she would constantly reschedule dates, or would snap at him, unprovoked and unapologetic. It didn't matter: Matt was head over heels... that was... until Janice entered his apartment and slipped off her heavy winter coat on that fateful November day.\n\nThe gong that had sounded in his being that day had awakened his true and primal desire, no illusion could stand against it. So it was, as the scales fell from Matt's eyes, he began to see things for what they really were... and an uncomfortable truth was coming in to focus. \n\nHis phone chirped a text message from Pamela: \"jesus! we can talk on saturday! leave me alone!!!\"\n\nMatt blinked. The jarring message had certainly shifted his alignment. What was once out of focus, suddenly became crystal clear to him. \n\n\"It's over.\" he sighed. \n\nHe looked down to his blank phone screen. The thought of sending her a final text crossed his mind. However:... \"A face to face breakup is the best way, after everything is said and done.\" he thought. The spiteful bonus being: letting Pamela experience the hour long drive between them finally for herself- then dump her. \n\nMatt couldn't help the grin spreading across his face. \n\n:::::::::::::::::::::::::::::::::::::::::::::::\n\n Since Matt had broke the news about his trip, Janice had made herself inseparable from him. She was at his side every opportunity she could. \n\n\"I'm getting all the Matty time I can get!\" she said, cuddling his bicep while he stood over the stovetop, scooping melted butter over the steak searing in the cast iron skillet. \n\nMatt didn't mind one bit. It was delightfully commonplace, now and then, that he would get an accidental 'boob bump' when Janice would pass close by. However, now that she was glued to his side, Matt was almost in constant contact with her massive warm, braless breasts in some manner or another.\n\nTonight, the night before her party, Janice was wearing a short sleeved, tight fitting, black shirt with a gaping wide, bellybutton low cut front, held from falling open by a thin string, laced up and secured with a shoestring style knot. \n\nMatt looked down with a grin at his bicep disappearing into her bare cleavage as she hugged his arm lovingly. \n\nAt dinner, she insisted on sitting next to him at the small table, even though there was barely enough room for their two plates side by side, let alone their two bodies. Regardless, she sidled close to Matt and ate her dinner unperturbed. \n\nMatt's arm couldn't help but jiggle her massive tit pressed against it as he cut his steak with his knife. \n\n\"S-Sorry.\" said Matt pausing. \n\nJanice just smiled at him, chewing her food. She silently signaled with her fork for him to continue cutting while she finished her bite. \n\nMatt tried to repress a grin as he continued to cut through the meat. His sense of touch and sight were in heaven as her tits continued to undulate against his arm. Her fleshed surged over and over against the tight laced string, creating multiple mini bulges everywhere her skin showed. Matt took his time and finished cutting the small steak completely- into bites a toddler could swallow easily. \n\nHe glanced up at Janice who was watching him with a smile. \"Looks mouth watering, huh?\" she said with a wink. \n\nAfter dinner Janice pulled him by the arm to the couch. She nudged him down on the cushion then planted her cute tush on his lap. \n\n\"I rolled us a special joint tonight.\" she said throwing her arm around his neck and leaning against him, bringing her face close to his. Her tremendous mammaries squashed against his chest, ballooning against the thin straps that crisscrossed her luscious cleavage. \n\nMatt looked and saw her hands were empty. \"You did? Where is it?\"\n\nJanice smiled coyly at Matt, then sat up straight on his lap. Her bulging d\u00e9colletage rose towards his chin. \n\n\"It's right there!\" she said, giggling. \n\n\"I don't see it.\" said Matt, confused. \n\nJanice shook her head in mock disappointment. \"Here. I'll help you out.\"\n\nWith that she grasped and then tugged on the end of the thin string at her mid bust. The tight knot released it's hold with a pop and a rapidly expanding gap spread open the front of her shirt. Janice had to quickly reach across her front and clutch her top from flying open. Her huge orbs mashed above and below her protecting forearm. \n\n\"See it now?!\" Janice said in playful exasperation. \n\nMatt took a chance and peered deep within her bulging cleavage. There, in the dark canyon of skin, a tiny paper colored point was barely visible. \"I think I see it...\", said Matt. ",
        "Janice cleared her throat. \"Ahem. My hands are full. You wanna grab that?\"\n\nThe arm that wasn't holding back her colossal breasts, draped idly over his shoulder. Matt gulped and slowly reached up to her bulbous masses. His shaking fingers dipped into the gorgeous crease becoming enveloped in silken smooth, warm softness. Matt really had to dip deep to reach the tip of the joint.\n\n\"Don't get lost down there.\" Janice giggled. \n\nMatt gently pulled the paper rolled cylinder out from her bosom/purse and held it aloft. \n\n\"Taa-daa!\" Janice exclaimed. \n\n\"My! That's a lovely joint.\" Matt said, admiring the expertise of her nimble fingers' work. \"I suppose I should do the honors, right?\" he asked, reaching for a lighter. \n\nJanice regarded her chest. \"I would... but, if I let go, my boobs are gonna fall out again.\"\n\n\"Again!?\" Matt cried in exaggerated frustration. \n\nJanice cracked up laughing. \"You wouldn't mind at all, would you?\"\n\nMatt shook his head with a wide grin. \n\n\"Gimme that lighter then!\"\n\nShe brought her draped arm back over Matt's head and took the lighter and joint. With her hands occupied, Janice positioned her elbows to try to catch top from opening all the way. What resulted was an astounding surging bulge of skin exploding through her laboring shirt. Her gorgeous pink nipples slid right over the edges of her top, her areolas still halfway covered. The string of the laced front had stretched beyond the top pair of eyelets. Matt's heart rate jumped at the sight of her compressed enormity. \n\nNeedless to say, beneath her butt a battle raged within Matt's pants. His throbbing boner was pulsing against his thigh. His legs were pressed together, tightly trapping the angry member. Matt dared not adjust his position one inch for fear of his boner slipping free, inevitably to crash into the underside of Janice's seated derri\u00e8re. \n\nJanice lit the joint and inhaled a deep breath of smoke. She exhaled into the air above their heads. She turned to Matt holding the joint up, handing it to him. \n\nThe two exchanged the weed cigarette back and forth. Janice eventually replaced her arm around Matt's neck as they smoked. She tried a few attempts at closing the gap in her shirt over her nipples, but soon gave up with a sigh. \n\n\"They win every time.\" she said, exasperated.\n\nMatt cast his eyes dreamily down at her colossal globes squashed against his chest, then up to her eyes. \n\n\"Kinda feels like I'm the winner here.\" Matt grinned though his cheeks were turning red. \n\nJanice regarded Matt for a quiet moment as a smile spread across her face. \"Can I confess something?...\"\n\n\"...Ok\"\n\nShe turned her eyes away, bashfully. \"...I'm gonna miss seeing the way you look at me.\"\n\n\"You are?\" Matt felt a rush of elation as well as a rush of blood to his dick. Matt's cock pulsed with a strength that actually surprised himself. With alarm, he felt his boner flex it's way between his compressed thighs. \n\n\"Yeah.\" she said softly. \"...You make me feel like I'm... kinda sexy.\"\n\nMatt blew out his nose involuntary. \"KINDA sexy?! You're the sexiest woman I've ever met!\" The words flew out of his mouth before he became aware of himself. \n\nJanice's eyes went wide with surprise. \"Matthew!\" she blushed, placing a hand over her completely exposed d\u00e9colletage. \n\nMatt winced, thinking that he had crossed a line, but when he dared to glance back up at Janice's face, he saw that she was watching him with sparkling eyes. \n\n\"That means more to me than you know... Thank you. \" she whispered as she slowly reached up to cradle his cheek. Then, leaning forward, Janice placed a short, but full kiss on Matt's lips. \n\nMatt's cock pulsed against its trappings. He desperately squeezed his thighs together beneath her butt. \n\n\"That was totally supposed to be your cheek.\" she giggled timidly before glancing down at his fidgeting legs. \"Uhhm.... I feel you squirming down there, do you have to pee?\" said Janice. She gasped suddenly. \"Oh god! I'm on your bladder, aren't I?\" \n\nJanice quickly raised herself off of Matt's lap. The release of pressure finally caused his boner to flip up from it's imprisonment. Janice happened to be too busy examining the burnt out joint between her fingers to notice anything. \n\nMatt quickly secured his boner in the waistline of his pants. \"No. No. I'm ok. Y- You didn't have to get up...\"\n\nJanice smiled at him coyly. \"Oh, you liked that, huh?\" she nonchalantly played with the dangling ends of her laced string. \"Then... I'm guessing you won't mind cuddling with me on the couch while we watch our show... Am I right?\"\n\nMatt gulped and shook his head no. \n\nJanice smiled and instructed Matt to lay on his side across the couch with his butt pressed against backrest. She then laid down with her back pressed against his chest. Matt gasped feeling her ass press firmly against his rock hard erection. \n\nOnce she was comfortable, she looked around. \"We need the remote. I think I feel it between us. Hold on...\" Janice reached behind her and grasped Matt's thick shaft between his legs. The feeling of her small fingers attempting to encircle his cock over his pants was the last thing Matt was expecting to feel. \n\nHe heard her gasp in terror. \"Oops! That's not the remote!\"\n\nMatt cleared his throat. \"Ahem... Nope!\"\n\nJanice had to laugh. \"Sorry. I didn't remember the remote being THAT big!\"\n\nMatt had to chuckle through his pride at the compliment. He found the actual remote behind his back and switched on their program. \n\nAs the show began, Matt placed his hand respectfully on Janice's waist. Her head was propped up on his other arm beneath her, while Matt propped his head on the armrest of the couch. \n\nAs the show began, he sweated at the view he had of her massive orbs spilling out of her top completely. Her incredible tits projected out past the edge of the couch seat, hanging in midair. \n\nAfter a few moments, he felt her hand slowly slide over his. She held his hand long enough for their fingers to become entwined with each other's. All the while, Matt was purposely trying to create a gap between his throbbing erection and her ass. \n\n\"You're supposed to be cuddling with me! You're too far away, Matty!\" Janice said as she brought Matt's hand to her front pulling his body against hers. His thick cock mashed against her buttcheeks at the same time his arm was being squeezed between her bare breasts. Matt silently gasped feeling his entire hand and forearm being swallowed by the softest, warmest bed of flesh he had ever felt. The soft pressure against him intensified as she pressed her available arm against the front of her massive bust, rendering his limb immobile. \"There! You're in my Booby Trap now!\"\n\nMatt let out a nervous chuckle. \"Uhhm...help. Uhhm... I'm trapped. Somebody send help... someday... no rush.\" he called out in the quietest voice he could. \n\nJanice laughed loudly, leaning back against him. There was absolutely no way she couldn't feel Matt's pulsing dick pressed hard against her butt. \"Yep. I feel you back there, Matty Jr.! You better behave yourself! My Booby Trap is more than a match for even YOU!\" she laughed. \n\nMatt bit his lip, picturing his cock sliding between the laces of her open shirt, imprisoning his thick dick shaft amidst Janice's bulging cleavage. \n\nMatt attempted valiantly to watch the show on the television. He could hardly peel his eyes away from the sight of the tips of his fingers emerging over the crest of her swelled bosom. The action on the screen was fairly uninteresting in comparison to the scene below... that is, until yet another steamy romantic sex scene began on the screen. \n\nThe show producers had obviously decided to ramp up the intensity of their erotic sequences for season two. The couple on screen were both completely naked, pressing their bodies hard against each other in lustful passion. \n\n\"Geeze! It looks like they're really doing it!\" Janice exclaimed. The sequence became more and more intense as the breathless seconds ticked by. \n\nWithout even being aware, Janice slowly began rubbing her ass against the length Matt's cock as the erotic display flickered before their eyes. \n\nMatt held his breath in an attempt to stifle a moan at the ecstatic sensation of her ass pressing against him and her breathing becoming deeper within her cleavage. He gave into his lustful impulse and spread his fingers, palming a handful of exquisite breast softness and squeezed gently. \n\nMatt gulped nervously when he felt her hand move up to his and gently free it from her warm cleavage cell. \n\nMatt was expecting his hand to be guided back to her waist, like a player relegated back to the sideline for an illegal play. \n\nHe couldn't believe his own senses, however, when instead, she smashed his open palm directly on to her erect nipple and pressed his hand into her enormous naked breast. Matt's cock lurched against her butt yet again. This time it was answered by a slow, grinding, intentional pushback. \n\nThe two moaned in unison as Matt squeezed Janice's enormous breast with a passionate zeal. His breath shuddered near Janice's ear, watching his hand disappear into the vast swaths of soft skin, bathed in the light of the television screen. \n\nJanice looked over her shoulder urgently into Matt's hungry eyes. Their lips crashed into each other in unbridled fervency. Matt felt Janice's tongue slide into his mouth as she shifted onto her back, grabbing his face and holding it to hers. Matt caressed her tongue with his in an intimate dance while he continued to knead her astoundingly voluminous breast. \n\nJanice pulled Matt on top of her. She moaned into his mouth when she felt his weight press upon her body. Matt could feel her legs spreading beneath him. He shifted his hips to the side and found the apex of Janice's legs with his long shaft. \n\nWhen her labia spread wide within her panties and a throbbing wall of cock ground directly against her clitoris, Janice immediately felt a warmth begin in the pit of her stomach. She knew an orgasm was building, though she hadn't felt the sensation at this level of intensity in years. \n\nIn her mind, Janice was immediately brought back to that fateful moment in her teenage bedroom, when her older sister Tracy had introduced her to a very special secret. \n\n\"If you lean like this against the corner of the mattress and rub yourself against it... like this, it feels REALLY good!\" Tracy whispered to Janice, demonstrating. \n\nUpon the moment of experimental self discovery one sleepless night, Janice's young life changed forever. For the first time, an orgasm tore its away into her consciousness- its light flooding through her body and mind. \n\nFrom that moment, her world seemed different. She found herself scoffing at the girls in her class, cooing over pictures of their favorite boy band crushes. Janice was already far more physically developed than any other girl in her class, or the next two classes above her, for that matter. Now that she had unlocked the secret of grown up pleasure, it made her feel far more mature than her peers... and more isolated. \n\nJanice spent hours in her room with the door locked, experimenting with each corner of the abused mattress, while orgasm after orgasm relentlessly crashed upon her like storm propelled waves on a sandy shore. \n\n\"Janice! This is MY room too!\" shouted Tracy angrily from behind the locked door. \"I know what you're doing!\"\n\n\"I know what you're doing!\" the phrase echoed in Janice's head. \n\nMatt grunted in lustful bliss, snapping Janice back to the flowering moment, unfolding its petals of dire consequence. \n\n\"Oh shit!\" she panicked. \"Oh fuck! Janice what are you doing?!\"\n\nJanice broke free from their passionate kiss to gasp. \"Oh god, Matthew!\"\n\nMatt buried his face in her neck and continued to kiss as the shaft of his clothed penis slid against Janice's sopping wet panties. \"Oh, Jan...\"\n\n\"Matty! Please!\" she panted, tears were already beginning to stream from her eyes. \"Please... Stop!\"\n\nMatt froze immediately. He raised himself from her quickly with a terrified expression.\n\nJanice was crying in earnest now, hunched over, pulling her top closed as best as she could. Matt's heart sank. He felt like crumbling into a pile of dust on the spot. \"Janice! I- I'm so sorry!!\"\n\n\"No! Matt! It's not you!! You didn't do anything wrong... It's me! I- I'm an awful person!\" Janice sobbed. \n\nMatt was confused. He sat down at the far end of the couch. \"Janice... you're not awful.\"\n\n\"Yes I am!\" she wailed. \"Oh my god I am so sorry! I let things go WAY too far. We shouldn't, Matt. We both have someone else... we can't.\"\n\nJanice cast her eyes to the floor in shame. \"I knew that I shouldn't have, but... It... It just felt so good to have that kind of attention... you know?\" she looked at Matt with a pleading expression in her eyes, begging for understanding. \n\n\"I... I LIKE the way you make me feel. It's been a LONG time since I felt that way and I... oh god, Matty.\" she covered her mouth. \"I am SO sorry!!\"\n\nJanice's tears couldn't let Matt hold on to the frustration of his passion being interrupted. \"I've been used for worse results, anyway...\" he said to himself. \n\nHe reached across the couch and lightly grasped her shoulder. \"It's alright, Janice. I don't want to cause you any problems... Are you ok? I didn't hurt you, did I?\"\n\nJanice shook her head 'no' between her sniffles. A quiet moment passed as Janice dried her tears and Matt breathed slowly, attempting to lower his heart rate. \n\n\"Ok....\" Matt said, patting his knees finally. \"Uhhm... If you'll excuse me... I think I need to have some 'alone time'.\" \n\nJanice watched sorrowfully as Matt stood to leave the room. \"Matty... \" her shaking voice called out to him. \"Please say you don't hate me.\"\n\nMatt had to chuckle softly. \"I'll never hate you, Janice. I couldn't, even if I tried.\"\n\nHe quietly opened the door to his room. \n\n\"Wait!\" Janice sat upright, facing him. \"I- I think I know what you're about to do in there.\" she stammered, embarrassed but determined. \"Please... let me help.\"\n\nMatt blinked, truly confused. He opened his mouth to respond, but found no words to say. \n\nJanice stood to her feet. \"I mean... It's ... it's my fault that you're... uhh... so worked up.\" She wrung her hands together, casting her eyes down at Matt's half deflated bulge in his pants. \"And... I know you like these...\" she continued, gently cradling her enormous, half covered breasts. \"Maybe... if you wanted... just this once... maybe... you can watch me while you... do it... If you think it'll help...?\"\n\nMatt was stunned for a moment, but an understanding dawned upon him. He couldn't help but to feel a certain justification in the idea. Without a word, Matt gave Janice a half nod and motioned for her to follow him into his bedroom. \n\nJanice gulped stepping forward. Matt was already peeling off his shirt as she passed the foot of his bed. She watched the muscles in his back ripple against the soft glow of the bedside light. \n\n\"You sure about this, Janice?\" asked Matt, facing her with his hands on the opening snap of his pants. \n\nJanice nodded. Just then, his bottoms dropped to the floor. Janice let out a gasp at the sight of his long, flaccid penis while Matt stepped out of his pants. Janice's eyes were glued to his tight butt as he turned to climb onto his bed. His penis flopped back and forth positioning himself with his back leaned against the headboard. Once seated, Matt raised his eyes to her expectantly. \n\nJanice gulped once more. \"Ok. Do not let him down again!\" she nodded to herself, stepping up to the foot of his bed. \n\nJanice closed her eyes and took a slow, deep breath. Her breasts rose against her shirt, pushing the garment open. Janice's hips began to gently sway back and forth. Then, reaching up, she slowly began pulling the remaining laces from her shirt. The thin strap pulled through each eyelet one by one until it was completely free. She let the string slide from her fingers to the floor. \n\nCasting her eyes cautiously up to Matt, she could see that his once flaccid cock was increasing in size. \n\nJanice sensually brought her upper arms together, joining her hands at her waist. Her soft, enormous masses surged against each other, spilling out of the open front of her shirt. Janice bit her lip, pinching the bottom hem of her garment, pulling it taught and shaking her shoulders slightly. Her bulbous breasts wobbled massively out of the open gap becoming completely unencumbered. The outside edges of her giant breasts eclipsed both of her upper arms. In the middle, the two massive juggernauts pressed against each other creating a delicious jutting shelf of jiggling splendor. \n\nShe looked up again to see Matt's eyes glazing over in a trance of lust. Janice had to do a double take when she glanced again at his growing dick. \n\n\"Wow...\" she exclaimed in breathlessly. Matt's penis had doubled in size and still continued to expand over his bellybutton. \n\nJanice felt compelled to pinch her erect nipple. She saw Matt's cock lurch when she reached up, her caressing hand pressing into that incredible amount of smooth gorgeous skin, her fingertips gently pinching the pencil eraser sized nub. \n\nMatt's hand crept to his almost fully engorged dick. Janice watched the fingers of his large hand wrap as far around his incredible shaft as they could. \n\nShe could feel her breath shuddering, watching Matt's slow stroke begin.\n\n\"What do you want to see?...\" Janice practically whispered. \n\nMatt's breathing was getting deeper. \"...Kiss them...\"\n\nJanice's knees were shaking. There was a tingle growing in her wet panties. She slowly slid her hands to either side of her gigantic left breast and squeezed and kneaded her flesh. Matt's pace quickened falling into a trance at the sight of her perfect, round areola being stretched and squashed by Janice's sensually mashing fingers. She then hoisted her massive tit to her face. Janice had to fold her waves of luscious mammary fat out of the way in order for her mouth to reach her nipple. \n\nShe cast her eyes up to Matt, with her bottom lip resting upon her areola. Janice smiled into his eyes as she began kissing the pink skin surrounding her erect nipple. Matt's hand was stroking his long thick cock at a fast pace now, the look on his face was one Janice had never seen before; a venerable desperate plea of release. \n\nA pink tongue slid from between her lips and flicked her soft nub of a nipple. She heard Matt moan as she suddenly wrapped her lips over as much of her areola as she could and started sucking in earnest. \n\n\"Mmmmph!\" Janice moaned as she caressed handfuls of breast meat while sucking her nipple with a lustful ferocity. \n\n\"Oh my god!\" Matt almost whimpered as his hand flew up and down his long shaft. \n\nJanice reached down with her right hand and brought her other enormous tit to her face. She closed her eyes and caressed her piled domes of softness against her cheeks and lips. \n\n\"Fuck... I'm close.\" Matt panted. \n\nJanice opened her eyes to see fully engorged cock pulsing in raging stimulation. \"Yes, Matty...\" she whispered in the quiet room. \"Cum for me... \" she cooed a little louder as she continued to knead both of her massive breasts. \"Let me see that white, hot, sticky cum...\" she growled softly. \"Give it to me, baby. I wanna see that big, juicy cock explode...\"\n\nThat was all it took for Matt. He grunted as his penis bucked one last time before rivulets of thick, white streaming cum erupted from his dick head. Janice's eyes grew in amazed wonder as rope after rope after rope were launched onto Matt's bare torso. \"Holy shit! That is a lot!\" she marveled silently. \n\nMatt slumped back in relief, his cock involuntarily pulsating through the aftershocks of his powerful orgasm. The only sound in the room was that of the two catching their breath. ",
        "\"Thank you, Janice.\" Matt managed to say between ragged breaths. \n\nJanice's stunned trance was broken by the sound of his voice. Her wide eyes raised to his. \"Thank yo- I mean... you're welcome.\" she stammered. \n\nJanice glanced down at her forearms still holding her massive breasts aloft. Her bulging swaths of skin poured forth pressing around her arms. \n\nLooking up at Matt again, she noticed him watching her standing there. Janice couldn't believe her eyes when she saw that his dick was inflating slowly yet again. \n\nShe gulped. \"I'm gonna go now.\", she turned to quickly scoot out of the bedroom. \"Goodnight Matty!! Sweet dreams!!\"\n\n\"Goodnight Janice.\" said Matt reaching over to the tissue box . \n\n~~~~~~~~~~~~~~~\n\nJanice walked back to her bedroom. She shook her head, astonished as she reviewed the roller coaster events of the evening. \n\n\"Wow, Janice. How could you!? You really crossed the line tonight. You're lucky if you didn't ruin your friendship with Matty!\" she cursed herself. \"...Maybe it's a good thing that we'll be away from each other for awhile.\" she sadly surmised.\n\nIn her bedroom, Janice stripped down to her panties, turned off the lights and climbed into bed. \n\nClosing her eyes, all she could picture in her mind was Matt's immense cock erupting white lava from its slitted peak. She fought to think of something else as tossed and turned, unable to get comfortable. \n\nFinally, with a sigh, she reached under her pillow for her fluorescent pink dildo. Janice twisted the flat end to activate her favorite pulsating vibration pattern and pressed it up against her panty clad pussy. \n\nThe pink wand thrummed against her clit. Janice bit her lip feeling the sublime swelling inside of her. However, the dildo's intensity soon faded to a standstill. \n\n\"Dead battery!? Fuck! I need an orgasm.\" she cursed the darkness, tossing her vibrator to the floor. \n\nJanice closed her eyes again. Once more the mental image of Matt's volcanic phallus was waiting. \"Shit... ok. Just this once...\" \n\nShe allowed her fingers to slide beneath the hem of her panties, as she recalled the details of Matt's orgasm. \n\n\"All that cum shooting out. His eyes... that look... watching me.\"\n\nJanice's fingers caressed her labia. Her middle finger slid between her moist, pink folds and found her clitoris. She began to press and slide her fingertip against the ultra sensitive nub in a rapid circular motion. The tingle she had sought had finally arrived and began to grow. \n\n\"I made that happen. Just playing with myself a little was all he could take. He thinks I'm that sexy....\"\n\nJanice's motion against her clit increased. Her other hand urgently sought out and pinched her nipple. The warmth spread inside of her as the delicious tingle intensified. \n\n\"Oh my god... when he came... the sound he made, the look on his face and all that cum ... all for me.\"\n\nSuddenly, the wave of her orgasm struck the parched sandy shore of her consciousness. Janice squirmed uncontrollably in her bed as utter resplendently washed over her body. The ecstatic elation coursed it's way to the very tips of her fingers and toes. Janice gasped finally, realizing she hadn't been breathing. \n\nShe could feel herself being lowered into a warm pool of relief and relaxation when the orgasmic wave had receded. \n\nJanice's hand was still lodged in her panties as she drifted into the darkened tunnel of peaceful sleep."
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "big tits",
        "enormous breasts",
        "huge boobs",
        "slow burn",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-08"
}